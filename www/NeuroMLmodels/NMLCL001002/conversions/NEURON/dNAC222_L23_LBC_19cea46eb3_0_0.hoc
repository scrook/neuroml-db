// Cell: dNAC222_L23_LBC_19cea46eb3_0_0
/*
{
  "id" : "dNAC222_L23_LBC_19cea46eb3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.72658, 3.16085, 0.0, 3.1586", "-7.90511, 2.85139, 0.0, 5.52942", "-7.08363, 2.54192, 0.0, 7.77229", "-6.26215, 2.23245, 0.0, 8.87312", "-5.44068, 1.92299, 0.0, 9.713", "-4.6192, 1.61352, 0.0, 10.2371", "-3.79772, 1.30405, 0.0, 10.754", "-2.97625, 0.994587, 0.0, 10.995", "-2.15477, 0.685121, 0.0, 11.088", "-1.3333, 0.375654, 0.0, 11.1386", "-0.51182, 0.0661874, 0.0, 10.9306", "0.309656, -0.243279, 0.0, 10.6953", "1.13113, -0.552746, 0.0, 10.3378", "1.95261, -0.862212, 0.0, 9.82409", "2.77408, -1.17168, 0.0, 9.14264", "3.59556, -1.48115, 0.0, 8.29626", "4.41704, -1.79061, 0.0, 7.19767", "5.23851, -2.10008, 0.0, 5.89828", "6.05999, -2.40955, 0.0, 4.7086", "6.88147, -2.71901, 0.0, 3.67147", "7.70294, -3.02848, 0.0, 2.2679" ]
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-6.2198, -1.18093, 6.66, 1.03", "-6.6294, -1.57145, 6.89442, 0.74", "-7.31864, -2.12407, 7.33059, 0.52", "-7.723, -2.42679, 7.61432, 0.52", "-8.25341, -2.84383, 8.03056, 0.44", "-8.77802, -3.27087, 8.52463, 0.44", "-9.32331, -3.70028, 9.11159, 0.66", "-9.70057, -3.92146, 9.62614, 0.88", "-10.0171, -4.01149, 10.1824, 0.96", "-10.2665, -4.03448, 10.6996, 0.29", "-10.6072, -4.04735, 11.6118, 0.29", "-10.7649, -4.07351, 12.1334, 0.29", "-11.0318, -4.17641, 13.0524, 0.29", "-11.3287, -4.30124, 14.0236, 0.29", "-11.5858, -4.40535, 14.7906, 0.29", "-11.8556, -4.53135, 15.4514, 0.29", "-12.1347, -4.67613, 16.019, 0.29", "-12.4693, -4.85821, 16.6527, 0.52", "-12.9786, -5.10298, 17.5347, 0.52", "-13.4964, -5.25972, 18.3767, 0.52", "-13.9833, -5.31446, 19.1514, 0.66", "-14.4265, -5.28891, 19.8519, 0.29", "-14.6883, -5.24231, 20.3125, 0.29", "-14.891, -5.19536, 20.7294, 0.29", "-15.0259, -5.19837, 21.1092, 0.29", "-15.0804, -5.23615, 21.4417, 0.29", "-15.0886, -5.3238, 21.8586, 0.29", "-15.0722, -5.58891, 22.7896, 0.29", "-15.0901, -5.69703, 23.1408, 0.29", "-15.2403, -5.89954, 23.935, 0.29", "-15.4317, -5.93737, 24.4711, 0.29", "-15.7014, -5.89378, 25.0175, 0.29", "-15.9614, -5.81799, 25.4383, 0.66", "-16.4139, -5.6634, 26.0723, 0.74", "-17.1267, -5.41885, 26.9772, 0.37", "-18.1781, -5.00339, 28.2261, 0.22", "-18.7725, -4.72609, 28.924, 0.29", "-19.2094, -4.49966, 29.4554, 0.44", "-19.7423, -4.21593, 30.1368, 0.37", "-20.1722, -3.98977, 30.7012, 0.88", "-20.7894, -3.67366, 31.5017, 0.37", "-21.4616, -3.30504, 32.3699, 0.22", "-21.9246, -2.98873, 33.0502, 0.22", "-22.2795, -2.67528, 33.6791, 0.22", "-22.5388, -2.37793, 34.2557, 0.59", "-22.7822, -2.04542, 34.9136, 0.74", "-23.1572, -1.54169, 35.9653, 0.22", "-23.5767, -0.982637, 37.1489, 0.22", "-23.7902, -0.660686, 37.7784, 0.44", "-24.0784, -0.10133, 38.7797, 0.44", "-24.1826, 0.198337, 39.2828, 0.66", "-24.2868, 0.666383, 40.0857, 0.29", "-24.3464, 1.15024, 40.9527, 0.29", "-24.3751, 1.52255, 41.6516, 0.29", "-24.4041, 1.83857, 42.3122, 0.29", "-24.4068, 2.1273, 43.0144, 0.29", "-24.39, 2.35265, 43.6797, 0.29", "-24.3809, 2.47772, 44.0978, 0.29", "-24.412, 2.69361, 44.879, 0.29", "-24.4773, 2.82665, 45.4008, 0.29", "-24.6776, 3.10357, 46.4483, 0.29", "-24.9627, 3.41064, 47.5693, 0.29", "-25.2676, 3.68965, 48.5816, 0.29", "-25.4865, 3.87418, 49.2388, 0.44", "-25.8687, 4.18882, 50.3268, 0.22", "-26.2054, 4.47241, 51.3053, 0.22", "-26.5376, 4.75254, 52.299, 0.29", "-26.8908, 5.05893, 53.4372, 0.29", "-27.1266, 5.2777, 54.342, 0.29", "-27.2416, 5.40146, 54.9109, 0.29", "-27.3766, 5.5886, 55.8713, 0.29", "-27.4371, 5.71435, 56.5693, 0.29", "-27.4532, 5.81398, 57.0556, 0.29", "-27.4596, 5.94757, 57.6437, 0.29", "-27.4757, 6.11505, 58.4076, 0.29", "-27.4794, 6.28877, 59.1394, 0.29", "-27.4768, 6.53004, 59.9786, 0.29", "-27.4824, 6.69531, 60.4649, 0.29", "-27.5174, 7.15194, 61.7363, 0.29", "-27.6036, 7.57046, 62.9534, 0.29", "-27.6827, 7.80563, 63.7862, 0.29", "-27.7665, 8.05365, 64.9795, 0.29", "-27.8029, 8.14042, 65.6037, 0.29", "-27.859, 8.23741, 66.8024, 0.37", "-27.9426, 8.28836, 68.9276, 0.22", "-28.0156, 8.25412, 70.6038, 0.22", "-28.1604, 8.11732, 73.1871, 0.22", "-28.2259, 8.02559, 74.4312, 0.22", "-28.2621, 7.95109, 75.4995, 0.22", "-28.2707, 7.88411, 76.742, 0.29", "-28.2587, 7.85023, 77.4896, 0.29", "-28.2792, 7.8411, 78.3215, 0.29", "-28.3334, 7.85936, 78.8518, 0.29", "-28.5296, 8.0096, 80.2606, 0.29", "-28.6837, 8.16563, 81.1946, 0.29", "-28.7714, 8.27805, 81.7357, 0.29", "-28.9182, 8.5153, 82.744, 0.29", "-29.0509, 8.77507, 83.7914, 0.29", "-29.1655, 9.06839, 84.9728, 0.29", "-29.2197, 9.24764, 85.641, 0.29", "-29.3024, 9.68875, 87.2445, 0.29", "-29.3211, 10.1539, 88.9322, 0.29", "-29.2901, 10.4455, 90.0707, 0.29", "-29.0802, 11.3162, 93.8467, 0.29", "-29.0505, 11.4011, 94.2636, 0.29", "-28.9488, 11.6944, 95.8536, 0.29", "-28.9185, 11.8017, 96.4764, 0.29", "-28.9026, 11.9788, 97.5619, 0.29", "-28.9593, 12.2532, 99.2014, 0.29", "-29.1133, 12.5394, 101.055, 0.29", "-29.2722, 12.723, 102.31, 0.29", "-29.5268, 12.9512, 103.778, 0.29", "-29.9757, 13.3148, 105.928, 0.29", "-30.3903, 13.6468, 107.696, 0.29", "-30.6781, 13.8807, 108.86, 0.29", "-30.983, 14.1386, 110.057, 0.29", "-31.2119, 14.3512, 111.007, 0.15", "-31.6067, 14.744, 112.786, 0.15", "-31.6974, 14.8476, 113.255, 0.37", "-31.9898, 15.2503, 115.009, 0.37", "-32.0471, 15.3653, 115.491, 0.37", "-32.0997, 15.5335, 116.224, 0.37", "-32.1064, 15.7403, 117.152, 0.37", "-32.0686, 15.9083, 117.909, 0.37", "-32.0459, 15.9868, 118.279, 0.37", "-31.8917, 16.4242, 120.371, 0.37", "-31.8307, 16.5869, 121.158, 0.37", "-31.738, 16.9304, 122.584, 0.22", "-31.6143, 17.4337, 124.277, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "8.4102, -1.61143, 1.46, 1.18", "8.4102, -1.61143, 1.46, 1.18", "8.98072, -1.97901, 1.79378, 0.66", "9.69675, -2.44034, 2.2127, 0.59", "10.6243, -3.03796, 2.75536, 0.66", "11.0452, -3.30915, 3.00162, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-2.1698, -3.64843, 10.31, 1.62", "-2.1698, -3.64843, 10.31, 1.62", "-2.37763, -4.61052, 10.6246, 1.03", "-2.65315, -6.1044, 11.0922, 0.44", "-2.77113, -6.6875, 11.2608, 0.44", "-3.02613, -7.58548, 11.549, 0.59", "-3.16699, -8.00565, 11.7106, 0.59", "-3.51218, -8.90085, 12.1083, 0.59", "-3.64985, -9.24487, 12.2866, 0.59", "-3.99916, -10.1293, 12.8019, 0.52", "-4.45831, -11.3125, 13.5248, 0.37", "-4.75053, -12.0899, 14.002, 0.37", "-4.90975, -12.5669, 14.3005, 0.88", "-5.21023, -13.6548, 15.0238, 0.44", "-5.31136, -14.1745, 15.3757, 0.44", "-5.38667, -14.7921, 15.7941, 0.81", "-5.4713, -15.6777, 16.3428, 0.59", "-5.57388, -16.5726, 16.9141, 0.44", "-5.67434, -17.4267, 17.4778, 0.44", "-5.77824, -18.3491, 18.0937, 0.66", "-5.87186, -19.2498, 18.71, 1.03", "-5.9663, -20.1538, 19.3483, 1.03", "-6.10075, -21.3535, 20.1921, 0.52", "-6.23591, -22.4855, 20.9426, 0.52", "-6.39348, -23.8693, 21.7925, 0.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "4.5002, 3.89058, 1.07, 0.96", "4.5002, 3.89058, 1.07, 0.96", "4.95373, 4.96597, 0.727968, 0.52", "5.40091, 5.95616, 0.385786, 0.15", "5.79703, 6.85938, 0.0210246, 0.15", "6.29876, 7.99278, -0.451848, 0.22", "6.69515, 8.85901, -0.812753, 0.22", "7.05766, 9.59652, -1.13686, 0.22", "7.71714, 10.9271, -1.74464, 0.22", "8.31747, 12.1114, -2.28596, 0.22", "8.9006, 13.3061, -2.80007, 0.29", "9.15567, 13.857, -3.04971, 0.22", "9.49038, 14.6598, -3.43775, 0.22", "9.85104, 15.603, -3.88939, 0.15", "10.3252, 16.8068, -4.42414, 0.22", "10.7692, 17.8679, -4.89012, 0.29", "11.2742, 19.0918, -5.48067, 0.22", "11.6733, 20.1151, -6.03076, 0.22", "12.1015, 21.2993, -6.70546, 0.74", "12.6278, 22.7161, -7.55263, 0.29", "12.9529, 23.6035, -8.07542, 0.15", "13.395, 24.7967, -8.76964, 0.22", "13.8614, 26.0423, -9.45312, 0.15", "14.2891, 27.2066, -10.0637, 0.22", "14.6792, 28.3559, -10.6544, 0.15", "14.9388, 29.1923, -11.0794, 0.44", "15.1034, 29.7318, -11.3271, 0.44", "15.392, 30.6811, -11.7103, 0.15", "15.806, 32.0627, -12.2064, 0.15", "16.0967, 33.091, -12.5739, 0.29", "16.3222, 33.9248, -12.8222, 0.29", "16.5669, 34.8385, -13.0358, 0.52", "16.9453, 36.2185, -13.2586, 0.15", "17.4092, 37.8504, -13.3795, 0.15", "17.8404, 39.2578, -13.3824, 0.15", "18.4748, 41.1756, -13.2485, 0.15", "18.7441, 41.9352, -13.1347, 0.15", "19.1558, 42.9535, -12.8914, 0.22", "19.7292, 44.1446, -12.4675, 0.22", "20.1751, 44.9505, -12.068, 0.44", "20.5725, 45.6021, -11.6475, 0.44", "20.9456, 46.1784, -11.2061, 0.44", "21.417, 46.9085, -10.5514, 0.22", "21.9088, 47.7431, -9.69141, 0.07", "22.1276, 48.209, -9.19616, 0.07", "22.3339, 48.8425, -8.52455, 0.15", "22.4926, 49.524, -7.81396, 0.15", "22.5841, 50.1834, -7.17848, 0.15", "22.6181, 50.7267, -6.68343, 0.22", "22.6442, 51.4483, -6.0362, 0.37", "22.7087, 52.2084, -5.36445, 0.07", "22.8214, 53.1097, -4.57224, 0.07", "22.926, 53.7163, -4.06585, 0.22", "23.1201, 54.5448, -3.40535, 0.22", "23.3617, 55.4237, -2.7279, 0.22", "23.6457, 56.3724, -2.0471, 0.29", "23.8624, 57.1288, -1.58069, 0.29", "24.2556, 58.5999, -0.833153, 0.15", "24.5613, 59.7186, -0.374385, 0.15", "24.8354, 60.6694, -0.133468, 0.15", "25.0458, 61.4062, -0.0531815, 0.22", "25.3946, 62.6476, -0.094385, 0.59", "25.8411, 64.2894, -0.293606, 0.22", "26.1672, 65.4828, -0.543262, 0.07", "26.6412, 67.1189, -0.981229, 0.15", "27.1434, 68.6353, -1.41348, 0.15", "27.782, 70.3467, -1.92186, 0.15", "28.3817, 71.7587, -2.37115, 0.22", "28.9025, 72.8705, -2.74372, 0.37", "29.4222, 73.8731, -3.06029, 0.22", "30.3138, 75.3908, -3.46401, 0.15", "31.053, 76.5014, -3.71297, 0.15", "31.6432, 77.3241, -3.85855, 0.22", "32.3624, 78.3329, -4.01684, 0.15", "33.1633, 79.5569, -4.15072, 0.22", "34.1319, 81.2636, -4.28227, 0.07", "34.6322, 82.2702, -4.33082, 0.07", "35.0068, 83.1002, -4.33231, 0.44", "35.5151, 84.325, -4.30036, 0.22", "35.9517, 85.5108, -4.23588, 0.15", "36.3982, 86.9406, -4.16654, 0.15", "36.5923, 87.6504, -4.15077, 0.15", "36.8042, 88.393, -4.1416, 0.22", "37.1543, 89.5868, -4.12317, 0.15", "37.5598, 90.9458, -4.11073, 0.29", "37.7881, 91.7413, -4.12302, 0.29", "38.1449, 93.022, -4.19675, 0.29", "38.6038, 94.7534, -4.34851, 0.15", "38.8117, 95.5223, -4.43729, 0.52", "39.0364, 96.3209, -4.53445, 0.52", "39.4194, 97.5127, -4.68765, 0.22", "39.8192, 98.5712, -4.80401, 0.37", "40.2854, 99.6761, -4.91806, 0.22", "40.9016, 101.04, -5.05823, 0.07", "41.4015, 102.104, -5.1777, 0.07", "41.8709, 103.049, -5.28265, 0.59", "42.6453, 104.54, -5.41956, 0.07", "43.4921, 106.185, -5.54664, 0.15", "43.6679, 106.554, -5.57394, 0.15", "44.5016, 108.538, -5.73196, 0.22", "44.9693, 109.784, -5.79581, 0.07", "45.3108, 110.855, -5.80068, 0.07", "45.4654, 111.457, -5.77838, 0.37", "45.7021, 112.516, -5.71967, 0.37", "45.9889, 113.903, -5.62822, 0.07", "46.2409, 115.252, -5.53563, 0.07", "46.4329, 116.581, -5.45466, 0.29", "46.6066, 118.102, -5.40537, 0.22", "46.7077, 119.177, -5.37834, 0.22", "46.8233, 120.756, -5.36474, 0.22", "46.8824, 121.885, -5.37394, 0.59", "46.8914, 123.518, -5.39702, 0.15", "46.7993, 125.433, -5.37696, 0.22", "46.6987, 126.421, -5.35129, 0.22", "46.5693, 127.204, -5.33221, 0.07", "46.3161, 128.392, -5.33427, 0.22", "45.9177, 130.24, -5.32474, 0.15", "45.8149, 130.805, -5.31902, 0.29", "45.7288, 131.371, -5.29888, 0.29", "45.5792, 132.717, -5.25589, 0.07", "45.521, 133.639, -5.22525, 0.22", "45.5214, 134.707, -5.20463, 0.22", "45.597, 135.88, -5.2108, 0.22", "45.7537, 137.392, -5.23755, 0.15", "45.9142, 138.524, -5.27563, 0.15", "46.2391, 140.705, -5.28048, 0.15", "46.4456, 142.404, -5.22468, 0.22", "46.5365, 143.436, -5.17405, 0.15", "46.5865, 144.178, -5.11637, 0.37", "46.6486, 145.414, -4.95898, 0.59", "46.6534, 147.478, -4.60804, 0.07", "46.5821, 148.62, -4.38896, 0.07", "46.4689, 149.695, -4.19041, 0.07", "46.3515, 150.703, -4.02289, 0.15", "46.1728, 152.185, -3.80764, 0.15", "46.0596, 153.089, -3.71331, 0.15", "45.9455, 154.391, -3.65786, 0.15", "45.8375, 156.42, -3.55576, 0.07", "45.8374, 157.08, -3.50868, 0.22", "45.8595, 157.472, -3.4812, 0.22", "45.9907, 158.622, -3.44291, 0.07", "46.1753, 159.686, -3.43702, 0.15", "46.552, 161.205, -3.50998, 0.07", "47.1466, 163.062, -3.70201, 0.07", "47.7797, 164.782, -3.95508, 0.07", "48.2613, 165.872, -4.13633, 0.07", "48.9183, 167.131, -4.3716, 0.22", "49.5639, 168.274, -4.58291, 0.07", "49.9732, 168.972, -4.70468, 0.07", "50.379, 169.684, -4.79282, 0.07", "51.1478, 171.085, -4.8818, 0.07", "51.8117, 172.401, -4.87368, 0.07", "52.2854, 173.452, -4.83087, 0.07", "52.6521, 174.462, -4.77938, 0.07", "52.891, 175.28, -4.75456, 0.29", "53.1024, 176.202, -4.75571, 0.15", "53.3195, 177.457, -4.81148, 0.15", "53.4309, 178.164, -4.8748, 0.15", "53.6095, 179.419, -5.04292, 0.22", "53.889, 181.488, -5.38282, 0.07", "54.0353, 182.811, -5.6351, 0.22", "54.1461, 184.621, -6.03028, 0.07", "54.1646, 185.908, -6.34692, 0.07", "54.1625, 187.11, -6.66455, 0.29", "54.1595, 189.098, -7.17633, 0.07", "54.1541, 190.601, -7.54247, 0.07", "54.1477, 191.949, -7.80689, 0.22", "54.1289, 193.086, -7.99567, 0.07", "54.1211, 193.735, -8.06811, 0.07", "54.1354, 195.289, -8.18229, 0.15", "54.1583, 196.193, -8.18217, 0.07", "54.2966, 197.238, -8.06736, 0.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.1902, -4.17343, -1.0, 1.33", "7.1902, -4.17343, -1.0, 1.33", "7.73648, -4.97396, -1.35335, 0.66", "8.17499, -5.65055, -1.62745, 0.59", "8.54895, -6.27571, -1.86762, 0.59", "8.96072, -6.98936, -2.12147, 0.81", "9.4391, -7.8046, -2.3919, 0.74", "9.99838, -8.74198, -2.68386, 0.74", "10.4021, -9.40883, -2.8786, 0.66", "10.9334, -10.2967, -3.11109, 0.66", "11.3745, -11.0101, -3.28423, 0.52", "11.8112, -11.6661, -3.4317, 0.96", "12.2571, -12.2942, -3.55073, 1.11", "12.9196, -13.1458, -3.70121, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "7.8102, 0.310071, 1.64, 1.25", "7.8102, 0.310071, 1.64, 1.25", "8.81241, 1.80535, 1.27856, 0.59", "9.46903, 2.78502, 1.04175, 0.52", "9.81136, 3.29577, 0.918289, 0.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-4.7098, -0.498429, -8.54, 0.37", "-4.874, -0.669746, -9.23734, 0.37", "-5.01905, -0.88593, -9.89892, 0.37", "-5.21325, -1.18398, -10.6136, 0.37", "-5.32599, -1.33701, -10.9582, 0.37", "-5.46706, -1.50127, -11.3595, 0.37", "-5.6477, -1.69142, -11.8185, 0.22", "-5.8168, -1.86809, -12.1889, 0.22", "-6.06679, -2.16578, -12.7415, 0.29", "-6.24442, -2.41839, -13.1761, 0.29", "-6.51001, -2.80585, -13.9022, 0.44", "-6.63816, -2.9588, -14.2677, 0.44", "-6.82047, -3.10165, -14.7647, 0.44", "-6.97834, -3.20175, -15.173, 0.44", "-7.10692, -3.25037, -15.3985, 0.44", "-7.34815, -3.29917, -15.6558, 0.44", "-7.65375, -3.30707, -15.8892, 0.44", "-7.89856, -3.2739, -16.0938, 0.66", "-8.25076, -3.15842, -16.3904, 0.66", "-8.97878, -2.83882, -16.9853, 0.22", "-9.32428, -2.6568, -17.32, 0.22", "-9.51477, -2.53694, -17.5513, 0.22", "-9.86177, -2.28461, -18.0193, 0.22", "-10.1972, -1.99794, -18.4949, 0.22", "-10.4731, -1.72764, -18.9052, 0.22", "-10.8168, -1.36628, -19.4439, 0.22", "-11.1084, -1.0988, -19.8148, 0.22", "-11.543, -0.76233, -20.3064, 0.15", "-11.8058, -0.606714, -20.5728, 0.37", "-12.2328, -0.400622, -20.9769, 0.74", "-12.6591, -0.200305, -21.3543, 0.74", "-13.2519, 0.083571, -21.8327, 0.22", "-13.6743, 0.294911, -22.1741, 0.22", "-14.3236, 0.630899, -22.7257, 0.15", "-14.7143, 0.832556, -23.0603, 0.15", "-14.8328, 0.893516, -23.1591, 0.15", "-15.1703, 1.07437, -23.4334, 0.15", "-15.3462, 1.18963, -23.5856, 0.15", "-15.5319, 1.34463, -23.7471, 0.15", "-15.8697, 1.66227, -24.0744, 0.15", "-16.1639, 1.91564, -24.4001, 0.15", "-16.5642, 2.22859, -24.8889, 0.07", "-16.7745, 2.40754, -25.1816, 0.07", "-17.0134, 2.62808, -25.5457, 0.29", "-17.3092, 2.93382, -26.033, 0.29", "-17.5961, 3.26659, -26.5303, 0.29", "-17.9586, 3.7305, -27.1622, 0.29", "-18.2856, 4.22294, -27.7534, 0.07", "-18.4918, 4.58613, -28.1204, 0.07", "-18.6662, 4.95849, -28.4494, 0.07", "-18.774, 5.22277, -28.6436, 0.07", "-18.9667, 5.7231, -28.9818, 0.96", "-19.1981, 6.29444, -29.3537, 0.37", "-19.4626, 6.9045, -29.7456, 0.15", "-19.6327, 7.38628, -30.0457, 0.15", "-19.708, 7.66713, -30.212, 0.15", "-19.794, 8.23556, -30.5111, 0.22", "-19.8223, 8.64794, -30.7142, 0.07", "-19.8474, 9.14304, -30.9474, 0.07", "-19.8593, 9.95694, -31.2949, 0.07", "-19.8427, 10.4809, -31.4884, 0.66", "-19.7652, 11.2958, -31.7674, 0.15", "-19.6796, 11.8252, -31.9158, 0.15", "-19.635, 12.0193, -31.9695, 0.15", "-22.512, 15.8988, -38.2347, 0.15", "-25.4009, 20.7416, -43.8529, 0.15", "-28.1293, 25.2289, -49.8062, 0.15", "-29.8136, 29.9278, -55.9799, 0.15", "-32.476, 34.3155, -62.0288, 0.15", "-34.2746, 38.4819, -68.5126, 0.15", "-36.7306, 41.9983, -75.1376, 0.15", "-40.2275, 44.8887, -81.5773, 0.15", "-43.7497, 47.6326, -88.0617, 0.15", "-48.5548, 50.2234, -93.7411, 0.15" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-8.3698, 1.10807, -6.25, 0.66", "-9.21309, 1.26708, -6.57276, 0.59", "-9.95217, 1.40644, -6.85564, 0.59", "-10.4264, 1.49586, -7.03715, 0.66", "-11.1167, 1.62601, -7.30133, 0.66", "-11.8231, 1.75921, -7.57171, 0.88", "-12.5494, 1.89617, -7.84972, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.7598, 6.52607, -2.29, 0.96", "-4.46353, 7.00135, -2.5551, 0.96", "-3.9186, 7.88304, -3.0977, 0.59", "-3.41006, 8.73985, -3.65985, 0.37", "-2.94617, 9.60633, -4.22384, 0.59", "-2.57307, 10.3551, -4.70298, 0.88", "-2.13118, 11.2669, -5.30961, 0.59", "-1.72705, 12.1257, -5.89093, 0.44", "-1.41283, 12.7968, -6.37369, 0.52", "-1.04406, 13.6913, -7.01735, 0.52", "-0.75632, 14.5181, -7.59159, 0.37", "-0.49696, 15.4208, -8.20726, 0.66", "-0.294802, 16.2697, -8.76344, 0.96" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.70294, -3.02848, 0.0, 0.601357", "21.7399, -8.31649, 0.0, 0.601357", "35.7769, -13.6045, 0.0, 0.601357" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "11.0452, -3.30915, 3.00162, 0.15", "11.5873, -2.93206, 3.89827, 0.15", "11.8366, -2.77603, 4.29866, 0.29", "12.2648, -2.56551, 4.93062, 0.29", "12.7306, -2.38238, 5.54798, 0.15", "13.1791, -2.26466, 6.07367, 0.22", "13.4543, -2.20279, 6.36647, 0.22", "13.684, -2.16614, 6.58761, 0.29", "14.0869, -2.08904, 6.95832, 0.44", "14.466, -2.00737, 7.2979, 0.22", "15.1401, -1.89874, 7.90088, 0.29", "15.5951, -1.84189, 8.3027, 0.22", "16.2898, -1.7812, 8.90714, 0.15", "16.9622, -1.75089, 9.48285, 0.15", "17.6596, -1.74593, 10.1044, 0.22", "18.1219, -1.76298, 10.5429, 0.22", "18.4927, -1.78929, 10.9487, 0.22", "18.8469, -1.82007, 11.4254, 0.22", "19.087, -1.83699, 11.8552, 0.29", "19.3901, -1.85077, 12.6712, 0.66", "19.6091, -1.84714, 13.6076, 0.74", "19.7611, -1.82005, 14.6314, 0.66", "19.8628, -1.7729, 15.7196, 0.29", "19.8959, -1.72923, 16.5156, 0.29", "19.8984, -1.68985, 17.1618, 0.29", "19.8817, -1.6375, 17.8583, 0.29", "19.8679, -1.56744, 18.6979, 0.29", "19.8831, -1.53606, 19.0593, 0.29", "19.9661, -1.46729, 20.064, 0.29", "20.0502, -1.4162, 20.7958, 0.29", "20.0923, -1.37194, 21.3109, 0.29", "20.1036, -1.31953, 22.1259, 0.29", "20.1075, -1.31972, 22.4344, 0.29", "20.1462, -1.37692, 23.2416, 0.29", "20.1772, -1.42162, 23.5389, 0.29", "20.2486, -1.5374, 24.0825, 0.29", "20.3289, -1.69315, 24.7375, 0.29", "20.3899, -1.8426, 25.715, 0.22", "20.4049, -1.88789, 26.6543, 0.22", "20.4024, -1.87172, 26.9272, 0.22", "20.3344, -1.72575, 27.8138, 0.22", "20.283, -1.64315, 28.1211, 0.22", "19.9876, -1.22367, 29.2264, 0.15", "19.7685, -0.894606, 29.88, 0.15", "19.6351, -0.671464, 30.2232, 0.29", "19.3772, -0.197153, 30.8649, 0.59", "19.1401, 0.281245, 31.4807, 0.22", "18.9168, 0.721724, 32.0946, 0.22", "18.6786, 1.15097, 32.747, 0.22", "18.2717, 1.80904, 33.859, 0.07", "18.0209, 2.19624, 34.5942, 0.37", "17.7338, 2.64613, 35.551, 0.22", "17.4496, 3.07315, 36.5382, 0.22", "17.3285, 3.23001, 36.9498, 0.22", "17.0161, 3.59149, 38.0191, 0.22", "16.9422, 3.69041, 38.3482, 0.22", "16.8768, 3.83245, 38.8115, 0.22", "16.8641, 3.97021, 39.2131, 0.29", "16.9352, 4.27934, 40.0364, 0.29", "17.0302, 4.48607, 40.5429, 0.22", "17.2454, 4.86281, 41.3517, 0.15", "17.5336, 5.34908, 42.381, 0.15", "17.6541, 5.56954, 42.8355, 0.15", "17.7853, 5.81108, 43.3404, 0.15", "17.8987, 6.0623, 43.8343, 0.22", "17.9804, 6.36371, 44.4583, 0.15", "17.9765, 6.59869, 44.8945, 0.15", "17.8895, 6.97284, 45.5674, 0.29", "17.7977, 7.30197, 46.1153, 0.29", "17.7132, 7.59545, 46.6038, 0.29", "17.5634, 8.05523, 47.3284, 0.29", "17.4458, 8.42254, 47.8852, 0.52", "17.295, 8.95867, 48.6754, 0.52", "17.1642, 9.52946, 49.4968, 0.15", "17.0097, 10.2863, 50.5369, 0.15", "16.8767, 10.9124, 51.3775, 0.15", "16.7876, 11.2446, 51.8069, 0.22", "16.6427, 11.6268, 52.3532, 0.22", "16.5556, 11.8059, 52.6237, 0.22", "16.3863, 12.0937, 53.1001, 0.44", "16.193, 12.4497, 53.7027, 0.59", "16.0318, 12.8011, 54.339, 0.07", "15.8534, 13.2335, 55.1454, 0.07", "15.7468, 13.4985, 55.6823, 0.07", "15.6223, 13.7878, 56.2983, 0.07", "15.5073, 14.0906, 56.9405, 0.07", "15.4711, 14.2364, 57.2358, 0.29", "15.4153, 14.6728, 58.0262, 0.29", "15.3863, 14.9886, 58.5142, 0.29", "15.329, 15.5346, 59.243, 0.22", "15.261, 16.2021, 60.0131, 0.07", "15.2245, 16.6244, 60.4438, 0.07", "15.2019, 17.0689, 60.849, 0.07", "15.1999, 17.4865, 61.1583, 0.22", "15.2121, 18.1097, 61.5969, 0.22", "15.2621, 18.9622, 62.1823, 0.07", "15.2904, 19.5053, 62.5645, 0.29", "15.2977, 19.8869, 62.8308, 0.66", "15.3226, 20.9395, 63.6164, 0.22", "15.3563, 21.6044, 64.1348, 0.22", "15.4257, 22.4397, 64.7838, 0.29", "15.4978, 23.1494, 65.3412, 0.29", "15.6312, 24.246, 66.2398, 0.15", "15.7615, 25.1474, 67.0112, 0.15", "15.84, 25.6244, 67.3993, 0.29", "15.9927, 26.5275, 68.0886, 0.52", "16.1888, 27.7648, 68.9795, 0.15", "16.3192, 28.5521, 69.5334, 0.15", "16.3936, 28.9876, 69.8354, 0.15", "16.5519, 30.0983, 70.5979, 0.15", "16.7199, 31.5249, 71.5905, 0.15", "16.8834, 33.1574, 72.7247, 0.15", "16.9673, 34.0762, 73.3461, 0.15", "17.054, 34.8683, 73.888, 0.15", "17.2032, 35.8789, 74.6426, 0.15", "17.2981, 36.3589, 75.0385, 0.15", "17.4354, 36.8574, 75.4388, 0.44", "17.5589, 37.1949, 75.7103, 0.44", "17.9471, 38.1697, 76.4653, 0.15", "18.3304, 39.0606, 77.1825, 0.15", "18.4793, 39.4035, 77.4585, 0.15", "18.7508, 40.083, 78.0192, 0.07", "18.9057, 40.5767, 78.4466, 0.22", "19.132, 41.6169, 79.3643, 0.07", "19.1835, 42.1597, 79.8349, 0.29", "19.1925, 42.7894, 80.367, 0.37", "19.1932, 43.4116, 80.9124, 0.15", "19.2084, 44.1979, 81.651, 0.15", "19.2305, 44.5608, 82.0123, 0.15", "19.2823, 45.1197, 82.587, 0.37", "19.3105, 45.3313, 82.8254, 0.37", "19.4778, 46.162, 83.9366, 0.15", "19.6576, 46.7483, 84.8714, 0.15", "19.8536, 47.1808, 85.7528, 0.66", "20.0861, 47.5933, 86.8081, 0.22", "20.2873, 47.902, 87.7588, 0.22", "20.5529, 48.2732, 89.1442, 0.29", "20.7041, 48.4582, 90.0021, 0.52", "21.0197, 48.7973, 91.8393, 0.15", "21.134, 48.9369, 92.5522, 0.15", "21.2267, 49.0972, 93.2599, 0.22", "21.2925, 49.418, 94.2873, 0.22", "21.2733, 49.6374, 94.8276, 0.37", "21.2197, 49.8959, 95.3863, 0.37", "21.0725, 50.5791, 96.6785, 0.07", "20.9854, 51.0216, 97.5301, 0.07", "20.9352, 51.3856, 98.181, 0.37", "20.8972, 52.2799, 99.6162, 0.07", "20.9218, 52.9049, 100.576, 0.07", "20.9823, 53.3226, 101.186, 0.22", "21.1947, 54.0872, 102.284, 0.22", "21.424, 54.7341, 103.197, 0.07", "21.6566, 55.2789, 104.016, 0.07", "21.815, 55.6278, 104.512, 0.07", "21.966, 55.9647, 105.064, 0.22", "22.1143, 56.2681, 105.619, 0.22", "22.5059, 57.0019, 107.025, 0.15", "22.8023, 57.4989, 108.053, 0.15", "22.9964, 57.7884, 108.632, 0.29", "23.5257, 58.5164, 110.028, 0.07", "24.0295, 59.1738, 111.205, 0.07", "24.2549, 59.4734, 111.681, 0.22", "24.8745, 60.3507, 112.9, 0.07", "25.3244, 61.0302, 113.76, 0.15", "25.7088, 61.6271, 114.488, 0.07", "26.1301, 62.313, 115.259, 0.22", "26.8431, 63.5321, 116.682, 0.07", "27.1749, 64.1255, 117.378, 0.07", "27.3494, 64.4524, 117.735, 0.22", "27.6121, 64.9428, 118.252, 0.22", "28.1529, 65.8888, 119.198, 0.07", "28.5778, 66.553, 119.86, 0.07", "29.0027, 67.1486, 120.475, 0.07", "29.7994, 68.1742, 121.551, 0.07", "30.1497, 68.61, 122.019, 0.22", "30.4676, 69.0065, 122.46, 0.22", "31.2729, 70.1014, 123.55, 0.07", "31.9079, 71.0566, 124.426, 0.07", "32.5544, 72.1662, 125.41, 0.07", "33.0672, 73.1678, 126.289, 0.07", "33.4736, 74.1101, 127.106, 0.07", "34.0095, 75.7213, 128.497, 0.07", "34.1685, 76.4583, 129.122, 0.07", "34.3346, 77.6803, 130.158, 0.29", "34.3545, 78.0086, 130.459, 0.29", "34.3558, 79.1601, 131.587, 0.07", "34.3395, 79.8225, 132.244, 0.07", "34.286, 80.4794, 132.91, 0.07", "34.1955, 81.1266, 133.491, 0.22", "34.0321, 82.0548, 134.233, 0.22", "33.8012, 83.341, 135.164, 0.07", "33.5548, 84.8531, 136.17, 0.07", "33.3566, 86.1305, 136.984, 0.07", "33.2595, 86.7666, 137.369, 0.29", "33.1658, 87.3228, 137.691, 0.29", "32.8333, 89.2334, 138.712, 0.07", "32.6818, 90.2075, 139.234, 0.07" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "11.0452, -3.30915, 3.00162, 0.29", "11.3909, -3.69559, 3.28295, 0.29", "11.815, -4.16102, 3.65723, 0.37", "12.0691, -4.52092, 3.93489, 0.37", "12.3656, -5.02315, 4.25802, 0.37", "12.5893, -5.44631, 4.51109, 0.29", "12.8169, -5.89909, 4.77739, 0.37", "13.0456, -6.36324, 5.07786, 0.52", "13.4787, -7.23448, 5.66703, 0.29", "13.7442, -7.78885, 6.06072, 0.44", "14.0547, -8.44662, 6.50833, 0.29", "14.2873, -8.93432, 6.84069, 0.37", "14.6278, -9.57415, 7.29519, 0.22", "14.8608, -9.97469, 7.62006, 0.29", "15.1596, -10.4869, 8.10307, 0.44", "15.3993, -10.9631, 8.60763, 0.81", "15.6015, -11.4544, 9.12253, 0.74", "15.8181, -12.1032, 9.78244, 0.37", "15.9912, -12.8418, 10.5218, 0.37", "16.1047, -13.4627, 11.1476, 0.22", "16.2025, -14.0536, 11.7426, 0.59", "16.2976, -14.6363, 12.3163, 0.59", "16.4043, -15.2696, 12.8923, 0.37", "16.5415, -16.1155, 13.5844, 0.44", "16.6528, -16.7996, 14.0635, 0.29", "16.7283, -17.2606, 14.3508, 0.29", "16.7867, -17.7431, 14.6093, 0.29", "16.8336, -18.2912, 14.8911, 0.29", "16.8609, -18.7991, 15.1237, 0.22", "16.8851, -19.6229, 15.4379, 0.37", "16.8458, -20.2535, 15.661, 0.37", "16.7182, -21.2011, 16.0033, 0.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-6.39348, -23.8693, 21.7925, 0.29", "-5.70034, -25.1325, 21.3886, 0.29", "-5.04402, -26.5006, 21.0098, 0.29", "-4.57016, -27.7336, 20.7195, 0.22", "-4.38036, -28.3546, 20.5956, 0.37", "-4.2388, -28.9193, 20.4981, 0.74", "-3.9596, -30.237, 20.3379, 0.52", "-3.82624, -31.2923, 20.3037, 0.37", "-3.77705, -32.4942, 20.3718, 0.37", "-3.81011, -33.3273, 20.4905, 0.52", "-3.88466, -34.0661, 20.6453, 0.52", "-4.09403, -35.2549, 20.9799, 0.52", "-4.36566, -36.3284, 21.3746, 0.22", "-4.67573, -37.303, 21.7841, 0.15", "-5.0946, -38.4008, 22.2742, 0.29", "-5.39167, -38.9911, 22.5469, 0.29", "-6.00292, -39.9075, 22.9879, 0.22", "-6.61113, -40.6381, 23.3329, 0.74", "-7.79379, -41.8587, 23.9011, 0.22", "-8.28951, -42.3233, 24.1113, 0.22", "-9.31034, -43.2166, 24.4904, 0.29", "-10.3699, -44.0899, 24.8809, 0.22", "-10.9616, -44.5535, 25.0836, 0.15", "-11.4951, -44.9971, 25.2651, 0.22", "-12.1211, -45.5934, 25.5114, 0.44", "-12.481, -46.0264, 25.6815, 0.44", "-13.0324, -46.9386, 25.9965, 0.44", "-13.414, -47.7343, 26.2479, 0.44", "-13.9247, -48.9433, 26.6258, 0.37", "-14.2669, -49.8254, 26.9228, 0.44", "-14.5299, -50.5046, 27.173, 0.59", "-14.9831, -51.6289, 27.647, 0.29", "-15.5123, -52.8701, 28.2034, 0.37", "-16.0079, -53.9664, 28.7253, 0.29", "-16.4871, -54.9666, 29.1965, 0.22", "-16.9553, -55.938, 29.6265, 0.22", "-17.2551, -56.5519, 29.8845, 0.22", "-17.8, -57.6443, 30.3104, 0.66", "-18.3044, -58.6827, 30.6816, 0.66", "-18.79, -59.7341, 31.0151, 0.29", "-19.4879, -61.2419, 31.4531, 0.22", "-19.9499, -62.2469, 31.7524, 0.44", "-20.2892, -62.975, 32.0038, 0.59", "-20.9955, -64.4616, 32.6504, 0.22", "-21.4362, -65.3841, 33.1035, 0.37", "-21.8682, -66.2914, 33.5765, 0.29", "-22.3188, -67.2352, 34.0667, 0.66", "-22.8011, -68.301, 34.5935, 0.29", "-23.1998, -69.2492, 35.0255, 0.29", "-23.6035, -70.2934, 35.4586, 0.29", "-24.0349, -71.498, 35.9335, 0.22", "-24.3704, -72.4904, 36.306, 0.66", "-24.9881, -74.2729, 36.9696, 0.22", "-25.5264, -75.7601, 37.5432, 0.22", "-25.8107, -76.5168, 37.8551, 0.37", "-26.0669, -77.2029, 38.1798, 0.37", "-26.3977, -78.0954, 38.6368, 0.22", "-26.8024, -79.2015, 39.2211, 0.22", "-27.084, -79.9135, 39.6024, 0.22", "-27.4234, -80.7132, 40.0175, 0.29", "-27.7743, -81.4969, 40.3854, 0.66", "-28.3882, -82.7966, 40.9567, 0.22", "-28.9722, -83.9945, 41.4473, 0.15", "-29.2353, -84.5208, 41.6491, 0.15", "-29.504, -85.0537, 41.8419, 0.15", "-30.041, -86.1385, 42.2415, 0.29", "-30.6749, -87.425, 42.698, 0.15", "-31.0074, -88.1184, 42.9307, 0.15", "-31.3314, -88.8472, 43.1645, 0.59", "-31.7056, -89.8612, 43.4644, 0.22", "-31.9958, -90.7858, 43.7186, 0.22", "-32.2641, -91.6636, 43.9604, 0.74", "-32.6018, -92.6863, 44.2358, 0.22", "-33.0664, -93.9697, 44.606, 0.44", "-33.5623, -95.2376, 45.0015, 0.22", "-34.0535, -96.4317, 45.3934, 0.22", "-34.5166, -97.4833, 45.7407, 0.22", "-34.7992, -98.121, 45.9712, 0.22", "-35.1802, -98.9905, 46.3219, 0.15", "-35.5256, -99.8408, 46.6728, 0.44", "-35.7192, -100.425, 46.9092, 0.44", "-35.9535, -101.453, 47.2731, 0.22", "-36.1564, -102.807, 47.7069, 0.29", "-36.2968, -103.872, 48.0209, 0.22", "-36.4545, -104.866, 48.2905, 0.29", "-36.6456, -105.808, 48.5291, 0.29", "-36.9571, -107.156, 48.8405, 0.22", "-37.2525, -108.298, 49.0653, 0.22", "-37.5474, -109.282, 49.2171, 0.37", "-37.8952, -110.341, 49.3684, 0.52", "-38.4414, -111.919, 49.5998, 0.22", "-38.7248, -112.701, 49.7253, 0.22", "-39.1067, -113.753, 49.893, 0.37", "-39.2307, -114.108, 49.9437, 0.37", "-39.7301, -115.589, 50.1902, 0.22", "-40.1563, -116.781, 50.4299, 0.22", "-40.5384, -117.728, 50.6476, 0.22", "-40.955, -118.655, 50.885, 0.37", "-41.3157, -119.42, 51.0873, 0.37", "-41.8644, -120.525, 51.385, 0.22", "-42.5525, -121.808, 51.7305, 0.59", "-43.0918, -122.796, 51.9896, 0.59", "-43.7545, -124.101, 52.3069, 0.22", "-44.1867, -124.985, 52.5101, 0.29", "-44.4841, -125.624, 52.6305, 0.59", "-44.7691, -126.283, 52.7271, 0.59", "-45.216, -127.392, 52.8925, 0.29", "-45.6317, -128.491, 53.0863, 0.22", "-45.9818, -129.45, 53.2667, 0.22", "-46.4357, -130.741, 53.5357, 0.15", "-46.8012, -131.844, 53.774, 0.15", "-47.1408, -132.885, 54.0157, 0.59", "-47.7903, -134.812, 54.5347, 0.22", "-48.316, -136.266, 54.9582, 0.15", "-48.6575, -137.203, 55.2463, 0.22", "-49.0022, -138.137, 55.5372, 0.44", "-49.2789, -138.874, 55.7558, 0.22", "-49.7515, -140.162, 56.0888, 0.15", "-50.071, -141.044, 56.28, 0.15", "-50.3464, -141.824, 56.4121, 0.22", "-50.6228, -142.642, 56.5147, 0.29", "-51.0861, -144.076, 56.6531, 0.29", "-51.5953, -145.753, 56.7583, 0.22", "-51.9135, -146.829, 56.7925, 0.22", "-52.3515, -148.278, 56.8718, 0.15", "-52.6704, -149.298, 56.942, 0.52", "-52.9153, -150.097, 57.0115, 0.59", "-53.3078, -151.52, 57.1453, 0.66", "-53.7123, -153.226, 57.3749, 0.29", "-54.0483, -154.927, 57.6538, 0.29", "-54.1936, -155.845, 57.811, 0.15", "-54.3289, -156.76, 57.9692, 0.15", "-54.4988, -158.089, 58.216, 0.29", "-54.648, -159.623, 58.5117, 0.44", "-54.7669, -161.273, 58.8161, 0.15", "-54.8005, -161.889, 58.923, 0.15", "-54.8465, -162.526, 59.0515, 0.15", "-54.937, -163.543, 59.2668, 0.15", "-54.9944, -164.269, 59.4472, 0.15", "-55.0175, -164.995, 59.6356, 0.29", "-55.0008, -166.179, 59.9388, 0.15", "-54.9781, -166.909, 60.1413, 0.15", "-54.9353, -167.834, 60.4057, 0.81", "-54.8977, -169.235, 60.8113, 0.22", "-54.9285, -170.327, 61.1557, 0.22", "-55.0416, -172.036, 61.7472, 0.15", "-55.149, -173.007, 62.1151, 0.15", "-55.2441, -173.598, 62.3627, 0.59", "-55.3836, -174.193, 62.6393, 0.59", "-55.9858, -175.976, 63.6003, 0.22", "-56.4886, -177.171, 64.3672, 0.22", "-56.9599, -178.145, 65.1015, 0.22", "-57.2929, -178.794, 65.6442, 0.15", "-57.6698, -179.438, 66.2765, 0.29", "-58.3489, -180.453, 67.4524, 0.22", "-58.8311, -181.075, 68.2976, 0.37", "-59.3773, -181.693, 69.2407, 0.52", "-59.8502, -182.227, 70.0769, 0.44", "-60.3924, -182.917, 71.0829, 0.22", "-60.8842, -183.624, 71.9868, 0.66", "-61.2874, -184.302, 72.7139, 0.74", "-62.0192, -185.741, 74.0543, 0.22", "-62.3504, -186.539, 74.7108, 0.22", "-62.6972, -187.608, 75.4668, 0.15", "-62.9413, -188.643, 76.1147, 0.22", "-63.1733, -189.773, 76.7603, 0.22", "-63.4162, -191.017, 77.4306, 0.15", "-63.5591, -191.847, 77.8567, 0.52", "-63.6871, -192.587, 78.2756, 0.59", "-63.8871, -193.643, 78.9259, 0.15", "-64.11, -194.812, 79.6698, 0.22", "-64.378, -196.038, 80.4133, 0.15", "-64.5885, -196.902, 80.9085, 0.37", "-64.8279, -197.825, 81.4289, 0.37", "-65.1086, -198.921, 82.0426, 0.15", "-65.3454, -199.923, 82.5721, 0.22", "-65.6384, -201.342, 83.3071, 0.15", "-65.9351, -202.803, 84.0408, 0.15", "-66.0419, -203.342, 84.3067, 0.37", "-66.203, -204.24, 84.7108, 0.37", "-66.3696, -205.407, 85.2338, 0.15", "-66.4558, -206.113, 85.5563, 0.15", "-66.5209, -206.758, 85.8632, 0.37", "-66.6232, -207.64, 86.2815, 0.37", "-66.871, -209.383, 87.0868, 0.07", "-67.0466, -210.278, 87.4799, 0.22", "-67.3709, -211.523, 87.9675, 0.07", "-67.5018, -211.943, 88.1145, 0.07", "-67.8466, -212.951, 88.4269, 0.29", "-68.1363, -213.714, 88.5981, 0.15", "-68.5006, -214.646, 88.7432, 0.29", "-69.05, -216.151, 88.8382, 0.07", "-69.3456, -217.042, 88.8311, 0.07", "-69.6878, -218.208, 88.7728, 0.59", "-70.1069, -219.825, 88.6228, 0.15", "-70.3143, -220.679, 88.5173, 0.22", "-70.626, -222.072, 88.3209, 0.07", "-70.81, -222.887, 88.1978, 0.07", "-71.0725, -223.953, 88.0283, 0.29", "-71.4827, -225.416, 87.8208, 0.07", "-71.6775, -226.063, 87.7478, 0.59", "-71.8151, -226.507, 87.7036, 0.59", "-72.2683, -228.004, 87.577, 0.07", "-72.5571, -229.007, 87.5003, 0.07", "-72.7903, -229.849, 87.4402, 0.29", "-72.9136, -230.337, 87.3977, 0.29", "-73.3024, -231.875, 87.2341, 0.07", "-73.5899, -232.952, 87.1079, 0.07", "-73.7587, -233.579, 87.0297, 0.66", "-73.9777, -234.396, 86.9266, 0.07", "-74.2643, -235.446, 86.7818, 0.07", "-74.6765, -236.804, 86.5796, 0.07", "-74.9322, -237.541, 86.4554, 0.07", "-75.2813, -238.493, 86.2885, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-6.39348, -23.8693, 21.7925, 0.15", "-7.07357, -24.5288, 22.1037, 0.15", "-7.86084, -25.1892, 22.4447, 0.15", "-8.68336, -25.8097, 22.7735, 0.15", "-9.19987, -26.195, 22.9708, 0.15", "-9.70887, -26.5985, 23.1519, 0.29", "-10.6865, -27.4107, 23.4832, 0.15", "-11.2807, -27.915, 23.6407, 0.22", "-12.0182, -28.538, 23.7716, 0.52", "-12.612, -29.0878, 23.8561, 0.29", "-13.4617, -29.9975, 23.9134, 0.15", "-13.9359, -30.6387, 23.8562, 0.15", "-14.405, -31.4673, 23.6458, 0.37", "-14.6149, -31.9334, 23.481, 0.74", "-15.0185, -33.0467, 23.0289, 0.22", "-15.3078, -34.01, 22.6113, 0.22", "-15.624, -35.4448, 21.9989, 0.29", "-15.7553, -36.4177, 21.6407, 0.22", "-15.861, -37.4197, 21.346, 0.22", "-15.9575, -38.3748, 21.1164, 0.22", "-16.0411, -39.0556, 20.9928, 0.22", "-16.1755, -40.1188, 20.8829, 0.52", "-16.4145, -42.0026, 20.7917, 0.22", "-16.6042, -43.5101, 20.7426, 0.22", "-16.7355, -44.5132, 20.7126, 0.22", "-16.8887, -45.7294, 20.6622, 0.22", "-17.0268, -46.9267, 20.604, 0.22", "-17.1375, -48.0972, 20.5416, 0.22", "-17.1862, -48.994, 20.4824, 0.15", "-17.1864, -49.6784, 20.429, 0.22", "-17.1673, -51.0309, 20.3264, 0.22", "-17.1444, -52.0952, 20.2712, 0.15", "-17.1403, -52.8337, 20.256, 0.44", "-17.1423, -53.4352, 20.2684, 0.44", "-17.1629, -54.2645, 20.3149, 0.22", "-17.2168, -55.4852, 20.4253, 0.07", "-17.2773, -56.32, 20.5304, 0.07", "-17.394, -57.5953, 20.679, 0.07", "-17.4937, -58.5478, 20.761, 0.07", "-17.5879, -59.3238, 20.7988, 0.22", "-17.6912, -60.1711, 20.7766, 0.22", "-17.7952, -60.8704, 20.6972, 0.15", "-17.9095, -61.4536, 20.5887, 0.52", "-18.1065, -62.1897, 20.4094, 0.52", "-18.4454, -63.2841, 20.1036, 0.15", "-18.7354, -64.0185, 19.8842, 0.15", "-19.0854, -64.689, 19.6789, 0.22", "-19.3427, -65.0909, 19.5587, 0.22", "-20.148, -66.1549, 19.2679, 0.15", "-20.6486, -66.7463, 19.1219, 0.29", "-21.2728, -67.4035, 19.0093, 0.29", "-22.1897, -68.2954, 18.9513, 0.07", "-22.887, -68.9331, 18.9599, 0.07", "-23.5251, -69.4685, 19.0047, 0.29", "-24.5126, -70.2762, 19.1784, 0.29", "-25.5716, -71.1887, 19.4449, 0.07", "-26.1077, -71.7298, 19.6472, 0.07", "-26.8058, -72.5608, 20.0064, 0.22", "-27.334, -73.2962, 20.3332, 0.29", "-28.0336, -74.3839, 20.7994, 0.07", "-28.4646, -75.1025, 21.0926, 0.22", "-29.1257, -76.3456, 21.5312, 0.07", "-29.3914, -76.8897, 21.7163, 0.07", "-29.7937, -77.75, 22.025, 0.29", "-30.1165, -78.4215, 22.2743, 0.29", "-30.7273, -79.5765, 22.7044, 0.07", "-31.3617, -80.6464, 23.1611, 0.07", "-32.1402, -81.8707, 23.7407, 0.07", "-32.6437, -82.6569, 24.1322, 0.07", "-32.9477, -83.1392, 24.3828, 0.22", "-33.3419, -83.7797, 24.7124, 0.59", "-33.9534, -84.79, 25.2136, 0.07", "-34.7003, -86.0278, 25.8254, 0.07", "-35.039, -86.6041, 26.1155, 0.07", "-35.3486, -87.1537, 26.3813, 0.22", "-35.7149, -87.7994, 26.687, 0.29", "-36.0097, -88.2876, 26.9266, 0.29", "-36.5386, -89.1257, 27.3575, 0.07", "-36.9887, -89.7467, 27.7095, 0.07", "-37.2534, -90.0844, 27.9297, 0.29", "-37.5504, -90.4585, 28.1856, 0.44", "-38.1968, -91.2832, 28.7553, 0.22", "-38.8381, -92.129, 29.3376, 0.15", "-39.3409, -92.8417, 29.8033, 0.29", "-39.7559, -93.4992, 30.2104, 0.29", "-40.3204, -94.4958, 30.7994, 0.15", "-40.6227, -95.0968, 31.1254, 0.22", "-41.0206, -96.0253, 31.5557, 0.22", "-41.372, -97.0304, 31.943, 0.07", "-41.6388, -97.9714, 32.2415, 0.07", "-41.7682, -98.5629, 32.3875, 0.44", "-41.8815, -99.2895, 32.5331, 0.44", "-42.0326, -100.667, 32.7559, 0.15", "-42.1259, -101.964, 32.9144, 0.22", "-42.1737, -103.241, 33.046, 0.07", "-42.2013, -104.189, 33.121, 0.07", "-42.2137, -104.611, 33.1505, 0.07", "-42.2503, -105.216, 33.1807, 0.29", "-42.3329, -105.928, 33.2072, 0.37", "-42.3741, -106.175, 33.2132, 0.37", "-42.6853, -107.779, 33.241, 0.07", "-42.8801, -108.617, 33.2531, 0.22", "-43.3149, -110.312, 33.2522, 0.07", "-43.7102, -111.71, 33.2267, 0.07", "-43.8419, -112.121, 33.2115, 0.29", "-43.9643, -112.463, 33.1924, 0.52", "-44.2491, -113.176, 33.1364, 0.22", "-44.8915, -114.651, 32.9603, 0.07", "-45.2958, -115.535, 32.8211, 0.07", "-45.6306, -116.251, 32.6742, 0.29", "-46.098, -117.244, 32.4498, 0.15", "-46.3118, -117.702, 32.342, 0.29", "-46.9546, -119.098, 31.9983, 0.07", "-47.2063, -119.674, 31.8534, 0.37", "-47.748, -120.915, 31.5441, 0.07", "-47.9967, -121.473, 31.4066, 0.07", "-48.3784, -122.27, 31.212, 0.74", "-49.0197, -123.547, 30.9166, 0.07", "-49.6795, -124.842, 30.6507, 0.22", "-50.4677, -126.445, 30.3363, 0.07", "-50.8909, -127.342, 30.1767, 0.07", "-51.1831, -127.989, 30.0646, 0.22", "-51.3939, -128.485, 29.9848, 0.22", "-51.9469, -129.928, 29.7903, 0.07", "-52.2594, -130.795, 29.6849, 0.07", "-52.4704, -131.494, 29.6044, 0.22", "-52.601, -131.973, 29.5515, 0.22", "-52.8809, -133.109, 29.4278, 0.07", "-53.0971, -133.983, 29.3358, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "12.9196, -13.1458, -3.70121, 0.52", "13.3746, -14.1458, -3.30101, 0.52", "13.5087, -14.6179, -3.13624, 0.52", "13.6198, -15.2548, -2.93482, 0.59", "13.6898, -15.7783, -2.77057, 0.59", "13.8102, -16.6104, -2.52409, 0.44", "13.9526, -17.461, -2.27986, 0.66", "14.1638, -18.7825, -1.94077, 0.52", "14.3712, -19.8938, -1.67233, 0.37", "14.5593, -20.7381, -1.47402, 0.37", "14.8133, -21.801, -1.23219, 0.66", "15.0061, -22.5368, -1.04927, 0.81", "15.1797, -23.1168, -0.892592, 0.81", "15.5393, -24.1143, -0.56944, 0.59", "15.8992, -25.0177, -0.24975, 0.66", "16.4307, -26.2862, 0.227342, 0.44", "16.8193, -27.1496, 0.562711, 0.37", "17.1776, -27.8879, 0.861432, 0.37", "17.5024, -28.5246, 1.13811, 0.37", "17.9721, -29.3935, 1.54299, 0.44", "18.4548, -30.2702, 1.96195, 0.37", "19.0467, -31.269, 2.44075, 0.37", "19.5333, -32.0946, 2.81904, 0.44", "19.9059, -32.7732, 3.12474, 0.59", "20.3645, -33.6847, 3.54167, 0.59", "20.8972, -34.8489, 4.15967, 0.52" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "12.9196, -13.1458, -3.70121, 0.22", "12.7358, -13.7167, -4.68762, 0.22", "12.564, -14.1023, -5.40194, 0.22", "12.3623, -14.5064, -6.24011, 0.59", "12.2388, -14.7536, -6.80209, 0.59", "12.101, -15.04, -7.54195, 0.29", "11.9184, -15.418, -8.51972, 0.22", "11.8864, -15.467, -8.67727, 0.22", "11.7763, -15.6214, -9.18109, 0.22", "11.7179, -15.7209, -9.48394, 0.22", "11.5862, -16.0517, -10.1746, 0.22", "11.455, -16.4982, -10.8286, 0.15", "11.3854, -16.7896, -11.2025, 0.15", "11.317, -17.0395, -11.4981, 0.15", "11.2517, -17.2211, -11.6972, 0.15", "10.9252, -17.9974, -12.5546, 0.07", "10.6628, -18.6139, -13.2601, 0.07", "10.4428, -19.163, -13.9225, 0.07", "10.3093, -19.5366, -14.354, 0.07", "10.1792, -19.9628, -14.8569, 0.29", "10.0997, -20.2647, -15.2377, 0.29", "9.98396, -20.953, -16.2697, 0.07", "9.95559, -21.1522, -16.5865, 0.07", "9.86671, -21.6624, -17.4268, 0.07", "9.76517, -22.1456, -18.2736, 0.22", "9.66248, -22.5378, -19.0107, 0.22", "9.23919, -23.5539, -20.9887, 0.07", "9.10262, -23.7521, -21.4072, 0.07", "8.84401, -24.0075, -21.9972, 0.22", "8.59071, -24.2034, -22.4959, 0.22", "8.37349, -24.3447, -22.8429, 0.22", "7.90276, -24.6028, -23.4318, 0.15", "7.17586, -24.8886, -24.0304, 0.07", "6.3774, -25.1966, -24.6816, 0.07", "3.66609, -28.1005, -33.0431, 0.07" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "9.81136, 3.29577, 0.918289, 0.22", "10.1307, 3.57996, 1.99972, 0.22", "10.8315, 4.53945, 4.63685, 0.22", "11.0757, 4.99272, 5.67077, 0.29", "11.2928, 5.61134, 6.80983, 0.59", "11.4758, 6.28904, 7.92463, 0.44", "11.6391, 6.99461, 9.02698, 0.44", "11.7445, 7.78463, 10.0187, 0.22", "11.8185, 8.68581, 10.976, 0.37", "11.9808, 10.2631, 12.5731, 0.22", "12.0916, 10.9979, 13.306, 0.15", "12.2091, 11.571, 13.8742, 0.15", "12.4649, 12.5668, 14.8165, 0.22", "12.7254, 13.4314, 15.5726, 0.22", "12.9714, 14.218, 16.1683, 0.15", "13.2511, 15.167, 16.7676, 0.37", "13.3592, 15.7371, 17.079, 0.37", "13.4564, 16.6891, 17.5801, 0.22", "13.4913, 17.3881, 17.9605, 0.44", "13.5169, 18.2723, 18.4538, 0.81", "13.5391, 18.9881, 18.9054, 0.59", "13.638, 20.106, 19.78, 0.22", "13.7854, 20.842, 20.5312, 0.22", "13.941, 21.4136, 21.2419, 0.22", "14.137, 21.9584, 22.043, 0.22", "14.3174, 22.3489, 22.7341, 0.22", "14.5406, 22.7447, 23.5386, 0.22", "14.6885, 23.0226, 24.1338, 0.22", "14.8248, 23.3965, 24.9881, 0.22", "14.859, 23.6292, 25.5795, 0.22", "14.8593, 24.0089, 26.7249, 0.22", "14.838, 24.4266, 28.3979, 0.37", "14.8595, 24.6416, 29.3941, 0.37", "14.9151, 24.8121, 30.1467, 0.37", "15.0108, 24.9841, 30.8434, 0.37", "15.1606, 25.2571, 31.6193, 0.37", "15.3012, 25.5298, 32.1735, 0.37", "15.5944, 26.1675, 33.2262, 0.22", "15.8846, 26.7065, 34.2108, 0.22", "16.0632, 27.0455, 34.9808, 0.22", "16.1932, 27.4369, 36.0553, 0.22", "16.1772, 27.6202, 36.716, 0.29", "16.0675, 27.8018, 37.6185, 0.29", "15.8001, 28.0418, 39.313, 0.22", "15.6295, 28.2239, 40.6705, 0.22", "15.5142, 28.427, 41.8222, 0.22", "15.4336, 28.7224, 43.0263, 0.37", "15.4184, 28.8909, 43.5268, 0.37", "15.3983, 29.5316, 44.9603, 0.07", "15.3467, 30.488, 46.6152, 0.29", "15.3461, 31.0659, 47.5253, 0.44", "15.409, 31.8896, 48.8437, 0.22", "15.5002, 32.5907, 49.9711, 0.44", "15.6007, 33.1831, 50.9358, 0.37", "15.7727, 33.9558, 52.1902, 0.22", "16.0022, 34.6673, 53.3556, 0.15", "16.3321, 35.3693, 54.4008, 0.15", "16.4706, 35.6015, 54.7184, 0.15", "16.8364, 36.1207, 55.352, 0.29", "17.3065, 36.7659, 56.1039, 0.37", "17.9689, 37.7178, 57.1842, 0.22", "18.5932, 38.771, 58.3768, 0.15", "18.9353, 39.4028, 59.0796, 0.15", "19.2629, 40.0232, 59.7941, 0.22", "19.6683, 40.8152, 60.7513, 0.22", "20.0626, 41.5934, 61.7183, 0.15", "20.3911, 42.2524, 62.5346, 0.15", "20.6754, 42.794, 63.3864, 0.15", "21.0761, 43.5156, 64.6775, 0.15", "21.3094, 43.8764, 65.3758, 0.44", "21.6591, 44.3555, 66.319, 0.44", "22.073, 44.8804, 67.3364, 0.22", "23.4615, 46.4796, 70.4042, 0.15", "23.9606, 46.9901, 71.4072, 0.22", "24.8379, 47.7228, 73.0013, 0.07", "25.5504, 48.2488, 74.2159, 0.07", "26.0261, 48.5866, 74.9915, 0.29", "26.3457, 48.8117, 75.5166, 0.29", "27.0675, 49.3771, 76.7343, 0.15", "28.1747, 50.2551, 79.0676, 0.22", "28.4836, 50.479, 79.8808, 0.22", "28.8212, 50.6981, 80.9192, 0.44", "29.1468, 50.9027, 82.098, 0.44", "29.3821, 51.0442, 83.0768, 0.44", "29.8431, 51.2737, 85.1302, 0.22", "30.0976, 51.3794, 86.2441, 0.22", "30.2883, 51.4209, 86.991, 0.22", "30.5799, 51.4678, 88.0353, 0.22", "30.8764, 51.5611, 88.9287, 0.22", "31.0337, 51.6264, 89.3329, 0.22", "31.2565, 51.7531, 89.8121, 0.22", "31.6681, 52.0191, 90.6294, 0.22", "32.0777, 52.269, 91.4069, 0.29", "32.7168, 52.6748, 92.7068, 0.15", "33.2962, 53.0363, 93.9752, 0.15", "33.6882, 53.258, 94.8208, 0.29", "34.4055, 53.626, 96.352, 0.29", "35.1483, 53.9894, 97.9507, 0.22", "36.0275, 54.4436, 99.8898, 0.22", "36.7653, 54.9146, 101.591, 0.22", "37.2293, 55.3058, 102.696, 0.07", "37.6088, 55.744, 103.611, 0.15", "38.1017, 56.5277, 104.743, 0.07", "38.441, 57.2428, 105.495, 0.07", "38.7833, 58.1033, 106.206, 0.07", "39.0457, 58.8314, 106.759, 0.59", "39.8187, 60.9149, 108.262, 0.15", "40.4029, 62.3686, 109.268, 0.15", "40.8966, 63.4924, 110.052, 0.66", "41.5236, 64.8187, 111.016, 0.15", "42.0961, 66.0184, 111.933, 0.15", "42.701, 67.3625, 112.981, 0.15", "43.0044, 68.0918, 113.546, 0.29", "43.223, 68.6115, 113.966, 0.29", "43.8204, 69.9566, 115.092, 0.07", "44.1048, 70.5282, 115.608, 0.07", "44.5132, 71.3118, 116.319, 0.44", "45.1123, 72.333, 117.306, 0.22", "45.6913, 73.1247, 118.098, 0.07", "46.1771, 73.6709, 118.677, 0.29", "47.4066, 74.8213, 119.963, 0.15", "48.0192, 75.299, 120.572, 0.44", "48.5873, 75.6611, 121.149, 0.44", "49.7534, 76.2964, 122.346, 0.15", "50.7231, 76.7609, 123.404, 0.15", "51.2609, 76.9504, 124.013, 0.81", "52.6508, 77.2843, 125.676, 0.07", "53.4945, 77.3949, 126.788, 0.07", "54.0313, 77.4219, 127.563, 0.07", "54.7365, 77.4066, 128.631, 0.22", "55.8467, 77.3138, 130.386, 0.07", "56.5708, 77.2179, 131.6, 0.22", "57.3645, 77.094, 132.993, 0.22", "57.6531, 77.0424, 133.518, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "9.81136, 3.29577, 0.918289, 0.66", "9.94935, 3.47871, 0.776855, 0.66", "10.527, 4.39938, 0.181768, 0.44", "10.8065, 4.92588, -0.132141, 0.44", "11.1491, 5.56981, -0.522513, 0.59", "11.7115, 6.55957, -1.10842, 0.37", "12.062, 7.14802, -1.44259, 0.37", "12.5427, 7.95765, -1.88056, 0.52", "12.9574, 8.66828, -2.2427, 0.29", "13.4634, 9.51353, -2.68964, 0.22", "13.9027, 10.1868, -3.05379, 0.29", "14.6601, 11.2603, -3.64614, 0.22", "15.1499, 11.9372, -4.02566, 0.37", "15.4742, 12.3624, -4.26401, 0.74", "15.9697, 13.0355, -4.62993, 1.03", "16.5992, 13.9759, -5.12054, 0.52", "17.0872, 14.7463, -5.5143, 0.22", "17.6115, 15.5865, -5.93676, 0.29", "18.1251, 16.4166, -6.33329, 0.22", "18.7813, 17.3856, -6.78532, 0.15", "19.2014, 17.9586, -7.05934, 0.29", "19.6113, 18.4915, -7.32979, 0.44", "19.9355, 18.8796, -7.52002, 0.59", "20.4452, 19.4442, -7.79864, 0.74", "21.6734, 20.7627, -8.41898, 0.15", "22.1618, 21.2671, -8.61431, 0.15", "22.5944, 21.714, -8.76912, 0.22", "22.908, 22.0358, -8.85874, 0.44", "23.6409, 22.7626, -9.00169, 0.66", "24.5757, 23.6695, -9.15514, 0.07", "25.4999, 24.5837, -9.29765, 0.07", "26.1027, 25.1678, -9.38893, 0.44", "26.7257, 25.7222, -9.50271, 0.44", "27.525, 26.3468, -9.666, 0.29", "28.418, 26.9425, -9.84881, 0.15", "29.0009, 27.2947, -9.97462, 0.15", "29.4582, 27.5542, -10.0785, 0.15", "30.4215, 28.1217, -10.2825, 0.15", "31.1769, 28.6027, -10.4654, 0.22", "31.946, 29.107, -10.6762, 0.29", "32.4682, 29.4562, -10.8333, 0.29", "32.9393, 29.782, -11.0047, 0.52", "33.4045, 30.1232, -11.2109, 0.59", "34.1299, 30.7087, -11.6342, 0.15", "34.8669, 31.3013, -12.1811, 0.15", "35.3417, 31.6507, -12.5906, 0.15", "35.84, 31.9743, -13.0294, 0.15", "36.1882, 32.1821, -13.3363, 0.59", "36.9678, 32.6287, -14.0194, 0.07", "37.8183, 33.1272, -14.7433, 0.07", "38.4715, 33.5662, -15.2982, 0.07", "38.7818, 33.7906, -15.5673, 0.07", "39.3804, 34.2724, -16.1054, 0.07", "39.6526, 34.5243, -16.352, 0.22", "40.0054, 34.8906, -16.647, 0.29", "40.6819, 35.6753, -17.1651, 0.07", "41.0753, 36.1331, -17.4136, 0.07", "41.3001, 36.3785, -17.5246, 0.22", "41.6129, 36.7039, -17.6389, 0.22", "41.8983, 36.9811, -17.724, 0.22", "42.6456, 37.6892, -17.9039, 0.07", "43.487, 38.5092, -18.0874, 0.22", "44.2933, 39.3602, -18.2891, 0.07", "44.8394, 39.9738, -18.4483, 0.22", "45.1298, 40.3092, -18.5461, 0.22", "45.7154, 41.0005, -18.7562, 0.37", "46.3324, 41.7219, -18.9773, 0.29", "46.655, 42.0866, -19.1005, 0.29", "47.46, 42.954, -19.3996, 0.07", "48.2246, 43.7086, -19.6638, 0.07", "48.8918, 44.3479, -19.8373, 0.07", "49.5207, 44.9238, -19.9639, 0.15", "49.8939, 45.2535, -20.0166, 0.37", "50.4336, 45.7268, -20.0706, 0.66", "51.4051, 46.6012, -20.1392, 0.15", "52.282, 47.4354, -20.1993, 0.15", "53.08, 48.2354, -20.2687, 0.22", "53.3395, 48.5005, -20.2938, 0.15", "53.7261, 48.8959, -20.3273, 0.22", "54.1425, 49.3182, -20.3694, 0.15", "54.6108, 49.7972, -20.4287, 0.15", "55.0969, 50.2625, -20.5628, 0.37", "55.5113, 50.6697, -20.6753, 0.52", "62.2548, 57.4664, -24.5781, 0.52", "69.1888, 63.5281, -29.1829, 0.52", "74.6141, 69.6182, -35.4743, 0.52", "80.2476, 75.6708, -41.6133, 0.52", "86.7485, 82.2784, -46.1697, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-12.5494, 1.89617, -7.84972, 0.74", "-12.204, 1.0849, -8.50265, 0.74", "-11.8253, 0.240774, -9.3465, 0.37", "-11.5316, -0.476426, -10.24, 0.22", "-11.3697, -0.926098, -10.8911, 0.22", "-11.2818, -1.20437, -11.3453, 0.22", "-11.2309, -1.38399, -11.6569, 0.22", "-11.159, -1.70947, -12.4647, 0.22", "-11.1929, -1.99166, -13.2766, 0.22", "-11.2787, -2.15555, -13.7257, 0.29", "-11.4381, -2.40976, -14.3274, 0.29", "-11.4595, -2.44376, -14.3969, 0.29", "-11.6722, -2.81934, -15.0612, 0.29", "-11.955, -3.38001, -15.9542, 0.22", "-12.1789, -3.81894, -16.6631, 0.22", "-12.3187, -4.05185, -17.0645, 0.22", "-12.4371, -4.24604, -17.4112, 0.22", "-12.5716, -4.48304, -17.8527, 0.22", "-12.7253, -4.80117, -18.4729, 0.44", "-12.8369, -5.09087, -19.0706, 0.44", "-13.0528, -5.68786, -20.3002, 0.15", "-13.1617, -6.021, -20.9343, 0.15", "-13.2257, -6.24923, -21.3006, 0.29", "-13.2936, -6.55555, -21.7057, 0.29", "-13.3094, -6.66662, -21.8297, 0.29", "-13.3384, -7.26668, -22.4183, 0.29", "-13.303, -8.03019, -23.1074, 0.07", "-13.277, -8.87783, -23.8345, 0.07", "-13.2662, -9.4979, -24.3421, 0.07", "-13.2579, -10.2229, -24.9095, 0.07", "-13.2427, -10.6701, -25.2493, 0.52", "-13.1833, -11.2682, -25.6536, 0.66", "-14.5974, -17.7813, -33.8289, 0.66", "-16.3828, -24.4614, -41.8071, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-12.5494, 1.89617, -7.84972, 0.37", "-12.8562, 2.38505, -8.21501, 0.37", "-13.1767, 2.76098, -8.58943, 0.37", "-13.3526, 2.92147, -8.76602, 0.37", "-13.6062, 3.11182, -8.99352, 0.59", "-13.8923, 3.29978, -9.22777, 0.59", "-14.4329, 3.62585, -9.63551, 0.29", "-15.1292, 4.00803, -10.1483, 0.22", "-15.7721, 4.31607, -10.59, 0.22", "-16.3696, 4.56598, -10.983, 0.37", "-16.7425, 4.70098, -11.2171, 0.96", "-17.2429, 4.86271, -11.5035, 1.47" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.294802, 16.2697, -8.76344, 0.29", "-0.443688, 17.5476, -8.6888, 0.29", "-0.59172, 18.5703, -8.5789, 0.15", "-0.72433, 19.4509, -8.4388, 0.15", "-0.85139, 20.2118, -8.29305, 0.37", "-0.93574, 20.7193, -8.17351, 0.37", "-1.0535, 21.3905, -8.00343, 0.22", "-1.21544, 22.218, -7.76165, 0.22", "-1.33192, 22.7675, -7.59408, 0.22", "-1.47087, 23.4754, -7.37154, 0.22", "-1.61053, 24.2442, -7.11409, 0.22", "-1.74813, 24.9308, -6.88755, 0.22", "-1.97641, 25.8483, -6.58306, 0.22", "-2.09587, 26.1973, -6.48152, 0.22", "-2.28277, 26.6382, -6.38314, 0.22", "-2.54382, 27.17, -6.29366, 0.22", "-2.91468, 27.9273, -6.24198, 0.22", "-3.20758, 28.6191, -6.26208, 0.22", "-3.61235, 29.6934, -6.40495, 0.29", "-3.88288, 30.5107, -6.57321, 0.29", "-4.1421, 31.376, -6.7991, 0.88", "-4.59353, 32.8153, -7.26628, 0.44", "-5.08529, 34.2964, -7.83009, 0.22", "-5.35495, 35.0429, -8.16145, 0.22", "-5.50013, 35.3915, -8.33565, 0.29", "-6.00349, 36.3594, -8.85303, 0.37", "-6.68739, 37.305, -9.43956, 0.22", "-7.32906, 37.9148, -9.86234, 0.22", "-7.7945, 38.2674, -10.1049, 0.22", "-8.53053, 38.788, -10.4301, 0.22", "-9.19858, 39.2258, -10.7012, 0.22", "-10.0725, 39.7803, -11.0175, 0.22", "-10.7198, 40.2026, -11.2189, 0.37", "-11.571, 40.7708, -11.5012, 0.37", "-12.3354, 41.3092, -11.776, 0.22", "-13.5002, 42.1766, -12.2529, 0.22", "-14.2248, 42.7939, -12.6089, 0.52", "-14.6124, 43.1857, -12.8494, 0.59", "-15.4119, 44.1789, -13.4676, 0.22", "-15.6565, 44.5754, -13.7148, 0.15", "-15.996, 45.2991, -14.1797, 0.15", "-16.2185, 45.9445, -14.593, 0.22", "-16.4194, 46.6702, -15.0726, 0.29", "-16.633, 47.6595, -15.7226, 0.44", "-16.7616, 48.5439, -16.3234, 0.22", "-16.8534, 49.9697, -17.4044, 0.07", "-16.8465, 50.2726, -17.6699, 0.07", "-16.8111, 50.7622, -18.1555, 0.07", "-16.787, 51.1452, -18.5484, 0.15", "-16.796, 51.823, -19.3101, 0.22", "-16.8428, 52.299, -19.8155, 0.37", "-16.9759, 53.0425, -20.5175, 0.52", "-17.0731, 53.4383, -20.8636, 0.52", "-17.3306, 54.3132, -21.5393, 0.22", "-17.6817, 55.3193, -22.2611, 0.15", "-17.9861, 56.0744, -22.7764, 0.29", "-18.5684, 57.4324, -23.7259, 0.15", "-18.8746, 58.1429, -24.2324, 0.15", "-19.1303, 58.7562, -24.704, 0.29", "-19.4372, 59.5317, -25.3155, 0.29", "-19.8352, 60.4761, -26.0028, 0.15", "-20.0596, 60.9033, -26.2996, 0.15", "-20.3242, 61.2822, -26.5366, 0.29", "-20.8501, 61.9442, -26.9104, 0.52", "-21.3174, 62.5396, -27.2247, 0.22", "-22.0478, 63.5368, -27.683, 0.15", "-22.5421, 64.2546, -27.9982, 0.15", "-23.1236, 65.1192, -28.3819, 0.15", "-23.6608, 65.9953, -28.8054, 0.15", "-24.0192, 66.6427, -29.1364, 0.15", "-24.3414, 67.2961, -29.5017, 0.15", "-24.7298, 68.113, -29.9875, 0.15", "-24.9415, 68.5517, -30.2596, 0.15", "-25.5462, 69.7456, -31.0057, 0.15", "-25.8519, 70.2986, -31.3467, 0.15", "-26.1967, 70.8817, -31.6866, 0.29", "-26.7939, 71.8513, -32.2337, 0.07", "-27.3, 72.6485, -32.6811, 0.07", "-27.5221, 73.005, -32.8832, 0.07", "-27.8535, 73.5656, -33.22, 0.37", "-28.03, 73.9463, -33.4449, 0.37", "-28.2827, 74.6621, -33.869, 0.15", "-28.5399, 75.5942, -34.3954, 0.15", "-28.6749, 76.0884, -34.6568, 0.29", "-28.9084, 76.9663, -35.1063, 0.29", "-29.2538, 78.4986, -35.8154, 0.07", "-29.3894, 79.1494, -36.0711, 0.07", "-29.5692, 79.9702, -36.363, 0.22", "-29.7854, 80.7374, -36.6061, 0.37", "-29.9493, 81.1682, -36.7342, 0.15", "-30.4376, 82.1855, -37.0364, 0.15", "-30.9224, 83.0469, -37.3139, 0.15", "-31.4308, 83.8946, -37.6139, 0.15", "-31.786, 84.4871, -37.8425, 0.15", "-32.0798, 85.023, -38.0561, 0.37", "-32.3767, 85.621, -38.2831, 0.37", "-32.6264, 86.1902, -38.4917, 0.07", "-32.9423, 87.0837, -38.7976, 0.07", "-33.2665, 88.1543, -39.1432, 0.15", "-33.5064, 89.0313, -39.4429, 0.15", "-33.7161, 89.8952, -39.7317, 0.15", "-33.8357, 90.4391, -39.8989, 0.37", "-33.9492, 91.0241, -40.0721, 0.37", "-34.1188, 92.0421, -40.3532, 0.07", "-34.2855, 93.197, -40.6368, 0.07", "-34.4125, 94.1875, -40.8281, 0.07", "-34.5204, 95.181, -40.9826, 0.07", "-34.5963, 96.0996, -41.0895, 0.29", "-34.6124, 96.3584, -41.1112, 0.29", "-34.6949, 98.2422, -41.2006, 0.07", "-34.7658, 99.7258, -41.2347, 0.07", "-34.8251, 100.559, -41.2566, 0.07", "-34.8955, 101.466, -41.2844, 0.22", "-39.7959, 111.686, -45.7094, 0.22", "-45.6653, 120.981, -50.7632, 0.22", "-50.569, 130.756, -56.0186, 0.22", "-55.0801, 140.069, -62.2873, 0.22", "-57.5681, 149.49, -69.47, 0.22", "-60.6206, 157.197, -78.1352, 0.22", "-62.3469, 164.705, -87.3089, 0.22", "-64.3861, 172.051, -96.5369, 0.22", "-65.9388, 177.59, -106.929, 0.22", "-66.6194, 183.391, -117.285, 0.22", "-68.8156, 189.763, -127.114, 0.22", "-71.3702, 196.224, -136.803, 0.22", "-72.891, 202.779, -146.65, 0.22" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.294802, 16.2697, -8.76344, 0.22", "0.267575, 16.1038, -9.65433, 0.22", "0.793712, 16.0129, -10.3932, 0.22", "1.7715, 15.9476, -11.6066, 0.22", "2.46048, 15.9706, -12.4145, 0.22", "3.20848, 16.0645, -13.2806, 0.15", "3.80509, 16.1744, -13.9776, 0.15", "4.34733, 16.3538, -14.6341, 0.52", "5.01421, 16.6465, -15.4157, 0.22", "5.5533, 16.9412, -16.0332, 0.22", "5.91675, 17.127, -16.4904, 0.22", "6.06076, 17.1922, -16.7062, 0.22", "6.39065, 17.352, -17.3482, 0.22", "6.55659, 17.4646, -17.7553, 0.22", "6.88538, 17.7274, -18.6255, 0.22", "7.44386, 18.1338, -19.9293, 0.22", "7.74001, 18.3288, -20.5574, 0.22", "8.15891, 18.5499, -21.4099, 0.22", "8.52795, 18.7052, -22.1533, 0.22", "8.89254, 18.7988, -22.8902, 0.22", "9.32878, 18.8107, -23.7433, 0.15", "9.81426, 18.7109, -24.495, 0.15", "10.6028, 18.467, -25.5003, 0.15", "10.9569, 18.3553, -25.8838, 0.15", "11.6102, 18.1774, -26.5515, 0.15", "12.1061, 18.1241, -26.9952, 0.15", "12.8113, 18.1563, -27.5772, 0.15", "13.2602, 18.226, -27.9263, 0.29", "13.9003, 18.3648, -28.4325, 0.59", "14.657, 18.5108, -29.0611, 0.44", "15.4976, 18.6027, -29.8626, 0.07", "16.0246, 18.5626, -30.4645, 0.07", "16.3309, 18.4729, -30.8695, 0.22", "16.8183, 18.2624, -31.5712, 0.44", "17.1186, 18.1119, -32.0266, 0.22", "17.6549, 17.8475, -32.8124, 0.52", "18.3945, 17.5191, -33.8885, 0.15", "19.2477, 17.227, -35.0721, 0.15", "19.6204, 17.1356, -35.5177, 0.22", "20.2471, 17.0617, -36.1422, 0.29", "21.4973, 17.0766, -37.1836, 0.07", "22.0969, 17.1534, -37.5932, 0.07", "22.5804, 17.2615, -37.8543, 0.07", "23.9302, 17.672, -38.48, 0.15", "25.4236, 18.1622, -39.123, 0.15", "26.4617, 18.5415, -39.5436, 0.15", "27.4861, 18.9942, -39.9401, 0.15", "28.6219, 19.5263, -40.3837, 0.15", "29.1605, 19.8004, -40.6189, 0.15", "37.0338, 19.5252, -50.1657, 0.15", "43.6434, 18.4116, -60.5792, 0.15", "51.3748, 16.0477, -69.9869, 0.15", "59.3161, 11.351, -78.3793, 0.15", "67.4042, 6.7274, -86.6675, 0.15", "76.6407, 3.88504, -94.4621, 0.15", "86.3001, -0.7638, -100.835, 0.15", "97.6887, -3.04576, -105.187, 0.15", "109.018, -4.15011, -110.067, 0.15", "121.101, -2.89666, -112.443, 0.15", "133.016, -3.38597, -115.766, 0.15", "145.26, -4.12532, -117.446, 0.15", "157.37, -6.62689, -118.463, 0.15", "169.148, -10.6425, -118.798, 0.15", "181.211, -12.9747, -120.506, 0.15", "192.542, -16.9124, -123.826, 0.15", "204.604, -19.136, -125.665, 0.15", "216.885, -19.4114, -127.184, 0.15", "229.202, -18.8945, -128.277, 0.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "35.7769, -13.6045, 0.0, 0.15", "49.8139, -18.8925, 0.0, 0.15", "63.8509, -24.1805, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "16.7182, -21.2011, 16.0033, 0.44", "17.0444, -22.074, 15.7191, 0.44", "17.3432, -22.9065, 15.4898, 0.15", "17.5384, -23.4703, 15.354, 0.29", "17.8004, -24.2635, 15.1824, 0.29", "18.0117, -24.8993, 15.0554, 0.22", "18.1707, -25.3661, 14.9681, 0.22", "18.4144, -26.076, 14.8706, 0.29", "18.647, -26.7211, 14.7982, 0.29", "18.8962, -27.3972, 14.7298, 0.29", "19.0694, -27.8558, 14.6825, 0.22", "19.2843, -28.4031, 14.6285, 0.22", "19.4347, -28.7517, 14.5954, 0.22", "19.6168, -29.1499, 14.5574, 0.22", "19.8008, -29.5344, 14.5245, 0.22", "19.908, -29.7351, 14.5095, 0.22", "20.1441, -30.1425, 14.4847, 0.29", "20.4456, -30.6282, 14.4741, 0.29", "20.7939, -31.148, 14.4952, 0.22", "20.9757, -31.3974, 14.5377, 0.22", "21.3527, -31.8675, 14.6941, 0.29", "21.7666, -32.346, 14.938, 0.29", "21.9979, -32.5986, 15.0985, 0.29", "22.3262, -32.9553, 15.3647, 0.22", "22.8259, -33.5101, 15.7958, 0.37", "23.2274, -33.9671, 16.153, 0.22", "23.6811, -34.5095, 16.5711, 0.15", "24.0278, -34.9408, 16.8817, 0.22", "24.3951, -35.4209, 17.1795, 0.22", "24.7043, -35.8637, 17.416, 0.15", "24.9996, -36.3103, 17.6188, 0.15", "25.2487, -36.6914, 17.7814, 0.15", "25.61, -37.2626, 18.0203, 0.22", "25.91, -37.7372, 18.2298, 0.22", "26.3159, -38.3579, 18.5081, 0.15", "26.7458, -39.0154, 18.8235, 0.15", "27.0915, -39.5686, 19.0799, 0.15" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "16.7182, -21.2011, 16.0033, 0.22", "16.2974, -21.8595, 16.4974, 0.22", "15.912, -22.4969, 16.9382, 0.22", "15.6283, -23.07, 17.3339, 0.22", "15.5053, -23.3888, 17.5463, 0.29", "15.183, -24.3795, 18.1877, 0.22", "14.8847, -25.4231, 18.8086, 0.29", "14.6637, -26.4262, 19.3855, 0.22", "14.5207, -27.3173, 19.8274, 0.22", "14.4402, -28.0308, 20.1682, 0.22", "14.4186, -28.2519, 20.2784, 0.22", "14.3297, -29.3193, 20.8487, 0.15", "14.2698, -30.1081, 21.326, 0.15", "14.1954, -30.7992, 21.8054, 0.59", "14.0446, -31.9775, 22.7692, 0.22", "13.9651, -32.6273, 23.4299, 0.22", "13.9128, -33.2183, 24.1094, 0.22", "13.8867, -33.6983, 24.7382, 0.37", "13.8784, -34.3261, 25.6203, 0.37", "13.9227, -34.8888, 26.4592, 0.15", "14.0645, -35.7161, 27.7119, 0.15", "14.132, -36.0147, 28.1641, 0.15", "14.2103, -36.4359, 28.7662, 0.15", "14.2566, -36.8106, 29.2641, 0.15", "14.267, -37.3628, 29.9116, 0.22", "14.1924, -38.0918, 30.6882, 0.22", "14.1175, -38.4986, 31.1327, 0.22", "14.0073, -39.0428, 31.7571, 0.22", "13.8865, -39.7238, 32.5951, 0.22", "13.8372, -40.0725, 33.0426, 0.29", "13.7606, -40.7297, 33.9433, 0.22", "13.7407, -41.5503, 35.128, 0.22", "13.7644, -41.9313, 35.7096, 0.07", "13.8688, -42.6042, 36.7212, 0.07", "13.9856, -43.2741, 37.6721, 0.07", "14.1145, -43.8263, 38.4549, 0.15", "14.3005, -44.4775, 39.3223, 0.15", "14.4238, -44.8991, 39.8309, 0.15", "14.635, -45.6594, 40.7173, 0.07", "14.8509, -46.4656, 41.5723, 0.44", "15.1452, -47.5522, 42.7019, 0.15", "15.3622, -48.3176, 43.5054, 0.15", "15.4843, -48.8182, 44.0441, 0.59", "15.6171, -49.4955, 44.8088, 0.59", "15.6869, -50.0146, 45.426, 0.22", "15.7395, -50.7076, 46.25, 0.22", "15.7358, -51.6438, 47.3452, 0.22", "15.7046, -52.2985, 48.1375, 0.22", "15.6849, -52.5472, 48.4459, 0.22", "15.6262, -53.1678, 49.2151, 0.15", "15.5695, -53.7246, 49.9126, 0.29", "15.5346, -54.2104, 50.5066, 0.29", "15.5277, -54.505, 50.8747, 0.29", "15.5469, -54.8453, 51.3326, 0.29", "15.5935, -55.2906, 51.9371, 0.44", "15.6298, -55.7229, 52.5845, 0.59", "15.6593, -56.2272, 53.3705, 0.22", "15.6915, -56.8701, 54.3747, 0.22", "15.7035, -57.2219, 54.9478, 0.22", "15.7015, -57.4778, 55.3685, 0.22", "15.6202, -58.2917, 56.7167, 0.22", "15.5571, -58.623, 57.2738, 0.22", "15.4715, -58.9209, 57.7652, 0.37", "15.1273, -59.8328, 59.279, 0.15", "14.765, -60.6074, 60.6803, 0.22", "14.4276, -61.1739, 61.8091, 0.22", "14.1551, -61.5652, 62.6596, 0.22", "13.9459, -61.8158, 63.2978, 0.22", "13.7375, -62.0231, 63.9349, 0.22", "12.9144, -62.7076, 66.5038, 0.15", "12.6995, -62.8573, 67.2533, 0.15", "12.5772, -62.9445, 67.7872, 0.22", "12.4484, -63.072, 68.6126, 0.22", "12.3805, -63.2049, 69.2649, 0.22", "12.361, -63.2812, 69.5223, 0.22", "12.2716, -63.7866, 70.6385, 0.22", "12.1943, -64.2862, 71.5179, 0.22", "11.995, -65.4102, 73.1983, 0.07", "11.8102, -66.3686, 74.4279, 0.07", "11.6932, -66.9692, 75.1003, 0.22", "11.3763, -68.6366, 76.7183, 0.15", "11.2637, -69.264, 77.2096, 0.29", "11.1877, -69.6854, 77.4689, 0.29", "10.9809, -70.7984, 78.0214, 0.15", "10.8155, -71.6273, 78.3833, 0.15", "10.6646, -72.34, 78.6596, 0.37", "10.4425, -73.3395, 78.9951, 0.44", "10.1686, -74.5075, 79.3888, 0.15", "9.90277, -75.6213, 79.7737, 0.15", "9.67314, -76.5701, 80.1475, 0.15", "9.48276, -77.3314, 80.5116, 0.22", "9.28562, -78.1465, 80.9702, 0.22", "9.03476, -79.2672, 81.6705, 0.15", "8.93099, -79.7883, 82.0154, 0.22", "8.73949, -81.0086, 82.903, 0.07", "8.61325, -82.1975, 83.8014, 0.07", "8.55154, -83.1417, 84.4976, 0.07", "8.55043, -83.2991, 84.6009, 0.07", "8.59673, -84.0224, 85.0105, 0.15", "8.86138, -86.069, 85.9677, 0.15", "9.03942, -87.0251, 86.3353, 0.15", "9.20738, -87.7745, 86.5841, 0.59", "9.51789, -89.0175, 87.0045, 0.07", "9.69963, -89.7083, 87.2536, 0.22", "10.0601, -90.8885, 87.7039, 0.07", "10.3464, -91.6874, 88.019, 0.07", "10.711, -92.5629, 88.4231, 0.22", "11.2787, -93.754, 89.0434, 0.07", "11.6393, -94.4629, 89.4497, 0.07", "12.037, -95.2199, 89.8804, 0.15", "12.4805, -96.044, 90.3359, 0.07", "12.8984, -96.8315, 90.805, 0.22", "13.5705, -98.0658, 91.5703, 0.07", "14.1984, -99.2378, 92.2821, 0.07", "14.5859, -99.9956, 92.7243, 0.07", "15.0819, -101.045, 93.3131, 0.15", "15.6256, -102.27, 93.9792, 0.15", "16.2046, -103.686, 94.7169, 0.07", "16.6667, -104.876, 95.2661, 0.07", "16.9599, -105.721, 95.5991, 0.07", "17.0823, -106.126, 95.7367, 0.29", "17.3768, -107.185, 96.0364, 0.29", "17.7201, -108.546, 96.3627, 0.07", "18.0429, -109.888, 96.6828, 0.07", "18.3988, -111.301, 97.0126, 0.07", "18.7231, -112.553, 97.2983, 0.07", "19.0421, -113.799, 97.4717, 0.07", "19.1839, -114.367, 97.5049, 0.66", "19.6877, -116.47, 97.4863, 0.07", "19.9803, -117.915, 97.348, 0.07", "20.2241, -119.72, 96.974, 0.07", "20.3987, -122.376, 96.1586, 0.07", "20.403, -122.95, 95.9368, 0.07", "20.3816, -123.523, 95.6807, 0.29", "20.2267, -125.101, 94.8893, 0.07", "20.0146, -126.909, 93.9575, 0.07", "19.9598, -127.399, 93.7319, 0.07", "19.8874, -128.211, 93.4429, 0.22", "19.8541, -128.641, 93.2955, 0.22", "19.7475, -130.504, 92.7103, 0.07", "19.7169, -131.802, 92.3828, 0.07", "19.7281, -133.782, 91.9388, 0.07", "19.7349, -134.786, 91.7089, 0.07" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "20.8972, -34.8489, 4.15967, 0.22", "20.7386, -35.3692, 5.28055, 0.22", "20.6279, -35.7563, 6.25682, 0.22", "20.4967, -36.0806, 7.29507, 0.22", "20.4009, -36.2246, 7.82402, 0.22", "20.3473, -36.3153, 8.13054, 0.22", "20.2246, -36.5712, 8.90259, 0.22", "20.1828, -36.6759, 9.20419, 0.22", "20.0867, -36.9968, 9.98075, 0.22", "19.866, -37.7271, 11.4772, 0.22", "19.6922, -38.1825, 12.296, 0.22", "19.5155, -38.5663, 12.9209, 0.22", "19.3925, -38.832, 13.308, 0.22", "19.1679, -39.3841, 14.0546, 0.22", "19.0274, -39.8395, 14.6084, 0.22", "18.9274, -40.384, 15.2351, 0.22", "18.8768, -40.6743, 15.619, 0.22", "18.8429, -40.8812, 15.9353, 0.22", "18.8058, -41.1302, 16.3494, 0.22", "18.739, -41.4953, 16.9445, 0.22", "18.6656, -42.0697, 17.7985, 0.29", "18.657, -42.5993, 18.4981, 0.29", "18.6682, -42.9776, 18.9547, 0.29", "18.6738, -43.3178, 19.3151, 0.22", "18.6809, -43.911, 19.8765, 0.22", "18.7224, -44.4506, 20.3507, 0.15", "18.8642, -45.2958, 21.0284, 0.22", "19.1338, -46.254, 21.7215, 0.15", "19.3911, -46.958, 22.1927, 0.22", "19.7014, -47.7487, 22.6662, 0.22", "20.0519, -48.6699, 23.1317, 0.22", "20.189, -49.0753, 23.305, 0.22", "20.3986, -49.7464, 23.5248, 0.22", "20.5971, -50.3809, 23.7087, 0.22", "20.9233, -51.43, 24.0162, 0.15", "21.1492, -52.228, 24.2495, 0.29", "21.3806, -53.2909, 24.5761, 0.22", "21.5759, -54.4489, 24.9953, 0.22", "21.6766, -55.2597, 25.3434, 0.22", "21.7151, -55.8842, 25.6839, 0.29", "21.7176, -56.5356, 26.0887, 0.29", "21.6443, -57.4499, 26.7036, 0.15", "21.522, -58.156, 27.207, 0.29", "21.3264, -58.9464, 27.7846, 0.52", "20.8782, -60.4917, 28.9283, 0.22", "20.6449, -61.2124, 29.496, 0.15", "20.4793, -61.6923, 29.9027, 0.22", "20.2256, -62.4943, 30.662, 0.15", "20.0759, -63.0331, 31.2201, 0.44", "19.8736, -63.9608, 32.245, 0.15", "19.798, -64.5107, 32.8721, 0.29", "19.755, -65.0527, 33.5141, 0.29", "19.7492, -65.9659, 34.5484, 0.15", "19.7602, -66.246, 34.8552, 0.15", "19.7894, -66.6287, 35.2722, 0.22", "19.876, -67.4898, 36.1472, 0.15", "19.9708, -68.2265, 36.8636, 0.15", "20.038, -68.7742, 37.3718, 0.15", "20.1014, -69.414, 37.95, 0.15", "20.1706, -69.9235, 38.4398, 0.37", "20.2717, -70.4509, 38.9956, 0.74", "20.492, -71.1847, 39.8674, 0.22", "20.6491, -71.6088, 40.4615, 0.22", "20.8686, -72.2024, 41.4797, 0.15", "20.9818, -72.5162, 42.1037, 0.15", "21.0576, -72.7364, 42.6051, 0.29", "21.141, -73.0164, 43.4278, 0.44", "21.254, -73.4094, 44.8296, 0.29", "21.3522, -73.7436, 46.0822, 0.29", "21.4209, -73.9676, 46.8658, 0.29", "21.4615, -74.1316, 47.3193, 0.29", "21.5893, -74.6556, 48.4244, 0.29", "21.7007, -75.045, 49.0687, 0.22", "21.8884, -75.5293, 49.7275, 0.22", "22.162, -76.1262, 50.4374, 0.22", "22.4717, -76.8186, 51.1996, 0.22", "22.7481, -77.4454, 51.8568, 0.37", "23.1975, -78.4336, 52.8686, 0.22", "23.4459, -78.9978, 53.4807, 0.15", "23.5904, -79.3158, 53.842, 0.22", "23.885, -80.0797, 54.7281, 0.07", "24.0949, -80.6878, 55.4463, 0.07", "24.2896, -81.3702, 56.2444, 0.07", "24.4183, -82.0619, 56.9992, 0.07", "24.4528, -82.5717, 57.535, 0.88", "24.4235, -83.7446, 58.7708, 0.07", "24.3725, -84.3852, 59.4266, 0.07", "24.3269, -84.7414, 59.7914, 0.22", "24.1951, -85.9152, 61.0253, 0.07", "24.1337, -86.8279, 62.0335, 0.07", "24.103, -87.7554, 63.0909, 0.22", "24.1285, -88.2072, 63.6169, 0.66", "24.2605, -89.1458, 64.7331, 0.07", "24.485, -90.1062, 65.8943, 0.07", "24.7402, -90.8275, 66.7444, 0.07", "24.9143, -91.1963, 67.1782, 0.59", "25.3967, -92.0706, 68.2015, 0.07", "25.8379, -92.7938, 69.1278, 0.07", "26.222, -93.357, 69.8979, 0.07", "26.5025, -93.7678, 70.5137, 0.22", "26.829, -94.2336, 71.2927, 0.37", "27.1058, -94.6187, 72.0387, 0.22", "27.4901, -95.1516, 73.3133, 0.22", "27.6485, -95.3724, 73.9136, 0.37", "27.95, -95.881, 75.2388, 0.15", "28.1894, -96.3941, 76.4477, 0.15", "28.3808, -96.9336, 77.5295, 0.15", "28.5958, -97.6249, 78.6946, 0.15", "28.8089, -98.3019, 79.681, 0.22", "29.0751, -99.0792, 80.7146, 0.07", "29.2196, -99.4788, 81.1804, 0.29", "29.412, -100.027, 81.7151, 0.29", "29.8032, -101.071, 82.6126, 0.07", "30.1794, -102.007, 83.3596, 0.07", "30.3585, -102.426, 83.726, 0.44", "30.6286, -103.013, 84.2927, 0.52", "31.156, -104.188, 85.515, 0.07", "31.5027, -105.001, 86.3875, 0.22", "32.0012, -106.278, 87.7555, 0.07", "32.3838, -107.397, 88.8717, 0.29", "32.8304, -108.932, 90.3577, 0.07", "33.0666, -109.832, 91.1904, 0.07", "33.1778, -110.354, 91.6373, 0.29", "33.2787, -111.0, 92.1076, 0.66", "33.5024, -113.198, 93.4092, 0.07", "33.6013, -114.599, 94.0826, 0.15", "33.6298, -115.345, 94.3911, 0.37", "33.6493, -116.263, 94.7276, 0.59", "33.6575, -117.677, 95.2172, 0.07", "33.6272, -119.39, 95.8208, 0.15", "33.6145, -119.992, 96.0311, 0.29", "33.6299, -120.853, 96.3443, 0.74", "33.7204, -122.492, 97.0088, 0.07", "33.8463, -123.635, 97.5242, 0.22", "33.9837, -124.534, 97.9778, 0.22", "34.2286, -125.888, 98.6598, 0.07", "34.483, -127.324, 99.3967, 0.07", "34.6093, -127.957, 99.7268, 0.07", "34.7244, -128.516, 100.039, 0.29", "34.8954, -129.481, 100.6, 0.44", "35.0318, -130.609, 101.299, 0.07", "35.0428, -131.998, 102.162, 0.07", "34.9909, -132.906, 102.708, 0.07", "34.8676, -134.041, 103.354, 0.07", "34.6632, -135.149, 103.955, 0.15", "34.3336, -136.456, 104.705, 0.37", "33.743, -138.395, 105.9, 0.07", "33.4906, -139.121, 106.351, 0.07", "33.234, -139.78, 106.784, 0.15", "32.7263, -140.975, 107.593, 0.07", "31.8188, -142.919, 108.971, 0.07", "31.3688, -143.799, 109.662, 0.07", "30.9742, -144.49, 110.324, 0.07", "30.6171, -145.09, 110.92, 0.07", "30.3591, -145.539, 111.369, 0.22", "30.018, -146.158, 111.931, 0.37", "29.4835, -147.167, 112.621, 0.07", "28.9359, -148.331, 113.288, 0.22", "28.6007, -149.168, 113.701, 0.07", "28.2127, -150.37, 114.207, 0.22", "27.8371, -151.957, 114.76, 0.07", "27.3938, -154.493, 115.509, 0.07", "27.209, -155.921, 115.841, 0.07", "27.1325, -156.728, 115.991, 0.07", "27.0698, -157.572, 116.129, 0.22", "26.9165, -159.861, 116.476, 0.07", "26.8101, -161.28, 116.717, 0.07", "26.6871, -162.443, 116.937, 0.07", "26.5281, -163.426, 117.138, 0.22", "26.3074, -164.408, 117.377, 0.22", "25.9064, -165.819, 117.76, 0.07", "25.6141, -166.672, 118.019, 0.07", "25.2827, -167.548, 118.295, 0.29", "24.9141, -168.441, 118.615, 0.07", "24.5198, -169.331, 118.957, 0.07", "24.0372, -170.401, 119.353, 0.22" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "20.8972, -34.8489, 4.15967, 0.29", "21.03, -35.3574, 4.17325, 0.29", "21.1617, -36.0385, 4.22437, 0.22", "21.2846, -36.7184, 4.28598, 0.22", "21.4051, -37.2914, 4.34192, 0.22", "21.6152, -38.2042, 4.4331, 0.37", "21.8225, -39.0384, 4.51647, 0.22", "22.0678, -39.9776, 4.62644, 0.22", "22.239, -40.5682, 4.69864, 0.29", "22.4943, -41.3573, 4.80258, 0.29", "22.5921, -41.6185, 4.84612, 0.52", "22.7508, -41.9603, 4.92463, 0.81", "23.1348, -42.6544, 5.10861, 1.03", "23.7099, -43.5964, 5.36772, 0.44", "24.3424, -44.6283, 5.65705, 0.59", "24.8382, -45.4849, 5.88624, 0.37", "25.5038, -46.6581, 6.17767, 0.29", "25.967, -47.4908, 6.37281, 0.29", "26.3325, -48.1405, 6.52377, 0.29", "26.7937, -48.9538, 6.7323, 0.44", "27.4597, -50.0827, 7.03275, 0.59", "27.9215, -50.8566, 7.2364, 0.59", "28.537, -51.9201, 7.52367, 0.37", "29.1336, -52.9626, 7.8295, 0.44", "29.6438, -53.8312, 8.09514, 0.37", "30.1704, -54.6482, 8.34452, 0.59", "30.785, -55.5078, 8.59744, 0.29", "31.3334, -56.2033, 8.74894, 0.59", "31.5923, -56.5014, 8.78765, 0.59", "32.3349, -57.3232, 8.84658, 0.37", "33.016, -58.029, 8.89331, 0.44", "33.5152, -58.5166, 8.94954, 0.44", "34.5748, -59.4449, 9.11118, 0.29", "35.1595, -59.9056, 9.21796, 0.22", "35.8304, -60.4188, 9.36659, 0.37", "36.7811, -61.1451, 9.61212, 0.29", "37.4561, -61.6754, 9.80396, 0.29", "38.1762, -62.2182, 10.015, 0.66", "38.8618, -62.6827, 10.2262, 0.66", "39.7161, -63.1735, 10.4555, 0.37", "40.6117, -63.5951, 10.6834, 0.37", "41.6389, -64.0156, 10.9584, 0.29", "42.535, -64.3714, 11.2205, 0.22", "43.1526, -64.642, 11.439, 0.22", "43.5731, -64.8655, 11.6211, 0.29", "44.438, -65.4432, 12.0877, 0.59", "45.0398, -65.9576, 12.4505, 0.44", "45.5388, -66.467, 12.7556, 0.29", "46.2445, -67.216, 13.1207, 0.44", "46.9599, -67.942, 13.3908, 0.29", "48.0524, -68.9522, 13.6409, 0.29", "48.9103, -69.6193, 13.6763, 0.52", "49.6979, -70.0946, 13.5933, 0.52", "50.8008, -70.6045, 13.3882, 0.29", "51.8443, -70.9708, 13.1367, 0.59", "52.6042, -71.1812, 12.9186, 0.29", "53.7272, -71.4382, 12.5502, 0.44", "54.7312, -71.6544, 12.2114, 0.66", "56.3915, -72.0649, 11.6469, 0.59", "57.5139, -72.4173, 11.2948, 0.29", "58.0364, -72.6218, 11.1521, 0.29", "58.3763, -72.7945, 11.0687, 0.29", "58.83, -73.077, 10.9659, 0.37", "59.4746, -73.5616, 10.8093, 0.37", "60.1334, -74.1871, 10.6323, 0.29", "60.9055, -75.0543, 10.4091, 0.37", "61.979, -76.3362, 10.0727, 0.29", "62.5595, -77.038, 9.87382, 0.29", "62.8787, -77.4283, 9.74616, 0.29", "63.538, -78.2737, 9.43229, 0.37", "64.0578, -79.0107, 9.13219, 0.52", "64.6491, -79.8978, 8.77961, 0.81", "65.1202, -80.6138, 8.56075, 0.29", "65.5615, -81.2643, 8.44931, 0.22", "65.9761, -81.8383, 8.4328, 0.22", "66.535, -82.5752, 8.50945, 0.29", "67.2776, -83.5817, 8.69015, 0.44", "68.106, -84.7819, 8.93665, 0.44", "68.7741, -85.7552, 9.12421, 0.59", "69.4978, -86.7774, 9.30725, 0.59", "70.173, -87.689, 9.43777, 0.44", "71.1884, -88.9745, 9.54972, 0.44", "72.0547, -90.0345, 9.56252, 0.22", "72.5771, -90.6537, 9.53828, 0.22", "72.8325, -90.9453, 9.52441, 0.52", "73.415, -91.5688, 9.47515, 0.88", "74.631, -92.762, 9.3391, 0.29", "75.305, -93.3379, 9.24422, 0.29", "76.137, -93.9625, 9.08398, 0.29", "76.6507, -94.3311, 8.95146, 0.29", "77.2415, -94.7488, 8.74732, 0.29", "77.6805, -95.0778, 8.55169, 0.37", "78.2552, -95.5703, 8.23997, 0.52", "78.9074, -96.1884, 7.88253, 0.44", "79.4163, -96.72, 7.62262, 0.37", "79.8198, -97.1573, 7.46086, 0.37", "80.5897, -97.9832, 7.22179, 0.29", "81.3104, -98.7167, 7.05082, 0.29", "81.8455, -99.1933, 6.97309, 0.22", "82.2974, -99.5039, 6.91466, 0.22", "83.1594, -99.9715, 6.80406, 0.29", "83.9067, -100.337, 6.67776, 0.29", "84.4456, -100.617, 6.56152, 0.44", "85.0026, -100.981, 6.39693, 0.52", "85.9267, -101.826, 6.04727, 0.29", "86.4006, -102.416, 5.8176, 0.37", "86.9452, -103.252, 5.52579, 0.66", "87.4944, -104.177, 5.2108, 0.29", "87.8956, -104.883, 4.9685, 0.37", "88.3913, -105.761, 4.67226, 0.59", "89.1656, -107.103, 4.27039, 0.22", "89.9232, -108.324, 3.88531, 0.29", "90.4769, -109.143, 3.61727, 0.59", "90.7732, -109.555, 3.47561, 0.96", "90.9286, -109.769, 3.40513, 0.96", "91.3161, -110.302, 3.22471, 0.66" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "3.66609, -28.1005, -33.0431, 0.22", "0.334997, -33.4217, -43.2605, 0.22", "-1.49423, -41.6122, -52.0378, 0.22", "-1.51122, -49.7492, -61.0445, 0.22", "-1.12812, -57.8674, -70.0577, 0.22", "1.32415, -64.5361, -79.7903, 0.22", "4.23941, -71.7826, -89.0061, 0.22", "7.34075, -77.687, -98.9962, 0.22", "11.3645, -82.3779, -109.235, 0.22", "13.5802, -86.694, -120.154, 0.22", "18.3721, -89.9805, -130.555, 0.22", "25.2452, -90.7644, -140.203, 0.22", "32.6702, -93.5013, -149.088, 0.22", "38.2864, -95.5422, -159.364, 0.22" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "3.66609, -28.1005, -33.0431, 0.15", "0.994116, -32.8927, -45.1917, 0.22", "0.707146, -35.2012, -58.2518, 0.22", "1.18762, -38.0092, -71.2182, 0.22" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-16.3828, -24.4614, -41.8071, 0.22", "-17.0968, -30.8585, -51.58, 0.22", "-18.2527, -36.6612, -61.6387, 0.22", "-21.223, -42.3897, -71.343, 0.22", "-23.5541, -48.183, -81.1913, 0.22", "-25.6489, -55.3403, -90.2473, 0.22", "-27.2855, -61.5855, -99.9899, 0.22", "-30.3994, -70.1824, -107.459, 0.22", "-33.2547, -80.1242, -113.338, 0.22", "-37.3374, -88.8521, -120.156, 0.22", "-40.0401, -98.0105, -127.167, 0.22", "-42.6223, -105.969, -135.45, 0.22", "-46.3505, -112.658, -144.286, 0.22" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-16.3828, -24.4614, -41.8071, 0.66", "-17.3764, -31.1807, -50.3785, 0.22", "-19.6045, -37.8569, -58.7469, 0.22", "-23.6242, -43.1623, -67.3363, 0.22", "-28.5908, -47.8966, -75.7321, 0.22", "-33.4325, -53.173, -83.9043, 0.22", "-37.8694, -56.4798, -93.1725, 0.22", "-42.6573, -59.475, -102.362, 0.22", "-45.9033, -62.9905, -112.044, 0.22", "-48.0771, -68.1771, -121.335, 0.22", "-49.3025, -74.335, -130.252, 0.22", "-51.87, -81.2211, -138.366, 0.22", "-53.6957, -86.577, -147.644, 0.22" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-17.2429, 4.86271, -11.5035, 0.66", "-17.2903, 5.22221, -12.0287, 0.66", "-17.298, 5.70282, -12.7015, 0.22", "-17.2871, 5.94604, -13.0185, 0.22", "-17.2821, 6.20169, -13.3475, 0.22", "-17.2891, 6.40319, -13.6105, 0.22", "-17.3051, 6.53772, -13.7919, 0.52", "-17.3408, 6.73365, -14.0768, 0.81", "-17.458, 7.07368, -14.5813, 0.22", "-17.5749, 7.29434, -14.8867, 0.22", "-17.6837, 7.45683, -15.0973, 0.22", "-17.8489, 7.67494, -15.3782, 0.22", "-18.01, 7.86832, -15.6204, 0.37", "-18.3194, 8.21501, -16.0344, 0.66", "-18.5967, 8.51548, -16.3579, 0.22", "-18.9778, 8.95781, -16.773, 0.15", "-19.1962, 9.22665, -16.9978, 0.52", "-19.3354, 9.39986, -17.1277, 0.52", "-19.5363, 9.63848, -17.2864, 0.37", "-19.8952, 10.0356, -17.5302, 0.15", "-20.0923, 10.2393, -17.6434, 0.22", "-20.2226, 10.3768, -17.7054, 0.15", "-20.558, 10.751, -17.8333, 0.29", "-20.7964, 11.0445, -17.9001, 0.29", "-20.9333, 11.2293, -17.9174, 0.29", "-21.2049, 11.6309, -17.9191, 0.52", "-21.4605, 12.0116, -17.898, 0.22", "-21.8156, 12.5564, -17.8484, 0.22", "-22.1077, 13.0136, -17.7881, 0.29", "-22.3239, 13.3428, -17.7477, 0.29", "-22.5813, 13.7152, -17.7089, 0.37", "-23.0038, 14.2875, -17.6763, 0.22", "-23.2172, 14.5551, -17.6821, 0.15", "-23.3866, 14.7762, -17.717, 0.15", "-23.5931, 15.0663, -17.8105, 0.15", "-23.7569, 15.333, -17.9302, 0.29", "-23.9155, 15.6687, -18.1003, 0.88", "-23.9663, 15.8348, -18.1901, 0.88", "-24.0854, 16.4246, -18.5071, 0.44", "-24.1487, 16.7775, -18.7081, 0.22", "-24.2266, 17.2247, -18.9555, 0.22", "-24.2913, 17.5966, -19.1624, 0.15", "-24.3805, 18.0694, -19.4195, 0.15", "-24.4599, 18.4565, -19.62, 0.22", "-24.6006, 19.1164, -19.9233, 0.15", "-24.7502, 19.8355, -20.2144, 0.22", "-24.7981, 20.085, -20.3042, 0.22", "-24.8895, 20.5691, -20.4495, 0.52", "-24.9685, 20.9915, -20.5523, 0.22", "-25.0438, 21.4353, -20.6406, 0.22", "-25.1135, 21.95, -20.7146, 0.22", "-25.1968, 22.5719, -20.794, 0.15", "-25.2904, 23.2285, -20.8763, 0.29", "-25.3491, 23.6377, -20.9304, 0.29", "-25.4624, 24.3702, -21.0306, 0.15", "-25.5411, 24.8488, -21.1041, 0.15", "-25.5894, 25.134, -21.1483, 0.15", "-25.677, 25.5746, -21.2205, 0.29", "-25.8115, 26.1487, -21.3289, 0.15", "-25.8547, 26.3326, -21.3705, 0.15", "-25.946, 26.7451, -21.4854, 0.44", "-26.0091, 27.0958, -21.6059, 0.44", "-26.062, 27.4686, -21.7588, 0.22", "-26.1001, 27.8376, -21.9296, 0.22", "-26.148, 28.4968, -22.2623, 0.15", "-26.1668, 29.0227, -22.5385, 0.15", "-26.1764, 29.7025, -22.8985, 0.07", "-26.1772, 30.1435, -23.1314, 0.15", "-26.1761, 30.4706, -23.3016, 0.52", "-26.1789, 30.6076, -23.3693, 0.52", "-26.2303, 31.2059, -23.6347, 0.15", "-26.2992, 31.6397, -23.809, 0.15", "-26.3501, 31.8559, -23.8857, 0.29", "-26.405, 32.0608, -23.9526, 0.29", "-26.5929, 32.7073, -24.1675, 0.07", "-26.711, 33.1059, -24.302, 0.07", "-26.8362, 33.5045, -24.4321, 0.15", "-26.9584, 33.8967, -24.5553, 0.15", "-27.089, 34.325, -24.685, 0.37", "-27.1232, 34.4474, -24.7212, 0.37", "-27.2212, 34.8518, -24.8364, 0.07", "-27.3073, 35.2835, -24.9474, 0.07", "-27.3984, 35.7997, -25.076, 0.07", "-27.4418, 36.0522, -25.137, 0.07", "-27.511, 36.392, -25.2261, 0.15", "-27.6365, 36.9237, -25.3795, 0.07", "-27.722, 37.2476, -25.4861, 0.15", "-27.8166, 37.5848, -25.6098, 0.29", "-27.9295, 37.967, -25.7577, 0.29", "-28.1535, 38.6625, -26.0362, 0.22", "-28.2741, 39.0158, -26.181, 0.07", "-28.4231, 39.452, -26.3638, 0.07", "-28.4837, 39.6238, -26.4347, 0.29", "-28.6068, 39.9555, -26.5478, 0.59", "-28.7086, 40.2117, -26.6202, 0.44", "-28.9247, 40.7462, -26.7384, 0.15", "-29.0436, 41.0439, -26.7959, 0.15", "-29.2671, 41.6007, -26.8909, 0.22", "-29.4635, 42.0753, -26.9704, 0.07", "-29.5823, 42.3543, -27.0223, 0.22", "-29.7206, 42.7222, -27.1027, 0.29", "-29.8528, 43.106, -27.1978, 0.29", "-29.9757, 43.5123, -27.3124, 0.07", "-30.0643, 43.8637, -27.4256, 0.15", "-30.169, 44.4062, -27.6208, 0.59", "-30.2786, 45.1576, -27.8964, 0.15", "-30.3227, 45.6513, -28.0796, 0.15", "-30.345, 46.2479, -28.2994, 0.15", "-30.3384, 46.4739, -28.3823, 0.29", "-30.3048, 46.8557, -28.5233, 0.29", "-30.2631, 47.1469, -28.6354, 0.07", "-30.1444, 47.807, -28.9034, 0.15", "-29.9859, 48.6064, -29.2362, 0.07", "-29.9265, 48.9141, -29.3659, 0.29", "-29.8721, 49.254, -29.5097, 0.29", "-29.7852, 50.0426, -29.8669, 0.22", "-29.7465, 50.5924, -30.148, 0.07", "-29.7387, 50.8609, -30.3058, 0.22", "-29.744, 51.1296, -30.4839, 0.22", "-29.7914, 51.6895, -30.8857, 0.22", "-29.8781, 52.204, -31.2833, 0.22", "-29.9721, 52.5309, -31.565, 0.22", "-30.1044, 52.8805, -31.9011, 0.15", "-30.1773, 53.0439, -32.0705, 0.15", "-30.2338, 53.1417, -32.1801, 0.15", "-30.3723, 53.3124, -32.3982, 0.15", "-30.4827, 53.4127, -32.5409, 0.15", "-30.6268, 53.5274, -32.706, 0.15", "-30.8464, 53.6879, -32.9679, 0.22", "-31.0092, 53.7983, -33.2113, 0.22", "-31.1956, 53.9058, -33.5326, 0.22", "-31.4503, 54.0526, -34.0181, 0.37", "-31.5803, 54.1306, -34.2885, 0.22", "-31.7001, 54.2108, -34.5538, 0.22", "-31.9273, 54.4331, -35.1603, 0.22", "-32.0148, 54.5702, -35.4565, 0.22", "-32.1132, 54.8326, -35.903, 0.15", "-32.1776, 55.1269, -36.3047, 0.15", "-32.2029, 55.3101, -36.5182, 0.15", "-32.24, 55.7765, -36.9737, 0.15", "-32.2425, 56.0204, -37.176, 0.15", "-32.2331, 56.2406, -37.3485, 0.22", "-32.2125, 56.7311, -37.7222, 0.07", "-32.2143, 57.0238, -37.9299, 0.15", "-32.2319, 57.3663, -38.183, 0.07", "-32.2836, 57.6859, -38.4339, 0.22", "-32.3294, 57.841, -38.5793, 0.22", "-32.4049, 58.0342, -38.806, 0.07", "-32.5003, 58.2343, -39.0895, 0.22", "-32.6309, 58.4928, -39.5043, 0.15", "-32.7461, 58.733, -39.9229, 0.29", "-32.831, 58.9832, -40.3791, 0.07", "-32.8693, 59.1961, -40.7843, 0.07", "-32.8728, 59.3081, -40.9861, 0.07", "-32.858, 59.4769, -41.2668, 0.22", "-32.8395, 59.6376, -41.486, 0.22", "-32.7796, 60.085, -41.998, 0.07", "-32.7367, 60.4084, -42.3225, 0.07", "-32.7033, 60.6838, -42.5719, 0.15", "-32.6508, 61.1132, -42.9504, 0.07", "-32.5886, 61.667, -43.4167, 0.07", "-32.5299, 62.0899, -43.7917, 0.07", "-32.5152, 62.1844, -43.8762, 0.37", "-32.4875, 62.3816, -44.0529, 0.37", "-32.4306, 62.7552, -44.4093, 0.22", "-32.3871, 63.0057, -44.6628, 0.22", "-32.2177, 63.7268, -45.4595, 0.07", "-32.125, 64.039, -45.8364, 0.07", "-32.0258, 64.3253, -46.2213, 0.07", "-31.8901, 64.5941, -46.6564, 0.07", "-31.8412, 64.6738, -46.7926, 0.07", "-31.744, 64.7936, -47.0296, 0.15", "-31.5528, 64.9339, -47.4168, 0.15", "-31.3461, 64.983, -47.7864, 0.15", "-31.0187, 64.9674, -48.31, 0.07", "-32.0447, 70.1071, -51.157, 0.07", "-31.8638, 75.4969, -53.7827, 0.07", "-32.5006, 80.3667, -57.1654, 0.07" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-17.2429, 4.86271, -11.5035, 0.22", "-18.4016, 4.23754, -11.331, 0.22", "-19.0809, 3.89045, -11.2025, 0.22", "-19.6012, 3.64929, -11.1028, 0.15", "-19.9915, 3.47922, -11.0156, 0.22", "-20.5388, 3.24316, -10.8682, 0.22", "-21.6509, 2.76761, -10.5494, 0.15", "-22.214, 2.55696, -10.3693, 0.15", "-23.1309, 2.25891, -10.1151, 0.22", "-23.9851, 2.018, -9.91727, 0.15", "-24.845, 1.76761, -9.71351, 0.15", "-25.312, 1.63014, -9.60296, 0.15", "-26.0574, 1.43903, -9.44505, 0.15", "-27.4729, 1.13134, -9.25724, 0.15", "-28.0517, 1.03004, -9.22978, 0.52", "-36.2044, -0.44011, -8.97844, 0.52", "-44.4136, -0.0145721, -9.84747, 0.52", "-52.471, 0.704779, -11.5515, 0.52", "-60.6892, 1.58494, -11.7199, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "27.0915, -39.5686, 19.0799, 0.22", "27.6746, -40.2784, 19.5335, 0.22", "28.2306, -41.0201, 20.0505, 0.15", "28.6153, -41.6127, 20.4502, 0.22", "29.3274, -42.9129, 21.2877, 0.15", "29.6878, -43.7213, 21.7929, 0.29", "29.9535, -44.399, 22.2093, 0.29", "30.2926, -45.4913, 22.849, 0.15", "30.5134, -46.3067, 23.2948, 0.22", "30.756, -47.1179, 23.7301, 0.29", "31.1789, -48.2849, 24.417, 0.15", "31.5103, -48.9666, 24.8036, 0.15", "31.9005, -49.6052, 25.1808, 0.22", "32.6557, -50.5672, 25.8376, 0.15", "33.3796, -51.3107, 26.4475, 0.22", "34.3688, -52.1854, 27.2674, 0.22", "35.3456, -52.9601, 28.1043, 0.15", "36.0962, -53.5185, 28.8039, 0.22", "36.8752, -54.0831, 29.6445, 0.22", "37.791, -54.7401, 30.771, 0.07", "38.4351, -55.2311, 31.6861, 0.07", "38.9075, -55.5911, 32.3886, 0.15", "39.4861, -56.0176, 33.2647, 0.07", "40.2648, -56.6042, 34.41, 0.07", "40.6154, -56.8749, 34.8855, 0.22", "41.2308, -57.3835, 35.6801, 0.44", "42.1141, -58.1563, 36.7883, 0.22", "42.7427, -58.7431, 37.5594, 0.44", "44.0047, -60.0638, 39.0972, 0.07", "44.7046, -60.8683, 39.9378, 0.22", "45.6416, -62.0747, 41.0852, 0.07", "46.3268, -63.0414, 41.924, 0.22", "46.7043, -63.6462, 42.3959, 0.22", "47.2488, -64.5931, 43.0255, 0.07", "47.5461, -65.1795, 43.3209, 0.29", "47.7965, -65.7795, 43.556, 0.29", "48.3493, -67.2748, 43.9133, 0.07", "48.6298, -68.2523, 44.0503, 0.07", "48.7866, -69.0243, 44.1295, 0.07", "48.9429, -70.3694, 44.2519, 0.07", "48.9602, -71.1644, 44.3207, 0.22", "48.9081, -71.7861, 44.3794, 0.22", "48.5672, -73.7206, 44.5856, 0.07", "48.1852, -75.4444, 44.8394, 0.07", "47.8703, -76.7093, 45.0869, 0.22", "47.5259, -77.9924, 45.412, 0.37", "47.0342, -79.7088, 45.8991, 0.15", "46.5574, -81.2798, 46.4054, 0.29", "46.2916, -82.1182, 46.7194, 0.29", "45.9308, -83.1893, 47.1834, 0.07", "45.615, -84.1014, 47.6239, 0.07", "45.4008, -84.6886, 47.9182, 0.22", "44.8487, -86.1602, 48.6526, 0.15", "44.3755, -87.3461, 49.2146, 0.15", "44.0129, -88.2264, 49.5896, 0.22", "43.2557, -90.0287, 50.3021, 0.07", "42.7048, -91.3707, 50.8217, 0.22", "42.2491, -92.5422, 51.2709, 0.07", "42.1075, -92.9176, 51.4078, 0.22", "41.7136, -94.029, 51.7963, 0.66", "41.1725, -95.644, 52.3699, 0.15", "40.8186, -96.8175, 52.7395, 0.15", "40.5371, -97.7821, 52.9966, 0.15", "40.2473, -98.7165, 53.206, 0.22", "39.9924, -99.5188, 53.3585, 0.29", "39.5901, -100.728, 53.5618, 0.07", "39.015, -102.232, 53.7817, 0.07", "38.5466, -103.263, 53.9588, 0.15", "37.5101, -105.213, 54.3957, 0.07", "37.3669, -105.45, 54.4591, 0.07", "36.6699, -106.478, 54.8254, 0.15", "35.9366, -107.488, 55.3121, 0.07", "34.8183, -108.944, 56.2294, 0.22", "34.0891, -109.879, 56.9216, 0.37", "33.5746, -110.513, 57.4368, 0.37", "32.5889, -111.743, 58.4116, 0.15", "31.5543, -113.104, 59.4254, 0.22", "30.8908, -114.054, 60.086, 0.22", "30.4139, -114.803, 60.5556, 0.22", "30.0405, -115.461, 60.9121, 0.22", "29.2373, -116.979, 61.5825, 0.07", "28.5485, -118.37, 62.1099, 0.07", "28.3005, -118.912, 62.31, 0.22", "27.8609, -119.975, 62.7206, 0.07", "27.6182, -120.6, 62.9688, 0.07", "27.142, -121.915, 63.5194, 0.22", "26.3086, -124.326, 64.5929, 0.07", "25.8478, -125.663, 65.1643, 0.07", "25.4788, -126.701, 65.6076, 0.07", "25.0634, -127.859, 66.1022, 0.22", "24.7746, -128.678, 66.4289, 0.07", "24.575, -129.251, 66.6291, 0.15", "23.7519, -131.413, 67.2434, 0.07", "23.1296, -132.911, 67.6417, 0.07", "22.5892, -134.15, 67.9635, 0.07", "22.2584, -134.943, 68.1615, 0.07", "22.0113, -135.575, 68.2955, 0.07", "21.7197, -136.406, 68.4161, 0.22", "21.2159, -138.199, 68.5084, 0.07", "20.9233, -139.338, 68.5065, 0.22", "20.5852, -140.748, 68.4578, 0.07", "20.3594, -141.831, 68.4171, 0.07", "20.1239, -143.271, 68.3656, 0.15", "19.944, -144.945, 68.2878, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "27.0915, -39.5686, 19.0799, 0.15", "27.1048, -40.6098, 19.7676, 0.15", "27.1354, -41.5074, 20.38, 0.15", "27.1521, -42.0986, 20.8142, 0.15", "27.1673, -42.6647, 21.2568, 0.37", "27.1698, -42.8013, 21.3584, 0.37", "27.1778, -43.5036, 21.8745, 0.15", "27.1771, -44.0437, 22.2865, 0.22", "27.1346, -44.8704, 22.9242, 0.15", "27.0587, -45.6079, 23.5126, 0.15", "26.9539, -46.2945, 24.0442, 0.22", "26.8169, -46.9351, 24.5201, 0.22", "26.6062, -47.7619, 25.1197, 0.15", "26.4036, -48.4831, 25.637, 0.15", "26.2282, -49.0331, 26.0182, 0.15", "26.0232, -49.57, 26.398, 0.81", "25.8185, -50.0239, 26.7593, 0.96" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "91.3161, -110.302, 3.22471, 0.22", "91.6993, -111.391, 2.60337, 0.22", "91.9699, -112.16, 2.19728, 0.22", "92.1418, -112.733, 1.92932, 0.29", "92.3102, -113.363, 1.66037, 0.29", "92.463, -113.963, 1.42879, 0.22", "92.676, -114.785, 1.14219, 0.22", "92.924, -115.747, 0.872448, 0.29", "93.302, -117.237, 0.536472, 0.22", "93.4643, -117.868, 0.433742, 0.44", "93.6966, -118.734, 0.344743, 0.52", "93.9509, -119.664, 0.290357, 0.37", "94.3434, -121.128, 0.253044, 0.22", "94.6155, -122.094, 0.231278, 0.29", "94.7928, -122.654, 0.2159, 0.74", "95.0592, -123.41, 0.171977, 0.81", "95.5589, -124.645, 0.0633861, 0.37", "95.9087, -125.378, -0.0295043, 0.37", "96.3403, -126.157, -0.168615, 0.29", "96.7035, -126.762, -0.304854, 0.29", "97.0318, -127.316, -0.45128, 0.29", "97.3926, -127.943, -0.62143, 0.22", "97.6369, -128.402, -0.734991, 0.22", "97.9484, -129.063, -0.886412, 0.22", "98.1969, -129.653, -1.03389, 0.22", "98.4094, -130.197, -1.19059, 0.22", "98.6021, -130.725, -1.36562, 0.22", "98.9888, -131.784, -1.76459, 0.22", "99.3719, -132.797, -2.1756, 0.44", "99.8399, -133.939, -2.66053, 0.22", "100.092, -134.561, -2.92327, 0.29", "100.341, -135.216, -3.20573, 0.52", "100.51, -135.747, -3.42611, 0.29", "100.654, -136.271, -3.64033, 0.22", "100.85, -137.233, -3.99177, 0.22", "100.992, -138.207, -4.29564, 0.29", "101.118, -139.281, -4.59994, 0.29", "101.207, -140.137, -4.8297, 0.66" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "91.3161, -110.302, 3.22471, 0.22", "91.6424, -111.219, 3.45915, 0.22", "91.8666, -111.752, 3.58159, 0.22", "92.0228, -112.1, 3.65411, 0.22", "92.2394, -112.53, 3.74705, 0.22", "92.6336, -113.222, 3.89505, 0.15", "92.8729, -113.602, 3.98222, 0.15", "92.9955, -113.783, 4.02116, 0.07", "93.2816, -114.183, 4.12196, 0.15", "93.6839, -114.717, 4.27355, 0.07", "93.9477, -115.05, 4.39291, 0.29", "94.3002, -115.47, 4.59153, 0.07", "94.5922, -115.795, 4.78612, 0.07", "94.9776, -116.174, 5.07769, 0.07", "95.1799, -116.345, 5.26145, 0.15", "95.432, -116.549, 5.53023, 0.15", "95.7041, -116.759, 5.89032, 0.37", "95.9375, -116.927, 6.27572, 0.22", "96.1661, -117.08, 6.75611, 0.15", "96.4395, -117.256, 7.55571, 0.22", "96.5699, -117.34, 8.16764, 0.29", "96.6157, -117.361, 9.09481, 0.15", "96.5089, -117.264, 9.76284, 0.07", "96.3318, -117.108, 10.3933, 0.07", "96.1256, -116.916, 10.8675, 0.07", "95.828, -116.621, 11.3331, 0.07", "95.4075, -116.186, 11.8263, 0.07", "95.0583, -115.819, 12.1033, 0.07" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "1.18762, -38.0092, -71.2182, 0.22", "0.196172, -40.3055, -79.3205, 0.22", "-1.75064, -41.5887, -87.4503, 0.22", "-4.73195, -42.7186, -95.2804, 0.22", "-6.98746, -42.9912, -103.418, 0.22", "-8.66927, -42.3777, -111.677, 0.22", "-11.1518, -41.8826, -119.739, 0.22", "-14.8929, -41.6242, -127.311, 0.22", "-17.4312, -42.6833, -135.305, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "1.18762, -38.0092, -71.2182, 0.15", "1.569, -39.8229, -78.6088, 0.22", "1.09537, -42.1131, -85.8796, 0.22", "-0.175513, -45.7184, -92.5589, 0.22", "-2.79075, -49.2498, -98.89, 0.22", "-4.01726, -52.6994, -105.651, 0.22", "-5.43833, -56.1872, -112.357, 0.22", "-7.91495, -60.497, -118.299, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-60.6892, 1.58494, -11.7199, 0.22", "-71.6768, 1.71888, -11.2603, 0.22", "-82.5183, -0.24336, -10.7965, 0.22", "-93.3982, -1.90029, -11.3309, 0.22", "-104.181, -4.22709, -10.9837, 0.22", "-115.072, -4.56487, -9.4551, 0.22", "-125.958, -3.07839, -8.95893, 0.22", "-136.685, -0.94875, -7.75499, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-60.6892, 1.58494, -11.7199, 0.66", "-68.4939, 0.167095, -12.3975, 0.22", "-76.3359, 0.147469, -13.6712, 0.22", "-83.7181, 1.47573, -16.3048, 0.22", "-90.8321, 1.47946, -19.8426, 0.22", "-97.0025, 1.04316, -24.8341, 0.22", "-102.706, -0.629388, -30.1439, 0.22", "-108.188, -1.40521, -35.8539, 0.22", "-113.978, -2.73317, -41.1552, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "101.207, -140.137, -4.8297, 0.07", "102.137, -140.492, -5.39336, 0.07", "102.444, -140.612, -5.57196, 0.22", "102.8, -140.773, -5.77908, 0.22", "103.209, -141.004, -6.03236, 0.22", "103.695, -141.348, -6.36056, 0.22", "104.259, -141.82, -6.7401, 0.15", "104.612, -142.17, -6.98875, 0.29", "105.155, -142.774, -7.35827, 0.07", "105.592, -143.321, -7.63231, 0.15", "106.004, -143.91, -7.86146, 0.15", "106.507, -144.706, -8.10745, 0.07", "106.936, -145.412, -8.28244, 0.07", "107.328, -146.043, -8.40336, 0.07", "107.675, -146.594, -8.48343, 0.22", "108.286, -147.595, -8.6306, 0.15", "108.553, -148.071, -8.71014, 0.15", "108.845, -148.638, -8.82824, 0.15", "109.232, -149.433, -9.01464, 0.15", "109.53, -150.036, -9.18182, 0.15", "109.964, -150.917, -9.4637, 0.15", "110.224, -151.435, -9.66421, 0.15", "110.569, -152.138, -10.0087, 0.15", "110.7, -152.39, -10.162, 0.15", "110.937, -152.782, -10.4405, 0.29", "111.266, -153.214, -10.7597, 0.29", "111.865, -153.863, -11.2421, 0.15", "112.333, -154.347, -11.6074, 0.15", "112.755, -154.792, -11.9331, 0.22", "113.047, -155.099, -12.1454, 0.22", "113.496, -155.551, -12.4342, 0.22", "114.33, -156.346, -12.8783, 0.15", "114.941, -156.915, -13.1579, 0.15", "115.316, -157.272, -13.3286, 0.15", "115.842, -157.788, -13.5598, 0.37", "116.59, -158.549, -13.8995, 0.07", "117.071, -159.046, -14.1362, 0.07", "117.594, -159.57, -14.3985, 0.07", "118.244, -160.175, -14.7352, 0.15", "124.526, -167.98, -16.7004, 0.15", "129.395, -176.781, -18.8058, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "101.207, -140.137, -4.8297, 0.22", "101.052, -141.127, -4.93148, 0.22", "100.964, -142.364, -4.99012, 0.22", "100.941, -142.879, -4.99332, 0.37", "100.884, -143.393, -5.00414, 0.44", "100.783, -144.01, -5.02958, 0.44", "100.587, -145.106, -5.09011, 0.29", "100.514, -145.561, -5.11058, 0.29", "100.434, -146.28, -5.144, 0.29", "100.301, -147.618, -5.25003, 0.22", "100.258, -148.131, -5.30845, 0.29", "100.221, -148.587, -5.37025, 0.29", "100.168, -149.516, -5.52726, 0.22", "100.175, -150.191, -5.63787, 0.37", "100.252, -150.931, -5.7506, 0.59", "100.474, -152.171, -5.89156, 0.22", "100.56, -152.665, -5.93387, 0.22", "100.629, -153.158, -5.96333, 0.29", "100.721, -154.0, -5.99033, 0.29", "100.777, -154.569, -5.99909, 0.29", "100.874, -155.716, -5.99404, 0.29", "100.977, -157.069, -5.95645, 0.22", "101.052, -158.081, -5.89662, 0.44", "101.123, -159.145, -5.80596, 0.44", "101.18, -160.207, -5.70246, 0.22", "101.247, -161.665, -5.5445, 0.22", "101.282, -162.309, -5.47341, 0.37", "101.362, -163.344, -5.36248, 0.59", "101.412, -163.979, -5.29791, 0.15", "101.448, -164.721, -5.22842, 0.22", "101.455, -165.744, -5.13835, 0.29", "101.437, -166.629, -5.08084, 0.29", "101.405, -167.533, -5.02988, 0.29", "101.362, -168.495, -4.98438, 0.22", "101.319, -169.524, -4.95371, 0.22", "101.297, -170.184, -4.96356, 0.22", "101.272, -171.004, -5.01675, 0.29", "101.245, -172.08, -5.13424, 0.37", "101.247, -172.887, -5.24186, 0.88", "101.314, -173.937, -5.38136, 0.29", "101.454, -174.99, -5.50782, 0.22", "101.563, -175.625, -5.57482, 0.44", "101.696, -176.303, -5.63282, 0.59", "101.917, -177.391, -5.69749, 0.22", "102.105, -178.226, -5.70449, 0.22", "102.302, -178.988, -5.67382, 0.29", "102.446, -179.495, -5.62644, 0.29", "102.766, -180.449, -5.52632, 0.29", "103.062, -181.274, -5.46821, 0.22", "103.248, -181.771, -5.46983, 0.29", "103.465, -182.328, -5.51287, 0.29", "103.906, -183.393, -5.66522, 0.59", "104.333, -184.322, -5.87767, 0.37", "104.734, -185.085, -6.13535, 0.22", "105.11, -185.74, -6.44143, 0.44", "105.568, -186.46, -6.89299, 0.22", "105.915, -186.961, -7.27447, 0.29", "106.231, -187.404, -7.64919, 0.52", "106.526, -187.827, -8.00399, 0.74", "106.756, -188.159, -8.25108, 0.74", "107.361, -189.152, -8.80659, 0.22", "107.661, -189.776, -9.02039, 0.22", "107.949, -190.602, -9.14653, 0.22", "108.057, -191.026, -9.15298, 0.37", "108.154, -191.524, -9.11689, 0.37", "108.291, -192.411, -9.02287, 0.15", "108.344, -192.982, -8.95311, 0.15", "108.39, -193.697, -8.89145, 0.37", "108.437, -194.635, -8.84707, 0.22", "108.476, -195.504, -8.8293, 1.03", "108.556, -196.764, -8.84435, 0.29", "108.632, -197.595, -8.88446, 0.37", "108.727, -198.351, -8.9417, 0.22", "108.883, -199.309, -9.04674, 0.22", "109.037, -200.073, -9.15867, 0.59", "109.3, -201.23, -9.36843, 0.22", "109.49, -202.004, -9.52307, 0.37", "109.654, -202.652, -9.66544, 0.37", "109.916, -203.773, -9.9101, 0.22", "110.09, -204.624, -10.0984, 0.15", "110.198, -205.327, -10.2453, 0.15", "110.272, -205.93, -10.3533, 0.29", "110.346, -206.523, -10.4293, 0.15", "110.424, -207.025, -10.4654, 0.15", "110.56, -207.686, -10.4553, 0.29", "110.684, -208.188, -10.4108, 0.29", "110.881, -208.933, -10.3, 0.22", "111.097, -209.766, -10.1613, 0.22", "111.388, -210.92, -9.95887, 0.29", "111.643, -211.966, -9.76946, 0.88", "111.925, -213.15, -9.52894, 0.22", "112.131, -213.985, -9.33964, 0.59", "112.434, -215.101, -9.03669, 0.15", "112.629, -215.699, -8.83796, 0.22", "112.869, -216.306, -8.61108, 0.22", "113.063, -216.708, -8.46109, 0.52", "113.329, -217.153, -8.29728, 0.52", "113.801, -217.827, -8.05041, 0.15", "114.182, -218.315, -7.88262, 0.52", "114.484, -218.708, -7.77925, 0.52", "114.926, -219.316, -7.6618, 0.15", "115.332, -219.956, -7.55407, 0.29", "115.691, -220.589, -7.43863, 0.29", "115.969, -221.156, -7.31805, 0.44", "116.224, -221.763, -7.15797, 0.96", "116.542, -222.665, -6.86162, 0.22", "116.755, -223.483, -6.57188, 0.22", "116.884, -224.115, -6.3531, 0.22", "117.031, -224.891, -6.08433, 0.15", "117.131, -225.396, -5.91743, 0.15", "117.251, -225.927, -5.77291, 0.59", "117.43, -226.642, -5.61284, 0.15", "117.687, -227.477, -5.47608, 0.15", "117.955, -228.249, -5.39431, 0.29", "118.267, -229.038, -5.34225, 0.52", "118.58, -229.797, -5.30123, 0.88" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "118.58, -229.797, -5.30123, 0.15", "117.952, -230.448, -5.24815, 0.15", "117.648, -230.808, -5.20116, 0.37", "117.308, -231.253, -5.10462, 0.37", "116.713, -232.114, -4.85712, 0.07", "116.476, -232.501, -4.73831, 0.15", "116.069, -233.218, -4.52285, 0.07", "115.885, -233.585, -4.39819, 0.29", "115.51, -234.369, -4.14344, 0.22", "115.131, -235.17, -3.8976, 0.07", "114.656, -236.069, -3.67434, 0.07", "114.37, -236.46, -3.59179, 0.29", "114.185, -236.597, -3.57382, 0.29", "113.394, -237.024, -3.55326, 0.07", "112.982, -237.148, -3.58031, 0.07", "111.963, -237.232, -3.69318, 0.07", "110.685, -237.128, -3.84525, 0.07", "109.245, -236.873, -4.00645, 0.07" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "118.58, -229.797, -5.30123, 0.15", "118.817, -230.575, -5.35247, 0.15", "119.026, -231.324, -5.34985, 0.22", "119.23, -231.959, -5.32211, 0.37", "119.447, -232.547, -5.28273, 0.37", "119.812, -233.421, -5.20829, 0.15", "119.964, -233.805, -5.17676, 0.22", "120.261, -234.562, -5.10681, 0.29", "120.548, -235.264, -5.04166, 0.29", "120.856, -235.962, -4.97723, 0.81", "121.276, -236.807, -4.90423, 0.15", "121.671, -237.541, -4.85564, 0.15", "122.014, -238.167, -4.83468, 0.15", "122.343, -238.804, -4.84366, 0.22", "122.556, -239.267, -4.87, 0.52", "122.863, -239.958, -4.93084, 0.88", "123.236, -240.764, -5.03356, 0.22", "123.445, -241.171, -5.09404, 0.15", "123.786, -241.845, -5.21402, 0.22", "124.291, -242.857, -5.41475, 0.15", "124.548, -243.389, -5.52858, 0.59", "124.884, -244.123, -5.68887, 0.15", "125.136, -244.696, -5.81177, 0.22", "125.438, -245.447, -5.94917, 0.15", "125.65, -246.071, -6.0407, 0.37", "125.821, -246.679, -6.10799, 0.22", "125.975, -247.322, -6.17107, 0.74", "126.094, -247.859, -6.21375, 0.81", "126.316, -248.877, -6.28758, 0.15", "126.567, -250.029, -6.35772, 0.22", "126.727, -250.799, -6.39562, 0.15", "126.804, -251.174, -6.40502, 0.29", "126.903, -251.685, -6.40892, 0.29", "127.027, -252.353, -6.38975, 0.15", "127.159, -253.129, -6.31329, 0.44", "127.293, -254.143, -6.10132, 0.44", "127.326, -254.628, -5.95339, 0.22", "127.325, -255.206, -5.72787, 0.74", "127.271, -255.962, -5.34866, 0.52", "127.199, -256.627, -4.9411, 0.22", "127.132, -257.229, -4.53545, 0.22", "127.086, -257.64, -4.25198, 0.22", "127.032, -258.163, -3.90125, 0.22", "126.953, -258.95, -3.39348, 0.22", "126.887, -259.48, -3.07576, 0.22", "126.777, -260.253, -2.64918, 1.11", "126.589, -261.496, -2.02499, 0.29", "126.482, -262.273, -1.65348, 0.29", "126.398, -262.893, -1.36176, 0.29", "126.296, -263.494, -1.09365, 0.22", "126.145, -264.193, -0.783528, 0.22", "125.977, -264.917, -0.498553, 0.74", "125.764, -265.92, -0.195286, 0.07", "125.658, -266.533, -0.0588959, 0.07", "125.551, -267.402, 0.0651496, 0.07", "125.498, -268.191, 0.0839733, 0.81", "125.486, -269.224, -0.0349242, 0.15", "125.501, -269.824, -0.169052, 0.15", "125.521, -270.203, -0.286917, 0.29", "125.564, -270.764, -0.486957, 0.44", "125.65, -271.678, -0.826282, 0.15", "125.718, -272.719, -1.22864, 0.22", "125.735, -273.529, -1.53007, 0.44", "125.725, -274.126, -1.76603, 0.22", "125.707, -274.801, -2.05385, 0.74", "125.701, -275.288, -2.26925, 0.74", "125.681, -276.45, -2.7953, 0.15", "125.665, -277.043, -3.08266, 0.37", "125.661, -278.041, -3.57209, 0.07", "125.692, -278.624, -3.84529, 0.07", "125.761, -279.188, -4.08695, 0.07", "125.908, -279.992, -4.39157, 0.22", "126.109, -280.822, -4.66871, 0.81", "126.345, -281.689, -4.89091, 0.52", "126.803, -283.137, -5.15602, 0.15", "127.061, -283.932, -5.26406, 0.15", "127.299, -284.665, -5.34054, 0.88", "127.51, -285.307, -5.38201, 0.66", "127.874, -286.465, -5.41513, 0.07", "128.105, -287.274, -5.41352, 0.15", "128.241, -287.813, -5.38032, 0.07", "128.367, -288.341, -5.33571, 0.15", "128.53, -289.059, -5.26488, 0.15", "128.646, -289.602, -5.20537, 0.59", "128.791, -290.309, -5.15081, 0.88", "129.03, -291.565, -5.03937, 0.22", "129.251, -292.452, -4.94378, 1.03" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "129.251, -292.452, -4.94378, 0.07", "129.729, -293.405, -5.10763, 0.07", "130.112, -294.194, -5.18895, 0.22", "130.476, -294.935, -5.2361, 0.07", "130.739, -295.467, -5.22483, 0.07", "131.053, -296.1, -5.15602, 0.07", "131.294, -296.588, -5.05709, 0.29", "131.594, -297.223, -4.84796, 0.07", "131.759, -297.599, -4.6693, 0.66", "132.089, -298.337, -4.23423, 0.07", "132.316, -298.823, -3.90622, 0.59", "132.64, -299.492, -3.40066, 0.07", "132.812, -299.854, -3.11392, 0.15", "133.059, -300.4, -2.69207, 0.07", "133.253, -300.863, -2.32813, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "129.251, -292.452, -4.94378, 0.29", "129.071, -293.18, -4.98603, 0.29", "128.934, -293.964, -5.02365, 0.15", "128.876, -294.355, -5.04273, 0.22", "128.836, -294.712, -5.07068, 0.22", "128.765, -295.592, -5.15785, 0.74", "128.719, -296.871, -5.33945, 0.15", "128.732, -297.296, -5.4126, 0.29", "128.753, -297.569, -5.46674, 0.29", "128.854, -298.35, -5.64715, 0.07", "128.987, -299.076, -5.8315, 0.15", "129.207, -300.049, -6.10772, 0.07", "129.366, -300.689, -6.28852, 0.59", "129.56, -301.472, -6.51393, 0.74", "129.864, -302.81, -6.90143, 0.07", "130.008, -303.6, -7.14731, 0.07", "130.098, -304.201, -7.36064, 0.29", "130.217, -305.014, -7.68468, 0.07", "130.275, -305.391, -7.86326, 0.37", "130.338, -305.916, -8.15146, 0.66", "130.372, -306.747, -8.61345, 0.22", "130.374, -307.338, -8.92587, 0.22", "130.364, -308.265, -9.36351, 0.15", "130.362, -308.639, -9.52083, 0.44", "130.387, -309.213, -9.73519, 0.81", "130.47, -310.344, -10.115, 0.07", "130.514, -311.062, -10.3283, 0.07", "130.527, -311.783, -10.5289, 0.15", "130.513, -312.571, -10.7424, 0.74", "130.51, -314.09, -11.1584, 0.07", "130.54, -314.749, -11.358, 0.37" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "130.54, -314.749, -11.358, 0.07", "130.36, -315.248, -11.395, 0.07", "130.081, -316.1, -11.4114, 0.29", "129.768, -317.306, -11.4058, 0.15", "129.59, -317.987, -11.4026, 0.22", "129.246, -319.311, -11.3964, 0.07", "128.906, -320.617, -11.3903, 0.07", "128.796, -321.038, -11.3703, 0.15", "128.587, -321.915, -11.2312, 0.07" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "130.54, -314.749, -11.358, 0.22", "130.933, -315.799, -11.0505, 0.22", "131.057, -316.059, -10.9833, 0.07", "131.286, -316.512, -10.8735, 0.44", "132.027, -317.919, -10.5346, 0.07", "132.544, -318.854, -10.3226, 0.07", "132.933, -319.47, -10.1679, 0.15", "133.7, -320.439, -9.87259, 0.07", "134.019, -320.781, -9.74572, 0.15", "134.341, -321.097, -9.62458, 0.07", "134.762, -321.453, -9.4886, 0.22", "136.007, -322.408, -9.01428, 0.15", "137.064, -323.143, -8.56434, 0.07", "137.642, -323.501, -8.29651, 0.07" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_39", "dend_36", "dend_35", "dend_16", "dend_13", "dend_12", "dend_3", "dend_0", "dend_45", "dend_40", "dend_38", "dend_37", "dend_22", "dend_17", "dend_15", "dend_14", "dend_9", "dend_4", "dend_2", "dend_1", "dend_42", "dend_41", "dend_34", "dend_23", "dend_21", "dend_18", "dend_11", "dend_10", "dend_8", "dend_5", "dend_44", "dend_43", "dend_25", "dend_24", "dend_20", "dend_19", "dend_7", "dend_6", "dend_33", "dend_26", "dend_32", "dend_27", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_46", "dend_39", "dend_36", "dend_35", "dend_16", "dend_13", "dend_12", "dend_3", "dend_0", "dend_45", "dend_40", "dend_38", "dend_37", "dend_22", "dend_17", "dend_15", "dend_14", "dend_9", "dend_4", "dend_2", "dend_1", "dend_42", "dend_41", "dend_34", "dend_23", "dend_21", "dend_18", "dend_11", "dend_10", "dend_8", "dend_5", "dend_44", "dend_43", "dend_25", "dend_24", "dend_20", "dend_19", "dend_7", "dend_6", "dend_33", "dend_26", "dend_32", "dend_27", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_LBC_19cea46eb3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_22
create dend_34
public dend_34
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_33, id: dend_33, parent: dend_25
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_39, dend_36, dend_35, dend_16, dend_13, dend_12, dend_3, dend_0, dend_45, dend_40, dend_38, dend_37, dend_22, dend_17, dend_15, dend_14, dend_9, dend_4, dend_2, dend_1, dend_42, dend_41, dend_34, dend_23, dend_21, dend_18, dend_11, dend_10, dend_8, dend_5, dend_44, dend_43, dend_25, dend_24, dend_20, dend_19, dend_7, dend_6, dend_33, dend_26, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_46, dend_39, dend_36, dend_35, dend_16, dend_13, dend_12, dend_3, dend_0, dend_45, dend_40, dend_38, dend_37, dend_22, dend_17, dend_15, dend_14, dend_9, dend_4, dend_2, dend_1, dend_42, dend_41, dend_34, dend_23, dend_21, dend_18, dend_11, dend_10, dend_8, dend_5, dend_44, dend_43, dend_25, dend_24, dend_20, dend_19, dend_7, dend_6, dend_33, dend_26, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_50
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_46(0), soma_0(0.49999995180632084)
    connect dend_39(0), soma_0(0.49999995180632084)
    connect dend_36(0), soma_0(0.49999995180632084)
    connect dend_35(0), soma_0(0.49999995180632084)
    connect dend_16(0), soma_0(0.49999995180632084)
    connect dend_13(0), soma_0(0.49999995180632084)
    connect dend_12(0), soma_0(0.49999995180632084)
    connect dend_3(0), soma_0(0.49999995180632084)
    connect dend_0(0), soma_0(0.49999995180632084)
    connect axon_0(0), soma_0(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_34(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_33(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.72658, 3.16085, 0.0, 3.1586 ) }
    soma_0 { pt3dadd( -7.90511, 2.85139, 0.0, 5.52942 ) }
    soma_0 { pt3dadd( -7.08363, 2.54192, 0.0, 7.77229 ) }
    soma_0 { pt3dadd( -6.26215, 2.23245, 0.0, 8.87312 ) }
    soma_0 { pt3dadd( -5.44068, 1.92299, 0.0, 9.713 ) }
    soma_0 { pt3dadd( -4.6192, 1.61352, 0.0, 10.2371 ) }
    soma_0 { pt3dadd( -3.79772, 1.30405, 0.0, 10.754 ) }
    soma_0 { pt3dadd( -2.97625, 0.994587, 0.0, 10.995 ) }
    soma_0 { pt3dadd( -2.15477, 0.685121, 0.0, 11.088 ) }
    soma_0 { pt3dadd( -1.3333, 0.375654, 0.0, 11.1386 ) }
    soma_0 { pt3dadd( -0.51182, 0.0661874, 0.0, 10.9306 ) }
    soma_0 { pt3dadd( 0.309656, -0.243279, 0.0, 10.6953 ) }
    soma_0 { pt3dadd( 1.13113, -0.552746, 0.0, 10.3378 ) }
    soma_0 { pt3dadd( 1.95261, -0.862212, 0.0, 9.82409 ) }
    soma_0 { pt3dadd( 2.77408, -1.17168, 0.0, 9.14264 ) }
    soma_0 { pt3dadd( 3.59556, -1.48115, 0.0, 8.29626 ) }
    soma_0 { pt3dadd( 4.41704, -1.79061, 0.0, 7.19767 ) }
    soma_0 { pt3dadd( 5.23851, -2.10008, 0.0, 5.89828 ) }
    soma_0 { pt3dadd( 6.05999, -2.40955, 0.0, 4.7086 ) }
    soma_0 { pt3dadd( 6.88147, -2.71901, 0.0, 3.67147 ) }
    soma_0 { pt3dadd( 7.70294, -3.02848, 0.0, 2.2679 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -6.2198, -1.18093, 6.66, 1.03 ) }
    dend_46 { pt3dadd( -6.6294, -1.57145, 6.89442, 0.74 ) }
    dend_46 { pt3dadd( -7.31864, -2.12407, 7.33059, 0.52 ) }
    dend_46 { pt3dadd( -7.723, -2.42679, 7.61432, 0.52 ) }
    dend_46 { pt3dadd( -8.25341, -2.84383, 8.03056, 0.44 ) }
    dend_46 { pt3dadd( -8.77802, -3.27087, 8.52463, 0.44 ) }
    dend_46 { pt3dadd( -9.32331, -3.70028, 9.11159, 0.66 ) }
    dend_46 { pt3dadd( -9.70057, -3.92146, 9.62614, 0.88 ) }
    dend_46 { pt3dadd( -10.0171, -4.01149, 10.1824, 0.96 ) }
    dend_46 { pt3dadd( -10.2665, -4.03448, 10.6996, 0.29 ) }
    dend_46 { pt3dadd( -10.6072, -4.04735, 11.6118, 0.29 ) }
    dend_46 { pt3dadd( -10.7649, -4.07351, 12.1334, 0.29 ) }
    dend_46 { pt3dadd( -11.0318, -4.17641, 13.0524, 0.29 ) }
    dend_46 { pt3dadd( -11.3287, -4.30124, 14.0236, 0.29 ) }
    dend_46 { pt3dadd( -11.5858, -4.40535, 14.7906, 0.29 ) }
    dend_46 { pt3dadd( -11.8556, -4.53135, 15.4514, 0.29 ) }
    dend_46 { pt3dadd( -12.1347, -4.67613, 16.019, 0.29 ) }
    dend_46 { pt3dadd( -12.4693, -4.85821, 16.6527, 0.52 ) }
    dend_46 { pt3dadd( -12.9786, -5.10298, 17.5347, 0.52 ) }
    dend_46 { pt3dadd( -13.4964, -5.25972, 18.3767, 0.52 ) }
    dend_46 { pt3dadd( -13.9833, -5.31446, 19.1514, 0.66 ) }
    dend_46 { pt3dadd( -14.4265, -5.28891, 19.8519, 0.29 ) }
    dend_46 { pt3dadd( -14.6883, -5.24231, 20.3125, 0.29 ) }
    dend_46 { pt3dadd( -14.891, -5.19536, 20.7294, 0.29 ) }
    dend_46 { pt3dadd( -15.0259, -5.19837, 21.1092, 0.29 ) }
    dend_46 { pt3dadd( -15.0804, -5.23615, 21.4417, 0.29 ) }
    dend_46 { pt3dadd( -15.0886, -5.3238, 21.8586, 0.29 ) }
    dend_46 { pt3dadd( -15.0722, -5.58891, 22.7896, 0.29 ) }
    dend_46 { pt3dadd( -15.0901, -5.69703, 23.1408, 0.29 ) }
    dend_46 { pt3dadd( -15.2403, -5.89954, 23.935, 0.29 ) }
    dend_46 { pt3dadd( -15.4317, -5.93737, 24.4711, 0.29 ) }
    dend_46 { pt3dadd( -15.7014, -5.89378, 25.0175, 0.29 ) }
    dend_46 { pt3dadd( -15.9614, -5.81799, 25.4383, 0.66 ) }
    dend_46 { pt3dadd( -16.4139, -5.6634, 26.0723, 0.74 ) }
    dend_46 { pt3dadd( -17.1267, -5.41885, 26.9772, 0.37 ) }
    dend_46 { pt3dadd( -18.1781, -5.00339, 28.2261, 0.22 ) }
    dend_46 { pt3dadd( -18.7725, -4.72609, 28.924, 0.29 ) }
    dend_46 { pt3dadd( -19.2094, -4.49966, 29.4554, 0.44 ) }
    dend_46 { pt3dadd( -19.7423, -4.21593, 30.1368, 0.37 ) }
    dend_46 { pt3dadd( -20.1722, -3.98977, 30.7012, 0.88 ) }
    dend_46 { pt3dadd( -20.7894, -3.67366, 31.5017, 0.37 ) }
    dend_46 { pt3dadd( -21.4616, -3.30504, 32.3699, 0.22 ) }
    dend_46 { pt3dadd( -21.9246, -2.98873, 33.0502, 0.22 ) }
    dend_46 { pt3dadd( -22.2795, -2.67528, 33.6791, 0.22 ) }
    dend_46 { pt3dadd( -22.5388, -2.37793, 34.2557, 0.59 ) }
    dend_46 { pt3dadd( -22.7822, -2.04542, 34.9136, 0.74 ) }
    dend_46 { pt3dadd( -23.1572, -1.54169, 35.9653, 0.22 ) }
    dend_46 { pt3dadd( -23.5767, -0.982637, 37.1489, 0.22 ) }
    dend_46 { pt3dadd( -23.7902, -0.660686, 37.7784, 0.44 ) }
    dend_46 { pt3dadd( -24.0784, -0.10133, 38.7797, 0.44 ) }
    dend_46 { pt3dadd( -24.1826, 0.198337, 39.2828, 0.66 ) }
    dend_46 { pt3dadd( -24.2868, 0.666383, 40.0857, 0.29 ) }
    dend_46 { pt3dadd( -24.3464, 1.15024, 40.9527, 0.29 ) }
    dend_46 { pt3dadd( -24.3751, 1.52255, 41.6516, 0.29 ) }
    dend_46 { pt3dadd( -24.4041, 1.83857, 42.3122, 0.29 ) }
    dend_46 { pt3dadd( -24.4068, 2.1273, 43.0144, 0.29 ) }
    dend_46 { pt3dadd( -24.39, 2.35265, 43.6797, 0.29 ) }
    dend_46 { pt3dadd( -24.3809, 2.47772, 44.0978, 0.29 ) }
    dend_46 { pt3dadd( -24.412, 2.69361, 44.879, 0.29 ) }
    dend_46 { pt3dadd( -24.4773, 2.82665, 45.4008, 0.29 ) }
    dend_46 { pt3dadd( -24.6776, 3.10357, 46.4483, 0.29 ) }
    dend_46 { pt3dadd( -24.9627, 3.41064, 47.5693, 0.29 ) }
    dend_46 { pt3dadd( -25.2676, 3.68965, 48.5816, 0.29 ) }
    dend_46 { pt3dadd( -25.4865, 3.87418, 49.2388, 0.44 ) }
    dend_46 { pt3dadd( -25.8687, 4.18882, 50.3268, 0.22 ) }
    dend_46 { pt3dadd( -26.2054, 4.47241, 51.3053, 0.22 ) }
    dend_46 { pt3dadd( -26.5376, 4.75254, 52.299, 0.29 ) }
    dend_46 { pt3dadd( -26.8908, 5.05893, 53.4372, 0.29 ) }
    dend_46 { pt3dadd( -27.1266, 5.2777, 54.342, 0.29 ) }
    dend_46 { pt3dadd( -27.2416, 5.40146, 54.9109, 0.29 ) }
    dend_46 { pt3dadd( -27.3766, 5.5886, 55.8713, 0.29 ) }
    dend_46 { pt3dadd( -27.4371, 5.71435, 56.5693, 0.29 ) }
    dend_46 { pt3dadd( -27.4532, 5.81398, 57.0556, 0.29 ) }
    dend_46 { pt3dadd( -27.4596, 5.94757, 57.6437, 0.29 ) }
    dend_46 { pt3dadd( -27.4757, 6.11505, 58.4076, 0.29 ) }
    dend_46 { pt3dadd( -27.4794, 6.28877, 59.1394, 0.29 ) }
    dend_46 { pt3dadd( -27.4768, 6.53004, 59.9786, 0.29 ) }
    dend_46 { pt3dadd( -27.4824, 6.69531, 60.4649, 0.29 ) }
    dend_46 { pt3dadd( -27.5174, 7.15194, 61.7363, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_46 { pt3dadd( -27.6036, 7.57046, 62.9534, 0.29 ) }
    dend_46 { pt3dadd( -27.6827, 7.80563, 63.7862, 0.29 ) }
    dend_46 { pt3dadd( -27.7665, 8.05365, 64.9795, 0.29 ) }
    dend_46 { pt3dadd( -27.8029, 8.14042, 65.6037, 0.29 ) }
    dend_46 { pt3dadd( -27.859, 8.23741, 66.8024, 0.37 ) }
    dend_46 { pt3dadd( -27.9426, 8.28836, 68.9276, 0.22 ) }
    dend_46 { pt3dadd( -28.0156, 8.25412, 70.6038, 0.22 ) }
    dend_46 { pt3dadd( -28.1604, 8.11732, 73.1871, 0.22 ) }
    dend_46 { pt3dadd( -28.2259, 8.02559, 74.4312, 0.22 ) }
    dend_46 { pt3dadd( -28.2621, 7.95109, 75.4995, 0.22 ) }
    dend_46 { pt3dadd( -28.2707, 7.88411, 76.742, 0.29 ) }
    dend_46 { pt3dadd( -28.2587, 7.85023, 77.4896, 0.29 ) }
    dend_46 { pt3dadd( -28.2792, 7.8411, 78.3215, 0.29 ) }
    dend_46 { pt3dadd( -28.3334, 7.85936, 78.8518, 0.29 ) }
    dend_46 { pt3dadd( -28.5296, 8.0096, 80.2606, 0.29 ) }
    dend_46 { pt3dadd( -28.6837, 8.16563, 81.1946, 0.29 ) }
    dend_46 { pt3dadd( -28.7714, 8.27805, 81.7357, 0.29 ) }
    dend_46 { pt3dadd( -28.9182, 8.5153, 82.744, 0.29 ) }
    dend_46 { pt3dadd( -29.0509, 8.77507, 83.7914, 0.29 ) }
    dend_46 { pt3dadd( -29.1655, 9.06839, 84.9728, 0.29 ) }
    dend_46 { pt3dadd( -29.2197, 9.24764, 85.641, 0.29 ) }
    dend_46 { pt3dadd( -29.3024, 9.68875, 87.2445, 0.29 ) }
    dend_46 { pt3dadd( -29.3211, 10.1539, 88.9322, 0.29 ) }
    dend_46 { pt3dadd( -29.2901, 10.4455, 90.0707, 0.29 ) }
    dend_46 { pt3dadd( -29.0802, 11.3162, 93.8467, 0.29 ) }
    dend_46 { pt3dadd( -29.0505, 11.4011, 94.2636, 0.29 ) }
    dend_46 { pt3dadd( -28.9488, 11.6944, 95.8536, 0.29 ) }
    dend_46 { pt3dadd( -28.9185, 11.8017, 96.4764, 0.29 ) }
    dend_46 { pt3dadd( -28.9026, 11.9788, 97.5619, 0.29 ) }
    dend_46 { pt3dadd( -28.9593, 12.2532, 99.2014, 0.29 ) }
    dend_46 { pt3dadd( -29.1133, 12.5394, 101.055, 0.29 ) }
    dend_46 { pt3dadd( -29.2722, 12.723, 102.31, 0.29 ) }
    dend_46 { pt3dadd( -29.5268, 12.9512, 103.778, 0.29 ) }
    dend_46 { pt3dadd( -29.9757, 13.3148, 105.928, 0.29 ) }
    dend_46 { pt3dadd( -30.3903, 13.6468, 107.696, 0.29 ) }
    dend_46 { pt3dadd( -30.6781, 13.8807, 108.86, 0.29 ) }
    dend_46 { pt3dadd( -30.983, 14.1386, 110.057, 0.29 ) }
    dend_46 { pt3dadd( -31.2119, 14.3512, 111.007, 0.15 ) }
    dend_46 { pt3dadd( -31.6067, 14.744, 112.786, 0.15 ) }
    dend_46 { pt3dadd( -31.6974, 14.8476, 113.255, 0.37 ) }
    dend_46 { pt3dadd( -31.9898, 15.2503, 115.009, 0.37 ) }
    dend_46 { pt3dadd( -32.0471, 15.3653, 115.491, 0.37 ) }
    dend_46 { pt3dadd( -32.0997, 15.5335, 116.224, 0.37 ) }
    dend_46 { pt3dadd( -32.1064, 15.7403, 117.152, 0.37 ) }
    dend_46 { pt3dadd( -32.0686, 15.9083, 117.909, 0.37 ) }
    dend_46 { pt3dadd( -32.0459, 15.9868, 118.279, 0.37 ) }
    dend_46 { pt3dadd( -31.8917, 16.4242, 120.371, 0.37 ) }
    dend_46 { pt3dadd( -31.8307, 16.5869, 121.158, 0.37 ) }
    dend_46 { pt3dadd( -31.738, 16.9304, 122.584, 0.22 ) }
    dend_46 { pt3dadd( -31.6143, 17.4337, 124.277, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 50/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 8.4102, -1.61143, 1.46, 1.18 ) }
    dend_39 { pt3dadd( 8.4102, -1.61143, 1.46, 1.18 ) }
    dend_39 { pt3dadd( 8.98072, -1.97901, 1.79378, 0.66 ) }
    dend_39 { pt3dadd( 9.69675, -2.44034, 2.2127, 0.59 ) }
    dend_39 { pt3dadd( 10.6243, -3.03796, 2.75536, 0.66 ) }
    dend_39 { pt3dadd( 11.0452, -3.30915, 3.00162, 0.66 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 56/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -2.1698, -3.64843, 10.31, 1.62 ) }
    dend_36 { pt3dadd( -2.1698, -3.64843, 10.31, 1.62 ) }
    dend_36 { pt3dadd( -2.37763, -4.61052, 10.6246, 1.03 ) }
    dend_36 { pt3dadd( -2.65315, -6.1044, 11.0922, 0.44 ) }
    dend_36 { pt3dadd( -2.77113, -6.6875, 11.2608, 0.44 ) }
    dend_36 { pt3dadd( -3.02613, -7.58548, 11.549, 0.59 ) }
    dend_36 { pt3dadd( -3.16699, -8.00565, 11.7106, 0.59 ) }
    dend_36 { pt3dadd( -3.51218, -8.90085, 12.1083, 0.59 ) }
    dend_36 { pt3dadd( -3.64985, -9.24487, 12.2866, 0.59 ) }
    dend_36 { pt3dadd( -3.99916, -10.1293, 12.8019, 0.52 ) }
    dend_36 { pt3dadd( -4.45831, -11.3125, 13.5248, 0.37 ) }
    dend_36 { pt3dadd( -4.75053, -12.0899, 14.002, 0.37 ) }
    dend_36 { pt3dadd( -4.90975, -12.5669, 14.3005, 0.88 ) }
    dend_36 { pt3dadd( -5.21023, -13.6548, 15.0238, 0.44 ) }
    dend_36 { pt3dadd( -5.31136, -14.1745, 15.3757, 0.44 ) }
    dend_36 { pt3dadd( -5.38667, -14.7921, 15.7941, 0.81 ) }
    dend_36 { pt3dadd( -5.4713, -15.6777, 16.3428, 0.59 ) }
    dend_36 { pt3dadd( -5.57388, -16.5726, 16.9141, 0.44 ) }
    dend_36 { pt3dadd( -5.67434, -17.4267, 17.4778, 0.44 ) }
    dend_36 { pt3dadd( -5.77824, -18.3491, 18.0937, 0.66 ) }
    dend_36 { pt3dadd( -5.87186, -19.2498, 18.71, 1.03 ) }
    dend_36 { pt3dadd( -5.9663, -20.1538, 19.3483, 1.03 ) }
    dend_36 { pt3dadd( -6.10075, -21.3535, 20.1921, 0.52 ) }
    dend_36 { pt3dadd( -6.23591, -22.4855, 20.9426, 0.52 ) }
    dend_36 { pt3dadd( -6.39348, -23.8693, 21.7925, 0.52 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 81/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 4.5002, 3.89058, 1.07, 0.96 ) }
    dend_35 { pt3dadd( 4.5002, 3.89058, 1.07, 0.96 ) }
    dend_35 { pt3dadd( 4.95373, 4.96597, 0.727968, 0.52 ) }
    dend_35 { pt3dadd( 5.40091, 5.95616, 0.385786, 0.15 ) }
    dend_35 { pt3dadd( 5.79703, 6.85938, 0.0210246, 0.15 ) }
    dend_35 { pt3dadd( 6.29876, 7.99278, -0.451848, 0.22 ) }
    dend_35 { pt3dadd( 6.69515, 8.85901, -0.812753, 0.22 ) }
    dend_35 { pt3dadd( 7.05766, 9.59652, -1.13686, 0.22 ) }
    dend_35 { pt3dadd( 7.71714, 10.9271, -1.74464, 0.22 ) }
    dend_35 { pt3dadd( 8.31747, 12.1114, -2.28596, 0.22 ) }
    dend_35 { pt3dadd( 8.9006, 13.3061, -2.80007, 0.29 ) }
    dend_35 { pt3dadd( 9.15567, 13.857, -3.04971, 0.22 ) }
    dend_35 { pt3dadd( 9.49038, 14.6598, -3.43775, 0.22 ) }
    dend_35 { pt3dadd( 9.85104, 15.603, -3.88939, 0.15 ) }
    dend_35 { pt3dadd( 10.3252, 16.8068, -4.42414, 0.22 ) }
    dend_35 { pt3dadd( 10.7692, 17.8679, -4.89012, 0.29 ) }
    dend_35 { pt3dadd( 11.2742, 19.0918, -5.48067, 0.22 ) }
    dend_35 { pt3dadd( 11.6733, 20.1151, -6.03076, 0.22 ) }
    dend_35 { pt3dadd( 12.1015, 21.2993, -6.70546, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_35 { pt3dadd( 12.6278, 22.7161, -7.55263, 0.29 ) }
    dend_35 { pt3dadd( 12.9529, 23.6035, -8.07542, 0.15 ) }
    dend_35 { pt3dadd( 13.395, 24.7967, -8.76964, 0.22 ) }
    dend_35 { pt3dadd( 13.8614, 26.0423, -9.45312, 0.15 ) }
    dend_35 { pt3dadd( 14.2891, 27.2066, -10.0637, 0.22 ) }
    dend_35 { pt3dadd( 14.6792, 28.3559, -10.6544, 0.15 ) }
    dend_35 { pt3dadd( 14.9388, 29.1923, -11.0794, 0.44 ) }
    dend_35 { pt3dadd( 15.1034, 29.7318, -11.3271, 0.44 ) }
    dend_35 { pt3dadd( 15.392, 30.6811, -11.7103, 0.15 ) }
    dend_35 { pt3dadd( 15.806, 32.0627, -12.2064, 0.15 ) }
    dend_35 { pt3dadd( 16.0967, 33.091, -12.5739, 0.29 ) }
    dend_35 { pt3dadd( 16.3222, 33.9248, -12.8222, 0.29 ) }
    dend_35 { pt3dadd( 16.5669, 34.8385, -13.0358, 0.52 ) }
    dend_35 { pt3dadd( 16.9453, 36.2185, -13.2586, 0.15 ) }
    dend_35 { pt3dadd( 17.4092, 37.8504, -13.3795, 0.15 ) }
    dend_35 { pt3dadd( 17.8404, 39.2578, -13.3824, 0.15 ) }
    dend_35 { pt3dadd( 18.4748, 41.1756, -13.2485, 0.15 ) }
    dend_35 { pt3dadd( 18.7441, 41.9352, -13.1347, 0.15 ) }
    dend_35 { pt3dadd( 19.1558, 42.9535, -12.8914, 0.22 ) }
    dend_35 { pt3dadd( 19.7292, 44.1446, -12.4675, 0.22 ) }
    dend_35 { pt3dadd( 20.1751, 44.9505, -12.068, 0.44 ) }
    dend_35 { pt3dadd( 20.5725, 45.6021, -11.6475, 0.44 ) }
    dend_35 { pt3dadd( 20.9456, 46.1784, -11.2061, 0.44 ) }
    dend_35 { pt3dadd( 21.417, 46.9085, -10.5514, 0.22 ) }
    dend_35 { pt3dadd( 21.9088, 47.7431, -9.69141, 0.07 ) }
    dend_35 { pt3dadd( 22.1276, 48.209, -9.19616, 0.07 ) }
    dend_35 { pt3dadd( 22.3339, 48.8425, -8.52455, 0.15 ) }
    dend_35 { pt3dadd( 22.4926, 49.524, -7.81396, 0.15 ) }
    dend_35 { pt3dadd( 22.5841, 50.1834, -7.17848, 0.15 ) }
    dend_35 { pt3dadd( 22.6181, 50.7267, -6.68343, 0.22 ) }
    dend_35 { pt3dadd( 22.6442, 51.4483, -6.0362, 0.37 ) }
    dend_35 { pt3dadd( 22.7087, 52.2084, -5.36445, 0.07 ) }
    dend_35 { pt3dadd( 22.8214, 53.1097, -4.57224, 0.07 ) }
    dend_35 { pt3dadd( 22.926, 53.7163, -4.06585, 0.22 ) }
    dend_35 { pt3dadd( 23.1201, 54.5448, -3.40535, 0.22 ) }
    dend_35 { pt3dadd( 23.3617, 55.4237, -2.7279, 0.22 ) }
    dend_35 { pt3dadd( 23.6457, 56.3724, -2.0471, 0.29 ) }
    dend_35 { pt3dadd( 23.8624, 57.1288, -1.58069, 0.29 ) }
    dend_35 { pt3dadd( 24.2556, 58.5999, -0.833153, 0.15 ) }
    dend_35 { pt3dadd( 24.5613, 59.7186, -0.374385, 0.15 ) }
    dend_35 { pt3dadd( 24.8354, 60.6694, -0.133468, 0.15 ) }
    dend_35 { pt3dadd( 25.0458, 61.4062, -0.0531815, 0.22 ) }
    dend_35 { pt3dadd( 25.3946, 62.6476, -0.094385, 0.59 ) }
    dend_35 { pt3dadd( 25.8411, 64.2894, -0.293606, 0.22 ) }
    dend_35 { pt3dadd( 26.1672, 65.4828, -0.543262, 0.07 ) }
    dend_35 { pt3dadd( 26.6412, 67.1189, -0.981229, 0.15 ) }
    dend_35 { pt3dadd( 27.1434, 68.6353, -1.41348, 0.15 ) }
    dend_35 { pt3dadd( 27.782, 70.3467, -1.92186, 0.15 ) }
    dend_35 { pt3dadd( 28.3817, 71.7587, -2.37115, 0.22 ) }
    dend_35 { pt3dadd( 28.9025, 72.8705, -2.74372, 0.37 ) }
    dend_35 { pt3dadd( 29.4222, 73.8731, -3.06029, 0.22 ) }
    dend_35 { pt3dadd( 30.3138, 75.3908, -3.46401, 0.15 ) }
    dend_35 { pt3dadd( 31.053, 76.5014, -3.71297, 0.15 ) }
    dend_35 { pt3dadd( 31.6432, 77.3241, -3.85855, 0.22 ) }
    dend_35 { pt3dadd( 32.3624, 78.3329, -4.01684, 0.15 ) }
    dend_35 { pt3dadd( 33.1633, 79.5569, -4.15072, 0.22 ) }
    dend_35 { pt3dadd( 34.1319, 81.2636, -4.28227, 0.07 ) }
    dend_35 { pt3dadd( 34.6322, 82.2702, -4.33082, 0.07 ) }
    dend_35 { pt3dadd( 35.0068, 83.1002, -4.33231, 0.44 ) }
    dend_35 { pt3dadd( 35.5151, 84.325, -4.30036, 0.22 ) }
    dend_35 { pt3dadd( 35.9517, 85.5108, -4.23588, 0.15 ) }
    dend_35 { pt3dadd( 36.3982, 86.9406, -4.16654, 0.15 ) }
    dend_35 { pt3dadd( 36.5923, 87.6504, -4.15077, 0.15 ) }
    dend_35 { pt3dadd( 36.8042, 88.393, -4.1416, 0.22 ) }
    dend_35 { pt3dadd( 37.1543, 89.5868, -4.12317, 0.15 ) }
    dend_35 { pt3dadd( 37.5598, 90.9458, -4.11073, 0.29 ) }
    dend_35 { pt3dadd( 37.7881, 91.7413, -4.12302, 0.29 ) }
    dend_35 { pt3dadd( 38.1449, 93.022, -4.19675, 0.29 ) }
    dend_35 { pt3dadd( 38.6038, 94.7534, -4.34851, 0.15 ) }
    dend_35 { pt3dadd( 38.8117, 95.5223, -4.43729, 0.52 ) }
    dend_35 { pt3dadd( 39.0364, 96.3209, -4.53445, 0.52 ) }
    dend_35 { pt3dadd( 39.4194, 97.5127, -4.68765, 0.22 ) }
    dend_35 { pt3dadd( 39.8192, 98.5712, -4.80401, 0.37 ) }
    dend_35 { pt3dadd( 40.2854, 99.6761, -4.91806, 0.22 ) }
    dend_35 { pt3dadd( 40.9016, 101.04, -5.05823, 0.07 ) }
    dend_35 { pt3dadd( 41.4015, 102.104, -5.1777, 0.07 ) }
    dend_35 { pt3dadd( 41.8709, 103.049, -5.28265, 0.59 ) }
    dend_35 { pt3dadd( 42.6453, 104.54, -5.41956, 0.07 ) }
    dend_35 { pt3dadd( 43.4921, 106.185, -5.54664, 0.15 ) }
    dend_35 { pt3dadd( 43.6679, 106.554, -5.57394, 0.15 ) }
    dend_35 { pt3dadd( 44.5016, 108.538, -5.73196, 0.22 ) }
    dend_35 { pt3dadd( 44.9693, 109.784, -5.79581, 0.07 ) }
    dend_35 { pt3dadd( 45.3108, 110.855, -5.80068, 0.07 ) }
    dend_35 { pt3dadd( 45.4654, 111.457, -5.77838, 0.37 ) }
    dend_35 { pt3dadd( 45.7021, 112.516, -5.71967, 0.37 ) }
    dend_35 { pt3dadd( 45.9889, 113.903, -5.62822, 0.07 ) }
    dend_35 { pt3dadd( 46.2409, 115.252, -5.53563, 0.07 ) }
    dend_35 { pt3dadd( 46.4329, 116.581, -5.45466, 0.29 ) }
    dend_35 { pt3dadd( 46.6066, 118.102, -5.40537, 0.22 ) }
    dend_35 { pt3dadd( 46.7077, 119.177, -5.37834, 0.22 ) }
    dend_35 { pt3dadd( 46.8233, 120.756, -5.36474, 0.22 ) }
    dend_35 { pt3dadd( 46.8824, 121.885, -5.37394, 0.59 ) }
    dend_35 { pt3dadd( 46.8914, 123.518, -5.39702, 0.15 ) }
    dend_35 { pt3dadd( 46.7993, 125.433, -5.37696, 0.22 ) }
    dend_35 { pt3dadd( 46.6987, 126.421, -5.35129, 0.22 ) }
    dend_35 { pt3dadd( 46.5693, 127.204, -5.33221, 0.07 ) }
    dend_35 { pt3dadd( 46.3161, 128.392, -5.33427, 0.22 ) }
    dend_35 { pt3dadd( 45.9177, 130.24, -5.32474, 0.15 ) }
    dend_35 { pt3dadd( 45.8149, 130.805, -5.31902, 0.29 ) }
    dend_35 { pt3dadd( 45.7288, 131.371, -5.29888, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_35 { pt3dadd( 45.5792, 132.717, -5.25589, 0.07 ) }
    dend_35 { pt3dadd( 45.521, 133.639, -5.22525, 0.22 ) }
    dend_35 { pt3dadd( 45.5214, 134.707, -5.20463, 0.22 ) }
    dend_35 { pt3dadd( 45.597, 135.88, -5.2108, 0.22 ) }
    dend_35 { pt3dadd( 45.7537, 137.392, -5.23755, 0.15 ) }
    dend_35 { pt3dadd( 45.9142, 138.524, -5.27563, 0.15 ) }
    dend_35 { pt3dadd( 46.2391, 140.705, -5.28048, 0.15 ) }
    dend_35 { pt3dadd( 46.4456, 142.404, -5.22468, 0.22 ) }
    dend_35 { pt3dadd( 46.5365, 143.436, -5.17405, 0.15 ) }
    dend_35 { pt3dadd( 46.5865, 144.178, -5.11637, 0.37 ) }
    dend_35 { pt3dadd( 46.6486, 145.414, -4.95898, 0.59 ) }
    dend_35 { pt3dadd( 46.6534, 147.478, -4.60804, 0.07 ) }
    dend_35 { pt3dadd( 46.5821, 148.62, -4.38896, 0.07 ) }
    dend_35 { pt3dadd( 46.4689, 149.695, -4.19041, 0.07 ) }
    dend_35 { pt3dadd( 46.3515, 150.703, -4.02289, 0.15 ) }
    dend_35 { pt3dadd( 46.1728, 152.185, -3.80764, 0.15 ) }
    dend_35 { pt3dadd( 46.0596, 153.089, -3.71331, 0.15 ) }
    dend_35 { pt3dadd( 45.9455, 154.391, -3.65786, 0.15 ) }
    dend_35 { pt3dadd( 45.8375, 156.42, -3.55576, 0.07 ) }
    dend_35 { pt3dadd( 45.8374, 157.08, -3.50868, 0.22 ) }
    dend_35 { pt3dadd( 45.8595, 157.472, -3.4812, 0.22 ) }
    dend_35 { pt3dadd( 45.9907, 158.622, -3.44291, 0.07 ) }
    dend_35 { pt3dadd( 46.1753, 159.686, -3.43702, 0.15 ) }
    dend_35 { pt3dadd( 46.552, 161.205, -3.50998, 0.07 ) }
    dend_35 { pt3dadd( 47.1466, 163.062, -3.70201, 0.07 ) }
    dend_35 { pt3dadd( 47.7797, 164.782, -3.95508, 0.07 ) }
    dend_35 { pt3dadd( 48.2613, 165.872, -4.13633, 0.07 ) }
    dend_35 { pt3dadd( 48.9183, 167.131, -4.3716, 0.22 ) }
    dend_35 { pt3dadd( 49.5639, 168.274, -4.58291, 0.07 ) }
    dend_35 { pt3dadd( 49.9732, 168.972, -4.70468, 0.07 ) }
    dend_35 { pt3dadd( 50.379, 169.684, -4.79282, 0.07 ) }
    dend_35 { pt3dadd( 51.1478, 171.085, -4.8818, 0.07 ) }
    dend_35 { pt3dadd( 51.8117, 172.401, -4.87368, 0.07 ) }
    dend_35 { pt3dadd( 52.2854, 173.452, -4.83087, 0.07 ) }
    dend_35 { pt3dadd( 52.6521, 174.462, -4.77938, 0.07 ) }
    dend_35 { pt3dadd( 52.891, 175.28, -4.75456, 0.29 ) }
    dend_35 { pt3dadd( 53.1024, 176.202, -4.75571, 0.15 ) }
    dend_35 { pt3dadd( 53.3195, 177.457, -4.81148, 0.15 ) }
    dend_35 { pt3dadd( 53.4309, 178.164, -4.8748, 0.15 ) }
    dend_35 { pt3dadd( 53.6095, 179.419, -5.04292, 0.22 ) }
    dend_35 { pt3dadd( 53.889, 181.488, -5.38282, 0.07 ) }
    dend_35 { pt3dadd( 54.0353, 182.811, -5.6351, 0.22 ) }
    dend_35 { pt3dadd( 54.1461, 184.621, -6.03028, 0.07 ) }
    dend_35 { pt3dadd( 54.1646, 185.908, -6.34692, 0.07 ) }
    dend_35 { pt3dadd( 54.1625, 187.11, -6.66455, 0.29 ) }
    dend_35 { pt3dadd( 54.1595, 189.098, -7.17633, 0.07 ) }
    dend_35 { pt3dadd( 54.1541, 190.601, -7.54247, 0.07 ) }
    dend_35 { pt3dadd( 54.1477, 191.949, -7.80689, 0.22 ) }
    dend_35 { pt3dadd( 54.1289, 193.086, -7.99567, 0.07 ) }
    dend_35 { pt3dadd( 54.1211, 193.735, -8.06811, 0.07 ) }
    dend_35 { pt3dadd( 54.1354, 195.289, -8.18229, 0.15 ) }
    dend_35 { pt3dadd( 54.1583, 196.193, -8.18217, 0.07 ) }
    dend_35 { pt3dadd( 54.2966, 197.238, -8.06736, 0.52 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 53/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.1902, -4.17343, -1.0, 1.33 ) }
    dend_16 { pt3dadd( 7.1902, -4.17343, -1.0, 1.33 ) }
    dend_16 { pt3dadd( 7.73648, -4.97396, -1.35335, 0.66 ) }
    dend_16 { pt3dadd( 8.17499, -5.65055, -1.62745, 0.59 ) }
    dend_16 { pt3dadd( 8.54895, -6.27571, -1.86762, 0.59 ) }
    dend_16 { pt3dadd( 8.96072, -6.98936, -2.12147, 0.81 ) }
    dend_16 { pt3dadd( 9.4391, -7.8046, -2.3919, 0.74 ) }
    dend_16 { pt3dadd( 9.99838, -8.74198, -2.68386, 0.74 ) }
    dend_16 { pt3dadd( 10.4021, -9.40883, -2.8786, 0.66 ) }
    dend_16 { pt3dadd( 10.9334, -10.2967, -3.11109, 0.66 ) }
    dend_16 { pt3dadd( 11.3745, -11.0101, -3.28423, 0.52 ) }
    dend_16 { pt3dadd( 11.8112, -11.6661, -3.4317, 0.96 ) }
    dend_16 { pt3dadd( 12.2571, -12.2942, -3.55073, 1.11 ) }
    dend_16 { pt3dadd( 12.9196, -13.1458, -3.70121, 1.03 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 67/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 7.8102, 0.310071, 1.64, 1.25 ) }
    dend_13 { pt3dadd( 7.8102, 0.310071, 1.64, 1.25 ) }
    dend_13 { pt3dadd( 8.81241, 1.80535, 1.27856, 0.59 ) }
    dend_13 { pt3dadd( 9.46903, 2.78502, 1.04175, 0.52 ) }
    dend_13 { pt3dadd( 9.81136, 3.29577, 0.918289, 0.52 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 72/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -4.7098, -0.498429, -8.54, 0.37 ) }
    dend_12 { pt3dadd( -4.874, -0.669746, -9.23734, 0.37 ) }
    dend_12 { pt3dadd( -5.01905, -0.88593, -9.89892, 0.37 ) }
    dend_12 { pt3dadd( -5.21325, -1.18398, -10.6136, 0.37 ) }
    dend_12 { pt3dadd( -5.32599, -1.33701, -10.9582, 0.37 ) }
    dend_12 { pt3dadd( -5.46706, -1.50127, -11.3595, 0.37 ) }
    dend_12 { pt3dadd( -5.6477, -1.69142, -11.8185, 0.22 ) }
    dend_12 { pt3dadd( -5.8168, -1.86809, -12.1889, 0.22 ) }
    dend_12 { pt3dadd( -6.06679, -2.16578, -12.7415, 0.29 ) }
    dend_12 { pt3dadd( -6.24442, -2.41839, -13.1761, 0.29 ) }
    dend_12 { pt3dadd( -6.51001, -2.80585, -13.9022, 0.44 ) }
    dend_12 { pt3dadd( -6.63816, -2.9588, -14.2677, 0.44 ) }
    dend_12 { pt3dadd( -6.82047, -3.10165, -14.7647, 0.44 ) }
    dend_12 { pt3dadd( -6.97834, -3.20175, -15.173, 0.44 ) }
    dend_12 { pt3dadd( -7.10692, -3.25037, -15.3985, 0.44 ) }
    dend_12 { pt3dadd( -7.34815, -3.29917, -15.6558, 0.44 ) }
    dend_12 { pt3dadd( -7.65375, -3.30707, -15.8892, 0.44 ) }
    dend_12 { pt3dadd( -7.89856, -3.2739, -16.0938, 0.66 ) }
    dend_12 { pt3dadd( -8.25076, -3.15842, -16.3904, 0.66 ) }
    dend_12 { pt3dadd( -8.97878, -2.83882, -16.9853, 0.22 ) }
    dend_12 { pt3dadd( -9.32428, -2.6568, -17.32, 0.22 ) }
    dend_12 { pt3dadd( -9.51477, -2.53694, -17.5513, 0.22 ) }
    dend_12 { pt3dadd( -9.86177, -2.28461, -18.0193, 0.22 ) }
    dend_12 { pt3dadd( -10.1972, -1.99794, -18.4949, 0.22 ) }
    dend_12 { pt3dadd( -10.4731, -1.72764, -18.9052, 0.22 ) }
    dend_12 { pt3dadd( -10.8168, -1.36628, -19.4439, 0.22 ) }
    dend_12 { pt3dadd( -11.1084, -1.0988, -19.8148, 0.22 ) }
    dend_12 { pt3dadd( -11.543, -0.76233, -20.3064, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_12 { pt3dadd( -11.8058, -0.606714, -20.5728, 0.37 ) }
    dend_12 { pt3dadd( -12.2328, -0.400622, -20.9769, 0.74 ) }
    dend_12 { pt3dadd( -12.6591, -0.200305, -21.3543, 0.74 ) }
    dend_12 { pt3dadd( -13.2519, 0.083571, -21.8327, 0.22 ) }
    dend_12 { pt3dadd( -13.6743, 0.294911, -22.1741, 0.22 ) }
    dend_12 { pt3dadd( -14.3236, 0.630899, -22.7257, 0.15 ) }
    dend_12 { pt3dadd( -14.7143, 0.832556, -23.0603, 0.15 ) }
    dend_12 { pt3dadd( -14.8328, 0.893516, -23.1591, 0.15 ) }
    dend_12 { pt3dadd( -15.1703, 1.07437, -23.4334, 0.15 ) }
    dend_12 { pt3dadd( -15.3462, 1.18963, -23.5856, 0.15 ) }
    dend_12 { pt3dadd( -15.5319, 1.34463, -23.7471, 0.15 ) }
    dend_12 { pt3dadd( -15.8697, 1.66227, -24.0744, 0.15 ) }
    dend_12 { pt3dadd( -16.1639, 1.91564, -24.4001, 0.15 ) }
    dend_12 { pt3dadd( -16.5642, 2.22859, -24.8889, 0.07 ) }
    dend_12 { pt3dadd( -16.7745, 2.40754, -25.1816, 0.07 ) }
    dend_12 { pt3dadd( -17.0134, 2.62808, -25.5457, 0.29 ) }
    dend_12 { pt3dadd( -17.3092, 2.93382, -26.033, 0.29 ) }
    dend_12 { pt3dadd( -17.5961, 3.26659, -26.5303, 0.29 ) }
    dend_12 { pt3dadd( -17.9586, 3.7305, -27.1622, 0.29 ) }
    dend_12 { pt3dadd( -18.2856, 4.22294, -27.7534, 0.07 ) }
    dend_12 { pt3dadd( -18.4918, 4.58613, -28.1204, 0.07 ) }
    dend_12 { pt3dadd( -18.6662, 4.95849, -28.4494, 0.07 ) }
    dend_12 { pt3dadd( -18.774, 5.22277, -28.6436, 0.07 ) }
    dend_12 { pt3dadd( -18.9667, 5.7231, -28.9818, 0.96 ) }
    dend_12 { pt3dadd( -19.1981, 6.29444, -29.3537, 0.37 ) }
    dend_12 { pt3dadd( -19.4626, 6.9045, -29.7456, 0.15 ) }
    dend_12 { pt3dadd( -19.6327, 7.38628, -30.0457, 0.15 ) }
    dend_12 { pt3dadd( -19.708, 7.66713, -30.212, 0.15 ) }
    dend_12 { pt3dadd( -19.794, 8.23556, -30.5111, 0.22 ) }
    dend_12 { pt3dadd( -19.8223, 8.64794, -30.7142, 0.07 ) }
    dend_12 { pt3dadd( -19.8474, 9.14304, -30.9474, 0.07 ) }
    dend_12 { pt3dadd( -19.8593, 9.95694, -31.2949, 0.07 ) }
    dend_12 { pt3dadd( -19.8427, 10.4809, -31.4884, 0.66 ) }
    dend_12 { pt3dadd( -19.7652, 11.2958, -31.7674, 0.15 ) }
    dend_12 { pt3dadd( -19.6796, 11.8252, -31.9158, 0.15 ) }
    dend_12 { pt3dadd( -19.635, 12.0193, -31.9695, 0.15 ) }
    dend_12 { pt3dadd( -22.512, 15.8988, -38.2347, 0.15 ) }
    dend_12 { pt3dadd( -25.4009, 20.7416, -43.8529, 0.15 ) }
    dend_12 { pt3dadd( -28.1293, 25.2289, -49.8062, 0.15 ) }
    dend_12 { pt3dadd( -29.8136, 29.9278, -55.9799, 0.15 ) }
    dend_12 { pt3dadd( -32.476, 34.3155, -62.0288, 0.15 ) }
    dend_12 { pt3dadd( -34.2746, 38.4819, -68.5126, 0.15 ) }
    dend_12 { pt3dadd( -36.7306, 41.9983, -75.1376, 0.15 ) }
    dend_12 { pt3dadd( -40.2275, 44.8887, -81.5773, 0.15 ) }
    dend_12 { pt3dadd( -43.7497, 47.6326, -88.0617, 0.15 ) }
    dend_12 { pt3dadd( -48.5548, 50.2234, -93.7411, 0.15 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 46/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -8.3698, 1.10807, -6.25, 0.66 ) }
    dend_3 { pt3dadd( -9.21309, 1.26708, -6.57276, 0.59 ) }
    dend_3 { pt3dadd( -9.95217, 1.40644, -6.85564, 0.59 ) }
    dend_3 { pt3dadd( -10.4264, 1.49586, -7.03715, 0.66 ) }
    dend_3 { pt3dadd( -11.1167, 1.62601, -7.30133, 0.66 ) }
    dend_3 { pt3dadd( -11.8231, 1.75921, -7.57171, 0.88 ) }
    dend_3 { pt3dadd( -12.5494, 1.89617, -7.84972, 1.18 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 53/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.7598, 6.52607, -2.29, 0.96 ) }
    dend_0 { pt3dadd( -4.46353, 7.00135, -2.5551, 0.96 ) }
    dend_0 { pt3dadd( -3.9186, 7.88304, -3.0977, 0.59 ) }
    dend_0 { pt3dadd( -3.41006, 8.73985, -3.65985, 0.37 ) }
    dend_0 { pt3dadd( -2.94617, 9.60633, -4.22384, 0.59 ) }
    dend_0 { pt3dadd( -2.57307, 10.3551, -4.70298, 0.88 ) }
    dend_0 { pt3dadd( -2.13118, 11.2669, -5.30961, 0.59 ) }
    dend_0 { pt3dadd( -1.72705, 12.1257, -5.89093, 0.44 ) }
    dend_0 { pt3dadd( -1.41283, 12.7968, -6.37369, 0.52 ) }
    dend_0 { pt3dadd( -1.04406, 13.6913, -7.01735, 0.52 ) }
    dend_0 { pt3dadd( -0.75632, 14.5181, -7.59159, 0.37 ) }
    dend_0 { pt3dadd( -0.49696, 15.4208, -8.20726, 0.66 ) }
    dend_0 { pt3dadd( -0.294802, 16.2697, -8.76344, 0.96 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 66/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.70294, -3.02848, 0.0, 0.601357 ) }
    axon_0 { pt3dadd( 21.7399, -8.31649, 0.0, 0.601357 ) }
    axon_0 { pt3dadd( 35.7769, -13.6045, 0.0, 0.601357 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 69/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 11.0452, -3.30915, 3.00162, 0.15 ) }
    dend_45 { pt3dadd( 11.5873, -2.93206, 3.89827, 0.15 ) }
    dend_45 { pt3dadd( 11.8366, -2.77603, 4.29866, 0.29 ) }
    dend_45 { pt3dadd( 12.2648, -2.56551, 4.93062, 0.29 ) }
    dend_45 { pt3dadd( 12.7306, -2.38238, 5.54798, 0.15 ) }
    dend_45 { pt3dadd( 13.1791, -2.26466, 6.07367, 0.22 ) }
    dend_45 { pt3dadd( 13.4543, -2.20279, 6.36647, 0.22 ) }
    dend_45 { pt3dadd( 13.684, -2.16614, 6.58761, 0.29 ) }
    dend_45 { pt3dadd( 14.0869, -2.08904, 6.95832, 0.44 ) }
    dend_45 { pt3dadd( 14.466, -2.00737, 7.2979, 0.22 ) }
    dend_45 { pt3dadd( 15.1401, -1.89874, 7.90088, 0.29 ) }
    dend_45 { pt3dadd( 15.5951, -1.84189, 8.3027, 0.22 ) }
    dend_45 { pt3dadd( 16.2898, -1.7812, 8.90714, 0.15 ) }
    dend_45 { pt3dadd( 16.9622, -1.75089, 9.48285, 0.15 ) }
    dend_45 { pt3dadd( 17.6596, -1.74593, 10.1044, 0.22 ) }
    dend_45 { pt3dadd( 18.1219, -1.76298, 10.5429, 0.22 ) }
    dend_45 { pt3dadd( 18.4927, -1.78929, 10.9487, 0.22 ) }
    dend_45 { pt3dadd( 18.8469, -1.82007, 11.4254, 0.22 ) }
    dend_45 { pt3dadd( 19.087, -1.83699, 11.8552, 0.29 ) }
    dend_45 { pt3dadd( 19.3901, -1.85077, 12.6712, 0.66 ) }
    dend_45 { pt3dadd( 19.6091, -1.84714, 13.6076, 0.74 ) }
    dend_45 { pt3dadd( 19.7611, -1.82005, 14.6314, 0.66 ) }
    dend_45 { pt3dadd( 19.8628, -1.7729, 15.7196, 0.29 ) }
    dend_45 { pt3dadd( 19.8959, -1.72923, 16.5156, 0.29 ) }
    dend_45 { pt3dadd( 19.8984, -1.68985, 17.1618, 0.29 ) }
    dend_45 { pt3dadd( 19.8817, -1.6375, 17.8583, 0.29 ) }
    dend_45 { pt3dadd( 19.8679, -1.56744, 18.6979, 0.29 ) }
    dend_45 { pt3dadd( 19.8831, -1.53606, 19.0593, 0.29 ) }
    dend_45 { pt3dadd( 19.9661, -1.46729, 20.064, 0.29 ) }
    dend_45 { pt3dadd( 20.0502, -1.4162, 20.7958, 0.29 ) }
    dend_45 { pt3dadd( 20.0923, -1.37194, 21.3109, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_45 { pt3dadd( 20.1036, -1.31953, 22.1259, 0.29 ) }
    dend_45 { pt3dadd( 20.1075, -1.31972, 22.4344, 0.29 ) }
    dend_45 { pt3dadd( 20.1462, -1.37692, 23.2416, 0.29 ) }
    dend_45 { pt3dadd( 20.1772, -1.42162, 23.5389, 0.29 ) }
    dend_45 { pt3dadd( 20.2486, -1.5374, 24.0825, 0.29 ) }
    dend_45 { pt3dadd( 20.3289, -1.69315, 24.7375, 0.29 ) }
    dend_45 { pt3dadd( 20.3899, -1.8426, 25.715, 0.22 ) }
    dend_45 { pt3dadd( 20.4049, -1.88789, 26.6543, 0.22 ) }
    dend_45 { pt3dadd( 20.4024, -1.87172, 26.9272, 0.22 ) }
    dend_45 { pt3dadd( 20.3344, -1.72575, 27.8138, 0.22 ) }
    dend_45 { pt3dadd( 20.283, -1.64315, 28.1211, 0.22 ) }
    dend_45 { pt3dadd( 19.9876, -1.22367, 29.2264, 0.15 ) }
    dend_45 { pt3dadd( 19.7685, -0.894606, 29.88, 0.15 ) }
    dend_45 { pt3dadd( 19.6351, -0.671464, 30.2232, 0.29 ) }
    dend_45 { pt3dadd( 19.3772, -0.197153, 30.8649, 0.59 ) }
    dend_45 { pt3dadd( 19.1401, 0.281245, 31.4807, 0.22 ) }
    dend_45 { pt3dadd( 18.9168, 0.721724, 32.0946, 0.22 ) }
    dend_45 { pt3dadd( 18.6786, 1.15097, 32.747, 0.22 ) }
    dend_45 { pt3dadd( 18.2717, 1.80904, 33.859, 0.07 ) }
    dend_45 { pt3dadd( 18.0209, 2.19624, 34.5942, 0.37 ) }
    dend_45 { pt3dadd( 17.7338, 2.64613, 35.551, 0.22 ) }
    dend_45 { pt3dadd( 17.4496, 3.07315, 36.5382, 0.22 ) }
    dend_45 { pt3dadd( 17.3285, 3.23001, 36.9498, 0.22 ) }
    dend_45 { pt3dadd( 17.0161, 3.59149, 38.0191, 0.22 ) }
    dend_45 { pt3dadd( 16.9422, 3.69041, 38.3482, 0.22 ) }
    dend_45 { pt3dadd( 16.8768, 3.83245, 38.8115, 0.22 ) }
    dend_45 { pt3dadd( 16.8641, 3.97021, 39.2131, 0.29 ) }
    dend_45 { pt3dadd( 16.9352, 4.27934, 40.0364, 0.29 ) }
    dend_45 { pt3dadd( 17.0302, 4.48607, 40.5429, 0.22 ) }
    dend_45 { pt3dadd( 17.2454, 4.86281, 41.3517, 0.15 ) }
    dend_45 { pt3dadd( 17.5336, 5.34908, 42.381, 0.15 ) }
    dend_45 { pt3dadd( 17.6541, 5.56954, 42.8355, 0.15 ) }
    dend_45 { pt3dadd( 17.7853, 5.81108, 43.3404, 0.15 ) }
    dend_45 { pt3dadd( 17.8987, 6.0623, 43.8343, 0.22 ) }
    dend_45 { pt3dadd( 17.9804, 6.36371, 44.4583, 0.15 ) }
    dend_45 { pt3dadd( 17.9765, 6.59869, 44.8945, 0.15 ) }
    dend_45 { pt3dadd( 17.8895, 6.97284, 45.5674, 0.29 ) }
    dend_45 { pt3dadd( 17.7977, 7.30197, 46.1153, 0.29 ) }
    dend_45 { pt3dadd( 17.7132, 7.59545, 46.6038, 0.29 ) }
    dend_45 { pt3dadd( 17.5634, 8.05523, 47.3284, 0.29 ) }
    dend_45 { pt3dadd( 17.4458, 8.42254, 47.8852, 0.52 ) }
    dend_45 { pt3dadd( 17.295, 8.95867, 48.6754, 0.52 ) }
    dend_45 { pt3dadd( 17.1642, 9.52946, 49.4968, 0.15 ) }
    dend_45 { pt3dadd( 17.0097, 10.2863, 50.5369, 0.15 ) }
    dend_45 { pt3dadd( 16.8767, 10.9124, 51.3775, 0.15 ) }
    dend_45 { pt3dadd( 16.7876, 11.2446, 51.8069, 0.22 ) }
    dend_45 { pt3dadd( 16.6427, 11.6268, 52.3532, 0.22 ) }
    dend_45 { pt3dadd( 16.5556, 11.8059, 52.6237, 0.22 ) }
    dend_45 { pt3dadd( 16.3863, 12.0937, 53.1001, 0.44 ) }
    dend_45 { pt3dadd( 16.193, 12.4497, 53.7027, 0.59 ) }
    dend_45 { pt3dadd( 16.0318, 12.8011, 54.339, 0.07 ) }
    dend_45 { pt3dadd( 15.8534, 13.2335, 55.1454, 0.07 ) }
    dend_45 { pt3dadd( 15.7468, 13.4985, 55.6823, 0.07 ) }
    dend_45 { pt3dadd( 15.6223, 13.7878, 56.2983, 0.07 ) }
    dend_45 { pt3dadd( 15.5073, 14.0906, 56.9405, 0.07 ) }
    dend_45 { pt3dadd( 15.4711, 14.2364, 57.2358, 0.29 ) }
    dend_45 { pt3dadd( 15.4153, 14.6728, 58.0262, 0.29 ) }
    dend_45 { pt3dadd( 15.3863, 14.9886, 58.5142, 0.29 ) }
    dend_45 { pt3dadd( 15.329, 15.5346, 59.243, 0.22 ) }
    dend_45 { pt3dadd( 15.261, 16.2021, 60.0131, 0.07 ) }
    dend_45 { pt3dadd( 15.2245, 16.6244, 60.4438, 0.07 ) }
    dend_45 { pt3dadd( 15.2019, 17.0689, 60.849, 0.07 ) }
    dend_45 { pt3dadd( 15.1999, 17.4865, 61.1583, 0.22 ) }
    dend_45 { pt3dadd( 15.2121, 18.1097, 61.5969, 0.22 ) }
    dend_45 { pt3dadd( 15.2621, 18.9622, 62.1823, 0.07 ) }
    dend_45 { pt3dadd( 15.2904, 19.5053, 62.5645, 0.29 ) }
    dend_45 { pt3dadd( 15.2977, 19.8869, 62.8308, 0.66 ) }
    dend_45 { pt3dadd( 15.3226, 20.9395, 63.6164, 0.22 ) }
    dend_45 { pt3dadd( 15.3563, 21.6044, 64.1348, 0.22 ) }
    dend_45 { pt3dadd( 15.4257, 22.4397, 64.7838, 0.29 ) }
    dend_45 { pt3dadd( 15.4978, 23.1494, 65.3412, 0.29 ) }
    dend_45 { pt3dadd( 15.6312, 24.246, 66.2398, 0.15 ) }
    dend_45 { pt3dadd( 15.7615, 25.1474, 67.0112, 0.15 ) }
    dend_45 { pt3dadd( 15.84, 25.6244, 67.3993, 0.29 ) }
    dend_45 { pt3dadd( 15.9927, 26.5275, 68.0886, 0.52 ) }
    dend_45 { pt3dadd( 16.1888, 27.7648, 68.9795, 0.15 ) }
    dend_45 { pt3dadd( 16.3192, 28.5521, 69.5334, 0.15 ) }
    dend_45 { pt3dadd( 16.3936, 28.9876, 69.8354, 0.15 ) }
    dend_45 { pt3dadd( 16.5519, 30.0983, 70.5979, 0.15 ) }
    dend_45 { pt3dadd( 16.7199, 31.5249, 71.5905, 0.15 ) }
    dend_45 { pt3dadd( 16.8834, 33.1574, 72.7247, 0.15 ) }
    dend_45 { pt3dadd( 16.9673, 34.0762, 73.3461, 0.15 ) }
    dend_45 { pt3dadd( 17.054, 34.8683, 73.888, 0.15 ) }
    dend_45 { pt3dadd( 17.2032, 35.8789, 74.6426, 0.15 ) }
    dend_45 { pt3dadd( 17.2981, 36.3589, 75.0385, 0.15 ) }
    dend_45 { pt3dadd( 17.4354, 36.8574, 75.4388, 0.44 ) }
    dend_45 { pt3dadd( 17.5589, 37.1949, 75.7103, 0.44 ) }
    dend_45 { pt3dadd( 17.9471, 38.1697, 76.4653, 0.15 ) }
    dend_45 { pt3dadd( 18.3304, 39.0606, 77.1825, 0.15 ) }
    dend_45 { pt3dadd( 18.4793, 39.4035, 77.4585, 0.15 ) }
    dend_45 { pt3dadd( 18.7508, 40.083, 78.0192, 0.07 ) }
    dend_45 { pt3dadd( 18.9057, 40.5767, 78.4466, 0.22 ) }
    dend_45 { pt3dadd( 19.132, 41.6169, 79.3643, 0.07 ) }
    dend_45 { pt3dadd( 19.1835, 42.1597, 79.8349, 0.29 ) }
    dend_45 { pt3dadd( 19.1925, 42.7894, 80.367, 0.37 ) }
    dend_45 { pt3dadd( 19.1932, 43.4116, 80.9124, 0.15 ) }
    dend_45 { pt3dadd( 19.2084, 44.1979, 81.651, 0.15 ) }
    dend_45 { pt3dadd( 19.2305, 44.5608, 82.0123, 0.15 ) }
    dend_45 { pt3dadd( 19.2823, 45.1197, 82.587, 0.37 ) }
    dend_45 { pt3dadd( 19.3105, 45.3313, 82.8254, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_45 { pt3dadd( 19.4778, 46.162, 83.9366, 0.15 ) }
    dend_45 { pt3dadd( 19.6576, 46.7483, 84.8714, 0.15 ) }
    dend_45 { pt3dadd( 19.8536, 47.1808, 85.7528, 0.66 ) }
    dend_45 { pt3dadd( 20.0861, 47.5933, 86.8081, 0.22 ) }
    dend_45 { pt3dadd( 20.2873, 47.902, 87.7588, 0.22 ) }
    dend_45 { pt3dadd( 20.5529, 48.2732, 89.1442, 0.29 ) }
    dend_45 { pt3dadd( 20.7041, 48.4582, 90.0021, 0.52 ) }
    dend_45 { pt3dadd( 21.0197, 48.7973, 91.8393, 0.15 ) }
    dend_45 { pt3dadd( 21.134, 48.9369, 92.5522, 0.15 ) }
    dend_45 { pt3dadd( 21.2267, 49.0972, 93.2599, 0.22 ) }
    dend_45 { pt3dadd( 21.2925, 49.418, 94.2873, 0.22 ) }
    dend_45 { pt3dadd( 21.2733, 49.6374, 94.8276, 0.37 ) }
    dend_45 { pt3dadd( 21.2197, 49.8959, 95.3863, 0.37 ) }
    dend_45 { pt3dadd( 21.0725, 50.5791, 96.6785, 0.07 ) }
    dend_45 { pt3dadd( 20.9854, 51.0216, 97.5301, 0.07 ) }
    dend_45 { pt3dadd( 20.9352, 51.3856, 98.181, 0.37 ) }
    dend_45 { pt3dadd( 20.8972, 52.2799, 99.6162, 0.07 ) }
    dend_45 { pt3dadd( 20.9218, 52.9049, 100.576, 0.07 ) }
    dend_45 { pt3dadd( 20.9823, 53.3226, 101.186, 0.22 ) }
    dend_45 { pt3dadd( 21.1947, 54.0872, 102.284, 0.22 ) }
    dend_45 { pt3dadd( 21.424, 54.7341, 103.197, 0.07 ) }
    dend_45 { pt3dadd( 21.6566, 55.2789, 104.016, 0.07 ) }
    dend_45 { pt3dadd( 21.815, 55.6278, 104.512, 0.07 ) }
    dend_45 { pt3dadd( 21.966, 55.9647, 105.064, 0.22 ) }
    dend_45 { pt3dadd( 22.1143, 56.2681, 105.619, 0.22 ) }
    dend_45 { pt3dadd( 22.5059, 57.0019, 107.025, 0.15 ) }
    dend_45 { pt3dadd( 22.8023, 57.4989, 108.053, 0.15 ) }
    dend_45 { pt3dadd( 22.9964, 57.7884, 108.632, 0.29 ) }
    dend_45 { pt3dadd( 23.5257, 58.5164, 110.028, 0.07 ) }
    dend_45 { pt3dadd( 24.0295, 59.1738, 111.205, 0.07 ) }
    dend_45 { pt3dadd( 24.2549, 59.4734, 111.681, 0.22 ) }
    dend_45 { pt3dadd( 24.8745, 60.3507, 112.9, 0.07 ) }
    dend_45 { pt3dadd( 25.3244, 61.0302, 113.76, 0.15 ) }
    dend_45 { pt3dadd( 25.7088, 61.6271, 114.488, 0.07 ) }
    dend_45 { pt3dadd( 26.1301, 62.313, 115.259, 0.22 ) }
    dend_45 { pt3dadd( 26.8431, 63.5321, 116.682, 0.07 ) }
    dend_45 { pt3dadd( 27.1749, 64.1255, 117.378, 0.07 ) }
    dend_45 { pt3dadd( 27.3494, 64.4524, 117.735, 0.22 ) }
    dend_45 { pt3dadd( 27.6121, 64.9428, 118.252, 0.22 ) }
    dend_45 { pt3dadd( 28.1529, 65.8888, 119.198, 0.07 ) }
    dend_45 { pt3dadd( 28.5778, 66.553, 119.86, 0.07 ) }
    dend_45 { pt3dadd( 29.0027, 67.1486, 120.475, 0.07 ) }
    dend_45 { pt3dadd( 29.7994, 68.1742, 121.551, 0.07 ) }
    dend_45 { pt3dadd( 30.1497, 68.61, 122.019, 0.22 ) }
    dend_45 { pt3dadd( 30.4676, 69.0065, 122.46, 0.22 ) }
    dend_45 { pt3dadd( 31.2729, 70.1014, 123.55, 0.07 ) }
    dend_45 { pt3dadd( 31.9079, 71.0566, 124.426, 0.07 ) }
    dend_45 { pt3dadd( 32.5544, 72.1662, 125.41, 0.07 ) }
    dend_45 { pt3dadd( 33.0672, 73.1678, 126.289, 0.07 ) }
    dend_45 { pt3dadd( 33.4736, 74.1101, 127.106, 0.07 ) }
    dend_45 { pt3dadd( 34.0095, 75.7213, 128.497, 0.07 ) }
    dend_45 { pt3dadd( 34.1685, 76.4583, 129.122, 0.07 ) }
    dend_45 { pt3dadd( 34.3346, 77.6803, 130.158, 0.29 ) }
    dend_45 { pt3dadd( 34.3545, 78.0086, 130.459, 0.29 ) }
    dend_45 { pt3dadd( 34.3558, 79.1601, 131.587, 0.07 ) }
    dend_45 { pt3dadd( 34.3395, 79.8225, 132.244, 0.07 ) }
    dend_45 { pt3dadd( 34.286, 80.4794, 132.91, 0.07 ) }
    dend_45 { pt3dadd( 34.1955, 81.1266, 133.491, 0.22 ) }
    dend_45 { pt3dadd( 34.0321, 82.0548, 134.233, 0.22 ) }
    dend_45 { pt3dadd( 33.8012, 83.341, 135.164, 0.07 ) }
    dend_45 { pt3dadd( 33.5548, 84.8531, 136.17, 0.07 ) }
    dend_45 { pt3dadd( 33.3566, 86.1305, 136.984, 0.07 ) }
    dend_45 { pt3dadd( 33.2595, 86.7666, 137.369, 0.29 ) }
    dend_45 { pt3dadd( 33.1658, 87.3228, 137.691, 0.29 ) }
    dend_45 { pt3dadd( 32.8333, 89.2334, 138.712, 0.07 ) }
    dend_45 { pt3dadd( 32.6818, 90.2075, 139.234, 0.07 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 66/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 11.0452, -3.30915, 3.00162, 0.29 ) }
    dend_40 { pt3dadd( 11.3909, -3.69559, 3.28295, 0.29 ) }
    dend_40 { pt3dadd( 11.815, -4.16102, 3.65723, 0.37 ) }
    dend_40 { pt3dadd( 12.0691, -4.52092, 3.93489, 0.37 ) }
    dend_40 { pt3dadd( 12.3656, -5.02315, 4.25802, 0.37 ) }
    dend_40 { pt3dadd( 12.5893, -5.44631, 4.51109, 0.29 ) }
    dend_40 { pt3dadd( 12.8169, -5.89909, 4.77739, 0.37 ) }
    dend_40 { pt3dadd( 13.0456, -6.36324, 5.07786, 0.52 ) }
    dend_40 { pt3dadd( 13.4787, -7.23448, 5.66703, 0.29 ) }
    dend_40 { pt3dadd( 13.7442, -7.78885, 6.06072, 0.44 ) }
    dend_40 { pt3dadd( 14.0547, -8.44662, 6.50833, 0.29 ) }
    dend_40 { pt3dadd( 14.2873, -8.93432, 6.84069, 0.37 ) }
    dend_40 { pt3dadd( 14.6278, -9.57415, 7.29519, 0.22 ) }
    dend_40 { pt3dadd( 14.8608, -9.97469, 7.62006, 0.29 ) }
    dend_40 { pt3dadd( 15.1596, -10.4869, 8.10307, 0.44 ) }
    dend_40 { pt3dadd( 15.3993, -10.9631, 8.60763, 0.81 ) }
    dend_40 { pt3dadd( 15.6015, -11.4544, 9.12253, 0.74 ) }
    dend_40 { pt3dadd( 15.8181, -12.1032, 9.78244, 0.37 ) }
    dend_40 { pt3dadd( 15.9912, -12.8418, 10.5218, 0.37 ) }
    dend_40 { pt3dadd( 16.1047, -13.4627, 11.1476, 0.22 ) }
    dend_40 { pt3dadd( 16.2025, -14.0536, 11.7426, 0.59 ) }
    dend_40 { pt3dadd( 16.2976, -14.6363, 12.3163, 0.59 ) }
    dend_40 { pt3dadd( 16.4043, -15.2696, 12.8923, 0.37 ) }
    dend_40 { pt3dadd( 16.5415, -16.1155, 13.5844, 0.44 ) }
    dend_40 { pt3dadd( 16.6528, -16.7996, 14.0635, 0.29 ) }
    dend_40 { pt3dadd( 16.7283, -17.2606, 14.3508, 0.29 ) }
    dend_40 { pt3dadd( 16.7867, -17.7431, 14.6093, 0.29 ) }
    dend_40 { pt3dadd( 16.8336, -18.2912, 14.8911, 0.29 ) }
    dend_40 { pt3dadd( 16.8609, -18.7991, 15.1237, 0.22 ) }
    dend_40 { pt3dadd( 16.8851, -19.6229, 15.4379, 0.37 ) }
    dend_40 { pt3dadd( 16.8458, -20.2535, 15.661, 0.37 ) }
    dend_40 { pt3dadd( 16.7182, -21.2011, 16.0033, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 98/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -6.39348, -23.8693, 21.7925, 0.29 ) }
    dend_38 { pt3dadd( -5.70034, -25.1325, 21.3886, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_38 { pt3dadd( -5.04402, -26.5006, 21.0098, 0.29 ) }
    dend_38 { pt3dadd( -4.57016, -27.7336, 20.7195, 0.22 ) }
    dend_38 { pt3dadd( -4.38036, -28.3546, 20.5956, 0.37 ) }
    dend_38 { pt3dadd( -4.2388, -28.9193, 20.4981, 0.74 ) }
    dend_38 { pt3dadd( -3.9596, -30.237, 20.3379, 0.52 ) }
    dend_38 { pt3dadd( -3.82624, -31.2923, 20.3037, 0.37 ) }
    dend_38 { pt3dadd( -3.77705, -32.4942, 20.3718, 0.37 ) }
    dend_38 { pt3dadd( -3.81011, -33.3273, 20.4905, 0.52 ) }
    dend_38 { pt3dadd( -3.88466, -34.0661, 20.6453, 0.52 ) }
    dend_38 { pt3dadd( -4.09403, -35.2549, 20.9799, 0.52 ) }
    dend_38 { pt3dadd( -4.36566, -36.3284, 21.3746, 0.22 ) }
    dend_38 { pt3dadd( -4.67573, -37.303, 21.7841, 0.15 ) }
    dend_38 { pt3dadd( -5.0946, -38.4008, 22.2742, 0.29 ) }
    dend_38 { pt3dadd( -5.39167, -38.9911, 22.5469, 0.29 ) }
    dend_38 { pt3dadd( -6.00292, -39.9075, 22.9879, 0.22 ) }
    dend_38 { pt3dadd( -6.61113, -40.6381, 23.3329, 0.74 ) }
    dend_38 { pt3dadd( -7.79379, -41.8587, 23.9011, 0.22 ) }
    dend_38 { pt3dadd( -8.28951, -42.3233, 24.1113, 0.22 ) }
    dend_38 { pt3dadd( -9.31034, -43.2166, 24.4904, 0.29 ) }
    dend_38 { pt3dadd( -10.3699, -44.0899, 24.8809, 0.22 ) }
    dend_38 { pt3dadd( -10.9616, -44.5535, 25.0836, 0.15 ) }
    dend_38 { pt3dadd( -11.4951, -44.9971, 25.2651, 0.22 ) }
    dend_38 { pt3dadd( -12.1211, -45.5934, 25.5114, 0.44 ) }
    dend_38 { pt3dadd( -12.481, -46.0264, 25.6815, 0.44 ) }
    dend_38 { pt3dadd( -13.0324, -46.9386, 25.9965, 0.44 ) }
    dend_38 { pt3dadd( -13.414, -47.7343, 26.2479, 0.44 ) }
    dend_38 { pt3dadd( -13.9247, -48.9433, 26.6258, 0.37 ) }
    dend_38 { pt3dadd( -14.2669, -49.8254, 26.9228, 0.44 ) }
    dend_38 { pt3dadd( -14.5299, -50.5046, 27.173, 0.59 ) }
    dend_38 { pt3dadd( -14.9831, -51.6289, 27.647, 0.29 ) }
    dend_38 { pt3dadd( -15.5123, -52.8701, 28.2034, 0.37 ) }
    dend_38 { pt3dadd( -16.0079, -53.9664, 28.7253, 0.29 ) }
    dend_38 { pt3dadd( -16.4871, -54.9666, 29.1965, 0.22 ) }
    dend_38 { pt3dadd( -16.9553, -55.938, 29.6265, 0.22 ) }
    dend_38 { pt3dadd( -17.2551, -56.5519, 29.8845, 0.22 ) }
    dend_38 { pt3dadd( -17.8, -57.6443, 30.3104, 0.66 ) }
    dend_38 { pt3dadd( -18.3044, -58.6827, 30.6816, 0.66 ) }
    dend_38 { pt3dadd( -18.79, -59.7341, 31.0151, 0.29 ) }
    dend_38 { pt3dadd( -19.4879, -61.2419, 31.4531, 0.22 ) }
    dend_38 { pt3dadd( -19.9499, -62.2469, 31.7524, 0.44 ) }
    dend_38 { pt3dadd( -20.2892, -62.975, 32.0038, 0.59 ) }
    dend_38 { pt3dadd( -20.9955, -64.4616, 32.6504, 0.22 ) }
    dend_38 { pt3dadd( -21.4362, -65.3841, 33.1035, 0.37 ) }
    dend_38 { pt3dadd( -21.8682, -66.2914, 33.5765, 0.29 ) }
    dend_38 { pt3dadd( -22.3188, -67.2352, 34.0667, 0.66 ) }
    dend_38 { pt3dadd( -22.8011, -68.301, 34.5935, 0.29 ) }
    dend_38 { pt3dadd( -23.1998, -69.2492, 35.0255, 0.29 ) }
    dend_38 { pt3dadd( -23.6035, -70.2934, 35.4586, 0.29 ) }
    dend_38 { pt3dadd( -24.0349, -71.498, 35.9335, 0.22 ) }
    dend_38 { pt3dadd( -24.3704, -72.4904, 36.306, 0.66 ) }
    dend_38 { pt3dadd( -24.9881, -74.2729, 36.9696, 0.22 ) }
    dend_38 { pt3dadd( -25.5264, -75.7601, 37.5432, 0.22 ) }
    dend_38 { pt3dadd( -25.8107, -76.5168, 37.8551, 0.37 ) }
    dend_38 { pt3dadd( -26.0669, -77.2029, 38.1798, 0.37 ) }
    dend_38 { pt3dadd( -26.3977, -78.0954, 38.6368, 0.22 ) }
    dend_38 { pt3dadd( -26.8024, -79.2015, 39.2211, 0.22 ) }
    dend_38 { pt3dadd( -27.084, -79.9135, 39.6024, 0.22 ) }
    dend_38 { pt3dadd( -27.4234, -80.7132, 40.0175, 0.29 ) }
    dend_38 { pt3dadd( -27.7743, -81.4969, 40.3854, 0.66 ) }
    dend_38 { pt3dadd( -28.3882, -82.7966, 40.9567, 0.22 ) }
    dend_38 { pt3dadd( -28.9722, -83.9945, 41.4473, 0.15 ) }
    dend_38 { pt3dadd( -29.2353, -84.5208, 41.6491, 0.15 ) }
    dend_38 { pt3dadd( -29.504, -85.0537, 41.8419, 0.15 ) }
    dend_38 { pt3dadd( -30.041, -86.1385, 42.2415, 0.29 ) }
    dend_38 { pt3dadd( -30.6749, -87.425, 42.698, 0.15 ) }
    dend_38 { pt3dadd( -31.0074, -88.1184, 42.9307, 0.15 ) }
    dend_38 { pt3dadd( -31.3314, -88.8472, 43.1645, 0.59 ) }
    dend_38 { pt3dadd( -31.7056, -89.8612, 43.4644, 0.22 ) }
    dend_38 { pt3dadd( -31.9958, -90.7858, 43.7186, 0.22 ) }
    dend_38 { pt3dadd( -32.2641, -91.6636, 43.9604, 0.74 ) }
    dend_38 { pt3dadd( -32.6018, -92.6863, 44.2358, 0.22 ) }
    dend_38 { pt3dadd( -33.0664, -93.9697, 44.606, 0.44 ) }
    dend_38 { pt3dadd( -33.5623, -95.2376, 45.0015, 0.22 ) }
    dend_38 { pt3dadd( -34.0535, -96.4317, 45.3934, 0.22 ) }
    dend_38 { pt3dadd( -34.5166, -97.4833, 45.7407, 0.22 ) }
    dend_38 { pt3dadd( -34.7992, -98.121, 45.9712, 0.22 ) }
    dend_38 { pt3dadd( -35.1802, -98.9905, 46.3219, 0.15 ) }
    dend_38 { pt3dadd( -35.5256, -99.8408, 46.6728, 0.44 ) }
    dend_38 { pt3dadd( -35.7192, -100.425, 46.9092, 0.44 ) }
    dend_38 { pt3dadd( -35.9535, -101.453, 47.2731, 0.22 ) }
    dend_38 { pt3dadd( -36.1564, -102.807, 47.7069, 0.29 ) }
    dend_38 { pt3dadd( -36.2968, -103.872, 48.0209, 0.22 ) }
    dend_38 { pt3dadd( -36.4545, -104.866, 48.2905, 0.29 ) }
    dend_38 { pt3dadd( -36.6456, -105.808, 48.5291, 0.29 ) }
    dend_38 { pt3dadd( -36.9571, -107.156, 48.8405, 0.22 ) }
    dend_38 { pt3dadd( -37.2525, -108.298, 49.0653, 0.22 ) }
    dend_38 { pt3dadd( -37.5474, -109.282, 49.2171, 0.37 ) }
    dend_38 { pt3dadd( -37.8952, -110.341, 49.3684, 0.52 ) }
    dend_38 { pt3dadd( -38.4414, -111.919, 49.5998, 0.22 ) }
    dend_38 { pt3dadd( -38.7248, -112.701, 49.7253, 0.22 ) }
    dend_38 { pt3dadd( -39.1067, -113.753, 49.893, 0.37 ) }
    dend_38 { pt3dadd( -39.2307, -114.108, 49.9437, 0.37 ) }
    dend_38 { pt3dadd( -39.7301, -115.589, 50.1902, 0.22 ) }
    dend_38 { pt3dadd( -40.1563, -116.781, 50.4299, 0.22 ) }
    dend_38 { pt3dadd( -40.5384, -117.728, 50.6476, 0.22 ) }
    dend_38 { pt3dadd( -40.955, -118.655, 50.885, 0.37 ) }
    dend_38 { pt3dadd( -41.3157, -119.42, 51.0873, 0.37 ) }
    dend_38 { pt3dadd( -41.8644, -120.525, 51.385, 0.22 ) }
    dend_38 { pt3dadd( -42.5525, -121.808, 51.7305, 0.59 ) }
    dend_38 { pt3dadd( -43.0918, -122.796, 51.9896, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( -43.7545, -124.101, 52.3069, 0.22 ) }
    dend_38 { pt3dadd( -44.1867, -124.985, 52.5101, 0.29 ) }
    dend_38 { pt3dadd( -44.4841, -125.624, 52.6305, 0.59 ) }
    dend_38 { pt3dadd( -44.7691, -126.283, 52.7271, 0.59 ) }
    dend_38 { pt3dadd( -45.216, -127.392, 52.8925, 0.29 ) }
    dend_38 { pt3dadd( -45.6317, -128.491, 53.0863, 0.22 ) }
    dend_38 { pt3dadd( -45.9818, -129.45, 53.2667, 0.22 ) }
    dend_38 { pt3dadd( -46.4357, -130.741, 53.5357, 0.15 ) }
    dend_38 { pt3dadd( -46.8012, -131.844, 53.774, 0.15 ) }
    dend_38 { pt3dadd( -47.1408, -132.885, 54.0157, 0.59 ) }
    dend_38 { pt3dadd( -47.7903, -134.812, 54.5347, 0.22 ) }
    dend_38 { pt3dadd( -48.316, -136.266, 54.9582, 0.15 ) }
    dend_38 { pt3dadd( -48.6575, -137.203, 55.2463, 0.22 ) }
    dend_38 { pt3dadd( -49.0022, -138.137, 55.5372, 0.44 ) }
    dend_38 { pt3dadd( -49.2789, -138.874, 55.7558, 0.22 ) }
    dend_38 { pt3dadd( -49.7515, -140.162, 56.0888, 0.15 ) }
    dend_38 { pt3dadd( -50.071, -141.044, 56.28, 0.15 ) }
    dend_38 { pt3dadd( -50.3464, -141.824, 56.4121, 0.22 ) }
    dend_38 { pt3dadd( -50.6228, -142.642, 56.5147, 0.29 ) }
    dend_38 { pt3dadd( -51.0861, -144.076, 56.6531, 0.29 ) }
    dend_38 { pt3dadd( -51.5953, -145.753, 56.7583, 0.22 ) }
    dend_38 { pt3dadd( -51.9135, -146.829, 56.7925, 0.22 ) }
    dend_38 { pt3dadd( -52.3515, -148.278, 56.8718, 0.15 ) }
    dend_38 { pt3dadd( -52.6704, -149.298, 56.942, 0.52 ) }
    dend_38 { pt3dadd( -52.9153, -150.097, 57.0115, 0.59 ) }
    dend_38 { pt3dadd( -53.3078, -151.52, 57.1453, 0.66 ) }
    dend_38 { pt3dadd( -53.7123, -153.226, 57.3749, 0.29 ) }
    dend_38 { pt3dadd( -54.0483, -154.927, 57.6538, 0.29 ) }
    dend_38 { pt3dadd( -54.1936, -155.845, 57.811, 0.15 ) }
    dend_38 { pt3dadd( -54.3289, -156.76, 57.9692, 0.15 ) }
    dend_38 { pt3dadd( -54.4988, -158.089, 58.216, 0.29 ) }
    dend_38 { pt3dadd( -54.648, -159.623, 58.5117, 0.44 ) }
    dend_38 { pt3dadd( -54.7669, -161.273, 58.8161, 0.15 ) }
    dend_38 { pt3dadd( -54.8005, -161.889, 58.923, 0.15 ) }
    dend_38 { pt3dadd( -54.8465, -162.526, 59.0515, 0.15 ) }
    dend_38 { pt3dadd( -54.937, -163.543, 59.2668, 0.15 ) }
    dend_38 { pt3dadd( -54.9944, -164.269, 59.4472, 0.15 ) }
    dend_38 { pt3dadd( -55.0175, -164.995, 59.6356, 0.29 ) }
    dend_38 { pt3dadd( -55.0008, -166.179, 59.9388, 0.15 ) }
    dend_38 { pt3dadd( -54.9781, -166.909, 60.1413, 0.15 ) }
    dend_38 { pt3dadd( -54.9353, -167.834, 60.4057, 0.81 ) }
    dend_38 { pt3dadd( -54.8977, -169.235, 60.8113, 0.22 ) }
    dend_38 { pt3dadd( -54.9285, -170.327, 61.1557, 0.22 ) }
    dend_38 { pt3dadd( -55.0416, -172.036, 61.7472, 0.15 ) }
    dend_38 { pt3dadd( -55.149, -173.007, 62.1151, 0.15 ) }
    dend_38 { pt3dadd( -55.2441, -173.598, 62.3627, 0.59 ) }
    dend_38 { pt3dadd( -55.3836, -174.193, 62.6393, 0.59 ) }
    dend_38 { pt3dadd( -55.9858, -175.976, 63.6003, 0.22 ) }
    dend_38 { pt3dadd( -56.4886, -177.171, 64.3672, 0.22 ) }
    dend_38 { pt3dadd( -56.9599, -178.145, 65.1015, 0.22 ) }
    dend_38 { pt3dadd( -57.2929, -178.794, 65.6442, 0.15 ) }
    dend_38 { pt3dadd( -57.6698, -179.438, 66.2765, 0.29 ) }
    dend_38 { pt3dadd( -58.3489, -180.453, 67.4524, 0.22 ) }
    dend_38 { pt3dadd( -58.8311, -181.075, 68.2976, 0.37 ) }
    dend_38 { pt3dadd( -59.3773, -181.693, 69.2407, 0.52 ) }
    dend_38 { pt3dadd( -59.8502, -182.227, 70.0769, 0.44 ) }
    dend_38 { pt3dadd( -60.3924, -182.917, 71.0829, 0.22 ) }
    dend_38 { pt3dadd( -60.8842, -183.624, 71.9868, 0.66 ) }
    dend_38 { pt3dadd( -61.2874, -184.302, 72.7139, 0.74 ) }
    dend_38 { pt3dadd( -62.0192, -185.741, 74.0543, 0.22 ) }
    dend_38 { pt3dadd( -62.3504, -186.539, 74.7108, 0.22 ) }
    dend_38 { pt3dadd( -62.6972, -187.608, 75.4668, 0.15 ) }
    dend_38 { pt3dadd( -62.9413, -188.643, 76.1147, 0.22 ) }
    dend_38 { pt3dadd( -63.1733, -189.773, 76.7603, 0.22 ) }
    dend_38 { pt3dadd( -63.4162, -191.017, 77.4306, 0.15 ) }
    dend_38 { pt3dadd( -63.5591, -191.847, 77.8567, 0.52 ) }
    dend_38 { pt3dadd( -63.6871, -192.587, 78.2756, 0.59 ) }
    dend_38 { pt3dadd( -63.8871, -193.643, 78.9259, 0.15 ) }
    dend_38 { pt3dadd( -64.11, -194.812, 79.6698, 0.22 ) }
    dend_38 { pt3dadd( -64.378, -196.038, 80.4133, 0.15 ) }
    dend_38 { pt3dadd( -64.5885, -196.902, 80.9085, 0.37 ) }
    dend_38 { pt3dadd( -64.8279, -197.825, 81.4289, 0.37 ) }
    dend_38 { pt3dadd( -65.1086, -198.921, 82.0426, 0.15 ) }
    dend_38 { pt3dadd( -65.3454, -199.923, 82.5721, 0.22 ) }
    dend_38 { pt3dadd( -65.6384, -201.342, 83.3071, 0.15 ) }
    dend_38 { pt3dadd( -65.9351, -202.803, 84.0408, 0.15 ) }
    dend_38 { pt3dadd( -66.0419, -203.342, 84.3067, 0.37 ) }
    dend_38 { pt3dadd( -66.203, -204.24, 84.7108, 0.37 ) }
    dend_38 { pt3dadd( -66.3696, -205.407, 85.2338, 0.15 ) }
    dend_38 { pt3dadd( -66.4558, -206.113, 85.5563, 0.15 ) }
    dend_38 { pt3dadd( -66.5209, -206.758, 85.8632, 0.37 ) }
    dend_38 { pt3dadd( -66.6232, -207.64, 86.2815, 0.37 ) }
    dend_38 { pt3dadd( -66.871, -209.383, 87.0868, 0.07 ) }
    dend_38 { pt3dadd( -67.0466, -210.278, 87.4799, 0.22 ) }
    dend_38 { pt3dadd( -67.3709, -211.523, 87.9675, 0.07 ) }
    dend_38 { pt3dadd( -67.5018, -211.943, 88.1145, 0.07 ) }
    dend_38 { pt3dadd( -67.8466, -212.951, 88.4269, 0.29 ) }
    dend_38 { pt3dadd( -68.1363, -213.714, 88.5981, 0.15 ) }
    dend_38 { pt3dadd( -68.5006, -214.646, 88.7432, 0.29 ) }
    dend_38 { pt3dadd( -69.05, -216.151, 88.8382, 0.07 ) }
    dend_38 { pt3dadd( -69.3456, -217.042, 88.8311, 0.07 ) }
    dend_38 { pt3dadd( -69.6878, -218.208, 88.7728, 0.59 ) }
    dend_38 { pt3dadd( -70.1069, -219.825, 88.6228, 0.15 ) }
    dend_38 { pt3dadd( -70.3143, -220.679, 88.5173, 0.22 ) }
    dend_38 { pt3dadd( -70.626, -222.072, 88.3209, 0.07 ) }
    dend_38 { pt3dadd( -70.81, -222.887, 88.1978, 0.07 ) }
    dend_38 { pt3dadd( -71.0725, -223.953, 88.0283, 0.29 ) }
    dend_38 { pt3dadd( -71.4827, -225.416, 87.8208, 0.07 ) }
    dend_38 { pt3dadd( -71.6775, -226.063, 87.7478, 0.59 ) }
    dend_38 { pt3dadd( -71.8151, -226.507, 87.7036, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_38 { pt3dadd( -72.2683, -228.004, 87.577, 0.07 ) }
    dend_38 { pt3dadd( -72.5571, -229.007, 87.5003, 0.07 ) }
    dend_38 { pt3dadd( -72.7903, -229.849, 87.4402, 0.29 ) }
    dend_38 { pt3dadd( -72.9136, -230.337, 87.3977, 0.29 ) }
    dend_38 { pt3dadd( -73.3024, -231.875, 87.2341, 0.07 ) }
    dend_38 { pt3dadd( -73.5899, -232.952, 87.1079, 0.07 ) }
    dend_38 { pt3dadd( -73.7587, -233.579, 87.0297, 0.66 ) }
    dend_38 { pt3dadd( -73.9777, -234.396, 86.9266, 0.07 ) }
    dend_38 { pt3dadd( -74.2643, -235.446, 86.7818, 0.07 ) }
    dend_38 { pt3dadd( -74.6765, -236.804, 86.5796, 0.07 ) }
    dend_38 { pt3dadd( -74.9322, -237.541, 86.4554, 0.07 ) }
    dend_38 { pt3dadd( -75.2813, -238.493, 86.2885, 0.22 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 12/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -6.39348, -23.8693, 21.7925, 0.15 ) }
    dend_37 { pt3dadd( -7.07357, -24.5288, 22.1037, 0.15 ) }
    dend_37 { pt3dadd( -7.86084, -25.1892, 22.4447, 0.15 ) }
    dend_37 { pt3dadd( -8.68336, -25.8097, 22.7735, 0.15 ) }
    dend_37 { pt3dadd( -9.19987, -26.195, 22.9708, 0.15 ) }
    dend_37 { pt3dadd( -9.70887, -26.5985, 23.1519, 0.29 ) }
    dend_37 { pt3dadd( -10.6865, -27.4107, 23.4832, 0.15 ) }
    dend_37 { pt3dadd( -11.2807, -27.915, 23.6407, 0.22 ) }
    dend_37 { pt3dadd( -12.0182, -28.538, 23.7716, 0.52 ) }
    dend_37 { pt3dadd( -12.612, -29.0878, 23.8561, 0.29 ) }
    dend_37 { pt3dadd( -13.4617, -29.9975, 23.9134, 0.15 ) }
    dend_37 { pt3dadd( -13.9359, -30.6387, 23.8562, 0.15 ) }
    dend_37 { pt3dadd( -14.405, -31.4673, 23.6458, 0.37 ) }
    dend_37 { pt3dadd( -14.6149, -31.9334, 23.481, 0.74 ) }
    dend_37 { pt3dadd( -15.0185, -33.0467, 23.0289, 0.22 ) }
    dend_37 { pt3dadd( -15.3078, -34.01, 22.6113, 0.22 ) }
    dend_37 { pt3dadd( -15.624, -35.4448, 21.9989, 0.29 ) }
    dend_37 { pt3dadd( -15.7553, -36.4177, 21.6407, 0.22 ) }
    dend_37 { pt3dadd( -15.861, -37.4197, 21.346, 0.22 ) }
    dend_37 { pt3dadd( -15.9575, -38.3748, 21.1164, 0.22 ) }
    dend_37 { pt3dadd( -16.0411, -39.0556, 20.9928, 0.22 ) }
    dend_37 { pt3dadd( -16.1755, -40.1188, 20.8829, 0.52 ) }
    dend_37 { pt3dadd( -16.4145, -42.0026, 20.7917, 0.22 ) }
    dend_37 { pt3dadd( -16.6042, -43.5101, 20.7426, 0.22 ) }
    dend_37 { pt3dadd( -16.7355, -44.5132, 20.7126, 0.22 ) }
    dend_37 { pt3dadd( -16.8887, -45.7294, 20.6622, 0.22 ) }
    dend_37 { pt3dadd( -17.0268, -46.9267, 20.604, 0.22 ) }
    dend_37 { pt3dadd( -17.1375, -48.0972, 20.5416, 0.22 ) }
    dend_37 { pt3dadd( -17.1862, -48.994, 20.4824, 0.15 ) }
    dend_37 { pt3dadd( -17.1864, -49.6784, 20.429, 0.22 ) }
    dend_37 { pt3dadd( -17.1673, -51.0309, 20.3264, 0.22 ) }
    dend_37 { pt3dadd( -17.1444, -52.0952, 20.2712, 0.15 ) }
    dend_37 { pt3dadd( -17.1403, -52.8337, 20.256, 0.44 ) }
    dend_37 { pt3dadd( -17.1423, -53.4352, 20.2684, 0.44 ) }
    dend_37 { pt3dadd( -17.1629, -54.2645, 20.3149, 0.22 ) }
    dend_37 { pt3dadd( -17.2168, -55.4852, 20.4253, 0.07 ) }
    dend_37 { pt3dadd( -17.2773, -56.32, 20.5304, 0.07 ) }
    dend_37 { pt3dadd( -17.394, -57.5953, 20.679, 0.07 ) }
    dend_37 { pt3dadd( -17.4937, -58.5478, 20.761, 0.07 ) }
    dend_37 { pt3dadd( -17.5879, -59.3238, 20.7988, 0.22 ) }
    dend_37 { pt3dadd( -17.6912, -60.1711, 20.7766, 0.22 ) }
    dend_37 { pt3dadd( -17.7952, -60.8704, 20.6972, 0.15 ) }
    dend_37 { pt3dadd( -17.9095, -61.4536, 20.5887, 0.52 ) }
    dend_37 { pt3dadd( -18.1065, -62.1897, 20.4094, 0.52 ) }
    dend_37 { pt3dadd( -18.4454, -63.2841, 20.1036, 0.15 ) }
    dend_37 { pt3dadd( -18.7354, -64.0185, 19.8842, 0.15 ) }
    dend_37 { pt3dadd( -19.0854, -64.689, 19.6789, 0.22 ) }
    dend_37 { pt3dadd( -19.3427, -65.0909, 19.5587, 0.22 ) }
    dend_37 { pt3dadd( -20.148, -66.1549, 19.2679, 0.15 ) }
    dend_37 { pt3dadd( -20.6486, -66.7463, 19.1219, 0.29 ) }
    dend_37 { pt3dadd( -21.2728, -67.4035, 19.0093, 0.29 ) }
    dend_37 { pt3dadd( -22.1897, -68.2954, 18.9513, 0.07 ) }
    dend_37 { pt3dadd( -22.887, -68.9331, 18.9599, 0.07 ) }
    dend_37 { pt3dadd( -23.5251, -69.4685, 19.0047, 0.29 ) }
    dend_37 { pt3dadd( -24.5126, -70.2762, 19.1784, 0.29 ) }
    dend_37 { pt3dadd( -25.5716, -71.1887, 19.4449, 0.07 ) }
    dend_37 { pt3dadd( -26.1077, -71.7298, 19.6472, 0.07 ) }
    dend_37 { pt3dadd( -26.8058, -72.5608, 20.0064, 0.22 ) }
    dend_37 { pt3dadd( -27.334, -73.2962, 20.3332, 0.29 ) }
    dend_37 { pt3dadd( -28.0336, -74.3839, 20.7994, 0.07 ) }
    dend_37 { pt3dadd( -28.4646, -75.1025, 21.0926, 0.22 ) }
    dend_37 { pt3dadd( -29.1257, -76.3456, 21.5312, 0.07 ) }
    dend_37 { pt3dadd( -29.3914, -76.8897, 21.7163, 0.07 ) }
    dend_37 { pt3dadd( -29.7937, -77.75, 22.025, 0.29 ) }
    dend_37 { pt3dadd( -30.1165, -78.4215, 22.2743, 0.29 ) }
    dend_37 { pt3dadd( -30.7273, -79.5765, 22.7044, 0.07 ) }
    dend_37 { pt3dadd( -31.3617, -80.6464, 23.1611, 0.07 ) }
    dend_37 { pt3dadd( -32.1402, -81.8707, 23.7407, 0.07 ) }
    dend_37 { pt3dadd( -32.6437, -82.6569, 24.1322, 0.07 ) }
    dend_37 { pt3dadd( -32.9477, -83.1392, 24.3828, 0.22 ) }
    dend_37 { pt3dadd( -33.3419, -83.7797, 24.7124, 0.59 ) }
    dend_37 { pt3dadd( -33.9534, -84.79, 25.2136, 0.07 ) }
    dend_37 { pt3dadd( -34.7003, -86.0278, 25.8254, 0.07 ) }
    dend_37 { pt3dadd( -35.039, -86.6041, 26.1155, 0.07 ) }
    dend_37 { pt3dadd( -35.3486, -87.1537, 26.3813, 0.22 ) }
    dend_37 { pt3dadd( -35.7149, -87.7994, 26.687, 0.29 ) }
    dend_37 { pt3dadd( -36.0097, -88.2876, 26.9266, 0.29 ) }
    dend_37 { pt3dadd( -36.5386, -89.1257, 27.3575, 0.07 ) }
    dend_37 { pt3dadd( -36.9887, -89.7467, 27.7095, 0.07 ) }
    dend_37 { pt3dadd( -37.2534, -90.0844, 27.9297, 0.29 ) }
    dend_37 { pt3dadd( -37.5504, -90.4585, 28.1856, 0.44 ) }
    dend_37 { pt3dadd( -38.1968, -91.2832, 28.7553, 0.22 ) }
    dend_37 { pt3dadd( -38.8381, -92.129, 29.3376, 0.15 ) }
    dend_37 { pt3dadd( -39.3409, -92.8417, 29.8033, 0.29 ) }
    dend_37 { pt3dadd( -39.7559, -93.4992, 30.2104, 0.29 ) }
    dend_37 { pt3dadd( -40.3204, -94.4958, 30.7994, 0.15 ) }
    dend_37 { pt3dadd( -40.6227, -95.0968, 31.1254, 0.22 ) }
    dend_37 { pt3dadd( -41.0206, -96.0253, 31.5557, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_37 { pt3dadd( -41.372, -97.0304, 31.943, 0.07 ) }
    dend_37 { pt3dadd( -41.6388, -97.9714, 32.2415, 0.07 ) }
    dend_37 { pt3dadd( -41.7682, -98.5629, 32.3875, 0.44 ) }
    dend_37 { pt3dadd( -41.8815, -99.2895, 32.5331, 0.44 ) }
    dend_37 { pt3dadd( -42.0326, -100.667, 32.7559, 0.15 ) }
    dend_37 { pt3dadd( -42.1259, -101.964, 32.9144, 0.22 ) }
    dend_37 { pt3dadd( -42.1737, -103.241, 33.046, 0.07 ) }
    dend_37 { pt3dadd( -42.2013, -104.189, 33.121, 0.07 ) }
    dend_37 { pt3dadd( -42.2137, -104.611, 33.1505, 0.07 ) }
    dend_37 { pt3dadd( -42.2503, -105.216, 33.1807, 0.29 ) }
    dend_37 { pt3dadd( -42.3329, -105.928, 33.2072, 0.37 ) }
    dend_37 { pt3dadd( -42.3741, -106.175, 33.2132, 0.37 ) }
    dend_37 { pt3dadd( -42.6853, -107.779, 33.241, 0.07 ) }
    dend_37 { pt3dadd( -42.8801, -108.617, 33.2531, 0.22 ) }
    dend_37 { pt3dadd( -43.3149, -110.312, 33.2522, 0.07 ) }
    dend_37 { pt3dadd( -43.7102, -111.71, 33.2267, 0.07 ) }
    dend_37 { pt3dadd( -43.8419, -112.121, 33.2115, 0.29 ) }
    dend_37 { pt3dadd( -43.9643, -112.463, 33.1924, 0.52 ) }
    dend_37 { pt3dadd( -44.2491, -113.176, 33.1364, 0.22 ) }
    dend_37 { pt3dadd( -44.8915, -114.651, 32.9603, 0.07 ) }
    dend_37 { pt3dadd( -45.2958, -115.535, 32.8211, 0.07 ) }
    dend_37 { pt3dadd( -45.6306, -116.251, 32.6742, 0.29 ) }
    dend_37 { pt3dadd( -46.098, -117.244, 32.4498, 0.15 ) }
    dend_37 { pt3dadd( -46.3118, -117.702, 32.342, 0.29 ) }
    dend_37 { pt3dadd( -46.9546, -119.098, 31.9983, 0.07 ) }
    dend_37 { pt3dadd( -47.2063, -119.674, 31.8534, 0.37 ) }
    dend_37 { pt3dadd( -47.748, -120.915, 31.5441, 0.07 ) }
    dend_37 { pt3dadd( -47.9967, -121.473, 31.4066, 0.07 ) }
    dend_37 { pt3dadd( -48.3784, -122.27, 31.212, 0.74 ) }
    dend_37 { pt3dadd( -49.0197, -123.547, 30.9166, 0.07 ) }
    dend_37 { pt3dadd( -49.6795, -124.842, 30.6507, 0.22 ) }
    dend_37 { pt3dadd( -50.4677, -126.445, 30.3363, 0.07 ) }
    dend_37 { pt3dadd( -50.8909, -127.342, 30.1767, 0.07 ) }
    dend_37 { pt3dadd( -51.1831, -127.989, 30.0646, 0.22 ) }
    dend_37 { pt3dadd( -51.3939, -128.485, 29.9848, 0.22 ) }
    dend_37 { pt3dadd( -51.9469, -129.928, 29.7903, 0.07 ) }
    dend_37 { pt3dadd( -52.2594, -130.795, 29.6849, 0.07 ) }
    dend_37 { pt3dadd( -52.4704, -131.494, 29.6044, 0.22 ) }
    dend_37 { pt3dadd( -52.601, -131.973, 29.5515, 0.22 ) }
    dend_37 { pt3dadd( -52.8809, -133.109, 29.4278, 0.07 ) }
    dend_37 { pt3dadd( -53.0971, -133.983, 29.3358, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 41/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 12.9196, -13.1458, -3.70121, 0.52 ) }
    dend_22 { pt3dadd( 13.3746, -14.1458, -3.30101, 0.52 ) }
    dend_22 { pt3dadd( 13.5087, -14.6179, -3.13624, 0.52 ) }
    dend_22 { pt3dadd( 13.6198, -15.2548, -2.93482, 0.59 ) }
    dend_22 { pt3dadd( 13.6898, -15.7783, -2.77057, 0.59 ) }
    dend_22 { pt3dadd( 13.8102, -16.6104, -2.52409, 0.44 ) }
    dend_22 { pt3dadd( 13.9526, -17.461, -2.27986, 0.66 ) }
    dend_22 { pt3dadd( 14.1638, -18.7825, -1.94077, 0.52 ) }
    dend_22 { pt3dadd( 14.3712, -19.8938, -1.67233, 0.37 ) }
    dend_22 { pt3dadd( 14.5593, -20.7381, -1.47402, 0.37 ) }
    dend_22 { pt3dadd( 14.8133, -21.801, -1.23219, 0.66 ) }
    dend_22 { pt3dadd( 15.0061, -22.5368, -1.04927, 0.81 ) }
    dend_22 { pt3dadd( 15.1797, -23.1168, -0.892592, 0.81 ) }
    dend_22 { pt3dadd( 15.5393, -24.1143, -0.56944, 0.59 ) }
    dend_22 { pt3dadd( 15.8992, -25.0177, -0.24975, 0.66 ) }
    dend_22 { pt3dadd( 16.4307, -26.2862, 0.227342, 0.44 ) }
    dend_22 { pt3dadd( 16.8193, -27.1496, 0.562711, 0.37 ) }
    dend_22 { pt3dadd( 17.1776, -27.8879, 0.861432, 0.37 ) }
    dend_22 { pt3dadd( 17.5024, -28.5246, 1.13811, 0.37 ) }
    dend_22 { pt3dadd( 17.9721, -29.3935, 1.54299, 0.44 ) }
    dend_22 { pt3dadd( 18.4548, -30.2702, 1.96195, 0.37 ) }
    dend_22 { pt3dadd( 19.0467, -31.269, 2.44075, 0.37 ) }
    dend_22 { pt3dadd( 19.5333, -32.0946, 2.81904, 0.44 ) }
    dend_22 { pt3dadd( 19.9059, -32.7732, 3.12474, 0.59 ) }
    dend_22 { pt3dadd( 20.3645, -33.6847, 3.54167, 0.59 ) }
    dend_22 { pt3dadd( 20.8972, -34.8489, 4.15967, 0.52 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 67/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 12.9196, -13.1458, -3.70121, 0.22 ) }
    dend_17 { pt3dadd( 12.7358, -13.7167, -4.68762, 0.22 ) }
    dend_17 { pt3dadd( 12.564, -14.1023, -5.40194, 0.22 ) }
    dend_17 { pt3dadd( 12.3623, -14.5064, -6.24011, 0.59 ) }
    dend_17 { pt3dadd( 12.2388, -14.7536, -6.80209, 0.59 ) }
    dend_17 { pt3dadd( 12.101, -15.04, -7.54195, 0.29 ) }
    dend_17 { pt3dadd( 11.9184, -15.418, -8.51972, 0.22 ) }
    dend_17 { pt3dadd( 11.8864, -15.467, -8.67727, 0.22 ) }
    dend_17 { pt3dadd( 11.7763, -15.6214, -9.18109, 0.22 ) }
    dend_17 { pt3dadd( 11.7179, -15.7209, -9.48394, 0.22 ) }
    dend_17 { pt3dadd( 11.5862, -16.0517, -10.1746, 0.22 ) }
    dend_17 { pt3dadd( 11.455, -16.4982, -10.8286, 0.15 ) }
    dend_17 { pt3dadd( 11.3854, -16.7896, -11.2025, 0.15 ) }
    dend_17 { pt3dadd( 11.317, -17.0395, -11.4981, 0.15 ) }
    dend_17 { pt3dadd( 11.2517, -17.2211, -11.6972, 0.15 ) }
    dend_17 { pt3dadd( 10.9252, -17.9974, -12.5546, 0.07 ) }
    dend_17 { pt3dadd( 10.6628, -18.6139, -13.2601, 0.07 ) }
    dend_17 { pt3dadd( 10.4428, -19.163, -13.9225, 0.07 ) }
    dend_17 { pt3dadd( 10.3093, -19.5366, -14.354, 0.07 ) }
    dend_17 { pt3dadd( 10.1792, -19.9628, -14.8569, 0.29 ) }
    dend_17 { pt3dadd( 10.0997, -20.2647, -15.2377, 0.29 ) }
    dend_17 { pt3dadd( 9.98396, -20.953, -16.2697, 0.07 ) }
    dend_17 { pt3dadd( 9.95559, -21.1522, -16.5865, 0.07 ) }
    dend_17 { pt3dadd( 9.86671, -21.6624, -17.4268, 0.07 ) }
    dend_17 { pt3dadd( 9.76517, -22.1456, -18.2736, 0.22 ) }
    dend_17 { pt3dadd( 9.66248, -22.5378, -19.0107, 0.22 ) }
    dend_17 { pt3dadd( 9.23919, -23.5539, -20.9887, 0.07 ) }
    dend_17 { pt3dadd( 9.10262, -23.7521, -21.4072, 0.07 ) }
    dend_17 { pt3dadd( 8.84401, -24.0075, -21.9972, 0.22 ) }
    dend_17 { pt3dadd( 8.59071, -24.2034, -22.4959, 0.22 ) }
    dend_17 { pt3dadd( 8.37349, -24.3447, -22.8429, 0.22 ) }
    dend_17 { pt3dadd( 7.90276, -24.6028, -23.4318, 0.15 ) }
    dend_17 { pt3dadd( 7.17586, -24.8886, -24.0304, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_17 { pt3dadd( 6.3774, -25.1966, -24.6816, 0.07 ) }
    dend_17 { pt3dadd( 3.66609, -28.1005, -33.0431, 0.07 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 2/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 9.81136, 3.29577, 0.918289, 0.22 ) }
    dend_15 { pt3dadd( 10.1307, 3.57996, 1.99972, 0.22 ) }
    dend_15 { pt3dadd( 10.8315, 4.53945, 4.63685, 0.22 ) }
    dend_15 { pt3dadd( 11.0757, 4.99272, 5.67077, 0.29 ) }
    dend_15 { pt3dadd( 11.2928, 5.61134, 6.80983, 0.59 ) }
    dend_15 { pt3dadd( 11.4758, 6.28904, 7.92463, 0.44 ) }
    dend_15 { pt3dadd( 11.6391, 6.99461, 9.02698, 0.44 ) }
    dend_15 { pt3dadd( 11.7445, 7.78463, 10.0187, 0.22 ) }
    dend_15 { pt3dadd( 11.8185, 8.68581, 10.976, 0.37 ) }
    dend_15 { pt3dadd( 11.9808, 10.2631, 12.5731, 0.22 ) }
    dend_15 { pt3dadd( 12.0916, 10.9979, 13.306, 0.15 ) }
    dend_15 { pt3dadd( 12.2091, 11.571, 13.8742, 0.15 ) }
    dend_15 { pt3dadd( 12.4649, 12.5668, 14.8165, 0.22 ) }
    dend_15 { pt3dadd( 12.7254, 13.4314, 15.5726, 0.22 ) }
    dend_15 { pt3dadd( 12.9714, 14.218, 16.1683, 0.15 ) }
    dend_15 { pt3dadd( 13.2511, 15.167, 16.7676, 0.37 ) }
    dend_15 { pt3dadd( 13.3592, 15.7371, 17.079, 0.37 ) }
    dend_15 { pt3dadd( 13.4564, 16.6891, 17.5801, 0.22 ) }
    dend_15 { pt3dadd( 13.4913, 17.3881, 17.9605, 0.44 ) }
    dend_15 { pt3dadd( 13.5169, 18.2723, 18.4538, 0.81 ) }
    dend_15 { pt3dadd( 13.5391, 18.9881, 18.9054, 0.59 ) }
    dend_15 { pt3dadd( 13.638, 20.106, 19.78, 0.22 ) }
    dend_15 { pt3dadd( 13.7854, 20.842, 20.5312, 0.22 ) }
    dend_15 { pt3dadd( 13.941, 21.4136, 21.2419, 0.22 ) }
    dend_15 { pt3dadd( 14.137, 21.9584, 22.043, 0.22 ) }
    dend_15 { pt3dadd( 14.3174, 22.3489, 22.7341, 0.22 ) }
    dend_15 { pt3dadd( 14.5406, 22.7447, 23.5386, 0.22 ) }
    dend_15 { pt3dadd( 14.6885, 23.0226, 24.1338, 0.22 ) }
    dend_15 { pt3dadd( 14.8248, 23.3965, 24.9881, 0.22 ) }
    dend_15 { pt3dadd( 14.859, 23.6292, 25.5795, 0.22 ) }
    dend_15 { pt3dadd( 14.8593, 24.0089, 26.7249, 0.22 ) }
    dend_15 { pt3dadd( 14.838, 24.4266, 28.3979, 0.37 ) }
    dend_15 { pt3dadd( 14.8595, 24.6416, 29.3941, 0.37 ) }
    dend_15 { pt3dadd( 14.9151, 24.8121, 30.1467, 0.37 ) }
    dend_15 { pt3dadd( 15.0108, 24.9841, 30.8434, 0.37 ) }
    dend_15 { pt3dadd( 15.1606, 25.2571, 31.6193, 0.37 ) }
    dend_15 { pt3dadd( 15.3012, 25.5298, 32.1735, 0.37 ) }
    dend_15 { pt3dadd( 15.5944, 26.1675, 33.2262, 0.22 ) }
    dend_15 { pt3dadd( 15.8846, 26.7065, 34.2108, 0.22 ) }
    dend_15 { pt3dadd( 16.0632, 27.0455, 34.9808, 0.22 ) }
    dend_15 { pt3dadd( 16.1932, 27.4369, 36.0553, 0.22 ) }
    dend_15 { pt3dadd( 16.1772, 27.6202, 36.716, 0.29 ) }
    dend_15 { pt3dadd( 16.0675, 27.8018, 37.6185, 0.29 ) }
    dend_15 { pt3dadd( 15.8001, 28.0418, 39.313, 0.22 ) }
    dend_15 { pt3dadd( 15.6295, 28.2239, 40.6705, 0.22 ) }
    dend_15 { pt3dadd( 15.5142, 28.427, 41.8222, 0.22 ) }
    dend_15 { pt3dadd( 15.4336, 28.7224, 43.0263, 0.37 ) }
    dend_15 { pt3dadd( 15.4184, 28.8909, 43.5268, 0.37 ) }
    dend_15 { pt3dadd( 15.3983, 29.5316, 44.9603, 0.07 ) }
    dend_15 { pt3dadd( 15.3467, 30.488, 46.6152, 0.29 ) }
    dend_15 { pt3dadd( 15.3461, 31.0659, 47.5253, 0.44 ) }
    dend_15 { pt3dadd( 15.409, 31.8896, 48.8437, 0.22 ) }
    dend_15 { pt3dadd( 15.5002, 32.5907, 49.9711, 0.44 ) }
    dend_15 { pt3dadd( 15.6007, 33.1831, 50.9358, 0.37 ) }
    dend_15 { pt3dadd( 15.7727, 33.9558, 52.1902, 0.22 ) }
    dend_15 { pt3dadd( 16.0022, 34.6673, 53.3556, 0.15 ) }
    dend_15 { pt3dadd( 16.3321, 35.3693, 54.4008, 0.15 ) }
    dend_15 { pt3dadd( 16.4706, 35.6015, 54.7184, 0.15 ) }
    dend_15 { pt3dadd( 16.8364, 36.1207, 55.352, 0.29 ) }
    dend_15 { pt3dadd( 17.3065, 36.7659, 56.1039, 0.37 ) }
    dend_15 { pt3dadd( 17.9689, 37.7178, 57.1842, 0.22 ) }
    dend_15 { pt3dadd( 18.5932, 38.771, 58.3768, 0.15 ) }
    dend_15 { pt3dadd( 18.9353, 39.4028, 59.0796, 0.15 ) }
    dend_15 { pt3dadd( 19.2629, 40.0232, 59.7941, 0.22 ) }
    dend_15 { pt3dadd( 19.6683, 40.8152, 60.7513, 0.22 ) }
    dend_15 { pt3dadd( 20.0626, 41.5934, 61.7183, 0.15 ) }
    dend_15 { pt3dadd( 20.3911, 42.2524, 62.5346, 0.15 ) }
    dend_15 { pt3dadd( 20.6754, 42.794, 63.3864, 0.15 ) }
    dend_15 { pt3dadd( 21.0761, 43.5156, 64.6775, 0.15 ) }
    dend_15 { pt3dadd( 21.3094, 43.8764, 65.3758, 0.44 ) }
    dend_15 { pt3dadd( 21.6591, 44.3555, 66.319, 0.44 ) }
    dend_15 { pt3dadd( 22.073, 44.8804, 67.3364, 0.22 ) }
    dend_15 { pt3dadd( 23.4615, 46.4796, 70.4042, 0.15 ) }
    dend_15 { pt3dadd( 23.9606, 46.9901, 71.4072, 0.22 ) }
    dend_15 { pt3dadd( 24.8379, 47.7228, 73.0013, 0.07 ) }
    dend_15 { pt3dadd( 25.5504, 48.2488, 74.2159, 0.07 ) }
    dend_15 { pt3dadd( 26.0261, 48.5866, 74.9915, 0.29 ) }
    dend_15 { pt3dadd( 26.3457, 48.8117, 75.5166, 0.29 ) }
    dend_15 { pt3dadd( 27.0675, 49.3771, 76.7343, 0.15 ) }
    dend_15 { pt3dadd( 28.1747, 50.2551, 79.0676, 0.22 ) }
    dend_15 { pt3dadd( 28.4836, 50.479, 79.8808, 0.22 ) }
    dend_15 { pt3dadd( 28.8212, 50.6981, 80.9192, 0.44 ) }
    dend_15 { pt3dadd( 29.1468, 50.9027, 82.098, 0.44 ) }
    dend_15 { pt3dadd( 29.3821, 51.0442, 83.0768, 0.44 ) }
    dend_15 { pt3dadd( 29.8431, 51.2737, 85.1302, 0.22 ) }
    dend_15 { pt3dadd( 30.0976, 51.3794, 86.2441, 0.22 ) }
    dend_15 { pt3dadd( 30.2883, 51.4209, 86.991, 0.22 ) }
    dend_15 { pt3dadd( 30.5799, 51.4678, 88.0353, 0.22 ) }
    dend_15 { pt3dadd( 30.8764, 51.5611, 88.9287, 0.22 ) }
    dend_15 { pt3dadd( 31.0337, 51.6264, 89.3329, 0.22 ) }
    dend_15 { pt3dadd( 31.2565, 51.7531, 89.8121, 0.22 ) }
    dend_15 { pt3dadd( 31.6681, 52.0191, 90.6294, 0.22 ) }
    dend_15 { pt3dadd( 32.0777, 52.269, 91.4069, 0.29 ) }
    dend_15 { pt3dadd( 32.7168, 52.6748, 92.7068, 0.15 ) }
    dend_15 { pt3dadd( 33.2962, 53.0363, 93.9752, 0.15 ) }
    dend_15 { pt3dadd( 33.6882, 53.258, 94.8208, 0.29 ) }
    dend_15 { pt3dadd( 34.4055, 53.626, 96.352, 0.29 ) }
    dend_15 { pt3dadd( 35.1483, 53.9894, 97.9507, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_15 { pt3dadd( 36.0275, 54.4436, 99.8898, 0.22 ) }
    dend_15 { pt3dadd( 36.7653, 54.9146, 101.591, 0.22 ) }
    dend_15 { pt3dadd( 37.2293, 55.3058, 102.696, 0.07 ) }
    dend_15 { pt3dadd( 37.6088, 55.744, 103.611, 0.15 ) }
    dend_15 { pt3dadd( 38.1017, 56.5277, 104.743, 0.07 ) }
    dend_15 { pt3dadd( 38.441, 57.2428, 105.495, 0.07 ) }
    dend_15 { pt3dadd( 38.7833, 58.1033, 106.206, 0.07 ) }
    dend_15 { pt3dadd( 39.0457, 58.8314, 106.759, 0.59 ) }
    dend_15 { pt3dadd( 39.8187, 60.9149, 108.262, 0.15 ) }
    dend_15 { pt3dadd( 40.4029, 62.3686, 109.268, 0.15 ) }
    dend_15 { pt3dadd( 40.8966, 63.4924, 110.052, 0.66 ) }
    dend_15 { pt3dadd( 41.5236, 64.8187, 111.016, 0.15 ) }
    dend_15 { pt3dadd( 42.0961, 66.0184, 111.933, 0.15 ) }
    dend_15 { pt3dadd( 42.701, 67.3625, 112.981, 0.15 ) }
    dend_15 { pt3dadd( 43.0044, 68.0918, 113.546, 0.29 ) }
    dend_15 { pt3dadd( 43.223, 68.6115, 113.966, 0.29 ) }
    dend_15 { pt3dadd( 43.8204, 69.9566, 115.092, 0.07 ) }
    dend_15 { pt3dadd( 44.1048, 70.5282, 115.608, 0.07 ) }
    dend_15 { pt3dadd( 44.5132, 71.3118, 116.319, 0.44 ) }
    dend_15 { pt3dadd( 45.1123, 72.333, 117.306, 0.22 ) }
    dend_15 { pt3dadd( 45.6913, 73.1247, 118.098, 0.07 ) }
    dend_15 { pt3dadd( 46.1771, 73.6709, 118.677, 0.29 ) }
    dend_15 { pt3dadd( 47.4066, 74.8213, 119.963, 0.15 ) }
    dend_15 { pt3dadd( 48.0192, 75.299, 120.572, 0.44 ) }
    dend_15 { pt3dadd( 48.5873, 75.6611, 121.149, 0.44 ) }
    dend_15 { pt3dadd( 49.7534, 76.2964, 122.346, 0.15 ) }
    dend_15 { pt3dadd( 50.7231, 76.7609, 123.404, 0.15 ) }
    dend_15 { pt3dadd( 51.2609, 76.9504, 124.013, 0.81 ) }
    dend_15 { pt3dadd( 52.6508, 77.2843, 125.676, 0.07 ) }
    dend_15 { pt3dadd( 53.4945, 77.3949, 126.788, 0.07 ) }
    dend_15 { pt3dadd( 54.0313, 77.4219, 127.563, 0.07 ) }
    dend_15 { pt3dadd( 54.7365, 77.4066, 128.631, 0.22 ) }
    dend_15 { pt3dadd( 55.8467, 77.3138, 130.386, 0.07 ) }
    dend_15 { pt3dadd( 56.5708, 77.2179, 131.6, 0.22 ) }
    dend_15 { pt3dadd( 57.3645, 77.094, 132.993, 0.22 ) }
    dend_15 { pt3dadd( 57.6531, 77.0424, 133.518, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 36/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 9.81136, 3.29577, 0.918289, 0.66 ) }
    dend_14 { pt3dadd( 9.94935, 3.47871, 0.776855, 0.66 ) }
    dend_14 { pt3dadd( 10.527, 4.39938, 0.181768, 0.44 ) }
    dend_14 { pt3dadd( 10.8065, 4.92588, -0.132141, 0.44 ) }
    dend_14 { pt3dadd( 11.1491, 5.56981, -0.522513, 0.59 ) }
    dend_14 { pt3dadd( 11.7115, 6.55957, -1.10842, 0.37 ) }
    dend_14 { pt3dadd( 12.062, 7.14802, -1.44259, 0.37 ) }
    dend_14 { pt3dadd( 12.5427, 7.95765, -1.88056, 0.52 ) }
    dend_14 { pt3dadd( 12.9574, 8.66828, -2.2427, 0.29 ) }
    dend_14 { pt3dadd( 13.4634, 9.51353, -2.68964, 0.22 ) }
    dend_14 { pt3dadd( 13.9027, 10.1868, -3.05379, 0.29 ) }
    dend_14 { pt3dadd( 14.6601, 11.2603, -3.64614, 0.22 ) }
    dend_14 { pt3dadd( 15.1499, 11.9372, -4.02566, 0.37 ) }
    dend_14 { pt3dadd( 15.4742, 12.3624, -4.26401, 0.74 ) }
    dend_14 { pt3dadd( 15.9697, 13.0355, -4.62993, 1.03 ) }
    dend_14 { pt3dadd( 16.5992, 13.9759, -5.12054, 0.52 ) }
    dend_14 { pt3dadd( 17.0872, 14.7463, -5.5143, 0.22 ) }
    dend_14 { pt3dadd( 17.6115, 15.5865, -5.93676, 0.29 ) }
    dend_14 { pt3dadd( 18.1251, 16.4166, -6.33329, 0.22 ) }
    dend_14 { pt3dadd( 18.7813, 17.3856, -6.78532, 0.15 ) }
    dend_14 { pt3dadd( 19.2014, 17.9586, -7.05934, 0.29 ) }
    dend_14 { pt3dadd( 19.6113, 18.4915, -7.32979, 0.44 ) }
    dend_14 { pt3dadd( 19.9355, 18.8796, -7.52002, 0.59 ) }
    dend_14 { pt3dadd( 20.4452, 19.4442, -7.79864, 0.74 ) }
    dend_14 { pt3dadd( 21.6734, 20.7627, -8.41898, 0.15 ) }
    dend_14 { pt3dadd( 22.1618, 21.2671, -8.61431, 0.15 ) }
    dend_14 { pt3dadd( 22.5944, 21.714, -8.76912, 0.22 ) }
    dend_14 { pt3dadd( 22.908, 22.0358, -8.85874, 0.44 ) }
    dend_14 { pt3dadd( 23.6409, 22.7626, -9.00169, 0.66 ) }
    dend_14 { pt3dadd( 24.5757, 23.6695, -9.15514, 0.07 ) }
    dend_14 { pt3dadd( 25.4999, 24.5837, -9.29765, 0.07 ) }
    dend_14 { pt3dadd( 26.1027, 25.1678, -9.38893, 0.44 ) }
    dend_14 { pt3dadd( 26.7257, 25.7222, -9.50271, 0.44 ) }
    dend_14 { pt3dadd( 27.525, 26.3468, -9.666, 0.29 ) }
    dend_14 { pt3dadd( 28.418, 26.9425, -9.84881, 0.15 ) }
    dend_14 { pt3dadd( 29.0009, 27.2947, -9.97462, 0.15 ) }
    dend_14 { pt3dadd( 29.4582, 27.5542, -10.0785, 0.15 ) }
    dend_14 { pt3dadd( 30.4215, 28.1217, -10.2825, 0.15 ) }
    dend_14 { pt3dadd( 31.1769, 28.6027, -10.4654, 0.22 ) }
    dend_14 { pt3dadd( 31.946, 29.107, -10.6762, 0.29 ) }
    dend_14 { pt3dadd( 32.4682, 29.4562, -10.8333, 0.29 ) }
    dend_14 { pt3dadd( 32.9393, 29.782, -11.0047, 0.52 ) }
    dend_14 { pt3dadd( 33.4045, 30.1232, -11.2109, 0.59 ) }
    dend_14 { pt3dadd( 34.1299, 30.7087, -11.6342, 0.15 ) }
    dend_14 { pt3dadd( 34.8669, 31.3013, -12.1811, 0.15 ) }
    dend_14 { pt3dadd( 35.3417, 31.6507, -12.5906, 0.15 ) }
    dend_14 { pt3dadd( 35.84, 31.9743, -13.0294, 0.15 ) }
    dend_14 { pt3dadd( 36.1882, 32.1821, -13.3363, 0.59 ) }
    dend_14 { pt3dadd( 36.9678, 32.6287, -14.0194, 0.07 ) }
    dend_14 { pt3dadd( 37.8183, 33.1272, -14.7433, 0.07 ) }
    dend_14 { pt3dadd( 38.4715, 33.5662, -15.2982, 0.07 ) }
    dend_14 { pt3dadd( 38.7818, 33.7906, -15.5673, 0.07 ) }
    dend_14 { pt3dadd( 39.3804, 34.2724, -16.1054, 0.07 ) }
    dend_14 { pt3dadd( 39.6526, 34.5243, -16.352, 0.22 ) }
    dend_14 { pt3dadd( 40.0054, 34.8906, -16.647, 0.29 ) }
    dend_14 { pt3dadd( 40.6819, 35.6753, -17.1651, 0.07 ) }
    dend_14 { pt3dadd( 41.0753, 36.1331, -17.4136, 0.07 ) }
    dend_14 { pt3dadd( 41.3001, 36.3785, -17.5246, 0.22 ) }
    dend_14 { pt3dadd( 41.6129, 36.7039, -17.6389, 0.22 ) }
    dend_14 { pt3dadd( 41.8983, 36.9811, -17.724, 0.22 ) }
    dend_14 { pt3dadd( 42.6456, 37.6892, -17.9039, 0.07 ) }
    dend_14 { pt3dadd( 43.487, 38.5092, -18.0874, 0.22 ) }
    dend_14 { pt3dadd( 44.2933, 39.3602, -18.2891, 0.07 ) }
    dend_14 { pt3dadd( 44.8394, 39.9738, -18.4483, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_14 { pt3dadd( 45.1298, 40.3092, -18.5461, 0.22 ) }
    dend_14 { pt3dadd( 45.7154, 41.0005, -18.7562, 0.37 ) }
    dend_14 { pt3dadd( 46.3324, 41.7219, -18.9773, 0.29 ) }
    dend_14 { pt3dadd( 46.655, 42.0866, -19.1005, 0.29 ) }
    dend_14 { pt3dadd( 47.46, 42.954, -19.3996, 0.07 ) }
    dend_14 { pt3dadd( 48.2246, 43.7086, -19.6638, 0.07 ) }
    dend_14 { pt3dadd( 48.8918, 44.3479, -19.8373, 0.07 ) }
    dend_14 { pt3dadd( 49.5207, 44.9238, -19.9639, 0.15 ) }
    dend_14 { pt3dadd( 49.8939, 45.2535, -20.0166, 0.37 ) }
    dend_14 { pt3dadd( 50.4336, 45.7268, -20.0706, 0.66 ) }
    dend_14 { pt3dadd( 51.4051, 46.6012, -20.1392, 0.15 ) }
    dend_14 { pt3dadd( 52.282, 47.4354, -20.1993, 0.15 ) }
    dend_14 { pt3dadd( 53.08, 48.2354, -20.2687, 0.22 ) }
    dend_14 { pt3dadd( 53.3395, 48.5005, -20.2938, 0.15 ) }
    dend_14 { pt3dadd( 53.7261, 48.8959, -20.3273, 0.22 ) }
    dend_14 { pt3dadd( 54.1425, 49.3182, -20.3694, 0.15 ) }
    dend_14 { pt3dadd( 54.6108, 49.7972, -20.4287, 0.15 ) }
    dend_14 { pt3dadd( 55.0969, 50.2625, -20.5628, 0.37 ) }
    dend_14 { pt3dadd( 55.5113, 50.6697, -20.6753, 0.52 ) }
    dend_14 { pt3dadd( 62.2548, 57.4664, -24.5781, 0.52 ) }
    dend_14 { pt3dadd( 69.1888, 63.5281, -29.1829, 0.52 ) }
    dend_14 { pt3dadd( 74.6141, 69.6182, -35.4743, 0.52 ) }
    dend_14 { pt3dadd( 80.2476, 75.6708, -41.6133, 0.52 ) }
    dend_14 { pt3dadd( 86.7485, 82.2784, -46.1697, 0.52 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 24/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -12.5494, 1.89617, -7.84972, 0.74 ) }
    dend_9 { pt3dadd( -12.204, 1.0849, -8.50265, 0.74 ) }
    dend_9 { pt3dadd( -11.8253, 0.240774, -9.3465, 0.37 ) }
    dend_9 { pt3dadd( -11.5316, -0.476426, -10.24, 0.22 ) }
    dend_9 { pt3dadd( -11.3697, -0.926098, -10.8911, 0.22 ) }
    dend_9 { pt3dadd( -11.2818, -1.20437, -11.3453, 0.22 ) }
    dend_9 { pt3dadd( -11.2309, -1.38399, -11.6569, 0.22 ) }
    dend_9 { pt3dadd( -11.159, -1.70947, -12.4647, 0.22 ) }
    dend_9 { pt3dadd( -11.1929, -1.99166, -13.2766, 0.22 ) }
    dend_9 { pt3dadd( -11.2787, -2.15555, -13.7257, 0.29 ) }
    dend_9 { pt3dadd( -11.4381, -2.40976, -14.3274, 0.29 ) }
    dend_9 { pt3dadd( -11.4595, -2.44376, -14.3969, 0.29 ) }
    dend_9 { pt3dadd( -11.6722, -2.81934, -15.0612, 0.29 ) }
    dend_9 { pt3dadd( -11.955, -3.38001, -15.9542, 0.22 ) }
    dend_9 { pt3dadd( -12.1789, -3.81894, -16.6631, 0.22 ) }
    dend_9 { pt3dadd( -12.3187, -4.05185, -17.0645, 0.22 ) }
    dend_9 { pt3dadd( -12.4371, -4.24604, -17.4112, 0.22 ) }
    dend_9 { pt3dadd( -12.5716, -4.48304, -17.8527, 0.22 ) }
    dend_9 { pt3dadd( -12.7253, -4.80117, -18.4729, 0.44 ) }
    dend_9 { pt3dadd( -12.8369, -5.09087, -19.0706, 0.44 ) }
    dend_9 { pt3dadd( -13.0528, -5.68786, -20.3002, 0.15 ) }
    dend_9 { pt3dadd( -13.1617, -6.021, -20.9343, 0.15 ) }
    dend_9 { pt3dadd( -13.2257, -6.24923, -21.3006, 0.29 ) }
    dend_9 { pt3dadd( -13.2936, -6.55555, -21.7057, 0.29 ) }
    dend_9 { pt3dadd( -13.3094, -6.66662, -21.8297, 0.29 ) }
    dend_9 { pt3dadd( -13.3384, -7.26668, -22.4183, 0.29 ) }
    dend_9 { pt3dadd( -13.303, -8.03019, -23.1074, 0.07 ) }
    dend_9 { pt3dadd( -13.277, -8.87783, -23.8345, 0.07 ) }
    dend_9 { pt3dadd( -13.2662, -9.4979, -24.3421, 0.07 ) }
    dend_9 { pt3dadd( -13.2579, -10.2229, -24.9095, 0.07 ) }
    dend_9 { pt3dadd( -13.2427, -10.6701, -25.2493, 0.52 ) }
    dend_9 { pt3dadd( -13.1833, -11.2682, -25.6536, 0.66 ) }
    dend_9 { pt3dadd( -14.5974, -17.7813, -33.8289, 0.66 ) }
    dend_9 { pt3dadd( -16.3828, -24.4614, -41.8071, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 58/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -12.5494, 1.89617, -7.84972, 0.37 ) }
    dend_4 { pt3dadd( -12.8562, 2.38505, -8.21501, 0.37 ) }
    dend_4 { pt3dadd( -13.1767, 2.76098, -8.58943, 0.37 ) }
    dend_4 { pt3dadd( -13.3526, 2.92147, -8.76602, 0.37 ) }
    dend_4 { pt3dadd( -13.6062, 3.11182, -8.99352, 0.59 ) }
    dend_4 { pt3dadd( -13.8923, 3.29978, -9.22777, 0.59 ) }
    dend_4 { pt3dadd( -14.4329, 3.62585, -9.63551, 0.29 ) }
    dend_4 { pt3dadd( -15.1292, 4.00803, -10.1483, 0.22 ) }
    dend_4 { pt3dadd( -15.7721, 4.31607, -10.59, 0.22 ) }
    dend_4 { pt3dadd( -16.3696, 4.56598, -10.983, 0.37 ) }
    dend_4 { pt3dadd( -16.7425, 4.70098, -11.2171, 0.96 ) }
    dend_4 { pt3dadd( -17.2429, 4.86271, -11.5035, 1.47 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 70/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.294802, 16.2697, -8.76344, 0.29 ) }
    dend_2 { pt3dadd( -0.443688, 17.5476, -8.6888, 0.29 ) }
    dend_2 { pt3dadd( -0.59172, 18.5703, -8.5789, 0.15 ) }
    dend_2 { pt3dadd( -0.72433, 19.4509, -8.4388, 0.15 ) }
    dend_2 { pt3dadd( -0.85139, 20.2118, -8.29305, 0.37 ) }
    dend_2 { pt3dadd( -0.93574, 20.7193, -8.17351, 0.37 ) }
    dend_2 { pt3dadd( -1.0535, 21.3905, -8.00343, 0.22 ) }
    dend_2 { pt3dadd( -1.21544, 22.218, -7.76165, 0.22 ) }
    dend_2 { pt3dadd( -1.33192, 22.7675, -7.59408, 0.22 ) }
    dend_2 { pt3dadd( -1.47087, 23.4754, -7.37154, 0.22 ) }
    dend_2 { pt3dadd( -1.61053, 24.2442, -7.11409, 0.22 ) }
    dend_2 { pt3dadd( -1.74813, 24.9308, -6.88755, 0.22 ) }
    dend_2 { pt3dadd( -1.97641, 25.8483, -6.58306, 0.22 ) }
    dend_2 { pt3dadd( -2.09587, 26.1973, -6.48152, 0.22 ) }
    dend_2 { pt3dadd( -2.28277, 26.6382, -6.38314, 0.22 ) }
    dend_2 { pt3dadd( -2.54382, 27.17, -6.29366, 0.22 ) }
    dend_2 { pt3dadd( -2.91468, 27.9273, -6.24198, 0.22 ) }
    dend_2 { pt3dadd( -3.20758, 28.6191, -6.26208, 0.22 ) }
    dend_2 { pt3dadd( -3.61235, 29.6934, -6.40495, 0.29 ) }
    dend_2 { pt3dadd( -3.88288, 30.5107, -6.57321, 0.29 ) }
    dend_2 { pt3dadd( -4.1421, 31.376, -6.7991, 0.88 ) }
    dend_2 { pt3dadd( -4.59353, 32.8153, -7.26628, 0.44 ) }
    dend_2 { pt3dadd( -5.08529, 34.2964, -7.83009, 0.22 ) }
    dend_2 { pt3dadd( -5.35495, 35.0429, -8.16145, 0.22 ) }
    dend_2 { pt3dadd( -5.50013, 35.3915, -8.33565, 0.29 ) }
    dend_2 { pt3dadd( -6.00349, 36.3594, -8.85303, 0.37 ) }
    dend_2 { pt3dadd( -6.68739, 37.305, -9.43956, 0.22 ) }
    dend_2 { pt3dadd( -7.32906, 37.9148, -9.86234, 0.22 ) }
    dend_2 { pt3dadd( -7.7945, 38.2674, -10.1049, 0.22 ) }
    dend_2 { pt3dadd( -8.53053, 38.788, -10.4301, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( -9.19858, 39.2258, -10.7012, 0.22 ) }
    dend_2 { pt3dadd( -10.0725, 39.7803, -11.0175, 0.22 ) }
    dend_2 { pt3dadd( -10.7198, 40.2026, -11.2189, 0.37 ) }
    dend_2 { pt3dadd( -11.571, 40.7708, -11.5012, 0.37 ) }
    dend_2 { pt3dadd( -12.3354, 41.3092, -11.776, 0.22 ) }
    dend_2 { pt3dadd( -13.5002, 42.1766, -12.2529, 0.22 ) }
    dend_2 { pt3dadd( -14.2248, 42.7939, -12.6089, 0.52 ) }
    dend_2 { pt3dadd( -14.6124, 43.1857, -12.8494, 0.59 ) }
    dend_2 { pt3dadd( -15.4119, 44.1789, -13.4676, 0.22 ) }
    dend_2 { pt3dadd( -15.6565, 44.5754, -13.7148, 0.15 ) }
    dend_2 { pt3dadd( -15.996, 45.2991, -14.1797, 0.15 ) }
    dend_2 { pt3dadd( -16.2185, 45.9445, -14.593, 0.22 ) }
    dend_2 { pt3dadd( -16.4194, 46.6702, -15.0726, 0.29 ) }
    dend_2 { pt3dadd( -16.633, 47.6595, -15.7226, 0.44 ) }
    dend_2 { pt3dadd( -16.7616, 48.5439, -16.3234, 0.22 ) }
    dend_2 { pt3dadd( -16.8534, 49.9697, -17.4044, 0.07 ) }
    dend_2 { pt3dadd( -16.8465, 50.2726, -17.6699, 0.07 ) }
    dend_2 { pt3dadd( -16.8111, 50.7622, -18.1555, 0.07 ) }
    dend_2 { pt3dadd( -16.787, 51.1452, -18.5484, 0.15 ) }
    dend_2 { pt3dadd( -16.796, 51.823, -19.3101, 0.22 ) }
    dend_2 { pt3dadd( -16.8428, 52.299, -19.8155, 0.37 ) }
    dend_2 { pt3dadd( -16.9759, 53.0425, -20.5175, 0.52 ) }
    dend_2 { pt3dadd( -17.0731, 53.4383, -20.8636, 0.52 ) }
    dend_2 { pt3dadd( -17.3306, 54.3132, -21.5393, 0.22 ) }
    dend_2 { pt3dadd( -17.6817, 55.3193, -22.2611, 0.15 ) }
    dend_2 { pt3dadd( -17.9861, 56.0744, -22.7764, 0.29 ) }
    dend_2 { pt3dadd( -18.5684, 57.4324, -23.7259, 0.15 ) }
    dend_2 { pt3dadd( -18.8746, 58.1429, -24.2324, 0.15 ) }
    dend_2 { pt3dadd( -19.1303, 58.7562, -24.704, 0.29 ) }
    dend_2 { pt3dadd( -19.4372, 59.5317, -25.3155, 0.29 ) }
    dend_2 { pt3dadd( -19.8352, 60.4761, -26.0028, 0.15 ) }
    dend_2 { pt3dadd( -20.0596, 60.9033, -26.2996, 0.15 ) }
    dend_2 { pt3dadd( -20.3242, 61.2822, -26.5366, 0.29 ) }
    dend_2 { pt3dadd( -20.8501, 61.9442, -26.9104, 0.52 ) }
    dend_2 { pt3dadd( -21.3174, 62.5396, -27.2247, 0.22 ) }
    dend_2 { pt3dadd( -22.0478, 63.5368, -27.683, 0.15 ) }
    dend_2 { pt3dadd( -22.5421, 64.2546, -27.9982, 0.15 ) }
    dend_2 { pt3dadd( -23.1236, 65.1192, -28.3819, 0.15 ) }
    dend_2 { pt3dadd( -23.6608, 65.9953, -28.8054, 0.15 ) }
    dend_2 { pt3dadd( -24.0192, 66.6427, -29.1364, 0.15 ) }
    dend_2 { pt3dadd( -24.3414, 67.2961, -29.5017, 0.15 ) }
    dend_2 { pt3dadd( -24.7298, 68.113, -29.9875, 0.15 ) }
    dend_2 { pt3dadd( -24.9415, 68.5517, -30.2596, 0.15 ) }
    dend_2 { pt3dadd( -25.5462, 69.7456, -31.0057, 0.15 ) }
    dend_2 { pt3dadd( -25.8519, 70.2986, -31.3467, 0.15 ) }
    dend_2 { pt3dadd( -26.1967, 70.8817, -31.6866, 0.29 ) }
    dend_2 { pt3dadd( -26.7939, 71.8513, -32.2337, 0.07 ) }
    dend_2 { pt3dadd( -27.3, 72.6485, -32.6811, 0.07 ) }
    dend_2 { pt3dadd( -27.5221, 73.005, -32.8832, 0.07 ) }
    dend_2 { pt3dadd( -27.8535, 73.5656, -33.22, 0.37 ) }
    dend_2 { pt3dadd( -28.03, 73.9463, -33.4449, 0.37 ) }
    dend_2 { pt3dadd( -28.2827, 74.6621, -33.869, 0.15 ) }
    dend_2 { pt3dadd( -28.5399, 75.5942, -34.3954, 0.15 ) }
    dend_2 { pt3dadd( -28.6749, 76.0884, -34.6568, 0.29 ) }
    dend_2 { pt3dadd( -28.9084, 76.9663, -35.1063, 0.29 ) }
    dend_2 { pt3dadd( -29.2538, 78.4986, -35.8154, 0.07 ) }
    dend_2 { pt3dadd( -29.3894, 79.1494, -36.0711, 0.07 ) }
    dend_2 { pt3dadd( -29.5692, 79.9702, -36.363, 0.22 ) }
    dend_2 { pt3dadd( -29.7854, 80.7374, -36.6061, 0.37 ) }
    dend_2 { pt3dadd( -29.9493, 81.1682, -36.7342, 0.15 ) }
    dend_2 { pt3dadd( -30.4376, 82.1855, -37.0364, 0.15 ) }
    dend_2 { pt3dadd( -30.9224, 83.0469, -37.3139, 0.15 ) }
    dend_2 { pt3dadd( -31.4308, 83.8946, -37.6139, 0.15 ) }
    dend_2 { pt3dadd( -31.786, 84.4871, -37.8425, 0.15 ) }
    dend_2 { pt3dadd( -32.0798, 85.023, -38.0561, 0.37 ) }
    dend_2 { pt3dadd( -32.3767, 85.621, -38.2831, 0.37 ) }
    dend_2 { pt3dadd( -32.6264, 86.1902, -38.4917, 0.07 ) }
    dend_2 { pt3dadd( -32.9423, 87.0837, -38.7976, 0.07 ) }
    dend_2 { pt3dadd( -33.2665, 88.1543, -39.1432, 0.15 ) }
    dend_2 { pt3dadd( -33.5064, 89.0313, -39.4429, 0.15 ) }
    dend_2 { pt3dadd( -33.7161, 89.8952, -39.7317, 0.15 ) }
    dend_2 { pt3dadd( -33.8357, 90.4391, -39.8989, 0.37 ) }
    dend_2 { pt3dadd( -33.9492, 91.0241, -40.0721, 0.37 ) }
    dend_2 { pt3dadd( -34.1188, 92.0421, -40.3532, 0.07 ) }
    dend_2 { pt3dadd( -34.2855, 93.197, -40.6368, 0.07 ) }
    dend_2 { pt3dadd( -34.4125, 94.1875, -40.8281, 0.07 ) }
    dend_2 { pt3dadd( -34.5204, 95.181, -40.9826, 0.07 ) }
    dend_2 { pt3dadd( -34.5963, 96.0996, -41.0895, 0.29 ) }
    dend_2 { pt3dadd( -34.6124, 96.3584, -41.1112, 0.29 ) }
    dend_2 { pt3dadd( -34.6949, 98.2422, -41.2006, 0.07 ) }
    dend_2 { pt3dadd( -34.7658, 99.7258, -41.2347, 0.07 ) }
    dend_2 { pt3dadd( -34.8251, 100.559, -41.2566, 0.07 ) }
    dend_2 { pt3dadd( -34.8955, 101.466, -41.2844, 0.22 ) }
    dend_2 { pt3dadd( -39.7959, 111.686, -45.7094, 0.22 ) }
    dend_2 { pt3dadd( -45.6653, 120.981, -50.7632, 0.22 ) }
    dend_2 { pt3dadd( -50.569, 130.756, -56.0186, 0.22 ) }
    dend_2 { pt3dadd( -55.0801, 140.069, -62.2873, 0.22 ) }
    dend_2 { pt3dadd( -57.5681, 149.49, -69.47, 0.22 ) }
    dend_2 { pt3dadd( -60.6206, 157.197, -78.1352, 0.22 ) }
    dend_2 { pt3dadd( -62.3469, 164.705, -87.3089, 0.22 ) }
    dend_2 { pt3dadd( -64.3861, 172.051, -96.5369, 0.22 ) }
    dend_2 { pt3dadd( -65.9388, 177.59, -106.929, 0.22 ) }
    dend_2 { pt3dadd( -66.6194, 183.391, -117.285, 0.22 ) }
    dend_2 { pt3dadd( -68.8156, 189.763, -127.114, 0.22 ) }
    dend_2 { pt3dadd( -71.3702, 196.224, -136.803, 0.22 ) }
    dend_2 { pt3dadd( -72.891, 202.779, -146.65, 0.22 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 96/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.294802, 16.2697, -8.76344, 0.22 ) }
    dend_1 { pt3dadd( 0.267575, 16.1038, -9.65433, 0.22 ) }
    dend_1 { pt3dadd( 0.793712, 16.0129, -10.3932, 0.22 ) }
    dend_1 { pt3dadd( 1.7715, 15.9476, -11.6066, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_1 { pt3dadd( 2.46048, 15.9706, -12.4145, 0.22 ) }
    dend_1 { pt3dadd( 3.20848, 16.0645, -13.2806, 0.15 ) }
    dend_1 { pt3dadd( 3.80509, 16.1744, -13.9776, 0.15 ) }
    dend_1 { pt3dadd( 4.34733, 16.3538, -14.6341, 0.52 ) }
    dend_1 { pt3dadd( 5.01421, 16.6465, -15.4157, 0.22 ) }
    dend_1 { pt3dadd( 5.5533, 16.9412, -16.0332, 0.22 ) }
    dend_1 { pt3dadd( 5.91675, 17.127, -16.4904, 0.22 ) }
    dend_1 { pt3dadd( 6.06076, 17.1922, -16.7062, 0.22 ) }
    dend_1 { pt3dadd( 6.39065, 17.352, -17.3482, 0.22 ) }
    dend_1 { pt3dadd( 6.55659, 17.4646, -17.7553, 0.22 ) }
    dend_1 { pt3dadd( 6.88538, 17.7274, -18.6255, 0.22 ) }
    dend_1 { pt3dadd( 7.44386, 18.1338, -19.9293, 0.22 ) }
    dend_1 { pt3dadd( 7.74001, 18.3288, -20.5574, 0.22 ) }
    dend_1 { pt3dadd( 8.15891, 18.5499, -21.4099, 0.22 ) }
    dend_1 { pt3dadd( 8.52795, 18.7052, -22.1533, 0.22 ) }
    dend_1 { pt3dadd( 8.89254, 18.7988, -22.8902, 0.22 ) }
    dend_1 { pt3dadd( 9.32878, 18.8107, -23.7433, 0.15 ) }
    dend_1 { pt3dadd( 9.81426, 18.7109, -24.495, 0.15 ) }
    dend_1 { pt3dadd( 10.6028, 18.467, -25.5003, 0.15 ) }
    dend_1 { pt3dadd( 10.9569, 18.3553, -25.8838, 0.15 ) }
    dend_1 { pt3dadd( 11.6102, 18.1774, -26.5515, 0.15 ) }
    dend_1 { pt3dadd( 12.1061, 18.1241, -26.9952, 0.15 ) }
    dend_1 { pt3dadd( 12.8113, 18.1563, -27.5772, 0.15 ) }
    dend_1 { pt3dadd( 13.2602, 18.226, -27.9263, 0.29 ) }
    dend_1 { pt3dadd( 13.9003, 18.3648, -28.4325, 0.59 ) }
    dend_1 { pt3dadd( 14.657, 18.5108, -29.0611, 0.44 ) }
    dend_1 { pt3dadd( 15.4976, 18.6027, -29.8626, 0.07 ) }
    dend_1 { pt3dadd( 16.0246, 18.5626, -30.4645, 0.07 ) }
    dend_1 { pt3dadd( 16.3309, 18.4729, -30.8695, 0.22 ) }
    dend_1 { pt3dadd( 16.8183, 18.2624, -31.5712, 0.44 ) }
    dend_1 { pt3dadd( 17.1186, 18.1119, -32.0266, 0.22 ) }
    dend_1 { pt3dadd( 17.6549, 17.8475, -32.8124, 0.52 ) }
    dend_1 { pt3dadd( 18.3945, 17.5191, -33.8885, 0.15 ) }
    dend_1 { pt3dadd( 19.2477, 17.227, -35.0721, 0.15 ) }
    dend_1 { pt3dadd( 19.6204, 17.1356, -35.5177, 0.22 ) }
    dend_1 { pt3dadd( 20.2471, 17.0617, -36.1422, 0.29 ) }
    dend_1 { pt3dadd( 21.4973, 17.0766, -37.1836, 0.07 ) }
    dend_1 { pt3dadd( 22.0969, 17.1534, -37.5932, 0.07 ) }
    dend_1 { pt3dadd( 22.5804, 17.2615, -37.8543, 0.07 ) }
    dend_1 { pt3dadd( 23.9302, 17.672, -38.48, 0.15 ) }
    dend_1 { pt3dadd( 25.4236, 18.1622, -39.123, 0.15 ) }
    dend_1 { pt3dadd( 26.4617, 18.5415, -39.5436, 0.15 ) }
    dend_1 { pt3dadd( 27.4861, 18.9942, -39.9401, 0.15 ) }
    dend_1 { pt3dadd( 28.6219, 19.5263, -40.3837, 0.15 ) }
    dend_1 { pt3dadd( 29.1605, 19.8004, -40.6189, 0.15 ) }
    dend_1 { pt3dadd( 37.0338, 19.5252, -50.1657, 0.15 ) }
    dend_1 { pt3dadd( 43.6434, 18.4116, -60.5792, 0.15 ) }
    dend_1 { pt3dadd( 51.3748, 16.0477, -69.9869, 0.15 ) }
    dend_1 { pt3dadd( 59.3161, 11.351, -78.3793, 0.15 ) }
    dend_1 { pt3dadd( 67.4042, 6.7274, -86.6675, 0.15 ) }
    dend_1 { pt3dadd( 76.6407, 3.88504, -94.4621, 0.15 ) }
    dend_1 { pt3dadd( 86.3001, -0.7638, -100.835, 0.15 ) }
    dend_1 { pt3dadd( 97.6887, -3.04576, -105.187, 0.15 ) }
    dend_1 { pt3dadd( 109.018, -4.15011, -110.067, 0.15 ) }
    dend_1 { pt3dadd( 121.101, -2.89666, -112.443, 0.15 ) }
    dend_1 { pt3dadd( 133.016, -3.38597, -115.766, 0.15 ) }
    dend_1 { pt3dadd( 145.26, -4.12532, -117.446, 0.15 ) }
    dend_1 { pt3dadd( 157.37, -6.62689, -118.463, 0.15 ) }
    dend_1 { pt3dadd( 169.148, -10.6425, -118.798, 0.15 ) }
    dend_1 { pt3dadd( 181.211, -12.9747, -120.506, 0.15 ) }
    dend_1 { pt3dadd( 192.542, -16.9124, -123.826, 0.15 ) }
    dend_1 { pt3dadd( 204.604, -19.136, -125.665, 0.15 ) }
    dend_1 { pt3dadd( 216.885, -19.4114, -127.184, 0.15 ) }
    dend_1 { pt3dadd( 229.202, -18.8945, -128.277, 0.15 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 64/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 35.7769, -13.6045, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 49.8139, -18.8925, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 63.8509, -24.1805, 0.0, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 67/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 16.7182, -21.2011, 16.0033, 0.44 ) }
    dend_42 { pt3dadd( 17.0444, -22.074, 15.7191, 0.44 ) }
    dend_42 { pt3dadd( 17.3432, -22.9065, 15.4898, 0.15 ) }
    dend_42 { pt3dadd( 17.5384, -23.4703, 15.354, 0.29 ) }
    dend_42 { pt3dadd( 17.8004, -24.2635, 15.1824, 0.29 ) }
    dend_42 { pt3dadd( 18.0117, -24.8993, 15.0554, 0.22 ) }
    dend_42 { pt3dadd( 18.1707, -25.3661, 14.9681, 0.22 ) }
    dend_42 { pt3dadd( 18.4144, -26.076, 14.8706, 0.29 ) }
    dend_42 { pt3dadd( 18.647, -26.7211, 14.7982, 0.29 ) }
    dend_42 { pt3dadd( 18.8962, -27.3972, 14.7298, 0.29 ) }
    dend_42 { pt3dadd( 19.0694, -27.8558, 14.6825, 0.22 ) }
    dend_42 { pt3dadd( 19.2843, -28.4031, 14.6285, 0.22 ) }
    dend_42 { pt3dadd( 19.4347, -28.7517, 14.5954, 0.22 ) }
    dend_42 { pt3dadd( 19.6168, -29.1499, 14.5574, 0.22 ) }
    dend_42 { pt3dadd( 19.8008, -29.5344, 14.5245, 0.22 ) }
    dend_42 { pt3dadd( 19.908, -29.7351, 14.5095, 0.22 ) }
    dend_42 { pt3dadd( 20.1441, -30.1425, 14.4847, 0.29 ) }
    dend_42 { pt3dadd( 20.4456, -30.6282, 14.4741, 0.29 ) }
    dend_42 { pt3dadd( 20.7939, -31.148, 14.4952, 0.22 ) }
    dend_42 { pt3dadd( 20.9757, -31.3974, 14.5377, 0.22 ) }
    dend_42 { pt3dadd( 21.3527, -31.8675, 14.6941, 0.29 ) }
    dend_42 { pt3dadd( 21.7666, -32.346, 14.938, 0.29 ) }
    dend_42 { pt3dadd( 21.9979, -32.5986, 15.0985, 0.29 ) }
    dend_42 { pt3dadd( 22.3262, -32.9553, 15.3647, 0.22 ) }
    dend_42 { pt3dadd( 22.8259, -33.5101, 15.7958, 0.37 ) }
    dend_42 { pt3dadd( 23.2274, -33.9671, 16.153, 0.22 ) }
    dend_42 { pt3dadd( 23.6811, -34.5095, 16.5711, 0.15 ) }
    dend_42 { pt3dadd( 24.0278, -34.9408, 16.8817, 0.22 ) }
    dend_42 { pt3dadd( 24.3951, -35.4209, 17.1795, 0.22 ) }
    dend_42 { pt3dadd( 24.7043, -35.8637, 17.416, 0.15 ) }
    dend_42 { pt3dadd( 24.9996, -36.3103, 17.6188, 0.15 ) }
    dend_42 { pt3dadd( 25.2487, -36.6914, 17.7814, 0.15 ) }
    dend_42 { pt3dadd( 25.61, -37.2626, 18.0203, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_42 { pt3dadd( 25.91, -37.7372, 18.2298, 0.22 ) }
    dend_42 { pt3dadd( 26.3159, -38.3579, 18.5081, 0.15 ) }
    dend_42 { pt3dadd( 26.7458, -39.0154, 18.8235, 0.15 ) }
    dend_42 { pt3dadd( 27.0915, -39.5686, 19.0799, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 4/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 16.7182, -21.2011, 16.0033, 0.22 ) }
    dend_41 { pt3dadd( 16.2974, -21.8595, 16.4974, 0.22 ) }
    dend_41 { pt3dadd( 15.912, -22.4969, 16.9382, 0.22 ) }
    dend_41 { pt3dadd( 15.6283, -23.07, 17.3339, 0.22 ) }
    dend_41 { pt3dadd( 15.5053, -23.3888, 17.5463, 0.29 ) }
    dend_41 { pt3dadd( 15.183, -24.3795, 18.1877, 0.22 ) }
    dend_41 { pt3dadd( 14.8847, -25.4231, 18.8086, 0.29 ) }
    dend_41 { pt3dadd( 14.6637, -26.4262, 19.3855, 0.22 ) }
    dend_41 { pt3dadd( 14.5207, -27.3173, 19.8274, 0.22 ) }
    dend_41 { pt3dadd( 14.4402, -28.0308, 20.1682, 0.22 ) }
    dend_41 { pt3dadd( 14.4186, -28.2519, 20.2784, 0.22 ) }
    dend_41 { pt3dadd( 14.3297, -29.3193, 20.8487, 0.15 ) }
    dend_41 { pt3dadd( 14.2698, -30.1081, 21.326, 0.15 ) }
    dend_41 { pt3dadd( 14.1954, -30.7992, 21.8054, 0.59 ) }
    dend_41 { pt3dadd( 14.0446, -31.9775, 22.7692, 0.22 ) }
    dend_41 { pt3dadd( 13.9651, -32.6273, 23.4299, 0.22 ) }
    dend_41 { pt3dadd( 13.9128, -33.2183, 24.1094, 0.22 ) }
    dend_41 { pt3dadd( 13.8867, -33.6983, 24.7382, 0.37 ) }
    dend_41 { pt3dadd( 13.8784, -34.3261, 25.6203, 0.37 ) }
    dend_41 { pt3dadd( 13.9227, -34.8888, 26.4592, 0.15 ) }
    dend_41 { pt3dadd( 14.0645, -35.7161, 27.7119, 0.15 ) }
    dend_41 { pt3dadd( 14.132, -36.0147, 28.1641, 0.15 ) }
    dend_41 { pt3dadd( 14.2103, -36.4359, 28.7662, 0.15 ) }
    dend_41 { pt3dadd( 14.2566, -36.8106, 29.2641, 0.15 ) }
    dend_41 { pt3dadd( 14.267, -37.3628, 29.9116, 0.22 ) }
    dend_41 { pt3dadd( 14.1924, -38.0918, 30.6882, 0.22 ) }
    dend_41 { pt3dadd( 14.1175, -38.4986, 31.1327, 0.22 ) }
    dend_41 { pt3dadd( 14.0073, -39.0428, 31.7571, 0.22 ) }
    dend_41 { pt3dadd( 13.8865, -39.7238, 32.5951, 0.22 ) }
    dend_41 { pt3dadd( 13.8372, -40.0725, 33.0426, 0.29 ) }
    dend_41 { pt3dadd( 13.7606, -40.7297, 33.9433, 0.22 ) }
    dend_41 { pt3dadd( 13.7407, -41.5503, 35.128, 0.22 ) }
    dend_41 { pt3dadd( 13.7644, -41.9313, 35.7096, 0.07 ) }
    dend_41 { pt3dadd( 13.8688, -42.6042, 36.7212, 0.07 ) }
    dend_41 { pt3dadd( 13.9856, -43.2741, 37.6721, 0.07 ) }
    dend_41 { pt3dadd( 14.1145, -43.8263, 38.4549, 0.15 ) }
    dend_41 { pt3dadd( 14.3005, -44.4775, 39.3223, 0.15 ) }
    dend_41 { pt3dadd( 14.4238, -44.8991, 39.8309, 0.15 ) }
    dend_41 { pt3dadd( 14.635, -45.6594, 40.7173, 0.07 ) }
    dend_41 { pt3dadd( 14.8509, -46.4656, 41.5723, 0.44 ) }
    dend_41 { pt3dadd( 15.1452, -47.5522, 42.7019, 0.15 ) }
    dend_41 { pt3dadd( 15.3622, -48.3176, 43.5054, 0.15 ) }
    dend_41 { pt3dadd( 15.4843, -48.8182, 44.0441, 0.59 ) }
    dend_41 { pt3dadd( 15.6171, -49.4955, 44.8088, 0.59 ) }
    dend_41 { pt3dadd( 15.6869, -50.0146, 45.426, 0.22 ) }
    dend_41 { pt3dadd( 15.7395, -50.7076, 46.25, 0.22 ) }
    dend_41 { pt3dadd( 15.7358, -51.6438, 47.3452, 0.22 ) }
    dend_41 { pt3dadd( 15.7046, -52.2985, 48.1375, 0.22 ) }
    dend_41 { pt3dadd( 15.6849, -52.5472, 48.4459, 0.22 ) }
    dend_41 { pt3dadd( 15.6262, -53.1678, 49.2151, 0.15 ) }
    dend_41 { pt3dadd( 15.5695, -53.7246, 49.9126, 0.29 ) }
    dend_41 { pt3dadd( 15.5346, -54.2104, 50.5066, 0.29 ) }
    dend_41 { pt3dadd( 15.5277, -54.505, 50.8747, 0.29 ) }
    dend_41 { pt3dadd( 15.5469, -54.8453, 51.3326, 0.29 ) }
    dend_41 { pt3dadd( 15.5935, -55.2906, 51.9371, 0.44 ) }
    dend_41 { pt3dadd( 15.6298, -55.7229, 52.5845, 0.59 ) }
    dend_41 { pt3dadd( 15.6593, -56.2272, 53.3705, 0.22 ) }
    dend_41 { pt3dadd( 15.6915, -56.8701, 54.3747, 0.22 ) }
    dend_41 { pt3dadd( 15.7035, -57.2219, 54.9478, 0.22 ) }
    dend_41 { pt3dadd( 15.7015, -57.4778, 55.3685, 0.22 ) }
    dend_41 { pt3dadd( 15.6202, -58.2917, 56.7167, 0.22 ) }
    dend_41 { pt3dadd( 15.5571, -58.623, 57.2738, 0.22 ) }
    dend_41 { pt3dadd( 15.4715, -58.9209, 57.7652, 0.37 ) }
    dend_41 { pt3dadd( 15.1273, -59.8328, 59.279, 0.15 ) }
    dend_41 { pt3dadd( 14.765, -60.6074, 60.6803, 0.22 ) }
    dend_41 { pt3dadd( 14.4276, -61.1739, 61.8091, 0.22 ) }
    dend_41 { pt3dadd( 14.1551, -61.5652, 62.6596, 0.22 ) }
    dend_41 { pt3dadd( 13.9459, -61.8158, 63.2978, 0.22 ) }
    dend_41 { pt3dadd( 13.7375, -62.0231, 63.9349, 0.22 ) }
    dend_41 { pt3dadd( 12.9144, -62.7076, 66.5038, 0.15 ) }
    dend_41 { pt3dadd( 12.6995, -62.8573, 67.2533, 0.15 ) }
    dend_41 { pt3dadd( 12.5772, -62.9445, 67.7872, 0.22 ) }
    dend_41 { pt3dadd( 12.4484, -63.072, 68.6126, 0.22 ) }
    dend_41 { pt3dadd( 12.3805, -63.2049, 69.2649, 0.22 ) }
    dend_41 { pt3dadd( 12.361, -63.2812, 69.5223, 0.22 ) }
    dend_41 { pt3dadd( 12.2716, -63.7866, 70.6385, 0.22 ) }
    dend_41 { pt3dadd( 12.1943, -64.2862, 71.5179, 0.22 ) }
    dend_41 { pt3dadd( 11.995, -65.4102, 73.1983, 0.07 ) }
    dend_41 { pt3dadd( 11.8102, -66.3686, 74.4279, 0.07 ) }
    dend_41 { pt3dadd( 11.6932, -66.9692, 75.1003, 0.22 ) }
    dend_41 { pt3dadd( 11.3763, -68.6366, 76.7183, 0.15 ) }
    dend_41 { pt3dadd( 11.2637, -69.264, 77.2096, 0.29 ) }
    dend_41 { pt3dadd( 11.1877, -69.6854, 77.4689, 0.29 ) }
    dend_41 { pt3dadd( 10.9809, -70.7984, 78.0214, 0.15 ) }
    dend_41 { pt3dadd( 10.8155, -71.6273, 78.3833, 0.15 ) }
    dend_41 { pt3dadd( 10.6646, -72.34, 78.6596, 0.37 ) }
    dend_41 { pt3dadd( 10.4425, -73.3395, 78.9951, 0.44 ) }
    dend_41 { pt3dadd( 10.1686, -74.5075, 79.3888, 0.15 ) }
    dend_41 { pt3dadd( 9.90277, -75.6213, 79.7737, 0.15 ) }
    dend_41 { pt3dadd( 9.67314, -76.5701, 80.1475, 0.15 ) }
    dend_41 { pt3dadd( 9.48276, -77.3314, 80.5116, 0.22 ) }
    dend_41 { pt3dadd( 9.28562, -78.1465, 80.9702, 0.22 ) }
    dend_41 { pt3dadd( 9.03476, -79.2672, 81.6705, 0.15 ) }
    dend_41 { pt3dadd( 8.93099, -79.7883, 82.0154, 0.22 ) }
    dend_41 { pt3dadd( 8.73949, -81.0086, 82.903, 0.07 ) }
    dend_41 { pt3dadd( 8.61325, -82.1975, 83.8014, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_41 { pt3dadd( 8.55154, -83.1417, 84.4976, 0.07 ) }
    dend_41 { pt3dadd( 8.55043, -83.2991, 84.6009, 0.07 ) }
    dend_41 { pt3dadd( 8.59673, -84.0224, 85.0105, 0.15 ) }
    dend_41 { pt3dadd( 8.86138, -86.069, 85.9677, 0.15 ) }
    dend_41 { pt3dadd( 9.03942, -87.0251, 86.3353, 0.15 ) }
    dend_41 { pt3dadd( 9.20738, -87.7745, 86.5841, 0.59 ) }
    dend_41 { pt3dadd( 9.51789, -89.0175, 87.0045, 0.07 ) }
    dend_41 { pt3dadd( 9.69963, -89.7083, 87.2536, 0.22 ) }
    dend_41 { pt3dadd( 10.0601, -90.8885, 87.7039, 0.07 ) }
    dend_41 { pt3dadd( 10.3464, -91.6874, 88.019, 0.07 ) }
    dend_41 { pt3dadd( 10.711, -92.5629, 88.4231, 0.22 ) }
    dend_41 { pt3dadd( 11.2787, -93.754, 89.0434, 0.07 ) }
    dend_41 { pt3dadd( 11.6393, -94.4629, 89.4497, 0.07 ) }
    dend_41 { pt3dadd( 12.037, -95.2199, 89.8804, 0.15 ) }
    dend_41 { pt3dadd( 12.4805, -96.044, 90.3359, 0.07 ) }
    dend_41 { pt3dadd( 12.8984, -96.8315, 90.805, 0.22 ) }
    dend_41 { pt3dadd( 13.5705, -98.0658, 91.5703, 0.07 ) }
    dend_41 { pt3dadd( 14.1984, -99.2378, 92.2821, 0.07 ) }
    dend_41 { pt3dadd( 14.5859, -99.9956, 92.7243, 0.07 ) }
    dend_41 { pt3dadd( 15.0819, -101.045, 93.3131, 0.15 ) }
    dend_41 { pt3dadd( 15.6256, -102.27, 93.9792, 0.15 ) }
    dend_41 { pt3dadd( 16.2046, -103.686, 94.7169, 0.07 ) }
    dend_41 { pt3dadd( 16.6667, -104.876, 95.2661, 0.07 ) }
    dend_41 { pt3dadd( 16.9599, -105.721, 95.5991, 0.07 ) }
    dend_41 { pt3dadd( 17.0823, -106.126, 95.7367, 0.29 ) }
    dend_41 { pt3dadd( 17.3768, -107.185, 96.0364, 0.29 ) }
    dend_41 { pt3dadd( 17.7201, -108.546, 96.3627, 0.07 ) }
    dend_41 { pt3dadd( 18.0429, -109.888, 96.6828, 0.07 ) }
    dend_41 { pt3dadd( 18.3988, -111.301, 97.0126, 0.07 ) }
    dend_41 { pt3dadd( 18.7231, -112.553, 97.2983, 0.07 ) }
    dend_41 { pt3dadd( 19.0421, -113.799, 97.4717, 0.07 ) }
    dend_41 { pt3dadd( 19.1839, -114.367, 97.5049, 0.66 ) }
    dend_41 { pt3dadd( 19.6877, -116.47, 97.4863, 0.07 ) }
    dend_41 { pt3dadd( 19.9803, -117.915, 97.348, 0.07 ) }
    dend_41 { pt3dadd( 20.2241, -119.72, 96.974, 0.07 ) }
    dend_41 { pt3dadd( 20.3987, -122.376, 96.1586, 0.07 ) }
    dend_41 { pt3dadd( 20.403, -122.95, 95.9368, 0.07 ) }
    dend_41 { pt3dadd( 20.3816, -123.523, 95.6807, 0.29 ) }
    dend_41 { pt3dadd( 20.2267, -125.101, 94.8893, 0.07 ) }
    dend_41 { pt3dadd( 20.0146, -126.909, 93.9575, 0.07 ) }
    dend_41 { pt3dadd( 19.9598, -127.399, 93.7319, 0.07 ) }
    dend_41 { pt3dadd( 19.8874, -128.211, 93.4429, 0.22 ) }
    dend_41 { pt3dadd( 19.8541, -128.641, 93.2955, 0.22 ) }
    dend_41 { pt3dadd( 19.7475, -130.504, 92.7103, 0.07 ) }
    dend_41 { pt3dadd( 19.7169, -131.802, 92.3828, 0.07 ) }
    dend_41 { pt3dadd( 19.7281, -133.782, 91.9388, 0.07 ) }
    dend_41 { pt3dadd( 19.7349, -134.786, 91.7089, 0.07 ) }
    // Section: dend_34, id: dend_34, parent: dend_22 (entry count 47/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 20.8972, -34.8489, 4.15967, 0.22 ) }
    dend_34 { pt3dadd( 20.7386, -35.3692, 5.28055, 0.22 ) }
    dend_34 { pt3dadd( 20.6279, -35.7563, 6.25682, 0.22 ) }
    dend_34 { pt3dadd( 20.4967, -36.0806, 7.29507, 0.22 ) }
    dend_34 { pt3dadd( 20.4009, -36.2246, 7.82402, 0.22 ) }
    dend_34 { pt3dadd( 20.3473, -36.3153, 8.13054, 0.22 ) }
    dend_34 { pt3dadd( 20.2246, -36.5712, 8.90259, 0.22 ) }
    dend_34 { pt3dadd( 20.1828, -36.6759, 9.20419, 0.22 ) }
    dend_34 { pt3dadd( 20.0867, -36.9968, 9.98075, 0.22 ) }
    dend_34 { pt3dadd( 19.866, -37.7271, 11.4772, 0.22 ) }
    dend_34 { pt3dadd( 19.6922, -38.1825, 12.296, 0.22 ) }
    dend_34 { pt3dadd( 19.5155, -38.5663, 12.9209, 0.22 ) }
    dend_34 { pt3dadd( 19.3925, -38.832, 13.308, 0.22 ) }
    dend_34 { pt3dadd( 19.1679, -39.3841, 14.0546, 0.22 ) }
    dend_34 { pt3dadd( 19.0274, -39.8395, 14.6084, 0.22 ) }
    dend_34 { pt3dadd( 18.9274, -40.384, 15.2351, 0.22 ) }
    dend_34 { pt3dadd( 18.8768, -40.6743, 15.619, 0.22 ) }
    dend_34 { pt3dadd( 18.8429, -40.8812, 15.9353, 0.22 ) }
    dend_34 { pt3dadd( 18.8058, -41.1302, 16.3494, 0.22 ) }
    dend_34 { pt3dadd( 18.739, -41.4953, 16.9445, 0.22 ) }
    dend_34 { pt3dadd( 18.6656, -42.0697, 17.7985, 0.29 ) }
    dend_34 { pt3dadd( 18.657, -42.5993, 18.4981, 0.29 ) }
    dend_34 { pt3dadd( 18.6682, -42.9776, 18.9547, 0.29 ) }
    dend_34 { pt3dadd( 18.6738, -43.3178, 19.3151, 0.22 ) }
    dend_34 { pt3dadd( 18.6809, -43.911, 19.8765, 0.22 ) }
    dend_34 { pt3dadd( 18.7224, -44.4506, 20.3507, 0.15 ) }
    dend_34 { pt3dadd( 18.8642, -45.2958, 21.0284, 0.22 ) }
    dend_34 { pt3dadd( 19.1338, -46.254, 21.7215, 0.15 ) }
    dend_34 { pt3dadd( 19.3911, -46.958, 22.1927, 0.22 ) }
    dend_34 { pt3dadd( 19.7014, -47.7487, 22.6662, 0.22 ) }
    dend_34 { pt3dadd( 20.0519, -48.6699, 23.1317, 0.22 ) }
    dend_34 { pt3dadd( 20.189, -49.0753, 23.305, 0.22 ) }
    dend_34 { pt3dadd( 20.3986, -49.7464, 23.5248, 0.22 ) }
    dend_34 { pt3dadd( 20.5971, -50.3809, 23.7087, 0.22 ) }
    dend_34 { pt3dadd( 20.9233, -51.43, 24.0162, 0.15 ) }
    dend_34 { pt3dadd( 21.1492, -52.228, 24.2495, 0.29 ) }
    dend_34 { pt3dadd( 21.3806, -53.2909, 24.5761, 0.22 ) }
    dend_34 { pt3dadd( 21.5759, -54.4489, 24.9953, 0.22 ) }
    dend_34 { pt3dadd( 21.6766, -55.2597, 25.3434, 0.22 ) }
    dend_34 { pt3dadd( 21.7151, -55.8842, 25.6839, 0.29 ) }
    dend_34 { pt3dadd( 21.7176, -56.5356, 26.0887, 0.29 ) }
    dend_34 { pt3dadd( 21.6443, -57.4499, 26.7036, 0.15 ) }
    dend_34 { pt3dadd( 21.522, -58.156, 27.207, 0.29 ) }
    dend_34 { pt3dadd( 21.3264, -58.9464, 27.7846, 0.52 ) }
    dend_34 { pt3dadd( 20.8782, -60.4917, 28.9283, 0.22 ) }
    dend_34 { pt3dadd( 20.6449, -61.2124, 29.496, 0.15 ) }
    dend_34 { pt3dadd( 20.4793, -61.6923, 29.9027, 0.22 ) }
    dend_34 { pt3dadd( 20.2256, -62.4943, 30.662, 0.15 ) }
    dend_34 { pt3dadd( 20.0759, -63.0331, 31.2201, 0.44 ) }
    dend_34 { pt3dadd( 19.8736, -63.9608, 32.245, 0.15 ) }
    dend_34 { pt3dadd( 19.798, -64.5107, 32.8721, 0.29 ) }
    dend_34 { pt3dadd( 19.755, -65.0527, 33.5141, 0.29 ) }
    dend_34 { pt3dadd( 19.7492, -65.9659, 34.5484, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_34 { pt3dadd( 19.7602, -66.246, 34.8552, 0.15 ) }
    dend_34 { pt3dadd( 19.7894, -66.6287, 35.2722, 0.22 ) }
    dend_34 { pt3dadd( 19.876, -67.4898, 36.1472, 0.15 ) }
    dend_34 { pt3dadd( 19.9708, -68.2265, 36.8636, 0.15 ) }
    dend_34 { pt3dadd( 20.038, -68.7742, 37.3718, 0.15 ) }
    dend_34 { pt3dadd( 20.1014, -69.414, 37.95, 0.15 ) }
    dend_34 { pt3dadd( 20.1706, -69.9235, 38.4398, 0.37 ) }
    dend_34 { pt3dadd( 20.2717, -70.4509, 38.9956, 0.74 ) }
    dend_34 { pt3dadd( 20.492, -71.1847, 39.8674, 0.22 ) }
    dend_34 { pt3dadd( 20.6491, -71.6088, 40.4615, 0.22 ) }
    dend_34 { pt3dadd( 20.8686, -72.2024, 41.4797, 0.15 ) }
    dend_34 { pt3dadd( 20.9818, -72.5162, 42.1037, 0.15 ) }
    dend_34 { pt3dadd( 21.0576, -72.7364, 42.6051, 0.29 ) }
    dend_34 { pt3dadd( 21.141, -73.0164, 43.4278, 0.44 ) }
    dend_34 { pt3dadd( 21.254, -73.4094, 44.8296, 0.29 ) }
    dend_34 { pt3dadd( 21.3522, -73.7436, 46.0822, 0.29 ) }
    dend_34 { pt3dadd( 21.4209, -73.9676, 46.8658, 0.29 ) }
    dend_34 { pt3dadd( 21.4615, -74.1316, 47.3193, 0.29 ) }
    dend_34 { pt3dadd( 21.5893, -74.6556, 48.4244, 0.29 ) }
    dend_34 { pt3dadd( 21.7007, -75.045, 49.0687, 0.22 ) }
    dend_34 { pt3dadd( 21.8884, -75.5293, 49.7275, 0.22 ) }
    dend_34 { pt3dadd( 22.162, -76.1262, 50.4374, 0.22 ) }
    dend_34 { pt3dadd( 22.4717, -76.8186, 51.1996, 0.22 ) }
    dend_34 { pt3dadd( 22.7481, -77.4454, 51.8568, 0.37 ) }
    dend_34 { pt3dadd( 23.1975, -78.4336, 52.8686, 0.22 ) }
    dend_34 { pt3dadd( 23.4459, -78.9978, 53.4807, 0.15 ) }
    dend_34 { pt3dadd( 23.5904, -79.3158, 53.842, 0.22 ) }
    dend_34 { pt3dadd( 23.885, -80.0797, 54.7281, 0.07 ) }
    dend_34 { pt3dadd( 24.0949, -80.6878, 55.4463, 0.07 ) }
    dend_34 { pt3dadd( 24.2896, -81.3702, 56.2444, 0.07 ) }
    dend_34 { pt3dadd( 24.4183, -82.0619, 56.9992, 0.07 ) }
    dend_34 { pt3dadd( 24.4528, -82.5717, 57.535, 0.88 ) }
    dend_34 { pt3dadd( 24.4235, -83.7446, 58.7708, 0.07 ) }
    dend_34 { pt3dadd( 24.3725, -84.3852, 59.4266, 0.07 ) }
    dend_34 { pt3dadd( 24.3269, -84.7414, 59.7914, 0.22 ) }
    dend_34 { pt3dadd( 24.1951, -85.9152, 61.0253, 0.07 ) }
    dend_34 { pt3dadd( 24.1337, -86.8279, 62.0335, 0.07 ) }
    dend_34 { pt3dadd( 24.103, -87.7554, 63.0909, 0.22 ) }
    dend_34 { pt3dadd( 24.1285, -88.2072, 63.6169, 0.66 ) }
    dend_34 { pt3dadd( 24.2605, -89.1458, 64.7331, 0.07 ) }
    dend_34 { pt3dadd( 24.485, -90.1062, 65.8943, 0.07 ) }
    dend_34 { pt3dadd( 24.7402, -90.8275, 66.7444, 0.07 ) }
    dend_34 { pt3dadd( 24.9143, -91.1963, 67.1782, 0.59 ) }
    dend_34 { pt3dadd( 25.3967, -92.0706, 68.2015, 0.07 ) }
    dend_34 { pt3dadd( 25.8379, -92.7938, 69.1278, 0.07 ) }
    dend_34 { pt3dadd( 26.222, -93.357, 69.8979, 0.07 ) }
    dend_34 { pt3dadd( 26.5025, -93.7678, 70.5137, 0.22 ) }
    dend_34 { pt3dadd( 26.829, -94.2336, 71.2927, 0.37 ) }
    dend_34 { pt3dadd( 27.1058, -94.6187, 72.0387, 0.22 ) }
    dend_34 { pt3dadd( 27.4901, -95.1516, 73.3133, 0.22 ) }
    dend_34 { pt3dadd( 27.6485, -95.3724, 73.9136, 0.37 ) }
    dend_34 { pt3dadd( 27.95, -95.881, 75.2388, 0.15 ) }
    dend_34 { pt3dadd( 28.1894, -96.3941, 76.4477, 0.15 ) }
    dend_34 { pt3dadd( 28.3808, -96.9336, 77.5295, 0.15 ) }
    dend_34 { pt3dadd( 28.5958, -97.6249, 78.6946, 0.15 ) }
    dend_34 { pt3dadd( 28.8089, -98.3019, 79.681, 0.22 ) }
    dend_34 { pt3dadd( 29.0751, -99.0792, 80.7146, 0.07 ) }
    dend_34 { pt3dadd( 29.2196, -99.4788, 81.1804, 0.29 ) }
    dend_34 { pt3dadd( 29.412, -100.027, 81.7151, 0.29 ) }
    dend_34 { pt3dadd( 29.8032, -101.071, 82.6126, 0.07 ) }
    dend_34 { pt3dadd( 30.1794, -102.007, 83.3596, 0.07 ) }
    dend_34 { pt3dadd( 30.3585, -102.426, 83.726, 0.44 ) }
    dend_34 { pt3dadd( 30.6286, -103.013, 84.2927, 0.52 ) }
    dend_34 { pt3dadd( 31.156, -104.188, 85.515, 0.07 ) }
    dend_34 { pt3dadd( 31.5027, -105.001, 86.3875, 0.22 ) }
    dend_34 { pt3dadd( 32.0012, -106.278, 87.7555, 0.07 ) }
    dend_34 { pt3dadd( 32.3838, -107.397, 88.8717, 0.29 ) }
    dend_34 { pt3dadd( 32.8304, -108.932, 90.3577, 0.07 ) }
    dend_34 { pt3dadd( 33.0666, -109.832, 91.1904, 0.07 ) }
    dend_34 { pt3dadd( 33.1778, -110.354, 91.6373, 0.29 ) }
    dend_34 { pt3dadd( 33.2787, -111.0, 92.1076, 0.66 ) }
    dend_34 { pt3dadd( 33.5024, -113.198, 93.4092, 0.07 ) }
    dend_34 { pt3dadd( 33.6013, -114.599, 94.0826, 0.15 ) }
    dend_34 { pt3dadd( 33.6298, -115.345, 94.3911, 0.37 ) }
    dend_34 { pt3dadd( 33.6493, -116.263, 94.7276, 0.59 ) }
    dend_34 { pt3dadd( 33.6575, -117.677, 95.2172, 0.07 ) }
    dend_34 { pt3dadd( 33.6272, -119.39, 95.8208, 0.15 ) }
    dend_34 { pt3dadd( 33.6145, -119.992, 96.0311, 0.29 ) }
    dend_34 { pt3dadd( 33.6299, -120.853, 96.3443, 0.74 ) }
    dend_34 { pt3dadd( 33.7204, -122.492, 97.0088, 0.07 ) }
    dend_34 { pt3dadd( 33.8463, -123.635, 97.5242, 0.22 ) }
    dend_34 { pt3dadd( 33.9837, -124.534, 97.9778, 0.22 ) }
    dend_34 { pt3dadd( 34.2286, -125.888, 98.6598, 0.07 ) }
    dend_34 { pt3dadd( 34.483, -127.324, 99.3967, 0.07 ) }
    dend_34 { pt3dadd( 34.6093, -127.957, 99.7268, 0.07 ) }
    dend_34 { pt3dadd( 34.7244, -128.516, 100.039, 0.29 ) }
    dend_34 { pt3dadd( 34.8954, -129.481, 100.6, 0.44 ) }
    dend_34 { pt3dadd( 35.0318, -130.609, 101.299, 0.07 ) }
    dend_34 { pt3dadd( 35.0428, -131.998, 102.162, 0.07 ) }
    dend_34 { pt3dadd( 34.9909, -132.906, 102.708, 0.07 ) }
    dend_34 { pt3dadd( 34.8676, -134.041, 103.354, 0.07 ) }
    dend_34 { pt3dadd( 34.6632, -135.149, 103.955, 0.15 ) }
    dend_34 { pt3dadd( 34.3336, -136.456, 104.705, 0.37 ) }
    dend_34 { pt3dadd( 33.743, -138.395, 105.9, 0.07 ) }
    dend_34 { pt3dadd( 33.4906, -139.121, 106.351, 0.07 ) }
    dend_34 { pt3dadd( 33.234, -139.78, 106.784, 0.15 ) }
    dend_34 { pt3dadd( 32.7263, -140.975, 107.593, 0.07 ) }
    dend_34 { pt3dadd( 31.8188, -142.919, 108.971, 0.07 ) }
    dend_34 { pt3dadd( 31.3688, -143.799, 109.662, 0.07 ) }
    dend_34 { pt3dadd( 30.9742, -144.49, 110.324, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_34 { pt3dadd( 30.6171, -145.09, 110.92, 0.07 ) }
    dend_34 { pt3dadd( 30.3591, -145.539, 111.369, 0.22 ) }
    dend_34 { pt3dadd( 30.018, -146.158, 111.931, 0.37 ) }
    dend_34 { pt3dadd( 29.4835, -147.167, 112.621, 0.07 ) }
    dend_34 { pt3dadd( 28.9359, -148.331, 113.288, 0.22 ) }
    dend_34 { pt3dadd( 28.6007, -149.168, 113.701, 0.07 ) }
    dend_34 { pt3dadd( 28.2127, -150.37, 114.207, 0.22 ) }
    dend_34 { pt3dadd( 27.8371, -151.957, 114.76, 0.07 ) }
    dend_34 { pt3dadd( 27.3938, -154.493, 115.509, 0.07 ) }
    dend_34 { pt3dadd( 27.209, -155.921, 115.841, 0.07 ) }
    dend_34 { pt3dadd( 27.1325, -156.728, 115.991, 0.07 ) }
    dend_34 { pt3dadd( 27.0698, -157.572, 116.129, 0.22 ) }
    dend_34 { pt3dadd( 26.9165, -159.861, 116.476, 0.07 ) }
    dend_34 { pt3dadd( 26.8101, -161.28, 116.717, 0.07 ) }
    dend_34 { pt3dadd( 26.6871, -162.443, 116.937, 0.07 ) }
    dend_34 { pt3dadd( 26.5281, -163.426, 117.138, 0.22 ) }
    dend_34 { pt3dadd( 26.3074, -164.408, 117.377, 0.22 ) }
    dend_34 { pt3dadd( 25.9064, -165.819, 117.76, 0.07 ) }
    dend_34 { pt3dadd( 25.6141, -166.672, 118.019, 0.07 ) }
    dend_34 { pt3dadd( 25.2827, -167.548, 118.295, 0.29 ) }
    dend_34 { pt3dadd( 24.9141, -168.441, 118.615, 0.07 ) }
    dend_34 { pt3dadd( 24.5198, -169.331, 118.957, 0.07 ) }
    dend_34 { pt3dadd( 24.0372, -170.401, 119.353, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 23/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 20.8972, -34.8489, 4.15967, 0.29 ) }
    dend_23 { pt3dadd( 21.03, -35.3574, 4.17325, 0.29 ) }
    dend_23 { pt3dadd( 21.1617, -36.0385, 4.22437, 0.22 ) }
    dend_23 { pt3dadd( 21.2846, -36.7184, 4.28598, 0.22 ) }
    dend_23 { pt3dadd( 21.4051, -37.2914, 4.34192, 0.22 ) }
    dend_23 { pt3dadd( 21.6152, -38.2042, 4.4331, 0.37 ) }
    dend_23 { pt3dadd( 21.8225, -39.0384, 4.51647, 0.22 ) }
    dend_23 { pt3dadd( 22.0678, -39.9776, 4.62644, 0.22 ) }
    dend_23 { pt3dadd( 22.239, -40.5682, 4.69864, 0.29 ) }
    dend_23 { pt3dadd( 22.4943, -41.3573, 4.80258, 0.29 ) }
    dend_23 { pt3dadd( 22.5921, -41.6185, 4.84612, 0.52 ) }
    dend_23 { pt3dadd( 22.7508, -41.9603, 4.92463, 0.81 ) }
    dend_23 { pt3dadd( 23.1348, -42.6544, 5.10861, 1.03 ) }
    dend_23 { pt3dadd( 23.7099, -43.5964, 5.36772, 0.44 ) }
    dend_23 { pt3dadd( 24.3424, -44.6283, 5.65705, 0.59 ) }
    dend_23 { pt3dadd( 24.8382, -45.4849, 5.88624, 0.37 ) }
    dend_23 { pt3dadd( 25.5038, -46.6581, 6.17767, 0.29 ) }
    dend_23 { pt3dadd( 25.967, -47.4908, 6.37281, 0.29 ) }
    dend_23 { pt3dadd( 26.3325, -48.1405, 6.52377, 0.29 ) }
    dend_23 { pt3dadd( 26.7937, -48.9538, 6.7323, 0.44 ) }
    dend_23 { pt3dadd( 27.4597, -50.0827, 7.03275, 0.59 ) }
    dend_23 { pt3dadd( 27.9215, -50.8566, 7.2364, 0.59 ) }
    dend_23 { pt3dadd( 28.537, -51.9201, 7.52367, 0.37 ) }
    dend_23 { pt3dadd( 29.1336, -52.9626, 7.8295, 0.44 ) }
    dend_23 { pt3dadd( 29.6438, -53.8312, 8.09514, 0.37 ) }
    dend_23 { pt3dadd( 30.1704, -54.6482, 8.34452, 0.59 ) }
    dend_23 { pt3dadd( 30.785, -55.5078, 8.59744, 0.29 ) }
    dend_23 { pt3dadd( 31.3334, -56.2033, 8.74894, 0.59 ) }
    dend_23 { pt3dadd( 31.5923, -56.5014, 8.78765, 0.59 ) }
    dend_23 { pt3dadd( 32.3349, -57.3232, 8.84658, 0.37 ) }
    dend_23 { pt3dadd( 33.016, -58.029, 8.89331, 0.44 ) }
    dend_23 { pt3dadd( 33.5152, -58.5166, 8.94954, 0.44 ) }
    dend_23 { pt3dadd( 34.5748, -59.4449, 9.11118, 0.29 ) }
    dend_23 { pt3dadd( 35.1595, -59.9056, 9.21796, 0.22 ) }
    dend_23 { pt3dadd( 35.8304, -60.4188, 9.36659, 0.37 ) }
    dend_23 { pt3dadd( 36.7811, -61.1451, 9.61212, 0.29 ) }
    dend_23 { pt3dadd( 37.4561, -61.6754, 9.80396, 0.29 ) }
    dend_23 { pt3dadd( 38.1762, -62.2182, 10.015, 0.66 ) }
    dend_23 { pt3dadd( 38.8618, -62.6827, 10.2262, 0.66 ) }
    dend_23 { pt3dadd( 39.7161, -63.1735, 10.4555, 0.37 ) }
    dend_23 { pt3dadd( 40.6117, -63.5951, 10.6834, 0.37 ) }
    dend_23 { pt3dadd( 41.6389, -64.0156, 10.9584, 0.29 ) }
    dend_23 { pt3dadd( 42.535, -64.3714, 11.2205, 0.22 ) }
    dend_23 { pt3dadd( 43.1526, -64.642, 11.439, 0.22 ) }
    dend_23 { pt3dadd( 43.5731, -64.8655, 11.6211, 0.29 ) }
    dend_23 { pt3dadd( 44.438, -65.4432, 12.0877, 0.59 ) }
    dend_23 { pt3dadd( 45.0398, -65.9576, 12.4505, 0.44 ) }
    dend_23 { pt3dadd( 45.5388, -66.467, 12.7556, 0.29 ) }
    dend_23 { pt3dadd( 46.2445, -67.216, 13.1207, 0.44 ) }
    dend_23 { pt3dadd( 46.9599, -67.942, 13.3908, 0.29 ) }
    dend_23 { pt3dadd( 48.0524, -68.9522, 13.6409, 0.29 ) }
    dend_23 { pt3dadd( 48.9103, -69.6193, 13.6763, 0.52 ) }
    dend_23 { pt3dadd( 49.6979, -70.0946, 13.5933, 0.52 ) }
    dend_23 { pt3dadd( 50.8008, -70.6045, 13.3882, 0.29 ) }
    dend_23 { pt3dadd( 51.8443, -70.9708, 13.1367, 0.59 ) }
    dend_23 { pt3dadd( 52.6042, -71.1812, 12.9186, 0.29 ) }
    dend_23 { pt3dadd( 53.7272, -71.4382, 12.5502, 0.44 ) }
    dend_23 { pt3dadd( 54.7312, -71.6544, 12.2114, 0.66 ) }
    dend_23 { pt3dadd( 56.3915, -72.0649, 11.6469, 0.59 ) }
    dend_23 { pt3dadd( 57.5139, -72.4173, 11.2948, 0.29 ) }
    dend_23 { pt3dadd( 58.0364, -72.6218, 11.1521, 0.29 ) }
    dend_23 { pt3dadd( 58.3763, -72.7945, 11.0687, 0.29 ) }
    dend_23 { pt3dadd( 58.83, -73.077, 10.9659, 0.37 ) }
    dend_23 { pt3dadd( 59.4746, -73.5616, 10.8093, 0.37 ) }
    dend_23 { pt3dadd( 60.1334, -74.1871, 10.6323, 0.29 ) }
    dend_23 { pt3dadd( 60.9055, -75.0543, 10.4091, 0.37 ) }
    dend_23 { pt3dadd( 61.979, -76.3362, 10.0727, 0.29 ) }
    dend_23 { pt3dadd( 62.5595, -77.038, 9.87382, 0.29 ) }
    dend_23 { pt3dadd( 62.8787, -77.4283, 9.74616, 0.29 ) }
    dend_23 { pt3dadd( 63.538, -78.2737, 9.43229, 0.37 ) }
    dend_23 { pt3dadd( 64.0578, -79.0107, 9.13219, 0.52 ) }
    dend_23 { pt3dadd( 64.6491, -79.8978, 8.77961, 0.81 ) }
    dend_23 { pt3dadd( 65.1202, -80.6138, 8.56075, 0.29 ) }
    dend_23 { pt3dadd( 65.5615, -81.2643, 8.44931, 0.22 ) }
    dend_23 { pt3dadd( 65.9761, -81.8383, 8.4328, 0.22 ) }
    dend_23 { pt3dadd( 66.535, -82.5752, 8.50945, 0.29 ) }
    dend_23 { pt3dadd( 67.2776, -83.5817, 8.69015, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_23 { pt3dadd( 68.106, -84.7819, 8.93665, 0.44 ) }
    dend_23 { pt3dadd( 68.7741, -85.7552, 9.12421, 0.59 ) }
    dend_23 { pt3dadd( 69.4978, -86.7774, 9.30725, 0.59 ) }
    dend_23 { pt3dadd( 70.173, -87.689, 9.43777, 0.44 ) }
    dend_23 { pt3dadd( 71.1884, -88.9745, 9.54972, 0.44 ) }
    dend_23 { pt3dadd( 72.0547, -90.0345, 9.56252, 0.22 ) }
    dend_23 { pt3dadd( 72.5771, -90.6537, 9.53828, 0.22 ) }
    dend_23 { pt3dadd( 72.8325, -90.9453, 9.52441, 0.52 ) }
    dend_23 { pt3dadd( 73.415, -91.5688, 9.47515, 0.88 ) }
    dend_23 { pt3dadd( 74.631, -92.762, 9.3391, 0.29 ) }
    dend_23 { pt3dadd( 75.305, -93.3379, 9.24422, 0.29 ) }
    dend_23 { pt3dadd( 76.137, -93.9625, 9.08398, 0.29 ) }
    dend_23 { pt3dadd( 76.6507, -94.3311, 8.95146, 0.29 ) }
    dend_23 { pt3dadd( 77.2415, -94.7488, 8.74732, 0.29 ) }
    dend_23 { pt3dadd( 77.6805, -95.0778, 8.55169, 0.37 ) }
    dend_23 { pt3dadd( 78.2552, -95.5703, 8.23997, 0.52 ) }
    dend_23 { pt3dadd( 78.9074, -96.1884, 7.88253, 0.44 ) }
    dend_23 { pt3dadd( 79.4163, -96.72, 7.62262, 0.37 ) }
    dend_23 { pt3dadd( 79.8198, -97.1573, 7.46086, 0.37 ) }
    dend_23 { pt3dadd( 80.5897, -97.9832, 7.22179, 0.29 ) }
    dend_23 { pt3dadd( 81.3104, -98.7167, 7.05082, 0.29 ) }
    dend_23 { pt3dadd( 81.8455, -99.1933, 6.97309, 0.22 ) }
    dend_23 { pt3dadd( 82.2974, -99.5039, 6.91466, 0.22 ) }
    dend_23 { pt3dadd( 83.1594, -99.9715, 6.80406, 0.29 ) }
    dend_23 { pt3dadd( 83.9067, -100.337, 6.67776, 0.29 ) }
    dend_23 { pt3dadd( 84.4456, -100.617, 6.56152, 0.44 ) }
    dend_23 { pt3dadd( 85.0026, -100.981, 6.39693, 0.52 ) }
    dend_23 { pt3dadd( 85.9267, -101.826, 6.04727, 0.29 ) }
    dend_23 { pt3dadd( 86.4006, -102.416, 5.8176, 0.37 ) }
    dend_23 { pt3dadd( 86.9452, -103.252, 5.52579, 0.66 ) }
    dend_23 { pt3dadd( 87.4944, -104.177, 5.2108, 0.29 ) }
    dend_23 { pt3dadd( 87.8956, -104.883, 4.9685, 0.37 ) }
    dend_23 { pt3dadd( 88.3913, -105.761, 4.67226, 0.59 ) }
    dend_23 { pt3dadd( 89.1656, -107.103, 4.27039, 0.22 ) }
    dend_23 { pt3dadd( 89.9232, -108.324, 3.88531, 0.29 ) }
    dend_23 { pt3dadd( 90.4769, -109.143, 3.61727, 0.59 ) }
    dend_23 { pt3dadd( 90.7732, -109.555, 3.47561, 0.96 ) }
    dend_23 { pt3dadd( 90.9286, -109.769, 3.40513, 0.96 ) }
    dend_23 { pt3dadd( 91.3161, -110.302, 3.22471, 0.66 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 39/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 3.66609, -28.1005, -33.0431, 0.22 ) }
    dend_21 { pt3dadd( 0.334997, -33.4217, -43.2605, 0.22 ) }
    dend_21 { pt3dadd( -1.49423, -41.6122, -52.0378, 0.22 ) }
    dend_21 { pt3dadd( -1.51122, -49.7492, -61.0445, 0.22 ) }
    dend_21 { pt3dadd( -1.12812, -57.8674, -70.0577, 0.22 ) }
    dend_21 { pt3dadd( 1.32415, -64.5361, -79.7903, 0.22 ) }
    dend_21 { pt3dadd( 4.23941, -71.7826, -89.0061, 0.22 ) }
    dend_21 { pt3dadd( 7.34075, -77.687, -98.9962, 0.22 ) }
    dend_21 { pt3dadd( 11.3645, -82.3779, -109.235, 0.22 ) }
    dend_21 { pt3dadd( 13.5802, -86.694, -120.154, 0.22 ) }
    dend_21 { pt3dadd( 18.3721, -89.9805, -130.555, 0.22 ) }
    dend_21 { pt3dadd( 25.2452, -90.7644, -140.203, 0.22 ) }
    dend_21 { pt3dadd( 32.6702, -93.5013, -149.088, 0.22 ) }
    dend_21 { pt3dadd( 38.2864, -95.5422, -159.364, 0.22 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 53/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 3.66609, -28.1005, -33.0431, 0.15 ) }
    dend_18 { pt3dadd( 0.994116, -32.8927, -45.1917, 0.22 ) }
    dend_18 { pt3dadd( 0.707146, -35.2012, -58.2518, 0.22 ) }
    dend_18 { pt3dadd( 1.18762, -38.0092, -71.2182, 0.22 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 57/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -16.3828, -24.4614, -41.8071, 0.22 ) }
    dend_11 { pt3dadd( -17.0968, -30.8585, -51.58, 0.22 ) }
    dend_11 { pt3dadd( -18.2527, -36.6612, -61.6387, 0.22 ) }
    dend_11 { pt3dadd( -21.223, -42.3897, -71.343, 0.22 ) }
    dend_11 { pt3dadd( -23.5541, -48.183, -81.1913, 0.22 ) }
    dend_11 { pt3dadd( -25.6489, -55.3403, -90.2473, 0.22 ) }
    dend_11 { pt3dadd( -27.2855, -61.5855, -99.9899, 0.22 ) }
    dend_11 { pt3dadd( -30.3994, -70.1824, -107.459, 0.22 ) }
    dend_11 { pt3dadd( -33.2547, -80.1242, -113.338, 0.22 ) }
    dend_11 { pt3dadd( -37.3374, -88.8521, -120.156, 0.22 ) }
    dend_11 { pt3dadd( -40.0401, -98.0105, -127.167, 0.22 ) }
    dend_11 { pt3dadd( -42.6223, -105.969, -135.45, 0.22 ) }
    dend_11 { pt3dadd( -46.3505, -112.658, -144.286, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 70/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -16.3828, -24.4614, -41.8071, 0.66 ) }
    dend_10 { pt3dadd( -17.3764, -31.1807, -50.3785, 0.22 ) }
    dend_10 { pt3dadd( -19.6045, -37.8569, -58.7469, 0.22 ) }
    dend_10 { pt3dadd( -23.6242, -43.1623, -67.3363, 0.22 ) }
    dend_10 { pt3dadd( -28.5908, -47.8966, -75.7321, 0.22 ) }
    dend_10 { pt3dadd( -33.4325, -53.173, -83.9043, 0.22 ) }
    dend_10 { pt3dadd( -37.8694, -56.4798, -93.1725, 0.22 ) }
    dend_10 { pt3dadd( -42.6573, -59.475, -102.362, 0.22 ) }
    dend_10 { pt3dadd( -45.9033, -62.9905, -112.044, 0.22 ) }
    dend_10 { pt3dadd( -48.0771, -68.1771, -121.335, 0.22 ) }
    dend_10 { pt3dadd( -49.3025, -74.335, -130.252, 0.22 ) }
    dend_10 { pt3dadd( -51.87, -81.2211, -138.366, 0.22 ) }
    dend_10 { pt3dadd( -53.6957, -86.577, -147.644, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 83/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -17.2429, 4.86271, -11.5035, 0.66 ) }
    dend_8 { pt3dadd( -17.2903, 5.22221, -12.0287, 0.66 ) }
    dend_8 { pt3dadd( -17.298, 5.70282, -12.7015, 0.22 ) }
    dend_8 { pt3dadd( -17.2871, 5.94604, -13.0185, 0.22 ) }
    dend_8 { pt3dadd( -17.2821, 6.20169, -13.3475, 0.22 ) }
    dend_8 { pt3dadd( -17.2891, 6.40319, -13.6105, 0.22 ) }
    dend_8 { pt3dadd( -17.3051, 6.53772, -13.7919, 0.52 ) }
    dend_8 { pt3dadd( -17.3408, 6.73365, -14.0768, 0.81 ) }
    dend_8 { pt3dadd( -17.458, 7.07368, -14.5813, 0.22 ) }
    dend_8 { pt3dadd( -17.5749, 7.29434, -14.8867, 0.22 ) }
    dend_8 { pt3dadd( -17.6837, 7.45683, -15.0973, 0.22 ) }
    dend_8 { pt3dadd( -17.8489, 7.67494, -15.3782, 0.22 ) }
    dend_8 { pt3dadd( -18.01, 7.86832, -15.6204, 0.37 ) }
    dend_8 { pt3dadd( -18.3194, 8.21501, -16.0344, 0.66 ) }
    dend_8 { pt3dadd( -18.5967, 8.51548, -16.3579, 0.22 ) }
    dend_8 { pt3dadd( -18.9778, 8.95781, -16.773, 0.15 ) }
    dend_8 { pt3dadd( -19.1962, 9.22665, -16.9978, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_8 { pt3dadd( -19.3354, 9.39986, -17.1277, 0.52 ) }
    dend_8 { pt3dadd( -19.5363, 9.63848, -17.2864, 0.37 ) }
    dend_8 { pt3dadd( -19.8952, 10.0356, -17.5302, 0.15 ) }
    dend_8 { pt3dadd( -20.0923, 10.2393, -17.6434, 0.22 ) }
    dend_8 { pt3dadd( -20.2226, 10.3768, -17.7054, 0.15 ) }
    dend_8 { pt3dadd( -20.558, 10.751, -17.8333, 0.29 ) }
    dend_8 { pt3dadd( -20.7964, 11.0445, -17.9001, 0.29 ) }
    dend_8 { pt3dadd( -20.9333, 11.2293, -17.9174, 0.29 ) }
    dend_8 { pt3dadd( -21.2049, 11.6309, -17.9191, 0.52 ) }
    dend_8 { pt3dadd( -21.4605, 12.0116, -17.898, 0.22 ) }
    dend_8 { pt3dadd( -21.8156, 12.5564, -17.8484, 0.22 ) }
    dend_8 { pt3dadd( -22.1077, 13.0136, -17.7881, 0.29 ) }
    dend_8 { pt3dadd( -22.3239, 13.3428, -17.7477, 0.29 ) }
    dend_8 { pt3dadd( -22.5813, 13.7152, -17.7089, 0.37 ) }
    dend_8 { pt3dadd( -23.0038, 14.2875, -17.6763, 0.22 ) }
    dend_8 { pt3dadd( -23.2172, 14.5551, -17.6821, 0.15 ) }
    dend_8 { pt3dadd( -23.3866, 14.7762, -17.717, 0.15 ) }
    dend_8 { pt3dadd( -23.5931, 15.0663, -17.8105, 0.15 ) }
    dend_8 { pt3dadd( -23.7569, 15.333, -17.9302, 0.29 ) }
    dend_8 { pt3dadd( -23.9155, 15.6687, -18.1003, 0.88 ) }
    dend_8 { pt3dadd( -23.9663, 15.8348, -18.1901, 0.88 ) }
    dend_8 { pt3dadd( -24.0854, 16.4246, -18.5071, 0.44 ) }
    dend_8 { pt3dadd( -24.1487, 16.7775, -18.7081, 0.22 ) }
    dend_8 { pt3dadd( -24.2266, 17.2247, -18.9555, 0.22 ) }
    dend_8 { pt3dadd( -24.2913, 17.5966, -19.1624, 0.15 ) }
    dend_8 { pt3dadd( -24.3805, 18.0694, -19.4195, 0.15 ) }
    dend_8 { pt3dadd( -24.4599, 18.4565, -19.62, 0.22 ) }
    dend_8 { pt3dadd( -24.6006, 19.1164, -19.9233, 0.15 ) }
    dend_8 { pt3dadd( -24.7502, 19.8355, -20.2144, 0.22 ) }
    dend_8 { pt3dadd( -24.7981, 20.085, -20.3042, 0.22 ) }
    dend_8 { pt3dadd( -24.8895, 20.5691, -20.4495, 0.52 ) }
    dend_8 { pt3dadd( -24.9685, 20.9915, -20.5523, 0.22 ) }
    dend_8 { pt3dadd( -25.0438, 21.4353, -20.6406, 0.22 ) }
    dend_8 { pt3dadd( -25.1135, 21.95, -20.7146, 0.22 ) }
    dend_8 { pt3dadd( -25.1968, 22.5719, -20.794, 0.15 ) }
    dend_8 { pt3dadd( -25.2904, 23.2285, -20.8763, 0.29 ) }
    dend_8 { pt3dadd( -25.3491, 23.6377, -20.9304, 0.29 ) }
    dend_8 { pt3dadd( -25.4624, 24.3702, -21.0306, 0.15 ) }
    dend_8 { pt3dadd( -25.5411, 24.8488, -21.1041, 0.15 ) }
    dend_8 { pt3dadd( -25.5894, 25.134, -21.1483, 0.15 ) }
    dend_8 { pt3dadd( -25.677, 25.5746, -21.2205, 0.29 ) }
    dend_8 { pt3dadd( -25.8115, 26.1487, -21.3289, 0.15 ) }
    dend_8 { pt3dadd( -25.8547, 26.3326, -21.3705, 0.15 ) }
    dend_8 { pt3dadd( -25.946, 26.7451, -21.4854, 0.44 ) }
    dend_8 { pt3dadd( -26.0091, 27.0958, -21.6059, 0.44 ) }
    dend_8 { pt3dadd( -26.062, 27.4686, -21.7588, 0.22 ) }
    dend_8 { pt3dadd( -26.1001, 27.8376, -21.9296, 0.22 ) }
    dend_8 { pt3dadd( -26.148, 28.4968, -22.2623, 0.15 ) }
    dend_8 { pt3dadd( -26.1668, 29.0227, -22.5385, 0.15 ) }
    dend_8 { pt3dadd( -26.1764, 29.7025, -22.8985, 0.07 ) }
    dend_8 { pt3dadd( -26.1772, 30.1435, -23.1314, 0.15 ) }
    dend_8 { pt3dadd( -26.1761, 30.4706, -23.3016, 0.52 ) }
    dend_8 { pt3dadd( -26.1789, 30.6076, -23.3693, 0.52 ) }
    dend_8 { pt3dadd( -26.2303, 31.2059, -23.6347, 0.15 ) }
    dend_8 { pt3dadd( -26.2992, 31.6397, -23.809, 0.15 ) }
    dend_8 { pt3dadd( -26.3501, 31.8559, -23.8857, 0.29 ) }
    dend_8 { pt3dadd( -26.405, 32.0608, -23.9526, 0.29 ) }
    dend_8 { pt3dadd( -26.5929, 32.7073, -24.1675, 0.07 ) }
    dend_8 { pt3dadd( -26.711, 33.1059, -24.302, 0.07 ) }
    dend_8 { pt3dadd( -26.8362, 33.5045, -24.4321, 0.15 ) }
    dend_8 { pt3dadd( -26.9584, 33.8967, -24.5553, 0.15 ) }
    dend_8 { pt3dadd( -27.089, 34.325, -24.685, 0.37 ) }
    dend_8 { pt3dadd( -27.1232, 34.4474, -24.7212, 0.37 ) }
    dend_8 { pt3dadd( -27.2212, 34.8518, -24.8364, 0.07 ) }
    dend_8 { pt3dadd( -27.3073, 35.2835, -24.9474, 0.07 ) }
    dend_8 { pt3dadd( -27.3984, 35.7997, -25.076, 0.07 ) }
    dend_8 { pt3dadd( -27.4418, 36.0522, -25.137, 0.07 ) }
    dend_8 { pt3dadd( -27.511, 36.392, -25.2261, 0.15 ) }
    dend_8 { pt3dadd( -27.6365, 36.9237, -25.3795, 0.07 ) }
    dend_8 { pt3dadd( -27.722, 37.2476, -25.4861, 0.15 ) }
    dend_8 { pt3dadd( -27.8166, 37.5848, -25.6098, 0.29 ) }
    dend_8 { pt3dadd( -27.9295, 37.967, -25.7577, 0.29 ) }
    dend_8 { pt3dadd( -28.1535, 38.6625, -26.0362, 0.22 ) }
    dend_8 { pt3dadd( -28.2741, 39.0158, -26.181, 0.07 ) }
    dend_8 { pt3dadd( -28.4231, 39.452, -26.3638, 0.07 ) }
    dend_8 { pt3dadd( -28.4837, 39.6238, -26.4347, 0.29 ) }
    dend_8 { pt3dadd( -28.6068, 39.9555, -26.5478, 0.59 ) }
    dend_8 { pt3dadd( -28.7086, 40.2117, -26.6202, 0.44 ) }
    dend_8 { pt3dadd( -28.9247, 40.7462, -26.7384, 0.15 ) }
    dend_8 { pt3dadd( -29.0436, 41.0439, -26.7959, 0.15 ) }
    dend_8 { pt3dadd( -29.2671, 41.6007, -26.8909, 0.22 ) }
    dend_8 { pt3dadd( -29.4635, 42.0753, -26.9704, 0.07 ) }
    dend_8 { pt3dadd( -29.5823, 42.3543, -27.0223, 0.22 ) }
    dend_8 { pt3dadd( -29.7206, 42.7222, -27.1027, 0.29 ) }
    dend_8 { pt3dadd( -29.8528, 43.106, -27.1978, 0.29 ) }
    dend_8 { pt3dadd( -29.9757, 43.5123, -27.3124, 0.07 ) }
    dend_8 { pt3dadd( -30.0643, 43.8637, -27.4256, 0.15 ) }
    dend_8 { pt3dadd( -30.169, 44.4062, -27.6208, 0.59 ) }
    dend_8 { pt3dadd( -30.2786, 45.1576, -27.8964, 0.15 ) }
    dend_8 { pt3dadd( -30.3227, 45.6513, -28.0796, 0.15 ) }
    dend_8 { pt3dadd( -30.345, 46.2479, -28.2994, 0.15 ) }
    dend_8 { pt3dadd( -30.3384, 46.4739, -28.3823, 0.29 ) }
    dend_8 { pt3dadd( -30.3048, 46.8557, -28.5233, 0.29 ) }
    dend_8 { pt3dadd( -30.2631, 47.1469, -28.6354, 0.07 ) }
    dend_8 { pt3dadd( -30.1444, 47.807, -28.9034, 0.15 ) }
    dend_8 { pt3dadd( -29.9859, 48.6064, -29.2362, 0.07 ) }
    dend_8 { pt3dadd( -29.9265, 48.9141, -29.3659, 0.29 ) }
    dend_8 { pt3dadd( -29.8721, 49.254, -29.5097, 0.29 ) }
    dend_8 { pt3dadd( -29.7852, 50.0426, -29.8669, 0.22 ) }
    dend_8 { pt3dadd( -29.7465, 50.5924, -30.148, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_8 { pt3dadd( -29.7387, 50.8609, -30.3058, 0.22 ) }
    dend_8 { pt3dadd( -29.744, 51.1296, -30.4839, 0.22 ) }
    dend_8 { pt3dadd( -29.7914, 51.6895, -30.8857, 0.22 ) }
    dend_8 { pt3dadd( -29.8781, 52.204, -31.2833, 0.22 ) }
    dend_8 { pt3dadd( -29.9721, 52.5309, -31.565, 0.22 ) }
    dend_8 { pt3dadd( -30.1044, 52.8805, -31.9011, 0.15 ) }
    dend_8 { pt3dadd( -30.1773, 53.0439, -32.0705, 0.15 ) }
    dend_8 { pt3dadd( -30.2338, 53.1417, -32.1801, 0.15 ) }
    dend_8 { pt3dadd( -30.3723, 53.3124, -32.3982, 0.15 ) }
    dend_8 { pt3dadd( -30.4827, 53.4127, -32.5409, 0.15 ) }
    dend_8 { pt3dadd( -30.6268, 53.5274, -32.706, 0.15 ) }
    dend_8 { pt3dadd( -30.8464, 53.6879, -32.9679, 0.22 ) }
    dend_8 { pt3dadd( -31.0092, 53.7983, -33.2113, 0.22 ) }
    dend_8 { pt3dadd( -31.1956, 53.9058, -33.5326, 0.22 ) }
    dend_8 { pt3dadd( -31.4503, 54.0526, -34.0181, 0.37 ) }
    dend_8 { pt3dadd( -31.5803, 54.1306, -34.2885, 0.22 ) }
    dend_8 { pt3dadd( -31.7001, 54.2108, -34.5538, 0.22 ) }
    dend_8 { pt3dadd( -31.9273, 54.4331, -35.1603, 0.22 ) }
    dend_8 { pt3dadd( -32.0148, 54.5702, -35.4565, 0.22 ) }
    dend_8 { pt3dadd( -32.1132, 54.8326, -35.903, 0.15 ) }
    dend_8 { pt3dadd( -32.1776, 55.1269, -36.3047, 0.15 ) }
    dend_8 { pt3dadd( -32.2029, 55.3101, -36.5182, 0.15 ) }
    dend_8 { pt3dadd( -32.24, 55.7765, -36.9737, 0.15 ) }
    dend_8 { pt3dadd( -32.2425, 56.0204, -37.176, 0.15 ) }
    dend_8 { pt3dadd( -32.2331, 56.2406, -37.3485, 0.22 ) }
    dend_8 { pt3dadd( -32.2125, 56.7311, -37.7222, 0.07 ) }
    dend_8 { pt3dadd( -32.2143, 57.0238, -37.9299, 0.15 ) }
    dend_8 { pt3dadd( -32.2319, 57.3663, -38.183, 0.07 ) }
    dend_8 { pt3dadd( -32.2836, 57.6859, -38.4339, 0.22 ) }
    dend_8 { pt3dadd( -32.3294, 57.841, -38.5793, 0.22 ) }
    dend_8 { pt3dadd( -32.4049, 58.0342, -38.806, 0.07 ) }
    dend_8 { pt3dadd( -32.5003, 58.2343, -39.0895, 0.22 ) }
    dend_8 { pt3dadd( -32.6309, 58.4928, -39.5043, 0.15 ) }
    dend_8 { pt3dadd( -32.7461, 58.733, -39.9229, 0.29 ) }
    dend_8 { pt3dadd( -32.831, 58.9832, -40.3791, 0.07 ) }
    dend_8 { pt3dadd( -32.8693, 59.1961, -40.7843, 0.07 ) }
    dend_8 { pt3dadd( -32.8728, 59.3081, -40.9861, 0.07 ) }
    dend_8 { pt3dadd( -32.858, 59.4769, -41.2668, 0.22 ) }
    dend_8 { pt3dadd( -32.8395, 59.6376, -41.486, 0.22 ) }
    dend_8 { pt3dadd( -32.7796, 60.085, -41.998, 0.07 ) }
    dend_8 { pt3dadd( -32.7367, 60.4084, -42.3225, 0.07 ) }
    dend_8 { pt3dadd( -32.7033, 60.6838, -42.5719, 0.15 ) }
    dend_8 { pt3dadd( -32.6508, 61.1132, -42.9504, 0.07 ) }
    dend_8 { pt3dadd( -32.5886, 61.667, -43.4167, 0.07 ) }
    dend_8 { pt3dadd( -32.5299, 62.0899, -43.7917, 0.07 ) }
    dend_8 { pt3dadd( -32.5152, 62.1844, -43.8762, 0.37 ) }
    dend_8 { pt3dadd( -32.4875, 62.3816, -44.0529, 0.37 ) }
    dend_8 { pt3dadd( -32.4306, 62.7552, -44.4093, 0.22 ) }
    dend_8 { pt3dadd( -32.3871, 63.0057, -44.6628, 0.22 ) }
    dend_8 { pt3dadd( -32.2177, 63.7268, -45.4595, 0.07 ) }
    dend_8 { pt3dadd( -32.125, 64.039, -45.8364, 0.07 ) }
    dend_8 { pt3dadd( -32.0258, 64.3253, -46.2213, 0.07 ) }
    dend_8 { pt3dadd( -31.8901, 64.5941, -46.6564, 0.07 ) }
    dend_8 { pt3dadd( -31.8412, 64.6738, -46.7926, 0.07 ) }
    dend_8 { pt3dadd( -31.744, 64.7936, -47.0296, 0.15 ) }
    dend_8 { pt3dadd( -31.5528, 64.9339, -47.4168, 0.15 ) }
    dend_8 { pt3dadd( -31.3461, 64.983, -47.7864, 0.15 ) }
    dend_8 { pt3dadd( -31.0187, 64.9674, -48.31, 0.07 ) }
    dend_8 { pt3dadd( -32.0447, 70.1071, -51.157, 0.07 ) }
    dend_8 { pt3dadd( -31.8638, 75.4969, -53.7827, 0.07 ) }
    dend_8 { pt3dadd( -32.5006, 80.3667, -57.1654, 0.07 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 61/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -17.2429, 4.86271, -11.5035, 0.22 ) }
    dend_5 { pt3dadd( -18.4016, 4.23754, -11.331, 0.22 ) }
    dend_5 { pt3dadd( -19.0809, 3.89045, -11.2025, 0.22 ) }
    dend_5 { pt3dadd( -19.6012, 3.64929, -11.1028, 0.15 ) }
    dend_5 { pt3dadd( -19.9915, 3.47922, -11.0156, 0.22 ) }
    dend_5 { pt3dadd( -20.5388, 3.24316, -10.8682, 0.22 ) }
    dend_5 { pt3dadd( -21.6509, 2.76761, -10.5494, 0.15 ) }
    dend_5 { pt3dadd( -22.214, 2.55696, -10.3693, 0.15 ) }
    dend_5 { pt3dadd( -23.1309, 2.25891, -10.1151, 0.22 ) }
    dend_5 { pt3dadd( -23.9851, 2.018, -9.91727, 0.15 ) }
    dend_5 { pt3dadd( -24.845, 1.76761, -9.71351, 0.15 ) }
    dend_5 { pt3dadd( -25.312, 1.63014, -9.60296, 0.15 ) }
    dend_5 { pt3dadd( -26.0574, 1.43903, -9.44505, 0.15 ) }
    dend_5 { pt3dadd( -27.4729, 1.13134, -9.25724, 0.15 ) }
    dend_5 { pt3dadd( -28.0517, 1.03004, -9.22978, 0.52 ) }
    dend_5 { pt3dadd( -36.2044, -0.44011, -8.97844, 0.52 ) }
    dend_5 { pt3dadd( -44.4136, -0.0145721, -9.84747, 0.52 ) }
    dend_5 { pt3dadd( -52.471, 0.704779, -11.5515, 0.52 ) }
    dend_5 { pt3dadd( -60.6892, 1.58494, -11.7199, 0.52 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 80/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 27.0915, -39.5686, 19.0799, 0.22 ) }
    dend_44 { pt3dadd( 27.6746, -40.2784, 19.5335, 0.22 ) }
    dend_44 { pt3dadd( 28.2306, -41.0201, 20.0505, 0.15 ) }
    dend_44 { pt3dadd( 28.6153, -41.6127, 20.4502, 0.22 ) }
    dend_44 { pt3dadd( 29.3274, -42.9129, 21.2877, 0.15 ) }
    dend_44 { pt3dadd( 29.6878, -43.7213, 21.7929, 0.29 ) }
    dend_44 { pt3dadd( 29.9535, -44.399, 22.2093, 0.29 ) }
    dend_44 { pt3dadd( 30.2926, -45.4913, 22.849, 0.15 ) }
    dend_44 { pt3dadd( 30.5134, -46.3067, 23.2948, 0.22 ) }
    dend_44 { pt3dadd( 30.756, -47.1179, 23.7301, 0.29 ) }
    dend_44 { pt3dadd( 31.1789, -48.2849, 24.417, 0.15 ) }
    dend_44 { pt3dadd( 31.5103, -48.9666, 24.8036, 0.15 ) }
    dend_44 { pt3dadd( 31.9005, -49.6052, 25.1808, 0.22 ) }
    dend_44 { pt3dadd( 32.6557, -50.5672, 25.8376, 0.15 ) }
    dend_44 { pt3dadd( 33.3796, -51.3107, 26.4475, 0.22 ) }
    dend_44 { pt3dadd( 34.3688, -52.1854, 27.2674, 0.22 ) }
    dend_44 { pt3dadd( 35.3456, -52.9601, 28.1043, 0.15 ) }
    dend_44 { pt3dadd( 36.0962, -53.5185, 28.8039, 0.22 ) }
    dend_44 { pt3dadd( 36.8752, -54.0831, 29.6445, 0.22 ) }
    dend_44 { pt3dadd( 37.791, -54.7401, 30.771, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_44 { pt3dadd( 38.4351, -55.2311, 31.6861, 0.07 ) }
    dend_44 { pt3dadd( 38.9075, -55.5911, 32.3886, 0.15 ) }
    dend_44 { pt3dadd( 39.4861, -56.0176, 33.2647, 0.07 ) }
    dend_44 { pt3dadd( 40.2648, -56.6042, 34.41, 0.07 ) }
    dend_44 { pt3dadd( 40.6154, -56.8749, 34.8855, 0.22 ) }
    dend_44 { pt3dadd( 41.2308, -57.3835, 35.6801, 0.44 ) }
    dend_44 { pt3dadd( 42.1141, -58.1563, 36.7883, 0.22 ) }
    dend_44 { pt3dadd( 42.7427, -58.7431, 37.5594, 0.44 ) }
    dend_44 { pt3dadd( 44.0047, -60.0638, 39.0972, 0.07 ) }
    dend_44 { pt3dadd( 44.7046, -60.8683, 39.9378, 0.22 ) }
    dend_44 { pt3dadd( 45.6416, -62.0747, 41.0852, 0.07 ) }
    dend_44 { pt3dadd( 46.3268, -63.0414, 41.924, 0.22 ) }
    dend_44 { pt3dadd( 46.7043, -63.6462, 42.3959, 0.22 ) }
    dend_44 { pt3dadd( 47.2488, -64.5931, 43.0255, 0.07 ) }
    dend_44 { pt3dadd( 47.5461, -65.1795, 43.3209, 0.29 ) }
    dend_44 { pt3dadd( 47.7965, -65.7795, 43.556, 0.29 ) }
    dend_44 { pt3dadd( 48.3493, -67.2748, 43.9133, 0.07 ) }
    dend_44 { pt3dadd( 48.6298, -68.2523, 44.0503, 0.07 ) }
    dend_44 { pt3dadd( 48.7866, -69.0243, 44.1295, 0.07 ) }
    dend_44 { pt3dadd( 48.9429, -70.3694, 44.2519, 0.07 ) }
    dend_44 { pt3dadd( 48.9602, -71.1644, 44.3207, 0.22 ) }
    dend_44 { pt3dadd( 48.9081, -71.7861, 44.3794, 0.22 ) }
    dend_44 { pt3dadd( 48.5672, -73.7206, 44.5856, 0.07 ) }
    dend_44 { pt3dadd( 48.1852, -75.4444, 44.8394, 0.07 ) }
    dend_44 { pt3dadd( 47.8703, -76.7093, 45.0869, 0.22 ) }
    dend_44 { pt3dadd( 47.5259, -77.9924, 45.412, 0.37 ) }
    dend_44 { pt3dadd( 47.0342, -79.7088, 45.8991, 0.15 ) }
    dend_44 { pt3dadd( 46.5574, -81.2798, 46.4054, 0.29 ) }
    dend_44 { pt3dadd( 46.2916, -82.1182, 46.7194, 0.29 ) }
    dend_44 { pt3dadd( 45.9308, -83.1893, 47.1834, 0.07 ) }
    dend_44 { pt3dadd( 45.615, -84.1014, 47.6239, 0.07 ) }
    dend_44 { pt3dadd( 45.4008, -84.6886, 47.9182, 0.22 ) }
    dend_44 { pt3dadd( 44.8487, -86.1602, 48.6526, 0.15 ) }
    dend_44 { pt3dadd( 44.3755, -87.3461, 49.2146, 0.15 ) }
    dend_44 { pt3dadd( 44.0129, -88.2264, 49.5896, 0.22 ) }
    dend_44 { pt3dadd( 43.2557, -90.0287, 50.3021, 0.07 ) }
    dend_44 { pt3dadd( 42.7048, -91.3707, 50.8217, 0.22 ) }
    dend_44 { pt3dadd( 42.2491, -92.5422, 51.2709, 0.07 ) }
    dend_44 { pt3dadd( 42.1075, -92.9176, 51.4078, 0.22 ) }
    dend_44 { pt3dadd( 41.7136, -94.029, 51.7963, 0.66 ) }
    dend_44 { pt3dadd( 41.1725, -95.644, 52.3699, 0.15 ) }
    dend_44 { pt3dadd( 40.8186, -96.8175, 52.7395, 0.15 ) }
    dend_44 { pt3dadd( 40.5371, -97.7821, 52.9966, 0.15 ) }
    dend_44 { pt3dadd( 40.2473, -98.7165, 53.206, 0.22 ) }
    dend_44 { pt3dadd( 39.9924, -99.5188, 53.3585, 0.29 ) }
    dend_44 { pt3dadd( 39.5901, -100.728, 53.5618, 0.07 ) }
    dend_44 { pt3dadd( 39.015, -102.232, 53.7817, 0.07 ) }
    dend_44 { pt3dadd( 38.5466, -103.263, 53.9588, 0.15 ) }
    dend_44 { pt3dadd( 37.5101, -105.213, 54.3957, 0.07 ) }
    dend_44 { pt3dadd( 37.3669, -105.45, 54.4591, 0.07 ) }
    dend_44 { pt3dadd( 36.6699, -106.478, 54.8254, 0.15 ) }
    dend_44 { pt3dadd( 35.9366, -107.488, 55.3121, 0.07 ) }
    dend_44 { pt3dadd( 34.8183, -108.944, 56.2294, 0.22 ) }
    dend_44 { pt3dadd( 34.0891, -109.879, 56.9216, 0.37 ) }
    dend_44 { pt3dadd( 33.5746, -110.513, 57.4368, 0.37 ) }
    dend_44 { pt3dadd( 32.5889, -111.743, 58.4116, 0.15 ) }
    dend_44 { pt3dadd( 31.5543, -113.104, 59.4254, 0.22 ) }
    dend_44 { pt3dadd( 30.8908, -114.054, 60.086, 0.22 ) }
    dend_44 { pt3dadd( 30.4139, -114.803, 60.5556, 0.22 ) }
    dend_44 { pt3dadd( 30.0405, -115.461, 60.9121, 0.22 ) }
    dend_44 { pt3dadd( 29.2373, -116.979, 61.5825, 0.07 ) }
    dend_44 { pt3dadd( 28.5485, -118.37, 62.1099, 0.07 ) }
    dend_44 { pt3dadd( 28.3005, -118.912, 62.31, 0.22 ) }
    dend_44 { pt3dadd( 27.8609, -119.975, 62.7206, 0.07 ) }
    dend_44 { pt3dadd( 27.6182, -120.6, 62.9688, 0.07 ) }
    dend_44 { pt3dadd( 27.142, -121.915, 63.5194, 0.22 ) }
    dend_44 { pt3dadd( 26.3086, -124.326, 64.5929, 0.07 ) }
    dend_44 { pt3dadd( 25.8478, -125.663, 65.1643, 0.07 ) }
    dend_44 { pt3dadd( 25.4788, -126.701, 65.6076, 0.07 ) }
    dend_44 { pt3dadd( 25.0634, -127.859, 66.1022, 0.22 ) }
    dend_44 { pt3dadd( 24.7746, -128.678, 66.4289, 0.07 ) }
    dend_44 { pt3dadd( 24.575, -129.251, 66.6291, 0.15 ) }
    dend_44 { pt3dadd( 23.7519, -131.413, 67.2434, 0.07 ) }
    dend_44 { pt3dadd( 23.1296, -132.911, 67.6417, 0.07 ) }
    dend_44 { pt3dadd( 22.5892, -134.15, 67.9635, 0.07 ) }
    dend_44 { pt3dadd( 22.2584, -134.943, 68.1615, 0.07 ) }
    dend_44 { pt3dadd( 22.0113, -135.575, 68.2955, 0.07 ) }
    dend_44 { pt3dadd( 21.7197, -136.406, 68.4161, 0.22 ) }
    dend_44 { pt3dadd( 21.2159, -138.199, 68.5084, 0.07 ) }
    dend_44 { pt3dadd( 20.9233, -139.338, 68.5065, 0.22 ) }
    dend_44 { pt3dadd( 20.5852, -140.748, 68.4578, 0.07 ) }
    dend_44 { pt3dadd( 20.3594, -141.831, 68.4171, 0.07 ) }
    dend_44 { pt3dadd( 20.1239, -143.271, 68.3656, 0.15 ) }
    dend_44 { pt3dadd( 19.944, -144.945, 68.2878, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 84/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 27.0915, -39.5686, 19.0799, 0.15 ) }
    dend_43 { pt3dadd( 27.1048, -40.6098, 19.7676, 0.15 ) }
    dend_43 { pt3dadd( 27.1354, -41.5074, 20.38, 0.15 ) }
    dend_43 { pt3dadd( 27.1521, -42.0986, 20.8142, 0.15 ) }
    dend_43 { pt3dadd( 27.1673, -42.6647, 21.2568, 0.37 ) }
    dend_43 { pt3dadd( 27.1698, -42.8013, 21.3584, 0.37 ) }
    dend_43 { pt3dadd( 27.1778, -43.5036, 21.8745, 0.15 ) }
    dend_43 { pt3dadd( 27.1771, -44.0437, 22.2865, 0.22 ) }
    dend_43 { pt3dadd( 27.1346, -44.8704, 22.9242, 0.15 ) }
    dend_43 { pt3dadd( 27.0587, -45.6079, 23.5126, 0.15 ) }
    dend_43 { pt3dadd( 26.9539, -46.2945, 24.0442, 0.22 ) }
    dend_43 { pt3dadd( 26.8169, -46.9351, 24.5201, 0.22 ) }
    dend_43 { pt3dadd( 26.6062, -47.7619, 25.1197, 0.15 ) }
    dend_43 { pt3dadd( 26.4036, -48.4831, 25.637, 0.15 ) }
    dend_43 { pt3dadd( 26.2282, -49.0331, 26.0182, 0.15 ) }
    dend_43 { pt3dadd( 26.0232, -49.57, 26.398, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_43 { pt3dadd( 25.8185, -50.0239, 26.7593, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 1/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 91.3161, -110.302, 3.22471, 0.22 ) }
    dend_25 { pt3dadd( 91.6993, -111.391, 2.60337, 0.22 ) }
    dend_25 { pt3dadd( 91.9699, -112.16, 2.19728, 0.22 ) }
    dend_25 { pt3dadd( 92.1418, -112.733, 1.92932, 0.29 ) }
    dend_25 { pt3dadd( 92.3102, -113.363, 1.66037, 0.29 ) }
    dend_25 { pt3dadd( 92.463, -113.963, 1.42879, 0.22 ) }
    dend_25 { pt3dadd( 92.676, -114.785, 1.14219, 0.22 ) }
    dend_25 { pt3dadd( 92.924, -115.747, 0.872448, 0.29 ) }
    dend_25 { pt3dadd( 93.302, -117.237, 0.536472, 0.22 ) }
    dend_25 { pt3dadd( 93.4643, -117.868, 0.433742, 0.44 ) }
    dend_25 { pt3dadd( 93.6966, -118.734, 0.344743, 0.52 ) }
    dend_25 { pt3dadd( 93.9509, -119.664, 0.290357, 0.37 ) }
    dend_25 { pt3dadd( 94.3434, -121.128, 0.253044, 0.22 ) }
    dend_25 { pt3dadd( 94.6155, -122.094, 0.231278, 0.29 ) }
    dend_25 { pt3dadd( 94.7928, -122.654, 0.2159, 0.74 ) }
    dend_25 { pt3dadd( 95.0592, -123.41, 0.171977, 0.81 ) }
    dend_25 { pt3dadd( 95.5589, -124.645, 0.0633861, 0.37 ) }
    dend_25 { pt3dadd( 95.9087, -125.378, -0.0295043, 0.37 ) }
    dend_25 { pt3dadd( 96.3403, -126.157, -0.168615, 0.29 ) }
    dend_25 { pt3dadd( 96.7035, -126.762, -0.304854, 0.29 ) }
    dend_25 { pt3dadd( 97.0318, -127.316, -0.45128, 0.29 ) }
    dend_25 { pt3dadd( 97.3926, -127.943, -0.62143, 0.22 ) }
    dend_25 { pt3dadd( 97.6369, -128.402, -0.734991, 0.22 ) }
    dend_25 { pt3dadd( 97.9484, -129.063, -0.886412, 0.22 ) }
    dend_25 { pt3dadd( 98.1969, -129.653, -1.03389, 0.22 ) }
    dend_25 { pt3dadd( 98.4094, -130.197, -1.19059, 0.22 ) }
    dend_25 { pt3dadd( 98.6021, -130.725, -1.36562, 0.22 ) }
    dend_25 { pt3dadd( 98.9888, -131.784, -1.76459, 0.22 ) }
    dend_25 { pt3dadd( 99.3719, -132.797, -2.1756, 0.44 ) }
    dend_25 { pt3dadd( 99.8399, -133.939, -2.66053, 0.22 ) }
    dend_25 { pt3dadd( 100.092, -134.561, -2.92327, 0.29 ) }
    dend_25 { pt3dadd( 100.341, -135.216, -3.20573, 0.52 ) }
    dend_25 { pt3dadd( 100.51, -135.747, -3.42611, 0.29 ) }
    dend_25 { pt3dadd( 100.654, -136.271, -3.64033, 0.22 ) }
    dend_25 { pt3dadd( 100.85, -137.233, -3.99177, 0.22 ) }
    dend_25 { pt3dadd( 100.992, -138.207, -4.29564, 0.29 ) }
    dend_25 { pt3dadd( 101.118, -139.281, -4.59994, 0.29 ) }
    dend_25 { pt3dadd( 101.207, -140.137, -4.8297, 0.66 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 39/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 91.3161, -110.302, 3.22471, 0.22 ) }
    dend_24 { pt3dadd( 91.6424, -111.219, 3.45915, 0.22 ) }
    dend_24 { pt3dadd( 91.8666, -111.752, 3.58159, 0.22 ) }
    dend_24 { pt3dadd( 92.0228, -112.1, 3.65411, 0.22 ) }
    dend_24 { pt3dadd( 92.2394, -112.53, 3.74705, 0.22 ) }
    dend_24 { pt3dadd( 92.6336, -113.222, 3.89505, 0.15 ) }
    dend_24 { pt3dadd( 92.8729, -113.602, 3.98222, 0.15 ) }
    dend_24 { pt3dadd( 92.9955, -113.783, 4.02116, 0.07 ) }
    dend_24 { pt3dadd( 93.2816, -114.183, 4.12196, 0.15 ) }
    dend_24 { pt3dadd( 93.6839, -114.717, 4.27355, 0.07 ) }
    dend_24 { pt3dadd( 93.9477, -115.05, 4.39291, 0.29 ) }
    dend_24 { pt3dadd( 94.3002, -115.47, 4.59153, 0.07 ) }
    dend_24 { pt3dadd( 94.5922, -115.795, 4.78612, 0.07 ) }
    dend_24 { pt3dadd( 94.9776, -116.174, 5.07769, 0.07 ) }
    dend_24 { pt3dadd( 95.1799, -116.345, 5.26145, 0.15 ) }
    dend_24 { pt3dadd( 95.432, -116.549, 5.53023, 0.15 ) }
    dend_24 { pt3dadd( 95.7041, -116.759, 5.89032, 0.37 ) }
    dend_24 { pt3dadd( 95.9375, -116.927, 6.27572, 0.22 ) }
    dend_24 { pt3dadd( 96.1661, -117.08, 6.75611, 0.15 ) }
    dend_24 { pt3dadd( 96.4395, -117.256, 7.55571, 0.22 ) }
    dend_24 { pt3dadd( 96.5699, -117.34, 8.16764, 0.29 ) }
    dend_24 { pt3dadd( 96.6157, -117.361, 9.09481, 0.15 ) }
    dend_24 { pt3dadd( 96.5089, -117.264, 9.76284, 0.07 ) }
    dend_24 { pt3dadd( 96.3318, -117.108, 10.3933, 0.07 ) }
    dend_24 { pt3dadd( 96.1256, -116.916, 10.8675, 0.07 ) }
    dend_24 { pt3dadd( 95.828, -116.621, 11.3331, 0.07 ) }
    dend_24 { pt3dadd( 95.4075, -116.186, 11.8263, 0.07 ) }
    dend_24 { pt3dadd( 95.0583, -115.819, 12.1033, 0.07 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 67/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 1.18762, -38.0092, -71.2182, 0.22 ) }
    dend_20 { pt3dadd( 0.196172, -40.3055, -79.3205, 0.22 ) }
    dend_20 { pt3dadd( -1.75064, -41.5887, -87.4503, 0.22 ) }
    dend_20 { pt3dadd( -4.73195, -42.7186, -95.2804, 0.22 ) }
    dend_20 { pt3dadd( -6.98746, -42.9912, -103.418, 0.22 ) }
    dend_20 { pt3dadd( -8.66927, -42.3777, -111.677, 0.22 ) }
    dend_20 { pt3dadd( -11.1518, -41.8826, -119.739, 0.22 ) }
    dend_20 { pt3dadd( -14.8929, -41.6242, -127.311, 0.22 ) }
    dend_20 { pt3dadd( -17.4312, -42.6833, -135.305, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 76/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 1.18762, -38.0092, -71.2182, 0.15 ) }
    dend_19 { pt3dadd( 1.569, -39.8229, -78.6088, 0.22 ) }
    dend_19 { pt3dadd( 1.09537, -42.1131, -85.8796, 0.22 ) }
    dend_19 { pt3dadd( -0.175513, -45.7184, -92.5589, 0.22 ) }
    dend_19 { pt3dadd( -2.79075, -49.2498, -98.89, 0.22 ) }
    dend_19 { pt3dadd( -4.01726, -52.6994, -105.651, 0.22 ) }
    dend_19 { pt3dadd( -5.43833, -56.1872, -112.357, 0.22 ) }
    dend_19 { pt3dadd( -7.91495, -60.497, -118.299, 0.22 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 84/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -60.6892, 1.58494, -11.7199, 0.22 ) }
    dend_7 { pt3dadd( -71.6768, 1.71888, -11.2603, 0.22 ) }
    dend_7 { pt3dadd( -82.5183, -0.24336, -10.7965, 0.22 ) }
    dend_7 { pt3dadd( -93.3982, -1.90029, -11.3309, 0.22 ) }
    dend_7 { pt3dadd( -104.181, -4.22709, -10.9837, 0.22 ) }
    dend_7 { pt3dadd( -115.072, -4.56487, -9.4551, 0.22 ) }
    dend_7 { pt3dadd( -125.958, -3.07839, -8.95893, 0.22 ) }
    dend_7 { pt3dadd( -136.685, -0.94875, -7.75499, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 92/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -60.6892, 1.58494, -11.7199, 0.66 ) }
    dend_6 { pt3dadd( -68.4939, 0.167095, -12.3975, 0.22 ) }
    dend_6 { pt3dadd( -76.3359, 0.147469, -13.6712, 0.22 ) }
    dend_6 { pt3dadd( -83.7181, 1.47573, -16.3048, 0.22 ) }
    dend_6 { pt3dadd( -90.8321, 1.47946, -19.8426, 0.22 ) }
    dend_6 { pt3dadd( -97.0025, 1.04316, -24.8341, 0.22 ) }
    dend_6 { pt3dadd( -102.706, -0.629388, -30.1439, 0.22 ) }
    dend_6 { pt3dadd( -108.188, -1.40521, -35.8539, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_6 { pt3dadd( -113.978, -2.73317, -41.1552, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_25 (entry count 1/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 101.207, -140.137, -4.8297, 0.07 ) }
    dend_33 { pt3dadd( 102.137, -140.492, -5.39336, 0.07 ) }
    dend_33 { pt3dadd( 102.444, -140.612, -5.57196, 0.22 ) }
    dend_33 { pt3dadd( 102.8, -140.773, -5.77908, 0.22 ) }
    dend_33 { pt3dadd( 103.209, -141.004, -6.03236, 0.22 ) }
    dend_33 { pt3dadd( 103.695, -141.348, -6.36056, 0.22 ) }
    dend_33 { pt3dadd( 104.259, -141.82, -6.7401, 0.15 ) }
    dend_33 { pt3dadd( 104.612, -142.17, -6.98875, 0.29 ) }
    dend_33 { pt3dadd( 105.155, -142.774, -7.35827, 0.07 ) }
    dend_33 { pt3dadd( 105.592, -143.321, -7.63231, 0.15 ) }
    dend_33 { pt3dadd( 106.004, -143.91, -7.86146, 0.15 ) }
    dend_33 { pt3dadd( 106.507, -144.706, -8.10745, 0.07 ) }
    dend_33 { pt3dadd( 106.936, -145.412, -8.28244, 0.07 ) }
    dend_33 { pt3dadd( 107.328, -146.043, -8.40336, 0.07 ) }
    dend_33 { pt3dadd( 107.675, -146.594, -8.48343, 0.22 ) }
    dend_33 { pt3dadd( 108.286, -147.595, -8.6306, 0.15 ) }
    dend_33 { pt3dadd( 108.553, -148.071, -8.71014, 0.15 ) }
    dend_33 { pt3dadd( 108.845, -148.638, -8.82824, 0.15 ) }
    dend_33 { pt3dadd( 109.232, -149.433, -9.01464, 0.15 ) }
    dend_33 { pt3dadd( 109.53, -150.036, -9.18182, 0.15 ) }
    dend_33 { pt3dadd( 109.964, -150.917, -9.4637, 0.15 ) }
    dend_33 { pt3dadd( 110.224, -151.435, -9.66421, 0.15 ) }
    dend_33 { pt3dadd( 110.569, -152.138, -10.0087, 0.15 ) }
    dend_33 { pt3dadd( 110.7, -152.39, -10.162, 0.15 ) }
    dend_33 { pt3dadd( 110.937, -152.782, -10.4405, 0.29 ) }
    dend_33 { pt3dadd( 111.266, -153.214, -10.7597, 0.29 ) }
    dend_33 { pt3dadd( 111.865, -153.863, -11.2421, 0.15 ) }
    dend_33 { pt3dadd( 112.333, -154.347, -11.6074, 0.15 ) }
    dend_33 { pt3dadd( 112.755, -154.792, -11.9331, 0.22 ) }
    dend_33 { pt3dadd( 113.047, -155.099, -12.1454, 0.22 ) }
    dend_33 { pt3dadd( 113.496, -155.551, -12.4342, 0.22 ) }
    dend_33 { pt3dadd( 114.33, -156.346, -12.8783, 0.15 ) }
    dend_33 { pt3dadd( 114.941, -156.915, -13.1579, 0.15 ) }
    dend_33 { pt3dadd( 115.316, -157.272, -13.3286, 0.15 ) }
    dend_33 { pt3dadd( 115.842, -157.788, -13.5598, 0.37 ) }
    dend_33 { pt3dadd( 116.59, -158.549, -13.8995, 0.07 ) }
    dend_33 { pt3dadd( 117.071, -159.046, -14.1362, 0.07 ) }
    dend_33 { pt3dadd( 117.594, -159.57, -14.3985, 0.07 ) }
    dend_33 { pt3dadd( 118.244, -160.175, -14.7352, 0.15 ) }
    dend_33 { pt3dadd( 124.526, -167.98, -16.7004, 0.15 ) }
    dend_33 { pt3dadd( 129.395, -176.781, -18.8058, 0.15 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 42/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 101.207, -140.137, -4.8297, 0.22 ) }
    dend_26 { pt3dadd( 101.052, -141.127, -4.93148, 0.22 ) }
    dend_26 { pt3dadd( 100.964, -142.364, -4.99012, 0.22 ) }
    dend_26 { pt3dadd( 100.941, -142.879, -4.99332, 0.37 ) }
    dend_26 { pt3dadd( 100.884, -143.393, -5.00414, 0.44 ) }
    dend_26 { pt3dadd( 100.783, -144.01, -5.02958, 0.44 ) }
    dend_26 { pt3dadd( 100.587, -145.106, -5.09011, 0.29 ) }
    dend_26 { pt3dadd( 100.514, -145.561, -5.11058, 0.29 ) }
    dend_26 { pt3dadd( 100.434, -146.28, -5.144, 0.29 ) }
    dend_26 { pt3dadd( 100.301, -147.618, -5.25003, 0.22 ) }
    dend_26 { pt3dadd( 100.258, -148.131, -5.30845, 0.29 ) }
    dend_26 { pt3dadd( 100.221, -148.587, -5.37025, 0.29 ) }
    dend_26 { pt3dadd( 100.168, -149.516, -5.52726, 0.22 ) }
    dend_26 { pt3dadd( 100.175, -150.191, -5.63787, 0.37 ) }
    dend_26 { pt3dadd( 100.252, -150.931, -5.7506, 0.59 ) }
    dend_26 { pt3dadd( 100.474, -152.171, -5.89156, 0.22 ) }
    dend_26 { pt3dadd( 100.56, -152.665, -5.93387, 0.22 ) }
    dend_26 { pt3dadd( 100.629, -153.158, -5.96333, 0.29 ) }
    dend_26 { pt3dadd( 100.721, -154.0, -5.99033, 0.29 ) }
    dend_26 { pt3dadd( 100.777, -154.569, -5.99909, 0.29 ) }
    dend_26 { pt3dadd( 100.874, -155.716, -5.99404, 0.29 ) }
    dend_26 { pt3dadd( 100.977, -157.069, -5.95645, 0.22 ) }
    dend_26 { pt3dadd( 101.052, -158.081, -5.89662, 0.44 ) }
    dend_26 { pt3dadd( 101.123, -159.145, -5.80596, 0.44 ) }
    dend_26 { pt3dadd( 101.18, -160.207, -5.70246, 0.22 ) }
    dend_26 { pt3dadd( 101.247, -161.665, -5.5445, 0.22 ) }
    dend_26 { pt3dadd( 101.282, -162.309, -5.47341, 0.37 ) }
    dend_26 { pt3dadd( 101.362, -163.344, -5.36248, 0.59 ) }
    dend_26 { pt3dadd( 101.412, -163.979, -5.29791, 0.15 ) }
    dend_26 { pt3dadd( 101.448, -164.721, -5.22842, 0.22 ) }
    dend_26 { pt3dadd( 101.455, -165.744, -5.13835, 0.29 ) }
    dend_26 { pt3dadd( 101.437, -166.629, -5.08084, 0.29 ) }
    dend_26 { pt3dadd( 101.405, -167.533, -5.02988, 0.29 ) }
    dend_26 { pt3dadd( 101.362, -168.495, -4.98438, 0.22 ) }
    dend_26 { pt3dadd( 101.319, -169.524, -4.95371, 0.22 ) }
    dend_26 { pt3dadd( 101.297, -170.184, -4.96356, 0.22 ) }
    dend_26 { pt3dadd( 101.272, -171.004, -5.01675, 0.29 ) }
    dend_26 { pt3dadd( 101.245, -172.08, -5.13424, 0.37 ) }
    dend_26 { pt3dadd( 101.247, -172.887, -5.24186, 0.88 ) }
    dend_26 { pt3dadd( 101.314, -173.937, -5.38136, 0.29 ) }
    dend_26 { pt3dadd( 101.454, -174.99, -5.50782, 0.22 ) }
    dend_26 { pt3dadd( 101.563, -175.625, -5.57482, 0.44 ) }
    dend_26 { pt3dadd( 101.696, -176.303, -5.63282, 0.59 ) }
    dend_26 { pt3dadd( 101.917, -177.391, -5.69749, 0.22 ) }
    dend_26 { pt3dadd( 102.105, -178.226, -5.70449, 0.22 ) }
    dend_26 { pt3dadd( 102.302, -178.988, -5.67382, 0.29 ) }
    dend_26 { pt3dadd( 102.446, -179.495, -5.62644, 0.29 ) }
    dend_26 { pt3dadd( 102.766, -180.449, -5.52632, 0.29 ) }
    dend_26 { pt3dadd( 103.062, -181.274, -5.46821, 0.22 ) }
    dend_26 { pt3dadd( 103.248, -181.771, -5.46983, 0.29 ) }
    dend_26 { pt3dadd( 103.465, -182.328, -5.51287, 0.29 ) }
    dend_26 { pt3dadd( 103.906, -183.393, -5.66522, 0.59 ) }
    dend_26 { pt3dadd( 104.333, -184.322, -5.87767, 0.37 ) }
    dend_26 { pt3dadd( 104.734, -185.085, -6.13535, 0.22 ) }
    dend_26 { pt3dadd( 105.11, -185.74, -6.44143, 0.44 ) }
    dend_26 { pt3dadd( 105.568, -186.46, -6.89299, 0.22 ) }
    dend_26 { pt3dadd( 105.915, -186.961, -7.27447, 0.29 ) }
    dend_26 { pt3dadd( 106.231, -187.404, -7.64919, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( 106.526, -187.827, -8.00399, 0.74 ) }
    dend_26 { pt3dadd( 106.756, -188.159, -8.25108, 0.74 ) }
    dend_26 { pt3dadd( 107.361, -189.152, -8.80659, 0.22 ) }
    dend_26 { pt3dadd( 107.661, -189.776, -9.02039, 0.22 ) }
    dend_26 { pt3dadd( 107.949, -190.602, -9.14653, 0.22 ) }
    dend_26 { pt3dadd( 108.057, -191.026, -9.15298, 0.37 ) }
    dend_26 { pt3dadd( 108.154, -191.524, -9.11689, 0.37 ) }
    dend_26 { pt3dadd( 108.291, -192.411, -9.02287, 0.15 ) }
    dend_26 { pt3dadd( 108.344, -192.982, -8.95311, 0.15 ) }
    dend_26 { pt3dadd( 108.39, -193.697, -8.89145, 0.37 ) }
    dend_26 { pt3dadd( 108.437, -194.635, -8.84707, 0.22 ) }
    dend_26 { pt3dadd( 108.476, -195.504, -8.8293, 1.03 ) }
    dend_26 { pt3dadd( 108.556, -196.764, -8.84435, 0.29 ) }
    dend_26 { pt3dadd( 108.632, -197.595, -8.88446, 0.37 ) }
    dend_26 { pt3dadd( 108.727, -198.351, -8.9417, 0.22 ) }
    dend_26 { pt3dadd( 108.883, -199.309, -9.04674, 0.22 ) }
    dend_26 { pt3dadd( 109.037, -200.073, -9.15867, 0.59 ) }
    dend_26 { pt3dadd( 109.3, -201.23, -9.36843, 0.22 ) }
    dend_26 { pt3dadd( 109.49, -202.004, -9.52307, 0.37 ) }
    dend_26 { pt3dadd( 109.654, -202.652, -9.66544, 0.37 ) }
    dend_26 { pt3dadd( 109.916, -203.773, -9.9101, 0.22 ) }
    dend_26 { pt3dadd( 110.09, -204.624, -10.0984, 0.15 ) }
    dend_26 { pt3dadd( 110.198, -205.327, -10.2453, 0.15 ) }
    dend_26 { pt3dadd( 110.272, -205.93, -10.3533, 0.29 ) }
    dend_26 { pt3dadd( 110.346, -206.523, -10.4293, 0.15 ) }
    dend_26 { pt3dadd( 110.424, -207.025, -10.4654, 0.15 ) }
    dend_26 { pt3dadd( 110.56, -207.686, -10.4553, 0.29 ) }
    dend_26 { pt3dadd( 110.684, -208.188, -10.4108, 0.29 ) }
    dend_26 { pt3dadd( 110.881, -208.933, -10.3, 0.22 ) }
    dend_26 { pt3dadd( 111.097, -209.766, -10.1613, 0.22 ) }
    dend_26 { pt3dadd( 111.388, -210.92, -9.95887, 0.29 ) }
    dend_26 { pt3dadd( 111.643, -211.966, -9.76946, 0.88 ) }
    dend_26 { pt3dadd( 111.925, -213.15, -9.52894, 0.22 ) }
    dend_26 { pt3dadd( 112.131, -213.985, -9.33964, 0.59 ) }
    dend_26 { pt3dadd( 112.434, -215.101, -9.03669, 0.15 ) }
    dend_26 { pt3dadd( 112.629, -215.699, -8.83796, 0.22 ) }
    dend_26 { pt3dadd( 112.869, -216.306, -8.61108, 0.22 ) }
    dend_26 { pt3dadd( 113.063, -216.708, -8.46109, 0.52 ) }
    dend_26 { pt3dadd( 113.329, -217.153, -8.29728, 0.52 ) }
    dend_26 { pt3dadd( 113.801, -217.827, -8.05041, 0.15 ) }
    dend_26 { pt3dadd( 114.182, -218.315, -7.88262, 0.52 ) }
    dend_26 { pt3dadd( 114.484, -218.708, -7.77925, 0.52 ) }
    dend_26 { pt3dadd( 114.926, -219.316, -7.6618, 0.15 ) }
    dend_26 { pt3dadd( 115.332, -219.956, -7.55407, 0.29 ) }
    dend_26 { pt3dadd( 115.691, -220.589, -7.43863, 0.29 ) }
    dend_26 { pt3dadd( 115.969, -221.156, -7.31805, 0.44 ) }
    dend_26 { pt3dadd( 116.224, -221.763, -7.15797, 0.96 ) }
    dend_26 { pt3dadd( 116.542, -222.665, -6.86162, 0.22 ) }
    dend_26 { pt3dadd( 116.755, -223.483, -6.57188, 0.22 ) }
    dend_26 { pt3dadd( 116.884, -224.115, -6.3531, 0.22 ) }
    dend_26 { pt3dadd( 117.031, -224.891, -6.08433, 0.15 ) }
    dend_26 { pt3dadd( 117.131, -225.396, -5.91743, 0.15 ) }
    dend_26 { pt3dadd( 117.251, -225.927, -5.77291, 0.59 ) }
    dend_26 { pt3dadd( 117.43, -226.642, -5.61284, 0.15 ) }
    dend_26 { pt3dadd( 117.687, -227.477, -5.47608, 0.15 ) }
    dend_26 { pt3dadd( 117.955, -228.249, -5.39431, 0.29 ) }
    dend_26 { pt3dadd( 118.267, -229.038, -5.34225, 0.52 ) }
    dend_26 { pt3dadd( 118.58, -229.797, -5.30123, 0.88 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 58/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 118.58, -229.797, -5.30123, 0.15 ) }
    dend_32 { pt3dadd( 117.952, -230.448, -5.24815, 0.15 ) }
    dend_32 { pt3dadd( 117.648, -230.808, -5.20116, 0.37 ) }
    dend_32 { pt3dadd( 117.308, -231.253, -5.10462, 0.37 ) }
    dend_32 { pt3dadd( 116.713, -232.114, -4.85712, 0.07 ) }
    dend_32 { pt3dadd( 116.476, -232.501, -4.73831, 0.15 ) }
    dend_32 { pt3dadd( 116.069, -233.218, -4.52285, 0.07 ) }
    dend_32 { pt3dadd( 115.885, -233.585, -4.39819, 0.29 ) }
    dend_32 { pt3dadd( 115.51, -234.369, -4.14344, 0.22 ) }
    dend_32 { pt3dadd( 115.131, -235.17, -3.8976, 0.07 ) }
    dend_32 { pt3dadd( 114.656, -236.069, -3.67434, 0.07 ) }
    dend_32 { pt3dadd( 114.37, -236.46, -3.59179, 0.29 ) }
    dend_32 { pt3dadd( 114.185, -236.597, -3.57382, 0.29 ) }
    dend_32 { pt3dadd( 113.394, -237.024, -3.55326, 0.07 ) }
    dend_32 { pt3dadd( 112.982, -237.148, -3.58031, 0.07 ) }
    dend_32 { pt3dadd( 111.963, -237.232, -3.69318, 0.07 ) }
    dend_32 { pt3dadd( 110.685, -237.128, -3.84525, 0.07 ) }
    dend_32 { pt3dadd( 109.245, -236.873, -4.00645, 0.07 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 118.58, -229.797, -5.30123, 0.15 ) }
    dend_27 { pt3dadd( 118.817, -230.575, -5.35247, 0.15 ) }
    dend_27 { pt3dadd( 119.026, -231.324, -5.34985, 0.22 ) }
    dend_27 { pt3dadd( 119.23, -231.959, -5.32211, 0.37 ) }
    dend_27 { pt3dadd( 119.447, -232.547, -5.28273, 0.37 ) }
    dend_27 { pt3dadd( 119.812, -233.421, -5.20829, 0.15 ) }
    dend_27 { pt3dadd( 119.964, -233.805, -5.17676, 0.22 ) }
    dend_27 { pt3dadd( 120.261, -234.562, -5.10681, 0.29 ) }
    dend_27 { pt3dadd( 120.548, -235.264, -5.04166, 0.29 ) }
    dend_27 { pt3dadd( 120.856, -235.962, -4.97723, 0.81 ) }
    dend_27 { pt3dadd( 121.276, -236.807, -4.90423, 0.15 ) }
    dend_27 { pt3dadd( 121.671, -237.541, -4.85564, 0.15 ) }
    dend_27 { pt3dadd( 122.014, -238.167, -4.83468, 0.15 ) }
    dend_27 { pt3dadd( 122.343, -238.804, -4.84366, 0.22 ) }
    dend_27 { pt3dadd( 122.556, -239.267, -4.87, 0.52 ) }
    dend_27 { pt3dadd( 122.863, -239.958, -4.93084, 0.88 ) }
    dend_27 { pt3dadd( 123.236, -240.764, -5.03356, 0.22 ) }
    dend_27 { pt3dadd( 123.445, -241.171, -5.09404, 0.15 ) }
    dend_27 { pt3dadd( 123.786, -241.845, -5.21402, 0.22 ) }
    dend_27 { pt3dadd( 124.291, -242.857, -5.41475, 0.15 ) }
    dend_27 { pt3dadd( 124.548, -243.389, -5.52858, 0.59 ) }
    dend_27 { pt3dadd( 124.884, -244.123, -5.68887, 0.15 ) }
    dend_27 { pt3dadd( 125.136, -244.696, -5.81177, 0.22 ) }
    dend_27 { pt3dadd( 125.438, -245.447, -5.94917, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_27 { pt3dadd( 125.65, -246.071, -6.0407, 0.37 ) }
    dend_27 { pt3dadd( 125.821, -246.679, -6.10799, 0.22 ) }
    dend_27 { pt3dadd( 125.975, -247.322, -6.17107, 0.74 ) }
    dend_27 { pt3dadd( 126.094, -247.859, -6.21375, 0.81 ) }
    dend_27 { pt3dadd( 126.316, -248.877, -6.28758, 0.15 ) }
    dend_27 { pt3dadd( 126.567, -250.029, -6.35772, 0.22 ) }
    dend_27 { pt3dadd( 126.727, -250.799, -6.39562, 0.15 ) }
    dend_27 { pt3dadd( 126.804, -251.174, -6.40502, 0.29 ) }
    dend_27 { pt3dadd( 126.903, -251.685, -6.40892, 0.29 ) }
    dend_27 { pt3dadd( 127.027, -252.353, -6.38975, 0.15 ) }
    dend_27 { pt3dadd( 127.159, -253.129, -6.31329, 0.44 ) }
    dend_27 { pt3dadd( 127.293, -254.143, -6.10132, 0.44 ) }
    dend_27 { pt3dadd( 127.326, -254.628, -5.95339, 0.22 ) }
    dend_27 { pt3dadd( 127.325, -255.206, -5.72787, 0.74 ) }
    dend_27 { pt3dadd( 127.271, -255.962, -5.34866, 0.52 ) }
    dend_27 { pt3dadd( 127.199, -256.627, -4.9411, 0.22 ) }
    dend_27 { pt3dadd( 127.132, -257.229, -4.53545, 0.22 ) }
    dend_27 { pt3dadd( 127.086, -257.64, -4.25198, 0.22 ) }
    dend_27 { pt3dadd( 127.032, -258.163, -3.90125, 0.22 ) }
    dend_27 { pt3dadd( 126.953, -258.95, -3.39348, 0.22 ) }
    dend_27 { pt3dadd( 126.887, -259.48, -3.07576, 0.22 ) }
    dend_27 { pt3dadd( 126.777, -260.253, -2.64918, 1.11 ) }
    dend_27 { pt3dadd( 126.589, -261.496, -2.02499, 0.29 ) }
    dend_27 { pt3dadd( 126.482, -262.273, -1.65348, 0.29 ) }
    dend_27 { pt3dadd( 126.398, -262.893, -1.36176, 0.29 ) }
    dend_27 { pt3dadd( 126.296, -263.494, -1.09365, 0.22 ) }
    dend_27 { pt3dadd( 126.145, -264.193, -0.783528, 0.22 ) }
    dend_27 { pt3dadd( 125.977, -264.917, -0.498553, 0.74 ) }
    dend_27 { pt3dadd( 125.764, -265.92, -0.195286, 0.07 ) }
    dend_27 { pt3dadd( 125.658, -266.533, -0.0588959, 0.07 ) }
    dend_27 { pt3dadd( 125.551, -267.402, 0.0651496, 0.07 ) }
    dend_27 { pt3dadd( 125.498, -268.191, 0.0839733, 0.81 ) }
    dend_27 { pt3dadd( 125.486, -269.224, -0.0349242, 0.15 ) }
    dend_27 { pt3dadd( 125.501, -269.824, -0.169052, 0.15 ) }
    dend_27 { pt3dadd( 125.521, -270.203, -0.286917, 0.29 ) }
    dend_27 { pt3dadd( 125.564, -270.764, -0.486957, 0.44 ) }
    dend_27 { pt3dadd( 125.65, -271.678, -0.826282, 0.15 ) }
    dend_27 { pt3dadd( 125.718, -272.719, -1.22864, 0.22 ) }
    dend_27 { pt3dadd( 125.735, -273.529, -1.53007, 0.44 ) }
    dend_27 { pt3dadd( 125.725, -274.126, -1.76603, 0.22 ) }
    dend_27 { pt3dadd( 125.707, -274.801, -2.05385, 0.74 ) }
    dend_27 { pt3dadd( 125.701, -275.288, -2.26925, 0.74 ) }
    dend_27 { pt3dadd( 125.681, -276.45, -2.7953, 0.15 ) }
    dend_27 { pt3dadd( 125.665, -277.043, -3.08266, 0.37 ) }
    dend_27 { pt3dadd( 125.661, -278.041, -3.57209, 0.07 ) }
    dend_27 { pt3dadd( 125.692, -278.624, -3.84529, 0.07 ) }
    dend_27 { pt3dadd( 125.761, -279.188, -4.08695, 0.07 ) }
    dend_27 { pt3dadd( 125.908, -279.992, -4.39157, 0.22 ) }
    dend_27 { pt3dadd( 126.109, -280.822, -4.66871, 0.81 ) }
    dend_27 { pt3dadd( 126.345, -281.689, -4.89091, 0.52 ) }
    dend_27 { pt3dadd( 126.803, -283.137, -5.15602, 0.15 ) }
    dend_27 { pt3dadd( 127.061, -283.932, -5.26406, 0.15 ) }
    dend_27 { pt3dadd( 127.299, -284.665, -5.34054, 0.88 ) }
    dend_27 { pt3dadd( 127.51, -285.307, -5.38201, 0.66 ) }
    dend_27 { pt3dadd( 127.874, -286.465, -5.41513, 0.07 ) }
    dend_27 { pt3dadd( 128.105, -287.274, -5.41352, 0.15 ) }
    dend_27 { pt3dadd( 128.241, -287.813, -5.38032, 0.07 ) }
    dend_27 { pt3dadd( 128.367, -288.341, -5.33571, 0.15 ) }
    dend_27 { pt3dadd( 128.53, -289.059, -5.26488, 0.15 ) }
    dend_27 { pt3dadd( 128.646, -289.602, -5.20537, 0.59 ) }
    dend_27 { pt3dadd( 128.791, -290.309, -5.15081, 0.88 ) }
    dend_27 { pt3dadd( 129.03, -291.565, -5.03937, 0.22 ) }
    dend_27 { pt3dadd( 129.251, -292.452, -4.94378, 1.03 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 63/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 129.251, -292.452, -4.94378, 0.07 ) }
    dend_31 { pt3dadd( 129.729, -293.405, -5.10763, 0.07 ) }
    dend_31 { pt3dadd( 130.112, -294.194, -5.18895, 0.22 ) }
    dend_31 { pt3dadd( 130.476, -294.935, -5.2361, 0.07 ) }
    dend_31 { pt3dadd( 130.739, -295.467, -5.22483, 0.07 ) }
    dend_31 { pt3dadd( 131.053, -296.1, -5.15602, 0.07 ) }
    dend_31 { pt3dadd( 131.294, -296.588, -5.05709, 0.29 ) }
    dend_31 { pt3dadd( 131.594, -297.223, -4.84796, 0.07 ) }
    dend_31 { pt3dadd( 131.759, -297.599, -4.6693, 0.66 ) }
    dend_31 { pt3dadd( 132.089, -298.337, -4.23423, 0.07 ) }
    dend_31 { pt3dadd( 132.316, -298.823, -3.90622, 0.59 ) }
    dend_31 { pt3dadd( 132.64, -299.492, -3.40066, 0.07 ) }
    dend_31 { pt3dadd( 132.812, -299.854, -3.11392, 0.15 ) }
    dend_31 { pt3dadd( 133.059, -300.4, -2.69207, 0.07 ) }
    dend_31 { pt3dadd( 133.253, -300.863, -2.32813, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 78/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 129.251, -292.452, -4.94378, 0.29 ) }
    dend_28 { pt3dadd( 129.071, -293.18, -4.98603, 0.29 ) }
    dend_28 { pt3dadd( 128.934, -293.964, -5.02365, 0.15 ) }
    dend_28 { pt3dadd( 128.876, -294.355, -5.04273, 0.22 ) }
    dend_28 { pt3dadd( 128.836, -294.712, -5.07068, 0.22 ) }
    dend_28 { pt3dadd( 128.765, -295.592, -5.15785, 0.74 ) }
    dend_28 { pt3dadd( 128.719, -296.871, -5.33945, 0.15 ) }
    dend_28 { pt3dadd( 128.732, -297.296, -5.4126, 0.29 ) }
    dend_28 { pt3dadd( 128.753, -297.569, -5.46674, 0.29 ) }
    dend_28 { pt3dadd( 128.854, -298.35, -5.64715, 0.07 ) }
    dend_28 { pt3dadd( 128.987, -299.076, -5.8315, 0.15 ) }
    dend_28 { pt3dadd( 129.207, -300.049, -6.10772, 0.07 ) }
    dend_28 { pt3dadd( 129.366, -300.689, -6.28852, 0.59 ) }
    dend_28 { pt3dadd( 129.56, -301.472, -6.51393, 0.74 ) }
    dend_28 { pt3dadd( 129.864, -302.81, -6.90143, 0.07 ) }
    dend_28 { pt3dadd( 130.008, -303.6, -7.14731, 0.07 ) }
    dend_28 { pt3dadd( 130.098, -304.201, -7.36064, 0.29 ) }
    dend_28 { pt3dadd( 130.217, -305.014, -7.68468, 0.07 ) }
    dend_28 { pt3dadd( 130.275, -305.391, -7.86326, 0.37 ) }
    dend_28 { pt3dadd( 130.338, -305.916, -8.15146, 0.66 ) }
    dend_28 { pt3dadd( 130.372, -306.747, -8.61345, 0.22 ) }
    dend_28 { pt3dadd( 130.374, -307.338, -8.92587, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_28 { pt3dadd( 130.364, -308.265, -9.36351, 0.15 ) }
    dend_28 { pt3dadd( 130.362, -308.639, -9.52083, 0.44 ) }
    dend_28 { pt3dadd( 130.387, -309.213, -9.73519, 0.81 ) }
    dend_28 { pt3dadd( 130.47, -310.344, -10.115, 0.07 ) }
    dend_28 { pt3dadd( 130.514, -311.062, -10.3283, 0.07 ) }
    dend_28 { pt3dadd( 130.527, -311.783, -10.5289, 0.15 ) }
    dend_28 { pt3dadd( 130.513, -312.571, -10.7424, 0.74 ) }
    dend_28 { pt3dadd( 130.51, -314.09, -11.1584, 0.07 ) }
    dend_28 { pt3dadd( 130.54, -314.749, -11.358, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 9/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 130.54, -314.749, -11.358, 0.07 ) }
    dend_30 { pt3dadd( 130.36, -315.248, -11.395, 0.07 ) }
    dend_30 { pt3dadd( 130.081, -316.1, -11.4114, 0.29 ) }
    dend_30 { pt3dadd( 129.768, -317.306, -11.4058, 0.15 ) }
    dend_30 { pt3dadd( 129.59, -317.987, -11.4026, 0.22 ) }
    dend_30 { pt3dadd( 129.246, -319.311, -11.3964, 0.07 ) }
    dend_30 { pt3dadd( 128.906, -320.617, -11.3903, 0.07 ) }
    dend_30 { pt3dadd( 128.796, -321.038, -11.3703, 0.15 ) }
    dend_30 { pt3dadd( 128.587, -321.915, -11.2312, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 18/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 130.54, -314.749, -11.358, 0.22 ) }
    dend_29 { pt3dadd( 130.933, -315.799, -11.0505, 0.22 ) }
    dend_29 { pt3dadd( 131.057, -316.059, -10.9833, 0.07 ) }
    dend_29 { pt3dadd( 131.286, -316.512, -10.8735, 0.44 ) }
    dend_29 { pt3dadd( 132.027, -317.919, -10.5346, 0.07 ) }
    dend_29 { pt3dadd( 132.544, -318.854, -10.3226, 0.07 ) }
    dend_29 { pt3dadd( 132.933, -319.47, -10.1679, 0.15 ) }
    dend_29 { pt3dadd( 133.7, -320.439, -9.87259, 0.07 ) }
    dend_29 { pt3dadd( 134.019, -320.781, -9.74572, 0.15 ) }
    dend_29 { pt3dadd( 134.341, -321.097, -9.62458, 0.07 ) }
    dend_29 { pt3dadd( 134.762, -321.453, -9.4886, 0.22 ) }
    dend_29 { pt3dadd( 136.007, -322.408, -9.01428, 0.15 ) }
    dend_29 { pt3dadd( 137.064, -323.143, -8.56434, 0.07 ) }
    dend_29 { pt3dadd( 137.642, -323.501, -8.29651, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_39, dend_36, dend_35, dend_16, dend_13, dend_12, dend_3, dend_0, dend_45, dend_40, dend_38, dend_37, dend_22, dend_17, dend_15, dend_14, dend_9, dend_4, dend_2, dend_1, dend_42, dend_41, dend_34, dend_23, dend_21, dend_18, dend_11, dend_10, dend_8, dend_5, dend_44, dend_43, dend_25, dend_24, dend_20, dend_19, dend_7, dend_6, dend_33, dend_26, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_46, dend_39, dend_36, dend_35, dend_16, dend_13, dend_12, dend_3, dend_0, dend_45, dend_40, dend_38, dend_37, dend_22, dend_17, dend_15, dend_14, dend_9, dend_4, dend_2, dend_1, dend_42, dend_41, dend_34, dend_23, dend_21, dend_18, dend_11, dend_10, dend_8, dend_5, dend_44, dend_43, dend_25, dend_24, dend_20, dend_19, dend_7, dend_6, dend_33, dend_26, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_46 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_35 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_12 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_45 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_38 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_37 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_15 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_14 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_9 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_41 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_34 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_23 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_21 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_10 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_5 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_44 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_20 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_7 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_6 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_33 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_26 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_27 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_13 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_3 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_16 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_4 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_36 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_40 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_17 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_42 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_43 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_18 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_24 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_25 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_32 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_31 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_28 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_30 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_29 OneSecGrp_SectionRef_50.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_46 nseg = 7
    dend_35 nseg = 11
    dend_12 nseg = 5
    dend_45 nseg = 9
    dend_38 nseg = 13
    dend_37 nseg = 7
    dend_15 nseg = 9
    dend_14 nseg = 7
    dend_9 nseg = 3
    dend_2 nseg = 13
    dend_1 nseg = 15
    dend_41 nseg = 7
    dend_34 nseg = 9
    dend_23 nseg = 5
    dend_21 nseg = 7
    dend_11 nseg = 7
    dend_10 nseg = 7
    dend_8 nseg = 5
    dend_5 nseg = 3
    dend_44 nseg = 7
    dend_20 nseg = 3
    dend_19 nseg = 3
    dend_7 nseg = 3
    dend_6 nseg = 3
    dend_33 nseg = 3
    dend_26 nseg = 5
    dend_27 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_LBC_19cea46eb3_0_0


