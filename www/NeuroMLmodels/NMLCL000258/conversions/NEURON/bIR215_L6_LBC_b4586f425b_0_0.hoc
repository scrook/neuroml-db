// Cell: bIR215_L6_LBC_b4586f425b_0_0
/*
{
  "id" : "bIR215_L6_LBC_b4586f425b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "3.53699, 8.1767, -0.046517, 3.89204", "3.23089, 7.26926, -0.0420574, 6.96208", "2.92479, 6.36182, -0.0375978, 10.0575", "2.61869, 5.45437, -0.0331383, 12.1025", "2.31259, 4.54693, -0.0286787, 13.6233", "2.00649, 3.63948, -0.0242192, 14.3107", "1.70039, 2.73204, -0.0197596, 14.7168", "1.39429, 1.8246, -0.0153001, 15.1228", "1.08819, 0.917153, -0.0108405, 14.9289", "0.782089, 0.00970928, -0.00638094, 14.6123", "0.475989, -0.897735, -0.00192139, 14.2054", "0.16989, -1.80518, 0.00253817, 13.7906", "-0.13621, -2.71262, 0.00699773, 13.1567", "-0.442309, -3.62007, 0.0114573, 11.719", "-0.748409, -4.52751, 0.0159168, 10.1965", "-1.05451, -5.43495, 0.0203764, 8.66594", "-1.36061, -6.3424, 0.024836, 7.15698", "-1.66671, -7.24984, 0.0292955, 5.77138", "-1.97281, -8.15729, 0.0337551, 4.37985", "-2.27891, -9.06473, 0.0382146, 2.89161", "-2.58501, -9.97217, 0.0426742, 1.70729" ]
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "0.778487, -0.213754, 18.4829, 1.32", "0.0538969, 1.7763, 18.4985, 1.32", "-0.649372, 4.20489, 18.5135, 1.32", "-1.0312, 5.49426, 18.7011, 1.32", "-1.5893, 7.17459, 19.0615, 0.96", "-2.10587, 8.67963, 19.4279, 0.96", "-2.60917, 10.1133, 19.7867, 0.96", "-3.07105, 11.4454, 20.1619, 0.96", "-4.15046, 14.7861, 21.1463, 0.6", "-4.53865, 16.0684, 21.6747, 0.48", "-4.98819, 17.5439, 22.4028, 0.48", "-5.37413, 18.9822, 23.152, 0.48", "-5.68524, 20.1948, 23.8074, 0.48", "-5.98116, 21.5522, 24.5356, 0.48", "-6.53551, 25.8652, 26.6202, 0.48", "-6.58635, 26.6745, 27.0734, 0.48", "-6.61888, 28.532, 28.3319, 0.48", "-8.25167, 36.6613, 32.7432, 0.48", "-8.41531, 44.7639, 37.495, 0.48", "-7.5603, 53.3891, 40.9861, 0.48", "-6.75909, 61.3907, 45.8612, 0.48", "-4.63571, 69.5016, 50.098, 0.48", "-2.29152, 77.612, 54.2174, 0.48", "0.703343, 84.796, 59.6208, 0.48", "5.09698, 92.2066, 63.5193, 0.48", "9.70877, 100.097, 65.7779, 0.48", "13.7805, 108.307, 67.8002, 0.48", "17.9721, 116.487, 69.7043, 0.48", "22.5605, 124.192, 72.6237, 0.48", "26.6999, 131.394, 77.1784, 0.48", "29.1678, 139.061, 82.0904, 0.48", "30.3979, 146.351, 88.0025, 0.48", "31.4126, 152.955, 94.7846, 0.48", "33.659, 159.557, 101.266, 0.48", "36.2539, 165.591, 108.214, 0.48", "38.2312, 171.575, 115.409, 0.48", "39.8026, 177.66, 122.61, 0.48", "40.3206, 183.503, 130.176, 0.48", "40.4533, 189.388, 137.723, 0.48", "39.3317, 195.447, 145.032, 0.48", "39.8607, 200.671, 153.084, 0.48", "38.7286, 206.077, 160.938, 0.48", "38.2077, 211.427, 168.899, 0.48", "36.0904, 216.692, 176.654, 0.48" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997810555437,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-5.82151, 2.40824, -19.4171, 1.45", "-7.11049, 2.02371, -21.2311, 1.45", "-9.10139, 1.36986, -23.9284, 1.2", "-14.1991, -0.468652, -30.191, 1.2", "-16.6182, -1.3857, -33.0725, 0.84", "-19.1923, -2.38517, -35.8912, 2.05", "-23.5474, -4.00695, -40.6815, 0.36", "-25.4285, -4.67931, -42.752, 1.45", "-27.6379, -5.42198, -45.1063, 0.24", "-31.06, -6.41147, -48.4453, 1.81", "-34.1672, -7.30859, -51.4921, 0.48", "-39.071, -8.57814, -56.2394, 1.57", "-41.3741, -8.98397, -58.3952, 0.36", "-42.0739, -9.05147, -59.0911, 1.08", "-44.7967, -9.12367, -61.8501, 0.12", "-46.5322, -9.08837, -63.4569, 1.69", "-48.4314, -8.97482, -65.1245, 0.24", "-50.8649, -8.8697, -66.8841, 1.08", "-52.9849, -8.81017, -68.3318, 0.24", "-54.66, -8.85243, -69.3807, 0.24", "-58.2042, -9.11763, -71.4189, 0.24", "-60.0459, -9.33205, -72.4449, 1.57", "-62.6711, -9.70024, -73.8875, 0.48", "-64.9245, -10.0593, -75.159, 1.69", "-68.327, -10.6377, -77.0868, 0.12", "-70.121, -10.9362, -78.2277, 1.57", "-74.3707, -11.5954, -81.0953, 0.36", "-77.2605, -11.9519, -83.1828, 1.69", "-80.0656, -12.19, -85.3983, 0.36", "-81.5734, -12.2624, -86.6305, 1.57", "-86.3117, -12.2176, -90.5953, 0.12", "-87.1283, -12.1743, -91.3085, 1.33", "-91.2742, -11.7809, -95.0244, 0.12", "-92.7552, -11.612, -96.3617, 0.84", "-94.2461, -11.4041, -97.8294, 0.12", "-95.2085, -11.2582, -98.8114, 1.69", "-99.5619, -10.5374, -103.038, 0.12", "-101.017, -10.2837, -104.399, 1.57", "-104.176, -9.72553, -107.11, 0.36", "-106.593, -9.30722, -109.038, 1.08", "-108.412, -9.04176, -110.521, 0.24", "-109.619, -8.92059, -111.451, 1.57", "-111.784, -8.8324, -113.01, 0.36", "-112.96, -8.85837, -113.888, 0.36", "-114.039, -9.04375, -114.926, 1.57", "-116.834, -9.91007, -118.237, 0.12", "-117.509, -10.2048, -119.23, 1.33", "-119.35, -11.2175, -122.279, 0.36", "-119.579, -11.366, -122.721, 0.96", "-123.068, -13.8442, -130.136, 0.36", "-123.951, -14.5348, -132.225, 0.96", "-124.896, -15.3239, -134.532, 0.24", "-125.236, -15.613, -135.365, 0.84", "-127.505, -17.4703, -140.659, 0.48", "-128.306, -18.0839, -142.4, 1.57", "-132.335, -20.8774, -150.141, 0.12", "-133.056, -21.371, -151.523, 0.12", "-133.453, -21.6328, -152.256, 1.45", "-134.702, -22.4294, -154.482, 0.24", "-135.442, -22.8868, -155.583, 0.24", "-136.266, -23.3115, -156.638, 0.96" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997810555437,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-6.17151, 5.17275, -6.6171, 1.57", "-10.3459, 10.9807, -13.5316, 1.33", "-11.64, 12.7813, -15.6754, 1.33", "-12.1478, 13.4878, -16.5165, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997810555437
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-4.59152, -3.90925, -14.8471, 1.57", "-8.81435, -5.67909, -15.1145, 0.48", "-12.552, -6.94228, -15.5989, 0.48", "-14.248, -7.47017, -15.8545, 0.48", "-16.4648, -8.01966, -16.3934, 0.48", "-20.5276, -8.87328, -17.6724, 0.48", "-24.6304, -9.68638, -19.1044, 0.48", "-27.6272, -10.0925, -20.5639, 0.24", "-29.5685, -10.2776, -21.6948, 0.24", "-34.1679, -10.6578, -24.7667, 0.48", "-36.2273, -10.8257, -26.2834, 0.48", "-37.5882, -10.9593, -27.3795, 0.48", "-42.2009, -11.4631, -31.1661, 1.57", "-42.8476, -11.5573, -31.8073, 1.57", "-45.3394, -12.0489, -34.4359, 0.48", "-46.1708, -12.2608, -35.3193, 0.48", "-46.5158, -12.3492, -35.6912, 0.48", "-50.103, -13.297, -39.5022, 2.05", "-56.5026, -15.1156, -45.9576, 0.72", "-58.7604, -15.7875, -48.1985, 0.72", "-61.3623, -16.5988, -50.6292, 0.48", "-62.0556, -16.8153, -51.2523, 0.48", "-63.7562, -17.3358, -52.7275, 0.48", "-64.9806, -17.688, -53.7444, 0.96", "-69.9049, -19.0184, -57.7048, 0.48", "-71.9418, -19.5734, -59.3838, 0.24", "-74.7689, -20.395, -61.9141, 1.33", "-78.76, -21.5901, -65.6033, 0.48", "-82.3112, -22.6461, -69.0267, 0.48", "-85.6361, -23.6387, -72.2521, 1.45", "-87.5877, -24.2198, -74.0448, 0.48", "-92.0821, -25.4871, -78.4913, 1.45", "-93.901, -25.9249, -80.3805, 0.48", "-96.2116, -26.3754, -82.6028, 0.48", "-97.1426, -26.4918, -83.4952, 0.96", "-99.056, -26.6178, -85.2671, 0.12", "-105.662, -26.7537, -91.447, 0.12", "-110.594, -26.6757, -95.8639, 0.12", "-115.094, -26.4786, -100.432, 1.33", "-121.136, -26.1114, -107.0, 0.12", "-122.346, -26.0072, -108.326, 0.6", "-124.037, -25.8406, -110.251, 0.12", "-124.232, -25.82, -110.46, 0.72", "-130.671, -25.1531, -117.598, 0.12", "-131.967, -25.0597, -119.078, 1.57", "-137.901, -24.7332, -125.532, 0.12", "-140.317, -24.6493, -128.136, 1.2", "-141.829, -24.6615, -129.963, 0.12", "-142.519, -24.6908, -130.805, 1.08", "-148.388, -25.2874, -138.385, 0.12", "-149.404, -25.4418, -139.801, 0.6", "-149.631, -25.4862, -140.159, 0.6", "-157.532, -26.9182, -152.617, 0.12", "-160.477, -27.4049, -157.181, 0.6", "-164.524, -27.9524, -163.148, 0.12", "-165.535, -28.0577, -164.511, 1.2", "-173.589, -28.7995, -174.669, 0.12", "-174.387, -28.8605, -175.535, 0.72", "-176.817, -28.9942, -177.636, 0.12", "-178.038, -29.0627, -178.635, 1.08", "-179.729, -29.1522, -179.743, 0.12", "-185.281, -29.5454, -183.241, 1.08", "-189.603, -29.9721, -185.52, 0.12", "-190.077, -30.0201, -185.771, 0.6", "-193.675, -30.394, -187.664, 0.12", "-194.498, -30.474, -188.124, 1.69", "-202.075, -31.1831, -192.081, 0.12", "-203.049, -31.265, -192.697, 1.45", "-206.539, -31.5419, -195.441, 0.12", "-207.457, -31.5983, -196.197, 1.33", "-212.032, -31.8216, -200.152, 0.12", "-214.441, -31.9257, -202.341, 0.84", "-224.618, -32.3706, -211.98, 0.12", "-225.999, -32.4634, -213.368, 0.48", "-228.881, -32.762, -216.455, 0.12", "-229.545, -32.8664, -217.237, 0.6", "-233.871, -33.652, -222.307, 0.12", "-234.243, -33.7298, -222.773, 1.33", "-235.883, -34.3041, -224.698, 0.12", "-236.586, -34.645, -225.748, 0.12", "-239.276, -36.7305, -231.63, 0.12" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997810555437,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-4.21151, -5.74275, -5.6771, 2.89", "-4.96917, -10.3792, -5.6771, 2.89" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997810555437
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "5.46849, 5.34375, -3.4871, 1.08", "6.99458, 6.2173, -3.51634, 0.84", "8.03648, 6.80025, -3.37049, 0.72", "10.2365, 8.03122, -3.0625, 1.08", "11.7609, 8.88413, -2.8491, 1.08", "16.2596, 11.4012, -2.21933, 1.08", "17.5956, 12.1487, -2.03231, 0.84", "22.8603, 14.8666, -1.17665, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997810555437
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.38151, -10.1318, 12.3429, 2.05", "-2.12685, -12.0421, 12.3429, 2.05", "-1.91791, -13.6096, 12.3429, 2.41" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997810555437
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.58501, -9.97217, 0.0426742, 1.0273", "-7.37941, -24.1853, 0.0426742, 1.0273", "-12.1738, -38.3985, 0.0426742, 1.0273" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "36.0904, 216.692, 176.654, 0.6", "38.9717, 225.489, 183.222, 0.6" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "36.0904, 216.692, 176.654, 0.6", "37.1719, 225.805, 183.209, 0.6" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-12.1478, 13.4878, -16.5165, 1.33", "-12.4404, 13.8627, -16.5098, 1.33", "-15.3493, 17.5906, -16.443, 1.81", "-18.9701, 22.2306, -16.3598, 0.96", "-21.5943, 25.5936, -16.2996, 1.57", "-21.9043, 25.9909, -16.2924, 1.57" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-12.1478, 13.4878, -16.5165, 0.84", "-18.5664, 15.9486, -15.6476, 0.84", "-21.5887, 16.9872, -15.3489, 0.84", "-24.8416, 18.0119, -14.8672, 0.84", "-25.9831, 18.3302, -14.6763, 0.36", "-27.681, 18.6856, -14.3948, 0.84", "-29.178, 18.9035, -14.1939, 0.36", "-31.5083, 18.9931, -14.1101, 1.45", "-34.6038, 18.8364, -13.817, 0.72", "-36.2372, 18.656, -13.5767, 0.48", "-39.8814, 18.0464, -13.028, 2.65", "-42.28, 17.5213, -12.6185, 0.48", "-43.933, 17.0982, -12.3676, 0.48", "-46.4454, 16.3317, -12.0884, 0.72", "-47.6149, 15.918, -11.998, 0.24", "-48.8282, 15.4592, -11.8556, 0.24", "-50.578, 14.7864, -11.5658, 1.33", "-52.3615, 14.1391, -11.2244, 0.36", "-53.7684, 13.644, -11.0693, 1.2", "-55.4457, 13.1143, -11.0245, 0.24", "-57.3136, 12.5718, -11.0306, 1.81", "-59.1121, 12.1071, -11.1208, 0.12", "-60.6577, 11.7198, -11.2339, 1.2", "-62.7878, 11.2276, -11.3384, 0.12", "-63.6926, 11.0429, -11.417, 1.2", "-65.3464, 10.7738, -11.7099, 0.12", "-67.2317, 10.4922, -12.206, 2.05" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-239.276, -36.7305, -231.63, 0.6", "-239.562, -36.5888, -232.396, 0.6", "-241.16, -35.481, -236.767, 0.96", "-242.883, -34.0789, -241.909, 0.12", "-243.062, -33.933, -242.444, 1.69", "-243.843, -33.2974, -244.776, 0.36", "-244.0, -33.1689, -245.247, 1.08", "-245.442, -31.8056, -249.784, 0.12", "-246.508, -30.5712, -252.987, 1.08" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-4.96917, -10.3792, -5.6771, 2.04", "-3.08188, -14.739, -12.785, 2.04", "-2.7275, -15.5576, -14.1196, 2.04", "-2.35066, -16.4281, -15.5389, 1.8", "-2.07765, -17.0588, -16.5671, 1.8", "-1.72968, -17.8626, -17.8776, 1.8", "-0.451716, -20.8148, -22.6906, 1.8" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.96917, -10.3792, -5.6771, 2.89", "-5.00352, -10.6529, -5.63866, 2.89", "-5.76545, -16.7247, -4.78598, 1.81", "-6.11473, -19.5081, -4.3951, 1.81", "-6.47242, -22.3585, -3.9948, 2.41" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "22.8603, 14.8666, -1.17665, 0.36", "26.5004, 16.0373, -1.50688, 0.36", "30.1399, 17.1558, -2.13944, 0.36", "34.9512, 18.5752, -3.14966, 0.36", "39.4929, 19.8924, -4.15493, 0.36", "42.7459, 20.8133, -4.87487, 0.84", "47.2612, 22.1561, -5.95495, 0.6", "50.6582, 23.2064, -6.8946, 0.6", "52.7125, 23.8794, -7.50235, 0.48", "56.2319, 25.0655, -8.56211, 0.48", "58.901, 25.9244, -9.32518, 0.96", "64.6893, 27.7618, -10.731, 0.72", "67.1788, 28.5332, -11.3722, 1.08", "68.8968, 29.0637, -11.8786, 0.72", "71.3927, 29.7835, -12.7367, 0.72", "73.4138, 30.2904, -13.5025, 0.6", "75.6748, 30.792, -14.3792, 1.45", "82.2379, 32.0021, -16.8084, 0.84", "84.6328, 32.4615, -17.5924, 0.48", "87.1322, 32.9626, -18.2697, 1.33", "89.627, 33.5016, -18.7958, 0.48", "91.8651, 34.0043, -19.2064, 1.2", "94.3799, 34.559, -19.5528, 0.36", "97.606, 35.2823, -19.9301, 1.57", "102.361, 36.4079, -20.7463, 0.36", "104.568, 36.969, -21.3622, 1.33", "108.378, 37.9811, -22.6847, 0.36", "110.366, 38.5504, -23.5195, 1.45", "114.978, 40.0327, -25.6578, 0.24", "117.045, 40.7513, -26.7652, 1.45", "123.563, 43.2937, -30.6162, 0.48", "125.316, 44.0206, -31.6729, 1.81", "128.986, 45.5879, -33.8393, 0.6", "131.986, 46.9302, -35.6014, 0.24", "136.197, 48.9521, -38.221, 0.96", "141.362, 51.59, -41.6037, 0.48", "143.681, 52.8563, -43.2179, 0.48", "145.028, 53.5894, -44.208, 0.48", "146.472, 54.2902, -45.323, 1.33", "150.765, 56.0277, -48.8107, 0.12", "152.069, 56.4602, -49.9122, 1.33", "155.366, 57.2969, -52.8439, 0.48", "156.8, 57.5881, -54.1479, 0.48", "161.532, 58.372, -58.2887, 0.48", "164.531, 58.6858, -60.577, 0.48", "168.018, 59.0289, -62.8212, 0.72", "169.346, 59.2152, -63.5772, 0.12", "170.534, 59.4535, -64.1261, 0.96", "172.595, 60.0342, -64.9007, 0.36", "176.81, 61.6019, -66.2108, 0.36", "181.573, 63.6935, -67.5329, 0.12", "186.367, 65.8263, -68.5906, 0.12", "190.005, 67.3704, -69.3097, 0.12", "192.938, 68.5201, -69.9908, 0.12", "196.158, 69.6739, -70.7797, 0.12", "197.893, 70.2122, -71.158, 0.12", "202.283, 71.1901, -72.1642, 0.12", "205.16, 71.6549, -72.8384, 0.12", "212.794, 72.5908, -74.8227, 0.12", "214.086, 72.701, -75.2468, 0.96", "218.374, 72.9885, -76.7717, 0.24", "222.877, 73.2443, -78.6492, 1.08", "226.658, 73.4125, -80.4032, 0.24", "231.653, 73.4989, -82.8548, 0.24", "237.207, 73.3782, -85.5791, 0.24", "239.301, 73.2956, -86.6518, 1.2", "243.644, 73.0054, -88.897, 0.24", "250.039, 72.4208, -91.9115, 0.24", "252.853, 72.0944, -93.2355, 0.24", "254.377, 71.8776, -93.8359, 0.84", "256.366, 71.5774, -94.5208, 0.24", "259.478, 71.0988, -95.5781, 0.24", "261.084, 70.8537, -96.073, 0.24", "264.486, 70.3671, -97.0486, 1.69", "267.934, 69.901, -97.9315, 0.24", "272.328, 69.2758, -99.2027, 0.24" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "22.8603, 14.8666, -1.17665, 0.72", "24.0632, 16.1462, -0.181258, 0.72", "25.0069, 17.2455, 0.584362, 0.96", "27.1109, 19.7604, 2.74538, 0.96", "27.9138, 20.6516, 3.56113, 0.84", "32.2818, 25.1261, 7.75382, 0.6", "33.6133, 26.4373, 8.99304, 0.6", "34.6917, 27.4445, 9.94549, 0.6", "38.7108, 30.9788, 13.4333, 0.48", "40.4227, 32.3809, 14.8952, 0.48", "42.0785, 33.6266, 16.3018, 0.36", "43.8964, 34.7776, 17.7256, 0.36", "44.5939, 35.1464, 18.2165, 0.36", "45.8962, 35.7931, 19.0457, 0.36", "47.9267, 36.9376, 20.1386, 0.36", "48.6019, 37.4004, 20.5895, 0.36", "49.6117, 38.2346, 21.3575, 0.36", "50.7967, 39.1992, 22.2488, 0.36", "52.654, 40.7987, 23.6898, 0.12", "53.5214, 41.7227, 24.4062, 0.12", "54.2006, 42.7578, 25.0419, 0.12", "54.9839, 44.3075, 25.9759, 0.6", "59.6036, 49.034, 30.5483, 0.6", "64.9681, 53.7377, 34.2515, 0.6", "70.4988, 58.6849, 37.3016, 0.6", "75.3149, 63.3559, 41.7323, 0.6", "79.6617, 68.6744, 45.8266, 0.6", "82.8421, 74.3075, 50.4869, 0.6", "86.0542, 79.4138, 55.758, 0.6", "88.4878, 84.2393, 61.6967, 0.6", "89.8978, 89.229, 67.8134, 0.6", "92.2367, 93.7955, 74.0113, 0.6", "94.735, 98.1549, 80.3116, 0.6", "98.0499, 102.35, 86.3535, 0.6", "100.205, 107.271, 92.3137, 0.6", "102.049, 111.499, 98.9304, 0.6", "104.145, 114.949, 105.96, 0.6", "106.056, 117.154, 113.574, 0.6", "108.611, 119.652, 120.893, 0.6", "110.912, 123.156, 127.829, 0.6", "112.524, 127.063, 134.719, 0.6", "113.644, 132.407, 140.558, 0.6", "113.216, 137.782, 146.456, 0.6", "111.803, 143.255, 152.095, 0.6" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-1.91791, -13.6096, 12.3429, 0.72", "-0.210595, -14.875, 12.519, 0.72", "1.49787, -16.3939, 12.6338, 0.72", "4.47379, -19.3871, 12.7679, 0.72", "5.98031, -21.1128, 12.8145, 0.48", "7.41624, -22.9222, 12.9998, 0.48", "9.10044, -25.1981, 13.3183, 0.48", "10.0422, -26.6811, 13.6258, 0.96", "10.9697, -28.301, 14.0255, 0.6", "12.271, -30.7426, 14.6659, 0.96", "14.1084, -34.066, 15.7886, 1.33", "15.587, -36.4215, 16.7726, 1.33", "17.3292, -38.849, 17.8584, 0.96", "18.7549, -40.6263, 18.6312, 1.33", "19.9343, -41.9718, 19.1729, 0.72", "21.9545, -44.0746, 19.9735, 0.72", "23.1204, -45.182, 20.2759, 0.72", "25.4417, -47.1621, 20.7554, 0.72", "26.8135, -48.2086, 20.8586, 1.2", "28.003, -49.0043, 20.8822, 2.17", "33.5666, -55.4073, 22.8469, 2.17", "39.9094, -60.9603, 25.2641, 2.17", "45.671, -66.7812, 28.349, 2.17", "51.5713, -73.1009, 29.4275, 2.17", "57.2848, -79.5188, 30.8245, 2.17", "62.5018, -86.4165, 30.2545, 2.17", "67.2738, -93.5978, 30.8502, 2.17", "71.6997, -100.766, 32.7909, 2.17", "76.2737, -108.001, 33.9557, 2.17", "81.2913, -114.812, 35.872, 2.17", "85.2053, -122.064, 38.4662, 2.17", "89.2364, -128.593, 42.5705, 2.17", "93.9533, -134.007, 47.63, 2.17", "98.8673, -138.007, 53.8359, 2.17" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.91791, -13.6096, 12.3429, 1.08", "-2.98881, -17.7491, 13.6967, 1.08", "-3.4844, -19.7599, 14.3575, 1.45", "-3.84124, -21.458, 14.8664, 1.45", "-4.18173, -23.5499, 15.4873, 1.45", "-4.47658, -25.3614, 16.0251, 1.2", "-4.61707, -26.2246, 16.2813, 1.45", "-4.89951, -28.6474, 16.8054, 1.2", "-5.14084, -31.1089, 17.3153, 1.57", "-5.39097, -34.5444, 18.1746, 1.45" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-12.1738, -38.3985, 0.0426742, 0.12", "-16.9682, -52.6116, 0.0426742, 0.12", "-21.7626, -66.8248, 0.0426742, 0.12" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-21.9043, 25.9909, -16.2924, 2.05", "-22.9731, 28.8141, -16.0958, 2.05", "-24.3408, 32.552, -15.7756, 0.6", "-25.3654, 35.3679, -15.5158, 0.6", "-26.035, 37.2792, -15.4561, 1.81", "-26.8338, 39.645, -15.4668, 0.72", "-27.3529, 41.2529, -15.5086, 0.72", "-27.7849, 42.7955, -15.5891, 1.33", "-28.0815, 44.0242, -15.6852, 1.93", "-28.8262, 47.5565, -15.7492, 0.36", "-29.0463, 48.6891, -15.7172, 0.84", "-29.3928, 50.6049, -15.4945, 0.36", "-29.7161, 52.4868, -15.0866, 1.57", "-29.9434, 53.9226, -14.6004, 2.65", "-30.5653, 57.8528, -12.6883, 0.48", "-30.814, 59.1722, -11.8907, 1.33", "-31.3947, 61.8172, -10.2312, 0.36", "-31.616, 62.7074, -9.65654, 1.57", "-32.182, 64.7617, -8.35277, 0.48", "-32.8211, 66.8845, -7.11265, 1.69", "-33.8109, 69.851, -5.72023, 0.36", "-34.2475, 71.042, -5.22082, 1.08", "-34.3886, 71.4015, -5.10625, 1.81", "-35.2899, 73.5389, -4.55872, 0.6", "-35.8191, 74.6851, -4.38547, 1.69", "-36.4274, 75.9312, -4.29955, 0.12", "-36.9113, 76.8335, -4.25868, 0.96", "-37.6395, 78.0642, -4.20719, 0.24", "-38.3766, 79.1953, -4.16737, 0.24", "-39.1895, 80.3361, -4.05606, 1.33", "-39.4675, 80.7223, -3.98945, 2.05", "-41.054, 83.0571, -3.48911, 0.48", "-41.5541, 83.8437, -3.3257, 0.48", "-42.034, 84.653, -3.17174, 1.57", "-43.3255, 87.067, -2.75657, 0.36", "-43.9038, 88.244, -2.5579, 1.33", "-45.24, 91.1549, -2.02695, 0.36", "-45.6941, 92.2594, -1.83964, 1.69", "-46.2595, 93.7872, -1.62826, 0.48", "-46.423, 94.2957, -1.57847, 0.84", "-46.6959, 95.2961, -1.48536, 0.24", "-47.0224, 96.7918, -1.27911, 1.33", "-47.2514, 98.6055, -1.00844, 0.6", "-47.3427, 100.54, -0.729058, 0.36", "-47.2898, 102.138, -0.515427, 0.36", "-47.0425, 104.253, -0.233536, 1.33", "-46.7996, 105.457, -0.0817103, 0.36", "-46.2467, 107.537, 0.152174, 0.72", "-45.8867, 108.586, 0.297746, 0.12", "-45.565, 109.346, 0.395307, 0.72", "-44.8649, 110.792, 0.516522, 0.24", "-44.326, 111.774, 0.486926, 0.24" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-21.9043, 25.9909, -16.2924, 1.2", "-27.7558, 33.777, -3.32124, 1.2", "-29.2782, 35.65, -0.153551, 0.24", "-30.7535, 37.4727, 2.83473, 1.2", "-33.3415, 40.6501, 7.81696, 0.24", "-36.3269, 44.2993, 13.5053, 1.57", "-39.2158, 47.8934, 18.9411, 0.96", "-41.2727, 50.4335, 22.3386, 1.93", "-42.1331, 51.4917, 23.7633, 0.72", "-45.0782, 54.9318, 28.5412, 2.77", "-47.3573, 57.6092, 31.9532, 0.72", "-48.3355, 58.9169, 33.5255, 1.81", "-49.8115, 61.1456, 35.6347, 0.6", "-55.9666, 67.1113, 44.7156, 0.6", "-60.0909, 74.2749, 53.9855, 0.6", "-61.8, 82.2573, 63.2852, 0.6", "-64.7781, 89.8665, 72.605, 0.6", "-67.029, 96.5311, 82.8878, 0.6", "-68.2752, 103.09, 93.4191, 0.6", "-71.7626, 110.508, 102.731, 0.6", "-75.0406, 119.586, 110.331, 0.6", "-77.3891, 128.073, 118.968, 0.6", "-77.4274, 137.036, 127.407, 0.6", "-77.6145, 145.127, 136.768, 0.6", "-76.07, 152.007, 147.044, 0.6", "-74.6401, 157.774, 158.07, 0.6", "-72.1629, 161.769, 169.767, 0.6", "-69.1127, 166.201, 181.152, 0.6", "-67.7708, 170.859, 192.756, 0.6", "-67.2471, 177.119, 203.556, 0.6", "-65.7198, 184.477, 213.461, 0.6", "-66.2821, 190.266, 224.543, 0.6", "-69.0293, 194.553, 236.046, 0.6", "-71.4147, 200.0, 247.071, 0.6", "-75.1842, 205.287, 257.788, 0.6", "-81.07, 211.627, 266.764, 0.6", "-86.2582, 218.322, 275.884, 0.6" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-67.2317, 10.4922, -12.206, 0.12", "-68.1066, 5.59978, -8.57781, 0.12", "-68.3388, 4.33842, -7.54654, 1.69", "-68.8089, 1.7578, -5.32431, 0.24", "-69.0875, 0.142764, -3.97548, 0.24", "-69.3747, -1.56746, -2.54014, 1.57", "-70.0856, -6.38518, 1.40128, 0.12", "-70.177, -7.01329, 1.9821, 1.81", "-70.4723, -9.55557, 4.24844, 0.24", "-70.5347, -10.8505, 5.2504, 0.24", "-70.5226, -11.9414, 6.0409, 1.08", "-70.4906, -13.2472, 6.90078, 1.08", "-70.4556, -14.5901, 7.67751, 0.24", "-70.4512, -15.4828, 8.23335, 1.69", "-70.5117, -19.3534, 10.7245, 0.12", "-70.7575, -24.3989, 14.2241, 0.12", "-70.8364, -25.3275, 14.8874, 0.6", "-71.0372, -26.6456, 15.8835, 1.69", "-71.6215, -29.2853, 17.9429, 0.36", "-71.7597, -29.7419, 18.2971, 1.08", "-72.4854, -31.3541, 19.3454, 0.36", "-72.8353, -31.9816, 19.6699, 0.36", "-74.1221, -34.2247, 20.8619, 0.36", "-74.5961, -35.0199, 21.2762, 0.36", "-75.0242, -35.7536, 21.6118, 0.84", "-76.8875, -39.0938, 23.0895, 0.48", "-77.8758, -41.1144, 23.9724, 0.72", "-78.8014, -43.1142, 24.8736, 0.12", "-79.0166, -43.6324, 25.1123, 1.08", "-79.4205, -44.7242, 25.6503, 0.36", "-79.6114, -45.321, 25.9718, 0.84", "-80.4602, -48.9351, 28.2377, 0.24", "-81.6521, -56.8615, 33.6499, 0.24", "-83.1536, -64.4215, 39.5452, 0.24", "-84.7116, -71.7268, 45.7727, 0.24", "-86.826, -78.632, 52.3326, 0.24", "-90.8957, -84.0641, 59.4759, 0.24", "-95.5336, -88.2904, 67.1529, 0.24", "-100.969, -93.5688, 73.4631, 0.24", "-106.932, -96.7283, 80.7814, 0.24", "-111.648, -100.851, 88.4729, 0.24", "-115.298, -104.927, 96.7503, 0.24", "-119.717, -108.458, 104.928, 0.24", "-122.998, -112.501, 113.377, 0.24" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-67.2317, 10.4922, -12.206, 1.45", "-69.1918, 9.95456, -12.1629, 1.45", "-71.4098, 9.22432, -12.2404, 0.24", "-72.5822, 8.64743, -12.4777, 1.2", "-73.8932, 7.91468, -12.8194, 0.12", "-75.2091, 7.08437, -13.2507, 1.33", "-77.1635, 5.77089, -13.9041, 0.12", "-78.2566, 4.9555, -14.2764, 1.33", "-82.3787, 1.76883, -15.5766, 0.36", "-82.778, 1.45726, -15.7478, 0.84", "-86.2507, -1.30402, -17.3048, 0.12", "-87.4197, -2.24418, -17.8437, 1.45", "-90.6562, -4.79208, -19.2424, 0.6", "-93.01, -6.57797, -20.2302, 0.24", "-98.5845, -10.4645, -22.3736, 1.81" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-0.451716, -20.8148, -22.6906, 1.32", "-0.152622, -21.7137, -24.3877, 1.32", "0.543805, -23.4282, -27.2712, 0.6", "1.79323, -25.9284, -31.0842, 0.6", "2.1442, -26.5443, -32.0419, 0.6", "2.50512, -27.1716, -33.0239, 0.6", "2.99219, -28.096, -34.4726, 1.68", "3.25579, -28.6412, -35.2846, 1.68", "3.52085, -29.2355, -36.2926, 0.84", "4.48419, -31.3342, -40.0893, 0.84", "4.75858, -31.9122, -41.2299, 0.84", "5.5081, -33.4948, -44.5312, 1.8", "5.64032, -33.7803, -45.1825, 1.8", "6.84485, -36.2926, -51.0766, 0.6", "6.97919, -36.5785, -51.8193, 0.6", "7.17138, -36.9313, -52.7546, 0.6", "7.41481, -37.3251, -53.8286, 1.44", "8.55817, -39.0029, -58.4409, 0.6", "9.13878, -39.8677, -60.9591, 1.8", "11.2048, -42.9005, -69.9644, 0.24", "11.4918, -43.346, -71.3289, 1.44", "11.6432, -43.5908, -72.0844, 0.36", "11.8142, -43.8602, -72.9081, 0.36", "13.476, -46.2383, -79.74, 1.44", "13.5681, -46.3619, -80.0794, 1.44", "13.6896, -46.5087, -80.4148, 0.48", "14.5492, -47.6193, -82.8179, 0.48", "14.8955, -48.0848, -83.7372, 1.92", "15.1246, -48.3961, -84.3077, 0.72", "16.5769, -50.3597, -87.591, 0.24", "17.1456, -51.1229, -88.8959, 0.24", "17.9614, -52.183, -90.7199, 0.24", "18.913, -53.4308, -93.0251, 2.16", "19.6043, -54.3516, -95.0041, 0.12", "20.642, -55.6917, -98.0445, 0.24", "21.0582, -56.2366, -99.4244, 1.08", "21.7319, -57.1493, -101.839, 0.24", "23.0272, -58.9716, -106.714, 1.8", "25.0158, -61.7836, -114.31, 0.12", "25.2651, -62.1431, -115.396, 1.92", "26.4882, -63.8931, -121.283, 0.12", "26.6928, -64.1873, -122.64, 0.12", "27.1143, -64.7997, -126.116, 0.12", "27.3415, -65.0976, -128.102, 1.56", "28.342, -66.3158, -137.166, 0.12", "28.4083, -66.3937, -137.764, 1.92", "30.3119, -68.3452, -153.183, 0.12", "30.3969, -68.4242, -153.812, 0.12", "30.5707, -68.5821, -154.977, 1.8", "31.0617, -69.1037, -158.07, 0.12", "31.7739, -69.9364, -161.589, 0.96", "31.9696, -70.1918, -162.458, 0.12", "32.5712, -71.0477, -164.43, 1.44", "33.0563, -71.8604, -166.304, 0.48", "33.6149, -73.1865, -169.363, 0.48", "33.6643, -73.3534, -169.751, 0.96", "33.9808, -75.0604, -174.107, 0.96", "34.0504, -75.6145, -175.615, 0.96", "34.0876, -75.9429, -176.539, 1.32", "34.3654, -77.5895, -181.272, 0.12", "34.655, -78.8178, -184.774, 0.12", "35.1927, -80.7408, -190.09, 1.32", "35.264, -80.948, -190.639, 0.12", "35.4265, -81.3072, -191.583, 0.12", "35.9943, -82.3066, -194.09, 1.8", "36.3115, -82.7863, -195.087, 0.12", "36.7444, -83.4026, -196.061, 0.12", "37.523, -84.4191, -197.35, 0.12", "38.6132, -85.8322, -199.105, 1.68", "39.733, -87.3061, -200.946, 0.12", "40.2762, -88.0081, -201.799, 0.12", "41.3961, -89.4504, -203.663, 0.12", "41.8866, -90.0741, -204.488, 0.12", "41.9866, -90.194, -204.619, 0.72" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.451716, -20.8148, -22.6906, 0.6", "-1.96344, -21.3206, -22.8346, 0.6", "-3.06097, -21.7432, -23.0794, 0.6", "-3.91193, -22.1356, -23.3272, 0.6", "-5.30026, -22.8725, -23.9715, 0.6", "-7.32872, -24.0005, -25.023, 0.6", "-10.4209, -25.7794, -26.648, 0.6", "-11.1656, -26.2446, -27.0515, 0.6", "-11.8018, -26.6844, -27.411, 0.6", "-13.4848, -27.9834, -28.3503, 0.6", "-14.6171, -28.9323, -28.9721, 0.6", "-15.9987, -30.0838, -29.7061, 1.68", "-17.0854, -30.9522, -30.3687, 0.72", "-17.786, -31.4843, -31.0511, 0.72", "-18.399, -31.948, -31.8062, 0.72", "-19.2448, -32.62, -32.9293, 0.72", "-20.2284, -33.4156, -34.4932, 0.72", "-22.5827, -35.2791, -38.7049, 0.72", "-24.494, -36.7165, -42.4475, 0.36", "-25.3955, -37.3444, -44.2951, 1.2", "-26.3941, -37.9677, -46.3255, 0.36", "-28.9528, -39.5619, -51.4296, 1.44", "-30.9934, -40.8583, -55.2237, 0.12", "-33.343, -42.3956, -59.3326, 1.32", "-34.7761, -43.3884, -61.7482, 0.36", "-35.7417, -44.105, -63.4206, 1.44", "-38.057, -45.986, -67.5298, 0.24", "-39.099, -46.9251, -69.2639, 0.24", "-41.5357, -49.3863, -73.2442, 0.24", "-42.2775, -50.2192, -74.4645, 0.24", "-44.4462, -52.9222, -78.3743, 1.44", "-46.0048, -54.8899, -81.4015, 0.12", "-46.4823, -55.448, -82.381, 0.36", "-47.3495, -56.3949, -84.3858, 0.36", "-48.2712, -57.3545, -86.581, 0.36", "-50.028, -59.0681, -90.9771, 0.36", "-51.7596, -60.6327, -95.1759, 0.36", "-52.6578, -61.3799, -97.2629, 1.2", "-56.668, -64.4775, -106.102, 0.36", "-57.053, -64.7434, -106.851, 0.36", "-60.4196, -66.8418, -112.489, 0.36", "-61.5599, -67.459, -114.011, 0.36", "-62.4861, -67.9061, -114.938, 0.36", "-63.465, -68.3179, -115.574, 0.72", "-66.3533, -69.2401, -116.724, 0.48", "-67.5691, -69.6023, -117.176, 0.48", "-70.0245, -70.3135, -118.151, 0.24", "-71.7188, -70.8196, -118.971, 1.2", "-72.4448, -71.0375, -119.358, 1.2", "-79.3752, -73.1493, -123.473, 0.24", "-82.5769, -74.1512, -125.644, 0.24", "-85.6384, -75.158, -127.911, 1.32", "-86.4151, -75.4327, -128.543, 1.32" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-6.47242, -22.3585, -3.9948, 0.6", "-3.2232, -25.6429, -2.65561, 0.6", "-1.44274, -27.2562, -1.96666, 0.6", "1.44504, -29.8325, -0.719337, 0.6", "3.82853, -32.0674, 0.362116, 0.6", "4.63719, -32.8709, 0.735444, 0.6", "6.30131, -34.4322, 1.4396, 0.84", "8.12534, -36.0407, 2.3105, 0.84", "9.30341, -37.0227, 2.9944, 0.6", "10.5991, -38.1061, 3.79742, 0.6", "11.4486, -38.7806, 4.37328, 0.6", "13.3389, -40.1736, 5.47586, 0.84", "16.3587, -42.294, 6.91222, 0.48", "17.7326, -43.1877, 7.38648, 1.08", "19.3354, -44.1735, 8.01432, 0.48", "22.22, -45.8528, 9.37772, 0.48", "24.7791, -47.3529, 10.7525, 0.48", "25.9774, -48.1231, 11.445, 0.48", "27.4154, -49.0676, 12.202, 1.08", "31.7789, -51.9048, 14.5489, 1.08", "34.1919, -53.5438, 15.9082, 0.48", "35.3064, -54.4482, 16.6019, 0.36", "36.4996, -55.5607, 17.3528, 0.36", "38.1268, -57.2061, 18.2038, 0.36", "39.0689, -58.2011, 18.5008, 0.36", "39.8308, -59.0862, 18.5059, 1.57", "40.9015, -60.4501, 18.3104, 0.84", "41.7438, -61.581, 18.1258, 0.6", "43.0046, -63.3527, 17.9028, 0.6", "43.8424, -64.7357, 17.7569, 0.6", "44.2362, -65.4257, 17.6813, 0.6", "45.5463, -67.6885, 17.3334, 1.57", "46.3371, -69.0406, 17.0307, 0.48", "46.7842, -69.9391, 16.7436, 0.48", "47.2294, -71.3082, 16.2213, 0.48", "53.1152, -75.5264, 17.1564, 0.48", "58.8695, -79.6208, 19.0299, 0.48", "63.4206, -84.938, 20.8074, 0.48", "68.3348, -90.2078, 21.3838, 0.48", "73.3942, -95.3156, 22.2424, 0.48", "78.7689, -100.121, 23.1203, 0.48", "84.2819, -104.712, 24.3373, 0.48", "90.041, -109.176, 24.4304, 0.48", "95.7239, -113.728, 24.5314, 0.48", "101.432, -118.246, 24.257, 0.48", "107.44, -122.403, 24.3621, 0.48", "113.595, -126.34, 24.7893, 0.48", "119.169, -130.993, 24.3175, 0.48", "124.446, -135.964, 24.5076, 0.48", "129.101, -141.459, 24.1229, 0.48", "133.076, -147.419, 23.787, 0.48", "136.539, -153.642, 23.1909, 0.48", "139.817, -159.837, 21.7771, 0.48" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-6.47242, -22.3585, -3.9948, 1.2", "-7.45414, -25.8891, -3.37953, 1.2", "-8.09468, -28.4175, -2.96856, 1.08", "-9.06605, -31.9931, -2.43421, 1.45", "-9.93082, -34.9878, -2.17844, 1.2", "-11.9567, -41.711, -1.89601, 1.2", "-13.9498, -48.2115, -1.79884, 1.2", "-14.7086, -50.8217, -1.84733, 0.96", "-15.5729, -53.9081, -1.97735, 0.96", "-16.6694, -57.9518, -2.42738, 0.96", "-17.6056, -61.3591, -3.06254, 1.2", "-18.5601, -64.6393, -3.97212, 0.84", "-19.658, -68.3565, -4.99961, 1.33", "-20.8481, -72.8133, -6.23545, 0.96", "-21.9083, -77.9917, -7.63992, 0.84", "-22.3958, -81.3345, -8.46357, 0.84", "-22.8187, -86.0584, -9.67187, 0.84", "-22.8884, -88.9256, -10.6064, 0.84", "-22.8573, -90.7197, -11.2964, 0.84", "-22.7183, -94.7424, -12.9193, 0.72", "-22.5824, -97.1654, -13.8766, 1.2", "-22.4615, -98.623, -14.4781, 2.65", "-21.8663, -104.835, -17.0164, 0.72", "-21.6576, -108.35, -18.4585, 0.6", "-21.6491, -112.987, -20.2963, 0.6", "-21.8359, -115.521, -21.2183, 0.48", "-22.0988, -117.847, -21.9555, 1.33", "-22.2188, -118.766, -22.2221, 1.45", "-22.4985, -120.568, -22.6462, 0.6", "-22.6495, -121.503, -22.9125, 0.48", "-23.1571, -123.921, -23.6876, 1.2", "-23.7535, -126.278, -24.6222, 0.6", "-25.1547, -131.243, -26.8541, 1.33", "-26.0995, -134.574, -28.4183, 0.96", "-26.6319, -136.448, -29.3241, 0.96", "-27.2456, -138.522, -30.3994, 0.72", "-28.5934, -142.658, -32.6187, 1.45", "-29.2726, -144.558, -33.6423, 0.72", "-29.8322, -146.164, -34.4191, 0.72", "-30.1104, -147.081, -34.8464, 0.72", "-30.9361, -150.083, -36.1727, 0.48", "-31.5269, -152.331, -37.1168, 0.48", "-31.8835, -153.716, -37.6114, 1.69", "-33.2412, -159.404, -39.7366, 0.72", "-33.9639, -162.627, -40.9474, 0.72", "-34.1045, -163.394, -41.2148, 2.89" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "111.803, 143.255, 152.095, 0.6", "116.518, 150.083, 160.167, 0.6" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "111.803, 143.255, 152.095, 0.6", "115.334, 148.079, 158.065, 0.6" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-5.39097, -34.5444, 18.1746, 0.96", "-11.4751, -37.5112, 22.7002, 0.96", "-12.5235, -38.0731, 23.3049, 0.96", "-13.8288, -38.7806, 23.8655, 0.84", "-15.3777, -39.6201, 24.5306, 0.84", "-17.3392, -40.6833, 25.3729, 0.84", "-19.6065, -41.9122, 26.3465, 0.84", "-21.2791, -42.8342, 26.3332, 0.6", "-23.024, -43.8548, 26.3893, 0.36", "-33.3795, -47.9115, 30.1993, 0.36", "-43.4678, -53.3409, 32.6106, 0.36", "-54.5497, -57.2749, 32.9515, 0.36", "-66.0353, -58.8979, 30.7692, 0.36", "-76.9399, -61.9244, 27.4736, 0.36", "-88.3855, -64.4553, 26.1689, 0.36", "-98.9269, -68.8265, 23.357, 0.36", "-108.55, -74.289, 19.52, 0.36", "-118.899, -78.4612, 15.8093, 0.36", "-129.441, -83.5068, 14.8217, 0.36", "-138.903, -90.1154, 16.4038, 0.36", "-146.508, -98.7533, 16.0681, 0.36", "-152.83, -108.135, 14.2992, 0.36", "-158.272, -117.865, 11.8487, 0.36", "-163.535, -127.851, 10.3251, 0.36", "-169.072, -137.505, 7.75066, 0.36", "-175.512, -146.803, 5.92162, 0.36" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.39097, -34.5444, 18.1746, 1.2", "-6.22319, -36.2471, 18.5804, 1.2", "-6.87179, -38.0304, 18.8595, 1.2", "-7.33018, -40.0359, 19.057, 1.08", "-7.73121, -42.5562, 19.3028, 1.08", "-7.97177, -44.8791, 19.4775, 1.08", "-8.0727, -46.1206, 19.5503, 1.08", "-8.14775, -48.5309, 19.5848, 1.08", "-8.1143, -51.1171, 19.5748, 0.96", "-8.06217, -53.0019, 19.5199, 0.84", "-8.06411, -55.1473, 19.5499, 1.2", "-8.26227, -57.7248, 19.7551, 1.45", "-8.61159, -59.8499, 20.0424, 1.2", "-9.06194, -61.8604, 20.3981, 1.2", "-9.49803, -63.4004, 20.7113, 1.2", "-10.7487, -67.2755, 21.5983, 1.2", "-11.5667, -69.3981, 22.2696, 1.2", "-12.2393, -70.9263, 22.9093, 1.57" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-44.326, 111.774, 0.486926, 1.2", "-44.184, 112.272, 0.369454, 1.2", "-43.3312, 115.979, -0.739872, 0.36", "-43.0454, 117.371, -1.15544, 0.36", "-42.8454, 118.438, -1.47821, 0.96", "-42.4707, 120.754, -2.11024, 0.12", "-42.1579, 123.273, -2.75675, 1.33", "-41.8435, 126.899, -3.57898, 0.24", "-41.7613, 128.876, -3.9505, 0.24", "-41.7124, 131.108, -4.3186, 0.24", "-41.6932, 133.654, -4.67642, 1.93", "-41.7021, 136.96, -5.03411, 0.48", "-41.715, 139.247, -5.19396, 0.48", "-41.7511, 141.243, -5.24569, 1.57", "-41.9141, 144.681, -5.34765, 0.72", "-42.0386, 146.144, -5.36827, 0.6", "-42.2975, 148.373, -5.39142, 1.57", "-42.7809, 151.691, -5.39509, 0.48", "-43.3627, 154.786, -5.41037, 0.24", "-43.919, 157.507, -5.47984, 1.57", "-44.7036, 161.081, -5.62683, 0.6", "-45.2558, 163.553, -5.74501, 1.93", "-45.6214, 165.4, -5.90126, 0.6", "-45.8687, 166.909, -6.06446, 1.81", "-46.2195, 170.058, -6.48184, 0.12", "-46.3169, 171.521, -6.64138, 0.48", "-46.3811, 173.236, -6.84499, 0.12", "-46.5118, 176.423, -7.06312, 2.05", "-46.6712, 180.075, -7.00202, 0.72", "-46.7521, 181.774, -6.80067, 1.33", "-46.9455, 185.658, -5.84972, 0.48", "-47.0151, 187.406, -5.29434, 1.57", "-47.0308, 190.032, -4.19292, 0.36", "-46.9565, 193.272, -2.54672, 0.36", "-46.77, 195.71, -1.13942, 0.96", "-46.3326, 199.465, 1.16782, 0.36", "-46.0991, 200.841, 2.04536, 0.96", "-45.2596, 204.554, 4.39544, 0.6", "-45.0363, 205.22, 4.78523, 0.84", "-43.792, 207.737, 6.26488, 0.6", "-42.9419, 208.799, 6.78383, 0.96", "-41.8835, 209.825, 7.24486, 0.36", "-40.3865, 210.997, 7.71204, 0.96", "-37.8545, 212.448, 8.02798, 0.48", "-35.0324, 213.757, 8.17735, 0.84", "-29.5002, 215.61, 7.89067, 0.12", "-25.7088, 225.885, 7.99398, 0.12", "-22.9147, 236.442, 7.96934, 0.12", "-20.8036, 246.963, 9.97452, 0.12", "-18.287, 257.578, 10.2005, 0.12", "-17.8331, 268.356, 8.71414, 0.12", "-18.8893, 278.751, 5.52115, 0.12" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-86.2582, 218.322, 275.884, 0.6", "-86.509, 221.943, 280.354, 0.6" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-86.2582, 218.322, 275.884, 0.6", "-89.805, 221.958, 284.248, 0.6" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "139.817, -159.837, 21.7771, 0.6", "145.446, -165.598, 23.2972, 0.6" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "139.817, -159.837, 21.7771, 0.6", "146.165, -165.644, 22.4397, 0.6" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-34.1045, -163.394, -41.2148, 0.48", "-32.763, -166.804, -44.9663, 0.48", "-32.3245, -167.833, -46.0794, 0.72", "-31.534, -169.423, -47.7368, 0.24", "-29.5068, -173.165, -51.4895, 1.33", "-26.3138, -178.822, -56.8541, 0.6", "-25.4274, -180.35, -58.199, 0.36", "-24.0608, -182.538, -59.9722, 0.36", "-22.6152, -184.726, -61.7001, 0.36", "-21.1153, -186.911, -63.3274, 0.96", "-18.7842, -190.261, -65.4228, 0.6", "-17.0522, -192.73, -66.7074, 1.2", "-15.9588, -194.407, -67.6158, 0.48", "-14.4273, -196.882, -69.1456, 0.48", "-13.4568, -198.615, -70.4492, 0.48", "-12.8762, -199.689, -71.3294, 0.6", "-11.6709, -201.972, -73.2573, 0.24", "-10.3547, -204.509, -75.485, 0.24", "-8.44532, -208.103, -78.5513, 0.72", "-6.2518, -211.873, -81.3954, 0.24", "-5.09195, -213.745, -82.782, 0.36", "-3.40249, -216.376, -84.647, 0.36", "-1.04424, -219.891, -86.9503, 0.36", "0.38369, -221.927, -88.1369, 0.72", "3.17126, -225.715, -90.016, 0.72", "6.1662, -229.611, -91.729, 0.36", "8.54887, -232.655, -93.0386, 0.12", "10.0567, -234.538, -93.7854, 0.12", "11.3249, -236.095, -94.2972, 0.12", "13.4066, -238.59, -95.0178, 0.6", "16.2754, -241.907, -95.8064, 0.12", "17.2862, -243.069, -95.9622, 0.6", "18.8162, -244.813, -96.1243, 0.24", "20.8565, -247.254, -96.2757, 0.72", "24.3015, -251.511, -96.4756, 0.12", "25.418, -252.863, -96.5413, 0.6", "28.7231, -256.752, -96.7542, 0.12", "29.5698, -257.762, -96.8135, 0.72", "31.8794, -260.555, -96.9871, 0.12", "33.2085, -262.165, -97.0944, 0.6", "40.0611, -270.448, -97.6884, 0.12", "41.475, -272.13, -97.8182, 0.72", "42.6179, -273.438, -97.9328, 0.24", "43.6321, -274.613, -98.0225, 0.96", "45.757, -277.012, -98.0189, 0.24", "47.3915, -278.838, -97.8757, 0.24", "48.8085, -280.569, -97.722, 0.84", "50.2416, -282.369, -97.5922, 0.24", "52.4591, -285.262, -97.443, 0.84", "54.9495, -288.662, -97.4273, 0.24", "56.4699, -290.848, -97.5097, 0.72", "59.1828, -295.049, -98.2248, 0.12", "59.5521, -295.703, -98.4446, 0.6", "60.9906, -298.441, -99.7055, 0.12", "62.0453, -300.541, -101.277, 0.6", "62.6789, -301.751, -102.377, 0.12", "64.6643, -305.242, -105.884, 0.96", "66.9506, -308.949, -109.72, 0.36", "68.0061, -310.62, -111.427, 0.6", "71.8174, -316.749, -117.529, 0.24", "73.2913, -319.232, -119.822, 0.84", "75.0265, -322.178, -122.276, 0.36", "76.5694, -324.791, -124.101, 0.24", "77.6669, -326.684, -125.256, 0.84", "80.3335, -331.454, -127.647, 0.36", "82.137, -334.642, -128.762, 0.12", "83.8423, -337.574, -129.701, 0.12", "85.5949, -340.354, -130.356, 0.12", "86.6811, -341.935, -130.63, 0.12", "88.0932, -343.884, -130.769, 0.6", "89.7869, -346.168, -130.617, 0.12", "91.1254, -348.043, -130.297, 0.12", "93.1465, -351.115, -129.822, 0.6", "94.4068, -353.312, -129.561, 0.36", "95.8886, -356.332, -129.326, 0.36", "97.0526, -359.258, -129.208, 0.12", "98.1272, -362.608, -129.111, 0.12", "99.1879, -366.812, -129.103, 0.12", "99.9486, -370.276, -129.234, 0.12", "100.603, -373.687, -129.417, 0.12", "101.109, -376.845, -129.675, 0.12", "101.488, -379.498, -129.952, 0.12", "101.765, -382.154, -130.224, 0.12" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-34.1045, -163.394, -41.2148, 0.72", "-35.0877, -166.341, -41.0189, 0.72", "-35.506, -167.743, -40.937, 0.72", "-36.1854, -170.122, -40.8677, 1.33", "-36.7658, -172.451, -40.8372, 0.36", "-37.0275, -173.849, -40.8834, 0.36", "-37.2072, -175.239, -40.957, 0.36", "-37.3325, -177.589, -41.163, 1.45", "-37.4013, -179.522, -41.2287, 0.48", "-37.4665, -181.787, -41.2128, 0.48", "-37.5777, -184.943, -41.0319, 1.57", "-37.7162, -187.43, -40.7931, 0.6", "-37.9245, -190.425, -40.4094, 1.81", "-38.3393, -195.411, -39.7157, 0.12", "-38.5993, -197.938, -39.3365, 1.57", "-39.0029, -200.957, -38.8797, 0.12", "-39.2348, -202.346, -38.6126, 0.12", "-39.4657, -203.634, -38.3558, 1.81", "-40.2485, -208.286, -37.6638, 0.48", "-40.6057, -210.595, -37.4749, 1.93", "-41.0054, -213.019, -37.3417, 0.48", "-41.6087, -216.556, -37.1556, 1.2", "-41.7102, -217.137, -37.1379, 2.05", "-42.5, -221.249, -37.0844, 0.36", "-42.7607, -222.426, -37.0883, 0.36", "-43.0385, -223.584, -37.0847, 0.36", "-43.6882, -226.217, -37.1731, 1.81", "-44.364, -228.925, -37.4127, 0.6", "-44.7137, -230.239, -37.4644, 1.93", "-45.2324, -232.039, -37.3218, 0.48", "-46.2708, -235.775, -37.0193, 2.17" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-12.2393, -70.9263, 22.9093, 0.84", "-12.9357, -72.4733, 22.838, 0.84", "-14.1, -74.0488, 22.88, 0.84", "-15.7592, -75.4082, 22.9969, 0.84", "-16.4068, -75.9388, 23.0425, 0.96", "-17.4837, -76.8211, 23.1184, 0.6", "-18.9169, -77.9953, 23.2194, 0.6", "-20.5945, -78.807, 23.3616, 0.48", "-22.711, -79.3003, 23.5699, 0.72", "-29.4291, -83.7637, 22.8176, 0.72", "-35.3391, -89.0005, 21.2419, 0.72", "-41.9464, -93.6635, 21.1074, 0.72", "-48.9375, -97.7802, 20.7814, 0.72", "-56.4654, -100.933, 21.0038, 0.72", "-63.6678, -104.683, 20.4602, 0.72", "-69.9784, -109.647, 21.2537, 0.72", "-76.574, -114.326, 21.3109, 0.72", "-83.2167, -118.868, 20.4204, 0.72", "-90.1245, -122.974, 19.251, 0.72", "-95.7305, -128.285, 16.9851, 0.72", "-101.963, -133.229, 15.6228, 0.72" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-12.2393, -70.9263, 22.9093, 0.96", "-14.4573, -74.7647, 21.3454, 0.96", "-16.8771, -79.2015, 19.8996, 0.84", "-17.9655, -81.1854, 19.3271, 0.84", "-18.7861, -82.5926, 18.8817, 0.72", "-20.1819, -84.9214, 18.1251, 0.72", "-21.0227, -86.3336, 17.6804, 0.96", "-22.1288, -88.2359, 17.1577, 0.84", "-23.8202, -91.0442, 16.4429, 0.72", "-26.2447, -94.7784, 15.4398, 0.96", "-27.8083, -97.0553, 14.7916, 0.72", "-29.2148, -99.0273, 14.2017, 0.6", "-30.6636, -101.063, 13.6201, 0.6", "-31.9061, -102.781, 13.1467, 0.6", "-33.6196, -105.116, 12.5771, 0.72", "-35.1562, -107.027, 12.0378, 0.6", "-36.9287, -108.904, 11.3052, 1.08", "-38.8003, -110.621, 10.4773, 0.84", "-40.6429, -112.113, 9.62733, 0.84", "-43.0825, -113.858, 8.49772, 0.72", "-46.422, -116.013, 6.78164, 0.72", "-48.5354, -117.215, 5.69814, 0.6", "-50.269, -118.086, 4.82219, 0.6", "-53.0679, -119.421, 3.49173, 3.01", "-54.9773, -120.411, 2.58649, 0.84", "-58.1384, -122.214, 1.20222, 0.6", "-59.5034, -123.07, 0.628876, 0.96", "-60.5419, -123.723, 0.181846, 0.36", "-62.3859, -124.833, -0.627084, 2.53", "-65.7086, -126.782, -2.01068, 0.6", "-66.9068, -127.433, -2.65687, 0.6", "-70.3116, -129.155, -4.90716, 0.48", "-71.5734, -129.782, -5.89002, 0.48", "-72.6288, -130.277, -6.85082, 0.48", "-73.1123, -130.487, -7.38396, 2.65", "-78.0442, -132.605, -12.9627, 0.24", "-80.1943, -133.557, -15.5168, 0.24", "-80.9895, -133.929, -16.4919, 2.05", "-83.9283, -135.303, -20.1816, 0.36", "-87.6255, -137.005, -24.6286, 2.05", "-89.6366, -137.948, -26.7979, 0.36", "-90.8358, -138.557, -27.8677, 1.45", "-93.5378, -140.006, -29.9452, 0.12", "-95.2148, -140.943, -31.161, 1.93", "-97.6343, -142.378, -32.6753, 0.12", "-99.5868, -143.639, -33.8725, 1.69", "-104.12, -146.754, -36.8566, 0.24", "-105.028, -147.424, -37.4825, 1.45", "-108.74, -150.273, -40.4174, 0.6", "-109.489, -150.863, -41.0627, 1.57", "-112.345, -153.202, -43.7649, 0.12", "-113.153, -153.875, -44.5803, 1.33", "-115.931, -156.275, -47.0247, 0.6", "-119.404, -159.37, -49.6465, 0.12", "-120.501, -160.365, -50.3243, 2.05", "-123.495, -163.145, -51.9905, 0.24", "-125.481, -165.129, -52.8584, 1.81", "-129.114, -169.022, -54.1617, 0.12", "-130.351, -170.422, -54.413, 1.81", "-133.253, -173.869, -54.6615, 0.12", "-134.097, -174.869, -54.7218, 1.81", "-135.889, -177.007, -54.7152, 0.12", "-136.618, -177.83, -54.8195, 2.05", "-137.944, -179.187, -55.3145, 0.36", "-138.645, -179.851, -55.6111, 0.48", "-139.867, -180.934, -56.2621, 0.24", "-140.444, -181.41, -56.6145, 0.84", "-144.275, -184.437, -59.1849, 0.36", "-145.395, -185.353, -59.9681, 1.2", "-147.314, -187.032, -61.3557, 0.12", "-149.53, -189.022, -63.0399, 0.12", "-150.703, -190.128, -63.915, 0.12", "-151.243, -190.644, -64.2848, 1.45", "-152.042, -191.439, -64.6884, 0.24", "-152.863, -192.216, -65.1483, 0.24", "-154.247, -193.395, -65.8435, 1.45", "-155.898, -194.678, -66.6714, 0.48", "-157.634, -195.946, -67.5519, 1.57", "-160.477, -197.981, -69.0031, 0.12", "-163.5, -200.146, -70.4855, 1.93", "-165.364, -201.483, -71.3908, 0.12", "-167.837, -203.373, -72.5204, 2.29", "-169.512, -204.774, -73.2736, 0.12", "-170.3, -205.509, -73.6427, 0.72", "-171.779, -207.04, -74.3797, 0.12", "-173.526, -209.164, -75.2682, 1.2", "-175.018, -211.261, -76.1473, 0.48", "-176.256, -213.214, -76.9075, 0.12", "-177.89, -215.89, -78.1094, 0.48", "-178.423, -216.747, -78.5117, 1.45", "-179.58, -218.59, -79.3797, 0.24", "-180.326, -219.706, -79.9635, 0.24", "-180.943, -220.548, -80.4649, 0.6", "-183.128, -223.263, -82.111, 0.6", "-183.922, -224.239, -82.6265, 0.12", "-185.219, -225.734, -83.4729, 0.12", "-187.826, -228.57, -85.0749, 0.12", "-188.597, -229.386, -85.5289, 1.2", "-189.666, -230.513, -86.1889, 1.2", "-191.256, -232.19, -87.1138, 0.24", "-193.388, -234.495, -88.3457, 1.69", "-194.441, -235.576, -89.0398, 2.05", "-196.216, -237.312, -90.294, 0.6", "-199.179, -240.168, -92.4915, 0.36", "-200.67, -241.587, -93.7144, 0.12", "-201.911, -242.744, -94.8029, 0.12", "-206.871, -247.313, -99.3966, 0.12", "-209.787, -249.941, -102.252, 0.24", "-211.964, -251.878, -104.436, 0.24", "-215.249, -254.772, -107.795, 0.24", "-217.552, -256.8, -110.279, 0.24", "-220.507, -259.365, -113.525, 0.24", "-221.974, -260.723, -115.139, 0.24" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-18.8893, 278.751, 5.52115, 0.6", "-17.3471, 288.684, 5.24664, 0.6" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-18.8893, 278.751, 5.52115, 0.6", "-17.5699, 287.634, 6.45339, 0.6" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-46.2708, -235.775, -37.0193, 0.36", "-49.1361, -239.315, -38.6791, 0.36", "-50.7005, -241.396, -39.4702, 0.36", "-51.522, -242.855, -40.0784, 0.72", "-52.2026, -244.596, -40.8945, 0.36", "-52.5478, -245.66, -41.3996, 0.12", "-52.7264, -246.503, -41.9139, 0.12", "-52.8534, -248.015, -42.8913, 0.48", "-52.9948, -252.011, -45.7302, 0.12", "-53.0789, -255.549, -48.3409, 0.12", "-53.0906, -256.701, -49.1834, 0.6", "-53.1959, -262.801, -53.5555, 0.48", "-53.2167, -264.109, -54.5175, 0.84", "-53.2686, -266.748, -56.4925, 0.72", "-53.3549, -268.124, -57.4775, 0.84", "-53.5475, -269.87, -58.6565, 0.24", "-53.6839, -270.732, -59.1583, 0.48" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-46.2708, -235.775, -37.0193, 0.36", "-47.0874, -238.343, -37.4312, 0.36", "-47.5825, -239.989, -37.8798, 0.36", "-48.1764, -241.833, -38.4273, 0.72", "-48.5975, -243.132, -38.805, 0.48", "-49.4862, -245.537, -39.3634, 0.84", "-50.6142, -248.383, -39.8958, 0.48", "-51.6244, -250.633, -40.0465, 1.08", "-52.3485, -252.205, -39.971, 0.36", "-53.1043, -253.82, -39.7326, 1.2", "-54.3892, -256.649, -39.0633, 0.24", "-55.0833, -258.407, -38.5753, 1.57", "-56.4269, -262.346, -37.3379, 0.6", "-56.9673, -264.247, -36.7768, 1.45", "-57.3257, -265.701, -36.4437, 0.24", "-57.865, -268.051, -36.088, 1.33", "-58.7732, -272.232, -35.8427, 0.48", "-59.1984, -273.854, -35.807, 1.33", "-59.893, -276.22, -35.934, 0.12", "-60.6542, -278.439, -36.0859, 0.12", "-61.4267, -280.274, -36.1867, 1.33", "-62.7715, -282.611, -36.178, 0.12", "-64.4789, -284.871, -35.9604, 1.45", "-66.2852, -287.016, -35.7185, 0.24", "-67.2352, -288.06, -35.4926, 0.24", "-69.3178, -290.348, -34.8261, 1.33", "-72.0979, -293.497, -33.6674, 0.24", "-73.7605, -295.443, -32.8502, 1.33", "-75.8166, -297.682, -31.7076, 0.48", "-78.277, -300.214, -30.1482, 0.36", "-80.0894, -302.095, -28.6895, 1.57", "-81.2421, -303.18, -27.4936, 0.6", "-82.0497, -303.936, -26.5, 0.6", "-84.9897, -306.472, -22.561, 1.2", "-85.7062, -307.045, -21.5853, 0.36", "-89.1494, -309.757, -16.9515, 1.69", "-93.0218, -312.843, -11.7321, 0.48", "-94.2542, -313.897, -10.048, 0.48", "-96.0105, -315.642, -7.4589, 0.36", "-96.7184, -316.584, -6.21946, 0.36", "-97.2013, -317.386, -5.25397, 0.12", "-97.6825, -319.095, -3.66026, 0.6", "-97.235, -322.784, -0.793615, 0.6", "-96.7351, -323.737, -0.0754068, 0.48", "-94.857, -325.123, 0.840776, 0.36", "-92.1614, -326.127, 1.51897, 0.12", "-90.1223, -326.495, 1.80778, 0.12", "-88.6848, -326.527, 2.15822, 0.6", "-84.2332, -326.085, 3.87341, 0.6", "-82.6408, -325.79, 4.86974, 0.24", "-81.4386, -325.478, 6.08297, 0.24", "-79.9235, -324.982, 8.05135, 0.24", "-75.9764, -323.39, 14.3753, 0.24", "-74.5283, -322.729, 17.3334, 0.24", "-74.0976, -322.506, 18.4914, 0.84", "-73.156, -322.032, 21.5622, 0.84", "-74.9161, -330.04, 28.4563, 0.84" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_40", "dend_39", "dend_27", "dend_25", "dend_12", "dend_7", "dend_0", "dend_42", "dend_41", "dend_31", "dend_28", "dend_26", "dend_22", "dend_13", "dend_11", "dend_8", "dend_6", "dend_1", "dend_35", "dend_32", "dend_30", "dend_29", "dend_24", "dend_23", "dend_19", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_36", "dend_34", "dend_33", "dend_21", "dend_20", "dend_18", "dend_15", "dend_4", "dend_3", "dend_38", "dend_37", "dend_17", "dend_16" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_40", "dend_39", "dend_27", "dend_25", "dend_12", "dend_7", "dend_0", "dend_42", "dend_41", "dend_31", "dend_28", "dend_26", "dend_22", "dend_13", "dend_11", "dend_8", "dend_6", "dend_1", "dend_35", "dend_32", "dend_30", "dend_29", "dend_24", "dend_23", "dend_19", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_36", "dend_34", "dend_33", "dend_21", "dend_20", "dend_18", "dend_15", "dend_4", "dend_3", "dend_38", "dend_37", "dend_17", "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "axon_0", "axon_0", "dend_42", "dend_41", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_33", "dend_21", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_38", "dend_37", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_LBC_b4586f425b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_12
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_39, dend_27, dend_25, dend_12, dend_7, dend_0, dend_42, dend_41, dend_31, dend_28, dend_26, dend_22, dend_13, dend_11, dend_8, dend_6, dend_1, dend_35, dend_32, dend_30, dend_29, dend_24, dend_23, dend_19, dend_14, dend_10, dend_9, dend_5, dend_2, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_4, dend_3, dend_38, dend_37, dend_17, dend_16]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_39, dend_27, dend_25, dend_12, dend_7, dend_0, dend_42, dend_41, dend_31, dend_28, dend_26, dend_22, dend_13, dend_11, dend_8, dend_6, dend_1, dend_35, dend_32, dend_30, dend_29, dend_24, dend_23, dend_19, dend_14, dend_10, dend_9, dend_5, dend_2, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_4, dend_3, dend_38, dend_37, dend_17, dend_16]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_36
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, axon_0, axon_0, dend_42, dend_41, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_38, dend_37, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_40(0), soma_0(0.44999997810555437)
    connect dend_39(0), soma_0(0.44999997810555437)
    connect dend_27(0), soma_0(0.44999997810555437)
    connect dend_25(0), soma_0(0.44999997810555437)
    connect dend_12(0), soma_0(0.44999997810555437)
    connect dend_7(0), soma_0(0.44999997810555437)
    connect dend_0(0), soma_0(0.44999997810555437)
    connect axon_0(0), soma_0(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 3.53699, 8.1767, -0.046517, 3.89204 ) }
    soma_0 { pt3dadd( 3.23089, 7.26926, -0.0420574, 6.96208 ) }
    soma_0 { pt3dadd( 2.92479, 6.36182, -0.0375978, 10.0575 ) }
    soma_0 { pt3dadd( 2.61869, 5.45437, -0.0331383, 12.1025 ) }
    soma_0 { pt3dadd( 2.31259, 4.54693, -0.0286787, 13.6233 ) }
    soma_0 { pt3dadd( 2.00649, 3.63948, -0.0242192, 14.3107 ) }
    soma_0 { pt3dadd( 1.70039, 2.73204, -0.0197596, 14.7168 ) }
    soma_0 { pt3dadd( 1.39429, 1.8246, -0.0153001, 15.1228 ) }
    soma_0 { pt3dadd( 1.08819, 0.917153, -0.0108405, 14.9289 ) }
    soma_0 { pt3dadd( 0.782089, 0.00970928, -0.00638094, 14.6123 ) }
    soma_0 { pt3dadd( 0.475989, -0.897735, -0.00192139, 14.2054 ) }
    soma_0 { pt3dadd( 0.16989, -1.80518, 0.00253817, 13.7906 ) }
    soma_0 { pt3dadd( -0.13621, -2.71262, 0.00699773, 13.1567 ) }
    soma_0 { pt3dadd( -0.442309, -3.62007, 0.0114573, 11.719 ) }
    soma_0 { pt3dadd( -0.748409, -4.52751, 0.0159168, 10.1965 ) }
    soma_0 { pt3dadd( -1.05451, -5.43495, 0.0203764, 8.66594 ) }
    soma_0 { pt3dadd( -1.36061, -6.3424, 0.024836, 7.15698 ) }
    soma_0 { pt3dadd( -1.66671, -7.24984, 0.0292955, 5.77138 ) }
    soma_0 { pt3dadd( -1.97281, -8.15729, 0.0337551, 4.37985 ) }
    soma_0 { pt3dadd( -2.27891, -9.06473, 0.0382146, 2.89161 ) }
    soma_0 { pt3dadd( -2.58501, -9.97217, 0.0426742, 1.70729 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 0.778487, -0.213754, 18.4829, 1.32 ) }
    dend_40 { pt3dadd( 0.0538969, 1.7763, 18.4985, 1.32 ) }
    dend_40 { pt3dadd( -0.649372, 4.20489, 18.5135, 1.32 ) }
    dend_40 { pt3dadd( -1.0312, 5.49426, 18.7011, 1.32 ) }
    dend_40 { pt3dadd( -1.5893, 7.17459, 19.0615, 0.96 ) }
    dend_40 { pt3dadd( -2.10587, 8.67963, 19.4279, 0.96 ) }
    dend_40 { pt3dadd( -2.60917, 10.1133, 19.7867, 0.96 ) }
    dend_40 { pt3dadd( -3.07105, 11.4454, 20.1619, 0.96 ) }
    dend_40 { pt3dadd( -4.15046, 14.7861, 21.1463, 0.6 ) }
    dend_40 { pt3dadd( -4.53865, 16.0684, 21.6747, 0.48 ) }
    dend_40 { pt3dadd( -4.98819, 17.5439, 22.4028, 0.48 ) }
    dend_40 { pt3dadd( -5.37413, 18.9822, 23.152, 0.48 ) }
    dend_40 { pt3dadd( -5.68524, 20.1948, 23.8074, 0.48 ) }
    dend_40 { pt3dadd( -5.98116, 21.5522, 24.5356, 0.48 ) }
    dend_40 { pt3dadd( -6.53551, 25.8652, 26.6202, 0.48 ) }
    dend_40 { pt3dadd( -6.58635, 26.6745, 27.0734, 0.48 ) }
    dend_40 { pt3dadd( -6.61888, 28.532, 28.3319, 0.48 ) }
    dend_40 { pt3dadd( -8.25167, 36.6613, 32.7432, 0.48 ) }
    dend_40 { pt3dadd( -8.41531, 44.7639, 37.495, 0.48 ) }
    dend_40 { pt3dadd( -7.5603, 53.3891, 40.9861, 0.48 ) }
    dend_40 { pt3dadd( -6.75909, 61.3907, 45.8612, 0.48 ) }
    dend_40 { pt3dadd( -4.63571, 69.5016, 50.098, 0.48 ) }
    dend_40 { pt3dadd( -2.29152, 77.612, 54.2174, 0.48 ) }
    dend_40 { pt3dadd( 0.703343, 84.796, 59.6208, 0.48 ) }
    dend_40 { pt3dadd( 5.09698, 92.2066, 63.5193, 0.48 ) }
    dend_40 { pt3dadd( 9.70877, 100.097, 65.7779, 0.48 ) }
    dend_40 { pt3dadd( 13.7805, 108.307, 67.8002, 0.48 ) }
    dend_40 { pt3dadd( 17.9721, 116.487, 69.7043, 0.48 ) }
    dend_40 { pt3dadd( 22.5605, 124.192, 72.6237, 0.48 ) }
    dend_40 { pt3dadd( 26.6999, 131.394, 77.1784, 0.48 ) }
    dend_40 { pt3dadd( 29.1678, 139.061, 82.0904, 0.48 ) }
    dend_40 { pt3dadd( 30.3979, 146.351, 88.0025, 0.48 ) }
    dend_40 { pt3dadd( 31.4126, 152.955, 94.7846, 0.48 ) }
    dend_40 { pt3dadd( 33.659, 159.557, 101.266, 0.48 ) }
    dend_40 { pt3dadd( 36.2539, 165.591, 108.214, 0.48 ) }
    dend_40 { pt3dadd( 38.2312, 171.575, 115.409, 0.48 ) }
    dend_40 { pt3dadd( 39.8026, 177.66, 122.61, 0.48 ) }
    dend_40 { pt3dadd( 40.3206, 183.503, 130.176, 0.48 ) }
    dend_40 { pt3dadd( 40.4533, 189.388, 137.723, 0.48 ) }
    dend_40 { pt3dadd( 39.3317, 195.447, 145.032, 0.48 ) }
    dend_40 { pt3dadd( 39.8607, 200.671, 153.084, 0.48 ) }
    dend_40 { pt3dadd( 38.7286, 206.077, 160.938, 0.48 ) }
    dend_40 { pt3dadd( 38.2077, 211.427, 168.899, 0.48 ) }
    dend_40 { pt3dadd( 36.0904, 216.692, 176.654, 0.48 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 65/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -5.82151, 2.40824, -19.4171, 1.45 ) }
    dend_39 { pt3dadd( -7.11049, 2.02371, -21.2311, 1.45 ) }
    dend_39 { pt3dadd( -9.10139, 1.36986, -23.9284, 1.2 ) }
    dend_39 { pt3dadd( -14.1991, -0.468652, -30.191, 1.2 ) }
    dend_39 { pt3dadd( -16.6182, -1.3857, -33.0725, 0.84 ) }
    dend_39 { pt3dadd( -19.1923, -2.38517, -35.8912, 2.05 ) }
    dend_39 { pt3dadd( -23.5474, -4.00695, -40.6815, 0.36 ) }
    dend_39 { pt3dadd( -25.4285, -4.67931, -42.752, 1.45 ) }
    dend_39 { pt3dadd( -27.6379, -5.42198, -45.1063, 0.24 ) }
    dend_39 { pt3dadd( -31.06, -6.41147, -48.4453, 1.81 ) }
    dend_39 { pt3dadd( -34.1672, -7.30859, -51.4921, 0.48 ) }
    dend_39 { pt3dadd( -39.071, -8.57814, -56.2394, 1.57 ) }
    dend_39 { pt3dadd( -41.3741, -8.98397, -58.3952, 0.36 ) }
    dend_39 { pt3dadd( -42.0739, -9.05147, -59.0911, 1.08 ) }
    dend_39 { pt3dadd( -44.7967, -9.12367, -61.8501, 0.12 ) }
    dend_39 { pt3dadd( -46.5322, -9.08837, -63.4569, 1.69 ) }
    dend_39 { pt3dadd( -48.4314, -8.97482, -65.1245, 0.24 ) }
    dend_39 { pt3dadd( -50.8649, -8.8697, -66.8841, 1.08 ) }
    dend_39 { pt3dadd( -52.9849, -8.81017, -68.3318, 0.24 ) }
    dend_39 { pt3dadd( -54.66, -8.85243, -69.3807, 0.24 ) }
    dend_39 { pt3dadd( -58.2042, -9.11763, -71.4189, 0.24 ) }
    dend_39 { pt3dadd( -60.0459, -9.33205, -72.4449, 1.57 ) }
    dend_39 { pt3dadd( -62.6711, -9.70024, -73.8875, 0.48 ) }
    dend_39 { pt3dadd( -64.9245, -10.0593, -75.159, 1.69 ) }
    dend_39 { pt3dadd( -68.327, -10.6377, -77.0868, 0.12 ) }
    dend_39 { pt3dadd( -70.121, -10.9362, -78.2277, 1.57 ) }
    dend_39 { pt3dadd( -74.3707, -11.5954, -81.0953, 0.36 ) }
    dend_39 { pt3dadd( -77.2605, -11.9519, -83.1828, 1.69 ) }
    dend_39 { pt3dadd( -80.0656, -12.19, -85.3983, 0.36 ) }
    dend_39 { pt3dadd( -81.5734, -12.2624, -86.6305, 1.57 ) }
    dend_39 { pt3dadd( -86.3117, -12.2176, -90.5953, 0.12 ) }
    dend_39 { pt3dadd( -87.1283, -12.1743, -91.3085, 1.33 ) }
    dend_39 { pt3dadd( -91.2742, -11.7809, -95.0244, 0.12 ) }
    dend_39 { pt3dadd( -92.7552, -11.612, -96.3617, 0.84 ) }
    dend_39 { pt3dadd( -94.2461, -11.4041, -97.8294, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( -95.2085, -11.2582, -98.8114, 1.69 ) }
    dend_39 { pt3dadd( -99.5619, -10.5374, -103.038, 0.12 ) }
    dend_39 { pt3dadd( -101.017, -10.2837, -104.399, 1.57 ) }
    dend_39 { pt3dadd( -104.176, -9.72553, -107.11, 0.36 ) }
    dend_39 { pt3dadd( -106.593, -9.30722, -109.038, 1.08 ) }
    dend_39 { pt3dadd( -108.412, -9.04176, -110.521, 0.24 ) }
    dend_39 { pt3dadd( -109.619, -8.92059, -111.451, 1.57 ) }
    dend_39 { pt3dadd( -111.784, -8.8324, -113.01, 0.36 ) }
    dend_39 { pt3dadd( -112.96, -8.85837, -113.888, 0.36 ) }
    dend_39 { pt3dadd( -114.039, -9.04375, -114.926, 1.57 ) }
    dend_39 { pt3dadd( -116.834, -9.91007, -118.237, 0.12 ) }
    dend_39 { pt3dadd( -117.509, -10.2048, -119.23, 1.33 ) }
    dend_39 { pt3dadd( -119.35, -11.2175, -122.279, 0.36 ) }
    dend_39 { pt3dadd( -119.579, -11.366, -122.721, 0.96 ) }
    dend_39 { pt3dadd( -123.068, -13.8442, -130.136, 0.36 ) }
    dend_39 { pt3dadd( -123.951, -14.5348, -132.225, 0.96 ) }
    dend_39 { pt3dadd( -124.896, -15.3239, -134.532, 0.24 ) }
    dend_39 { pt3dadd( -125.236, -15.613, -135.365, 0.84 ) }
    dend_39 { pt3dadd( -127.505, -17.4703, -140.659, 0.48 ) }
    dend_39 { pt3dadd( -128.306, -18.0839, -142.4, 1.57 ) }
    dend_39 { pt3dadd( -132.335, -20.8774, -150.141, 0.12 ) }
    dend_39 { pt3dadd( -133.056, -21.371, -151.523, 0.12 ) }
    dend_39 { pt3dadd( -133.453, -21.6328, -152.256, 1.45 ) }
    dend_39 { pt3dadd( -134.702, -22.4294, -154.482, 0.24 ) }
    dend_39 { pt3dadd( -135.442, -22.8868, -155.583, 0.24 ) }
    dend_39 { pt3dadd( -136.266, -23.3115, -156.638, 0.96 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 26/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -6.17151, 5.17275, -6.6171, 1.57 ) }
    dend_27 { pt3dadd( -10.3459, 10.9807, -13.5316, 1.33 ) }
    dend_27 { pt3dadd( -11.64, 12.7813, -15.6754, 1.33 ) }
    dend_27 { pt3dadd( -12.1478, 13.4878, -16.5165, 1.33 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 30/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -4.59152, -3.90925, -14.8471, 1.57 ) }
    dend_25 { pt3dadd( -8.81435, -5.67909, -15.1145, 0.48 ) }
    dend_25 { pt3dadd( -12.552, -6.94228, -15.5989, 0.48 ) }
    dend_25 { pt3dadd( -14.248, -7.47017, -15.8545, 0.48 ) }
    dend_25 { pt3dadd( -16.4648, -8.01966, -16.3934, 0.48 ) }
    dend_25 { pt3dadd( -20.5276, -8.87328, -17.6724, 0.48 ) }
    dend_25 { pt3dadd( -24.6304, -9.68638, -19.1044, 0.48 ) }
    dend_25 { pt3dadd( -27.6272, -10.0925, -20.5639, 0.24 ) }
    dend_25 { pt3dadd( -29.5685, -10.2776, -21.6948, 0.24 ) }
    dend_25 { pt3dadd( -34.1679, -10.6578, -24.7667, 0.48 ) }
    dend_25 { pt3dadd( -36.2273, -10.8257, -26.2834, 0.48 ) }
    dend_25 { pt3dadd( -37.5882, -10.9593, -27.3795, 0.48 ) }
    dend_25 { pt3dadd( -42.2009, -11.4631, -31.1661, 1.57 ) }
    dend_25 { pt3dadd( -42.8476, -11.5573, -31.8073, 1.57 ) }
    dend_25 { pt3dadd( -45.3394, -12.0489, -34.4359, 0.48 ) }
    dend_25 { pt3dadd( -46.1708, -12.2608, -35.3193, 0.48 ) }
    dend_25 { pt3dadd( -46.5158, -12.3492, -35.6912, 0.48 ) }
    dend_25 { pt3dadd( -50.103, -13.297, -39.5022, 2.05 ) }
    dend_25 { pt3dadd( -56.5026, -15.1156, -45.9576, 0.72 ) }
    dend_25 { pt3dadd( -58.7604, -15.7875, -48.1985, 0.72 ) }
    dend_25 { pt3dadd( -61.3623, -16.5988, -50.6292, 0.48 ) }
    dend_25 { pt3dadd( -62.0556, -16.8153, -51.2523, 0.48 ) }
    dend_25 { pt3dadd( -63.7562, -17.3358, -52.7275, 0.48 ) }
    dend_25 { pt3dadd( -64.9806, -17.688, -53.7444, 0.96 ) }
    dend_25 { pt3dadd( -69.9049, -19.0184, -57.7048, 0.48 ) }
    dend_25 { pt3dadd( -71.9418, -19.5734, -59.3838, 0.24 ) }
    dend_25 { pt3dadd( -74.7689, -20.395, -61.9141, 1.33 ) }
    dend_25 { pt3dadd( -78.76, -21.5901, -65.6033, 0.48 ) }
    dend_25 { pt3dadd( -82.3112, -22.6461, -69.0267, 0.48 ) }
    dend_25 { pt3dadd( -85.6361, -23.6387, -72.2521, 1.45 ) }
    dend_25 { pt3dadd( -87.5877, -24.2198, -74.0448, 0.48 ) }
    dend_25 { pt3dadd( -92.0821, -25.4871, -78.4913, 1.45 ) }
    dend_25 { pt3dadd( -93.901, -25.9249, -80.3805, 0.48 ) }
    dend_25 { pt3dadd( -96.2116, -26.3754, -82.6028, 0.48 ) }
    dend_25 { pt3dadd( -97.1426, -26.4918, -83.4952, 0.96 ) }
    dend_25 { pt3dadd( -99.056, -26.6178, -85.2671, 0.12 ) }
    dend_25 { pt3dadd( -105.662, -26.7537, -91.447, 0.12 ) }
    dend_25 { pt3dadd( -110.594, -26.6757, -95.8639, 0.12 ) }
    dend_25 { pt3dadd( -115.094, -26.4786, -100.432, 1.33 ) }
    dend_25 { pt3dadd( -121.136, -26.1114, -107.0, 0.12 ) }
    dend_25 { pt3dadd( -122.346, -26.0072, -108.326, 0.6 ) }
    dend_25 { pt3dadd( -124.037, -25.8406, -110.251, 0.12 ) }
    dend_25 { pt3dadd( -124.232, -25.82, -110.46, 0.72 ) }
    dend_25 { pt3dadd( -130.671, -25.1531, -117.598, 0.12 ) }
    dend_25 { pt3dadd( -131.967, -25.0597, -119.078, 1.57 ) }
    dend_25 { pt3dadd( -137.901, -24.7332, -125.532, 0.12 ) }
    dend_25 { pt3dadd( -140.317, -24.6493, -128.136, 1.2 ) }
    dend_25 { pt3dadd( -141.829, -24.6615, -129.963, 0.12 ) }
    dend_25 { pt3dadd( -142.519, -24.6908, -130.805, 1.08 ) }
    dend_25 { pt3dadd( -148.388, -25.2874, -138.385, 0.12 ) }
    dend_25 { pt3dadd( -149.404, -25.4418, -139.801, 0.6 ) }
    dend_25 { pt3dadd( -149.631, -25.4862, -140.159, 0.6 ) }
    dend_25 { pt3dadd( -157.532, -26.9182, -152.617, 0.12 ) }
    dend_25 { pt3dadd( -160.477, -27.4049, -157.181, 0.6 ) }
    dend_25 { pt3dadd( -164.524, -27.9524, -163.148, 0.12 ) }
    dend_25 { pt3dadd( -165.535, -28.0577, -164.511, 1.2 ) }
    dend_25 { pt3dadd( -173.589, -28.7995, -174.669, 0.12 ) }
    dend_25 { pt3dadd( -174.387, -28.8605, -175.535, 0.72 ) }
    dend_25 { pt3dadd( -176.817, -28.9942, -177.636, 0.12 ) }
    dend_25 { pt3dadd( -178.038, -29.0627, -178.635, 1.08 ) }
    dend_25 { pt3dadd( -179.729, -29.1522, -179.743, 0.12 ) }
    dend_25 { pt3dadd( -185.281, -29.5454, -183.241, 1.08 ) }
    dend_25 { pt3dadd( -189.603, -29.9721, -185.52, 0.12 ) }
    dend_25 { pt3dadd( -190.077, -30.0201, -185.771, 0.6 ) }
    dend_25 { pt3dadd( -193.675, -30.394, -187.664, 0.12 ) }
    dend_25 { pt3dadd( -194.498, -30.474, -188.124, 1.69 ) }
    dend_25 { pt3dadd( -202.075, -31.1831, -192.081, 0.12 ) }
    dend_25 { pt3dadd( -203.049, -31.265, -192.697, 1.45 ) }
    dend_25 { pt3dadd( -206.539, -31.5419, -195.441, 0.12 ) }
    dend_25 { pt3dadd( -207.457, -31.5983, -196.197, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_25 { pt3dadd( -212.032, -31.8216, -200.152, 0.12 ) }
    dend_25 { pt3dadd( -214.441, -31.9257, -202.341, 0.84 ) }
    dend_25 { pt3dadd( -224.618, -32.3706, -211.98, 0.12 ) }
    dend_25 { pt3dadd( -225.999, -32.4634, -213.368, 0.48 ) }
    dend_25 { pt3dadd( -228.881, -32.762, -216.455, 0.12 ) }
    dend_25 { pt3dadd( -229.545, -32.8664, -217.237, 0.6 ) }
    dend_25 { pt3dadd( -233.871, -33.652, -222.307, 0.12 ) }
    dend_25 { pt3dadd( -234.243, -33.7298, -222.773, 1.33 ) }
    dend_25 { pt3dadd( -235.883, -34.3041, -224.698, 0.12 ) }
    dend_25 { pt3dadd( -236.586, -34.645, -225.748, 0.12 ) }
    dend_25 { pt3dadd( -239.276, -36.7305, -231.63, 0.12 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 11/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -4.21151, -5.74275, -5.6771, 2.89 ) }
    dend_12 { pt3dadd( -4.96917, -10.3792, -5.6771, 2.89 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 13/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 5.46849, 5.34375, -3.4871, 1.08 ) }
    dend_7 { pt3dadd( 6.99458, 6.2173, -3.51634, 0.84 ) }
    dend_7 { pt3dadd( 8.03648, 6.80025, -3.37049, 0.72 ) }
    dend_7 { pt3dadd( 10.2365, 8.03122, -3.0625, 1.08 ) }
    dend_7 { pt3dadd( 11.7609, 8.88413, -2.8491, 1.08 ) }
    dend_7 { pt3dadd( 16.2596, 11.4012, -2.21933, 1.08 ) }
    dend_7 { pt3dadd( 17.5956, 12.1487, -2.03231, 0.84 ) }
    dend_7 { pt3dadd( 22.8603, 14.8666, -1.17665, 1.2 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 21/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.38151, -10.1318, 12.3429, 2.05 ) }
    dend_0 { pt3dadd( -2.12685, -12.0421, 12.3429, 2.05 ) }
    dend_0 { pt3dadd( -1.91791, -13.6096, 12.3429, 2.41 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 24/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.58501, -9.97217, 0.0426742, 1.0273 ) }
    axon_0 { pt3dadd( -7.37941, -24.1853, 0.0426742, 1.0273 ) }
    axon_0 { pt3dadd( -12.1738, -38.3985, 0.0426742, 1.0273 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 27/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 36.0904, 216.692, 176.654, 0.6 ) }
    dend_42 { pt3dadd( 38.9717, 225.489, 183.222, 0.6 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 29/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 36.0904, 216.692, 176.654, 0.6 ) }
    dend_41 { pt3dadd( 37.1719, 225.805, 183.209, 0.6 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 31/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -12.1478, 13.4878, -16.5165, 1.33 ) }
    dend_31 { pt3dadd( -12.4404, 13.8627, -16.5098, 1.33 ) }
    dend_31 { pt3dadd( -15.3493, 17.5906, -16.443, 1.81 ) }
    dend_31 { pt3dadd( -18.9701, 22.2306, -16.3598, 0.96 ) }
    dend_31 { pt3dadd( -21.5943, 25.5936, -16.2996, 1.57 ) }
    dend_31 { pt3dadd( -21.9043, 25.9909, -16.2924, 1.57 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 37/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -12.1478, 13.4878, -16.5165, 0.84 ) }
    dend_28 { pt3dadd( -18.5664, 15.9486, -15.6476, 0.84 ) }
    dend_28 { pt3dadd( -21.5887, 16.9872, -15.3489, 0.84 ) }
    dend_28 { pt3dadd( -24.8416, 18.0119, -14.8672, 0.84 ) }
    dend_28 { pt3dadd( -25.9831, 18.3302, -14.6763, 0.36 ) }
    dend_28 { pt3dadd( -27.681, 18.6856, -14.3948, 0.84 ) }
    dend_28 { pt3dadd( -29.178, 18.9035, -14.1939, 0.36 ) }
    dend_28 { pt3dadd( -31.5083, 18.9931, -14.1101, 1.45 ) }
    dend_28 { pt3dadd( -34.6038, 18.8364, -13.817, 0.72 ) }
    dend_28 { pt3dadd( -36.2372, 18.656, -13.5767, 0.48 ) }
    dend_28 { pt3dadd( -39.8814, 18.0464, -13.028, 2.65 ) }
    dend_28 { pt3dadd( -42.28, 17.5213, -12.6185, 0.48 ) }
    dend_28 { pt3dadd( -43.933, 17.0982, -12.3676, 0.48 ) }
    dend_28 { pt3dadd( -46.4454, 16.3317, -12.0884, 0.72 ) }
    dend_28 { pt3dadd( -47.6149, 15.918, -11.998, 0.24 ) }
    dend_28 { pt3dadd( -48.8282, 15.4592, -11.8556, 0.24 ) }
    dend_28 { pt3dadd( -50.578, 14.7864, -11.5658, 1.33 ) }
    dend_28 { pt3dadd( -52.3615, 14.1391, -11.2244, 0.36 ) }
    dend_28 { pt3dadd( -53.7684, 13.644, -11.0693, 1.2 ) }
    dend_28 { pt3dadd( -55.4457, 13.1143, -11.0245, 0.24 ) }
    dend_28 { pt3dadd( -57.3136, 12.5718, -11.0306, 1.81 ) }
    dend_28 { pt3dadd( -59.1121, 12.1071, -11.1208, 0.12 ) }
    dend_28 { pt3dadd( -60.6577, 11.7198, -11.2339, 1.2 ) }
    dend_28 { pt3dadd( -62.7878, 11.2276, -11.3384, 0.12 ) }
    dend_28 { pt3dadd( -63.6926, 11.0429, -11.417, 1.2 ) }
    dend_28 { pt3dadd( -65.3464, 10.7738, -11.7099, 0.12 ) }
    dend_28 { pt3dadd( -67.2317, 10.4922, -12.206, 2.05 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 64/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -239.276, -36.7305, -231.63, 0.6 ) }
    dend_26 { pt3dadd( -239.562, -36.5888, -232.396, 0.6 ) }
    dend_26 { pt3dadd( -241.16, -35.481, -236.767, 0.96 ) }
    dend_26 { pt3dadd( -242.883, -34.0789, -241.909, 0.12 ) }
    dend_26 { pt3dadd( -243.062, -33.933, -242.444, 1.69 ) }
    dend_26 { pt3dadd( -243.843, -33.2974, -244.776, 0.36 ) }
    dend_26 { pt3dadd( -244.0, -33.1689, -245.247, 1.08 ) }
    dend_26 { pt3dadd( -245.442, -31.8056, -249.784, 0.12 ) }
    dend_26 { pt3dadd( -246.508, -30.5712, -252.987, 1.08 ) }
    // Section: dend_22, id: dend_22, parent: dend_12 (entry count 73/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -4.96917, -10.3792, -5.6771, 2.04 ) }
    dend_22 { pt3dadd( -3.08188, -14.739, -12.785, 2.04 ) }
    dend_22 { pt3dadd( -2.7275, -15.5576, -14.1196, 2.04 ) }
    dend_22 { pt3dadd( -2.35066, -16.4281, -15.5389, 1.8 ) }
    dend_22 { pt3dadd( -2.07765, -17.0588, -16.5671, 1.8 ) }
    dend_22 { pt3dadd( -1.72968, -17.8626, -17.8776, 1.8 ) }
    dend_22 { pt3dadd( -0.451716, -20.8148, -22.6906, 1.8 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 80/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.96917, -10.3792, -5.6771, 2.89 ) }
    dend_13 { pt3dadd( -5.00352, -10.6529, -5.63866, 2.89 ) }
    dend_13 { pt3dadd( -5.76545, -16.7247, -4.78598, 1.81 ) }
    dend_13 { pt3dadd( -6.11473, -19.5081, -4.3951, 1.81 ) }
    dend_13 { pt3dadd( -6.47242, -22.3585, -3.9948, 2.41 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 85/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 22.8603, 14.8666, -1.17665, 0.36 ) }
    dend_11 { pt3dadd( 26.5004, 16.0373, -1.50688, 0.36 ) }
    dend_11 { pt3dadd( 30.1399, 17.1558, -2.13944, 0.36 ) }
    dend_11 { pt3dadd( 34.9512, 18.5752, -3.14966, 0.36 ) }
    dend_11 { pt3dadd( 39.4929, 19.8924, -4.15493, 0.36 ) }
    dend_11 { pt3dadd( 42.7459, 20.8133, -4.87487, 0.84 ) }
    dend_11 { pt3dadd( 47.2612, 22.1561, -5.95495, 0.6 ) }
    dend_11 { pt3dadd( 50.6582, 23.2064, -6.8946, 0.6 ) }
    dend_11 { pt3dadd( 52.7125, 23.8794, -7.50235, 0.48 ) }
    dend_11 { pt3dadd( 56.2319, 25.0655, -8.56211, 0.48 ) }
    dend_11 { pt3dadd( 58.901, 25.9244, -9.32518, 0.96 ) }
    dend_11 { pt3dadd( 64.6893, 27.7618, -10.731, 0.72 ) }
    dend_11 { pt3dadd( 67.1788, 28.5332, -11.3722, 1.08 ) }
    dend_11 { pt3dadd( 68.8968, 29.0637, -11.8786, 0.72 ) }
    dend_11 { pt3dadd( 71.3927, 29.7835, -12.7367, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_11 { pt3dadd( 73.4138, 30.2904, -13.5025, 0.6 ) }
    dend_11 { pt3dadd( 75.6748, 30.792, -14.3792, 1.45 ) }
    dend_11 { pt3dadd( 82.2379, 32.0021, -16.8084, 0.84 ) }
    dend_11 { pt3dadd( 84.6328, 32.4615, -17.5924, 0.48 ) }
    dend_11 { pt3dadd( 87.1322, 32.9626, -18.2697, 1.33 ) }
    dend_11 { pt3dadd( 89.627, 33.5016, -18.7958, 0.48 ) }
    dend_11 { pt3dadd( 91.8651, 34.0043, -19.2064, 1.2 ) }
    dend_11 { pt3dadd( 94.3799, 34.559, -19.5528, 0.36 ) }
    dend_11 { pt3dadd( 97.606, 35.2823, -19.9301, 1.57 ) }
    dend_11 { pt3dadd( 102.361, 36.4079, -20.7463, 0.36 ) }
    dend_11 { pt3dadd( 104.568, 36.969, -21.3622, 1.33 ) }
    dend_11 { pt3dadd( 108.378, 37.9811, -22.6847, 0.36 ) }
    dend_11 { pt3dadd( 110.366, 38.5504, -23.5195, 1.45 ) }
    dend_11 { pt3dadd( 114.978, 40.0327, -25.6578, 0.24 ) }
    dend_11 { pt3dadd( 117.045, 40.7513, -26.7652, 1.45 ) }
    dend_11 { pt3dadd( 123.563, 43.2937, -30.6162, 0.48 ) }
    dend_11 { pt3dadd( 125.316, 44.0206, -31.6729, 1.81 ) }
    dend_11 { pt3dadd( 128.986, 45.5879, -33.8393, 0.6 ) }
    dend_11 { pt3dadd( 131.986, 46.9302, -35.6014, 0.24 ) }
    dend_11 { pt3dadd( 136.197, 48.9521, -38.221, 0.96 ) }
    dend_11 { pt3dadd( 141.362, 51.59, -41.6037, 0.48 ) }
    dend_11 { pt3dadd( 143.681, 52.8563, -43.2179, 0.48 ) }
    dend_11 { pt3dadd( 145.028, 53.5894, -44.208, 0.48 ) }
    dend_11 { pt3dadd( 146.472, 54.2902, -45.323, 1.33 ) }
    dend_11 { pt3dadd( 150.765, 56.0277, -48.8107, 0.12 ) }
    dend_11 { pt3dadd( 152.069, 56.4602, -49.9122, 1.33 ) }
    dend_11 { pt3dadd( 155.366, 57.2969, -52.8439, 0.48 ) }
    dend_11 { pt3dadd( 156.8, 57.5881, -54.1479, 0.48 ) }
    dend_11 { pt3dadd( 161.532, 58.372, -58.2887, 0.48 ) }
    dend_11 { pt3dadd( 164.531, 58.6858, -60.577, 0.48 ) }
    dend_11 { pt3dadd( 168.018, 59.0289, -62.8212, 0.72 ) }
    dend_11 { pt3dadd( 169.346, 59.2152, -63.5772, 0.12 ) }
    dend_11 { pt3dadd( 170.534, 59.4535, -64.1261, 0.96 ) }
    dend_11 { pt3dadd( 172.595, 60.0342, -64.9007, 0.36 ) }
    dend_11 { pt3dadd( 176.81, 61.6019, -66.2108, 0.36 ) }
    dend_11 { pt3dadd( 181.573, 63.6935, -67.5329, 0.12 ) }
    dend_11 { pt3dadd( 186.367, 65.8263, -68.5906, 0.12 ) }
    dend_11 { pt3dadd( 190.005, 67.3704, -69.3097, 0.12 ) }
    dend_11 { pt3dadd( 192.938, 68.5201, -69.9908, 0.12 ) }
    dend_11 { pt3dadd( 196.158, 69.6739, -70.7797, 0.12 ) }
    dend_11 { pt3dadd( 197.893, 70.2122, -71.158, 0.12 ) }
    dend_11 { pt3dadd( 202.283, 71.1901, -72.1642, 0.12 ) }
    dend_11 { pt3dadd( 205.16, 71.6549, -72.8384, 0.12 ) }
    dend_11 { pt3dadd( 212.794, 72.5908, -74.8227, 0.12 ) }
    dend_11 { pt3dadd( 214.086, 72.701, -75.2468, 0.96 ) }
    dend_11 { pt3dadd( 218.374, 72.9885, -76.7717, 0.24 ) }
    dend_11 { pt3dadd( 222.877, 73.2443, -78.6492, 1.08 ) }
    dend_11 { pt3dadd( 226.658, 73.4125, -80.4032, 0.24 ) }
    dend_11 { pt3dadd( 231.653, 73.4989, -82.8548, 0.24 ) }
    dend_11 { pt3dadd( 237.207, 73.3782, -85.5791, 0.24 ) }
    dend_11 { pt3dadd( 239.301, 73.2956, -86.6518, 1.2 ) }
    dend_11 { pt3dadd( 243.644, 73.0054, -88.897, 0.24 ) }
    dend_11 { pt3dadd( 250.039, 72.4208, -91.9115, 0.24 ) }
    dend_11 { pt3dadd( 252.853, 72.0944, -93.2355, 0.24 ) }
    dend_11 { pt3dadd( 254.377, 71.8776, -93.8359, 0.84 ) }
    dend_11 { pt3dadd( 256.366, 71.5774, -94.5208, 0.24 ) }
    dend_11 { pt3dadd( 259.478, 71.0988, -95.5781, 0.24 ) }
    dend_11 { pt3dadd( 261.084, 70.8537, -96.073, 0.24 ) }
    dend_11 { pt3dadd( 264.486, 70.3671, -97.0486, 1.69 ) }
    dend_11 { pt3dadd( 267.934, 69.901, -97.9315, 0.24 ) }
    dend_11 { pt3dadd( 272.328, 69.2758, -99.2027, 0.24 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 61/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 22.8603, 14.8666, -1.17665, 0.72 ) }
    dend_8 { pt3dadd( 24.0632, 16.1462, -0.181258, 0.72 ) }
    dend_8 { pt3dadd( 25.0069, 17.2455, 0.584362, 0.96 ) }
    dend_8 { pt3dadd( 27.1109, 19.7604, 2.74538, 0.96 ) }
    dend_8 { pt3dadd( 27.9138, 20.6516, 3.56113, 0.84 ) }
    dend_8 { pt3dadd( 32.2818, 25.1261, 7.75382, 0.6 ) }
    dend_8 { pt3dadd( 33.6133, 26.4373, 8.99304, 0.6 ) }
    dend_8 { pt3dadd( 34.6917, 27.4445, 9.94549, 0.6 ) }
    dend_8 { pt3dadd( 38.7108, 30.9788, 13.4333, 0.48 ) }
    dend_8 { pt3dadd( 40.4227, 32.3809, 14.8952, 0.48 ) }
    dend_8 { pt3dadd( 42.0785, 33.6266, 16.3018, 0.36 ) }
    dend_8 { pt3dadd( 43.8964, 34.7776, 17.7256, 0.36 ) }
    dend_8 { pt3dadd( 44.5939, 35.1464, 18.2165, 0.36 ) }
    dend_8 { pt3dadd( 45.8962, 35.7931, 19.0457, 0.36 ) }
    dend_8 { pt3dadd( 47.9267, 36.9376, 20.1386, 0.36 ) }
    dend_8 { pt3dadd( 48.6019, 37.4004, 20.5895, 0.36 ) }
    dend_8 { pt3dadd( 49.6117, 38.2346, 21.3575, 0.36 ) }
    dend_8 { pt3dadd( 50.7967, 39.1992, 22.2488, 0.36 ) }
    dend_8 { pt3dadd( 52.654, 40.7987, 23.6898, 0.12 ) }
    dend_8 { pt3dadd( 53.5214, 41.7227, 24.4062, 0.12 ) }
    dend_8 { pt3dadd( 54.2006, 42.7578, 25.0419, 0.12 ) }
    dend_8 { pt3dadd( 54.9839, 44.3075, 25.9759, 0.6 ) }
    dend_8 { pt3dadd( 59.6036, 49.034, 30.5483, 0.6 ) }
    dend_8 { pt3dadd( 64.9681, 53.7377, 34.2515, 0.6 ) }
    dend_8 { pt3dadd( 70.4988, 58.6849, 37.3016, 0.6 ) }
    dend_8 { pt3dadd( 75.3149, 63.3559, 41.7323, 0.6 ) }
    dend_8 { pt3dadd( 79.6617, 68.6744, 45.8266, 0.6 ) }
    dend_8 { pt3dadd( 82.8421, 74.3075, 50.4869, 0.6 ) }
    dend_8 { pt3dadd( 86.0542, 79.4138, 55.758, 0.6 ) }
    dend_8 { pt3dadd( 88.4878, 84.2393, 61.6967, 0.6 ) }
    dend_8 { pt3dadd( 89.8978, 89.229, 67.8134, 0.6 ) }
    dend_8 { pt3dadd( 92.2367, 93.7955, 74.0113, 0.6 ) }
    dend_8 { pt3dadd( 94.735, 98.1549, 80.3116, 0.6 ) }
    dend_8 { pt3dadd( 98.0499, 102.35, 86.3535, 0.6 ) }
    dend_8 { pt3dadd( 100.205, 107.271, 92.3137, 0.6 ) }
    dend_8 { pt3dadd( 102.049, 111.499, 98.9304, 0.6 ) }
    dend_8 { pt3dadd( 104.145, 114.949, 105.96, 0.6 ) }
    dend_8 { pt3dadd( 106.056, 117.154, 113.574, 0.6 ) }
    dend_8 { pt3dadd( 108.611, 119.652, 120.893, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 110.912, 123.156, 127.829, 0.6 ) }
    dend_8 { pt3dadd( 112.524, 127.063, 134.719, 0.6 ) }
    dend_8 { pt3dadd( 113.644, 132.407, 140.558, 0.6 ) }
    dend_8 { pt3dadd( 113.216, 137.782, 146.456, 0.6 ) }
    dend_8 { pt3dadd( 111.803, 143.255, 152.095, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 5/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -1.91791, -13.6096, 12.3429, 0.72 ) }
    dend_6 { pt3dadd( -0.210595, -14.875, 12.519, 0.72 ) }
    dend_6 { pt3dadd( 1.49787, -16.3939, 12.6338, 0.72 ) }
    dend_6 { pt3dadd( 4.47379, -19.3871, 12.7679, 0.72 ) }
    dend_6 { pt3dadd( 5.98031, -21.1128, 12.8145, 0.48 ) }
    dend_6 { pt3dadd( 7.41624, -22.9222, 12.9998, 0.48 ) }
    dend_6 { pt3dadd( 9.10044, -25.1981, 13.3183, 0.48 ) }
    dend_6 { pt3dadd( 10.0422, -26.6811, 13.6258, 0.96 ) }
    dend_6 { pt3dadd( 10.9697, -28.301, 14.0255, 0.6 ) }
    dend_6 { pt3dadd( 12.271, -30.7426, 14.6659, 0.96 ) }
    dend_6 { pt3dadd( 14.1084, -34.066, 15.7886, 1.33 ) }
    dend_6 { pt3dadd( 15.587, -36.4215, 16.7726, 1.33 ) }
    dend_6 { pt3dadd( 17.3292, -38.849, 17.8584, 0.96 ) }
    dend_6 { pt3dadd( 18.7549, -40.6263, 18.6312, 1.33 ) }
    dend_6 { pt3dadd( 19.9343, -41.9718, 19.1729, 0.72 ) }
    dend_6 { pt3dadd( 21.9545, -44.0746, 19.9735, 0.72 ) }
    dend_6 { pt3dadd( 23.1204, -45.182, 20.2759, 0.72 ) }
    dend_6 { pt3dadd( 25.4417, -47.1621, 20.7554, 0.72 ) }
    dend_6 { pt3dadd( 26.8135, -48.2086, 20.8586, 1.2 ) }
    dend_6 { pt3dadd( 28.003, -49.0043, 20.8822, 2.17 ) }
    dend_6 { pt3dadd( 33.5666, -55.4073, 22.8469, 2.17 ) }
    dend_6 { pt3dadd( 39.9094, -60.9603, 25.2641, 2.17 ) }
    dend_6 { pt3dadd( 45.671, -66.7812, 28.349, 2.17 ) }
    dend_6 { pt3dadd( 51.5713, -73.1009, 29.4275, 2.17 ) }
    dend_6 { pt3dadd( 57.2848, -79.5188, 30.8245, 2.17 ) }
    dend_6 { pt3dadd( 62.5018, -86.4165, 30.2545, 2.17 ) }
    dend_6 { pt3dadd( 67.2738, -93.5978, 30.8502, 2.17 ) }
    dend_6 { pt3dadd( 71.6997, -100.766, 32.7909, 2.17 ) }
    dend_6 { pt3dadd( 76.2737, -108.001, 33.9557, 2.17 ) }
    dend_6 { pt3dadd( 81.2913, -114.812, 35.872, 2.17 ) }
    dend_6 { pt3dadd( 85.2053, -122.064, 38.4662, 2.17 ) }
    dend_6 { pt3dadd( 89.2364, -128.593, 42.5705, 2.17 ) }
    dend_6 { pt3dadd( 93.9533, -134.007, 47.63, 2.17 ) }
    dend_6 { pt3dadd( 98.8673, -138.007, 53.8359, 2.17 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 39/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.91791, -13.6096, 12.3429, 1.08 ) }
    dend_1 { pt3dadd( -2.98881, -17.7491, 13.6967, 1.08 ) }
    dend_1 { pt3dadd( -3.4844, -19.7599, 14.3575, 1.45 ) }
    dend_1 { pt3dadd( -3.84124, -21.458, 14.8664, 1.45 ) }
    dend_1 { pt3dadd( -4.18173, -23.5499, 15.4873, 1.45 ) }
    dend_1 { pt3dadd( -4.47658, -25.3614, 16.0251, 1.2 ) }
    dend_1 { pt3dadd( -4.61707, -26.2246, 16.2813, 1.45 ) }
    dend_1 { pt3dadd( -4.89951, -28.6474, 16.8054, 1.2 ) }
    dend_1 { pt3dadd( -5.14084, -31.1089, 17.3153, 1.57 ) }
    dend_1 { pt3dadd( -5.39097, -34.5444, 18.1746, 1.45 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -12.1738, -38.3985, 0.0426742, 0.12 ) }
    axon_1 { pt3dadd( -16.9682, -52.6116, 0.0426742, 0.12 ) }
    axon_1 { pt3dadd( -21.7626, -66.8248, 0.0426742, 0.12 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 52/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -21.9043, 25.9909, -16.2924, 2.05 ) }
    dend_35 { pt3dadd( -22.9731, 28.8141, -16.0958, 2.05 ) }
    dend_35 { pt3dadd( -24.3408, 32.552, -15.7756, 0.6 ) }
    dend_35 { pt3dadd( -25.3654, 35.3679, -15.5158, 0.6 ) }
    dend_35 { pt3dadd( -26.035, 37.2792, -15.4561, 1.81 ) }
    dend_35 { pt3dadd( -26.8338, 39.645, -15.4668, 0.72 ) }
    dend_35 { pt3dadd( -27.3529, 41.2529, -15.5086, 0.72 ) }
    dend_35 { pt3dadd( -27.7849, 42.7955, -15.5891, 1.33 ) }
    dend_35 { pt3dadd( -28.0815, 44.0242, -15.6852, 1.93 ) }
    dend_35 { pt3dadd( -28.8262, 47.5565, -15.7492, 0.36 ) }
    dend_35 { pt3dadd( -29.0463, 48.6891, -15.7172, 0.84 ) }
    dend_35 { pt3dadd( -29.3928, 50.6049, -15.4945, 0.36 ) }
    dend_35 { pt3dadd( -29.7161, 52.4868, -15.0866, 1.57 ) }
    dend_35 { pt3dadd( -29.9434, 53.9226, -14.6004, 2.65 ) }
    dend_35 { pt3dadd( -30.5653, 57.8528, -12.6883, 0.48 ) }
    dend_35 { pt3dadd( -30.814, 59.1722, -11.8907, 1.33 ) }
    dend_35 { pt3dadd( -31.3947, 61.8172, -10.2312, 0.36 ) }
    dend_35 { pt3dadd( -31.616, 62.7074, -9.65654, 1.57 ) }
    dend_35 { pt3dadd( -32.182, 64.7617, -8.35277, 0.48 ) }
    dend_35 { pt3dadd( -32.8211, 66.8845, -7.11265, 1.69 ) }
    dend_35 { pt3dadd( -33.8109, 69.851, -5.72023, 0.36 ) }
    dend_35 { pt3dadd( -34.2475, 71.042, -5.22082, 1.08 ) }
    dend_35 { pt3dadd( -34.3886, 71.4015, -5.10625, 1.81 ) }
    dend_35 { pt3dadd( -35.2899, 73.5389, -4.55872, 0.6 ) }
    dend_35 { pt3dadd( -35.8191, 74.6851, -4.38547, 1.69 ) }
    dend_35 { pt3dadd( -36.4274, 75.9312, -4.29955, 0.12 ) }
    dend_35 { pt3dadd( -36.9113, 76.8335, -4.25868, 0.96 ) }
    dend_35 { pt3dadd( -37.6395, 78.0642, -4.20719, 0.24 ) }
    dend_35 { pt3dadd( -38.3766, 79.1953, -4.16737, 0.24 ) }
    dend_35 { pt3dadd( -39.1895, 80.3361, -4.05606, 1.33 ) }
    dend_35 { pt3dadd( -39.4675, 80.7223, -3.98945, 2.05 ) }
    dend_35 { pt3dadd( -41.054, 83.0571, -3.48911, 0.48 ) }
    dend_35 { pt3dadd( -41.5541, 83.8437, -3.3257, 0.48 ) }
    dend_35 { pt3dadd( -42.034, 84.653, -3.17174, 1.57 ) }
    dend_35 { pt3dadd( -43.3255, 87.067, -2.75657, 0.36 ) }
    dend_35 { pt3dadd( -43.9038, 88.244, -2.5579, 1.33 ) }
    dend_35 { pt3dadd( -45.24, 91.1549, -2.02695, 0.36 ) }
    dend_35 { pt3dadd( -45.6941, 92.2594, -1.83964, 1.69 ) }
    dend_35 { pt3dadd( -46.2595, 93.7872, -1.62826, 0.48 ) }
    dend_35 { pt3dadd( -46.423, 94.2957, -1.57847, 0.84 ) }
    dend_35 { pt3dadd( -46.6959, 95.2961, -1.48536, 0.24 ) }
    dend_35 { pt3dadd( -47.0224, 96.7918, -1.27911, 1.33 ) }
    dend_35 { pt3dadd( -47.2514, 98.6055, -1.00844, 0.6 ) }
    dend_35 { pt3dadd( -47.3427, 100.54, -0.729058, 0.36 ) }
    dend_35 { pt3dadd( -47.2898, 102.138, -0.515427, 0.36 ) }
    dend_35 { pt3dadd( -47.0425, 104.253, -0.233536, 1.33 ) }
    dend_35 { pt3dadd( -46.7996, 105.457, -0.0817103, 0.36 ) }
    dend_35 { pt3dadd( -46.2467, 107.537, 0.152174, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_35 { pt3dadd( -45.8867, 108.586, 0.297746, 0.12 ) }
    dend_35 { pt3dadd( -45.565, 109.346, 0.395307, 0.72 ) }
    dend_35 { pt3dadd( -44.8649, 110.792, 0.516522, 0.24 ) }
    dend_35 { pt3dadd( -44.326, 111.774, 0.486926, 0.24 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 4/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -21.9043, 25.9909, -16.2924, 1.2 ) }
    dend_32 { pt3dadd( -27.7558, 33.777, -3.32124, 1.2 ) }
    dend_32 { pt3dadd( -29.2782, 35.65, -0.153551, 0.24 ) }
    dend_32 { pt3dadd( -30.7535, 37.4727, 2.83473, 1.2 ) }
    dend_32 { pt3dadd( -33.3415, 40.6501, 7.81696, 0.24 ) }
    dend_32 { pt3dadd( -36.3269, 44.2993, 13.5053, 1.57 ) }
    dend_32 { pt3dadd( -39.2158, 47.8934, 18.9411, 0.96 ) }
    dend_32 { pt3dadd( -41.2727, 50.4335, 22.3386, 1.93 ) }
    dend_32 { pt3dadd( -42.1331, 51.4917, 23.7633, 0.72 ) }
    dend_32 { pt3dadd( -45.0782, 54.9318, 28.5412, 2.77 ) }
    dend_32 { pt3dadd( -47.3573, 57.6092, 31.9532, 0.72 ) }
    dend_32 { pt3dadd( -48.3355, 58.9169, 33.5255, 1.81 ) }
    dend_32 { pt3dadd( -49.8115, 61.1456, 35.6347, 0.6 ) }
    dend_32 { pt3dadd( -55.9666, 67.1113, 44.7156, 0.6 ) }
    dend_32 { pt3dadd( -60.0909, 74.2749, 53.9855, 0.6 ) }
    dend_32 { pt3dadd( -61.8, 82.2573, 63.2852, 0.6 ) }
    dend_32 { pt3dadd( -64.7781, 89.8665, 72.605, 0.6 ) }
    dend_32 { pt3dadd( -67.029, 96.5311, 82.8878, 0.6 ) }
    dend_32 { pt3dadd( -68.2752, 103.09, 93.4191, 0.6 ) }
    dend_32 { pt3dadd( -71.7626, 110.508, 102.731, 0.6 ) }
    dend_32 { pt3dadd( -75.0406, 119.586, 110.331, 0.6 ) }
    dend_32 { pt3dadd( -77.3891, 128.073, 118.968, 0.6 ) }
    dend_32 { pt3dadd( -77.4274, 137.036, 127.407, 0.6 ) }
    dend_32 { pt3dadd( -77.6145, 145.127, 136.768, 0.6 ) }
    dend_32 { pt3dadd( -76.07, 152.007, 147.044, 0.6 ) }
    dend_32 { pt3dadd( -74.6401, 157.774, 158.07, 0.6 ) }
    dend_32 { pt3dadd( -72.1629, 161.769, 169.767, 0.6 ) }
    dend_32 { pt3dadd( -69.1127, 166.201, 181.152, 0.6 ) }
    dend_32 { pt3dadd( -67.7708, 170.859, 192.756, 0.6 ) }
    dend_32 { pt3dadd( -67.2471, 177.119, 203.556, 0.6 ) }
    dend_32 { pt3dadd( -65.7198, 184.477, 213.461, 0.6 ) }
    dend_32 { pt3dadd( -66.2821, 190.266, 224.543, 0.6 ) }
    dend_32 { pt3dadd( -69.0293, 194.553, 236.046, 0.6 ) }
    dend_32 { pt3dadd( -71.4147, 200.0, 247.071, 0.6 ) }
    dend_32 { pt3dadd( -75.1842, 205.287, 257.788, 0.6 ) }
    dend_32 { pt3dadd( -81.07, 211.627, 266.764, 0.6 ) }
    dend_32 { pt3dadd( -86.2582, 218.322, 275.884, 0.6 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 41/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -67.2317, 10.4922, -12.206, 0.12 ) }
    dend_30 { pt3dadd( -68.1066, 5.59978, -8.57781, 0.12 ) }
    dend_30 { pt3dadd( -68.3388, 4.33842, -7.54654, 1.69 ) }
    dend_30 { pt3dadd( -68.8089, 1.7578, -5.32431, 0.24 ) }
    dend_30 { pt3dadd( -69.0875, 0.142764, -3.97548, 0.24 ) }
    dend_30 { pt3dadd( -69.3747, -1.56746, -2.54014, 1.57 ) }
    dend_30 { pt3dadd( -70.0856, -6.38518, 1.40128, 0.12 ) }
    dend_30 { pt3dadd( -70.177, -7.01329, 1.9821, 1.81 ) }
    dend_30 { pt3dadd( -70.4723, -9.55557, 4.24844, 0.24 ) }
    dend_30 { pt3dadd( -70.5347, -10.8505, 5.2504, 0.24 ) }
    dend_30 { pt3dadd( -70.5226, -11.9414, 6.0409, 1.08 ) }
    dend_30 { pt3dadd( -70.4906, -13.2472, 6.90078, 1.08 ) }
    dend_30 { pt3dadd( -70.4556, -14.5901, 7.67751, 0.24 ) }
    dend_30 { pt3dadd( -70.4512, -15.4828, 8.23335, 1.69 ) }
    dend_30 { pt3dadd( -70.5117, -19.3534, 10.7245, 0.12 ) }
    dend_30 { pt3dadd( -70.7575, -24.3989, 14.2241, 0.12 ) }
    dend_30 { pt3dadd( -70.8364, -25.3275, 14.8874, 0.6 ) }
    dend_30 { pt3dadd( -71.0372, -26.6456, 15.8835, 1.69 ) }
    dend_30 { pt3dadd( -71.6215, -29.2853, 17.9429, 0.36 ) }
    dend_30 { pt3dadd( -71.7597, -29.7419, 18.2971, 1.08 ) }
    dend_30 { pt3dadd( -72.4854, -31.3541, 19.3454, 0.36 ) }
    dend_30 { pt3dadd( -72.8353, -31.9816, 19.6699, 0.36 ) }
    dend_30 { pt3dadd( -74.1221, -34.2247, 20.8619, 0.36 ) }
    dend_30 { pt3dadd( -74.5961, -35.0199, 21.2762, 0.36 ) }
    dend_30 { pt3dadd( -75.0242, -35.7536, 21.6118, 0.84 ) }
    dend_30 { pt3dadd( -76.8875, -39.0938, 23.0895, 0.48 ) }
    dend_30 { pt3dadd( -77.8758, -41.1144, 23.9724, 0.72 ) }
    dend_30 { pt3dadd( -78.8014, -43.1142, 24.8736, 0.12 ) }
    dend_30 { pt3dadd( -79.0166, -43.6324, 25.1123, 1.08 ) }
    dend_30 { pt3dadd( -79.4205, -44.7242, 25.6503, 0.36 ) }
    dend_30 { pt3dadd( -79.6114, -45.321, 25.9718, 0.84 ) }
    dend_30 { pt3dadd( -80.4602, -48.9351, 28.2377, 0.24 ) }
    dend_30 { pt3dadd( -81.6521, -56.8615, 33.6499, 0.24 ) }
    dend_30 { pt3dadd( -83.1536, -64.4215, 39.5452, 0.24 ) }
    dend_30 { pt3dadd( -84.7116, -71.7268, 45.7727, 0.24 ) }
    dend_30 { pt3dadd( -86.826, -78.632, 52.3326, 0.24 ) }
    dend_30 { pt3dadd( -90.8957, -84.0641, 59.4759, 0.24 ) }
    dend_30 { pt3dadd( -95.5336, -88.2904, 67.1529, 0.24 ) }
    dend_30 { pt3dadd( -100.969, -93.5688, 73.4631, 0.24 ) }
    dend_30 { pt3dadd( -106.932, -96.7283, 80.7814, 0.24 ) }
    dend_30 { pt3dadd( -111.648, -100.851, 88.4729, 0.24 ) }
    dend_30 { pt3dadd( -115.298, -104.927, 96.7503, 0.24 ) }
    dend_30 { pt3dadd( -119.717, -108.458, 104.928, 0.24 ) }
    dend_30 { pt3dadd( -122.998, -112.501, 113.377, 0.24 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 85/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -67.2317, 10.4922, -12.206, 1.45 ) }
    dend_29 { pt3dadd( -69.1918, 9.95456, -12.1629, 1.45 ) }
    dend_29 { pt3dadd( -71.4098, 9.22432, -12.2404, 0.24 ) }
    dend_29 { pt3dadd( -72.5822, 8.64743, -12.4777, 1.2 ) }
    dend_29 { pt3dadd( -73.8932, 7.91468, -12.8194, 0.12 ) }
    dend_29 { pt3dadd( -75.2091, 7.08437, -13.2507, 1.33 ) }
    dend_29 { pt3dadd( -77.1635, 5.77089, -13.9041, 0.12 ) }
    dend_29 { pt3dadd( -78.2566, 4.9555, -14.2764, 1.33 ) }
    dend_29 { pt3dadd( -82.3787, 1.76883, -15.5766, 0.36 ) }
    dend_29 { pt3dadd( -82.778, 1.45726, -15.7478, 0.84 ) }
    dend_29 { pt3dadd( -86.2507, -1.30402, -17.3048, 0.12 ) }
    dend_29 { pt3dadd( -87.4197, -2.24418, -17.8437, 1.45 ) }
    dend_29 { pt3dadd( -90.6562, -4.79208, -19.2424, 0.6 ) }
    dend_29 { pt3dadd( -93.01, -6.57797, -20.2302, 0.24 ) }
    dend_29 { pt3dadd( -98.5845, -10.4645, -22.3736, 1.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 0/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -0.451716, -20.8148, -22.6906, 1.32 ) }
    dend_24 { pt3dadd( -0.152622, -21.7137, -24.3877, 1.32 ) }
    dend_24 { pt3dadd( 0.543805, -23.4282, -27.2712, 0.6 ) }
    dend_24 { pt3dadd( 1.79323, -25.9284, -31.0842, 0.6 ) }
    dend_24 { pt3dadd( 2.1442, -26.5443, -32.0419, 0.6 ) }
    dend_24 { pt3dadd( 2.50512, -27.1716, -33.0239, 0.6 ) }
    dend_24 { pt3dadd( 2.99219, -28.096, -34.4726, 1.68 ) }
    dend_24 { pt3dadd( 3.25579, -28.6412, -35.2846, 1.68 ) }
    dend_24 { pt3dadd( 3.52085, -29.2355, -36.2926, 0.84 ) }
    dend_24 { pt3dadd( 4.48419, -31.3342, -40.0893, 0.84 ) }
    dend_24 { pt3dadd( 4.75858, -31.9122, -41.2299, 0.84 ) }
    dend_24 { pt3dadd( 5.5081, -33.4948, -44.5312, 1.8 ) }
    dend_24 { pt3dadd( 5.64032, -33.7803, -45.1825, 1.8 ) }
    dend_24 { pt3dadd( 6.84485, -36.2926, -51.0766, 0.6 ) }
    dend_24 { pt3dadd( 6.97919, -36.5785, -51.8193, 0.6 ) }
    dend_24 { pt3dadd( 7.17138, -36.9313, -52.7546, 0.6 ) }
    dend_24 { pt3dadd( 7.41481, -37.3251, -53.8286, 1.44 ) }
    dend_24 { pt3dadd( 8.55817, -39.0029, -58.4409, 0.6 ) }
    dend_24 { pt3dadd( 9.13878, -39.8677, -60.9591, 1.8 ) }
    dend_24 { pt3dadd( 11.2048, -42.9005, -69.9644, 0.24 ) }
    dend_24 { pt3dadd( 11.4918, -43.346, -71.3289, 1.44 ) }
    dend_24 { pt3dadd( 11.6432, -43.5908, -72.0844, 0.36 ) }
    dend_24 { pt3dadd( 11.8142, -43.8602, -72.9081, 0.36 ) }
    dend_24 { pt3dadd( 13.476, -46.2383, -79.74, 1.44 ) }
    dend_24 { pt3dadd( 13.5681, -46.3619, -80.0794, 1.44 ) }
    dend_24 { pt3dadd( 13.6896, -46.5087, -80.4148, 0.48 ) }
    dend_24 { pt3dadd( 14.5492, -47.6193, -82.8179, 0.48 ) }
    dend_24 { pt3dadd( 14.8955, -48.0848, -83.7372, 1.92 ) }
    dend_24 { pt3dadd( 15.1246, -48.3961, -84.3077, 0.72 ) }
    dend_24 { pt3dadd( 16.5769, -50.3597, -87.591, 0.24 ) }
    dend_24 { pt3dadd( 17.1456, -51.1229, -88.8959, 0.24 ) }
    dend_24 { pt3dadd( 17.9614, -52.183, -90.7199, 0.24 ) }
    dend_24 { pt3dadd( 18.913, -53.4308, -93.0251, 2.16 ) }
    dend_24 { pt3dadd( 19.6043, -54.3516, -95.0041, 0.12 ) }
    dend_24 { pt3dadd( 20.642, -55.6917, -98.0445, 0.24 ) }
    dend_24 { pt3dadd( 21.0582, -56.2366, -99.4244, 1.08 ) }
    dend_24 { pt3dadd( 21.7319, -57.1493, -101.839, 0.24 ) }
    dend_24 { pt3dadd( 23.0272, -58.9716, -106.714, 1.8 ) }
    dend_24 { pt3dadd( 25.0158, -61.7836, -114.31, 0.12 ) }
    dend_24 { pt3dadd( 25.2651, -62.1431, -115.396, 1.92 ) }
    dend_24 { pt3dadd( 26.4882, -63.8931, -121.283, 0.12 ) }
    dend_24 { pt3dadd( 26.6928, -64.1873, -122.64, 0.12 ) }
    dend_24 { pt3dadd( 27.1143, -64.7997, -126.116, 0.12 ) }
    dend_24 { pt3dadd( 27.3415, -65.0976, -128.102, 1.56 ) }
    dend_24 { pt3dadd( 28.342, -66.3158, -137.166, 0.12 ) }
    dend_24 { pt3dadd( 28.4083, -66.3937, -137.764, 1.92 ) }
    dend_24 { pt3dadd( 30.3119, -68.3452, -153.183, 0.12 ) }
    dend_24 { pt3dadd( 30.3969, -68.4242, -153.812, 0.12 ) }
    dend_24 { pt3dadd( 30.5707, -68.5821, -154.977, 1.8 ) }
    dend_24 { pt3dadd( 31.0617, -69.1037, -158.07, 0.12 ) }
    dend_24 { pt3dadd( 31.7739, -69.9364, -161.589, 0.96 ) }
    dend_24 { pt3dadd( 31.9696, -70.1918, -162.458, 0.12 ) }
    dend_24 { pt3dadd( 32.5712, -71.0477, -164.43, 1.44 ) }
    dend_24 { pt3dadd( 33.0563, -71.8604, -166.304, 0.48 ) }
    dend_24 { pt3dadd( 33.6149, -73.1865, -169.363, 0.48 ) }
    dend_24 { pt3dadd( 33.6643, -73.3534, -169.751, 0.96 ) }
    dend_24 { pt3dadd( 33.9808, -75.0604, -174.107, 0.96 ) }
    dend_24 { pt3dadd( 34.0504, -75.6145, -175.615, 0.96 ) }
    dend_24 { pt3dadd( 34.0876, -75.9429, -176.539, 1.32 ) }
    dend_24 { pt3dadd( 34.3654, -77.5895, -181.272, 0.12 ) }
    dend_24 { pt3dadd( 34.655, -78.8178, -184.774, 0.12 ) }
    dend_24 { pt3dadd( 35.1927, -80.7408, -190.09, 1.32 ) }
    dend_24 { pt3dadd( 35.264, -80.948, -190.639, 0.12 ) }
    dend_24 { pt3dadd( 35.4265, -81.3072, -191.583, 0.12 ) }
    dend_24 { pt3dadd( 35.9943, -82.3066, -194.09, 1.8 ) }
    dend_24 { pt3dadd( 36.3115, -82.7863, -195.087, 0.12 ) }
    dend_24 { pt3dadd( 36.7444, -83.4026, -196.061, 0.12 ) }
    dend_24 { pt3dadd( 37.523, -84.4191, -197.35, 0.12 ) }
    dend_24 { pt3dadd( 38.6132, -85.8322, -199.105, 1.68 ) }
    dend_24 { pt3dadd( 39.733, -87.3061, -200.946, 0.12 ) }
    dend_24 { pt3dadd( 40.2762, -88.0081, -201.799, 0.12 ) }
    dend_24 { pt3dadd( 41.3961, -89.4504, -203.663, 0.12 ) }
    dend_24 { pt3dadd( 41.8866, -90.0741, -204.488, 0.12 ) }
    dend_24 { pt3dadd( 41.9866, -90.194, -204.619, 0.72 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 74/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.451716, -20.8148, -22.6906, 0.6 ) }
    dend_23 { pt3dadd( -1.96344, -21.3206, -22.8346, 0.6 ) }
    dend_23 { pt3dadd( -3.06097, -21.7432, -23.0794, 0.6 ) }
    dend_23 { pt3dadd( -3.91193, -22.1356, -23.3272, 0.6 ) }
    dend_23 { pt3dadd( -5.30026, -22.8725, -23.9715, 0.6 ) }
    dend_23 { pt3dadd( -7.32872, -24.0005, -25.023, 0.6 ) }
    dend_23 { pt3dadd( -10.4209, -25.7794, -26.648, 0.6 ) }
    dend_23 { pt3dadd( -11.1656, -26.2446, -27.0515, 0.6 ) }
    dend_23 { pt3dadd( -11.8018, -26.6844, -27.411, 0.6 ) }
    dend_23 { pt3dadd( -13.4848, -27.9834, -28.3503, 0.6 ) }
    dend_23 { pt3dadd( -14.6171, -28.9323, -28.9721, 0.6 ) }
    dend_23 { pt3dadd( -15.9987, -30.0838, -29.7061, 1.68 ) }
    dend_23 { pt3dadd( -17.0854, -30.9522, -30.3687, 0.72 ) }
    dend_23 { pt3dadd( -17.786, -31.4843, -31.0511, 0.72 ) }
    dend_23 { pt3dadd( -18.399, -31.948, -31.8062, 0.72 ) }
    dend_23 { pt3dadd( -19.2448, -32.62, -32.9293, 0.72 ) }
    dend_23 { pt3dadd( -20.2284, -33.4156, -34.4932, 0.72 ) }
    dend_23 { pt3dadd( -22.5827, -35.2791, -38.7049, 0.72 ) }
    dend_23 { pt3dadd( -24.494, -36.7165, -42.4475, 0.36 ) }
    dend_23 { pt3dadd( -25.3955, -37.3444, -44.2951, 1.2 ) }
    dend_23 { pt3dadd( -26.3941, -37.9677, -46.3255, 0.36 ) }
    dend_23 { pt3dadd( -28.9528, -39.5619, -51.4296, 1.44 ) }
    dend_23 { pt3dadd( -30.9934, -40.8583, -55.2237, 0.12 ) }
    dend_23 { pt3dadd( -33.343, -42.3956, -59.3326, 1.32 ) }
    dend_23 { pt3dadd( -34.7761, -43.3884, -61.7482, 0.36 ) }
    dend_23 { pt3dadd( -35.7417, -44.105, -63.4206, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_23 { pt3dadd( -38.057, -45.986, -67.5298, 0.24 ) }
    dend_23 { pt3dadd( -39.099, -46.9251, -69.2639, 0.24 ) }
    dend_23 { pt3dadd( -41.5357, -49.3863, -73.2442, 0.24 ) }
    dend_23 { pt3dadd( -42.2775, -50.2192, -74.4645, 0.24 ) }
    dend_23 { pt3dadd( -44.4462, -52.9222, -78.3743, 1.44 ) }
    dend_23 { pt3dadd( -46.0048, -54.8899, -81.4015, 0.12 ) }
    dend_23 { pt3dadd( -46.4823, -55.448, -82.381, 0.36 ) }
    dend_23 { pt3dadd( -47.3495, -56.3949, -84.3858, 0.36 ) }
    dend_23 { pt3dadd( -48.2712, -57.3545, -86.581, 0.36 ) }
    dend_23 { pt3dadd( -50.028, -59.0681, -90.9771, 0.36 ) }
    dend_23 { pt3dadd( -51.7596, -60.6327, -95.1759, 0.36 ) }
    dend_23 { pt3dadd( -52.6578, -61.3799, -97.2629, 1.2 ) }
    dend_23 { pt3dadd( -56.668, -64.4775, -106.102, 0.36 ) }
    dend_23 { pt3dadd( -57.053, -64.7434, -106.851, 0.36 ) }
    dend_23 { pt3dadd( -60.4196, -66.8418, -112.489, 0.36 ) }
    dend_23 { pt3dadd( -61.5599, -67.459, -114.011, 0.36 ) }
    dend_23 { pt3dadd( -62.4861, -67.9061, -114.938, 0.36 ) }
    dend_23 { pt3dadd( -63.465, -68.3179, -115.574, 0.72 ) }
    dend_23 { pt3dadd( -66.3533, -69.2401, -116.724, 0.48 ) }
    dend_23 { pt3dadd( -67.5691, -69.6023, -117.176, 0.48 ) }
    dend_23 { pt3dadd( -70.0245, -70.3135, -118.151, 0.24 ) }
    dend_23 { pt3dadd( -71.7188, -70.8196, -118.971, 1.2 ) }
    dend_23 { pt3dadd( -72.4448, -71.0375, -119.358, 1.2 ) }
    dend_23 { pt3dadd( -79.3752, -73.1493, -123.473, 0.24 ) }
    dend_23 { pt3dadd( -82.5769, -74.1512, -125.644, 0.24 ) }
    dend_23 { pt3dadd( -85.6384, -75.158, -127.911, 1.32 ) }
    dend_23 { pt3dadd( -86.4151, -75.4327, -128.543, 1.32 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 27/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -6.47242, -22.3585, -3.9948, 0.6 ) }
    dend_19 { pt3dadd( -3.2232, -25.6429, -2.65561, 0.6 ) }
    dend_19 { pt3dadd( -1.44274, -27.2562, -1.96666, 0.6 ) }
    dend_19 { pt3dadd( 1.44504, -29.8325, -0.719337, 0.6 ) }
    dend_19 { pt3dadd( 3.82853, -32.0674, 0.362116, 0.6 ) }
    dend_19 { pt3dadd( 4.63719, -32.8709, 0.735444, 0.6 ) }
    dend_19 { pt3dadd( 6.30131, -34.4322, 1.4396, 0.84 ) }
    dend_19 { pt3dadd( 8.12534, -36.0407, 2.3105, 0.84 ) }
    dend_19 { pt3dadd( 9.30341, -37.0227, 2.9944, 0.6 ) }
    dend_19 { pt3dadd( 10.5991, -38.1061, 3.79742, 0.6 ) }
    dend_19 { pt3dadd( 11.4486, -38.7806, 4.37328, 0.6 ) }
    dend_19 { pt3dadd( 13.3389, -40.1736, 5.47586, 0.84 ) }
    dend_19 { pt3dadd( 16.3587, -42.294, 6.91222, 0.48 ) }
    dend_19 { pt3dadd( 17.7326, -43.1877, 7.38648, 1.08 ) }
    dend_19 { pt3dadd( 19.3354, -44.1735, 8.01432, 0.48 ) }
    dend_19 { pt3dadd( 22.22, -45.8528, 9.37772, 0.48 ) }
    dend_19 { pt3dadd( 24.7791, -47.3529, 10.7525, 0.48 ) }
    dend_19 { pt3dadd( 25.9774, -48.1231, 11.445, 0.48 ) }
    dend_19 { pt3dadd( 27.4154, -49.0676, 12.202, 1.08 ) }
    dend_19 { pt3dadd( 31.7789, -51.9048, 14.5489, 1.08 ) }
    dend_19 { pt3dadd( 34.1919, -53.5438, 15.9082, 0.48 ) }
    dend_19 { pt3dadd( 35.3064, -54.4482, 16.6019, 0.36 ) }
    dend_19 { pt3dadd( 36.4996, -55.5607, 17.3528, 0.36 ) }
    dend_19 { pt3dadd( 38.1268, -57.2061, 18.2038, 0.36 ) }
    dend_19 { pt3dadd( 39.0689, -58.2011, 18.5008, 0.36 ) }
    dend_19 { pt3dadd( 39.8308, -59.0862, 18.5059, 1.57 ) }
    dend_19 { pt3dadd( 40.9015, -60.4501, 18.3104, 0.84 ) }
    dend_19 { pt3dadd( 41.7438, -61.581, 18.1258, 0.6 ) }
    dend_19 { pt3dadd( 43.0046, -63.3527, 17.9028, 0.6 ) }
    dend_19 { pt3dadd( 43.8424, -64.7357, 17.7569, 0.6 ) }
    dend_19 { pt3dadd( 44.2362, -65.4257, 17.6813, 0.6 ) }
    dend_19 { pt3dadd( 45.5463, -67.6885, 17.3334, 1.57 ) }
    dend_19 { pt3dadd( 46.3371, -69.0406, 17.0307, 0.48 ) }
    dend_19 { pt3dadd( 46.7842, -69.9391, 16.7436, 0.48 ) }
    dend_19 { pt3dadd( 47.2294, -71.3082, 16.2213, 0.48 ) }
    dend_19 { pt3dadd( 53.1152, -75.5264, 17.1564, 0.48 ) }
    dend_19 { pt3dadd( 58.8695, -79.6208, 19.0299, 0.48 ) }
    dend_19 { pt3dadd( 63.4206, -84.938, 20.8074, 0.48 ) }
    dend_19 { pt3dadd( 68.3348, -90.2078, 21.3838, 0.48 ) }
    dend_19 { pt3dadd( 73.3942, -95.3156, 22.2424, 0.48 ) }
    dend_19 { pt3dadd( 78.7689, -100.121, 23.1203, 0.48 ) }
    dend_19 { pt3dadd( 84.2819, -104.712, 24.3373, 0.48 ) }
    dend_19 { pt3dadd( 90.041, -109.176, 24.4304, 0.48 ) }
    dend_19 { pt3dadd( 95.7239, -113.728, 24.5314, 0.48 ) }
    dend_19 { pt3dadd( 101.432, -118.246, 24.257, 0.48 ) }
    dend_19 { pt3dadd( 107.44, -122.403, 24.3621, 0.48 ) }
    dend_19 { pt3dadd( 113.595, -126.34, 24.7893, 0.48 ) }
    dend_19 { pt3dadd( 119.169, -130.993, 24.3175, 0.48 ) }
    dend_19 { pt3dadd( 124.446, -135.964, 24.5076, 0.48 ) }
    dend_19 { pt3dadd( 129.101, -141.459, 24.1229, 0.48 ) }
    dend_19 { pt3dadd( 133.076, -147.419, 23.787, 0.48 ) }
    dend_19 { pt3dadd( 136.539, -153.642, 23.1909, 0.48 ) }
    dend_19 { pt3dadd( 139.817, -159.837, 21.7771, 0.48 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 80/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -6.47242, -22.3585, -3.9948, 1.2 ) }
    dend_14 { pt3dadd( -7.45414, -25.8891, -3.37953, 1.2 ) }
    dend_14 { pt3dadd( -8.09468, -28.4175, -2.96856, 1.08 ) }
    dend_14 { pt3dadd( -9.06605, -31.9931, -2.43421, 1.45 ) }
    dend_14 { pt3dadd( -9.93082, -34.9878, -2.17844, 1.2 ) }
    dend_14 { pt3dadd( -11.9567, -41.711, -1.89601, 1.2 ) }
    dend_14 { pt3dadd( -13.9498, -48.2115, -1.79884, 1.2 ) }
    dend_14 { pt3dadd( -14.7086, -50.8217, -1.84733, 0.96 ) }
    dend_14 { pt3dadd( -15.5729, -53.9081, -1.97735, 0.96 ) }
    dend_14 { pt3dadd( -16.6694, -57.9518, -2.42738, 0.96 ) }
    dend_14 { pt3dadd( -17.6056, -61.3591, -3.06254, 1.2 ) }
    dend_14 { pt3dadd( -18.5601, -64.6393, -3.97212, 0.84 ) }
    dend_14 { pt3dadd( -19.658, -68.3565, -4.99961, 1.33 ) }
    dend_14 { pt3dadd( -20.8481, -72.8133, -6.23545, 0.96 ) }
    dend_14 { pt3dadd( -21.9083, -77.9917, -7.63992, 0.84 ) }
    dend_14 { pt3dadd( -22.3958, -81.3345, -8.46357, 0.84 ) }
    dend_14 { pt3dadd( -22.8187, -86.0584, -9.67187, 0.84 ) }
    dend_14 { pt3dadd( -22.8884, -88.9256, -10.6064, 0.84 ) }
    dend_14 { pt3dadd( -22.8573, -90.7197, -11.2964, 0.84 ) }
    dend_14 { pt3dadd( -22.7183, -94.7424, -12.9193, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_14 { pt3dadd( -22.5824, -97.1654, -13.8766, 1.2 ) }
    dend_14 { pt3dadd( -22.4615, -98.623, -14.4781, 2.65 ) }
    dend_14 { pt3dadd( -21.8663, -104.835, -17.0164, 0.72 ) }
    dend_14 { pt3dadd( -21.6576, -108.35, -18.4585, 0.6 ) }
    dend_14 { pt3dadd( -21.6491, -112.987, -20.2963, 0.6 ) }
    dend_14 { pt3dadd( -21.8359, -115.521, -21.2183, 0.48 ) }
    dend_14 { pt3dadd( -22.0988, -117.847, -21.9555, 1.33 ) }
    dend_14 { pt3dadd( -22.2188, -118.766, -22.2221, 1.45 ) }
    dend_14 { pt3dadd( -22.4985, -120.568, -22.6462, 0.6 ) }
    dend_14 { pt3dadd( -22.6495, -121.503, -22.9125, 0.48 ) }
    dend_14 { pt3dadd( -23.1571, -123.921, -23.6876, 1.2 ) }
    dend_14 { pt3dadd( -23.7535, -126.278, -24.6222, 0.6 ) }
    dend_14 { pt3dadd( -25.1547, -131.243, -26.8541, 1.33 ) }
    dend_14 { pt3dadd( -26.0995, -134.574, -28.4183, 0.96 ) }
    dend_14 { pt3dadd( -26.6319, -136.448, -29.3241, 0.96 ) }
    dend_14 { pt3dadd( -27.2456, -138.522, -30.3994, 0.72 ) }
    dend_14 { pt3dadd( -28.5934, -142.658, -32.6187, 1.45 ) }
    dend_14 { pt3dadd( -29.2726, -144.558, -33.6423, 0.72 ) }
    dend_14 { pt3dadd( -29.8322, -146.164, -34.4191, 0.72 ) }
    dend_14 { pt3dadd( -30.1104, -147.081, -34.8464, 0.72 ) }
    dend_14 { pt3dadd( -30.9361, -150.083, -36.1727, 0.48 ) }
    dend_14 { pt3dadd( -31.5269, -152.331, -37.1168, 0.48 ) }
    dend_14 { pt3dadd( -31.8835, -153.716, -37.6114, 1.69 ) }
    dend_14 { pt3dadd( -33.2412, -159.404, -39.7366, 0.72 ) }
    dend_14 { pt3dadd( -33.9639, -162.627, -40.9474, 0.72 ) }
    dend_14 { pt3dadd( -34.1045, -163.394, -41.2148, 2.89 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 26/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 111.803, 143.255, 152.095, 0.6 ) }
    dend_10 { pt3dadd( 116.518, 150.083, 160.167, 0.6 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 28/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 111.803, 143.255, 152.095, 0.6 ) }
    dend_9 { pt3dadd( 115.334, 148.079, 158.065, 0.6 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 30/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -5.39097, -34.5444, 18.1746, 0.96 ) }
    dend_5 { pt3dadd( -11.4751, -37.5112, 22.7002, 0.96 ) }
    dend_5 { pt3dadd( -12.5235, -38.0731, 23.3049, 0.96 ) }
    dend_5 { pt3dadd( -13.8288, -38.7806, 23.8655, 0.84 ) }
    dend_5 { pt3dadd( -15.3777, -39.6201, 24.5306, 0.84 ) }
    dend_5 { pt3dadd( -17.3392, -40.6833, 25.3729, 0.84 ) }
    dend_5 { pt3dadd( -19.6065, -41.9122, 26.3465, 0.84 ) }
    dend_5 { pt3dadd( -21.2791, -42.8342, 26.3332, 0.6 ) }
    dend_5 { pt3dadd( -23.024, -43.8548, 26.3893, 0.36 ) }
    dend_5 { pt3dadd( -33.3795, -47.9115, 30.1993, 0.36 ) }
    dend_5 { pt3dadd( -43.4678, -53.3409, 32.6106, 0.36 ) }
    dend_5 { pt3dadd( -54.5497, -57.2749, 32.9515, 0.36 ) }
    dend_5 { pt3dadd( -66.0353, -58.8979, 30.7692, 0.36 ) }
    dend_5 { pt3dadd( -76.9399, -61.9244, 27.4736, 0.36 ) }
    dend_5 { pt3dadd( -88.3855, -64.4553, 26.1689, 0.36 ) }
    dend_5 { pt3dadd( -98.9269, -68.8265, 23.357, 0.36 ) }
    dend_5 { pt3dadd( -108.55, -74.289, 19.52, 0.36 ) }
    dend_5 { pt3dadd( -118.899, -78.4612, 15.8093, 0.36 ) }
    dend_5 { pt3dadd( -129.441, -83.5068, 14.8217, 0.36 ) }
    dend_5 { pt3dadd( -138.903, -90.1154, 16.4038, 0.36 ) }
    dend_5 { pt3dadd( -146.508, -98.7533, 16.0681, 0.36 ) }
    dend_5 { pt3dadd( -152.83, -108.135, 14.2992, 0.36 ) }
    dend_5 { pt3dadd( -158.272, -117.865, 11.8487, 0.36 ) }
    dend_5 { pt3dadd( -163.535, -127.851, 10.3251, 0.36 ) }
    dend_5 { pt3dadd( -169.072, -137.505, 7.75066, 0.36 ) }
    dend_5 { pt3dadd( -175.512, -146.803, 5.92162, 0.36 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 56/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.39097, -34.5444, 18.1746, 1.2 ) }
    dend_2 { pt3dadd( -6.22319, -36.2471, 18.5804, 1.2 ) }
    dend_2 { pt3dadd( -6.87179, -38.0304, 18.8595, 1.2 ) }
    dend_2 { pt3dadd( -7.33018, -40.0359, 19.057, 1.08 ) }
    dend_2 { pt3dadd( -7.73121, -42.5562, 19.3028, 1.08 ) }
    dend_2 { pt3dadd( -7.97177, -44.8791, 19.4775, 1.08 ) }
    dend_2 { pt3dadd( -8.0727, -46.1206, 19.5503, 1.08 ) }
    dend_2 { pt3dadd( -8.14775, -48.5309, 19.5848, 1.08 ) }
    dend_2 { pt3dadd( -8.1143, -51.1171, 19.5748, 0.96 ) }
    dend_2 { pt3dadd( -8.06217, -53.0019, 19.5199, 0.84 ) }
    dend_2 { pt3dadd( -8.06411, -55.1473, 19.5499, 1.2 ) }
    dend_2 { pt3dadd( -8.26227, -57.7248, 19.7551, 1.45 ) }
    dend_2 { pt3dadd( -8.61159, -59.8499, 20.0424, 1.2 ) }
    dend_2 { pt3dadd( -9.06194, -61.8604, 20.3981, 1.2 ) }
    dend_2 { pt3dadd( -9.49803, -63.4004, 20.7113, 1.2 ) }
    dend_2 { pt3dadd( -10.7487, -67.2755, 21.5983, 1.2 ) }
    dend_2 { pt3dadd( -11.5667, -69.3981, 22.2696, 1.2 ) }
    dend_2 { pt3dadd( -12.2393, -70.9263, 22.9093, 1.57 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 74/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -44.326, 111.774, 0.486926, 1.2 ) }
    dend_36 { pt3dadd( -44.184, 112.272, 0.369454, 1.2 ) }
    dend_36 { pt3dadd( -43.3312, 115.979, -0.739872, 0.36 ) }
    dend_36 { pt3dadd( -43.0454, 117.371, -1.15544, 0.36 ) }
    dend_36 { pt3dadd( -42.8454, 118.438, -1.47821, 0.96 ) }
    dend_36 { pt3dadd( -42.4707, 120.754, -2.11024, 0.12 ) }
    dend_36 { pt3dadd( -42.1579, 123.273, -2.75675, 1.33 ) }
    dend_36 { pt3dadd( -41.8435, 126.899, -3.57898, 0.24 ) }
    dend_36 { pt3dadd( -41.7613, 128.876, -3.9505, 0.24 ) }
    dend_36 { pt3dadd( -41.7124, 131.108, -4.3186, 0.24 ) }
    dend_36 { pt3dadd( -41.6932, 133.654, -4.67642, 1.93 ) }
    dend_36 { pt3dadd( -41.7021, 136.96, -5.03411, 0.48 ) }
    dend_36 { pt3dadd( -41.715, 139.247, -5.19396, 0.48 ) }
    dend_36 { pt3dadd( -41.7511, 141.243, -5.24569, 1.57 ) }
    dend_36 { pt3dadd( -41.9141, 144.681, -5.34765, 0.72 ) }
    dend_36 { pt3dadd( -42.0386, 146.144, -5.36827, 0.6 ) }
    dend_36 { pt3dadd( -42.2975, 148.373, -5.39142, 1.57 ) }
    dend_36 { pt3dadd( -42.7809, 151.691, -5.39509, 0.48 ) }
    dend_36 { pt3dadd( -43.3627, 154.786, -5.41037, 0.24 ) }
    dend_36 { pt3dadd( -43.919, 157.507, -5.47984, 1.57 ) }
    dend_36 { pt3dadd( -44.7036, 161.081, -5.62683, 0.6 ) }
    dend_36 { pt3dadd( -45.2558, 163.553, -5.74501, 1.93 ) }
    dend_36 { pt3dadd( -45.6214, 165.4, -5.90126, 0.6 ) }
    dend_36 { pt3dadd( -45.8687, 166.909, -6.06446, 1.81 ) }
    dend_36 { pt3dadd( -46.2195, 170.058, -6.48184, 0.12 ) }
    dend_36 { pt3dadd( -46.3169, 171.521, -6.64138, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_36 { pt3dadd( -46.3811, 173.236, -6.84499, 0.12 ) }
    dend_36 { pt3dadd( -46.5118, 176.423, -7.06312, 2.05 ) }
    dend_36 { pt3dadd( -46.6712, 180.075, -7.00202, 0.72 ) }
    dend_36 { pt3dadd( -46.7521, 181.774, -6.80067, 1.33 ) }
    dend_36 { pt3dadd( -46.9455, 185.658, -5.84972, 0.48 ) }
    dend_36 { pt3dadd( -47.0151, 187.406, -5.29434, 1.57 ) }
    dend_36 { pt3dadd( -47.0308, 190.032, -4.19292, 0.36 ) }
    dend_36 { pt3dadd( -46.9565, 193.272, -2.54672, 0.36 ) }
    dend_36 { pt3dadd( -46.77, 195.71, -1.13942, 0.96 ) }
    dend_36 { pt3dadd( -46.3326, 199.465, 1.16782, 0.36 ) }
    dend_36 { pt3dadd( -46.0991, 200.841, 2.04536, 0.96 ) }
    dend_36 { pt3dadd( -45.2596, 204.554, 4.39544, 0.6 ) }
    dend_36 { pt3dadd( -45.0363, 205.22, 4.78523, 0.84 ) }
    dend_36 { pt3dadd( -43.792, 207.737, 6.26488, 0.6 ) }
    dend_36 { pt3dadd( -42.9419, 208.799, 6.78383, 0.96 ) }
    dend_36 { pt3dadd( -41.8835, 209.825, 7.24486, 0.36 ) }
    dend_36 { pt3dadd( -40.3865, 210.997, 7.71204, 0.96 ) }
    dend_36 { pt3dadd( -37.8545, 212.448, 8.02798, 0.48 ) }
    dend_36 { pt3dadd( -35.0324, 213.757, 8.17735, 0.84 ) }
    dend_36 { pt3dadd( -29.5002, 215.61, 7.89067, 0.12 ) }
    dend_36 { pt3dadd( -25.7088, 225.885, 7.99398, 0.12 ) }
    dend_36 { pt3dadd( -22.9147, 236.442, 7.96934, 0.12 ) }
    dend_36 { pt3dadd( -20.8036, 246.963, 9.97452, 0.12 ) }
    dend_36 { pt3dadd( -18.287, 257.578, 10.2005, 0.12 ) }
    dend_36 { pt3dadd( -17.8331, 268.356, 8.71414, 0.12 ) }
    dend_36 { pt3dadd( -18.8893, 278.751, 5.52115, 0.12 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 26/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -86.2582, 218.322, 275.884, 0.6 ) }
    dend_34 { pt3dadd( -86.509, 221.943, 280.354, 0.6 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 28/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -86.2582, 218.322, 275.884, 0.6 ) }
    dend_33 { pt3dadd( -89.805, 221.958, 284.248, 0.6 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 30/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 139.817, -159.837, 21.7771, 0.6 ) }
    dend_21 { pt3dadd( 145.446, -165.598, 23.2972, 0.6 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 32/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 139.817, -159.837, 21.7771, 0.6 ) }
    dend_20 { pt3dadd( 146.165, -165.644, 22.4397, 0.6 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 34/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -34.1045, -163.394, -41.2148, 0.48 ) }
    dend_18 { pt3dadd( -32.763, -166.804, -44.9663, 0.48 ) }
    dend_18 { pt3dadd( -32.3245, -167.833, -46.0794, 0.72 ) }
    dend_18 { pt3dadd( -31.534, -169.423, -47.7368, 0.24 ) }
    dend_18 { pt3dadd( -29.5068, -173.165, -51.4895, 1.33 ) }
    dend_18 { pt3dadd( -26.3138, -178.822, -56.8541, 0.6 ) }
    dend_18 { pt3dadd( -25.4274, -180.35, -58.199, 0.36 ) }
    dend_18 { pt3dadd( -24.0608, -182.538, -59.9722, 0.36 ) }
    dend_18 { pt3dadd( -22.6152, -184.726, -61.7001, 0.36 ) }
    dend_18 { pt3dadd( -21.1153, -186.911, -63.3274, 0.96 ) }
    dend_18 { pt3dadd( -18.7842, -190.261, -65.4228, 0.6 ) }
    dend_18 { pt3dadd( -17.0522, -192.73, -66.7074, 1.2 ) }
    dend_18 { pt3dadd( -15.9588, -194.407, -67.6158, 0.48 ) }
    dend_18 { pt3dadd( -14.4273, -196.882, -69.1456, 0.48 ) }
    dend_18 { pt3dadd( -13.4568, -198.615, -70.4492, 0.48 ) }
    dend_18 { pt3dadd( -12.8762, -199.689, -71.3294, 0.6 ) }
    dend_18 { pt3dadd( -11.6709, -201.972, -73.2573, 0.24 ) }
    dend_18 { pt3dadd( -10.3547, -204.509, -75.485, 0.24 ) }
    dend_18 { pt3dadd( -8.44532, -208.103, -78.5513, 0.72 ) }
    dend_18 { pt3dadd( -6.2518, -211.873, -81.3954, 0.24 ) }
    dend_18 { pt3dadd( -5.09195, -213.745, -82.782, 0.36 ) }
    dend_18 { pt3dadd( -3.40249, -216.376, -84.647, 0.36 ) }
    dend_18 { pt3dadd( -1.04424, -219.891, -86.9503, 0.36 ) }
    dend_18 { pt3dadd( 0.38369, -221.927, -88.1369, 0.72 ) }
    dend_18 { pt3dadd( 3.17126, -225.715, -90.016, 0.72 ) }
    dend_18 { pt3dadd( 6.1662, -229.611, -91.729, 0.36 ) }
    dend_18 { pt3dadd( 8.54887, -232.655, -93.0386, 0.12 ) }
    dend_18 { pt3dadd( 10.0567, -234.538, -93.7854, 0.12 ) }
    dend_18 { pt3dadd( 11.3249, -236.095, -94.2972, 0.12 ) }
    dend_18 { pt3dadd( 13.4066, -238.59, -95.0178, 0.6 ) }
    dend_18 { pt3dadd( 16.2754, -241.907, -95.8064, 0.12 ) }
    dend_18 { pt3dadd( 17.2862, -243.069, -95.9622, 0.6 ) }
    dend_18 { pt3dadd( 18.8162, -244.813, -96.1243, 0.24 ) }
    dend_18 { pt3dadd( 20.8565, -247.254, -96.2757, 0.72 ) }
    dend_18 { pt3dadd( 24.3015, -251.511, -96.4756, 0.12 ) }
    dend_18 { pt3dadd( 25.418, -252.863, -96.5413, 0.6 ) }
    dend_18 { pt3dadd( 28.7231, -256.752, -96.7542, 0.12 ) }
    dend_18 { pt3dadd( 29.5698, -257.762, -96.8135, 0.72 ) }
    dend_18 { pt3dadd( 31.8794, -260.555, -96.9871, 0.12 ) }
    dend_18 { pt3dadd( 33.2085, -262.165, -97.0944, 0.6 ) }
    dend_18 { pt3dadd( 40.0611, -270.448, -97.6884, 0.12 ) }
    dend_18 { pt3dadd( 41.475, -272.13, -97.8182, 0.72 ) }
    dend_18 { pt3dadd( 42.6179, -273.438, -97.9328, 0.24 ) }
    dend_18 { pt3dadd( 43.6321, -274.613, -98.0225, 0.96 ) }
    dend_18 { pt3dadd( 45.757, -277.012, -98.0189, 0.24 ) }
    dend_18 { pt3dadd( 47.3915, -278.838, -97.8757, 0.24 ) }
    dend_18 { pt3dadd( 48.8085, -280.569, -97.722, 0.84 ) }
    dend_18 { pt3dadd( 50.2416, -282.369, -97.5922, 0.24 ) }
    dend_18 { pt3dadd( 52.4591, -285.262, -97.443, 0.84 ) }
    dend_18 { pt3dadd( 54.9495, -288.662, -97.4273, 0.24 ) }
    dend_18 { pt3dadd( 56.4699, -290.848, -97.5097, 0.72 ) }
    dend_18 { pt3dadd( 59.1828, -295.049, -98.2248, 0.12 ) }
    dend_18 { pt3dadd( 59.5521, -295.703, -98.4446, 0.6 ) }
    dend_18 { pt3dadd( 60.9906, -298.441, -99.7055, 0.12 ) }
    dend_18 { pt3dadd( 62.0453, -300.541, -101.277, 0.6 ) }
    dend_18 { pt3dadd( 62.6789, -301.751, -102.377, 0.12 ) }
    dend_18 { pt3dadd( 64.6643, -305.242, -105.884, 0.96 ) }
    dend_18 { pt3dadd( 66.9506, -308.949, -109.72, 0.36 ) }
    dend_18 { pt3dadd( 68.0061, -310.62, -111.427, 0.6 ) }
    dend_18 { pt3dadd( 71.8174, -316.749, -117.529, 0.24 ) }
    dend_18 { pt3dadd( 73.2913, -319.232, -119.822, 0.84 ) }
    dend_18 { pt3dadd( 75.0265, -322.178, -122.276, 0.36 ) }
    dend_18 { pt3dadd( 76.5694, -324.791, -124.101, 0.24 ) }
    dend_18 { pt3dadd( 77.6669, -326.684, -125.256, 0.84 ) }
    dend_18 { pt3dadd( 80.3335, -331.454, -127.647, 0.36 ) }
    dend_18 { pt3dadd( 82.137, -334.642, -128.762, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_18 { pt3dadd( 83.8423, -337.574, -129.701, 0.12 ) }
    dend_18 { pt3dadd( 85.5949, -340.354, -130.356, 0.12 ) }
    dend_18 { pt3dadd( 86.6811, -341.935, -130.63, 0.12 ) }
    dend_18 { pt3dadd( 88.0932, -343.884, -130.769, 0.6 ) }
    dend_18 { pt3dadd( 89.7869, -346.168, -130.617, 0.12 ) }
    dend_18 { pt3dadd( 91.1254, -348.043, -130.297, 0.12 ) }
    dend_18 { pt3dadd( 93.1465, -351.115, -129.822, 0.6 ) }
    dend_18 { pt3dadd( 94.4068, -353.312, -129.561, 0.36 ) }
    dend_18 { pt3dadd( 95.8886, -356.332, -129.326, 0.36 ) }
    dend_18 { pt3dadd( 97.0526, -359.258, -129.208, 0.12 ) }
    dend_18 { pt3dadd( 98.1272, -362.608, -129.111, 0.12 ) }
    dend_18 { pt3dadd( 99.1879, -366.812, -129.103, 0.12 ) }
    dend_18 { pt3dadd( 99.9486, -370.276, -129.234, 0.12 ) }
    dend_18 { pt3dadd( 100.603, -373.687, -129.417, 0.12 ) }
    dend_18 { pt3dadd( 101.109, -376.845, -129.675, 0.12 ) }
    dend_18 { pt3dadd( 101.488, -379.498, -129.952, 0.12 ) }
    dend_18 { pt3dadd( 101.765, -382.154, -130.224, 0.12 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 17/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -34.1045, -163.394, -41.2148, 0.72 ) }
    dend_15 { pt3dadd( -35.0877, -166.341, -41.0189, 0.72 ) }
    dend_15 { pt3dadd( -35.506, -167.743, -40.937, 0.72 ) }
    dend_15 { pt3dadd( -36.1854, -170.122, -40.8677, 1.33 ) }
    dend_15 { pt3dadd( -36.7658, -172.451, -40.8372, 0.36 ) }
    dend_15 { pt3dadd( -37.0275, -173.849, -40.8834, 0.36 ) }
    dend_15 { pt3dadd( -37.2072, -175.239, -40.957, 0.36 ) }
    dend_15 { pt3dadd( -37.3325, -177.589, -41.163, 1.45 ) }
    dend_15 { pt3dadd( -37.4013, -179.522, -41.2287, 0.48 ) }
    dend_15 { pt3dadd( -37.4665, -181.787, -41.2128, 0.48 ) }
    dend_15 { pt3dadd( -37.5777, -184.943, -41.0319, 1.57 ) }
    dend_15 { pt3dadd( -37.7162, -187.43, -40.7931, 0.6 ) }
    dend_15 { pt3dadd( -37.9245, -190.425, -40.4094, 1.81 ) }
    dend_15 { pt3dadd( -38.3393, -195.411, -39.7157, 0.12 ) }
    dend_15 { pt3dadd( -38.5993, -197.938, -39.3365, 1.57 ) }
    dend_15 { pt3dadd( -39.0029, -200.957, -38.8797, 0.12 ) }
    dend_15 { pt3dadd( -39.2348, -202.346, -38.6126, 0.12 ) }
    dend_15 { pt3dadd( -39.4657, -203.634, -38.3558, 1.81 ) }
    dend_15 { pt3dadd( -40.2485, -208.286, -37.6638, 0.48 ) }
    dend_15 { pt3dadd( -40.6057, -210.595, -37.4749, 1.93 ) }
    dend_15 { pt3dadd( -41.0054, -213.019, -37.3417, 0.48 ) }
    dend_15 { pt3dadd( -41.6087, -216.556, -37.1556, 1.2 ) }
    dend_15 { pt3dadd( -41.7102, -217.137, -37.1379, 2.05 ) }
    dend_15 { pt3dadd( -42.5, -221.249, -37.0844, 0.36 ) }
    dend_15 { pt3dadd( -42.7607, -222.426, -37.0883, 0.36 ) }
    dend_15 { pt3dadd( -43.0385, -223.584, -37.0847, 0.36 ) }
    dend_15 { pt3dadd( -43.6882, -226.217, -37.1731, 1.81 ) }
    dend_15 { pt3dadd( -44.364, -228.925, -37.4127, 0.6 ) }
    dend_15 { pt3dadd( -44.7137, -230.239, -37.4644, 1.93 ) }
    dend_15 { pt3dadd( -45.2324, -232.039, -37.3218, 0.48 ) }
    dend_15 { pt3dadd( -46.2708, -235.775, -37.0193, 2.17 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 48/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -12.2393, -70.9263, 22.9093, 0.84 ) }
    dend_4 { pt3dadd( -12.9357, -72.4733, 22.838, 0.84 ) }
    dend_4 { pt3dadd( -14.1, -74.0488, 22.88, 0.84 ) }
    dend_4 { pt3dadd( -15.7592, -75.4082, 22.9969, 0.84 ) }
    dend_4 { pt3dadd( -16.4068, -75.9388, 23.0425, 0.96 ) }
    dend_4 { pt3dadd( -17.4837, -76.8211, 23.1184, 0.6 ) }
    dend_4 { pt3dadd( -18.9169, -77.9953, 23.2194, 0.6 ) }
    dend_4 { pt3dadd( -20.5945, -78.807, 23.3616, 0.48 ) }
    dend_4 { pt3dadd( -22.711, -79.3003, 23.5699, 0.72 ) }
    dend_4 { pt3dadd( -29.4291, -83.7637, 22.8176, 0.72 ) }
    dend_4 { pt3dadd( -35.3391, -89.0005, 21.2419, 0.72 ) }
    dend_4 { pt3dadd( -41.9464, -93.6635, 21.1074, 0.72 ) }
    dend_4 { pt3dadd( -48.9375, -97.7802, 20.7814, 0.72 ) }
    dend_4 { pt3dadd( -56.4654, -100.933, 21.0038, 0.72 ) }
    dend_4 { pt3dadd( -63.6678, -104.683, 20.4602, 0.72 ) }
    dend_4 { pt3dadd( -69.9784, -109.647, 21.2537, 0.72 ) }
    dend_4 { pt3dadd( -76.574, -114.326, 21.3109, 0.72 ) }
    dend_4 { pt3dadd( -83.2167, -118.868, 20.4204, 0.72 ) }
    dend_4 { pt3dadd( -90.1245, -122.974, 19.251, 0.72 ) }
    dend_4 { pt3dadd( -95.7305, -128.285, 16.9851, 0.72 ) }
    dend_4 { pt3dadd( -101.963, -133.229, 15.6228, 0.72 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 69/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -12.2393, -70.9263, 22.9093, 0.96 ) }
    dend_3 { pt3dadd( -14.4573, -74.7647, 21.3454, 0.96 ) }
    dend_3 { pt3dadd( -16.8771, -79.2015, 19.8996, 0.84 ) }
    dend_3 { pt3dadd( -17.9655, -81.1854, 19.3271, 0.84 ) }
    dend_3 { pt3dadd( -18.7861, -82.5926, 18.8817, 0.72 ) }
    dend_3 { pt3dadd( -20.1819, -84.9214, 18.1251, 0.72 ) }
    dend_3 { pt3dadd( -21.0227, -86.3336, 17.6804, 0.96 ) }
    dend_3 { pt3dadd( -22.1288, -88.2359, 17.1577, 0.84 ) }
    dend_3 { pt3dadd( -23.8202, -91.0442, 16.4429, 0.72 ) }
    dend_3 { pt3dadd( -26.2447, -94.7784, 15.4398, 0.96 ) }
    dend_3 { pt3dadd( -27.8083, -97.0553, 14.7916, 0.72 ) }
    dend_3 { pt3dadd( -29.2148, -99.0273, 14.2017, 0.6 ) }
    dend_3 { pt3dadd( -30.6636, -101.063, 13.6201, 0.6 ) }
    dend_3 { pt3dadd( -31.9061, -102.781, 13.1467, 0.6 ) }
    dend_3 { pt3dadd( -33.6196, -105.116, 12.5771, 0.72 ) }
    dend_3 { pt3dadd( -35.1562, -107.027, 12.0378, 0.6 ) }
    dend_3 { pt3dadd( -36.9287, -108.904, 11.3052, 1.08 ) }
    dend_3 { pt3dadd( -38.8003, -110.621, 10.4773, 0.84 ) }
    dend_3 { pt3dadd( -40.6429, -112.113, 9.62733, 0.84 ) }
    dend_3 { pt3dadd( -43.0825, -113.858, 8.49772, 0.72 ) }
    dend_3 { pt3dadd( -46.422, -116.013, 6.78164, 0.72 ) }
    dend_3 { pt3dadd( -48.5354, -117.215, 5.69814, 0.6 ) }
    dend_3 { pt3dadd( -50.269, -118.086, 4.82219, 0.6 ) }
    dend_3 { pt3dadd( -53.0679, -119.421, 3.49173, 3.01 ) }
    dend_3 { pt3dadd( -54.9773, -120.411, 2.58649, 0.84 ) }
    dend_3 { pt3dadd( -58.1384, -122.214, 1.20222, 0.6 ) }
    dend_3 { pt3dadd( -59.5034, -123.07, 0.628876, 0.96 ) }
    dend_3 { pt3dadd( -60.5419, -123.723, 0.181846, 0.36 ) }
    dend_3 { pt3dadd( -62.3859, -124.833, -0.627084, 2.53 ) }
    dend_3 { pt3dadd( -65.7086, -126.782, -2.01068, 0.6 ) }
    dend_3 { pt3dadd( -66.9068, -127.433, -2.65687, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_3 { pt3dadd( -70.3116, -129.155, -4.90716, 0.48 ) }
    dend_3 { pt3dadd( -71.5734, -129.782, -5.89002, 0.48 ) }
    dend_3 { pt3dadd( -72.6288, -130.277, -6.85082, 0.48 ) }
    dend_3 { pt3dadd( -73.1123, -130.487, -7.38396, 2.65 ) }
    dend_3 { pt3dadd( -78.0442, -132.605, -12.9627, 0.24 ) }
    dend_3 { pt3dadd( -80.1943, -133.557, -15.5168, 0.24 ) }
    dend_3 { pt3dadd( -80.9895, -133.929, -16.4919, 2.05 ) }
    dend_3 { pt3dadd( -83.9283, -135.303, -20.1816, 0.36 ) }
    dend_3 { pt3dadd( -87.6255, -137.005, -24.6286, 2.05 ) }
    dend_3 { pt3dadd( -89.6366, -137.948, -26.7979, 0.36 ) }
    dend_3 { pt3dadd( -90.8358, -138.557, -27.8677, 1.45 ) }
    dend_3 { pt3dadd( -93.5378, -140.006, -29.9452, 0.12 ) }
    dend_3 { pt3dadd( -95.2148, -140.943, -31.161, 1.93 ) }
    dend_3 { pt3dadd( -97.6343, -142.378, -32.6753, 0.12 ) }
    dend_3 { pt3dadd( -99.5868, -143.639, -33.8725, 1.69 ) }
    dend_3 { pt3dadd( -104.12, -146.754, -36.8566, 0.24 ) }
    dend_3 { pt3dadd( -105.028, -147.424, -37.4825, 1.45 ) }
    dend_3 { pt3dadd( -108.74, -150.273, -40.4174, 0.6 ) }
    dend_3 { pt3dadd( -109.489, -150.863, -41.0627, 1.57 ) }
    dend_3 { pt3dadd( -112.345, -153.202, -43.7649, 0.12 ) }
    dend_3 { pt3dadd( -113.153, -153.875, -44.5803, 1.33 ) }
    dend_3 { pt3dadd( -115.931, -156.275, -47.0247, 0.6 ) }
    dend_3 { pt3dadd( -119.404, -159.37, -49.6465, 0.12 ) }
    dend_3 { pt3dadd( -120.501, -160.365, -50.3243, 2.05 ) }
    dend_3 { pt3dadd( -123.495, -163.145, -51.9905, 0.24 ) }
    dend_3 { pt3dadd( -125.481, -165.129, -52.8584, 1.81 ) }
    dend_3 { pt3dadd( -129.114, -169.022, -54.1617, 0.12 ) }
    dend_3 { pt3dadd( -130.351, -170.422, -54.413, 1.81 ) }
    dend_3 { pt3dadd( -133.253, -173.869, -54.6615, 0.12 ) }
    dend_3 { pt3dadd( -134.097, -174.869, -54.7218, 1.81 ) }
    dend_3 { pt3dadd( -135.889, -177.007, -54.7152, 0.12 ) }
    dend_3 { pt3dadd( -136.618, -177.83, -54.8195, 2.05 ) }
    dend_3 { pt3dadd( -137.944, -179.187, -55.3145, 0.36 ) }
    dend_3 { pt3dadd( -138.645, -179.851, -55.6111, 0.48 ) }
    dend_3 { pt3dadd( -139.867, -180.934, -56.2621, 0.24 ) }
    dend_3 { pt3dadd( -140.444, -181.41, -56.6145, 0.84 ) }
    dend_3 { pt3dadd( -144.275, -184.437, -59.1849, 0.36 ) }
    dend_3 { pt3dadd( -145.395, -185.353, -59.9681, 1.2 ) }
    dend_3 { pt3dadd( -147.314, -187.032, -61.3557, 0.12 ) }
    dend_3 { pt3dadd( -149.53, -189.022, -63.0399, 0.12 ) }
    dend_3 { pt3dadd( -150.703, -190.128, -63.915, 0.12 ) }
    dend_3 { pt3dadd( -151.243, -190.644, -64.2848, 1.45 ) }
    dend_3 { pt3dadd( -152.042, -191.439, -64.6884, 0.24 ) }
    dend_3 { pt3dadd( -152.863, -192.216, -65.1483, 0.24 ) }
    dend_3 { pt3dadd( -154.247, -193.395, -65.8435, 1.45 ) }
    dend_3 { pt3dadd( -155.898, -194.678, -66.6714, 0.48 ) }
    dend_3 { pt3dadd( -157.634, -195.946, -67.5519, 1.57 ) }
    dend_3 { pt3dadd( -160.477, -197.981, -69.0031, 0.12 ) }
    dend_3 { pt3dadd( -163.5, -200.146, -70.4855, 1.93 ) }
    dend_3 { pt3dadd( -165.364, -201.483, -71.3908, 0.12 ) }
    dend_3 { pt3dadd( -167.837, -203.373, -72.5204, 2.29 ) }
    dend_3 { pt3dadd( -169.512, -204.774, -73.2736, 0.12 ) }
    dend_3 { pt3dadd( -170.3, -205.509, -73.6427, 0.72 ) }
    dend_3 { pt3dadd( -171.779, -207.04, -74.3797, 0.12 ) }
    dend_3 { pt3dadd( -173.526, -209.164, -75.2682, 1.2 ) }
    dend_3 { pt3dadd( -175.018, -211.261, -76.1473, 0.48 ) }
    dend_3 { pt3dadd( -176.256, -213.214, -76.9075, 0.12 ) }
    dend_3 { pt3dadd( -177.89, -215.89, -78.1094, 0.48 ) }
    dend_3 { pt3dadd( -178.423, -216.747, -78.5117, 1.45 ) }
    dend_3 { pt3dadd( -179.58, -218.59, -79.3797, 0.24 ) }
    dend_3 { pt3dadd( -180.326, -219.706, -79.9635, 0.24 ) }
    dend_3 { pt3dadd( -180.943, -220.548, -80.4649, 0.6 ) }
    dend_3 { pt3dadd( -183.128, -223.263, -82.111, 0.6 ) }
    dend_3 { pt3dadd( -183.922, -224.239, -82.6265, 0.12 ) }
    dend_3 { pt3dadd( -185.219, -225.734, -83.4729, 0.12 ) }
    dend_3 { pt3dadd( -187.826, -228.57, -85.0749, 0.12 ) }
    dend_3 { pt3dadd( -188.597, -229.386, -85.5289, 1.2 ) }
    dend_3 { pt3dadd( -189.666, -230.513, -86.1889, 1.2 ) }
    dend_3 { pt3dadd( -191.256, -232.19, -87.1138, 0.24 ) }
    dend_3 { pt3dadd( -193.388, -234.495, -88.3457, 1.69 ) }
    dend_3 { pt3dadd( -194.441, -235.576, -89.0398, 2.05 ) }
    dend_3 { pt3dadd( -196.216, -237.312, -90.294, 0.6 ) }
    dend_3 { pt3dadd( -199.179, -240.168, -92.4915, 0.36 ) }
    dend_3 { pt3dadd( -200.67, -241.587, -93.7144, 0.12 ) }
    dend_3 { pt3dadd( -201.911, -242.744, -94.8029, 0.12 ) }
    dend_3 { pt3dadd( -206.871, -247.313, -99.3966, 0.12 ) }
    dend_3 { pt3dadd( -209.787, -249.941, -102.252, 0.24 ) }
    dend_3 { pt3dadd( -211.964, -251.878, -104.436, 0.24 ) }
    dend_3 { pt3dadd( -215.249, -254.772, -107.795, 0.24 ) }
    dend_3 { pt3dadd( -217.552, -256.8, -110.279, 0.24 ) }
    dend_3 { pt3dadd( -220.507, -259.365, -113.525, 0.24 ) }
    dend_3 { pt3dadd( -221.974, -260.723, -115.139, 0.24 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 82/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -18.8893, 278.751, 5.52115, 0.6 ) }
    dend_38 { pt3dadd( -17.3471, 288.684, 5.24664, 0.6 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 84/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -18.8893, 278.751, 5.52115, 0.6 ) }
    dend_37 { pt3dadd( -17.5699, 287.634, 6.45339, 0.6 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 86/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -46.2708, -235.775, -37.0193, 0.36 ) }
    dend_17 { pt3dadd( -49.1361, -239.315, -38.6791, 0.36 ) }
    dend_17 { pt3dadd( -50.7005, -241.396, -39.4702, 0.36 ) }
    dend_17 { pt3dadd( -51.522, -242.855, -40.0784, 0.72 ) }
    dend_17 { pt3dadd( -52.2026, -244.596, -40.8945, 0.36 ) }
    dend_17 { pt3dadd( -52.5478, -245.66, -41.3996, 0.12 ) }
    dend_17 { pt3dadd( -52.7264, -246.503, -41.9139, 0.12 ) }
    dend_17 { pt3dadd( -52.8534, -248.015, -42.8913, 0.48 ) }
    dend_17 { pt3dadd( -52.9948, -252.011, -45.7302, 0.12 ) }
    dend_17 { pt3dadd( -53.0789, -255.549, -48.3409, 0.12 ) }
    dend_17 { pt3dadd( -53.0906, -256.701, -49.1834, 0.6 ) }
    dend_17 { pt3dadd( -53.1959, -262.801, -53.5555, 0.48 ) }
    dend_17 { pt3dadd( -53.2167, -264.109, -54.5175, 0.84 ) }
    dend_17 { pt3dadd( -53.2686, -266.748, -56.4925, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_17 { pt3dadd( -53.3549, -268.124, -57.4775, 0.84 ) }
    dend_17 { pt3dadd( -53.5475, -269.87, -58.6565, 0.24 ) }
    dend_17 { pt3dadd( -53.6839, -270.732, -59.1583, 0.48 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 3/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -46.2708, -235.775, -37.0193, 0.36 ) }
    dend_16 { pt3dadd( -47.0874, -238.343, -37.4312, 0.36 ) }
    dend_16 { pt3dadd( -47.5825, -239.989, -37.8798, 0.36 ) }
    dend_16 { pt3dadd( -48.1764, -241.833, -38.4273, 0.72 ) }
    dend_16 { pt3dadd( -48.5975, -243.132, -38.805, 0.48 ) }
    dend_16 { pt3dadd( -49.4862, -245.537, -39.3634, 0.84 ) }
    dend_16 { pt3dadd( -50.6142, -248.383, -39.8958, 0.48 ) }
    dend_16 { pt3dadd( -51.6244, -250.633, -40.0465, 1.08 ) }
    dend_16 { pt3dadd( -52.3485, -252.205, -39.971, 0.36 ) }
    dend_16 { pt3dadd( -53.1043, -253.82, -39.7326, 1.2 ) }
    dend_16 { pt3dadd( -54.3892, -256.649, -39.0633, 0.24 ) }
    dend_16 { pt3dadd( -55.0833, -258.407, -38.5753, 1.57 ) }
    dend_16 { pt3dadd( -56.4269, -262.346, -37.3379, 0.6 ) }
    dend_16 { pt3dadd( -56.9673, -264.247, -36.7768, 1.45 ) }
    dend_16 { pt3dadd( -57.3257, -265.701, -36.4437, 0.24 ) }
    dend_16 { pt3dadd( -57.865, -268.051, -36.088, 1.33 ) }
    dend_16 { pt3dadd( -58.7732, -272.232, -35.8427, 0.48 ) }
    dend_16 { pt3dadd( -59.1984, -273.854, -35.807, 1.33 ) }
    dend_16 { pt3dadd( -59.893, -276.22, -35.934, 0.12 ) }
    dend_16 { pt3dadd( -60.6542, -278.439, -36.0859, 0.12 ) }
    dend_16 { pt3dadd( -61.4267, -280.274, -36.1867, 1.33 ) }
    dend_16 { pt3dadd( -62.7715, -282.611, -36.178, 0.12 ) }
    dend_16 { pt3dadd( -64.4789, -284.871, -35.9604, 1.45 ) }
    dend_16 { pt3dadd( -66.2852, -287.016, -35.7185, 0.24 ) }
    dend_16 { pt3dadd( -67.2352, -288.06, -35.4926, 0.24 ) }
    dend_16 { pt3dadd( -69.3178, -290.348, -34.8261, 1.33 ) }
    dend_16 { pt3dadd( -72.0979, -293.497, -33.6674, 0.24 ) }
    dend_16 { pt3dadd( -73.7605, -295.443, -32.8502, 1.33 ) }
    dend_16 { pt3dadd( -75.8166, -297.682, -31.7076, 0.48 ) }
    dend_16 { pt3dadd( -78.277, -300.214, -30.1482, 0.36 ) }
    dend_16 { pt3dadd( -80.0894, -302.095, -28.6895, 1.57 ) }
    dend_16 { pt3dadd( -81.2421, -303.18, -27.4936, 0.6 ) }
    dend_16 { pt3dadd( -82.0497, -303.936, -26.5, 0.6 ) }
    dend_16 { pt3dadd( -84.9897, -306.472, -22.561, 1.2 ) }
    dend_16 { pt3dadd( -85.7062, -307.045, -21.5853, 0.36 ) }
    dend_16 { pt3dadd( -89.1494, -309.757, -16.9515, 1.69 ) }
    dend_16 { pt3dadd( -93.0218, -312.843, -11.7321, 0.48 ) }
    dend_16 { pt3dadd( -94.2542, -313.897, -10.048, 0.48 ) }
    dend_16 { pt3dadd( -96.0105, -315.642, -7.4589, 0.36 ) }
    dend_16 { pt3dadd( -96.7184, -316.584, -6.21946, 0.36 ) }
    dend_16 { pt3dadd( -97.2013, -317.386, -5.25397, 0.12 ) }
    dend_16 { pt3dadd( -97.6825, -319.095, -3.66026, 0.6 ) }
    dend_16 { pt3dadd( -97.235, -322.784, -0.793615, 0.6 ) }
    dend_16 { pt3dadd( -96.7351, -323.737, -0.0754068, 0.48 ) }
    dend_16 { pt3dadd( -94.857, -325.123, 0.840776, 0.36 ) }
    dend_16 { pt3dadd( -92.1614, -326.127, 1.51897, 0.12 ) }
    dend_16 { pt3dadd( -90.1223, -326.495, 1.80778, 0.12 ) }
    dend_16 { pt3dadd( -88.6848, -326.527, 2.15822, 0.6 ) }
    dend_16 { pt3dadd( -84.2332, -326.085, 3.87341, 0.6 ) }
    dend_16 { pt3dadd( -82.6408, -325.79, 4.86974, 0.24 ) }
    dend_16 { pt3dadd( -81.4386, -325.478, 6.08297, 0.24 ) }
    dend_16 { pt3dadd( -79.9235, -324.982, 8.05135, 0.24 ) }
    dend_16 { pt3dadd( -75.9764, -323.39, 14.3753, 0.24 ) }
    dend_16 { pt3dadd( -74.5283, -322.729, 17.3334, 0.24 ) }
    dend_16 { pt3dadd( -74.0976, -322.506, 18.4914, 0.84 ) }
    dend_16 { pt3dadd( -73.156, -322.032, 21.5622, 0.84 ) }
    dend_16 { pt3dadd( -74.9161, -330.04, 28.4563, 0.84 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_39, dend_27, dend_25, dend_12, dend_7, dend_0, dend_42, dend_41, dend_31, dend_28, dend_26, dend_22, dend_13, dend_11, dend_8, dend_6, dend_1, dend_35, dend_32, dend_30, dend_29, dend_24, dend_23, dend_19, dend_14, dend_10, dend_9, dend_5, dend_2, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_4, dend_3, dend_38, dend_37, dend_17, dend_16]}
    ModelViewParmSubset_2 = new SectionList()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_39, dend_27, dend_25, dend_12, dend_7, dend_0, dend_42, dend_41, dend_31, dend_28, dend_26, dend_22, dend_13, dend_11, dend_8, dend_6, dend_1, dend_35, dend_32, dend_30, dend_29, dend_24, dend_23, dend_19, dend_14, dend_10, dend_9, dend_5, dend_2, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_4, dend_3, dend_38, dend_37, dend_17, dend_16]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_40 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_28 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_11 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_8 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_6 OneSecGrp_SectionRef_19.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_35 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_32 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_24 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_23 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_14 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_5 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_36 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_18 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_15 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_4 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_3 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_17 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_16 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_12 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_13 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_7 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_31 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_2 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_21 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_9 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_10 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_41 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_42 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_37 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_26 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_33 OneSecGrp_SectionRef_36.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, axon_0, axon_0, dend_42, dend_41, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_38, dend_37, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_42 all.append()
    dend_41 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_40 nseg = 15
    dend_39 nseg = 9
    dend_25 nseg = 17
    dend_28 nseg = 3
    dend_11 nseg = 15
    dend_8 nseg = 11
    dend_6 nseg = 9
    dend_35 nseg = 5
    dend_32 nseg = 19
    dend_30 nseg = 9
    dend_24 nseg = 11
    dend_23 nseg = 7
    dend_19 nseg = 11
    dend_14 nseg = 7
    dend_5 nseg = 11
    dend_36 nseg = 9
    dend_18 nseg = 15
    dend_15 nseg = 3
    dend_4 nseg = 5
    dend_3 nseg = 17
    dend_17 nseg = 3
    dend_16 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_LBC_b4586f425b_0_0


