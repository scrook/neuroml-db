// Cell: bNAC219_L6_SBC_6dbc1eb2b9_0_0
/*
{
  "id" : "bNAC219_L6_SBC_6dbc1eb2b9_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.46247, 5.85861, -0.00377942, 7.43125", "-6.65141, 5.3667, -0.00311965, 9.16559", "-5.84034, 4.87478, -0.00245988, 11.1008", "-5.02928, 4.38287, -0.0018001, 12.7187", "-4.21821, 3.89095, -0.00114033, 13.407", "-3.40715, 3.39904, -4.80554E-4, 14.0331", "-2.59608, 2.90712, 1.79219E-4, 14.6433", "-1.78502, 2.41521, 8.38993E-4, 15.2536", "-0.973954, 1.92329, 0.00149877, 15.5093", "-0.162889, 1.43138, 0.00215854, 15.3073", "0.648176, 0.939463, 0.00281831, 15.1053", "1.45924, 0.447548, 0.00347809, 14.9033", "2.27031, -0.0443665, 0.00413786, 14.4818", "3.08137, -0.536281, 0.00479764, 13.7638", "3.89244, -1.0282, 0.00545741, 12.8143", "4.7035, -1.52011, 0.00611718, 11.7232", "5.51457, -2.01203, 0.00677696, 10.29", "6.32563, -2.50394, 0.00743673, 8.85677", "7.1367, -2.99586, 0.0080965, 7.04177", "7.94776, -3.48777, 0.00875628, 4.64246", "8.75883, -3.97969, 0.00941605, 2.78846" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-2.16814, 8.01014, -1.4503, 1.32", "-2.50808, 8.96512, -1.87354, 1.32", "-2.76479, 9.68947, -2.23676, 1.32", "-3.39993, 11.3281, -3.13483, 2.04", "-4.37266, 13.4334, -4.37995, 1.32", "-5.09841, 14.9569, -5.2864, 1.8", "-5.79919, 16.4279, -6.16167, 1.32", "-6.3896, 17.6383, -6.94627, 1.68", "-6.90546, 18.6706, -7.67905, 1.68", "-7.6678, 20.1451, -8.8569, 1.08", "-8.22962, 21.0617, -9.55165, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "6.03186, -3.37986, -1.5003, 1.8", "7.14292, -4.16263, -2.69793, 1.8", "9.49871, -5.82234, -5.23725, 1.8", "11.1047, -6.95385, -6.96844, 1.8", "12.6137, -8.01698, -8.59501, 2.16", "15.2359, -9.86439, -11.4215, 2.4", "15.6372, -10.1471, -11.8541, 2.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "3.09186, -5.27986, 5.0897, 2.64", "3.15033, -5.68909, 5.38504, 2.64", "3.24549, -6.19732, 5.72855, 2.64", "3.76636, -8.28314, 7.00881, 1.92", "4.14787, -9.50066, 7.69165, 1.92", "4.60773, -10.7433, 8.33581, 1.92", "5.17576, -12.1657, 9.0216, 2.4", "5.45608, -12.7926, 9.30103, 2.4", "6.01973, -13.9361, 9.77136, 1.8", "6.79961, -15.3306, 10.2207, 1.56", "7.61234, -16.6544, 10.5893, 1.8", "8.10371, -17.4131, 10.7568, 1.8", "8.27653, -17.6677, 10.8105, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-7.79815, 0.930143, -0.0303001, 5.65", "-9.33894, 0.235, -0.0231769, 4.93", "-10.2249, -0.164728, -0.0190808, 4.81", "-12.2663, -1.08567, -0.00964373, 1.92", "-13.6886, -1.72738, -0.00306808, 1.68", "-15.2002, -2.40935, 0.00392016, 1.68", "-18.0692, -3.70371, 0.0171836, 3.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997377214663
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.75883, -3.97969, 0.00941605, 1.21105", "21.5843, -11.7584, 0.00941605, 1.21105", "34.4097, -19.5371, 0.00941605, 1.21105" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-8.22962, 21.0617, -9.55165, 0.6", "-9.45711, 23.4649, -10.0038, 0.6", "-10.3076, 25.1326, -10.4804, 0.6", "-10.892, 26.2073, -10.8577, 0.6", "-11.662, 27.9035, -11.7495, 1.68", "-12.4122, 30.0905, -13.0582, 0.72", "-12.6957, 30.9169, -13.5528, 0.72", "-13.7807, 34.4005, -15.9415, 0.6", "-14.4388, 36.755, -17.7528, 1.44", "-15.4514, 40.9984, -21.3687, 0.84", "-15.7435, 42.8536, -23.1411, 1.8" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-8.22962, 21.0617, -9.55165, 1.32", "-8.2278, 21.7122, -11.0259, 1.32", "-8.25469, 22.8766, -13.471, 1.32", "-8.2563, 23.7243, -15.1016, 1.32", "-8.23762, 24.6866, -16.8662, 0.96", "-8.21947, 25.6213, -18.5801, 0.96", "-8.20657, 26.2854, -19.798, 1.2", "-8.22744, 27.1559, -21.3536, 0.48", "-8.21191, 28.0938, -22.8267, 1.32", "-8.18938, 28.6978, -23.6804, 1.32" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "15.6372, -10.1471, -11.8541, 1.56", "16.0888, -11.0403, -13.5461, 1.56", "16.9701, -13.4711, -17.3069, 1.32", "17.2032, -14.9336, -19.2971, 1.32", "17.3163, -16.3988, -21.0085, 1.68", "17.3518, -17.4697, -22.1273, 1.68", "17.3599, -18.3947, -22.9704, 1.68", "17.2811, -20.42, -24.3406, 1.2", "16.8785, -24.8569, -26.4095, 1.2", "16.668, -26.8044, -27.1698, 1.56", "16.5833, -27.6365, -27.4591, 1.56", "16.423, -29.5882, -28.0945, 1.2", "16.3117, -31.197, -28.6396, 1.2", "16.2188, -34.3245, -29.7452, 1.2", "16.2548, -35.5317, -30.1765, 1.2", "16.3094, -36.3885, -30.5095, 1.56", "16.4548, -38.5692, -31.4533, 1.08", "16.5964, -40.8196, -32.5329, 2.04", "16.6587, -41.9021, -33.0431, 2.04", "16.769, -43.8074, -33.7129, 1.32", "16.9969, -46.9165, -34.6994, 2.16" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "15.6372, -10.1471, -11.8541, 1.32", "18.7468, -10.4907, -11.6367, 1.32", "20.3846, -10.6716, -11.5222, 1.32", "23.7627, -11.0449, -11.2861, 1.32", "25.1015, -11.1928, -11.1925, 1.32", "29.7077, -11.7017, -10.8705, 1.2" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "8.27653, -17.6677, 10.8105, 1.2", "9.4266, -18.4913, 12.0655, 1.2", "11.0938, -19.6883, 13.9275, 1.2", "12.3013, -20.5316, 15.3032, 1.2", "13.7675, -21.5194, 16.9708, 2.04", "16.5134, -23.3229, 20.0622, 1.08", "17.9013, -24.2449, 21.6159, 1.08", "18.7448, -24.8711, 22.6205, 1.08", "19.6887, -25.5712, 23.7623, 1.08", "20.5067, -26.1042, 24.641, 1.08", "21.2675, -26.5336, 25.3105, 1.08", "21.8962, -26.8087, 25.7202, 1.08", "23.2659, -27.4361, 26.5959, 1.08", "24.0915, -27.8141, 27.071, 1.08", "25.0552, -28.3075, 27.7199, 1.08", "25.8086, -28.706, 28.2671, 1.08", "26.902, -29.2967, 29.1544, 1.08", "27.5287, -29.6147, 29.7315, 1.08", "29.2369, -30.4146, 31.5716, 1.92", "31.2571, -31.1645, 34.1257, 0.96", "31.8328, -31.2885, 34.962, 0.96", "33.0626, -31.2528, 36.9563, 0.72", "33.8242, -30.9465, 38.2809, 1.32", "34.5716, -30.3478, 39.6419, 1.32", "35.7276, -28.992, 41.6027, 0.84", "36.0882, -28.5542, 42.073, 0.84", "36.7724, -27.7823, 42.8359, 0.84", "37.4488, -27.1318, 43.35, 0.84", "38.0261, -26.7214, 43.6305, 0.84", "39.7718, -25.7887, 44.1957, 0.72", "40.9567, -25.3482, 44.4405, 0.72", "41.7413, -25.0747, 44.5715, 0.72", "43.3227, -24.5279, 44.7372, 0.72", "44.1072, -24.2805, 44.7839, 0.72", "44.467, -24.164, 44.7812, 0.72", "46.3761, -23.5093, 44.4811, 0.96", "53.6046, -25.2343, 51.8983, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "8.27653, -17.6677, 10.8105, 0.96", "8.45712, -20.4463, 10.7165, 0.96", "8.6472, -23.371, 10.6175, 1.08", "8.7451, -24.8773, 10.5665, 1.08", "8.91398, -27.4757, 10.4786, 1.56", "9.02714, -29.2168, 10.4196, 1.92" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-18.0692, -3.70371, 0.0171836, 1.08", "-18.7306, -5.68611, 0.275369, 1.08", "-18.9665, -6.48326, 0.339006, 1.08", "-19.238, -7.57214, 0.410756, 1.08", "-19.4386, -8.58068, 0.502292, 1.08", "-19.6383, -9.87029, 0.542771, 1.08", "-19.7615, -10.84, 0.52147, 1.32", "-19.9868, -13.5287, 0.322204, 1.8", "-19.9945, -14.2812, 0.230642, 1.8", "-19.8963, -15.7098, -0.0302564, 1.56", "-19.5665, -18.051, -0.596981, 1.44", "-19.2885, -19.4206, -1.00713, 1.44", "-18.9839, -20.6682, -1.41787, 1.56", "-18.5606, -22.2666, -1.93965, 1.32", "-18.1665, -23.8563, -2.46538, 1.32", "-17.8125, -25.3512, -2.99777, 2.04", "-17.5631, -26.4792, -3.38967, 2.04", "-17.3201, -27.7073, -3.86026, 1.08", "-17.0628, -29.2846, -4.53031, 1.44", "-16.842, -30.8771, -5.26692, 1.44", "-16.6257, -32.327, -5.9723, 0.96", "-16.4672, -33.3059, -6.47241, 1.56", "-16.2091, -34.7513, -7.22588, 1.56", "-15.865, -36.3643, -8.07567, 2.16", "-15.5303, -37.6073, -8.69352, 1.56", "-15.1965, -38.5157, -9.04744, 1.56", "-14.3642, -40.2654, -9.6397, 1.8", "-13.9947, -40.9179, -9.84489, 1.8", "-13.5266, -41.6602, -10.0582, 1.8", "-12.9673, -42.5017, -10.2717, 1.8", "-11.3592, -44.8691, -10.9443, 1.56", "-9.76922, -47.1053, -11.6508, 1.56", "-9.14773, -47.9142, -11.949, 1.56", "-8.63761, -48.6198, -12.4186, 1.56", "-8.0833, -49.4045, -12.998, 1.8", "-6.91618, -51.1399, -14.447, 1.44", "-6.44255, -51.8998, -15.1974, 1.44", "-5.63189, -53.2517, -16.7142, 1.8", "-3.08127, -57.629, -22.2685, 1.8" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-18.0692, -3.70371, 0.0171836, 1.56", "-19.8763, -4.75531, 1.39973, 1.56", "-21.8626, -5.91123, 2.91942, 1.32", "-23.3265, -6.76313, 4.03941, 1.32", "-25.2606, -7.88862, 5.5191, 1.68", "-26.9644, -8.88017, 6.82269, 2.04" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "34.4097, -19.5371, 0.00941605, 0.119526", "47.2351, -27.3158, 0.00941605, 0.119526", "60.0606, -35.0945, 0.00941605, 0.119526" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-15.7435, 42.8536, -23.1411, 0.84", "-13.4018, 43.9694, -18.5383, 0.84", "-12.7625, 44.274, -17.2816, 1.8" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-15.7435, 42.8536, -23.1411, 0.96", "-15.6978, 43.9914, -24.3731, 0.96", "-15.6709, 44.8834, -25.1721, 0.96", "-15.6056, 46.4266, -26.6077, 1.2", "-15.3427, 49.2368, -29.2355, 0.96", "-15.209, 50.0988, -29.9707, 0.72", "-14.9065, 51.442, -31.0417, 1.44", "-14.6176, 52.2191, -31.6417, 1.44", "-13.358, 54.7383, -33.4759, 0.84", "-12.8229, 55.5464, -34.1913, 0.72", "-11.869, 56.7325, -35.5367, 1.68", "-11.0202, 57.6775, -36.7261, 0.72", "-10.0999, 58.5836, -38.0181, 1.2", "-9.22691, 59.377, -39.2685, 1.32", "-6.11545, 61.9465, -43.7416, 0.72", "-4.67942, 63.0906, -46.1837, 0.72" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-8.18938, 28.6978, -23.6804, 0.84", "-7.24983, 30.1882, -25.2223, 0.84", "-6.3432, 31.5756, -26.7316, 0.84", "-5.85256, 32.3805, -27.7064, 0.84", "-5.2857, 33.4201, -29.1572, 0.6", "-4.8039, 34.3037, -30.3902, 0.6", "-4.11766, 35.5623, -32.1466, 1.32", "-3.37588, 37.093, -34.4108, 0.72", "-2.54189, 38.7801, -36.9468, 1.56", "-1.59887, 40.753, -40.1453, 0.84" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-8.18938, 28.6978, -23.6804, 0.84", "-10.4799, 31.5998, -31.1807, 0.84", "-10.91, 32.1447, -32.589, 1.2", "-11.5169, 32.9136, -34.5764, 0.84", "-12.0625, 33.6049, -36.3631, 1.2", "-13.125, 34.951, -39.8421, 0.84", "-13.6651, 35.6354, -41.6108, 1.2" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "16.9969, -46.9165, -34.6994, 0.72", "15.2817, -50.8369, -35.4531, 0.72", "14.6308, -52.2434, -35.6433, 1.2", "14.1601, -53.1961, -35.7442, 1.2", "13.3848, -54.6246, -35.9719, 0.6", "12.41, -56.2594, -36.2829, 1.92", "11.3209, -57.9481, -36.6986, 1.08", "9.89314, -59.8522, -37.3667, 1.68", "8.89984, -61.0084, -37.8954, 1.68", "6.9347, -63.0577, -39.0584, 0.96", "6.0443, -63.877, -39.6263, 0.96", "4.51865, -65.1028, -40.6851, 1.44", "2.71455, -66.3602, -41.9886, 0.96", "1.42728, -67.2033, -43.0112, 1.44", "0.0388868, -68.11, -44.1486, 0.96", "-1.00544, -68.8308, -44.9967, 1.56", "-2.70013, -70.0731, -46.3924, 0.84", "-4.35383, -71.3635, -47.7232, 1.56", "-6.60234, -73.257, -49.5304, 1.08", "-7.78543, -74.3343, -50.4859, 0.84", "-9.23234, -75.7806, -51.683, 1.08", "-9.55191, -76.1244, -51.9488, 0.72", "-10.7926, -77.5677, -52.9996, 1.2", "-12.0321, -79.0992, -54.041, 0.6", "-13.0041, -80.276, -54.7687, 1.08", "-14.0905, -81.5561, -55.5806, 0.72", "-15.264, -82.8718, -56.4913, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "16.9969, -46.9165, -34.6994, 0.48", "18.7984, -48.0074, -35.5865, 0.48", "20.5706, -49.1064, -36.4903, 1.32", "21.7694, -49.8723, -37.1188, 0.96", "22.643, -50.4309, -37.5785, 1.56", "24.1603, -51.4161, -38.385, 0.96", "25.5727, -52.3615, -39.1485, 1.68", "27.065, -53.3974, -40.0075, 1.08", "28.2208, -54.2602, -40.704, 1.8", "28.6604, -54.6237, -40.9763, 1.8", "30.194, -56.0282, -41.9768, 1.08", "31.04, -56.9267, -42.5914, 1.56", "31.6554, -57.6967, -43.0748, 1.08", "32.2336, -58.5461, -43.5446, 1.56", "33.0452, -59.9507, -44.2231, 1.08", "33.5818, -61.0014, -44.6845, 1.68", "34.2122, -62.3777, -45.2288, 1.2", "34.7497, -63.5546, -45.6686, 1.2", "35.4625, -65.1099, -46.2292, 1.8", "36.0998, -66.6122, -46.7773, 1.2", "36.4322, -67.527, -47.2233, 1.8", "37.075, -69.4341, -48.309, 1.2", "37.757, -71.4813, -49.6271, 1.68", "38.1932, -72.7339, -50.5027, 1.2", "38.7819, -74.4358, -51.8449, 1.68", "40.0719, -78.0875, -54.9788, 1.2", "40.3968, -78.9862, -55.7967, 1.2", "40.6622, -79.7125, -56.4936, 1.2", "41.1375, -80.9924, -57.7794, 1.56", "42.1276, -83.3595, -60.2038, 0.96", "42.6972, -84.4546, -61.296, 1.44", "43.2033, -85.3483, -62.0512, 0.72", "43.6539, -86.2433, -62.8798, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "29.7077, -11.7017, -10.8705, 0.72", "31.4547, -10.7231, -10.9584, 0.72", "32.7034, -9.89069, -11.0331, 0.72", "33.6393, -9.18977, -11.0985, 0.72", "34.5096, -8.44902, -11.1934, 0.72", "35.5131, -7.48766, -11.3998, 0.48", "35.7928, -7.17325, -11.496, 0.96", "36.763, -5.81033, -12.0616, 0.6", "37.5386, -4.55051, -12.7586, 1.44", "38.2908, -3.23441, -13.6514, 0.72", "39.0942, -1.8511, -14.8404, 1.2", "40.0734, -0.158095, -16.4236, 0.6", "41.0896, 1.6117, -18.1919, 1.2", "41.9107, 3.0682, -19.7876, 0.84", "42.6542, 4.39977, -21.3985, 1.68", "43.6217, 6.00661, -23.5662, 0.84" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "29.7077, -11.7017, -10.8705, 0.48", "31.6169, -12.5121, -11.3183, 0.48", "33.0326, -13.2821, -11.6844, 0.96", "33.5811, -13.6528, -11.8486, 0.72", "35.5868, -15.2351, -12.4905, 1.2", "37.2652, -16.7456, -13.041, 0.84", "38.7862, -18.2981, -13.5572, 1.68", "39.9116, -19.7567, -13.9871, 0.96", "40.8997, -21.366, -14.3912, 1.92", "41.3848, -22.331, -14.5934, 1.92", "41.8966, -23.65, -14.8027, 0.96", "42.3689, -25.0507, -14.9444, 1.44", "42.609, -25.7994, -14.956, 1.44", "43.2792, -27.7315, -14.8222, 0.72", "43.5404, -28.4002, -14.7259, 0.72", "44.0703, -29.6488, -14.4765, 1.32", "45.0809, -31.6345, -13.8268, 1.32", "45.6099, -32.4787, -13.4331, 1.32", "46.1568, -33.2206, -13.0163, 1.32", "46.5302, -33.6768, -12.7196, 1.32", "47.6653, -34.9764, -11.7935, 0.72", "49.2454, -36.6813, -10.4424, 1.8", "50.2459, -37.6987, -9.64916, 1.8", "50.9179, -38.3287, -9.11793, 1.8" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "9.02714, -29.2168, 10.4196, 1.44", "11.407, -30.5894, 11.1227, 1.44", "13.4392, -32.02, 11.8022, 1.44", "14.987, -33.287, 12.3779, 1.44", "16.465, -34.6989, 12.9856, 1.44", "17.5056, -35.7731, 13.4199, 1.44", "19.0636, -37.5046, 14.1011, 1.44", "19.9529, -38.6645, 14.5485, 1.08", "20.8217, -39.9455, 15.0916, 1.44", "22.4114, -42.3582, 16.1227, 1.08", "23.4396, -43.8159, 16.733, 1.56", "24.7857, -45.5401, 17.4975, 0.96", "25.7719, -46.6397, 18.0235, 0.96", "27.772, -48.6665, 19.0634, 0.96", "29.2031, -50.0239, 19.8126, 0.96", "30.1439, -50.8784, 20.3278, 0.96", "31.0583, -51.7131, 20.8429, 0.96", "32.4128, -52.9333, 21.6177, 0.72", "33.0905, -53.5757, 22.0125, 0.72", "34.2982, -54.8048, 22.7411, 0.72", "35.2272, -55.8496, 23.4405, 0.72", "35.728, -56.4209, 23.8441, 0.72", "36.4272, -57.168, 24.4311, 0.72", "36.9385, -57.6971, 24.8768, 0.72", "38.1647, -58.8529, 25.9217, 0.72", "38.7069, -59.3002, 26.3467, 0.72", "39.5835, -59.9271, 27.0093, 0.72", "40.6741, -60.6411, 27.8408, 0.72", "50.1052, -65.9711, 33.7055, 0.72" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "9.02714, -29.2168, 10.4196, 1.44", "8.15706, -30.1158, 10.4496, 1.44", "6.92883, -31.5731, 10.2638, 1.44", "6.30477, -32.4414, 10.0762, 1.2", "5.77567, -33.3217, 9.82844, 1.2", "5.00003, -34.7886, 9.32311, 1.08", "4.60975, -35.546, 9.02491, 1.08", "3.81528, -37.1679, 8.15872, 1.32", "3.44657, -37.9788, 7.61483, 1.32", "3.09215, -38.8274, 7.02223, 0.96", "2.77988, -39.6483, 6.40633, 0.96", "2.38705, -40.6957, 5.59052, 1.32", "2.002, -41.6299, 4.83433, 0.96", "1.64541, -42.3673, 4.24922, 0.96", "0.93869, -43.7342, 3.14784, 1.44", "0.173049, -45.1523, 2.01722, 0.96", "-0.0316382, -45.5449, 1.71688, 0.96", "-0.684208, -46.8967, 0.730353, 1.8", "-1.11971, -47.9041, -0.0606171, 1.32", "-1.30094, -48.3245, -0.40446, 1.32", "-1.43241, -48.6136, -0.643624, 1.32", "-1.73544, -49.236, -1.13703, 0.96", "-1.88813, -49.5541, -1.40797, 0.96", "-2.91969, -51.7506, -3.35551, 2.4", "-3.59566, -53.2386, -4.71239, 0.84", "-4.13686, -54.4388, -5.8227, 2.16", "-4.35043, -54.9079, -6.26144, 2.16", "-5.17019, -56.6062, -7.87703, 0.84", "-5.67714, -57.5642, -8.76597, 1.32" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-3.08127, -57.629, -22.2685, 0.84", "-2.22949, -59.2504, -22.5529, 0.84", "-1.64502, -60.3854, -22.7662, 0.96", "-0.812884, -62.1237, -23.1129, 0.72", "0.502268, -64.9977, -23.7329, 0.72", "2.0321, -68.6027, -24.5331, 1.08", "3.15069, -71.4057, -25.071, 1.08", "3.567, -72.5152, -25.2608, 1.08", "4.50376, -75.4036, -25.719, 0.6", "5.16817, -77.8918, -26.0554, 1.32", "5.62745, -80.1818, -26.2771, 1.32", "6.06698, -82.8745, -26.5242, 0.72", "6.24542, -83.9948, -26.6471, 0.72", "6.70329, -86.4436, -26.8799, 1.2", "7.18505, -88.501, -27.0138, 0.48", "7.69644, -90.3571, -27.1208, 1.08", "8.42568, -92.6252, -27.3022, 0.6", "9.56094, -95.8621, -27.6927, 1.2", "11.0138, -99.6135, -28.0713, 0.72", "12.3071, -102.554, -28.2807, 1.32", "13.4933, -104.965, -28.3878, 0.72", "14.6431, -107.112, -28.388, 1.08", "15.8908, -109.384, -28.3331, 0.48", "17.0514, -111.453, -28.2687, 0.48", "18.1889, -113.575, -28.3243, 1.32", "18.8519, -114.95, -28.3555, 1.32", "19.7209, -117.134, -28.3549, 0.72", "20.1203, -118.989, -28.4121, 1.32", "19.9399, -121.152, -28.883, 0.6", "19.2156, -123.06, -29.76, 1.56", "18.5648, -124.113, -30.4256, 1.56", "17.6328, -125.315, -31.3324, 0.72", "15.5742, -127.588, -33.3161, 1.68", "13.0002, -130.325, -35.9132, 1.2", "11.894, -131.57, -37.1459, 1.56", "10.7064, -133.128, -38.6554, 0.96", "9.84814, -134.555, -39.9375, 0.96", "9.3091, -135.891, -40.9907, 1.56", "8.80946, -137.878, -42.3128, 1.56", "8.36625, -140.056, -43.3974, 1.2", "8.06307, -141.648, -44.0422, 1.2", "7.47968, -144.442, -45.0479, 1.68", "6.57004, -148.438, -46.3278, 0.96", "6.03346, -150.552, -46.8864, 0.96", "4.74196, -155.226, -47.914, 0.48", "4.24347, -157.019, -48.2453, 1.56", "3.01858, -161.778, -49.0208, 0.96", "2.7977, -162.73, -49.1494, 0.96", "2.16128, -166.285, -49.4278, 1.44", "1.99647, -168.515, -49.5783, 1.08", "2.14978, -171.731, -49.8381, 0.72", "2.45386, -174.11, -49.9808, 0.72", "2.72414, -175.414, -50.0034, 0.72", "3.41761, -178.337, -50.0473, 1.32", "4.22475, -181.311, -50.1298, 0.72", "4.69765, -183.078, -50.2054, 0.72", "4.94267, -183.932, -50.1491, 0.72", "5.26768, -184.995, -49.9842, 0.72", "6.0418, -187.374, -49.4923, 1.2", "6.89517, -189.873, -48.8667, 0.6", "7.67198, -192.057, -48.1739, 1.2", "9.66124, -197.357, -46.2141, 0.72", "10.5805, -199.625, -45.3204, 0.72", "11.4478, -201.59, -44.538, 1.32", "12.3374, -203.491, -43.8062, 0.6", "13.5434, -206.098, -42.8899, 1.2", "14.7968, -208.909, -42.019, 0.72", "15.6822, -211.087, -41.5236, 0.72", "16.6313, -213.559, -40.8823, 1.2", "17.4223, -215.716, -40.2768, 0.6", "17.9867, -217.29, -39.8073, 1.2", "19.0309, -220.217, -38.8874, 0.48", "19.7795, -222.392, -38.2097, 1.44", "20.5653, -224.956, -37.2991, 0.96", "20.8759, -226.122, -36.8122, 0.96", "21.0163, -226.755, -36.5488, 0.96", "21.2395, -228.074, -36.082, 0.96", "21.4079, -229.972, -35.611, 0.96", "21.4865, -232.317, -35.236, 1.68", "21.4761, -235.553, -34.6144, 0.96", "21.4458, -237.871, -34.0817, 1.32", "21.404, -240.524, -33.3475, 0.72", "21.4039, -242.868, -32.5849, 0.72", "21.477, -244.89, -31.8407, 1.2", "21.9148, -249.68, -29.9087, 0.6", "22.1238, -251.222, -29.2172, 0.96", "22.5756, -253.507, -28.0019, 0.6", "22.9796, -255.285, -26.9525, 1.32", "23.2305, -256.404, -26.2601, 1.32", "23.3836, -257.246, -25.7479, 1.32", "23.5223, -258.487, -25.1091, 1.32", "23.598, -260.271, -24.118, 0.96", "23.5349, -262.775, -22.7845, 1.44", "23.3983, -264.404, -21.8665, 1.44", "23.168, -266.171, -20.8271, 0.72", "22.8768, -267.878, -19.7676, 1.2", "22.4443, -269.978, -18.4371, 0.48", "21.8559, -271.96, -17.1744, 1.08", "21.2277, -273.928, -15.88, 0.6", "20.7179, -275.417, -14.9048, 1.2", "20.0357, -277.231, -13.7048, 0.6", "19.6632, -278.129, -13.0973, 0.6", "18.7785, -280.067, -11.7293, 1.2", "17.9798, -281.699, -10.4222, 0.72" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-3.08127, -57.629, -22.2685, 0.96", "-1.64424, -59.2634, -22.7636, 0.96", "-0.206607, -60.8984, -23.259, 0.96", "1.5208, -62.863, -23.8542, 2.64" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-26.9644, -8.88017, 6.82269, 1.32", "-28.8165, -8.33457, 7.91361, 1.32", "-30.7572, -7.76284, 9.05676, 1.32", "-32.8554, -7.14473, 10.2927, 1.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-26.9644, -8.88017, 6.82269, 0.96", "-28.3669, -11.6459, 8.01164, 0.96", "-28.8575, -12.3556, 8.41922, 1.44", "-29.684, -13.2566, 9.08397, 1.44", "-30.3451, -13.8831, 9.6258, 1.44", "-31.1913, -14.6571, 10.3332, 1.44", "-33.0719, -16.3789, 11.9669, 1.68", "-34.4797, -17.5087, 13.2731, 1.2", "-35.808, -18.574, 14.5812, 1.2", "-36.3509, -19.0022, 15.1525, 1.2", "-36.968, -19.5386, 15.8335, 1.2", "-37.5543, -20.1244, 16.5139, 1.2", "-37.8309, -20.5363, 16.8806, 1.2", "-38.0864, -21.0959, 17.3256, 1.2", "-38.3492, -21.8042, 17.8532, 1.2", "-39.0075, -23.4775, 19.0799, 1.56", "-39.5355, -24.5069, 19.8374, 1.08", "-40.0899, -25.3819, 20.4679, 1.08", "-40.6586, -26.0512, 21.0117, 1.08", "-41.3759, -26.8233, 21.6503, 1.08", "-41.8467, -27.2847, 22.0301, 1.08", "-43.2496, -28.3867, 23.0659, 1.08", "-43.7245, -28.6734, 23.3432, 1.08", "-45.5772, -29.4659, 24.239, 1.32" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-15.264, -82.8718, -56.4913, 1.08", "-14.3696, -84.0383, -56.8913, 1.08", "-13.3307, -85.3935, -57.3561, 1.32" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-15.264, -82.8718, -56.4913, 0.84", "-16.3519, -83.7974, -56.5914, 0.84", "-17.5032, -84.8189, -57.0481, 1.44", "-18.6515, -85.8377, -57.5037, 0.6", "-19.6263, -86.7027, -57.8904, 1.08", "-21.4506, -88.3213, -58.6141, 0.48", "-22.9672, -89.6668, -59.2157, 1.56", "-25.0754, -91.539, -60.3824, 0.96" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "50.9179, -38.3287, -9.11793, 0.84", "51.2144, -39.765, -9.19697, 0.84", "51.4342, -40.8647, -9.25435, 1.44", "52.0714, -43.9145, -9.41417, 0.48", "52.5982, -46.4361, -9.54631, 0.48", "52.955, -48.1435, -9.63578, 1.44", "53.4621, -50.5708, -9.76298, 0.6", "53.7009, -51.6262, -9.82704, 0.6", "54.031, -53.0469, -9.90103, 1.2" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "50.9179, -38.3287, -9.11793, 0.6", "52.3153, -39.0356, -8.85488, 0.6", "54.001, -39.8104, -8.46306, 1.2", "54.542, -40.0688, -8.31939, 1.2", "55.5312, -40.5765, -8.03839, 0.6", "58.1997, -42.0575, -7.20733, 1.68", "59.2126, -42.6383, -6.86446, 1.68", "60.8726, -43.5995, -6.26318, 0.84", "62.3769, -44.4232, -5.69023, 0.84", "63.923, -45.2387, -5.08084, 1.44", "65.7957, -46.2363, -4.31252, 0.84", "68.0115, -47.4841, -3.36803, 1.56", "70.5692, -48.9272, -2.2611, 1.08", "72.1863, -49.8152, -1.56795, 1.56", "74.3348, -50.9222, -0.646612, 2.04", "76.5554, -51.9986, 0.313609, 1.2", "78.4, -52.852, 1.10513, 1.2" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-5.67714, -57.5642, -8.76597, 0.48", "-5.69178, -58.7463, -8.63416, 0.48", "-5.63615, -59.9119, -8.53529, 1.56", "-5.42297, -61.9304, -8.42106, 0.6", "-5.17982, -63.2, -8.35467, 1.8", "-4.84797, -64.5631, -8.30273, 0.6", "-4.64337, -65.2967, -8.28263, 0.6", "-4.34072, -66.1615, -8.27884, 0.6", "-3.93433, -67.1493, -8.269, 1.56", "-3.16899, -68.6509, -8.25827, 0.48", "-2.59978, -69.6746, -8.22005, 0.48", "-2.32086, -70.1585, -8.18993, 0.48", "-1.77581, -71.118, -8.10411, 1.68", "-1.01994, -72.4994, -7.93215, 1.08", "-0.551267, -73.3776, -7.77615, 1.08", "2.16149, -78.8789, -7.83559, 1.08" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-5.67714, -57.5642, -8.76597, 0.72", "-7.12644, -58.4131, -10.2911, 0.72", "-7.93188, -58.9216, -11.2304, 1.56", "-8.66839, -59.4599, -12.1404, 0.72", "-9.72521, -60.3269, -13.5467, 1.32", "-10.9476, -61.4453, -14.9673, 0.72", "-11.9216, -62.4257, -16.0019, 1.56", "-13.0796, -63.8681, -17.2531, 0.84", "-13.6682, -64.7355, -17.8566, 0.84", "-14.6388, -66.4609, -18.8036, 1.92", "-16.1327, -69.6364, -20.0685, 0.96", "-16.6922, -70.9537, -20.4755, 0.96", "-17.7576, -73.692, -21.1253, 0.72", "-18.0822, -74.6085, -21.2921, 1.32", "-18.6595, -76.3252, -21.5649, 0.84", "-19.0906, -77.9685, -21.7607, 1.2", "-24.5447, -84.8962, -26.3958, 1.2" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "1.5208, -62.863, -23.8542, 0.96", "0.71431, -64.719, -24.9541, 0.96", "0.0186948, -66.5729, -26.0026, 0.96", "-0.248726, -67.3128, -26.401, 0.96", "-0.522817, -68.083, -26.7964, 0.96", "-0.948184, -69.2831, -27.3623, 0.96", "-1.16903, -69.9039, -27.6363, 0.96", "-1.26062, -70.2535, -27.7638, 0.96", "-1.48038, -70.968, -27.9641, 0.96", "-1.62114, -71.2998, -28.0733, 0.96", "-2.05435, -72.112, -28.4274, 0.96", "-2.39266, -72.6226, -28.7459, 0.96", "-2.92457, -73.3834, -29.3497, 0.6", "-3.63846, -74.3816, -30.2675, 1.56", "-4.57151, -75.6507, -31.5823, 0.96", "-5.13201, -76.3713, -32.4, 0.96", "-6.22783, -77.7182, -33.9922, 0.72", "-7.35141, -79.118, -35.5992, 1.2", "-8.21255, -80.1964, -36.7913, 0.72", "-9.15573, -81.4258, -38.044, 1.2", "-10.2733, -82.9431, -39.437, 0.72", "-10.8075, -83.7259, -40.0831, 0.72", "-12.1507, -85.8745, -41.6317, 1.2", "-13.0317, -87.3455, -42.5378, 1.2", "-14.0517, -89.1136, -43.5119, 0.72", "-14.4277, -89.7979, -43.8495, 0.72", "-15.2375, -91.3003, -44.5386, 1.32", "-15.8052, -92.3871, -45.0335, 1.32", "-16.6793, -94.0305, -45.7831, 0.6", "-17.3173, -95.2002, -46.3449, 1.08", "-18.862, -97.7769, -47.8233, 0.6", "-19.6351, -98.9543, -48.6015, 1.2", "-20.4252, -100.009, -49.3451, 0.6", "-21.2545, -100.974, -50.1442, 1.2", "-22.0918, -101.85, -51.0001, 0.48", "-23.7853, -103.498, -52.7068, 1.44", "-24.1863, -103.871, -53.1068, 1.44", "-25.4521, -105.068, -54.3199, 0.72", "-27.0184, -106.632, -55.7291, 1.56", "-29.0637, -108.908, -57.4235, 0.84", "-29.7146, -109.732, -57.8751, 0.84", "-30.9387, -111.612, -58.7289, 1.56", "-31.5623, -112.759, -59.2298, 1.56", "-32.457, -114.798, -60.124, 0.72", "-33.1599, -116.872, -61.1525, 1.2", "-33.9096, -119.354, -62.3668, 0.72", "-34.8249, -122.666, -64.1206, 1.56", "-35.2514, -124.456, -65.1628, 1.08", "-35.5707, -126.186, -66.3088, 1.56", "-36.0254, -130.203, -69.4973, 1.32" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "1.5208, -62.863, -23.8542, 0.48", "4.22689, -65.1999, -24.1267, 0.48", "5.4431, -66.2604, -24.207, 0.48", "7.43322, -67.9958, -24.3385, 1.56", "9.02564, -69.3844, -24.4437, 0.36", "9.57287, -69.8616, -24.4798, 0.36", "11.563, -71.597, -24.6113, 1.32", "12.856, -72.6603, -24.5174, 1.32" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-32.8554, -7.14473, 10.2927, 1.44", "-33.3492, -6.41152, 13.5663, 1.44", "-33.9926, -5.96444, 16.229, 1.2", "-34.3745, -5.72104, 17.5212, 1.2", "-34.7111, -5.50646, 18.6605, 0.84", "-34.8761, -5.40133, 19.2187, 0.84", "-35.2388, -5.17012, 20.4462, 1.2", "-36.2776, -4.85033, 22.6078, 1.08", "-37.0085, -4.75587, 23.6267, 1.44" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-32.8554, -7.14473, 10.2927, 1.92", "-34.1278, -6.3351, 10.8062, 1.92", "-34.8706, -5.88158, 11.0223, 1.92", "-36.0242, -5.12526, 11.2507, 1.56", "-36.9803, -4.46076, 11.3852, 1.32", "-37.8756, -3.76721, 11.4758, 1.8", "-38.8666, -2.94756, 11.5418, 1.2", "-39.6559, -2.21897, 11.5082, 1.2", "-40.7392, -1.15778, 11.4252, 0.96", "-41.2425, -0.646342, 11.3586, 0.96", "-42.08, 0.189566, 11.2009, 1.32", "-42.8738, 0.917929, 11.0603, 1.32", "-43.4395, 1.34452, 10.9655, 1.32", "-44.1155, 1.72467, 10.8603, 0.96", "-44.6154, 1.90025, 10.7871, 0.96", "-45.4412, 2.1417, 10.7452, 0.96", "-46.3347, 2.31434, 10.708, 0.96", "-47.7372, 2.5106, 10.6626, 1.44", "-48.456, 2.59443, 10.6443, 1.44", "-49.0204, 2.68561, 10.629, 1.44", "-50.8509, 3.18859, 10.6831, 1.2" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-45.5772, -29.4659, 24.239, 0.96", "-46.1749, -29.2379, 24.7569, 0.96", "-47.0068, -28.8632, 25.4896, 0.96", "-47.7612, -28.5056, 26.1477, 0.96", "-49.0782, -27.8627, 27.2581, 0.6", "-50.2937, -27.2734, 28.2363, 1.2", "-52.3061, -26.2154, 29.8165, 0.72", "-52.6845, -25.9712, 30.1326, 0.72", "-52.8695, -25.8377, 30.289, 0.72", "-53.2909, -25.4968, 30.6391, 0.72", "-53.6206, -25.158, 30.9143, 0.72", "-54.5077, -24.0392, 31.7172, 1.2", "-55.6745, -22.4475, 32.6355, 0.84", "-61.873, -19.6095, 35.9219, 0.84" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-45.5772, -29.4659, 24.239, 0.84", "-46.8722, -30.1781, 24.2163, 0.84", "-47.8579, -30.6111, 24.1963, 0.84", "-49.331, -31.2533, 24.1802, 0.6", "-50.3375, -31.6592, 24.1727, 0.6", "-51.771, -32.1744, 24.1591, 0.6", "-53.3112, -32.6683, 24.1416, 0.6", "-54.7575, -33.0229, 24.0813, 0.6", "-55.9161, -33.2583, 24.0509, 0.6", "-57.1435, -33.4669, 24.0669, 0.6", "-57.8305, -33.5646, 24.0779, 0.6", "-58.6543, -33.6683, 24.0939, 0.6", "-59.1556, -33.6961, 24.0923, 1.08", "-60.845, -33.6976, 24.0728, 0.72", "-62.693, -33.6296, 24.0409, 0.72", "-64.1389, -33.5818, 24.0177, 0.72", "-64.8259, -33.5632, 24.0075, 0.72", "-66.6082, -33.4267, 23.9653, 1.08", "-77.5863, -36.5481, 22.3674, 1.08" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "78.4, -52.852, 1.10513, 0.72", "78.7409, -56.0641, 0.233571, 0.72", "78.9495, -58.0297, -0.299744, 1.32" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "78.4, -52.852, 1.10513, 0.96", "80.3266, -54.2405, 1.68931, 0.96", "82.2991, -55.7174, 2.40646, 0.96", "84.5504, -57.4698, 3.28608, 1.56", "87.2467, -59.5744, 4.30768, 0.84", "89.6674, -61.5029, 5.18351, 1.32", "92.7709, -64.086, 6.47034, 0.6", "94.5802, -65.6527, 7.32629, 1.32", "97.0578, -67.8225, 8.56388, 0.72", "99.2422, -69.7086, 9.65395, 0.72", "100.878, -71.0156, 10.4776, 1.68", "105.168, -74.0461, 12.6053, 0.72", "107.787, -75.5544, 13.8702, 0.72", "109.354, -76.2431, 14.6315, 0.72", "110.965, -76.6681, 15.4647, 0.72", "113.433, -76.9191, 16.7347, 1.08", "115.259, -76.8739, 17.6297, 0.48", "117.343, -76.483, 18.4887, 0.96", "119.027, -75.9781, 19.2516, 0.96", "121.074, -75.2252, 20.2823, 0.72", "123.462, -74.2223, 21.5868, 0.48", "133.716, -79.068, 27.0599, 0.48" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-36.0254, -130.203, -69.4973, 0.84", "-37.56, -130.791, -68.2621, 0.84", "-39.1965, -131.413, -67.107, 0.84", "-42.8501, -132.932, -64.8386, 1.32", "-45.986, -134.368, -62.9879, 0.84", "-46.9682, -134.877, -62.4543, 0.84", "-48.807, -135.926, -61.5094, 1.44", "-51.3571, -137.666, -60.2713, 0.96", "-52.8342, -138.988, -59.6699, 0.96", "-53.7705, -140.179, -59.5219, 1.44", "-54.8359, -142.122, -59.5764, 0.96", "-55.1065, -142.769, -59.6208, 0.96", "-55.789, -144.93, -59.8522, 1.44", "-56.3339, -147.001, -60.0864, 1.08", "-57.0303, -149.384, -60.3652, 1.44", "-57.8476, -151.741, -60.5263, 0.84", "-58.3721, -152.948, -60.4554, 0.84", "-58.6832, -153.595, -60.3993, 0.84", "-60.0974, -156.073, -60.012, 1.2", "-60.8489, -157.124, -59.6832, 1.2", "-63.0475, -159.274, -58.2373, 0.84", "-64.9145, -160.439, -56.6014, 0.48" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-36.0254, -130.203, -69.4973, 0.72", "-36.6822, -131.387, -69.4892, 0.72", "-38.0366, -133.707, -69.711, 1.2", "-38.84, -135.011, -69.9439, 0.84", "-39.7528, -136.423, -70.2949, 1.32", "-41.0399, -138.324, -70.8323, 0.72", "-41.9359, -139.609, -71.2319, 1.32", "-43.3978, -141.623, -71.9972, 0.84", "-44.7299, -143.358, -72.7827, 1.32", "-46.0542, -145.051, -73.6053, 0.84", "-46.7471, -145.916, -74.0379, 0.84", "-48.0491, -147.549, -74.862, 1.44", "-48.5275, -148.178, -75.1652, 1.44", "-49.8046, -150.039, -75.9946, 0.96", "-51.3635, -152.572, -77.0351, 1.44", "-52.7352, -155.004, -77.9502, 0.84", "-53.2153, -155.901, -78.2697, 1.32", "-54.0114, -157.399, -78.7435, 0.84", "-55.5244, -160.104, -79.4292, 1.32", "-56.5057, -161.802, -79.8055, 0.84", "-57.8274, -163.964, -80.2801, 1.44", "-58.4893, -165.019, -80.5309, 0.72", "-59.8645, -167.187, -81.1864, 1.32", "-61.5303, -169.683, -81.9864, 0.6", "-63.092, -171.919, -82.7651, 1.08", "-64.7303, -174.236, -83.6567, 0.48", "-66.4763, -176.784, -84.7755, 1.44", "-67.9163, -179.031, -85.9037, 0.72" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "12.856, -72.6603, -24.5174, 0.84", "11.3362, -74.3421, -25.08, 0.84", "9.80014, -75.9286, -25.7293, 0.96", "8.71848, -77.0634, -26.2338, 0.72", "7.95397, -77.8635, -26.6139, 0.72", "6.45105, -79.4185, -27.4016, 0.72", "5.18462, -80.7318, -28.0705, 0.72", "4.46796, -81.4648, -28.4621, 0.72", "3.56253, -82.4316, -29.0227, 0.72", "2.54746, -83.5933, -29.661, 1.08", "1.59173, -84.6939, -30.2216, 1.08", "1.16249, -85.226, -30.4434, 1.08", "0.296847, -86.3345, -30.8641, 0.6", "-0.367803, -87.1469, -31.1907, 0.6", "-1.97289, -88.9478, -31.9216, 1.08", "-3.21743, -90.3182, -32.5068, 1.08", "-5.08766, -92.2386, -33.3265, 0.6", "-6.31687, -93.4026, -33.8373, 0.6", "-8.62672, -95.47, -34.732, 1.56", "-10.3561, -96.9962, -35.3689, 0.84", "-11.8158, -98.2963, -35.8801, 1.44", "-13.7322, -100.068, -36.5133, 0.96", "-15.2601, -101.523, -36.9909, 1.56", "-17.0287, -103.384, -37.5292, 0.96", "-17.873, -104.384, -37.7495, 0.96", "-19.0421, -105.955, -38.0839, 1.56", "-19.6577, -106.878, -38.2795, 1.56", "-20.9392, -109.103, -38.7941, 1.08", "-22.104, -111.298, -39.3085, 1.68", "-23.1636, -113.435, -39.8139, 1.68", "-24.2555, -115.817, -40.3893, 0.96", "-25.1063, -117.921, -40.8956, 1.56", "-25.8465, -119.866, -41.3835, 0.96", "-26.6034, -122.083, -41.9108, 1.8", "-27.5438, -125.082, -42.6174, 1.2", "-28.1503, -127.247, -43.1331, 0.72", "-28.848, -130.073, -43.7783, 1.2", "-29.3083, -132.121, -44.2309, 0.72", "-29.7696, -134.562, -44.7875, 0.72", "-29.9788, -135.936, -45.1251, 0.72", "-30.2377, -138.001, -45.6784, 1.2", "-30.4035, -139.386, -46.0515, 0.72", "-30.6541, -141.596, -46.6924, 1.2", "-30.9141, -143.867, -47.3697, 0.6", "-31.1339, -145.281, -47.7947, 1.2", "-31.6387, -147.534, -48.3802, 0.6", "-32.018, -148.896, -48.6863, 0.6", "-32.6506, -150.69, -49.049, 1.32", "-34.189, -154.443, -49.7757, 0.72", "-35.3442, -156.962, -50.243, 1.2", "-36.7558, -159.869, -50.7661, 0.72", "-37.1424, -160.664, -50.9056, 0.72", "-38.4614, -163.465, -51.4016, 1.32", "-39.6072, -166.022, -51.8933, 0.6", "-40.6127, -168.358, -52.3762, 1.32", "-41.7992, -171.134, -53.0303, 0.6", "-43.5654, -175.273, -54.1236, 0.6", "-44.6185, -177.714, -54.803, 1.2", "-46.7221, -182.566, -56.2055, 0.72", "-47.4926, -184.208, -56.7084, 1.2", "-48.8497, -186.965, -57.6255, 1.08", "-49.9192, -189.076, -58.4009, 0.72", "-50.8294, -190.839, -59.1289, 0.72", "-51.7992, -192.803, -59.9478, 1.2", "-52.7964, -194.961, -60.7872, 0.6", "-53.8399, -197.407, -61.7074, 1.08", "-54.5604, -199.296, -62.3132, 0.6", "-55.1717, -201.054, -62.8188, 1.2", "-56.3844, -204.894, -63.7923, 0.6", "-56.8948, -206.779, -64.2218, 0.6", "-57.147, -207.948, -64.5293, 1.2", "-57.6829, -210.471, -65.1584, 0.72", "-58.024, -212.165, -65.5566, 1.2", "-58.2353, -213.358, -65.8453, 1.2", "-58.4285, -215.359, -66.47, 1.2", "-58.538, -219.352, -68.0385, 0.72" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "12.856, -72.6603, -24.5174, 0.72", "15.8979, -74.7375, -22.9043, 0.72", "17.6266, -75.9367, -21.8391, 0.72", "19.1466, -77.0927, -20.9274, 1.56", "20.7905, -78.4451, -19.9849, 0.96", "23.4742, -80.7637, -18.5649, 1.56", "25.6226, -82.6776, -17.5318, 1.56", "27.5234, -84.509, -16.7562, 0.96", "29.8861, -86.9665, -15.8406, 1.2", "31.5092, -88.8781, -15.2769, 1.2", "32.9924, -90.9624, -14.8568, 1.56", "34.163, -92.7798, -14.6606, 1.56", "35.3582, -94.7803, -14.5682, 0.84", "36.6802, -97.0971, -14.577, 1.44", "38.1166, -99.8273, -14.5902, 0.84", "39.2973, -102.354, -14.631, 1.92" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-37.0085, -4.75587, 23.6267, 0.72", "-38.2893, -4.67195, 24.6532, 0.72", "-40.1156, -4.76475, 25.9625, 1.2", "-41.7588, -4.84825, 27.1406, 1.2", "-42.9151, -4.907, 27.9695, 0.96", "-43.9041, -4.95726, 28.6786, 0.72", "-45.6649, -5.04672, 29.9409, 0.72", "-47.0518, -5.21366, 30.9791, 1.2", "-54.6641, -4.75579, 36.8538, 1.2", "-63.4474, -5.4043, 40.7401, 1.2" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-37.0085, -4.75587, 23.6267, 1.08", "-36.1573, -4.59812, 24.7654, 1.08", "-35.9378, -4.55045, 25.0942, 1.08", "-35.2948, -4.36045, 26.0338, 0.96", "-34.7617, -4.20344, 26.7642, 0.96", "-33.9477, -3.97323, 27.7949, 1.44", "-32.8031, -3.6495, 29.2444, 1.44", "-31.9682, -3.37083, 30.2519, 0.96", "-31.3919, -3.17248, 30.9701, 1.32", "-30.9996, -3.0507, 31.4979, 1.32", "-30.6357, -2.94416, 31.9796, 1.32", "-27.2457, -1.74473, 38.3248, 1.32", "-23.5509, -0.485445, 44.4856, 1.32", "-19.2598, 0.0830319, 50.3554, 1.32" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-50.8509, 3.18859, 10.6831, 0.72", "-52.0241, 3.96593, 11.4096, 0.72", "-52.7577, 4.45195, 11.8638, 0.72", "-53.5085, 4.94942, 12.3288, 0.72", "-54.8099, 5.8117, 13.1346, 1.2", "-56.6278, 7.01611, 14.2602, 0.72", "-57.8146, 7.80243, 14.9951, 1.08", "-64.4541, 12.0147, 20.2871, 1.08" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-50.8509, 3.18859, 10.6831, 1.08", "-52.2924, 3.84443, 11.784, 1.08", "-53.0831, 4.0975, 12.4085, 1.08", "-54.8041, 4.49898, 13.7917, 1.2", "-55.9399, 4.7475, 14.6913, 1.2", "-56.723, 4.95557, 15.3672, 1.44", "-57.8099, 5.28304, 16.3274, 1.08", "-58.4146, 5.44766, 16.9279, 0.84", "-59.0181, 5.6232, 17.5478, 0.84", "-59.8265, 5.91453, 18.3634, 0.84", "-61.0238, 6.49445, 19.4342, 1.2", "-61.9942, 7.06733, 20.186, 1.2", "-63.3377, 7.882, 21.0364, 1.08", "-64.0194, 8.24292, 21.3992, 0.96", "-64.9102, 8.69251, 21.83, 0.96", "-66.519, 9.40974, 22.5066, 1.32", "-67.2749, 9.7009, 22.7547, 1.32", "-69.0916, 10.3788, 23.267, 1.32", "-70.932, 11.0118, 23.6477, 0.84", "-80.0954, 15.4599, 28.1146, 0.84" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "39.2973, -102.354, -14.631, 0.6", "41.7196, -103.209, -15.3388, 0.6", "43.3152, -103.772, -15.805, 0.6" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "39.2973, -102.354, -14.631, 0.6", "38.9793, -104.56, -14.3809, 0.6", "38.8756, -106.536, -14.4403, 1.08", "38.8939, -108.005, -14.5781, 1.08", "38.9544, -109.16, -14.738, 1.08", "39.049, -110.417, -14.9283, 1.08", "39.2892, -113.162, -15.2211, 0.72", "39.5579, -114.895, -15.3694, 1.2", "39.7196, -115.826, -15.4147, 1.2", "39.8485, -116.617, -15.413, 1.2", "40.0644, -118.075, -15.3331, 0.84", "40.4041, -120.327, -15.2066, 0.6", "40.8042, -123.025, -14.944, 1.32", "41.0226, -124.594, -14.8147, 1.32", "41.2445, -126.273, -14.7909, 0.72", "41.4075, -127.546, -14.8164, 1.2", "41.7981, -130.854, -15.0066, 1.2", "41.8841, -131.741, -15.1008, 0.72", "42.0436, -133.818, -15.353, 1.56", "42.1505, -136.517, -15.6719, 0.72", "42.1452, -138.664, -15.9216, 0.72", "42.0862, -140.363, -16.1109, 1.44", "41.9941, -141.751, -16.2257, 0.84", "41.9373, -142.801, -16.3165, 0.84", "41.9375, -144.312, -16.3609, 1.44", "42.1227, -146.772, -16.3283, 0.84", "42.2449, -147.872, -16.345, 0.84", "42.434, -149.015, -16.3527, 1.32", "42.6588, -149.99, -16.3233, 1.32", "43.5799, -153.024, -16.1275, 0.72", "44.1727, -154.326, -15.9271, 1.32" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-19.2598, 0.0830319, 50.3554, 0.96", "-15.2876, 0.606409, 56.2283, 0.96", "-12.1111, 1.82805, 62.4701, 0.96", "-10.1364, 4.27382, 68.8467, 0.96" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-19.2598, 0.0830319, 50.3554, 0.84", "-14.4559, 1.94712, 57.7137, 0.96" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "44.1727, -154.326, -15.9271, 0.6", "45.4904, -154.548, -15.8873, 0.6", "46.6835, -154.804, -15.7649, 0.96", "48.2445, -155.139, -15.6047, 0.6", "49.2163, -155.347, -15.505, 0.6", "50.7747, -155.681, -15.3451, 1.2", "52.6415, -156.081, -15.1535, 0.72", "53.9188, -156.431, -14.9361, 1.2" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "44.1727, -154.326, -15.9271, 0.48", "44.6569, -155.632, -15.749, 0.48", "45.3593, -157.507, -16.0067, 1.08", "46.1246, -159.536, -16.2457, 0.6", "46.6958, -161.142, -16.3737, 0.36", "47.4357, -163.181, -16.5064, 0.36", "48.1109, -165.011, -16.6348, 0.84", "49.4688, -168.648, -17.0718, 0.6", "50.5534, -171.46, -17.5195, 0.6", "51.5632, -173.982, -17.9463, 1.08", "52.0134, -175.048, -18.0895, 0.72", "52.693, -176.546, -18.2238, 1.08", "53.9799, -179.079, -18.4156, 0.48", "55.2161, -181.205, -18.5795, 0.48", "55.7849, -182.092, -18.7092, 0.48", "56.8076, -183.577, -18.9519, 0.48", "57.6704, -184.808, -19.1345, 0.48", "59.0367, -186.624, -19.3476, 1.08", "59.8328, -187.575, -19.4367, 0.48", "61.2305, -189.173, -19.6383, 1.08" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_34", "dend_27", "dend_0", "dend_51", "dend_48", "dend_42", "dend_35", "dend_33", "dend_28", "dend_14", "dend_1", "dend_53", "dend_52", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_36", "dend_32", "dend_29", "dend_26", "dend_15", "dend_5", "dend_2", "dend_46", "dend_45", "dend_40", "dend_37", "dend_31", "dend_30", "dend_23", "dend_16", "dend_9", "dend_6", "dend_4", "dend_3", "dend_39", "dend_38", "dend_25", "dend_24", "dend_22", "dend_17", "dend_13", "dend_10", "dend_8", "dend_7", "dend_21", "dend_18", "dend_12", "dend_11", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_34", "dend_27", "dend_0", "dend_51", "dend_48", "dend_42", "dend_35", "dend_33", "dend_28", "dend_14", "dend_1", "dend_53", "dend_52", "dend_50", "dend_49", "dend_44", "dend_43", "dend_41", "dend_36", "dend_32", "dend_29", "dend_26", "dend_15", "dend_5", "dend_2", "dend_46", "dend_45", "dend_40", "dend_37", "dend_31", "dend_30", "dend_23", "dend_16", "dend_9", "dend_6", "dend_4", "dend_3", "dend_39", "dend_38", "dend_25", "dend_24", "dend_22", "dend_17", "dend_13", "dend_10", "dend_8", "dend_7", "dend_21", "dend_18", "dend_12", "dend_11", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_11", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L6_SBC_6dbc1eb2b9_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_35
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_14
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_15
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_11, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.4999997377214663)
    connect dend_34(0), soma_0(0.4999997377214663)
    connect dend_27(0), soma_0(0.4999997377214663)
    connect dend_0(0), soma_0(0.4999997377214663)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_26(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.46247, 5.85861, -0.00377942, 7.43125 ) }
    soma_0 { pt3dadd( -6.65141, 5.3667, -0.00311965, 9.16559 ) }
    soma_0 { pt3dadd( -5.84034, 4.87478, -0.00245988, 11.1008 ) }
    soma_0 { pt3dadd( -5.02928, 4.38287, -0.0018001, 12.7187 ) }
    soma_0 { pt3dadd( -4.21821, 3.89095, -0.00114033, 13.407 ) }
    soma_0 { pt3dadd( -3.40715, 3.39904, -4.80554E-4, 14.0331 ) }
    soma_0 { pt3dadd( -2.59608, 2.90712, 1.79219E-4, 14.6433 ) }
    soma_0 { pt3dadd( -1.78502, 2.41521, 8.38993E-4, 15.2536 ) }
    soma_0 { pt3dadd( -0.973954, 1.92329, 0.00149877, 15.5093 ) }
    soma_0 { pt3dadd( -0.162889, 1.43138, 0.00215854, 15.3073 ) }
    soma_0 { pt3dadd( 0.648176, 0.939463, 0.00281831, 15.1053 ) }
    soma_0 { pt3dadd( 1.45924, 0.447548, 0.00347809, 14.9033 ) }
    soma_0 { pt3dadd( 2.27031, -0.0443665, 0.00413786, 14.4818 ) }
    soma_0 { pt3dadd( 3.08137, -0.536281, 0.00479764, 13.7638 ) }
    soma_0 { pt3dadd( 3.89244, -1.0282, 0.00545741, 12.8143 ) }
    soma_0 { pt3dadd( 4.7035, -1.52011, 0.00611718, 11.7232 ) }
    soma_0 { pt3dadd( 5.51457, -2.01203, 0.00677696, 10.29 ) }
    soma_0 { pt3dadd( 6.32563, -2.50394, 0.00743673, 8.85677 ) }
    soma_0 { pt3dadd( 7.1367, -2.99586, 0.0080965, 7.04177 ) }
    soma_0 { pt3dadd( 7.94776, -3.48777, 0.00875628, 4.64246 ) }
    soma_0 { pt3dadd( 8.75883, -3.97969, 0.00941605, 2.78846 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -2.16814, 8.01014, -1.4503, 1.32 ) }
    dend_47 { pt3dadd( -2.50808, 8.96512, -1.87354, 1.32 ) }
    dend_47 { pt3dadd( -2.76479, 9.68947, -2.23676, 1.32 ) }
    dend_47 { pt3dadd( -3.39993, 11.3281, -3.13483, 2.04 ) }
    dend_47 { pt3dadd( -4.37266, 13.4334, -4.37995, 1.32 ) }
    dend_47 { pt3dadd( -5.09841, 14.9569, -5.2864, 1.8 ) }
    dend_47 { pt3dadd( -5.79919, 16.4279, -6.16167, 1.32 ) }
    dend_47 { pt3dadd( -6.3896, 17.6383, -6.94627, 1.68 ) }
    dend_47 { pt3dadd( -6.90546, 18.6706, -7.67905, 1.68 ) }
    dend_47 { pt3dadd( -7.6678, 20.1451, -8.8569, 1.08 ) }
    dend_47 { pt3dadd( -8.22962, 21.0617, -9.55165, 1.56 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 32/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 6.03186, -3.37986, -1.5003, 1.8 ) }
    dend_34 { pt3dadd( 7.14292, -4.16263, -2.69793, 1.8 ) }
    dend_34 { pt3dadd( 9.49871, -5.82234, -5.23725, 1.8 ) }
    dend_34 { pt3dadd( 11.1047, -6.95385, -6.96844, 1.8 ) }
    dend_34 { pt3dadd( 12.6137, -8.01698, -8.59501, 2.16 ) }
    dend_34 { pt3dadd( 15.2359, -9.86439, -11.4215, 2.4 ) }
    dend_34 { pt3dadd( 15.6372, -10.1471, -11.8541, 2.4 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 39/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 3.09186, -5.27986, 5.0897, 2.64 ) }
    dend_27 { pt3dadd( 3.15033, -5.68909, 5.38504, 2.64 ) }
    dend_27 { pt3dadd( 3.24549, -6.19732, 5.72855, 2.64 ) }
    dend_27 { pt3dadd( 3.76636, -8.28314, 7.00881, 1.92 ) }
    dend_27 { pt3dadd( 4.14787, -9.50066, 7.69165, 1.92 ) }
    dend_27 { pt3dadd( 4.60773, -10.7433, 8.33581, 1.92 ) }
    dend_27 { pt3dadd( 5.17576, -12.1657, 9.0216, 2.4 ) }
    dend_27 { pt3dadd( 5.45608, -12.7926, 9.30103, 2.4 ) }
    dend_27 { pt3dadd( 6.01973, -13.9361, 9.77136, 1.8 ) }
    dend_27 { pt3dadd( 6.79961, -15.3306, 10.2207, 1.56 ) }
    dend_27 { pt3dadd( 7.61234, -16.6544, 10.5893, 1.8 ) }
    dend_27 { pt3dadd( 8.10371, -17.4131, 10.7568, 1.8 ) }
    dend_27 { pt3dadd( 8.27653, -17.6677, 10.8105, 1.8 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 52/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -7.79815, 0.930143, -0.0303001, 5.65 ) }
    dend_0 { pt3dadd( -9.33894, 0.235, -0.0231769, 4.93 ) }
    dend_0 { pt3dadd( -10.2249, -0.164728, -0.0190808, 4.81 ) }
    dend_0 { pt3dadd( -12.2663, -1.08567, -0.00964373, 1.92 ) }
    dend_0 { pt3dadd( -13.6886, -1.72738, -0.00306808, 1.68 ) }
    dend_0 { pt3dadd( -15.2002, -2.40935, 0.00392016, 1.68 ) }
    dend_0 { pt3dadd( -18.0692, -3.70371, 0.0171836, 3.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 59/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.75883, -3.97969, 0.00941605, 1.21105 ) }
    axon_0 { pt3dadd( 21.5843, -11.7584, 0.00941605, 1.21105 ) }
    axon_0 { pt3dadd( 34.4097, -19.5371, 0.00941605, 1.21105 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 62/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -8.22962, 21.0617, -9.55165, 0.6 ) }
    dend_51 { pt3dadd( -9.45711, 23.4649, -10.0038, 0.6 ) }
    dend_51 { pt3dadd( -10.3076, 25.1326, -10.4804, 0.6 ) }
    dend_51 { pt3dadd( -10.892, 26.2073, -10.8577, 0.6 ) }
    dend_51 { pt3dadd( -11.662, 27.9035, -11.7495, 1.68 ) }
    dend_51 { pt3dadd( -12.4122, 30.0905, -13.0582, 0.72 ) }
    dend_51 { pt3dadd( -12.6957, 30.9169, -13.5528, 0.72 ) }
    dend_51 { pt3dadd( -13.7807, 34.4005, -15.9415, 0.6 ) }
    dend_51 { pt3dadd( -14.4388, 36.755, -17.7528, 1.44 ) }
    dend_51 { pt3dadd( -15.4514, 40.9984, -21.3687, 0.84 ) }
    dend_51 { pt3dadd( -15.7435, 42.8536, -23.1411, 1.8 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 73/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -8.22962, 21.0617, -9.55165, 1.32 ) }
    dend_48 { pt3dadd( -8.2278, 21.7122, -11.0259, 1.32 ) }
    dend_48 { pt3dadd( -8.25469, 22.8766, -13.471, 1.32 ) }
    dend_48 { pt3dadd( -8.2563, 23.7243, -15.1016, 1.32 ) }
    dend_48 { pt3dadd( -8.23762, 24.6866, -16.8662, 0.96 ) }
    dend_48 { pt3dadd( -8.21947, 25.6213, -18.5801, 0.96 ) }
    dend_48 { pt3dadd( -8.20657, 26.2854, -19.798, 1.2 ) }
    dend_48 { pt3dadd( -8.22744, 27.1559, -21.3536, 0.48 ) }
    dend_48 { pt3dadd( -8.21191, 28.0938, -22.8267, 1.32 ) }
    dend_48 { pt3dadd( -8.18938, 28.6978, -23.6804, 1.32 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 83/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 15.6372, -10.1471, -11.8541, 1.56 ) }
    dend_42 { pt3dadd( 16.0888, -11.0403, -13.5461, 1.56 ) }
    dend_42 { pt3dadd( 16.9701, -13.4711, -17.3069, 1.32 ) }
    dend_42 { pt3dadd( 17.2032, -14.9336, -19.2971, 1.32 ) }
    dend_42 { pt3dadd( 17.3163, -16.3988, -21.0085, 1.68 ) }
    dend_42 { pt3dadd( 17.3518, -17.4697, -22.1273, 1.68 ) }
    dend_42 { pt3dadd( 17.3599, -18.3947, -22.9704, 1.68 ) }
    dend_42 { pt3dadd( 17.2811, -20.42, -24.3406, 1.2 ) }
    dend_42 { pt3dadd( 16.8785, -24.8569, -26.4095, 1.2 ) }
    dend_42 { pt3dadd( 16.668, -26.8044, -27.1698, 1.56 ) }
    dend_42 { pt3dadd( 16.5833, -27.6365, -27.4591, 1.56 ) }
    dend_42 { pt3dadd( 16.423, -29.5882, -28.0945, 1.2 ) }
    dend_42 { pt3dadd( 16.3117, -31.197, -28.6396, 1.2 ) }
    dend_42 { pt3dadd( 16.2188, -34.3245, -29.7452, 1.2 ) }
    dend_42 { pt3dadd( 16.2548, -35.5317, -30.1765, 1.2 ) }
    dend_42 { pt3dadd( 16.3094, -36.3885, -30.5095, 1.56 ) }
    dend_42 { pt3dadd( 16.4548, -38.5692, -31.4533, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( 16.5964, -40.8196, -32.5329, 2.04 ) }
    dend_42 { pt3dadd( 16.6587, -41.9021, -33.0431, 2.04 ) }
    dend_42 { pt3dadd( 16.769, -43.8074, -33.7129, 1.32 ) }
    dend_42 { pt3dadd( 16.9969, -46.9165, -34.6994, 2.16 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 15.6372, -10.1471, -11.8541, 1.32 ) }
    dend_35 { pt3dadd( 18.7468, -10.4907, -11.6367, 1.32 ) }
    dend_35 { pt3dadd( 20.3846, -10.6716, -11.5222, 1.32 ) }
    dend_35 { pt3dadd( 23.7627, -11.0449, -11.2861, 1.32 ) }
    dend_35 { pt3dadd( 25.1015, -11.1928, -11.1925, 1.32 ) }
    dend_35 { pt3dadd( 29.7077, -11.7017, -10.8705, 1.2 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 10/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 8.27653, -17.6677, 10.8105, 1.2 ) }
    dend_33 { pt3dadd( 9.4266, -18.4913, 12.0655, 1.2 ) }
    dend_33 { pt3dadd( 11.0938, -19.6883, 13.9275, 1.2 ) }
    dend_33 { pt3dadd( 12.3013, -20.5316, 15.3032, 1.2 ) }
    dend_33 { pt3dadd( 13.7675, -21.5194, 16.9708, 2.04 ) }
    dend_33 { pt3dadd( 16.5134, -23.3229, 20.0622, 1.08 ) }
    dend_33 { pt3dadd( 17.9013, -24.2449, 21.6159, 1.08 ) }
    dend_33 { pt3dadd( 18.7448, -24.8711, 22.6205, 1.08 ) }
    dend_33 { pt3dadd( 19.6887, -25.5712, 23.7623, 1.08 ) }
    dend_33 { pt3dadd( 20.5067, -26.1042, 24.641, 1.08 ) }
    dend_33 { pt3dadd( 21.2675, -26.5336, 25.3105, 1.08 ) }
    dend_33 { pt3dadd( 21.8962, -26.8087, 25.7202, 1.08 ) }
    dend_33 { pt3dadd( 23.2659, -27.4361, 26.5959, 1.08 ) }
    dend_33 { pt3dadd( 24.0915, -27.8141, 27.071, 1.08 ) }
    dend_33 { pt3dadd( 25.0552, -28.3075, 27.7199, 1.08 ) }
    dend_33 { pt3dadd( 25.8086, -28.706, 28.2671, 1.08 ) }
    dend_33 { pt3dadd( 26.902, -29.2967, 29.1544, 1.08 ) }
    dend_33 { pt3dadd( 27.5287, -29.6147, 29.7315, 1.08 ) }
    dend_33 { pt3dadd( 29.2369, -30.4146, 31.5716, 1.92 ) }
    dend_33 { pt3dadd( 31.2571, -31.1645, 34.1257, 0.96 ) }
    dend_33 { pt3dadd( 31.8328, -31.2885, 34.962, 0.96 ) }
    dend_33 { pt3dadd( 33.0626, -31.2528, 36.9563, 0.72 ) }
    dend_33 { pt3dadd( 33.8242, -30.9465, 38.2809, 1.32 ) }
    dend_33 { pt3dadd( 34.5716, -30.3478, 39.6419, 1.32 ) }
    dend_33 { pt3dadd( 35.7276, -28.992, 41.6027, 0.84 ) }
    dend_33 { pt3dadd( 36.0882, -28.5542, 42.073, 0.84 ) }
    dend_33 { pt3dadd( 36.7724, -27.7823, 42.8359, 0.84 ) }
    dend_33 { pt3dadd( 37.4488, -27.1318, 43.35, 0.84 ) }
    dend_33 { pt3dadd( 38.0261, -26.7214, 43.6305, 0.84 ) }
    dend_33 { pt3dadd( 39.7718, -25.7887, 44.1957, 0.72 ) }
    dend_33 { pt3dadd( 40.9567, -25.3482, 44.4405, 0.72 ) }
    dend_33 { pt3dadd( 41.7413, -25.0747, 44.5715, 0.72 ) }
    dend_33 { pt3dadd( 43.3227, -24.5279, 44.7372, 0.72 ) }
    dend_33 { pt3dadd( 44.1072, -24.2805, 44.7839, 0.72 ) }
    dend_33 { pt3dadd( 44.467, -24.164, 44.7812, 0.72 ) }
    dend_33 { pt3dadd( 46.3761, -23.5093, 44.4811, 0.96 ) }
    dend_33 { pt3dadd( 53.6046, -25.2343, 51.8983, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 47/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 8.27653, -17.6677, 10.8105, 0.96 ) }
    dend_28 { pt3dadd( 8.45712, -20.4463, 10.7165, 0.96 ) }
    dend_28 { pt3dadd( 8.6472, -23.371, 10.6175, 1.08 ) }
    dend_28 { pt3dadd( 8.7451, -24.8773, 10.5665, 1.08 ) }
    dend_28 { pt3dadd( 8.91398, -27.4757, 10.4786, 1.56 ) }
    dend_28 { pt3dadd( 9.02714, -29.2168, 10.4196, 1.92 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 53/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -18.0692, -3.70371, 0.0171836, 1.08 ) }
    dend_14 { pt3dadd( -18.7306, -5.68611, 0.275369, 1.08 ) }
    dend_14 { pt3dadd( -18.9665, -6.48326, 0.339006, 1.08 ) }
    dend_14 { pt3dadd( -19.238, -7.57214, 0.410756, 1.08 ) }
    dend_14 { pt3dadd( -19.4386, -8.58068, 0.502292, 1.08 ) }
    dend_14 { pt3dadd( -19.6383, -9.87029, 0.542771, 1.08 ) }
    dend_14 { pt3dadd( -19.7615, -10.84, 0.52147, 1.32 ) }
    dend_14 { pt3dadd( -19.9868, -13.5287, 0.322204, 1.8 ) }
    dend_14 { pt3dadd( -19.9945, -14.2812, 0.230642, 1.8 ) }
    dend_14 { pt3dadd( -19.8963, -15.7098, -0.0302564, 1.56 ) }
    dend_14 { pt3dadd( -19.5665, -18.051, -0.596981, 1.44 ) }
    dend_14 { pt3dadd( -19.2885, -19.4206, -1.00713, 1.44 ) }
    dend_14 { pt3dadd( -18.9839, -20.6682, -1.41787, 1.56 ) }
    dend_14 { pt3dadd( -18.5606, -22.2666, -1.93965, 1.32 ) }
    dend_14 { pt3dadd( -18.1665, -23.8563, -2.46538, 1.32 ) }
    dend_14 { pt3dadd( -17.8125, -25.3512, -2.99777, 2.04 ) }
    dend_14 { pt3dadd( -17.5631, -26.4792, -3.38967, 2.04 ) }
    dend_14 { pt3dadd( -17.3201, -27.7073, -3.86026, 1.08 ) }
    dend_14 { pt3dadd( -17.0628, -29.2846, -4.53031, 1.44 ) }
    dend_14 { pt3dadd( -16.842, -30.8771, -5.26692, 1.44 ) }
    dend_14 { pt3dadd( -16.6257, -32.327, -5.9723, 0.96 ) }
    dend_14 { pt3dadd( -16.4672, -33.3059, -6.47241, 1.56 ) }
    dend_14 { pt3dadd( -16.2091, -34.7513, -7.22588, 1.56 ) }
    dend_14 { pt3dadd( -15.865, -36.3643, -8.07567, 2.16 ) }
    dend_14 { pt3dadd( -15.5303, -37.6073, -8.69352, 1.56 ) }
    dend_14 { pt3dadd( -15.1965, -38.5157, -9.04744, 1.56 ) }
    dend_14 { pt3dadd( -14.3642, -40.2654, -9.6397, 1.8 ) }
    dend_14 { pt3dadd( -13.9947, -40.9179, -9.84489, 1.8 ) }
    dend_14 { pt3dadd( -13.5266, -41.6602, -10.0582, 1.8 ) }
    dend_14 { pt3dadd( -12.9673, -42.5017, -10.2717, 1.8 ) }
    dend_14 { pt3dadd( -11.3592, -44.8691, -10.9443, 1.56 ) }
    dend_14 { pt3dadd( -9.76922, -47.1053, -11.6508, 1.56 ) }
    dend_14 { pt3dadd( -9.14773, -47.9142, -11.949, 1.56 ) }
    dend_14 { pt3dadd( -8.63761, -48.6198, -12.4186, 1.56 ) }
    dend_14 { pt3dadd( -8.0833, -49.4045, -12.998, 1.8 ) }
    dend_14 { pt3dadd( -6.91618, -51.1399, -14.447, 1.44 ) }
    dend_14 { pt3dadd( -6.44255, -51.8998, -15.1974, 1.44 ) }
    dend_14 { pt3dadd( -5.63189, -53.2517, -16.7142, 1.8 ) }
    dend_14 { pt3dadd( -3.08127, -57.629, -22.2685, 1.8 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 92/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -18.0692, -3.70371, 0.0171836, 1.56 ) }
    dend_1 { pt3dadd( -19.8763, -4.75531, 1.39973, 1.56 ) }
    dend_1 { pt3dadd( -21.8626, -5.91123, 2.91942, 1.32 ) }
    dend_1 { pt3dadd( -23.3265, -6.76313, 4.03941, 1.32 ) }
    dend_1 { pt3dadd( -25.2606, -7.88862, 5.5191, 1.68 ) }
    dend_1 { pt3dadd( -26.9644, -8.88017, 6.82269, 2.04 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 98/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 34.4097, -19.5371, 0.00941605, 0.119526 ) }
    axon_1 { pt3dadd( 47.2351, -27.3158, 0.00941605, 0.119526 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    axon_1 { pt3dadd( 60.0606, -35.0945, 0.00941605, 0.119526 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 1/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -15.7435, 42.8536, -23.1411, 0.84 ) }
    dend_53 { pt3dadd( -13.4018, 43.9694, -18.5383, 0.84 ) }
    dend_53 { pt3dadd( -12.7625, 44.274, -17.2816, 1.8 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 4/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -15.7435, 42.8536, -23.1411, 0.96 ) }
    dend_52 { pt3dadd( -15.6978, 43.9914, -24.3731, 0.96 ) }
    dend_52 { pt3dadd( -15.6709, 44.8834, -25.1721, 0.96 ) }
    dend_52 { pt3dadd( -15.6056, 46.4266, -26.6077, 1.2 ) }
    dend_52 { pt3dadd( -15.3427, 49.2368, -29.2355, 0.96 ) }
    dend_52 { pt3dadd( -15.209, 50.0988, -29.9707, 0.72 ) }
    dend_52 { pt3dadd( -14.9065, 51.442, -31.0417, 1.44 ) }
    dend_52 { pt3dadd( -14.6176, 52.2191, -31.6417, 1.44 ) }
    dend_52 { pt3dadd( -13.358, 54.7383, -33.4759, 0.84 ) }
    dend_52 { pt3dadd( -12.8229, 55.5464, -34.1913, 0.72 ) }
    dend_52 { pt3dadd( -11.869, 56.7325, -35.5367, 1.68 ) }
    dend_52 { pt3dadd( -11.0202, 57.6775, -36.7261, 0.72 ) }
    dend_52 { pt3dadd( -10.0999, 58.5836, -38.0181, 1.2 ) }
    dend_52 { pt3dadd( -9.22691, 59.377, -39.2685, 1.32 ) }
    dend_52 { pt3dadd( -6.11545, 61.9465, -43.7416, 0.72 ) }
    dend_52 { pt3dadd( -4.67942, 63.0906, -46.1837, 0.72 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 20/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -8.18938, 28.6978, -23.6804, 0.84 ) }
    dend_50 { pt3dadd( -7.24983, 30.1882, -25.2223, 0.84 ) }
    dend_50 { pt3dadd( -6.3432, 31.5756, -26.7316, 0.84 ) }
    dend_50 { pt3dadd( -5.85256, 32.3805, -27.7064, 0.84 ) }
    dend_50 { pt3dadd( -5.2857, 33.4201, -29.1572, 0.6 ) }
    dend_50 { pt3dadd( -4.8039, 34.3037, -30.3902, 0.6 ) }
    dend_50 { pt3dadd( -4.11766, 35.5623, -32.1466, 1.32 ) }
    dend_50 { pt3dadd( -3.37588, 37.093, -34.4108, 0.72 ) }
    dend_50 { pt3dadd( -2.54189, 38.7801, -36.9468, 1.56 ) }
    dend_50 { pt3dadd( -1.59887, 40.753, -40.1453, 0.84 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 30/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -8.18938, 28.6978, -23.6804, 0.84 ) }
    dend_49 { pt3dadd( -10.4799, 31.5998, -31.1807, 0.84 ) }
    dend_49 { pt3dadd( -10.91, 32.1447, -32.589, 1.2 ) }
    dend_49 { pt3dadd( -11.5169, 32.9136, -34.5764, 0.84 ) }
    dend_49 { pt3dadd( -12.0625, 33.6049, -36.3631, 1.2 ) }
    dend_49 { pt3dadd( -13.125, 34.951, -39.8421, 0.84 ) }
    dend_49 { pt3dadd( -13.6651, 35.6354, -41.6108, 1.2 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 37/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 16.9969, -46.9165, -34.6994, 0.72 ) }
    dend_44 { pt3dadd( 15.2817, -50.8369, -35.4531, 0.72 ) }
    dend_44 { pt3dadd( 14.6308, -52.2434, -35.6433, 1.2 ) }
    dend_44 { pt3dadd( 14.1601, -53.1961, -35.7442, 1.2 ) }
    dend_44 { pt3dadd( 13.3848, -54.6246, -35.9719, 0.6 ) }
    dend_44 { pt3dadd( 12.41, -56.2594, -36.2829, 1.92 ) }
    dend_44 { pt3dadd( 11.3209, -57.9481, -36.6986, 1.08 ) }
    dend_44 { pt3dadd( 9.89314, -59.8522, -37.3667, 1.68 ) }
    dend_44 { pt3dadd( 8.89984, -61.0084, -37.8954, 1.68 ) }
    dend_44 { pt3dadd( 6.9347, -63.0577, -39.0584, 0.96 ) }
    dend_44 { pt3dadd( 6.0443, -63.877, -39.6263, 0.96 ) }
    dend_44 { pt3dadd( 4.51865, -65.1028, -40.6851, 1.44 ) }
    dend_44 { pt3dadd( 2.71455, -66.3602, -41.9886, 0.96 ) }
    dend_44 { pt3dadd( 1.42728, -67.2033, -43.0112, 1.44 ) }
    dend_44 { pt3dadd( 0.0388868, -68.11, -44.1486, 0.96 ) }
    dend_44 { pt3dadd( -1.00544, -68.8308, -44.9967, 1.56 ) }
    dend_44 { pt3dadd( -2.70013, -70.0731, -46.3924, 0.84 ) }
    dend_44 { pt3dadd( -4.35383, -71.3635, -47.7232, 1.56 ) }
    dend_44 { pt3dadd( -6.60234, -73.257, -49.5304, 1.08 ) }
    dend_44 { pt3dadd( -7.78543, -74.3343, -50.4859, 0.84 ) }
    dend_44 { pt3dadd( -9.23234, -75.7806, -51.683, 1.08 ) }
    dend_44 { pt3dadd( -9.55191, -76.1244, -51.9488, 0.72 ) }
    dend_44 { pt3dadd( -10.7926, -77.5677, -52.9996, 1.2 ) }
    dend_44 { pt3dadd( -12.0321, -79.0992, -54.041, 0.6 ) }
    dend_44 { pt3dadd( -13.0041, -80.276, -54.7687, 1.08 ) }
    dend_44 { pt3dadd( -14.0905, -81.5561, -55.5806, 0.72 ) }
    dend_44 { pt3dadd( -15.264, -82.8718, -56.4913, 1.32 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 64/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 16.9969, -46.9165, -34.6994, 0.48 ) }
    dend_43 { pt3dadd( 18.7984, -48.0074, -35.5865, 0.48 ) }
    dend_43 { pt3dadd( 20.5706, -49.1064, -36.4903, 1.32 ) }
    dend_43 { pt3dadd( 21.7694, -49.8723, -37.1188, 0.96 ) }
    dend_43 { pt3dadd( 22.643, -50.4309, -37.5785, 1.56 ) }
    dend_43 { pt3dadd( 24.1603, -51.4161, -38.385, 0.96 ) }
    dend_43 { pt3dadd( 25.5727, -52.3615, -39.1485, 1.68 ) }
    dend_43 { pt3dadd( 27.065, -53.3974, -40.0075, 1.08 ) }
    dend_43 { pt3dadd( 28.2208, -54.2602, -40.704, 1.8 ) }
    dend_43 { pt3dadd( 28.6604, -54.6237, -40.9763, 1.8 ) }
    dend_43 { pt3dadd( 30.194, -56.0282, -41.9768, 1.08 ) }
    dend_43 { pt3dadd( 31.04, -56.9267, -42.5914, 1.56 ) }
    dend_43 { pt3dadd( 31.6554, -57.6967, -43.0748, 1.08 ) }
    dend_43 { pt3dadd( 32.2336, -58.5461, -43.5446, 1.56 ) }
    dend_43 { pt3dadd( 33.0452, -59.9507, -44.2231, 1.08 ) }
    dend_43 { pt3dadd( 33.5818, -61.0014, -44.6845, 1.68 ) }
    dend_43 { pt3dadd( 34.2122, -62.3777, -45.2288, 1.2 ) }
    dend_43 { pt3dadd( 34.7497, -63.5546, -45.6686, 1.2 ) }
    dend_43 { pt3dadd( 35.4625, -65.1099, -46.2292, 1.8 ) }
    dend_43 { pt3dadd( 36.0998, -66.6122, -46.7773, 1.2 ) }
    dend_43 { pt3dadd( 36.4322, -67.527, -47.2233, 1.8 ) }
    dend_43 { pt3dadd( 37.075, -69.4341, -48.309, 1.2 ) }
    dend_43 { pt3dadd( 37.757, -71.4813, -49.6271, 1.68 ) }
    dend_43 { pt3dadd( 38.1932, -72.7339, -50.5027, 1.2 ) }
    dend_43 { pt3dadd( 38.7819, -74.4358, -51.8449, 1.68 ) }
    dend_43 { pt3dadd( 40.0719, -78.0875, -54.9788, 1.2 ) }
    dend_43 { pt3dadd( 40.3968, -78.9862, -55.7967, 1.2 ) }
    dend_43 { pt3dadd( 40.6622, -79.7125, -56.4936, 1.2 ) }
    dend_43 { pt3dadd( 41.1375, -80.9924, -57.7794, 1.56 ) }
    dend_43 { pt3dadd( 42.1276, -83.3595, -60.2038, 0.96 ) }
    dend_43 { pt3dadd( 42.6972, -84.4546, -61.296, 1.44 ) }
    dend_43 { pt3dadd( 43.2033, -85.3483, -62.0512, 0.72 ) }
    dend_43 { pt3dadd( 43.6539, -86.2433, -62.8798, 1.32 ) }
    // Section: dend_41, id: dend_41, parent: dend_35 (entry count 97/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 29.7077, -11.7017, -10.8705, 0.72 ) }
    dend_41 { pt3dadd( 31.4547, -10.7231, -10.9584, 0.72 ) }
    dend_41 { pt3dadd( 32.7034, -9.89069, -11.0331, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( 33.6393, -9.18977, -11.0985, 0.72 ) }
    dend_41 { pt3dadd( 34.5096, -8.44902, -11.1934, 0.72 ) }
    dend_41 { pt3dadd( 35.5131, -7.48766, -11.3998, 0.48 ) }
    dend_41 { pt3dadd( 35.7928, -7.17325, -11.496, 0.96 ) }
    dend_41 { pt3dadd( 36.763, -5.81033, -12.0616, 0.6 ) }
    dend_41 { pt3dadd( 37.5386, -4.55051, -12.7586, 1.44 ) }
    dend_41 { pt3dadd( 38.2908, -3.23441, -13.6514, 0.72 ) }
    dend_41 { pt3dadd( 39.0942, -1.8511, -14.8404, 1.2 ) }
    dend_41 { pt3dadd( 40.0734, -0.158095, -16.4236, 0.6 ) }
    dend_41 { pt3dadd( 41.0896, 1.6117, -18.1919, 1.2 ) }
    dend_41 { pt3dadd( 41.9107, 3.0682, -19.7876, 0.84 ) }
    dend_41 { pt3dadd( 42.6542, 4.39977, -21.3985, 1.68 ) }
    dend_41 { pt3dadd( 43.6217, 6.00661, -23.5662, 0.84 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 13/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 29.7077, -11.7017, -10.8705, 0.48 ) }
    dend_36 { pt3dadd( 31.6169, -12.5121, -11.3183, 0.48 ) }
    dend_36 { pt3dadd( 33.0326, -13.2821, -11.6844, 0.96 ) }
    dend_36 { pt3dadd( 33.5811, -13.6528, -11.8486, 0.72 ) }
    dend_36 { pt3dadd( 35.5868, -15.2351, -12.4905, 1.2 ) }
    dend_36 { pt3dadd( 37.2652, -16.7456, -13.041, 0.84 ) }
    dend_36 { pt3dadd( 38.7862, -18.2981, -13.5572, 1.68 ) }
    dend_36 { pt3dadd( 39.9116, -19.7567, -13.9871, 0.96 ) }
    dend_36 { pt3dadd( 40.8997, -21.366, -14.3912, 1.92 ) }
    dend_36 { pt3dadd( 41.3848, -22.331, -14.5934, 1.92 ) }
    dend_36 { pt3dadd( 41.8966, -23.65, -14.8027, 0.96 ) }
    dend_36 { pt3dadd( 42.3689, -25.0507, -14.9444, 1.44 ) }
    dend_36 { pt3dadd( 42.609, -25.7994, -14.956, 1.44 ) }
    dend_36 { pt3dadd( 43.2792, -27.7315, -14.8222, 0.72 ) }
    dend_36 { pt3dadd( 43.5404, -28.4002, -14.7259, 0.72 ) }
    dend_36 { pt3dadd( 44.0703, -29.6488, -14.4765, 1.32 ) }
    dend_36 { pt3dadd( 45.0809, -31.6345, -13.8268, 1.32 ) }
    dend_36 { pt3dadd( 45.6099, -32.4787, -13.4331, 1.32 ) }
    dend_36 { pt3dadd( 46.1568, -33.2206, -13.0163, 1.32 ) }
    dend_36 { pt3dadd( 46.5302, -33.6768, -12.7196, 1.32 ) }
    dend_36 { pt3dadd( 47.6653, -34.9764, -11.7935, 0.72 ) }
    dend_36 { pt3dadd( 49.2454, -36.6813, -10.4424, 1.8 ) }
    dend_36 { pt3dadd( 50.2459, -37.6987, -9.64916, 1.8 ) }
    dend_36 { pt3dadd( 50.9179, -38.3287, -9.11793, 1.8 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 37/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 9.02714, -29.2168, 10.4196, 1.44 ) }
    dend_32 { pt3dadd( 11.407, -30.5894, 11.1227, 1.44 ) }
    dend_32 { pt3dadd( 13.4392, -32.02, 11.8022, 1.44 ) }
    dend_32 { pt3dadd( 14.987, -33.287, 12.3779, 1.44 ) }
    dend_32 { pt3dadd( 16.465, -34.6989, 12.9856, 1.44 ) }
    dend_32 { pt3dadd( 17.5056, -35.7731, 13.4199, 1.44 ) }
    dend_32 { pt3dadd( 19.0636, -37.5046, 14.1011, 1.44 ) }
    dend_32 { pt3dadd( 19.9529, -38.6645, 14.5485, 1.08 ) }
    dend_32 { pt3dadd( 20.8217, -39.9455, 15.0916, 1.44 ) }
    dend_32 { pt3dadd( 22.4114, -42.3582, 16.1227, 1.08 ) }
    dend_32 { pt3dadd( 23.4396, -43.8159, 16.733, 1.56 ) }
    dend_32 { pt3dadd( 24.7857, -45.5401, 17.4975, 0.96 ) }
    dend_32 { pt3dadd( 25.7719, -46.6397, 18.0235, 0.96 ) }
    dend_32 { pt3dadd( 27.772, -48.6665, 19.0634, 0.96 ) }
    dend_32 { pt3dadd( 29.2031, -50.0239, 19.8126, 0.96 ) }
    dend_32 { pt3dadd( 30.1439, -50.8784, 20.3278, 0.96 ) }
    dend_32 { pt3dadd( 31.0583, -51.7131, 20.8429, 0.96 ) }
    dend_32 { pt3dadd( 32.4128, -52.9333, 21.6177, 0.72 ) }
    dend_32 { pt3dadd( 33.0905, -53.5757, 22.0125, 0.72 ) }
    dend_32 { pt3dadd( 34.2982, -54.8048, 22.7411, 0.72 ) }
    dend_32 { pt3dadd( 35.2272, -55.8496, 23.4405, 0.72 ) }
    dend_32 { pt3dadd( 35.728, -56.4209, 23.8441, 0.72 ) }
    dend_32 { pt3dadd( 36.4272, -57.168, 24.4311, 0.72 ) }
    dend_32 { pt3dadd( 36.9385, -57.6971, 24.8768, 0.72 ) }
    dend_32 { pt3dadd( 38.1647, -58.8529, 25.9217, 0.72 ) }
    dend_32 { pt3dadd( 38.7069, -59.3002, 26.3467, 0.72 ) }
    dend_32 { pt3dadd( 39.5835, -59.9271, 27.0093, 0.72 ) }
    dend_32 { pt3dadd( 40.6741, -60.6411, 27.8408, 0.72 ) }
    dend_32 { pt3dadd( 50.1052, -65.9711, 33.7055, 0.72 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 66/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 9.02714, -29.2168, 10.4196, 1.44 ) }
    dend_29 { pt3dadd( 8.15706, -30.1158, 10.4496, 1.44 ) }
    dend_29 { pt3dadd( 6.92883, -31.5731, 10.2638, 1.44 ) }
    dend_29 { pt3dadd( 6.30477, -32.4414, 10.0762, 1.2 ) }
    dend_29 { pt3dadd( 5.77567, -33.3217, 9.82844, 1.2 ) }
    dend_29 { pt3dadd( 5.00003, -34.7886, 9.32311, 1.08 ) }
    dend_29 { pt3dadd( 4.60975, -35.546, 9.02491, 1.08 ) }
    dend_29 { pt3dadd( 3.81528, -37.1679, 8.15872, 1.32 ) }
    dend_29 { pt3dadd( 3.44657, -37.9788, 7.61483, 1.32 ) }
    dend_29 { pt3dadd( 3.09215, -38.8274, 7.02223, 0.96 ) }
    dend_29 { pt3dadd( 2.77988, -39.6483, 6.40633, 0.96 ) }
    dend_29 { pt3dadd( 2.38705, -40.6957, 5.59052, 1.32 ) }
    dend_29 { pt3dadd( 2.002, -41.6299, 4.83433, 0.96 ) }
    dend_29 { pt3dadd( 1.64541, -42.3673, 4.24922, 0.96 ) }
    dend_29 { pt3dadd( 0.93869, -43.7342, 3.14784, 1.44 ) }
    dend_29 { pt3dadd( 0.173049, -45.1523, 2.01722, 0.96 ) }
    dend_29 { pt3dadd( -0.0316382, -45.5449, 1.71688, 0.96 ) }
    dend_29 { pt3dadd( -0.684208, -46.8967, 0.730353, 1.8 ) }
    dend_29 { pt3dadd( -1.11971, -47.9041, -0.0606171, 1.32 ) }
    dend_29 { pt3dadd( -1.30094, -48.3245, -0.40446, 1.32 ) }
    dend_29 { pt3dadd( -1.43241, -48.6136, -0.643624, 1.32 ) }
    dend_29 { pt3dadd( -1.73544, -49.236, -1.13703, 0.96 ) }
    dend_29 { pt3dadd( -1.88813, -49.5541, -1.40797, 0.96 ) }
    dend_29 { pt3dadd( -2.91969, -51.7506, -3.35551, 2.4 ) }
    dend_29 { pt3dadd( -3.59566, -53.2386, -4.71239, 0.84 ) }
    dend_29 { pt3dadd( -4.13686, -54.4388, -5.8227, 2.16 ) }
    dend_29 { pt3dadd( -4.35043, -54.9079, -6.26144, 2.16 ) }
    dend_29 { pt3dadd( -5.17019, -56.6062, -7.87703, 0.84 ) }
    dend_29 { pt3dadd( -5.67714, -57.5642, -8.76597, 1.32 ) }
    // Section: dend_26, id: dend_26, parent: dend_14 (entry count 95/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -3.08127, -57.629, -22.2685, 0.84 ) }
    dend_26 { pt3dadd( -2.22949, -59.2504, -22.5529, 0.84 ) }
    dend_26 { pt3dadd( -1.64502, -60.3854, -22.7662, 0.96 ) }
    dend_26 { pt3dadd( -0.812884, -62.1237, -23.1129, 0.72 ) }
    dend_26 { pt3dadd( 0.502268, -64.9977, -23.7329, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( 2.0321, -68.6027, -24.5331, 1.08 ) }
    dend_26 { pt3dadd( 3.15069, -71.4057, -25.071, 1.08 ) }
    dend_26 { pt3dadd( 3.567, -72.5152, -25.2608, 1.08 ) }
    dend_26 { pt3dadd( 4.50376, -75.4036, -25.719, 0.6 ) }
    dend_26 { pt3dadd( 5.16817, -77.8918, -26.0554, 1.32 ) }
    dend_26 { pt3dadd( 5.62745, -80.1818, -26.2771, 1.32 ) }
    dend_26 { pt3dadd( 6.06698, -82.8745, -26.5242, 0.72 ) }
    dend_26 { pt3dadd( 6.24542, -83.9948, -26.6471, 0.72 ) }
    dend_26 { pt3dadd( 6.70329, -86.4436, -26.8799, 1.2 ) }
    dend_26 { pt3dadd( 7.18505, -88.501, -27.0138, 0.48 ) }
    dend_26 { pt3dadd( 7.69644, -90.3571, -27.1208, 1.08 ) }
    dend_26 { pt3dadd( 8.42568, -92.6252, -27.3022, 0.6 ) }
    dend_26 { pt3dadd( 9.56094, -95.8621, -27.6927, 1.2 ) }
    dend_26 { pt3dadd( 11.0138, -99.6135, -28.0713, 0.72 ) }
    dend_26 { pt3dadd( 12.3071, -102.554, -28.2807, 1.32 ) }
    dend_26 { pt3dadd( 13.4933, -104.965, -28.3878, 0.72 ) }
    dend_26 { pt3dadd( 14.6431, -107.112, -28.388, 1.08 ) }
    dend_26 { pt3dadd( 15.8908, -109.384, -28.3331, 0.48 ) }
    dend_26 { pt3dadd( 17.0514, -111.453, -28.2687, 0.48 ) }
    dend_26 { pt3dadd( 18.1889, -113.575, -28.3243, 1.32 ) }
    dend_26 { pt3dadd( 18.8519, -114.95, -28.3555, 1.32 ) }
    dend_26 { pt3dadd( 19.7209, -117.134, -28.3549, 0.72 ) }
    dend_26 { pt3dadd( 20.1203, -118.989, -28.4121, 1.32 ) }
    dend_26 { pt3dadd( 19.9399, -121.152, -28.883, 0.6 ) }
    dend_26 { pt3dadd( 19.2156, -123.06, -29.76, 1.56 ) }
    dend_26 { pt3dadd( 18.5648, -124.113, -30.4256, 1.56 ) }
    dend_26 { pt3dadd( 17.6328, -125.315, -31.3324, 0.72 ) }
    dend_26 { pt3dadd( 15.5742, -127.588, -33.3161, 1.68 ) }
    dend_26 { pt3dadd( 13.0002, -130.325, -35.9132, 1.2 ) }
    dend_26 { pt3dadd( 11.894, -131.57, -37.1459, 1.56 ) }
    dend_26 { pt3dadd( 10.7064, -133.128, -38.6554, 0.96 ) }
    dend_26 { pt3dadd( 9.84814, -134.555, -39.9375, 0.96 ) }
    dend_26 { pt3dadd( 9.3091, -135.891, -40.9907, 1.56 ) }
    dend_26 { pt3dadd( 8.80946, -137.878, -42.3128, 1.56 ) }
    dend_26 { pt3dadd( 8.36625, -140.056, -43.3974, 1.2 ) }
    dend_26 { pt3dadd( 8.06307, -141.648, -44.0422, 1.2 ) }
    dend_26 { pt3dadd( 7.47968, -144.442, -45.0479, 1.68 ) }
    dend_26 { pt3dadd( 6.57004, -148.438, -46.3278, 0.96 ) }
    dend_26 { pt3dadd( 6.03346, -150.552, -46.8864, 0.96 ) }
    dend_26 { pt3dadd( 4.74196, -155.226, -47.914, 0.48 ) }
    dend_26 { pt3dadd( 4.24347, -157.019, -48.2453, 1.56 ) }
    dend_26 { pt3dadd( 3.01858, -161.778, -49.0208, 0.96 ) }
    dend_26 { pt3dadd( 2.7977, -162.73, -49.1494, 0.96 ) }
    dend_26 { pt3dadd( 2.16128, -166.285, -49.4278, 1.44 ) }
    dend_26 { pt3dadd( 1.99647, -168.515, -49.5783, 1.08 ) }
    dend_26 { pt3dadd( 2.14978, -171.731, -49.8381, 0.72 ) }
    dend_26 { pt3dadd( 2.45386, -174.11, -49.9808, 0.72 ) }
    dend_26 { pt3dadd( 2.72414, -175.414, -50.0034, 0.72 ) }
    dend_26 { pt3dadd( 3.41761, -178.337, -50.0473, 1.32 ) }
    dend_26 { pt3dadd( 4.22475, -181.311, -50.1298, 0.72 ) }
    dend_26 { pt3dadd( 4.69765, -183.078, -50.2054, 0.72 ) }
    dend_26 { pt3dadd( 4.94267, -183.932, -50.1491, 0.72 ) }
    dend_26 { pt3dadd( 5.26768, -184.995, -49.9842, 0.72 ) }
    dend_26 { pt3dadd( 6.0418, -187.374, -49.4923, 1.2 ) }
    dend_26 { pt3dadd( 6.89517, -189.873, -48.8667, 0.6 ) }
    dend_26 { pt3dadd( 7.67198, -192.057, -48.1739, 1.2 ) }
    dend_26 { pt3dadd( 9.66124, -197.357, -46.2141, 0.72 ) }
    dend_26 { pt3dadd( 10.5805, -199.625, -45.3204, 0.72 ) }
    dend_26 { pt3dadd( 11.4478, -201.59, -44.538, 1.32 ) }
    dend_26 { pt3dadd( 12.3374, -203.491, -43.8062, 0.6 ) }
    dend_26 { pt3dadd( 13.5434, -206.098, -42.8899, 1.2 ) }
    dend_26 { pt3dadd( 14.7968, -208.909, -42.019, 0.72 ) }
    dend_26 { pt3dadd( 15.6822, -211.087, -41.5236, 0.72 ) }
    dend_26 { pt3dadd( 16.6313, -213.559, -40.8823, 1.2 ) }
    dend_26 { pt3dadd( 17.4223, -215.716, -40.2768, 0.6 ) }
    dend_26 { pt3dadd( 17.9867, -217.29, -39.8073, 1.2 ) }
    dend_26 { pt3dadd( 19.0309, -220.217, -38.8874, 0.48 ) }
    dend_26 { pt3dadd( 19.7795, -222.392, -38.2097, 1.44 ) }
    dend_26 { pt3dadd( 20.5653, -224.956, -37.2991, 0.96 ) }
    dend_26 { pt3dadd( 20.8759, -226.122, -36.8122, 0.96 ) }
    dend_26 { pt3dadd( 21.0163, -226.755, -36.5488, 0.96 ) }
    dend_26 { pt3dadd( 21.2395, -228.074, -36.082, 0.96 ) }
    dend_26 { pt3dadd( 21.4079, -229.972, -35.611, 0.96 ) }
    dend_26 { pt3dadd( 21.4865, -232.317, -35.236, 1.68 ) }
    dend_26 { pt3dadd( 21.4761, -235.553, -34.6144, 0.96 ) }
    dend_26 { pt3dadd( 21.4458, -237.871, -34.0817, 1.32 ) }
    dend_26 { pt3dadd( 21.404, -240.524, -33.3475, 0.72 ) }
    dend_26 { pt3dadd( 21.4039, -242.868, -32.5849, 0.72 ) }
    dend_26 { pt3dadd( 21.477, -244.89, -31.8407, 1.2 ) }
    dend_26 { pt3dadd( 21.9148, -249.68, -29.9087, 0.6 ) }
    dend_26 { pt3dadd( 22.1238, -251.222, -29.2172, 0.96 ) }
    dend_26 { pt3dadd( 22.5756, -253.507, -28.0019, 0.6 ) }
    dend_26 { pt3dadd( 22.9796, -255.285, -26.9525, 1.32 ) }
    dend_26 { pt3dadd( 23.2305, -256.404, -26.2601, 1.32 ) }
    dend_26 { pt3dadd( 23.3836, -257.246, -25.7479, 1.32 ) }
    dend_26 { pt3dadd( 23.5223, -258.487, -25.1091, 1.32 ) }
    dend_26 { pt3dadd( 23.598, -260.271, -24.118, 0.96 ) }
    dend_26 { pt3dadd( 23.5349, -262.775, -22.7845, 1.44 ) }
    dend_26 { pt3dadd( 23.3983, -264.404, -21.8665, 1.44 ) }
    dend_26 { pt3dadd( 23.168, -266.171, -20.8271, 0.72 ) }
    dend_26 { pt3dadd( 22.8768, -267.878, -19.7676, 1.2 ) }
    dend_26 { pt3dadd( 22.4443, -269.978, -18.4371, 0.48 ) }
    dend_26 { pt3dadd( 21.8559, -271.96, -17.1744, 1.08 ) }
    dend_26 { pt3dadd( 21.2277, -273.928, -15.88, 0.6 ) }
    dend_26 { pt3dadd( 20.7179, -275.417, -14.9048, 1.2 ) }
    dend_26 { pt3dadd( 20.0357, -277.231, -13.7048, 0.6 ) }
    dend_26 { pt3dadd( 19.6632, -278.129, -13.0973, 0.6 ) }
    dend_26 { pt3dadd( 18.7785, -280.067, -11.7293, 1.2 ) }
    dend_26 { pt3dadd( 17.9798, -281.699, -10.4222, 0.72 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -3.08127, -57.629, -22.2685, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_15 { pt3dadd( -1.64424, -59.2634, -22.7636, 0.96 ) }
    dend_15 { pt3dadd( -0.206607, -60.8984, -23.259, 0.96 ) }
    dend_15 { pt3dadd( 1.5208, -62.863, -23.8542, 2.64 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 3/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -26.9644, -8.88017, 6.82269, 1.32 ) }
    dend_5 { pt3dadd( -28.8165, -8.33457, 7.91361, 1.32 ) }
    dend_5 { pt3dadd( -30.7572, -7.76284, 9.05676, 1.32 ) }
    dend_5 { pt3dadd( -32.8554, -7.14473, 10.2927, 1.92 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 7/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -26.9644, -8.88017, 6.82269, 0.96 ) }
    dend_2 { pt3dadd( -28.3669, -11.6459, 8.01164, 0.96 ) }
    dend_2 { pt3dadd( -28.8575, -12.3556, 8.41922, 1.44 ) }
    dend_2 { pt3dadd( -29.684, -13.2566, 9.08397, 1.44 ) }
    dend_2 { pt3dadd( -30.3451, -13.8831, 9.6258, 1.44 ) }
    dend_2 { pt3dadd( -31.1913, -14.6571, 10.3332, 1.44 ) }
    dend_2 { pt3dadd( -33.0719, -16.3789, 11.9669, 1.68 ) }
    dend_2 { pt3dadd( -34.4797, -17.5087, 13.2731, 1.2 ) }
    dend_2 { pt3dadd( -35.808, -18.574, 14.5812, 1.2 ) }
    dend_2 { pt3dadd( -36.3509, -19.0022, 15.1525, 1.2 ) }
    dend_2 { pt3dadd( -36.968, -19.5386, 15.8335, 1.2 ) }
    dend_2 { pt3dadd( -37.5543, -20.1244, 16.5139, 1.2 ) }
    dend_2 { pt3dadd( -37.8309, -20.5363, 16.8806, 1.2 ) }
    dend_2 { pt3dadd( -38.0864, -21.0959, 17.3256, 1.2 ) }
    dend_2 { pt3dadd( -38.3492, -21.8042, 17.8532, 1.2 ) }
    dend_2 { pt3dadd( -39.0075, -23.4775, 19.0799, 1.56 ) }
    dend_2 { pt3dadd( -39.5355, -24.5069, 19.8374, 1.08 ) }
    dend_2 { pt3dadd( -40.0899, -25.3819, 20.4679, 1.08 ) }
    dend_2 { pt3dadd( -40.6586, -26.0512, 21.0117, 1.08 ) }
    dend_2 { pt3dadd( -41.3759, -26.8233, 21.6503, 1.08 ) }
    dend_2 { pt3dadd( -41.8467, -27.2847, 22.0301, 1.08 ) }
    dend_2 { pt3dadd( -43.2496, -28.3867, 23.0659, 1.08 ) }
    dend_2 { pt3dadd( -43.7245, -28.6734, 23.3432, 1.08 ) }
    dend_2 { pt3dadd( -45.5772, -29.4659, 24.239, 1.32 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 31/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -15.264, -82.8718, -56.4913, 1.08 ) }
    dend_46 { pt3dadd( -14.3696, -84.0383, -56.8913, 1.08 ) }
    dend_46 { pt3dadd( -13.3307, -85.3935, -57.3561, 1.32 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 34/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -15.264, -82.8718, -56.4913, 0.84 ) }
    dend_45 { pt3dadd( -16.3519, -83.7974, -56.5914, 0.84 ) }
    dend_45 { pt3dadd( -17.5032, -84.8189, -57.0481, 1.44 ) }
    dend_45 { pt3dadd( -18.6515, -85.8377, -57.5037, 0.6 ) }
    dend_45 { pt3dadd( -19.6263, -86.7027, -57.8904, 1.08 ) }
    dend_45 { pt3dadd( -21.4506, -88.3213, -58.6141, 0.48 ) }
    dend_45 { pt3dadd( -22.9672, -89.6668, -59.2157, 1.56 ) }
    dend_45 { pt3dadd( -25.0754, -91.539, -60.3824, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 42/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 50.9179, -38.3287, -9.11793, 0.84 ) }
    dend_40 { pt3dadd( 51.2144, -39.765, -9.19697, 0.84 ) }
    dend_40 { pt3dadd( 51.4342, -40.8647, -9.25435, 1.44 ) }
    dend_40 { pt3dadd( 52.0714, -43.9145, -9.41417, 0.48 ) }
    dend_40 { pt3dadd( 52.5982, -46.4361, -9.54631, 0.48 ) }
    dend_40 { pt3dadd( 52.955, -48.1435, -9.63578, 1.44 ) }
    dend_40 { pt3dadd( 53.4621, -50.5708, -9.76298, 0.6 ) }
    dend_40 { pt3dadd( 53.7009, -51.6262, -9.82704, 0.6 ) }
    dend_40 { pt3dadd( 54.031, -53.0469, -9.90103, 1.2 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 51/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 50.9179, -38.3287, -9.11793, 0.6 ) }
    dend_37 { pt3dadd( 52.3153, -39.0356, -8.85488, 0.6 ) }
    dend_37 { pt3dadd( 54.001, -39.8104, -8.46306, 1.2 ) }
    dend_37 { pt3dadd( 54.542, -40.0688, -8.31939, 1.2 ) }
    dend_37 { pt3dadd( 55.5312, -40.5765, -8.03839, 0.6 ) }
    dend_37 { pt3dadd( 58.1997, -42.0575, -7.20733, 1.68 ) }
    dend_37 { pt3dadd( 59.2126, -42.6383, -6.86446, 1.68 ) }
    dend_37 { pt3dadd( 60.8726, -43.5995, -6.26318, 0.84 ) }
    dend_37 { pt3dadd( 62.3769, -44.4232, -5.69023, 0.84 ) }
    dend_37 { pt3dadd( 63.923, -45.2387, -5.08084, 1.44 ) }
    dend_37 { pt3dadd( 65.7957, -46.2363, -4.31252, 0.84 ) }
    dend_37 { pt3dadd( 68.0115, -47.4841, -3.36803, 1.56 ) }
    dend_37 { pt3dadd( 70.5692, -48.9272, -2.2611, 1.08 ) }
    dend_37 { pt3dadd( 72.1863, -49.8152, -1.56795, 1.56 ) }
    dend_37 { pt3dadd( 74.3348, -50.9222, -0.646612, 2.04 ) }
    dend_37 { pt3dadd( 76.5554, -51.9986, 0.313609, 1.2 ) }
    dend_37 { pt3dadd( 78.4, -52.852, 1.10513, 1.2 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 68/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -5.67714, -57.5642, -8.76597, 0.48 ) }
    dend_31 { pt3dadd( -5.69178, -58.7463, -8.63416, 0.48 ) }
    dend_31 { pt3dadd( -5.63615, -59.9119, -8.53529, 1.56 ) }
    dend_31 { pt3dadd( -5.42297, -61.9304, -8.42106, 0.6 ) }
    dend_31 { pt3dadd( -5.17982, -63.2, -8.35467, 1.8 ) }
    dend_31 { pt3dadd( -4.84797, -64.5631, -8.30273, 0.6 ) }
    dend_31 { pt3dadd( -4.64337, -65.2967, -8.28263, 0.6 ) }
    dend_31 { pt3dadd( -4.34072, -66.1615, -8.27884, 0.6 ) }
    dend_31 { pt3dadd( -3.93433, -67.1493, -8.269, 1.56 ) }
    dend_31 { pt3dadd( -3.16899, -68.6509, -8.25827, 0.48 ) }
    dend_31 { pt3dadd( -2.59978, -69.6746, -8.22005, 0.48 ) }
    dend_31 { pt3dadd( -2.32086, -70.1585, -8.18993, 0.48 ) }
    dend_31 { pt3dadd( -1.77581, -71.118, -8.10411, 1.68 ) }
    dend_31 { pt3dadd( -1.01994, -72.4994, -7.93215, 1.08 ) }
    dend_31 { pt3dadd( -0.551267, -73.3776, -7.77615, 1.08 ) }
    dend_31 { pt3dadd( 2.16149, -78.8789, -7.83559, 1.08 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 84/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -5.67714, -57.5642, -8.76597, 0.72 ) }
    dend_30 { pt3dadd( -7.12644, -58.4131, -10.2911, 0.72 ) }
    dend_30 { pt3dadd( -7.93188, -58.9216, -11.2304, 1.56 ) }
    dend_30 { pt3dadd( -8.66839, -59.4599, -12.1404, 0.72 ) }
    dend_30 { pt3dadd( -9.72521, -60.3269, -13.5467, 1.32 ) }
    dend_30 { pt3dadd( -10.9476, -61.4453, -14.9673, 0.72 ) }
    dend_30 { pt3dadd( -11.9216, -62.4257, -16.0019, 1.56 ) }
    dend_30 { pt3dadd( -13.0796, -63.8681, -17.2531, 0.84 ) }
    dend_30 { pt3dadd( -13.6682, -64.7355, -17.8566, 0.84 ) }
    dend_30 { pt3dadd( -14.6388, -66.4609, -18.8036, 1.92 ) }
    dend_30 { pt3dadd( -16.1327, -69.6364, -20.0685, 0.96 ) }
    dend_30 { pt3dadd( -16.6922, -70.9537, -20.4755, 0.96 ) }
    dend_30 { pt3dadd( -17.7576, -73.692, -21.1253, 0.72 ) }
    dend_30 { pt3dadd( -18.0822, -74.6085, -21.2921, 1.32 ) }
    dend_30 { pt3dadd( -18.6595, -76.3252, -21.5649, 0.84 ) }
    dend_30 { pt3dadd( -19.0906, -77.9685, -21.7607, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -24.5447, -84.8962, -26.3958, 1.2 ) }
    // Section: dend_23, id: dend_23, parent: dend_15 (entry count 1/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 1.5208, -62.863, -23.8542, 0.96 ) }
    dend_23 { pt3dadd( 0.71431, -64.719, -24.9541, 0.96 ) }
    dend_23 { pt3dadd( 0.0186948, -66.5729, -26.0026, 0.96 ) }
    dend_23 { pt3dadd( -0.248726, -67.3128, -26.401, 0.96 ) }
    dend_23 { pt3dadd( -0.522817, -68.083, -26.7964, 0.96 ) }
    dend_23 { pt3dadd( -0.948184, -69.2831, -27.3623, 0.96 ) }
    dend_23 { pt3dadd( -1.16903, -69.9039, -27.6363, 0.96 ) }
    dend_23 { pt3dadd( -1.26062, -70.2535, -27.7638, 0.96 ) }
    dend_23 { pt3dadd( -1.48038, -70.968, -27.9641, 0.96 ) }
    dend_23 { pt3dadd( -1.62114, -71.2998, -28.0733, 0.96 ) }
    dend_23 { pt3dadd( -2.05435, -72.112, -28.4274, 0.96 ) }
    dend_23 { pt3dadd( -2.39266, -72.6226, -28.7459, 0.96 ) }
    dend_23 { pt3dadd( -2.92457, -73.3834, -29.3497, 0.6 ) }
    dend_23 { pt3dadd( -3.63846, -74.3816, -30.2675, 1.56 ) }
    dend_23 { pt3dadd( -4.57151, -75.6507, -31.5823, 0.96 ) }
    dend_23 { pt3dadd( -5.13201, -76.3713, -32.4, 0.96 ) }
    dend_23 { pt3dadd( -6.22783, -77.7182, -33.9922, 0.72 ) }
    dend_23 { pt3dadd( -7.35141, -79.118, -35.5992, 1.2 ) }
    dend_23 { pt3dadd( -8.21255, -80.1964, -36.7913, 0.72 ) }
    dend_23 { pt3dadd( -9.15573, -81.4258, -38.044, 1.2 ) }
    dend_23 { pt3dadd( -10.2733, -82.9431, -39.437, 0.72 ) }
    dend_23 { pt3dadd( -10.8075, -83.7259, -40.0831, 0.72 ) }
    dend_23 { pt3dadd( -12.1507, -85.8745, -41.6317, 1.2 ) }
    dend_23 { pt3dadd( -13.0317, -87.3455, -42.5378, 1.2 ) }
    dend_23 { pt3dadd( -14.0517, -89.1136, -43.5119, 0.72 ) }
    dend_23 { pt3dadd( -14.4277, -89.7979, -43.8495, 0.72 ) }
    dend_23 { pt3dadd( -15.2375, -91.3003, -44.5386, 1.32 ) }
    dend_23 { pt3dadd( -15.8052, -92.3871, -45.0335, 1.32 ) }
    dend_23 { pt3dadd( -16.6793, -94.0305, -45.7831, 0.6 ) }
    dend_23 { pt3dadd( -17.3173, -95.2002, -46.3449, 1.08 ) }
    dend_23 { pt3dadd( -18.862, -97.7769, -47.8233, 0.6 ) }
    dend_23 { pt3dadd( -19.6351, -98.9543, -48.6015, 1.2 ) }
    dend_23 { pt3dadd( -20.4252, -100.009, -49.3451, 0.6 ) }
    dend_23 { pt3dadd( -21.2545, -100.974, -50.1442, 1.2 ) }
    dend_23 { pt3dadd( -22.0918, -101.85, -51.0001, 0.48 ) }
    dend_23 { pt3dadd( -23.7853, -103.498, -52.7068, 1.44 ) }
    dend_23 { pt3dadd( -24.1863, -103.871, -53.1068, 1.44 ) }
    dend_23 { pt3dadd( -25.4521, -105.068, -54.3199, 0.72 ) }
    dend_23 { pt3dadd( -27.0184, -106.632, -55.7291, 1.56 ) }
    dend_23 { pt3dadd( -29.0637, -108.908, -57.4235, 0.84 ) }
    dend_23 { pt3dadd( -29.7146, -109.732, -57.8751, 0.84 ) }
    dend_23 { pt3dadd( -30.9387, -111.612, -58.7289, 1.56 ) }
    dend_23 { pt3dadd( -31.5623, -112.759, -59.2298, 1.56 ) }
    dend_23 { pt3dadd( -32.457, -114.798, -60.124, 0.72 ) }
    dend_23 { pt3dadd( -33.1599, -116.872, -61.1525, 1.2 ) }
    dend_23 { pt3dadd( -33.9096, -119.354, -62.3668, 0.72 ) }
    dend_23 { pt3dadd( -34.8249, -122.666, -64.1206, 1.56 ) }
    dend_23 { pt3dadd( -35.2514, -124.456, -65.1628, 1.08 ) }
    dend_23 { pt3dadd( -35.5707, -126.186, -66.3088, 1.56 ) }
    dend_23 { pt3dadd( -36.0254, -130.203, -69.4973, 1.32 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 51/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 1.5208, -62.863, -23.8542, 0.48 ) }
    dend_16 { pt3dadd( 4.22689, -65.1999, -24.1267, 0.48 ) }
    dend_16 { pt3dadd( 5.4431, -66.2604, -24.207, 0.48 ) }
    dend_16 { pt3dadd( 7.43322, -67.9958, -24.3385, 1.56 ) }
    dend_16 { pt3dadd( 9.02564, -69.3844, -24.4437, 0.36 ) }
    dend_16 { pt3dadd( 9.57287, -69.8616, -24.4798, 0.36 ) }
    dend_16 { pt3dadd( 11.563, -71.597, -24.6113, 1.32 ) }
    dend_16 { pt3dadd( 12.856, -72.6603, -24.5174, 1.32 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 59/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -32.8554, -7.14473, 10.2927, 1.44 ) }
    dend_9 { pt3dadd( -33.3492, -6.41152, 13.5663, 1.44 ) }
    dend_9 { pt3dadd( -33.9926, -5.96444, 16.229, 1.2 ) }
    dend_9 { pt3dadd( -34.3745, -5.72104, 17.5212, 1.2 ) }
    dend_9 { pt3dadd( -34.7111, -5.50646, 18.6605, 0.84 ) }
    dend_9 { pt3dadd( -34.8761, -5.40133, 19.2187, 0.84 ) }
    dend_9 { pt3dadd( -35.2388, -5.17012, 20.4462, 1.2 ) }
    dend_9 { pt3dadd( -36.2776, -4.85033, 22.6078, 1.08 ) }
    dend_9 { pt3dadd( -37.0085, -4.75587, 23.6267, 1.44 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 68/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -32.8554, -7.14473, 10.2927, 1.92 ) }
    dend_6 { pt3dadd( -34.1278, -6.3351, 10.8062, 1.92 ) }
    dend_6 { pt3dadd( -34.8706, -5.88158, 11.0223, 1.92 ) }
    dend_6 { pt3dadd( -36.0242, -5.12526, 11.2507, 1.56 ) }
    dend_6 { pt3dadd( -36.9803, -4.46076, 11.3852, 1.32 ) }
    dend_6 { pt3dadd( -37.8756, -3.76721, 11.4758, 1.8 ) }
    dend_6 { pt3dadd( -38.8666, -2.94756, 11.5418, 1.2 ) }
    dend_6 { pt3dadd( -39.6559, -2.21897, 11.5082, 1.2 ) }
    dend_6 { pt3dadd( -40.7392, -1.15778, 11.4252, 0.96 ) }
    dend_6 { pt3dadd( -41.2425, -0.646342, 11.3586, 0.96 ) }
    dend_6 { pt3dadd( -42.08, 0.189566, 11.2009, 1.32 ) }
    dend_6 { pt3dadd( -42.8738, 0.917929, 11.0603, 1.32 ) }
    dend_6 { pt3dadd( -43.4395, 1.34452, 10.9655, 1.32 ) }
    dend_6 { pt3dadd( -44.1155, 1.72467, 10.8603, 0.96 ) }
    dend_6 { pt3dadd( -44.6154, 1.90025, 10.7871, 0.96 ) }
    dend_6 { pt3dadd( -45.4412, 2.1417, 10.7452, 0.96 ) }
    dend_6 { pt3dadd( -46.3347, 2.31434, 10.708, 0.96 ) }
    dend_6 { pt3dadd( -47.7372, 2.5106, 10.6626, 1.44 ) }
    dend_6 { pt3dadd( -48.456, 2.59443, 10.6443, 1.44 ) }
    dend_6 { pt3dadd( -49.0204, 2.68561, 10.629, 1.44 ) }
    dend_6 { pt3dadd( -50.8509, 3.18859, 10.6831, 1.2 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 89/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -45.5772, -29.4659, 24.239, 0.96 ) }
    dend_4 { pt3dadd( -46.1749, -29.2379, 24.7569, 0.96 ) }
    dend_4 { pt3dadd( -47.0068, -28.8632, 25.4896, 0.96 ) }
    dend_4 { pt3dadd( -47.7612, -28.5056, 26.1477, 0.96 ) }
    dend_4 { pt3dadd( -49.0782, -27.8627, 27.2581, 0.6 ) }
    dend_4 { pt3dadd( -50.2937, -27.2734, 28.2363, 1.2 ) }
    dend_4 { pt3dadd( -52.3061, -26.2154, 29.8165, 0.72 ) }
    dend_4 { pt3dadd( -52.6845, -25.9712, 30.1326, 0.72 ) }
    dend_4 { pt3dadd( -52.8695, -25.8377, 30.289, 0.72 ) }
    dend_4 { pt3dadd( -53.2909, -25.4968, 30.6391, 0.72 ) }
    dend_4 { pt3dadd( -53.6206, -25.158, 30.9143, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( -54.5077, -24.0392, 31.7172, 1.2 ) }
    dend_4 { pt3dadd( -55.6745, -22.4475, 32.6355, 0.84 ) }
    dend_4 { pt3dadd( -61.873, -19.6095, 35.9219, 0.84 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 3/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -45.5772, -29.4659, 24.239, 0.84 ) }
    dend_3 { pt3dadd( -46.8722, -30.1781, 24.2163, 0.84 ) }
    dend_3 { pt3dadd( -47.8579, -30.6111, 24.1963, 0.84 ) }
    dend_3 { pt3dadd( -49.331, -31.2533, 24.1802, 0.6 ) }
    dend_3 { pt3dadd( -50.3375, -31.6592, 24.1727, 0.6 ) }
    dend_3 { pt3dadd( -51.771, -32.1744, 24.1591, 0.6 ) }
    dend_3 { pt3dadd( -53.3112, -32.6683, 24.1416, 0.6 ) }
    dend_3 { pt3dadd( -54.7575, -33.0229, 24.0813, 0.6 ) }
    dend_3 { pt3dadd( -55.9161, -33.2583, 24.0509, 0.6 ) }
    dend_3 { pt3dadd( -57.1435, -33.4669, 24.0669, 0.6 ) }
    dend_3 { pt3dadd( -57.8305, -33.5646, 24.0779, 0.6 ) }
    dend_3 { pt3dadd( -58.6543, -33.6683, 24.0939, 0.6 ) }
    dend_3 { pt3dadd( -59.1556, -33.6961, 24.0923, 1.08 ) }
    dend_3 { pt3dadd( -60.845, -33.6976, 24.0728, 0.72 ) }
    dend_3 { pt3dadd( -62.693, -33.6296, 24.0409, 0.72 ) }
    dend_3 { pt3dadd( -64.1389, -33.5818, 24.0177, 0.72 ) }
    dend_3 { pt3dadd( -64.8259, -33.5632, 24.0075, 0.72 ) }
    dend_3 { pt3dadd( -66.6082, -33.4267, 23.9653, 1.08 ) }
    dend_3 { pt3dadd( -77.5863, -36.5481, 22.3674, 1.08 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 22/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 78.4, -52.852, 1.10513, 0.72 ) }
    dend_39 { pt3dadd( 78.7409, -56.0641, 0.233571, 0.72 ) }
    dend_39 { pt3dadd( 78.9495, -58.0297, -0.299744, 1.32 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 25/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 78.4, -52.852, 1.10513, 0.96 ) }
    dend_38 { pt3dadd( 80.3266, -54.2405, 1.68931, 0.96 ) }
    dend_38 { pt3dadd( 82.2991, -55.7174, 2.40646, 0.96 ) }
    dend_38 { pt3dadd( 84.5504, -57.4698, 3.28608, 1.56 ) }
    dend_38 { pt3dadd( 87.2467, -59.5744, 4.30768, 0.84 ) }
    dend_38 { pt3dadd( 89.6674, -61.5029, 5.18351, 1.32 ) }
    dend_38 { pt3dadd( 92.7709, -64.086, 6.47034, 0.6 ) }
    dend_38 { pt3dadd( 94.5802, -65.6527, 7.32629, 1.32 ) }
    dend_38 { pt3dadd( 97.0578, -67.8225, 8.56388, 0.72 ) }
    dend_38 { pt3dadd( 99.2422, -69.7086, 9.65395, 0.72 ) }
    dend_38 { pt3dadd( 100.878, -71.0156, 10.4776, 1.68 ) }
    dend_38 { pt3dadd( 105.168, -74.0461, 12.6053, 0.72 ) }
    dend_38 { pt3dadd( 107.787, -75.5544, 13.8702, 0.72 ) }
    dend_38 { pt3dadd( 109.354, -76.2431, 14.6315, 0.72 ) }
    dend_38 { pt3dadd( 110.965, -76.6681, 15.4647, 0.72 ) }
    dend_38 { pt3dadd( 113.433, -76.9191, 16.7347, 1.08 ) }
    dend_38 { pt3dadd( 115.259, -76.8739, 17.6297, 0.48 ) }
    dend_38 { pt3dadd( 117.343, -76.483, 18.4887, 0.96 ) }
    dend_38 { pt3dadd( 119.027, -75.9781, 19.2516, 0.96 ) }
    dend_38 { pt3dadd( 121.074, -75.2252, 20.2823, 0.72 ) }
    dend_38 { pt3dadd( 123.462, -74.2223, 21.5868, 0.48 ) }
    dend_38 { pt3dadd( 133.716, -79.068, 27.0599, 0.48 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 47/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -36.0254, -130.203, -69.4973, 0.84 ) }
    dend_25 { pt3dadd( -37.56, -130.791, -68.2621, 0.84 ) }
    dend_25 { pt3dadd( -39.1965, -131.413, -67.107, 0.84 ) }
    dend_25 { pt3dadd( -42.8501, -132.932, -64.8386, 1.32 ) }
    dend_25 { pt3dadd( -45.986, -134.368, -62.9879, 0.84 ) }
    dend_25 { pt3dadd( -46.9682, -134.877, -62.4543, 0.84 ) }
    dend_25 { pt3dadd( -48.807, -135.926, -61.5094, 1.44 ) }
    dend_25 { pt3dadd( -51.3571, -137.666, -60.2713, 0.96 ) }
    dend_25 { pt3dadd( -52.8342, -138.988, -59.6699, 0.96 ) }
    dend_25 { pt3dadd( -53.7705, -140.179, -59.5219, 1.44 ) }
    dend_25 { pt3dadd( -54.8359, -142.122, -59.5764, 0.96 ) }
    dend_25 { pt3dadd( -55.1065, -142.769, -59.6208, 0.96 ) }
    dend_25 { pt3dadd( -55.789, -144.93, -59.8522, 1.44 ) }
    dend_25 { pt3dadd( -56.3339, -147.001, -60.0864, 1.08 ) }
    dend_25 { pt3dadd( -57.0303, -149.384, -60.3652, 1.44 ) }
    dend_25 { pt3dadd( -57.8476, -151.741, -60.5263, 0.84 ) }
    dend_25 { pt3dadd( -58.3721, -152.948, -60.4554, 0.84 ) }
    dend_25 { pt3dadd( -58.6832, -153.595, -60.3993, 0.84 ) }
    dend_25 { pt3dadd( -60.0974, -156.073, -60.012, 1.2 ) }
    dend_25 { pt3dadd( -60.8489, -157.124, -59.6832, 1.2 ) }
    dend_25 { pt3dadd( -63.0475, -159.274, -58.2373, 0.84 ) }
    dend_25 { pt3dadd( -64.9145, -160.439, -56.6014, 0.48 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 69/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -36.0254, -130.203, -69.4973, 0.72 ) }
    dend_24 { pt3dadd( -36.6822, -131.387, -69.4892, 0.72 ) }
    dend_24 { pt3dadd( -38.0366, -133.707, -69.711, 1.2 ) }
    dend_24 { pt3dadd( -38.84, -135.011, -69.9439, 0.84 ) }
    dend_24 { pt3dadd( -39.7528, -136.423, -70.2949, 1.32 ) }
    dend_24 { pt3dadd( -41.0399, -138.324, -70.8323, 0.72 ) }
    dend_24 { pt3dadd( -41.9359, -139.609, -71.2319, 1.32 ) }
    dend_24 { pt3dadd( -43.3978, -141.623, -71.9972, 0.84 ) }
    dend_24 { pt3dadd( -44.7299, -143.358, -72.7827, 1.32 ) }
    dend_24 { pt3dadd( -46.0542, -145.051, -73.6053, 0.84 ) }
    dend_24 { pt3dadd( -46.7471, -145.916, -74.0379, 0.84 ) }
    dend_24 { pt3dadd( -48.0491, -147.549, -74.862, 1.44 ) }
    dend_24 { pt3dadd( -48.5275, -148.178, -75.1652, 1.44 ) }
    dend_24 { pt3dadd( -49.8046, -150.039, -75.9946, 0.96 ) }
    dend_24 { pt3dadd( -51.3635, -152.572, -77.0351, 1.44 ) }
    dend_24 { pt3dadd( -52.7352, -155.004, -77.9502, 0.84 ) }
    dend_24 { pt3dadd( -53.2153, -155.901, -78.2697, 1.32 ) }
    dend_24 { pt3dadd( -54.0114, -157.399, -78.7435, 0.84 ) }
    dend_24 { pt3dadd( -55.5244, -160.104, -79.4292, 1.32 ) }
    dend_24 { pt3dadd( -56.5057, -161.802, -79.8055, 0.84 ) }
    dend_24 { pt3dadd( -57.8274, -163.964, -80.2801, 1.44 ) }
    dend_24 { pt3dadd( -58.4893, -165.019, -80.5309, 0.72 ) }
    dend_24 { pt3dadd( -59.8645, -167.187, -81.1864, 1.32 ) }
    dend_24 { pt3dadd( -61.5303, -169.683, -81.9864, 0.6 ) }
    dend_24 { pt3dadd( -63.092, -171.919, -82.7651, 1.08 ) }
    dend_24 { pt3dadd( -64.7303, -174.236, -83.6567, 0.48 ) }
    dend_24 { pt3dadd( -66.4763, -176.784, -84.7755, 1.44 ) }
    dend_24 { pt3dadd( -67.9163, -179.031, -85.9037, 0.72 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 97/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 12.856, -72.6603, -24.5174, 0.84 ) }
    dend_22 { pt3dadd( 11.3362, -74.3421, -25.08, 0.84 ) }
    dend_22 { pt3dadd( 9.80014, -75.9286, -25.7293, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_22 { pt3dadd( 8.71848, -77.0634, -26.2338, 0.72 ) }
    dend_22 { pt3dadd( 7.95397, -77.8635, -26.6139, 0.72 ) }
    dend_22 { pt3dadd( 6.45105, -79.4185, -27.4016, 0.72 ) }
    dend_22 { pt3dadd( 5.18462, -80.7318, -28.0705, 0.72 ) }
    dend_22 { pt3dadd( 4.46796, -81.4648, -28.4621, 0.72 ) }
    dend_22 { pt3dadd( 3.56253, -82.4316, -29.0227, 0.72 ) }
    dend_22 { pt3dadd( 2.54746, -83.5933, -29.661, 1.08 ) }
    dend_22 { pt3dadd( 1.59173, -84.6939, -30.2216, 1.08 ) }
    dend_22 { pt3dadd( 1.16249, -85.226, -30.4434, 1.08 ) }
    dend_22 { pt3dadd( 0.296847, -86.3345, -30.8641, 0.6 ) }
    dend_22 { pt3dadd( -0.367803, -87.1469, -31.1907, 0.6 ) }
    dend_22 { pt3dadd( -1.97289, -88.9478, -31.9216, 1.08 ) }
    dend_22 { pt3dadd( -3.21743, -90.3182, -32.5068, 1.08 ) }
    dend_22 { pt3dadd( -5.08766, -92.2386, -33.3265, 0.6 ) }
    dend_22 { pt3dadd( -6.31687, -93.4026, -33.8373, 0.6 ) }
    dend_22 { pt3dadd( -8.62672, -95.47, -34.732, 1.56 ) }
    dend_22 { pt3dadd( -10.3561, -96.9962, -35.3689, 0.84 ) }
    dend_22 { pt3dadd( -11.8158, -98.2963, -35.8801, 1.44 ) }
    dend_22 { pt3dadd( -13.7322, -100.068, -36.5133, 0.96 ) }
    dend_22 { pt3dadd( -15.2601, -101.523, -36.9909, 1.56 ) }
    dend_22 { pt3dadd( -17.0287, -103.384, -37.5292, 0.96 ) }
    dend_22 { pt3dadd( -17.873, -104.384, -37.7495, 0.96 ) }
    dend_22 { pt3dadd( -19.0421, -105.955, -38.0839, 1.56 ) }
    dend_22 { pt3dadd( -19.6577, -106.878, -38.2795, 1.56 ) }
    dend_22 { pt3dadd( -20.9392, -109.103, -38.7941, 1.08 ) }
    dend_22 { pt3dadd( -22.104, -111.298, -39.3085, 1.68 ) }
    dend_22 { pt3dadd( -23.1636, -113.435, -39.8139, 1.68 ) }
    dend_22 { pt3dadd( -24.2555, -115.817, -40.3893, 0.96 ) }
    dend_22 { pt3dadd( -25.1063, -117.921, -40.8956, 1.56 ) }
    dend_22 { pt3dadd( -25.8465, -119.866, -41.3835, 0.96 ) }
    dend_22 { pt3dadd( -26.6034, -122.083, -41.9108, 1.8 ) }
    dend_22 { pt3dadd( -27.5438, -125.082, -42.6174, 1.2 ) }
    dend_22 { pt3dadd( -28.1503, -127.247, -43.1331, 0.72 ) }
    dend_22 { pt3dadd( -28.848, -130.073, -43.7783, 1.2 ) }
    dend_22 { pt3dadd( -29.3083, -132.121, -44.2309, 0.72 ) }
    dend_22 { pt3dadd( -29.7696, -134.562, -44.7875, 0.72 ) }
    dend_22 { pt3dadd( -29.9788, -135.936, -45.1251, 0.72 ) }
    dend_22 { pt3dadd( -30.2377, -138.001, -45.6784, 1.2 ) }
    dend_22 { pt3dadd( -30.4035, -139.386, -46.0515, 0.72 ) }
    dend_22 { pt3dadd( -30.6541, -141.596, -46.6924, 1.2 ) }
    dend_22 { pt3dadd( -30.9141, -143.867, -47.3697, 0.6 ) }
    dend_22 { pt3dadd( -31.1339, -145.281, -47.7947, 1.2 ) }
    dend_22 { pt3dadd( -31.6387, -147.534, -48.3802, 0.6 ) }
    dend_22 { pt3dadd( -32.018, -148.896, -48.6863, 0.6 ) }
    dend_22 { pt3dadd( -32.6506, -150.69, -49.049, 1.32 ) }
    dend_22 { pt3dadd( -34.189, -154.443, -49.7757, 0.72 ) }
    dend_22 { pt3dadd( -35.3442, -156.962, -50.243, 1.2 ) }
    dend_22 { pt3dadd( -36.7558, -159.869, -50.7661, 0.72 ) }
    dend_22 { pt3dadd( -37.1424, -160.664, -50.9056, 0.72 ) }
    dend_22 { pt3dadd( -38.4614, -163.465, -51.4016, 1.32 ) }
    dend_22 { pt3dadd( -39.6072, -166.022, -51.8933, 0.6 ) }
    dend_22 { pt3dadd( -40.6127, -168.358, -52.3762, 1.32 ) }
    dend_22 { pt3dadd( -41.7992, -171.134, -53.0303, 0.6 ) }
    dend_22 { pt3dadd( -43.5654, -175.273, -54.1236, 0.6 ) }
    dend_22 { pt3dadd( -44.6185, -177.714, -54.803, 1.2 ) }
    dend_22 { pt3dadd( -46.7221, -182.566, -56.2055, 0.72 ) }
    dend_22 { pt3dadd( -47.4926, -184.208, -56.7084, 1.2 ) }
    dend_22 { pt3dadd( -48.8497, -186.965, -57.6255, 1.08 ) }
    dend_22 { pt3dadd( -49.9192, -189.076, -58.4009, 0.72 ) }
    dend_22 { pt3dadd( -50.8294, -190.839, -59.1289, 0.72 ) }
    dend_22 { pt3dadd( -51.7992, -192.803, -59.9478, 1.2 ) }
    dend_22 { pt3dadd( -52.7964, -194.961, -60.7872, 0.6 ) }
    dend_22 { pt3dadd( -53.8399, -197.407, -61.7074, 1.08 ) }
    dend_22 { pt3dadd( -54.5604, -199.296, -62.3132, 0.6 ) }
    dend_22 { pt3dadd( -55.1717, -201.054, -62.8188, 1.2 ) }
    dend_22 { pt3dadd( -56.3844, -204.894, -63.7923, 0.6 ) }
    dend_22 { pt3dadd( -56.8948, -206.779, -64.2218, 0.6 ) }
    dend_22 { pt3dadd( -57.147, -207.948, -64.5293, 1.2 ) }
    dend_22 { pt3dadd( -57.6829, -210.471, -65.1584, 0.72 ) }
    dend_22 { pt3dadd( -58.024, -212.165, -65.5566, 1.2 ) }
    dend_22 { pt3dadd( -58.2353, -213.358, -65.8453, 1.2 ) }
    dend_22 { pt3dadd( -58.4285, -215.359, -66.47, 1.2 ) }
    dend_22 { pt3dadd( -58.538, -219.352, -68.0385, 0.72 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 73/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 12.856, -72.6603, -24.5174, 0.72 ) }
    dend_17 { pt3dadd( 15.8979, -74.7375, -22.9043, 0.72 ) }
    dend_17 { pt3dadd( 17.6266, -75.9367, -21.8391, 0.72 ) }
    dend_17 { pt3dadd( 19.1466, -77.0927, -20.9274, 1.56 ) }
    dend_17 { pt3dadd( 20.7905, -78.4451, -19.9849, 0.96 ) }
    dend_17 { pt3dadd( 23.4742, -80.7637, -18.5649, 1.56 ) }
    dend_17 { pt3dadd( 25.6226, -82.6776, -17.5318, 1.56 ) }
    dend_17 { pt3dadd( 27.5234, -84.509, -16.7562, 0.96 ) }
    dend_17 { pt3dadd( 29.8861, -86.9665, -15.8406, 1.2 ) }
    dend_17 { pt3dadd( 31.5092, -88.8781, -15.2769, 1.2 ) }
    dend_17 { pt3dadd( 32.9924, -90.9624, -14.8568, 1.56 ) }
    dend_17 { pt3dadd( 34.163, -92.7798, -14.6606, 1.56 ) }
    dend_17 { pt3dadd( 35.3582, -94.7803, -14.5682, 0.84 ) }
    dend_17 { pt3dadd( 36.6802, -97.0971, -14.577, 1.44 ) }
    dend_17 { pt3dadd( 38.1166, -99.8273, -14.5902, 0.84 ) }
    dend_17 { pt3dadd( 39.2973, -102.354, -14.631, 1.92 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 89/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -37.0085, -4.75587, 23.6267, 0.72 ) }
    dend_13 { pt3dadd( -38.2893, -4.67195, 24.6532, 0.72 ) }
    dend_13 { pt3dadd( -40.1156, -4.76475, 25.9625, 1.2 ) }
    dend_13 { pt3dadd( -41.7588, -4.84825, 27.1406, 1.2 ) }
    dend_13 { pt3dadd( -42.9151, -4.907, 27.9695, 0.96 ) }
    dend_13 { pt3dadd( -43.9041, -4.95726, 28.6786, 0.72 ) }
    dend_13 { pt3dadd( -45.6649, -5.04672, 29.9409, 0.72 ) }
    dend_13 { pt3dadd( -47.0518, -5.21366, 30.9791, 1.2 ) }
    dend_13 { pt3dadd( -54.6641, -4.75579, 36.8538, 1.2 ) }
    dend_13 { pt3dadd( -63.4474, -5.4043, 40.7401, 1.2 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 99/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -37.0085, -4.75587, 23.6267, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_10 { pt3dadd( -36.1573, -4.59812, 24.7654, 1.08 ) }
    dend_10 { pt3dadd( -35.9378, -4.55045, 25.0942, 1.08 ) }
    dend_10 { pt3dadd( -35.2948, -4.36045, 26.0338, 0.96 ) }
    dend_10 { pt3dadd( -34.7617, -4.20344, 26.7642, 0.96 ) }
    dend_10 { pt3dadd( -33.9477, -3.97323, 27.7949, 1.44 ) }
    dend_10 { pt3dadd( -32.8031, -3.6495, 29.2444, 1.44 ) }
    dend_10 { pt3dadd( -31.9682, -3.37083, 30.2519, 0.96 ) }
    dend_10 { pt3dadd( -31.3919, -3.17248, 30.9701, 1.32 ) }
    dend_10 { pt3dadd( -30.9996, -3.0507, 31.4979, 1.32 ) }
    dend_10 { pt3dadd( -30.6357, -2.94416, 31.9796, 1.32 ) }
    dend_10 { pt3dadd( -27.2457, -1.74473, 38.3248, 1.32 ) }
    dend_10 { pt3dadd( -23.5509, -0.485445, 44.4856, 1.32 ) }
    dend_10 { pt3dadd( -19.2598, 0.0830319, 50.3554, 1.32 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 13/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -50.8509, 3.18859, 10.6831, 0.72 ) }
    dend_8 { pt3dadd( -52.0241, 3.96593, 11.4096, 0.72 ) }
    dend_8 { pt3dadd( -52.7577, 4.45195, 11.8638, 0.72 ) }
    dend_8 { pt3dadd( -53.5085, 4.94942, 12.3288, 0.72 ) }
    dend_8 { pt3dadd( -54.8099, 5.8117, 13.1346, 1.2 ) }
    dend_8 { pt3dadd( -56.6278, 7.01611, 14.2602, 0.72 ) }
    dend_8 { pt3dadd( -57.8146, 7.80243, 14.9951, 1.08 ) }
    dend_8 { pt3dadd( -64.4541, 12.0147, 20.2871, 1.08 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 21/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -50.8509, 3.18859, 10.6831, 1.08 ) }
    dend_7 { pt3dadd( -52.2924, 3.84443, 11.784, 1.08 ) }
    dend_7 { pt3dadd( -53.0831, 4.0975, 12.4085, 1.08 ) }
    dend_7 { pt3dadd( -54.8041, 4.49898, 13.7917, 1.2 ) }
    dend_7 { pt3dadd( -55.9399, 4.7475, 14.6913, 1.2 ) }
    dend_7 { pt3dadd( -56.723, 4.95557, 15.3672, 1.44 ) }
    dend_7 { pt3dadd( -57.8099, 5.28304, 16.3274, 1.08 ) }
    dend_7 { pt3dadd( -58.4146, 5.44766, 16.9279, 0.84 ) }
    dend_7 { pt3dadd( -59.0181, 5.6232, 17.5478, 0.84 ) }
    dend_7 { pt3dadd( -59.8265, 5.91453, 18.3634, 0.84 ) }
    dend_7 { pt3dadd( -61.0238, 6.49445, 19.4342, 1.2 ) }
    dend_7 { pt3dadd( -61.9942, 7.06733, 20.186, 1.2 ) }
    dend_7 { pt3dadd( -63.3377, 7.882, 21.0364, 1.08 ) }
    dend_7 { pt3dadd( -64.0194, 8.24292, 21.3992, 0.96 ) }
    dend_7 { pt3dadd( -64.9102, 8.69251, 21.83, 0.96 ) }
    dend_7 { pt3dadd( -66.519, 9.40974, 22.5066, 1.32 ) }
    dend_7 { pt3dadd( -67.2749, 9.7009, 22.7547, 1.32 ) }
    dend_7 { pt3dadd( -69.0916, 10.3788, 23.267, 1.32 ) }
    dend_7 { pt3dadd( -70.932, 11.0118, 23.6477, 0.84 ) }
    dend_7 { pt3dadd( -80.0954, 15.4599, 28.1146, 0.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 41/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 39.2973, -102.354, -14.631, 0.6 ) }
    dend_21 { pt3dadd( 41.7196, -103.209, -15.3388, 0.6 ) }
    dend_21 { pt3dadd( 43.3152, -103.772, -15.805, 0.6 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 44/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 39.2973, -102.354, -14.631, 0.6 ) }
    dend_18 { pt3dadd( 38.9793, -104.56, -14.3809, 0.6 ) }
    dend_18 { pt3dadd( 38.8756, -106.536, -14.4403, 1.08 ) }
    dend_18 { pt3dadd( 38.8939, -108.005, -14.5781, 1.08 ) }
    dend_18 { pt3dadd( 38.9544, -109.16, -14.738, 1.08 ) }
    dend_18 { pt3dadd( 39.049, -110.417, -14.9283, 1.08 ) }
    dend_18 { pt3dadd( 39.2892, -113.162, -15.2211, 0.72 ) }
    dend_18 { pt3dadd( 39.5579, -114.895, -15.3694, 1.2 ) }
    dend_18 { pt3dadd( 39.7196, -115.826, -15.4147, 1.2 ) }
    dend_18 { pt3dadd( 39.8485, -116.617, -15.413, 1.2 ) }
    dend_18 { pt3dadd( 40.0644, -118.075, -15.3331, 0.84 ) }
    dend_18 { pt3dadd( 40.4041, -120.327, -15.2066, 0.6 ) }
    dend_18 { pt3dadd( 40.8042, -123.025, -14.944, 1.32 ) }
    dend_18 { pt3dadd( 41.0226, -124.594, -14.8147, 1.32 ) }
    dend_18 { pt3dadd( 41.2445, -126.273, -14.7909, 0.72 ) }
    dend_18 { pt3dadd( 41.4075, -127.546, -14.8164, 1.2 ) }
    dend_18 { pt3dadd( 41.7981, -130.854, -15.0066, 1.2 ) }
    dend_18 { pt3dadd( 41.8841, -131.741, -15.1008, 0.72 ) }
    dend_18 { pt3dadd( 42.0436, -133.818, -15.353, 1.56 ) }
    dend_18 { pt3dadd( 42.1505, -136.517, -15.6719, 0.72 ) }
    dend_18 { pt3dadd( 42.1452, -138.664, -15.9216, 0.72 ) }
    dend_18 { pt3dadd( 42.0862, -140.363, -16.1109, 1.44 ) }
    dend_18 { pt3dadd( 41.9941, -141.751, -16.2257, 0.84 ) }
    dend_18 { pt3dadd( 41.9373, -142.801, -16.3165, 0.84 ) }
    dend_18 { pt3dadd( 41.9375, -144.312, -16.3609, 1.44 ) }
    dend_18 { pt3dadd( 42.1227, -146.772, -16.3283, 0.84 ) }
    dend_18 { pt3dadd( 42.2449, -147.872, -16.345, 0.84 ) }
    dend_18 { pt3dadd( 42.434, -149.015, -16.3527, 1.32 ) }
    dend_18 { pt3dadd( 42.6588, -149.99, -16.3233, 1.32 ) }
    dend_18 { pt3dadd( 43.5799, -153.024, -16.1275, 0.72 ) }
    dend_18 { pt3dadd( 44.1727, -154.326, -15.9271, 1.32 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 75/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -19.2598, 0.0830319, 50.3554, 0.96 ) }
    dend_12 { pt3dadd( -15.2876, 0.606409, 56.2283, 0.96 ) }
    dend_12 { pt3dadd( -12.1111, 1.82805, 62.4701, 0.96 ) }
    dend_12 { pt3dadd( -10.1364, 4.27382, 68.8467, 0.96 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 79/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -19.2598, 0.0830319, 50.3554, 0.84 ) }
    dend_11 { pt3dadd( -14.4559, 1.94712, 57.7137, 0.96 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 81/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 44.1727, -154.326, -15.9271, 0.6 ) }
    dend_20 { pt3dadd( 45.4904, -154.548, -15.8873, 0.6 ) }
    dend_20 { pt3dadd( 46.6835, -154.804, -15.7649, 0.96 ) }
    dend_20 { pt3dadd( 48.2445, -155.139, -15.6047, 0.6 ) }
    dend_20 { pt3dadd( 49.2163, -155.347, -15.505, 0.6 ) }
    dend_20 { pt3dadd( 50.7747, -155.681, -15.3451, 1.2 ) }
    dend_20 { pt3dadd( 52.6415, -156.081, -15.1535, 0.72 ) }
    dend_20 { pt3dadd( 53.9188, -156.431, -14.9361, 1.2 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 89/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 44.1727, -154.326, -15.9271, 0.48 ) }
    dend_19 { pt3dadd( 44.6569, -155.632, -15.749, 0.48 ) }
    dend_19 { pt3dadd( 45.3593, -157.507, -16.0067, 1.08 ) }
    dend_19 { pt3dadd( 46.1246, -159.536, -16.2457, 0.6 ) }
    dend_19 { pt3dadd( 46.6958, -161.142, -16.3737, 0.36 ) }
    dend_19 { pt3dadd( 47.4357, -163.181, -16.5064, 0.36 ) }
    dend_19 { pt3dadd( 48.1109, -165.011, -16.6348, 0.84 ) }
    dend_19 { pt3dadd( 49.4688, -168.648, -17.0718, 0.6 ) }
    dend_19 { pt3dadd( 50.5534, -171.46, -17.5195, 0.6 ) }
    dend_19 { pt3dadd( 51.5632, -173.982, -17.9463, 1.08 ) }
    dend_19 { pt3dadd( 52.0134, -175.048, -18.0895, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_19 { pt3dadd( 52.693, -176.546, -18.2238, 1.08 ) }
    dend_19 { pt3dadd( 53.9799, -179.079, -18.4156, 0.48 ) }
    dend_19 { pt3dadd( 55.2161, -181.205, -18.5795, 0.48 ) }
    dend_19 { pt3dadd( 55.7849, -182.092, -18.7092, 0.48 ) }
    dend_19 { pt3dadd( 56.8076, -183.577, -18.9519, 0.48 ) }
    dend_19 { pt3dadd( 57.6704, -184.808, -19.1345, 0.48 ) }
    dend_19 { pt3dadd( 59.0367, -186.624, -19.3476, 1.08 ) }
    dend_19 { pt3dadd( 59.8328, -187.575, -19.4367, 0.48 ) }
    dend_19 { pt3dadd( 61.2305, -189.173, -19.6383, 1.08 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_34, dend_27, dend_0, dend_51, dend_48, dend_42, dend_35, dend_33, dend_28, dend_14, dend_1, dend_53, dend_52, dend_50, dend_49, dend_44, dend_43, dend_41, dend_36, dend_32, dend_29, dend_26, dend_15, dend_5, dend_2, dend_46, dend_45, dend_40, dend_37, dend_31, dend_30, dend_23, dend_16, dend_9, dend_6, dend_4, dend_3, dend_39, dend_38, dend_25, dend_24, dend_22, dend_17, dend_13, dend_10, dend_8, dend_7, dend_21, dend_18, dend_12, dend_11, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_42 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_33 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_14 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_44 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_43 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_32 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_26 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_23 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_25 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_24 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_22 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_18 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_34 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_28 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_5 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_48 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_51 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_53 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_49 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_50 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_41 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_36 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_8 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_13 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_52 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_4 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_15 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_11 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_7 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_3 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_12 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_39 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_46 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_45 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_21 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_20 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_11, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_43 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_42 nseg = 3
    dend_33 nseg = 3
    dend_14 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 3
    dend_32 nseg = 3
    dend_26 nseg = 13
    dend_23 nseg = 5
    dend_38 nseg = 3
    dend_25 nseg = 3
    dend_24 nseg = 3
    dend_22 nseg = 9
    dend_17 nseg = 3
    dend_18 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L6_SBC_6dbc1eb2b9_0_0


