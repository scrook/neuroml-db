// Cell: cNAC187_L23_BP_911ebd8254_0_0
/*
{
  "id" : "cNAC187_L23_BP_911ebd8254_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -9.3824, 10.7418, 1.66", "-0.708013, -12.0722, 12.8644, 1.66", "-1.41508, -14.9755, 15.1555, 1.66", "-2.62939, -19.9614, 19.09, 1.39", "-7.45868, -39.7903, 34.7378, 1.11", "-8.30585, -43.2688, 37.4828, 1.11", "-9.37882, -47.6744, 40.9593, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 8.2471, -0.778182, 1.39", "0.628036, 14.5036, 1.82174, 0.83", "0.631641, 16.5637, 2.67782, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-9.37882, -47.6744, 40.9593, 0.83", "-10.8145, -54.1323, 38.7789, 0.83", "-11.1563, -55.67, 38.2597, 0.83", "-12.0289, -59.5951, 36.9344, 0.83", "-12.4201, -61.3546, 36.3403, 0.83", "-13.2613, -65.1387, 35.0627, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-9.37882, -47.6744, 40.9593, 0.83", "-9.3736, -49.7345, 41.2809, 0.83", "-9.36894, -51.6006, 41.5449, 0.83", "-9.43909, -54.0471, 41.8588, 0.83", "-9.50285, -59.638, 42.4352, 0.83", "-9.49574, -64.2515, 42.8449, 0.55", "-9.48339, -72.078, 43.3756, 0.55", "-9.37258, -75.9675, 43.6739, 0.83", "-9.1481, -80.4129, 44.0216, 0.55", "-8.57738, -87.6676, 44.8004, 0.55", "-8.37392, -89.7382, 45.0478, 0.55", "-7.80557, -95.352, 45.7495, 0.55", "-7.06833, -102.428, 46.8066, 0.55", "-6.63237, -106.664, 47.486, 0.55", "-6.10479, -112.306, 48.4403, 0.55", "-5.49916, -122.473, 50.2605, 0.55", "-5.32833, -127.845, 51.1999, 0.55", "-5.28444, -131.857, 51.8454, 0.55", "-5.41473, -134.646, 52.178, 0.55", "-5.65136, -137.091, 52.4193, 0.55", "-6.33079, -141.999, 53.0035, 0.55", "-6.72539, -144.456, 53.3153, 0.55", "-7.3485, -148.206, 53.9441, 0.55", "-8.20049, -153.227, 54.8669, 0.55", "-9.51559, -160.471, 56.3045, 0.55", "-10.6611, -166.99, 57.6924, 0.55", "-11.7127, -172.675, 59.0185, 0.83", "-12.7341, -178.1, 60.4694, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.631641, 16.5637, 2.67782, 0.83", "0.368838, 23.1088, -0.274284, 0.83", "0.353227, 24.8335, -0.992452, 0.83", "0.331874, 26.9474, -1.89299, 0.83", "0.341214, 28.6934, -2.58906, 0.83", "0.37188, 31.4855, -3.64665, 0.83", "0.46038, 35.1368, -4.95451, 0.83", "0.508353, 37.7324, -5.67817, 0.83", "0.582348, 40.5406, -6.50948, 0.83", "0.69097, 43.4239, -7.47447, 0.55", "0.725118, 44.337, -7.78525, 0.55", "0.759643, 45.8993, -8.32539, 0.55", "0.877333, 49.161, -9.39839, 0.55", "0.941496, 51.5274, -10.1479, 0.55", "1.14846, 57.4574, -12.0207, 0.55", "1.21142, 60.1344, -12.9741, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.631641, 16.5637, 2.67782, 0.83", "1.83175, 19.663, 3.27259, 0.83", "2.76174, 22.1041, 3.84323, 0.83", "4.19644, 25.948, 4.89837, 0.83", "5.55977, 29.6503, 5.96282, 0.83", "7.08081, 34.3274, 7.20103, 0.83", "8.18162, 37.8526, 8.0553, 0.83", "8.93393, 40.5131, 8.74685, 0.83", "9.6868, 43.4294, 9.43166, 0.83", "9.8431, 44.2211, 9.59336, 0.83", "11.4211, 53.3212, 11.0335, 0.83", "11.6643, 55.2527, 11.2466, 0.83", "11.914, 57.8775, 11.4277, 0.83", "12.0867, 60.1481, 11.5496, 0.83", "12.2311, 62.7786, 11.6705, 0.83", "12.4361, 66.1028, 11.8147, 0.83", "12.5656, 69.5225, 11.9878, 0.83", "12.671, 71.4784, 12.0746, 0.83", "12.9046, 74.5087, 12.1723, 0.83", "13.0937, 77.4854, 12.294, 0.83", "13.3244, 80.6172, 12.3689, 0.83", "13.6437, 84.7102, 12.5054, 0.83", "13.9053, 87.3841, 12.7006, 0.83", "14.0431, 88.862, 12.8553, 0.83", "14.2066, 90.5316, 13.1177, 0.83", "14.5082, 93.0016, 13.6352, 0.83", "14.9093, 96.6178, 14.6621, 0.55", "15.5369, 101.362, 16.1696, 0.55", "15.6696, 102.754, 16.6631, 0.55", "15.9306, 105.679, 17.6908, 0.55", "16.0042, 106.903, 18.1183, 0.55", "16.107, 109.196, 18.9303, 0.55", "16.205, 111.592, 19.6608, 0.55", "16.3952, 115.083, 20.4844, 0.55", "16.5122, 117.384, 20.9932, 0.55", "16.5579, 119.475, 21.4116, 0.55", "16.6723, 122.094, 21.8972, 0.55", "16.9088, 124.832, 22.2933, 0.55", "17.3518, 128.572, 22.8371, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-13.2613, -65.1387, 35.0627, 0.83", "-15.1402, -70.7932, 37.3638, 0.83", "-16.6255, -75.2683, 38.9787, 0.83", "-18.4136, -80.6594, 40.6979, 0.83", "-19.9085, -85.1104, 41.9746, 0.83", "-20.817, -87.8154, 42.7505, 0.83", "-21.9002, -91.0405, 43.6755, 0.83", "-22.6086, -93.3744, 44.1778, 0.83", "-23.4175, -96.0354, 44.6368, 0.83", "-24.4121, -99.426, 44.7276, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-13.2613, -65.1387, 35.0627, 0.55", "-14.2685, -64.8088, 42.4298, 0.55", "-15.1295, -64.3599, 50.3391, 0.55", "-15.5668, -64.1319, 54.3568, 0.55", "-16.1177, -63.8447, 59.4172, 0.28", "-16.2087, -63.7973, 60.2532, 0.83", "-16.6861, -63.5484, 64.6387, 0.28", "-16.7522, -63.4516, 65.3872, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "1.21142, 60.1344, -12.9741, 0.55", "1.77006, 63.3911, -13.2053, 0.55", "2.37337, 66.8312, -13.5406, 0.55", "2.79665, 69.2496, -13.7532, 0.55", "3.46636, 72.8781, -14.0496, 0.83", "3.94291, 75.4574, -14.2456, 0.55", "4.40998, 77.8614, -14.4157, 0.55", "4.84346, 80.1106, -14.5123, 1.11", "5.63138, 84.0145, -14.7916, 0.55", "5.86223, 85.3219, -14.9132, 0.55", "6.1482, 86.9715, -15.0855, 1.11", "6.494, 89.0189, -15.315, 0.55", "6.69528, 90.3579, -15.4682, 1.11", "7.26742, 94.4468, -15.8985, 0.55", "7.5066, 96.6042, -16.2784, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "1.21142, 60.1344, -12.9741, 0.28", "1.62864, 63.8793, -16.6602, 0.28", "1.71022, 64.4398, -17.1922, 0.55", "2.47952, 69.3958, -21.6778, 0.28", "3.3574, 74.013, -26.0768, 1.11", "3.9043, 76.4117, -28.4793, 0.28", "3.9043, 76.4117, -28.4793, 0.55", "4.81899, 79.3267, -30.7443, 0.28", "5.24715, 80.4424, -31.474, 1.11", "7.807, 85.3779, -33.122, 0.55", "10.1587, 89.2128, -33.0884, 0.28", "14.1067, 95.2029, -32.2133, 1.11", "17.59, 100.279, -30.8712, 0.28", "17.677, 100.397, -30.8116, 0.55", "20.2774, 103.731, -28.4331, 0.28", "20.5095, 104.024, -28.14, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-24.4121, -99.426, 44.7276, 0.83", "-24.4406, -104.736, 46.1803, 0.83", "-24.4271, -109.01, 47.615, 0.83", "-24.3684, -111.015, 48.2857, 0.83", "-24.3304, -112.172, 48.7649, 0.83", "-24.2851, -115.33, 50.1614, 0.83", "-24.2948, -117.19, 50.8673, 0.83", "-24.3474, -120.712, 51.8862, 0.83", "-24.2905, -123.165, 52.5795, 0.83", "-24.0329, -127.363, 53.5908, 0.83", "-23.8249, -129.527, 53.9571, 0.83", "-23.291, -134.838, 54.3667, 0.83", "-22.9049, -139.56, 54.4565, 0.83", "-22.7412, -143.443, 54.241, 0.83", "-22.7625, -146.238, 54.0367, 0.83", "-22.7781, -146.801, 53.9803, 0.83", "-22.9579, -150.023, 53.8376, 0.28", "-23.0482, -150.874, 53.8682, 0.83", "-23.4298, -153.053, 53.9219, 0.28", "-24.1672, -156.916, 53.9707, 0.28", "-24.3283, -157.745, 54.0123, 0.28", "-24.82, -160.393, 54.1601, 0.83", "-25.1947, -162.741, 54.3091, 0.28", "-25.4792, -164.627, 54.4503, 0.83", "-25.6421, -166.144, 54.5894, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-24.4121, -99.426, 44.7276, 0.55", "-29.3888, -105.788, 43.2924, 0.55", "-31.5873, -108.504, 42.7996, 0.55", "-36.321, -114.255, 41.9614, 0.55", "-38.3886, -116.709, 41.6863, 0.55", "-40.4682, -119.084, 41.5156, 0.28", "-41.3976, -120.145, 41.4393, 0.55", "-43.7095, -122.568, 41.536, 0.28", "-45.2228, -124.14, 41.6543, 0.55", "-47.0384, -125.961, 42.0212, 0.28", "-49.8971, -128.669, 42.6051, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_BP_911ebd8254_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -9.3824, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.708013, -12.0722, 12.8644, 1.66 ) }
    dend_5 { pt3dadd( -1.41508, -14.9755, 15.1555, 1.66 ) }
    dend_5 { pt3dadd( -2.62939, -19.9614, 19.09, 1.39 ) }
    dend_5 { pt3dadd( -7.45868, -39.7903, 34.7378, 1.11 ) }
    dend_5 { pt3dadd( -8.30585, -43.2688, 37.4828, 1.11 ) }
    dend_5 { pt3dadd( -9.37882, -47.6744, 40.9593, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 8.2471, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.628036, 14.5036, 1.82174, 0.83 ) }
    dend_0 { pt3dadd( 0.631641, 16.5637, 2.67782, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -9.37882, -47.6744, 40.9593, 0.83 ) }
    dend_7 { pt3dadd( -10.8145, -54.1323, 38.7789, 0.83 ) }
    dend_7 { pt3dadd( -11.1563, -55.67, 38.2597, 0.83 ) }
    dend_7 { pt3dadd( -12.0289, -59.5951, 36.9344, 0.83 ) }
    dend_7 { pt3dadd( -12.4201, -61.3546, 36.3403, 0.83 ) }
    dend_7 { pt3dadd( -13.2613, -65.1387, 35.0627, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -9.37882, -47.6744, 40.9593, 0.83 ) }
    dend_6 { pt3dadd( -9.3736, -49.7345, 41.2809, 0.83 ) }
    dend_6 { pt3dadd( -9.36894, -51.6006, 41.5449, 0.83 ) }
    dend_6 { pt3dadd( -9.43909, -54.0471, 41.8588, 0.83 ) }
    dend_6 { pt3dadd( -9.50285, -59.638, 42.4352, 0.83 ) }
    dend_6 { pt3dadd( -9.49574, -64.2515, 42.8449, 0.55 ) }
    dend_6 { pt3dadd( -9.48339, -72.078, 43.3756, 0.55 ) }
    dend_6 { pt3dadd( -9.37258, -75.9675, 43.6739, 0.83 ) }
    dend_6 { pt3dadd( -9.1481, -80.4129, 44.0216, 0.55 ) }
    dend_6 { pt3dadd( -8.57738, -87.6676, 44.8004, 0.55 ) }
    dend_6 { pt3dadd( -8.37392, -89.7382, 45.0478, 0.55 ) }
    dend_6 { pt3dadd( -7.80557, -95.352, 45.7495, 0.55 ) }
    dend_6 { pt3dadd( -7.06833, -102.428, 46.8066, 0.55 ) }
    dend_6 { pt3dadd( -6.63237, -106.664, 47.486, 0.55 ) }
    dend_6 { pt3dadd( -6.10479, -112.306, 48.4403, 0.55 ) }
    dend_6 { pt3dadd( -5.49916, -122.473, 50.2605, 0.55 ) }
    dend_6 { pt3dadd( -5.32833, -127.845, 51.1999, 0.55 ) }
    dend_6 { pt3dadd( -5.28444, -131.857, 51.8454, 0.55 ) }
    dend_6 { pt3dadd( -5.41473, -134.646, 52.178, 0.55 ) }
    dend_6 { pt3dadd( -5.65136, -137.091, 52.4193, 0.55 ) }
    dend_6 { pt3dadd( -6.33079, -141.999, 53.0035, 0.55 ) }
    dend_6 { pt3dadd( -6.72539, -144.456, 53.3153, 0.55 ) }
    dend_6 { pt3dadd( -7.3485, -148.206, 53.9441, 0.55 ) }
    dend_6 { pt3dadd( -8.20049, -153.227, 54.8669, 0.55 ) }
    dend_6 { pt3dadd( -9.51559, -160.471, 56.3045, 0.55 ) }
    dend_6 { pt3dadd( -10.6611, -166.99, 57.6924, 0.55 ) }
    dend_6 { pt3dadd( -11.7127, -172.675, 59.0185, 0.83 ) }
    dend_6 { pt3dadd( -12.7341, -178.1, 60.4694, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.631641, 16.5637, 2.67782, 0.83 ) }
    dend_2 { pt3dadd( 0.368838, 23.1088, -0.274284, 0.83 ) }
    dend_2 { pt3dadd( 0.353227, 24.8335, -0.992452, 0.83 ) }
    dend_2 { pt3dadd( 0.331874, 26.9474, -1.89299, 0.83 ) }
    dend_2 { pt3dadd( 0.341214, 28.6934, -2.58906, 0.83 ) }
    dend_2 { pt3dadd( 0.37188, 31.4855, -3.64665, 0.83 ) }
    dend_2 { pt3dadd( 0.46038, 35.1368, -4.95451, 0.83 ) }
    dend_2 { pt3dadd( 0.508353, 37.7324, -5.67817, 0.83 ) }
    dend_2 { pt3dadd( 0.582348, 40.5406, -6.50948, 0.83 ) }
    dend_2 { pt3dadd( 0.69097, 43.4239, -7.47447, 0.55 ) }
    dend_2 { pt3dadd( 0.725118, 44.337, -7.78525, 0.55 ) }
    dend_2 { pt3dadd( 0.759643, 45.8993, -8.32539, 0.55 ) }
    dend_2 { pt3dadd( 0.877333, 49.161, -9.39839, 0.55 ) }
    dend_2 { pt3dadd( 0.941496, 51.5274, -10.1479, 0.55 ) }
    dend_2 { pt3dadd( 1.14846, 57.4574, -12.0207, 0.55 ) }
    dend_2 { pt3dadd( 1.21142, 60.1344, -12.9741, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.631641, 16.5637, 2.67782, 0.83 ) }
    dend_1 { pt3dadd( 1.83175, 19.663, 3.27259, 0.83 ) }
    dend_1 { pt3dadd( 2.76174, 22.1041, 3.84323, 0.83 ) }
    dend_1 { pt3dadd( 4.19644, 25.948, 4.89837, 0.83 ) }
    dend_1 { pt3dadd( 5.55977, 29.6503, 5.96282, 0.83 ) }
    dend_1 { pt3dadd( 7.08081, 34.3274, 7.20103, 0.83 ) }
    dend_1 { pt3dadd( 8.18162, 37.8526, 8.0553, 0.83 ) }
    dend_1 { pt3dadd( 8.93393, 40.5131, 8.74685, 0.83 ) }
    dend_1 { pt3dadd( 9.6868, 43.4294, 9.43166, 0.83 ) }
    dend_1 { pt3dadd( 9.8431, 44.2211, 9.59336, 0.83 ) }
    dend_1 { pt3dadd( 11.4211, 53.3212, 11.0335, 0.83 ) }
    dend_1 { pt3dadd( 11.6643, 55.2527, 11.2466, 0.83 ) }
    dend_1 { pt3dadd( 11.914, 57.8775, 11.4277, 0.83 ) }
    dend_1 { pt3dadd( 12.0867, 60.1481, 11.5496, 0.83 ) }
    dend_1 { pt3dadd( 12.2311, 62.7786, 11.6705, 0.83 ) }
    dend_1 { pt3dadd( 12.4361, 66.1028, 11.8147, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 12.5656, 69.5225, 11.9878, 0.83 ) }
    dend_1 { pt3dadd( 12.671, 71.4784, 12.0746, 0.83 ) }
    dend_1 { pt3dadd( 12.9046, 74.5087, 12.1723, 0.83 ) }
    dend_1 { pt3dadd( 13.0937, 77.4854, 12.294, 0.83 ) }
    dend_1 { pt3dadd( 13.3244, 80.6172, 12.3689, 0.83 ) }
    dend_1 { pt3dadd( 13.6437, 84.7102, 12.5054, 0.83 ) }
    dend_1 { pt3dadd( 13.9053, 87.3841, 12.7006, 0.83 ) }
    dend_1 { pt3dadd( 14.0431, 88.862, 12.8553, 0.83 ) }
    dend_1 { pt3dadd( 14.2066, 90.5316, 13.1177, 0.83 ) }
    dend_1 { pt3dadd( 14.5082, 93.0016, 13.6352, 0.83 ) }
    dend_1 { pt3dadd( 14.9093, 96.6178, 14.6621, 0.55 ) }
    dend_1 { pt3dadd( 15.5369, 101.362, 16.1696, 0.55 ) }
    dend_1 { pt3dadd( 15.6696, 102.754, 16.6631, 0.55 ) }
    dend_1 { pt3dadd( 15.9306, 105.679, 17.6908, 0.55 ) }
    dend_1 { pt3dadd( 16.0042, 106.903, 18.1183, 0.55 ) }
    dend_1 { pt3dadd( 16.107, 109.196, 18.9303, 0.55 ) }
    dend_1 { pt3dadd( 16.205, 111.592, 19.6608, 0.55 ) }
    dend_1 { pt3dadd( 16.3952, 115.083, 20.4844, 0.55 ) }
    dend_1 { pt3dadd( 16.5122, 117.384, 20.9932, 0.55 ) }
    dend_1 { pt3dadd( 16.5579, 119.475, 21.4116, 0.55 ) }
    dend_1 { pt3dadd( 16.6723, 122.094, 21.8972, 0.55 ) }
    dend_1 { pt3dadd( 16.9088, 124.832, 22.2933, 0.55 ) }
    dend_1 { pt3dadd( 17.3518, 128.572, 22.8371, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -13.2613, -65.1387, 35.0627, 0.83 ) }
    dend_9 { pt3dadd( -15.1402, -70.7932, 37.3638, 0.83 ) }
    dend_9 { pt3dadd( -16.6255, -75.2683, 38.9787, 0.83 ) }
    dend_9 { pt3dadd( -18.4136, -80.6594, 40.6979, 0.83 ) }
    dend_9 { pt3dadd( -19.9085, -85.1104, 41.9746, 0.83 ) }
    dend_9 { pt3dadd( -20.817, -87.8154, 42.7505, 0.83 ) }
    dend_9 { pt3dadd( -21.9002, -91.0405, 43.6755, 0.83 ) }
    dend_9 { pt3dadd( -22.6086, -93.3744, 44.1778, 0.83 ) }
    dend_9 { pt3dadd( -23.4175, -96.0354, 44.6368, 0.83 ) }
    dend_9 { pt3dadd( -24.4121, -99.426, 44.7276, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -13.2613, -65.1387, 35.0627, 0.55 ) }
    dend_8 { pt3dadd( -14.2685, -64.8088, 42.4298, 0.55 ) }
    dend_8 { pt3dadd( -15.1295, -64.3599, 50.3391, 0.55 ) }
    dend_8 { pt3dadd( -15.5668, -64.1319, 54.3568, 0.55 ) }
    dend_8 { pt3dadd( -16.1177, -63.8447, 59.4172, 0.28 ) }
    dend_8 { pt3dadd( -16.2087, -63.7973, 60.2532, 0.83 ) }
    dend_8 { pt3dadd( -16.6861, -63.5484, 64.6387, 0.28 ) }
    dend_8 { pt3dadd( -16.7522, -63.4516, 65.3872, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 1.21142, 60.1344, -12.9741, 0.55 ) }
    dend_4 { pt3dadd( 1.77006, 63.3911, -13.2053, 0.55 ) }
    dend_4 { pt3dadd( 2.37337, 66.8312, -13.5406, 0.55 ) }
    dend_4 { pt3dadd( 2.79665, 69.2496, -13.7532, 0.55 ) }
    dend_4 { pt3dadd( 3.46636, 72.8781, -14.0496, 0.83 ) }
    dend_4 { pt3dadd( 3.94291, 75.4574, -14.2456, 0.55 ) }
    dend_4 { pt3dadd( 4.40998, 77.8614, -14.4157, 0.55 ) }
    dend_4 { pt3dadd( 4.84346, 80.1106, -14.5123, 1.11 ) }
    dend_4 { pt3dadd( 5.63138, 84.0145, -14.7916, 0.55 ) }
    dend_4 { pt3dadd( 5.86223, 85.3219, -14.9132, 0.55 ) }
    dend_4 { pt3dadd( 6.1482, 86.9715, -15.0855, 1.11 ) }
    dend_4 { pt3dadd( 6.494, 89.0189, -15.315, 0.55 ) }
    dend_4 { pt3dadd( 6.69528, 90.3579, -15.4682, 1.11 ) }
    dend_4 { pt3dadd( 7.26742, 94.4468, -15.8985, 0.55 ) }
    dend_4 { pt3dadd( 7.5066, 96.6042, -16.2784, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 1.21142, 60.1344, -12.9741, 0.28 ) }
    dend_3 { pt3dadd( 1.62864, 63.8793, -16.6602, 0.28 ) }
    dend_3 { pt3dadd( 1.71022, 64.4398, -17.1922, 0.55 ) }
    dend_3 { pt3dadd( 2.47952, 69.3958, -21.6778, 0.28 ) }
    dend_3 { pt3dadd( 3.3574, 74.013, -26.0768, 1.11 ) }
    dend_3 { pt3dadd( 3.9043, 76.4117, -28.4793, 0.28 ) }
    dend_3 { pt3dadd( 3.9043, 76.4117, -28.4793, 0.55 ) }
    dend_3 { pt3dadd( 4.81899, 79.3267, -30.7443, 0.28 ) }
    dend_3 { pt3dadd( 5.24715, 80.4424, -31.474, 1.11 ) }
    dend_3 { pt3dadd( 7.807, 85.3779, -33.122, 0.55 ) }
    dend_3 { pt3dadd( 10.1587, 89.2128, -33.0884, 0.28 ) }
    dend_3 { pt3dadd( 14.1067, 95.2029, -32.2133, 1.11 ) }
    dend_3 { pt3dadd( 17.59, 100.279, -30.8712, 0.28 ) }
    dend_3 { pt3dadd( 17.677, 100.397, -30.8116, 0.55 ) }
    dend_3 { pt3dadd( 20.2774, 103.731, -28.4331, 0.28 ) }
    dend_3 { pt3dadd( 20.5095, 104.024, -28.14, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -24.4121, -99.426, 44.7276, 0.83 ) }
    dend_11 { pt3dadd( -24.4406, -104.736, 46.1803, 0.83 ) }
    dend_11 { pt3dadd( -24.4271, -109.01, 47.615, 0.83 ) }
    dend_11 { pt3dadd( -24.3684, -111.015, 48.2857, 0.83 ) }
    dend_11 { pt3dadd( -24.3304, -112.172, 48.7649, 0.83 ) }
    dend_11 { pt3dadd( -24.2851, -115.33, 50.1614, 0.83 ) }
    dend_11 { pt3dadd( -24.2948, -117.19, 50.8673, 0.83 ) }
    dend_11 { pt3dadd( -24.3474, -120.712, 51.8862, 0.83 ) }
    dend_11 { pt3dadd( -24.2905, -123.165, 52.5795, 0.83 ) }
    dend_11 { pt3dadd( -24.0329, -127.363, 53.5908, 0.83 ) }
    dend_11 { pt3dadd( -23.8249, -129.527, 53.9571, 0.83 ) }
    dend_11 { pt3dadd( -23.291, -134.838, 54.3667, 0.83 ) }
    dend_11 { pt3dadd( -22.9049, -139.56, 54.4565, 0.83 ) }
    dend_11 { pt3dadd( -22.7412, -143.443, 54.241, 0.83 ) }
    dend_11 { pt3dadd( -22.7625, -146.238, 54.0367, 0.83 ) }
    dend_11 { pt3dadd( -22.7781, -146.801, 53.9803, 0.83 ) }
    dend_11 { pt3dadd( -22.9579, -150.023, 53.8376, 0.28 ) }
    dend_11 { pt3dadd( -23.0482, -150.874, 53.8682, 0.83 ) }
    dend_11 { pt3dadd( -23.4298, -153.053, 53.9219, 0.28 ) }
    dend_11 { pt3dadd( -24.1672, -156.916, 53.9707, 0.28 ) }
    dend_11 { pt3dadd( -24.3283, -157.745, 54.0123, 0.28 ) }
    dend_11 { pt3dadd( -24.82, -160.393, 54.1601, 0.83 ) }
    dend_11 { pt3dadd( -25.1947, -162.741, 54.3091, 0.28 ) }
    dend_11 { pt3dadd( -25.4792, -164.627, 54.4503, 0.83 ) }
    dend_11 { pt3dadd( -25.6421, -166.144, 54.5894, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -24.4121, -99.426, 44.7276, 0.55 ) }
    dend_10 { pt3dadd( -29.3888, -105.788, 43.2924, 0.55 ) }
    dend_10 { pt3dadd( -31.5873, -108.504, 42.7996, 0.55 ) }
    dend_10 { pt3dadd( -36.321, -114.255, 41.9614, 0.55 ) }
    dend_10 { pt3dadd( -38.3886, -116.709, 41.6863, 0.55 ) }
    dend_10 { pt3dadd( -40.4682, -119.084, 41.5156, 0.28 ) }
    dend_10 { pt3dadd( -41.3976, -120.145, 41.4393, 0.55 ) }
    dend_10 { pt3dadd( -43.7095, -122.568, 41.536, 0.28 ) }
    dend_10 { pt3dadd( -45.2228, -124.14, 41.6543, 0.55 ) }
    dend_10 { pt3dadd( -47.0384, -125.961, 42.0212, 0.28 ) }
    dend_10 { pt3dadd( -49.8971, -128.669, 42.6051, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_5 nseg = 3
    dend_6 nseg = 7
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_3 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_BP_911ebd8254_0_0


