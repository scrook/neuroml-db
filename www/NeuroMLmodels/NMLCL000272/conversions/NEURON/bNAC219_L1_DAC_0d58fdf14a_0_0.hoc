// Cell: bNAC219_L1_DAC_0d58fdf14a_0_0
/*
{
  "id" : "bNAC219_L1_DAC_0d58fdf14a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.13528, -1.16888, 0.0, 4.15795", "-6.42457, -1.07374, 0.0, 7.84613", "-5.71387, -0.978592, 0.0, 9.14199", "-5.00317, -0.883447, 0.0, 9.83423", "-4.29246, -0.788301, 0.0, 10.5043", "-3.58176, -0.693156, 0.0, 11.2615", "-2.87105, -0.598011, 0.0, 11.8079", "-2.16035, -0.502865, 0.0, 12.0209", "-1.44965, -0.40772, 0.0, 12.1436", "-0.738941, -0.312575, 0.0, 12.1855", "-0.0282374, -0.217429, 0.0, 12.0178", "0.682467, -0.122284, 0.0, 11.8284", "1.39317, -0.0271384, 0.0, 11.3574", "2.10387, 0.068007, 0.0, 10.5983", "2.81458, 0.163152, 0.0, 9.98907", "3.52528, 0.258298, 0.0, 9.19047", "4.23599, 0.353443, 0.0, 8.37922", "4.94669, 0.448588, 0.0, 7.41071", "5.65739, 0.543734, 0.0, 6.60365", "6.3681, 0.638879, 0.0, 5.85286", "7.0788, 0.734025, 0.0, 3.31328" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "7.49967, -0.390862, 0.05, 2.32", "11.7986, -1.55442, -0.565287, 2.32", "13.4774, -2.0088, -0.805566, 2.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000186524988
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "9.51967, -0.0583625, 8.55, 1.59", "11.0377, 0.460914, 9.12667, 1.59", "11.9741, 0.78121, 9.48237, 1.35", "12.6909, 1.02641, 9.75467, 1.35", "14.3352, 1.58886, 10.3793, 1.35", "15.4018, 1.9537, 10.7845, 1.35" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000186524988
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "5.99967, 2.65863, 12.2, 0.98", "7.778, 3.82392, 12.8607, 0.98", "9.58089, 5.32692, 13.6469, 0.98", "11.6895, 7.08477, 14.5665, 0.98", "13.3714, 8.48689, 15.2999, 0.98", "15.0398, 9.87782, 16.0275, 0.98", "16.5279, 11.1184, 16.6765, 0.98", "17.4525, 12.2067, 17.2977, 0.98" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000186524988
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-3.91033, 1.43313, 9.35, 1.71", "-5.90116, 3.34624, 9.35, 1.71", "-7.58722, 4.96646, 9.35, 1.71", "-8.58802, 5.92819, 9.35, 1.71" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000186524988
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-0.96033, -4.93187, -6.55, 2.2", "-1.11833, -8.40295, -6.55, 2.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000186524988
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.43033, -4.00087, -1.25, 0.98", "-8.90676, -4.20515, -1.67407, 0.98", "-10.3578, -4.42981, -1.91633, 0.98", "-11.1972, -4.61008, -2.05196, 0.86", "-12.9958, -5.05861, -2.37435, 0.86", "-14.6913, -5.48691, -2.69191, 0.86", "-16.5718, -5.92143, -3.04459, 1.22", "-18.0109, -6.24119, -3.32951, 1.22", "-19.5771, -6.61594, -3.63862, 0.98", "-20.9395, -6.95859, -3.89144, 0.86", "-22.2812, -7.27495, -4.10014, 0.73", "-23.7514, -7.51674, -4.31559, 0.73", "-24.7018, -7.60217, -4.43268, 0.61", "-25.5714, -7.63328, -4.51863, 0.61", "-27.0785, -7.60375, -4.70744, 0.61", "-28.5499, -7.58758, -4.94857, 1.1", "-29.9121, -7.63244, -5.23549, 0.86", "-31.354, -7.73926, -5.59301, 0.73", "-32.3292, -7.84766, -5.86673, 0.61", "-34.3936, -8.12181, -6.51075, 0.61", "-35.9102, -8.37636, -7.05008, 0.61", "-37.0612, -8.59753, -7.55503, 0.61", "-37.8822, -8.7708, -7.98049, 0.61", "-38.7568, -8.93634, -8.4078, 0.61", "-39.5499, -9.0597, -8.75665, 0.61", "-40.3617, -9.12302, -9.09567, 0.49", "-42.0268, -9.13182, -9.79931, 0.49", "-43.6773, -9.13037, -10.4978, 0.49", "-45.2929, -9.15349, -11.2564, 0.61", "-47.2498, -9.20702, -12.1904, 1.1", "-49.7063, -9.35196, -13.3278, 1.1", "-50.5629, -9.42889, -13.7121, 1.1", "-51.897, -9.59535, -14.2791, 1.1", "-54.6779, -10.047, -15.5322, 0.98", "-55.7375, -10.3004, -16.0459, 0.86", "-57.0295, -10.7614, -16.6127, 0.73", "-57.201, -10.8427, -16.6795, 0.73", "-57.7048, -11.1009, -16.8603, 0.73", "-59.3462, -11.9396, -17.3823, 0.98", "-60.7062, -12.7155, -17.7336, 0.86", "-62.1079, -13.5968, -18.0953, 0.73", "-63.4586, -14.4658, -18.4349, 0.73", "-64.5716, -15.1381, -18.6778, 0.73", "-66.3914, -16.1807, -19.0086, 0.73", "-67.3276, -16.7058, -19.1255, 0.61", "-69.0645, -17.6423, -19.3408, 0.61", "-69.4963, -17.8694, -19.4015, 0.61", "-71.0187, -18.6678, -19.6311, 0.61", "-71.8515, -19.1306, -19.7641, 0.61", "-73.7104, -20.2036, -20.0618, 0.61", "-75.5092, -21.207, -20.3897, 0.49", "-77.5263, -22.3789, -20.7949, 0.49", "-79.0193, -23.3213, -21.1222, 0.49", "-80.4872, -24.2904, -21.5258, 0.49", "-82.1768, -25.418, -22.1043, 0.49", "-83.5608, -26.3778, -22.6519, 0.49", "-85.1341, -27.5175, -23.3917, 0.49", "-85.9087, -28.0696, -23.7916, 0.49", "-87.3658, -29.0707, -24.6083, 0.49", "-89.2108, -30.2625, -25.6914, 0.49", "-90.2106, -30.9, -26.3136, 0.49", "-92.1153, -32.0578, -27.4337, 0.49", "-93.6083, -32.8816, -28.2284, 0.49", "-94.5109, -33.3402, -28.6236, 0.49", "-95.8955, -34.0202, -29.0818, 0.49", "-98.0682, -35.0327, -29.6229, 0.49", "-100.152, -35.9568, -30.0075, 0.49", "-101.427, -36.551, -30.1799, 0.49", "-103.531, -37.5399, -30.4178, 0.49", "-105.848, -38.6377, -30.6144, 0.49", "-108.087, -39.6575, -30.7729, 0.49", "-110.352, -40.644, -30.9553, 0.49", "-112.321, -41.4106, -31.1979, 0.49", "-114.454, -42.2335, -31.4969, 0.49", "-117.264, -43.2695, -31.9637, 0.49", "-119.001, -43.8386, -32.3112, 0.49", "-120.644, -44.2988, -32.7098, 0.49", "-123.416, -44.8861, -33.5102, 0.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000186524988,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.23033, 3.13363, -0.9, 1.47", "-7.55721, 4.22153, -1.05988, 1.47", "-8.88672, 5.27476, -1.38972, 1.47", "-9.6635, 5.87702, -1.60977, 1.47", "-11.6768, 7.3816, -2.24098, 1.47", "-12.8364, 8.19599, -2.65548, 1.47", "-14.2717, 9.16749, -3.20001, 1.35", "-16.1839, 10.3359, -3.99139, 1.22", "-17.5789, 11.142, -4.63019, 1.22", "-18.743, 11.8166, -5.20754, 1.1", "-20.2177, 12.7041, -6.0186, 1.1", "-20.9225, 13.1442, -6.43205, 0.86", "-21.9374, 13.7795, -7.03424, 0.73", "-22.7061, 14.2882, -7.4885, 0.73", "-24.1784, 15.3571, -8.48537, 0.73", "-24.925, 16.0167, -9.03058, 0.73", "-25.3893, 16.5569, -9.41322, 0.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000186524988
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.0788, 0.734025, 0.0, 0.490201", "21.9462, 2.72439, 0.0, 0.490201", "36.8135, 4.71475, 0.0, 0.490201" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "13.4774, -2.0088, -0.805566, 0.98", "12.3334, -1.8464, -11.2598, 0.98" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "15.4018, 1.9537, 10.7845, 1.1", "18.0245, 3.68363, 10.8716, 1.1", "19.2835, 4.481, 10.915, 0.98", "21.1685, 5.68282, 10.973, 0.49", "22.2914, 6.4345, 11.0892, 0.49", "22.9404, 6.89685, 11.1819, 0.49", "24.3119, 7.94371, 11.3486, 0.49", "26.1191, 9.53027, 11.5844, 0.61", "27.5471, 10.9025, 11.7721, 0.61", "29.6392, 13.0109, 12.04, 0.61", "30.9725, 14.3865, 12.1982, 0.61", "32.8619, 16.5154, 12.3726, 0.61", "33.5909, 17.4726, 12.4243, 0.37", "34.2783, 18.538, 12.4479, 0.37", "34.8984, 19.5701, 12.4323, 0.37", "35.4921, 20.6031, 12.3534, 0.37", "36.4283, 22.1263, 12.2137, 0.37", "37.1283, 23.1458, 12.099, 0.37", "37.9757, 24.2542, 11.9208, 0.37", "38.959, 25.3849, 11.6942, 0.37", "39.5944, 26.0516, 11.5507, 0.37", "41.1679, 27.6008, 11.1863, 0.37", "42.8407, 29.1324, 10.8313, 0.37", "43.4165, 29.6504, 10.6952, 0.37", "45.0629, 31.1467, 10.4006, 0.37", "46.1652, 32.2041, 10.1963, 0.37", "47.3476, 33.3452, 9.94228, 0.37", "48.7574, 34.7541, 9.5575, 0.37", "50.5109, 36.5653, 8.98971, 0.37", "52.3607, 38.5714, 8.31034, 0.37", "54.1263, 40.6362, 7.53103, 0.37", "55.3529, 42.1981, 6.90574, 0.37", "56.5809, 43.8542, 6.21467, 0.37", "57.542, 45.2291, 5.68573, 0.37", "58.5216, 46.5987, 5.22538, 0.37", "59.5958, 48.1313, 4.70272, 0.37", "60.9469, 50.0503, 4.1457, 0.37", "62.9886, 52.8238, 3.39536, 0.37", "64.6493, 54.9084, 2.87444, 0.37", "66.3483, 56.8296, 2.30952, 0.37", "68.434, 59.0601, 1.62887, 0.37", "70.0282, 60.64, 1.15255, 0.37", "71.204, 61.6944, 0.795481, 0.37", "72.3918, 62.6874, 0.389192, 0.37", "74.2645, 64.1465, -0.494497, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "15.4018, 1.9537, 10.7845, 1.22", "16.4301, 0.929608, 13.6757, 1.22", "17.6722, -0.323397, 16.5872, 0.98", "18.2225, -0.90769, 17.7817, 0.98", "18.7777, -1.49727, 18.9869, 0.98", "19.1365, -1.87816, 19.7656, 0.98", "19.7288, -2.50715, 21.0514, 0.98", "20.3495, -3.23604, 21.978, 0.98", "20.6354, -3.52306, 22.2661, 0.98" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "17.4525, 12.2067, 17.2977, 0.61", "19.3432, 11.1252, 21.2356, 0.61", "19.7959, 10.7688, 22.1691, 0.61", "20.5432, 9.89811, 24.0421, 0.61", "20.7462, 9.58488, 24.6012, 0.61", "21.2274, 8.72224, 25.9023, 0.61", "21.9392, 7.2358, 27.7978, 0.61", "22.287, 6.32338, 28.6919, 0.61", "22.8649, 4.86236, 30.045, 0.61", "23.2697, 4.02945, 30.9055, 0.61", "23.947, 3.15027, 32.1921, 0.61", "25.0576, 2.01041, 34.5316, 0.61", "26.021, 1.1509, 36.6686, 0.49", "26.457, 0.842344, 37.698, 0.98", "28.1162, 0.0452681, 41.8589, 0.98", "30.2013, -0.433239, 47.599, 0.98", "31.6565, -0.195602, 52.2501, 0.73", "32.4202, 0.249046, 54.7732, 0.73", "33.3286, 1.19242, 58.0385, 0.73", "34.0249, 2.26314, 60.7568, 0.73", "34.5258, 3.48665, 62.9431, 0.73", "35.7439, 7.71998, 68.8171, 0.61", "36.237, 9.85164, 71.4117, 0.61", "36.6013, 12.2735, 74.2265, 0.61", "36.7224, 13.5075, 75.667, 0.61", "36.8043, 15.5282, 78.0856, 0.61", "36.6529, 17.8794, 81.0549, 0.61", "36.1883, 20.398, 84.3588, 0.61", "35.5277, 23.1066, 88.0894, 0.61", "35.0455, 24.8753, 90.6254, 0.61", "34.4695, 26.7851, 93.4807, 0.61", "33.308, 29.9868, 98.5808, 0.61", "32.7189, 31.2755, 100.819, 0.49" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "17.4525, 12.2067, 17.2977, 0.73", "19.0986, 13.7201, 18.2034, 0.73", "19.8571, 14.4847, 18.6645, 0.61", "21.6173, 16.4219, 19.8622, 0.49", "22.9595, 17.8767, 20.748, 0.49", "23.747, 18.7498, 21.2691, 0.49", "24.8858, 20.0636, 22.0124, 0.49", "26.0389, 21.4069, 22.596, 0.49", "26.8025, 22.3536, 22.9273, 0.49", "28.0739, 24.0272, 23.3357, 0.49", "29.1769, 25.4703, 23.6246, 0.49", "30.1885, 26.8137, 23.8848, 0.49", "31.5109, 28.5927, 24.1555, 0.49", "32.0913, 29.4033, 24.2496, 0.49", "32.7832, 30.4737, 24.3927, 0.37", "33.5016, 31.7296, 24.6089, 0.37", "34.4861, 33.466, 24.7754, 0.37", "35.0656, 34.458, 24.8231, 0.37", "35.7257, 35.4862, 24.8933, 0.37", "36.5653, 36.6157, 24.9106, 0.37", "37.7107, 37.9361, 24.8746, 0.37", "40.0552, 40.0878, 24.701, 0.37", "41.6813, 41.3289, 24.6238, 0.37", "43.7999, 42.7362, 24.5009, 0.37", "45.3525, 43.6013, 24.4058, 0.37", "47.1515, 44.4748, 24.2998, 0.37", "49.1017, 45.3151, 24.2388, 0.37", "51.2257, 46.1078, 24.2523, 0.37", "53.8176, 46.9408, 24.1742, 0.37", "55.3319, 47.3799, 24.0662, 0.37", "56.9105, 47.7728, 23.9464, 0.37", "58.7599, 48.1368, 23.7871, 0.37", "60.674, 48.4473, 23.6278, 0.37", "63.8692, 48.862, 23.379, 0.37", "65.2637, 49.0158, 23.3147, 0.37", "67.6669, 49.2581, 23.2505, 0.37", "71.8658, 49.562, 23.1859, 0.37", "72.715, 49.6061, 23.1788, 0.37", "74.6836, 49.6762, 23.1779, 0.37", "76.0709, 49.7162, 23.1982, 0.37", "79.1211, 49.8495, 23.2288, 0.37", "80.8294, 49.9519, 23.3061, 0.37", "82.6562, 50.0583, 23.4831, 0.37", "84.9265, 50.1811, 23.6745, 0.37", "86.942, 50.3016, 23.7849, 0.37", "89.5364, 50.4714, 23.9455, 0.37", "91.9665, 50.6544, 24.1483, 0.37", "93.76, 50.8942, 24.3853, 0.37", "96.3586, 51.341, 24.8454, 0.37", "98.3096, 51.7726, 25.2772, 0.37", "101.04, 52.4051, 25.9696, 0.37", "104.069, 53.2098, 26.8143, 0.37", "108.492, 54.5783, 28.0781, 0.37", "110.45, 55.2507, 28.7141, 0.37", "114.787, 56.8762, 30.419, 0.37", "118.088, 58.155, 31.8799, 0.37", "120.718, 59.1799, 33.0477, 0.37", "124.215, 60.4351, 34.6654, 0.37", "126.604, 61.123, 35.8315, 0.37", "129.18, 61.6837, 37.1141, 0.37", "132.604, 62.0471, 38.8799, 0.37", "135.717, 62.0069, 40.4853, 0.37", "137.713, 61.768, 41.5045, 0.37", "140.203, 61.1667, 42.7165, 0.37", "141.869, 60.5931, 43.4315, 0.37", "143.415, 59.879, 43.9859, 0.37", "144.827, 59.0025, 44.4758, 0.37" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-8.58802, 5.92819, 9.35, 0.86", "-9.86169, 7.60227, 8.76654, 0.86", "-10.6827, 8.57063, 8.23917, 0.86", "-11.5569, 9.53956, 7.6395, 0.86", "-11.9438, 9.95512, 7.31602, 0.86", "-13.2386, 11.3055, 6.01679, 0.86", "-14.2798, 12.3402, 4.83873, 0.86", "-14.9786, 13.0208, 3.80701, 0.86", "-15.3139, 13.3384, 3.24082, 0.86", "-16.3049, 14.2306, 1.5122, 0.86", "-17.2496, 14.9978, -0.0269165, 0.73", "-18.3884, 15.82, -1.69981, 0.73", "-19.4737, 16.5997, -3.19865, 0.73", "-20.472, 17.2902, -4.46869, 0.73", "-20.9923, 17.6329, -5.06263, 0.73", "-21.8114, 18.1701, -5.83155, 0.73", "-22.392, 18.5831, -6.30014, 0.73", "-23.0153, 19.0913, -6.73623, 0.73", "-23.8402, 19.852, -7.25603, 0.73", "-24.6071, 20.6989, -7.83232, 0.73", "-25.1197, 21.3308, -8.29295, 0.73", "-25.7498, 22.1713, -8.91778, 0.73", "-26.4922, 23.1839, -9.6812, 0.73", "-27.0726, 23.9691, -10.2366, 0.73", "-27.8756, 25.0592, -10.9187, 0.73", "-28.4029, 25.7794, -11.3147, 0.73", "-29.0616, 26.6856, -11.7665, 0.73", "-29.6429, 27.5549, -12.1202, 0.73", "-30.488, 28.9655, -12.588, 0.73", "-31.0289, 29.9907, -12.8623, 0.73", "-31.4755, 31.0175, -13.083, 0.73", "-31.7242, 31.7988, -13.2512, 0.73", "-32.0382, 33.4675, -13.5261, 0.73", "-32.0861, 34.1146, -13.5824, 0.73", "-32.0496, 35.0519, -13.6741, 0.73", "-31.7985, 37.002, -13.8903, 0.73", "-31.5106, 38.358, -14.0599, 0.73", "-30.9636, 40.324, -14.3355, 0.86", "-30.514, 41.7236, -14.5452, 0.86", "-29.8119, 44.0049, -14.8868, 0.86", "-29.554, 45.0302, -15.0756, 0.86", "-29.4294, 45.7988, -15.2566, 0.86", "-29.3205, 46.9762, -15.6035, 0.86", "-29.3125, 47.7546, -15.9133, 0.61", "-29.4028, 48.9136, -16.4093, 0.37", "-29.7615, 50.7139, -16.9677, 0.37", "-29.9661, 51.3848, -17.1824, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-8.58802, 5.92819, 9.35, 1.47", "-9.83569, 5.69376, 10.795, 1.47", "-12.1173, 5.26509, 13.4373, 1.47", "-13.8505, 4.93944, 15.4446, 1.47", "-15.731, 4.58613, 17.6224, 1.47" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.11833, -8.40295, -6.55, 0.86", "-0.485771, -5.02985, -9.67149, 0.86", "-0.238284, -4.03638, -10.5904, 0.86", "0.035685, -2.82947, -11.7008, 0.86", "0.321982, -1.13002, -13.2206, 0.86", "0.432485, 0.123387, -14.3779, 0.86", "0.449448, 2.11094, -16.2399, 0.73", "0.418658, 3.11267, -17.1419, 0.73", "0.430637, 3.85469, -17.9174, 0.73", "0.454392, 4.75226, -18.938, 0.73", "0.416464, 6.05716, -20.4092, 0.73", "0.36589, 6.88282, -21.3145, 0.73", "0.254991, 8.46015, -22.8987, 0.73", "0.217435, 10.1669, -24.4718, 0.73", "0.326588, 12.1384, -26.1289, 0.73", "0.401598, 12.9503, -26.7362, 0.73", "0.615576, 14.7144, -27.8698, 0.73", "0.744341, 15.9488, -28.6112, 0.73", "0.82725, 17.0751, -29.2525, 0.73", "0.931873, 18.4109, -29.9676, 0.73", "1.09114, 19.6584, -30.6875, 0.73", "1.38565, 21.5673, -31.9752, 0.73", "1.5556, 22.9846, -32.9362, 0.73", "1.6799, 24.8291, -34.2004, 0.73", "1.6728, 26.0426, -35.0197, 0.61", "1.65582, 28.0286, -36.4345, 0.61", "1.74189, 29.8567, -37.8906, 0.61", "1.95482, 32.0665, -39.8294, 0.61", "2.11034, 32.5561, -40.3369, 0.61", "2.77082, 32.6731, -40.9962, 0.61", "5.65315, 31.6785, -42.6231, 0.61", "8.39615, 30.3381, -43.7307, 0.61", "9.87679, 29.467, -44.2456, 0.61", "12.048, 28.0263, -44.8172, 0.61", "12.5022, 27.6894, -44.8686, 0.61", "13.5525, 26.8415, -44.8307, 0.61", "15.0818, 25.5407, -44.4595, 0.61", "16.4572, 24.5171, -43.9299, 0.61", "18.3565, 23.3042, -42.9761, 0.61", "20.1189, 22.4006, -41.9848, 0.61", "20.8988, 22.1526, -41.5429, 0.37", "21.9103, 21.9921, -40.9745, 0.37", "23.1349, 21.9427, -40.3027, 0.37", "24.3687, 21.968, -39.6589, 0.37", "25.5961, 22.0723, -39.0894, 0.37", "28.5167, 22.5365, -37.8534, 0.37", "30.1107, 22.7929, -37.1752, 0.37", "31.1401, 22.9711, -36.7369, 0.37", "32.1676, 23.1645, -36.303, 0.37", "34.5329, 23.6432, -35.343, 0.37", "36.4077, 24.114, -34.5276, 0.37" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-1.11833, -8.40295, -6.55, 1.59", "-2.23766, -11.196, -5.90119, 1.59", "-2.84698, -12.9373, -5.60678, 1.59", "-3.3809, -14.4631, -5.3488, 1.59", "-4.41419, -17.4159, -4.84954, 1.59", "-4.93992, -18.9183, -4.59552, 1.59", "-5.4431, -20.3562, -4.3524, 1.59", "-6.13967, -22.1986, -3.71694, 1.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-25.3893, 16.5569, -9.41322, 0.49", "-26.581, 17.663, -9.43164, 0.49", "-27.538, 18.5859, -9.48176, 0.49", "-28.2385, 19.2476, -9.53044, 0.49", "-29.2747, 20.1198, -9.60778, 0.49", "-30.351, 20.9586, -9.68829, 0.49", "-31.2509, 21.6316, -9.79232, 0.49", "-32.225, 22.2904, -9.95162, 0.49", "-32.6576, 22.5768, -10.0435, 0.49", "-34.0527, 23.4466, -10.3865, 0.49", "-34.6888, 23.8175, -10.5155, 0.49", "-35.7684, 24.4317, -10.6305, 0.49", "-36.6176, 24.9464, -10.6739, 0.49", "-37.2593, 25.3851, -10.6698, 0.49", "-38.2788, 26.2154, -10.595, 0.49", "-39.3944, 27.3357, -10.3762, 0.49", "-40.1182, 28.1639, -10.1572, 0.49", "-40.8297, 29.0577, -9.87513, 0.49", "-41.3136, 29.7546, -9.65692, 0.49", "-41.6603, 30.3704, -9.50564, 0.49", "-42.1142, 31.382, -9.34471, 0.49", "-42.652, 32.7462, -9.2731, 0.49", "-42.963, 33.6569, -9.27808, 0.49", "-43.2006, 34.4211, -9.33894, 0.49", "-43.6944, 36.1025, -9.53797, 0.49", "-43.9563, 37.0202, -9.70033, 0.49", "-44.1001, 37.5764, -9.84162, 0.49", "-44.2994, 38.5896, -10.1524, 0.49", "-44.4765, 39.6064, -10.5145, 0.49" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-25.3893, 16.5569, -9.41322, 0.73", "-26.9869, 17.0062, -10.0661, 0.73", "-29.8854, 17.8977, -11.2672, 0.73", "-31.1142, 18.2622, -11.7451, 0.73", "-32.4963, 18.6687, -12.3023, 0.61", "-33.694, 19.0166, -12.7783, 0.61", "-35.039, 19.4145, -13.3808, 0.61", "-35.6251, 19.6175, -13.6593, 0.61", "-37.1782, 20.1756, -14.3549, 0.61", "-38.1613, 20.5314, -14.7926, 0.61", "-39.177, 20.8844, -15.225, 0.61", "-41.7498, 21.8302, -16.2717, 0.61", "-43.543, 22.5482, -16.9669, 0.61", "-44.9262, 23.1927, -17.4624, 0.61", "-46.3374, 23.9188, -17.9083, 0.61", "-47.4906, 24.5594, -18.2682, 0.61", "-49.2265, 25.5324, -18.8208, 0.61", "-50.1974, 26.0796, -19.1069, 0.61", "-51.7426, 26.9544, -19.5885, 0.61", "-53.3761, 27.8922, -20.0954, 0.61", "-55.3477, 29.0583, -20.726, 0.61", "-57.4384, 30.3272, -21.3767, 0.61", "-58.8717, 31.2094, -21.8, 0.49", "-60.4602, 32.2132, -22.2421, 0.49", "-61.438, 32.865, -22.5176, 0.49", "-63.33, 34.2493, -23.0401, 0.49", "-64.8229, 35.4058, -23.3953, 0.49", "-65.835, 36.2679, -23.6476, 0.49", "-67.5398, 37.8178, -24.1341, 0.49", "-69.2559, 39.5162, -24.6701, 0.49", "-69.8965, 40.1888, -24.8801, 0.49", "-70.8929, 41.303, -25.1497, 0.49", "-71.8504, 42.4752, -25.361, 0.49", "-72.855, 43.8273, -25.5639, 0.49", "-73.6471, 44.8985, -25.6883, 0.49", "-74.394, 45.8319, -25.7714, 0.49", "-75.7503, 47.3475, -25.9403, 0.49", "-76.765, 48.4207, -26.0185, 0.49", "-78.8663, 50.5296, -26.0833, 0.49", "-80.4194, 51.9868, -26.0776, 0.49", "-81.2674, 52.7506, -26.1214, 0.49", "-82.3493, 53.7017, -26.2196, 0.49", "-84.009, 55.0168, -26.4512, 0.49", "-85.0259, 55.7232, -26.6322, 0.49", "-86.4017, 56.5254, -27.0311, 0.49", "-88.2503, 57.4259, -27.9063, 0.49", "-89.9987, 58.1048, -28.9649, 0.49", "-91.4256, 58.5882, -29.9182, 0.49", "-93.1714, 59.0713, -31.2049, 0.49", "-95.9727, 59.6783, -33.3749, 0.49", "-98.5592, 60.0948, -35.5087, 0.37", "-100.008, 60.2557, -36.7638, 0.37" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "36.8135, 4.71475, 0.0, 0.49", "51.6809, 6.70511, 0.0, 0.49", "66.5482, 8.69548, 0.0, 0.49" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "12.3334, -1.8464, -11.2598, 0.73", "15.0631, -1.0307, -24.3021, 0.73", "14.7293, -4.15208, -37.4522, 0.73", "14.1783, -5.25492, -38.7157, 0.73", "13.2907, -6.98742, -39.8785, 0.73", "12.2584, -8.8025, -40.9014, 0.73", "11.1363, -10.7734, -41.8884, 0.73", "10.3123, -12.4827, -42.5197, 0.73", "9.835, -13.6243, -43.1598, 0.73", "9.07658, -15.3324, -44.0112, 0.73", "8.20633, -17.1637, -44.7966, 0.73", "7.66931, -18.364, -45.2808, 0.73", "6.62038, -20.5764, -46.1289, 0.73", "5.85335, -22.1817, -46.7313, 0.73", "4.87737, -24.1758, -47.4997, 0.61", "4.09868, -25.8491, -48.1466, 0.61", "3.05091, -28.218, -49.0421, 0.61", "2.30453, -29.9304, -49.7583, 0.61", "1.56224, -31.8227, -50.5399, 0.49", "1.12242, -33.0759, -51.1155, 0.49", "0.482298, -35.0765, -52.1462, 0.49", "-0.69221, -39.1345, -54.4128, 0.49", "-1.40657, -42.2466, -56.466, 0.49", "-1.90433, -45.1417, -58.7257, 0.49", "-2.35326, -49.0225, -62.0679, 0.49", "-2.57748, -51.631, -64.5272, 0.49", "-2.67156, -53.1353, -66.0491, 0.49", "-2.84983, -56.6404, -69.821, 0.49", "-3.11721, -59.4906, -72.7276, 0.49", "-3.29325, -60.6882, -73.8546, 0.49", "-3.67024, -62.6103, -75.1441, 0.49", "-4.08323, -64.2599, -75.8416, 0.49", "-4.54151, -65.9416, -76.2067, 0.49", "-5.4671, -69.7676, -76.12, 0.49", "-6.08415, -72.5534, -75.7616, 0.49", "-6.63768, -75.2188, -75.3062, 0.49", "-6.79573, -76.3442, -75.0422, 0.49", "-6.97612, -78.5261, -74.473, 0.49", "-6.85831, -80.6912, -73.8692, 0.49" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "12.3334, -1.8464, -11.2598, 0.86", "12.065, 0.755828, -11.7033, 0.86", "11.7821, 3.67402, -12.0242, 0.73", "11.7123, 4.86468, -12.114, 0.73", "11.6381, 6.02675, -12.147, 0.73", "11.4592, 8.63478, -12.0678, 0.73", "11.403, 10.1336, -12.0375, 0.73", "11.4204, 11.5417, -11.9453, 0.73", "11.484, 12.8964, -11.8927, 0.73", "11.6194, 14.441, -11.9574, 0.61", "11.874, 16.3178, -12.195, 0.61", "12.383, 18.8598, -12.7715, 0.61", "12.7465, 20.3733, -13.1758, 0.49", "13.2815, 22.2493, -13.6897, 0.49", "13.8039, 23.8377, -14.1263, 0.49", "14.4548, 25.566, -14.5812, 0.49", "15.0609, 26.927, -14.8788, 0.37", "15.5377, 27.8938, -14.9713, 0.37", "16.3416, 29.2485, -14.9249, 0.37", "16.8582, 30.0473, -14.825, 0.37", "17.7214, 31.2754, -14.5738, 0.37", "19.0254, 32.993, -14.097, 0.37", "19.8526, 34.0359, -13.7483, 0.37", "21.1718, 35.6168, -13.2032, 0.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "74.2645, 64.1465, -0.494497, 0.37", "75.6683, 63.3551, -1.30854, 0.37", "77.2605, 62.4575, -2.23177, 0.37", "77.7345, 62.1903, -2.50662, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "74.2645, 64.1465, -0.494497, 0.37", "75.5029, 63.8826, -1.56074, 0.37", "76.9286, 63.4756, -2.887, 0.37", "77.7323, 63.2817, -3.58697, 0.37", "78.7225, 63.0548, -4.48117, 0.37", "80.2288, 62.6973, -5.89482, 0.37", "82.1266, 62.2505, -7.69522, 0.37", "84.0109, 61.7623, -9.48148, 0.37", "85.5451, 61.3625, -10.8834, 0.37", "88.1551, 60.7847, -13.1512, 0.37", "90.6469, 60.3156, -15.2645, 0.37", "92.2847, 60.0694, -16.5726, 0.37", "94.1881, 59.8277, -18.0756, 0.37", "95.6935, 59.6028, -19.2373, 0.37", "97.0111, 59.3836, -20.2359, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "20.6354, -3.52306, 22.2661, 0.49", "22.0471, -3.2962, 23.1718, 0.49" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "20.6354, -3.52306, 22.2661, 0.61", "20.6438, -4.82976, 23.0545, 0.61", "20.6518, -5.87669, 23.6701, 0.61", "20.6457, -6.5807, 24.0746, 0.61", "20.6134, -7.46645, 24.5566, 0.61", "20.5468, -9.12748, 25.4108, 0.61", "20.4904, -10.6764, 26.2146, 0.61", "20.4385, -11.9359, 26.8636, 0.61", "20.3747, -13.1403, 27.4975, 0.49", "20.2456, -15.232, 28.5988, 0.49", "20.1562, -16.4141, 29.2098, 0.49", "20.0223, -17.8511, 29.9084, 0.49", "19.8263, -20.0366, 30.9729, 0.49", "19.6716, -21.7946, 31.8753, 0.49" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-15.731, 4.58613, 17.6224, 0.49", "-13.9779, 4.92361, 19.9437, 0.49", "-13.3354, 5.0829, 20.8759, 0.49", "-12.2658, 5.46383, 22.733, 0.49", "-10.153, 6.22258, 26.716, 0.49", "-8.8136, 6.71851, 29.145, 0.49", "-7.98792, 7.04668, 30.6064, 0.49", "-6.56086, 7.74714, 33.3025, 0.49", "-5.04046, 8.58435, 36.0827, 0.49", "-3.76427, 9.45469, 38.3427, 0.49", "-2.65999, 10.3726, 39.981, 0.37", "-1.73943, 11.1781, 41.0612, 0.37", "-0.97602, 11.8023, 41.7607, 0.37", "0.525799, 13.0452, 42.8403, 0.37", "1.17737, 13.5986, 43.2315, 0.37", "2.6765, 15.1799, 43.9933, 0.37", "3.77872, 16.5409, 44.4533, 0.37", "4.40867, 17.4071, 44.5614, 0.37", "5.14466, 18.5565, 44.4955, 0.37", "5.6275, 19.4267, 44.3231, 0.37", "7.15685, 22.5489, 43.4963, 0.37", "7.90898, 24.2074, 42.9883, 0.37", "8.44396, 25.4692, 42.5235, 0.37", "9.03172, 26.8327, 41.9586, 0.37", "9.55863, 27.9479, 41.4643, 0.37", "10.3998, 29.5678, 40.8325, 0.37", "11.2227, 30.8325, 40.6364, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-15.731, 4.58613, 17.6224, 1.22", "-17.4163, 4.06841, 17.5348, 1.22", "-18.9298, 3.60346, 17.4562, 1.1", "-20.7652, 3.03963, 17.3609, 1.1", "-23.338, 2.2493, 17.2272, 1.1" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-6.13967, -22.1986, -3.71694, 0.49", "-4.80495, -24.0305, -4.83127, 0.49", "-3.85503, -25.1507, -5.50457, 0.49", "-3.23306, -25.9072, -5.96801, 0.49", "-2.522, -26.8045, -6.55378, 0.49", "-1.95161, -27.5337, -6.93999, 0.49", "-1.42556, -28.2395, -7.24055, 0.49", "-0.68123, -29.3758, -7.60649, 0.37", "-0.24069, -30.1647, -7.75985, 0.37", "0.163885, -30.9259, -7.85677, 0.37", "1.09339, -33.0394, -7.99707, 0.37", "1.35585, -33.7896, -8.02065, 0.37", "1.80799, -35.2387, -8.07048, 0.37", "2.59983, -38.0576, -8.14758, 0.37", "2.98272, -39.2899, -8.19166, 0.37", "3.36286, -40.5526, -8.3117, 0.37", "3.85423, -42.2504, -8.80516, 0.37" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.13967, -22.1986, -3.71694, 1.47", "-7.91071, -23.803, -3.85362, 1.47", "-9.57243, -25.4007, -3.807, 1.47", "-11.2247, -27.108, -3.70156, 0.73", "-12.6613, -28.6847, -3.59595, 0.86", "-13.9713, -30.1169, -3.52943, 0.86", "-16.8343, -33.1845, -3.46215, 0.86", "-18.6443, -35.1399, -3.40829, 0.86", "-20.4581, -37.1526, -3.3599, 0.86", "-21.7772, -38.6783, -3.35436, 0.86", "-23.3494, -40.6263, -3.50596, 0.86", "-24.4407, -42.0584, -3.75518, 0.86", "-25.4287, -43.3887, -4.12097, 0.86", "-26.3778, -44.6505, -4.49778, 0.86", "-27.8936, -46.704, -5.15248, 0.86", "-29.5609, -49.119, -5.93745, 0.86", "-30.94, -51.4846, -6.66308, 0.86" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "21.1718, 35.6168, -13.2032, 0.49", "22.8796, 34.9487, -16.3288, 0.49" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "21.1718, 35.6168, -13.2032, 0.37", "22.0455, 39.1077, -14.0514, 0.37", "22.7225, 41.8322, -14.697, 0.37", "23.0025, 42.9588, -14.964, 0.37", "23.5291, 45.0779, -15.4661, 0.37", "23.915, 46.6309, -15.8341, 0.37", "24.3642, 48.4386, -16.2625, 0.37", "24.6463, 49.5696, -16.3647, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "19.6716, -21.7946, 31.8753, 0.49", "17.8151, -21.2512, 31.8484, 0.49", "16.3403, -20.6433, 31.8727, 0.49", "14.9796, -19.9283, 31.7473, 0.49", "13.3744, -18.834, 31.403, 0.37", "11.9582, -17.6842, 30.9619, 0.37", "10.929, -16.7379, 30.5389, 0.37", "10.3276, -15.9657, 30.1844, 0.37", "9.09806, -13.9612, 29.1999, 0.37", "8.45918, -12.7486, 28.5744, 0.37", "7.86467, -11.4016, 27.8885, 0.37", "7.46376, -10.3791, 27.3093, 0.37", "6.99235, -9.04284, 26.5025, 0.37", "6.78819, -8.24638, 26.0348, 0.37", "6.54075, -6.8808, 25.3206, 0.37", "6.42297, -5.47325, 24.5994, 0.37", "6.41779, -3.90078, 23.6316, 0.37", "6.45089, -2.65064, 22.7914, 0.37", "6.53901, -0.466563, 21.2489, 0.37", "6.5954, 0.593763, 20.4252, 0.37", "6.67637, 2.25752, 19.0381, 0.37", "6.72671, 5.63093, 16.088, 0.37", "6.66997, 8.328, 13.6505, 0.37", "6.60312, 9.42762, 12.6199, 0.37", "6.29466, 12.1543, 9.97074, 0.37", "6.02388, 13.9283, 8.20362, 0.37", "5.89929, 14.5443, 7.58063, 0.37", "5.58852, 15.7841, 6.39583, 0.37", "5.24911, 16.9357, 5.28716, 0.24", "4.78678, 18.4202, 3.93328, 0.24", "4.41632, 19.6004, 2.97617, 0.24", "4.04038, 21.056, 1.89289, 0.24", "3.78815, 22.5697, 0.890278, 0.24", "3.70776, 23.6485, 0.291731, 0.24", "3.66985, 24.8499, -0.328004, 0.24", "3.71821, 26.3097, -0.98585, 0.24", "3.89761, 28.352, -1.75891, 0.24", "4.1692, 30.1166, -2.285, 0.24", "4.53802, 31.7026, -2.68494, 0.24" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "19.6716, -21.7946, 31.8753, 0.49", "19.8231, -22.7855, 32.2732, 0.49", "19.8557, -23.0698, 32.381, 0.49", "19.9303, -23.8054, 32.6425, 0.49", "20.0208, -24.6477, 32.932, 0.49", "20.1526, -25.7014, 33.2821, 0.49", "20.2868, -26.6766, 33.6029, 0.49", "20.4716, -27.8089, 34.0046, 0.49", "20.5931, -28.4133, 34.2401, 0.49", "20.6529, -28.6888, 34.3494, 0.49", "20.8008, -29.3318, 34.598, 0.49", "21.0303, -30.1814, 34.925, 0.49", "21.3298, -31.1755, 35.3179, 0.49", "21.6457, -32.204, 35.7382, 0.49", "21.8143, -32.7984, 35.9778, 0.49", "22.042, -33.6846, 36.317, 0.49", "22.2937, -34.7701, 36.6955, 0.49", "22.4115, -35.2749, 36.8511, 0.49", "22.507, -35.7291, 36.9805, 0.49", "22.7244, -36.8567, 37.2942, 0.49", "22.8093, -37.4267, 37.471, 0.49", "22.8337, -38.2221, 37.7259, 0.49", "22.7115, -39.1236, 37.9952, 0.49", "22.589, -39.8461, 38.2175, 0.49", "22.4644, -40.4282, 38.4004, 0.49", "22.0724, -41.6891, 38.7926, 0.49", "21.5863, -42.886, 39.1743, 0.49", "20.9194, -44.1317, 39.5689, 0.49" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-23.338, 2.2493, 17.2272, 0.37", "-26.6152, -1.07042, 18.817, 0.37", "-27.4452, -1.94892, 19.1809, 0.37", "-28.8587, -3.47611, 19.9283, 0.37", "-29.7183, -4.43138, 20.3385, 0.37", "-30.7151, -5.48987, 20.7351, 0.37", "-32.9203, -7.65428, 21.418, 0.37", "-33.7403, -8.37541, 21.5701, 0.37", "-35.9855, -10.3873, 22.0163, 0.37", "-37.4117, -11.7102, 22.3143, 0.37", "-38.8372, -13.0105, 22.5997, 0.37", "-40.6658, -14.6477, 22.9724, 0.37", "-42.7736, -16.5142, 23.3051, 0.37", "-44.8497, -18.4657, 23.6577, 0.37", "-46.5645, -20.1452, 23.942, 0.37", "-47.7833, -21.3392, 24.2245, 0.37", "-49.5182, -23.0537, 24.6751, 0.37", "-50.6655, -24.1488, 24.977, 0.37", "-51.8905, -25.1525, 25.2446, 0.37", "-52.9798, -25.8619, 25.4806, 0.37", "-54.7957, -26.7742, 25.8805, 0.37", "-56.0418, -27.3072, 26.1163, 0.37", "-58.3816, -28.2193, 26.4466, 0.37", "-60.5499, -28.9925, 26.8358, 0.37", "-62.1525, -29.559, 27.205, 0.37", "-63.7349, -30.1626, 27.643, 0.37", "-65.7509, -31.0132, 28.2584, 0.37", "-68.5082, -32.2504, 29.1584, 0.37", "-70.8742, -33.3545, 29.9413, 0.37", "-73.1269, -34.6556, 30.6593, 0.37", "-74.692, -35.6859, 31.099, 0.37", "-76.3522, -36.8712, 31.4789, 0.37", "-78.3897, -38.4342, 31.9232, 0.37", "-80.0029, -39.7648, 32.1852, 0.37", "-83.1133, -42.4324, 32.4639, 0.37", "-84.2606, -43.4458, 32.566, 0.37", "-86.3249, -45.2536, 32.8205, 0.37", "-89.6626, -48.0006, 33.3173, 0.37", "-92.1403, -49.8949, 33.7901, 0.37", "-93.4054, -50.7565, 34.0671, 0.37", "-96.0998, -52.3175, 34.666, 0.37", "-98.6618, -53.6792, 35.2427, 0.37", "-100.923, -54.7444, 35.7064, 0.37", "-103.459, -55.7645, 36.155, 0.37", "-104.798, -56.2799, 36.4087, 0.37", "-107.793, -57.4117, 37.0326, 0.37", "-110.498, -58.3765, 37.5875, 0.37", "-113.112, -59.3391, 38.1968, 0.37", "-115.471, -60.222, 38.813, 0.37", "-117.23, -60.8664, 39.2919, 0.37", "-119.635, -61.7552, 39.962, 0.37", "-121.534, -62.436, 40.5468, 0.37", "-123.556, -63.1622, 41.1766, 0.37", "-125.853, -63.9946, 41.9039, 0.37", "-128.275, -64.8574, 42.5677, 0.37", "-130.503, -65.5899, 43.0799, 0.37" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-23.338, 2.2493, 17.2272, 0.86", "-24.982, 3.09014, 17.3221, 0.86", "-25.5921, 3.40015, 17.3771, 0.86", "-27.0639, 4.11736, 17.5781, 0.73", "-28.3434, 4.72082, 17.7932, 0.73", "-29.2687, 5.16295, 17.9654, 0.73", "-30.4581, 5.76116, 18.2158, 0.73", "-31.9763, 6.5087, 18.5685, 0.73", "-32.9925, 7.03749, 18.7937, 0.73", "-34.1757, 7.72875, 19.0086, 0.73", "-35.4902, 8.54244, 19.2413, 0.73", "-36.894, 9.47573, 19.4761, 0.61", "-37.8386, 10.1531, 19.6193, 0.61", "-39.1138, 11.1065, 19.8065, 0.61", "-41.0231, 12.5731, 20.0819, 0.61", "-42.9883, 14.0536, 20.3352, 0.61", "-44.4928, 15.1079, 20.6099, 0.61", "-46.3949, 16.3662, 21.0397, 0.61", "-47.5597, 17.1017, 21.4143, 0.61", "-48.4427, 17.6451, 21.8008, 0.61", "-50.7025, 19.0546, 22.8526, 0.61", "-52.89, 20.4478, 23.9258, 0.61", "-53.9901, 21.173, 24.5172, 0.61", "-55.9877, 22.5584, 25.6341, 0.61", "-57.4731, 23.6677, 26.477, 0.61", "-59.9283, 25.669, 27.8427, 0.61", "-61.5432, 27.1052, 28.7139, 0.61", "-62.7045, 28.183, 29.2547, 0.61", "-63.9616, 29.3051, 29.7997, 0.61", "-65.4585, 30.5599, 30.3423, 0.61", "-66.7456, 31.5742, 30.7881, 0.61", "-68.1013, 32.5465, 31.2529, 0.61", "-69.5699, 33.5448, 31.6707, 0.61", "-71.2346, 34.6369, 32.1122, 0.61", "-73.5833, 36.1826, 32.7233, 0.61", "-74.4315, 36.7604, 32.9345, 0.61", "-75.8665, 37.802, 33.298, 0.61", "-76.9958, 38.6954, 33.5651, 0.61", "-78.4412, 39.9266, 33.8807, 0.61", "-79.8472, 41.1997, 34.1801, 0.61", "-81.163, 42.4183, 34.4553, 0.61", "-82.3164, 43.4854, 34.6826, 0.61", "-83.4756, 44.5245, 34.8973, 0.61", "-85.2017, 45.8642, 35.1601, 0.61", "-86.5729, 46.7853, 35.3327, 0.61", "-88.6435, 48.0283, 35.5611, 0.61", "-89.8271, 48.6749, 35.7343, 0.61", "-91.8487, 49.7187, 36.1141, 0.61", "-94.122, 50.861, 36.6683, 0.61", "-95.8898, 51.6963, 37.1849, 0.61", "-97.2695, 52.3005, 37.6307, 0.61", "-99.6393, 53.2343, 38.4444, 0.61", "-101.337, 53.8451, 39.0399, 0.61", "-103.255, 54.5111, 39.7286, 0.61", "-104.613, 54.9671, 40.22, 0.61", "-105.638, 55.2724, 40.5438, 0.61", "-107.074, 55.6604, 40.848, 0.61", "-108.82, 56.0988, 41.0309, 0.61", "-110.338, 56.452, 41.1186, 0.61", "-111.712, 56.7652, 41.1317, 0.61", "-113.339, 57.1347, 41.1537, 0.61", "-115.161, 57.5214, 41.1685, 0.61", "-116.159, 57.7412, 41.1554, 0.61", "-118.648, 58.2804, 41.0729, 0.61", "-120.118, 58.5647, 41.0004, 0.61", "-122.053, 58.8754, 40.894, 0.61", "-123.45, 59.0671, 40.8435, 0.61", "-124.941, 59.2743, 40.8156, 0.61", "-125.781, 59.4024, 40.7867, 0.61", "-127.817, 59.7269, 40.6969, 0.61", "-130.288, 60.1022, 40.6063, 0.61", "-132.091, 60.3611, 40.5341, 0.61", "-133.09, 60.4882, 40.5154, 0.61", "-134.48, 60.6377, 40.5106, 0.61", "-135.448, 60.7438, 40.5581, 0.61", "-137.354, 60.9711, 40.736, 0.61", "-138.864, 61.1872, 40.9504, 0.61", "-140.608, 61.4812, 41.2646, 0.49", "-141.68, 61.7011, 41.4961, 0.49", "-144.201, 62.3183, 42.0834, 0.49", "-145.77, 62.7628, 42.4531, 0.49", "-147.478, 63.3065, 42.878, 0.49", "-148.766, 63.7297, 43.1186, 0.49", "-150.62, 64.3387, 43.3307, 0.37", "-153.018, 65.138, 43.4448, 0.37", "-154.788, 65.7306, 43.3803, 0.37", "-155.941, 66.1127, 43.2847, 0.37", "-158.866, 67.0231, 42.8757, 0.37", "-161.155, 67.6886, 42.4633, 0.37", "-162.466, 68.0503, 42.1772, 0.37", "-163.919, 68.4254, 41.8492, 0.37", "-165.474, 68.7845, 41.4856, 0.37", "-166.999, 69.0509, 41.1451, 0.37", "-168.078, 69.2217, 40.9452, 0.37", "-169.575, 69.4034, 40.6505, 0.37", "-172.574, 69.6381, 40.0572, 0.37", "-173.995, 69.6961, 39.7982, 0.37", "-176.624, 69.6986, 39.3453, 0.37" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.85423, -42.2504, -8.80516, 0.37", "3.50652, -43.2773, -8.86578, 0.37", "3.34611, -43.7511, -8.89375, 0.37", "3.02219, -44.7078, -8.95023, 0.37", "2.65833, -45.7824, -9.01366, 0.37" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "3.85423, -42.2504, -8.80516, 0.37", "5.20438, -44.8227, -8.72844, 0.37", "5.56044, -45.6259, -8.6996, 0.37", "5.6682, -45.8978, -8.68647, 0.37", "6.33949, -47.5917, -8.6047, 0.37", "6.86247, -48.9114, -8.541, 0.37", "7.4985, -50.5163, -8.46353, 0.37", "7.77485, -51.6631, -8.3741, 0.37", "8.03288, -52.8001, -8.30562, 0.37" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-30.94, -51.4846, -6.66308, 0.49", "-33.9585, -52.2975, -9.07092, 0.49", "-35.2886, -52.7005, -10.1797, 0.49", "-36.8231, -53.158, -11.4583, 0.49", "-38.6278, -53.6702, -12.9693, 0.49", "-40.1353, -54.0935, -14.3383, 0.49", "-41.5347, -54.4799, -15.6576, 0.49", "-42.9555, -54.899, -16.9394, 0.49", "-44.8677, -55.6156, -18.957, 0.49", "-45.3654, -55.8223, -19.554, 0.24", "-46.51, -56.3831, -21.112, 0.24", "-47.1358, -56.7177, -22.0736, 0.37", "-48.1816, -57.3553, -23.7768, 0.37", "-49.042, -57.9023, -25.208, 0.37", "-50.1783, -58.643, -27.1261, 0.37", "-50.9251, -59.0985, -28.2953, 0.37", "-52.171, -59.7731, -30.1115, 0.37", "-53.1476, -60.2271, -31.511, 0.37", "-54.6737, -60.8018, -33.6262, 0.37", "-55.5587, -61.1048, -34.8214, 0.37", "-56.3121, -61.3525, -35.8638, 0.37", "-57.3176, -61.6058, -37.1926, 0.37", "-58.1444, -61.7399, -38.1843, 0.37", "-59.0067, -61.8638, -39.2406, 0.37", "-60.0254, -61.9982, -40.4607, 0.37", "-60.966, -62.1253, -41.5373, 0.37", "-62.0028, -62.2767, -42.6136, 0.37", "-63.0271, -62.4451, -43.5627, 0.37", "-65.2649, -62.8737, -45.4572, 0.37", "-66.7119, -63.2174, -46.6422, 0.37", "-68.9226, -63.8105, -48.3891, 0.37", "-70.8134, -64.3622, -49.8205, 0.37", "-71.8677, -64.7358, -50.5941, 0.37", "-73.0267, -65.2206, -51.4803, 0.37", "-74.6319, -65.9117, -52.6676, 0.37", "-76.1974, -66.6923, -53.9162, 0.37", "-77.9896, -67.6838, -55.423, 0.37", "-79.3405, -68.4873, -56.6154, 0.37", "-81.4713, -69.8493, -58.4936, 0.37", "-83.3403, -71.1159, -60.0842, 0.37", "-84.1627, -71.6714, -60.7486, 0.37", "-85.5104, -72.6027, -61.8235, 0.37", "-87.2156, -73.7678, -63.1791, 0.37", "-89.0633, -74.9047, -64.5813, 0.37", "-90.4726, -75.6426, -65.5718, 0.37", "-91.8463, -76.2341, -66.5304, 0.37", "-93.3508, -76.6882, -67.5608, 0.37", "-95.1488, -77.0243, -68.7982, 0.37", "-96.8803, -77.1363, -69.9805, 0.37", "-99.4453, -77.0511, -71.688, 0.37", "-101.579, -76.852, -73.0745, 0.37", "-103.158, -76.6584, -74.1549, 0.37", "-104.218, -76.4853, -74.8953, 0.24", "-105.926, -76.1342, -76.0658, 0.24", "-107.375, -75.816, -77.08, 0.24", "-108.73, -75.5369, -78.0443, 0.24", "-110.953, -75.0956, -79.6967, 0.24", "-112.083, -74.9014, -80.5844, 0.24" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-30.94, -51.4846, -6.66308, 0.86", "-31.6233, -52.6752, -6.7922, 0.86", "-32.2182, -53.6463, -6.90847, 0.86", "-33.0258, -54.9239, -7.06867, 0.86", "-33.5869, -55.7789, -7.18189, 0.86", "-34.4365, -57.0973, -7.35189, 0.86", "-34.894, -57.8542, -7.45901, 0.86", "-35.6771, -59.1419, -7.66711, 0.86", "-36.4065, -60.3997, -7.87614, 0.86", "-36.9728, -61.4581, -8.04574, 0.86", "-37.4872, -62.4653, -8.19804, 0.86", "-38.2026, -63.8661, -8.38307, 0.86", "-38.8642, -65.1716, -8.5451, 0.86", "-39.8061, -67.0668, -8.76156, 0.86", "-40.4048, -68.2929, -8.8889, 0.86", "-40.9856, -69.5221, -8.99904, 0.86", "-42.0218, -71.7629, -9.19863, 0.86", "-42.8472, -73.6585, -9.34821, 0.86", "-43.3037, -74.8182, -9.44094, 0.86", "-43.5616, -75.5497, -9.4993, 0.86", "-43.9767, -76.8444, -9.60353, 0.86", "-44.5194, -78.6607, -9.75573, 0.86", "-45.108, -80.8429, -9.93079, 0.86", "-45.5473, -82.3938, -10.0468, 0.86", "-45.8728, -83.4713, -10.1317, 0.86", "-46.176, -84.4376, -10.1779, 0.86", "-46.6012, -85.7875, -10.2024, 0.86", "-46.9406, -86.772, -10.1956, 0.86", "-47.6724, -88.6009, -10.2132, 0.86", "-47.9826, -89.3359, -10.2298, 0.86", "-48.724, -91.0433, -10.2923, 0.86", "-49.292, -92.2877, -10.3377, 0.86", "-50.1683, -94.178, -10.3949, 0.86", "-50.712, -95.3348, -10.4279, 0.86", "-51.3462, -96.6975, -10.4703, 0.86", "-51.7624, -97.6312, -10.5136, 0.86", "-52.3451, -99.0196, -10.6054, 0.86", "-52.9243, -100.407, -10.6822, 0.86", "-53.4332, -101.667, -10.7417, 0.86", "-53.8868, -102.812, -10.8205, 0.86", "-54.3665, -103.976, -10.935, 0.86", "-55.0972, -105.792, -11.1316, 0.86", "-55.7777, -107.575, -11.3314, 0.86", "-56.3487, -109.178, -11.5642, 0.86", "-56.8954, -110.85, -11.8346, 0.86", "-57.3308, -112.334, -12.0744, 0.86", "-57.5262, -113.088, -12.1898, 0.86", "-57.7546, -114.098, -12.3413, 0.86", "-58.2466, -116.371, -12.5793, 0.86", "-58.6491, -118.23, -12.8156, 0.86", "-59.2544, -120.755, -13.1768, 0.86", "-59.7008, -122.492, -13.4673, 0.86", "-60.0649, -123.867, -13.7163, 0.86", "-60.6717, -126.093, -14.1151, 0.86", "-61.4359, -128.629, -14.5295, 0.86", "-61.896, -130.073, -14.7949, 0.86", "-62.244, -131.162, -15.0048, 0.86", "-62.7215, -132.795, -15.2895, 0.86", "-63.0084, -133.871, -15.4481, 0.86", "-63.5474, -135.912, -15.7084, 0.61", "-63.9546, -137.398, -15.7969, 0.61", "-64.2117, -138.378, -15.8453, 0.61", "-64.7926, -140.74, -15.9787, 0.61", "-65.0766, -141.937, -16.0743, 0.61", "-65.4011, -143.41, -16.2201, 0.61", "-65.6071, -144.401, -16.3305, 0.61", "-65.8927, -145.712, -16.49, 0.61", "-66.5293, -148.413, -16.8381, 0.61", "-66.9386, -149.898, -17.045, 0.61", "-67.2604, -150.998, -17.2238, 0.61", "-67.7719, -152.611, -17.5146, 0.61", "-68.3027, -154.045, -17.8056, 0.49", "-68.8108, -155.271, -18.0715, 0.49", "-69.4945, -156.781, -18.4171, 0.49", "-69.9802, -157.822, -18.6644, 0.49", "-70.4744, -158.85, -18.9094, 0.49", "-71.1501, -160.305, -19.2293, 0.49", "-71.5595, -161.232, -19.3994, 0.49", "-71.9296, -162.069, -19.4958, 0.49", "-72.3087, -163.115, -19.5713, 0.49", "-72.7542, -164.5, -19.623, 0.49", "-73.181, -165.944, -19.6743, 0.49", "-73.594, -167.382, -19.7262, 0.49", "-74.1547, -169.332, -19.8091, 0.49", "-74.7539, -171.577, -19.9452, 0.49", "-75.0033, -172.679, -20.0359, 0.49", "-75.2999, -174.181, -20.1938, 0.49", "-75.5769, -175.765, -20.3619, 0.49", "-75.7419, -176.866, -20.4749, 0.49", "-75.9888, -178.742, -20.6662, 0.49", "-76.1906, -180.041, -20.7854, 0.49", "-76.2995, -180.807, -20.8616, 0.49", "-76.4645, -182.063, -20.9867, 0.49", "-76.6505, -183.483, -21.1254, 0.49", "-76.8836, -185.178, -21.2755, 0.49", "-77.0567, -186.439, -21.3539, 0.49", "-77.2776, -187.894, -21.4879, 0.49", "-77.4847, -189.218, -21.6597, 0.49", "-77.679, -190.322, -21.8439, 0.49", "-77.9925, -191.959, -22.1884, 0.49", "-78.317, -193.431, -22.5532, 0.49", "-78.9497, -195.876, -23.2151, 0.49", "-79.2728, -196.924, -23.5267, 0.49", "-79.6111, -197.881, -23.828, 0.49", "-80.0456, -198.948, -24.1446, 0.49", "-80.6009, -200.146, -24.511, 0.49", "-81.1873, -201.294, -24.8335, 0.49", "-81.6366, -202.183, -25.0181, 0.49", "-82.0108, -203.006, -25.157, 0.49", "-82.7342, -204.845, -25.4841, 0.49", "-83.2857, -206.467, -25.774, 0.49", "-83.9058, -208.569, -26.1688, 0.49", "-84.217, -209.758, -26.3972, 0.49", "-84.6108, -211.415, -26.6936, 0.49", "-84.9103, -212.885, -26.923, 0.49", "-85.2321, -214.877, -27.206, 0.49", "-85.5548, -216.885, -27.4432, 0.49", "-85.6792, -217.823, -27.5781, 0.49", "-85.8902, -219.71, -27.9812, 0.49", "-86.0263, -221.328, -28.4106, 0.49", "-86.0923, -223.505, -29.0629, 0.49", "-86.0096, -226.169, -29.9599, 0.49", "-85.7481, -228.52, -30.8583, 0.49", "-85.2013, -231.489, -32.0786, 0.49", "-84.7057, -233.522, -32.9573, 0.49", "-84.4155, -234.588, -33.4168, 0.49", "-84.0743, -235.94, -33.942, 0.49", "-83.7345, -238.142, -34.7132, 0.49", "-83.9047, -239.594, -35.1087, 0.49", "-84.1878, -240.367, -35.2929, 0.49", "-84.7318, -241.451, -35.5554, 0.49", "-86.3781, -244.356, -36.2404, 0.49", "-87.8627, -246.782, -36.7883, 0.49", "-89.0373, -248.61, -37.1551, 0.49", "-90.1894, -250.443, -37.5305, 0.49", "-90.8732, -251.718, -37.7875, 0.49", "-91.3281, -252.872, -37.9868, 0.49", "-91.6385, -254.183, -38.1289, 0.49", "-91.7425, -254.969, -38.1673, 0.49", "-91.8675, -255.926, -38.2047, 0.49", "-92.157, -257.574, -38.261, 0.49", "-92.6134, -259.785, -38.3836, 0.49", "-92.9471, -261.548, -38.5771, 0.49", "-93.1814, -263.088, -38.8015, 0.49", "-93.436, -265.493, -39.1944, 0.49", "-93.545, -267.1, -39.4884, 0.49", "-93.5553, -268.766, -39.832, 0.49", "-93.4118, -271.218, -40.3432, 0.49", "-93.1761, -272.964, -40.6921, 0.49", "-92.783, -275.08, -41.1025, 0.49", "-92.4941, -276.222, -41.2984, 0.49", "-91.8581, -278.349, -41.6437, 0.49", "-91.1288, -280.619, -41.9531, 0.49", "-90.6653, -282.147, -42.0478, 0.49" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-130.503, -65.5899, 43.0799, 0.37", "-133.394, -65.9525, 44.2536, 0.37", "-136.6, -66.3548, 45.5559, 0.37", "-138.309, -66.5692, 46.2496, 0.37", "-139.832, -66.7603, 46.8682, 0.24" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-130.503, -65.5899, 43.0799, 0.37", "-131.499, -67.9128, 42.9538, 0.37", "-132.068, -69.4497, 42.8897, 0.37", "-132.581, -71.0113, 42.8323, 0.37", "-133.036, -72.7633, 42.8594, 0.37", "-133.367, -74.2859, 42.9473, 0.37", "-133.665, -75.8478, 43.0674, 0.37", "-133.83, -77.3677, 43.2332, 0.37", "-133.898, -78.2975, 43.3444, 0.37", "-134.046, -80.8887, 43.6762, 0.37", "-134.12, -83.091, 43.9594, 0.37", "-134.14, -84.2763, 44.0754, 0.37", "-134.128, -85.915, 44.225, 0.37", "-134.107, -87.3326, 44.3256, 0.37", "-134.1, -88.3948, 44.3815, 0.37", "-134.086, -89.9266, 44.3319, 0.37", "-134.112, -91.9296, 44.151, 0.37", "-134.184, -93.5497, 43.894, 0.37", "-134.317, -95.0373, 43.5571, 0.37", "-134.613, -96.8566, 43.0276, 0.37", "-135.183, -99.0954, 42.2308, 0.37", "-135.824, -100.685, 41.534, 0.37", "-136.737, -102.143, 40.7582, 0.37", "-137.329, -102.807, 40.3711, 0.37", "-138.609, -103.877, 39.722, 0.37", "-139.338, -104.357, 39.4098, 0.37", "-140.947, -105.193, 38.8851, 0.37", "-142.533, -105.951, 38.4091, 0.37", "-144.269, -106.705, 37.9426, 0.37", "-145.905, -107.388, 37.5063, 0.37", "-147.197, -107.905, 37.1546, 0.37", "-149.562, -108.879, 36.4872, 0.37", "-151.939, -109.911, 35.7722, 0.37" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-90.6653, -282.147, -42.0478, 0.49", "-89.674, -283.179, -42.1196, 0.49", "-88.8455, -284.04, -42.1797, 0.49", "-87.8561, -285.07, -42.2514, 0.49", "-85.942, -287.061, -42.3902, 0.49" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-90.6653, -282.147, -42.0478, 0.49", "-92.6322, -282.558, -43.0526, 0.49", "-94.3709, -282.921, -43.9408, 0.49" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-85.942, -287.061, -42.3902, 0.49", "-85.3341, -289.873, -42.7603, 0.49", "-84.7319, -292.658, -43.127, 0.49", "-83.897, -296.52, -43.6354, 0.49" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-85.942, -287.061, -42.3902, 0.49", "-82.2115, -287.516, -42.8876, 0.49", "-81.1575, -287.645, -43.0282, 0.49", "-78.0714, -288.021, -43.4397, 0.49", "-74.8648, -288.412, -43.8673, 0.49", "-72.6761, -288.679, -44.1591, 0.49", "-70.7166, -288.918, -44.4204, 0.49" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_29", "dend_26", "dend_17", "dend_4", "dend_3", "dend_0", "dend_39", "dend_35", "dend_30", "dend_28", "dend_27", "dend_25", "dend_18", "dend_16", "dend_5", "dend_2", "dend_1", "dend_43", "dend_40", "dend_37", "dend_36", "dend_34", "dend_31", "dend_24", "dend_19", "dend_13", "dend_6", "dend_42", "dend_41", "dend_33", "dend_32", "dend_21", "dend_20", "dend_15", "dend_14", "dend_12", "dend_7", "dend_23", "dend_22", "dend_9", "dend_8", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_29", "dend_26", "dend_17", "dend_4", "dend_3", "dend_0", "dend_39", "dend_35", "dend_30", "dend_28", "dend_27", "dend_25", "dend_18", "dend_16", "dend_5", "dend_2", "dend_1", "dend_43", "dend_40", "dend_37", "dend_36", "dend_34", "dend_31", "dend_24", "dend_19", "dend_13", "dend_6", "dend_42", "dend_41", "dend_33", "dend_32", "dend_21", "dend_20", "dend_15", "dend_14", "dend_12", "dend_7", "dend_23", "dend_22", "dend_9", "dend_8", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_38", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_17", "dend_17", "dend_17", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L1_DAC_0d58fdf14a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_4, id: dend_4, parent: soma_0
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_29
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_17
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_4
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_5
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_29, dend_26, dend_17, dend_4, dend_3, dend_0, dend_39, dend_35, dend_30, dend_28, dend_27, dend_25, dend_18, dend_16, dend_5, dend_2, dend_1, dend_43, dend_40, dend_37, dend_36, dend_34, dend_31, dend_24, dend_19, dend_13, dend_6, dend_42, dend_41, dend_33, dend_32, dend_21, dend_20, dend_15, dend_14, dend_12, dend_7, dend_23, dend_22, dend_9, dend_8, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_29, dend_26, dend_17, dend_4, dend_3, dend_0, dend_39, dend_35, dend_30, dend_28, dend_27, dend_25, dend_18, dend_16, dend_5, dend_2, dend_1, dend_43, dend_40, dend_37, dend_36, dend_34, dend_31, dend_24, dend_19, dend_13, dend_6, dend_42, dend_41, dend_33, dend_32, dend_21, dend_20, dend_15, dend_14, dend_12, dend_7, dend_23, dend_22, dend_9, dend_8, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.450000186524988)
    connect dend_29(0), soma_0(0.450000186524988)
    connect dend_26(0), soma_0(0.450000186524988)
    connect dend_17(0), soma_0(0.450000186524988)
    connect dend_4(0), soma_0(0.450000186524988)
    connect dend_3(0), soma_0(0.450000186524988)
    connect dend_0(0), soma_0(0.450000186524988)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.13528, -1.16888, 0.0, 4.15795 ) }
    soma_0 { pt3dadd( -6.42457, -1.07374, 0.0, 7.84613 ) }
    soma_0 { pt3dadd( -5.71387, -0.978592, 0.0, 9.14199 ) }
    soma_0 { pt3dadd( -5.00317, -0.883447, 0.0, 9.83423 ) }
    soma_0 { pt3dadd( -4.29246, -0.788301, 0.0, 10.5043 ) }
    soma_0 { pt3dadd( -3.58176, -0.693156, 0.0, 11.2615 ) }
    soma_0 { pt3dadd( -2.87105, -0.598011, 0.0, 11.8079 ) }
    soma_0 { pt3dadd( -2.16035, -0.502865, 0.0, 12.0209 ) }
    soma_0 { pt3dadd( -1.44965, -0.40772, 0.0, 12.1436 ) }
    soma_0 { pt3dadd( -0.738941, -0.312575, 0.0, 12.1855 ) }
    soma_0 { pt3dadd( -0.0282374, -0.217429, 0.0, 12.0178 ) }
    soma_0 { pt3dadd( 0.682467, -0.122284, 0.0, 11.8284 ) }
    soma_0 { pt3dadd( 1.39317, -0.0271384, 0.0, 11.3574 ) }
    soma_0 { pt3dadd( 2.10387, 0.068007, 0.0, 10.5983 ) }
    soma_0 { pt3dadd( 2.81458, 0.163152, 0.0, 9.98907 ) }
    soma_0 { pt3dadd( 3.52528, 0.258298, 0.0, 9.19047 ) }
    soma_0 { pt3dadd( 4.23599, 0.353443, 0.0, 8.37922 ) }
    soma_0 { pt3dadd( 4.94669, 0.448588, 0.0, 7.41071 ) }
    soma_0 { pt3dadd( 5.65739, 0.543734, 0.0, 6.60365 ) }
    soma_0 { pt3dadd( 6.3681, 0.638879, 0.0, 5.85286 ) }
    soma_0 { pt3dadd( 7.0788, 0.734025, 0.0, 3.31328 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 7.49967, -0.390862, 0.05, 2.32 ) }
    dend_38 { pt3dadd( 11.7986, -1.55442, -0.565287, 2.32 ) }
    dend_38 { pt3dadd( 13.4774, -2.0088, -0.805566, 2.32 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 24/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 9.51967, -0.0583625, 8.55, 1.59 ) }
    dend_29 { pt3dadd( 11.0377, 0.460914, 9.12667, 1.59 ) }
    dend_29 { pt3dadd( 11.9741, 0.78121, 9.48237, 1.35 ) }
    dend_29 { pt3dadd( 12.6909, 1.02641, 9.75467, 1.35 ) }
    dend_29 { pt3dadd( 14.3352, 1.58886, 10.3793, 1.35 ) }
    dend_29 { pt3dadd( 15.4018, 1.9537, 10.7845, 1.35 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 30/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 5.99967, 2.65863, 12.2, 0.98 ) }
    dend_26 { pt3dadd( 7.778, 3.82392, 12.8607, 0.98 ) }
    dend_26 { pt3dadd( 9.58089, 5.32692, 13.6469, 0.98 ) }
    dend_26 { pt3dadd( 11.6895, 7.08477, 14.5665, 0.98 ) }
    dend_26 { pt3dadd( 13.3714, 8.48689, 15.2999, 0.98 ) }
    dend_26 { pt3dadd( 15.0398, 9.87782, 16.0275, 0.98 ) }
    dend_26 { pt3dadd( 16.5279, 11.1184, 16.6765, 0.98 ) }
    dend_26 { pt3dadd( 17.4525, 12.2067, 17.2977, 0.98 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 38/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -3.91033, 1.43313, 9.35, 1.71 ) }
    dend_17 { pt3dadd( -5.90116, 3.34624, 9.35, 1.71 ) }
    dend_17 { pt3dadd( -7.58722, 4.96646, 9.35, 1.71 ) }
    dend_17 { pt3dadd( -8.58802, 5.92819, 9.35, 1.71 ) }
    // Section: dend_4, id: dend_4, parent: soma_0 (entry count 42/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -0.96033, -4.93187, -6.55, 2.2 ) }
    dend_4 { pt3dadd( -1.11833, -8.40295, -6.55, 2.2 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 44/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.43033, -4.00087, -1.25, 0.98 ) }
    dend_3 { pt3dadd( -8.90676, -4.20515, -1.67407, 0.98 ) }
    dend_3 { pt3dadd( -10.3578, -4.42981, -1.91633, 0.98 ) }
    dend_3 { pt3dadd( -11.1972, -4.61008, -2.05196, 0.86 ) }
    dend_3 { pt3dadd( -12.9958, -5.05861, -2.37435, 0.86 ) }
    dend_3 { pt3dadd( -14.6913, -5.48691, -2.69191, 0.86 ) }
    dend_3 { pt3dadd( -16.5718, -5.92143, -3.04459, 1.22 ) }
    dend_3 { pt3dadd( -18.0109, -6.24119, -3.32951, 1.22 ) }
    dend_3 { pt3dadd( -19.5771, -6.61594, -3.63862, 0.98 ) }
    dend_3 { pt3dadd( -20.9395, -6.95859, -3.89144, 0.86 ) }
    dend_3 { pt3dadd( -22.2812, -7.27495, -4.10014, 0.73 ) }
    dend_3 { pt3dadd( -23.7514, -7.51674, -4.31559, 0.73 ) }
    dend_3 { pt3dadd( -24.7018, -7.60217, -4.43268, 0.61 ) }
    dend_3 { pt3dadd( -25.5714, -7.63328, -4.51863, 0.61 ) }
    dend_3 { pt3dadd( -27.0785, -7.60375, -4.70744, 0.61 ) }
    dend_3 { pt3dadd( -28.5499, -7.58758, -4.94857, 1.1 ) }
    dend_3 { pt3dadd( -29.9121, -7.63244, -5.23549, 0.86 ) }
    dend_3 { pt3dadd( -31.354, -7.73926, -5.59301, 0.73 ) }
    dend_3 { pt3dadd( -32.3292, -7.84766, -5.86673, 0.61 ) }
    dend_3 { pt3dadd( -34.3936, -8.12181, -6.51075, 0.61 ) }
    dend_3 { pt3dadd( -35.9102, -8.37636, -7.05008, 0.61 ) }
    dend_3 { pt3dadd( -37.0612, -8.59753, -7.55503, 0.61 ) }
    dend_3 { pt3dadd( -37.8822, -8.7708, -7.98049, 0.61 ) }
    dend_3 { pt3dadd( -38.7568, -8.93634, -8.4078, 0.61 ) }
    dend_3 { pt3dadd( -39.5499, -9.0597, -8.75665, 0.61 ) }
    dend_3 { pt3dadd( -40.3617, -9.12302, -9.09567, 0.49 ) }
    dend_3 { pt3dadd( -42.0268, -9.13182, -9.79931, 0.49 ) }
    dend_3 { pt3dadd( -43.6773, -9.13037, -10.4978, 0.49 ) }
    dend_3 { pt3dadd( -45.2929, -9.15349, -11.2564, 0.61 ) }
    dend_3 { pt3dadd( -47.2498, -9.20702, -12.1904, 1.1 ) }
    dend_3 { pt3dadd( -49.7063, -9.35196, -13.3278, 1.1 ) }
    dend_3 { pt3dadd( -50.5629, -9.42889, -13.7121, 1.1 ) }
    dend_3 { pt3dadd( -51.897, -9.59535, -14.2791, 1.1 ) }
    dend_3 { pt3dadd( -54.6779, -10.047, -15.5322, 0.98 ) }
    dend_3 { pt3dadd( -55.7375, -10.3004, -16.0459, 0.86 ) }
    dend_3 { pt3dadd( -57.0295, -10.7614, -16.6127, 0.73 ) }
    dend_3 { pt3dadd( -57.201, -10.8427, -16.6795, 0.73 ) }
    dend_3 { pt3dadd( -57.7048, -11.1009, -16.8603, 0.73 ) }
    dend_3 { pt3dadd( -59.3462, -11.9396, -17.3823, 0.98 ) }
    dend_3 { pt3dadd( -60.7062, -12.7155, -17.7336, 0.86 ) }
    dend_3 { pt3dadd( -62.1079, -13.5968, -18.0953, 0.73 ) }
    dend_3 { pt3dadd( -63.4586, -14.4658, -18.4349, 0.73 ) }
    dend_3 { pt3dadd( -64.5716, -15.1381, -18.6778, 0.73 ) }
    dend_3 { pt3dadd( -66.3914, -16.1807, -19.0086, 0.73 ) }
    dend_3 { pt3dadd( -67.3276, -16.7058, -19.1255, 0.61 ) }
    dend_3 { pt3dadd( -69.0645, -17.6423, -19.3408, 0.61 ) }
    dend_3 { pt3dadd( -69.4963, -17.8694, -19.4015, 0.61 ) }
    dend_3 { pt3dadd( -71.0187, -18.6678, -19.6311, 0.61 ) }
    dend_3 { pt3dadd( -71.8515, -19.1306, -19.7641, 0.61 ) }
    dend_3 { pt3dadd( -73.7104, -20.2036, -20.0618, 0.61 ) }
    dend_3 { pt3dadd( -75.5092, -21.207, -20.3897, 0.49 ) }
    dend_3 { pt3dadd( -77.5263, -22.3789, -20.7949, 0.49 ) }
    dend_3 { pt3dadd( -79.0193, -23.3213, -21.1222, 0.49 ) }
    dend_3 { pt3dadd( -80.4872, -24.2904, -21.5258, 0.49 ) }
    dend_3 { pt3dadd( -82.1768, -25.418, -22.1043, 0.49 ) }
    dend_3 { pt3dadd( -83.5608, -26.3778, -22.6519, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_3 { pt3dadd( -85.1341, -27.5175, -23.3917, 0.49 ) }
    dend_3 { pt3dadd( -85.9087, -28.0696, -23.7916, 0.49 ) }
    dend_3 { pt3dadd( -87.3658, -29.0707, -24.6083, 0.49 ) }
    dend_3 { pt3dadd( -89.2108, -30.2625, -25.6914, 0.49 ) }
    dend_3 { pt3dadd( -90.2106, -30.9, -26.3136, 0.49 ) }
    dend_3 { pt3dadd( -92.1153, -32.0578, -27.4337, 0.49 ) }
    dend_3 { pt3dadd( -93.6083, -32.8816, -28.2284, 0.49 ) }
    dend_3 { pt3dadd( -94.5109, -33.3402, -28.6236, 0.49 ) }
    dend_3 { pt3dadd( -95.8955, -34.0202, -29.0818, 0.49 ) }
    dend_3 { pt3dadd( -98.0682, -35.0327, -29.6229, 0.49 ) }
    dend_3 { pt3dadd( -100.152, -35.9568, -30.0075, 0.49 ) }
    dend_3 { pt3dadd( -101.427, -36.551, -30.1799, 0.49 ) }
    dend_3 { pt3dadd( -103.531, -37.5399, -30.4178, 0.49 ) }
    dend_3 { pt3dadd( -105.848, -38.6377, -30.6144, 0.49 ) }
    dend_3 { pt3dadd( -108.087, -39.6575, -30.7729, 0.49 ) }
    dend_3 { pt3dadd( -110.352, -40.644, -30.9553, 0.49 ) }
    dend_3 { pt3dadd( -112.321, -41.4106, -31.1979, 0.49 ) }
    dend_3 { pt3dadd( -114.454, -42.2335, -31.4969, 0.49 ) }
    dend_3 { pt3dadd( -117.264, -43.2695, -31.9637, 0.49 ) }
    dend_3 { pt3dadd( -119.001, -43.8386, -32.3112, 0.49 ) }
    dend_3 { pt3dadd( -120.644, -44.2988, -32.7098, 0.49 ) }
    dend_3 { pt3dadd( -123.416, -44.8861, -33.5102, 0.49 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 22/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.23033, 3.13363, -0.9, 1.47 ) }
    dend_0 { pt3dadd( -7.55721, 4.22153, -1.05988, 1.47 ) }
    dend_0 { pt3dadd( -8.88672, 5.27476, -1.38972, 1.47 ) }
    dend_0 { pt3dadd( -9.6635, 5.87702, -1.60977, 1.47 ) }
    dend_0 { pt3dadd( -11.6768, 7.3816, -2.24098, 1.47 ) }
    dend_0 { pt3dadd( -12.8364, 8.19599, -2.65548, 1.47 ) }
    dend_0 { pt3dadd( -14.2717, 9.16749, -3.20001, 1.35 ) }
    dend_0 { pt3dadd( -16.1839, 10.3359, -3.99139, 1.22 ) }
    dend_0 { pt3dadd( -17.5789, 11.142, -4.63019, 1.22 ) }
    dend_0 { pt3dadd( -18.743, 11.8166, -5.20754, 1.1 ) }
    dend_0 { pt3dadd( -20.2177, 12.7041, -6.0186, 1.1 ) }
    dend_0 { pt3dadd( -20.9225, 13.1442, -6.43205, 0.86 ) }
    dend_0 { pt3dadd( -21.9374, 13.7795, -7.03424, 0.73 ) }
    dend_0 { pt3dadd( -22.7061, 14.2882, -7.4885, 0.73 ) }
    dend_0 { pt3dadd( -24.1784, 15.3571, -8.48537, 0.73 ) }
    dend_0 { pt3dadd( -24.925, 16.0167, -9.03058, 0.73 ) }
    dend_0 { pt3dadd( -25.3893, 16.5569, -9.41322, 0.73 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 39/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.0788, 0.734025, 0.0, 0.490201 ) }
    axon_0 { pt3dadd( 21.9462, 2.72439, 0.0, 0.490201 ) }
    axon_0 { pt3dadd( 36.8135, 4.71475, 0.0, 0.490201 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 42/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 13.4774, -2.0088, -0.805566, 0.98 ) }
    dend_39 { pt3dadd( 12.3334, -1.8464, -11.2598, 0.98 ) }
    // Section: dend_35, id: dend_35, parent: dend_29 (entry count 44/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 15.4018, 1.9537, 10.7845, 1.1 ) }
    dend_35 { pt3dadd( 18.0245, 3.68363, 10.8716, 1.1 ) }
    dend_35 { pt3dadd( 19.2835, 4.481, 10.915, 0.98 ) }
    dend_35 { pt3dadd( 21.1685, 5.68282, 10.973, 0.49 ) }
    dend_35 { pt3dadd( 22.2914, 6.4345, 11.0892, 0.49 ) }
    dend_35 { pt3dadd( 22.9404, 6.89685, 11.1819, 0.49 ) }
    dend_35 { pt3dadd( 24.3119, 7.94371, 11.3486, 0.49 ) }
    dend_35 { pt3dadd( 26.1191, 9.53027, 11.5844, 0.61 ) }
    dend_35 { pt3dadd( 27.5471, 10.9025, 11.7721, 0.61 ) }
    dend_35 { pt3dadd( 29.6392, 13.0109, 12.04, 0.61 ) }
    dend_35 { pt3dadd( 30.9725, 14.3865, 12.1982, 0.61 ) }
    dend_35 { pt3dadd( 32.8619, 16.5154, 12.3726, 0.61 ) }
    dend_35 { pt3dadd( 33.5909, 17.4726, 12.4243, 0.37 ) }
    dend_35 { pt3dadd( 34.2783, 18.538, 12.4479, 0.37 ) }
    dend_35 { pt3dadd( 34.8984, 19.5701, 12.4323, 0.37 ) }
    dend_35 { pt3dadd( 35.4921, 20.6031, 12.3534, 0.37 ) }
    dend_35 { pt3dadd( 36.4283, 22.1263, 12.2137, 0.37 ) }
    dend_35 { pt3dadd( 37.1283, 23.1458, 12.099, 0.37 ) }
    dend_35 { pt3dadd( 37.9757, 24.2542, 11.9208, 0.37 ) }
    dend_35 { pt3dadd( 38.959, 25.3849, 11.6942, 0.37 ) }
    dend_35 { pt3dadd( 39.5944, 26.0516, 11.5507, 0.37 ) }
    dend_35 { pt3dadd( 41.1679, 27.6008, 11.1863, 0.37 ) }
    dend_35 { pt3dadd( 42.8407, 29.1324, 10.8313, 0.37 ) }
    dend_35 { pt3dadd( 43.4165, 29.6504, 10.6952, 0.37 ) }
    dend_35 { pt3dadd( 45.0629, 31.1467, 10.4006, 0.37 ) }
    dend_35 { pt3dadd( 46.1652, 32.2041, 10.1963, 0.37 ) }
    dend_35 { pt3dadd( 47.3476, 33.3452, 9.94228, 0.37 ) }
    dend_35 { pt3dadd( 48.7574, 34.7541, 9.5575, 0.37 ) }
    dend_35 { pt3dadd( 50.5109, 36.5653, 8.98971, 0.37 ) }
    dend_35 { pt3dadd( 52.3607, 38.5714, 8.31034, 0.37 ) }
    dend_35 { pt3dadd( 54.1263, 40.6362, 7.53103, 0.37 ) }
    dend_35 { pt3dadd( 55.3529, 42.1981, 6.90574, 0.37 ) }
    dend_35 { pt3dadd( 56.5809, 43.8542, 6.21467, 0.37 ) }
    dend_35 { pt3dadd( 57.542, 45.2291, 5.68573, 0.37 ) }
    dend_35 { pt3dadd( 58.5216, 46.5987, 5.22538, 0.37 ) }
    dend_35 { pt3dadd( 59.5958, 48.1313, 4.70272, 0.37 ) }
    dend_35 { pt3dadd( 60.9469, 50.0503, 4.1457, 0.37 ) }
    dend_35 { pt3dadd( 62.9886, 52.8238, 3.39536, 0.37 ) }
    dend_35 { pt3dadd( 64.6493, 54.9084, 2.87444, 0.37 ) }
    dend_35 { pt3dadd( 66.3483, 56.8296, 2.30952, 0.37 ) }
    dend_35 { pt3dadd( 68.434, 59.0601, 1.62887, 0.37 ) }
    dend_35 { pt3dadd( 70.0282, 60.64, 1.15255, 0.37 ) }
    dend_35 { pt3dadd( 71.204, 61.6944, 0.795481, 0.37 ) }
    dend_35 { pt3dadd( 72.3918, 62.6874, 0.389192, 0.37 ) }
    dend_35 { pt3dadd( 74.2645, 64.1465, -0.494497, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 15.4018, 1.9537, 10.7845, 1.22 ) }
    dend_30 { pt3dadd( 16.4301, 0.929608, 13.6757, 1.22 ) }
    dend_30 { pt3dadd( 17.6722, -0.323397, 16.5872, 0.98 ) }
    dend_30 { pt3dadd( 18.2225, -0.90769, 17.7817, 0.98 ) }
    dend_30 { pt3dadd( 18.7777, -1.49727, 18.9869, 0.98 ) }
    dend_30 { pt3dadd( 19.1365, -1.87816, 19.7656, 0.98 ) }
    dend_30 { pt3dadd( 19.7288, -2.50715, 21.0514, 0.98 ) }
    dend_30 { pt3dadd( 20.3495, -3.23604, 21.978, 0.98 ) }
    dend_30 { pt3dadd( 20.6354, -3.52306, 22.2661, 0.98 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 98/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 17.4525, 12.2067, 17.2977, 0.61 ) }
    dend_28 { pt3dadd( 19.3432, 11.1252, 21.2356, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_28 { pt3dadd( 19.7959, 10.7688, 22.1691, 0.61 ) }
    dend_28 { pt3dadd( 20.5432, 9.89811, 24.0421, 0.61 ) }
    dend_28 { pt3dadd( 20.7462, 9.58488, 24.6012, 0.61 ) }
    dend_28 { pt3dadd( 21.2274, 8.72224, 25.9023, 0.61 ) }
    dend_28 { pt3dadd( 21.9392, 7.2358, 27.7978, 0.61 ) }
    dend_28 { pt3dadd( 22.287, 6.32338, 28.6919, 0.61 ) }
    dend_28 { pt3dadd( 22.8649, 4.86236, 30.045, 0.61 ) }
    dend_28 { pt3dadd( 23.2697, 4.02945, 30.9055, 0.61 ) }
    dend_28 { pt3dadd( 23.947, 3.15027, 32.1921, 0.61 ) }
    dend_28 { pt3dadd( 25.0576, 2.01041, 34.5316, 0.61 ) }
    dend_28 { pt3dadd( 26.021, 1.1509, 36.6686, 0.49 ) }
    dend_28 { pt3dadd( 26.457, 0.842344, 37.698, 0.98 ) }
    dend_28 { pt3dadd( 28.1162, 0.0452681, 41.8589, 0.98 ) }
    dend_28 { pt3dadd( 30.2013, -0.433239, 47.599, 0.98 ) }
    dend_28 { pt3dadd( 31.6565, -0.195602, 52.2501, 0.73 ) }
    dend_28 { pt3dadd( 32.4202, 0.249046, 54.7732, 0.73 ) }
    dend_28 { pt3dadd( 33.3286, 1.19242, 58.0385, 0.73 ) }
    dend_28 { pt3dadd( 34.0249, 2.26314, 60.7568, 0.73 ) }
    dend_28 { pt3dadd( 34.5258, 3.48665, 62.9431, 0.73 ) }
    dend_28 { pt3dadd( 35.7439, 7.71998, 68.8171, 0.61 ) }
    dend_28 { pt3dadd( 36.237, 9.85164, 71.4117, 0.61 ) }
    dend_28 { pt3dadd( 36.6013, 12.2735, 74.2265, 0.61 ) }
    dend_28 { pt3dadd( 36.7224, 13.5075, 75.667, 0.61 ) }
    dend_28 { pt3dadd( 36.8043, 15.5282, 78.0856, 0.61 ) }
    dend_28 { pt3dadd( 36.6529, 17.8794, 81.0549, 0.61 ) }
    dend_28 { pt3dadd( 36.1883, 20.398, 84.3588, 0.61 ) }
    dend_28 { pt3dadd( 35.5277, 23.1066, 88.0894, 0.61 ) }
    dend_28 { pt3dadd( 35.0455, 24.8753, 90.6254, 0.61 ) }
    dend_28 { pt3dadd( 34.4695, 26.7851, 93.4807, 0.61 ) }
    dend_28 { pt3dadd( 33.308, 29.9868, 98.5808, 0.61 ) }
    dend_28 { pt3dadd( 32.7189, 31.2755, 100.819, 0.49 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 31/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 17.4525, 12.2067, 17.2977, 0.73 ) }
    dend_27 { pt3dadd( 19.0986, 13.7201, 18.2034, 0.73 ) }
    dend_27 { pt3dadd( 19.8571, 14.4847, 18.6645, 0.61 ) }
    dend_27 { pt3dadd( 21.6173, 16.4219, 19.8622, 0.49 ) }
    dend_27 { pt3dadd( 22.9595, 17.8767, 20.748, 0.49 ) }
    dend_27 { pt3dadd( 23.747, 18.7498, 21.2691, 0.49 ) }
    dend_27 { pt3dadd( 24.8858, 20.0636, 22.0124, 0.49 ) }
    dend_27 { pt3dadd( 26.0389, 21.4069, 22.596, 0.49 ) }
    dend_27 { pt3dadd( 26.8025, 22.3536, 22.9273, 0.49 ) }
    dend_27 { pt3dadd( 28.0739, 24.0272, 23.3357, 0.49 ) }
    dend_27 { pt3dadd( 29.1769, 25.4703, 23.6246, 0.49 ) }
    dend_27 { pt3dadd( 30.1885, 26.8137, 23.8848, 0.49 ) }
    dend_27 { pt3dadd( 31.5109, 28.5927, 24.1555, 0.49 ) }
    dend_27 { pt3dadd( 32.0913, 29.4033, 24.2496, 0.49 ) }
    dend_27 { pt3dadd( 32.7832, 30.4737, 24.3927, 0.37 ) }
    dend_27 { pt3dadd( 33.5016, 31.7296, 24.6089, 0.37 ) }
    dend_27 { pt3dadd( 34.4861, 33.466, 24.7754, 0.37 ) }
    dend_27 { pt3dadd( 35.0656, 34.458, 24.8231, 0.37 ) }
    dend_27 { pt3dadd( 35.7257, 35.4862, 24.8933, 0.37 ) }
    dend_27 { pt3dadd( 36.5653, 36.6157, 24.9106, 0.37 ) }
    dend_27 { pt3dadd( 37.7107, 37.9361, 24.8746, 0.37 ) }
    dend_27 { pt3dadd( 40.0552, 40.0878, 24.701, 0.37 ) }
    dend_27 { pt3dadd( 41.6813, 41.3289, 24.6238, 0.37 ) }
    dend_27 { pt3dadd( 43.7999, 42.7362, 24.5009, 0.37 ) }
    dend_27 { pt3dadd( 45.3525, 43.6013, 24.4058, 0.37 ) }
    dend_27 { pt3dadd( 47.1515, 44.4748, 24.2998, 0.37 ) }
    dend_27 { pt3dadd( 49.1017, 45.3151, 24.2388, 0.37 ) }
    dend_27 { pt3dadd( 51.2257, 46.1078, 24.2523, 0.37 ) }
    dend_27 { pt3dadd( 53.8176, 46.9408, 24.1742, 0.37 ) }
    dend_27 { pt3dadd( 55.3319, 47.3799, 24.0662, 0.37 ) }
    dend_27 { pt3dadd( 56.9105, 47.7728, 23.9464, 0.37 ) }
    dend_27 { pt3dadd( 58.7599, 48.1368, 23.7871, 0.37 ) }
    dend_27 { pt3dadd( 60.674, 48.4473, 23.6278, 0.37 ) }
    dend_27 { pt3dadd( 63.8692, 48.862, 23.379, 0.37 ) }
    dend_27 { pt3dadd( 65.2637, 49.0158, 23.3147, 0.37 ) }
    dend_27 { pt3dadd( 67.6669, 49.2581, 23.2505, 0.37 ) }
    dend_27 { pt3dadd( 71.8658, 49.562, 23.1859, 0.37 ) }
    dend_27 { pt3dadd( 72.715, 49.6061, 23.1788, 0.37 ) }
    dend_27 { pt3dadd( 74.6836, 49.6762, 23.1779, 0.37 ) }
    dend_27 { pt3dadd( 76.0709, 49.7162, 23.1982, 0.37 ) }
    dend_27 { pt3dadd( 79.1211, 49.8495, 23.2288, 0.37 ) }
    dend_27 { pt3dadd( 80.8294, 49.9519, 23.3061, 0.37 ) }
    dend_27 { pt3dadd( 82.6562, 50.0583, 23.4831, 0.37 ) }
    dend_27 { pt3dadd( 84.9265, 50.1811, 23.6745, 0.37 ) }
    dend_27 { pt3dadd( 86.942, 50.3016, 23.7849, 0.37 ) }
    dend_27 { pt3dadd( 89.5364, 50.4714, 23.9455, 0.37 ) }
    dend_27 { pt3dadd( 91.9665, 50.6544, 24.1483, 0.37 ) }
    dend_27 { pt3dadd( 93.76, 50.8942, 24.3853, 0.37 ) }
    dend_27 { pt3dadd( 96.3586, 51.341, 24.8454, 0.37 ) }
    dend_27 { pt3dadd( 98.3096, 51.7726, 25.2772, 0.37 ) }
    dend_27 { pt3dadd( 101.04, 52.4051, 25.9696, 0.37 ) }
    dend_27 { pt3dadd( 104.069, 53.2098, 26.8143, 0.37 ) }
    dend_27 { pt3dadd( 108.492, 54.5783, 28.0781, 0.37 ) }
    dend_27 { pt3dadd( 110.45, 55.2507, 28.7141, 0.37 ) }
    dend_27 { pt3dadd( 114.787, 56.8762, 30.419, 0.37 ) }
    dend_27 { pt3dadd( 118.088, 58.155, 31.8799, 0.37 ) }
    dend_27 { pt3dadd( 120.718, 59.1799, 33.0477, 0.37 ) }
    dend_27 { pt3dadd( 124.215, 60.4351, 34.6654, 0.37 ) }
    dend_27 { pt3dadd( 126.604, 61.123, 35.8315, 0.37 ) }
    dend_27 { pt3dadd( 129.18, 61.6837, 37.1141, 0.37 ) }
    dend_27 { pt3dadd( 132.604, 62.0471, 38.8799, 0.37 ) }
    dend_27 { pt3dadd( 135.717, 62.0069, 40.4853, 0.37 ) }
    dend_27 { pt3dadd( 137.713, 61.768, 41.5045, 0.37 ) }
    dend_27 { pt3dadd( 140.203, 61.1667, 42.7165, 0.37 ) }
    dend_27 { pt3dadd( 141.869, 60.5931, 43.4315, 0.37 ) }
    dend_27 { pt3dadd( 143.415, 59.879, 43.9859, 0.37 ) }
    dend_27 { pt3dadd( 144.827, 59.0025, 44.4758, 0.37 ) }
    // Section: dend_25, id: dend_25, parent: dend_17 (entry count 98/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -8.58802, 5.92819, 9.35, 0.86 ) }
    dend_25 { pt3dadd( -9.86169, 7.60227, 8.76654, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_25 { pt3dadd( -10.6827, 8.57063, 8.23917, 0.86 ) }
    dend_25 { pt3dadd( -11.5569, 9.53956, 7.6395, 0.86 ) }
    dend_25 { pt3dadd( -11.9438, 9.95512, 7.31602, 0.86 ) }
    dend_25 { pt3dadd( -13.2386, 11.3055, 6.01679, 0.86 ) }
    dend_25 { pt3dadd( -14.2798, 12.3402, 4.83873, 0.86 ) }
    dend_25 { pt3dadd( -14.9786, 13.0208, 3.80701, 0.86 ) }
    dend_25 { pt3dadd( -15.3139, 13.3384, 3.24082, 0.86 ) }
    dend_25 { pt3dadd( -16.3049, 14.2306, 1.5122, 0.86 ) }
    dend_25 { pt3dadd( -17.2496, 14.9978, -0.0269165, 0.73 ) }
    dend_25 { pt3dadd( -18.3884, 15.82, -1.69981, 0.73 ) }
    dend_25 { pt3dadd( -19.4737, 16.5997, -3.19865, 0.73 ) }
    dend_25 { pt3dadd( -20.472, 17.2902, -4.46869, 0.73 ) }
    dend_25 { pt3dadd( -20.9923, 17.6329, -5.06263, 0.73 ) }
    dend_25 { pt3dadd( -21.8114, 18.1701, -5.83155, 0.73 ) }
    dend_25 { pt3dadd( -22.392, 18.5831, -6.30014, 0.73 ) }
    dend_25 { pt3dadd( -23.0153, 19.0913, -6.73623, 0.73 ) }
    dend_25 { pt3dadd( -23.8402, 19.852, -7.25603, 0.73 ) }
    dend_25 { pt3dadd( -24.6071, 20.6989, -7.83232, 0.73 ) }
    dend_25 { pt3dadd( -25.1197, 21.3308, -8.29295, 0.73 ) }
    dend_25 { pt3dadd( -25.7498, 22.1713, -8.91778, 0.73 ) }
    dend_25 { pt3dadd( -26.4922, 23.1839, -9.6812, 0.73 ) }
    dend_25 { pt3dadd( -27.0726, 23.9691, -10.2366, 0.73 ) }
    dend_25 { pt3dadd( -27.8756, 25.0592, -10.9187, 0.73 ) }
    dend_25 { pt3dadd( -28.4029, 25.7794, -11.3147, 0.73 ) }
    dend_25 { pt3dadd( -29.0616, 26.6856, -11.7665, 0.73 ) }
    dend_25 { pt3dadd( -29.6429, 27.5549, -12.1202, 0.73 ) }
    dend_25 { pt3dadd( -30.488, 28.9655, -12.588, 0.73 ) }
    dend_25 { pt3dadd( -31.0289, 29.9907, -12.8623, 0.73 ) }
    dend_25 { pt3dadd( -31.4755, 31.0175, -13.083, 0.73 ) }
    dend_25 { pt3dadd( -31.7242, 31.7988, -13.2512, 0.73 ) }
    dend_25 { pt3dadd( -32.0382, 33.4675, -13.5261, 0.73 ) }
    dend_25 { pt3dadd( -32.0861, 34.1146, -13.5824, 0.73 ) }
    dend_25 { pt3dadd( -32.0496, 35.0519, -13.6741, 0.73 ) }
    dend_25 { pt3dadd( -31.7985, 37.002, -13.8903, 0.73 ) }
    dend_25 { pt3dadd( -31.5106, 38.358, -14.0599, 0.73 ) }
    dend_25 { pt3dadd( -30.9636, 40.324, -14.3355, 0.86 ) }
    dend_25 { pt3dadd( -30.514, 41.7236, -14.5452, 0.86 ) }
    dend_25 { pt3dadd( -29.8119, 44.0049, -14.8868, 0.86 ) }
    dend_25 { pt3dadd( -29.554, 45.0302, -15.0756, 0.86 ) }
    dend_25 { pt3dadd( -29.4294, 45.7988, -15.2566, 0.86 ) }
    dend_25 { pt3dadd( -29.3205, 46.9762, -15.6035, 0.86 ) }
    dend_25 { pt3dadd( -29.3125, 47.7546, -15.9133, 0.61 ) }
    dend_25 { pt3dadd( -29.4028, 48.9136, -16.4093, 0.37 ) }
    dend_25 { pt3dadd( -29.7615, 50.7139, -16.9677, 0.37 ) }
    dend_25 { pt3dadd( -29.9661, 51.3848, -17.1824, 0.37 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 45/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -8.58802, 5.92819, 9.35, 1.47 ) }
    dend_18 { pt3dadd( -9.83569, 5.69376, 10.795, 1.47 ) }
    dend_18 { pt3dadd( -12.1173, 5.26509, 13.4373, 1.47 ) }
    dend_18 { pt3dadd( -13.8505, 4.93944, 15.4446, 1.47 ) }
    dend_18 { pt3dadd( -15.731, 4.58613, 17.6224, 1.47 ) }
    // Section: dend_16, id: dend_16, parent: dend_4 (entry count 50/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.11833, -8.40295, -6.55, 0.86 ) }
    dend_16 { pt3dadd( -0.485771, -5.02985, -9.67149, 0.86 ) }
    dend_16 { pt3dadd( -0.238284, -4.03638, -10.5904, 0.86 ) }
    dend_16 { pt3dadd( 0.035685, -2.82947, -11.7008, 0.86 ) }
    dend_16 { pt3dadd( 0.321982, -1.13002, -13.2206, 0.86 ) }
    dend_16 { pt3dadd( 0.432485, 0.123387, -14.3779, 0.86 ) }
    dend_16 { pt3dadd( 0.449448, 2.11094, -16.2399, 0.73 ) }
    dend_16 { pt3dadd( 0.418658, 3.11267, -17.1419, 0.73 ) }
    dend_16 { pt3dadd( 0.430637, 3.85469, -17.9174, 0.73 ) }
    dend_16 { pt3dadd( 0.454392, 4.75226, -18.938, 0.73 ) }
    dend_16 { pt3dadd( 0.416464, 6.05716, -20.4092, 0.73 ) }
    dend_16 { pt3dadd( 0.36589, 6.88282, -21.3145, 0.73 ) }
    dend_16 { pt3dadd( 0.254991, 8.46015, -22.8987, 0.73 ) }
    dend_16 { pt3dadd( 0.217435, 10.1669, -24.4718, 0.73 ) }
    dend_16 { pt3dadd( 0.326588, 12.1384, -26.1289, 0.73 ) }
    dend_16 { pt3dadd( 0.401598, 12.9503, -26.7362, 0.73 ) }
    dend_16 { pt3dadd( 0.615576, 14.7144, -27.8698, 0.73 ) }
    dend_16 { pt3dadd( 0.744341, 15.9488, -28.6112, 0.73 ) }
    dend_16 { pt3dadd( 0.82725, 17.0751, -29.2525, 0.73 ) }
    dend_16 { pt3dadd( 0.931873, 18.4109, -29.9676, 0.73 ) }
    dend_16 { pt3dadd( 1.09114, 19.6584, -30.6875, 0.73 ) }
    dend_16 { pt3dadd( 1.38565, 21.5673, -31.9752, 0.73 ) }
    dend_16 { pt3dadd( 1.5556, 22.9846, -32.9362, 0.73 ) }
    dend_16 { pt3dadd( 1.6799, 24.8291, -34.2004, 0.73 ) }
    dend_16 { pt3dadd( 1.6728, 26.0426, -35.0197, 0.61 ) }
    dend_16 { pt3dadd( 1.65582, 28.0286, -36.4345, 0.61 ) }
    dend_16 { pt3dadd( 1.74189, 29.8567, -37.8906, 0.61 ) }
    dend_16 { pt3dadd( 1.95482, 32.0665, -39.8294, 0.61 ) }
    dend_16 { pt3dadd( 2.11034, 32.5561, -40.3369, 0.61 ) }
    dend_16 { pt3dadd( 2.77082, 32.6731, -40.9962, 0.61 ) }
    dend_16 { pt3dadd( 5.65315, 31.6785, -42.6231, 0.61 ) }
    dend_16 { pt3dadd( 8.39615, 30.3381, -43.7307, 0.61 ) }
    dend_16 { pt3dadd( 9.87679, 29.467, -44.2456, 0.61 ) }
    dend_16 { pt3dadd( 12.048, 28.0263, -44.8172, 0.61 ) }
    dend_16 { pt3dadd( 12.5022, 27.6894, -44.8686, 0.61 ) }
    dend_16 { pt3dadd( 13.5525, 26.8415, -44.8307, 0.61 ) }
    dend_16 { pt3dadd( 15.0818, 25.5407, -44.4595, 0.61 ) }
    dend_16 { pt3dadd( 16.4572, 24.5171, -43.9299, 0.61 ) }
    dend_16 { pt3dadd( 18.3565, 23.3042, -42.9761, 0.61 ) }
    dend_16 { pt3dadd( 20.1189, 22.4006, -41.9848, 0.61 ) }
    dend_16 { pt3dadd( 20.8988, 22.1526, -41.5429, 0.37 ) }
    dend_16 { pt3dadd( 21.9103, 21.9921, -40.9745, 0.37 ) }
    dend_16 { pt3dadd( 23.1349, 21.9427, -40.3027, 0.37 ) }
    dend_16 { pt3dadd( 24.3687, 21.968, -39.6589, 0.37 ) }
    dend_16 { pt3dadd( 25.5961, 22.0723, -39.0894, 0.37 ) }
    dend_16 { pt3dadd( 28.5167, 22.5365, -37.8534, 0.37 ) }
    dend_16 { pt3dadd( 30.1107, 22.7929, -37.1752, 0.37 ) }
    dend_16 { pt3dadd( 31.1401, 22.9711, -36.7369, 0.37 ) }
    dend_16 { pt3dadd( 32.1676, 23.1645, -36.303, 0.37 ) }
    dend_16 { pt3dadd( 34.5329, 23.6432, -35.343, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_16 { pt3dadd( 36.4077, 24.114, -34.5276, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 1/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -1.11833, -8.40295, -6.55, 1.59 ) }
    dend_5 { pt3dadd( -2.23766, -11.196, -5.90119, 1.59 ) }
    dend_5 { pt3dadd( -2.84698, -12.9373, -5.60678, 1.59 ) }
    dend_5 { pt3dadd( -3.3809, -14.4631, -5.3488, 1.59 ) }
    dend_5 { pt3dadd( -4.41419, -17.4159, -4.84954, 1.59 ) }
    dend_5 { pt3dadd( -4.93992, -18.9183, -4.59552, 1.59 ) }
    dend_5 { pt3dadd( -5.4431, -20.3562, -4.3524, 1.59 ) }
    dend_5 { pt3dadd( -6.13967, -22.1986, -3.71694, 1.59 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 9/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -25.3893, 16.5569, -9.41322, 0.49 ) }
    dend_2 { pt3dadd( -26.581, 17.663, -9.43164, 0.49 ) }
    dend_2 { pt3dadd( -27.538, 18.5859, -9.48176, 0.49 ) }
    dend_2 { pt3dadd( -28.2385, 19.2476, -9.53044, 0.49 ) }
    dend_2 { pt3dadd( -29.2747, 20.1198, -9.60778, 0.49 ) }
    dend_2 { pt3dadd( -30.351, 20.9586, -9.68829, 0.49 ) }
    dend_2 { pt3dadd( -31.2509, 21.6316, -9.79232, 0.49 ) }
    dend_2 { pt3dadd( -32.225, 22.2904, -9.95162, 0.49 ) }
    dend_2 { pt3dadd( -32.6576, 22.5768, -10.0435, 0.49 ) }
    dend_2 { pt3dadd( -34.0527, 23.4466, -10.3865, 0.49 ) }
    dend_2 { pt3dadd( -34.6888, 23.8175, -10.5155, 0.49 ) }
    dend_2 { pt3dadd( -35.7684, 24.4317, -10.6305, 0.49 ) }
    dend_2 { pt3dadd( -36.6176, 24.9464, -10.6739, 0.49 ) }
    dend_2 { pt3dadd( -37.2593, 25.3851, -10.6698, 0.49 ) }
    dend_2 { pt3dadd( -38.2788, 26.2154, -10.595, 0.49 ) }
    dend_2 { pt3dadd( -39.3944, 27.3357, -10.3762, 0.49 ) }
    dend_2 { pt3dadd( -40.1182, 28.1639, -10.1572, 0.49 ) }
    dend_2 { pt3dadd( -40.8297, 29.0577, -9.87513, 0.49 ) }
    dend_2 { pt3dadd( -41.3136, 29.7546, -9.65692, 0.49 ) }
    dend_2 { pt3dadd( -41.6603, 30.3704, -9.50564, 0.49 ) }
    dend_2 { pt3dadd( -42.1142, 31.382, -9.34471, 0.49 ) }
    dend_2 { pt3dadd( -42.652, 32.7462, -9.2731, 0.49 ) }
    dend_2 { pt3dadd( -42.963, 33.6569, -9.27808, 0.49 ) }
    dend_2 { pt3dadd( -43.2006, 34.4211, -9.33894, 0.49 ) }
    dend_2 { pt3dadd( -43.6944, 36.1025, -9.53797, 0.49 ) }
    dend_2 { pt3dadd( -43.9563, 37.0202, -9.70033, 0.49 ) }
    dend_2 { pt3dadd( -44.1001, 37.5764, -9.84162, 0.49 ) }
    dend_2 { pt3dadd( -44.2994, 38.5896, -10.1524, 0.49 ) }
    dend_2 { pt3dadd( -44.4765, 39.6064, -10.5145, 0.49 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 38/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -25.3893, 16.5569, -9.41322, 0.73 ) }
    dend_1 { pt3dadd( -26.9869, 17.0062, -10.0661, 0.73 ) }
    dend_1 { pt3dadd( -29.8854, 17.8977, -11.2672, 0.73 ) }
    dend_1 { pt3dadd( -31.1142, 18.2622, -11.7451, 0.73 ) }
    dend_1 { pt3dadd( -32.4963, 18.6687, -12.3023, 0.61 ) }
    dend_1 { pt3dadd( -33.694, 19.0166, -12.7783, 0.61 ) }
    dend_1 { pt3dadd( -35.039, 19.4145, -13.3808, 0.61 ) }
    dend_1 { pt3dadd( -35.6251, 19.6175, -13.6593, 0.61 ) }
    dend_1 { pt3dadd( -37.1782, 20.1756, -14.3549, 0.61 ) }
    dend_1 { pt3dadd( -38.1613, 20.5314, -14.7926, 0.61 ) }
    dend_1 { pt3dadd( -39.177, 20.8844, -15.225, 0.61 ) }
    dend_1 { pt3dadd( -41.7498, 21.8302, -16.2717, 0.61 ) }
    dend_1 { pt3dadd( -43.543, 22.5482, -16.9669, 0.61 ) }
    dend_1 { pt3dadd( -44.9262, 23.1927, -17.4624, 0.61 ) }
    dend_1 { pt3dadd( -46.3374, 23.9188, -17.9083, 0.61 ) }
    dend_1 { pt3dadd( -47.4906, 24.5594, -18.2682, 0.61 ) }
    dend_1 { pt3dadd( -49.2265, 25.5324, -18.8208, 0.61 ) }
    dend_1 { pt3dadd( -50.1974, 26.0796, -19.1069, 0.61 ) }
    dend_1 { pt3dadd( -51.7426, 26.9544, -19.5885, 0.61 ) }
    dend_1 { pt3dadd( -53.3761, 27.8922, -20.0954, 0.61 ) }
    dend_1 { pt3dadd( -55.3477, 29.0583, -20.726, 0.61 ) }
    dend_1 { pt3dadd( -57.4384, 30.3272, -21.3767, 0.61 ) }
    dend_1 { pt3dadd( -58.8717, 31.2094, -21.8, 0.49 ) }
    dend_1 { pt3dadd( -60.4602, 32.2132, -22.2421, 0.49 ) }
    dend_1 { pt3dadd( -61.438, 32.865, -22.5176, 0.49 ) }
    dend_1 { pt3dadd( -63.33, 34.2493, -23.0401, 0.49 ) }
    dend_1 { pt3dadd( -64.8229, 35.4058, -23.3953, 0.49 ) }
    dend_1 { pt3dadd( -65.835, 36.2679, -23.6476, 0.49 ) }
    dend_1 { pt3dadd( -67.5398, 37.8178, -24.1341, 0.49 ) }
    dend_1 { pt3dadd( -69.2559, 39.5162, -24.6701, 0.49 ) }
    dend_1 { pt3dadd( -69.8965, 40.1888, -24.8801, 0.49 ) }
    dend_1 { pt3dadd( -70.8929, 41.303, -25.1497, 0.49 ) }
    dend_1 { pt3dadd( -71.8504, 42.4752, -25.361, 0.49 ) }
    dend_1 { pt3dadd( -72.855, 43.8273, -25.5639, 0.49 ) }
    dend_1 { pt3dadd( -73.6471, 44.8985, -25.6883, 0.49 ) }
    dend_1 { pt3dadd( -74.394, 45.8319, -25.7714, 0.49 ) }
    dend_1 { pt3dadd( -75.7503, 47.3475, -25.9403, 0.49 ) }
    dend_1 { pt3dadd( -76.765, 48.4207, -26.0185, 0.49 ) }
    dend_1 { pt3dadd( -78.8663, 50.5296, -26.0833, 0.49 ) }
    dend_1 { pt3dadd( -80.4194, 51.9868, -26.0776, 0.49 ) }
    dend_1 { pt3dadd( -81.2674, 52.7506, -26.1214, 0.49 ) }
    dend_1 { pt3dadd( -82.3493, 53.7017, -26.2196, 0.49 ) }
    dend_1 { pt3dadd( -84.009, 55.0168, -26.4512, 0.49 ) }
    dend_1 { pt3dadd( -85.0259, 55.7232, -26.6322, 0.49 ) }
    dend_1 { pt3dadd( -86.4017, 56.5254, -27.0311, 0.49 ) }
    dend_1 { pt3dadd( -88.2503, 57.4259, -27.9063, 0.49 ) }
    dend_1 { pt3dadd( -89.9987, 58.1048, -28.9649, 0.49 ) }
    dend_1 { pt3dadd( -91.4256, 58.5882, -29.9182, 0.49 ) }
    dend_1 { pt3dadd( -93.1714, 59.0713, -31.2049, 0.49 ) }
    dend_1 { pt3dadd( -95.9727, 59.6783, -33.3749, 0.49 ) }
    dend_1 { pt3dadd( -98.5592, 60.0948, -35.5087, 0.37 ) }
    dend_1 { pt3dadd( -100.008, 60.2557, -36.7638, 0.37 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 90/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 36.8135, 4.71475, 0.0, 0.49 ) }
    axon_1 { pt3dadd( 51.6809, 6.70511, 0.0, 0.49 ) }
    axon_1 { pt3dadd( 66.5482, 8.69548, 0.0, 0.49 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 93/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 12.3334, -1.8464, -11.2598, 0.73 ) }
    dend_43 { pt3dadd( 15.0631, -1.0307, -24.3021, 0.73 ) }
    dend_43 { pt3dadd( 14.7293, -4.15208, -37.4522, 0.73 ) }
    dend_43 { pt3dadd( 14.1783, -5.25492, -38.7157, 0.73 ) }
    dend_43 { pt3dadd( 13.2907, -6.98742, -39.8785, 0.73 ) }
    dend_43 { pt3dadd( 12.2584, -8.8025, -40.9014, 0.73 ) }
    dend_43 { pt3dadd( 11.1363, -10.7734, -41.8884, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_43 { pt3dadd( 10.3123, -12.4827, -42.5197, 0.73 ) }
    dend_43 { pt3dadd( 9.835, -13.6243, -43.1598, 0.73 ) }
    dend_43 { pt3dadd( 9.07658, -15.3324, -44.0112, 0.73 ) }
    dend_43 { pt3dadd( 8.20633, -17.1637, -44.7966, 0.73 ) }
    dend_43 { pt3dadd( 7.66931, -18.364, -45.2808, 0.73 ) }
    dend_43 { pt3dadd( 6.62038, -20.5764, -46.1289, 0.73 ) }
    dend_43 { pt3dadd( 5.85335, -22.1817, -46.7313, 0.73 ) }
    dend_43 { pt3dadd( 4.87737, -24.1758, -47.4997, 0.61 ) }
    dend_43 { pt3dadd( 4.09868, -25.8491, -48.1466, 0.61 ) }
    dend_43 { pt3dadd( 3.05091, -28.218, -49.0421, 0.61 ) }
    dend_43 { pt3dadd( 2.30453, -29.9304, -49.7583, 0.61 ) }
    dend_43 { pt3dadd( 1.56224, -31.8227, -50.5399, 0.49 ) }
    dend_43 { pt3dadd( 1.12242, -33.0759, -51.1155, 0.49 ) }
    dend_43 { pt3dadd( 0.482298, -35.0765, -52.1462, 0.49 ) }
    dend_43 { pt3dadd( -0.69221, -39.1345, -54.4128, 0.49 ) }
    dend_43 { pt3dadd( -1.40657, -42.2466, -56.466, 0.49 ) }
    dend_43 { pt3dadd( -1.90433, -45.1417, -58.7257, 0.49 ) }
    dend_43 { pt3dadd( -2.35326, -49.0225, -62.0679, 0.49 ) }
    dend_43 { pt3dadd( -2.57748, -51.631, -64.5272, 0.49 ) }
    dend_43 { pt3dadd( -2.67156, -53.1353, -66.0491, 0.49 ) }
    dend_43 { pt3dadd( -2.84983, -56.6404, -69.821, 0.49 ) }
    dend_43 { pt3dadd( -3.11721, -59.4906, -72.7276, 0.49 ) }
    dend_43 { pt3dadd( -3.29325, -60.6882, -73.8546, 0.49 ) }
    dend_43 { pt3dadd( -3.67024, -62.6103, -75.1441, 0.49 ) }
    dend_43 { pt3dadd( -4.08323, -64.2599, -75.8416, 0.49 ) }
    dend_43 { pt3dadd( -4.54151, -65.9416, -76.2067, 0.49 ) }
    dend_43 { pt3dadd( -5.4671, -69.7676, -76.12, 0.49 ) }
    dend_43 { pt3dadd( -6.08415, -72.5534, -75.7616, 0.49 ) }
    dend_43 { pt3dadd( -6.63768, -75.2188, -75.3062, 0.49 ) }
    dend_43 { pt3dadd( -6.79573, -76.3442, -75.0422, 0.49 ) }
    dend_43 { pt3dadd( -6.97612, -78.5261, -74.473, 0.49 ) }
    dend_43 { pt3dadd( -6.85831, -80.6912, -73.8692, 0.49 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 32/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 12.3334, -1.8464, -11.2598, 0.86 ) }
    dend_40 { pt3dadd( 12.065, 0.755828, -11.7033, 0.86 ) }
    dend_40 { pt3dadd( 11.7821, 3.67402, -12.0242, 0.73 ) }
    dend_40 { pt3dadd( 11.7123, 4.86468, -12.114, 0.73 ) }
    dend_40 { pt3dadd( 11.6381, 6.02675, -12.147, 0.73 ) }
    dend_40 { pt3dadd( 11.4592, 8.63478, -12.0678, 0.73 ) }
    dend_40 { pt3dadd( 11.403, 10.1336, -12.0375, 0.73 ) }
    dend_40 { pt3dadd( 11.4204, 11.5417, -11.9453, 0.73 ) }
    dend_40 { pt3dadd( 11.484, 12.8964, -11.8927, 0.73 ) }
    dend_40 { pt3dadd( 11.6194, 14.441, -11.9574, 0.61 ) }
    dend_40 { pt3dadd( 11.874, 16.3178, -12.195, 0.61 ) }
    dend_40 { pt3dadd( 12.383, 18.8598, -12.7715, 0.61 ) }
    dend_40 { pt3dadd( 12.7465, 20.3733, -13.1758, 0.49 ) }
    dend_40 { pt3dadd( 13.2815, 22.2493, -13.6897, 0.49 ) }
    dend_40 { pt3dadd( 13.8039, 23.8377, -14.1263, 0.49 ) }
    dend_40 { pt3dadd( 14.4548, 25.566, -14.5812, 0.49 ) }
    dend_40 { pt3dadd( 15.0609, 26.927, -14.8788, 0.37 ) }
    dend_40 { pt3dadd( 15.5377, 27.8938, -14.9713, 0.37 ) }
    dend_40 { pt3dadd( 16.3416, 29.2485, -14.9249, 0.37 ) }
    dend_40 { pt3dadd( 16.8582, 30.0473, -14.825, 0.37 ) }
    dend_40 { pt3dadd( 17.7214, 31.2754, -14.5738, 0.37 ) }
    dend_40 { pt3dadd( 19.0254, 32.993, -14.097, 0.37 ) }
    dend_40 { pt3dadd( 19.8526, 34.0359, -13.7483, 0.37 ) }
    dend_40 { pt3dadd( 21.1718, 35.6168, -13.2032, 0.37 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 56/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 74.2645, 64.1465, -0.494497, 0.37 ) }
    dend_37 { pt3dadd( 75.6683, 63.3551, -1.30854, 0.37 ) }
    dend_37 { pt3dadd( 77.2605, 62.4575, -2.23177, 0.37 ) }
    dend_37 { pt3dadd( 77.7345, 62.1903, -2.50662, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 60/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 74.2645, 64.1465, -0.494497, 0.37 ) }
    dend_36 { pt3dadd( 75.5029, 63.8826, -1.56074, 0.37 ) }
    dend_36 { pt3dadd( 76.9286, 63.4756, -2.887, 0.37 ) }
    dend_36 { pt3dadd( 77.7323, 63.2817, -3.58697, 0.37 ) }
    dend_36 { pt3dadd( 78.7225, 63.0548, -4.48117, 0.37 ) }
    dend_36 { pt3dadd( 80.2288, 62.6973, -5.89482, 0.37 ) }
    dend_36 { pt3dadd( 82.1266, 62.2505, -7.69522, 0.37 ) }
    dend_36 { pt3dadd( 84.0109, 61.7623, -9.48148, 0.37 ) }
    dend_36 { pt3dadd( 85.5451, 61.3625, -10.8834, 0.37 ) }
    dend_36 { pt3dadd( 88.1551, 60.7847, -13.1512, 0.37 ) }
    dend_36 { pt3dadd( 90.6469, 60.3156, -15.2645, 0.37 ) }
    dend_36 { pt3dadd( 92.2847, 60.0694, -16.5726, 0.37 ) }
    dend_36 { pt3dadd( 94.1881, 59.8277, -18.0756, 0.37 ) }
    dend_36 { pt3dadd( 95.6935, 59.6028, -19.2373, 0.37 ) }
    dend_36 { pt3dadd( 97.0111, 59.3836, -20.2359, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 75/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 20.6354, -3.52306, 22.2661, 0.49 ) }
    dend_34 { pt3dadd( 22.0471, -3.2962, 23.1718, 0.49 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 77/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 20.6354, -3.52306, 22.2661, 0.61 ) }
    dend_31 { pt3dadd( 20.6438, -4.82976, 23.0545, 0.61 ) }
    dend_31 { pt3dadd( 20.6518, -5.87669, 23.6701, 0.61 ) }
    dend_31 { pt3dadd( 20.6457, -6.5807, 24.0746, 0.61 ) }
    dend_31 { pt3dadd( 20.6134, -7.46645, 24.5566, 0.61 ) }
    dend_31 { pt3dadd( 20.5468, -9.12748, 25.4108, 0.61 ) }
    dend_31 { pt3dadd( 20.4904, -10.6764, 26.2146, 0.61 ) }
    dend_31 { pt3dadd( 20.4385, -11.9359, 26.8636, 0.61 ) }
    dend_31 { pt3dadd( 20.3747, -13.1403, 27.4975, 0.49 ) }
    dend_31 { pt3dadd( 20.2456, -15.232, 28.5988, 0.49 ) }
    dend_31 { pt3dadd( 20.1562, -16.4141, 29.2098, 0.49 ) }
    dend_31 { pt3dadd( 20.0223, -17.8511, 29.9084, 0.49 ) }
    dend_31 { pt3dadd( 19.8263, -20.0366, 30.9729, 0.49 ) }
    dend_31 { pt3dadd( 19.6716, -21.7946, 31.8753, 0.49 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 91/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -15.731, 4.58613, 17.6224, 0.49 ) }
    dend_24 { pt3dadd( -13.9779, 4.92361, 19.9437, 0.49 ) }
    dend_24 { pt3dadd( -13.3354, 5.0829, 20.8759, 0.49 ) }
    dend_24 { pt3dadd( -12.2658, 5.46383, 22.733, 0.49 ) }
    dend_24 { pt3dadd( -10.153, 6.22258, 26.716, 0.49 ) }
    dend_24 { pt3dadd( -8.8136, 6.71851, 29.145, 0.49 ) }
    dend_24 { pt3dadd( -7.98792, 7.04668, 30.6064, 0.49 ) }
    dend_24 { pt3dadd( -6.56086, 7.74714, 33.3025, 0.49 ) }
    dend_24 { pt3dadd( -5.04046, 8.58435, 36.0827, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_24 { pt3dadd( -3.76427, 9.45469, 38.3427, 0.49 ) }
    dend_24 { pt3dadd( -2.65999, 10.3726, 39.981, 0.37 ) }
    dend_24 { pt3dadd( -1.73943, 11.1781, 41.0612, 0.37 ) }
    dend_24 { pt3dadd( -0.97602, 11.8023, 41.7607, 0.37 ) }
    dend_24 { pt3dadd( 0.525799, 13.0452, 42.8403, 0.37 ) }
    dend_24 { pt3dadd( 1.17737, 13.5986, 43.2315, 0.37 ) }
    dend_24 { pt3dadd( 2.6765, 15.1799, 43.9933, 0.37 ) }
    dend_24 { pt3dadd( 3.77872, 16.5409, 44.4533, 0.37 ) }
    dend_24 { pt3dadd( 4.40867, 17.4071, 44.5614, 0.37 ) }
    dend_24 { pt3dadd( 5.14466, 18.5565, 44.4955, 0.37 ) }
    dend_24 { pt3dadd( 5.6275, 19.4267, 44.3231, 0.37 ) }
    dend_24 { pt3dadd( 7.15685, 22.5489, 43.4963, 0.37 ) }
    dend_24 { pt3dadd( 7.90898, 24.2074, 42.9883, 0.37 ) }
    dend_24 { pt3dadd( 8.44396, 25.4692, 42.5235, 0.37 ) }
    dend_24 { pt3dadd( 9.03172, 26.8327, 41.9586, 0.37 ) }
    dend_24 { pt3dadd( 9.55863, 27.9479, 41.4643, 0.37 ) }
    dend_24 { pt3dadd( 10.3998, 29.5678, 40.8325, 0.37 ) }
    dend_24 { pt3dadd( 11.2227, 30.8325, 40.6364, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 18/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -15.731, 4.58613, 17.6224, 1.22 ) }
    dend_19 { pt3dadd( -17.4163, 4.06841, 17.5348, 1.22 ) }
    dend_19 { pt3dadd( -18.9298, 3.60346, 17.4562, 1.1 ) }
    dend_19 { pt3dadd( -20.7652, 3.03963, 17.3609, 1.1 ) }
    dend_19 { pt3dadd( -23.338, 2.2493, 17.2272, 1.1 ) }
    // Section: dend_13, id: dend_13, parent: dend_5 (entry count 23/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -6.13967, -22.1986, -3.71694, 0.49 ) }
    dend_13 { pt3dadd( -4.80495, -24.0305, -4.83127, 0.49 ) }
    dend_13 { pt3dadd( -3.85503, -25.1507, -5.50457, 0.49 ) }
    dend_13 { pt3dadd( -3.23306, -25.9072, -5.96801, 0.49 ) }
    dend_13 { pt3dadd( -2.522, -26.8045, -6.55378, 0.49 ) }
    dend_13 { pt3dadd( -1.95161, -27.5337, -6.93999, 0.49 ) }
    dend_13 { pt3dadd( -1.42556, -28.2395, -7.24055, 0.49 ) }
    dend_13 { pt3dadd( -0.68123, -29.3758, -7.60649, 0.37 ) }
    dend_13 { pt3dadd( -0.24069, -30.1647, -7.75985, 0.37 ) }
    dend_13 { pt3dadd( 0.163885, -30.9259, -7.85677, 0.37 ) }
    dend_13 { pt3dadd( 1.09339, -33.0394, -7.99707, 0.37 ) }
    dend_13 { pt3dadd( 1.35585, -33.7896, -8.02065, 0.37 ) }
    dend_13 { pt3dadd( 1.80799, -35.2387, -8.07048, 0.37 ) }
    dend_13 { pt3dadd( 2.59983, -38.0576, -8.14758, 0.37 ) }
    dend_13 { pt3dadd( 2.98272, -39.2899, -8.19166, 0.37 ) }
    dend_13 { pt3dadd( 3.36286, -40.5526, -8.3117, 0.37 ) }
    dend_13 { pt3dadd( 3.85423, -42.2504, -8.80516, 0.37 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.13967, -22.1986, -3.71694, 1.47 ) }
    dend_6 { pt3dadd( -7.91071, -23.803, -3.85362, 1.47 ) }
    dend_6 { pt3dadd( -9.57243, -25.4007, -3.807, 1.47 ) }
    dend_6 { pt3dadd( -11.2247, -27.108, -3.70156, 0.73 ) }
    dend_6 { pt3dadd( -12.6613, -28.6847, -3.59595, 0.86 ) }
    dend_6 { pt3dadd( -13.9713, -30.1169, -3.52943, 0.86 ) }
    dend_6 { pt3dadd( -16.8343, -33.1845, -3.46215, 0.86 ) }
    dend_6 { pt3dadd( -18.6443, -35.1399, -3.40829, 0.86 ) }
    dend_6 { pt3dadd( -20.4581, -37.1526, -3.3599, 0.86 ) }
    dend_6 { pt3dadd( -21.7772, -38.6783, -3.35436, 0.86 ) }
    dend_6 { pt3dadd( -23.3494, -40.6263, -3.50596, 0.86 ) }
    dend_6 { pt3dadd( -24.4407, -42.0584, -3.75518, 0.86 ) }
    dend_6 { pt3dadd( -25.4287, -43.3887, -4.12097, 0.86 ) }
    dend_6 { pt3dadd( -26.3778, -44.6505, -4.49778, 0.86 ) }
    dend_6 { pt3dadd( -27.8936, -46.704, -5.15248, 0.86 ) }
    dend_6 { pt3dadd( -29.5609, -49.119, -5.93745, 0.86 ) }
    dend_6 { pt3dadd( -30.94, -51.4846, -6.66308, 0.86 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 57/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 21.1718, 35.6168, -13.2032, 0.49 ) }
    dend_42 { pt3dadd( 22.8796, 34.9487, -16.3288, 0.49 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 59/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 21.1718, 35.6168, -13.2032, 0.37 ) }
    dend_41 { pt3dadd( 22.0455, 39.1077, -14.0514, 0.37 ) }
    dend_41 { pt3dadd( 22.7225, 41.8322, -14.697, 0.37 ) }
    dend_41 { pt3dadd( 23.0025, 42.9588, -14.964, 0.37 ) }
    dend_41 { pt3dadd( 23.5291, 45.0779, -15.4661, 0.37 ) }
    dend_41 { pt3dadd( 23.915, 46.6309, -15.8341, 0.37 ) }
    dend_41 { pt3dadd( 24.3642, 48.4386, -16.2625, 0.37 ) }
    dend_41 { pt3dadd( 24.6463, 49.5696, -16.3647, 0.37 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 67/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 19.6716, -21.7946, 31.8753, 0.49 ) }
    dend_33 { pt3dadd( 17.8151, -21.2512, 31.8484, 0.49 ) }
    dend_33 { pt3dadd( 16.3403, -20.6433, 31.8727, 0.49 ) }
    dend_33 { pt3dadd( 14.9796, -19.9283, 31.7473, 0.49 ) }
    dend_33 { pt3dadd( 13.3744, -18.834, 31.403, 0.37 ) }
    dend_33 { pt3dadd( 11.9582, -17.6842, 30.9619, 0.37 ) }
    dend_33 { pt3dadd( 10.929, -16.7379, 30.5389, 0.37 ) }
    dend_33 { pt3dadd( 10.3276, -15.9657, 30.1844, 0.37 ) }
    dend_33 { pt3dadd( 9.09806, -13.9612, 29.1999, 0.37 ) }
    dend_33 { pt3dadd( 8.45918, -12.7486, 28.5744, 0.37 ) }
    dend_33 { pt3dadd( 7.86467, -11.4016, 27.8885, 0.37 ) }
    dend_33 { pt3dadd( 7.46376, -10.3791, 27.3093, 0.37 ) }
    dend_33 { pt3dadd( 6.99235, -9.04284, 26.5025, 0.37 ) }
    dend_33 { pt3dadd( 6.78819, -8.24638, 26.0348, 0.37 ) }
    dend_33 { pt3dadd( 6.54075, -6.8808, 25.3206, 0.37 ) }
    dend_33 { pt3dadd( 6.42297, -5.47325, 24.5994, 0.37 ) }
    dend_33 { pt3dadd( 6.41779, -3.90078, 23.6316, 0.37 ) }
    dend_33 { pt3dadd( 6.45089, -2.65064, 22.7914, 0.37 ) }
    dend_33 { pt3dadd( 6.53901, -0.466563, 21.2489, 0.37 ) }
    dend_33 { pt3dadd( 6.5954, 0.593763, 20.4252, 0.37 ) }
    dend_33 { pt3dadd( 6.67637, 2.25752, 19.0381, 0.37 ) }
    dend_33 { pt3dadd( 6.72671, 5.63093, 16.088, 0.37 ) }
    dend_33 { pt3dadd( 6.66997, 8.328, 13.6505, 0.37 ) }
    dend_33 { pt3dadd( 6.60312, 9.42762, 12.6199, 0.37 ) }
    dend_33 { pt3dadd( 6.29466, 12.1543, 9.97074, 0.37 ) }
    dend_33 { pt3dadd( 6.02388, 13.9283, 8.20362, 0.37 ) }
    dend_33 { pt3dadd( 5.89929, 14.5443, 7.58063, 0.37 ) }
    dend_33 { pt3dadd( 5.58852, 15.7841, 6.39583, 0.37 ) }
    dend_33 { pt3dadd( 5.24911, 16.9357, 5.28716, 0.24 ) }
    dend_33 { pt3dadd( 4.78678, 18.4202, 3.93328, 0.24 ) }
    dend_33 { pt3dadd( 4.41632, 19.6004, 2.97617, 0.24 ) }
    dend_33 { pt3dadd( 4.04038, 21.056, 1.89289, 0.24 ) }
    dend_33 { pt3dadd( 3.78815, 22.5697, 0.890278, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_33 { pt3dadd( 3.70776, 23.6485, 0.291731, 0.24 ) }
    dend_33 { pt3dadd( 3.66985, 24.8499, -0.328004, 0.24 ) }
    dend_33 { pt3dadd( 3.71821, 26.3097, -0.98585, 0.24 ) }
    dend_33 { pt3dadd( 3.89761, 28.352, -1.75891, 0.24 ) }
    dend_33 { pt3dadd( 4.1692, 30.1166, -2.285, 0.24 ) }
    dend_33 { pt3dadd( 4.53802, 31.7026, -2.68494, 0.24 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 6/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 19.6716, -21.7946, 31.8753, 0.49 ) }
    dend_32 { pt3dadd( 19.8231, -22.7855, 32.2732, 0.49 ) }
    dend_32 { pt3dadd( 19.8557, -23.0698, 32.381, 0.49 ) }
    dend_32 { pt3dadd( 19.9303, -23.8054, 32.6425, 0.49 ) }
    dend_32 { pt3dadd( 20.0208, -24.6477, 32.932, 0.49 ) }
    dend_32 { pt3dadd( 20.1526, -25.7014, 33.2821, 0.49 ) }
    dend_32 { pt3dadd( 20.2868, -26.6766, 33.6029, 0.49 ) }
    dend_32 { pt3dadd( 20.4716, -27.8089, 34.0046, 0.49 ) }
    dend_32 { pt3dadd( 20.5931, -28.4133, 34.2401, 0.49 ) }
    dend_32 { pt3dadd( 20.6529, -28.6888, 34.3494, 0.49 ) }
    dend_32 { pt3dadd( 20.8008, -29.3318, 34.598, 0.49 ) }
    dend_32 { pt3dadd( 21.0303, -30.1814, 34.925, 0.49 ) }
    dend_32 { pt3dadd( 21.3298, -31.1755, 35.3179, 0.49 ) }
    dend_32 { pt3dadd( 21.6457, -32.204, 35.7382, 0.49 ) }
    dend_32 { pt3dadd( 21.8143, -32.7984, 35.9778, 0.49 ) }
    dend_32 { pt3dadd( 22.042, -33.6846, 36.317, 0.49 ) }
    dend_32 { pt3dadd( 22.2937, -34.7701, 36.6955, 0.49 ) }
    dend_32 { pt3dadd( 22.4115, -35.2749, 36.8511, 0.49 ) }
    dend_32 { pt3dadd( 22.507, -35.7291, 36.9805, 0.49 ) }
    dend_32 { pt3dadd( 22.7244, -36.8567, 37.2942, 0.49 ) }
    dend_32 { pt3dadd( 22.8093, -37.4267, 37.471, 0.49 ) }
    dend_32 { pt3dadd( 22.8337, -38.2221, 37.7259, 0.49 ) }
    dend_32 { pt3dadd( 22.7115, -39.1236, 37.9952, 0.49 ) }
    dend_32 { pt3dadd( 22.589, -39.8461, 38.2175, 0.49 ) }
    dend_32 { pt3dadd( 22.4644, -40.4282, 38.4004, 0.49 ) }
    dend_32 { pt3dadd( 22.0724, -41.6891, 38.7926, 0.49 ) }
    dend_32 { pt3dadd( 21.5863, -42.886, 39.1743, 0.49 ) }
    dend_32 { pt3dadd( 20.9194, -44.1317, 39.5689, 0.49 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 34/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -23.338, 2.2493, 17.2272, 0.37 ) }
    dend_21 { pt3dadd( -26.6152, -1.07042, 18.817, 0.37 ) }
    dend_21 { pt3dadd( -27.4452, -1.94892, 19.1809, 0.37 ) }
    dend_21 { pt3dadd( -28.8587, -3.47611, 19.9283, 0.37 ) }
    dend_21 { pt3dadd( -29.7183, -4.43138, 20.3385, 0.37 ) }
    dend_21 { pt3dadd( -30.7151, -5.48987, 20.7351, 0.37 ) }
    dend_21 { pt3dadd( -32.9203, -7.65428, 21.418, 0.37 ) }
    dend_21 { pt3dadd( -33.7403, -8.37541, 21.5701, 0.37 ) }
    dend_21 { pt3dadd( -35.9855, -10.3873, 22.0163, 0.37 ) }
    dend_21 { pt3dadd( -37.4117, -11.7102, 22.3143, 0.37 ) }
    dend_21 { pt3dadd( -38.8372, -13.0105, 22.5997, 0.37 ) }
    dend_21 { pt3dadd( -40.6658, -14.6477, 22.9724, 0.37 ) }
    dend_21 { pt3dadd( -42.7736, -16.5142, 23.3051, 0.37 ) }
    dend_21 { pt3dadd( -44.8497, -18.4657, 23.6577, 0.37 ) }
    dend_21 { pt3dadd( -46.5645, -20.1452, 23.942, 0.37 ) }
    dend_21 { pt3dadd( -47.7833, -21.3392, 24.2245, 0.37 ) }
    dend_21 { pt3dadd( -49.5182, -23.0537, 24.6751, 0.37 ) }
    dend_21 { pt3dadd( -50.6655, -24.1488, 24.977, 0.37 ) }
    dend_21 { pt3dadd( -51.8905, -25.1525, 25.2446, 0.37 ) }
    dend_21 { pt3dadd( -52.9798, -25.8619, 25.4806, 0.37 ) }
    dend_21 { pt3dadd( -54.7957, -26.7742, 25.8805, 0.37 ) }
    dend_21 { pt3dadd( -56.0418, -27.3072, 26.1163, 0.37 ) }
    dend_21 { pt3dadd( -58.3816, -28.2193, 26.4466, 0.37 ) }
    dend_21 { pt3dadd( -60.5499, -28.9925, 26.8358, 0.37 ) }
    dend_21 { pt3dadd( -62.1525, -29.559, 27.205, 0.37 ) }
    dend_21 { pt3dadd( -63.7349, -30.1626, 27.643, 0.37 ) }
    dend_21 { pt3dadd( -65.7509, -31.0132, 28.2584, 0.37 ) }
    dend_21 { pt3dadd( -68.5082, -32.2504, 29.1584, 0.37 ) }
    dend_21 { pt3dadd( -70.8742, -33.3545, 29.9413, 0.37 ) }
    dend_21 { pt3dadd( -73.1269, -34.6556, 30.6593, 0.37 ) }
    dend_21 { pt3dadd( -74.692, -35.6859, 31.099, 0.37 ) }
    dend_21 { pt3dadd( -76.3522, -36.8712, 31.4789, 0.37 ) }
    dend_21 { pt3dadd( -78.3897, -38.4342, 31.9232, 0.37 ) }
    dend_21 { pt3dadd( -80.0029, -39.7648, 32.1852, 0.37 ) }
    dend_21 { pt3dadd( -83.1133, -42.4324, 32.4639, 0.37 ) }
    dend_21 { pt3dadd( -84.2606, -43.4458, 32.566, 0.37 ) }
    dend_21 { pt3dadd( -86.3249, -45.2536, 32.8205, 0.37 ) }
    dend_21 { pt3dadd( -89.6626, -48.0006, 33.3173, 0.37 ) }
    dend_21 { pt3dadd( -92.1403, -49.8949, 33.7901, 0.37 ) }
    dend_21 { pt3dadd( -93.4054, -50.7565, 34.0671, 0.37 ) }
    dend_21 { pt3dadd( -96.0998, -52.3175, 34.666, 0.37 ) }
    dend_21 { pt3dadd( -98.6618, -53.6792, 35.2427, 0.37 ) }
    dend_21 { pt3dadd( -100.923, -54.7444, 35.7064, 0.37 ) }
    dend_21 { pt3dadd( -103.459, -55.7645, 36.155, 0.37 ) }
    dend_21 { pt3dadd( -104.798, -56.2799, 36.4087, 0.37 ) }
    dend_21 { pt3dadd( -107.793, -57.4117, 37.0326, 0.37 ) }
    dend_21 { pt3dadd( -110.498, -58.3765, 37.5875, 0.37 ) }
    dend_21 { pt3dadd( -113.112, -59.3391, 38.1968, 0.37 ) }
    dend_21 { pt3dadd( -115.471, -60.222, 38.813, 0.37 ) }
    dend_21 { pt3dadd( -117.23, -60.8664, 39.2919, 0.37 ) }
    dend_21 { pt3dadd( -119.635, -61.7552, 39.962, 0.37 ) }
    dend_21 { pt3dadd( -121.534, -62.436, 40.5468, 0.37 ) }
    dend_21 { pt3dadd( -123.556, -63.1622, 41.1766, 0.37 ) }
    dend_21 { pt3dadd( -125.853, -63.9946, 41.9039, 0.37 ) }
    dend_21 { pt3dadd( -128.275, -64.8574, 42.5677, 0.37 ) }
    dend_21 { pt3dadd( -130.503, -65.5899, 43.0799, 0.37 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 90/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -23.338, 2.2493, 17.2272, 0.86 ) }
    dend_20 { pt3dadd( -24.982, 3.09014, 17.3221, 0.86 ) }
    dend_20 { pt3dadd( -25.5921, 3.40015, 17.3771, 0.86 ) }
    dend_20 { pt3dadd( -27.0639, 4.11736, 17.5781, 0.73 ) }
    dend_20 { pt3dadd( -28.3434, 4.72082, 17.7932, 0.73 ) }
    dend_20 { pt3dadd( -29.2687, 5.16295, 17.9654, 0.73 ) }
    dend_20 { pt3dadd( -30.4581, 5.76116, 18.2158, 0.73 ) }
    dend_20 { pt3dadd( -31.9763, 6.5087, 18.5685, 0.73 ) }
    dend_20 { pt3dadd( -32.9925, 7.03749, 18.7937, 0.73 ) }
    dend_20 { pt3dadd( -34.1757, 7.72875, 19.0086, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_20 { pt3dadd( -35.4902, 8.54244, 19.2413, 0.73 ) }
    dend_20 { pt3dadd( -36.894, 9.47573, 19.4761, 0.61 ) }
    dend_20 { pt3dadd( -37.8386, 10.1531, 19.6193, 0.61 ) }
    dend_20 { pt3dadd( -39.1138, 11.1065, 19.8065, 0.61 ) }
    dend_20 { pt3dadd( -41.0231, 12.5731, 20.0819, 0.61 ) }
    dend_20 { pt3dadd( -42.9883, 14.0536, 20.3352, 0.61 ) }
    dend_20 { pt3dadd( -44.4928, 15.1079, 20.6099, 0.61 ) }
    dend_20 { pt3dadd( -46.3949, 16.3662, 21.0397, 0.61 ) }
    dend_20 { pt3dadd( -47.5597, 17.1017, 21.4143, 0.61 ) }
    dend_20 { pt3dadd( -48.4427, 17.6451, 21.8008, 0.61 ) }
    dend_20 { pt3dadd( -50.7025, 19.0546, 22.8526, 0.61 ) }
    dend_20 { pt3dadd( -52.89, 20.4478, 23.9258, 0.61 ) }
    dend_20 { pt3dadd( -53.9901, 21.173, 24.5172, 0.61 ) }
    dend_20 { pt3dadd( -55.9877, 22.5584, 25.6341, 0.61 ) }
    dend_20 { pt3dadd( -57.4731, 23.6677, 26.477, 0.61 ) }
    dend_20 { pt3dadd( -59.9283, 25.669, 27.8427, 0.61 ) }
    dend_20 { pt3dadd( -61.5432, 27.1052, 28.7139, 0.61 ) }
    dend_20 { pt3dadd( -62.7045, 28.183, 29.2547, 0.61 ) }
    dend_20 { pt3dadd( -63.9616, 29.3051, 29.7997, 0.61 ) }
    dend_20 { pt3dadd( -65.4585, 30.5599, 30.3423, 0.61 ) }
    dend_20 { pt3dadd( -66.7456, 31.5742, 30.7881, 0.61 ) }
    dend_20 { pt3dadd( -68.1013, 32.5465, 31.2529, 0.61 ) }
    dend_20 { pt3dadd( -69.5699, 33.5448, 31.6707, 0.61 ) }
    dend_20 { pt3dadd( -71.2346, 34.6369, 32.1122, 0.61 ) }
    dend_20 { pt3dadd( -73.5833, 36.1826, 32.7233, 0.61 ) }
    dend_20 { pt3dadd( -74.4315, 36.7604, 32.9345, 0.61 ) }
    dend_20 { pt3dadd( -75.8665, 37.802, 33.298, 0.61 ) }
    dend_20 { pt3dadd( -76.9958, 38.6954, 33.5651, 0.61 ) }
    dend_20 { pt3dadd( -78.4412, 39.9266, 33.8807, 0.61 ) }
    dend_20 { pt3dadd( -79.8472, 41.1997, 34.1801, 0.61 ) }
    dend_20 { pt3dadd( -81.163, 42.4183, 34.4553, 0.61 ) }
    dend_20 { pt3dadd( -82.3164, 43.4854, 34.6826, 0.61 ) }
    dend_20 { pt3dadd( -83.4756, 44.5245, 34.8973, 0.61 ) }
    dend_20 { pt3dadd( -85.2017, 45.8642, 35.1601, 0.61 ) }
    dend_20 { pt3dadd( -86.5729, 46.7853, 35.3327, 0.61 ) }
    dend_20 { pt3dadd( -88.6435, 48.0283, 35.5611, 0.61 ) }
    dend_20 { pt3dadd( -89.8271, 48.6749, 35.7343, 0.61 ) }
    dend_20 { pt3dadd( -91.8487, 49.7187, 36.1141, 0.61 ) }
    dend_20 { pt3dadd( -94.122, 50.861, 36.6683, 0.61 ) }
    dend_20 { pt3dadd( -95.8898, 51.6963, 37.1849, 0.61 ) }
    dend_20 { pt3dadd( -97.2695, 52.3005, 37.6307, 0.61 ) }
    dend_20 { pt3dadd( -99.6393, 53.2343, 38.4444, 0.61 ) }
    dend_20 { pt3dadd( -101.337, 53.8451, 39.0399, 0.61 ) }
    dend_20 { pt3dadd( -103.255, 54.5111, 39.7286, 0.61 ) }
    dend_20 { pt3dadd( -104.613, 54.9671, 40.22, 0.61 ) }
    dend_20 { pt3dadd( -105.638, 55.2724, 40.5438, 0.61 ) }
    dend_20 { pt3dadd( -107.074, 55.6604, 40.848, 0.61 ) }
    dend_20 { pt3dadd( -108.82, 56.0988, 41.0309, 0.61 ) }
    dend_20 { pt3dadd( -110.338, 56.452, 41.1186, 0.61 ) }
    dend_20 { pt3dadd( -111.712, 56.7652, 41.1317, 0.61 ) }
    dend_20 { pt3dadd( -113.339, 57.1347, 41.1537, 0.61 ) }
    dend_20 { pt3dadd( -115.161, 57.5214, 41.1685, 0.61 ) }
    dend_20 { pt3dadd( -116.159, 57.7412, 41.1554, 0.61 ) }
    dend_20 { pt3dadd( -118.648, 58.2804, 41.0729, 0.61 ) }
    dend_20 { pt3dadd( -120.118, 58.5647, 41.0004, 0.61 ) }
    dend_20 { pt3dadd( -122.053, 58.8754, 40.894, 0.61 ) }
    dend_20 { pt3dadd( -123.45, 59.0671, 40.8435, 0.61 ) }
    dend_20 { pt3dadd( -124.941, 59.2743, 40.8156, 0.61 ) }
    dend_20 { pt3dadd( -125.781, 59.4024, 40.7867, 0.61 ) }
    dend_20 { pt3dadd( -127.817, 59.7269, 40.6969, 0.61 ) }
    dend_20 { pt3dadd( -130.288, 60.1022, 40.6063, 0.61 ) }
    dend_20 { pt3dadd( -132.091, 60.3611, 40.5341, 0.61 ) }
    dend_20 { pt3dadd( -133.09, 60.4882, 40.5154, 0.61 ) }
    dend_20 { pt3dadd( -134.48, 60.6377, 40.5106, 0.61 ) }
    dend_20 { pt3dadd( -135.448, 60.7438, 40.5581, 0.61 ) }
    dend_20 { pt3dadd( -137.354, 60.9711, 40.736, 0.61 ) }
    dend_20 { pt3dadd( -138.864, 61.1872, 40.9504, 0.61 ) }
    dend_20 { pt3dadd( -140.608, 61.4812, 41.2646, 0.49 ) }
    dend_20 { pt3dadd( -141.68, 61.7011, 41.4961, 0.49 ) }
    dend_20 { pt3dadd( -144.201, 62.3183, 42.0834, 0.49 ) }
    dend_20 { pt3dadd( -145.77, 62.7628, 42.4531, 0.49 ) }
    dend_20 { pt3dadd( -147.478, 63.3065, 42.878, 0.49 ) }
    dend_20 { pt3dadd( -148.766, 63.7297, 43.1186, 0.49 ) }
    dend_20 { pt3dadd( -150.62, 64.3387, 43.3307, 0.37 ) }
    dend_20 { pt3dadd( -153.018, 65.138, 43.4448, 0.37 ) }
    dend_20 { pt3dadd( -154.788, 65.7306, 43.3803, 0.37 ) }
    dend_20 { pt3dadd( -155.941, 66.1127, 43.2847, 0.37 ) }
    dend_20 { pt3dadd( -158.866, 67.0231, 42.8757, 0.37 ) }
    dend_20 { pt3dadd( -161.155, 67.6886, 42.4633, 0.37 ) }
    dend_20 { pt3dadd( -162.466, 68.0503, 42.1772, 0.37 ) }
    dend_20 { pt3dadd( -163.919, 68.4254, 41.8492, 0.37 ) }
    dend_20 { pt3dadd( -165.474, 68.7845, 41.4856, 0.37 ) }
    dend_20 { pt3dadd( -166.999, 69.0509, 41.1451, 0.37 ) }
    dend_20 { pt3dadd( -168.078, 69.2217, 40.9452, 0.37 ) }
    dend_20 { pt3dadd( -169.575, 69.4034, 40.6505, 0.37 ) }
    dend_20 { pt3dadd( -172.574, 69.6381, 40.0572, 0.37 ) }
    dend_20 { pt3dadd( -173.995, 69.6961, 39.7982, 0.37 ) }
    dend_20 { pt3dadd( -176.624, 69.6986, 39.3453, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 88/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.85423, -42.2504, -8.80516, 0.37 ) }
    dend_15 { pt3dadd( 3.50652, -43.2773, -8.86578, 0.37 ) }
    dend_15 { pt3dadd( 3.34611, -43.7511, -8.89375, 0.37 ) }
    dend_15 { pt3dadd( 3.02219, -44.7078, -8.95023, 0.37 ) }
    dend_15 { pt3dadd( 2.65833, -45.7824, -9.01366, 0.37 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 93/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 3.85423, -42.2504, -8.80516, 0.37 ) }
    dend_14 { pt3dadd( 5.20438, -44.8227, -8.72844, 0.37 ) }
    dend_14 { pt3dadd( 5.56044, -45.6259, -8.6996, 0.37 ) }
    dend_14 { pt3dadd( 5.6682, -45.8978, -8.68647, 0.37 ) }
    dend_14 { pt3dadd( 6.33949, -47.5917, -8.6047, 0.37 ) }
    dend_14 { pt3dadd( 6.86247, -48.9114, -8.541, 0.37 ) }
    dend_14 { pt3dadd( 7.4985, -50.5163, -8.46353, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( 7.77485, -51.6631, -8.3741, 0.37 ) }
    dend_14 { pt3dadd( 8.03288, -52.8001, -8.30562, 0.37 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 2/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -30.94, -51.4846, -6.66308, 0.49 ) }
    dend_12 { pt3dadd( -33.9585, -52.2975, -9.07092, 0.49 ) }
    dend_12 { pt3dadd( -35.2886, -52.7005, -10.1797, 0.49 ) }
    dend_12 { pt3dadd( -36.8231, -53.158, -11.4583, 0.49 ) }
    dend_12 { pt3dadd( -38.6278, -53.6702, -12.9693, 0.49 ) }
    dend_12 { pt3dadd( -40.1353, -54.0935, -14.3383, 0.49 ) }
    dend_12 { pt3dadd( -41.5347, -54.4799, -15.6576, 0.49 ) }
    dend_12 { pt3dadd( -42.9555, -54.899, -16.9394, 0.49 ) }
    dend_12 { pt3dadd( -44.8677, -55.6156, -18.957, 0.49 ) }
    dend_12 { pt3dadd( -45.3654, -55.8223, -19.554, 0.24 ) }
    dend_12 { pt3dadd( -46.51, -56.3831, -21.112, 0.24 ) }
    dend_12 { pt3dadd( -47.1358, -56.7177, -22.0736, 0.37 ) }
    dend_12 { pt3dadd( -48.1816, -57.3553, -23.7768, 0.37 ) }
    dend_12 { pt3dadd( -49.042, -57.9023, -25.208, 0.37 ) }
    dend_12 { pt3dadd( -50.1783, -58.643, -27.1261, 0.37 ) }
    dend_12 { pt3dadd( -50.9251, -59.0985, -28.2953, 0.37 ) }
    dend_12 { pt3dadd( -52.171, -59.7731, -30.1115, 0.37 ) }
    dend_12 { pt3dadd( -53.1476, -60.2271, -31.511, 0.37 ) }
    dend_12 { pt3dadd( -54.6737, -60.8018, -33.6262, 0.37 ) }
    dend_12 { pt3dadd( -55.5587, -61.1048, -34.8214, 0.37 ) }
    dend_12 { pt3dadd( -56.3121, -61.3525, -35.8638, 0.37 ) }
    dend_12 { pt3dadd( -57.3176, -61.6058, -37.1926, 0.37 ) }
    dend_12 { pt3dadd( -58.1444, -61.7399, -38.1843, 0.37 ) }
    dend_12 { pt3dadd( -59.0067, -61.8638, -39.2406, 0.37 ) }
    dend_12 { pt3dadd( -60.0254, -61.9982, -40.4607, 0.37 ) }
    dend_12 { pt3dadd( -60.966, -62.1253, -41.5373, 0.37 ) }
    dend_12 { pt3dadd( -62.0028, -62.2767, -42.6136, 0.37 ) }
    dend_12 { pt3dadd( -63.0271, -62.4451, -43.5627, 0.37 ) }
    dend_12 { pt3dadd( -65.2649, -62.8737, -45.4572, 0.37 ) }
    dend_12 { pt3dadd( -66.7119, -63.2174, -46.6422, 0.37 ) }
    dend_12 { pt3dadd( -68.9226, -63.8105, -48.3891, 0.37 ) }
    dend_12 { pt3dadd( -70.8134, -64.3622, -49.8205, 0.37 ) }
    dend_12 { pt3dadd( -71.8677, -64.7358, -50.5941, 0.37 ) }
    dend_12 { pt3dadd( -73.0267, -65.2206, -51.4803, 0.37 ) }
    dend_12 { pt3dadd( -74.6319, -65.9117, -52.6676, 0.37 ) }
    dend_12 { pt3dadd( -76.1974, -66.6923, -53.9162, 0.37 ) }
    dend_12 { pt3dadd( -77.9896, -67.6838, -55.423, 0.37 ) }
    dend_12 { pt3dadd( -79.3405, -68.4873, -56.6154, 0.37 ) }
    dend_12 { pt3dadd( -81.4713, -69.8493, -58.4936, 0.37 ) }
    dend_12 { pt3dadd( -83.3403, -71.1159, -60.0842, 0.37 ) }
    dend_12 { pt3dadd( -84.1627, -71.6714, -60.7486, 0.37 ) }
    dend_12 { pt3dadd( -85.5104, -72.6027, -61.8235, 0.37 ) }
    dend_12 { pt3dadd( -87.2156, -73.7678, -63.1791, 0.37 ) }
    dend_12 { pt3dadd( -89.0633, -74.9047, -64.5813, 0.37 ) }
    dend_12 { pt3dadd( -90.4726, -75.6426, -65.5718, 0.37 ) }
    dend_12 { pt3dadd( -91.8463, -76.2341, -66.5304, 0.37 ) }
    dend_12 { pt3dadd( -93.3508, -76.6882, -67.5608, 0.37 ) }
    dend_12 { pt3dadd( -95.1488, -77.0243, -68.7982, 0.37 ) }
    dend_12 { pt3dadd( -96.8803, -77.1363, -69.9805, 0.37 ) }
    dend_12 { pt3dadd( -99.4453, -77.0511, -71.688, 0.37 ) }
    dend_12 { pt3dadd( -101.579, -76.852, -73.0745, 0.37 ) }
    dend_12 { pt3dadd( -103.158, -76.6584, -74.1549, 0.37 ) }
    dend_12 { pt3dadd( -104.218, -76.4853, -74.8953, 0.24 ) }
    dend_12 { pt3dadd( -105.926, -76.1342, -76.0658, 0.24 ) }
    dend_12 { pt3dadd( -107.375, -75.816, -77.08, 0.24 ) }
    dend_12 { pt3dadd( -108.73, -75.5369, -78.0443, 0.24 ) }
    dend_12 { pt3dadd( -110.953, -75.0956, -79.6967, 0.24 ) }
    dend_12 { pt3dadd( -112.083, -74.9014, -80.5844, 0.24 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 60/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -30.94, -51.4846, -6.66308, 0.86 ) }
    dend_7 { pt3dadd( -31.6233, -52.6752, -6.7922, 0.86 ) }
    dend_7 { pt3dadd( -32.2182, -53.6463, -6.90847, 0.86 ) }
    dend_7 { pt3dadd( -33.0258, -54.9239, -7.06867, 0.86 ) }
    dend_7 { pt3dadd( -33.5869, -55.7789, -7.18189, 0.86 ) }
    dend_7 { pt3dadd( -34.4365, -57.0973, -7.35189, 0.86 ) }
    dend_7 { pt3dadd( -34.894, -57.8542, -7.45901, 0.86 ) }
    dend_7 { pt3dadd( -35.6771, -59.1419, -7.66711, 0.86 ) }
    dend_7 { pt3dadd( -36.4065, -60.3997, -7.87614, 0.86 ) }
    dend_7 { pt3dadd( -36.9728, -61.4581, -8.04574, 0.86 ) }
    dend_7 { pt3dadd( -37.4872, -62.4653, -8.19804, 0.86 ) }
    dend_7 { pt3dadd( -38.2026, -63.8661, -8.38307, 0.86 ) }
    dend_7 { pt3dadd( -38.8642, -65.1716, -8.5451, 0.86 ) }
    dend_7 { pt3dadd( -39.8061, -67.0668, -8.76156, 0.86 ) }
    dend_7 { pt3dadd( -40.4048, -68.2929, -8.8889, 0.86 ) }
    dend_7 { pt3dadd( -40.9856, -69.5221, -8.99904, 0.86 ) }
    dend_7 { pt3dadd( -42.0218, -71.7629, -9.19863, 0.86 ) }
    dend_7 { pt3dadd( -42.8472, -73.6585, -9.34821, 0.86 ) }
    dend_7 { pt3dadd( -43.3037, -74.8182, -9.44094, 0.86 ) }
    dend_7 { pt3dadd( -43.5616, -75.5497, -9.4993, 0.86 ) }
    dend_7 { pt3dadd( -43.9767, -76.8444, -9.60353, 0.86 ) }
    dend_7 { pt3dadd( -44.5194, -78.6607, -9.75573, 0.86 ) }
    dend_7 { pt3dadd( -45.108, -80.8429, -9.93079, 0.86 ) }
    dend_7 { pt3dadd( -45.5473, -82.3938, -10.0468, 0.86 ) }
    dend_7 { pt3dadd( -45.8728, -83.4713, -10.1317, 0.86 ) }
    dend_7 { pt3dadd( -46.176, -84.4376, -10.1779, 0.86 ) }
    dend_7 { pt3dadd( -46.6012, -85.7875, -10.2024, 0.86 ) }
    dend_7 { pt3dadd( -46.9406, -86.772, -10.1956, 0.86 ) }
    dend_7 { pt3dadd( -47.6724, -88.6009, -10.2132, 0.86 ) }
    dend_7 { pt3dadd( -47.9826, -89.3359, -10.2298, 0.86 ) }
    dend_7 { pt3dadd( -48.724, -91.0433, -10.2923, 0.86 ) }
    dend_7 { pt3dadd( -49.292, -92.2877, -10.3377, 0.86 ) }
    dend_7 { pt3dadd( -50.1683, -94.178, -10.3949, 0.86 ) }
    dend_7 { pt3dadd( -50.712, -95.3348, -10.4279, 0.86 ) }
    dend_7 { pt3dadd( -51.3462, -96.6975, -10.4703, 0.86 ) }
    dend_7 { pt3dadd( -51.7624, -97.6312, -10.5136, 0.86 ) }
    dend_7 { pt3dadd( -52.3451, -99.0196, -10.6054, 0.86 ) }
    dend_7 { pt3dadd( -52.9243, -100.407, -10.6822, 0.86 ) }
    dend_7 { pt3dadd( -53.4332, -101.667, -10.7417, 0.86 ) }
    dend_7 { pt3dadd( -53.8868, -102.812, -10.8205, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( -54.3665, -103.976, -10.935, 0.86 ) }
    dend_7 { pt3dadd( -55.0972, -105.792, -11.1316, 0.86 ) }
    dend_7 { pt3dadd( -55.7777, -107.575, -11.3314, 0.86 ) }
    dend_7 { pt3dadd( -56.3487, -109.178, -11.5642, 0.86 ) }
    dend_7 { pt3dadd( -56.8954, -110.85, -11.8346, 0.86 ) }
    dend_7 { pt3dadd( -57.3308, -112.334, -12.0744, 0.86 ) }
    dend_7 { pt3dadd( -57.5262, -113.088, -12.1898, 0.86 ) }
    dend_7 { pt3dadd( -57.7546, -114.098, -12.3413, 0.86 ) }
    dend_7 { pt3dadd( -58.2466, -116.371, -12.5793, 0.86 ) }
    dend_7 { pt3dadd( -58.6491, -118.23, -12.8156, 0.86 ) }
    dend_7 { pt3dadd( -59.2544, -120.755, -13.1768, 0.86 ) }
    dend_7 { pt3dadd( -59.7008, -122.492, -13.4673, 0.86 ) }
    dend_7 { pt3dadd( -60.0649, -123.867, -13.7163, 0.86 ) }
    dend_7 { pt3dadd( -60.6717, -126.093, -14.1151, 0.86 ) }
    dend_7 { pt3dadd( -61.4359, -128.629, -14.5295, 0.86 ) }
    dend_7 { pt3dadd( -61.896, -130.073, -14.7949, 0.86 ) }
    dend_7 { pt3dadd( -62.244, -131.162, -15.0048, 0.86 ) }
    dend_7 { pt3dadd( -62.7215, -132.795, -15.2895, 0.86 ) }
    dend_7 { pt3dadd( -63.0084, -133.871, -15.4481, 0.86 ) }
    dend_7 { pt3dadd( -63.5474, -135.912, -15.7084, 0.61 ) }
    dend_7 { pt3dadd( -63.9546, -137.398, -15.7969, 0.61 ) }
    dend_7 { pt3dadd( -64.2117, -138.378, -15.8453, 0.61 ) }
    dend_7 { pt3dadd( -64.7926, -140.74, -15.9787, 0.61 ) }
    dend_7 { pt3dadd( -65.0766, -141.937, -16.0743, 0.61 ) }
    dend_7 { pt3dadd( -65.4011, -143.41, -16.2201, 0.61 ) }
    dend_7 { pt3dadd( -65.6071, -144.401, -16.3305, 0.61 ) }
    dend_7 { pt3dadd( -65.8927, -145.712, -16.49, 0.61 ) }
    dend_7 { pt3dadd( -66.5293, -148.413, -16.8381, 0.61 ) }
    dend_7 { pt3dadd( -66.9386, -149.898, -17.045, 0.61 ) }
    dend_7 { pt3dadd( -67.2604, -150.998, -17.2238, 0.61 ) }
    dend_7 { pt3dadd( -67.7719, -152.611, -17.5146, 0.61 ) }
    dend_7 { pt3dadd( -68.3027, -154.045, -17.8056, 0.49 ) }
    dend_7 { pt3dadd( -68.8108, -155.271, -18.0715, 0.49 ) }
    dend_7 { pt3dadd( -69.4945, -156.781, -18.4171, 0.49 ) }
    dend_7 { pt3dadd( -69.9802, -157.822, -18.6644, 0.49 ) }
    dend_7 { pt3dadd( -70.4744, -158.85, -18.9094, 0.49 ) }
    dend_7 { pt3dadd( -71.1501, -160.305, -19.2293, 0.49 ) }
    dend_7 { pt3dadd( -71.5595, -161.232, -19.3994, 0.49 ) }
    dend_7 { pt3dadd( -71.9296, -162.069, -19.4958, 0.49 ) }
    dend_7 { pt3dadd( -72.3087, -163.115, -19.5713, 0.49 ) }
    dend_7 { pt3dadd( -72.7542, -164.5, -19.623, 0.49 ) }
    dend_7 { pt3dadd( -73.181, -165.944, -19.6743, 0.49 ) }
    dend_7 { pt3dadd( -73.594, -167.382, -19.7262, 0.49 ) }
    dend_7 { pt3dadd( -74.1547, -169.332, -19.8091, 0.49 ) }
    dend_7 { pt3dadd( -74.7539, -171.577, -19.9452, 0.49 ) }
    dend_7 { pt3dadd( -75.0033, -172.679, -20.0359, 0.49 ) }
    dend_7 { pt3dadd( -75.2999, -174.181, -20.1938, 0.49 ) }
    dend_7 { pt3dadd( -75.5769, -175.765, -20.3619, 0.49 ) }
    dend_7 { pt3dadd( -75.7419, -176.866, -20.4749, 0.49 ) }
    dend_7 { pt3dadd( -75.9888, -178.742, -20.6662, 0.49 ) }
    dend_7 { pt3dadd( -76.1906, -180.041, -20.7854, 0.49 ) }
    dend_7 { pt3dadd( -76.2995, -180.807, -20.8616, 0.49 ) }
    dend_7 { pt3dadd( -76.4645, -182.063, -20.9867, 0.49 ) }
    dend_7 { pt3dadd( -76.6505, -183.483, -21.1254, 0.49 ) }
    dend_7 { pt3dadd( -76.8836, -185.178, -21.2755, 0.49 ) }
    dend_7 { pt3dadd( -77.0567, -186.439, -21.3539, 0.49 ) }
    dend_7 { pt3dadd( -77.2776, -187.894, -21.4879, 0.49 ) }
    dend_7 { pt3dadd( -77.4847, -189.218, -21.6597, 0.49 ) }
    dend_7 { pt3dadd( -77.679, -190.322, -21.8439, 0.49 ) }
    dend_7 { pt3dadd( -77.9925, -191.959, -22.1884, 0.49 ) }
    dend_7 { pt3dadd( -78.317, -193.431, -22.5532, 0.49 ) }
    dend_7 { pt3dadd( -78.9497, -195.876, -23.2151, 0.49 ) }
    dend_7 { pt3dadd( -79.2728, -196.924, -23.5267, 0.49 ) }
    dend_7 { pt3dadd( -79.6111, -197.881, -23.828, 0.49 ) }
    dend_7 { pt3dadd( -80.0456, -198.948, -24.1446, 0.49 ) }
    dend_7 { pt3dadd( -80.6009, -200.146, -24.511, 0.49 ) }
    dend_7 { pt3dadd( -81.1873, -201.294, -24.8335, 0.49 ) }
    dend_7 { pt3dadd( -81.6366, -202.183, -25.0181, 0.49 ) }
    dend_7 { pt3dadd( -82.0108, -203.006, -25.157, 0.49 ) }
    dend_7 { pt3dadd( -82.7342, -204.845, -25.4841, 0.49 ) }
    dend_7 { pt3dadd( -83.2857, -206.467, -25.774, 0.49 ) }
    dend_7 { pt3dadd( -83.9058, -208.569, -26.1688, 0.49 ) }
    dend_7 { pt3dadd( -84.217, -209.758, -26.3972, 0.49 ) }
    dend_7 { pt3dadd( -84.6108, -211.415, -26.6936, 0.49 ) }
    dend_7 { pt3dadd( -84.9103, -212.885, -26.923, 0.49 ) }
    dend_7 { pt3dadd( -85.2321, -214.877, -27.206, 0.49 ) }
    dend_7 { pt3dadd( -85.5548, -216.885, -27.4432, 0.49 ) }
    dend_7 { pt3dadd( -85.6792, -217.823, -27.5781, 0.49 ) }
    dend_7 { pt3dadd( -85.8902, -219.71, -27.9812, 0.49 ) }
    dend_7 { pt3dadd( -86.0263, -221.328, -28.4106, 0.49 ) }
    dend_7 { pt3dadd( -86.0923, -223.505, -29.0629, 0.49 ) }
    dend_7 { pt3dadd( -86.0096, -226.169, -29.9599, 0.49 ) }
    dend_7 { pt3dadd( -85.7481, -228.52, -30.8583, 0.49 ) }
    dend_7 { pt3dadd( -85.2013, -231.489, -32.0786, 0.49 ) }
    dend_7 { pt3dadd( -84.7057, -233.522, -32.9573, 0.49 ) }
    dend_7 { pt3dadd( -84.4155, -234.588, -33.4168, 0.49 ) }
    dend_7 { pt3dadd( -84.0743, -235.94, -33.942, 0.49 ) }
    dend_7 { pt3dadd( -83.7345, -238.142, -34.7132, 0.49 ) }
    dend_7 { pt3dadd( -83.9047, -239.594, -35.1087, 0.49 ) }
    dend_7 { pt3dadd( -84.1878, -240.367, -35.2929, 0.49 ) }
    dend_7 { pt3dadd( -84.7318, -241.451, -35.5554, 0.49 ) }
    dend_7 { pt3dadd( -86.3781, -244.356, -36.2404, 0.49 ) }
    dend_7 { pt3dadd( -87.8627, -246.782, -36.7883, 0.49 ) }
    dend_7 { pt3dadd( -89.0373, -248.61, -37.1551, 0.49 ) }
    dend_7 { pt3dadd( -90.1894, -250.443, -37.5305, 0.49 ) }
    dend_7 { pt3dadd( -90.8732, -251.718, -37.7875, 0.49 ) }
    dend_7 { pt3dadd( -91.3281, -252.872, -37.9868, 0.49 ) }
    dend_7 { pt3dadd( -91.6385, -254.183, -38.1289, 0.49 ) }
    dend_7 { pt3dadd( -91.7425, -254.969, -38.1673, 0.49 ) }
    dend_7 { pt3dadd( -91.8675, -255.926, -38.2047, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_7 { pt3dadd( -92.157, -257.574, -38.261, 0.49 ) }
    dend_7 { pt3dadd( -92.6134, -259.785, -38.3836, 0.49 ) }
    dend_7 { pt3dadd( -92.9471, -261.548, -38.5771, 0.49 ) }
    dend_7 { pt3dadd( -93.1814, -263.088, -38.8015, 0.49 ) }
    dend_7 { pt3dadd( -93.436, -265.493, -39.1944, 0.49 ) }
    dend_7 { pt3dadd( -93.545, -267.1, -39.4884, 0.49 ) }
    dend_7 { pt3dadd( -93.5553, -268.766, -39.832, 0.49 ) }
    dend_7 { pt3dadd( -93.4118, -271.218, -40.3432, 0.49 ) }
    dend_7 { pt3dadd( -93.1761, -272.964, -40.6921, 0.49 ) }
    dend_7 { pt3dadd( -92.783, -275.08, -41.1025, 0.49 ) }
    dend_7 { pt3dadd( -92.4941, -276.222, -41.2984, 0.49 ) }
    dend_7 { pt3dadd( -91.8581, -278.349, -41.6437, 0.49 ) }
    dend_7 { pt3dadd( -91.1288, -280.619, -41.9531, 0.49 ) }
    dend_7 { pt3dadd( -90.6653, -282.147, -42.0478, 0.49 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 14/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -130.503, -65.5899, 43.0799, 0.37 ) }
    dend_23 { pt3dadd( -133.394, -65.9525, 44.2536, 0.37 ) }
    dend_23 { pt3dadd( -136.6, -66.3548, 45.5559, 0.37 ) }
    dend_23 { pt3dadd( -138.309, -66.5692, 46.2496, 0.37 ) }
    dend_23 { pt3dadd( -139.832, -66.7603, 46.8682, 0.24 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 19/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -130.503, -65.5899, 43.0799, 0.37 ) }
    dend_22 { pt3dadd( -131.499, -67.9128, 42.9538, 0.37 ) }
    dend_22 { pt3dadd( -132.068, -69.4497, 42.8897, 0.37 ) }
    dend_22 { pt3dadd( -132.581, -71.0113, 42.8323, 0.37 ) }
    dend_22 { pt3dadd( -133.036, -72.7633, 42.8594, 0.37 ) }
    dend_22 { pt3dadd( -133.367, -74.2859, 42.9473, 0.37 ) }
    dend_22 { pt3dadd( -133.665, -75.8478, 43.0674, 0.37 ) }
    dend_22 { pt3dadd( -133.83, -77.3677, 43.2332, 0.37 ) }
    dend_22 { pt3dadd( -133.898, -78.2975, 43.3444, 0.37 ) }
    dend_22 { pt3dadd( -134.046, -80.8887, 43.6762, 0.37 ) }
    dend_22 { pt3dadd( -134.12, -83.091, 43.9594, 0.37 ) }
    dend_22 { pt3dadd( -134.14, -84.2763, 44.0754, 0.37 ) }
    dend_22 { pt3dadd( -134.128, -85.915, 44.225, 0.37 ) }
    dend_22 { pt3dadd( -134.107, -87.3326, 44.3256, 0.37 ) }
    dend_22 { pt3dadd( -134.1, -88.3948, 44.3815, 0.37 ) }
    dend_22 { pt3dadd( -134.086, -89.9266, 44.3319, 0.37 ) }
    dend_22 { pt3dadd( -134.112, -91.9296, 44.151, 0.37 ) }
    dend_22 { pt3dadd( -134.184, -93.5497, 43.894, 0.37 ) }
    dend_22 { pt3dadd( -134.317, -95.0373, 43.5571, 0.37 ) }
    dend_22 { pt3dadd( -134.613, -96.8566, 43.0276, 0.37 ) }
    dend_22 { pt3dadd( -135.183, -99.0954, 42.2308, 0.37 ) }
    dend_22 { pt3dadd( -135.824, -100.685, 41.534, 0.37 ) }
    dend_22 { pt3dadd( -136.737, -102.143, 40.7582, 0.37 ) }
    dend_22 { pt3dadd( -137.329, -102.807, 40.3711, 0.37 ) }
    dend_22 { pt3dadd( -138.609, -103.877, 39.722, 0.37 ) }
    dend_22 { pt3dadd( -139.338, -104.357, 39.4098, 0.37 ) }
    dend_22 { pt3dadd( -140.947, -105.193, 38.8851, 0.37 ) }
    dend_22 { pt3dadd( -142.533, -105.951, 38.4091, 0.37 ) }
    dend_22 { pt3dadd( -144.269, -106.705, 37.9426, 0.37 ) }
    dend_22 { pt3dadd( -145.905, -107.388, 37.5063, 0.37 ) }
    dend_22 { pt3dadd( -147.197, -107.905, 37.1546, 0.37 ) }
    dend_22 { pt3dadd( -149.562, -108.879, 36.4872, 0.37 ) }
    dend_22 { pt3dadd( -151.939, -109.911, 35.7722, 0.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 52/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -90.6653, -282.147, -42.0478, 0.49 ) }
    dend_9 { pt3dadd( -89.674, -283.179, -42.1196, 0.49 ) }
    dend_9 { pt3dadd( -88.8455, -284.04, -42.1797, 0.49 ) }
    dend_9 { pt3dadd( -87.8561, -285.07, -42.2514, 0.49 ) }
    dend_9 { pt3dadd( -85.942, -287.061, -42.3902, 0.49 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 57/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -90.6653, -282.147, -42.0478, 0.49 ) }
    dend_8 { pt3dadd( -92.6322, -282.558, -43.0526, 0.49 ) }
    dend_8 { pt3dadd( -94.3709, -282.921, -43.9408, 0.49 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 60/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -85.942, -287.061, -42.3902, 0.49 ) }
    dend_11 { pt3dadd( -85.3341, -289.873, -42.7603, 0.49 ) }
    dend_11 { pt3dadd( -84.7319, -292.658, -43.127, 0.49 ) }
    dend_11 { pt3dadd( -83.897, -296.52, -43.6354, 0.49 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 64/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -85.942, -287.061, -42.3902, 0.49 ) }
    dend_10 { pt3dadd( -82.2115, -287.516, -42.8876, 0.49 ) }
    dend_10 { pt3dadd( -81.1575, -287.645, -43.0282, 0.49 ) }
    dend_10 { pt3dadd( -78.0714, -288.021, -43.4397, 0.49 ) }
    dend_10 { pt3dadd( -74.8648, -288.412, -43.8673, 0.49 ) }
    dend_10 { pt3dadd( -72.6761, -288.679, -44.1591, 0.49 ) }
    dend_10 { pt3dadd( -70.7166, -288.918, -44.4204, 0.49 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_29, dend_26, dend_17, dend_4, dend_3, dend_0, dend_39, dend_35, dend_30, dend_28, dend_27, dend_25, dend_18, dend_16, dend_5, dend_2, dend_1, dend_43, dend_40, dend_37, dend_36, dend_34, dend_31, dend_24, dend_19, dend_13, dend_6, dend_42, dend_41, dend_33, dend_32, dend_21, dend_20, dend_15, dend_14, dend_12, dend_7, dend_23, dend_22, dend_9, dend_8, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_29, dend_26, dend_17, dend_4, dend_3, dend_0, dend_39, dend_35, dend_30, dend_28, dend_27, dend_25, dend_18, dend_16, dend_5, dend_2, dend_1, dend_43, dend_40, dend_37, dend_36, dend_34, dend_31, dend_24, dend_19, dend_13, dend_6, dend_42, dend_41, dend_33, dend_32, dend_21, dend_20, dend_15, dend_14, dend_12, dend_7, dend_23, dend_22, dend_9, dend_8, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_3 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_35 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_28 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_27 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_25 OneSecGrp_SectionRef_15.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_16 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_43 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_40 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_21 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_20 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_7 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_22 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_4 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_17 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_29 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_26 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_39 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_18 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_5 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_30 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_34 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_19 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_31 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_13 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_15 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_14 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_6 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_42 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_41 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_37 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_36 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_23 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_8 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_9 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_11 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_8 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_3 nseg = 7
    dend_35 nseg = 5
    dend_28 nseg = 5
    dend_27 nseg = 7
    dend_25 nseg = 3
    dend_16 nseg = 5
    dend_1 nseg = 5
    dend_43 nseg = 5
    dend_40 nseg = 3
    dend_24 nseg = 3
    dend_33 nseg = 3
    dend_21 nseg = 7
    dend_20 nseg = 9
    dend_12 nseg = 5
    dend_7 nseg = 13
    dend_22 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L1_DAC_0d58fdf14a_0_0


