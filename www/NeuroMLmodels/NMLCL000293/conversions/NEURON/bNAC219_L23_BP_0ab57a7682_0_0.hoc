// Cell: bNAC219_L23_BP_0ab57a7682_0_0
/*
{
  "id" : "bNAC219_L23_BP_0ab57a7682_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -8.92845, 10.7418, 1.66", "-0.645008, -11.2438, 12.6603, 1.66", "-1.28408, -13.7429, 14.731, 1.66", "-2.38159, -18.0347, 18.2871, 1.39", "-6.74642, -35.1031, 32.4299, 1.11", "-7.51212, -38.0973, 34.9109, 1.11", "-8.48189, -41.8896, 38.0531, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 7.86155, -0.778182, 1.39", "0.627609, 13.5882, 1.72056, 0.83", "0.631074, 15.4739, 2.54332, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-8.48189, -41.8896, 38.0531, 0.83", "-10.3128, -48.5985, 35.6672, 0.83", "-10.7488, -50.1959, 35.0991, 0.83", "-11.8616, -54.2736, 33.649, 0.83", "-12.3605, -56.1015, 32.9989, 0.83", "-13.4333, -60.0326, 31.6009, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.48189, -41.8896, 38.0531, 0.83", "-8.55549, -43.5196, 38.3019, 0.83", "-8.62368, -44.9958, 38.5045, 0.83", "-8.77776, -46.9264, 38.7477, 0.83", "-9.05771, -51.3419, 39.1817, 0.83", "-9.24295, -54.9878, 39.482, 0.55", "-9.56576, -61.1709, 39.8553, 0.55", "-9.63792, -64.25, 40.0637, 0.83", "-9.63927, -67.7746, 40.3022, 0.55", "-9.46142, -73.5408, 40.8553, 0.55", "-9.37582, -75.1891, 41.0318, 0.55", "-9.12829, -79.6595, 41.5348, 0.55", "-8.78981, -85.2975, 42.3106, 0.55", "-8.58916, -88.6733, 42.8139, 0.55", "-8.36305, -93.167, 43.528, 0.55", "-8.23507, -101.246, 44.9169, 0.55", "-8.29178, -105.506, 45.6403, 0.55", "-8.40627, -108.683, 46.1388, 0.55", "-8.62479, -110.881, 46.3979, 0.55", "-8.92016, -112.801, 46.5901, 0.55", "-9.67637, -116.642, 47.0698, 0.55", "-10.0989, -118.563, 47.3288, 0.55", "-10.7528, -121.496, 47.8519, 0.55", "-11.6386, -125.422, 48.6202, 0.55", "-12.9818, -131.084, 49.8213, 0.55", "-14.1541, -136.183, 50.9781, 0.55", "-15.2138, -140.627, 52.0855, 0.83", "-16.2298, -144.87, 53.2968, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.631074, 15.4739, 2.54332, 0.83", "-0.752599, 25.2678, -1.89696, 0.83", "-1.01994, 27.8507, -2.98677, 0.83", "-1.35581, 31.0164, -4.35351, 0.83", "-1.58018, 33.6322, -5.41454, 0.83", "-1.90155, 37.8156, -7.02871, 0.83", "-2.22907, 43.2881, -9.03414, 0.83", "-2.43688, 47.1762, -10.1362, 0.83", "-2.63873, 51.3843, -11.4088, 0.83", "-2.82136, 55.707, -12.8962, 0.55", "-2.8808, 57.076, -13.3752, 0.55", "-3.02157, 59.4172, -14.2023, 0.55", "-3.23187, 64.3069, -15.8547, 0.55", "-3.41061, 67.8533, -17.0036, 0.55", "-3.78558, 76.7424, -19.8851, 0.55", "-4.02741, 80.7545, -21.3464, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.631074, 15.4739, 2.54332, 0.83", "1.70678, 18.6263, 3.77407, 0.83", "2.48466, 21.1139, 4.83244, 0.83", "3.59719, 25.0382, 6.63198, 0.83", "4.62529, 28.8209, 8.40109, 0.83", "5.79045, 33.6104, 10.4262, 0.83", "6.66783, 37.2209, 11.8529, 0.83", "7.23039, 39.9529, 12.9319, 0.83", "7.81834, 42.9503, 14.0064, 0.83", "7.94536, 43.7666, 14.2491, 0.83", "9.42296, 53.1511, 16.5234, 0.83", "9.69933, 55.1464, 16.8686, 0.83", "10.0566, 57.86, 17.1911, 0.83", "10.3433, 60.2093, 17.4136, 0.83", "10.6335, 62.9343, 17.622, 0.83", "11.0262, 66.3759, 17.8894, 0.83", "11.3398, 69.9231, 18.1443, 0.83", "11.5554, 71.9492, 18.2951, 0.83", "11.9758, 75.0823, 18.532, 0.83", "12.3368, 78.1634, 18.7674, 0.83", "12.7751, 81.4012, 18.9815, 0.83", "13.3442, 85.6327, 19.3077, 0.83", "13.7093, 88.3969, 19.6502, 0.83", "13.8794, 89.9268, 19.8804, 0.83", "14.032, 91.6575, 20.2281, 0.83", "14.2448, 94.218, 20.8976, 0.83", "14.3734, 97.9786, 22.1121, 0.55", "14.552, 102.911, 23.9127, 0.55", "14.528, 104.363, 24.4619, 0.55", "14.4658, 107.416, 25.5977, 0.55", "14.4074, 108.696, 26.0513, 0.55", "14.2588, 111.097, 26.8929, 0.55", "14.1578, 113.602, 27.655, 0.55", "14.1852, 117.241, 28.5618, 0.55", "14.2136, 119.639, 29.1225, 0.55", "14.2056, 121.821, 29.5577, 0.55", "14.2703, 124.548, 30.0969, 0.55", "14.5089, 127.387, 30.6174, 0.55", "14.9471, 131.258, 31.3956, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-13.4333, -60.0326, 31.6009, 0.83", "-14.65, -63.6189, 33.0626, 0.83", "-15.5944, -66.46, 34.0845, 0.83", "-16.712, -69.8858, 35.1674, 0.83", "-17.6349, -72.7168, 35.9666, 0.83", "-18.1957, -74.4373, 36.4522, 0.83", "-18.8644, -76.4887, 37.0312, 0.83", "-19.2849, -77.9728, 37.3471, 0.83", "-19.7553, -79.6665, 37.6327, 0.83", "-20.2894, -81.8303, 37.676, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-13.4333, -60.0326, 31.6009, 0.55", "-11.8405, -60.3572, 37.0774, 0.55", "-9.96268, -60.6741, 42.8896, 0.55", "-9.00876, -60.835, 45.8421, 0.55", "-7.80728, -61.0378, 49.5608, 0.28", "-7.6088, -61.0713, 50.1751, 0.83", "-6.56756, -61.247, 53.3978, 0.28", "-6.36905, -61.241, 53.9442, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-4.02741, 80.7545, -21.3464, 0.55", "-3.60132, 83.9272, -21.6261, 0.55", "-3.15005, 87.2794, -22.0151, 0.55", "-2.8306, 89.6359, -22.2652, 0.55", "-2.31337, 93.1725, -22.6223, 0.83", "-1.94324, 95.6865, -22.8613, 0.55", "-1.57352, 98.0304, -23.0745, 0.55", "-1.2228, 100.223, -23.2104, 1.11", "-0.59314, 104.03, -23.5636, 0.55", "-0.419285, 105.304, -23.7057, 0.55", "-0.207795, 106.912, -23.9035, 1.11", "0.043413, 108.907, -24.1635, 0.55", "0.182216, 110.21, -24.3333, 1.11", "0.568268, 114.19, -24.8085, 0.55", "0.688383, 116.288, -25.2049, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-4.02741, 80.7545, -21.3464, 0.28", "-5.08886, 83.2248, -23.5965, 0.28", "-5.2293, 83.593, -23.9304, 0.55", "-6.35575, 86.8407, -26.7837, 0.28", "-7.40814, 89.8613, -29.6277, 1.11", "-7.95376, 91.4274, -31.2062, 0.28", "-7.95376, 91.4274, -31.2062, 0.55", "-8.21329, 93.3017, -32.8707, 0.28", "-8.21421, 94.0114, -33.4651, 1.11", "-7.21074, 97.0775, -35.5079, 0.55", "-5.69647, 99.4103, -36.5289, 0.28", "-2.8456, 103.021, -37.7887, 1.11", "-0.109251, 106.058, -38.5859, 0.28", "-0.0308057, 106.128, -38.5915, 0.55", "2.54894, 108.073, -38.4287, 0.28", "2.81199, 108.243, -38.3701, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-20.2894, -81.8303, 37.676, 0.83", "-20.1147, -86.1282, 39.3392, 0.83", "-20.0245, -89.5702, 40.906, 0.83", "-19.9389, -91.1782, 41.6544, 0.83", "-19.9139, -92.1009, 42.1631, 0.83", "-19.9197, -94.6251, 43.6071, 0.83", "-19.9176, -96.1221, 44.3514, 0.83", "-19.8458, -98.975, 45.4901, 0.83", "-19.7149, -100.949, 46.2969, 0.83", "-19.3079, -104.313, 47.5806, 0.83", "-18.9904, -106.043, 48.137, 0.83", "-18.0447, -110.307, 49.1079, 0.83", "-17.1932, -114.123, 49.7203, 0.83", "-16.5311, -117.294, 49.9418, 0.83", "-16.1526, -119.599, 50.0207, 0.83", "-16.081, -120.065, 50.0206, 0.83", "-15.7989, -122.74, 50.1426, 0.28", "-15.7797, -123.449, 50.2183, 0.83", "-15.8454, -125.288, 50.3484, 0.28", "-15.9975, -128.558, 50.5233, 0.28", "-16.0417, -129.259, 50.5856, 0.28", "-16.1693, -131.493, 50.8033, 0.83", "-16.2378, -133.466, 51.0288, 0.28", "-16.286, -135.047, 51.2325, 0.83", "-16.2788, -136.308, 51.4363, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-20.2894, -81.8303, 37.676, 0.55", "-23.4739, -88.1314, 35.5433, 0.55", "-24.9335, -90.8255, 34.7175, 0.55", "-28.1531, -96.5331, 33.1275, 0.55", "-29.5931, -98.9709, 32.5081, 0.55", "-31.0837, -101.336, 31.9705, 0.28", "-31.7498, -102.393, 31.7302, 0.55", "-33.5168, -104.82, 31.3664, 0.28", "-34.6913, -106.395, 31.1754, 0.55", "-36.1745, -108.217, 31.1391, 0.28", "-38.5302, -110.945, 31.0734, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_BP_0ab57a7682_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -8.92845, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.645008, -11.2438, 12.6603, 1.66 ) }
    dend_5 { pt3dadd( -1.28408, -13.7429, 14.731, 1.66 ) }
    dend_5 { pt3dadd( -2.38159, -18.0347, 18.2871, 1.39 ) }
    dend_5 { pt3dadd( -6.74642, -35.1031, 32.4299, 1.11 ) }
    dend_5 { pt3dadd( -7.51212, -38.0973, 34.9109, 1.11 ) }
    dend_5 { pt3dadd( -8.48189, -41.8896, 38.0531, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 7.86155, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.627609, 13.5882, 1.72056, 0.83 ) }
    dend_0 { pt3dadd( 0.631074, 15.4739, 2.54332, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -8.48189, -41.8896, 38.0531, 0.83 ) }
    dend_7 { pt3dadd( -10.3128, -48.5985, 35.6672, 0.83 ) }
    dend_7 { pt3dadd( -10.7488, -50.1959, 35.0991, 0.83 ) }
    dend_7 { pt3dadd( -11.8616, -54.2736, 33.649, 0.83 ) }
    dend_7 { pt3dadd( -12.3605, -56.1015, 32.9989, 0.83 ) }
    dend_7 { pt3dadd( -13.4333, -60.0326, 31.6009, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.48189, -41.8896, 38.0531, 0.83 ) }
    dend_6 { pt3dadd( -8.55549, -43.5196, 38.3019, 0.83 ) }
    dend_6 { pt3dadd( -8.62368, -44.9958, 38.5045, 0.83 ) }
    dend_6 { pt3dadd( -8.77776, -46.9264, 38.7477, 0.83 ) }
    dend_6 { pt3dadd( -9.05771, -51.3419, 39.1817, 0.83 ) }
    dend_6 { pt3dadd( -9.24295, -54.9878, 39.482, 0.55 ) }
    dend_6 { pt3dadd( -9.56576, -61.1709, 39.8553, 0.55 ) }
    dend_6 { pt3dadd( -9.63792, -64.25, 40.0637, 0.83 ) }
    dend_6 { pt3dadd( -9.63927, -67.7746, 40.3022, 0.55 ) }
    dend_6 { pt3dadd( -9.46142, -73.5408, 40.8553, 0.55 ) }
    dend_6 { pt3dadd( -9.37582, -75.1891, 41.0318, 0.55 ) }
    dend_6 { pt3dadd( -9.12829, -79.6595, 41.5348, 0.55 ) }
    dend_6 { pt3dadd( -8.78981, -85.2975, 42.3106, 0.55 ) }
    dend_6 { pt3dadd( -8.58916, -88.6733, 42.8139, 0.55 ) }
    dend_6 { pt3dadd( -8.36305, -93.167, 43.528, 0.55 ) }
    dend_6 { pt3dadd( -8.23507, -101.246, 44.9169, 0.55 ) }
    dend_6 { pt3dadd( -8.29178, -105.506, 45.6403, 0.55 ) }
    dend_6 { pt3dadd( -8.40627, -108.683, 46.1388, 0.55 ) }
    dend_6 { pt3dadd( -8.62479, -110.881, 46.3979, 0.55 ) }
    dend_6 { pt3dadd( -8.92016, -112.801, 46.5901, 0.55 ) }
    dend_6 { pt3dadd( -9.67637, -116.642, 47.0698, 0.55 ) }
    dend_6 { pt3dadd( -10.0989, -118.563, 47.3288, 0.55 ) }
    dend_6 { pt3dadd( -10.7528, -121.496, 47.8519, 0.55 ) }
    dend_6 { pt3dadd( -11.6386, -125.422, 48.6202, 0.55 ) }
    dend_6 { pt3dadd( -12.9818, -131.084, 49.8213, 0.55 ) }
    dend_6 { pt3dadd( -14.1541, -136.183, 50.9781, 0.55 ) }
    dend_6 { pt3dadd( -15.2138, -140.627, 52.0855, 0.83 ) }
    dend_6 { pt3dadd( -16.2298, -144.87, 53.2968, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.631074, 15.4739, 2.54332, 0.83 ) }
    dend_2 { pt3dadd( -0.752599, 25.2678, -1.89696, 0.83 ) }
    dend_2 { pt3dadd( -1.01994, 27.8507, -2.98677, 0.83 ) }
    dend_2 { pt3dadd( -1.35581, 31.0164, -4.35351, 0.83 ) }
    dend_2 { pt3dadd( -1.58018, 33.6322, -5.41454, 0.83 ) }
    dend_2 { pt3dadd( -1.90155, 37.8156, -7.02871, 0.83 ) }
    dend_2 { pt3dadd( -2.22907, 43.2881, -9.03414, 0.83 ) }
    dend_2 { pt3dadd( -2.43688, 47.1762, -10.1362, 0.83 ) }
    dend_2 { pt3dadd( -2.63873, 51.3843, -11.4088, 0.83 ) }
    dend_2 { pt3dadd( -2.82136, 55.707, -12.8962, 0.55 ) }
    dend_2 { pt3dadd( -2.8808, 57.076, -13.3752, 0.55 ) }
    dend_2 { pt3dadd( -3.02157, 59.4172, -14.2023, 0.55 ) }
    dend_2 { pt3dadd( -3.23187, 64.3069, -15.8547, 0.55 ) }
    dend_2 { pt3dadd( -3.41061, 67.8533, -17.0036, 0.55 ) }
    dend_2 { pt3dadd( -3.78558, 76.7424, -19.8851, 0.55 ) }
    dend_2 { pt3dadd( -4.02741, 80.7545, -21.3464, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.631074, 15.4739, 2.54332, 0.83 ) }
    dend_1 { pt3dadd( 1.70678, 18.6263, 3.77407, 0.83 ) }
    dend_1 { pt3dadd( 2.48466, 21.1139, 4.83244, 0.83 ) }
    dend_1 { pt3dadd( 3.59719, 25.0382, 6.63198, 0.83 ) }
    dend_1 { pt3dadd( 4.62529, 28.8209, 8.40109, 0.83 ) }
    dend_1 { pt3dadd( 5.79045, 33.6104, 10.4262, 0.83 ) }
    dend_1 { pt3dadd( 6.66783, 37.2209, 11.8529, 0.83 ) }
    dend_1 { pt3dadd( 7.23039, 39.9529, 12.9319, 0.83 ) }
    dend_1 { pt3dadd( 7.81834, 42.9503, 14.0064, 0.83 ) }
    dend_1 { pt3dadd( 7.94536, 43.7666, 14.2491, 0.83 ) }
    dend_1 { pt3dadd( 9.42296, 53.1511, 16.5234, 0.83 ) }
    dend_1 { pt3dadd( 9.69933, 55.1464, 16.8686, 0.83 ) }
    dend_1 { pt3dadd( 10.0566, 57.86, 17.1911, 0.83 ) }
    dend_1 { pt3dadd( 10.3433, 60.2093, 17.4136, 0.83 ) }
    dend_1 { pt3dadd( 10.6335, 62.9343, 17.622, 0.83 ) }
    dend_1 { pt3dadd( 11.0262, 66.3759, 17.8894, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 11.3398, 69.9231, 18.1443, 0.83 ) }
    dend_1 { pt3dadd( 11.5554, 71.9492, 18.2951, 0.83 ) }
    dend_1 { pt3dadd( 11.9758, 75.0823, 18.532, 0.83 ) }
    dend_1 { pt3dadd( 12.3368, 78.1634, 18.7674, 0.83 ) }
    dend_1 { pt3dadd( 12.7751, 81.4012, 18.9815, 0.83 ) }
    dend_1 { pt3dadd( 13.3442, 85.6327, 19.3077, 0.83 ) }
    dend_1 { pt3dadd( 13.7093, 88.3969, 19.6502, 0.83 ) }
    dend_1 { pt3dadd( 13.8794, 89.9268, 19.8804, 0.83 ) }
    dend_1 { pt3dadd( 14.032, 91.6575, 20.2281, 0.83 ) }
    dend_1 { pt3dadd( 14.2448, 94.218, 20.8976, 0.83 ) }
    dend_1 { pt3dadd( 14.3734, 97.9786, 22.1121, 0.55 ) }
    dend_1 { pt3dadd( 14.552, 102.911, 23.9127, 0.55 ) }
    dend_1 { pt3dadd( 14.528, 104.363, 24.4619, 0.55 ) }
    dend_1 { pt3dadd( 14.4658, 107.416, 25.5977, 0.55 ) }
    dend_1 { pt3dadd( 14.4074, 108.696, 26.0513, 0.55 ) }
    dend_1 { pt3dadd( 14.2588, 111.097, 26.8929, 0.55 ) }
    dend_1 { pt3dadd( 14.1578, 113.602, 27.655, 0.55 ) }
    dend_1 { pt3dadd( 14.1852, 117.241, 28.5618, 0.55 ) }
    dend_1 { pt3dadd( 14.2136, 119.639, 29.1225, 0.55 ) }
    dend_1 { pt3dadd( 14.2056, 121.821, 29.5577, 0.55 ) }
    dend_1 { pt3dadd( 14.2703, 124.548, 30.0969, 0.55 ) }
    dend_1 { pt3dadd( 14.5089, 127.387, 30.6174, 0.55 ) }
    dend_1 { pt3dadd( 14.9471, 131.258, 31.3956, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -13.4333, -60.0326, 31.6009, 0.83 ) }
    dend_9 { pt3dadd( -14.65, -63.6189, 33.0626, 0.83 ) }
    dend_9 { pt3dadd( -15.5944, -66.46, 34.0845, 0.83 ) }
    dend_9 { pt3dadd( -16.712, -69.8858, 35.1674, 0.83 ) }
    dend_9 { pt3dadd( -17.6349, -72.7168, 35.9666, 0.83 ) }
    dend_9 { pt3dadd( -18.1957, -74.4373, 36.4522, 0.83 ) }
    dend_9 { pt3dadd( -18.8644, -76.4887, 37.0312, 0.83 ) }
    dend_9 { pt3dadd( -19.2849, -77.9728, 37.3471, 0.83 ) }
    dend_9 { pt3dadd( -19.7553, -79.6665, 37.6327, 0.83 ) }
    dend_9 { pt3dadd( -20.2894, -81.8303, 37.676, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -13.4333, -60.0326, 31.6009, 0.55 ) }
    dend_8 { pt3dadd( -11.8405, -60.3572, 37.0774, 0.55 ) }
    dend_8 { pt3dadd( -9.96268, -60.6741, 42.8896, 0.55 ) }
    dend_8 { pt3dadd( -9.00876, -60.835, 45.8421, 0.55 ) }
    dend_8 { pt3dadd( -7.80728, -61.0378, 49.5608, 0.28 ) }
    dend_8 { pt3dadd( -7.6088, -61.0713, 50.1751, 0.83 ) }
    dend_8 { pt3dadd( -6.56756, -61.247, 53.3978, 0.28 ) }
    dend_8 { pt3dadd( -6.36905, -61.241, 53.9442, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -4.02741, 80.7545, -21.3464, 0.55 ) }
    dend_4 { pt3dadd( -3.60132, 83.9272, -21.6261, 0.55 ) }
    dend_4 { pt3dadd( -3.15005, 87.2794, -22.0151, 0.55 ) }
    dend_4 { pt3dadd( -2.8306, 89.6359, -22.2652, 0.55 ) }
    dend_4 { pt3dadd( -2.31337, 93.1725, -22.6223, 0.83 ) }
    dend_4 { pt3dadd( -1.94324, 95.6865, -22.8613, 0.55 ) }
    dend_4 { pt3dadd( -1.57352, 98.0304, -23.0745, 0.55 ) }
    dend_4 { pt3dadd( -1.2228, 100.223, -23.2104, 1.11 ) }
    dend_4 { pt3dadd( -0.59314, 104.03, -23.5636, 0.55 ) }
    dend_4 { pt3dadd( -0.419285, 105.304, -23.7057, 0.55 ) }
    dend_4 { pt3dadd( -0.207795, 106.912, -23.9035, 1.11 ) }
    dend_4 { pt3dadd( 0.043413, 108.907, -24.1635, 0.55 ) }
    dend_4 { pt3dadd( 0.182216, 110.21, -24.3333, 1.11 ) }
    dend_4 { pt3dadd( 0.568268, 114.19, -24.8085, 0.55 ) }
    dend_4 { pt3dadd( 0.688383, 116.288, -25.2049, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -4.02741, 80.7545, -21.3464, 0.28 ) }
    dend_3 { pt3dadd( -5.08886, 83.2248, -23.5965, 0.28 ) }
    dend_3 { pt3dadd( -5.2293, 83.593, -23.9304, 0.55 ) }
    dend_3 { pt3dadd( -6.35575, 86.8407, -26.7837, 0.28 ) }
    dend_3 { pt3dadd( -7.40814, 89.8613, -29.6277, 1.11 ) }
    dend_3 { pt3dadd( -7.95376, 91.4274, -31.2062, 0.28 ) }
    dend_3 { pt3dadd( -7.95376, 91.4274, -31.2062, 0.55 ) }
    dend_3 { pt3dadd( -8.21329, 93.3017, -32.8707, 0.28 ) }
    dend_3 { pt3dadd( -8.21421, 94.0114, -33.4651, 1.11 ) }
    dend_3 { pt3dadd( -7.21074, 97.0775, -35.5079, 0.55 ) }
    dend_3 { pt3dadd( -5.69647, 99.4103, -36.5289, 0.28 ) }
    dend_3 { pt3dadd( -2.8456, 103.021, -37.7887, 1.11 ) }
    dend_3 { pt3dadd( -0.109251, 106.058, -38.5859, 0.28 ) }
    dend_3 { pt3dadd( -0.0308057, 106.128, -38.5915, 0.55 ) }
    dend_3 { pt3dadd( 2.54894, 108.073, -38.4287, 0.28 ) }
    dend_3 { pt3dadd( 2.81199, 108.243, -38.3701, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -20.2894, -81.8303, 37.676, 0.83 ) }
    dend_11 { pt3dadd( -20.1147, -86.1282, 39.3392, 0.83 ) }
    dend_11 { pt3dadd( -20.0245, -89.5702, 40.906, 0.83 ) }
    dend_11 { pt3dadd( -19.9389, -91.1782, 41.6544, 0.83 ) }
    dend_11 { pt3dadd( -19.9139, -92.1009, 42.1631, 0.83 ) }
    dend_11 { pt3dadd( -19.9197, -94.6251, 43.6071, 0.83 ) }
    dend_11 { pt3dadd( -19.9176, -96.1221, 44.3514, 0.83 ) }
    dend_11 { pt3dadd( -19.8458, -98.975, 45.4901, 0.83 ) }
    dend_11 { pt3dadd( -19.7149, -100.949, 46.2969, 0.83 ) }
    dend_11 { pt3dadd( -19.3079, -104.313, 47.5806, 0.83 ) }
    dend_11 { pt3dadd( -18.9904, -106.043, 48.137, 0.83 ) }
    dend_11 { pt3dadd( -18.0447, -110.307, 49.1079, 0.83 ) }
    dend_11 { pt3dadd( -17.1932, -114.123, 49.7203, 0.83 ) }
    dend_11 { pt3dadd( -16.5311, -117.294, 49.9418, 0.83 ) }
    dend_11 { pt3dadd( -16.1526, -119.599, 50.0207, 0.83 ) }
    dend_11 { pt3dadd( -16.081, -120.065, 50.0206, 0.83 ) }
    dend_11 { pt3dadd( -15.7989, -122.74, 50.1426, 0.28 ) }
    dend_11 { pt3dadd( -15.7797, -123.449, 50.2183, 0.83 ) }
    dend_11 { pt3dadd( -15.8454, -125.288, 50.3484, 0.28 ) }
    dend_11 { pt3dadd( -15.9975, -128.558, 50.5233, 0.28 ) }
    dend_11 { pt3dadd( -16.0417, -129.259, 50.5856, 0.28 ) }
    dend_11 { pt3dadd( -16.1693, -131.493, 50.8033, 0.83 ) }
    dend_11 { pt3dadd( -16.2378, -133.466, 51.0288, 0.28 ) }
    dend_11 { pt3dadd( -16.286, -135.047, 51.2325, 0.83 ) }
    dend_11 { pt3dadd( -16.2788, -136.308, 51.4363, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -20.2894, -81.8303, 37.676, 0.55 ) }
    dend_10 { pt3dadd( -23.4739, -88.1314, 35.5433, 0.55 ) }
    dend_10 { pt3dadd( -24.9335, -90.8255, 34.7175, 0.55 ) }
    dend_10 { pt3dadd( -28.1531, -96.5331, 33.1275, 0.55 ) }
    dend_10 { pt3dadd( -29.5931, -98.9709, 32.5081, 0.55 ) }
    dend_10 { pt3dadd( -31.0837, -101.336, 31.9705, 0.28 ) }
    dend_10 { pt3dadd( -31.7498, -102.393, 31.7302, 0.55 ) }
    dend_10 { pt3dadd( -33.5168, -104.82, 31.3664, 0.28 ) }
    dend_10 { pt3dadd( -34.6913, -106.395, 31.1754, 0.55 ) }
    dend_10 { pt3dadd( -36.1745, -108.217, 31.1391, 0.28 ) }
    dend_10 { pt3dadd( -38.5302, -110.945, 31.0734, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_5 nseg = 3
    dend_6 nseg = 5
    dend_2 nseg = 3
    dend_1 nseg = 7
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_BP_0ab57a7682_0_0


