// Cell: bNAC219_L23_SBC_6cab0b0a69_0_0
/*
{
  "id" : "bNAC219_L23_SBC_6cab0b0a69_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.72119, -5.79195, 0.0, 1.92372", "-1.53528, -5.1504, 0.0, 2.21713", "-1.34936, -4.50886, 0.0, 2.89016", "-1.16344, -3.86732, 0.0, 3.56011", "-0.977521, -3.22578, 0.0, 4.32586", "-0.791602, -2.58424, 0.0, 5.04438", "-0.605684, -1.9427, 0.0, 5.62205", "-0.419765, -1.30116, 0.0, 5.91171", "-0.233847, -0.659622, 0.0, 5.96727", "-0.047928, -0.018082, 0.0, 5.95189", "0.137991, 0.623458, 0.0, 5.88627", "0.323909, 1.265, 0.0, 5.82615", "0.509828, 1.90654, 0.0, 5.76603", "0.695746, 2.54808, 0.0, 5.60884", "0.881665, 3.18962, 0.0, 5.14354", "1.06758, 3.83116, 0.0, 4.52229", "1.2535, 4.4727, 0.0, 3.90104", "1.43942, 5.11424, 0.0, 3.27979", "1.62534, 5.75578, 0.0, 2.62338", "1.81126, 6.39732, 0.0, 1.5824", "1.99718, 7.03886, 0.0, 0.989284" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-0.0984881, 4.6272, 2.22, 0.55", "0.264085, 5.76925, 3.11242, 0.55", "0.601872, 6.6611, 3.86475, 0.28", "0.843004, 7.23035, 4.43068, 0.55", "1.27859, 8.50384, 5.8508, 0.28", "1.39809, 8.92355, 6.32886, 0.83", "1.83206, 10.8301, 8.61231, 0.55", "2.12746, 12.5652, 10.823, 0.55", "2.28637, 13.9881, 12.6522, 0.83", "2.4282, 16.1054, 15.3056, 0.28", "2.4519, 16.5729, 15.855, 0.55", "2.50526, 18.1224, 17.5531, 0.28", "2.51879, 18.9062, 18.367, 0.28", "2.6258, 19.5781, 19.0186, 0.55", "3.17865, 21.0254, 20.2689, 0.28", "4.09196, 22.1341, 21.2543, 0.55", "5.30582, 23.0671, 22.1604, 0.28", "6.26971, 23.6309, 22.7891, 0.55", "7.74801, 24.3694, 23.7858, 0.28", "8.45455, 24.7157, 24.3141, 0.28", "9.36176, 25.2154, 25.0948, 0.28", "10.6544, 25.9295, 26.3453, 0.55", "12.1727, 26.8774, 27.9915, 0.28", "12.6679, 27.2925, 28.5996, 0.55", "13.6051, 28.3558, 30.011, 0.28", "14.1054, 29.1137, 30.9362, 0.55", "17.4298, 34.9664, 35.3178, 0.55", "20.2693, 40.9705, 39.8231, 0.55", "21.8642, 47.2306, 44.5681, 0.55", "23.9307, 53.544, 49.0495, 0.55", "26.0921, 59.2643, 54.2639, 0.55", "28.6996, 65.4333, 58.6741, 0.55", "29.988, 70.7128, 64.6156, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000015788621994,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "2.71151, 5.9142, -5.46, 1.38", "3.74123, 8.82107, -4.95937, 1.11", "5.22713, 13.3045, -4.13228, 1.38", "5.76445, 14.9257, -3.83319, 0.55", "6.73296, 17.848, -3.29409, 1.66", "8.11856, 22.0287, -2.52283, 0.83", "9.21586, 25.3396, -1.91204, 1.11", "9.78517, 27.066, -1.51093, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000015788621994
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.04849, -6.36105, -5.94, 2.22", "-2.82786, -8.31227, -6.08694, 2.22", "-4.145, -11.6098, -6.33528, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000015788621994
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.99718, 7.03886, 0.0, 0.55", "6.17239, 21.4461, 0.0, 0.55", "10.3476, 35.8533, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "29.988, 70.7128, 64.6156, 0.55", "32.7404, 77.2698, 71.1912, 0.55", "34.7896, 84.8372, 76.8127, 0.55", "38.0532, 91.8608, 82.6009, 0.55", "41.5083, 99.6031, 87.1908, 0.55", "43.8996, 108.298, 90.4791, 0.55", "47.0994, 117.156, 92.2968, 0.55", "49.7251, 126.324, 93.1727, 0.55", "52.8999, 135.289, 94.3774, 0.55", "54.3089, 144.705, 95.2771, 0.55", "56.843, 153.816, 96.8017, 0.55", "60.4653, 162.359, 99.2878, 0.55", "63.3233, 171.487, 99.8047, 0.55", "67.1486, 180.231, 100.815, 0.55", "70.7977, 188.903, 102.731, 0.55", "75.6987, 197.177, 102.997, 0.55", "81.7264, 204.682, 103.724, 0.55", "88.9329, 211.07, 102.601, 0.55", "95.4316, 218.222, 102.869, 0.55", "101.437, 225.717, 103.846, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "29.988, 70.7128, 64.6156, 0.55", "32.0003, 74.9304, 68.5728, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "9.78517, 27.066, -1.51093, 0.55", "10.0581, 29.6638, -0.379037, 0.55", "10.551, 32.1464, 0.799022, 0.55", "11.4151, 34.8372, 2.15548, 0.55", "12.0158, 36.4277, 2.96164, 0.55", "13.9619, 40.7523, 5.01135, 0.55", "15.4279, 43.6353, 6.30435, 0.55", "16.2865, 44.8866, 6.83719, 0.55", "18.2712, 47.2227, 7.74407, 0.55", "20.4053, 49.3697, 8.46227, 0.55", "23.4455, 52.031, 9.23818, 0.55", "25.1082, 53.3461, 9.52948, 0.55", "28.2215, 55.6856, 9.87464, 0.55", "29.7573, 56.8229, 10.0139, 0.55", "31.0731, 57.7292, 10.1181, 0.28", "31.9453, 58.2192, 10.1838, 0.55", "33.5145, 59.0098, 10.339, 0.28", "34.0954, 59.2733, 10.3983, 0.28", "35.8145, 59.9241, 10.5698, 0.55", "37.9425, 60.7182, 10.7397, 0.55", "40.2288, 61.5238, 10.9346, 0.55", "41.5839, 61.9545, 11.0778, 0.55", "43.4945, 62.5398, 11.3129, 0.55", "45.5105, 63.1692, 11.607, 0.55", "47.8436, 63.9421, 12.0417, 0.55", "49.4898, 64.549, 12.4252, 0.55", "51.653, 65.5262, 13.1145, 0.55", "53.7262, 66.6512, 13.9291, 0.28", "54.2203, 66.994, 14.1649, 0.55", "55.5987, 68.1046, 14.9213, 0.28", "56.1308, 68.5417, 15.2224, 0.55", "57.5008, 69.7818, 15.9725, 0.28", "58.608, 70.7905, 16.5654, 0.55", "60.3028, 72.2654, 17.4489, 0.28", "60.889, 72.7558, 17.7326, 0.55", "62.9935, 74.3663, 18.6098, 0.28", "63.9074, 75.0027, 18.9161, 0.55", "65.1293, 75.7536, 19.252, 0.28", "65.5941, 76.0117, 19.3377, 0.55", "66.7717, 76.6978, 19.4366, 0.28", "67.5881, 77.1983, 19.4623, 0.55", "68.7986, 77.9922, 19.4105, 0.28", "69.5735, 78.5224, 19.3461, 0.55", "71.4722, 79.9548, 19.0842, 0.28", "72.7355, 80.8797, 18.8522, 0.55", "80.3356, 88.9059, 21.579, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "9.78517, 27.066, -1.51093, 0.55", "8.64024, 29.0907, -6.58517, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-4.145, -11.6098, -6.33528, 0.83", "-6.22018, -13.0005, -5.97833, 0.83", "-8.88842, -14.7887, -5.51938, 0.83", "-11.5107, -16.5462, -5.06832, 0.83", "-14.5239, -18.5657, -4.55002, 0.83", "-16.1148, -19.6319, -4.27637, 0.83", "-18.7579, -21.4031, -3.82175, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-4.145, -11.6098, -6.33528, 1.11", "-3.80624, -13.7327, -6.52773, 1.11", "-3.47562, -15.8045, -6.71556, 1.11", "-3.05824, -18.42, -6.95266, 0.83", "-2.42509, -22.3878, -7.31236, 0.83", "-2.31133, -23.1007, -7.37699, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.3476, 35.8533, 0.0, 0.55", "14.5228, 50.2605, 0.0, 0.55", "18.698, 64.6677, 0.0, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "8.64024, 29.0907, -6.58517, 0.55", "9.20397, 32.5592, -7.26321, 0.55", "9.43724, 34.2583, -7.67056, 0.83", "9.97776, 37.9565, -8.42736, 0.55", "10.314, 39.8887, -8.76608, 0.83", "10.8876, 42.7882, -9.18172, 0.55", "11.4873, 45.5126, -9.5262, 0.83", "11.9864, 47.5496, -9.72922, 0.55", "13.1274, 52.0202, -10.1028, 0.55", "14.1622, 55.5008, -10.2879, 0.55", "15.0318, 58.1692, -10.3231, 0.55", "15.5021, 59.4266, -10.2987, 0.28", "16.3517, 61.5484, -10.1913, 0.55", "17.0436, 63.114, -10.107, 0.55", "18.2332, 65.7092, -10.0445, 0.55", "19.2083, 67.8156, -10.0148, 0.55", "20.1996, 69.8788, -10.0509, 0.28", "20.9065, 71.3105, -10.1126, 0.55", "21.9587, 73.3596, -10.1793, 0.28", "22.5066, 74.4436, -10.1969, 0.28", "22.9119, 75.315, -10.2014, 0.55", "23.7211, 77.1436, -10.1786, 0.28", "24.054, 77.9239, -10.1421, 0.55", "25.0248, 80.2281, -9.98005, 0.28", "25.5957, 81.5475, -9.88127, 0.28", "26.0878, 82.6315, -9.80088, 0.55", "26.876, 84.3591, -9.68586, 0.28", "27.337, 85.3618, -9.62066, 0.55", "28.2818, 87.3027, -9.54729, 0.55", "29.4892, 89.6427, -9.62393, 0.28", "29.8888, 90.4109, -9.65753, 0.55", "30.7165, 92.009, -9.77174, 0.28", "31.292, 93.2242, -9.94696, 0.55", "31.5477, 93.7556, -10.0572, 0.55", "32.2787, 95.3824, -10.4916, 0.28", "32.5766, 96.1053, -10.7001, 0.28", "32.983, 97.0742, -11.0169, 0.55", "34.1607, 99.8652, -12.0514, 0.28", "35.1937, 102.374, -13.0625, 0.55", "35.7194, 103.669, -13.596, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "8.64024, 29.0907, -6.58517, 0.83", "9.69663, 31.4083, -6.73315, 0.83", "10.7629, 33.9997, -6.90296, 0.28", "11.4263, 35.677, -7.00956, 0.55", "12.4893, 38.7415, -7.18553, 0.28", "12.8205, 39.6965, -7.24037, 0.55", "13.1907, 40.7635, -7.30164, 0.55", "14.0725, 43.7862, -7.56144, 0.28", "14.2019, 44.2736, -7.61335, 0.55", "14.8116, 46.6306, -7.81028, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-18.7579, -21.4031, -3.82175, 0.55", "-21.8624, -23.9963, -2.574, 0.55", "-24.2671, -26.0049, -1.6075, 0.55", "-26.2185, -27.6349, -0.823203, 1.11", "-28.8124, -29.8016, 0.219337, 0.55", "-32.4336, -32.8265, 1.67478, 0.55", "-38.0708, -37.5351, 3.94046, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-18.7579, -21.4031, -3.82175, 0.55", "-20.3351, -21.6329, -3.95666, 0.55", "-21.3392, -21.7378, -4.0121, 0.55", "-22.5995, -21.8676, -4.06352, 0.55", "-23.3695, -21.9017, -4.08429, 0.55", "-25.7133, -21.9722, -4.13113, 0.55", "-26.9399, -21.9983, -4.15457, 0.55", "-30.4834, -21.9843, -4.208, 0.55", "-32.4503, -21.9534, -4.23845, 0.55", "-36.2192, -21.8664, -4.26793, 0.55", "-38.1844, -21.8463, -4.27794, 0.55", "-40.4624, -21.8705, -4.2759, 0.55", "-41.3823, -21.8921, -4.27149, 0.28", "-42.4832, -21.9135, -4.25066, 0.55", "-44.5512, -21.9675, -4.17812, 0.55", "-45.9439, -22.058, -4.1785, 0.55", "-48.2127, -22.1941, -4.25419, 0.55", "-49.9894, -22.4041, -4.35851, 0.83", "-51.8004, -22.6529, -4.55087, 0.28", "-54.2063, -22.9464, -5.00592, 0.55", "-56.3713, -23.2103, -5.55808, 0.55", "-58.771, -23.4913, -6.24068, 0.55", "-61.7951, -23.9299, -7.24074, 0.55", "-64.5283, -24.4181, -8.25686, 0.55", "-66.688, -24.8877, -9.15212, 0.28", "-67.7982, -25.1075, -9.63884, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-2.31133, -23.1007, -7.37699, 0.83", "-1.97785, -26.1958, -7.38751, 0.83", "-1.86274, -28.5054, -7.39649, 0.83", "-1.70669, -31.6363, -7.40866, 1.11", "-1.56774, -34.4241, -7.4195, 0.55", "-1.43476, -37.0924, -7.42987, 0.83", "-1.33024, -39.1892, -7.43802, 0.83", "-1.28696, -44.3411, -7.44026, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-2.31133, -23.1007, -7.37699, 0.55", "-2.23413, -23.4561, -7.19546, 0.55", "-2.13257, -23.9156, -6.99016, 0.55", "-2.04958, -24.1982, -6.84371, 0.83", "-1.93046, -24.5648, -6.64377, 0.55", "-1.776, -24.9981, -6.40337, 0.55", "-1.57482, -25.516, -6.10571, 0.55", "-1.2571, -26.1439, -5.67742, 0.55", "-0.98854, -26.6163, -5.30178, 0.28", "-0.960705, -26.6601, -5.26212, 0.28", "-0.896425, -26.7499, -5.16947, 0.83", "-0.64585, -27.063, -4.81039, 0.55", "-0.273778, -27.548, -4.21881, 0.55", "-0.0275226, -27.8817, -3.78777, 0.28", "0.149958, -28.1504, -3.45702, 0.83", "0.449368, -28.6297, -2.86817, 0.55", "0.520329, -28.7574, -2.71411, 0.55", "0.620708, -28.9792, -2.4648, 0.55", "1.31676, -30.8337, -1.2641, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "35.7194, 103.669, -13.596, 0.55", "36.5215, 104.987, -13.9772, 0.55", "36.9589, 105.823, -14.2055, 0.55", "37.4288, 106.596, -14.3756, 0.28", "38.1513, 107.488, -14.4975, 0.55", "38.9118, 108.332, -14.5958, 0.28", "39.5692, 109.029, -14.6819, 0.55", "40.6038, 110.107, -14.7514, 0.28", "42.2474, 111.734, -14.7752, 0.55", "44.4383, 113.765, -14.794, 0.28", "45.2721, 114.512, -14.7997, 0.28", "47.4207, 116.39, -14.7887, 0.55", "48.4164, 117.247, -14.7415, 0.55", "49.9584, 118.571, -14.6457, 0.28", "50.8851, 119.423, -14.5962, 0.55", "51.7282, 120.264, -14.5417, 0.28", "52.59, 121.111, -14.4798, 0.55", "54.3718, 122.805, -14.4456, 0.28", "55.5801, 123.834, -14.434, 0.28", "56.1164, 124.264, -14.4577, 0.55", "57.8101, 125.62, -14.5432, 0.28", "58.532, 126.202, -14.5885, 0.28", "60.695, 127.955, -14.7521, 0.55", "64.1483, 130.727, -15.092, 0.28", "66.7049, 132.849, -15.3329, 0.55", "68.9408, 134.776, -15.6062, 0.28", "69.6716, 135.442, -15.7118, 0.55", "71.6667, 137.347, -15.9929, 0.28", "72.5185, 138.227, -16.1298, 0.55", "74.1051, 140.111, -16.5432, 0.55", "75.7494, 142.159, -16.9372, 0.55", "76.3527, 142.898, -17.1291, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "35.7194, 103.669, -13.596, 0.55", "34.8757, 106.627, -13.2216, 0.55", "34.543, 107.794, -13.0739, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "14.8116, 46.6306, -7.81028, 0.28", "14.8256, 46.8661, -7.78335, 0.28", "14.8378, 47.5051, -7.70215, 0.55", "14.8581, 48.3013, -7.60103, 0.28", "14.9033, 49.6317, -7.43375, 0.55", "14.9567, 50.8699, -7.29165, 0.28", "15.0068, 51.8661, -7.18425, 0.55", "15.0693, 52.7446, -7.07818, 0.28", "15.167, 53.7382, -6.95461, 0.55", "15.3251, 54.7797, -6.80688, 0.55", "15.5684, 55.9312, -6.62364, 0.55", "15.7479, 56.6026, -6.51492, 0.55", "16.1337, 57.9053, -6.30043, 0.28", "16.3749, 58.6397, -6.16908, 0.55", "16.9275, 60.2741, -5.84927, 0.28", "17.1792, 61.0036, -5.69206, 0.83", "17.4902, 61.9302, -5.48251, 0.28", "17.7299, 62.7269, -5.31275, 0.55", "18.0344, 63.9937, -5.08343, 0.28", "18.0723, 64.2092, -5.04781, 0.55", "18.1909, 65.1739, -4.91335, 0.28", "18.2501, 65.6402, -4.84762, 0.55", "18.4216, 66.4191, -4.819, 0.28", "18.6742, 67.1752, -4.86175, 0.55", "19.0438, 68.0695, -4.94626, 0.55", "19.3686, 68.7897, -5.01138, 0.55", "19.7248, 69.4873, -5.07123, 0.83", "20.9502, 71.67, -5.28179, 0.55", "21.7876, 73.1004, -5.4425, 0.55", "22.3622, 74.0533, -5.55554, 0.28", "22.6613, 74.5444, -5.61781, 0.55", "23.4633, 75.8983, -5.78281, 0.55", "24.3969, 77.5246, -5.936, 0.55", "25.1138, 78.8499, -5.99865, 0.28", "25.4501, 79.4684, -6.04051, 0.28", "25.6108, 79.7778, -6.06801, 0.55", "26.3987, 81.2973, -6.1787, 0.28", "26.685, 81.8438, -6.1812, 0.55", "27.1214, 82.6479, -6.08139, 0.55", "27.6216, 83.5052, -5.90264, 0.28", "28.0066, 84.1749, -5.75106, 0.28", "28.7654, 85.4902, -5.4293, 0.55", "29.6186, 86.9471, -5.04314, 0.55", "30.5778, 88.5618, -4.6179, 0.55", "31.6083, 90.2818, -4.14763, 0.55", "32.1945, 91.2525, -3.87686, 0.28", "32.6969, 92.0965, -3.64803, 0.55", "32.905, 92.4848, -3.55651, 0.55", "33.8283, 94.2514, -3.20386, 0.28", "34.0096, 94.5876, -3.14415, 0.55", "34.3608, 95.1848, -3.01885, 0.55", "34.8841, 96.0213, -2.80572, 0.55", "35.3428, 96.7229, -2.64383, 0.55", "36.3687, 98.2446, -2.3604, 0.55", "36.9446, 99.0827, -2.24003, 0.55", "37.5702, 100.003, -2.15336, 0.55", "38.356, 101.182, -2.09684, 0.55", "39.308, 102.651, -2.11653, 0.55", "39.8756, 103.596, -2.21881, 0.28", "40.0394, 103.899, -2.30499, 0.55", "40.3509, 104.5, -2.54474, 0.28", "40.5312, 104.876, -2.7279, 0.55", "40.9595, 105.754, -3.20019, 0.28", "41.5544, 107.076, -3.9059, 0.55", "42.1623, 108.412, -4.58184, 0.55", "42.6753, 109.551, -5.11771, 0.28", "42.8087, 109.851, -5.24365, 0.55", "43.1547, 110.644, -5.54064, 0.55", "43.5421, 111.556, -5.82699, 0.28", "43.8157, 112.264, -5.98606, 0.55", "44.1591, 113.206, -6.13358, 0.28", "44.4293, 113.937, -6.24642, 0.83", "44.8555, 115.004, -6.39965, 0.28", "44.9873, 115.332, -6.44803, 0.28", "45.397, 116.291, -6.56499, 0.55", "45.9859, 117.677, -6.72519, 0.28", "46.2508, 118.288, -6.77083, 0.55", "46.8589, 119.73, -6.83383, 0.28", "47.1846, 120.548, -6.84755, 0.55", "47.5341, 121.505, -6.85705, 0.28", "47.633, 121.803, -6.85749, 0.55", "48.157, 123.521, -6.83725, 0.55", "48.4104, 124.401, -6.82959, 0.28", "48.5924, 125.02, -6.80473, 0.55", "48.8845, 125.919, -6.75455, 0.28", "49.0049, 126.253, -6.7398, 0.55", "49.4148, 127.242, -6.70232, 0.28", "49.7901, 128.075, -6.67985, 0.55", "50.4922, 129.46, -6.61493, 0.28", "50.6179, 129.678, -6.59787, 0.55", "51.1163, 130.447, -6.50539, 0.28", "51.4883, 131.015, -6.42837, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "14.8116, 46.6306, -7.81028, 0.28", "14.8762, 50.1822, -6.91921, 0.28", "15.025, 52.309, -6.39449, 0.55", "15.267, 54.7466, -5.69978, 0.28", "15.4346, 55.9202, -5.34237, 0.28", "15.745, 57.7456, -4.76357, 0.55", "16.1229, 59.8517, -4.05516, 0.55", "16.6126, 61.9962, -3.28961, 0.55", "17.1577, 64.2836, -2.41082, 0.28", "17.4649, 65.6385, -1.87458, 0.55", "17.7525, 66.8764, -1.37316, 0.55", "18.4296, 69.5482, -0.292703, 0.55", "18.7837, 71.1279, 0.348096, 0.55", "19.0174, 72.4373, 0.88866, 0.55", "19.1991, 73.6987, 1.34303, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-38.0708, -37.5351, 3.94046, 0.55", "-42.3158, -38.5728, 4.29369, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-38.0708, -37.5351, 3.94046, 1.11", "-38.7546, -39.4205, 4.14107, 1.11", "-39.4876, -41.4403, 4.42218, 0.83", "-39.6915, -42.0776, 4.50263, 1.11", "-40.2778, -44.157, 4.73115, 0.55", "-40.7697, -46.0133, 4.94106, 0.83", "-41.281, -48.0948, 5.18576, 0.55", "-41.6655, -49.8159, 5.42522, 0.55", "-41.9662, -51.6162, 5.68796, 0.55", "-42.166, -53.1397, 5.87348, 0.83", "-42.3416, -55.0318, 6.03514, 0.55", "-42.3799, -55.9919, 6.07211, 0.28", "-42.3926, -56.327, 6.06757, 0.55", "-42.439, -57.8556, 6.05431, 0.28", "-42.488, -59.0138, 6.03931, 0.55", "-42.5889, -60.643, 5.99279, 0.28", "-42.6474, -61.3145, 5.96234, 0.55", "-42.8019, -62.5742, 5.90371, 0.28", "-43.1772, -65.0777, 5.79415, 0.83", "-43.6464, -68.1329, 5.70444, 0.55", "-43.9009, -69.6465, 5.67935, 0.83", "-44.2969, -71.6239, 5.57109, 0.55", "-44.5377, -72.6929, 5.4868, 0.55", "-44.9229, -74.2621, 5.26677, 0.83", "-45.391, -76.0759, 4.89437, 0.55", "-45.7811, -77.4926, 4.51479, 0.83", "-46.4427, -79.9451, 3.80855, 0.55", "-46.7609, -81.1718, 3.39598, 0.83", "-47.4057, -83.5094, 2.55518, 0.55", "-47.655, -84.3423, 2.22939, 0.83", "-48.4049, -86.7381, 1.26031, 0.55", "-48.9592, -88.5835, 0.467164, 0.83", "-49.7995, -91.4926, -0.790043, 0.55", "-50.1642, -92.6852, -1.32709, 0.55", "-50.5422, -93.8786, -1.84226, 0.83", "-50.9216, -94.9903, -2.27733, 0.83", "-51.742, -97.5587, -3.15824, 0.55", "-52.1245, -98.6747, -3.4674, 0.83", "-52.4715, -99.6931, -3.64276, 0.55", "-52.9862, -101.239, -3.86588, 0.83", "-54.2236, -105.125, -4.19651, 0.55", "-54.8389, -107.16, -4.28713, 0.55", "-55.7975, -110.458, -4.29212, 0.55", "-56.728, -113.963, -4.28599, 0.28", "-57.0232, -115.357, -4.28549, 0.55", "-57.3913, -117.712, -4.294, 0.28", "-57.5939, -119.555, -4.33467, 0.83", "-57.7911, -121.715, -4.40409, 0.28", "-57.9574, -124.766, -4.52137, 0.83", "-58.1632, -128.41, -4.69538, 0.83", "-58.3048, -130.659, -4.78267, 0.55", "-58.4295, -132.164, -4.86722, 0.28", "-58.4758, -132.563, -4.90055, 0.55", "-58.7136, -134.263, -5.10217, 0.28", "-58.9007, -135.1, -5.22444, 0.55", "-59.3389, -136.66, -5.46077, 0.28", "-59.6049, -137.589, -5.59921, 0.55", "-60.472, -140.61, -6.02795, 0.28", "-61.1908, -142.924, -6.3716, 0.28", "-62.1639, -145.749, -6.77732, 0.55", "-63.4942, -149.181, -7.20874, 0.28", "-63.7337, -149.728, -7.26521, 0.28", "-64.0247, -150.358, -7.30529, 0.55", "-64.671, -151.726, -7.31386, 0.55", "-65.9512, -154.252, -7.32011, 0.55", "-66.7529, -155.825, -7.32195, 0.28", "-67.4499, -157.182, -7.32978, 0.55", "-68.1506, -158.578, -7.34432, 0.55", "-69.806, -162.016, -7.39263, 0.28", "-70.1618, -162.794, -7.40566, 1.11", "-71.3838, -165.596, -7.46841, 0.55", "-72.3933, -168.012, -7.52309, 0.55", "-73.1724, -169.81, -7.5643, 1.38", "-76.2917, -180.254, -8.76308, 1.38", "-80.5007, -190.397, -8.69958, 1.38", "-86.6321, -199.519, -7.7886, 1.38" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-67.7982, -25.1075, -9.63884, 0.55", "-70.3047, -26.0803, -10.6952, 0.55", "-71.6483, -26.6691, -11.2761, 0.55", "-73.8841, -27.5688, -12.0695, 0.55", "-75.1501, -28.0646, -12.4878, 0.28", "-77.0508, -28.8499, -13.0815, 0.55", "-79.3521, -29.832, -13.753, 0.28", "-79.8746, -30.0682, -13.8785, 0.55", "-83.5396, -31.77, -14.6785, 0.55", "-84.4926, -32.2071, -14.8524, 0.28", "-85.9562, -32.9042, -15.0673, 0.28", "-87.2911, -33.5407, -15.2345, 0.55", "-88.6131, -34.2164, -15.3634, 0.28", "-90.3041, -35.164, -15.5495, 0.28", "-90.8319, -35.5314, -15.6326, 0.55", "-91.4968, -36.0054, -15.7437, 0.28", "-92.0362, -36.3694, -15.8299, 0.55", "-93.9015, -37.654, -16.1178, 0.28", "-94.6551, -38.1468, -16.2067, 0.55", "-96.1679, -39.1089, -16.3468, 0.28", "-96.9585, -39.5819, -16.3913, 0.55", "-100.582, -41.6443, -16.4899, 0.28", "-100.944, -41.8451, -16.4886, 0.55", "-102.539, -42.7426, -16.4278, 0.28", "-103.282, -43.2227, -16.3825, 0.55", "-104.976, -44.4633, -16.244, 0.28", "-105.186, -44.6439, -16.2287, 0.55", "-106.503, -46.0546, -16.1294, 0.28", "-107.305, -46.9883, -16.0695, 0.55", "-108.72, -48.7453, -15.9484, 0.28", "-109.112, -49.2454, -15.9153, 0.28", "-110.144, -50.5662, -15.8244, 0.55", "-112.847, -54.007, -15.5683, 0.28", "-113.619, -54.9952, -15.4865, 0.55", "-115.351, -57.1507, -15.2772, 0.28", "-116.503, -58.5266, -15.1153, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-67.7982, -25.1075, -9.63884, 0.28", "-69.1455, -22.7612, -9.51869, 0.28", "-70.2181, -20.8932, -9.42304, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-1.28696, -44.3411, -7.44026, 0.55", "-0.73379, -45.9266, -7.15808, 0.55", "-0.190931, -47.7796, -6.82254, 0.55", "0.535193, -50.3444, -6.34772, 0.55", "1.08486, -52.288, -5.99263, 0.55", "1.48363, -53.6816, -5.70902, 0.28", "1.66684, -54.3223, -5.5756, 0.55", "2.24317, -56.7678, -5.05531, 0.55", "2.51242, -57.9022, -4.8171, 0.28", "2.77663, -59.1674, -4.5466, 0.55", "3.1028, -60.7511, -4.21673, 0.55", "3.46803, -62.4168, -3.88385, 0.55", "3.95518, -64.769, -3.43069, 0.55", "4.36561, -66.7845, -3.05861, 0.55", "4.68945, -68.7135, -2.73102, 0.55", "4.90266, -70.4561, -2.46504, 0.55", "5.06585, -73.0475, -2.1882, 0.55", "5.06334, -74.3235, -2.12135, 0.55", "4.94889, -75.92, -2.12913, 0.55", "4.71223, -77.599, -2.24057, 0.55", "4.35135, -79.8022, -2.48633, 0.55", "3.89563, -82.2357, -2.80565, 0.55", "3.44014, -84.5208, -3.12834, 0.55", "2.9866, -86.6895, -3.44556, 0.55", "2.45218, -89.0688, -3.79859, 0.55", "1.97577, -91.1745, -4.09051, 0.55", "1.62776, -92.6931, -4.32013, 0.55", "1.26448, -94.0878, -4.56978, 0.55", "0.743883, -95.8378, -4.93255, 0.55", "0.33408, -97.0054, -5.23083, 0.55", "-0.428818, -98.8084, -5.73394, 0.55", "-1.43228, -101.123, -6.40326, 0.83", "-2.36466, -103.249, -7.06113, 0.55", "-3.18958, -105.138, -7.65199, 0.55", "-3.95457, -106.938, -8.20516, 0.55", "-4.99383, -109.414, -8.92769, 0.55", "-5.8968, -111.605, -9.51273, 0.55", "-6.49574, -113.138, -9.83697, 0.55", "-6.97714, -114.498, -10.0964, 0.55", "-7.52537, -116.181, -10.4314, 0.55", "-7.89046, -117.368, -10.6695, 0.55", "-8.40818, -119.21, -11.0441, 0.28", "-9.05569, -121.571, -11.4857, 0.55", "-9.64363, -123.931, -11.8858, 0.28", "-9.94963, -125.185, -12.0971, 0.55", "-10.321, -126.709, -12.3444, 0.28", "-10.6434, -128.007, -12.5462, 0.28", "-10.9253, -129.145, -12.6983, 0.55", "-11.2894, -130.517, -12.8622, 0.28", "-11.5711, -131.65, -12.9586, 0.55", "-12.2015, -134.136, -13.1299, 0.28", "-12.4969, -135.363, -13.1867, 0.55", "-12.7762, -136.458, -13.2157, 0.28", "-12.9442, -137.052, -13.2064, 0.28", "-13.5954, -139.161, -13.0809, 0.55", "-14.0257, -140.492, -12.9626, 0.28", "-14.812, -142.778, -12.7558, 0.55", "-15.2453, -143.98, -12.6613, 0.28", "-15.999, -146.052, -12.5338, 0.55", "-16.4726, -147.384, -12.4693, 0.83", "-16.8526, -148.399, -12.4357, 0.83", "-17.822, -151.293, -12.3976, 0.55", "-17.9628, -151.756, -12.4088, 0.83", "-18.442, -153.49, -12.5189, 0.28", "-18.6916, -154.627, -12.6332, 0.28", "-18.8818, -155.504, -12.7256, 0.55", "-19.2346, -157.047, -12.8775, 0.83", "-19.5728, -158.418, -13.0228, 0.55", "-20.0041, -160.059, -13.2197, 0.55", "-20.3351, -161.326, -13.3721, 0.83", "-20.8309, -163.283, -13.5912, 0.55", "-21.0283, -164.038, -13.6856, 0.83", "-21.5514, -165.801, -13.9207, 0.55", "-22.0029, -167.253, -14.1109, 0.55", "-22.4114, -168.507, -14.2674, 0.55", "-22.6777, -169.257, -14.351, 0.83", "-23.3333, -171.218, -14.5515, 0.55", "-23.8621, -172.88, -14.7082, 0.55", "-24.2469, -174.21, -14.8032, 0.83", "-24.5777, -175.353, -14.8873, 0.55", "-24.8572, -176.397, -14.9644, 0.83", "-25.3452, -178.666, -15.1804, 0.55", "-25.5585, -180.015, -15.3152, 0.55", "-25.6566, -180.958, -15.4443, 0.83", "-25.7657, -182.526, -15.6673, 0.55", "-25.8257, -183.63, -15.812, 0.83", "-25.9045, -185.397, -16.0037, 0.55", "-25.9287, -186.088, -16.0631, 0.83", "-25.9957, -188.09, -16.202, 0.28", "-26.0646, -189.247, -16.253, 0.55", "-26.1237, -190.428, -16.2607, 0.28", "-26.146, -190.787, -16.2546, 0.55", "-26.2373, -192.349, -16.2217, 0.28", "-26.3424, -194.411, -16.281, 0.55", "-26.4155, -195.504, -16.3849, 0.55", "-26.5317, -197.229, -16.6477, 0.28", "-26.5707, -197.761, -16.7484, 0.55", "-26.66, -199.18, -17.0414, 0.28", "-26.7816, -200.777, -17.3833, 0.55", "-26.9743, -202.848, -17.8542, 0.28", "-27.0564, -203.721, -18.0332, 0.55", "-27.2672, -205.52, -18.3491, 0.28", "-27.3215, -205.996, -18.4165, 0.28", "-27.5606, -208.025, -18.6395, 0.55", "-27.8178, -209.905, -18.7835, 0.28", "-28.1544, -212.741, -18.8869, 0.28", "-28.3797, -214.393, -18.9104, 0.55", "-28.6064, -216.131, -18.8932, 0.28", "-28.6733, -216.63, -18.8773, 0.55", "-29.0017, -219.229, -18.7268, 0.28", "-29.3374, -221.672, -18.5384, 0.28", "-29.4959, -222.764, -18.4482, 0.28", "-29.7071, -224.34, -18.3151, 0.83", "-29.9204, -226.223, -18.1876, 0.28", "-29.9809, -227.012, -18.1522, 0.55", "-29.993, -228.769, -18.1512, 0.28", "-29.9868, -230.513, -18.208, 0.28", "-29.9602, -231.071, -18.2385, 0.55", "-29.8416, -233.039, -18.3857, 0.28", "-29.724, -234.343, -18.5653, 0.83", "-29.4906, -236.972, -19.0478, 0.28", "-29.4446, -237.446, -19.1457, 0.55", "-29.3289, -238.957, -19.5015, 0.28", "-29.297, -239.424, -19.6234, 0.55", "-29.166, -242.104, -20.4501, 0.28", "-29.1483, -243.061, -20.8016, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-1.28696, -44.3411, -7.44026, 0.55", "-2.08879, -46.8139, -7.43752, 0.55", "-2.81362, -49.0492, -7.43504, 0.55", "-3.61762, -51.5286, -7.43229, 0.55", "-4.40548, -53.9583, -7.4296, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "1.31676, -30.8337, -1.2641, 0.55", "6.66155, -40.6234, 6.01188, 0.55", "10.9705, -50.4016, 13.9637, 0.55", "13.6443, -59.143, 23.7071, 0.55", "17.1238, -68.7334, 32.2839, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "1.31676, -30.8337, -1.2641, 0.55", "4.01965, -35.7097, 2.36847, 0.55", "5.31466, -41.3393, 5.60725, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "19.1991, 73.6987, 1.34303, 0.55", "19.6515, 74.5349, 1.32329, 0.55", "20.8875, 76.7805, 1.38498, 0.55", "22.2925, 79.3531, 1.52759, 0.55", "22.8807, 80.3902, 1.63243, 0.83", "23.7684, 82.007, 1.8505, 0.28", "24.4846, 83.2728, 2.07028, 0.55", "25.2495, 84.6754, 2.37596, 0.28", "25.3992, 84.9549, 2.44826, 0.55", "26.205, 86.4333, 2.85186, 0.28", "26.9208, 87.9279, 3.23585, 0.55", "27.8886, 90.4694, 3.87559, 0.28", "28.4076, 92.5575, 4.3597, 0.55", "28.8031, 94.8223, 4.87734, 0.28", "29.0448, 96.6841, 5.28509, 0.55", "29.4432, 101.344, 6.25731, 0.55", "29.7108, 105.371, 7.08872, 0.55", "29.9301, 111.169, 8.24203, 0.55", "30.0537, 115.514, 9.08135, 0.55", "30.1557, 119.701, 9.82637, 0.55", "30.2135, 121.624, 10.1534, 0.55", "30.3546, 125.194, 10.7255, 0.55", "30.5832, 128.496, 11.209, 0.55", "30.8104, 130.653, 11.5111, 0.28", "31.2099, 134.566, 12.027, 0.55", "31.4708, 137.086, 12.379, 0.28", "31.6767, 138.96, 12.6269, 0.55", "31.9906, 141.847, 12.9773, 0.55", "32.3899, 144.768, 13.3237, 0.28", "32.6909, 146.697, 13.534, 0.28", "33.0193, 148.561, 13.7019, 0.55", "33.3128, 149.816, 13.7645, 0.28", "33.6984, 151.402, 13.8062, 0.55", "34.1642, 153.234, 13.8273, 0.28", "34.472, 154.38, 13.8309, 0.55", "35.1202, 156.677, 13.8365, 0.55", "36.1759, 160.488, 13.856, 0.55", "37.0308, 163.659, 13.8893, 0.55", "37.6714, 166.145, 13.9011, 0.55", "38.0572, 167.722, 13.8951, 0.28", "39.0807, 171.874, 13.8643, 0.28", "43.1637, 182.71, 16.4283, 0.28", "46.1718, 193.405, 20.5833, 0.28", "49.4662, 203.817, 25.2453, 0.28", "52.323, 213.857, 30.9329, 0.28", "55.4578, 224.69, 34.592, 0.28", "56.2659, 236.141, 37.4216, 0.28", "55.1697, 247.817, 38.8107, 0.28", "56.6933, 259.47, 40.0415, 0.28", "59.03, 270.914, 41.9058, 0.28", "60.7856, 282.582, 42.5652, 0.28", "62.3769, 294.29, 42.7112, 0.28", "63.1766, 305.949, 44.4412, 0.28", "62.0363, 317.555, 46.3161, 0.28" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "19.1991, 73.6987, 1.34303, 0.55", "19.2106, 75.0467, 0.160806, 0.55", "19.0007, 76.861, -1.47519, 0.28", "18.8317, 77.6157, -2.13327, 0.28", "17.8993, 80.2337, -5.06269, 0.55", "16.9661, 82.2447, -7.65213, 0.28", "16.4927, 83.1173, -8.86818, 0.55", "15.364, 84.6931, -11.3936, 0.28", "14.2912, 85.8837, -13.4913, 0.55", "11.8229, 88.325, -17.8779, 0.28", "11.3203, 88.7663, -18.693, 0.55", "9.87914, 89.9056, -20.9266, 0.28", "8.7926, 90.7407, -22.6814, 0.83", "6.45664, 92.5164, -26.5431, 0.28", "5.46511, 93.3418, -28.1902, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-42.3158, -38.5728, 4.29369, 0.55", "-43.8793, -40.3688, 4.37805, 0.55", "-45.5795, -42.3221, 4.46979, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-42.3158, -38.5728, 4.29369, 0.55", "-45.6022, -35.9395, 6.42397, 0.55", "-47.0082, -34.813, 7.33533, 0.83", "-48.6803, -33.4734, 8.41916, 0.28", "-49.9469, -32.4585, 9.24016, 0.83", "-57.5023, -25.4572, 16.0112, 0.83", "-65.9717, -19.2833, 22.5467, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-4.40548, -53.9583, -7.4296, 0.55", "-4.58959, -55.8445, -7.42699, 0.55", "-4.75576, -57.1847, -7.42927, 0.55", "-4.97717, -58.8884, -7.4409, 0.55", "-5.16739, -60.3403, -7.52818, 0.55", "-5.3024, -61.4692, -7.63099, 0.55", "-5.43221, -62.5506, -7.7443, 0.28", "-5.45621, -62.7601, -7.77579, 0.28", "-5.52264, -63.3757, -7.89146, 0.83", "-5.83329, -65.6568, -8.40995, 0.55", "-5.95985, -66.4581, -8.62197, 1.11", "-5.9925, -66.756, -8.71451, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-4.40548, -53.9583, -7.4296, 0.55", "-5.39996, -54.7666, -7.64135, 0.55", "-7.1113, -56.2319, -8.13255, 0.55", "-8.17195, -57.0884, -8.41354, 0.55", "-9.78242, -58.3571, -8.82094, 0.83", "-11.9683, -60.1265, -9.44181, 0.55", "-12.7508, -60.7593, -9.66811, 0.55", "-14.8665, -62.5337, -10.4125, 0.55", "-16.5611, -63.9578, -11.0832, 0.55", "-18.7363, -65.9122, -11.9828, 0.55", "-20.1968, -67.2184, -12.5858, 0.55", "-20.8786, -67.7809, -12.8635, 0.55", "-22.5214, -69.0011, -13.5174, 0.55", "-23.7211, -69.7916, -13.9602, 0.28", "-25.1985, -70.7009, -14.512, 0.55", "-27.4359, -71.8578, -15.2317, 0.28", "-28.6338, -72.3802, -15.5827, 0.83", "-30.713, -73.2142, -16.1738, 0.28", "-31.3584, -73.4496, -16.3314, 0.55", "-32.9512, -74.0434, -16.7136, 0.28", "-34.5154, -74.6433, -17.1161, 0.83", "-37.2563, -75.8658, -17.8235, 0.28", "-37.883, -76.1922, -18.0061, 0.55", "-39.4649, -77.1293, -18.5446, 0.28", "-40.1293, -77.5824, -18.8019, 0.55", "-41.5845, -78.8855, -19.5402, 0.28", "-42.0135, -79.4064, -19.8294, 0.55", "-42.5893, -80.2702, -20.292, 0.28", "-42.8836, -80.767, -20.5774, 0.28", "-43.4525, -81.9187, -21.2851, 0.55", "-44.7883, -84.9512, -23.1621, 0.28", "-44.9305, -85.3331, -23.3875, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "17.1238, -68.7334, 32.2839, 0.55", "19.2266, -73.8715, 36.9252, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "17.1238, -68.7334, 32.2839, 0.55", "22.2786, -76.7038, 37.1901, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-45.5795, -42.3221, 4.46979, 0.55", "-47.6474, -43.2024, 4.56045, 0.55", "-49.3696, -43.9103, 4.68454, 0.55", "-52.1992, -45.0539, 4.91392, 0.55", "-53.7093, -45.6805, 5.00483, 0.83", "-56.4373, -46.9104, 5.14, 0.55", "-57.9468, -47.6616, 5.19494, 0.83", "-60.038, -48.7573, 5.29102, 0.55", "-61.1518, -49.4852, 5.32637, 0.83", "-62.4754, -50.5631, 5.35885, 0.28", "-63.4343, -51.4838, 5.35706, 0.83", "-64.6823, -52.8287, 5.27364, 0.28", "-65.3022, -53.5376, 5.24857, 0.55", "-66.5958, -55.183, 5.24119, 0.28", "-67.3056, -56.032, 5.2874, 0.55", "-68.0587, -56.8983, 5.39157, 0.28", "-69.0329, -57.8991, 5.5401, 0.83", "-70.2083, -59.0854, 5.73015, 0.55", "-70.8121, -59.6509, 5.81733, 0.83", "-72.6693, -61.2598, 6.04918, 0.28", "-73.9126, -62.3605, 6.19401, 0.83", "-75.5429, -63.7699, 6.34943, 0.55", "-76.9744, -64.9801, 6.49321, 0.55", "-78.5998, -66.2803, 6.64213, 0.55", "-79.2638, -66.7742, 6.70301, 0.55", "-80.4575, -67.5985, 6.80242, 0.83", "-82.0196, -68.5741, 6.99294, 0.55", "-83.6501, -69.5607, 7.25565, 0.28", "-85.3145, -70.5605, 7.56852, 0.83", "-86.4472, -71.2675, 7.79972, 0.28", "-87.5395, -71.9341, 8.02999, 0.55", "-89.2285, -72.9187, 8.39131, 0.28", "-90.4072, -73.6476, 8.67517, 0.28", "-91.3994, -74.2283, 8.91749, 0.55", "-92.7159, -75.0665, 9.29298, 0.83", "-100.131, -80.3923, 11.7, 0.83", "-109.035, -83.5892, 12.4663, 0.83", "-117.293, -87.726, 14.5654, 0.83", "-125.423, -92.375, 15.8929, 0.83", "-132.87, -97.9361, 17.5042, 0.83", "-140.854, -102.981, 17.671, 0.83", "-147.958, -108.851, 19.643, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-45.5795, -42.3221, 4.46979, 0.55", "-46.5557, -43.5779, 6.20452, 0.55", "-47.8859, -44.9689, 7.78409, 0.55", "-51.8285, -48.9879, 11.2754, 0.83", "-52.8922, -50.0115, 11.9453, 0.55", "-54.2935, -51.3888, 12.6404, 0.55", "-55.1242, -52.2627, 12.9897, 0.55", "-57.2242, -54.711, 13.6277, 0.55", "-58.8366, -56.6349, 13.8722, 0.55", "-61.047, -59.2479, 13.8512, 0.55", "-62.5635, -61.2309, 13.9323, 0.55", "-64.0674, -63.4158, 14.1239, 0.55", "-65.1875, -65.2919, 14.3755, 0.55", "-65.9775, -66.8266, 14.672, 0.55", "-66.7247, -68.3839, 15.0412, 0.55", "-68.9085, -73.2899, 16.3901, 0.55", "-69.85, -75.2924, 16.9982, 0.83", "-71.7102, -79.1104, 18.2072, 0.55", "-72.6163, -81.0022, 18.8266, 0.55", "-73.4316, -82.722, 19.3783, 0.83", "-74.062, -84.1118, 19.7835, 0.28", "-75.2618, -86.8819, 20.5401, 0.55", "-75.8521, -88.2603, 20.9152, 0.55", "-77.0163, -90.9104, 21.6121, 0.83", "-78.5648, -94.5844, 22.5039, 0.55", "-79.1777, -96.1915, 22.8853, 0.83", "-80.1249, -99.0251, 23.4999, 0.28", "-80.6287, -100.805, 23.842, 0.55", "-81.0439, -102.263, 24.1046, 0.55", "-82.0007, -105.641, 24.6319, 0.28", "-82.3615, -106.963, 24.8192, 0.28", "-82.9411, -108.963, 25.0782, 0.55", "-83.5635, -111.055, 25.2632, 0.55", "-84.5528, -115.137, 25.6579, 0.55", "-88.7836, -126.135, 29.8531, 0.55", "-91.4578, -136.472, 36.4444, 0.55", "-91.561, -145.852, 44.8482, 0.55", "-90.8142, -156.049, 52.148, 0.55", "-88.6029, -166.485, 58.7659, 0.55", "-87.5723, -177.371, 64.8874, 0.55", "-87.5712, -188.959, 69.5531, 0.55", "-87.0056, -200.503, 74.305, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-65.9717, -19.2833, 22.5467, 0.83", "-71.2317, -15.0496, 27.278, 0.83", "-76.3674, -11.7797, 32.8687, 0.83", "-80.8563, -8.46268, 38.9605, 0.83", "-84.3546, -6.09304, 46.0785, 0.83", "-87.5632, -3.24718, 53.1468, 0.83", "-91.1152, 0.307903, 59.6934, 0.83", "-94.8508, 4.59172, 65.653, 0.83", "-97.7988, 9.43599, 71.5981, 0.83", "-100.254, 15.403, 76.6228, 0.83", "-102.298, 21.3939, 81.7959, 0.83", "-105.599, 26.7211, 87.0891, 0.83", "-110.147, 31.7186, 91.77, 0.83", "-113.249, 36.7961, 97.4267, 0.83", "-116.643, 41.722, 103.058, 0.83", "-120.352, 46.8043, 108.337, 0.83", "-124.878, 52.0194, 112.785, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-65.9717, -19.2833, 22.5467, 0.55", "-73.7348, -12.8995, 28.3301, 0.83", "-82.8807, -8.26798, 33.8448, 0.83", "-91.6212, -2.02378, 38.235, 0.83", "-100.651, 4.34216, 41.7824, 0.83", "-110.171, 10.8848, 42.8802, 0.83", "-118.928, 18.2424, 44.6754, 0.83", "-127.901, 25.2239, 46.9207, 0.83", "-136.64, 31.9939, 50.4063, 0.83", "-143.836, 39.8671, 54.8404, 0.83", "-152.165, 46.943, 58.6721, 0.83", "-161.373, 53.5096, 61.2484, 0.83", "-170.11, 60.352, 64.5911, 0.83", "-178.887, 67.3065, 67.5679, 0.83", "-187.334, 73.4895, 72.5753, 0.83", "-195.784, 78.4225, 78.8662, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-5.9925, -66.756, -8.71451, 0.28", "-5.92759, -68.2701, -8.94564, 0.28", "-5.90424, -69.1712, -9.09883, 0.55", "-5.86881, -71.6111, -9.60237, 0.28", "-5.87183, -72.9098, -9.88719, 1.11", "-5.86238, -75.365, -10.4391, 0.55", "-5.81982, -76.7187, -10.743, 0.83", "-5.73997, -78.6569, -11.2511, 0.55", "-5.65662, -80.8123, -11.8864, 0.28", "-5.63518, -81.2788, -12.035, 0.55", "-5.57955, -82.973, -12.5961, 0.55", "-5.47106, -85.3124, -13.3589, 0.83", "-5.27944, -87.6356, -14.1326, 0.28", "-5.11399, -88.8415, -14.5378, 0.83", "-5.01345, -89.4253, -14.7146, 0.55", "-4.7709, -90.7083, -15.0624, 0.28", "-4.44991, -92.4075, -15.4495, 0.83", "-4.09507, -94.239, -15.8313, 0.28", "-3.8581, -95.4576, -16.1076, 0.83", "-3.4513, -97.812, -16.7235, 0.55", "-3.33097, -98.7215, -16.9887, 0.28", "-3.27416, -99.2798, -17.1584, 0.55", "-3.15138, -101.887, -17.9387, 0.55", "-3.12724, -105.027, -18.8322, 0.28", "-3.1498, -105.897, -19.071, 0.83", "-3.38078, -109.42, -20.0615, 0.28", "-3.46441, -110.297, -20.2741, 0.55", "-3.6138, -111.516, -20.4839, 0.28", "-3.68675, -111.963, -20.4923, 0.55", "-3.90551, -113.065, -20.3459, 0.28", "-3.97397, -113.37, -20.2788, 0.55", "-4.27168, -114.617, -19.827, 0.28", "-4.47043, -115.428, -19.552, 0.55", "-4.65027, -116.273, -19.2962, 0.28", "-4.75475, -116.744, -19.2003, 0.55", "-5.08208, -118.273, -19.0216, 0.28", "-5.2827, -119.091, -18.9651, 0.55", "-5.6561, -120.455, -18.9305, 0.28", "-5.83607, -121.11, -18.9307, 0.55", "-6.53439, -123.742, -18.989, 0.28", "-6.91708, -125.37, -19.0356, 0.28", "-7.16388, -126.58, -19.0812, 0.55", "-7.32077, -127.544, -19.1127, 0.28", "-7.56247, -129.769, -19.1411, 0.28", "-7.65253, -130.943, -19.1253, 0.55", "-7.70525, -132.767, -19.0369, 0.28", "-7.68926, -133.629, -18.9765, 0.28", "-7.61358, -134.935, -18.8612, 0.28", "-7.50183, -136.045, -18.7287, 0.55", "-7.3102, -137.667, -18.5034, 0.28", "-7.2608, -138.1, -18.4512, 0.55", "-7.1044, -139.454, -18.3555, 0.28", "-7.01435, -140.139, -18.3384, 0.55", "-6.69736, -142.407, -18.3531, 0.28", "-6.43839, -143.854, -18.3777, 0.83", "-5.98214, -146.131, -18.4807, 0.28", "-5.63905, -147.665, -18.5697, 0.83", "-4.85204, -150.867, -18.7884, 0.28", "-4.79542, -151.07, -18.8078, 0.55", "-4.10467, -153.234, -19.0754, 0.28", "-3.77642, -154.072, -19.205, 0.55", "-2.94518, -155.856, -19.526, 0.28", "-2.6986, -156.295, -19.6257, 0.55", "-1.79307, -157.57, -20.0623, 0.28", "-1.36159, -158.079, -20.2627, 0.55", "-0.223258, -159.158, -20.7617, 0.28", "0.377717, -159.65, -20.9987, 0.55", "1.67042, -160.532, -21.4889, 0.28", "2.04258, -160.761, -21.6153, 0.55", "3.46944, -161.519, -21.9409, 0.28", "4.59434, -162.052, -22.1417, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.9925, -66.756, -8.71451, 0.55", "-7.26933, -65.1933, -7.48095, 0.55", "-8.32774, -63.8979, -6.4584, 0.55", "-10.5146, -61.2214, -4.34565, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-10.5146, -61.2214, -4.34565, 0.55", "-13.4444, -59.4553, -2.81321, 0.55", "-15.9986, -57.9157, -1.47726, 0.28", "-16.7987, -57.4334, -1.05876, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-10.5146, -61.2214, -4.34565, 0.55", "-11.0019, -60.9007, -3.55333, 0.55", "-11.4162, -60.6281, -2.8797, 0.55", "-12.478, -59.9294, -1.15344, 0.55", "-13.6498, -59.1584, 0.751685, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-13.6498, -59.1584, 0.751685, 0.55", "-15.1865, -58.6644, 2.87056, 0.55", "-17.2825, -58.0398, 5.68331, 0.28", "-17.6485, -57.9265, 6.15769, 0.55", "-19.2301, -57.4503, 8.05561, 0.28", "-19.9782, -57.225, 8.95337, 0.83", "-22.5851, -56.4399, 12.0818, 0.55", "-23.4988, -56.2025, 13.1749, 0.55", "-24.8116, -55.8502, 14.6305, 0.55", "-26.9313, -55.2517, 17.0466, 0.55", "-32.6181, -53.0552, 25.0667, 0.55", "-37.7803, -49.4402, 32.8994, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-13.6498, -59.1584, 0.751685, 0.55", "-14.5994, -60.49, 2.66077, 0.55", "-14.9818, -61.0473, 3.28756, 0.55", "-15.9867, -62.6768, 4.74419, 0.55", "-19.187, -69.0662, 9.36406, 0.55", "-19.7817, -70.3541, 10.1569, 0.55", "-20.9359, -73.1216, 11.7555, 0.55", "-22.0601, -76.2523, 13.4628, 0.55", "-23.1322, -79.4065, 15.0566, 0.55", "-24.741, -84.4861, 17.34, 0.28", "-25.632, -87.8277, 18.5704, 0.28", "-26.5782, -91.8263, 20.083, 0.28", "-27.0369, -94.6943, 21.1878, 0.28", "-27.1899, -96.6194, 21.9312, 0.55", "-27.1487, -100.193, 23.283, 0.28", "-26.8907, -102.011, 23.919, 0.28", "-26.6967, -102.679, 24.1215, 0.55", "-25.0511, -107.017, 25.1483, 0.28", "-23.9195, -109.349, 25.6093, 0.28", "-22.9505, -110.943, 25.923, 0.28", "-21.893, -112.333, 26.1711, 0.28", "-20.2293, -114.337, 26.5549, 0.55", "-22.7062, -123.765, 33.1704, 0.55", "-27.659, -133.425, 37.7287, 0.55", "-30.7307, -142.653, 44.3916, 0.55", "-33.2466, -151.613, 51.6456, 0.55", "-35.4297, -161.639, 57.3799, 0.55", "-35.5225, -170.85, 64.7345, 0.55", "-36.639, -179.188, 73.0408, 0.55", "-36.8437, -188.381, 80.4179, 0.55", "-35.5772, -198.443, 86.3528, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-37.7803, -49.4402, 32.8994, 0.55", "-45.9861, -46.3047, 40.8451, 0.55", "-54.7574, -42.218, 47.646, 0.55", "-62.787, -38.8697, 55.6816, 0.55", "-71.541, -36.8446, 63.4127, 0.55", "-80.9927, -34.8926, 70.2915, 0.55", "-89.9497, -34.342, 78.0442, 0.55", "-97.6523, -31.4575, 86.5739, 0.55", "-105.935, -27.6588, 94.127, 0.55", "-115.358, -23.8928, 100.204, 0.55", "-123.791, -21.2458, 108.096, 0.55", "-130.645, -19.9304, 117.684, 0.55", "-137.547, -20.2944, 127.315, 0.55", "-143.214, -19.4874, 137.7, 0.55", "-149.002, -17.4084, 147.839, 0.55", "-154.923, -17.5916, 158.107, 0.55", "-161.168, -16.3436, 168.111, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-37.7803, -49.4402, 32.8994, 0.55", "-48.465, -46.5695, 38.9401, 0.55", "-58.8252, -43.0018, 45.1539, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_33", "dend_0", "dend_46", "dend_45", "dend_43", "dend_34", "dend_20", "dend_1", "dend_40", "dend_35", "dend_24", "dend_21", "dend_7", "dend_2", "dend_42", "dend_41", "dend_39", "dend_36", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_8", "dend_4", "dend_3", "dend_38", "dend_37", "dend_30", "dend_27", "dend_10", "dend_9", "dend_6", "dend_5", "dend_32", "dend_31", "dend_29", "dend_28", "dend_18", "dend_11", "dend_17", "dend_12", "dend_14", "dend_13", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_33", "dend_0", "dend_46", "dend_45", "dend_43", "dend_34", "dend_20", "dend_1", "dend_40", "dend_35", "dend_24", "dend_21", "dend_7", "dend_2", "dend_42", "dend_41", "dend_39", "dend_36", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_8", "dend_4", "dend_3", "dend_38", "dend_37", "dend_30", "dend_27", "dend_10", "dend_9", "dend_6", "dend_5", "dend_32", "dend_31", "dend_29", "dend_28", "dend_18", "dend_11", "dend_17", "dend_12", "dend_14", "dend_13", "dend_16", "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_5", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_SBC_6cab0b0a69_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_33
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_20, id: dend_20, parent: dend_0
create dend_20
public dend_20
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_7
create dend_19
public dend_19
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_33, dend_0, dend_46, dend_45, dend_43, dend_34, dend_20, dend_1, dend_40, dend_35, dend_24, dend_21, dend_7, dend_2, dend_42, dend_41, dend_39, dend_36, dend_26, dend_25, dend_23, dend_22, dend_19, dend_8, dend_4, dend_3, dend_38, dend_37, dend_30, dend_27, dend_10, dend_9, dend_6, dend_5, dend_32, dend_31, dend_29, dend_28, dend_18, dend_11, dend_17, dend_12, dend_14, dend_13, dend_16, dend_15]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_33, dend_0, dend_46, dend_45, dend_43, dend_34, dend_20, dend_1, dend_40, dend_35, dend_24, dend_21, dend_7, dend_2, dend_42, dend_41, dend_39, dend_36, dend_26, dend_25, dend_23, dend_22, dend_19, dend_8, dend_4, dend_3, dend_38, dend_37, dend_30, dend_27, dend_10, dend_9, dend_6, dend_5, dend_32, dend_31, dend_29, dend_28, dend_18, dend_11, dend_17, dend_12, dend_14, dend_13, dend_16, dend_15]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_50
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_5, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.45000015788621994)
    connect dend_33(0), soma_0(0.45000015788621994)
    connect dend_0(0), soma_0(0.45000015788621994)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_20(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.72119, -5.79195, 0.0, 1.92372 ) }
    soma_0 { pt3dadd( -1.53528, -5.1504, 0.0, 2.21713 ) }
    soma_0 { pt3dadd( -1.34936, -4.50886, 0.0, 2.89016 ) }
    soma_0 { pt3dadd( -1.16344, -3.86732, 0.0, 3.56011 ) }
    soma_0 { pt3dadd( -0.977521, -3.22578, 0.0, 4.32586 ) }
    soma_0 { pt3dadd( -0.791602, -2.58424, 0.0, 5.04438 ) }
    soma_0 { pt3dadd( -0.605684, -1.9427, 0.0, 5.62205 ) }
    soma_0 { pt3dadd( -0.419765, -1.30116, 0.0, 5.91171 ) }
    soma_0 { pt3dadd( -0.233847, -0.659622, 0.0, 5.96727 ) }
    soma_0 { pt3dadd( -0.047928, -0.018082, 0.0, 5.95189 ) }
    soma_0 { pt3dadd( 0.137991, 0.623458, 0.0, 5.88627 ) }
    soma_0 { pt3dadd( 0.323909, 1.265, 0.0, 5.82615 ) }
    soma_0 { pt3dadd( 0.509828, 1.90654, 0.0, 5.76603 ) }
    soma_0 { pt3dadd( 0.695746, 2.54808, 0.0, 5.60884 ) }
    soma_0 { pt3dadd( 0.881665, 3.18962, 0.0, 5.14354 ) }
    soma_0 { pt3dadd( 1.06758, 3.83116, 0.0, 4.52229 ) }
    soma_0 { pt3dadd( 1.2535, 4.4727, 0.0, 3.90104 ) }
    soma_0 { pt3dadd( 1.43942, 5.11424, 0.0, 3.27979 ) }
    soma_0 { pt3dadd( 1.62534, 5.75578, 0.0, 2.62338 ) }
    soma_0 { pt3dadd( 1.81126, 6.39732, 0.0, 1.5824 ) }
    soma_0 { pt3dadd( 1.99718, 7.03886, 0.0, 0.989284 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -0.0984881, 4.6272, 2.22, 0.55 ) }
    dend_44 { pt3dadd( 0.264085, 5.76925, 3.11242, 0.55 ) }
    dend_44 { pt3dadd( 0.601872, 6.6611, 3.86475, 0.28 ) }
    dend_44 { pt3dadd( 0.843004, 7.23035, 4.43068, 0.55 ) }
    dend_44 { pt3dadd( 1.27859, 8.50384, 5.8508, 0.28 ) }
    dend_44 { pt3dadd( 1.39809, 8.92355, 6.32886, 0.83 ) }
    dend_44 { pt3dadd( 1.83206, 10.8301, 8.61231, 0.55 ) }
    dend_44 { pt3dadd( 2.12746, 12.5652, 10.823, 0.55 ) }
    dend_44 { pt3dadd( 2.28637, 13.9881, 12.6522, 0.83 ) }
    dend_44 { pt3dadd( 2.4282, 16.1054, 15.3056, 0.28 ) }
    dend_44 { pt3dadd( 2.4519, 16.5729, 15.855, 0.55 ) }
    dend_44 { pt3dadd( 2.50526, 18.1224, 17.5531, 0.28 ) }
    dend_44 { pt3dadd( 2.51879, 18.9062, 18.367, 0.28 ) }
    dend_44 { pt3dadd( 2.6258, 19.5781, 19.0186, 0.55 ) }
    dend_44 { pt3dadd( 3.17865, 21.0254, 20.2689, 0.28 ) }
    dend_44 { pt3dadd( 4.09196, 22.1341, 21.2543, 0.55 ) }
    dend_44 { pt3dadd( 5.30582, 23.0671, 22.1604, 0.28 ) }
    dend_44 { pt3dadd( 6.26971, 23.6309, 22.7891, 0.55 ) }
    dend_44 { pt3dadd( 7.74801, 24.3694, 23.7858, 0.28 ) }
    dend_44 { pt3dadd( 8.45455, 24.7157, 24.3141, 0.28 ) }
    dend_44 { pt3dadd( 9.36176, 25.2154, 25.0948, 0.28 ) }
    dend_44 { pt3dadd( 10.6544, 25.9295, 26.3453, 0.55 ) }
    dend_44 { pt3dadd( 12.1727, 26.8774, 27.9915, 0.28 ) }
    dend_44 { pt3dadd( 12.6679, 27.2925, 28.5996, 0.55 ) }
    dend_44 { pt3dadd( 13.6051, 28.3558, 30.011, 0.28 ) }
    dend_44 { pt3dadd( 14.1054, 29.1137, 30.9362, 0.55 ) }
    dend_44 { pt3dadd( 17.4298, 34.9664, 35.3178, 0.55 ) }
    dend_44 { pt3dadd( 20.2693, 40.9705, 39.8231, 0.55 ) }
    dend_44 { pt3dadd( 21.8642, 47.2306, 44.5681, 0.55 ) }
    dend_44 { pt3dadd( 23.9307, 53.544, 49.0495, 0.55 ) }
    dend_44 { pt3dadd( 26.0921, 59.2643, 54.2639, 0.55 ) }
    dend_44 { pt3dadd( 28.6996, 65.4333, 58.6741, 0.55 ) }
    dend_44 { pt3dadd( 29.988, 70.7128, 64.6156, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 54/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 2.71151, 5.9142, -5.46, 1.38 ) }
    dend_33 { pt3dadd( 3.74123, 8.82107, -4.95937, 1.11 ) }
    dend_33 { pt3dadd( 5.22713, 13.3045, -4.13228, 1.38 ) }
    dend_33 { pt3dadd( 5.76445, 14.9257, -3.83319, 0.55 ) }
    dend_33 { pt3dadd( 6.73296, 17.848, -3.29409, 1.66 ) }
    dend_33 { pt3dadd( 8.11856, 22.0287, -2.52283, 0.83 ) }
    dend_33 { pt3dadd( 9.21586, 25.3396, -1.91204, 1.11 ) }
    dend_33 { pt3dadd( 9.78517, 27.066, -1.51093, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 62/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.04849, -6.36105, -5.94, 2.22 ) }
    dend_0 { pt3dadd( -2.82786, -8.31227, -6.08694, 2.22 ) }
    dend_0 { pt3dadd( -4.145, -11.6098, -6.33528, 1.38 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 65/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.99718, 7.03886, 0.0, 0.55 ) }
    axon_0 { pt3dadd( 6.17239, 21.4461, 0.0, 0.55 ) }
    axon_0 { pt3dadd( 10.3476, 35.8533, 0.0, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 68/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 29.988, 70.7128, 64.6156, 0.55 ) }
    dend_46 { pt3dadd( 32.7404, 77.2698, 71.1912, 0.55 ) }
    dend_46 { pt3dadd( 34.7896, 84.8372, 76.8127, 0.55 ) }
    dend_46 { pt3dadd( 38.0532, 91.8608, 82.6009, 0.55 ) }
    dend_46 { pt3dadd( 41.5083, 99.6031, 87.1908, 0.55 ) }
    dend_46 { pt3dadd( 43.8996, 108.298, 90.4791, 0.55 ) }
    dend_46 { pt3dadd( 47.0994, 117.156, 92.2968, 0.55 ) }
    dend_46 { pt3dadd( 49.7251, 126.324, 93.1727, 0.55 ) }
    dend_46 { pt3dadd( 52.8999, 135.289, 94.3774, 0.55 ) }
    dend_46 { pt3dadd( 54.3089, 144.705, 95.2771, 0.55 ) }
    dend_46 { pt3dadd( 56.843, 153.816, 96.8017, 0.55 ) }
    dend_46 { pt3dadd( 60.4653, 162.359, 99.2878, 0.55 ) }
    dend_46 { pt3dadd( 63.3233, 171.487, 99.8047, 0.55 ) }
    dend_46 { pt3dadd( 67.1486, 180.231, 100.815, 0.55 ) }
    dend_46 { pt3dadd( 70.7977, 188.903, 102.731, 0.55 ) }
    dend_46 { pt3dadd( 75.6987, 197.177, 102.997, 0.55 ) }
    dend_46 { pt3dadd( 81.7264, 204.682, 103.724, 0.55 ) }
    dend_46 { pt3dadd( 88.9329, 211.07, 102.601, 0.55 ) }
    dend_46 { pt3dadd( 95.4316, 218.222, 102.869, 0.55 ) }
    dend_46 { pt3dadd( 101.437, 225.717, 103.846, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 88/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 29.988, 70.7128, 64.6156, 0.55 ) }
    dend_45 { pt3dadd( 32.0003, 74.9304, 68.5728, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_33 (entry count 90/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 9.78517, 27.066, -1.51093, 0.55 ) }
    dend_43 { pt3dadd( 10.0581, 29.6638, -0.379037, 0.55 ) }
    dend_43 { pt3dadd( 10.551, 32.1464, 0.799022, 0.55 ) }
    dend_43 { pt3dadd( 11.4151, 34.8372, 2.15548, 0.55 ) }
    dend_43 { pt3dadd( 12.0158, 36.4277, 2.96164, 0.55 ) }
    dend_43 { pt3dadd( 13.9619, 40.7523, 5.01135, 0.55 ) }
    dend_43 { pt3dadd( 15.4279, 43.6353, 6.30435, 0.55 ) }
    dend_43 { pt3dadd( 16.2865, 44.8866, 6.83719, 0.55 ) }
    dend_43 { pt3dadd( 18.2712, 47.2227, 7.74407, 0.55 ) }
    dend_43 { pt3dadd( 20.4053, 49.3697, 8.46227, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_43 { pt3dadd( 23.4455, 52.031, 9.23818, 0.55 ) }
    dend_43 { pt3dadd( 25.1082, 53.3461, 9.52948, 0.55 ) }
    dend_43 { pt3dadd( 28.2215, 55.6856, 9.87464, 0.55 ) }
    dend_43 { pt3dadd( 29.7573, 56.8229, 10.0139, 0.55 ) }
    dend_43 { pt3dadd( 31.0731, 57.7292, 10.1181, 0.28 ) }
    dend_43 { pt3dadd( 31.9453, 58.2192, 10.1838, 0.55 ) }
    dend_43 { pt3dadd( 33.5145, 59.0098, 10.339, 0.28 ) }
    dend_43 { pt3dadd( 34.0954, 59.2733, 10.3983, 0.28 ) }
    dend_43 { pt3dadd( 35.8145, 59.9241, 10.5698, 0.55 ) }
    dend_43 { pt3dadd( 37.9425, 60.7182, 10.7397, 0.55 ) }
    dend_43 { pt3dadd( 40.2288, 61.5238, 10.9346, 0.55 ) }
    dend_43 { pt3dadd( 41.5839, 61.9545, 11.0778, 0.55 ) }
    dend_43 { pt3dadd( 43.4945, 62.5398, 11.3129, 0.55 ) }
    dend_43 { pt3dadd( 45.5105, 63.1692, 11.607, 0.55 ) }
    dend_43 { pt3dadd( 47.8436, 63.9421, 12.0417, 0.55 ) }
    dend_43 { pt3dadd( 49.4898, 64.549, 12.4252, 0.55 ) }
    dend_43 { pt3dadd( 51.653, 65.5262, 13.1145, 0.55 ) }
    dend_43 { pt3dadd( 53.7262, 66.6512, 13.9291, 0.28 ) }
    dend_43 { pt3dadd( 54.2203, 66.994, 14.1649, 0.55 ) }
    dend_43 { pt3dadd( 55.5987, 68.1046, 14.9213, 0.28 ) }
    dend_43 { pt3dadd( 56.1308, 68.5417, 15.2224, 0.55 ) }
    dend_43 { pt3dadd( 57.5008, 69.7818, 15.9725, 0.28 ) }
    dend_43 { pt3dadd( 58.608, 70.7905, 16.5654, 0.55 ) }
    dend_43 { pt3dadd( 60.3028, 72.2654, 17.4489, 0.28 ) }
    dend_43 { pt3dadd( 60.889, 72.7558, 17.7326, 0.55 ) }
    dend_43 { pt3dadd( 62.9935, 74.3663, 18.6098, 0.28 ) }
    dend_43 { pt3dadd( 63.9074, 75.0027, 18.9161, 0.55 ) }
    dend_43 { pt3dadd( 65.1293, 75.7536, 19.252, 0.28 ) }
    dend_43 { pt3dadd( 65.5941, 76.0117, 19.3377, 0.55 ) }
    dend_43 { pt3dadd( 66.7717, 76.6978, 19.4366, 0.28 ) }
    dend_43 { pt3dadd( 67.5881, 77.1983, 19.4623, 0.55 ) }
    dend_43 { pt3dadd( 68.7986, 77.9922, 19.4105, 0.28 ) }
    dend_43 { pt3dadd( 69.5735, 78.5224, 19.3461, 0.55 ) }
    dend_43 { pt3dadd( 71.4722, 79.9548, 19.0842, 0.28 ) }
    dend_43 { pt3dadd( 72.7355, 80.8797, 18.8522, 0.55 ) }
    dend_43 { pt3dadd( 80.3356, 88.9059, 21.579, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 9.78517, 27.066, -1.51093, 0.55 ) }
    dend_34 { pt3dadd( 8.64024, 29.0907, -6.58517, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_0 (entry count 38/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -4.145, -11.6098, -6.33528, 0.83 ) }
    dend_20 { pt3dadd( -6.22018, -13.0005, -5.97833, 0.83 ) }
    dend_20 { pt3dadd( -8.88842, -14.7887, -5.51938, 0.83 ) }
    dend_20 { pt3dadd( -11.5107, -16.5462, -5.06832, 0.83 ) }
    dend_20 { pt3dadd( -14.5239, -18.5657, -4.55002, 0.83 ) }
    dend_20 { pt3dadd( -16.1148, -19.6319, -4.27637, 0.83 ) }
    dend_20 { pt3dadd( -18.7579, -21.4031, -3.82175, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 45/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -4.145, -11.6098, -6.33528, 1.11 ) }
    dend_1 { pt3dadd( -3.80624, -13.7327, -6.52773, 1.11 ) }
    dend_1 { pt3dadd( -3.47562, -15.8045, -6.71556, 1.11 ) }
    dend_1 { pt3dadd( -3.05824, -18.42, -6.95266, 0.83 ) }
    dend_1 { pt3dadd( -2.42509, -22.3878, -7.31236, 0.83 ) }
    dend_1 { pt3dadd( -2.31133, -23.1007, -7.37699, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 51/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.3476, 35.8533, 0.0, 0.55 ) }
    axon_1 { pt3dadd( 14.5228, 50.2605, 0.0, 0.55 ) }
    axon_1 { pt3dadd( 18.698, 64.6677, 0.0, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 54/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 8.64024, 29.0907, -6.58517, 0.55 ) }
    dend_40 { pt3dadd( 9.20397, 32.5592, -7.26321, 0.55 ) }
    dend_40 { pt3dadd( 9.43724, 34.2583, -7.67056, 0.83 ) }
    dend_40 { pt3dadd( 9.97776, 37.9565, -8.42736, 0.55 ) }
    dend_40 { pt3dadd( 10.314, 39.8887, -8.76608, 0.83 ) }
    dend_40 { pt3dadd( 10.8876, 42.7882, -9.18172, 0.55 ) }
    dend_40 { pt3dadd( 11.4873, 45.5126, -9.5262, 0.83 ) }
    dend_40 { pt3dadd( 11.9864, 47.5496, -9.72922, 0.55 ) }
    dend_40 { pt3dadd( 13.1274, 52.0202, -10.1028, 0.55 ) }
    dend_40 { pt3dadd( 14.1622, 55.5008, -10.2879, 0.55 ) }
    dend_40 { pt3dadd( 15.0318, 58.1692, -10.3231, 0.55 ) }
    dend_40 { pt3dadd( 15.5021, 59.4266, -10.2987, 0.28 ) }
    dend_40 { pt3dadd( 16.3517, 61.5484, -10.1913, 0.55 ) }
    dend_40 { pt3dadd( 17.0436, 63.114, -10.107, 0.55 ) }
    dend_40 { pt3dadd( 18.2332, 65.7092, -10.0445, 0.55 ) }
    dend_40 { pt3dadd( 19.2083, 67.8156, -10.0148, 0.55 ) }
    dend_40 { pt3dadd( 20.1996, 69.8788, -10.0509, 0.28 ) }
    dend_40 { pt3dadd( 20.9065, 71.3105, -10.1126, 0.55 ) }
    dend_40 { pt3dadd( 21.9587, 73.3596, -10.1793, 0.28 ) }
    dend_40 { pt3dadd( 22.5066, 74.4436, -10.1969, 0.28 ) }
    dend_40 { pt3dadd( 22.9119, 75.315, -10.2014, 0.55 ) }
    dend_40 { pt3dadd( 23.7211, 77.1436, -10.1786, 0.28 ) }
    dend_40 { pt3dadd( 24.054, 77.9239, -10.1421, 0.55 ) }
    dend_40 { pt3dadd( 25.0248, 80.2281, -9.98005, 0.28 ) }
    dend_40 { pt3dadd( 25.5957, 81.5475, -9.88127, 0.28 ) }
    dend_40 { pt3dadd( 26.0878, 82.6315, -9.80088, 0.55 ) }
    dend_40 { pt3dadd( 26.876, 84.3591, -9.68586, 0.28 ) }
    dend_40 { pt3dadd( 27.337, 85.3618, -9.62066, 0.55 ) }
    dend_40 { pt3dadd( 28.2818, 87.3027, -9.54729, 0.55 ) }
    dend_40 { pt3dadd( 29.4892, 89.6427, -9.62393, 0.28 ) }
    dend_40 { pt3dadd( 29.8888, 90.4109, -9.65753, 0.55 ) }
    dend_40 { pt3dadd( 30.7165, 92.009, -9.77174, 0.28 ) }
    dend_40 { pt3dadd( 31.292, 93.2242, -9.94696, 0.55 ) }
    dend_40 { pt3dadd( 31.5477, 93.7556, -10.0572, 0.55 ) }
    dend_40 { pt3dadd( 32.2787, 95.3824, -10.4916, 0.28 ) }
    dend_40 { pt3dadd( 32.5766, 96.1053, -10.7001, 0.28 ) }
    dend_40 { pt3dadd( 32.983, 97.0742, -11.0169, 0.55 ) }
    dend_40 { pt3dadd( 34.1607, 99.8652, -12.0514, 0.28 ) }
    dend_40 { pt3dadd( 35.1937, 102.374, -13.0625, 0.55 ) }
    dend_40 { pt3dadd( 35.7194, 103.669, -13.596, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 94/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 8.64024, 29.0907, -6.58517, 0.83 ) }
    dend_35 { pt3dadd( 9.69663, 31.4083, -6.73315, 0.83 ) }
    dend_35 { pt3dadd( 10.7629, 33.9997, -6.90296, 0.28 ) }
    dend_35 { pt3dadd( 11.4263, 35.677, -7.00956, 0.55 ) }
    dend_35 { pt3dadd( 12.4893, 38.7415, -7.18553, 0.28 ) }
    dend_35 { pt3dadd( 12.8205, 39.6965, -7.24037, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_35 { pt3dadd( 13.1907, 40.7635, -7.30164, 0.55 ) }
    dend_35 { pt3dadd( 14.0725, 43.7862, -7.56144, 0.28 ) }
    dend_35 { pt3dadd( 14.2019, 44.2736, -7.61335, 0.55 ) }
    dend_35 { pt3dadd( 14.8116, 46.6306, -7.81028, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 4/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -18.7579, -21.4031, -3.82175, 0.55 ) }
    dend_24 { pt3dadd( -21.8624, -23.9963, -2.574, 0.55 ) }
    dend_24 { pt3dadd( -24.2671, -26.0049, -1.6075, 0.55 ) }
    dend_24 { pt3dadd( -26.2185, -27.6349, -0.823203, 1.11 ) }
    dend_24 { pt3dadd( -28.8124, -29.8016, 0.219337, 0.55 ) }
    dend_24 { pt3dadd( -32.4336, -32.8265, 1.67478, 0.55 ) }
    dend_24 { pt3dadd( -38.0708, -37.5351, 3.94046, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 11/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -18.7579, -21.4031, -3.82175, 0.55 ) }
    dend_21 { pt3dadd( -20.3351, -21.6329, -3.95666, 0.55 ) }
    dend_21 { pt3dadd( -21.3392, -21.7378, -4.0121, 0.55 ) }
    dend_21 { pt3dadd( -22.5995, -21.8676, -4.06352, 0.55 ) }
    dend_21 { pt3dadd( -23.3695, -21.9017, -4.08429, 0.55 ) }
    dend_21 { pt3dadd( -25.7133, -21.9722, -4.13113, 0.55 ) }
    dend_21 { pt3dadd( -26.9399, -21.9983, -4.15457, 0.55 ) }
    dend_21 { pt3dadd( -30.4834, -21.9843, -4.208, 0.55 ) }
    dend_21 { pt3dadd( -32.4503, -21.9534, -4.23845, 0.55 ) }
    dend_21 { pt3dadd( -36.2192, -21.8664, -4.26793, 0.55 ) }
    dend_21 { pt3dadd( -38.1844, -21.8463, -4.27794, 0.55 ) }
    dend_21 { pt3dadd( -40.4624, -21.8705, -4.2759, 0.55 ) }
    dend_21 { pt3dadd( -41.3823, -21.8921, -4.27149, 0.28 ) }
    dend_21 { pt3dadd( -42.4832, -21.9135, -4.25066, 0.55 ) }
    dend_21 { pt3dadd( -44.5512, -21.9675, -4.17812, 0.55 ) }
    dend_21 { pt3dadd( -45.9439, -22.058, -4.1785, 0.55 ) }
    dend_21 { pt3dadd( -48.2127, -22.1941, -4.25419, 0.55 ) }
    dend_21 { pt3dadd( -49.9894, -22.4041, -4.35851, 0.83 ) }
    dend_21 { pt3dadd( -51.8004, -22.6529, -4.55087, 0.28 ) }
    dend_21 { pt3dadd( -54.2063, -22.9464, -5.00592, 0.55 ) }
    dend_21 { pt3dadd( -56.3713, -23.2103, -5.55808, 0.55 ) }
    dend_21 { pt3dadd( -58.771, -23.4913, -6.24068, 0.55 ) }
    dend_21 { pt3dadd( -61.7951, -23.9299, -7.24074, 0.55 ) }
    dend_21 { pt3dadd( -64.5283, -24.4181, -8.25686, 0.55 ) }
    dend_21 { pt3dadd( -66.688, -24.8877, -9.15212, 0.28 ) }
    dend_21 { pt3dadd( -67.7982, -25.1075, -9.63884, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 37/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -2.31133, -23.1007, -7.37699, 0.83 ) }
    dend_7 { pt3dadd( -1.97785, -26.1958, -7.38751, 0.83 ) }
    dend_7 { pt3dadd( -1.86274, -28.5054, -7.39649, 0.83 ) }
    dend_7 { pt3dadd( -1.70669, -31.6363, -7.40866, 1.11 ) }
    dend_7 { pt3dadd( -1.56774, -34.4241, -7.4195, 0.55 ) }
    dend_7 { pt3dadd( -1.43476, -37.0924, -7.42987, 0.83 ) }
    dend_7 { pt3dadd( -1.33024, -39.1892, -7.43802, 0.83 ) }
    dend_7 { pt3dadd( -1.28696, -44.3411, -7.44026, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 45/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -2.31133, -23.1007, -7.37699, 0.55 ) }
    dend_2 { pt3dadd( -2.23413, -23.4561, -7.19546, 0.55 ) }
    dend_2 { pt3dadd( -2.13257, -23.9156, -6.99016, 0.55 ) }
    dend_2 { pt3dadd( -2.04958, -24.1982, -6.84371, 0.83 ) }
    dend_2 { pt3dadd( -1.93046, -24.5648, -6.64377, 0.55 ) }
    dend_2 { pt3dadd( -1.776, -24.9981, -6.40337, 0.55 ) }
    dend_2 { pt3dadd( -1.57482, -25.516, -6.10571, 0.55 ) }
    dend_2 { pt3dadd( -1.2571, -26.1439, -5.67742, 0.55 ) }
    dend_2 { pt3dadd( -0.98854, -26.6163, -5.30178, 0.28 ) }
    dend_2 { pt3dadd( -0.960705, -26.6601, -5.26212, 0.28 ) }
    dend_2 { pt3dadd( -0.896425, -26.7499, -5.16947, 0.83 ) }
    dend_2 { pt3dadd( -0.64585, -27.063, -4.81039, 0.55 ) }
    dend_2 { pt3dadd( -0.273778, -27.548, -4.21881, 0.55 ) }
    dend_2 { pt3dadd( -0.0275226, -27.8817, -3.78777, 0.28 ) }
    dend_2 { pt3dadd( 0.149958, -28.1504, -3.45702, 0.83 ) }
    dend_2 { pt3dadd( 0.449368, -28.6297, -2.86817, 0.55 ) }
    dend_2 { pt3dadd( 0.520329, -28.7574, -2.71411, 0.55 ) }
    dend_2 { pt3dadd( 0.620708, -28.9792, -2.4648, 0.55 ) }
    dend_2 { pt3dadd( 1.31676, -30.8337, -1.2641, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 64/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 35.7194, 103.669, -13.596, 0.55 ) }
    dend_42 { pt3dadd( 36.5215, 104.987, -13.9772, 0.55 ) }
    dend_42 { pt3dadd( 36.9589, 105.823, -14.2055, 0.55 ) }
    dend_42 { pt3dadd( 37.4288, 106.596, -14.3756, 0.28 ) }
    dend_42 { pt3dadd( 38.1513, 107.488, -14.4975, 0.55 ) }
    dend_42 { pt3dadd( 38.9118, 108.332, -14.5958, 0.28 ) }
    dend_42 { pt3dadd( 39.5692, 109.029, -14.6819, 0.55 ) }
    dend_42 { pt3dadd( 40.6038, 110.107, -14.7514, 0.28 ) }
    dend_42 { pt3dadd( 42.2474, 111.734, -14.7752, 0.55 ) }
    dend_42 { pt3dadd( 44.4383, 113.765, -14.794, 0.28 ) }
    dend_42 { pt3dadd( 45.2721, 114.512, -14.7997, 0.28 ) }
    dend_42 { pt3dadd( 47.4207, 116.39, -14.7887, 0.55 ) }
    dend_42 { pt3dadd( 48.4164, 117.247, -14.7415, 0.55 ) }
    dend_42 { pt3dadd( 49.9584, 118.571, -14.6457, 0.28 ) }
    dend_42 { pt3dadd( 50.8851, 119.423, -14.5962, 0.55 ) }
    dend_42 { pt3dadd( 51.7282, 120.264, -14.5417, 0.28 ) }
    dend_42 { pt3dadd( 52.59, 121.111, -14.4798, 0.55 ) }
    dend_42 { pt3dadd( 54.3718, 122.805, -14.4456, 0.28 ) }
    dend_42 { pt3dadd( 55.5801, 123.834, -14.434, 0.28 ) }
    dend_42 { pt3dadd( 56.1164, 124.264, -14.4577, 0.55 ) }
    dend_42 { pt3dadd( 57.8101, 125.62, -14.5432, 0.28 ) }
    dend_42 { pt3dadd( 58.532, 126.202, -14.5885, 0.28 ) }
    dend_42 { pt3dadd( 60.695, 127.955, -14.7521, 0.55 ) }
    dend_42 { pt3dadd( 64.1483, 130.727, -15.092, 0.28 ) }
    dend_42 { pt3dadd( 66.7049, 132.849, -15.3329, 0.55 ) }
    dend_42 { pt3dadd( 68.9408, 134.776, -15.6062, 0.28 ) }
    dend_42 { pt3dadd( 69.6716, 135.442, -15.7118, 0.55 ) }
    dend_42 { pt3dadd( 71.6667, 137.347, -15.9929, 0.28 ) }
    dend_42 { pt3dadd( 72.5185, 138.227, -16.1298, 0.55 ) }
    dend_42 { pt3dadd( 74.1051, 140.111, -16.5432, 0.55 ) }
    dend_42 { pt3dadd( 75.7494, 142.159, -16.9372, 0.55 ) }
    dend_42 { pt3dadd( 76.3527, 142.898, -17.1291, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 96/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 35.7194, 103.669, -13.596, 0.55 ) }
    dend_41 { pt3dadd( 34.8757, 106.627, -13.2216, 0.55 ) }
    dend_41 { pt3dadd( 34.543, 107.794, -13.0739, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 99/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 14.8116, 46.6306, -7.81028, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_39 { pt3dadd( 14.8256, 46.8661, -7.78335, 0.28 ) }
    dend_39 { pt3dadd( 14.8378, 47.5051, -7.70215, 0.55 ) }
    dend_39 { pt3dadd( 14.8581, 48.3013, -7.60103, 0.28 ) }
    dend_39 { pt3dadd( 14.9033, 49.6317, -7.43375, 0.55 ) }
    dend_39 { pt3dadd( 14.9567, 50.8699, -7.29165, 0.28 ) }
    dend_39 { pt3dadd( 15.0068, 51.8661, -7.18425, 0.55 ) }
    dend_39 { pt3dadd( 15.0693, 52.7446, -7.07818, 0.28 ) }
    dend_39 { pt3dadd( 15.167, 53.7382, -6.95461, 0.55 ) }
    dend_39 { pt3dadd( 15.3251, 54.7797, -6.80688, 0.55 ) }
    dend_39 { pt3dadd( 15.5684, 55.9312, -6.62364, 0.55 ) }
    dend_39 { pt3dadd( 15.7479, 56.6026, -6.51492, 0.55 ) }
    dend_39 { pt3dadd( 16.1337, 57.9053, -6.30043, 0.28 ) }
    dend_39 { pt3dadd( 16.3749, 58.6397, -6.16908, 0.55 ) }
    dend_39 { pt3dadd( 16.9275, 60.2741, -5.84927, 0.28 ) }
    dend_39 { pt3dadd( 17.1792, 61.0036, -5.69206, 0.83 ) }
    dend_39 { pt3dadd( 17.4902, 61.9302, -5.48251, 0.28 ) }
    dend_39 { pt3dadd( 17.7299, 62.7269, -5.31275, 0.55 ) }
    dend_39 { pt3dadd( 18.0344, 63.9937, -5.08343, 0.28 ) }
    dend_39 { pt3dadd( 18.0723, 64.2092, -5.04781, 0.55 ) }
    dend_39 { pt3dadd( 18.1909, 65.1739, -4.91335, 0.28 ) }
    dend_39 { pt3dadd( 18.2501, 65.6402, -4.84762, 0.55 ) }
    dend_39 { pt3dadd( 18.4216, 66.4191, -4.819, 0.28 ) }
    dend_39 { pt3dadd( 18.6742, 67.1752, -4.86175, 0.55 ) }
    dend_39 { pt3dadd( 19.0438, 68.0695, -4.94626, 0.55 ) }
    dend_39 { pt3dadd( 19.3686, 68.7897, -5.01138, 0.55 ) }
    dend_39 { pt3dadd( 19.7248, 69.4873, -5.07123, 0.83 ) }
    dend_39 { pt3dadd( 20.9502, 71.67, -5.28179, 0.55 ) }
    dend_39 { pt3dadd( 21.7876, 73.1004, -5.4425, 0.55 ) }
    dend_39 { pt3dadd( 22.3622, 74.0533, -5.55554, 0.28 ) }
    dend_39 { pt3dadd( 22.6613, 74.5444, -5.61781, 0.55 ) }
    dend_39 { pt3dadd( 23.4633, 75.8983, -5.78281, 0.55 ) }
    dend_39 { pt3dadd( 24.3969, 77.5246, -5.936, 0.55 ) }
    dend_39 { pt3dadd( 25.1138, 78.8499, -5.99865, 0.28 ) }
    dend_39 { pt3dadd( 25.4501, 79.4684, -6.04051, 0.28 ) }
    dend_39 { pt3dadd( 25.6108, 79.7778, -6.06801, 0.55 ) }
    dend_39 { pt3dadd( 26.3987, 81.2973, -6.1787, 0.28 ) }
    dend_39 { pt3dadd( 26.685, 81.8438, -6.1812, 0.55 ) }
    dend_39 { pt3dadd( 27.1214, 82.6479, -6.08139, 0.55 ) }
    dend_39 { pt3dadd( 27.6216, 83.5052, -5.90264, 0.28 ) }
    dend_39 { pt3dadd( 28.0066, 84.1749, -5.75106, 0.28 ) }
    dend_39 { pt3dadd( 28.7654, 85.4902, -5.4293, 0.55 ) }
    dend_39 { pt3dadd( 29.6186, 86.9471, -5.04314, 0.55 ) }
    dend_39 { pt3dadd( 30.5778, 88.5618, -4.6179, 0.55 ) }
    dend_39 { pt3dadd( 31.6083, 90.2818, -4.14763, 0.55 ) }
    dend_39 { pt3dadd( 32.1945, 91.2525, -3.87686, 0.28 ) }
    dend_39 { pt3dadd( 32.6969, 92.0965, -3.64803, 0.55 ) }
    dend_39 { pt3dadd( 32.905, 92.4848, -3.55651, 0.55 ) }
    dend_39 { pt3dadd( 33.8283, 94.2514, -3.20386, 0.28 ) }
    dend_39 { pt3dadd( 34.0096, 94.5876, -3.14415, 0.55 ) }
    dend_39 { pt3dadd( 34.3608, 95.1848, -3.01885, 0.55 ) }
    dend_39 { pt3dadd( 34.8841, 96.0213, -2.80572, 0.55 ) }
    dend_39 { pt3dadd( 35.3428, 96.7229, -2.64383, 0.55 ) }
    dend_39 { pt3dadd( 36.3687, 98.2446, -2.3604, 0.55 ) }
    dend_39 { pt3dadd( 36.9446, 99.0827, -2.24003, 0.55 ) }
    dend_39 { pt3dadd( 37.5702, 100.003, -2.15336, 0.55 ) }
    dend_39 { pt3dadd( 38.356, 101.182, -2.09684, 0.55 ) }
    dend_39 { pt3dadd( 39.308, 102.651, -2.11653, 0.55 ) }
    dend_39 { pt3dadd( 39.8756, 103.596, -2.21881, 0.28 ) }
    dend_39 { pt3dadd( 40.0394, 103.899, -2.30499, 0.55 ) }
    dend_39 { pt3dadd( 40.3509, 104.5, -2.54474, 0.28 ) }
    dend_39 { pt3dadd( 40.5312, 104.876, -2.7279, 0.55 ) }
    dend_39 { pt3dadd( 40.9595, 105.754, -3.20019, 0.28 ) }
    dend_39 { pt3dadd( 41.5544, 107.076, -3.9059, 0.55 ) }
    dend_39 { pt3dadd( 42.1623, 108.412, -4.58184, 0.55 ) }
    dend_39 { pt3dadd( 42.6753, 109.551, -5.11771, 0.28 ) }
    dend_39 { pt3dadd( 42.8087, 109.851, -5.24365, 0.55 ) }
    dend_39 { pt3dadd( 43.1547, 110.644, -5.54064, 0.55 ) }
    dend_39 { pt3dadd( 43.5421, 111.556, -5.82699, 0.28 ) }
    dend_39 { pt3dadd( 43.8157, 112.264, -5.98606, 0.55 ) }
    dend_39 { pt3dadd( 44.1591, 113.206, -6.13358, 0.28 ) }
    dend_39 { pt3dadd( 44.4293, 113.937, -6.24642, 0.83 ) }
    dend_39 { pt3dadd( 44.8555, 115.004, -6.39965, 0.28 ) }
    dend_39 { pt3dadd( 44.9873, 115.332, -6.44803, 0.28 ) }
    dend_39 { pt3dadd( 45.397, 116.291, -6.56499, 0.55 ) }
    dend_39 { pt3dadd( 45.9859, 117.677, -6.72519, 0.28 ) }
    dend_39 { pt3dadd( 46.2508, 118.288, -6.77083, 0.55 ) }
    dend_39 { pt3dadd( 46.8589, 119.73, -6.83383, 0.28 ) }
    dend_39 { pt3dadd( 47.1846, 120.548, -6.84755, 0.55 ) }
    dend_39 { pt3dadd( 47.5341, 121.505, -6.85705, 0.28 ) }
    dend_39 { pt3dadd( 47.633, 121.803, -6.85749, 0.55 ) }
    dend_39 { pt3dadd( 48.157, 123.521, -6.83725, 0.55 ) }
    dend_39 { pt3dadd( 48.4104, 124.401, -6.82959, 0.28 ) }
    dend_39 { pt3dadd( 48.5924, 125.02, -6.80473, 0.55 ) }
    dend_39 { pt3dadd( 48.8845, 125.919, -6.75455, 0.28 ) }
    dend_39 { pt3dadd( 49.0049, 126.253, -6.7398, 0.55 ) }
    dend_39 { pt3dadd( 49.4148, 127.242, -6.70232, 0.28 ) }
    dend_39 { pt3dadd( 49.7901, 128.075, -6.67985, 0.55 ) }
    dend_39 { pt3dadd( 50.4922, 129.46, -6.61493, 0.28 ) }
    dend_39 { pt3dadd( 50.6179, 129.678, -6.59787, 0.55 ) }
    dend_39 { pt3dadd( 51.1163, 130.447, -6.50539, 0.28 ) }
    dend_39 { pt3dadd( 51.4883, 131.015, -6.42837, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 91/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 14.8116, 46.6306, -7.81028, 0.28 ) }
    dend_36 { pt3dadd( 14.8762, 50.1822, -6.91921, 0.28 ) }
    dend_36 { pt3dadd( 15.025, 52.309, -6.39449, 0.55 ) }
    dend_36 { pt3dadd( 15.267, 54.7466, -5.69978, 0.28 ) }
    dend_36 { pt3dadd( 15.4346, 55.9202, -5.34237, 0.28 ) }
    dend_36 { pt3dadd( 15.745, 57.7456, -4.76357, 0.55 ) }
    dend_36 { pt3dadd( 16.1229, 59.8517, -4.05516, 0.55 ) }
    dend_36 { pt3dadd( 16.6126, 61.9962, -3.28961, 0.55 ) }
    dend_36 { pt3dadd( 17.1577, 64.2836, -2.41082, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( 17.4649, 65.6385, -1.87458, 0.55 ) }
    dend_36 { pt3dadd( 17.7525, 66.8764, -1.37316, 0.55 ) }
    dend_36 { pt3dadd( 18.4296, 69.5482, -0.292703, 0.55 ) }
    dend_36 { pt3dadd( 18.7837, 71.1279, 0.348096, 0.55 ) }
    dend_36 { pt3dadd( 19.0174, 72.4373, 0.88866, 0.55 ) }
    dend_36 { pt3dadd( 19.1991, 73.6987, 1.34303, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 6/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -38.0708, -37.5351, 3.94046, 0.55 ) }
    dend_26 { pt3dadd( -42.3158, -38.5728, 4.29369, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 8/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -38.0708, -37.5351, 3.94046, 1.11 ) }
    dend_25 { pt3dadd( -38.7546, -39.4205, 4.14107, 1.11 ) }
    dend_25 { pt3dadd( -39.4876, -41.4403, 4.42218, 0.83 ) }
    dend_25 { pt3dadd( -39.6915, -42.0776, 4.50263, 1.11 ) }
    dend_25 { pt3dadd( -40.2778, -44.157, 4.73115, 0.55 ) }
    dend_25 { pt3dadd( -40.7697, -46.0133, 4.94106, 0.83 ) }
    dend_25 { pt3dadd( -41.281, -48.0948, 5.18576, 0.55 ) }
    dend_25 { pt3dadd( -41.6655, -49.8159, 5.42522, 0.55 ) }
    dend_25 { pt3dadd( -41.9662, -51.6162, 5.68796, 0.55 ) }
    dend_25 { pt3dadd( -42.166, -53.1397, 5.87348, 0.83 ) }
    dend_25 { pt3dadd( -42.3416, -55.0318, 6.03514, 0.55 ) }
    dend_25 { pt3dadd( -42.3799, -55.9919, 6.07211, 0.28 ) }
    dend_25 { pt3dadd( -42.3926, -56.327, 6.06757, 0.55 ) }
    dend_25 { pt3dadd( -42.439, -57.8556, 6.05431, 0.28 ) }
    dend_25 { pt3dadd( -42.488, -59.0138, 6.03931, 0.55 ) }
    dend_25 { pt3dadd( -42.5889, -60.643, 5.99279, 0.28 ) }
    dend_25 { pt3dadd( -42.6474, -61.3145, 5.96234, 0.55 ) }
    dend_25 { pt3dadd( -42.8019, -62.5742, 5.90371, 0.28 ) }
    dend_25 { pt3dadd( -43.1772, -65.0777, 5.79415, 0.83 ) }
    dend_25 { pt3dadd( -43.6464, -68.1329, 5.70444, 0.55 ) }
    dend_25 { pt3dadd( -43.9009, -69.6465, 5.67935, 0.83 ) }
    dend_25 { pt3dadd( -44.2969, -71.6239, 5.57109, 0.55 ) }
    dend_25 { pt3dadd( -44.5377, -72.6929, 5.4868, 0.55 ) }
    dend_25 { pt3dadd( -44.9229, -74.2621, 5.26677, 0.83 ) }
    dend_25 { pt3dadd( -45.391, -76.0759, 4.89437, 0.55 ) }
    dend_25 { pt3dadd( -45.7811, -77.4926, 4.51479, 0.83 ) }
    dend_25 { pt3dadd( -46.4427, -79.9451, 3.80855, 0.55 ) }
    dend_25 { pt3dadd( -46.7609, -81.1718, 3.39598, 0.83 ) }
    dend_25 { pt3dadd( -47.4057, -83.5094, 2.55518, 0.55 ) }
    dend_25 { pt3dadd( -47.655, -84.3423, 2.22939, 0.83 ) }
    dend_25 { pt3dadd( -48.4049, -86.7381, 1.26031, 0.55 ) }
    dend_25 { pt3dadd( -48.9592, -88.5835, 0.467164, 0.83 ) }
    dend_25 { pt3dadd( -49.7995, -91.4926, -0.790043, 0.55 ) }
    dend_25 { pt3dadd( -50.1642, -92.6852, -1.32709, 0.55 ) }
    dend_25 { pt3dadd( -50.5422, -93.8786, -1.84226, 0.83 ) }
    dend_25 { pt3dadd( -50.9216, -94.9903, -2.27733, 0.83 ) }
    dend_25 { pt3dadd( -51.742, -97.5587, -3.15824, 0.55 ) }
    dend_25 { pt3dadd( -52.1245, -98.6747, -3.4674, 0.83 ) }
    dend_25 { pt3dadd( -52.4715, -99.6931, -3.64276, 0.55 ) }
    dend_25 { pt3dadd( -52.9862, -101.239, -3.86588, 0.83 ) }
    dend_25 { pt3dadd( -54.2236, -105.125, -4.19651, 0.55 ) }
    dend_25 { pt3dadd( -54.8389, -107.16, -4.28713, 0.55 ) }
    dend_25 { pt3dadd( -55.7975, -110.458, -4.29212, 0.55 ) }
    dend_25 { pt3dadd( -56.728, -113.963, -4.28599, 0.28 ) }
    dend_25 { pt3dadd( -57.0232, -115.357, -4.28549, 0.55 ) }
    dend_25 { pt3dadd( -57.3913, -117.712, -4.294, 0.28 ) }
    dend_25 { pt3dadd( -57.5939, -119.555, -4.33467, 0.83 ) }
    dend_25 { pt3dadd( -57.7911, -121.715, -4.40409, 0.28 ) }
    dend_25 { pt3dadd( -57.9574, -124.766, -4.52137, 0.83 ) }
    dend_25 { pt3dadd( -58.1632, -128.41, -4.69538, 0.83 ) }
    dend_25 { pt3dadd( -58.3048, -130.659, -4.78267, 0.55 ) }
    dend_25 { pt3dadd( -58.4295, -132.164, -4.86722, 0.28 ) }
    dend_25 { pt3dadd( -58.4758, -132.563, -4.90055, 0.55 ) }
    dend_25 { pt3dadd( -58.7136, -134.263, -5.10217, 0.28 ) }
    dend_25 { pt3dadd( -58.9007, -135.1, -5.22444, 0.55 ) }
    dend_25 { pt3dadd( -59.3389, -136.66, -5.46077, 0.28 ) }
    dend_25 { pt3dadd( -59.6049, -137.589, -5.59921, 0.55 ) }
    dend_25 { pt3dadd( -60.472, -140.61, -6.02795, 0.28 ) }
    dend_25 { pt3dadd( -61.1908, -142.924, -6.3716, 0.28 ) }
    dend_25 { pt3dadd( -62.1639, -145.749, -6.77732, 0.55 ) }
    dend_25 { pt3dadd( -63.4942, -149.181, -7.20874, 0.28 ) }
    dend_25 { pt3dadd( -63.7337, -149.728, -7.26521, 0.28 ) }
    dend_25 { pt3dadd( -64.0247, -150.358, -7.30529, 0.55 ) }
    dend_25 { pt3dadd( -64.671, -151.726, -7.31386, 0.55 ) }
    dend_25 { pt3dadd( -65.9512, -154.252, -7.32011, 0.55 ) }
    dend_25 { pt3dadd( -66.7529, -155.825, -7.32195, 0.28 ) }
    dend_25 { pt3dadd( -67.4499, -157.182, -7.32978, 0.55 ) }
    dend_25 { pt3dadd( -68.1506, -158.578, -7.34432, 0.55 ) }
    dend_25 { pt3dadd( -69.806, -162.016, -7.39263, 0.28 ) }
    dend_25 { pt3dadd( -70.1618, -162.794, -7.40566, 1.11 ) }
    dend_25 { pt3dadd( -71.3838, -165.596, -7.46841, 0.55 ) }
    dend_25 { pt3dadd( -72.3933, -168.012, -7.52309, 0.55 ) }
    dend_25 { pt3dadd( -73.1724, -169.81, -7.5643, 1.38 ) }
    dend_25 { pt3dadd( -76.2917, -180.254, -8.76308, 1.38 ) }
    dend_25 { pt3dadd( -80.5007, -190.397, -8.69958, 1.38 ) }
    dend_25 { pt3dadd( -86.6321, -199.519, -7.7886, 1.38 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 84/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -67.7982, -25.1075, -9.63884, 0.55 ) }
    dend_23 { pt3dadd( -70.3047, -26.0803, -10.6952, 0.55 ) }
    dend_23 { pt3dadd( -71.6483, -26.6691, -11.2761, 0.55 ) }
    dend_23 { pt3dadd( -73.8841, -27.5688, -12.0695, 0.55 ) }
    dend_23 { pt3dadd( -75.1501, -28.0646, -12.4878, 0.28 ) }
    dend_23 { pt3dadd( -77.0508, -28.8499, -13.0815, 0.55 ) }
    dend_23 { pt3dadd( -79.3521, -29.832, -13.753, 0.28 ) }
    dend_23 { pt3dadd( -79.8746, -30.0682, -13.8785, 0.55 ) }
    dend_23 { pt3dadd( -83.5396, -31.77, -14.6785, 0.55 ) }
    dend_23 { pt3dadd( -84.4926, -32.2071, -14.8524, 0.28 ) }
    dend_23 { pt3dadd( -85.9562, -32.9042, -15.0673, 0.28 ) }
    dend_23 { pt3dadd( -87.2911, -33.5407, -15.2345, 0.55 ) }
    dend_23 { pt3dadd( -88.6131, -34.2164, -15.3634, 0.28 ) }
    dend_23 { pt3dadd( -90.3041, -35.164, -15.5495, 0.28 ) }
    dend_23 { pt3dadd( -90.8319, -35.5314, -15.6326, 0.55 ) }
    dend_23 { pt3dadd( -91.4968, -36.0054, -15.7437, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_23 { pt3dadd( -92.0362, -36.3694, -15.8299, 0.55 ) }
    dend_23 { pt3dadd( -93.9015, -37.654, -16.1178, 0.28 ) }
    dend_23 { pt3dadd( -94.6551, -38.1468, -16.2067, 0.55 ) }
    dend_23 { pt3dadd( -96.1679, -39.1089, -16.3468, 0.28 ) }
    dend_23 { pt3dadd( -96.9585, -39.5819, -16.3913, 0.55 ) }
    dend_23 { pt3dadd( -100.582, -41.6443, -16.4899, 0.28 ) }
    dend_23 { pt3dadd( -100.944, -41.8451, -16.4886, 0.55 ) }
    dend_23 { pt3dadd( -102.539, -42.7426, -16.4278, 0.28 ) }
    dend_23 { pt3dadd( -103.282, -43.2227, -16.3825, 0.55 ) }
    dend_23 { pt3dadd( -104.976, -44.4633, -16.244, 0.28 ) }
    dend_23 { pt3dadd( -105.186, -44.6439, -16.2287, 0.55 ) }
    dend_23 { pt3dadd( -106.503, -46.0546, -16.1294, 0.28 ) }
    dend_23 { pt3dadd( -107.305, -46.9883, -16.0695, 0.55 ) }
    dend_23 { pt3dadd( -108.72, -48.7453, -15.9484, 0.28 ) }
    dend_23 { pt3dadd( -109.112, -49.2454, -15.9153, 0.28 ) }
    dend_23 { pt3dadd( -110.144, -50.5662, -15.8244, 0.55 ) }
    dend_23 { pt3dadd( -112.847, -54.007, -15.5683, 0.28 ) }
    dend_23 { pt3dadd( -113.619, -54.9952, -15.4865, 0.55 ) }
    dend_23 { pt3dadd( -115.351, -57.1507, -15.2772, 0.28 ) }
    dend_23 { pt3dadd( -116.503, -58.5266, -15.1153, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 20/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -67.7982, -25.1075, -9.63884, 0.28 ) }
    dend_22 { pt3dadd( -69.1455, -22.7612, -9.51869, 0.28 ) }
    dend_22 { pt3dadd( -70.2181, -20.8932, -9.42304, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_7 (entry count 23/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -1.28696, -44.3411, -7.44026, 0.55 ) }
    dend_19 { pt3dadd( -0.73379, -45.9266, -7.15808, 0.55 ) }
    dend_19 { pt3dadd( -0.190931, -47.7796, -6.82254, 0.55 ) }
    dend_19 { pt3dadd( 0.535193, -50.3444, -6.34772, 0.55 ) }
    dend_19 { pt3dadd( 1.08486, -52.288, -5.99263, 0.55 ) }
    dend_19 { pt3dadd( 1.48363, -53.6816, -5.70902, 0.28 ) }
    dend_19 { pt3dadd( 1.66684, -54.3223, -5.5756, 0.55 ) }
    dend_19 { pt3dadd( 2.24317, -56.7678, -5.05531, 0.55 ) }
    dend_19 { pt3dadd( 2.51242, -57.9022, -4.8171, 0.28 ) }
    dend_19 { pt3dadd( 2.77663, -59.1674, -4.5466, 0.55 ) }
    dend_19 { pt3dadd( 3.1028, -60.7511, -4.21673, 0.55 ) }
    dend_19 { pt3dadd( 3.46803, -62.4168, -3.88385, 0.55 ) }
    dend_19 { pt3dadd( 3.95518, -64.769, -3.43069, 0.55 ) }
    dend_19 { pt3dadd( 4.36561, -66.7845, -3.05861, 0.55 ) }
    dend_19 { pt3dadd( 4.68945, -68.7135, -2.73102, 0.55 ) }
    dend_19 { pt3dadd( 4.90266, -70.4561, -2.46504, 0.55 ) }
    dend_19 { pt3dadd( 5.06585, -73.0475, -2.1882, 0.55 ) }
    dend_19 { pt3dadd( 5.06334, -74.3235, -2.12135, 0.55 ) }
    dend_19 { pt3dadd( 4.94889, -75.92, -2.12913, 0.55 ) }
    dend_19 { pt3dadd( 4.71223, -77.599, -2.24057, 0.55 ) }
    dend_19 { pt3dadd( 4.35135, -79.8022, -2.48633, 0.55 ) }
    dend_19 { pt3dadd( 3.89563, -82.2357, -2.80565, 0.55 ) }
    dend_19 { pt3dadd( 3.44014, -84.5208, -3.12834, 0.55 ) }
    dend_19 { pt3dadd( 2.9866, -86.6895, -3.44556, 0.55 ) }
    dend_19 { pt3dadd( 2.45218, -89.0688, -3.79859, 0.55 ) }
    dend_19 { pt3dadd( 1.97577, -91.1745, -4.09051, 0.55 ) }
    dend_19 { pt3dadd( 1.62776, -92.6931, -4.32013, 0.55 ) }
    dend_19 { pt3dadd( 1.26448, -94.0878, -4.56978, 0.55 ) }
    dend_19 { pt3dadd( 0.743883, -95.8378, -4.93255, 0.55 ) }
    dend_19 { pt3dadd( 0.33408, -97.0054, -5.23083, 0.55 ) }
    dend_19 { pt3dadd( -0.428818, -98.8084, -5.73394, 0.55 ) }
    dend_19 { pt3dadd( -1.43228, -101.123, -6.40326, 0.83 ) }
    dend_19 { pt3dadd( -2.36466, -103.249, -7.06113, 0.55 ) }
    dend_19 { pt3dadd( -3.18958, -105.138, -7.65199, 0.55 ) }
    dend_19 { pt3dadd( -3.95457, -106.938, -8.20516, 0.55 ) }
    dend_19 { pt3dadd( -4.99383, -109.414, -8.92769, 0.55 ) }
    dend_19 { pt3dadd( -5.8968, -111.605, -9.51273, 0.55 ) }
    dend_19 { pt3dadd( -6.49574, -113.138, -9.83697, 0.55 ) }
    dend_19 { pt3dadd( -6.97714, -114.498, -10.0964, 0.55 ) }
    dend_19 { pt3dadd( -7.52537, -116.181, -10.4314, 0.55 ) }
    dend_19 { pt3dadd( -7.89046, -117.368, -10.6695, 0.55 ) }
    dend_19 { pt3dadd( -8.40818, -119.21, -11.0441, 0.28 ) }
    dend_19 { pt3dadd( -9.05569, -121.571, -11.4857, 0.55 ) }
    dend_19 { pt3dadd( -9.64363, -123.931, -11.8858, 0.28 ) }
    dend_19 { pt3dadd( -9.94963, -125.185, -12.0971, 0.55 ) }
    dend_19 { pt3dadd( -10.321, -126.709, -12.3444, 0.28 ) }
    dend_19 { pt3dadd( -10.6434, -128.007, -12.5462, 0.28 ) }
    dend_19 { pt3dadd( -10.9253, -129.145, -12.6983, 0.55 ) }
    dend_19 { pt3dadd( -11.2894, -130.517, -12.8622, 0.28 ) }
    dend_19 { pt3dadd( -11.5711, -131.65, -12.9586, 0.55 ) }
    dend_19 { pt3dadd( -12.2015, -134.136, -13.1299, 0.28 ) }
    dend_19 { pt3dadd( -12.4969, -135.363, -13.1867, 0.55 ) }
    dend_19 { pt3dadd( -12.7762, -136.458, -13.2157, 0.28 ) }
    dend_19 { pt3dadd( -12.9442, -137.052, -13.2064, 0.28 ) }
    dend_19 { pt3dadd( -13.5954, -139.161, -13.0809, 0.55 ) }
    dend_19 { pt3dadd( -14.0257, -140.492, -12.9626, 0.28 ) }
    dend_19 { pt3dadd( -14.812, -142.778, -12.7558, 0.55 ) }
    dend_19 { pt3dadd( -15.2453, -143.98, -12.6613, 0.28 ) }
    dend_19 { pt3dadd( -15.999, -146.052, -12.5338, 0.55 ) }
    dend_19 { pt3dadd( -16.4726, -147.384, -12.4693, 0.83 ) }
    dend_19 { pt3dadd( -16.8526, -148.399, -12.4357, 0.83 ) }
    dend_19 { pt3dadd( -17.822, -151.293, -12.3976, 0.55 ) }
    dend_19 { pt3dadd( -17.9628, -151.756, -12.4088, 0.83 ) }
    dend_19 { pt3dadd( -18.442, -153.49, -12.5189, 0.28 ) }
    dend_19 { pt3dadd( -18.6916, -154.627, -12.6332, 0.28 ) }
    dend_19 { pt3dadd( -18.8818, -155.504, -12.7256, 0.55 ) }
    dend_19 { pt3dadd( -19.2346, -157.047, -12.8775, 0.83 ) }
    dend_19 { pt3dadd( -19.5728, -158.418, -13.0228, 0.55 ) }
    dend_19 { pt3dadd( -20.0041, -160.059, -13.2197, 0.55 ) }
    dend_19 { pt3dadd( -20.3351, -161.326, -13.3721, 0.83 ) }
    dend_19 { pt3dadd( -20.8309, -163.283, -13.5912, 0.55 ) }
    dend_19 { pt3dadd( -21.0283, -164.038, -13.6856, 0.83 ) }
    dend_19 { pt3dadd( -21.5514, -165.801, -13.9207, 0.55 ) }
    dend_19 { pt3dadd( -22.0029, -167.253, -14.1109, 0.55 ) }
    dend_19 { pt3dadd( -22.4114, -168.507, -14.2674, 0.55 ) }
    dend_19 { pt3dadd( -22.6777, -169.257, -14.351, 0.83 ) }
    dend_19 { pt3dadd( -23.3333, -171.218, -14.5515, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_19 { pt3dadd( -23.8621, -172.88, -14.7082, 0.55 ) }
    dend_19 { pt3dadd( -24.2469, -174.21, -14.8032, 0.83 ) }
    dend_19 { pt3dadd( -24.5777, -175.353, -14.8873, 0.55 ) }
    dend_19 { pt3dadd( -24.8572, -176.397, -14.9644, 0.83 ) }
    dend_19 { pt3dadd( -25.3452, -178.666, -15.1804, 0.55 ) }
    dend_19 { pt3dadd( -25.5585, -180.015, -15.3152, 0.55 ) }
    dend_19 { pt3dadd( -25.6566, -180.958, -15.4443, 0.83 ) }
    dend_19 { pt3dadd( -25.7657, -182.526, -15.6673, 0.55 ) }
    dend_19 { pt3dadd( -25.8257, -183.63, -15.812, 0.83 ) }
    dend_19 { pt3dadd( -25.9045, -185.397, -16.0037, 0.55 ) }
    dend_19 { pt3dadd( -25.9287, -186.088, -16.0631, 0.83 ) }
    dend_19 { pt3dadd( -25.9957, -188.09, -16.202, 0.28 ) }
    dend_19 { pt3dadd( -26.0646, -189.247, -16.253, 0.55 ) }
    dend_19 { pt3dadd( -26.1237, -190.428, -16.2607, 0.28 ) }
    dend_19 { pt3dadd( -26.146, -190.787, -16.2546, 0.55 ) }
    dend_19 { pt3dadd( -26.2373, -192.349, -16.2217, 0.28 ) }
    dend_19 { pt3dadd( -26.3424, -194.411, -16.281, 0.55 ) }
    dend_19 { pt3dadd( -26.4155, -195.504, -16.3849, 0.55 ) }
    dend_19 { pt3dadd( -26.5317, -197.229, -16.6477, 0.28 ) }
    dend_19 { pt3dadd( -26.5707, -197.761, -16.7484, 0.55 ) }
    dend_19 { pt3dadd( -26.66, -199.18, -17.0414, 0.28 ) }
    dend_19 { pt3dadd( -26.7816, -200.777, -17.3833, 0.55 ) }
    dend_19 { pt3dadd( -26.9743, -202.848, -17.8542, 0.28 ) }
    dend_19 { pt3dadd( -27.0564, -203.721, -18.0332, 0.55 ) }
    dend_19 { pt3dadd( -27.2672, -205.52, -18.3491, 0.28 ) }
    dend_19 { pt3dadd( -27.3215, -205.996, -18.4165, 0.28 ) }
    dend_19 { pt3dadd( -27.5606, -208.025, -18.6395, 0.55 ) }
    dend_19 { pt3dadd( -27.8178, -209.905, -18.7835, 0.28 ) }
    dend_19 { pt3dadd( -28.1544, -212.741, -18.8869, 0.28 ) }
    dend_19 { pt3dadd( -28.3797, -214.393, -18.9104, 0.55 ) }
    dend_19 { pt3dadd( -28.6064, -216.131, -18.8932, 0.28 ) }
    dend_19 { pt3dadd( -28.6733, -216.63, -18.8773, 0.55 ) }
    dend_19 { pt3dadd( -29.0017, -219.229, -18.7268, 0.28 ) }
    dend_19 { pt3dadd( -29.3374, -221.672, -18.5384, 0.28 ) }
    dend_19 { pt3dadd( -29.4959, -222.764, -18.4482, 0.28 ) }
    dend_19 { pt3dadd( -29.7071, -224.34, -18.3151, 0.83 ) }
    dend_19 { pt3dadd( -29.9204, -226.223, -18.1876, 0.28 ) }
    dend_19 { pt3dadd( -29.9809, -227.012, -18.1522, 0.55 ) }
    dend_19 { pt3dadd( -29.993, -228.769, -18.1512, 0.28 ) }
    dend_19 { pt3dadd( -29.9868, -230.513, -18.208, 0.28 ) }
    dend_19 { pt3dadd( -29.9602, -231.071, -18.2385, 0.55 ) }
    dend_19 { pt3dadd( -29.8416, -233.039, -18.3857, 0.28 ) }
    dend_19 { pt3dadd( -29.724, -234.343, -18.5653, 0.83 ) }
    dend_19 { pt3dadd( -29.4906, -236.972, -19.0478, 0.28 ) }
    dend_19 { pt3dadd( -29.4446, -237.446, -19.1457, 0.55 ) }
    dend_19 { pt3dadd( -29.3289, -238.957, -19.5015, 0.28 ) }
    dend_19 { pt3dadd( -29.297, -239.424, -19.6234, 0.55 ) }
    dend_19 { pt3dadd( -29.166, -242.104, -20.4501, 0.28 ) }
    dend_19 { pt3dadd( -29.1483, -243.061, -20.8016, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 49/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -1.28696, -44.3411, -7.44026, 0.55 ) }
    dend_8 { pt3dadd( -2.08879, -46.8139, -7.43752, 0.55 ) }
    dend_8 { pt3dadd( -2.81362, -49.0492, -7.43504, 0.55 ) }
    dend_8 { pt3dadd( -3.61762, -51.5286, -7.43229, 0.55 ) }
    dend_8 { pt3dadd( -4.40548, -53.9583, -7.4296, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 54/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 1.31676, -30.8337, -1.2641, 0.55 ) }
    dend_4 { pt3dadd( 6.66155, -40.6234, 6.01188, 0.55 ) }
    dend_4 { pt3dadd( 10.9705, -50.4016, 13.9637, 0.55 ) }
    dend_4 { pt3dadd( 13.6443, -59.143, 23.7071, 0.55 ) }
    dend_4 { pt3dadd( 17.1238, -68.7334, 32.2839, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 1.31676, -30.8337, -1.2641, 0.55 ) }
    dend_3 { pt3dadd( 4.01965, -35.7097, 2.36847, 0.55 ) }
    dend_3 { pt3dadd( 5.31466, -41.3393, 5.60725, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 62/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 19.1991, 73.6987, 1.34303, 0.55 ) }
    dend_38 { pt3dadd( 19.6515, 74.5349, 1.32329, 0.55 ) }
    dend_38 { pt3dadd( 20.8875, 76.7805, 1.38498, 0.55 ) }
    dend_38 { pt3dadd( 22.2925, 79.3531, 1.52759, 0.55 ) }
    dend_38 { pt3dadd( 22.8807, 80.3902, 1.63243, 0.83 ) }
    dend_38 { pt3dadd( 23.7684, 82.007, 1.8505, 0.28 ) }
    dend_38 { pt3dadd( 24.4846, 83.2728, 2.07028, 0.55 ) }
    dend_38 { pt3dadd( 25.2495, 84.6754, 2.37596, 0.28 ) }
    dend_38 { pt3dadd( 25.3992, 84.9549, 2.44826, 0.55 ) }
    dend_38 { pt3dadd( 26.205, 86.4333, 2.85186, 0.28 ) }
    dend_38 { pt3dadd( 26.9208, 87.9279, 3.23585, 0.55 ) }
    dend_38 { pt3dadd( 27.8886, 90.4694, 3.87559, 0.28 ) }
    dend_38 { pt3dadd( 28.4076, 92.5575, 4.3597, 0.55 ) }
    dend_38 { pt3dadd( 28.8031, 94.8223, 4.87734, 0.28 ) }
    dend_38 { pt3dadd( 29.0448, 96.6841, 5.28509, 0.55 ) }
    dend_38 { pt3dadd( 29.4432, 101.344, 6.25731, 0.55 ) }
    dend_38 { pt3dadd( 29.7108, 105.371, 7.08872, 0.55 ) }
    dend_38 { pt3dadd( 29.9301, 111.169, 8.24203, 0.55 ) }
    dend_38 { pt3dadd( 30.0537, 115.514, 9.08135, 0.55 ) }
    dend_38 { pt3dadd( 30.1557, 119.701, 9.82637, 0.55 ) }
    dend_38 { pt3dadd( 30.2135, 121.624, 10.1534, 0.55 ) }
    dend_38 { pt3dadd( 30.3546, 125.194, 10.7255, 0.55 ) }
    dend_38 { pt3dadd( 30.5832, 128.496, 11.209, 0.55 ) }
    dend_38 { pt3dadd( 30.8104, 130.653, 11.5111, 0.28 ) }
    dend_38 { pt3dadd( 31.2099, 134.566, 12.027, 0.55 ) }
    dend_38 { pt3dadd( 31.4708, 137.086, 12.379, 0.28 ) }
    dend_38 { pt3dadd( 31.6767, 138.96, 12.6269, 0.55 ) }
    dend_38 { pt3dadd( 31.9906, 141.847, 12.9773, 0.55 ) }
    dend_38 { pt3dadd( 32.3899, 144.768, 13.3237, 0.28 ) }
    dend_38 { pt3dadd( 32.6909, 146.697, 13.534, 0.28 ) }
    dend_38 { pt3dadd( 33.0193, 148.561, 13.7019, 0.55 ) }
    dend_38 { pt3dadd( 33.3128, 149.816, 13.7645, 0.28 ) }
    dend_38 { pt3dadd( 33.6984, 151.402, 13.8062, 0.55 ) }
    dend_38 { pt3dadd( 34.1642, 153.234, 13.8273, 0.28 ) }
    dend_38 { pt3dadd( 34.472, 154.38, 13.8309, 0.55 ) }
    dend_38 { pt3dadd( 35.1202, 156.677, 13.8365, 0.55 ) }
    dend_38 { pt3dadd( 36.1759, 160.488, 13.856, 0.55 ) }
    dend_38 { pt3dadd( 37.0308, 163.659, 13.8893, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_38 { pt3dadd( 37.6714, 166.145, 13.9011, 0.55 ) }
    dend_38 { pt3dadd( 38.0572, 167.722, 13.8951, 0.28 ) }
    dend_38 { pt3dadd( 39.0807, 171.874, 13.8643, 0.28 ) }
    dend_38 { pt3dadd( 43.1637, 182.71, 16.4283, 0.28 ) }
    dend_38 { pt3dadd( 46.1718, 193.405, 20.5833, 0.28 ) }
    dend_38 { pt3dadd( 49.4662, 203.817, 25.2453, 0.28 ) }
    dend_38 { pt3dadd( 52.323, 213.857, 30.9329, 0.28 ) }
    dend_38 { pt3dadd( 55.4578, 224.69, 34.592, 0.28 ) }
    dend_38 { pt3dadd( 56.2659, 236.141, 37.4216, 0.28 ) }
    dend_38 { pt3dadd( 55.1697, 247.817, 38.8107, 0.28 ) }
    dend_38 { pt3dadd( 56.6933, 259.47, 40.0415, 0.28 ) }
    dend_38 { pt3dadd( 59.03, 270.914, 41.9058, 0.28 ) }
    dend_38 { pt3dadd( 60.7856, 282.582, 42.5652, 0.28 ) }
    dend_38 { pt3dadd( 62.3769, 294.29, 42.7112, 0.28 ) }
    dend_38 { pt3dadd( 63.1766, 305.949, 44.4412, 0.28 ) }
    dend_38 { pt3dadd( 62.0363, 317.555, 46.3161, 0.28 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 16/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 19.1991, 73.6987, 1.34303, 0.55 ) }
    dend_37 { pt3dadd( 19.2106, 75.0467, 0.160806, 0.55 ) }
    dend_37 { pt3dadd( 19.0007, 76.861, -1.47519, 0.28 ) }
    dend_37 { pt3dadd( 18.8317, 77.6157, -2.13327, 0.28 ) }
    dend_37 { pt3dadd( 17.8993, 80.2337, -5.06269, 0.55 ) }
    dend_37 { pt3dadd( 16.9661, 82.2447, -7.65213, 0.28 ) }
    dend_37 { pt3dadd( 16.4927, 83.1173, -8.86818, 0.55 ) }
    dend_37 { pt3dadd( 15.364, 84.6931, -11.3936, 0.28 ) }
    dend_37 { pt3dadd( 14.2912, 85.8837, -13.4913, 0.55 ) }
    dend_37 { pt3dadd( 11.8229, 88.325, -17.8779, 0.28 ) }
    dend_37 { pt3dadd( 11.3203, 88.7663, -18.693, 0.55 ) }
    dend_37 { pt3dadd( 9.87914, 89.9056, -20.9266, 0.28 ) }
    dend_37 { pt3dadd( 8.7926, 90.7407, -22.6814, 0.83 ) }
    dend_37 { pt3dadd( 6.45664, 92.5164, -26.5431, 0.28 ) }
    dend_37 { pt3dadd( 5.46511, 93.3418, -28.1902, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 31/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -42.3158, -38.5728, 4.29369, 0.55 ) }
    dend_30 { pt3dadd( -43.8793, -40.3688, 4.37805, 0.55 ) }
    dend_30 { pt3dadd( -45.5795, -42.3221, 4.46979, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 34/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -42.3158, -38.5728, 4.29369, 0.55 ) }
    dend_27 { pt3dadd( -45.6022, -35.9395, 6.42397, 0.55 ) }
    dend_27 { pt3dadd( -47.0082, -34.813, 7.33533, 0.83 ) }
    dend_27 { pt3dadd( -48.6803, -33.4734, 8.41916, 0.28 ) }
    dend_27 { pt3dadd( -49.9469, -32.4585, 9.24016, 0.83 ) }
    dend_27 { pt3dadd( -57.5023, -25.4572, 16.0112, 0.83 ) }
    dend_27 { pt3dadd( -65.9717, -19.2833, 22.5467, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 41/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -4.40548, -53.9583, -7.4296, 0.55 ) }
    dend_10 { pt3dadd( -4.58959, -55.8445, -7.42699, 0.55 ) }
    dend_10 { pt3dadd( -4.75576, -57.1847, -7.42927, 0.55 ) }
    dend_10 { pt3dadd( -4.97717, -58.8884, -7.4409, 0.55 ) }
    dend_10 { pt3dadd( -5.16739, -60.3403, -7.52818, 0.55 ) }
    dend_10 { pt3dadd( -5.3024, -61.4692, -7.63099, 0.55 ) }
    dend_10 { pt3dadd( -5.43221, -62.5506, -7.7443, 0.28 ) }
    dend_10 { pt3dadd( -5.45621, -62.7601, -7.77579, 0.28 ) }
    dend_10 { pt3dadd( -5.52264, -63.3757, -7.89146, 0.83 ) }
    dend_10 { pt3dadd( -5.83329, -65.6568, -8.40995, 0.55 ) }
    dend_10 { pt3dadd( -5.95985, -66.4581, -8.62197, 1.11 ) }
    dend_10 { pt3dadd( -5.9925, -66.756, -8.71451, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -4.40548, -53.9583, -7.4296, 0.55 ) }
    dend_9 { pt3dadd( -5.39996, -54.7666, -7.64135, 0.55 ) }
    dend_9 { pt3dadd( -7.1113, -56.2319, -8.13255, 0.55 ) }
    dend_9 { pt3dadd( -8.17195, -57.0884, -8.41354, 0.55 ) }
    dend_9 { pt3dadd( -9.78242, -58.3571, -8.82094, 0.83 ) }
    dend_9 { pt3dadd( -11.9683, -60.1265, -9.44181, 0.55 ) }
    dend_9 { pt3dadd( -12.7508, -60.7593, -9.66811, 0.55 ) }
    dend_9 { pt3dadd( -14.8665, -62.5337, -10.4125, 0.55 ) }
    dend_9 { pt3dadd( -16.5611, -63.9578, -11.0832, 0.55 ) }
    dend_9 { pt3dadd( -18.7363, -65.9122, -11.9828, 0.55 ) }
    dend_9 { pt3dadd( -20.1968, -67.2184, -12.5858, 0.55 ) }
    dend_9 { pt3dadd( -20.8786, -67.7809, -12.8635, 0.55 ) }
    dend_9 { pt3dadd( -22.5214, -69.0011, -13.5174, 0.55 ) }
    dend_9 { pt3dadd( -23.7211, -69.7916, -13.9602, 0.28 ) }
    dend_9 { pt3dadd( -25.1985, -70.7009, -14.512, 0.55 ) }
    dend_9 { pt3dadd( -27.4359, -71.8578, -15.2317, 0.28 ) }
    dend_9 { pt3dadd( -28.6338, -72.3802, -15.5827, 0.83 ) }
    dend_9 { pt3dadd( -30.713, -73.2142, -16.1738, 0.28 ) }
    dend_9 { pt3dadd( -31.3584, -73.4496, -16.3314, 0.55 ) }
    dend_9 { pt3dadd( -32.9512, -74.0434, -16.7136, 0.28 ) }
    dend_9 { pt3dadd( -34.5154, -74.6433, -17.1161, 0.83 ) }
    dend_9 { pt3dadd( -37.2563, -75.8658, -17.8235, 0.28 ) }
    dend_9 { pt3dadd( -37.883, -76.1922, -18.0061, 0.55 ) }
    dend_9 { pt3dadd( -39.4649, -77.1293, -18.5446, 0.28 ) }
    dend_9 { pt3dadd( -40.1293, -77.5824, -18.8019, 0.55 ) }
    dend_9 { pt3dadd( -41.5845, -78.8855, -19.5402, 0.28 ) }
    dend_9 { pt3dadd( -42.0135, -79.4064, -19.8294, 0.55 ) }
    dend_9 { pt3dadd( -42.5893, -80.2702, -20.292, 0.28 ) }
    dend_9 { pt3dadd( -42.8836, -80.767, -20.5774, 0.28 ) }
    dend_9 { pt3dadd( -43.4525, -81.9187, -21.2851, 0.55 ) }
    dend_9 { pt3dadd( -44.7883, -84.9512, -23.1621, 0.28 ) }
    dend_9 { pt3dadd( -44.9305, -85.3331, -23.3875, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 85/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 17.1238, -68.7334, 32.2839, 0.55 ) }
    dend_6 { pt3dadd( 19.2266, -73.8715, 36.9252, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 87/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 17.1238, -68.7334, 32.2839, 0.55 ) }
    dend_5 { pt3dadd( 22.2786, -76.7038, 37.1901, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 89/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -45.5795, -42.3221, 4.46979, 0.55 ) }
    dend_32 { pt3dadd( -47.6474, -43.2024, 4.56045, 0.55 ) }
    dend_32 { pt3dadd( -49.3696, -43.9103, 4.68454, 0.55 ) }
    dend_32 { pt3dadd( -52.1992, -45.0539, 4.91392, 0.55 ) }
    dend_32 { pt3dadd( -53.7093, -45.6805, 5.00483, 0.83 ) }
    dend_32 { pt3dadd( -56.4373, -46.9104, 5.14, 0.55 ) }
    dend_32 { pt3dadd( -57.9468, -47.6616, 5.19494, 0.83 ) }
    dend_32 { pt3dadd( -60.038, -48.7573, 5.29102, 0.55 ) }
    dend_32 { pt3dadd( -61.1518, -49.4852, 5.32637, 0.83 ) }
    dend_32 { pt3dadd( -62.4754, -50.5631, 5.35885, 0.28 ) }
    dend_32 { pt3dadd( -63.4343, -51.4838, 5.35706, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_32 { pt3dadd( -64.6823, -52.8287, 5.27364, 0.28 ) }
    dend_32 { pt3dadd( -65.3022, -53.5376, 5.24857, 0.55 ) }
    dend_32 { pt3dadd( -66.5958, -55.183, 5.24119, 0.28 ) }
    dend_32 { pt3dadd( -67.3056, -56.032, 5.2874, 0.55 ) }
    dend_32 { pt3dadd( -68.0587, -56.8983, 5.39157, 0.28 ) }
    dend_32 { pt3dadd( -69.0329, -57.8991, 5.5401, 0.83 ) }
    dend_32 { pt3dadd( -70.2083, -59.0854, 5.73015, 0.55 ) }
    dend_32 { pt3dadd( -70.8121, -59.6509, 5.81733, 0.83 ) }
    dend_32 { pt3dadd( -72.6693, -61.2598, 6.04918, 0.28 ) }
    dend_32 { pt3dadd( -73.9126, -62.3605, 6.19401, 0.83 ) }
    dend_32 { pt3dadd( -75.5429, -63.7699, 6.34943, 0.55 ) }
    dend_32 { pt3dadd( -76.9744, -64.9801, 6.49321, 0.55 ) }
    dend_32 { pt3dadd( -78.5998, -66.2803, 6.64213, 0.55 ) }
    dend_32 { pt3dadd( -79.2638, -66.7742, 6.70301, 0.55 ) }
    dend_32 { pt3dadd( -80.4575, -67.5985, 6.80242, 0.83 ) }
    dend_32 { pt3dadd( -82.0196, -68.5741, 6.99294, 0.55 ) }
    dend_32 { pt3dadd( -83.6501, -69.5607, 7.25565, 0.28 ) }
    dend_32 { pt3dadd( -85.3145, -70.5605, 7.56852, 0.83 ) }
    dend_32 { pt3dadd( -86.4472, -71.2675, 7.79972, 0.28 ) }
    dend_32 { pt3dadd( -87.5395, -71.9341, 8.02999, 0.55 ) }
    dend_32 { pt3dadd( -89.2285, -72.9187, 8.39131, 0.28 ) }
    dend_32 { pt3dadd( -90.4072, -73.6476, 8.67517, 0.28 ) }
    dend_32 { pt3dadd( -91.3994, -74.2283, 8.91749, 0.55 ) }
    dend_32 { pt3dadd( -92.7159, -75.0665, 9.29298, 0.83 ) }
    dend_32 { pt3dadd( -100.131, -80.3923, 11.7, 0.83 ) }
    dend_32 { pt3dadd( -109.035, -83.5892, 12.4663, 0.83 ) }
    dend_32 { pt3dadd( -117.293, -87.726, 14.5654, 0.83 ) }
    dend_32 { pt3dadd( -125.423, -92.375, 15.8929, 0.83 ) }
    dend_32 { pt3dadd( -132.87, -97.9361, 17.5042, 0.83 ) }
    dend_32 { pt3dadd( -140.854, -102.981, 17.671, 0.83 ) }
    dend_32 { pt3dadd( -147.958, -108.851, 19.643, 0.83 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 31/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -45.5795, -42.3221, 4.46979, 0.55 ) }
    dend_31 { pt3dadd( -46.5557, -43.5779, 6.20452, 0.55 ) }
    dend_31 { pt3dadd( -47.8859, -44.9689, 7.78409, 0.55 ) }
    dend_31 { pt3dadd( -51.8285, -48.9879, 11.2754, 0.83 ) }
    dend_31 { pt3dadd( -52.8922, -50.0115, 11.9453, 0.55 ) }
    dend_31 { pt3dadd( -54.2935, -51.3888, 12.6404, 0.55 ) }
    dend_31 { pt3dadd( -55.1242, -52.2627, 12.9897, 0.55 ) }
    dend_31 { pt3dadd( -57.2242, -54.711, 13.6277, 0.55 ) }
    dend_31 { pt3dadd( -58.8366, -56.6349, 13.8722, 0.55 ) }
    dend_31 { pt3dadd( -61.047, -59.2479, 13.8512, 0.55 ) }
    dend_31 { pt3dadd( -62.5635, -61.2309, 13.9323, 0.55 ) }
    dend_31 { pt3dadd( -64.0674, -63.4158, 14.1239, 0.55 ) }
    dend_31 { pt3dadd( -65.1875, -65.2919, 14.3755, 0.55 ) }
    dend_31 { pt3dadd( -65.9775, -66.8266, 14.672, 0.55 ) }
    dend_31 { pt3dadd( -66.7247, -68.3839, 15.0412, 0.55 ) }
    dend_31 { pt3dadd( -68.9085, -73.2899, 16.3901, 0.55 ) }
    dend_31 { pt3dadd( -69.85, -75.2924, 16.9982, 0.83 ) }
    dend_31 { pt3dadd( -71.7102, -79.1104, 18.2072, 0.55 ) }
    dend_31 { pt3dadd( -72.6163, -81.0022, 18.8266, 0.55 ) }
    dend_31 { pt3dadd( -73.4316, -82.722, 19.3783, 0.83 ) }
    dend_31 { pt3dadd( -74.062, -84.1118, 19.7835, 0.28 ) }
    dend_31 { pt3dadd( -75.2618, -86.8819, 20.5401, 0.55 ) }
    dend_31 { pt3dadd( -75.8521, -88.2603, 20.9152, 0.55 ) }
    dend_31 { pt3dadd( -77.0163, -90.9104, 21.6121, 0.83 ) }
    dend_31 { pt3dadd( -78.5648, -94.5844, 22.5039, 0.55 ) }
    dend_31 { pt3dadd( -79.1777, -96.1915, 22.8853, 0.83 ) }
    dend_31 { pt3dadd( -80.1249, -99.0251, 23.4999, 0.28 ) }
    dend_31 { pt3dadd( -80.6287, -100.805, 23.842, 0.55 ) }
    dend_31 { pt3dadd( -81.0439, -102.263, 24.1046, 0.55 ) }
    dend_31 { pt3dadd( -82.0007, -105.641, 24.6319, 0.28 ) }
    dend_31 { pt3dadd( -82.3615, -106.963, 24.8192, 0.28 ) }
    dend_31 { pt3dadd( -82.9411, -108.963, 25.0782, 0.55 ) }
    dend_31 { pt3dadd( -83.5635, -111.055, 25.2632, 0.55 ) }
    dend_31 { pt3dadd( -84.5528, -115.137, 25.6579, 0.55 ) }
    dend_31 { pt3dadd( -88.7836, -126.135, 29.8531, 0.55 ) }
    dend_31 { pt3dadd( -91.4578, -136.472, 36.4444, 0.55 ) }
    dend_31 { pt3dadd( -91.561, -145.852, 44.8482, 0.55 ) }
    dend_31 { pt3dadd( -90.8142, -156.049, 52.148, 0.55 ) }
    dend_31 { pt3dadd( -88.6029, -166.485, 58.7659, 0.55 ) }
    dend_31 { pt3dadd( -87.5723, -177.371, 64.8874, 0.55 ) }
    dend_31 { pt3dadd( -87.5712, -188.959, 69.5531, 0.55 ) }
    dend_31 { pt3dadd( -87.0056, -200.503, 74.305, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 73/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -65.9717, -19.2833, 22.5467, 0.83 ) }
    dend_29 { pt3dadd( -71.2317, -15.0496, 27.278, 0.83 ) }
    dend_29 { pt3dadd( -76.3674, -11.7797, 32.8687, 0.83 ) }
    dend_29 { pt3dadd( -80.8563, -8.46268, 38.9605, 0.83 ) }
    dend_29 { pt3dadd( -84.3546, -6.09304, 46.0785, 0.83 ) }
    dend_29 { pt3dadd( -87.5632, -3.24718, 53.1468, 0.83 ) }
    dend_29 { pt3dadd( -91.1152, 0.307903, 59.6934, 0.83 ) }
    dend_29 { pt3dadd( -94.8508, 4.59172, 65.653, 0.83 ) }
    dend_29 { pt3dadd( -97.7988, 9.43599, 71.5981, 0.83 ) }
    dend_29 { pt3dadd( -100.254, 15.403, 76.6228, 0.83 ) }
    dend_29 { pt3dadd( -102.298, 21.3939, 81.7959, 0.83 ) }
    dend_29 { pt3dadd( -105.599, 26.7211, 87.0891, 0.83 ) }
    dend_29 { pt3dadd( -110.147, 31.7186, 91.77, 0.83 ) }
    dend_29 { pt3dadd( -113.249, 36.7961, 97.4267, 0.83 ) }
    dend_29 { pt3dadd( -116.643, 41.722, 103.058, 0.83 ) }
    dend_29 { pt3dadd( -120.352, 46.8043, 108.337, 0.83 ) }
    dend_29 { pt3dadd( -124.878, 52.0194, 112.785, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 90/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -65.9717, -19.2833, 22.5467, 0.55 ) }
    dend_28 { pt3dadd( -73.7348, -12.8995, 28.3301, 0.83 ) }
    dend_28 { pt3dadd( -82.8807, -8.26798, 33.8448, 0.83 ) }
    dend_28 { pt3dadd( -91.6212, -2.02378, 38.235, 0.83 ) }
    dend_28 { pt3dadd( -100.651, 4.34216, 41.7824, 0.83 ) }
    dend_28 { pt3dadd( -110.171, 10.8848, 42.8802, 0.83 ) }
    dend_28 { pt3dadd( -118.928, 18.2424, 44.6754, 0.83 ) }
    dend_28 { pt3dadd( -127.901, 25.2239, 46.9207, 0.83 ) }
    dend_28 { pt3dadd( -136.64, 31.9939, 50.4063, 0.83 ) }
    dend_28 { pt3dadd( -143.836, 39.8671, 54.8404, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_28 { pt3dadd( -152.165, 46.943, 58.6721, 0.83 ) }
    dend_28 { pt3dadd( -161.373, 53.5096, 61.2484, 0.83 ) }
    dend_28 { pt3dadd( -170.11, 60.352, 64.5911, 0.83 ) }
    dend_28 { pt3dadd( -178.887, 67.3065, 67.5679, 0.83 ) }
    dend_28 { pt3dadd( -187.334, 73.4895, 72.5753, 0.83 ) }
    dend_28 { pt3dadd( -195.784, 78.4225, 78.8662, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 6/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -5.9925, -66.756, -8.71451, 0.28 ) }
    dend_18 { pt3dadd( -5.92759, -68.2701, -8.94564, 0.28 ) }
    dend_18 { pt3dadd( -5.90424, -69.1712, -9.09883, 0.55 ) }
    dend_18 { pt3dadd( -5.86881, -71.6111, -9.60237, 0.28 ) }
    dend_18 { pt3dadd( -5.87183, -72.9098, -9.88719, 1.11 ) }
    dend_18 { pt3dadd( -5.86238, -75.365, -10.4391, 0.55 ) }
    dend_18 { pt3dadd( -5.81982, -76.7187, -10.743, 0.83 ) }
    dend_18 { pt3dadd( -5.73997, -78.6569, -11.2511, 0.55 ) }
    dend_18 { pt3dadd( -5.65662, -80.8123, -11.8864, 0.28 ) }
    dend_18 { pt3dadd( -5.63518, -81.2788, -12.035, 0.55 ) }
    dend_18 { pt3dadd( -5.57955, -82.973, -12.5961, 0.55 ) }
    dend_18 { pt3dadd( -5.47106, -85.3124, -13.3589, 0.83 ) }
    dend_18 { pt3dadd( -5.27944, -87.6356, -14.1326, 0.28 ) }
    dend_18 { pt3dadd( -5.11399, -88.8415, -14.5378, 0.83 ) }
    dend_18 { pt3dadd( -5.01345, -89.4253, -14.7146, 0.55 ) }
    dend_18 { pt3dadd( -4.7709, -90.7083, -15.0624, 0.28 ) }
    dend_18 { pt3dadd( -4.44991, -92.4075, -15.4495, 0.83 ) }
    dend_18 { pt3dadd( -4.09507, -94.239, -15.8313, 0.28 ) }
    dend_18 { pt3dadd( -3.8581, -95.4576, -16.1076, 0.83 ) }
    dend_18 { pt3dadd( -3.4513, -97.812, -16.7235, 0.55 ) }
    dend_18 { pt3dadd( -3.33097, -98.7215, -16.9887, 0.28 ) }
    dend_18 { pt3dadd( -3.27416, -99.2798, -17.1584, 0.55 ) }
    dend_18 { pt3dadd( -3.15138, -101.887, -17.9387, 0.55 ) }
    dend_18 { pt3dadd( -3.12724, -105.027, -18.8322, 0.28 ) }
    dend_18 { pt3dadd( -3.1498, -105.897, -19.071, 0.83 ) }
    dend_18 { pt3dadd( -3.38078, -109.42, -20.0615, 0.28 ) }
    dend_18 { pt3dadd( -3.46441, -110.297, -20.2741, 0.55 ) }
    dend_18 { pt3dadd( -3.6138, -111.516, -20.4839, 0.28 ) }
    dend_18 { pt3dadd( -3.68675, -111.963, -20.4923, 0.55 ) }
    dend_18 { pt3dadd( -3.90551, -113.065, -20.3459, 0.28 ) }
    dend_18 { pt3dadd( -3.97397, -113.37, -20.2788, 0.55 ) }
    dend_18 { pt3dadd( -4.27168, -114.617, -19.827, 0.28 ) }
    dend_18 { pt3dadd( -4.47043, -115.428, -19.552, 0.55 ) }
    dend_18 { pt3dadd( -4.65027, -116.273, -19.2962, 0.28 ) }
    dend_18 { pt3dadd( -4.75475, -116.744, -19.2003, 0.55 ) }
    dend_18 { pt3dadd( -5.08208, -118.273, -19.0216, 0.28 ) }
    dend_18 { pt3dadd( -5.2827, -119.091, -18.9651, 0.55 ) }
    dend_18 { pt3dadd( -5.6561, -120.455, -18.9305, 0.28 ) }
    dend_18 { pt3dadd( -5.83607, -121.11, -18.9307, 0.55 ) }
    dend_18 { pt3dadd( -6.53439, -123.742, -18.989, 0.28 ) }
    dend_18 { pt3dadd( -6.91708, -125.37, -19.0356, 0.28 ) }
    dend_18 { pt3dadd( -7.16388, -126.58, -19.0812, 0.55 ) }
    dend_18 { pt3dadd( -7.32077, -127.544, -19.1127, 0.28 ) }
    dend_18 { pt3dadd( -7.56247, -129.769, -19.1411, 0.28 ) }
    dend_18 { pt3dadd( -7.65253, -130.943, -19.1253, 0.55 ) }
    dend_18 { pt3dadd( -7.70525, -132.767, -19.0369, 0.28 ) }
    dend_18 { pt3dadd( -7.68926, -133.629, -18.9765, 0.28 ) }
    dend_18 { pt3dadd( -7.61358, -134.935, -18.8612, 0.28 ) }
    dend_18 { pt3dadd( -7.50183, -136.045, -18.7287, 0.55 ) }
    dend_18 { pt3dadd( -7.3102, -137.667, -18.5034, 0.28 ) }
    dend_18 { pt3dadd( -7.2608, -138.1, -18.4512, 0.55 ) }
    dend_18 { pt3dadd( -7.1044, -139.454, -18.3555, 0.28 ) }
    dend_18 { pt3dadd( -7.01435, -140.139, -18.3384, 0.55 ) }
    dend_18 { pt3dadd( -6.69736, -142.407, -18.3531, 0.28 ) }
    dend_18 { pt3dadd( -6.43839, -143.854, -18.3777, 0.83 ) }
    dend_18 { pt3dadd( -5.98214, -146.131, -18.4807, 0.28 ) }
    dend_18 { pt3dadd( -5.63905, -147.665, -18.5697, 0.83 ) }
    dend_18 { pt3dadd( -4.85204, -150.867, -18.7884, 0.28 ) }
    dend_18 { pt3dadd( -4.79542, -151.07, -18.8078, 0.55 ) }
    dend_18 { pt3dadd( -4.10467, -153.234, -19.0754, 0.28 ) }
    dend_18 { pt3dadd( -3.77642, -154.072, -19.205, 0.55 ) }
    dend_18 { pt3dadd( -2.94518, -155.856, -19.526, 0.28 ) }
    dend_18 { pt3dadd( -2.6986, -156.295, -19.6257, 0.55 ) }
    dend_18 { pt3dadd( -1.79307, -157.57, -20.0623, 0.28 ) }
    dend_18 { pt3dadd( -1.36159, -158.079, -20.2627, 0.55 ) }
    dend_18 { pt3dadd( -0.223258, -159.158, -20.7617, 0.28 ) }
    dend_18 { pt3dadd( 0.377717, -159.65, -20.9987, 0.55 ) }
    dend_18 { pt3dadd( 1.67042, -160.532, -21.4889, 0.28 ) }
    dend_18 { pt3dadd( 2.04258, -160.761, -21.6153, 0.55 ) }
    dend_18 { pt3dadd( 3.46944, -161.519, -21.9409, 0.28 ) }
    dend_18 { pt3dadd( 4.59434, -162.052, -22.1417, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 77/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.9925, -66.756, -8.71451, 0.55 ) }
    dend_11 { pt3dadd( -7.26933, -65.1933, -7.48095, 0.55 ) }
    dend_11 { pt3dadd( -8.32774, -63.8979, -6.4584, 0.55 ) }
    dend_11 { pt3dadd( -10.5146, -61.2214, -4.34565, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 81/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -10.5146, -61.2214, -4.34565, 0.55 ) }
    dend_17 { pt3dadd( -13.4444, -59.4553, -2.81321, 0.55 ) }
    dend_17 { pt3dadd( -15.9986, -57.9157, -1.47726, 0.28 ) }
    dend_17 { pt3dadd( -16.7987, -57.4334, -1.05876, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 85/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -10.5146, -61.2214, -4.34565, 0.55 ) }
    dend_12 { pt3dadd( -11.0019, -60.9007, -3.55333, 0.55 ) }
    dend_12 { pt3dadd( -11.4162, -60.6281, -2.8797, 0.55 ) }
    dend_12 { pt3dadd( -12.478, -59.9294, -1.15344, 0.55 ) }
    dend_12 { pt3dadd( -13.6498, -59.1584, 0.751685, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 90/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -13.6498, -59.1584, 0.751685, 0.55 ) }
    dend_14 { pt3dadd( -15.1865, -58.6644, 2.87056, 0.55 ) }
    dend_14 { pt3dadd( -17.2825, -58.0398, 5.68331, 0.28 ) }
    dend_14 { pt3dadd( -17.6485, -57.9265, 6.15769, 0.55 ) }
    dend_14 { pt3dadd( -19.2301, -57.4503, 8.05561, 0.28 ) }
    dend_14 { pt3dadd( -19.9782, -57.225, 8.95337, 0.83 ) }
    dend_14 { pt3dadd( -22.5851, -56.4399, 12.0818, 0.55 ) }
    dend_14 { pt3dadd( -23.4988, -56.2025, 13.1749, 0.55 ) }
    dend_14 { pt3dadd( -24.8116, -55.8502, 14.6305, 0.55 ) }
    dend_14 { pt3dadd( -26.9313, -55.2517, 17.0466, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_14 { pt3dadd( -32.6181, -53.0552, 25.0667, 0.55 ) }
    dend_14 { pt3dadd( -37.7803, -49.4402, 32.8994, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 2/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -13.6498, -59.1584, 0.751685, 0.55 ) }
    dend_13 { pt3dadd( -14.5994, -60.49, 2.66077, 0.55 ) }
    dend_13 { pt3dadd( -14.9818, -61.0473, 3.28756, 0.55 ) }
    dend_13 { pt3dadd( -15.9867, -62.6768, 4.74419, 0.55 ) }
    dend_13 { pt3dadd( -19.187, -69.0662, 9.36406, 0.55 ) }
    dend_13 { pt3dadd( -19.7817, -70.3541, 10.1569, 0.55 ) }
    dend_13 { pt3dadd( -20.9359, -73.1216, 11.7555, 0.55 ) }
    dend_13 { pt3dadd( -22.0601, -76.2523, 13.4628, 0.55 ) }
    dend_13 { pt3dadd( -23.1322, -79.4065, 15.0566, 0.55 ) }
    dend_13 { pt3dadd( -24.741, -84.4861, 17.34, 0.28 ) }
    dend_13 { pt3dadd( -25.632, -87.8277, 18.5704, 0.28 ) }
    dend_13 { pt3dadd( -26.5782, -91.8263, 20.083, 0.28 ) }
    dend_13 { pt3dadd( -27.0369, -94.6943, 21.1878, 0.28 ) }
    dend_13 { pt3dadd( -27.1899, -96.6194, 21.9312, 0.55 ) }
    dend_13 { pt3dadd( -27.1487, -100.193, 23.283, 0.28 ) }
    dend_13 { pt3dadd( -26.8907, -102.011, 23.919, 0.28 ) }
    dend_13 { pt3dadd( -26.6967, -102.679, 24.1215, 0.55 ) }
    dend_13 { pt3dadd( -25.0511, -107.017, 25.1483, 0.28 ) }
    dend_13 { pt3dadd( -23.9195, -109.349, 25.6093, 0.28 ) }
    dend_13 { pt3dadd( -22.9505, -110.943, 25.923, 0.28 ) }
    dend_13 { pt3dadd( -21.893, -112.333, 26.1711, 0.28 ) }
    dend_13 { pt3dadd( -20.2293, -114.337, 26.5549, 0.55 ) }
    dend_13 { pt3dadd( -22.7062, -123.765, 33.1704, 0.55 ) }
    dend_13 { pt3dadd( -27.659, -133.425, 37.7287, 0.55 ) }
    dend_13 { pt3dadd( -30.7307, -142.653, 44.3916, 0.55 ) }
    dend_13 { pt3dadd( -33.2466, -151.613, 51.6456, 0.55 ) }
    dend_13 { pt3dadd( -35.4297, -161.639, 57.3799, 0.55 ) }
    dend_13 { pt3dadd( -35.5225, -170.85, 64.7345, 0.55 ) }
    dend_13 { pt3dadd( -36.639, -179.188, 73.0408, 0.55 ) }
    dend_13 { pt3dadd( -36.8437, -188.381, 80.4179, 0.55 ) }
    dend_13 { pt3dadd( -35.5772, -198.443, 86.3528, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 33/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -37.7803, -49.4402, 32.8994, 0.55 ) }
    dend_16 { pt3dadd( -45.9861, -46.3047, 40.8451, 0.55 ) }
    dend_16 { pt3dadd( -54.7574, -42.218, 47.646, 0.55 ) }
    dend_16 { pt3dadd( -62.787, -38.8697, 55.6816, 0.55 ) }
    dend_16 { pt3dadd( -71.541, -36.8446, 63.4127, 0.55 ) }
    dend_16 { pt3dadd( -80.9927, -34.8926, 70.2915, 0.55 ) }
    dend_16 { pt3dadd( -89.9497, -34.342, 78.0442, 0.55 ) }
    dend_16 { pt3dadd( -97.6523, -31.4575, 86.5739, 0.55 ) }
    dend_16 { pt3dadd( -105.935, -27.6588, 94.127, 0.55 ) }
    dend_16 { pt3dadd( -115.358, -23.8928, 100.204, 0.55 ) }
    dend_16 { pt3dadd( -123.791, -21.2458, 108.096, 0.55 ) }
    dend_16 { pt3dadd( -130.645, -19.9304, 117.684, 0.55 ) }
    dend_16 { pt3dadd( -137.547, -20.2944, 127.315, 0.55 ) }
    dend_16 { pt3dadd( -143.214, -19.4874, 137.7, 0.55 ) }
    dend_16 { pt3dadd( -149.002, -17.4084, 147.839, 0.55 ) }
    dend_16 { pt3dadd( -154.923, -17.5916, 158.107, 0.55 ) }
    dend_16 { pt3dadd( -161.168, -16.3436, 168.111, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 50/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -37.7803, -49.4402, 32.8994, 0.55 ) }
    dend_15 { pt3dadd( -48.465, -46.5695, 38.9401, 0.55 ) }
    dend_15 { pt3dadd( -58.8252, -43.0018, 45.1539, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_33, dend_0, dend_46, dend_45, dend_43, dend_34, dend_20, dend_1, dend_40, dend_35, dend_24, dend_21, dend_7, dend_2, dend_42, dend_41, dend_39, dend_36, dend_26, dend_25, dend_23, dend_22, dend_19, dend_8, dend_4, dend_3, dend_38, dend_37, dend_30, dend_27, dend_10, dend_9, dend_6, dend_5, dend_32, dend_31, dend_29, dend_28, dend_18, dend_11, dend_17, dend_12, dend_14, dend_13, dend_16, dend_15]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_33, dend_0, dend_46, dend_45, dend_43, dend_34, dend_20, dend_1, dend_40, dend_35, dend_24, dend_21, dend_7, dend_2, dend_42, dend_41, dend_39, dend_36, dend_26, dend_25, dend_23, dend_22, dend_19, dend_8, dend_4, dend_3, dend_38, dend_37, dend_30, dend_27, dend_10, dend_9, dend_6, dend_5, dend_32, dend_31, dend_29, dend_28, dend_18, dend_11, dend_17, dend_12, dend_14, dend_13, dend_16, dend_15]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_46 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_43 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_40 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_42 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_39 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_25 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_23 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_19 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_4 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_38 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_9 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_32 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_31 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_29 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_28 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_14 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_13 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_16 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_33 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_20 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_2 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_7 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_3 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_35 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_8 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_24 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_26 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_30 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_10 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_11 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_36 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_12 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_17 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_22 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_6 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_27 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_5 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_45 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_41 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_37 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_15 OneSecGrp_SectionRef_50.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_5, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_44 nseg = 5
    dend_46 nseg = 9
    dend_43 nseg = 5
    dend_40 nseg = 5
    dend_21 nseg = 3
    dend_42 nseg = 3
    dend_39 nseg = 5
    dend_25 nseg = 9
    dend_23 nseg = 3
    dend_19 nseg = 11
    dend_4 nseg = 3
    dend_38 nseg = 13
    dend_9 nseg = 3
    dend_32 nseg = 7
    dend_31 nseg = 9
    dend_29 nseg = 7
    dend_28 nseg = 9
    dend_18 nseg = 5
    dend_14 nseg = 3
    dend_13 nseg = 9
    dend_16 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_SBC_6cab0b0a69_0_0


