// Cell: cACint209_L23_BTC_c745595fbe_0_0
/*
{
  "id" : "cACint209_L23_BTC_c745595fbe_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.701782, -14.5938, 2.84454, 2.73269", "0.624028, -13.2198, 2.58654, 4.41229", "0.546274, -11.8458, 2.32855, 5.84991", "0.46852, -10.4718, 2.07055, 7.31637", "0.390766, -9.09779, 1.81255, 8.68275", "0.313011, -7.72379, 1.55455, 10.1324", "0.235257, -6.34979, 1.29656, 11.1056", "0.157503, -4.97579, 1.03856, 11.7054", "0.0797487, -3.60179, 0.780562, 12.0256", "0.00199453, -2.22779, 0.522565, 12.4948", "-0.0757597, -0.853785, 0.264567, 12.7838", "-0.153514, 0.520216, 0.00657008, 12.9275", "-0.231268, 1.89422, -0.251427, 12.8186", "-0.309022, 3.26822, -0.509424, 12.3668", "-0.386777, 4.64222, -0.767422, 11.8063", "-0.464531, 6.01622, -1.02542, 10.8607", "-0.542285, 7.39022, -1.28342, 9.60756", "-0.620039, 8.76422, -1.54141, 8.32491", "-0.697793, 10.1382, -1.79941, 6.57632", "-0.775548, 11.5122, -2.05741, 4.5422", "-0.853302, 12.8862, -2.3154, 2.90642" ]
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-3.99768, 4.39237, 12.0608, 1.77", "-4.1731, 5.18109, 12.3167, 1.77", "-4.48961, 6.40355, 12.8742, 1.55", "-4.74152, 7.22094, 13.3444, 1.55", "-5.11235, 8.1481, 14.0312, 1.4", "-5.78582, 9.4167, 15.1381, 1.4", "-6.34105, 10.2431, 15.9405, 1.4", "-6.97281, 10.8897, 16.7213, 1.69", "-7.52264, 11.2881, 17.2891, 1.69", "-8.57836, 11.875, 18.1658, 1.4", "-9.51582, 12.3025, 18.8124, 1.33", "-10.3609, 12.6596, 19.1822, 1.18", "-11.7018, 13.2729, 19.4492, 1.18", "-12.6385, 13.7701, 19.4761, 1.18", "-13.5741, 14.3513, 19.4554, 1.33", "-14.794, 15.2814, 19.3634, 1.4", "-16.8742, 17.2953, 19.1703, 1.62", "-17.6397, 18.2435, 19.1113, 1.69", "-18.4133, 19.3787, 19.0521, 1.33", "-19.3715, 21.0454, 19.0231, 1.62", "-19.8164, 22.0555, 19.0944, 1.62", "-20.1378, 23.1624, 19.4119, 1.84", "-20.2522, 23.7591, 19.8136, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500003629291099
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.09232, -14.8961, 2.30081, 3.98", "1.09232, -14.8961, 2.30081, 3.98", "1.19467, -16.2158, 2.30081, 3.98", "1.326, -17.9091, 2.30081, 3.76", "1.45684, -19.5961, 2.30081, 3.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500003629291099
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.877678, 13.3174, -4.94919, 2.58", "-0.877678, 13.3174, -4.94919, 2.58", "-0.369738, 14.9853, -4.61241, 2.14", "-0.089406, 15.9404, -4.40918, 2.14", "0.18609, 16.9592, -4.19639, 1.92", "0.560861, 18.5253, -3.86493, 1.69", "0.767173, 19.5183, -3.66919, 1.69", "0.917219, 20.4733, -3.5052, 1.69", "1.04525, 21.8867, -3.31797, 1.92", "1.05912, 22.7435, -3.27214, 2.06", "0.989549, 24.0092, -3.37921, 1.99", "0.905704, 24.84, -3.57691, 1.84", "0.787728, 26.0353, -3.98465, 1.69", "0.675548, 27.0291, -4.38414, 1.77", "0.528197, 28.2662, -4.95654, 1.69", "0.333913, 30.0649, -5.88531, 1.92", "0.208127, 31.4702, -6.69992, 2.14", "0.142173, 32.7045, -7.43908, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500003629291099
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.853302, 12.8862, -2.3154, 0.892431", "-1.70079, 27.8622, -2.3154, 0.892431", "-2.54828, 42.8383, -2.3154, 0.892431" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-20.2522, 23.7591, 19.8136, 0.66", "-21.6536, 24.6963, 21.5059, 0.66", "-22.3434, 25.2154, 22.1912, 0.59", "-23.2272, 25.9058, 22.9453, 0.59", "-23.8876, 26.3867, 23.44, 0.52", "-24.6879, 26.907, 23.9817, 0.66", "-25.251, 27.2473, 24.3322, 0.52", "-25.8116, 27.6031, 24.6392, 0.52", "-26.5314, 28.0249, 25.1182, 0.44", "-27.0748, 28.2896, 25.5639, 0.66", "-27.6854, 28.514, 26.1725, 0.52", "-28.2256, 28.6811, 26.7703, 0.74", "-29.6385, 29.0714, 28.4922, 1.03", "-30.4343, 29.2777, 29.5745, 0.66", "-31.1049, 29.4587, 30.6053, 0.59", "-31.5755, 29.6154, 31.4328, 0.74", "-38.8038, 33.111, 37.4883, 0.74" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-20.2522, 23.7591, 19.8136, 0.88", "-20.598, 26.4299, 20.3301, 0.88", "-20.7657, 27.3527, 20.4628, 0.88", "-21.0232, 28.5049, 20.6326, 0.88", "-21.3534, 29.8236, 20.8321, 0.88", "-21.6638, 31.0791, 21.0416, 0.81", "-21.9446, 32.2659, 21.2712, 0.81", "-22.1641, 33.0711, 21.3907, 1.03", "-22.4566, 34.0027, 21.5451, 0.81", "-22.8309, 35.0211, 21.7287, 0.96", "-23.1643, 35.8471, 21.8831, 0.88", "-23.5548, 36.8284, 22.061, 0.74", "-23.8151, 37.499, 22.1847, 0.66", "-24.0966, 38.2858, 22.3246, 0.74", "-24.3837, 39.2159, 22.4605, 0.81", "-24.5732, 39.9421, 22.5604, 0.81", "-24.7478, 40.7841, 22.6827, 0.88", "-24.8705, 41.6893, 22.8246, 1.03", "-24.9358, 42.7421, 23.0138, 0.96", "-24.944, 44.0576, 23.2535, 1.03", "-24.9384, 44.995, 23.4106, 1.03", "-24.9481, 46.3671, 23.6325, 1.11", "-24.9988, 47.2383, 23.7326, 0.96", "-25.1315, 48.3238, 23.8045, 0.88", "-25.3797, 49.5334, 23.869, 0.74", "-25.6767, 50.5542, 23.9287, 0.81", "-25.938, 51.249, 23.9979, 0.96", "-26.5512, 52.5542, 24.1865, 1.11", "-26.8896, 53.1617, 24.3166, 1.11", "-27.4419, 54.0354, 24.5558, 0.96", "-27.9672, 54.831, 24.8116, 0.74", "-28.5405, 55.7412, 25.1227, 0.74", "-28.8555, 56.2599, 25.2953, 0.66", "-29.1862, 56.8171, 25.476, 0.59", "-29.7366, 57.726, 25.6927, 0.81", "-30.0174, 58.1888, 25.7736, 0.96", "-30.3634, 58.7807, 25.8409, 0.96", "-30.8361, 59.6862, 25.8921, 0.59", "-31.3557, 60.9063, 25.9171, 0.59", "-31.6689, 61.871, 25.9047, 0.66", "-31.8745, 62.8805, 25.8664, 0.96", "-31.9445, 63.661, 25.8183, 1.03", "-31.9373, 64.5167, 25.7858, 0.81", "-31.8365, 65.5996, 25.7722, 0.52", "-31.7241, 66.3968, 25.815, 0.37", "-31.6475, 67.1521, 25.9412, 0.37", "-31.6785, 67.6808, 26.1035, 0.44", "-31.9424, 68.7922, 26.6328, 0.44", "-32.1931, 69.4366, 26.9631, 0.66", "-32.5606, 70.2478, 27.3382, 1.03", "-32.8172, 70.8579, 27.5614, 1.18", "-33.0477, 71.5912, 27.7556, 1.25", "-33.1489, 72.3918, 27.8817, 1.4", "-33.0651, 73.6657, 27.9523, 1.25", "-32.8803, 74.4846, 27.9427, 1.18", "-32.4955, 75.5936, 27.8218, 0.66", "-32.0366, 76.6218, 27.6436, 0.66", "-31.3985, 77.8108, 27.3927, 0.66", "-31.0068, 78.4387, 27.2178, 0.81", "-30.4889, 79.1853, 26.9919, 0.96", "-29.9121, 80.0338, 26.7373, 0.81", "-29.4279, 80.8011, 26.5047, 0.88", "-29.0645, 81.5144, 26.31, 0.88", "-28.606, 82.7499, 26.0736, 0.74", "-28.4121, 83.4245, 26.0061, 0.74", "-28.184, 84.3753, 26.0185, 0.59", "-28.077, 84.9271, 26.0603, 0.59", "-27.94, 85.8582, 26.1357, 0.59", "-27.8013, 87.246, 26.2279, 0.74", "-27.7735, 88.0772, 26.2667, 0.81", "-27.7844, 89.0565, 26.2622, 0.81", "-27.836, 90.3877, 26.206, 0.74", "-27.8636, 91.2945, 26.1254, 0.74", "-27.8791, 92.1883, 25.9995, 0.74", "-27.888, 93.6694, 25.7355, 0.88", "-27.8631, 95.1723, 25.4152, 1.03", "-27.8349, 96.1402, 25.181, 1.03", "-27.7897, 96.8651, 25.0238, 1.69", "-27.6735, 98.2239, 24.7588, 1.4", "-27.58, 99.252, 24.5837, 0.74", "-27.4754, 100.377, 24.4332, 0.74", "-27.4482, 100.871, 24.3715, 0.88", "-27.4489, 101.966, 24.2372, 1.03", "-27.4704, 102.567, 24.169, 1.11", "-27.5014, 103.765, 24.0324, 0.66", "-27.4915, 104.551, 23.92, 0.66", "-27.3694, 105.641, 23.72, 0.81", "-27.1728, 106.613, 23.4386, 1.03", "-26.9536, 107.51, 23.0988, 0.88", "-26.7736, 108.198, 22.8119, 0.66", "-26.5613, 109.126, 22.3889, 0.66", "-26.4573, 109.98, 21.9876, 0.88", "-26.5291, 110.979, 21.5759, 0.74", "-26.7699, 111.744, 21.2913, 0.66", "-26.9844, 112.277, 21.1266, 0.66", "-27.3445, 113.205, 20.87, 0.52", "-27.5179, 113.857, 20.6982, 0.44", "-27.5124, 114.681, 20.4854, 0.44", "-27.3017, 115.308, 20.3368, 0.44", "-26.5829, 116.792, 19.9163, 0.52", "-26.055, 117.752, 19.6296, 0.66", "-25.3896, 118.834, 19.2875, 0.59", "-24.9994, 119.451, 19.0888, 0.66", "-24.4795, 120.331, 18.8122, 0.74", "-23.9474, 121.457, 18.4614, 0.81", "-23.7454, 122.049, 18.2678, 0.88", "-23.4577, 123.151, 17.9059, 0.74", "-23.3023, 123.881, 17.6433, 0.74", "-23.1319, 124.855, 17.2273, 0.81", "-22.9754, 125.997, 16.6732, 0.74", "-22.9135, 126.851, 16.2536, 0.88", "-22.9167, 127.297, 16.035, 0.88", "-23.0244, 128.612, 15.384, 0.96", "-23.1155, 129.487, 14.9567, 1.25", "-23.193, 130.282, 14.6069, 0.74", "-23.2763, 131.144, 14.2963, 0.74", "-23.3562, 131.957, 14.0709, 1.03", "-23.4321, 132.85, 13.8847, 1.25", "-23.4812, 133.681, 13.7646, 1.03", "-23.4834, 134.707, 13.6526, 0.88", "-23.3905, 136.013, 13.5262, 0.88", "-23.2142, 137.3, 13.4147, 0.88", "-22.958, 138.671, 13.2821, 0.96", "-22.7043, 139.859, 13.1691, 1.03", "-22.4605, 140.984, 13.0502, 1.03", "-22.1722, 142.386, 12.9349, 0.88", "-21.9706, 143.428, 12.8782, 0.88", "-21.8141, 144.483, 12.8358, 0.88", "-21.7971, 145.247, 12.8349, 0.66", "-22.0028, 146.102, 12.9412, 0.66", "-22.6419, 147.282, 13.244, 0.74", "-22.9859, 147.736, 13.4008, 0.74", "-23.4284, 148.235, 13.5921, 0.74", "-24.0995, 148.972, 13.8413, 0.59", "-24.7554, 149.797, 13.9529, 0.88", "-24.9315, 150.114, 13.9262, 1.03", "-25.0943, 150.722, 13.745, 0.81", "-25.1175, 151.423, 13.4849, 0.66", "-25.0237, 152.508, 13.0702, 0.59", "-24.8113, 153.984, 12.4955, 0.59", "-24.6664, 154.947, 12.1408, 0.66", "-24.5011, 156.171, 11.7545, 0.81", "-24.356, 157.225, 11.4772, 0.66", "-24.1013, 158.82, 11.1476, 0.81", "-23.9118, 159.926, 10.9625, 0.88", "-23.711, 161.134, 10.7824, 0.96", "-23.5722, 162.189, 10.6037, 0.96", "-23.4992, 163.202, 10.4011, 0.96", "-23.4937, 164.589, 10.0532, 0.74", "-23.5592, 165.594, 9.75539, 0.74", "-23.6513, 166.314, 9.53309, 0.74", "-23.7882, 167.173, 9.26899, 0.74", "-24.0235, 168.56, 8.85064, 0.74", "-24.2077, 169.56, 8.62144, 0.88", "-24.4612, 170.97, 8.39714, 0.88", "-24.6889, 172.422, 8.23624, 0.88", "-24.845, 173.611, 8.13193, 0.88", "-24.9523, 174.707, 8.03821, 0.81", "-25.0597, 176.01, 7.92791, 0.66", "-25.1895, 177.012, 7.81059, 0.59", "-25.3582, 177.703, 7.70339, 0.74", "-25.5927, 178.316, 7.5805, 0.74", "-25.9241, 179.103, 7.37862, 0.74", "-26.1553, 179.728, 7.21125, 0.66", "-26.4035, 180.584, 6.97766, 0.66", "-26.6343, 181.603, 6.75712, 0.52", "-26.7993, 182.583, 6.57516, 0.52", "-26.9343, 183.641, 6.3684, 0.59", "-27.1238, 185.083, 6.04466, 1.11", "-27.2609, 185.887, 5.83092, 1.33", "-27.4172, 186.567, 5.63299, 1.33", "-27.7689, 187.679, 5.30042, 0.74", "-28.2186, 188.8, 4.97907, 0.59", "-28.6889, 189.786, 4.71144, 0.66", "-29.1386, 190.709, 4.4785, 0.66", "-29.59, 191.678, 4.21388, 0.74", "-30.0925, 192.724, 3.89443, 0.81", "-30.4931, 193.483, 3.66062, 0.81", "-30.9323, 194.244, 3.4241, 0.66", "-31.746, 195.563, 2.977, 0.66", "-32.5302, 196.685, 2.5346, 0.52", "-33.2064, 197.531, 2.15004, 0.44", "-33.6205, 198.005, 1.91454, 0.59", "-34.0427, 198.435, 1.69993, 0.59", "-34.5986, 198.945, 1.44606, 0.59", "-35.2687, 199.545, 1.17195, 0.66", "-35.6655, 199.957, 1.03087, 0.66", "-36.1819, 200.604, 0.81136, 0.66", "-36.6827, 201.292, 0.564702, 0.59", "-37.1445, 201.964, 0.299895, 0.44", "-37.5737, 202.596, 0.0142632, 0.44", "-38.0032, 203.202, -0.305366, 0.88", "-38.3536, 203.657, -0.57335, 1.03" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "1.45684, -19.5961, 2.30081, 1.47", "2.35982, -20.2822, 1.52582, 1.47", "3.06975, -20.9452, 0.870725, 1.03", "3.85685, -21.7015, 0.111388, 0.44", "4.20175, -22.0137, -0.201089, 0.66", "4.75318, -22.4762, -0.657581, 0.81", "5.27144, -22.8766, -1.05337, 0.74", "5.9574, -23.3846, -1.53053, 0.81", "6.96556, -24.0145, -2.08457, 0.44", "7.65362, -24.3788, -2.40883, 0.81", "8.26977, -24.6642, -2.63977, 1.11", "8.93286, -24.9294, -2.82288, 1.11", "9.71066, -25.1837, -2.96884, 0.74", "10.5271, -25.3952, -3.06058, 0.52", "11.932, -25.6923, -3.12512, 0.52", "13.0248, -25.8748, -3.14704, 0.52", "13.6199, -25.9401, -3.14145, 0.44", "14.6027, -25.9839, -3.09944, 0.66", "15.2275, -25.9615, -3.05995, 1.18", "15.8899, -25.8839, -3.00722, 1.47", "16.6407, -25.7339, -2.93279, 1.03", "17.3487, -25.566, -2.89304, 0.81", "18.0092, -25.4151, -2.88601, 0.59", "18.8703, -25.2314, -2.94654, 0.81", "19.5254, -25.0948, -3.03812, 0.81", "20.3772, -24.9107, -3.27281, 0.52", "20.8514, -24.811, -3.45899, 0.52", "21.6175, -24.6664, -3.82044, 0.74", "22.4601, -24.5107, -4.23835, 0.66", "23.1875, -24.3766, -4.61944, 0.66", "24.3965, -24.136, -5.26874, 0.52", "25.1297, -23.9581, -5.68136, 0.44", "25.8967, -23.7622, -6.08854, 0.44", "26.6594, -23.5792, -6.41354, 0.74", "27.185, -23.4666, -6.57102, 0.88", "27.807, -23.3543, -6.69203, 0.74", "28.9952, -23.1587, -6.82864, 0.37", "29.6145, -23.0697, -6.9426, 0.37", "30.5838, -22.9967, -7.15785, 0.66", "31.3064, -22.9838, -7.32636, 0.66", "31.9721, -22.9833, -7.46647, 0.81", "32.4377, -22.986, -7.55492, 0.81", "34.2565, -22.9737, -7.87033, 0.66", "35.3944, -22.9231, -8.09628, 0.66", "36.1227, -22.8799, -8.27501, 0.81", "36.9201, -22.8055, -8.52899, 0.81", "37.6728, -22.7011, -8.83198, 0.66", "38.1362, -22.6005, -9.05236, 0.59", "38.6428, -22.4082, -9.37418, 0.59", "39.4504, -21.9886, -10.0662, 0.59", "40.405, -21.444, -10.993, 0.96", "40.9034, -21.1769, -11.4909, 1.11", "41.3118, -20.9671, -11.8753, 1.18", "42.0576, -20.5958, -12.4448, 0.81", "42.979, -20.1462, -12.9377, 0.52", "43.5898, -19.8631, -13.1191, 0.66", "44.3736, -19.5371, -13.1993, 0.66", "45.0492, -19.254, -13.2047, 0.44", "46.0651, -18.8137, -13.1557, 0.44", "46.7436, -18.4698, -13.0725, 0.52", "47.3414, -18.0865, -12.9794, 0.66", "47.8857, -17.6612, -12.8761, 1.11", "48.241, -17.3373, -12.7942, 1.25", "48.5487, -17.0412, -12.7176, 1.25", "49.0741, -16.518, -12.5892, 1.25", "49.6194, -15.9887, -12.4472, 0.74", "50.4248, -15.2655, -12.262, 0.88", "50.7621, -14.9698, -12.197, 0.88", "51.1126, -14.6581, -12.1233, 0.88", "51.7182, -14.0947, -12.041, 0.59", "52.4583, -13.3592, -12.0108, 0.52", "52.9557, -12.8357, -12.0617, 0.52", "53.6686, -12.1296, -12.1914, 0.81", "54.2193, -11.6028, -12.3092, 0.81", "55.2134, -10.7024, -12.5463, 0.96", "55.7097, -10.2828, -12.6755, 1.11", "56.3741, -9.76489, -12.896, 1.4", "57.5802, -8.87256, -13.3406, 0.81", "58.4004, -8.28621, -13.6747, 0.81", "59.0592, -7.78228, -13.9642, 0.81", "59.3986, -7.48615, -14.108, 0.81", "60.2501, -6.60944, -14.5039, 0.52", "60.9587, -5.67328, -14.8926, 0.66", "61.3467, -4.99015, -15.1696, 0.59", "61.7128, -4.23242, -15.4298, 0.37", "62.0861, -3.35915, -15.6653, 1.03", "62.2642, -2.9312, -15.7523, 1.25", "62.4825, -2.44068, -15.818, 1.25", "62.9129, -1.64294, -15.908, 1.03", "63.3259, -1.00687, -15.9724, 1.18", "63.8902, -0.215277, -16.0425, 1.03", "64.4295, 0.544102, -16.0923, 1.18", "64.8154, 1.09887, -16.1135, 1.18", "65.2831, 1.7627, -16.1237, 0.74", "65.6541, 2.25781, -16.1237, 0.52", "66.0916, 2.77804, -16.1237, 0.52", "66.8934, 3.56355, -16.1272, 0.81", "67.4647, 4.05615, -16.1316, 0.88", "67.9329, 4.42284, -16.1366, 0.81", "68.7496, 4.95886, -16.1466, 0.37", "69.3177, 5.25656, -16.1689, 0.29", "70.2703, 5.66933, -16.2689, 0.59", "70.6217, 5.80976, -16.3315, 0.66", "71.3915, 6.128, -16.5108, 0.37", "72.3093, 6.54638, -16.7703, 0.59", "73.1412, 6.98558, -17.0126, 0.81", "74.2867, 7.64081, -17.328, 1.99", "74.8766, 7.97526, -17.4796, 2.65", "75.3016, 8.20186, -17.5761, 2.65", "76.2735, 8.70168, -17.7673, 1.18", "77.3217, 9.22499, -17.9232, 0.44", "78.2207, 9.63163, -17.9842, 0.74", "78.8429, 9.88543, -17.9731, 0.74", "79.4539, 10.1345, -17.9414, 0.81", "79.8581, 10.2984, -17.9137, 0.81", "80.4888, 10.5461, -17.8546, 0.59", "81.1992, 10.7957, -17.7611, 0.44", "81.8829, 11.0239, -17.6302, 0.37", "82.5022, 11.2154, -17.4877, 0.37", "83.4167, 11.4706, -17.2917, 0.74", "83.9583, 11.5987, -17.1976, 0.88", "84.7983, 11.7476, -17.1144, 0.66", "85.3364, 11.827, -17.1175, 0.52", "85.991, 11.9103, -17.1537, 0.52", "86.9014, 12.0446, -17.2227, 0.88", "87.5785, 12.1824, -17.3038, 0.88", "88.4543, 12.4189, -17.4347, 0.66", "89.5028, 12.7648, -17.6016, 0.44", "90.2166, 13.0433, -17.699, 0.44", "90.9627, 13.3561, -17.7703, 0.66", "91.7303, 13.6789, -17.8097, 0.52", "92.3212, 13.9269, -17.8245, 0.52", "93.0942, 14.247, -17.8266, 0.74", "93.8376, 14.5435, -17.7861, 0.44", "94.8057, 14.9349, -17.713, 0.44", "95.703, 15.3106, -17.6183, 0.88", "96.3171, 15.5888, -17.5337, 1.03", "97.1521, 16.0044, -17.3932, 0.74", "98.2732, 16.6491, -17.1708, 0.52", "98.7563, 16.9527, -17.0635, 0.96", "99.1903, 17.2554, -16.9623, 0.96", "99.7895, 17.6803, -16.8275, 0.81", "100.669, 18.2525, -16.6613, 0.52", "101.269, 18.5849, -16.5761, 0.52", "102.287, 19.0397, -16.4761, 0.59", "102.858, 19.2477, -16.4457, 0.81", "103.51, 19.4392, -16.438, 0.81", "104.212, 19.5991, -16.4572, 0.66", "104.786, 19.7007, -16.4958, 0.59", "105.679, 19.8555, -16.5753, 0.59", "106.915, 20.1434, -16.7048, 0.44", "107.623, 20.3355, -16.821, 0.74", "108.183, 20.5085, -16.935, 0.74", "108.447, 20.5973, -16.9943, 0.74", "109.272, 20.8901, -17.2162, 0.44", "110.18, 21.2174, -17.4861, 0.44", "111.485, 21.7329, -17.8512, 0.74", "112.072, 21.9928, -18.0431, 0.74", "112.635, 22.2751, -18.2471, 0.74", "113.337, 22.67, -18.5197, 0.52", "113.948, 23.0542, -18.765, 0.37", "114.536, 23.4728, -18.9842, 0.66", "114.997, 23.8581, -19.1218, 1.03", "115.393, 24.1945, -19.2237, 1.18", "115.68, 24.4348, -19.3043, 1.18", "116.357, 24.9694, -19.5017, 0.59", "116.907, 25.3703, -19.68, 0.44", "117.331, 25.6579, -19.8208, 0.44", "118.021, 26.1191, -20.0398, 0.81", "119.172, 26.8474, -20.4134, 1.11", "119.655, 27.1282, -20.5686, 1.11", "120.118, 27.3767, -20.7152, 0.96", "120.576, 27.6149, -20.8613, 0.66", "121.261, 27.9708, -21.0755, 0.37", "122.058, 28.3776, -21.3132, 0.52", "122.867, 28.7687, -21.5155, 0.59", "123.461, 29.0519, -21.6576, 0.44", "124.184, 29.3963, -21.8406, 0.37", "125.122, 29.856, -22.0886, 0.66", "125.702, 30.155, -22.2396, 0.44", "126.277, 30.4574, -22.3877, 0.44", "127.162, 30.9083, -22.577, 0.88", "127.748, 31.1864, -22.6577, 1.03", "128.28, 31.4199, -22.6811, 1.03", "129.073, 31.7624, -22.63, 0.29", "129.772, 32.0707, -22.5283, 0.29", "130.559, 32.4275, -22.3647, 0.29", "131.239, 32.7356, -22.1893, 0.44", "132.113, 33.0957, -21.9286, 1.11", "132.826, 33.3613, -21.7153, 1.4", "132.964, 33.4123, -21.6755, 1.55", "133.591, 33.6689, -21.5075, 0.88", "134.425, 34.0151, -21.3454, 0.29", "135.342, 34.3681, -21.2127, 0.29", "136.037, 34.6188, -21.143, 0.52", "136.441, 34.7618, -21.1193, 0.66", "136.898, 34.9347, -21.0944, 0.44", "137.603, 35.2303, -21.0471, 0.29", "138.147, 35.4903, -21.0076, 0.29", "139.017, 35.927, -20.9488, 0.66", "139.49, 36.1367, -20.9136, 1.11", "139.923, 36.305, -20.9011, 0.81", "140.957, 36.7098, -20.9304, 0.52", "141.349, 36.8778, -20.9784, 0.74", "142.037, 37.2071, -21.1151, 0.74", "142.946, 37.6949, -21.3742, 0.81", "143.869, 38.219, -21.7314, 0.44", "144.626, 38.6384, -22.1118, 0.81", "145.451, 39.0908, -22.6402, 1.33", "145.912, 39.3403, -22.9857, 1.33", "146.387, 39.5877, -23.3738, 1.11", "147.446, 40.0827, -24.263, 0.52", "148.371, 40.4071, -25.0275, 1.18", "149.093, 40.5878, -25.5992, 1.33", "149.809, 40.7235, -26.1357, 1.03", "150.749, 40.8691, -26.7951, 0.22", "151.403, 40.9522, -27.2084, 0.22", "153.098, 41.1466, -28.1637, 0.88", "153.721, 41.2137, -28.4579, 1.03", "154.265, 41.256, -28.6697, 1.18", "154.986, 41.2812, -28.9109, 0.96", "155.567, 41.2652, -29.1079, 0.66", "156.479, 41.1666, -29.4021, 0.44", "157.431, 41.0043, -29.6713, 0.66", "158.226, 40.835, -29.8793, 0.74", "158.799, 40.7002, -30.014, 0.74", "160.057, 40.3879, -30.2689, 0.37", "160.808, 40.209, -30.3864, 0.52", "161.743, 40.0007, -30.4718, 0.29", "162.779, 39.8089, -30.5287, 0.81", "163.235, 39.7338, -30.5407, 1.47", "163.673, 39.6484, -30.5489, 1.62", "164.192, 39.5137, -30.5592, 1.62", "165.638, 39.0388, -30.6977, 0.37", "166.541, 38.6693, -30.8643, 0.29", "167.487, 38.1859, -31.1124, 0.29", "168.291, 37.7066, -31.3483, 0.29", "169.193, 37.1274, -31.6295, 1.47", "169.857, 36.6831, -31.8668, 1.69", "170.204, 36.445, -32.0244, 1.84", "171.273, 35.7639, -32.6029, 0.52", "172.007, 35.4072, -33.0061, 0.44", "172.572, 35.2219, -33.2991, 0.81", "173.173, 35.0918, -33.5939, 0.81", "174.01, 34.9756, -33.9528, 0.81", "175.266, 34.9076, -34.4751, 0.29", "176.289, 34.9476, -34.915, 0.29", "176.782, 34.9899, -35.1131, 0.52", "177.565, 35.0638, -35.4009, 0.66", "178.5, 35.1378, -35.7075, 0.81", "179.273, 35.1961, -35.9359, 0.96", "179.936, 35.2556, -36.1282, 0.74", "180.93, 35.356, -36.4237, 0.22", "181.864, 35.4743, -36.6809, 0.22", "182.874, 35.6413, -36.9308, 0.22", "183.298, 35.7261, -37.0148, 0.44", "183.97, 35.8711, -37.1115, 0.44", "185.226, 36.1892, -37.2375, 0.29", "186.289, 36.4952, -37.3096, 1.03", "186.876, 36.6857, -37.3241, 1.25", "187.877, 37.0496, -37.3499, 0.22", "188.21, 37.1717, -37.3653, 0.37", "189.156, 37.5281, -37.4262, 0.22", "189.501, 37.6706, -37.47, 0.52", "190.099, 37.9326, -37.5729, 0.59", "191.409, 38.5121, -37.8614, 0.22", "192.004, 38.766, -38.0245, 0.59", "192.523, 38.9834, -38.1995, 0.59", "193.733, 39.4753, -38.6978, 0.29", "194.602, 39.8335, -39.1121, 0.22", "195.084, 40.0268, -39.4016, 0.22", "196.136, 40.3674, -40.1793, 0.81", "196.842, 40.5521, -40.7623, 1.18", "197.533, 40.6874, -41.356, 0.74", "198.202, 40.7607, -41.9636, 0.44", "199.286, 40.9258, -43.0335, 0.74", "200.12, 41.139, -43.9343, 0.52", "200.581, 41.3084, -44.4727, 0.52", "201.043, 41.5246, -45.0279, 0.37", "201.979, 42.0585, -46.1896, 0.37", "202.899, 42.6697, -47.377, 2.5", "204.367, 43.7975, -49.2775, 0.29", "204.701, 44.088, -49.7453, 0.29", "205.237, 44.5967, -50.5969, 0.74", "205.615, 44.9716, -51.2517, 1.18", "206.078, 45.4237, -52.0885, 1.4", "206.379, 45.6853, -52.645, 1.4", "207.377, 46.5087, -54.4579, 0.29", "208.084, 47.0307, -55.6994, 0.44", "208.884, 47.5948, -57.0824, 0.22", "209.377, 47.9361, -57.9387, 0.22", "209.839, 48.2742, -58.7962, 0.74", "210.108, 48.4906, -59.3182, 0.88", "211.469, 49.6998, -61.9701, 0.29", "211.972, 50.2247, -62.9657, 0.52", "212.61, 51.0337, -64.2998, 0.81", "213.524, 52.3133, -66.296, 0.81", "213.832, 52.7993, -67.0238, 0.29", "214.054, 53.2266, -67.6254, 0.37", "214.305, 54.0133, -68.4803, 0.22", "214.408, 54.442, -68.869, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "1.45684, -19.5961, 2.30081, 3.68", "1.01489, -21.5068, 2.45512, 3.68", "0.487062, -23.7159, 2.61363, 3.32", "-0.138565, -26.0745, 2.77589, 3.17", "-0.909607, -28.7802, 2.97541, 3.09", "-1.5394, -30.887, 3.12944, 2.8", "-2.10325, -32.7399, 3.29012, 2.73", "-2.64372, -34.4262, 3.4544, 2.65", "-3.13307, -35.8866, 3.619, 2.65", "-3.62658, -37.3511, 3.79368, 2.65", "-4.16112, -38.887, 4.01559, 2.65", "-4.84143, -40.8101, 4.34346, 2.5", "-5.11604, -41.6105, 4.50091, 2.58", "-5.4542, -42.6855, 4.73604, 2.58", "-5.68911, -43.6238, 4.95231, 2.65" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "0.142173, 32.7045, -7.43908, 1.4", "0.398825, 33.5452, -7.52568, 1.4", "0.745901, 34.948, -7.62756, 1.11", "1.00815, 36.1857, -7.69799, 0.88", "1.29736, 37.6101, -7.67799, 0.96", "1.60426, 38.9281, -7.75352, 1.11", "1.94886, 40.1713, -7.88265, 0.88", "2.31691, 41.4072, -8.09623, 0.88", "2.55964, 42.0185, -8.32413, 1.11", "3.30226, 43.2773, -9.12099, 1.11", "4.90152, 45.2614, -10.9248, 1.4", "5.36163, 45.7691, -11.4706, 1.62", "5.89072, 46.3515, -12.1189, 1.11", "7.07066, 47.6822, -13.5087, 0.88", "7.69229, 48.4498, -14.1847, 1.47", "8.11732, 49.0381, -14.5893, 1.47", "8.7953, 50.0887, -15.0048, 1.18", "9.41752, 51.0914, -15.2921, 1.33", "9.94215, 51.9527, -15.4545, 1.33", "10.5005, 52.9202, -15.5895, 1.18", "11.2227, 54.2584, -15.7799, 1.03", "11.685, 55.2385, -15.9586, 0.88", "12.0986, 56.2636, -16.2236, 0.88", "12.4051, 57.3397, -16.6073, 1.03", "12.6963, 59.0573, -17.396, 1.18", "12.7978, 60.1101, -17.9596, 1.11", "12.8887, 61.5716, -18.8022, 1.25", "12.9575, 62.5488, -19.3865, 1.11", "13.1104, 63.7208, -20.0999, 0.96", "13.3562, 64.6855, -20.6493, 0.88", "13.8811, 65.827, -21.1762, 0.88", "14.4523, 66.7194, -21.4699, 0.96", "14.9834, 67.4099, -21.5893, 1.03", "15.5866, 68.1575, -21.6473, 1.03", "16.2988, 69.071, -21.6584, 0.88", "16.6864, 69.6818, -21.6591, 0.74", "17.1712, 70.923, -21.7378, 1.69", "17.3057, 71.6325, -21.8266, 2.28", "17.3611, 72.3589, -21.9415, 2.28", "17.3808, 73.2893, -22.0974, 2.06", "17.3933, 74.2812, -22.2646, 1.62", "17.4637, 75.5099, -22.4867, 1.18", "17.5542, 76.255, -22.6334, 1.4", "17.7122, 77.0716, -22.8087, 1.4", "17.9622, 78.0771, -23.0827, 1.18", "18.2028, 78.9659, -23.3639, 1.03", "18.6426, 80.4628, -23.918, 0.81", "18.9355, 81.3726, -24.2831, 0.81", "19.1884, 82.1174, -24.5863, 0.81", "19.5268, 83.0896, -24.9671, 0.96", "19.8055, 83.8779, -25.243, 1.33", "20.1843, 84.9427, -25.5401, 1.11", "20.6012, 86.1011, -25.767, 0.96", "20.8792, 86.8076, -25.8629, 1.18", "21.2388, 87.6682, -25.9458, 1.18", "21.6107, 88.5405, -26.0002, 1.33", "21.8991, 89.24, -26.0561, 1.18", "22.1023, 89.7714, -26.1035, 1.18", "22.4079, 90.5621, -26.2044, 0.88", "22.7315, 91.3316, -26.3278, 0.74", "23.0979, 92.1438, -26.4735, 0.74", "23.6574, 93.2704, -26.7149, 0.88", "24.1452, 94.155, -26.9062, 1.11", "24.6101, 94.9647, -27.1037, 1.11", "25.0216, 95.6684, -27.2694, 0.96", "25.5811, 96.6179, -27.4528, 1.18", "26.1672, 97.6369, -27.5686, 0.96", "26.6056, 98.4709, -27.5823, 0.81", "27.2726, 99.8403, -27.4721, 0.88", "27.7205, 100.758, -27.2967, 0.88", "28.1231, 101.597, -27.0483, 1.03", "28.4858, 102.367, -26.7702, 1.11", "28.8288, 103.142, -26.4693, 0.88", "29.2115, 104.016, -26.1406, 0.66", "29.5162, 104.695, -25.8806, 0.66", "29.9077, 105.584, -25.6257, 0.66", "30.5748, 107.181, -25.2953, 0.96", "30.935, 108.185, -25.1765, 1.4", "31.172, 108.969, -25.1315, 1.55", "31.3164, 109.57, -25.1047, 1.84", "31.5176, 110.477, -25.046, 1.92", "31.707, 111.236, -24.9605, 1.77", "32.0417, 112.402, -24.7441, 1.25", "32.3825, 113.406, -24.4727, 1.18", "32.7561, 114.34, -24.1631, 1.11", "33.1703, 115.245, -23.8034, 1.25", "33.6549, 116.184, -23.3732, 1.33", "33.9389, 116.679, -23.1408, 1.33", "34.4406, 117.486, -22.7645, 1.25", "34.8981, 118.228, -22.4844, 0.74", "35.4243, 119.127, -22.264, 0.52", "35.7999, 119.832, -22.184, 0.52", "36.2112, 120.66, -22.141, 0.81", "36.7574, 121.823, -22.1576, 1.4", "37.2082, 122.826, -22.2598, 1.69", "37.5194, 123.546, -22.381, 1.84", "37.7898, 124.153, -22.5608, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.142173, 32.7045, -7.43908, 1.4", "-0.969974, 33.4512, -7.04409, 1.4", "-1.82428, 33.9808, -6.69965, 0.96", "-2.58287, 34.476, -6.4012, 1.25", "-3.22339, 34.938, -6.16384, 1.4", "-3.71589, 35.3289, -5.99202, 1.47", "-5.16025, 36.582, -5.52123, 1.03", "-5.87888, 37.2464, -5.28091, 1.11", "-6.67824, 38.1237, -5.02624, 1.11", "-7.40584, 39.073, -4.82184, 1.03", "-7.95158, 39.85, -4.71465, 1.03", "-8.6529, 40.8888, -4.66908, 1.03", "-9.13497, 41.5708, -4.71551, 1.18", "-9.94325, 42.539, -4.84703, 1.18", "-11.0729, 43.535, -5.11318, 0.81", "-11.844, 43.9875, -5.3325, 0.88", "-12.733, 44.3296, -5.61257, 1.11", "-13.83, 44.6274, -5.9697, 0.96", "-14.5573, 44.7897, -6.20334, 0.96", "-15.5993, 45.0118, -6.52295, 0.88", "-16.5228, 45.2612, -6.78013, 0.81", "-17.7264, 45.7286, -7.03803, 1.11", "-18.282, 46.0049, -7.13239, 1.25", "-18.8255, 46.3324, -7.21895, 1.25", "-19.6086, 46.8586, -7.3265, 0.88", "-20.3286, 47.3818, -7.40656, 0.88", "-21.0032, 47.8957, -7.45399, 0.96", "-21.7932, 48.5151, -7.46757, 0.96", "-22.4209, 49.0057, -7.45937, 1.03", "-23.0991, 49.529, -7.43035, 1.25", "-23.8074, 50.0663, -7.36795, 1.25", "-24.269, 50.4149, -7.31389, 1.11", "-24.8352, 50.8362, -7.22344, 1.25", "-25.3799, 51.2422, -7.09915, 1.4", "-25.9173, 51.6476, -6.95405, 1.4", "-26.5826, 52.1557, -6.7567, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.54828, 42.8383, -2.3154, 0.725084", "-3.39577, 57.8143, -2.3154, 0.725084", "-4.24326, 72.7904, -2.3154, 0.725084" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-38.8038, 33.111, 37.4883, 0.88", "-40.8956, 32.9374, 47.2657, 0.88", "-43.8584, 31.5715, 56.7277, 0.88", "-46.002, 31.3801, 66.4936, 0.88", "-48.5729, 30.395, 76.1118, 0.88", "-52.0144, 29.434, 85.4562, 0.88", "-57.1698, 27.9923, 93.9141, 0.88", "-61.2814, 25.6441, 102.752, 0.88", "-63.6221, 24.0941, 112.361, 0.88", "-67.3671, 22.9741, 121.572, 0.88", "-69.723, 22.334, 131.271, 0.88" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-38.8038, 33.111, 37.4883, 0.22", "-47.3152, 38.5283, 38.4565, 0.88", "-56.7444, 42.0057, 38.8068, 0.88", "-65.4935, 46.6797, 40.714, 0.88", "-73.3187, 52.8706, 42.7147, 0.88", "-80.9421, 59.2299, 44.9955, 0.88", "-90.0018, 63.6163, 45.681, 0.88", "-99.4627, 67.0174, 45.6803, 0.88", "-108.348, 71.8243, 46.0137, 0.88", "-116.633, 77.6951, 46.2983, 0.88", "-124.086, 84.6844, 46.6832, 0.88", "-131.479, 91.527, 48.3788, 0.88", "-139.465, 97.2722, 50.888, 0.88", "-146.433, 103.225, 55.2808, 0.88", "-153.887, 107.117, 60.8217, 0.88", "-161.376, 109.08, 67.1792, 0.88" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-38.3536, 203.657, -0.57335, 0.66", "-40.4292, 205.617, -2.0348, 0.66", "-41.0797, 206.187, -2.47963, 0.66", "-41.6947, 206.706, -2.87939, 0.74", "-42.2749, 207.183, -3.2357, 0.88", "-42.7365, 207.56, -3.49453, 0.88", "-43.4201, 208.124, -3.84135, 0.74", "-44.0086, 208.624, -4.04373, 0.52", "-44.5159, 209.07, -4.23717, 0.96", "-44.9793, 209.491, -4.41532, 0.96", "-45.7461, 210.185, -4.68922, 0.37", "-46.3999, 210.771, -4.89778, 0.37", "-47.1289, 211.409, -5.08675, 0.66", "-47.6677, 211.869, -5.20558, 0.81", "-48.3137, 212.412, -5.33325, 0.81", "-48.8566, 212.87, -5.42512, 0.66", "-49.4071, 213.31, -5.51812, 0.66", "-49.8412, 213.631, -5.58701, 0.66", "-50.3388, 213.986, -5.65023, 0.37", "-50.7618, 214.312, -5.7083, 0.37", "-51.4932, 214.952, -5.83411, 0.74", "-51.9048, 215.361, -5.88961, 0.74", "-52.5332, 216.04, -5.95283, 0.29", "-53.0308, 216.597, -5.99744, 0.29", "-53.6011, 217.251, -6.06037, 0.66", "-53.8119, 217.497, -6.09166, 0.66", "-54.352, 218.168, -6.195, 0.52", "-54.6265, 218.532, -6.25397, 0.37", "-54.8884, 218.87, -6.32324, 0.37", "-55.2994, 219.333, -6.4374, 0.59", "-55.7153, 219.758, -6.56, 1.11", "-56.2095, 220.282, -6.70988, 1.18", "-56.5898, 220.713, -6.83545, 0.96", "-57.2245, 221.484, -7.01599, 0.74", "-57.7241, 222.125, -7.12634, 0.66", "-58.1578, 222.699, -7.18952, 0.37", "-58.6506, 223.386, -7.23392, 0.37", "-58.9746, 223.894, -7.24537, 0.52", "-59.3078, 224.485, -7.27742, 0.52", "-59.7678, 225.421, -7.32206, 0.66", "-60.0757, 226.11, -7.33612, 0.81", "-60.395, 226.829, -7.31579, 0.81", "-60.9459, 227.994, -7.22583, 0.59", "-61.3278, 228.787, -7.12002, 0.52", "-61.6107, 229.408, -7.00245, 0.52", "-61.9734, 230.31, -6.78448, 0.44", "-62.2044, 230.94, -6.62266, 0.44", "-62.4079, 231.529, -6.46568, 0.44", "-62.5877, 231.992, -6.35614, 0.44", "-62.7815, 232.408, -6.29378, 0.44", "-63.0602, 232.906, -6.3205, 0.44", "-63.3617, 233.405, -6.45787, 0.59", "-63.6846, 233.946, -6.72263, 0.66", "-64.0258, 234.585, -7.08379, 0.52", "-64.3943, 235.373, -7.54113, 0.52", "-64.6663, 236.045, -7.9225, 0.52", "-64.951, 236.924, -8.42011, 0.59", "-65.2081, 237.919, -8.95924, 0.59", "-65.3809, 238.733, -9.39161, 0.52", "-65.5304, 239.531, -9.79031, 0.52", "-65.6294, 240.023, -10.0327, 0.52", "-65.8727, 240.816, -10.3774, 0.44", "-66.0976, 241.306, -10.5131, 0.44", "-66.3695, 241.768, -10.5935, 0.44", "-66.9059, 242.506, -10.7027, 0.44", "-67.4495, 243.169, -10.7731, 0.44", "-68.0289, 243.869, -10.8167, 0.44", "-68.5655, 244.585, -10.8307, 0.52", "-68.9346, 245.2, -10.841, 0.66", "-69.233, 245.837, -10.8719, 0.37", "-69.455, 246.503, -10.9211, 0.29", "-69.648, 247.377, -11.0054, 0.44", "-69.7452, 248.227, -11.1016, 0.74", "-69.7591, 249.018, -11.1943, 1.03", "-69.6959, 249.626, -11.2911, 1.03", "-69.5883, 250.274, -11.4698, 0.88", "-69.4329, 251.177, -11.8102, 0.52", "-69.3508, 251.902, -12.159, 0.52", "-69.3393, 252.278, -12.4146, 0.37", "-69.3495, 253.308, -13.2519, 0.37", "-69.3468, 254.374, -14.2632, 0.37", "-69.3176, 254.847, -14.7646, 0.37", "-69.283, 255.357, -15.3209, 0.37", "-69.2494, 256.478, -16.4775, 0.37", "-69.2637, 256.992, -16.9526, 0.29", "-69.3289, 257.76, -17.5677, 0.29", "-69.3953, 258.52, -18.1321, 0.29", "-69.4986, 259.29, -18.6805, 0.37", "-69.6125, 259.852, -19.0845, 0.37", "-69.8295, 260.56, -19.6134, 0.37", "-70.0861, 261.34, -20.2799, 0.44", "-70.2165, 261.765, -20.6773, 0.59", "-70.3383, 262.283, -21.2453, 0.59", "-70.489, 263.239, -22.3922, 0.74", "-70.5786, 263.954, -23.2544, 0.88", "-70.6884, 264.819, -24.2964, 0.81", "-70.8111, 265.568, -25.1989, 1.03", "-71.1498, 267.14, -27.1183, 0.74", "-71.4084, 267.977, -28.1055, 0.66", "-71.5871, 268.396, -28.6373, 0.74", "-71.8969, 268.945, -29.3863, 0.74", "-72.2244, 269.365, -30.0537, 0.59", "-72.644, 269.761, -30.8207, 0.44", "-73.4048, 270.216, -32.0871, 0.29", "-74.742, 270.771, -34.3106, 0.74", "-75.0528, 270.869, -34.8454, 1.25", "-75.7711, 271.063, -36.1029, 1.77", "-76.3386, 271.21, -37.0866, 1.92", "-77.0879, 271.376, -38.3506, 0.74", "-77.5674, 271.461, -39.1148, 0.52", "-78.3278, 271.587, -40.1451, 0.52", "-78.892, 271.649, -40.8771, 0.66", "-79.5991, 271.711, -41.6934, 0.52", "-80.548, 271.805, -42.6678, 0.52", "-81.4127, 271.92, -43.4817, 0.52", "-82.3675, 272.066, -44.3678, 0.66", "-83.044, 272.202, -44.9666, 0.66", "-83.5927, 272.365, -45.5133, 0.81", "-84.0966, 272.585, -46.0796, 0.59", "-84.4669, 272.77, -46.6698, 0.59", "-85.2999, 273.191, -48.437, 0.81", "-85.7155, 273.361, -49.5806, 0.74", "-86.3176, 273.457, -51.8827, 0.88", "-86.588, 273.305, -53.5477, 1.11", "-86.8867, 272.48, -57.3672, 0.74", "-86.8547, 272.179, -58.1458, 0.88", "-86.5773, 271.431, -59.141, 0.96", "-86.1487, 270.564, -59.7347, 0.74", "-85.2653, 268.954, -60.1296, 0.66", "-83.72, 266.312, -60.2713, 0.29", "-83.0573, 265.217, -60.0423, 0.29", "-82.2787, 263.959, -59.6566, 0.29", "-81.7907, 263.18, -59.3187, 0.66", "-81.4902, 262.693, -59.0396, 0.74" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-38.3536, 203.657, -0.57335, 0.29", "-38.9481, 204.622, -0.180658, 0.29", "-39.2649, 205.154, 0.0188035, 0.37", "-39.6245, 205.754, 0.25786, 0.52", "-39.8686, 206.138, 0.410915, 0.66", "-40.319, 206.775, 0.663155, 0.81", "-40.8073, 207.409, 0.90456, 1.03", "-41.2495, 207.941, 1.10728, 0.74", "-42.0724, 208.859, 1.41131, 0.29", "-42.4448, 209.243, 1.51568, 0.29", "-42.9271, 209.732, 1.63921, 0.37", "-43.4313, 210.259, 1.75255, 0.37", "-44.0614, 210.976, 1.90281, 0.44", "-44.3403, 211.366, 1.97126, 0.66", "-44.669, 211.959, 2.04472, 0.81", "-44.971, 212.599, 2.11657, 0.81", "-45.2389, 213.164, 2.17349, 0.52", "-45.5659, 213.851, 2.23211, 0.52", "-45.9326, 214.687, 2.28734, 0.52", "-46.2836, 215.58, 2.32991, 0.44", "-46.5874, 216.462, 2.33638, 0.37", "-46.9456, 217.574, 2.30908, 0.29", "-47.2145, 218.44, 2.27858, 0.44", "-47.4849, 219.376, 2.22859, 0.52", "-47.6793, 220.117, 2.17488, 0.37", "-47.8526, 220.862, 2.11279, 0.37", "-47.9936, 221.478, 2.06034, 0.59", "-48.1119, 222.076, 2.01049, 0.59", "-48.2638, 222.752, 1.9541, 0.59", "-48.4946, 223.636, 1.87682, 0.37", "-48.7906, 224.706, 1.78315, 0.29", "-49.0096, 225.674, 1.71132, 0.29", "-49.1687, 226.656, 1.63927, 0.29", "-49.2126, 227.146, 1.59803, 0.29", "-49.2339, 227.874, 1.52861, 0.44", "-49.2216, 228.395, 1.46834, 0.44", "-49.1789, 229.373, 1.32046, 0.59", "-49.1624, 229.908, 1.21359, 0.74", "-49.1572, 230.496, 1.07365, 0.74", "-49.1321, 231.035, 0.934787, 0.59", "-49.0384, 231.992, 0.687232, 0.88", "-48.9514, 232.752, 0.497539, 1.18", "-48.8686, 233.76, 0.251798, 0.37", "-48.8543, 234.153, 0.157131, 0.37", "-48.845, 235.031, -0.0510378, 0.37", "-48.8075, 235.999, -0.280218, 0.29", "-48.7248, 236.889, -0.499192, 0.37", "-48.5888, 237.765, -0.71024, 0.29", "-48.3891, 238.661, -0.965347, 0.29", "-48.2971, 238.963, -1.08102, 0.29", "-47.9436, 239.76, -1.48224, 0.59", "-47.592, 240.308, -1.80158, 0.74", "-47.2893, 240.681, -2.03986, 0.74", "-46.7446, 241.265, -2.42558, 0.66", "-46.0845, 241.9, -2.87121, 0.44", "-45.6532, 242.311, -3.15089, 0.44", "-44.9872, 242.904, -3.55104, 0.88", "-44.6823, 243.133, -3.70749, 1.33", "-44.2986, 243.382, -3.90968, 1.69", "-43.6307, 243.783, -4.2568, 1.84", "-42.5567, 244.46, -4.83137, 0.29", "-41.936, 244.93, -5.19402, 0.29", "-41.3372, 245.507, -5.58332, 0.29", "-40.4288, 246.588, -6.19156, 0.59", "-40.0807, 247.111, -6.44979, 0.59", "-39.6147, 248.056, -6.86349, 0.44", "-39.2377, 249.204, -7.32348, 0.59", "-39.0775, 249.923, -7.56986, 0.44", "-38.9725, 250.534, -7.73612, 0.29", "-38.8319, 251.33, -7.91279, 0.29", "-38.7531, 251.774, -8.04172, 0.29", "-38.6298, 252.523, -8.26822, 0.52", "-38.5481, 252.999, -8.42427, 0.52", "-38.4499, 253.613, -8.61594, 0.37", "-38.2992, 254.583, -8.90382, 0.44", "-38.1128, 255.515, -9.17083, 0.44", "-37.8844, 256.319, -9.40901, 0.74", "-37.5721, 257.233, -9.67652, 0.81", "-37.1292, 258.573, -10.0309, 0.29", "-37.0206, 258.968, -10.1216, 0.29", "-36.8966, 259.507, -10.2352, 0.29", "-36.7302, 260.182, -10.3784, 0.29", "-36.5049, 261.01, -10.5919, 0.37", "-36.2565, 261.781, -10.7786, 0.44", "-35.9027, 262.547, -11.001, 0.44", "-35.4659, 263.327, -11.2782, 0.44", "-35.0976, 263.977, -11.4865, 0.44", "-34.8687, 264.384, -11.6041, 0.66", "-34.6057, 264.817, -11.7294, 0.66", "-34.1895, 265.472, -11.9535, 0.44", "-33.7684, 266.122, -12.426, 0.29", "-33.4888, 266.679, -13.1918, 0.29", "-33.3667, 267.082, -13.8372, 0.44", "-33.3061, 267.469, -14.5069, 0.59", "-33.2516, 267.922, -15.283, 0.74", "-33.0957, 269.156, -17.3933, 0.74", "-32.8784, 270.195, -19.2588, 0.37", "-32.755, 270.675, -20.1871, 0.29", "-32.6115, 271.143, -21.1427, 0.59", "-32.4574, 271.623, -22.1153, 0.52", "-32.3553, 271.989, -22.7531, 0.52", "-32.1713, 272.742, -23.6291, 0.59" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-5.68911, -43.6238, 4.95231, 0.52", "-7.69215, -44.6616, 6.26253, 0.52", "-8.10196, -44.9423, 6.55002, 0.44", "-8.45369, -45.2379, 6.81623, 0.66", "-8.91785, -45.6973, 7.18625, 0.74", "-9.66476, -46.5709, 7.79465, 0.66", "-9.96318, -46.9861, 8.04859, 0.81", "-10.3789, -47.9043, 8.39622, 0.74", "-10.5038, -48.3569, 8.51742, 0.88", "-10.6234, -49.2518, 8.82568, 0.66", "-10.6673, -50.0398, 9.17113, 0.66", "-10.682, -50.6676, 9.52163, 0.81", "-10.7575, -51.4282, 10.0609, 0.81", "-10.9343, -52.2499, 10.7552, 0.88", "-11.5695, -54.3963, 12.7065, 0.96", "-11.7952, -55.0377, 13.3086, 0.74", "-11.9893, -55.5322, 13.754, 0.59", "-12.3513, -56.4239, 14.4439, 0.59", "-12.6665, -57.2139, 14.9492, 0.59", "-13.0025, -58.1533, 15.3641, 0.96", "-13.2422, -58.9129, 15.5246, 1.11", "-13.5224, -59.8475, 15.697, 0.88", "-13.814, -60.8022, 15.8901, 0.66", "-13.9313, -61.1107, 15.9677, 0.74", "-14.4602, -61.9885, 16.3219, 0.66", "-14.887, -62.5049, 16.632, 0.74", "-15.3897, -63.033, 17.0733, 0.81", "-15.8199, -63.4498, 17.5261, 0.88", "-16.3223, -64.0179, 18.1998, 0.66", "-16.6175, -64.4622, 18.6734, 0.66", "-16.9425, -65.0936, 19.2485, 0.59", "-17.2261, -65.8305, 19.7938, 0.66", "-17.3723, -66.2346, 20.0318, 0.81", "-17.7331, -67.1781, 20.4846, 0.59", "-18.0322, -67.9759, 20.8324, 0.74", "-18.3204, -68.7177, 21.1353, 0.88", "-18.4954, -69.1572, 21.2972, 0.88", "-18.7905, -70.0091, 21.6655, 0.66", "-18.9733, -70.6717, 22.0531, 0.52", "-19.1539, -71.5996, 22.874, 0.59", "-19.2058, -72.0324, 23.3792, 0.59", "-19.2398, -72.4548, 23.9299, 0.66", "-19.3194, -73.6569, 25.5638, 0.66", "-19.3494, -74.244, 26.365, 0.96", "-19.4608, -75.0499, 27.4544, 1.03", "-19.6374, -75.6417, 28.2059, 0.88", "-19.8304, -76.0958, 28.7086, 0.59", "-20.0313, -76.461, 29.0288, 0.74", "-20.4115, -77.0346, 29.3273, 0.59", "-20.8673, -77.6417, 29.5207, 0.74", "-21.4059, -78.2919, 29.6189, 0.88", "-21.9143, -78.8729, 29.6568, 0.88", "-22.4638, -79.4713, 29.6941, 0.59", "-22.9944, -80.0292, 29.7474, 0.37", "-23.2047, -80.2401, 29.7815, 0.37", "-23.6258, -80.6685, 29.922, 0.44", "-24.0755, -81.1254, 30.132, 0.59", "-24.4994, -81.5506, 30.3927, 0.59", "-25.0054, -82.0626, 30.7483, 0.74", "-25.4833, -82.5172, 31.0955, 0.66", "-26.3914, -83.3349, 31.722, 0.66", "-26.9382, -83.8118, 32.0756, 0.59", "-27.7404, -84.5412, 32.5637, 0.81", "-28.1994, -84.9831, 32.8297, 0.96", "-28.7907, -85.5636, 33.1517, 0.74", "-29.4422, -86.2029, 33.4736, 0.52", "-30.5625, -87.3408, 33.9854, 0.59", "-31.1631, -87.9962, 34.2524, 0.66", "-31.5546, -88.4554, 34.4095, 0.66", "-32.122, -89.1561, 34.6206, 0.44", "-32.5309, -89.6894, 34.7718, 0.44", "-33.0745, -90.3979, 34.9729, 0.37", "-33.7274, -91.2531, 35.1796, 0.29", "-34.0098, -91.6319, 35.2609, 0.29", "-34.6065, -92.5822, 35.4076, 0.29", "-38.1971, -99.6555, 41.8673, 0.29", "-41.1878, -106.906, 48.4539, 0.29", "-45.4787, -114.082, 54.3598, 0.29", "-49.0354, -122.158, 59.6693, 0.29", "-54.411, -129.799, 63.9294, 0.29", "-60.7959, -136.582, 68.1133, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-5.68911, -43.6238, 4.95231, 2.21", "-5.34182, -45.1754, 5.02464, 2.21", "-5.13728, -46.1546, 5.05596, 2.21", "-4.82205, -47.6637, 5.10423, 2.21", "-4.56322, -48.9028, 5.14387, 2.28", "-4.35744, -49.888, 5.17538, 2.28", "-4.06099, -51.3072, 5.22077, 2.5", "-3.83118, -52.276, 5.17685, 2.58" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "37.7898, 124.153, -22.5608, 1.25", "38.4319, 124.69, -22.7168, 1.25", "39.7454, 125.608, -22.9174, 0.81", "40.5453, 126.106, -22.9998, 0.96", "41.2925, 126.522, -22.9762, 0.74", "42.5126, 127.157, -22.8455, 0.59", "43.6238, 127.717, -22.6808, 0.52", "44.1, 127.924, -22.576, 0.66", "44.798, 128.199, -22.3841, 0.44", "46.3196, 128.784, -21.9662, 0.66", "47.0194, 129.076, -21.8047, 0.52", "47.6836, 129.402, -21.7142, 0.52", "48.6027, 129.918, -21.6517, 0.88", "49.4082, 130.412, -21.6699, 1.25", "49.7345, 130.632, -21.7075, 1.62", "50.7249, 131.343, -21.9183, 1.62", "51.542, 131.939, -22.1061, 1.33", "52.5202, 132.629, -22.3092, 0.88", "53.2581, 133.159, -22.4615, 0.74", "53.8144, 133.554, -22.5646, 0.59", "54.2439, 133.852, -22.6338, 0.59", "55.2152, 134.48, -22.7285, 1.18", "56.0858, 135.006, -22.8106, 1.77" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "37.7898, 124.153, -22.5608, 0.37", "38.8615, 125.273, -18.3682, 0.37", "39.0494, 125.683, -17.2355, 0.37", "39.0635, 125.931, -16.7175, 0.37", "39.0041, 126.309, -16.0897, 0.66", "38.9217, 126.674, -15.5976, 0.66", "38.8067, 127.234, -14.9384, 0.66", "38.59, 127.884, -14.5362, 0.52", "38.393, 128.649, -14.1025, 0.52", "38.3206, 129.139, -13.8282, 0.52", "38.3947, 129.973, -13.3346, 0.66", "38.5928, 130.507, -12.9989, 1.18", "38.8084, 130.863, -12.7434, 1.18", "39.2139, 131.427, -12.3185, 0.66", "39.5799, 131.934, -11.9457, 0.52", "40.1068, 132.739, -11.3916, 0.52", "40.4203, 133.306, -11.0253, 1.11", "40.7826, 134.181, -10.5037, 0.96", "40.9649, 134.823, -10.1481, 0.88", "41.1122, 135.721, -9.69186, 0.37", "41.1958, 136.943, -9.1279, 0.29", "41.1928, 137.588, -8.84609, 0.29", "41.1262, 138.456, -8.46201, 0.59", "41.0009, 139.37, -8.07004, 0.74", "40.8446, 140.141, -7.74059, 0.88", "40.6838, 140.774, -7.46977, 1.03", "40.4339, 141.613, -7.11991, 1.11", "40.2054, 142.342, -6.84715, 0.88", "40.0061, 142.966, -6.64216, 0.52", "39.7197, 143.851, -6.37239, 0.88", "39.5849, 144.26, -6.25163, 0.74", "39.3336, 145.028, -6.0379, 0.52", "39.0639, 145.846, -5.79602, 0.52", "38.8084, 146.627, -5.52653, 0.74", "38.5671, 147.331, -5.25655, 0.88", "38.346, 147.938, -5.02587, 0.88", "38.1016, 148.547, -4.81243, 1.03", "37.7824, 149.271, -4.61083, 0.81", "37.4034, 150.055, -4.41914, 0.59", "37.1551, 150.526, -4.3103, 0.52", "36.7559, 151.271, -4.12137, 0.52", "36.5378, 151.713, -3.98927, 0.52", "36.2251, 152.464, -3.7423, 0.52", "35.8705, 153.528, -3.3978, 0.52", "35.6393, 154.384, -3.09867, 0.88", "35.4328, 155.296, -2.74435, 0.88", "35.2567, 156.183, -2.36371, 0.74", "35.113, 156.824, -2.09018, 0.37", "34.9336, 157.515, -1.80871, 0.37", "34.6853, 158.195, -1.5799, 0.52", "34.4378, 158.661, -1.43806, 0.52", "34.2349, 158.945, -1.34724, 0.37", "33.6023, 159.696, -1.05548, 0.52", "33.336, 160.001, -0.927887, 0.74", "32.7957, 160.674, -0.651932, 0.74", "32.3952, 161.286, -0.433059, 0.59", "32.0747, 161.901, -0.248209, 0.74", "31.7586, 162.647, -0.0391078, 0.88", "31.5138, 163.29, 0.141504, 0.88", "31.2039, 164.046, 0.343491, 0.88", "30.7848, 164.914, 0.571688, 0.66", "30.4685, 165.395, 0.717395, 0.66", "29.9696, 165.964, 0.921626, 0.52", "29.2943, 166.521, 1.19773, 0.37", "28.7704, 166.827, 1.48775, 0.29", "28.1086, 167.14, 1.95278, 0.29", "27.4894, 167.414, 2.44507, 0.66", "27.2258, 167.541, 2.67099, 1.03", "26.6848, 167.86, 3.17, 1.18", "25.49, 168.761, 4.43323, 0.59", "24.9297, 169.327, 5.10354, 0.44", "24.5725, 169.819, 5.58365, 0.52", "24.3222, 170.283, 5.99583, 0.52", "24.0631, 170.877, 6.48723, 0.52", "23.8365, 171.524, 6.97271, 0.59", "23.6472, 172.243, 7.45183, 0.37", "23.5115, 172.848, 7.86443, 0.37", "23.3046, 173.939, 8.6118, 0.66", "23.2056, 174.456, 8.94929, 0.74", "23.0557, 175.026, 9.28259, 0.59", "22.8292, 175.643, 9.58392, 0.52", "22.5034, 176.293, 9.85789, 0.44", "22.0079, 177.113, 10.1164, 0.44", "21.6213, 177.717, 10.2434, 0.59", "21.0343, 178.647, 10.3993, 0.59", "20.652, 179.27, 10.5066, 0.74", "20.2951, 179.861, 10.643, 0.74", "20.0233, 180.366, 10.8494, 0.74", "19.6441, 181.184, 11.4313, 0.52", "19.4769, 181.621, 11.8347, 0.66", "19.3212, 182.081, 12.3744, 0.81", "19.0734, 182.725, 13.2587, 1.03", "18.6829, 183.436, 14.395, 0.74", "18.2739, 184.037, 15.4046, 0.44", "18.0253, 184.346, 15.8934, 0.29", "17.4848, 184.918, 16.7682, 0.59", "17.1662, 185.204, 17.2144, 0.96", "16.2793, 185.97, 18.3628, 0.29", "15.8366, 186.358, 18.9398, 0.29", "15.2892, 186.883, 19.6536, 0.96", "14.7577, 187.412, 20.3293, 1.18", "13.8993, 188.354, 21.4027, 0.96", "13.5432, 188.732, 21.91, 0.59", "13.231, 189.041, 22.3855, 0.29", "12.8385, 189.386, 23.0305, 0.29", "12.6474, 189.562, 23.3885, 0.29", "12.2179, 190.077, 24.3401, 0.44", "11.5642, 191.147, 26.1342, 0.44", "11.4409, 191.435, 26.6078, 0.59", "11.3697, 191.876, 27.3375, 0.59", "11.4361, 192.274, 27.9978, 0.52", "11.7284, 192.755, 28.7028, 0.29", "12.2457, 193.179, 29.2076, 0.29", "12.8714, 193.561, 29.6303, 0.29", "13.7061, 193.984, 30.1257, 0.44", "14.4334, 194.332, 30.5809, 0.44", "15.0022, 194.589, 31.011, 0.29", "15.6236, 194.882, 31.56, 0.29", "16.5803, 195.435, 32.5486, 0.59", "17.1869, 195.886, 33.2471, 0.74", "18.0761, 196.749, 34.3177, 0.52", "18.9974, 197.858, 35.498, 0.22", "19.1671, 198.102, 35.7204, 0.29", "19.6251, 198.933, 36.2997, 0.29", "19.9509, 199.662, 36.651, 0.29", "20.3382, 200.626, 36.978, 0.37", "20.7051, 201.436, 37.0022, 0.37", "20.9993, 201.981, 36.9112, 0.22", "21.8569, 203.055, 36.5066, 0.22", "22.371, 203.543, 36.244, 0.37", "22.9924, 204.042, 35.9203, 0.15", "25.2323, 205.705, 34.6744, 0.15", "25.9507, 206.182, 34.2587, 0.15", "28.1121, 207.43, 33.011, 0.15", "29.1756, 207.943, 32.4016, 0.15", "30.2022, 208.392, 31.8152, 0.22", "28.4701, 216.31, 38.1498, 0.22", "27.2855, 224.349, 44.4735, 0.22", "27.9885, 231.485, 51.775, 0.22", "29.6005, 237.554, 59.7745, 0.22", "30.4465, 243.64, 67.8792, 0.22", "33.3542, 250.459, 74.9059, 0.22", "36.6273, 258.265, 80.738, 0.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-26.5826, 52.1557, -6.7567, 0.52", "-27.4632, 52.699, -6.1324, 0.52", "-28.0295, 53.0186, -5.76197, 0.52", "-28.5706, 53.2877, -5.47019, 0.74", "-29.2512, 53.6202, -5.14403, 0.96", "-29.9385, 54.0039, -4.82433, 1.18", "-30.492, 54.3632, -4.57071, 1.18", "-31.027, 54.7562, -4.34152, 0.88", "-31.8432, 55.5682, -3.94183, 0.37", "-32.0797, 55.913, -3.8074, 0.37", "-32.51, 56.799, -3.51242, 0.52", "-32.7535, 57.4281, -3.29376, 0.81", "-32.9965, 58.1272, -3.01214, 0.96", "-33.2762, 58.8899, -2.62023, 0.52", "-33.5378, 59.4491, -2.22762, 0.59", "-33.7887, 59.7576, -1.91288, 0.74", "-34.4168, 60.1962, -1.27578, 1.11", "-34.9008, 60.4268, -0.846772, 1.18", "-35.5855, 60.6799, -0.300131, 1.18", "-36.2725, 60.9001, 0.192823, 0.74", "-37.0222, 61.1426, 0.670366, 0.59", "-37.7553, 61.4054, 1.0816, 0.52", "-38.2579, 61.6111, 1.30596, 0.52", "-38.8018, 61.8578, 1.47201, 0.52", "-39.4039, 62.1603, 1.56677, 0.74", "-40.0474, 62.513, 1.6607, 0.74", "-40.3686, 62.7025, 1.7006, 0.81", "-40.802, 62.9794, 1.78283, 0.81", "-41.6756, 63.6004, 2.04487, 0.66", "-42.1027, 63.9762, 2.26481, 0.52", "-43.0554, 65.0522, 3.0562, 0.74", "-43.3735, 65.5002, 3.40731, 0.66", "-43.8006, 66.199, 3.96056, 0.59", "-44.0611, 66.6432, 4.30991, 0.66", "-44.5229, 67.4346, 4.90493, 0.52", "-44.794, 67.837, 5.14628, 0.66", "-45.1516, 68.2776, 5.36202, 0.88", "-45.6398, 68.7751, 5.60708, 0.88", "-46.131, 69.1986, 5.87432, 0.66", "-46.4887, 69.4844, 6.14632, 0.59", "-46.9273, 69.859, 6.609, 0.74", "-47.3258, 70.262, 7.16003, 0.52", "-47.6748, 70.669, 7.75339, 0.52", "-48.4267, 71.6759, 9.23305, 0.66", "-48.9369, 72.4326, 10.3309, 0.74", "-49.2171, 72.8474, 10.9506, 0.44", "-49.461, 73.174, 11.4497, 0.44", "-49.69, 73.4144, 11.8055, 0.59", "-49.9776, 73.6328, 12.1216, 0.66", "-50.4562, 73.9191, 12.4696, 0.66", "-51.1825, 74.3206, 12.9732, 0.52", "-51.68, 74.6048, 13.3914, 0.52", "-52.0971, 74.9026, 13.8308, 0.44", "-52.7762, 75.5367, 14.7242, 0.59", "-53.0692, 75.8504, 15.1271, 0.74", "-53.3888, 76.2274, 15.5777, 0.88", "-53.7987, 76.7116, 16.1379, 0.88", "-54.1905, 77.1127, 16.6931, 0.44", "-54.5575, 77.4272, 17.1932, 0.44", "-55.1544, 77.8145, 17.9381, 0.59", "-55.6085, 78.0754, 18.4532, 0.52", "-56.3571, 78.4719, 19.2531, 0.66", "-57.0347, 78.8197, 19.9537, 0.74", "-57.5849, 79.1156, 20.5375, 0.74", "-57.915, 79.3275, 20.8975, 0.74", "-58.4299, 79.7328, 21.4764, 0.52", "-58.6206, 79.9149, 21.6625, 0.52", "-58.8913, 80.2303, 21.8858, 0.66", "-59.2421, 80.6916, 22.1612, 0.66", "-59.609, 81.1751, 22.4402, 0.81", "-60.0128, 81.7048, 22.7377, 0.81", "-60.3765, 82.1564, 23.0072, 0.59", "-60.7781, 82.6334, 23.2895, 0.52", "-61.3567, 83.2788, 23.6801, 0.59", "-61.7629, 83.6947, 23.9597, 0.66", "-62.1105, 84.0017, 24.1951, 0.66", "-62.7419, 84.4416, 24.6108, 0.59", "-63.1538, 84.6731, 24.8969, 0.59", "-63.5681, 84.8682, 25.1891, 0.59", "-64.1861, 85.1392, 25.606, 0.52", "-64.6898, 85.3774, 25.9485, 0.66", "-65.1458, 85.6242, 26.2381, 0.66", "-65.7484, 85.9991, 26.5637, 0.52", "-66.1923, 86.3149, 26.7581, 0.66", "-66.871, 86.8676, 26.9898, 0.81", "-67.4324, 87.3859, 27.1496, 0.81", "-68.2376, 88.2425, 27.372, 0.52", "-68.7317, 88.8399, 27.5203, 0.59", "-69.0847, 89.2979, 27.6327, 0.59", "-69.5137, 89.884, 27.7929, 0.37", "-70.117, 90.7165, 28.0728, 0.52", "-70.5934, 91.3353, 28.3311, 0.59", "-71.1844, 92.0339, 28.6901, 0.22", "-71.4578, 92.306, 28.8672, 0.37", "-71.8412, 92.6251, 29.086, 0.37", "-72.3599, 92.9821, 29.3183, 0.37", "-72.9855, 93.3708, 29.5422, 0.66", "-73.4583, 93.6763, 29.7595, 0.88", "-73.8302, 93.9388, 29.9951, 0.59", "-74.6622, 94.6073, 30.7056, 0.29", "-75.2015, 95.1715, 31.3417, 0.29", "-75.5746, 95.6889, 31.9108, 0.29", "-76.2194, 96.9333, 33.2874, 0.88", "-76.479, 97.5872, 34.1229, 0.88", "-76.5895, 97.9826, 34.6663, 0.66", "-76.6528, 98.5439, 35.5618, 0.52", "-76.6385, 98.8356, 36.0566, 0.29", "-76.6116, 99.0616, 36.4623, 0.29", "-76.6611, 100.249, 38.0022, 0.74", "-82.1751, 105.534, 44.6553, 0.74", "-87.5613, 109.986, 51.9358, 0.74", "-92.4535, 114.538, 59.504, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-26.5826, 52.1557, -6.7567, 0.74", "-27.3156, 52.5374, -7.19086, 0.74", "-27.8786, 52.9055, -7.49856, 0.74", "-28.7596, 53.5577, -7.9199, 0.74", "-29.3428, 53.9963, -8.27792, 0.88", "-29.9271, 54.3978, -8.7087, 1.03", "-30.4944, 54.709, -9.18831, 1.03", "-31.0527, 54.9373, -9.7375, 0.96", "-31.6611, 55.0864, -10.3475, 0.74", "-33.1028, 55.2234, -11.6911, 0.66", "-34.0583, 55.2084, -12.4526, 0.66", "-35.3098, 55.1039, -13.304, 0.66", "-36.0774, 55.0112, -13.7521, 0.59", "-37.1142, 54.8601, -14.25, 0.66", "-37.9152, 54.7433, -14.5397, 0.66", "-39.5619, 54.5532, -14.9352, 0.81", "-40.5281, 54.5071, -15.1171, 0.96", "-41.2587, 54.5393, -15.2346, 1.18", "-42.0115, 54.6325, -15.3605, 1.18", "-43.0449, 54.84, -15.5541, 0.66", "-43.8295, 55.0332, -15.727, 0.66", "-44.4593, 55.2017, -15.8943, 0.59", "-45.1587, 55.3577, -16.1606, 0.74", "-46.0008, 55.4576, -16.5579, 0.74", "-46.3465, 55.4198, -16.813, 0.88", "-46.921, 55.1077, -17.5263, 0.88", "-47.2901, 54.8204, -18.1609, 0.66", "-48.0501, 54.208, -19.558, 0.66", "-48.4164, 53.921, -20.24, 1.25", "-49.2581, 53.3128, -21.7545, 1.47", "-50.1725, 52.7482, -23.2704, 1.62", "-51.291, 52.243, -24.9238, 1.55", "-51.8549, 52.1081, -25.5925, 0.81", "-52.5261, 52.086, -26.1704, 0.59", "-53.3698, 52.1853, -26.7528, 0.44", "-54.0302, 52.3306, -27.1174, 0.44", "-54.7576, 52.5372, -27.4872, 0.59", "-55.2545, 52.681, -27.7529, 0.59", "-55.9227, 52.8697, -28.2201, 0.29", "-57.0432, 53.2316, -29.1602, 1.03", "-57.9004, 53.5726, -29.9368, 1.47", "-58.5414, 53.8706, -30.5317, 1.69", "-58.9392, 54.0774, -30.8949, 2.06", "-59.7468, 54.5627, -31.5916, 1.03", "-60.5567, 55.1305, -32.2442, 0.52", "-61.2499, 55.7259, -32.7885, 0.81", "-61.6201, 56.114, -33.0906, 0.96", "-62.0782, 56.6985, -33.5181, 0.74", "-62.5552, 57.4044, -34.044, 1.03", "-62.8579, 57.9038, -34.4248, 0.88", "-63.2701, 58.6069, -35.0001, 1.25", "-63.594, 59.1309, -35.4808, 1.62", "-63.8935, 59.5643, -35.916, 1.77", "-64.3298, 60.1667, -36.5686, 1.99", "-64.7011, 60.6602, -37.1057, 1.18", "-64.9917, 61.0502, -37.5163, 0.29", "-65.3956, 61.6195, -38.1119, 0.29", "-65.8834, 62.3858, -38.9255, 0.66", "-66.2427, 63.064, -39.616, 0.66", "-66.4938, 63.6565, -40.1683, 0.22", "-66.7173, 64.3251, -40.7543, 0.81", "-66.933, 65.0821, -41.4072, 1.18", "-67.1712, 65.9908, -42.148, 0.96", "-67.3144, 66.4877, -42.5283, 0.37", "-67.5022, 66.9495, -42.8661, 0.29", "-67.7055, 67.3086, -43.1275, 0.29", "-68.0024, 67.7147, -43.3914, 0.29", "-68.3463, 68.1585, -43.6205, 0.59", "-68.7504, 68.7201, -43.8571, 0.59", "-69.1136, 69.3542, -44.1404, 0.59", "-69.4187, 70.0323, -44.4689, 0.59", "-69.6588, 70.6812, -44.7801, 0.59", "-69.8481, 71.2816, -45.0675, 0.29", "-69.9962, 71.7916, -45.3184, 0.37", "-70.2981, 72.6741, -45.8153, 0.37", "-70.6325, 73.4122, -46.3392, 0.74", "-70.8368, 73.7442, -46.606, 1.25", "-71.1682, 74.1825, -46.9738, 1.69", "-71.4886, 74.5469, -47.3052, 1.47", "-72.1283, 75.1848, -47.9467, 0.96", "-72.8211, 75.8035, -48.6125, 0.59", "-73.3469, 76.2473, -49.1446, 0.52", "-73.8021, 76.5951, -49.6296, 0.66", "-74.405, 76.9889, -50.2583, 0.52", "-74.9651, 77.292, -50.8498, 0.81", "-75.5598, 77.5167, -51.422, 0.96", "-76.1413, 77.6679, -51.9079, 1.55", "-76.8923, 77.8211, -52.4891, 1.77", "-77.5269, 77.9408, -52.9185, 2.21", "-78.5233, 78.1342, -53.4999, 2.36", "-79.5835, 78.3379, -54.054, 0.59", "-80.4761, 78.478, -54.4996, 0.37", "-81.0073, 78.5406, -54.7479, 0.37", "-81.7294, 78.5957, -55.0751, 0.37", "-82.3475, 78.6257, -55.3572, 0.37", "-82.9146, 78.639, -55.5939, 0.37", "-83.5909, 78.6539, -55.9053, 0.29", "-83.9957, 78.6444, -56.0906, 0.29", "-84.4459, 78.6489, -56.3217, 0.44", "-85.2106, 78.7614, -56.7594, 0.81", "-85.659, 78.9095, -57.0646, 1.18", "-86.0809, 79.1062, -57.4032, 1.18", "-86.5614, 79.3666, -57.9027, 0.74", "-87.3156, 79.7907, -58.8156, 0.37", "-87.7583, 80.0478, -59.3998, 0.81", "-88.4719, 80.4587, -60.4357, 1.18", "-89.0141, 80.768, -61.2703, 1.18", "-90.0848, 81.3572, -62.9965, 0.52", "-90.619, 81.6468, -63.7999, 0.37", "-91.4591, 82.0503, -64.8886, 1.33", "-92.1444, 82.3398, -65.6725, 2.14", "-92.575, 82.5257, -66.1066, 2.58", "-93.5739, 83.0027, -66.9913, 2.8", "-94.873, 83.731, -68.0048, 0.37", "-95.6529, 84.2721, -68.6063, 0.37", "-95.9598, 84.5421, -68.8402, 0.37", "-96.4532, 85.1477, -69.2004, 0.59", "-96.7791, 85.7272, -69.4706, 0.74", "-97.0418, 86.4041, -69.7434, 0.74", "-97.2342, 87.0521, -70.1168, 0.74", "-97.3757, 87.4295, -70.4012, 0.44", "-97.6996, 87.9055, -70.8833, 0.29", "-98.0383, 88.2448, -71.3445, 0.29", "-98.4388, 88.5486, -71.8732, 0.81", "-99.4474, 89.12, -73.0819, 1.03", "-99.888, 89.3233, -73.5667, 0.96", "-100.71, 89.6832, -74.4266, 0.22", "-101.498, 90.0425, -75.2688, 0.59", "-102.004, 90.3112, -75.8112, 0.59", "-102.51, 90.6298, -76.3623, 0.44", "-103.0, 90.975, -76.8758, 0.37", "-103.931, 91.6072, -77.8682, 1.03", "-104.659, 92.046, -78.6036, 1.69", "-105.043, 92.269, -78.9516, 1.92", "-105.547, 92.5816, -79.3882, 1.92", "-105.857, 92.7864, -79.6645, 1.92", "-107.063, 93.6016, -80.7122, 0.44", "-107.443, 93.8769, -81.008, 0.37", "-107.898, 94.269, -81.3779, 0.52", "-108.142, 94.5281, -81.6163, 0.88", "-108.608, 95.1337, -82.1587, 1.03", "-108.887, 95.5252, -82.5119, 1.18", "-109.307, 96.1661, -83.0886, 0.96", "-109.829, 96.9583, -83.7946, 0.74", "-110.152, 97.4549, -84.205, 0.74", "-110.452, 97.9218, -84.5598, 0.59", "-110.996, 98.7431, -85.1062, 0.52", "-111.357, 99.2695, -85.4237, 0.52", "-111.939, 100.074, -85.8346, 0.74", "-112.565, 100.884, -86.1575, 1.18", "-113.109, 101.561, -86.3829, 1.4", "-113.51, 102.039, -86.5243, 1.47", "-113.913, 102.476, -86.6462, 1.69", "-114.539, 103.035, -86.8268, 1.4", "-115.364, 103.621, -87.0819, 0.52", "-116.168, 104.062, -87.3446, 0.52", "-117.021, 104.435, -87.6262, 0.74", "-117.771, 104.716, -87.9148, 0.96", "-118.771, 105.053, -88.3705, 0.96", "-119.5, 105.294, -88.7681, 0.74", "-120.209, 105.574, -89.2209, 0.44", "-120.654, 105.827, -89.5498, 0.44", "-121.19, 106.232, -89.9914, 0.74", "-121.661, 106.634, -90.3772, 0.88", "-121.992, 106.926, -90.6723, 0.88", "-122.567, 107.46, -91.2308, 0.29", "-123.101, 107.973, -91.8, 0.29", "-123.689, 108.518, -92.4317, 0.37", "-124.254, 109.013, -93.0175, 0.44", "-125.16, 109.79, -93.9637, 0.59", "-125.564, 110.165, -94.4117, 1.18", "-126.14, 110.77, -95.0754, 1.03", "-126.59, 111.312, -95.5833, 1.69", "-126.828, 111.625, -95.8279, 1.69", "-127.359, 112.336, -96.3293, 1.18", "-128.068, 113.237, -96.8925, 0.37", "-128.494, 113.748, -97.2308, 0.37", "-129.161, 114.511, -97.7599, 0.37", "-129.771, 115.166, -98.251, 0.59", "-130.306, 115.692, -98.6644, 1.11", "-130.768, 116.096, -98.9976, 1.62", "-131.337, 116.518, -99.4058, 1.69", "-131.884, 116.907, -99.842, 1.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-69.723, 22.334, 131.271, 0.88", "-73.205, 20.9672, 140.555, 0.88", "-77.1829, 21.202, 149.727, 0.88", "-79.9042, 22.4507, 159.275, 0.88", "-82.5782, 23.7581, 168.831, 0.88", "-83.7197, 26.4189, 178.437, 0.88", "-84.3725, 29.3047, 188.029, 0.88", "-86.7906, 33.0902, 197.038, 0.88", "-89.0056, 37.9818, 205.605, 0.88", "-91.6489, 43.7652, 213.521, 0.88", "-94.6648, 49.9519, 221.017, 0.88" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-69.723, 22.334, 131.271, 0.22", "-72.5121, 21.4949, 140.841, 0.88", "-74.4007, 21.3609, 150.66, 0.88", "-78.3191, 22.097, 159.834, 0.88", "-82.2486, 23.3738, 168.949, 0.88", "-86.5954, 23.5974, 177.952, 0.88", "-91.6002, 23.1668, 186.6, 0.88", "-95.5498, 22.0946, 195.73, 0.88", "-100.045, 21.2019, 204.622, 0.88", "-103.178, 18.9048, 213.863, 0.88", "-104.759, 16.8972, 223.551, 0.88" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-161.376, 109.08, 67.1792, 0.88", "-170.0, 113.867, 69.3774, 0.88", "-178.76, 118.368, 71.5875, 0.88", "-187.772, 122.606, 73.1691, 0.88", "-197.152, 125.53, 75.2338, 0.88" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-161.376, 109.08, 67.1792, 0.22", "-169.654, 114.612, 69.1063, 0.88", "-178.175, 119.645, 71.2067, 0.88", "-187.666, 122.558, 72.6994, 0.88", "-196.805, 126.821, 72.7481, 0.88", "-206.169, 130.298, 73.9058, 0.88" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-60.7959, -136.582, 68.1133, 0.88", "-64.9625, -144.194, 73.5972, 0.88", "-68.1399, -151.889, 79.6136, 0.88", "-71.2316, -159.123, 86.1694, 0.88", "-73.131, -167.563, 91.8073, 0.88", "-73.2019, -174.901, 98.9589, 0.88", "-74.9089, -181.948, 106.174, 0.88", "-74.8429, -187.331, 114.759, 0.88", "-73.5078, -192.906, 123.128, 0.88", "-70.4226, -197.003, 131.803, 0.88", "-67.0088, -202.569, 139.564, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-60.7959, -136.582, 68.1133, 0.22", "-65.9157, -144.187, 72.7312, 0.88", "-71.4905, -150.963, 77.9531, 0.88", "-76.3702, -159.165, 81.8492, 0.88", "-81.6879, -167.259, 85.3563, 0.88", "-87.1578, -175.557, 88.1184, 0.88", "-93.8771, -183.281, 88.9738, 0.88", "-100.436, -191.051, 90.4659, 0.88", "-107.786, -197.884, 92.3725, 0.88", "-116.017, -203.796, 93.115, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-3.83118, -52.276, 5.17685, 1.25", "-3.46327, -53.3116, 4.65333, 1.25", "-3.17397, -54.0242, 4.37382, 1.03", "-2.68773, -55.0082, 4.10169, 0.88", "-2.27968, -55.8111, 3.98439, 0.66", "-1.99982, -56.4043, 3.96906, 0.66", "-1.62276, -57.3125, 4.01114, 0.74", "-1.35189, -58.1827, 4.1497, 0.66", "-1.1633, -58.8519, 4.31672, 0.81", "-0.987911, -59.5257, 4.51174, 0.81", "-0.756509, -60.3945, 4.73758, 0.74", "-0.511754, -61.2666, 4.90217, 0.96", "-0.218193, -62.2842, 5.02202, 1.03", "0.0753738, -63.2428, 5.1122, 1.11", "0.371846, -64.186, 5.18791, 1.25", "0.798539, -65.3949, 5.26049, 0.96", "1.27716, -66.6085, 5.33108, 0.96", "1.75247, -67.6994, 5.39765, 1.11", "2.18436, -68.6055, 5.45167, 1.47" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-3.83118, -52.276, 5.17685, 2.06", "-4.54009, -53.1668, 4.98786, 2.06", "-5.26421, -54.2289, 4.65399, 2.06", "-5.83801, -55.2066, 4.28171, 2.06", "-6.32958, -56.114, 3.8682, 2.06", "-6.87704, -57.1203, 3.33791, 1.99", "-7.59044, -58.444, 2.60364, 1.77", "-8.16401, -59.6237, 1.85121, 1.47", "-8.70222, -60.8216, 1.01276, 1.11", "-9.20591, -61.9435, 0.149269, 1.11", "-9.58547, -62.7351, -0.489567, 1.25", "-9.91021, -63.3385, -0.983379, 1.25", "-10.736, -64.5787, -1.97917, 1.18", "-11.2975, -65.2294, -2.49141, 1.25", "-12.2903, -66.1397, -3.17862, 1.18", "-13.0841, -66.7374, -3.56184, 1.18", "-13.6986, -67.118, -3.7517, 1.18", "-14.7578, -67.6298, -3.93858, 1.18", "-15.86, -68.054, -4.01996, 1.25", "-16.4624, -68.2452, -4.02498, 1.25", "-17.3342, -68.4819, -3.96123, 1.25", "-18.6365, -68.8298, -3.83422, 1.77", "-19.5377, -69.0675, -3.73319, 2.14" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "56.0858, 135.006, -22.8106, 0.74", "56.6497, 135.084, -23.6344, 0.74", "57.8541, 135.407, -25.2402, 1.03", "58.4746, 135.675, -26.0568, 0.52", "58.9493, 135.96, -26.6777, 0.52", "59.4414, 136.347, -27.3119, 0.74", "59.9364, 136.809, -27.9209, 0.52", "60.4849, 137.45, -28.4824, 0.59", "61.2029, 138.407, -29.0737, 0.44", "61.7053, 139.099, -29.4368, 0.52", "62.3666, 140.025, -29.8728, 0.44", "62.873, 140.718, -30.1565, 0.29", "63.504, 141.509, -30.4648, 0.29", "63.7016, 141.713, -30.5581, 0.59", "64.2403, 142.187, -30.802, 0.59", "64.9189, 142.677, -31.1151, 0.44", "65.4586, 143.012, -31.3789, 0.59", "66.4357, 143.627, -31.8812, 0.37", "67.1586, 144.137, -32.2661, 0.37", "67.7603, 144.594, -32.5694, 0.37", "68.4353, 145.13, -32.8764, 0.37", "69.4463, 145.903, -33.2744, 0.96", "70.1179, 146.41, -33.509, 1.03", "71.0057, 147.087, -33.7837, 0.81", "71.6222, 147.582, -33.9684, 0.66", "72.473, 148.314, -34.2388, 0.88", "72.9088, 148.713, -34.3797, 1.25", "73.5792, 149.284, -34.5681, 0.88", "74.26, 149.78, -34.8042, 0.29", "74.6722, 150.05, -34.9737, 0.44", "75.2501, 150.427, -35.2407, 0.37", "76.1495, 150.965, -35.6702, 0.52", "77.1125, 151.476, -36.1292, 0.59", "78.8026, 152.226, -36.86, 0.66", "79.779, 152.602, -37.2407, 0.52", "80.1909, 152.742, -37.4053, 0.59", "80.9874, 153.005, -37.7213, 0.44", "81.8331, 153.318, -38.0516, 0.37", "82.9473, 153.796, -38.4364, 0.37", "83.5961, 154.099, -38.5927, 0.96", "84.4305, 154.544, -38.7579, 0.88", "85.2967, 155.069, -38.9137, 0.44", "85.8597, 155.452, -39.0231, 0.29", "86.5319, 155.951, -39.1983, 0.44", "87.3795, 156.648, -39.4738, 0.44", "88.2822, 157.462, -39.8459, 0.52", "88.8707, 158.046, -40.1469, 0.66", "89.8272, 159.066, -40.8239, 0.66", "90.6349, 159.996, -41.5487, 0.44", "91.0554, 160.52, -42.0081, 0.37", "91.5172, 161.145, -42.6168, 0.37", "91.8002, 161.504, -43.0057, 0.52", "92.3714, 162.11, -43.7128, 0.59", "92.7102, 162.367, -44.0257, 0.66", "93.3628, 162.657, -44.4218, 0.52", "94.2225, 162.863, -44.8222, 0.88", "94.8564, 162.963, -45.0604, 0.88", "95.5911, 163.086, -45.3537, 0.74", "96.1989, 163.183, -45.6721, 0.59", "96.6452, 163.237, -45.9532, 0.29", "97.462, 163.278, -46.5169, 0.29", "98.0207, 163.277, -46.9242, 0.29", "99.0981, 163.316, -47.7944, 0.88", "100.176, 163.451, -48.7292, 0.96", "100.684, 163.562, -49.1832, 0.88", "101.402, 163.742, -49.838, 0.29", "101.736, 163.811, -50.1116, 0.29", "102.309, 163.848, -50.5129, 0.37", "102.911, 163.812, -50.8769, 0.37", "103.382, 163.78, -51.2041, 0.37", "104.555, 163.671, -52.1088, 0.44", "105.259, 163.574, -52.6815, 0.59", "105.721, 163.467, -53.0537, 0.81", "106.407, 163.291, -53.6137, 0.59", "107.506, 163.052, -54.5261, 1.11", "108.048, 162.973, -54.9909, 1.47", "108.462, 162.935, -55.3261, 1.47", "109.269, 162.854, -55.9525, 1.03", "110.312, 162.756, -56.6799, 0.59", "111.254, 162.643, -57.2591, 0.96", "112.258, 162.482, -57.8126, 0.96", "113.264, 162.309, -58.356, 0.37", "114.179, 162.155, -58.8028, 0.37", "114.863, 162.034, -59.1026, 0.37", "115.94, 161.801, -59.5376, 0.37", "117.004, 161.57, -59.9458, 0.81", "117.92, 161.409, -60.2832, 1.03", "119.18, 161.283, -60.7709, 1.25", "119.543, 161.262, -60.9089, 1.47", "121.082, 161.181, -61.4611, 0.29", "121.575, 161.166, -61.6084, 0.29", "122.147, 161.157, -61.7433, 0.44", "122.82, 161.168, -61.8637, 0.22", "123.57, 161.208, -61.9687, 0.59", "124.227, 161.281, -62.0343, 0.59", "125.281, 161.456, -62.1067, 0.22", "126.39, 161.659, -62.1807, 0.22", "127.767, 161.908, -62.2608, 0.22", "128.563, 162.057, -62.2981, 0.44", "129.951, 162.365, -62.3607, 0.22", "130.789, 162.561, -62.4006, 0.22", "131.439, 162.71, -62.4377, 0.37", "133.258, 163.099, -62.5482, 0.22", "134.496, 163.338, -62.6328, 0.22", "136.716, 163.761, -62.793, 0.22", "137.979, 163.974, -62.9026, 0.22", "138.609, 164.067, -62.9591, 0.96", "139.49, 164.192, -63.04, 0.96", "140.287, 164.302, -63.1155, 0.88", "141.036, 164.387, -63.1796, 0.88", "142.908, 164.596, -63.3057, 0.22", "145.257, 164.841, -63.42, 0.22", "146.439, 164.957, -63.4624, 0.44", "147.1, 165.0, -63.4838, 0.52", "148.603, 165.048, -63.4999, 0.22", "150.775, 165.047, -63.4799, 0.22", "152.462, 165.007, -63.4129, 0.22", "154.076, 164.914, -63.3241, 0.22", "156.242, 164.714, -63.1823, 0.22", "157.514, 164.55, -63.0875, 0.22", "158.497, 164.368, -63.007, 1.33", "159.167, 164.179, -62.9465, 1.47", "160.537, 163.759, -62.8097, 0.66", "161.537, 163.405, -62.7028, 0.29", "162.892, 162.886, -62.5682, 0.29", "163.926, 162.453, -62.5162, 0.29", "164.951, 161.957, -62.479, 0.29" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "56.0858, 135.006, -22.8106, 0.37", "56.9415, 135.778, -22.6731, 0.37", "57.7844, 136.584, -22.4978, 0.37", "58.1622, 136.956, -22.403, 0.37", "58.8055, 137.589, -22.2756, 0.37", "59.2611, 138.064, -22.1948, 0.37", "60.2358, 139.116, -22.0111, 0.66", "60.7187, 139.664, -21.8471, 1.25", "61.0478, 140.069, -21.6952, 1.25", "61.7056, 141.001, -21.3119, 0.59", "62.2443, 141.838, -20.9206, 0.37", "62.8761, 142.809, -20.4179, 0.37", "63.7794, 144.126, -19.6998, 0.52", "64.1228, 144.629, -19.4064, 0.37", "64.5947, 145.334, -19.0054, 0.52", "64.9535, 145.885, -18.6525, 0.66", "65.2482, 146.339, -18.3681, 0.66", "65.6141, 146.915, -18.038, 0.44", "66.2128, 147.918, -17.5612, 0.66", "66.5168, 148.46, -17.2988, 0.81", "67.1572, 149.671, -16.7145, 1.03", "67.6079, 150.541, -16.2884, 1.18", "67.8462, 150.993, -16.0124, 1.18", "68.3794, 151.935, -15.3376, 0.44", "68.8327, 152.713, -14.7195, 0.37", "69.0803, 153.162, -14.35, 0.37", "69.4438, 153.875, -13.7956, 0.66", "70.2193, 155.367, -12.6099, 0.96", "70.3593, 155.631, -12.4115, 0.66", "70.6729, 156.174, -12.0119, 0.29", "71.0271, 156.747, -11.6455, 0.29", "71.3062, 157.155, -11.4421, 0.29", "71.9848, 158.018, -11.1279, 0.29", "72.6411, 158.755, -10.9396, 0.44", "73.3541, 159.503, -10.7576, 0.59", "74.168, 160.318, -10.5706, 0.59", "75.0789, 161.231, -10.3736, 0.66", "75.5954, 161.777, -10.2481, 0.44", "76.1033, 162.373, -10.1062, 0.37", "76.5324, 162.923, -9.95484, 0.52", "76.9439, 163.475, -9.78033, 0.66", "77.288, 163.952, -9.60482, 0.66", "78.0176, 164.993, -9.18318, 0.59", "78.5148, 165.726, -8.88661, 0.74", "79.1191, 166.654, -8.48685, 0.66", "79.8478, 167.852, -7.96694, 0.52", "80.3705, 168.77, -7.56422, 0.59", "80.7184, 169.4, -7.27853, 0.59", "81.0812, 170.043, -6.98472, 0.59", "81.6768, 171.044, -6.4891, 0.44", "82.1444, 171.826, -6.08499, 0.29", "82.545, 172.541, -5.67283, 0.44", "83.0135, 173.338, -5.14871, 0.59", "83.5573, 174.114, -4.58514, 0.74", "84.0987, 174.775, -4.09751, 0.59", "84.7227, 175.475, -3.62341, 0.96", "85.1607, 175.977, -3.28527, 1.11", "85.9201, 176.97, -2.68116, 0.59", "86.534, 177.93, -2.18327, 0.52", "87.0285, 178.742, -1.81229, 0.52", "87.5305, 179.541, -1.49007, 0.66", "88.3481, 180.832, -1.04203, 0.74", "88.8455, 181.673, -0.788174, 0.74", "89.4015, 182.678, -0.507119, 0.29", "89.9881, 183.743, -0.216983, 0.29", "90.2198, 184.104, -0.118429, 0.29", "90.879, 185.015, 0.10095, 0.29", "91.5569, 185.808, 0.250378, 0.52", "92.0183, 186.27, 0.350525, 0.37", "92.628, 186.808, 0.485667, 0.37", "93.2617, 187.314, 0.619901, 0.29", "94.2805, 188.041, 0.84447, 0.29", "95.0476, 188.526, 1.00548, 0.37", "95.6979, 188.916, 1.13812, 0.52", "96.201, 189.217, 1.25515, 0.52", "96.8378, 189.596, 1.41642, 0.44", "97.8287, 190.185, 1.66608, 0.44", "98.4711, 190.577, 1.81609, 0.59", "99.1381, 191.029, 1.95636, 0.74", "99.786, 191.496, 2.15242, 0.74", "100.53, 192.064, 2.42293, 0.52", "101.162, 192.572, 2.66336, 0.37", "102.041, 193.279, 2.98747, 0.29", "102.72, 193.823, 3.24562, 0.29", "104.319, 195.08, 3.83883, 0.66", "105.085, 195.677, 4.13038, 0.44", "105.863, 196.264, 4.44595, 0.52", "106.332, 196.609, 4.64138, 0.52", "106.855, 197.0, 4.86812, 0.37", "107.298, 197.368, 5.06073, 0.37", "107.764, 197.786, 5.2239, 0.44", "108.429, 198.44, 5.4889, 0.74", "108.844, 198.887, 5.66366, 0.88", "109.469, 199.638, 5.94542, 0.74", "109.93, 200.221, 6.16086, 0.52", "110.514, 200.965, 6.43501, 0.37", "111.049, 201.617, 6.67246, 0.22", "111.427, 202.042, 6.82351, 0.22", "112.04, 202.674, 7.05227, 0.59", "112.536, 203.125, 7.24961, 0.74", "113.115, 203.563, 7.50925, 0.59", "113.387, 203.736, 7.64628, 0.59", "114.606, 204.438, 8.28828, 0.37", "115.086, 204.71, 8.53878, 0.37", "115.877, 205.139, 8.906, 0.52", "116.64, 205.527, 9.19329, 0.52", "117.243, 205.797, 9.36207, 0.52", "118.139, 206.14, 9.6122, 0.81", "118.665, 206.317, 9.76008, 0.88", "119.352, 206.528, 9.94152, 0.88", "120.471, 206.835, 10.2055, 0.44", "121.518, 207.086, 10.4544, 0.37", "123.27, 207.459, 10.8782, 0.59", "123.939, 207.577, 11.0446, 0.59", "124.922, 207.737, 11.3403, 0.37", "125.633, 207.859, 11.5857, 0.29", "126.401, 207.987, 11.8672, 0.29", "127.347, 208.105, 12.1493, 0.29", "128.332, 208.19, 12.3604, 0.29", "129.934, 208.284, 12.7054, 0.59", "130.663, 208.326, 12.8706, 0.59", "131.346, 208.364, 13.0255, 0.59", "132.728, 208.409, 13.3091, 0.29", "133.459, 208.423, 13.4339, 0.29", "134.645, 208.455, 13.5902, 0.66", "135.471, 208.478, 13.6627, 0.74", "136.209, 208.498, 13.7228, 0.74", "137.675, 208.577, 13.795, 0.22", "138.99, 208.704, 13.8302, 0.22", "139.746, 208.799, 13.8121, 0.29", "140.258, 208.887, 13.771, 0.29", "141.202, 209.113, 13.6713, 0.22", "142.371, 209.529, 13.5281, 0.37", "142.976, 209.828, 13.4456, 0.52", "143.436, 210.092, 13.3843, 0.52", "144.109, 210.503, 13.3064, 0.59", "144.886, 210.954, 13.2364, 0.59", "145.697, 211.345, 13.2158, 0.52", "146.329, 211.579, 13.2386, 0.59", "147.12, 211.809, 13.278, 0.44", "147.784, 211.963, 13.3131, 0.29", "148.512, 212.114, 13.3934, 0.29", "149.835, 212.444, 13.602, 0.29", "150.307, 212.575, 13.6915, 0.29", "151.247, 212.879, 13.8868, 0.29", "151.737, 213.063, 13.9937, 0.29", "153.225, 213.689, 14.288, 0.29", "154.0, 214.049, 14.3755, 0.29", "154.998, 214.538, 14.4004, 0.22", "155.488, 214.768, 14.3829, 0.44", "155.98, 214.979, 14.3384, 0.44", "156.805, 215.285, 14.2233, 0.29", "158.197, 215.663, 13.9455, 0.22", "158.802, 215.785, 13.8278, 0.22", "159.389, 215.891, 13.7193, 0.44", "159.953, 215.965, 13.6051, 0.44", "160.653, 216.023, 13.4393, 0.37", "161.557, 216.09, 13.2078, 0.29", "162.564, 216.172, 12.9275, 0.29", "163.205, 216.251, 12.7172, 0.29", "164.25, 216.437, 12.3262, 0.29", "164.886, 216.598, 12.0648, 0.29", "165.67, 216.856, 11.6956, 0.44", "166.388, 217.107, 11.2888, 0.37", "167.066, 217.287, 10.8421, 0.52", "167.594, 217.399, 10.48, 0.52", "168.003, 217.472, 10.2161, 0.66", "169.151, 217.648, 9.50413, 0.96", "170.183, 217.805, 8.8924, 0.81", "171.581, 218.076, 8.09618, 0.29", "172.456, 218.263, 7.52648, 0.29", "173.224, 218.473, 6.99875, 0.29", "173.743, 218.661, 6.68155, 0.29", "174.81, 219.061, 6.21116, 0.29", "175.469, 219.286, 5.98953, 0.66", "177.936, 219.933, 5.28979, 0.29", "178.481, 220.009, 5.1417, 0.22", "180.583, 220.172, 4.56311, 0.22", "182.65, 220.188, 4.01104, 0.22", "183.562, 220.133, 3.78315, 0.37", "184.473, 220.04, 3.63117, 0.44", "184.866, 219.997, 3.63318, 0.22", "193.103, 225.902, 4.35336, 0.22", "201.897, 230.837, 3.59568, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-92.4535, 114.538, 59.504, 0.88", "-98.4832, 120.143, 65.4319, 0.88", "-104.937, 127.026, 69.3547, 0.88", "-111.594, 134.717, 70.7784, 0.88", "-119.735, 139.929, 73.794, 0.88", "-128.826, 143.448, 76.2663, 0.88", "-137.775, 146.879, 79.3069, 0.88", "-146.84, 151.076, 80.6645, 0.88", "-155.561, 154.821, 84.0154, 0.88", "-163.326, 159.832, 88.1299, 0.88", "-169.625, 165.694, 93.5288, 0.88", "-173.966, 172.138, 100.125, 0.88" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-92.4535, 114.538, 59.504, 0.22", "-98.2858, 120.212, 65.5686, 0.88", "-103.229, 125.916, 72.355, 0.88", "-106.493, 131.253, 80.3246, 0.88", "-108.362, 137.327, 88.2645, 0.88", "-108.545, 141.807, 97.3066, 0.88", "-108.175, 145.869, 106.521, 0.88", "-106.605, 149.234, 115.863, 0.88", "-106.28, 151.71, 125.575, 0.88", "-106.288, 152.67, 135.533, 0.88", "-107.636, 153.513, 145.409, 0.88", "-107.226, 155.202, 155.271, 0.88", "-105.695, 156.431, 165.083, 0.88" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-131.884, 116.907, -99.842, 0.29", "-131.92, 118.447, -100.907, 0.29", "-132.119, 119.439, -101.632, 0.29", "-132.373, 120.196, -102.193, 0.37", "-132.519, 120.593, -102.474, 0.37", "-132.695, 121.152, -102.886, 0.81", "-132.914, 121.846, -103.405, 0.81", "-133.187, 122.47, -103.881, 0.44", "-133.402, 122.884, -104.205, 0.22", "-133.657, 123.34, -104.628, 0.22", "-134.174, 124.344, -105.682, 0.37", "-134.305, 124.625, -106.007, 0.22", "-134.56, 125.19, -106.656, 0.22", "-134.777, 125.643, -107.165, 0.59", "-135.149, 126.313, -107.982, 0.74", "-135.648, 127.025, -109.049, 0.37", "-136.087, 127.49, -110.012, 0.37", "-136.391, 127.807, -110.805, 0.37", "-136.688, 128.12, -111.629, 1.03", "-137.203, 128.641, -113.047, 1.62", "-137.941, 129.318, -114.999, 1.84", "-138.932, 130.177, -117.64, 1.33", "-139.602, 130.773, -119.499, 0.44", "-139.895, 131.065, -120.369, 0.44", "-140.175, 131.384, -121.205, 0.44", "-140.409, 131.692, -121.853, 0.59", "-141.119, 132.694, -123.552, 0.74", "-141.349, 132.99, -124.036, 0.74", "-141.692, 133.288, -124.67, 0.88", "-142.235, 133.603, -125.623, 0.96", "-142.726, 133.784, -126.449, 0.52", "-143.086, 133.877, -126.984, 0.37", "-144.06, 134.061, -128.312, 0.29", "-144.812, 134.196, -129.405, 0.29", "-145.409, 134.317, -130.299, 0.29", "-146.473, 134.614, -131.896, 0.29", "-146.901, 134.834, -132.574, 0.29", "-147.24, 135.145, -133.174, 0.29", "-147.636, 135.762, -133.953, 0.29", "-147.863, 136.316, -134.549, 0.52", "-147.999, 136.795, -135.034, 0.66", "-148.201, 137.55, -135.738, 0.66", "-148.463, 138.37, -136.59, 0.44", "-148.662, 138.824, -137.14, 0.59", "-149.117, 139.76, -138.38, 0.29", "-149.436, 140.451, -139.337, 0.29", "-149.723, 141.079, -140.186, 0.81", "-150.072, 141.881, -141.2, 1.25", "-150.797, 143.669, -143.254, 0.44", "-151.326, 145.12, -144.755, 0.74", "-151.714, 146.304, -145.846, 0.29", "-151.931, 147.006, -146.473, 0.29", "-152.165, 147.891, -147.223, 0.29", "-152.499, 149.463, -148.309, 0.22", "-152.647, 150.557, -148.841, 0.22", "-152.69, 150.928, -148.971, 0.29" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-131.884, 116.907, -99.842, 0.44", "-133.481, 117.896, -99.8432, 0.44", "-134.298, 118.372, -99.8367, 0.52", "-134.945, 118.723, -99.8291, 0.59", "-135.644, 119.071, -99.8456, 0.59", "-136.491, 119.462, -99.8898, 0.37", "-137.263, 119.815, -99.9562, 0.37", "-137.908, 120.1, -100.025, 0.96", "-138.726, 120.458, -100.174, 1.4", "-139.403, 120.77, -100.334, 1.62", "-140.347, 121.272, -100.606, 0.59", "-141.092, 121.749, -100.898, 0.81", "-141.674, 122.164, -101.164, 0.96", "-141.97, 122.392, -101.313, 1.18", "-142.488, 122.826, -101.576, 0.29", "-143.144, 123.395, -101.887, 0.22", "-144.032, 124.133, -102.304, 0.96", "-144.487, 124.47, -102.515, 0.96", "-145.161, 124.921, -102.851, 0.66", "-145.92, 125.358, -103.276, 0.44", "-146.734, 125.739, -103.802, 0.44", "-147.553, 126.081, -104.375, 0.81", "-148.288, 126.388, -104.908, 0.96", "-149.129, 126.761, -105.558, 0.74", "-150.324, 127.301, -106.548, 0.29", "-151.041, 127.631, -107.187, 0.29", "-151.527, 127.864, -107.643, 0.44", "-151.9, 128.041, -108.013, 0.66", "-152.315, 128.231, -108.44, 0.52", "-152.804, 128.42, -108.958, 0.52", "-153.394, 128.579, -109.587, 0.66", "-154.032, 128.643, -110.226, 0.37", "-154.628, 128.605, -110.792, 0.29", "-155.112, 128.532, -111.202, 0.29", "-155.49, 128.464, -111.506, 0.29", "-156.188, 128.312, -111.999, 0.29", "-156.681, 128.184, -112.379, 0.52", "-157.15, 128.046, -112.778, 0.74", "-157.756, 127.806, -113.341, 0.74", "-158.583, 127.302, -114.281, 0.52", "-158.964, 126.901, -114.875, 1.47", "-159.539, 126.065, -115.966, 1.92", "-159.812, 125.611, -116.55, 1.84", "-160.198, 124.936, -117.443, 0.88", "-160.597, 124.311, -118.417, 0.66", "-161.195, 123.638, -119.713, 0.37", "-161.59, 123.408, -120.428, 0.29", "-162.072, 123.33, -121.115, 0.29", "-162.671, 123.394, -121.815, 0.44", "-163.793, 123.632, -122.928, 0.59", "-164.779, 123.942, -123.874, 0.66", "-165.358, 124.165, -124.423, 0.66", "-165.718, 124.296, -124.793, 0.44", "-166.454, 124.512, -125.565, 0.37", "-167.491, 124.773, -126.723, 0.37", "-168.578, 125.01, -127.895, 0.37", "-168.943, 125.089, -128.288, 0.52", "-169.689, 125.22, -129.079, 0.66", "-170.555, 125.349, -129.953, 0.37", "-171.554, 125.401, -131.074, 0.37", "-172.384, 125.344, -132.025, 0.74", "-172.825, 125.266, -132.513, 0.74", "-173.724, 125.073, -133.522, 0.52", "-174.588, 124.88, -134.5, 0.52", "-176.581, 124.331, -136.925, 0.52", "-177.253, 124.045, -137.842, 0.44", "-177.677, 123.792, -138.528, 0.29", "-178.076, 123.5, -139.227, 0.29", "-178.809, 122.886, -140.544, 0.29", "-179.372, 122.437, -141.545, 0.29", "-180.426, 121.809, -143.099, 0.52", "-181.045, 121.418, -144.14, 0.66", "-181.444, 121.109, -144.926, 0.66", "-181.691, 120.82, -145.546, 0.52", "-181.977, 120.38, -146.383, 0.52", "-182.211, 120.061, -147.014, 0.22", "-183.168, 119.068, -149.2, 1.18", "-183.502, 118.7, -149.996, 1.4", "-184.077, 117.923, -151.449, 0.52", "-184.287, 117.607, -151.955, 0.29", "-184.651, 117.044, -152.683, 0.29", "-185.15, 116.341, -153.464, 0.29", "-186.284, 114.896, -154.686, 0.44", "-187.09, 113.966, -155.342, 0.44", "-187.732, 113.245, -155.795, 0.29", "-189.002, 111.777, -156.632, 0.52", "-189.602, 111.059, -156.978, 0.52", "-190.449, 110.044, -157.389, 0.37", "-191.384, 109.007, -157.722, 0.29", "-192.722, 107.684, -158.145, 0.44", "-193.329, 107.153, -158.321, 0.44", "-194.364, 106.403, -158.6, 0.22", "-195.234, 105.873, -158.845, 0.22", "-196.094, 105.453, -159.111, 0.52", "-196.418, 105.322, -159.218, 0.52", "-197.733, 104.881, -159.668, 0.29", "-199.352, 104.419, -160.273, 0.29", "-200.6, 104.131, -160.775, 0.22", "-202.228, 103.784, -161.452, 0.22", "-203.136, 103.59, -161.84, 0.59", "-204.071, 103.38, -162.234, 0.44", "-204.982, 103.174, -162.593, 0.22", "-205.541, 103.05, -162.779, 0.22", "-206.289, 102.888, -162.979, 0.37", "-206.948, 102.753, -163.108, 0.37", "-207.672, 102.614, -163.214, 0.22", "-208.635, 102.45, -163.341, 0.22", "-209.429, 102.342, -163.448, 0.37", "-210.099, 102.275, -163.532, 0.37", "-210.92, 102.2, -163.614, 0.37", "-211.729, 102.118, -163.684, 0.29", "-212.495, 102.045, -163.756, 0.37", "-214.43, 101.884, -163.95, 0.22", "-215.754, 101.779, -164.078, 0.22", "-217.588, 101.639, -164.24, 0.22", "-218.345, 101.582, -164.298, 0.22", "-219.141, 101.521, -164.346, 0.44", "-219.555, 101.483, -164.359, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-94.6648, 49.9519, 221.017, 0.88", "-97.2816, 52.797, 230.281, 0.88", "-99.661, 55.1088, 239.741, 0.88", "-103.358, 57.7657, 248.681, 0.88", "-107.317, 60.4206, 257.509, 0.88", "-110.967, 62.5482, 266.596, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-94.6648, 49.9519, 221.017, 0.22", "-97.2228, 52.8092, 230.294, 0.88", "-101.228, 56.228, 238.859, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-104.759, 16.8972, 223.551, 0.88", "-110.271, 14.2143, 231.494, 0.88", "-114.622, 11.8513, 240.212, 0.88" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-104.759, 16.8972, 223.551, 0.22", "-105.402, 19.0418, 233.319, 0.88", "-104.337, 21.1133, 243.064, 0.88" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-197.152, 125.53, 75.2338, 0.88", "-206.751, 124.949, 77.9835, 0.88", "-216.661, 124.958, 79.3161, 0.88", "-226.454, 126.118, 81.0155, 0.88" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-197.152, 125.53, 75.2338, 0.22", "-202.907, 134.094, 75.8317, 0.88", "-208.49, 142.76, 74.981, 0.88", "-213.292, 151.895, 73.8571, 0.88", "-217.266, 161.333, 72.0135, 0.88" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-67.0088, -202.569, 139.564, 0.88", "-67.7413, -209.46, 147.074, 0.88", "-69.0995, -216.602, 154.277, 0.88" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-67.0088, -202.569, 139.564, 0.22", "-67.5259, -209.535, 147.029, 0.88" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-116.017, -203.796, 93.115, 0.88", "-122.082, -211.814, 95.3256, 0.88", "-128.382, -219.862, 96.5781, 0.88" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-116.017, -203.796, 93.115, 0.22", "-122.609, -210.291, 97.389, 0.88", "-128.681, -218.007, 100.414, 0.88" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "2.18436, -68.6055, 5.45167, 0.66", "2.74534, -70.1642, 5.9183, 0.66", "3.15245, -71.2517, 6.16448, 0.52", "3.61442, -72.581, 6.41086, 1.18", "3.81588, -73.3112, 6.54325, 1.62", "3.95815, -74.0783, 6.67561, 1.33", "4.05174, -75.0717, 6.83642, 0.74", "4.11931, -76.2292, 6.93281, 0.44", "4.13955, -76.9524, 6.99975, 0.44", "4.10924, -77.9691, 7.12031, 0.44", "4.09398, -79.0054, 7.26244, 0.52", "4.14081, -80.0399, 7.42405, 0.66", "4.35379, -81.07, 7.60467, 0.44", "4.78347, -81.9049, 7.83419, 0.66", "5.08225, -82.325, 8.00584, 0.88", "5.59419, -82.9347, 8.29235, 0.88", "5.89752, -83.2704, 8.45587, 0.96", "6.26914, -83.6773, 8.65132, 0.66", "7.09174, -84.6477, 9.05693, 0.44", "7.92039, -85.7162, 9.39315, 0.52", "8.31262, -86.2367, 9.54072, 0.52", "8.96893, -87.0814, 9.78071, 0.74", "9.43785, -87.644, 9.93239, 0.96", "9.96757, -88.2116, 10.0681, 0.96", "10.8123, -88.9754, 10.2059, 0.59", "11.733, -89.6387, 10.359, 0.59", "12.7834, -90.3378, 10.5882, 0.88", "13.1407, -90.5789, 10.6806, 0.88", "13.6206, -90.9356, 10.8143, 0.88", "14.225, -91.4415, 10.9921, 0.74", "15.1355, -92.2951, 11.2348, 0.74", "15.9317, -93.1377, 11.3868, 0.74", "16.7308, -94.0848, 11.5046, 0.81", "17.2932, -94.8082, 11.5877, 0.96", "17.6883, -95.3637, 11.6371, 0.96", "18.1332, -96.0464, 11.6744, 0.88", "18.6355, -96.8967, 11.684, 0.88", "18.8053, -97.1836, 11.6851, 1.11", "19.3193, -98.0539, 11.6434, 0.74", "19.7191, -98.7153, 11.5828, 0.74", "20.129, -99.3783, 11.5236, 0.66", "20.7741, -100.479, 11.4416, 0.44", "21.2052, -101.269, 11.4071, 1.03", "21.7828, -102.412, 11.3954, 0.81", "22.2485, -103.386, 11.3955, 0.59", "22.7785, -104.553, 11.4184, 0.74", "23.1481, -105.417, 11.4369, 0.59", "23.4444, -106.184, 11.4914, 0.59", "23.8298, -107.365, 11.632, 0.44", "24.0634, -108.258, 11.7793, 0.37", "24.2962, -109.385, 11.9617, 0.74", "24.4469, -110.239, 12.0825, 0.88", "24.7205, -111.754, 12.3081, 0.88", "24.8406, -112.378, 12.4223, 0.74", "25.0866, -113.565, 12.6858, 0.66", "25.2893, -114.431, 12.9096, 0.74", "25.5966, -115.496, 13.2097, 0.74", "25.8437, -116.21, 13.4111, 0.74", "26.3505, -117.514, 13.7359, 0.52", "26.589, -118.101, 13.8672, 0.52", "26.9314, -119.006, 14.1123, 0.29", "27.1976, -119.758, 14.3449, 0.59", "27.3937, -120.317, 14.5279, 0.74", "27.6599, -121.097, 14.7888, 0.44", "27.9831, -122.066, 15.1146, 0.37", "28.5415, -123.784, 15.7497, 0.37", "28.7677, -124.524, 16.0584, 0.52", "28.9655, -125.234, 16.4098, 0.59", "29.1488, -126.006, 16.8466, 0.74", "29.2503, -126.552, 17.1863, 1.18", "29.3005, -126.937, 17.4266, 1.18", "29.3855, -128.052, 18.0615, 0.74", "29.3893, -129.366, 18.8039, 0.52", "29.3285, -130.405, 19.3656, 0.44", "29.1963, -131.678, 19.9966, 0.59", "29.0428, -132.722, 20.456, 0.44", "28.9258, -133.416, 20.7043, 0.44", "28.7493, -134.407, 20.9567, 0.59", "28.6362, -135.115, 21.0639, 0.59", "28.5569, -135.706, 21.1053, 0.59", "28.4165, -136.857, 21.0926, 0.66", "28.3331, -137.684, 21.0502, 0.59", "28.2705, -138.602, 20.9847, 0.52", "28.2465, -139.217, 20.9303, 0.66", "28.2266, -140.184, 20.8471, 0.66", "28.2142, -141.366, 20.7696, 0.52", "28.2046, -142.276, 20.7217, 0.74", "28.1829, -143.051, 20.6964, 0.88", "28.1271, -144.205, 20.6819, 0.96", "28.0494, -145.529, 20.6922, 0.88", "27.9948, -146.452, 20.7209, 0.88", "27.9385, -147.186, 20.7197, 0.81", "27.8274, -148.113, 20.6864, 0.66", "27.7154, -148.823, 20.6685, 0.66", "27.5955, -149.511, 20.6795, 0.44", "27.4399, -150.419, 20.7467, 0.44", "27.2272, -151.765, 20.9701, 0.44", "27.1078, -152.801, 21.2639, 0.44", "27.0471, -153.875, 21.7575, 0.66", "27.0671, -154.506, 22.1586, 0.81", "27.1528, -155.258, 22.7518, 0.96", "27.3386, -156.196, 23.5916, 0.66", "27.5576, -157.109, 24.4608, 0.59", "27.8171, -158.138, 25.4186, 0.96", "27.9947, -158.916, 26.0788, 0.96", "28.1223, -159.598, 26.5923, 0.96", "28.204, -160.285, 27.0175, 0.66", "28.2364, -161.11, 27.3918, 0.44", "28.1866, -161.892, 27.6287, 0.37", "28.1144, -162.493, 27.7254, 0.37", "27.9898, -163.414, 27.8039, 0.29", "27.8459, -164.431, 27.8452, 0.29", "27.704, -165.49, 27.865, 0.37", "27.5941, -166.472, 27.8721, 0.29", "27.4921, -167.541, 27.8934, 0.29", "27.3876, -168.618, 27.9301, 0.29", "27.2805, -169.741, 27.9816, 0.29", "27.2476, -170.212, 28.0077, 0.44", "27.2134, -170.98, 28.0556, 0.52", "27.18, -172.12, 28.1346, 0.37", "27.1421, -173.24, 28.2233, 1.03", "27.1328, -173.801, 28.2574, 1.03", "27.1586, -174.479, 28.2834, 0.74", "27.226, -175.325, 28.3057, 0.59", "27.2826, -175.815, 28.3214, 0.81", "27.3497, -176.431, 28.3445, 0.81", "27.4597, -177.594, 28.4587, 0.37", "27.4912, -178.444, 28.5914, 0.37", "27.4502, -179.102, 28.7449, 0.37", "27.2326, -180.063, 29.0648, 0.29", "26.976, -180.667, 29.3119, 0.44", "26.5454, -181.343, 29.6264, 0.59", "26.1552, -181.857, 29.8748, 0.74", "25.8713, -182.249, 30.0318, 0.74", "25.3417, -183.071, 30.2916, 0.22", "25.014, -183.796, 30.4441, 0.22", "24.8946, -184.381, 30.5174, 0.66", "24.9005, -185.218, 30.5611, 0.29", "25.0694, -186.249, 30.5965, 0.59", "25.1661, -186.617, 30.6022, 0.44", "25.4663, -187.375, 30.6032, 0.29", "25.6884, -187.807, 30.6042, 0.22", "26.197, -188.651, 30.6078, 0.22", "26.4954, -189.108, 30.6119, 0.22", "30.5504, -198.595, 32.0015, 0.22", "35.3871, -207.546, 33.9838, 0.22", "38.4003, -216.8, 37.6244, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.18436, -68.6055, 5.45167, 1.03", "2.76894, -69.5257, 4.59085, 1.03", "3.9576, -71.0218, 3.07141, 0.66", "4.56876, -71.6617, 2.39357, 0.66", "5.41753, -72.4534, 1.50365, 0.66", "6.66105, -73.5784, 0.355164, 1.11", "7.24719, -74.1065, -0.127162, 1.18", "7.97923, -74.7127, -0.597623, 0.96", "9.03006, -75.4832, -1.04264, 0.81", "10.9138, -76.712, -1.60983, 0.81", "12.337, -77.5448, -1.8603, 0.74", "13.4163, -78.1231, -1.90821, 0.96", "14.8126, -78.7833, -1.88833, 0.96", "15.3634, -78.9909, -1.87239, 0.96", "16.1802, -79.1851, -1.85077, 0.81", "17.1666, -79.2983, -1.84642, 0.81", "18.7328, -79.3784, -1.94097, 0.74", "19.9, -79.409, -2.07846, 0.96", "21.2908, -79.4788, -2.2806, 0.96", "22.5256, -79.6116, -2.45361, 0.74", "23.87, -79.851, -2.59156, 0.88", "24.949, -80.1194, -2.64775, 1.03", "26.1104, -80.5158, -2.61703, 1.03", "27.1961, -81.0243, -2.42361, 0.88", "27.9824, -81.5047, -2.18105, 0.66", "29.0108, -82.2412, -1.86077, 1.03", "29.6503, -82.7347, -1.68323, 1.03", "30.2649, -83.2151, -1.58154, 0.81", "31.6339, -84.299, -1.40403, 0.59", "32.536, -85.0002, -1.36264, 0.74", "33.902, -86.0317, -1.33333, 0.74", "34.6979, -86.6215, -1.32001, 0.88", "36.0198, -87.5824, -1.25366, 0.66", "37.1948, -88.4273, -1.15971, 0.96", "37.9678, -88.9812, -1.05654, 1.11", "38.697, -89.499, -0.893396, 1.11", "39.8795, -90.3046, -0.542392, 0.81", "41.0873, -91.0577, -0.147015, 0.74", "42.3256, -91.7485, 0.263092, 0.66", "43.7532, -92.4847, 0.654909, 0.88", "44.6415, -92.9626, 0.862295, 1.03", "45.5328, -93.5071, 1.01474, 1.03", "46.5965, -94.2823, 1.1337, 0.81", "47.285, -94.9222, 1.14768, 0.81", "48.1375, -95.9022, 1.0568, 0.81", "49.0452, -97.1516, 0.831141, 0.88", "49.8022, -98.2722, 0.626227, 1.03", "50.3654, -99.1482, 0.472932, 0.88", "51.1421, -100.296, 0.269808, 0.66", "51.7216, -101.024, 0.192217, 0.66", "52.4296, -101.672, 0.203235, 0.59", "53.5103, -102.336, 0.340583, 0.88", "53.9825, -102.559, 0.424342, 0.88", "55.0454, -103.024, 0.60195, 0.59", "55.8224, -103.388, 0.732867, 0.74", "56.5032, -103.758, 0.80592, 0.81", "57.4245, -104.333, 0.796072, 0.74", "58.3259, -104.962, 0.692182, 0.59", "59.6008, -105.926, 0.457455, 0.59", "60.2889, -106.481, 0.297655, 0.88", "60.9865, -107.074, 0.0995974, 1.03", "62.1459, -108.132, -0.270679, 0.66", "62.8922, -108.856, -0.534644, 0.59", "63.8221, -109.764, -0.883786, 2.06", "64.4611, -110.369, -1.1146, 2.73" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-19.5377, -69.0675, -3.73319, 1.25", "-20.5663, -68.9304, -3.81681, 1.25", "-21.7091, -68.9084, -3.91695, 0.66", "-22.2296, -68.9387, -3.96227, 0.66", "-22.9507, -69.0148, -4.03717, 0.81", "-23.6707, -69.1015, -4.12969, 0.81", "-24.5979, -69.1952, -4.24968, 0.44", "-25.177, -69.2806, -4.3484, 0.44", "-25.6822, -69.323, -4.43868, 0.59", "-26.0666, -69.302, -4.5211, 0.74", "-26.5987, -69.1952, -4.64575, 0.74", "-27.1631, -69.0573, -4.81557, 0.66", "-27.5545, -68.9703, -4.93893, 0.52", "-28.3339, -68.8479, -5.19512, 0.52", "-29.0526, -68.7898, -5.42594, 0.52", "-29.8827, -68.7733, -5.65657, 0.66", "-30.8334, -68.7964, -5.86628, 0.88", "-31.7166, -68.8366, -6.02676, 1.03", "-32.3427, -68.8611, -6.12294, 1.03", "-33.0609, -68.8633, -6.22432, 0.96", "-33.7184, -68.8232, -6.30429, 0.74", "-34.622, -68.7044, -6.41933, 0.59", "-35.149, -68.6223, -6.4844, 0.59", "-36.0322, -68.5097, -6.59412, 0.74", "-36.7954, -68.4374, -6.69833, 0.74", "-37.5936, -68.4002, -6.83808, 0.52", "-38.2685, -68.4188, -6.97476, 0.59", "-39.1369, -68.5405, -7.15738, 0.59", "-39.9246, -68.7147, -7.2992, 0.74", "-40.74, -68.9336, -7.41377, 0.74", "-41.4152, -69.1199, -7.48934, 0.74", "-42.3726, -69.3496, -7.58378, 0.74", "-43.3149, -69.5347, -7.66069, 0.74", "-44.3417, -69.7071, -7.72381, 0.88", "-44.8932, -69.7868, -7.75945, 0.88", "-45.8055, -69.9072, -7.86707, 0.96", "-46.8387, -70.0152, -8.03829, 0.96", "-47.7879, -70.0958, -8.23217, 0.66", "-48.4257, -70.174, -8.37453, 0.59", "-49.4312, -70.3875, -8.60868, 0.59", "-50.918, -70.827, -8.94684, 0.81", "-51.7293, -71.1277, -9.1354, 0.96", "-52.816, -71.5788, -9.379, 0.96", "-54.2499, -72.1965, -9.66673, 0.96", "-55.3298, -72.6553, -9.84143, 0.96", "-56.1559, -72.9909, -9.93234, 0.96", "-56.914, -73.2594, -9.98253, 0.81", "-57.705, -73.4764, -10.053, 0.88", "-58.5114, -73.6027, -10.1454, 0.88", "-59.2553, -73.6377, -10.2477, 0.66", "-59.8215, -73.6472, -10.3341, 0.66", "-60.3968, -73.6856, -10.4249, 0.59", "-60.984, -73.7946, -10.5083, 0.59", "-61.7464, -74.0586, -10.614, 0.81", "-62.3589, -74.3231, -10.6854, 0.81", "-63.2339, -74.705, -10.7831, 0.52", "-64.0634, -75.0235, -10.8739, 0.66", "-64.8441, -75.2612, -10.9598, 0.66", "-65.8522, -75.4542, -11.0596, 0.66", "-66.746, -75.5202, -11.1466, 0.88", "-67.698, -75.504, -11.2342, 0.88", "-68.503, -75.4463, -11.3036, 0.81", "-69.3711, -75.388, -11.4311, 0.88", "-70.3048, -75.361, -11.6521, 1.03", "-71.0211, -75.3821, -11.8772, 1.03", "-71.7739, -75.4714, -12.1935, 0.81", "-72.4282, -75.6149, -12.5187, 0.81", "-73.8357, -76.1432, -13.3839, 0.44", "-74.647, -76.574, -13.9832, 0.66", "-75.2123, -76.9479, -14.4455, 0.81", "-75.9516, -77.5018, -15.0975, 1.03", "-76.2747, -77.7572, -15.3855, 1.11", "-77.2036, -78.4226, -16.1313, 0.37", "-77.8605, -78.7886, -16.5449, 0.37", "-78.3551, -79.0198, -16.8083, 1.69", "-79.0294, -79.2879, -17.114, 2.06", "-79.4895, -79.4443, -17.275, 2.06", "-80.8434, -79.8621, -17.6569, 0.59", "-82.0176, -80.1757, -17.9073, 0.44", "-83.2638, -80.4686, -18.1271, 0.52", "-83.9322, -80.603, -18.2259, 0.74", "-84.8068, -80.7595, -18.3322, 0.88", "-85.712, -80.9144, -18.4274, 0.66", "-86.0155, -80.9639, -18.4396, 0.44", "-86.7157, -81.0545, -18.4346, 0.37", "-87.5006, -81.0951, -18.3882, 0.96", "-88.4422, -81.1036, -18.2645, 1.62", "-89.2594, -81.1171, -18.0962, 1.77", "-90.1917, -81.1557, -17.8623, 1.77", "-91.0489, -81.2246, -17.6284, 1.11", "-91.8415, -81.3077, -17.4011, 0.66", "-92.7537, -81.3937, -17.1495, 0.52", "-93.8382, -81.4587, -16.8185, 0.44", "-94.628, -81.48, -16.5953, 0.44", "-95.2172, -81.4876, -16.4537, 0.59", "-95.7377, -81.4977, -16.341, 0.59", "-96.4431, -81.528, -16.2158, 0.44", "-97.9519, -81.6268, -15.9765, 0.74", "-98.6832, -81.6802, -15.8571, 0.81", "-99.4842, -81.7512, -15.7385, 0.81", "-100.335, -81.837, -15.6468, 0.96", "-101.167, -81.9386, -15.6296, 1.11", "-101.873, -82.0299, -15.6738, 1.11", "-102.525, -82.1038, -15.7939, 0.81", "-103.536, -82.1951, -16.0372, 0.59", "-104.332, -82.2306, -16.262, 1.18", "-105.437, -82.2397, -16.6006, 1.47", "-106.008, -82.2374, -16.7762, 1.62", "-106.362, -82.2256, -16.8989, 1.62", "-106.954, -82.1798, -17.1083, 1.11", "-107.642, -82.0881, -17.3065, 0.66", "-108.35, -81.9296, -17.4542, 0.44", "-109.196, -81.6648, -17.5724, 0.37", "-110.128, -81.3128, -17.6846, 0.37", "-110.719, -81.0577, -17.7347, 0.37", "-111.545, -80.6617, -17.7736, 0.44", "-112.654, -80.126, -17.8276, 0.74", "-113.185, -79.8768, -17.8657, 1.18", "-113.651, -79.6696, -17.911, 1.33", "-114.216, -79.4368, -17.97, 1.33", "-114.908, -79.1337, -18.0724, 0.81", "-115.826, -78.6918, -18.227, 0.29", "-116.465, -78.367, -18.3301, 0.29", "-117.452, -77.843, -18.4768, 0.37", "-118.091, -77.4861, -18.5548, 0.44", "-119.012, -77.0052, -18.7515, 0.44", "-120.124, -76.47, -19.0405, 1.4", "-120.769, -76.1708, -19.2212, 1.92", "-121.048, -76.048, -19.3061, 2.28", "-121.662, -75.8057, -19.5182, 2.28", "-124.157, -74.8785, -20.4665, 0.29", "-124.587, -74.7198, -20.6478, 0.52", "-125.126, -74.5161, -20.8933, 0.52", "-125.725, -74.2876, -21.1511, 0.74", "-126.232, -74.0903, -21.3674, 0.74", "-126.906, -73.8375, -21.662, 0.44", "-127.648, -73.559, -21.9553, 0.37", "-128.292, -73.3369, -22.2552, 0.81", "-128.746, -73.1931, -22.492, 0.96", "-129.42, -72.9855, -22.8904, 0.96", "-130.234, -72.7534, -23.4204, 0.66", "-130.911, -72.5884, -23.8934, 0.29", "-131.67, -72.4179, -24.4064, 0.66", "-132.152, -72.3079, -24.7115, 0.66", "-133.167, -72.08, -25.2831, 0.52", "-133.838, -71.9154, -25.593, 0.74", "-135.255, -71.5486, -26.1632, 0.88", "-135.931, -71.3596, -26.4355, 1.11", "-136.411, -71.2182, -26.6284, 1.33", "-137.229, -70.938, -26.9451, 0.44", "-138.089, -70.5723, -27.2484, 0.44", "-138.862, -70.1676, -27.5181, 0.29", "-140.01, -69.4632, -28.0029, 0.96", "-140.511, -69.1455, -28.268, 1.18", "-141.13, -68.7466, -28.6335, 2.21", "-141.487, -68.517, -28.8581, 2.43", "-142.19, -68.0826, -29.3315, 2.43", "-143.188, -67.53, -29.9879, 2.21", "-144.462, -66.9456, -30.7705, 0.29", "-145.157, -66.6831, -31.1685, 0.44", "-145.61, -66.5346, -31.3967, 0.52", "-147.226, -66.0459, -32.129, 0.29", "-148.053, -65.8125, -32.4572, 0.29", "-148.747, -65.6297, -32.6809, 0.29", "-149.571, -65.4355, -32.9275, 0.29", "-150.761, -65.1669, -33.2591, 0.96", "-151.297, -65.0385, -33.3904, 1.47", "-151.8, -64.9042, -33.4869, 1.47", "-152.966, -64.496, -33.715, 0.29", "-153.43, -64.3013, -33.8094, 0.29", "-154.212, -63.9197, -33.9969, 0.74", "-154.617, -63.7023, -34.1016, 0.81", "-154.879, -63.5464, -34.1654, 0.81", "-155.314, -63.2537, -34.2736, 0.29", "-155.682, -62.9724, -34.3778, 0.22", "-156.509, -62.3084, -34.6567, 0.22", "-157.437, -61.5783, -35.0009, 0.22", "-158.087, -61.0927, -35.2316, 0.88", "-158.631, -60.6977, -35.4111, 1.11", "-158.864, -60.5334, -35.4802, 1.4", "-159.376, -60.1797, -35.6039, 1.4", "-159.897, -59.8302, -35.687, 0.96", "-160.978, -59.1613, -35.8145, 0.29", "-161.448, -58.8888, -35.8519, 0.59", "-161.764, -58.7065, -35.8652, 0.59", "-162.21, -58.4479, -35.8716, 0.37", "-163.503, -57.6892, -35.8583, 0.22", "-164.299, -57.2167, -35.8507, 0.22", "-164.839, -56.8929, -35.8463, 0.22", "-165.917, -56.2203, -35.8398, 1.25", "-166.449, -55.8648, -35.838, 1.69", "-166.837, -55.5856, -35.838, 1.92", "-167.346, -55.1868, -35.838, 1.62", "-168.214, -54.4996, -35.838, 0.81", "-168.767, -54.0609, -35.838, 0.81", "-169.735, -53.3155, -35.8004, 0.37", "-170.403, -52.815, -35.756, 0.37", "-170.801, -52.5341, -35.7216, 0.37", "-171.629, -51.9859, -35.6358, 0.29", "-172.46, -51.4562, -35.5363, 0.29", "-173.499, -50.8007, -35.3688, 0.29", "-174.007, -50.4805, -35.2625, 0.44", "-174.369, -50.2466, -35.1749, 0.44", "-174.844, -49.9324, -35.0528, 0.29", "-175.871, -49.2595, -34.7826, 1.4", "-176.592, -48.8424, -34.604, 1.77", "-176.907, -48.6798, -34.5367, 1.77", "-177.744, -48.2786, -34.3737, 0.66", "-178.375, -47.984, -34.2658, 0.66", "-178.979, -47.7158, -34.1718, 0.81", "-179.693, -47.4163, -34.109, 0.81", "-180.625, -47.0062, -34.1026, 0.37", "-181.8, -46.4373, -34.1523, 0.29", "-182.465, -46.0947, -34.2078, 0.29", "-183.183, -45.7036, -34.2911, 1.11", "-184.128, -45.1443, -34.4342, 1.77", "-184.856, -44.6829, -34.5777, 0.88", "-185.772, -44.0896, -34.7829, 0.29", "-187.162, -43.205, -35.1075, 0.29", "-187.893, -42.753, -35.2735, 0.66", "-188.445, -42.4305, -35.3884, 0.88", "-189.585, -41.7802, -35.6011, 0.29", "-190.334, -41.3624, -35.7436, 0.29", "-190.985, -41.0179, -35.8752, 0.66", "-191.531, -40.7323, -36.0141, 0.66", "-192.297, -40.3424, -36.234, 0.29", "-192.976, -40.0116, -36.4395, 0.88", "-193.422, -39.7885, -36.5803, 0.88", "-194.294, -39.3069, -36.8665, 0.29", "-195.281, -38.6543, -37.1209, 0.59", "-195.574, -38.4044, -37.1705, 0.59", "-195.978, -37.9972, -37.1956, 0.59", "-196.597, -37.3304, -37.1621, 0.37", "-197.255, -36.5602, -37.0666, 0.29", "-198.156, -35.4295, -36.8598, 0.29", "-198.975, -34.3434, -36.6136, 1.25", "-199.471, -33.6403, -36.4682, 1.4", "-199.784, -33.1704, -36.3857, 1.4", "-200.185, -32.5481, -36.2995, 1.03", "-200.673, -31.7886, -36.2299, 0.29", "-201.292, -30.8057, -36.2011, 0.29", "-201.816, -29.9178, -36.1924, 0.29", "-202.459, -28.7134, -36.2045, 1.11", "-202.691, -28.2665, -36.2142, 1.55", "-203.103, -27.4545, -36.2355, 0.66", "-203.754, -26.147, -36.2656, 0.29", "-204.626, -24.443, -36.3008, 0.29", "-205.166, -23.3977, -36.3183, 0.29", "-205.81, -22.1347, -36.3356, 0.44", "-206.167, -21.4294, -36.3423, 0.44", "-206.555, -20.6606, -36.3499, 0.59", "-207.079, -19.6194, -36.3605, 0.29", "-207.464, -18.8081, -36.3654, 0.29", "-207.789, -18.0293, -36.3721, 0.44", "-208.065, -17.2271, -36.3895, 0.29", "-208.344, -16.4154, -36.4149, 0.59", "-208.691, -15.4746, -36.4521, 1.03", "-208.893, -14.9777, -36.4757, 1.03", "-209.463, -13.7949, -36.5416, 0.22", "-210.086, -12.7474, -36.6094, 0.22", "-210.675, -11.8665, -36.6745, 0.22", "-211.163, -11.2467, -36.7271, 0.29", "-211.489, -10.9235, -36.7582, 0.29", "-211.917, -10.6171, -36.7887, 0.52", "-212.196, -10.5238, -36.7955, 0.52" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-19.5377, -69.0675, -3.73319, 0.88", "-20.321, -70.5177, -4.01733, 0.88", "-20.9153, -71.7126, -4.26054, 0.88", "-21.4508, -72.8686, -4.53491, 0.88", "-21.9102, -73.9214, -4.79324, 1.03", "-22.3408, -74.973, -5.05413, 1.03", "-22.7406, -75.9737, -5.29978, 0.96", "-23.1866, -77.121, -5.63929, 0.96", "-23.5174, -77.9978, -5.89828, 1.11", "-23.8125, -78.7421, -6.10639, 1.11", "-24.2044, -79.611, -6.33317, 1.18", "-24.8266, -80.7843, -6.62722, 1.18", "-25.492, -81.9608, -6.9261, 1.11", "-25.9182, -82.6391, -7.10325, 1.25", "-26.5864, -83.6131, -7.34153, 1.25", "-27.2431, -84.481, -7.57137, 1.47", "-27.9026, -85.2543, -7.78445, 1.69" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "164.951, 161.957, -62.479, 0.88", "165.411, 161.102, -62.353, 0.88", "165.649, 160.68, -62.301, 1.11", "165.885, 160.342, -62.2738, 1.25", "166.331, 159.726, -62.2376, 1.03", "166.935, 158.91, -62.1913, 0.15", "167.275, 158.455, -62.1649, 0.37", "167.442, 158.234, -62.1611, 0.37", "168.439, 156.914, -62.1207, 0.15", "168.762, 156.475, -62.1024, 0.29", "169.126, 155.969, -62.072, 0.15", "169.462, 155.455, -62.0246, 0.15", "169.739, 154.983, -61.9669, 0.15", "169.956, 154.573, -61.8849, 0.22", "170.144, 154.177, -61.7797, 0.22", "170.382, 153.699, -61.6388, 0.29", "170.682, 153.114, -61.4681, 0.29", "171.215, 152.092, -61.1453, 0.15", "171.876, 150.791, -60.7444, 0.59", "172.055, 150.428, -60.6371, 0.88", "172.265, 150.0, -60.5167, 0.88", "172.88, 148.722, -60.1861, 0.22", "173.342, 147.716, -59.9152, 0.22", "173.904, 146.435, -59.527, 0.22", "174.166, 145.818, -59.3268, 0.59", "174.327, 145.428, -59.1914, 0.74", "174.492, 145.006, -59.0387, 0.52", "174.953, 143.861, -58.6327, 0.22", "175.412, 142.758, -58.2885, 1.33", "175.569, 142.38, -58.1807, 1.4", "176.04, 141.171, -57.9042, 0.22", "176.317, 140.479, -57.7727, 0.15", "176.82, 139.192, -57.5245, 0.15", "177.12, 138.334, -57.3804, 0.29", "177.34, 137.602, -57.2616, 0.29", "177.676, 136.358, -57.0421, 0.15", "177.933, 135.311, -56.8408, 0.15", "178.39, 133.266, -56.4327, 0.15", "178.747, 131.397, -56.0647, 0.15", "179.157, 129.102, -55.6337, 0.15", "179.305, 128.172, -55.4759, 0.22", "179.354, 127.788, -55.4211, 0.96", "179.407, 127.189, -55.3618, 1.18", "179.527, 125.731, -55.3022, 0.15", "179.599, 125.031, -55.275, 0.29", "179.724, 123.999, -55.2726, 0.15", "179.813, 123.387, -55.2886, 0.29", "179.883, 122.936, -55.3021, 0.29", "180.134, 121.429, -55.3566, 0.15", "180.378, 120.165, -55.4159, 0.15", "180.581, 119.233, -55.4697, 0.52", "180.676, 118.902, -55.4945, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "164.951, 161.957, -62.479, 0.22", "166.642, 162.073, -62.4239, 0.22", "167.668, 162.129, -62.3151, 0.52", "167.874, 162.14, -62.2884, 0.52", "169.628, 162.23, -62.0438, 0.22", "170.207, 162.269, -61.9656, 0.59", "170.721, 162.307, -61.8982, 0.59", "172.889, 162.408, -61.6093, 0.22", "173.239, 162.428, -61.563, 0.44", "173.459, 162.443, -61.5358, 0.44", "175.148, 162.569, -61.3409, 0.15", "175.448, 162.583, -61.3128, 0.37", "175.785, 162.591, -61.2848, 0.37", "177.038, 162.573, -61.221, 0.15", "177.729, 162.544, -61.1729, 0.15", "178.102, 162.513, -61.1405, 0.29", "178.458, 162.459, -61.1019, 0.29", "179.321, 162.245, -60.9844, 0.22", "179.544, 162.174, -60.9523, 0.44", "180.506, 161.788, -60.8114, 0.22", "180.836, 161.643, -60.7658, 0.44", "181.179, 161.487, -60.7202, 0.44", "183.05, 160.59, -60.4915, 0.22", "184.232, 159.972, -60.3724, 0.22", "184.845, 159.635, -60.3062, 0.37", "185.166, 159.443, -60.268, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-105.695, 156.431, 165.083, 0.88", "-107.303, 159.647, 174.466, 0.88", "-108.94, 163.885, 183.468, 0.88" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-105.695, 156.431, 165.083, 0.22", "-106.533, 160.452, 174.283, 0.88", "-106.448, 162.773, 184.035, 0.88", "-105.528, 163.224, 193.983, 0.88", "-104.41, 162.214, 203.874, 0.88", "-102.268, 162.202, 213.642, 0.88", "-99.1315, 163.472, 223.06, 0.88", "-97.0561, 165.147, 232.712, 0.88" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "64.4611, -110.369, -1.1146, 1.11", "66.2297, -110.286, -1.52474, 1.11", "67.3173, -110.297, -1.764, 0.96", "68.4611, -110.376, -2.00301, 0.81", "69.1893, -110.497, -2.14635, 0.81", "70.4315, -110.803, -2.37198, 0.81", "71.2161, -111.007, -2.50449, 1.03", "71.9513, -111.247, -2.60256, 1.03", "72.514, -111.432, -2.70251, 1.03", "73.6499, -111.734, -2.99243, 0.59", "74.3821, -111.78, -3.30217, 0.59", "75.0971, -111.706, -3.71379, 0.81", "75.7461, -111.598, -4.20072, 0.81", "76.5021, -111.492, -4.8434, 0.66", "77.2401, -111.451, -5.51303, 0.66", "78.1992, -111.616, -6.42834, 0.74", "79.0193, -112.075, -7.12662, 0.88", "79.6788, -112.663, -7.58842, 0.88", "80.2574, -113.284, -7.91582, 0.81", "80.8014, -113.902, -8.18253, 0.81", "81.8608, -115.1, -8.62166, 0.59", "82.91, -116.226, -9.01007, 0.52", "83.727, -117.004, -9.31825, 0.66", "84.3278, -117.505, -9.54698, 0.66", "85.1474, -118.116, -9.87353, 0.81", "85.6758, -118.487, -10.1069, 0.81", "86.5974, -119.103, -10.556, 0.66", "87.2219, -119.559, -10.9216, 0.81", "87.9337, -120.135, -11.3254, 0.81", "88.6793, -120.775, -11.723, 0.88", "89.3742, -121.398, -12.0665, 0.88", "90.0386, -121.979, -12.3737, 0.52", "90.9892, -122.82, -12.8532, 0.88", "91.6389, -123.444, -13.2417, 0.88", "92.1296, -123.984, -13.5899, 1.03", "92.6437, -124.678, -14.031, 0.81", "93.014, -125.266, -14.3798, 0.59", "93.8209, -126.718, -15.1485, 0.59", "94.2594, -127.584, -15.5372, 0.59", "94.5983, -128.263, -15.8274, 0.66", "95.103, -129.154, -16.1267, 0.37", "95.4871, -129.701, -16.2797, 0.37", "96.1693, -130.477, -16.5904, 0.66", "96.5972, -130.876, -16.7707, 0.81", "97.1266, -131.327, -17.0669, 0.81", "97.8298, -131.873, -17.5816, 0.44", "98.75, -132.662, -18.6327, 1.33", "99.8009, -133.661, -20.1103, 1.92", "100.087, -133.941, -20.5553, 1.84", "100.888, -134.682, -21.8294, 0.81", "101.428, -135.12, -22.6661, 0.88", "103.105, -136.205, -25.1394, 0.52", "103.544, -136.405, -25.7008, 0.52", "104.091, -136.566, -26.2827, 0.52", "104.744, -136.672, -26.8476, 0.52", "105.494, -136.705, -27.3305, 1.18", "106.363, -136.682, -27.7272, 1.69", "106.926, -136.616, -27.8985, 1.92", "107.41, -136.553, -28.0633, 1.69", "108.559, -136.45, -28.4497, 0.81", "109.787, -136.371, -28.8479, 0.52", "110.495, -136.333, -29.0634, 0.81", "110.989, -136.308, -29.2073, 0.81", "112.558, -136.22, -29.6893, 0.37", "113.921, -136.12, -30.107, 0.29", "114.934, -136.004, -30.4601, 0.52", "115.771, -135.862, -30.758, 0.88", "116.176, -135.761, -30.9233, 1.18", "116.526, -135.635, -31.0993, 1.4", "117.291, -135.242, -31.5637, 0.88", "118.511, -134.463, -32.4243, 0.44", "119.024, -134.111, -32.803, 0.44", "119.7, -133.645, -33.299, 1.18", "120.622, -133.06, -33.8905, 1.4", "121.175, -132.751, -34.2032, 1.4", "121.728, -132.487, -34.4775, 1.18", "122.046, -132.357, -34.6026, 1.18", "123.376, -131.891, -35.0676, 0.29", "124.47, -131.537, -35.3698, 0.29", "125.419, -131.221, -35.5855, 0.29", "126.143, -130.959, -35.7426, 0.44", "126.8, -130.686, -35.8785, 0.37", "127.213, -130.497, -35.9526, 0.37", "128.341, -129.925, -36.1027, 1.33", "128.859, -129.612, -36.1647, 1.77", "129.509, -129.184, -36.2235, 1.55", "130.196, -128.719, -36.2715, 0.74", "130.885, -128.257, -36.315, 0.52", "131.595, -127.794, -36.3771, 0.29", "132.166, -127.431, -36.4321, 0.29", "132.682, -127.114, -36.4797, 0.66", "133.3, -126.735, -36.5446, 0.66", "134.137, -126.244, -36.6639, 0.29", "135.164, -125.673, -36.8347, 0.29", "135.95, -125.254, -36.9746, 0.29", "136.507, -124.972, -37.0719, 0.44", "137.323, -124.538, -37.2398, 1.33", "138.346, -123.968, -37.4677, 2.36", "138.665, -123.787, -37.5412, 2.36", "139.3, -123.421, -37.6714, 2.06", "140.202, -122.925, -37.8491, 0.66", "141.117, -122.42, -38.0162, 0.29", "141.77, -122.048, -38.1167, 0.29", "142.674, -121.503, -38.2151, 0.52", "143.252, -121.149, -38.2655, 0.66", "143.892, -120.756, -38.2956, 0.29", "144.202, -120.555, -38.2932, 0.29", "144.944, -120.043, -38.2228, 0.88", "145.398, -119.702, -38.1658, 1.03", "146.079, -119.155, -38.0658, 1.03", "146.557, -118.785, -38.0025, 0.74", "146.952, -118.507, -37.9492, 0.44", "147.559, -118.145, -37.8711, 0.37", "148.194, -117.836, -37.8235, 0.37", "148.811, -117.564, -37.8232, 0.59", "149.488, -117.257, -37.8658, 0.81", "149.88, -117.053, -37.912, 0.81", "150.218, -116.835, -37.965, 0.81", "151.143, -116.099, -38.1414, 0.37", "151.927, -115.34, -38.2934, 0.37", "152.476, -114.715, -38.3951, 0.74", "153.067, -113.978, -38.4973, 1.11", "153.694, -113.168, -38.5877, 0.66", "154.124, -112.608, -38.6327, 0.66", "154.627, -111.974, -38.6569, 0.81", "155.118, -111.409, -38.6583, 1.03", "155.666, -110.826, -38.6485, 0.88", "156.277, -110.19, -38.6266, 0.66", "156.796, -109.622, -38.5987, 0.29", "157.374, -108.955, -38.5475, 0.22", "157.882, -108.349, -38.485, 0.37", "158.235, -107.901, -38.4221, 0.37", "158.742, -107.238, -38.3173, 0.37", "159.187, -106.681, -38.2259, 0.81", "159.624, -106.137, -38.1437, 0.81", "160.19, -105.426, -38.0531, 0.88", "160.897, -104.546, -37.9672, 0.29", "161.394, -103.93, -37.9147, 0.29", "161.837, -103.392, -37.897, 0.37", "162.628, -102.429, -37.9028, 0.52", "163.171, -101.742, -37.9319, 0.66", "163.565, -101.226, -37.9645, 0.59", "164.077, -100.556, -38.0246, 1.62", "164.8, -99.5595, -38.1142, 1.99", "165.471, -98.6266, -38.2098, 1.69", "165.952, -98.0496, -38.2859, 1.77" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "64.4611, -110.369, -1.1146, 0.74", "65.0083, -112.501, -0.825179, 0.74", "65.3739, -113.756, -0.660768, 0.74", "65.7903, -115.016, -0.508709, 0.74", "66.2292, -116.205, -0.377057, 0.74", "66.779, -117.537, -0.222096, 0.74", "67.1202, -118.313, -0.131689, 0.88", "67.5179, -119.06, -0.0546743, 0.88", "68.1434, -120.153, 0.0589452, 0.59", "68.6226, -121.003, 0.139417, 0.37", "69.1769, -122.023, 0.218273, 0.37", "69.6091, -122.847, 0.263373, 0.59", "70.0337, -123.709, 0.307628, 0.66", "70.4578, -124.71, 0.349947, 0.66", "70.8141, -125.728, 0.380589, 0.81", "71.0036, -126.393, 0.391107, 0.81", "71.1584, -127.082, 0.391107, 0.52", "71.2774, -127.695, 0.383148, 0.52", "71.5382, -129.272, 0.350608, 0.74", "71.7075, -130.415, 0.347227, 0.96", "71.8429, -131.4, 0.371194, 0.96", "71.9451, -132.2, 0.412434, 0.96", "72.0446, -133.186, 0.486459, 0.66", "72.0752, -133.795, 0.547563, 0.66", "72.0444, -134.74, 0.672964, 1.11", "71.9587, -135.358, 0.763604, 1.11", "71.7177, -136.312, 0.907093, 0.81", "71.3296, -137.438, 1.06489, 0.44", "70.8883, -138.487, 1.1943, 0.44", "70.5542, -139.224, 1.25594, 0.44", "70.1394, -140.112, 1.29013, 0.66", "69.8004, -140.859, 1.30267, 0.44", "69.3684, -141.825, 1.31353, 0.81", "69.0931, -142.491, 1.32486, 0.96", "68.8368, -143.21, 1.34079, 0.52", "68.6064, -143.961, 1.34708, 0.44", "68.292, -145.087, 1.31959, 0.37", "68.0597, -145.971, 1.27431, 0.37", "67.806, -146.942, 1.2177, 0.52", "67.5067, -148.151, 1.14243, 0.59", "67.2355, -149.315, 1.0651, 0.59", "67.0207, -150.4, 0.988898, 0.66", "66.8514, -151.58, 0.902603, 0.74", "66.7838, -152.384, 0.85628, 0.59", "66.745, -153.22, 0.831021, 0.44", "66.7349, -153.537, 0.843326, 0.74", "66.7325, -154.087, 0.909879, 0.74", "66.7594, -154.755, 1.02339, 0.44", "66.8463, -155.751, 1.19413, 0.29", "66.9548, -156.494, 1.31088, 0.37", "67.0792, -157.17, 1.41351, 0.59", "67.2684, -158.091, 1.54182, 0.59", "67.4699, -159.027, 1.61103, 0.74", "67.5809, -159.531, 1.64276, 0.81", "67.7844, -160.475, 1.66458, 0.66", "67.902, -161.077, 1.66129, 0.66", "67.9843, -161.562, 1.64764, 0.66", "68.1539, -162.868, 1.60869, 0.59", "68.2679, -164.224, 1.56776, 0.66", "68.3112, -165.213, 1.53976, 0.74", "68.3119, -166.137, 1.51826, 0.74", "68.3136, -166.701, 1.51217, 0.74" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-27.9026, -85.2543, -7.78445, 0.81", "-27.2179, -86.4643, -8.9741, 0.81", "-26.9769, -87.1165, -9.43959, 0.74", "-26.7471, -87.8907, -9.82696, 0.59", "-26.5864, -88.4295, -10.0228, 0.59", "-26.329, -89.3279, -10.2764, 0.74", "-26.0547, -90.444, -10.5533, 0.66", "-25.8681, -91.5483, -10.7161, 0.66", "-25.7111, -92.5607, -10.8838, 0.74", "-25.5133, -93.6602, -11.0597, 0.74", "-25.3558, -94.394, -11.2028, 0.81", "-24.9771, -95.8574, -11.5341, 0.96", "-24.7936, -96.5291, -11.7183, 1.18", "-24.3643, -98.2344, -12.2312, 0.52", "-24.111, -99.334, -12.6158, 0.74", "-23.8664, -100.313, -13.0426, 0.88", "-23.6073, -101.147, -13.5195, 0.59", "-23.3303, -101.906, -14.0269, 0.59", "-23.062, -102.631, -14.5506, 1.18", "-22.7883, -103.461, -15.1391, 1.18", "-22.2899, -105.118, -16.2911, 0.59", "-21.921, -106.411, -17.13, 0.74", "-21.7421, -107.139, -17.63, 0.88", "-21.5591, -108.156, -18.3345, 0.66", "-21.4913, -109.177, -18.9999, 0.88", "-21.5518, -109.844, -19.3681, 1.03", "-21.7612, -110.616, -19.7316, 0.74", "-22.3855, -112.265, -20.5261, 0.44", "-22.6054, -112.821, -20.8529, 0.44", "-22.8264, -113.444, -21.2595, 0.81", "-22.9931, -114.244, -21.7913, 1.18", "-22.9943, -114.944, -22.2175, 1.18", "-22.7717, -115.877, -22.7241, 0.81", "-22.161, -117.278, -23.3587, 0.52", "-21.7329, -118.031, -23.6762, 0.88", "-20.9993, -119.113, -24.1236, 1.03", "-20.4135, -119.888, -24.4189, 1.03", "-19.8303, -120.637, -24.6675, 1.25", "-19.4822, -121.105, -24.7997, 1.92", "-19.0628, -121.741, -24.9697, 1.55", "-18.2898, -123.206, -25.3213, 0.52", "-18.0639, -123.81, -25.4692, 0.44", "-17.7962, -124.75, -25.7316, 0.37", "-17.6859, -125.226, -25.8785, 0.52", "-17.5696, -125.763, -26.0676, 0.52", "-17.3222, -126.94, -26.5157, 0.44", "-17.0519, -128.221, -26.9983, 0.96", "-16.7679, -129.514, -27.4342, 1.69", "-16.5516, -130.453, -27.7453, 1.92", "-16.3114, -131.478, -28.0609, 1.92", "-16.0925, -132.53, -28.3638, 1.92", "-15.9152, -133.544, -28.6388, 1.62", "-15.7159, -135.096, -28.9409, 0.37", "-15.5577, -137.07, -29.2147, 0.29", "-15.5309, -137.612, -29.2787, 0.29", "-15.507, -138.307, -29.3544, 0.29", "-15.4843, -138.693, -29.3969, 0.29", "-15.4025, -139.74, -29.5896, 0.88", "-15.3537, -140.344, -29.7472, 1.11", "-15.3188, -140.777, -29.8641, 1.11", "-15.2589, -141.699, -30.1528, 0.29", "-15.2284, -142.56, -30.4279, 0.29", "-15.2596, -143.853, -30.845, 0.44", "-15.3229, -144.595, -31.1013, 0.66", "-15.3961, -145.143, -31.2929, 0.66", "-15.5714, -146.076, -31.6133, 0.37", "-15.858, -147.285, -32.0092, 0.37", "-16.115, -148.428, -32.3383, 0.59", "-16.2929, -149.445, -32.58, 1.03", "-16.3584, -149.949, -32.6928, 1.03", "-16.4468, -150.908, -32.89, 0.74", "-16.4924, -151.88, -33.1031, 0.29", "-16.4914, -152.922, -33.3546, 0.29", "-16.4447, -154.051, -33.619, 1.25", "-16.3909, -154.801, -33.7816, 2.06", "-16.3443, -155.326, -33.8937, 2.06", "-16.2477, -156.464, -34.1282, 1.4", "-16.1953, -157.685, -34.3684, 0.81", "-16.2194, -158.589, -34.5388, 0.44", "-16.2572, -159.342, -34.6646, 0.59", "-16.2855, -160.04, -34.768, 0.59", "-16.2886, -160.932, -34.8755, 0.59", "-16.2279, -161.953, -34.9525, 0.44", "-16.1144, -162.803, -35.0001, 0.29", "-15.9879, -163.522, -35.0609, 0.74", "-15.837, -164.275, -35.1489, 0.74", "-15.6303, -165.158, -35.296, 0.52", "-15.4398, -165.829, -35.4354, 0.52", "-15.2391, -166.466, -35.5807, 0.44", "-14.9593, -167.413, -35.7946, 0.44", "-14.7892, -168.189, -35.9677, 0.37", "-14.6638, -169.007, -36.1612, 0.37", "-14.5951, -169.54, -36.2867, 0.59", "-14.4447, -170.548, -36.5141, 0.59", "-14.3216, -171.13, -36.6536, 0.59", "-14.0719, -172.018, -36.8592, 0.37", "-13.7213, -173.083, -37.1072, 0.29", "-13.4911, -173.729, -37.2585, 1.18", "-13.2759, -174.288, -37.4449, 1.4", "-13.0023, -174.98, -37.7252, 1.4", "-12.8091, -175.46, -37.9326, 1.4", "-12.5564, -176.039, -38.1929, 0.88", "-12.2861, -176.617, -38.436, 0.66", "-11.5607, -178.142, -39.0355, 0.37", "-11.1172, -179.074, -39.3567, 0.29", "-10.8576, -179.615, -39.5086, 0.29", "-10.6368, -180.053, -39.6148, 0.29", "-10.137, -181.003, -39.789, 1.03", "-9.80125, -181.566, -39.8439, 1.47", "-9.47958, -182.038, -39.8439, 1.62", "-9.10835, -182.561, -39.8417, 1.33", "-8.73225, -183.124, -39.8378, 0.81", "-8.36258, -183.745, -39.8345, 0.44", "-7.80353, -184.793, -39.8374, 0.29", "-7.42719, -185.59, -39.8451, 0.88", "-7.06188, -186.497, -39.8587, 0.96", "-6.83711, -187.148, -39.8798, 1.25", "-6.6744, -187.736, -39.9039, 1.4", "-6.56232, -188.29, -39.9298, 1.4", "-6.46054, -189.134, -39.972, 1.03", "-6.39585, -190.202, -40.0412, 0.29", "-6.39401, -191.595, -40.1458, 0.29", "-6.45504, -192.531, -40.2175, 0.29", "-6.52786, -193.133, -40.2622, 0.44", "-6.68283, -193.935, -40.3181, 0.44", "-6.90556, -194.742, -40.3953, 0.52", "-7.20979, -195.602, -40.5, 0.44", "-7.48941, -196.311, -40.6105, 0.29", "-7.6643, -196.743, -40.6945, 0.44", "-7.97782, -197.551, -40.8644, 0.44", "-8.4136, -198.759, -41.173, 1.55", "-8.69964, -199.693, -41.4322, 2.43", "-8.84085, -200.258, -41.6025, 2.73", "-8.92717, -200.704, -41.7383, 2.43", "-9.07535, -201.715, -42.0317, 1.69", "-9.26151, -203.363, -42.4741, 0.52", "-9.31291, -203.889, -42.593, 0.52", "-9.36145, -204.341, -42.6813, 0.88", "-9.48096, -205.163, -42.8511, 0.59", "-9.58026, -205.844, -43.0, 0.59", "-9.73823, -206.811, -43.222, 0.66", "-9.81957, -207.302, -43.3319, 0.66", "-9.90418, -207.884, -43.4792, 0.52", "-10.0376, -209.096, -43.8358, 0.29", "-10.0881, -209.924, -44.0969, 0.29", "-10.0896, -210.126, -44.16, 0.59", "-10.0664, -210.792, -44.3507, 0.59", "-10.0419, -211.458, -44.5168, 0.29", "-10.0321, -212.526, -44.7571, 0.29", "-10.0202, -213.303, -44.8882, 0.74", "-10.042, -213.797, -44.9994, 0.74", "-10.1004, -214.396, -45.1503, 0.74", "-10.2065, -215.009, -45.3137, 0.59", "-10.4146, -216.0, -45.5813, 0.29", "-10.6951, -217.329, -45.9325, 0.29", "-10.9784, -218.659, -46.2855, 0.37", "-11.0788, -219.135, -46.4058, 0.37", "-11.2346, -219.923, -46.5834, 0.29", "-11.3947, -220.815, -46.7587, 0.44", "-11.4565, -221.217, -46.8143, 0.59", "-11.5201, -221.773, -46.8649, 0.44", "-11.5117, -222.361, -46.8925, 0.37", "-11.4572, -223.046, -46.937, 0.37", "-11.3801, -223.646, -46.9842, 0.52", "-11.2956, -224.242, -47.0525, 0.74", "-11.1676, -225.096, -47.2078, 0.29", "-10.9853, -226.251, -47.4752, 1.11", "-10.9174, -226.691, -47.5904, 1.33", "-10.8579, -227.134, -47.7157, 1.33", "-10.799, -227.859, -47.9281, 1.03", "-10.7989, -228.906, -48.2571, 0.59", "-10.8699, -229.492, -48.4473, 0.37", "-11.0334, -230.122, -48.6396, 0.59", "-11.1311, -230.418, -48.7317, 0.59", "-11.3758, -231.03, -48.9116, 0.29", "-11.6381, -231.591, -49.0465, 0.29", "-11.856, -232.061, -49.1346, 0.29", "-12.0171, -232.51, -49.2804, 0.29", "-12.2802, -233.318, -49.6251, 0.88", "-12.3503, -233.564, -49.7373, 1.18", "-12.4153, -233.831, -49.8676, 1.18", "-12.5687, -234.493, -50.2007, 0.74", "-12.8705, -235.848, -50.9025, 0.29", "-13.0156, -236.475, -51.2175, 0.29", "-13.2138, -237.263, -51.5859, 0.29", "-13.455, -238.172, -51.9991, 0.96", "-13.5927, -238.661, -52.2067, 1.11", "-13.8293, -239.493, -52.5135, 0.74", "-14.0009, -240.219, -52.7285, 0.59", "-14.0677, -240.587, -52.8267, 0.81", "-14.2044, -241.387, -53.0191, 0.81", "-14.3276, -242.073, -53.1582, 0.44", "-14.513, -243.012, -53.3497, 0.29", "-14.7362, -243.984, -53.5723, 0.29", "-15.0231, -245.174, -53.8789, 1.62", "-15.1331, -245.695, -54.0155, 1.84", "-15.2001, -246.169, -54.1335, 1.99", "-15.2937, -246.992, -54.3857, 1.77", "-15.389, -247.777, -54.6584, 1.11", "-15.5068, -248.658, -54.9757, 0.44", "-15.6054, -249.492, -55.2838, 0.44", "-15.7002, -250.564, -55.6486, 0.37", "-15.7664, -252.003, -56.0643, 0.29", "-15.7808, -252.491, -56.1927, 0.29", "-15.8075, -253.51, -56.4434, 0.66", "-15.8394, -254.163, -56.6173, 0.81", "-15.889, -254.975, -56.8487, 0.37", "-15.9307, -256.171, -57.1512, 0.29", "-15.8807, -257.819, -57.4877, 1.4", "-15.8401, -258.371, -57.5858, 1.99", "-15.7769, -259.027, -57.6767, 2.21", "-15.6931, -259.867, -57.7441, 1.47", "-15.5227, -261.305, -57.7312, 0.29", "-15.3986, -262.034, -57.6469, 0.29", "-15.1112, -263.083, -57.3797, 0.52", "-14.9178, -263.629, -57.203, 0.66", "-14.5841, -264.386, -56.9021, 0.44", "-14.0481, -265.463, -56.4364, 0.37", "-13.6305, -266.201, -56.1301, 0.37", "-12.9264, -267.297, -55.5848, 1.25", "-12.6689, -267.662, -55.389, 1.84", "-12.1842, -268.33, -54.9897, 1.92", "-11.5714, -269.126, -54.4714, 1.33", "-11.0286, -269.827, -54.0088, 1.11", "-9.75397, -271.558, -52.9116, 0.29", "-9.21129, -272.315, -52.4269, 0.29", "-8.42562, -273.362, -51.7152, 0.29", "-7.96163, -273.959, -51.2922, 0.29", "-7.39013, -274.67, -50.7933, 0.52", "-7.00746, -275.154, -50.4846, 0.66", "-6.06596, -276.355, -49.8243, 0.29", "-5.41346, -277.17, -49.372, 1.11", "-4.92061, -277.785, -49.04, 1.11", "-3.83343, -279.215, -48.2172, 0.22", "-3.48454, -279.674, -47.9343, 0.44" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-27.9026, -85.2543, -7.78445, 0.96", "-28.9432, -86.3792, -7.67699, 0.96", "-29.8123, -87.2716, -7.59863, 0.96", "-30.5538, -87.9781, -7.52213, 1.18", "-31.2357, -88.5688, -7.4827, 1.18", "-32.2734, -89.3782, -7.47623, 0.74", "-33.0605, -89.9196, -7.50815, 0.74", "-33.6471, -90.2703, -7.59148, 0.74", "-34.1854, -90.5378, -7.71774, 0.74", "-35.2089, -91.0387, -8.00548, 0.66", "-35.6597, -91.3229, -8.15406, 0.66", "-36.2143, -91.8024, -8.34068, 0.66", "-36.6622, -92.2819, -8.47966, 0.81", "-37.1231, -92.8095, -8.59792, 0.96", "-37.8002, -93.5931, -8.73088, 1.11", "-38.4886, -94.372, -8.80519, 1.11", "-39.0407, -95.0078, -8.85552, 1.33", "-39.5211, -95.5479, -8.90029, 1.47", "-40.226, -96.246, -8.96738, 1.47", "-40.8718, -96.7883, -9.02881, 1.4", "-41.6028, -97.2673, -9.08545, 1.25" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "165.952, -98.0496, -38.2859, 0.52", "166.971, -97.141, -38.4156, 0.52", "167.548, -96.5425, -38.4971, 0.29", "168.182, -95.8235, -38.5418, 0.22", "168.835, -95.041, -38.6449, 0.22", "169.421, -94.3239, -38.7783, 0.22", "170.029, -93.5347, -38.9375, 0.22", "170.621, -92.6713, -39.1058, 0.88", "171.061, -91.944, -39.247, 1.18", "171.822, -90.5657, -39.5002, 1.47", "172.083, -90.0669, -39.5844, 1.55", "172.983, -88.3454, -39.8727, 0.22", "173.504, -87.4315, -40.0397, 0.22", "174.193, -86.3491, -40.2101, 0.88", "174.693, -85.6111, -40.3168, 1.4", "175.001, -85.1766, -40.3566, 1.25", "175.5, -84.5021, -40.4182, 0.81", "176.377, -83.3824, -40.5341, 0.22", "177.646, -81.8401, -40.7085, 0.22", "178.429, -80.9542, -40.8162, 0.66", "178.93, -80.4035, -40.8831, 0.81", "179.245, -80.0449, -40.922, 0.66", "179.544, -79.683, -40.9481, 0.52" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "165.952, -98.0496, -38.2859, 0.29", "165.981, -95.9665, -38.2619, 0.29", "166.018, -94.4949, -38.2473, 0.29", "166.034, -93.3999, -38.2306, 0.52", "166.033, -92.775, -38.2136, 0.66", "166.034, -91.5918, -38.1742, 0.22", "166.031, -90.8136, -38.1462, 0.59", "166.018, -90.0086, -38.1035, 0.74", "166.008, -89.3408, -38.0567, 0.81", "166.007, -88.3271, -37.9714, 0.52", "166.032, -87.1144, -37.8553, 0.22", "166.065, -86.281, -37.769, 0.29", "166.121, -85.5996, -37.6999, 0.29", "166.211, -84.9317, -37.6383, 0.15", "166.383, -84.0539, -37.571, 0.29", "166.524, -83.4448, -37.5338, 0.37", "166.697, -82.7312, -37.4994, 0.22", "166.928, -81.7703, -37.4688, 0.22", "167.109, -80.935, -37.4571, 0.74", "167.228, -80.3158, -37.4527, 0.88", "167.361, -79.5614, -37.4493, 0.52", "167.566, -78.3136, -37.4493, 0.22", "167.673, -77.5444, -37.4493, 0.44", "167.712, -77.0814, -37.4493, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "68.3136, -166.701, 1.51217, 0.37", "68.9112, -167.771, 1.4089, 0.37", "69.3861, -168.549, 1.3493, 0.52", "69.7998, -169.186, 1.31007, 0.59", "70.4486, -170.17, 1.26158, 0.22", "70.855, -170.77, 1.23739, 0.22", "71.2244, -171.309, 1.21911, 0.44", "71.6938, -171.941, 1.22706, 0.44", "72.1389, -172.482, 1.23373, 0.37", "72.6714, -173.052, 1.24022, 0.29", "73.218, -173.569, 1.23907, 0.52", "73.5967, -173.906, 1.23395, 0.74", "74.1705, -174.423, 1.21986, 0.74", "74.7976, -175.005, 1.20092, 0.44", "75.1803, -175.359, 1.18775, 0.44", "75.8814, -175.998, 1.16288, 0.29", "76.4061, -176.487, 1.13657, 0.29", "76.7149, -176.784, 1.1181, 0.66", "77.0708, -177.147, 1.09863, 0.81", "77.3096, -177.386, 1.08794, 0.81", "78.1272, -178.138, 1.06317, 0.29", "78.7262, -178.611, 1.05388, 0.29", "79.2008, -178.95, 1.04857, 0.44", "79.9594, -179.458, 1.04292, 0.29", "80.5838, -179.851, 1.04984, 0.37", "81.5634, -180.42, 1.06542, 0.37", "82.3812, -180.857, 1.08349, 0.37", "82.8622, -181.085, 1.09676, 0.59", "83.2002, -181.222, 1.1033, 0.59", "84.1185, -181.547, 1.12601, 0.29", "85.0211, -181.845, 1.159, 1.25", "85.4684, -181.985, 1.17893, 1.55", "86.1133, -182.174, 1.21567, 1.55", "87.6414, -182.605, 1.32616, 0.29", "88.6124, -182.903, 1.4057, 0.52", "89.2463, -183.105, 1.46108, 0.59", "89.8976, -183.338, 1.54813, 0.37", "90.4276, -183.547, 1.63168, 0.22", "91.28, -183.925, 1.78119, 0.22", "92.2715, -184.391, 1.97246, 0.22", "92.9333, -184.713, 2.1015, 0.22", "94.1164, -185.305, 2.34432, 0.59", "94.8264, -185.67, 2.49812, 0.59", "95.4554, -186.009, 2.6347, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "68.3136, -166.701, 1.51217, 0.59", "68.3859, -167.318, 1.47008, 0.59", "68.4965, -168.083, 1.58834, 0.44", "68.6343, -168.964, 1.76499, 0.29", "68.8091, -170.161, 1.9774, 0.59", "68.893, -170.763, 2.07242, 0.66", "69.0553, -171.903, 2.2331, 0.44", "69.4873, -174.573, 2.52277, 0.29", "69.6351, -175.411, 2.58008, 0.29", "69.8596, -176.472, 2.60549, 0.59", "70.035, -177.146, 2.58871, 0.74", "70.1698, -177.612, 2.55863, 0.74", "70.4638, -178.61, 2.45844, 0.44", "70.7324, -179.631, 2.28066, 0.29", "70.9246, -180.505, 2.18241, 0.29", "71.1081, -181.476, 2.09944, 0.59", "71.2505, -182.308, 2.03169, 0.44", "71.3652, -183.002, 1.98392, 0.44", "71.4829, -183.713, 1.95186, 0.44", "71.6601, -184.61, 1.90136, 0.37", "71.9117, -185.671, 1.83155, 0.37", "72.0807, -186.19, 1.79526, 0.66", "72.3484, -186.717, 1.75977, 0.66", "72.5736, -187.037, 1.74071, 0.52", "73.0513, -187.641, 1.71619, 0.74", "73.2692, -187.905, 1.71125, 0.74", "73.8153, -188.62, 1.71547, 0.29", "74.3503, -189.379, 1.72027, 0.29", "74.7555, -189.959, 1.7222, 0.29", "75.3587, -190.828, 1.7222, 0.22", "75.7872, -191.445, 1.7222, 0.22", "76.3904, -192.31, 1.7222, 0.44", "76.8602, -192.981, 1.7222, 0.59", "77.1693, -193.479, 1.7222, 0.59", "81.2104, -202.98, 0.383693, 0.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-41.6028, -97.2673, -9.08545, 0.88", "-41.9305, -97.4384, -9.05203, 0.88", "-42.8272, -97.95, -8.95997, 0.74", "-43.6967, -98.4642, -8.86662, 0.88", "-44.4077, -98.896, -8.82794, 0.52", "-45.3359, -99.4536, -8.74902, 0.66", "-46.1995, -99.958, -8.66035, 0.74", "-47.051, -100.423, -8.56366, 0.88", "-47.8327, -100.807, -8.46696, 1.03", "-48.9812, -101.328, -8.29934, 1.33", "-50.088, -101.797, -8.12505, 1.4", "-51.1418, -102.201, -7.95729, 0.66", "-51.8203, -102.448, -7.8375, 0.66", "-52.4865, -102.716, -7.69325, 0.59", "-53.25, -103.103, -7.49817, 0.37", "-53.7427, -103.414, -7.35746, 0.88", "-54.4342, -103.945, -7.20152, 0.96", "-54.9082, -104.361, -7.08583, 0.96", "-55.5905, -105.02, -6.89637, 0.66", "-56.0987, -105.535, -6.75248, 0.66", "-56.8056, -106.243, -6.5719, 0.66", "-57.4019, -106.841, -6.42382, 0.74", "-57.7897, -107.233, -6.32638, 0.96", "-58.4812, -107.93, -6.16217, 0.74", "-59.0896, -108.588, -6.01441, 0.74", "-59.785, -109.462, -5.81161, 0.96", "-60.227, -110.119, -5.65495, 1.03", "-60.6278, -110.75, -5.48831, 0.81", "-61.0651, -111.409, -5.28428, 0.44", "-61.758, -112.425, -4.91791, 0.44", "-62.2405, -113.146, -4.60638, 0.44", "-62.6895, -113.844, -4.26666, 0.44", "-63.3832, -115.004, -3.68249, 0.44", "-63.966, -116.098, -3.14866, 0.81", "-64.2114, -116.624, -2.90229, 0.81", "-64.4983, -117.322, -2.61484, 0.88", "-64.6426, -117.71, -2.48021, 0.66", "-64.9515, -118.615, -2.23229, 0.37", "-65.2456, -119.47, -2.02533, 0.29", "-65.5393, -120.067, -1.87535, 0.44", "-66.1268, -120.732, -1.63757, 0.29", "-66.6414, -121.116, -1.44462, 0.29", "-67.2394, -121.47, -1.20137, 0.37", "-68.2085, -121.921, -0.765362, 0.37", "-68.8978, -122.235, -0.40278, 0.37", "-69.6889, -122.637, 0.0527289, 0.81", "-70.2053, -122.935, 0.35713, 1.03", "-70.6501, -123.289, 0.6583, 1.03", "-70.9824, -123.643, 0.916877, 0.96", "-71.7046, -124.646, 1.55782, 0.52", "-72.0519, -125.214, 1.91516, 0.52", "-72.484, -125.973, 2.39827, 1.77", "-73.1658, -127.178, 3.14534, 0.66", "-73.5633, -127.798, 3.51385, 0.66", "-74.135, -128.579, 3.99327, 0.59", "-74.6341, -129.199, 4.3814, 0.74", "-75.0871, -129.749, 4.74804, 0.74", "-75.5202, -130.242, 5.08537, 0.74", "-76.3428, -131.056, 5.63368, 0.37", "-77.4104, -132.098, 6.30039, 0.37", "-77.9419, -132.635, 6.61944, 0.44", "-78.4696, -133.242, 6.95693, 0.44", "-79.0462, -133.967, 7.33552, 0.44", "-79.4489, -134.492, 7.59312, 0.66", "-79.7761, -134.944, 7.78788, 0.74", "-80.1111, -135.421, 7.94981, 0.74", "-80.7955, -136.389, 8.25304, 0.81", "-81.504, -137.406, 8.53434, 0.44", "-82.1958, -138.438, 8.80103, 0.44", "-82.8114, -139.415, 9.02543, 0.37", "-83.4484, -140.484, 9.27175, 0.37", "-83.825, -141.142, 9.41538, 1.18", "-84.1413, -141.704, 9.52007, 1.62", "-84.6195, -142.595, 9.69583, 1.84", "-85.0748, -143.444, 9.88295, 1.03", "-85.6475, -144.496, 10.1261, 0.74", "-85.8924, -144.975, 10.2394, 0.74", "-86.3391, -145.974, 10.468, 0.44", "-86.7831, -147.094, 10.7205, 0.59", "-87.047, -147.85, 10.8833, 0.59", "-87.3541, -148.797, 11.0705, 0.37", "-87.7174, -149.954, 11.2775, 0.37", "-88.068, -151.031, 11.4734, 0.37", "-88.3246, -151.768, 11.5992, 0.81", "-88.5946, -152.408, 11.6953, 0.96", "-88.9736, -153.139, 11.7877, 1.18", "-89.6627, -154.268, 11.932, 0.44", "-90.2359, -155.108, 12.0614, 0.44", "-91.0237, -156.193, 12.3146, 0.44", "-91.6476, -157.0, 12.5602, 0.44", "-92.3432, -157.87, 12.8646, 0.59", "-92.8253, -158.477, 13.1115, 0.74", "-93.4341, -159.254, 13.457, 0.96", "-94.3113, -160.346, 13.9802, 0.59", "-94.8443, -161.007, 14.301, 0.44", "-95.4201, -161.768, 14.662, 0.37", "-95.8563, -162.398, 14.9514, 0.52", "-96.239, -162.999, 15.1857, 0.52", "-96.9609, -164.203, 15.594, 0.37", "-97.4567, -165.062, 15.867, 0.59", "-97.8077, -165.676, 16.0945, 0.74", "-98.2884, -166.477, 16.4181, 0.96", "-98.561, -166.943, 16.6029, 0.88", "-98.8664, -167.495, 16.8217, 0.81", "-99.336, -168.312, 17.1759, 0.88", "-99.9691, -169.293, 17.6085, 0.37", "-100.611, -170.212, 18.011, 0.37", "-101.21, -171.027, 18.3591, 0.37", "-101.768, -171.753, 18.6767, 0.66", "-102.559, -172.732, 19.1143, 0.52", "-103.131, -173.361, 19.4096, 0.37", "-103.773, -173.945, 19.6921, 0.59", "-104.424, -174.439, 19.9838, 0.59", "-105.271, -174.99, 20.3965, 0.29", "-105.795, -175.324, 20.6928, 0.29", "-106.338, -175.704, 21.0265, 0.29", "-107.228, -176.389, 21.6239, 0.37", "-108.28, -177.268, 22.3572, 0.52", "-109.197, -178.104, 23.0225, 0.74", "-110.068, -178.951, 23.6543, 0.59", "-110.659, -179.551, 24.062, 0.44", "-111.034, -179.936, 24.2939, 0.44", "-111.558, -180.495, 24.5813, 0.37", "-112.121, -181.156, 24.8263, 0.52", "-112.692, -181.902, 25.0569, 0.74", "-113.365, -182.867, 25.3455, 0.44", "-113.782, -183.578, 25.5729, 0.37", "-114.116, -184.324, 25.8403, 0.37", "-114.457, -185.331, 26.212, 0.59", "-114.599, -185.923, 26.4228, 0.59", "-114.709, -186.755, 26.7102, 0.59", "-114.751, -187.715, 27.0488, 0.66", "-114.759, -189.065, 27.5134, 0.66", "-114.762, -190.137, 27.8515, 0.37", "-114.756, -190.816, 28.0418, 0.37", "-114.7, -191.66, 28.2489, 0.37", "-114.614, -192.245, 28.3867, 0.37", "-114.406, -193.346, 28.6284, 0.59", "-114.279, -193.883, 28.7209, 0.74", "-114.083, -194.615, 28.8556, 0.74", "-113.837, -195.75, 29.0767, 0.44", "-113.752, -196.341, 29.1906, 0.44", "-120.767, -203.753, 30.1777, 0.44" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-41.6028, -97.2673, -9.08545, 0.81", "-43.9065, -99.6275, -10.8455, 0.81", "-44.8077, -100.429, -11.552, 0.74", "-45.3416, -100.815, -11.9853, 0.81", "-45.9871, -101.19, -12.5323, 0.59", "-46.8856, -101.63, -13.2599, 0.44", "-47.2373, -101.778, -13.5233, 0.44", "-48.5671, -102.04, -14.162, 0.52", "-49.2348, -102.069, -14.5358, 0.74", "-49.9858, -102.091, -14.9817, 0.59", "-50.7092, -102.128, -15.4028, 0.59", "-51.3007, -102.195, -15.7269, 1.03", "-51.9714, -102.326, -16.0148, 1.18", "-52.659, -102.5, -16.2192, 1.18", "-53.539, -102.735, -16.4603, 0.52", "-54.229, -102.903, -16.6633, 0.37", "-54.7836, -103.017, -16.8486, 0.29", "-55.3471, -103.119, -17.0596, 0.29", "-55.9564, -103.212, -17.2964, 0.88", "-56.7121, -103.285, -17.5953, 1.11", "-57.3556, -103.286, -17.9191, 1.4", "-57.8563, -103.308, -18.2455, 1.55", "-58.2472, -103.364, -18.5715, 1.55", "-58.9092, -103.522, -19.1893, 0.59", "-59.281, -103.639, -19.5425, 0.59", "-60.2812, -104.017, -20.44, 0.44", "-61.4211, -104.49, -21.4513, 0.29", "-62.4339, -104.961, -22.4247, 0.52", "-62.8522, -105.184, -22.9261, 0.66", "-63.3149, -105.458, -23.5509, 0.66", "-63.6229, -105.658, -23.9821, 0.44", "-64.3709, -106.148, -25.0479, 0.37", "-65.9955, -107.128, -27.4086, 2.8", "-67.9887, -108.313, -30.5485, 0.74", "-68.8413, -108.809, -32.0199, 0.74", "-69.5153, -109.173, -33.3227, 0.52", "-70.2599, -109.514, -34.8894, 1.11", "-70.563, -109.614, -35.5559, 1.25", "-71.8027, -109.707, -38.4695, 0.37", "-72.5771, -109.542, -40.3568, 1.03", "-73.3456, -109.162, -42.3832, 1.25", "-73.7823, -108.835, -43.6235, 0.37", "-74.1016, -108.543, -44.5448, 1.84", "-74.7025, -107.946, -46.1784, 0.52", "-74.8637, -107.765, -46.5546, 0.37", "-75.2695, -107.34, -47.3732, 0.74", "-75.9905, -106.728, -48.6101, 0.44", "-76.6512, -106.31, -49.5815, 0.44", "-77.1492, -106.075, -50.1996, 0.44", "-77.6823, -105.884, -50.7503, 1.11", "-78.1697, -105.729, -51.207, 1.55", "-78.724, -105.571, -51.6741, 1.69", "-80.3841, -105.156, -52.8849, 0.29", "-81.189, -104.982, -53.4343, 0.44", "-81.8046, -104.863, -53.8641, 0.44", "-82.3227, -104.769, -54.2372, 1.33", "-82.8281, -104.671, -54.5912, 1.55", "-83.9643, -104.443, -55.3852, 0.29", "-84.4877, -104.341, -55.7455, 0.52", "-85.3611, -104.19, -56.3437, 0.29", "-85.8646, -104.082, -56.7098, 1.03", "-86.2985, -103.974, -57.0393, 1.18", "-86.7037, -103.853, -57.3496, 1.18", "-87.6939, -103.523, -58.1483, 0.29", "-88.3852, -103.309, -58.7154, 0.29", "-89.5252, -102.984, -59.5957, 0.88", "-90.0886, -102.832, -60.0296, 0.66", "-90.4711, -102.731, -60.3263, 0.66", "-90.9257, -102.6, -60.6675, 0.44", "-91.5157, -102.428, -61.1124, 0.29", "-92.127, -102.254, -61.5467, 0.74", "-92.3925, -102.186, -61.724, 0.88", "-93.5764, -101.846, -62.5013, 0.29", "-94.3746, -101.602, -63.0018, 1.47", "-95.0177, -101.393, -63.3829, 1.92", "-95.614, -101.196, -63.7176, 1.92", "-96.9554, -100.761, -64.4317, 0.22", "-97.9063, -100.462, -64.8888, 0.22", "-98.5366, -100.269, -65.1457, 0.59", "-98.8778, -100.167, -65.2661, 0.59", "-99.8374, -99.8564, -65.5453, 0.22", "-100.52, -99.6145, -65.7065, 0.81", "-100.822, -99.4951, -65.7706, 1.03", "-101.175, -99.3429, -65.8467, 1.03", "-102.139, -98.8864, -66.0782, 0.22", "-102.646, -98.634, -66.1984, 0.44", "-104.304, -97.7431, -66.6014, 0.22", "-104.828, -97.4505, -66.7402, 0.22", "-105.539, -97.0465, -66.9337, 1.03", "-106.031, -96.7596, -67.0693, 1.25" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "95.4554, -186.009, 2.6347, 0.22", "96.6345, -186.914, 2.67106, 0.22", "97.1457, -187.306, 2.68682, 0.22", "97.5225, -187.596, 2.69844, 0.44", "97.788, -187.799, 2.70662, 0.44", "106.0, -193.624, 4.04576, 0.44" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "95.4554, -186.009, 2.6347, 0.59", "96.3896, -185.73, 2.6347, 0.59", "96.901, -185.577, 2.6347, 0.66", "97.1145, -185.513, 2.6347, 0.66", "106.746, -182.925, 3.7015, 0.66", "116.35, -180.495, 5.25387, 0.66", "125.486, -177.992, 8.54976, 0.66" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_17", "dend_0", "dend_50", "dend_47", "dend_45", "dend_18", "dend_10", "dend_1", "dend_56", "dend_51", "dend_49", "dend_48", "dend_38", "dend_19", "dend_12", "dend_11", "dend_5", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_42", "dend_39", "dend_27", "dend_20", "dend_14", "dend_13", "dend_9", "dend_6", "dend_4", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_44", "dend_43", "dend_41", "dend_40", "dend_37", "dend_28", "dend_26", "dend_21", "dend_16", "dend_15", "dend_8", "dend_7", "dend_34", "dend_29", "dend_25", "dend_22", "dend_36", "dend_35", "dend_31", "dend_30", "dend_24", "dend_23", "dend_33", "dend_32" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_46", "dend_17", "dend_0", "dend_50", "dend_47", "dend_45", "dend_18", "dend_10", "dend_1", "dend_56", "dend_51", "dend_49", "dend_48", "dend_38", "dend_19", "dend_12", "dend_11", "dend_5", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_42", "dend_39", "dend_27", "dend_20", "dend_14", "dend_13", "dend_9", "dend_6", "dend_4", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_44", "dend_43", "dend_41", "dend_40", "dend_37", "dend_28", "dend_26", "dend_21", "dend_16", "dend_15", "dend_8", "dend_7", "dend_34", "dend_29", "dend_25", "dend_22", "dend_36", "dend_35", "dend_31", "dend_30", "dend_24", "dend_23", "dend_33", "dend_32" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_17", "dend_0", "axon_0", "dend_50", "dend_47", "dend_45", "dend_18", "dend_10", "dend_1", "axon_1", "dend_56", "dend_51", "dend_49", "dend_48", "dend_38", "dend_19", "dend_12", "dend_11", "dend_5", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_42", "dend_39", "dend_27", "dend_20", "dend_14", "dend_13", "dend_9", "dend_6", "dend_4", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_44", "dend_43", "dend_41", "dend_40", "dend_37", "dend_28", "dend_26", "dend_21", "dend_16", "dend_15", "dend_8", "dend_7", "dend_34", "dend_29", "dend_25", "dend_22", "dend_36", "dend_35", "dend_31", "dend_30", "dend_24", "dend_23", "dend_33", "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_59", "dend_59", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_44", "dend_44", "dend_43", "dend_41", "dend_41", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_BTC_c745595fbe_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_17
create dend_45
public dend_45
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_50
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_38, id: dend_38, parent: dend_18
create dend_38
public dend_38
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_27
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_46, dend_17, dend_0, axon_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, axon_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_59, dend_59, dend_58, dend_58, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_43, dend_41, dend_41, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_46(0), soma_0(0.4500003629291099)
    connect dend_17(0), soma_0(0.4500003629291099)
    connect dend_0(0), soma_0(0.4500003629291099)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_38(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.701782, -14.5938, 2.84454, 2.73269 ) }
    soma_0 { pt3dadd( 0.624028, -13.2198, 2.58654, 4.41229 ) }
    soma_0 { pt3dadd( 0.546274, -11.8458, 2.32855, 5.84991 ) }
    soma_0 { pt3dadd( 0.46852, -10.4718, 2.07055, 7.31637 ) }
    soma_0 { pt3dadd( 0.390766, -9.09779, 1.81255, 8.68275 ) }
    soma_0 { pt3dadd( 0.313011, -7.72379, 1.55455, 10.1324 ) }
    soma_0 { pt3dadd( 0.235257, -6.34979, 1.29656, 11.1056 ) }
    soma_0 { pt3dadd( 0.157503, -4.97579, 1.03856, 11.7054 ) }
    soma_0 { pt3dadd( 0.0797487, -3.60179, 0.780562, 12.0256 ) }
    soma_0 { pt3dadd( 0.00199453, -2.22779, 0.522565, 12.4948 ) }
    soma_0 { pt3dadd( -0.0757597, -0.853785, 0.264567, 12.7838 ) }
    soma_0 { pt3dadd( -0.153514, 0.520216, 0.00657008, 12.9275 ) }
    soma_0 { pt3dadd( -0.231268, 1.89422, -0.251427, 12.8186 ) }
    soma_0 { pt3dadd( -0.309022, 3.26822, -0.509424, 12.3668 ) }
    soma_0 { pt3dadd( -0.386777, 4.64222, -0.767422, 11.8063 ) }
    soma_0 { pt3dadd( -0.464531, 6.01622, -1.02542, 10.8607 ) }
    soma_0 { pt3dadd( -0.542285, 7.39022, -1.28342, 9.60756 ) }
    soma_0 { pt3dadd( -0.620039, 8.76422, -1.54141, 8.32491 ) }
    soma_0 { pt3dadd( -0.697793, 10.1382, -1.79941, 6.57632 ) }
    soma_0 { pt3dadd( -0.775548, 11.5122, -2.05741, 4.5422 ) }
    soma_0 { pt3dadd( -0.853302, 12.8862, -2.3154, 2.90642 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -3.99768, 4.39237, 12.0608, 1.77 ) }
    dend_46 { pt3dadd( -4.1731, 5.18109, 12.3167, 1.77 ) }
    dend_46 { pt3dadd( -4.48961, 6.40355, 12.8742, 1.55 ) }
    dend_46 { pt3dadd( -4.74152, 7.22094, 13.3444, 1.55 ) }
    dend_46 { pt3dadd( -5.11235, 8.1481, 14.0312, 1.4 ) }
    dend_46 { pt3dadd( -5.78582, 9.4167, 15.1381, 1.4 ) }
    dend_46 { pt3dadd( -6.34105, 10.2431, 15.9405, 1.4 ) }
    dend_46 { pt3dadd( -6.97281, 10.8897, 16.7213, 1.69 ) }
    dend_46 { pt3dadd( -7.52264, 11.2881, 17.2891, 1.69 ) }
    dend_46 { pt3dadd( -8.57836, 11.875, 18.1658, 1.4 ) }
    dend_46 { pt3dadd( -9.51582, 12.3025, 18.8124, 1.33 ) }
    dend_46 { pt3dadd( -10.3609, 12.6596, 19.1822, 1.18 ) }
    dend_46 { pt3dadd( -11.7018, 13.2729, 19.4492, 1.18 ) }
    dend_46 { pt3dadd( -12.6385, 13.7701, 19.4761, 1.18 ) }
    dend_46 { pt3dadd( -13.5741, 14.3513, 19.4554, 1.33 ) }
    dend_46 { pt3dadd( -14.794, 15.2814, 19.3634, 1.4 ) }
    dend_46 { pt3dadd( -16.8742, 17.2953, 19.1703, 1.62 ) }
    dend_46 { pt3dadd( -17.6397, 18.2435, 19.1113, 1.69 ) }
    dend_46 { pt3dadd( -18.4133, 19.3787, 19.0521, 1.33 ) }
    dend_46 { pt3dadd( -19.3715, 21.0454, 19.0231, 1.62 ) }
    dend_46 { pt3dadd( -19.8164, 22.0555, 19.0944, 1.62 ) }
    dend_46 { pt3dadd( -20.1378, 23.1624, 19.4119, 1.84 ) }
    dend_46 { pt3dadd( -20.2522, 23.7591, 19.8136, 1.84 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 44/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.09232, -14.8961, 2.30081, 3.98 ) }
    dend_17 { pt3dadd( 1.09232, -14.8961, 2.30081, 3.98 ) }
    dend_17 { pt3dadd( 1.19467, -16.2158, 2.30081, 3.98 ) }
    dend_17 { pt3dadd( 1.326, -17.9091, 2.30081, 3.76 ) }
    dend_17 { pt3dadd( 1.45684, -19.5961, 2.30081, 3.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.877678, 13.3174, -4.94919, 2.58 ) }
    dend_0 { pt3dadd( -0.877678, 13.3174, -4.94919, 2.58 ) }
    dend_0 { pt3dadd( -0.369738, 14.9853, -4.61241, 2.14 ) }
    dend_0 { pt3dadd( -0.089406, 15.9404, -4.40918, 2.14 ) }
    dend_0 { pt3dadd( 0.18609, 16.9592, -4.19639, 1.92 ) }
    dend_0 { pt3dadd( 0.560861, 18.5253, -3.86493, 1.69 ) }
    dend_0 { pt3dadd( 0.767173, 19.5183, -3.66919, 1.69 ) }
    dend_0 { pt3dadd( 0.917219, 20.4733, -3.5052, 1.69 ) }
    dend_0 { pt3dadd( 1.04525, 21.8867, -3.31797, 1.92 ) }
    dend_0 { pt3dadd( 1.05912, 22.7435, -3.27214, 2.06 ) }
    dend_0 { pt3dadd( 0.989549, 24.0092, -3.37921, 1.99 ) }
    dend_0 { pt3dadd( 0.905704, 24.84, -3.57691, 1.84 ) }
    dend_0 { pt3dadd( 0.787728, 26.0353, -3.98465, 1.69 ) }
    dend_0 { pt3dadd( 0.675548, 27.0291, -4.38414, 1.77 ) }
    dend_0 { pt3dadd( 0.528197, 28.2662, -4.95654, 1.69 ) }
    dend_0 { pt3dadd( 0.333913, 30.0649, -5.88531, 1.92 ) }
    dend_0 { pt3dadd( 0.208127, 31.4702, -6.69992, 2.14 ) }
    dend_0 { pt3dadd( 0.142173, 32.7045, -7.43908, 2.43 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 67/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.853302, 12.8862, -2.3154, 0.892431 ) }
    axon_0 { pt3dadd( -1.70079, 27.8622, -2.3154, 0.892431 ) }
    axon_0 { pt3dadd( -2.54828, 42.8383, -2.3154, 0.892431 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 70/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -20.2522, 23.7591, 19.8136, 0.66 ) }
    dend_50 { pt3dadd( -21.6536, 24.6963, 21.5059, 0.66 ) }
    dend_50 { pt3dadd( -22.3434, 25.2154, 22.1912, 0.59 ) }
    dend_50 { pt3dadd( -23.2272, 25.9058, 22.9453, 0.59 ) }
    dend_50 { pt3dadd( -23.8876, 26.3867, 23.44, 0.52 ) }
    dend_50 { pt3dadd( -24.6879, 26.907, 23.9817, 0.66 ) }
    dend_50 { pt3dadd( -25.251, 27.2473, 24.3322, 0.52 ) }
    dend_50 { pt3dadd( -25.8116, 27.6031, 24.6392, 0.52 ) }
    dend_50 { pt3dadd( -26.5314, 28.0249, 25.1182, 0.44 ) }
    dend_50 { pt3dadd( -27.0748, 28.2896, 25.5639, 0.66 ) }
    dend_50 { pt3dadd( -27.6854, 28.514, 26.1725, 0.52 ) }
    dend_50 { pt3dadd( -28.2256, 28.6811, 26.7703, 0.74 ) }
    dend_50 { pt3dadd( -29.6385, 29.0714, 28.4922, 1.03 ) }
    dend_50 { pt3dadd( -30.4343, 29.2777, 29.5745, 0.66 ) }
    dend_50 { pt3dadd( -31.1049, 29.4587, 30.6053, 0.59 ) }
    dend_50 { pt3dadd( -31.5755, 29.6154, 31.4328, 0.74 ) }
    dend_50 { pt3dadd( -38.8038, 33.111, 37.4883, 0.74 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 87/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -20.2522, 23.7591, 19.8136, 0.88 ) }
    dend_47 { pt3dadd( -20.598, 26.4299, 20.3301, 0.88 ) }
    dend_47 { pt3dadd( -20.7657, 27.3527, 20.4628, 0.88 ) }
    dend_47 { pt3dadd( -21.0232, 28.5049, 20.6326, 0.88 ) }
    dend_47 { pt3dadd( -21.3534, 29.8236, 20.8321, 0.88 ) }
    dend_47 { pt3dadd( -21.6638, 31.0791, 21.0416, 0.81 ) }
    dend_47 { pt3dadd( -21.9446, 32.2659, 21.2712, 0.81 ) }
    dend_47 { pt3dadd( -22.1641, 33.0711, 21.3907, 1.03 ) }
    dend_47 { pt3dadd( -22.4566, 34.0027, 21.5451, 0.81 ) }
    dend_47 { pt3dadd( -22.8309, 35.0211, 21.7287, 0.96 ) }
    dend_47 { pt3dadd( -23.1643, 35.8471, 21.8831, 0.88 ) }
    dend_47 { pt3dadd( -23.5548, 36.8284, 22.061, 0.74 ) }
    dend_47 { pt3dadd( -23.8151, 37.499, 22.1847, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_47 { pt3dadd( -24.0966, 38.2858, 22.3246, 0.74 ) }
    dend_47 { pt3dadd( -24.3837, 39.2159, 22.4605, 0.81 ) }
    dend_47 { pt3dadd( -24.5732, 39.9421, 22.5604, 0.81 ) }
    dend_47 { pt3dadd( -24.7478, 40.7841, 22.6827, 0.88 ) }
    dend_47 { pt3dadd( -24.8705, 41.6893, 22.8246, 1.03 ) }
    dend_47 { pt3dadd( -24.9358, 42.7421, 23.0138, 0.96 ) }
    dend_47 { pt3dadd( -24.944, 44.0576, 23.2535, 1.03 ) }
    dend_47 { pt3dadd( -24.9384, 44.995, 23.4106, 1.03 ) }
    dend_47 { pt3dadd( -24.9481, 46.3671, 23.6325, 1.11 ) }
    dend_47 { pt3dadd( -24.9988, 47.2383, 23.7326, 0.96 ) }
    dend_47 { pt3dadd( -25.1315, 48.3238, 23.8045, 0.88 ) }
    dend_47 { pt3dadd( -25.3797, 49.5334, 23.869, 0.74 ) }
    dend_47 { pt3dadd( -25.6767, 50.5542, 23.9287, 0.81 ) }
    dend_47 { pt3dadd( -25.938, 51.249, 23.9979, 0.96 ) }
    dend_47 { pt3dadd( -26.5512, 52.5542, 24.1865, 1.11 ) }
    dend_47 { pt3dadd( -26.8896, 53.1617, 24.3166, 1.11 ) }
    dend_47 { pt3dadd( -27.4419, 54.0354, 24.5558, 0.96 ) }
    dend_47 { pt3dadd( -27.9672, 54.831, 24.8116, 0.74 ) }
    dend_47 { pt3dadd( -28.5405, 55.7412, 25.1227, 0.74 ) }
    dend_47 { pt3dadd( -28.8555, 56.2599, 25.2953, 0.66 ) }
    dend_47 { pt3dadd( -29.1862, 56.8171, 25.476, 0.59 ) }
    dend_47 { pt3dadd( -29.7366, 57.726, 25.6927, 0.81 ) }
    dend_47 { pt3dadd( -30.0174, 58.1888, 25.7736, 0.96 ) }
    dend_47 { pt3dadd( -30.3634, 58.7807, 25.8409, 0.96 ) }
    dend_47 { pt3dadd( -30.8361, 59.6862, 25.8921, 0.59 ) }
    dend_47 { pt3dadd( -31.3557, 60.9063, 25.9171, 0.59 ) }
    dend_47 { pt3dadd( -31.6689, 61.871, 25.9047, 0.66 ) }
    dend_47 { pt3dadd( -31.8745, 62.8805, 25.8664, 0.96 ) }
    dend_47 { pt3dadd( -31.9445, 63.661, 25.8183, 1.03 ) }
    dend_47 { pt3dadd( -31.9373, 64.5167, 25.7858, 0.81 ) }
    dend_47 { pt3dadd( -31.8365, 65.5996, 25.7722, 0.52 ) }
    dend_47 { pt3dadd( -31.7241, 66.3968, 25.815, 0.37 ) }
    dend_47 { pt3dadd( -31.6475, 67.1521, 25.9412, 0.37 ) }
    dend_47 { pt3dadd( -31.6785, 67.6808, 26.1035, 0.44 ) }
    dend_47 { pt3dadd( -31.9424, 68.7922, 26.6328, 0.44 ) }
    dend_47 { pt3dadd( -32.1931, 69.4366, 26.9631, 0.66 ) }
    dend_47 { pt3dadd( -32.5606, 70.2478, 27.3382, 1.03 ) }
    dend_47 { pt3dadd( -32.8172, 70.8579, 27.5614, 1.18 ) }
    dend_47 { pt3dadd( -33.0477, 71.5912, 27.7556, 1.25 ) }
    dend_47 { pt3dadd( -33.1489, 72.3918, 27.8817, 1.4 ) }
    dend_47 { pt3dadd( -33.0651, 73.6657, 27.9523, 1.25 ) }
    dend_47 { pt3dadd( -32.8803, 74.4846, 27.9427, 1.18 ) }
    dend_47 { pt3dadd( -32.4955, 75.5936, 27.8218, 0.66 ) }
    dend_47 { pt3dadd( -32.0366, 76.6218, 27.6436, 0.66 ) }
    dend_47 { pt3dadd( -31.3985, 77.8108, 27.3927, 0.66 ) }
    dend_47 { pt3dadd( -31.0068, 78.4387, 27.2178, 0.81 ) }
    dend_47 { pt3dadd( -30.4889, 79.1853, 26.9919, 0.96 ) }
    dend_47 { pt3dadd( -29.9121, 80.0338, 26.7373, 0.81 ) }
    dend_47 { pt3dadd( -29.4279, 80.8011, 26.5047, 0.88 ) }
    dend_47 { pt3dadd( -29.0645, 81.5144, 26.31, 0.88 ) }
    dend_47 { pt3dadd( -28.606, 82.7499, 26.0736, 0.74 ) }
    dend_47 { pt3dadd( -28.4121, 83.4245, 26.0061, 0.74 ) }
    dend_47 { pt3dadd( -28.184, 84.3753, 26.0185, 0.59 ) }
    dend_47 { pt3dadd( -28.077, 84.9271, 26.0603, 0.59 ) }
    dend_47 { pt3dadd( -27.94, 85.8582, 26.1357, 0.59 ) }
    dend_47 { pt3dadd( -27.8013, 87.246, 26.2279, 0.74 ) }
    dend_47 { pt3dadd( -27.7735, 88.0772, 26.2667, 0.81 ) }
    dend_47 { pt3dadd( -27.7844, 89.0565, 26.2622, 0.81 ) }
    dend_47 { pt3dadd( -27.836, 90.3877, 26.206, 0.74 ) }
    dend_47 { pt3dadd( -27.8636, 91.2945, 26.1254, 0.74 ) }
    dend_47 { pt3dadd( -27.8791, 92.1883, 25.9995, 0.74 ) }
    dend_47 { pt3dadd( -27.888, 93.6694, 25.7355, 0.88 ) }
    dend_47 { pt3dadd( -27.8631, 95.1723, 25.4152, 1.03 ) }
    dend_47 { pt3dadd( -27.8349, 96.1402, 25.181, 1.03 ) }
    dend_47 { pt3dadd( -27.7897, 96.8651, 25.0238, 1.69 ) }
    dend_47 { pt3dadd( -27.6735, 98.2239, 24.7588, 1.4 ) }
    dend_47 { pt3dadd( -27.58, 99.252, 24.5837, 0.74 ) }
    dend_47 { pt3dadd( -27.4754, 100.377, 24.4332, 0.74 ) }
    dend_47 { pt3dadd( -27.4482, 100.871, 24.3715, 0.88 ) }
    dend_47 { pt3dadd( -27.4489, 101.966, 24.2372, 1.03 ) }
    dend_47 { pt3dadd( -27.4704, 102.567, 24.169, 1.11 ) }
    dend_47 { pt3dadd( -27.5014, 103.765, 24.0324, 0.66 ) }
    dend_47 { pt3dadd( -27.4915, 104.551, 23.92, 0.66 ) }
    dend_47 { pt3dadd( -27.3694, 105.641, 23.72, 0.81 ) }
    dend_47 { pt3dadd( -27.1728, 106.613, 23.4386, 1.03 ) }
    dend_47 { pt3dadd( -26.9536, 107.51, 23.0988, 0.88 ) }
    dend_47 { pt3dadd( -26.7736, 108.198, 22.8119, 0.66 ) }
    dend_47 { pt3dadd( -26.5613, 109.126, 22.3889, 0.66 ) }
    dend_47 { pt3dadd( -26.4573, 109.98, 21.9876, 0.88 ) }
    dend_47 { pt3dadd( -26.5291, 110.979, 21.5759, 0.74 ) }
    dend_47 { pt3dadd( -26.7699, 111.744, 21.2913, 0.66 ) }
    dend_47 { pt3dadd( -26.9844, 112.277, 21.1266, 0.66 ) }
    dend_47 { pt3dadd( -27.3445, 113.205, 20.87, 0.52 ) }
    dend_47 { pt3dadd( -27.5179, 113.857, 20.6982, 0.44 ) }
    dend_47 { pt3dadd( -27.5124, 114.681, 20.4854, 0.44 ) }
    dend_47 { pt3dadd( -27.3017, 115.308, 20.3368, 0.44 ) }
    dend_47 { pt3dadd( -26.5829, 116.792, 19.9163, 0.52 ) }
    dend_47 { pt3dadd( -26.055, 117.752, 19.6296, 0.66 ) }
    dend_47 { pt3dadd( -25.3896, 118.834, 19.2875, 0.59 ) }
    dend_47 { pt3dadd( -24.9994, 119.451, 19.0888, 0.66 ) }
    dend_47 { pt3dadd( -24.4795, 120.331, 18.8122, 0.74 ) }
    dend_47 { pt3dadd( -23.9474, 121.457, 18.4614, 0.81 ) }
    dend_47 { pt3dadd( -23.7454, 122.049, 18.2678, 0.88 ) }
    dend_47 { pt3dadd( -23.4577, 123.151, 17.9059, 0.74 ) }
    dend_47 { pt3dadd( -23.3023, 123.881, 17.6433, 0.74 ) }
    dend_47 { pt3dadd( -23.1319, 124.855, 17.2273, 0.81 ) }
    dend_47 { pt3dadd( -22.9754, 125.997, 16.6732, 0.74 ) }
    dend_47 { pt3dadd( -22.9135, 126.851, 16.2536, 0.88 ) }
    dend_47 { pt3dadd( -22.9167, 127.297, 16.035, 0.88 ) }
    dend_47 { pt3dadd( -23.0244, 128.612, 15.384, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_47 { pt3dadd( -23.1155, 129.487, 14.9567, 1.25 ) }
    dend_47 { pt3dadd( -23.193, 130.282, 14.6069, 0.74 ) }
    dend_47 { pt3dadd( -23.2763, 131.144, 14.2963, 0.74 ) }
    dend_47 { pt3dadd( -23.3562, 131.957, 14.0709, 1.03 ) }
    dend_47 { pt3dadd( -23.4321, 132.85, 13.8847, 1.25 ) }
    dend_47 { pt3dadd( -23.4812, 133.681, 13.7646, 1.03 ) }
    dend_47 { pt3dadd( -23.4834, 134.707, 13.6526, 0.88 ) }
    dend_47 { pt3dadd( -23.3905, 136.013, 13.5262, 0.88 ) }
    dend_47 { pt3dadd( -23.2142, 137.3, 13.4147, 0.88 ) }
    dend_47 { pt3dadd( -22.958, 138.671, 13.2821, 0.96 ) }
    dend_47 { pt3dadd( -22.7043, 139.859, 13.1691, 1.03 ) }
    dend_47 { pt3dadd( -22.4605, 140.984, 13.0502, 1.03 ) }
    dend_47 { pt3dadd( -22.1722, 142.386, 12.9349, 0.88 ) }
    dend_47 { pt3dadd( -21.9706, 143.428, 12.8782, 0.88 ) }
    dend_47 { pt3dadd( -21.8141, 144.483, 12.8358, 0.88 ) }
    dend_47 { pt3dadd( -21.7971, 145.247, 12.8349, 0.66 ) }
    dend_47 { pt3dadd( -22.0028, 146.102, 12.9412, 0.66 ) }
    dend_47 { pt3dadd( -22.6419, 147.282, 13.244, 0.74 ) }
    dend_47 { pt3dadd( -22.9859, 147.736, 13.4008, 0.74 ) }
    dend_47 { pt3dadd( -23.4284, 148.235, 13.5921, 0.74 ) }
    dend_47 { pt3dadd( -24.0995, 148.972, 13.8413, 0.59 ) }
    dend_47 { pt3dadd( -24.7554, 149.797, 13.9529, 0.88 ) }
    dend_47 { pt3dadd( -24.9315, 150.114, 13.9262, 1.03 ) }
    dend_47 { pt3dadd( -25.0943, 150.722, 13.745, 0.81 ) }
    dend_47 { pt3dadd( -25.1175, 151.423, 13.4849, 0.66 ) }
    dend_47 { pt3dadd( -25.0237, 152.508, 13.0702, 0.59 ) }
    dend_47 { pt3dadd( -24.8113, 153.984, 12.4955, 0.59 ) }
    dend_47 { pt3dadd( -24.6664, 154.947, 12.1408, 0.66 ) }
    dend_47 { pt3dadd( -24.5011, 156.171, 11.7545, 0.81 ) }
    dend_47 { pt3dadd( -24.356, 157.225, 11.4772, 0.66 ) }
    dend_47 { pt3dadd( -24.1013, 158.82, 11.1476, 0.81 ) }
    dend_47 { pt3dadd( -23.9118, 159.926, 10.9625, 0.88 ) }
    dend_47 { pt3dadd( -23.711, 161.134, 10.7824, 0.96 ) }
    dend_47 { pt3dadd( -23.5722, 162.189, 10.6037, 0.96 ) }
    dend_47 { pt3dadd( -23.4992, 163.202, 10.4011, 0.96 ) }
    dend_47 { pt3dadd( -23.4937, 164.589, 10.0532, 0.74 ) }
    dend_47 { pt3dadd( -23.5592, 165.594, 9.75539, 0.74 ) }
    dend_47 { pt3dadd( -23.6513, 166.314, 9.53309, 0.74 ) }
    dend_47 { pt3dadd( -23.7882, 167.173, 9.26899, 0.74 ) }
    dend_47 { pt3dadd( -24.0235, 168.56, 8.85064, 0.74 ) }
    dend_47 { pt3dadd( -24.2077, 169.56, 8.62144, 0.88 ) }
    dend_47 { pt3dadd( -24.4612, 170.97, 8.39714, 0.88 ) }
    dend_47 { pt3dadd( -24.6889, 172.422, 8.23624, 0.88 ) }
    dend_47 { pt3dadd( -24.845, 173.611, 8.13193, 0.88 ) }
    dend_47 { pt3dadd( -24.9523, 174.707, 8.03821, 0.81 ) }
    dend_47 { pt3dadd( -25.0597, 176.01, 7.92791, 0.66 ) }
    dend_47 { pt3dadd( -25.1895, 177.012, 7.81059, 0.59 ) }
    dend_47 { pt3dadd( -25.3582, 177.703, 7.70339, 0.74 ) }
    dend_47 { pt3dadd( -25.5927, 178.316, 7.5805, 0.74 ) }
    dend_47 { pt3dadd( -25.9241, 179.103, 7.37862, 0.74 ) }
    dend_47 { pt3dadd( -26.1553, 179.728, 7.21125, 0.66 ) }
    dend_47 { pt3dadd( -26.4035, 180.584, 6.97766, 0.66 ) }
    dend_47 { pt3dadd( -26.6343, 181.603, 6.75712, 0.52 ) }
    dend_47 { pt3dadd( -26.7993, 182.583, 6.57516, 0.52 ) }
    dend_47 { pt3dadd( -26.9343, 183.641, 6.3684, 0.59 ) }
    dend_47 { pt3dadd( -27.1238, 185.083, 6.04466, 1.11 ) }
    dend_47 { pt3dadd( -27.2609, 185.887, 5.83092, 1.33 ) }
    dend_47 { pt3dadd( -27.4172, 186.567, 5.63299, 1.33 ) }
    dend_47 { pt3dadd( -27.7689, 187.679, 5.30042, 0.74 ) }
    dend_47 { pt3dadd( -28.2186, 188.8, 4.97907, 0.59 ) }
    dend_47 { pt3dadd( -28.6889, 189.786, 4.71144, 0.66 ) }
    dend_47 { pt3dadd( -29.1386, 190.709, 4.4785, 0.66 ) }
    dend_47 { pt3dadd( -29.59, 191.678, 4.21388, 0.74 ) }
    dend_47 { pt3dadd( -30.0925, 192.724, 3.89443, 0.81 ) }
    dend_47 { pt3dadd( -30.4931, 193.483, 3.66062, 0.81 ) }
    dend_47 { pt3dadd( -30.9323, 194.244, 3.4241, 0.66 ) }
    dend_47 { pt3dadd( -31.746, 195.563, 2.977, 0.66 ) }
    dend_47 { pt3dadd( -32.5302, 196.685, 2.5346, 0.52 ) }
    dend_47 { pt3dadd( -33.2064, 197.531, 2.15004, 0.44 ) }
    dend_47 { pt3dadd( -33.6205, 198.005, 1.91454, 0.59 ) }
    dend_47 { pt3dadd( -34.0427, 198.435, 1.69993, 0.59 ) }
    dend_47 { pt3dadd( -34.5986, 198.945, 1.44606, 0.59 ) }
    dend_47 { pt3dadd( -35.2687, 199.545, 1.17195, 0.66 ) }
    dend_47 { pt3dadd( -35.6655, 199.957, 1.03087, 0.66 ) }
    dend_47 { pt3dadd( -36.1819, 200.604, 0.81136, 0.66 ) }
    dend_47 { pt3dadd( -36.6827, 201.292, 0.564702, 0.59 ) }
    dend_47 { pt3dadd( -37.1445, 201.964, 0.299895, 0.44 ) }
    dend_47 { pt3dadd( -37.5737, 202.596, 0.0142632, 0.44 ) }
    dend_47 { pt3dadd( -38.0032, 203.202, -0.305366, 0.88 ) }
    dend_47 { pt3dadd( -38.3536, 203.657, -0.57335, 1.03 ) }
    // Section: dend_45, id: dend_45, parent: dend_17 (entry count 80/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 1.45684, -19.5961, 2.30081, 1.47 ) }
    dend_45 { pt3dadd( 2.35982, -20.2822, 1.52582, 1.47 ) }
    dend_45 { pt3dadd( 3.06975, -20.9452, 0.870725, 1.03 ) }
    dend_45 { pt3dadd( 3.85685, -21.7015, 0.111388, 0.44 ) }
    dend_45 { pt3dadd( 4.20175, -22.0137, -0.201089, 0.66 ) }
    dend_45 { pt3dadd( 4.75318, -22.4762, -0.657581, 0.81 ) }
    dend_45 { pt3dadd( 5.27144, -22.8766, -1.05337, 0.74 ) }
    dend_45 { pt3dadd( 5.9574, -23.3846, -1.53053, 0.81 ) }
    dend_45 { pt3dadd( 6.96556, -24.0145, -2.08457, 0.44 ) }
    dend_45 { pt3dadd( 7.65362, -24.3788, -2.40883, 0.81 ) }
    dend_45 { pt3dadd( 8.26977, -24.6642, -2.63977, 1.11 ) }
    dend_45 { pt3dadd( 8.93286, -24.9294, -2.82288, 1.11 ) }
    dend_45 { pt3dadd( 9.71066, -25.1837, -2.96884, 0.74 ) }
    dend_45 { pt3dadd( 10.5271, -25.3952, -3.06058, 0.52 ) }
    dend_45 { pt3dadd( 11.932, -25.6923, -3.12512, 0.52 ) }
    dend_45 { pt3dadd( 13.0248, -25.8748, -3.14704, 0.52 ) }
    dend_45 { pt3dadd( 13.6199, -25.9401, -3.14145, 0.44 ) }
    dend_45 { pt3dadd( 14.6027, -25.9839, -3.09944, 0.66 ) }
    dend_45 { pt3dadd( 15.2275, -25.9615, -3.05995, 1.18 ) }
    dend_45 { pt3dadd( 15.8899, -25.8839, -3.00722, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( 16.6407, -25.7339, -2.93279, 1.03 ) }
    dend_45 { pt3dadd( 17.3487, -25.566, -2.89304, 0.81 ) }
    dend_45 { pt3dadd( 18.0092, -25.4151, -2.88601, 0.59 ) }
    dend_45 { pt3dadd( 18.8703, -25.2314, -2.94654, 0.81 ) }
    dend_45 { pt3dadd( 19.5254, -25.0948, -3.03812, 0.81 ) }
    dend_45 { pt3dadd( 20.3772, -24.9107, -3.27281, 0.52 ) }
    dend_45 { pt3dadd( 20.8514, -24.811, -3.45899, 0.52 ) }
    dend_45 { pt3dadd( 21.6175, -24.6664, -3.82044, 0.74 ) }
    dend_45 { pt3dadd( 22.4601, -24.5107, -4.23835, 0.66 ) }
    dend_45 { pt3dadd( 23.1875, -24.3766, -4.61944, 0.66 ) }
    dend_45 { pt3dadd( 24.3965, -24.136, -5.26874, 0.52 ) }
    dend_45 { pt3dadd( 25.1297, -23.9581, -5.68136, 0.44 ) }
    dend_45 { pt3dadd( 25.8967, -23.7622, -6.08854, 0.44 ) }
    dend_45 { pt3dadd( 26.6594, -23.5792, -6.41354, 0.74 ) }
    dend_45 { pt3dadd( 27.185, -23.4666, -6.57102, 0.88 ) }
    dend_45 { pt3dadd( 27.807, -23.3543, -6.69203, 0.74 ) }
    dend_45 { pt3dadd( 28.9952, -23.1587, -6.82864, 0.37 ) }
    dend_45 { pt3dadd( 29.6145, -23.0697, -6.9426, 0.37 ) }
    dend_45 { pt3dadd( 30.5838, -22.9967, -7.15785, 0.66 ) }
    dend_45 { pt3dadd( 31.3064, -22.9838, -7.32636, 0.66 ) }
    dend_45 { pt3dadd( 31.9721, -22.9833, -7.46647, 0.81 ) }
    dend_45 { pt3dadd( 32.4377, -22.986, -7.55492, 0.81 ) }
    dend_45 { pt3dadd( 34.2565, -22.9737, -7.87033, 0.66 ) }
    dend_45 { pt3dadd( 35.3944, -22.9231, -8.09628, 0.66 ) }
    dend_45 { pt3dadd( 36.1227, -22.8799, -8.27501, 0.81 ) }
    dend_45 { pt3dadd( 36.9201, -22.8055, -8.52899, 0.81 ) }
    dend_45 { pt3dadd( 37.6728, -22.7011, -8.83198, 0.66 ) }
    dend_45 { pt3dadd( 38.1362, -22.6005, -9.05236, 0.59 ) }
    dend_45 { pt3dadd( 38.6428, -22.4082, -9.37418, 0.59 ) }
    dend_45 { pt3dadd( 39.4504, -21.9886, -10.0662, 0.59 ) }
    dend_45 { pt3dadd( 40.405, -21.444, -10.993, 0.96 ) }
    dend_45 { pt3dadd( 40.9034, -21.1769, -11.4909, 1.11 ) }
    dend_45 { pt3dadd( 41.3118, -20.9671, -11.8753, 1.18 ) }
    dend_45 { pt3dadd( 42.0576, -20.5958, -12.4448, 0.81 ) }
    dend_45 { pt3dadd( 42.979, -20.1462, -12.9377, 0.52 ) }
    dend_45 { pt3dadd( 43.5898, -19.8631, -13.1191, 0.66 ) }
    dend_45 { pt3dadd( 44.3736, -19.5371, -13.1993, 0.66 ) }
    dend_45 { pt3dadd( 45.0492, -19.254, -13.2047, 0.44 ) }
    dend_45 { pt3dadd( 46.0651, -18.8137, -13.1557, 0.44 ) }
    dend_45 { pt3dadd( 46.7436, -18.4698, -13.0725, 0.52 ) }
    dend_45 { pt3dadd( 47.3414, -18.0865, -12.9794, 0.66 ) }
    dend_45 { pt3dadd( 47.8857, -17.6612, -12.8761, 1.11 ) }
    dend_45 { pt3dadd( 48.241, -17.3373, -12.7942, 1.25 ) }
    dend_45 { pt3dadd( 48.5487, -17.0412, -12.7176, 1.25 ) }
    dend_45 { pt3dadd( 49.0741, -16.518, -12.5892, 1.25 ) }
    dend_45 { pt3dadd( 49.6194, -15.9887, -12.4472, 0.74 ) }
    dend_45 { pt3dadd( 50.4248, -15.2655, -12.262, 0.88 ) }
    dend_45 { pt3dadd( 50.7621, -14.9698, -12.197, 0.88 ) }
    dend_45 { pt3dadd( 51.1126, -14.6581, -12.1233, 0.88 ) }
    dend_45 { pt3dadd( 51.7182, -14.0947, -12.041, 0.59 ) }
    dend_45 { pt3dadd( 52.4583, -13.3592, -12.0108, 0.52 ) }
    dend_45 { pt3dadd( 52.9557, -12.8357, -12.0617, 0.52 ) }
    dend_45 { pt3dadd( 53.6686, -12.1296, -12.1914, 0.81 ) }
    dend_45 { pt3dadd( 54.2193, -11.6028, -12.3092, 0.81 ) }
    dend_45 { pt3dadd( 55.2134, -10.7024, -12.5463, 0.96 ) }
    dend_45 { pt3dadd( 55.7097, -10.2828, -12.6755, 1.11 ) }
    dend_45 { pt3dadd( 56.3741, -9.76489, -12.896, 1.4 ) }
    dend_45 { pt3dadd( 57.5802, -8.87256, -13.3406, 0.81 ) }
    dend_45 { pt3dadd( 58.4004, -8.28621, -13.6747, 0.81 ) }
    dend_45 { pt3dadd( 59.0592, -7.78228, -13.9642, 0.81 ) }
    dend_45 { pt3dadd( 59.3986, -7.48615, -14.108, 0.81 ) }
    dend_45 { pt3dadd( 60.2501, -6.60944, -14.5039, 0.52 ) }
    dend_45 { pt3dadd( 60.9587, -5.67328, -14.8926, 0.66 ) }
    dend_45 { pt3dadd( 61.3467, -4.99015, -15.1696, 0.59 ) }
    dend_45 { pt3dadd( 61.7128, -4.23242, -15.4298, 0.37 ) }
    dend_45 { pt3dadd( 62.0861, -3.35915, -15.6653, 1.03 ) }
    dend_45 { pt3dadd( 62.2642, -2.9312, -15.7523, 1.25 ) }
    dend_45 { pt3dadd( 62.4825, -2.44068, -15.818, 1.25 ) }
    dend_45 { pt3dadd( 62.9129, -1.64294, -15.908, 1.03 ) }
    dend_45 { pt3dadd( 63.3259, -1.00687, -15.9724, 1.18 ) }
    dend_45 { pt3dadd( 63.8902, -0.215277, -16.0425, 1.03 ) }
    dend_45 { pt3dadd( 64.4295, 0.544102, -16.0923, 1.18 ) }
    dend_45 { pt3dadd( 64.8154, 1.09887, -16.1135, 1.18 ) }
    dend_45 { pt3dadd( 65.2831, 1.7627, -16.1237, 0.74 ) }
    dend_45 { pt3dadd( 65.6541, 2.25781, -16.1237, 0.52 ) }
    dend_45 { pt3dadd( 66.0916, 2.77804, -16.1237, 0.52 ) }
    dend_45 { pt3dadd( 66.8934, 3.56355, -16.1272, 0.81 ) }
    dend_45 { pt3dadd( 67.4647, 4.05615, -16.1316, 0.88 ) }
    dend_45 { pt3dadd( 67.9329, 4.42284, -16.1366, 0.81 ) }
    dend_45 { pt3dadd( 68.7496, 4.95886, -16.1466, 0.37 ) }
    dend_45 { pt3dadd( 69.3177, 5.25656, -16.1689, 0.29 ) }
    dend_45 { pt3dadd( 70.2703, 5.66933, -16.2689, 0.59 ) }
    dend_45 { pt3dadd( 70.6217, 5.80976, -16.3315, 0.66 ) }
    dend_45 { pt3dadd( 71.3915, 6.128, -16.5108, 0.37 ) }
    dend_45 { pt3dadd( 72.3093, 6.54638, -16.7703, 0.59 ) }
    dend_45 { pt3dadd( 73.1412, 6.98558, -17.0126, 0.81 ) }
    dend_45 { pt3dadd( 74.2867, 7.64081, -17.328, 1.99 ) }
    dend_45 { pt3dadd( 74.8766, 7.97526, -17.4796, 2.65 ) }
    dend_45 { pt3dadd( 75.3016, 8.20186, -17.5761, 2.65 ) }
    dend_45 { pt3dadd( 76.2735, 8.70168, -17.7673, 1.18 ) }
    dend_45 { pt3dadd( 77.3217, 9.22499, -17.9232, 0.44 ) }
    dend_45 { pt3dadd( 78.2207, 9.63163, -17.9842, 0.74 ) }
    dend_45 { pt3dadd( 78.8429, 9.88543, -17.9731, 0.74 ) }
    dend_45 { pt3dadd( 79.4539, 10.1345, -17.9414, 0.81 ) }
    dend_45 { pt3dadd( 79.8581, 10.2984, -17.9137, 0.81 ) }
    dend_45 { pt3dadd( 80.4888, 10.5461, -17.8546, 0.59 ) }
    dend_45 { pt3dadd( 81.1992, 10.7957, -17.7611, 0.44 ) }
    dend_45 { pt3dadd( 81.8829, 11.0239, -17.6302, 0.37 ) }
    dend_45 { pt3dadd( 82.5022, 11.2154, -17.4877, 0.37 ) }
    dend_45 { pt3dadd( 83.4167, 11.4706, -17.2917, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_45 { pt3dadd( 83.9583, 11.5987, -17.1976, 0.88 ) }
    dend_45 { pt3dadd( 84.7983, 11.7476, -17.1144, 0.66 ) }
    dend_45 { pt3dadd( 85.3364, 11.827, -17.1175, 0.52 ) }
    dend_45 { pt3dadd( 85.991, 11.9103, -17.1537, 0.52 ) }
    dend_45 { pt3dadd( 86.9014, 12.0446, -17.2227, 0.88 ) }
    dend_45 { pt3dadd( 87.5785, 12.1824, -17.3038, 0.88 ) }
    dend_45 { pt3dadd( 88.4543, 12.4189, -17.4347, 0.66 ) }
    dend_45 { pt3dadd( 89.5028, 12.7648, -17.6016, 0.44 ) }
    dend_45 { pt3dadd( 90.2166, 13.0433, -17.699, 0.44 ) }
    dend_45 { pt3dadd( 90.9627, 13.3561, -17.7703, 0.66 ) }
    dend_45 { pt3dadd( 91.7303, 13.6789, -17.8097, 0.52 ) }
    dend_45 { pt3dadd( 92.3212, 13.9269, -17.8245, 0.52 ) }
    dend_45 { pt3dadd( 93.0942, 14.247, -17.8266, 0.74 ) }
    dend_45 { pt3dadd( 93.8376, 14.5435, -17.7861, 0.44 ) }
    dend_45 { pt3dadd( 94.8057, 14.9349, -17.713, 0.44 ) }
    dend_45 { pt3dadd( 95.703, 15.3106, -17.6183, 0.88 ) }
    dend_45 { pt3dadd( 96.3171, 15.5888, -17.5337, 1.03 ) }
    dend_45 { pt3dadd( 97.1521, 16.0044, -17.3932, 0.74 ) }
    dend_45 { pt3dadd( 98.2732, 16.6491, -17.1708, 0.52 ) }
    dend_45 { pt3dadd( 98.7563, 16.9527, -17.0635, 0.96 ) }
    dend_45 { pt3dadd( 99.1903, 17.2554, -16.9623, 0.96 ) }
    dend_45 { pt3dadd( 99.7895, 17.6803, -16.8275, 0.81 ) }
    dend_45 { pt3dadd( 100.669, 18.2525, -16.6613, 0.52 ) }
    dend_45 { pt3dadd( 101.269, 18.5849, -16.5761, 0.52 ) }
    dend_45 { pt3dadd( 102.287, 19.0397, -16.4761, 0.59 ) }
    dend_45 { pt3dadd( 102.858, 19.2477, -16.4457, 0.81 ) }
    dend_45 { pt3dadd( 103.51, 19.4392, -16.438, 0.81 ) }
    dend_45 { pt3dadd( 104.212, 19.5991, -16.4572, 0.66 ) }
    dend_45 { pt3dadd( 104.786, 19.7007, -16.4958, 0.59 ) }
    dend_45 { pt3dadd( 105.679, 19.8555, -16.5753, 0.59 ) }
    dend_45 { pt3dadd( 106.915, 20.1434, -16.7048, 0.44 ) }
    dend_45 { pt3dadd( 107.623, 20.3355, -16.821, 0.74 ) }
    dend_45 { pt3dadd( 108.183, 20.5085, -16.935, 0.74 ) }
    dend_45 { pt3dadd( 108.447, 20.5973, -16.9943, 0.74 ) }
    dend_45 { pt3dadd( 109.272, 20.8901, -17.2162, 0.44 ) }
    dend_45 { pt3dadd( 110.18, 21.2174, -17.4861, 0.44 ) }
    dend_45 { pt3dadd( 111.485, 21.7329, -17.8512, 0.74 ) }
    dend_45 { pt3dadd( 112.072, 21.9928, -18.0431, 0.74 ) }
    dend_45 { pt3dadd( 112.635, 22.2751, -18.2471, 0.74 ) }
    dend_45 { pt3dadd( 113.337, 22.67, -18.5197, 0.52 ) }
    dend_45 { pt3dadd( 113.948, 23.0542, -18.765, 0.37 ) }
    dend_45 { pt3dadd( 114.536, 23.4728, -18.9842, 0.66 ) }
    dend_45 { pt3dadd( 114.997, 23.8581, -19.1218, 1.03 ) }
    dend_45 { pt3dadd( 115.393, 24.1945, -19.2237, 1.18 ) }
    dend_45 { pt3dadd( 115.68, 24.4348, -19.3043, 1.18 ) }
    dend_45 { pt3dadd( 116.357, 24.9694, -19.5017, 0.59 ) }
    dend_45 { pt3dadd( 116.907, 25.3703, -19.68, 0.44 ) }
    dend_45 { pt3dadd( 117.331, 25.6579, -19.8208, 0.44 ) }
    dend_45 { pt3dadd( 118.021, 26.1191, -20.0398, 0.81 ) }
    dend_45 { pt3dadd( 119.172, 26.8474, -20.4134, 1.11 ) }
    dend_45 { pt3dadd( 119.655, 27.1282, -20.5686, 1.11 ) }
    dend_45 { pt3dadd( 120.118, 27.3767, -20.7152, 0.96 ) }
    dend_45 { pt3dadd( 120.576, 27.6149, -20.8613, 0.66 ) }
    dend_45 { pt3dadd( 121.261, 27.9708, -21.0755, 0.37 ) }
    dend_45 { pt3dadd( 122.058, 28.3776, -21.3132, 0.52 ) }
    dend_45 { pt3dadd( 122.867, 28.7687, -21.5155, 0.59 ) }
    dend_45 { pt3dadd( 123.461, 29.0519, -21.6576, 0.44 ) }
    dend_45 { pt3dadd( 124.184, 29.3963, -21.8406, 0.37 ) }
    dend_45 { pt3dadd( 125.122, 29.856, -22.0886, 0.66 ) }
    dend_45 { pt3dadd( 125.702, 30.155, -22.2396, 0.44 ) }
    dend_45 { pt3dadd( 126.277, 30.4574, -22.3877, 0.44 ) }
    dend_45 { pt3dadd( 127.162, 30.9083, -22.577, 0.88 ) }
    dend_45 { pt3dadd( 127.748, 31.1864, -22.6577, 1.03 ) }
    dend_45 { pt3dadd( 128.28, 31.4199, -22.6811, 1.03 ) }
    dend_45 { pt3dadd( 129.073, 31.7624, -22.63, 0.29 ) }
    dend_45 { pt3dadd( 129.772, 32.0707, -22.5283, 0.29 ) }
    dend_45 { pt3dadd( 130.559, 32.4275, -22.3647, 0.29 ) }
    dend_45 { pt3dadd( 131.239, 32.7356, -22.1893, 0.44 ) }
    dend_45 { pt3dadd( 132.113, 33.0957, -21.9286, 1.11 ) }
    dend_45 { pt3dadd( 132.826, 33.3613, -21.7153, 1.4 ) }
    dend_45 { pt3dadd( 132.964, 33.4123, -21.6755, 1.55 ) }
    dend_45 { pt3dadd( 133.591, 33.6689, -21.5075, 0.88 ) }
    dend_45 { pt3dadd( 134.425, 34.0151, -21.3454, 0.29 ) }
    dend_45 { pt3dadd( 135.342, 34.3681, -21.2127, 0.29 ) }
    dend_45 { pt3dadd( 136.037, 34.6188, -21.143, 0.52 ) }
    dend_45 { pt3dadd( 136.441, 34.7618, -21.1193, 0.66 ) }
    dend_45 { pt3dadd( 136.898, 34.9347, -21.0944, 0.44 ) }
    dend_45 { pt3dadd( 137.603, 35.2303, -21.0471, 0.29 ) }
    dend_45 { pt3dadd( 138.147, 35.4903, -21.0076, 0.29 ) }
    dend_45 { pt3dadd( 139.017, 35.927, -20.9488, 0.66 ) }
    dend_45 { pt3dadd( 139.49, 36.1367, -20.9136, 1.11 ) }
    dend_45 { pt3dadd( 139.923, 36.305, -20.9011, 0.81 ) }
    dend_45 { pt3dadd( 140.957, 36.7098, -20.9304, 0.52 ) }
    dend_45 { pt3dadd( 141.349, 36.8778, -20.9784, 0.74 ) }
    dend_45 { pt3dadd( 142.037, 37.2071, -21.1151, 0.74 ) }
    dend_45 { pt3dadd( 142.946, 37.6949, -21.3742, 0.81 ) }
    dend_45 { pt3dadd( 143.869, 38.219, -21.7314, 0.44 ) }
    dend_45 { pt3dadd( 144.626, 38.6384, -22.1118, 0.81 ) }
    dend_45 { pt3dadd( 145.451, 39.0908, -22.6402, 1.33 ) }
    dend_45 { pt3dadd( 145.912, 39.3403, -22.9857, 1.33 ) }
    dend_45 { pt3dadd( 146.387, 39.5877, -23.3738, 1.11 ) }
    dend_45 { pt3dadd( 147.446, 40.0827, -24.263, 0.52 ) }
    dend_45 { pt3dadd( 148.371, 40.4071, -25.0275, 1.18 ) }
    dend_45 { pt3dadd( 149.093, 40.5878, -25.5992, 1.33 ) }
    dend_45 { pt3dadd( 149.809, 40.7235, -26.1357, 1.03 ) }
    dend_45 { pt3dadd( 150.749, 40.8691, -26.7951, 0.22 ) }
    dend_45 { pt3dadd( 151.403, 40.9522, -27.2084, 0.22 ) }
    dend_45 { pt3dadd( 153.098, 41.1466, -28.1637, 0.88 ) }
    dend_45 { pt3dadd( 153.721, 41.2137, -28.4579, 1.03 ) }
    dend_45 { pt3dadd( 154.265, 41.256, -28.6697, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_45 { pt3dadd( 154.986, 41.2812, -28.9109, 0.96 ) }
    dend_45 { pt3dadd( 155.567, 41.2652, -29.1079, 0.66 ) }
    dend_45 { pt3dadd( 156.479, 41.1666, -29.4021, 0.44 ) }
    dend_45 { pt3dadd( 157.431, 41.0043, -29.6713, 0.66 ) }
    dend_45 { pt3dadd( 158.226, 40.835, -29.8793, 0.74 ) }
    dend_45 { pt3dadd( 158.799, 40.7002, -30.014, 0.74 ) }
    dend_45 { pt3dadd( 160.057, 40.3879, -30.2689, 0.37 ) }
    dend_45 { pt3dadd( 160.808, 40.209, -30.3864, 0.52 ) }
    dend_45 { pt3dadd( 161.743, 40.0007, -30.4718, 0.29 ) }
    dend_45 { pt3dadd( 162.779, 39.8089, -30.5287, 0.81 ) }
    dend_45 { pt3dadd( 163.235, 39.7338, -30.5407, 1.47 ) }
    dend_45 { pt3dadd( 163.673, 39.6484, -30.5489, 1.62 ) }
    dend_45 { pt3dadd( 164.192, 39.5137, -30.5592, 1.62 ) }
    dend_45 { pt3dadd( 165.638, 39.0388, -30.6977, 0.37 ) }
    dend_45 { pt3dadd( 166.541, 38.6693, -30.8643, 0.29 ) }
    dend_45 { pt3dadd( 167.487, 38.1859, -31.1124, 0.29 ) }
    dend_45 { pt3dadd( 168.291, 37.7066, -31.3483, 0.29 ) }
    dend_45 { pt3dadd( 169.193, 37.1274, -31.6295, 1.47 ) }
    dend_45 { pt3dadd( 169.857, 36.6831, -31.8668, 1.69 ) }
    dend_45 { pt3dadd( 170.204, 36.445, -32.0244, 1.84 ) }
    dend_45 { pt3dadd( 171.273, 35.7639, -32.6029, 0.52 ) }
    dend_45 { pt3dadd( 172.007, 35.4072, -33.0061, 0.44 ) }
    dend_45 { pt3dadd( 172.572, 35.2219, -33.2991, 0.81 ) }
    dend_45 { pt3dadd( 173.173, 35.0918, -33.5939, 0.81 ) }
    dend_45 { pt3dadd( 174.01, 34.9756, -33.9528, 0.81 ) }
    dend_45 { pt3dadd( 175.266, 34.9076, -34.4751, 0.29 ) }
    dend_45 { pt3dadd( 176.289, 34.9476, -34.915, 0.29 ) }
    dend_45 { pt3dadd( 176.782, 34.9899, -35.1131, 0.52 ) }
    dend_45 { pt3dadd( 177.565, 35.0638, -35.4009, 0.66 ) }
    dend_45 { pt3dadd( 178.5, 35.1378, -35.7075, 0.81 ) }
    dend_45 { pt3dadd( 179.273, 35.1961, -35.9359, 0.96 ) }
    dend_45 { pt3dadd( 179.936, 35.2556, -36.1282, 0.74 ) }
    dend_45 { pt3dadd( 180.93, 35.356, -36.4237, 0.22 ) }
    dend_45 { pt3dadd( 181.864, 35.4743, -36.6809, 0.22 ) }
    dend_45 { pt3dadd( 182.874, 35.6413, -36.9308, 0.22 ) }
    dend_45 { pt3dadd( 183.298, 35.7261, -37.0148, 0.44 ) }
    dend_45 { pt3dadd( 183.97, 35.8711, -37.1115, 0.44 ) }
    dend_45 { pt3dadd( 185.226, 36.1892, -37.2375, 0.29 ) }
    dend_45 { pt3dadd( 186.289, 36.4952, -37.3096, 1.03 ) }
    dend_45 { pt3dadd( 186.876, 36.6857, -37.3241, 1.25 ) }
    dend_45 { pt3dadd( 187.877, 37.0496, -37.3499, 0.22 ) }
    dend_45 { pt3dadd( 188.21, 37.1717, -37.3653, 0.37 ) }
    dend_45 { pt3dadd( 189.156, 37.5281, -37.4262, 0.22 ) }
    dend_45 { pt3dadd( 189.501, 37.6706, -37.47, 0.52 ) }
    dend_45 { pt3dadd( 190.099, 37.9326, -37.5729, 0.59 ) }
    dend_45 { pt3dadd( 191.409, 38.5121, -37.8614, 0.22 ) }
    dend_45 { pt3dadd( 192.004, 38.766, -38.0245, 0.59 ) }
    dend_45 { pt3dadd( 192.523, 38.9834, -38.1995, 0.59 ) }
    dend_45 { pt3dadd( 193.733, 39.4753, -38.6978, 0.29 ) }
    dend_45 { pt3dadd( 194.602, 39.8335, -39.1121, 0.22 ) }
    dend_45 { pt3dadd( 195.084, 40.0268, -39.4016, 0.22 ) }
    dend_45 { pt3dadd( 196.136, 40.3674, -40.1793, 0.81 ) }
    dend_45 { pt3dadd( 196.842, 40.5521, -40.7623, 1.18 ) }
    dend_45 { pt3dadd( 197.533, 40.6874, -41.356, 0.74 ) }
    dend_45 { pt3dadd( 198.202, 40.7607, -41.9636, 0.44 ) }
    dend_45 { pt3dadd( 199.286, 40.9258, -43.0335, 0.74 ) }
    dend_45 { pt3dadd( 200.12, 41.139, -43.9343, 0.52 ) }
    dend_45 { pt3dadd( 200.581, 41.3084, -44.4727, 0.52 ) }
    dend_45 { pt3dadd( 201.043, 41.5246, -45.0279, 0.37 ) }
    dend_45 { pt3dadd( 201.979, 42.0585, -46.1896, 0.37 ) }
    dend_45 { pt3dadd( 202.899, 42.6697, -47.377, 2.5 ) }
    dend_45 { pt3dadd( 204.367, 43.7975, -49.2775, 0.29 ) }
    dend_45 { pt3dadd( 204.701, 44.088, -49.7453, 0.29 ) }
    dend_45 { pt3dadd( 205.237, 44.5967, -50.5969, 0.74 ) }
    dend_45 { pt3dadd( 205.615, 44.9716, -51.2517, 1.18 ) }
    dend_45 { pt3dadd( 206.078, 45.4237, -52.0885, 1.4 ) }
    dend_45 { pt3dadd( 206.379, 45.6853, -52.645, 1.4 ) }
    dend_45 { pt3dadd( 207.377, 46.5087, -54.4579, 0.29 ) }
    dend_45 { pt3dadd( 208.084, 47.0307, -55.6994, 0.44 ) }
    dend_45 { pt3dadd( 208.884, 47.5948, -57.0824, 0.22 ) }
    dend_45 { pt3dadd( 209.377, 47.9361, -57.9387, 0.22 ) }
    dend_45 { pt3dadd( 209.839, 48.2742, -58.7962, 0.74 ) }
    dend_45 { pt3dadd( 210.108, 48.4906, -59.3182, 0.88 ) }
    dend_45 { pt3dadd( 211.469, 49.6998, -61.9701, 0.29 ) }
    dend_45 { pt3dadd( 211.972, 50.2247, -62.9657, 0.52 ) }
    dend_45 { pt3dadd( 212.61, 51.0337, -64.2998, 0.81 ) }
    dend_45 { pt3dadd( 213.524, 52.3133, -66.296, 0.81 ) }
    dend_45 { pt3dadd( 213.832, 52.7993, -67.0238, 0.29 ) }
    dend_45 { pt3dadd( 214.054, 53.2266, -67.6254, 0.37 ) }
    dend_45 { pt3dadd( 214.305, 54.0133, -68.4803, 0.22 ) }
    dend_45 { pt3dadd( 214.408, 54.442, -68.869, 0.81 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 81/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 1.45684, -19.5961, 2.30081, 3.68 ) }
    dend_18 { pt3dadd( 1.01489, -21.5068, 2.45512, 3.68 ) }
    dend_18 { pt3dadd( 0.487062, -23.7159, 2.61363, 3.32 ) }
    dend_18 { pt3dadd( -0.138565, -26.0745, 2.77589, 3.17 ) }
    dend_18 { pt3dadd( -0.909607, -28.7802, 2.97541, 3.09 ) }
    dend_18 { pt3dadd( -1.5394, -30.887, 3.12944, 2.8 ) }
    dend_18 { pt3dadd( -2.10325, -32.7399, 3.29012, 2.73 ) }
    dend_18 { pt3dadd( -2.64372, -34.4262, 3.4544, 2.65 ) }
    dend_18 { pt3dadd( -3.13307, -35.8866, 3.619, 2.65 ) }
    dend_18 { pt3dadd( -3.62658, -37.3511, 3.79368, 2.65 ) }
    dend_18 { pt3dadd( -4.16112, -38.887, 4.01559, 2.65 ) }
    dend_18 { pt3dadd( -4.84143, -40.8101, 4.34346, 2.5 ) }
    dend_18 { pt3dadd( -5.11604, -41.6105, 4.50091, 2.58 ) }
    dend_18 { pt3dadd( -5.4542, -42.6855, 4.73604, 2.58 ) }
    dend_18 { pt3dadd( -5.68911, -43.6238, 4.95231, 2.65 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 96/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 0.142173, 32.7045, -7.43908, 1.4 ) }
    dend_10 { pt3dadd( 0.398825, 33.5452, -7.52568, 1.4 ) }
    dend_10 { pt3dadd( 0.745901, 34.948, -7.62756, 1.11 ) }
    dend_10 { pt3dadd( 1.00815, 36.1857, -7.69799, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_10 { pt3dadd( 1.29736, 37.6101, -7.67799, 0.96 ) }
    dend_10 { pt3dadd( 1.60426, 38.9281, -7.75352, 1.11 ) }
    dend_10 { pt3dadd( 1.94886, 40.1713, -7.88265, 0.88 ) }
    dend_10 { pt3dadd( 2.31691, 41.4072, -8.09623, 0.88 ) }
    dend_10 { pt3dadd( 2.55964, 42.0185, -8.32413, 1.11 ) }
    dend_10 { pt3dadd( 3.30226, 43.2773, -9.12099, 1.11 ) }
    dend_10 { pt3dadd( 4.90152, 45.2614, -10.9248, 1.4 ) }
    dend_10 { pt3dadd( 5.36163, 45.7691, -11.4706, 1.62 ) }
    dend_10 { pt3dadd( 5.89072, 46.3515, -12.1189, 1.11 ) }
    dend_10 { pt3dadd( 7.07066, 47.6822, -13.5087, 0.88 ) }
    dend_10 { pt3dadd( 7.69229, 48.4498, -14.1847, 1.47 ) }
    dend_10 { pt3dadd( 8.11732, 49.0381, -14.5893, 1.47 ) }
    dend_10 { pt3dadd( 8.7953, 50.0887, -15.0048, 1.18 ) }
    dend_10 { pt3dadd( 9.41752, 51.0914, -15.2921, 1.33 ) }
    dend_10 { pt3dadd( 9.94215, 51.9527, -15.4545, 1.33 ) }
    dend_10 { pt3dadd( 10.5005, 52.9202, -15.5895, 1.18 ) }
    dend_10 { pt3dadd( 11.2227, 54.2584, -15.7799, 1.03 ) }
    dend_10 { pt3dadd( 11.685, 55.2385, -15.9586, 0.88 ) }
    dend_10 { pt3dadd( 12.0986, 56.2636, -16.2236, 0.88 ) }
    dend_10 { pt3dadd( 12.4051, 57.3397, -16.6073, 1.03 ) }
    dend_10 { pt3dadd( 12.6963, 59.0573, -17.396, 1.18 ) }
    dend_10 { pt3dadd( 12.7978, 60.1101, -17.9596, 1.11 ) }
    dend_10 { pt3dadd( 12.8887, 61.5716, -18.8022, 1.25 ) }
    dend_10 { pt3dadd( 12.9575, 62.5488, -19.3865, 1.11 ) }
    dend_10 { pt3dadd( 13.1104, 63.7208, -20.0999, 0.96 ) }
    dend_10 { pt3dadd( 13.3562, 64.6855, -20.6493, 0.88 ) }
    dend_10 { pt3dadd( 13.8811, 65.827, -21.1762, 0.88 ) }
    dend_10 { pt3dadd( 14.4523, 66.7194, -21.4699, 0.96 ) }
    dend_10 { pt3dadd( 14.9834, 67.4099, -21.5893, 1.03 ) }
    dend_10 { pt3dadd( 15.5866, 68.1575, -21.6473, 1.03 ) }
    dend_10 { pt3dadd( 16.2988, 69.071, -21.6584, 0.88 ) }
    dend_10 { pt3dadd( 16.6864, 69.6818, -21.6591, 0.74 ) }
    dend_10 { pt3dadd( 17.1712, 70.923, -21.7378, 1.69 ) }
    dend_10 { pt3dadd( 17.3057, 71.6325, -21.8266, 2.28 ) }
    dend_10 { pt3dadd( 17.3611, 72.3589, -21.9415, 2.28 ) }
    dend_10 { pt3dadd( 17.3808, 73.2893, -22.0974, 2.06 ) }
    dend_10 { pt3dadd( 17.3933, 74.2812, -22.2646, 1.62 ) }
    dend_10 { pt3dadd( 17.4637, 75.5099, -22.4867, 1.18 ) }
    dend_10 { pt3dadd( 17.5542, 76.255, -22.6334, 1.4 ) }
    dend_10 { pt3dadd( 17.7122, 77.0716, -22.8087, 1.4 ) }
    dend_10 { pt3dadd( 17.9622, 78.0771, -23.0827, 1.18 ) }
    dend_10 { pt3dadd( 18.2028, 78.9659, -23.3639, 1.03 ) }
    dend_10 { pt3dadd( 18.6426, 80.4628, -23.918, 0.81 ) }
    dend_10 { pt3dadd( 18.9355, 81.3726, -24.2831, 0.81 ) }
    dend_10 { pt3dadd( 19.1884, 82.1174, -24.5863, 0.81 ) }
    dend_10 { pt3dadd( 19.5268, 83.0896, -24.9671, 0.96 ) }
    dend_10 { pt3dadd( 19.8055, 83.8779, -25.243, 1.33 ) }
    dend_10 { pt3dadd( 20.1843, 84.9427, -25.5401, 1.11 ) }
    dend_10 { pt3dadd( 20.6012, 86.1011, -25.767, 0.96 ) }
    dend_10 { pt3dadd( 20.8792, 86.8076, -25.8629, 1.18 ) }
    dend_10 { pt3dadd( 21.2388, 87.6682, -25.9458, 1.18 ) }
    dend_10 { pt3dadd( 21.6107, 88.5405, -26.0002, 1.33 ) }
    dend_10 { pt3dadd( 21.8991, 89.24, -26.0561, 1.18 ) }
    dend_10 { pt3dadd( 22.1023, 89.7714, -26.1035, 1.18 ) }
    dend_10 { pt3dadd( 22.4079, 90.5621, -26.2044, 0.88 ) }
    dend_10 { pt3dadd( 22.7315, 91.3316, -26.3278, 0.74 ) }
    dend_10 { pt3dadd( 23.0979, 92.1438, -26.4735, 0.74 ) }
    dend_10 { pt3dadd( 23.6574, 93.2704, -26.7149, 0.88 ) }
    dend_10 { pt3dadd( 24.1452, 94.155, -26.9062, 1.11 ) }
    dend_10 { pt3dadd( 24.6101, 94.9647, -27.1037, 1.11 ) }
    dend_10 { pt3dadd( 25.0216, 95.6684, -27.2694, 0.96 ) }
    dend_10 { pt3dadd( 25.5811, 96.6179, -27.4528, 1.18 ) }
    dend_10 { pt3dadd( 26.1672, 97.6369, -27.5686, 0.96 ) }
    dend_10 { pt3dadd( 26.6056, 98.4709, -27.5823, 0.81 ) }
    dend_10 { pt3dadd( 27.2726, 99.8403, -27.4721, 0.88 ) }
    dend_10 { pt3dadd( 27.7205, 100.758, -27.2967, 0.88 ) }
    dend_10 { pt3dadd( 28.1231, 101.597, -27.0483, 1.03 ) }
    dend_10 { pt3dadd( 28.4858, 102.367, -26.7702, 1.11 ) }
    dend_10 { pt3dadd( 28.8288, 103.142, -26.4693, 0.88 ) }
    dend_10 { pt3dadd( 29.2115, 104.016, -26.1406, 0.66 ) }
    dend_10 { pt3dadd( 29.5162, 104.695, -25.8806, 0.66 ) }
    dend_10 { pt3dadd( 29.9077, 105.584, -25.6257, 0.66 ) }
    dend_10 { pt3dadd( 30.5748, 107.181, -25.2953, 0.96 ) }
    dend_10 { pt3dadd( 30.935, 108.185, -25.1765, 1.4 ) }
    dend_10 { pt3dadd( 31.172, 108.969, -25.1315, 1.55 ) }
    dend_10 { pt3dadd( 31.3164, 109.57, -25.1047, 1.84 ) }
    dend_10 { pt3dadd( 31.5176, 110.477, -25.046, 1.92 ) }
    dend_10 { pt3dadd( 31.707, 111.236, -24.9605, 1.77 ) }
    dend_10 { pt3dadd( 32.0417, 112.402, -24.7441, 1.25 ) }
    dend_10 { pt3dadd( 32.3825, 113.406, -24.4727, 1.18 ) }
    dend_10 { pt3dadd( 32.7561, 114.34, -24.1631, 1.11 ) }
    dend_10 { pt3dadd( 33.1703, 115.245, -23.8034, 1.25 ) }
    dend_10 { pt3dadd( 33.6549, 116.184, -23.3732, 1.33 ) }
    dend_10 { pt3dadd( 33.9389, 116.679, -23.1408, 1.33 ) }
    dend_10 { pt3dadd( 34.4406, 117.486, -22.7645, 1.25 ) }
    dend_10 { pt3dadd( 34.8981, 118.228, -22.4844, 0.74 ) }
    dend_10 { pt3dadd( 35.4243, 119.127, -22.264, 0.52 ) }
    dend_10 { pt3dadd( 35.7999, 119.832, -22.184, 0.52 ) }
    dend_10 { pt3dadd( 36.2112, 120.66, -22.141, 0.81 ) }
    dend_10 { pt3dadd( 36.7574, 121.823, -22.1576, 1.4 ) }
    dend_10 { pt3dadd( 37.2082, 122.826, -22.2598, 1.69 ) }
    dend_10 { pt3dadd( 37.5194, 123.546, -22.381, 1.84 ) }
    dend_10 { pt3dadd( 37.7898, 124.153, -22.5608, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 93/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.142173, 32.7045, -7.43908, 1.4 ) }
    dend_1 { pt3dadd( -0.969974, 33.4512, -7.04409, 1.4 ) }
    dend_1 { pt3dadd( -1.82428, 33.9808, -6.69965, 0.96 ) }
    dend_1 { pt3dadd( -2.58287, 34.476, -6.4012, 1.25 ) }
    dend_1 { pt3dadd( -3.22339, 34.938, -6.16384, 1.4 ) }
    dend_1 { pt3dadd( -3.71589, 35.3289, -5.99202, 1.47 ) }
    dend_1 { pt3dadd( -5.16025, 36.582, -5.52123, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_1 { pt3dadd( -5.87888, 37.2464, -5.28091, 1.11 ) }
    dend_1 { pt3dadd( -6.67824, 38.1237, -5.02624, 1.11 ) }
    dend_1 { pt3dadd( -7.40584, 39.073, -4.82184, 1.03 ) }
    dend_1 { pt3dadd( -7.95158, 39.85, -4.71465, 1.03 ) }
    dend_1 { pt3dadd( -8.6529, 40.8888, -4.66908, 1.03 ) }
    dend_1 { pt3dadd( -9.13497, 41.5708, -4.71551, 1.18 ) }
    dend_1 { pt3dadd( -9.94325, 42.539, -4.84703, 1.18 ) }
    dend_1 { pt3dadd( -11.0729, 43.535, -5.11318, 0.81 ) }
    dend_1 { pt3dadd( -11.844, 43.9875, -5.3325, 0.88 ) }
    dend_1 { pt3dadd( -12.733, 44.3296, -5.61257, 1.11 ) }
    dend_1 { pt3dadd( -13.83, 44.6274, -5.9697, 0.96 ) }
    dend_1 { pt3dadd( -14.5573, 44.7897, -6.20334, 0.96 ) }
    dend_1 { pt3dadd( -15.5993, 45.0118, -6.52295, 0.88 ) }
    dend_1 { pt3dadd( -16.5228, 45.2612, -6.78013, 0.81 ) }
    dend_1 { pt3dadd( -17.7264, 45.7286, -7.03803, 1.11 ) }
    dend_1 { pt3dadd( -18.282, 46.0049, -7.13239, 1.25 ) }
    dend_1 { pt3dadd( -18.8255, 46.3324, -7.21895, 1.25 ) }
    dend_1 { pt3dadd( -19.6086, 46.8586, -7.3265, 0.88 ) }
    dend_1 { pt3dadd( -20.3286, 47.3818, -7.40656, 0.88 ) }
    dend_1 { pt3dadd( -21.0032, 47.8957, -7.45399, 0.96 ) }
    dend_1 { pt3dadd( -21.7932, 48.5151, -7.46757, 0.96 ) }
    dend_1 { pt3dadd( -22.4209, 49.0057, -7.45937, 1.03 ) }
    dend_1 { pt3dadd( -23.0991, 49.529, -7.43035, 1.25 ) }
    dend_1 { pt3dadd( -23.8074, 50.0663, -7.36795, 1.25 ) }
    dend_1 { pt3dadd( -24.269, 50.4149, -7.31389, 1.11 ) }
    dend_1 { pt3dadd( -24.8352, 50.8362, -7.22344, 1.25 ) }
    dend_1 { pt3dadd( -25.3799, 51.2422, -7.09915, 1.4 ) }
    dend_1 { pt3dadd( -25.9173, 51.6476, -6.95405, 1.4 ) }
    dend_1 { pt3dadd( -26.5826, 52.1557, -6.7567, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 29/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.54828, 42.8383, -2.3154, 0.725084 ) }
    axon_1 { pt3dadd( -3.39577, 57.8143, -2.3154, 0.725084 ) }
    axon_1 { pt3dadd( -4.24326, 72.7904, -2.3154, 0.725084 ) }
    // Section: dend_56, id: dend_56, parent: dend_50 (entry count 32/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -38.8038, 33.111, 37.4883, 0.88 ) }
    dend_56 { pt3dadd( -40.8956, 32.9374, 47.2657, 0.88 ) }
    dend_56 { pt3dadd( -43.8584, 31.5715, 56.7277, 0.88 ) }
    dend_56 { pt3dadd( -46.002, 31.3801, 66.4936, 0.88 ) }
    dend_56 { pt3dadd( -48.5729, 30.395, 76.1118, 0.88 ) }
    dend_56 { pt3dadd( -52.0144, 29.434, 85.4562, 0.88 ) }
    dend_56 { pt3dadd( -57.1698, 27.9923, 93.9141, 0.88 ) }
    dend_56 { pt3dadd( -61.2814, 25.6441, 102.752, 0.88 ) }
    dend_56 { pt3dadd( -63.6221, 24.0941, 112.361, 0.88 ) }
    dend_56 { pt3dadd( -67.3671, 22.9741, 121.572, 0.88 ) }
    dend_56 { pt3dadd( -69.723, 22.334, 131.271, 0.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 43/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -38.8038, 33.111, 37.4883, 0.22 ) }
    dend_51 { pt3dadd( -47.3152, 38.5283, 38.4565, 0.88 ) }
    dend_51 { pt3dadd( -56.7444, 42.0057, 38.8068, 0.88 ) }
    dend_51 { pt3dadd( -65.4935, 46.6797, 40.714, 0.88 ) }
    dend_51 { pt3dadd( -73.3187, 52.8706, 42.7147, 0.88 ) }
    dend_51 { pt3dadd( -80.9421, 59.2299, 44.9955, 0.88 ) }
    dend_51 { pt3dadd( -90.0018, 63.6163, 45.681, 0.88 ) }
    dend_51 { pt3dadd( -99.4627, 67.0174, 45.6803, 0.88 ) }
    dend_51 { pt3dadd( -108.348, 71.8243, 46.0137, 0.88 ) }
    dend_51 { pt3dadd( -116.633, 77.6951, 46.2983, 0.88 ) }
    dend_51 { pt3dadd( -124.086, 84.6844, 46.6832, 0.88 ) }
    dend_51 { pt3dadd( -131.479, 91.527, 48.3788, 0.88 ) }
    dend_51 { pt3dadd( -139.465, 97.2722, 50.888, 0.88 ) }
    dend_51 { pt3dadd( -146.433, 103.225, 55.2808, 0.88 ) }
    dend_51 { pt3dadd( -153.887, 107.117, 60.8217, 0.88 ) }
    dend_51 { pt3dadd( -161.376, 109.08, 67.1792, 0.88 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 59/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -38.3536, 203.657, -0.57335, 0.66 ) }
    dend_49 { pt3dadd( -40.4292, 205.617, -2.0348, 0.66 ) }
    dend_49 { pt3dadd( -41.0797, 206.187, -2.47963, 0.66 ) }
    dend_49 { pt3dadd( -41.6947, 206.706, -2.87939, 0.74 ) }
    dend_49 { pt3dadd( -42.2749, 207.183, -3.2357, 0.88 ) }
    dend_49 { pt3dadd( -42.7365, 207.56, -3.49453, 0.88 ) }
    dend_49 { pt3dadd( -43.4201, 208.124, -3.84135, 0.74 ) }
    dend_49 { pt3dadd( -44.0086, 208.624, -4.04373, 0.52 ) }
    dend_49 { pt3dadd( -44.5159, 209.07, -4.23717, 0.96 ) }
    dend_49 { pt3dadd( -44.9793, 209.491, -4.41532, 0.96 ) }
    dend_49 { pt3dadd( -45.7461, 210.185, -4.68922, 0.37 ) }
    dend_49 { pt3dadd( -46.3999, 210.771, -4.89778, 0.37 ) }
    dend_49 { pt3dadd( -47.1289, 211.409, -5.08675, 0.66 ) }
    dend_49 { pt3dadd( -47.6677, 211.869, -5.20558, 0.81 ) }
    dend_49 { pt3dadd( -48.3137, 212.412, -5.33325, 0.81 ) }
    dend_49 { pt3dadd( -48.8566, 212.87, -5.42512, 0.66 ) }
    dend_49 { pt3dadd( -49.4071, 213.31, -5.51812, 0.66 ) }
    dend_49 { pt3dadd( -49.8412, 213.631, -5.58701, 0.66 ) }
    dend_49 { pt3dadd( -50.3388, 213.986, -5.65023, 0.37 ) }
    dend_49 { pt3dadd( -50.7618, 214.312, -5.7083, 0.37 ) }
    dend_49 { pt3dadd( -51.4932, 214.952, -5.83411, 0.74 ) }
    dend_49 { pt3dadd( -51.9048, 215.361, -5.88961, 0.74 ) }
    dend_49 { pt3dadd( -52.5332, 216.04, -5.95283, 0.29 ) }
    dend_49 { pt3dadd( -53.0308, 216.597, -5.99744, 0.29 ) }
    dend_49 { pt3dadd( -53.6011, 217.251, -6.06037, 0.66 ) }
    dend_49 { pt3dadd( -53.8119, 217.497, -6.09166, 0.66 ) }
    dend_49 { pt3dadd( -54.352, 218.168, -6.195, 0.52 ) }
    dend_49 { pt3dadd( -54.6265, 218.532, -6.25397, 0.37 ) }
    dend_49 { pt3dadd( -54.8884, 218.87, -6.32324, 0.37 ) }
    dend_49 { pt3dadd( -55.2994, 219.333, -6.4374, 0.59 ) }
    dend_49 { pt3dadd( -55.7153, 219.758, -6.56, 1.11 ) }
    dend_49 { pt3dadd( -56.2095, 220.282, -6.70988, 1.18 ) }
    dend_49 { pt3dadd( -56.5898, 220.713, -6.83545, 0.96 ) }
    dend_49 { pt3dadd( -57.2245, 221.484, -7.01599, 0.74 ) }
    dend_49 { pt3dadd( -57.7241, 222.125, -7.12634, 0.66 ) }
    dend_49 { pt3dadd( -58.1578, 222.699, -7.18952, 0.37 ) }
    dend_49 { pt3dadd( -58.6506, 223.386, -7.23392, 0.37 ) }
    dend_49 { pt3dadd( -58.9746, 223.894, -7.24537, 0.52 ) }
    dend_49 { pt3dadd( -59.3078, 224.485, -7.27742, 0.52 ) }
    dend_49 { pt3dadd( -59.7678, 225.421, -7.32206, 0.66 ) }
    dend_49 { pt3dadd( -60.0757, 226.11, -7.33612, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_49 { pt3dadd( -60.395, 226.829, -7.31579, 0.81 ) }
    dend_49 { pt3dadd( -60.9459, 227.994, -7.22583, 0.59 ) }
    dend_49 { pt3dadd( -61.3278, 228.787, -7.12002, 0.52 ) }
    dend_49 { pt3dadd( -61.6107, 229.408, -7.00245, 0.52 ) }
    dend_49 { pt3dadd( -61.9734, 230.31, -6.78448, 0.44 ) }
    dend_49 { pt3dadd( -62.2044, 230.94, -6.62266, 0.44 ) }
    dend_49 { pt3dadd( -62.4079, 231.529, -6.46568, 0.44 ) }
    dend_49 { pt3dadd( -62.5877, 231.992, -6.35614, 0.44 ) }
    dend_49 { pt3dadd( -62.7815, 232.408, -6.29378, 0.44 ) }
    dend_49 { pt3dadd( -63.0602, 232.906, -6.3205, 0.44 ) }
    dend_49 { pt3dadd( -63.3617, 233.405, -6.45787, 0.59 ) }
    dend_49 { pt3dadd( -63.6846, 233.946, -6.72263, 0.66 ) }
    dend_49 { pt3dadd( -64.0258, 234.585, -7.08379, 0.52 ) }
    dend_49 { pt3dadd( -64.3943, 235.373, -7.54113, 0.52 ) }
    dend_49 { pt3dadd( -64.6663, 236.045, -7.9225, 0.52 ) }
    dend_49 { pt3dadd( -64.951, 236.924, -8.42011, 0.59 ) }
    dend_49 { pt3dadd( -65.2081, 237.919, -8.95924, 0.59 ) }
    dend_49 { pt3dadd( -65.3809, 238.733, -9.39161, 0.52 ) }
    dend_49 { pt3dadd( -65.5304, 239.531, -9.79031, 0.52 ) }
    dend_49 { pt3dadd( -65.6294, 240.023, -10.0327, 0.52 ) }
    dend_49 { pt3dadd( -65.8727, 240.816, -10.3774, 0.44 ) }
    dend_49 { pt3dadd( -66.0976, 241.306, -10.5131, 0.44 ) }
    dend_49 { pt3dadd( -66.3695, 241.768, -10.5935, 0.44 ) }
    dend_49 { pt3dadd( -66.9059, 242.506, -10.7027, 0.44 ) }
    dend_49 { pt3dadd( -67.4495, 243.169, -10.7731, 0.44 ) }
    dend_49 { pt3dadd( -68.0289, 243.869, -10.8167, 0.44 ) }
    dend_49 { pt3dadd( -68.5655, 244.585, -10.8307, 0.52 ) }
    dend_49 { pt3dadd( -68.9346, 245.2, -10.841, 0.66 ) }
    dend_49 { pt3dadd( -69.233, 245.837, -10.8719, 0.37 ) }
    dend_49 { pt3dadd( -69.455, 246.503, -10.9211, 0.29 ) }
    dend_49 { pt3dadd( -69.648, 247.377, -11.0054, 0.44 ) }
    dend_49 { pt3dadd( -69.7452, 248.227, -11.1016, 0.74 ) }
    dend_49 { pt3dadd( -69.7591, 249.018, -11.1943, 1.03 ) }
    dend_49 { pt3dadd( -69.6959, 249.626, -11.2911, 1.03 ) }
    dend_49 { pt3dadd( -69.5883, 250.274, -11.4698, 0.88 ) }
    dend_49 { pt3dadd( -69.4329, 251.177, -11.8102, 0.52 ) }
    dend_49 { pt3dadd( -69.3508, 251.902, -12.159, 0.52 ) }
    dend_49 { pt3dadd( -69.3393, 252.278, -12.4146, 0.37 ) }
    dend_49 { pt3dadd( -69.3495, 253.308, -13.2519, 0.37 ) }
    dend_49 { pt3dadd( -69.3468, 254.374, -14.2632, 0.37 ) }
    dend_49 { pt3dadd( -69.3176, 254.847, -14.7646, 0.37 ) }
    dend_49 { pt3dadd( -69.283, 255.357, -15.3209, 0.37 ) }
    dend_49 { pt3dadd( -69.2494, 256.478, -16.4775, 0.37 ) }
    dend_49 { pt3dadd( -69.2637, 256.992, -16.9526, 0.29 ) }
    dend_49 { pt3dadd( -69.3289, 257.76, -17.5677, 0.29 ) }
    dend_49 { pt3dadd( -69.3953, 258.52, -18.1321, 0.29 ) }
    dend_49 { pt3dadd( -69.4986, 259.29, -18.6805, 0.37 ) }
    dend_49 { pt3dadd( -69.6125, 259.852, -19.0845, 0.37 ) }
    dend_49 { pt3dadd( -69.8295, 260.56, -19.6134, 0.37 ) }
    dend_49 { pt3dadd( -70.0861, 261.34, -20.2799, 0.44 ) }
    dend_49 { pt3dadd( -70.2165, 261.765, -20.6773, 0.59 ) }
    dend_49 { pt3dadd( -70.3383, 262.283, -21.2453, 0.59 ) }
    dend_49 { pt3dadd( -70.489, 263.239, -22.3922, 0.74 ) }
    dend_49 { pt3dadd( -70.5786, 263.954, -23.2544, 0.88 ) }
    dend_49 { pt3dadd( -70.6884, 264.819, -24.2964, 0.81 ) }
    dend_49 { pt3dadd( -70.8111, 265.568, -25.1989, 1.03 ) }
    dend_49 { pt3dadd( -71.1498, 267.14, -27.1183, 0.74 ) }
    dend_49 { pt3dadd( -71.4084, 267.977, -28.1055, 0.66 ) }
    dend_49 { pt3dadd( -71.5871, 268.396, -28.6373, 0.74 ) }
    dend_49 { pt3dadd( -71.8969, 268.945, -29.3863, 0.74 ) }
    dend_49 { pt3dadd( -72.2244, 269.365, -30.0537, 0.59 ) }
    dend_49 { pt3dadd( -72.644, 269.761, -30.8207, 0.44 ) }
    dend_49 { pt3dadd( -73.4048, 270.216, -32.0871, 0.29 ) }
    dend_49 { pt3dadd( -74.742, 270.771, -34.3106, 0.74 ) }
    dend_49 { pt3dadd( -75.0528, 270.869, -34.8454, 1.25 ) }
    dend_49 { pt3dadd( -75.7711, 271.063, -36.1029, 1.77 ) }
    dend_49 { pt3dadd( -76.3386, 271.21, -37.0866, 1.92 ) }
    dend_49 { pt3dadd( -77.0879, 271.376, -38.3506, 0.74 ) }
    dend_49 { pt3dadd( -77.5674, 271.461, -39.1148, 0.52 ) }
    dend_49 { pt3dadd( -78.3278, 271.587, -40.1451, 0.52 ) }
    dend_49 { pt3dadd( -78.892, 271.649, -40.8771, 0.66 ) }
    dend_49 { pt3dadd( -79.5991, 271.711, -41.6934, 0.52 ) }
    dend_49 { pt3dadd( -80.548, 271.805, -42.6678, 0.52 ) }
    dend_49 { pt3dadd( -81.4127, 271.92, -43.4817, 0.52 ) }
    dend_49 { pt3dadd( -82.3675, 272.066, -44.3678, 0.66 ) }
    dend_49 { pt3dadd( -83.044, 272.202, -44.9666, 0.66 ) }
    dend_49 { pt3dadd( -83.5927, 272.365, -45.5133, 0.81 ) }
    dend_49 { pt3dadd( -84.0966, 272.585, -46.0796, 0.59 ) }
    dend_49 { pt3dadd( -84.4669, 272.77, -46.6698, 0.59 ) }
    dend_49 { pt3dadd( -85.2999, 273.191, -48.437, 0.81 ) }
    dend_49 { pt3dadd( -85.7155, 273.361, -49.5806, 0.74 ) }
    dend_49 { pt3dadd( -86.3176, 273.457, -51.8827, 0.88 ) }
    dend_49 { pt3dadd( -86.588, 273.305, -53.5477, 1.11 ) }
    dend_49 { pt3dadd( -86.8867, 272.48, -57.3672, 0.74 ) }
    dend_49 { pt3dadd( -86.8547, 272.179, -58.1458, 0.88 ) }
    dend_49 { pt3dadd( -86.5773, 271.431, -59.141, 0.96 ) }
    dend_49 { pt3dadd( -86.1487, 270.564, -59.7347, 0.74 ) }
    dend_49 { pt3dadd( -85.2653, 268.954, -60.1296, 0.66 ) }
    dend_49 { pt3dadd( -83.72, 266.312, -60.2713, 0.29 ) }
    dend_49 { pt3dadd( -83.0573, 265.217, -60.0423, 0.29 ) }
    dend_49 { pt3dadd( -82.2787, 263.959, -59.6566, 0.29 ) }
    dend_49 { pt3dadd( -81.7907, 263.18, -59.3187, 0.66 ) }
    dend_49 { pt3dadd( -81.4902, 262.693, -59.0396, 0.74 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 93/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -38.3536, 203.657, -0.57335, 0.29 ) }
    dend_48 { pt3dadd( -38.9481, 204.622, -0.180658, 0.29 ) }
    dend_48 { pt3dadd( -39.2649, 205.154, 0.0188035, 0.37 ) }
    dend_48 { pt3dadd( -39.6245, 205.754, 0.25786, 0.52 ) }
    dend_48 { pt3dadd( -39.8686, 206.138, 0.410915, 0.66 ) }
    dend_48 { pt3dadd( -40.319, 206.775, 0.663155, 0.81 ) }
    dend_48 { pt3dadd( -40.8073, 207.409, 0.90456, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -41.2495, 207.941, 1.10728, 0.74 ) }
    dend_48 { pt3dadd( -42.0724, 208.859, 1.41131, 0.29 ) }
    dend_48 { pt3dadd( -42.4448, 209.243, 1.51568, 0.29 ) }
    dend_48 { pt3dadd( -42.9271, 209.732, 1.63921, 0.37 ) }
    dend_48 { pt3dadd( -43.4313, 210.259, 1.75255, 0.37 ) }
    dend_48 { pt3dadd( -44.0614, 210.976, 1.90281, 0.44 ) }
    dend_48 { pt3dadd( -44.3403, 211.366, 1.97126, 0.66 ) }
    dend_48 { pt3dadd( -44.669, 211.959, 2.04472, 0.81 ) }
    dend_48 { pt3dadd( -44.971, 212.599, 2.11657, 0.81 ) }
    dend_48 { pt3dadd( -45.2389, 213.164, 2.17349, 0.52 ) }
    dend_48 { pt3dadd( -45.5659, 213.851, 2.23211, 0.52 ) }
    dend_48 { pt3dadd( -45.9326, 214.687, 2.28734, 0.52 ) }
    dend_48 { pt3dadd( -46.2836, 215.58, 2.32991, 0.44 ) }
    dend_48 { pt3dadd( -46.5874, 216.462, 2.33638, 0.37 ) }
    dend_48 { pt3dadd( -46.9456, 217.574, 2.30908, 0.29 ) }
    dend_48 { pt3dadd( -47.2145, 218.44, 2.27858, 0.44 ) }
    dend_48 { pt3dadd( -47.4849, 219.376, 2.22859, 0.52 ) }
    dend_48 { pt3dadd( -47.6793, 220.117, 2.17488, 0.37 ) }
    dend_48 { pt3dadd( -47.8526, 220.862, 2.11279, 0.37 ) }
    dend_48 { pt3dadd( -47.9936, 221.478, 2.06034, 0.59 ) }
    dend_48 { pt3dadd( -48.1119, 222.076, 2.01049, 0.59 ) }
    dend_48 { pt3dadd( -48.2638, 222.752, 1.9541, 0.59 ) }
    dend_48 { pt3dadd( -48.4946, 223.636, 1.87682, 0.37 ) }
    dend_48 { pt3dadd( -48.7906, 224.706, 1.78315, 0.29 ) }
    dend_48 { pt3dadd( -49.0096, 225.674, 1.71132, 0.29 ) }
    dend_48 { pt3dadd( -49.1687, 226.656, 1.63927, 0.29 ) }
    dend_48 { pt3dadd( -49.2126, 227.146, 1.59803, 0.29 ) }
    dend_48 { pt3dadd( -49.2339, 227.874, 1.52861, 0.44 ) }
    dend_48 { pt3dadd( -49.2216, 228.395, 1.46834, 0.44 ) }
    dend_48 { pt3dadd( -49.1789, 229.373, 1.32046, 0.59 ) }
    dend_48 { pt3dadd( -49.1624, 229.908, 1.21359, 0.74 ) }
    dend_48 { pt3dadd( -49.1572, 230.496, 1.07365, 0.74 ) }
    dend_48 { pt3dadd( -49.1321, 231.035, 0.934787, 0.59 ) }
    dend_48 { pt3dadd( -49.0384, 231.992, 0.687232, 0.88 ) }
    dend_48 { pt3dadd( -48.9514, 232.752, 0.497539, 1.18 ) }
    dend_48 { pt3dadd( -48.8686, 233.76, 0.251798, 0.37 ) }
    dend_48 { pt3dadd( -48.8543, 234.153, 0.157131, 0.37 ) }
    dend_48 { pt3dadd( -48.845, 235.031, -0.0510378, 0.37 ) }
    dend_48 { pt3dadd( -48.8075, 235.999, -0.280218, 0.29 ) }
    dend_48 { pt3dadd( -48.7248, 236.889, -0.499192, 0.37 ) }
    dend_48 { pt3dadd( -48.5888, 237.765, -0.71024, 0.29 ) }
    dend_48 { pt3dadd( -48.3891, 238.661, -0.965347, 0.29 ) }
    dend_48 { pt3dadd( -48.2971, 238.963, -1.08102, 0.29 ) }
    dend_48 { pt3dadd( -47.9436, 239.76, -1.48224, 0.59 ) }
    dend_48 { pt3dadd( -47.592, 240.308, -1.80158, 0.74 ) }
    dend_48 { pt3dadd( -47.2893, 240.681, -2.03986, 0.74 ) }
    dend_48 { pt3dadd( -46.7446, 241.265, -2.42558, 0.66 ) }
    dend_48 { pt3dadd( -46.0845, 241.9, -2.87121, 0.44 ) }
    dend_48 { pt3dadd( -45.6532, 242.311, -3.15089, 0.44 ) }
    dend_48 { pt3dadd( -44.9872, 242.904, -3.55104, 0.88 ) }
    dend_48 { pt3dadd( -44.6823, 243.133, -3.70749, 1.33 ) }
    dend_48 { pt3dadd( -44.2986, 243.382, -3.90968, 1.69 ) }
    dend_48 { pt3dadd( -43.6307, 243.783, -4.2568, 1.84 ) }
    dend_48 { pt3dadd( -42.5567, 244.46, -4.83137, 0.29 ) }
    dend_48 { pt3dadd( -41.936, 244.93, -5.19402, 0.29 ) }
    dend_48 { pt3dadd( -41.3372, 245.507, -5.58332, 0.29 ) }
    dend_48 { pt3dadd( -40.4288, 246.588, -6.19156, 0.59 ) }
    dend_48 { pt3dadd( -40.0807, 247.111, -6.44979, 0.59 ) }
    dend_48 { pt3dadd( -39.6147, 248.056, -6.86349, 0.44 ) }
    dend_48 { pt3dadd( -39.2377, 249.204, -7.32348, 0.59 ) }
    dend_48 { pt3dadd( -39.0775, 249.923, -7.56986, 0.44 ) }
    dend_48 { pt3dadd( -38.9725, 250.534, -7.73612, 0.29 ) }
    dend_48 { pt3dadd( -38.8319, 251.33, -7.91279, 0.29 ) }
    dend_48 { pt3dadd( -38.7531, 251.774, -8.04172, 0.29 ) }
    dend_48 { pt3dadd( -38.6298, 252.523, -8.26822, 0.52 ) }
    dend_48 { pt3dadd( -38.5481, 252.999, -8.42427, 0.52 ) }
    dend_48 { pt3dadd( -38.4499, 253.613, -8.61594, 0.37 ) }
    dend_48 { pt3dadd( -38.2992, 254.583, -8.90382, 0.44 ) }
    dend_48 { pt3dadd( -38.1128, 255.515, -9.17083, 0.44 ) }
    dend_48 { pt3dadd( -37.8844, 256.319, -9.40901, 0.74 ) }
    dend_48 { pt3dadd( -37.5721, 257.233, -9.67652, 0.81 ) }
    dend_48 { pt3dadd( -37.1292, 258.573, -10.0309, 0.29 ) }
    dend_48 { pt3dadd( -37.0206, 258.968, -10.1216, 0.29 ) }
    dend_48 { pt3dadd( -36.8966, 259.507, -10.2352, 0.29 ) }
    dend_48 { pt3dadd( -36.7302, 260.182, -10.3784, 0.29 ) }
    dend_48 { pt3dadd( -36.5049, 261.01, -10.5919, 0.37 ) }
    dend_48 { pt3dadd( -36.2565, 261.781, -10.7786, 0.44 ) }
    dend_48 { pt3dadd( -35.9027, 262.547, -11.001, 0.44 ) }
    dend_48 { pt3dadd( -35.4659, 263.327, -11.2782, 0.44 ) }
    dend_48 { pt3dadd( -35.0976, 263.977, -11.4865, 0.44 ) }
    dend_48 { pt3dadd( -34.8687, 264.384, -11.6041, 0.66 ) }
    dend_48 { pt3dadd( -34.6057, 264.817, -11.7294, 0.66 ) }
    dend_48 { pt3dadd( -34.1895, 265.472, -11.9535, 0.44 ) }
    dend_48 { pt3dadd( -33.7684, 266.122, -12.426, 0.29 ) }
    dend_48 { pt3dadd( -33.4888, 266.679, -13.1918, 0.29 ) }
    dend_48 { pt3dadd( -33.3667, 267.082, -13.8372, 0.44 ) }
    dend_48 { pt3dadd( -33.3061, 267.469, -14.5069, 0.59 ) }
    dend_48 { pt3dadd( -33.2516, 267.922, -15.283, 0.74 ) }
    dend_48 { pt3dadd( -33.0957, 269.156, -17.3933, 0.74 ) }
    dend_48 { pt3dadd( -32.8784, 270.195, -19.2588, 0.37 ) }
    dend_48 { pt3dadd( -32.755, 270.675, -20.1871, 0.29 ) }
    dend_48 { pt3dadd( -32.6115, 271.143, -21.1427, 0.59 ) }
    dend_48 { pt3dadd( -32.4574, 271.623, -22.1153, 0.52 ) }
    dend_48 { pt3dadd( -32.3553, 271.989, -22.7531, 0.52 ) }
    dend_48 { pt3dadd( -32.1713, 272.742, -23.6291, 0.59 ) }
    // Section: dend_38, id: dend_38, parent: dend_18 (entry count 95/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -5.68911, -43.6238, 4.95231, 0.52 ) }
    dend_38 { pt3dadd( -7.69215, -44.6616, 6.26253, 0.52 ) }
    dend_38 { pt3dadd( -8.10196, -44.9423, 6.55002, 0.44 ) }
    dend_38 { pt3dadd( -8.45369, -45.2379, 6.81623, 0.66 ) }
    dend_38 { pt3dadd( -8.91785, -45.6973, 7.18625, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_38 { pt3dadd( -9.66476, -46.5709, 7.79465, 0.66 ) }
    dend_38 { pt3dadd( -9.96318, -46.9861, 8.04859, 0.81 ) }
    dend_38 { pt3dadd( -10.3789, -47.9043, 8.39622, 0.74 ) }
    dend_38 { pt3dadd( -10.5038, -48.3569, 8.51742, 0.88 ) }
    dend_38 { pt3dadd( -10.6234, -49.2518, 8.82568, 0.66 ) }
    dend_38 { pt3dadd( -10.6673, -50.0398, 9.17113, 0.66 ) }
    dend_38 { pt3dadd( -10.682, -50.6676, 9.52163, 0.81 ) }
    dend_38 { pt3dadd( -10.7575, -51.4282, 10.0609, 0.81 ) }
    dend_38 { pt3dadd( -10.9343, -52.2499, 10.7552, 0.88 ) }
    dend_38 { pt3dadd( -11.5695, -54.3963, 12.7065, 0.96 ) }
    dend_38 { pt3dadd( -11.7952, -55.0377, 13.3086, 0.74 ) }
    dend_38 { pt3dadd( -11.9893, -55.5322, 13.754, 0.59 ) }
    dend_38 { pt3dadd( -12.3513, -56.4239, 14.4439, 0.59 ) }
    dend_38 { pt3dadd( -12.6665, -57.2139, 14.9492, 0.59 ) }
    dend_38 { pt3dadd( -13.0025, -58.1533, 15.3641, 0.96 ) }
    dend_38 { pt3dadd( -13.2422, -58.9129, 15.5246, 1.11 ) }
    dend_38 { pt3dadd( -13.5224, -59.8475, 15.697, 0.88 ) }
    dend_38 { pt3dadd( -13.814, -60.8022, 15.8901, 0.66 ) }
    dend_38 { pt3dadd( -13.9313, -61.1107, 15.9677, 0.74 ) }
    dend_38 { pt3dadd( -14.4602, -61.9885, 16.3219, 0.66 ) }
    dend_38 { pt3dadd( -14.887, -62.5049, 16.632, 0.74 ) }
    dend_38 { pt3dadd( -15.3897, -63.033, 17.0733, 0.81 ) }
    dend_38 { pt3dadd( -15.8199, -63.4498, 17.5261, 0.88 ) }
    dend_38 { pt3dadd( -16.3223, -64.0179, 18.1998, 0.66 ) }
    dend_38 { pt3dadd( -16.6175, -64.4622, 18.6734, 0.66 ) }
    dend_38 { pt3dadd( -16.9425, -65.0936, 19.2485, 0.59 ) }
    dend_38 { pt3dadd( -17.2261, -65.8305, 19.7938, 0.66 ) }
    dend_38 { pt3dadd( -17.3723, -66.2346, 20.0318, 0.81 ) }
    dend_38 { pt3dadd( -17.7331, -67.1781, 20.4846, 0.59 ) }
    dend_38 { pt3dadd( -18.0322, -67.9759, 20.8324, 0.74 ) }
    dend_38 { pt3dadd( -18.3204, -68.7177, 21.1353, 0.88 ) }
    dend_38 { pt3dadd( -18.4954, -69.1572, 21.2972, 0.88 ) }
    dend_38 { pt3dadd( -18.7905, -70.0091, 21.6655, 0.66 ) }
    dend_38 { pt3dadd( -18.9733, -70.6717, 22.0531, 0.52 ) }
    dend_38 { pt3dadd( -19.1539, -71.5996, 22.874, 0.59 ) }
    dend_38 { pt3dadd( -19.2058, -72.0324, 23.3792, 0.59 ) }
    dend_38 { pt3dadd( -19.2398, -72.4548, 23.9299, 0.66 ) }
    dend_38 { pt3dadd( -19.3194, -73.6569, 25.5638, 0.66 ) }
    dend_38 { pt3dadd( -19.3494, -74.244, 26.365, 0.96 ) }
    dend_38 { pt3dadd( -19.4608, -75.0499, 27.4544, 1.03 ) }
    dend_38 { pt3dadd( -19.6374, -75.6417, 28.2059, 0.88 ) }
    dend_38 { pt3dadd( -19.8304, -76.0958, 28.7086, 0.59 ) }
    dend_38 { pt3dadd( -20.0313, -76.461, 29.0288, 0.74 ) }
    dend_38 { pt3dadd( -20.4115, -77.0346, 29.3273, 0.59 ) }
    dend_38 { pt3dadd( -20.8673, -77.6417, 29.5207, 0.74 ) }
    dend_38 { pt3dadd( -21.4059, -78.2919, 29.6189, 0.88 ) }
    dend_38 { pt3dadd( -21.9143, -78.8729, 29.6568, 0.88 ) }
    dend_38 { pt3dadd( -22.4638, -79.4713, 29.6941, 0.59 ) }
    dend_38 { pt3dadd( -22.9944, -80.0292, 29.7474, 0.37 ) }
    dend_38 { pt3dadd( -23.2047, -80.2401, 29.7815, 0.37 ) }
    dend_38 { pt3dadd( -23.6258, -80.6685, 29.922, 0.44 ) }
    dend_38 { pt3dadd( -24.0755, -81.1254, 30.132, 0.59 ) }
    dend_38 { pt3dadd( -24.4994, -81.5506, 30.3927, 0.59 ) }
    dend_38 { pt3dadd( -25.0054, -82.0626, 30.7483, 0.74 ) }
    dend_38 { pt3dadd( -25.4833, -82.5172, 31.0955, 0.66 ) }
    dend_38 { pt3dadd( -26.3914, -83.3349, 31.722, 0.66 ) }
    dend_38 { pt3dadd( -26.9382, -83.8118, 32.0756, 0.59 ) }
    dend_38 { pt3dadd( -27.7404, -84.5412, 32.5637, 0.81 ) }
    dend_38 { pt3dadd( -28.1994, -84.9831, 32.8297, 0.96 ) }
    dend_38 { pt3dadd( -28.7907, -85.5636, 33.1517, 0.74 ) }
    dend_38 { pt3dadd( -29.4422, -86.2029, 33.4736, 0.52 ) }
    dend_38 { pt3dadd( -30.5625, -87.3408, 33.9854, 0.59 ) }
    dend_38 { pt3dadd( -31.1631, -87.9962, 34.2524, 0.66 ) }
    dend_38 { pt3dadd( -31.5546, -88.4554, 34.4095, 0.66 ) }
    dend_38 { pt3dadd( -32.122, -89.1561, 34.6206, 0.44 ) }
    dend_38 { pt3dadd( -32.5309, -89.6894, 34.7718, 0.44 ) }
    dend_38 { pt3dadd( -33.0745, -90.3979, 34.9729, 0.37 ) }
    dend_38 { pt3dadd( -33.7274, -91.2531, 35.1796, 0.29 ) }
    dend_38 { pt3dadd( -34.0098, -91.6319, 35.2609, 0.29 ) }
    dend_38 { pt3dadd( -34.6065, -92.5822, 35.4076, 0.29 ) }
    dend_38 { pt3dadd( -38.1971, -99.6555, 41.8673, 0.29 ) }
    dend_38 { pt3dadd( -41.1878, -106.906, 48.4539, 0.29 ) }
    dend_38 { pt3dadd( -45.4787, -114.082, 54.3598, 0.29 ) }
    dend_38 { pt3dadd( -49.0354, -122.158, 59.6693, 0.29 ) }
    dend_38 { pt3dadd( -54.411, -129.799, 63.9294, 0.29 ) }
    dend_38 { pt3dadd( -60.7959, -136.582, 68.1133, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 76/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -5.68911, -43.6238, 4.95231, 2.21 ) }
    dend_19 { pt3dadd( -5.34182, -45.1754, 5.02464, 2.21 ) }
    dend_19 { pt3dadd( -5.13728, -46.1546, 5.05596, 2.21 ) }
    dend_19 { pt3dadd( -4.82205, -47.6637, 5.10423, 2.21 ) }
    dend_19 { pt3dadd( -4.56322, -48.9028, 5.14387, 2.28 ) }
    dend_19 { pt3dadd( -4.35744, -49.888, 5.17538, 2.28 ) }
    dend_19 { pt3dadd( -4.06099, -51.3072, 5.22077, 2.5 ) }
    dend_19 { pt3dadd( -3.83118, -52.276, 5.17685, 2.58 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 84/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 37.7898, 124.153, -22.5608, 1.25 ) }
    dend_12 { pt3dadd( 38.4319, 124.69, -22.7168, 1.25 ) }
    dend_12 { pt3dadd( 39.7454, 125.608, -22.9174, 0.81 ) }
    dend_12 { pt3dadd( 40.5453, 126.106, -22.9998, 0.96 ) }
    dend_12 { pt3dadd( 41.2925, 126.522, -22.9762, 0.74 ) }
    dend_12 { pt3dadd( 42.5126, 127.157, -22.8455, 0.59 ) }
    dend_12 { pt3dadd( 43.6238, 127.717, -22.6808, 0.52 ) }
    dend_12 { pt3dadd( 44.1, 127.924, -22.576, 0.66 ) }
    dend_12 { pt3dadd( 44.798, 128.199, -22.3841, 0.44 ) }
    dend_12 { pt3dadd( 46.3196, 128.784, -21.9662, 0.66 ) }
    dend_12 { pt3dadd( 47.0194, 129.076, -21.8047, 0.52 ) }
    dend_12 { pt3dadd( 47.6836, 129.402, -21.7142, 0.52 ) }
    dend_12 { pt3dadd( 48.6027, 129.918, -21.6517, 0.88 ) }
    dend_12 { pt3dadd( 49.4082, 130.412, -21.6699, 1.25 ) }
    dend_12 { pt3dadd( 49.7345, 130.632, -21.7075, 1.62 ) }
    dend_12 { pt3dadd( 50.7249, 131.343, -21.9183, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( 51.542, 131.939, -22.1061, 1.33 ) }
    dend_12 { pt3dadd( 52.5202, 132.629, -22.3092, 0.88 ) }
    dend_12 { pt3dadd( 53.2581, 133.159, -22.4615, 0.74 ) }
    dend_12 { pt3dadd( 53.8144, 133.554, -22.5646, 0.59 ) }
    dend_12 { pt3dadd( 54.2439, 133.852, -22.6338, 0.59 ) }
    dend_12 { pt3dadd( 55.2152, 134.48, -22.7285, 1.18 ) }
    dend_12 { pt3dadd( 56.0858, 135.006, -22.8106, 1.77 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 7/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 37.7898, 124.153, -22.5608, 0.37 ) }
    dend_11 { pt3dadd( 38.8615, 125.273, -18.3682, 0.37 ) }
    dend_11 { pt3dadd( 39.0494, 125.683, -17.2355, 0.37 ) }
    dend_11 { pt3dadd( 39.0635, 125.931, -16.7175, 0.37 ) }
    dend_11 { pt3dadd( 39.0041, 126.309, -16.0897, 0.66 ) }
    dend_11 { pt3dadd( 38.9217, 126.674, -15.5976, 0.66 ) }
    dend_11 { pt3dadd( 38.8067, 127.234, -14.9384, 0.66 ) }
    dend_11 { pt3dadd( 38.59, 127.884, -14.5362, 0.52 ) }
    dend_11 { pt3dadd( 38.393, 128.649, -14.1025, 0.52 ) }
    dend_11 { pt3dadd( 38.3206, 129.139, -13.8282, 0.52 ) }
    dend_11 { pt3dadd( 38.3947, 129.973, -13.3346, 0.66 ) }
    dend_11 { pt3dadd( 38.5928, 130.507, -12.9989, 1.18 ) }
    dend_11 { pt3dadd( 38.8084, 130.863, -12.7434, 1.18 ) }
    dend_11 { pt3dadd( 39.2139, 131.427, -12.3185, 0.66 ) }
    dend_11 { pt3dadd( 39.5799, 131.934, -11.9457, 0.52 ) }
    dend_11 { pt3dadd( 40.1068, 132.739, -11.3916, 0.52 ) }
    dend_11 { pt3dadd( 40.4203, 133.306, -11.0253, 1.11 ) }
    dend_11 { pt3dadd( 40.7826, 134.181, -10.5037, 0.96 ) }
    dend_11 { pt3dadd( 40.9649, 134.823, -10.1481, 0.88 ) }
    dend_11 { pt3dadd( 41.1122, 135.721, -9.69186, 0.37 ) }
    dend_11 { pt3dadd( 41.1958, 136.943, -9.1279, 0.29 ) }
    dend_11 { pt3dadd( 41.1928, 137.588, -8.84609, 0.29 ) }
    dend_11 { pt3dadd( 41.1262, 138.456, -8.46201, 0.59 ) }
    dend_11 { pt3dadd( 41.0009, 139.37, -8.07004, 0.74 ) }
    dend_11 { pt3dadd( 40.8446, 140.141, -7.74059, 0.88 ) }
    dend_11 { pt3dadd( 40.6838, 140.774, -7.46977, 1.03 ) }
    dend_11 { pt3dadd( 40.4339, 141.613, -7.11991, 1.11 ) }
    dend_11 { pt3dadd( 40.2054, 142.342, -6.84715, 0.88 ) }
    dend_11 { pt3dadd( 40.0061, 142.966, -6.64216, 0.52 ) }
    dend_11 { pt3dadd( 39.7197, 143.851, -6.37239, 0.88 ) }
    dend_11 { pt3dadd( 39.5849, 144.26, -6.25163, 0.74 ) }
    dend_11 { pt3dadd( 39.3336, 145.028, -6.0379, 0.52 ) }
    dend_11 { pt3dadd( 39.0639, 145.846, -5.79602, 0.52 ) }
    dend_11 { pt3dadd( 38.8084, 146.627, -5.52653, 0.74 ) }
    dend_11 { pt3dadd( 38.5671, 147.331, -5.25655, 0.88 ) }
    dend_11 { pt3dadd( 38.346, 147.938, -5.02587, 0.88 ) }
    dend_11 { pt3dadd( 38.1016, 148.547, -4.81243, 1.03 ) }
    dend_11 { pt3dadd( 37.7824, 149.271, -4.61083, 0.81 ) }
    dend_11 { pt3dadd( 37.4034, 150.055, -4.41914, 0.59 ) }
    dend_11 { pt3dadd( 37.1551, 150.526, -4.3103, 0.52 ) }
    dend_11 { pt3dadd( 36.7559, 151.271, -4.12137, 0.52 ) }
    dend_11 { pt3dadd( 36.5378, 151.713, -3.98927, 0.52 ) }
    dend_11 { pt3dadd( 36.2251, 152.464, -3.7423, 0.52 ) }
    dend_11 { pt3dadd( 35.8705, 153.528, -3.3978, 0.52 ) }
    dend_11 { pt3dadd( 35.6393, 154.384, -3.09867, 0.88 ) }
    dend_11 { pt3dadd( 35.4328, 155.296, -2.74435, 0.88 ) }
    dend_11 { pt3dadd( 35.2567, 156.183, -2.36371, 0.74 ) }
    dend_11 { pt3dadd( 35.113, 156.824, -2.09018, 0.37 ) }
    dend_11 { pt3dadd( 34.9336, 157.515, -1.80871, 0.37 ) }
    dend_11 { pt3dadd( 34.6853, 158.195, -1.5799, 0.52 ) }
    dend_11 { pt3dadd( 34.4378, 158.661, -1.43806, 0.52 ) }
    dend_11 { pt3dadd( 34.2349, 158.945, -1.34724, 0.37 ) }
    dend_11 { pt3dadd( 33.6023, 159.696, -1.05548, 0.52 ) }
    dend_11 { pt3dadd( 33.336, 160.001, -0.927887, 0.74 ) }
    dend_11 { pt3dadd( 32.7957, 160.674, -0.651932, 0.74 ) }
    dend_11 { pt3dadd( 32.3952, 161.286, -0.433059, 0.59 ) }
    dend_11 { pt3dadd( 32.0747, 161.901, -0.248209, 0.74 ) }
    dend_11 { pt3dadd( 31.7586, 162.647, -0.0391078, 0.88 ) }
    dend_11 { pt3dadd( 31.5138, 163.29, 0.141504, 0.88 ) }
    dend_11 { pt3dadd( 31.2039, 164.046, 0.343491, 0.88 ) }
    dend_11 { pt3dadd( 30.7848, 164.914, 0.571688, 0.66 ) }
    dend_11 { pt3dadd( 30.4685, 165.395, 0.717395, 0.66 ) }
    dend_11 { pt3dadd( 29.9696, 165.964, 0.921626, 0.52 ) }
    dend_11 { pt3dadd( 29.2943, 166.521, 1.19773, 0.37 ) }
    dend_11 { pt3dadd( 28.7704, 166.827, 1.48775, 0.29 ) }
    dend_11 { pt3dadd( 28.1086, 167.14, 1.95278, 0.29 ) }
    dend_11 { pt3dadd( 27.4894, 167.414, 2.44507, 0.66 ) }
    dend_11 { pt3dadd( 27.2258, 167.541, 2.67099, 1.03 ) }
    dend_11 { pt3dadd( 26.6848, 167.86, 3.17, 1.18 ) }
    dend_11 { pt3dadd( 25.49, 168.761, 4.43323, 0.59 ) }
    dend_11 { pt3dadd( 24.9297, 169.327, 5.10354, 0.44 ) }
    dend_11 { pt3dadd( 24.5725, 169.819, 5.58365, 0.52 ) }
    dend_11 { pt3dadd( 24.3222, 170.283, 5.99583, 0.52 ) }
    dend_11 { pt3dadd( 24.0631, 170.877, 6.48723, 0.52 ) }
    dend_11 { pt3dadd( 23.8365, 171.524, 6.97271, 0.59 ) }
    dend_11 { pt3dadd( 23.6472, 172.243, 7.45183, 0.37 ) }
    dend_11 { pt3dadd( 23.5115, 172.848, 7.86443, 0.37 ) }
    dend_11 { pt3dadd( 23.3046, 173.939, 8.6118, 0.66 ) }
    dend_11 { pt3dadd( 23.2056, 174.456, 8.94929, 0.74 ) }
    dend_11 { pt3dadd( 23.0557, 175.026, 9.28259, 0.59 ) }
    dend_11 { pt3dadd( 22.8292, 175.643, 9.58392, 0.52 ) }
    dend_11 { pt3dadd( 22.5034, 176.293, 9.85789, 0.44 ) }
    dend_11 { pt3dadd( 22.0079, 177.113, 10.1164, 0.44 ) }
    dend_11 { pt3dadd( 21.6213, 177.717, 10.2434, 0.59 ) }
    dend_11 { pt3dadd( 21.0343, 178.647, 10.3993, 0.59 ) }
    dend_11 { pt3dadd( 20.652, 179.27, 10.5066, 0.74 ) }
    dend_11 { pt3dadd( 20.2951, 179.861, 10.643, 0.74 ) }
    dend_11 { pt3dadd( 20.0233, 180.366, 10.8494, 0.74 ) }
    dend_11 { pt3dadd( 19.6441, 181.184, 11.4313, 0.52 ) }
    dend_11 { pt3dadd( 19.4769, 181.621, 11.8347, 0.66 ) }
    dend_11 { pt3dadd( 19.3212, 182.081, 12.3744, 0.81 ) }
    dend_11 { pt3dadd( 19.0734, 182.725, 13.2587, 1.03 ) }
    dend_11 { pt3dadd( 18.6829, 183.436, 14.395, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( 18.2739, 184.037, 15.4046, 0.44 ) }
    dend_11 { pt3dadd( 18.0253, 184.346, 15.8934, 0.29 ) }
    dend_11 { pt3dadd( 17.4848, 184.918, 16.7682, 0.59 ) }
    dend_11 { pt3dadd( 17.1662, 185.204, 17.2144, 0.96 ) }
    dend_11 { pt3dadd( 16.2793, 185.97, 18.3628, 0.29 ) }
    dend_11 { pt3dadd( 15.8366, 186.358, 18.9398, 0.29 ) }
    dend_11 { pt3dadd( 15.2892, 186.883, 19.6536, 0.96 ) }
    dend_11 { pt3dadd( 14.7577, 187.412, 20.3293, 1.18 ) }
    dend_11 { pt3dadd( 13.8993, 188.354, 21.4027, 0.96 ) }
    dend_11 { pt3dadd( 13.5432, 188.732, 21.91, 0.59 ) }
    dend_11 { pt3dadd( 13.231, 189.041, 22.3855, 0.29 ) }
    dend_11 { pt3dadd( 12.8385, 189.386, 23.0305, 0.29 ) }
    dend_11 { pt3dadd( 12.6474, 189.562, 23.3885, 0.29 ) }
    dend_11 { pt3dadd( 12.2179, 190.077, 24.3401, 0.44 ) }
    dend_11 { pt3dadd( 11.5642, 191.147, 26.1342, 0.44 ) }
    dend_11 { pt3dadd( 11.4409, 191.435, 26.6078, 0.59 ) }
    dend_11 { pt3dadd( 11.3697, 191.876, 27.3375, 0.59 ) }
    dend_11 { pt3dadd( 11.4361, 192.274, 27.9978, 0.52 ) }
    dend_11 { pt3dadd( 11.7284, 192.755, 28.7028, 0.29 ) }
    dend_11 { pt3dadd( 12.2457, 193.179, 29.2076, 0.29 ) }
    dend_11 { pt3dadd( 12.8714, 193.561, 29.6303, 0.29 ) }
    dend_11 { pt3dadd( 13.7061, 193.984, 30.1257, 0.44 ) }
    dend_11 { pt3dadd( 14.4334, 194.332, 30.5809, 0.44 ) }
    dend_11 { pt3dadd( 15.0022, 194.589, 31.011, 0.29 ) }
    dend_11 { pt3dadd( 15.6236, 194.882, 31.56, 0.29 ) }
    dend_11 { pt3dadd( 16.5803, 195.435, 32.5486, 0.59 ) }
    dend_11 { pt3dadd( 17.1869, 195.886, 33.2471, 0.74 ) }
    dend_11 { pt3dadd( 18.0761, 196.749, 34.3177, 0.52 ) }
    dend_11 { pt3dadd( 18.9974, 197.858, 35.498, 0.22 ) }
    dend_11 { pt3dadd( 19.1671, 198.102, 35.7204, 0.29 ) }
    dend_11 { pt3dadd( 19.6251, 198.933, 36.2997, 0.29 ) }
    dend_11 { pt3dadd( 19.9509, 199.662, 36.651, 0.29 ) }
    dend_11 { pt3dadd( 20.3382, 200.626, 36.978, 0.37 ) }
    dend_11 { pt3dadd( 20.7051, 201.436, 37.0022, 0.37 ) }
    dend_11 { pt3dadd( 20.9993, 201.981, 36.9112, 0.22 ) }
    dend_11 { pt3dadd( 21.8569, 203.055, 36.5066, 0.22 ) }
    dend_11 { pt3dadd( 22.371, 203.543, 36.244, 0.37 ) }
    dend_11 { pt3dadd( 22.9924, 204.042, 35.9203, 0.15 ) }
    dend_11 { pt3dadd( 25.2323, 205.705, 34.6744, 0.15 ) }
    dend_11 { pt3dadd( 25.9507, 206.182, 34.2587, 0.15 ) }
    dend_11 { pt3dadd( 28.1121, 207.43, 33.011, 0.15 ) }
    dend_11 { pt3dadd( 29.1756, 207.943, 32.4016, 0.15 ) }
    dend_11 { pt3dadd( 30.2022, 208.392, 31.8152, 0.22 ) }
    dend_11 { pt3dadd( 28.4701, 216.31, 38.1498, 0.22 ) }
    dend_11 { pt3dadd( 27.2855, 224.349, 44.4735, 0.22 ) }
    dend_11 { pt3dadd( 27.9885, 231.485, 51.775, 0.22 ) }
    dend_11 { pt3dadd( 29.6005, 237.554, 59.7745, 0.22 ) }
    dend_11 { pt3dadd( 30.4465, 243.64, 67.8792, 0.22 ) }
    dend_11 { pt3dadd( 33.3542, 250.459, 74.9059, 0.22 ) }
    dend_11 { pt3dadd( 36.6273, 258.265, 80.738, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 50/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -26.5826, 52.1557, -6.7567, 0.52 ) }
    dend_5 { pt3dadd( -27.4632, 52.699, -6.1324, 0.52 ) }
    dend_5 { pt3dadd( -28.0295, 53.0186, -5.76197, 0.52 ) }
    dend_5 { pt3dadd( -28.5706, 53.2877, -5.47019, 0.74 ) }
    dend_5 { pt3dadd( -29.2512, 53.6202, -5.14403, 0.96 ) }
    dend_5 { pt3dadd( -29.9385, 54.0039, -4.82433, 1.18 ) }
    dend_5 { pt3dadd( -30.492, 54.3632, -4.57071, 1.18 ) }
    dend_5 { pt3dadd( -31.027, 54.7562, -4.34152, 0.88 ) }
    dend_5 { pt3dadd( -31.8432, 55.5682, -3.94183, 0.37 ) }
    dend_5 { pt3dadd( -32.0797, 55.913, -3.8074, 0.37 ) }
    dend_5 { pt3dadd( -32.51, 56.799, -3.51242, 0.52 ) }
    dend_5 { pt3dadd( -32.7535, 57.4281, -3.29376, 0.81 ) }
    dend_5 { pt3dadd( -32.9965, 58.1272, -3.01214, 0.96 ) }
    dend_5 { pt3dadd( -33.2762, 58.8899, -2.62023, 0.52 ) }
    dend_5 { pt3dadd( -33.5378, 59.4491, -2.22762, 0.59 ) }
    dend_5 { pt3dadd( -33.7887, 59.7576, -1.91288, 0.74 ) }
    dend_5 { pt3dadd( -34.4168, 60.1962, -1.27578, 1.11 ) }
    dend_5 { pt3dadd( -34.9008, 60.4268, -0.846772, 1.18 ) }
    dend_5 { pt3dadd( -35.5855, 60.6799, -0.300131, 1.18 ) }
    dend_5 { pt3dadd( -36.2725, 60.9001, 0.192823, 0.74 ) }
    dend_5 { pt3dadd( -37.0222, 61.1426, 0.670366, 0.59 ) }
    dend_5 { pt3dadd( -37.7553, 61.4054, 1.0816, 0.52 ) }
    dend_5 { pt3dadd( -38.2579, 61.6111, 1.30596, 0.52 ) }
    dend_5 { pt3dadd( -38.8018, 61.8578, 1.47201, 0.52 ) }
    dend_5 { pt3dadd( -39.4039, 62.1603, 1.56677, 0.74 ) }
    dend_5 { pt3dadd( -40.0474, 62.513, 1.6607, 0.74 ) }
    dend_5 { pt3dadd( -40.3686, 62.7025, 1.7006, 0.81 ) }
    dend_5 { pt3dadd( -40.802, 62.9794, 1.78283, 0.81 ) }
    dend_5 { pt3dadd( -41.6756, 63.6004, 2.04487, 0.66 ) }
    dend_5 { pt3dadd( -42.1027, 63.9762, 2.26481, 0.52 ) }
    dend_5 { pt3dadd( -43.0554, 65.0522, 3.0562, 0.74 ) }
    dend_5 { pt3dadd( -43.3735, 65.5002, 3.40731, 0.66 ) }
    dend_5 { pt3dadd( -43.8006, 66.199, 3.96056, 0.59 ) }
    dend_5 { pt3dadd( -44.0611, 66.6432, 4.30991, 0.66 ) }
    dend_5 { pt3dadd( -44.5229, 67.4346, 4.90493, 0.52 ) }
    dend_5 { pt3dadd( -44.794, 67.837, 5.14628, 0.66 ) }
    dend_5 { pt3dadd( -45.1516, 68.2776, 5.36202, 0.88 ) }
    dend_5 { pt3dadd( -45.6398, 68.7751, 5.60708, 0.88 ) }
    dend_5 { pt3dadd( -46.131, 69.1986, 5.87432, 0.66 ) }
    dend_5 { pt3dadd( -46.4887, 69.4844, 6.14632, 0.59 ) }
    dend_5 { pt3dadd( -46.9273, 69.859, 6.609, 0.74 ) }
    dend_5 { pt3dadd( -47.3258, 70.262, 7.16003, 0.52 ) }
    dend_5 { pt3dadd( -47.6748, 70.669, 7.75339, 0.52 ) }
    dend_5 { pt3dadd( -48.4267, 71.6759, 9.23305, 0.66 ) }
    dend_5 { pt3dadd( -48.9369, 72.4326, 10.3309, 0.74 ) }
    dend_5 { pt3dadd( -49.2171, 72.8474, 10.9506, 0.44 ) }
    dend_5 { pt3dadd( -49.461, 73.174, 11.4497, 0.44 ) }
    dend_5 { pt3dadd( -49.69, 73.4144, 11.8055, 0.59 ) }
    dend_5 { pt3dadd( -49.9776, 73.6328, 12.1216, 0.66 ) }
    dend_5 { pt3dadd( -50.4562, 73.9191, 12.4696, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( -51.1825, 74.3206, 12.9732, 0.52 ) }
    dend_5 { pt3dadd( -51.68, 74.6048, 13.3914, 0.52 ) }
    dend_5 { pt3dadd( -52.0971, 74.9026, 13.8308, 0.44 ) }
    dend_5 { pt3dadd( -52.7762, 75.5367, 14.7242, 0.59 ) }
    dend_5 { pt3dadd( -53.0692, 75.8504, 15.1271, 0.74 ) }
    dend_5 { pt3dadd( -53.3888, 76.2274, 15.5777, 0.88 ) }
    dend_5 { pt3dadd( -53.7987, 76.7116, 16.1379, 0.88 ) }
    dend_5 { pt3dadd( -54.1905, 77.1127, 16.6931, 0.44 ) }
    dend_5 { pt3dadd( -54.5575, 77.4272, 17.1932, 0.44 ) }
    dend_5 { pt3dadd( -55.1544, 77.8145, 17.9381, 0.59 ) }
    dend_5 { pt3dadd( -55.6085, 78.0754, 18.4532, 0.52 ) }
    dend_5 { pt3dadd( -56.3571, 78.4719, 19.2531, 0.66 ) }
    dend_5 { pt3dadd( -57.0347, 78.8197, 19.9537, 0.74 ) }
    dend_5 { pt3dadd( -57.5849, 79.1156, 20.5375, 0.74 ) }
    dend_5 { pt3dadd( -57.915, 79.3275, 20.8975, 0.74 ) }
    dend_5 { pt3dadd( -58.4299, 79.7328, 21.4764, 0.52 ) }
    dend_5 { pt3dadd( -58.6206, 79.9149, 21.6625, 0.52 ) }
    dend_5 { pt3dadd( -58.8913, 80.2303, 21.8858, 0.66 ) }
    dend_5 { pt3dadd( -59.2421, 80.6916, 22.1612, 0.66 ) }
    dend_5 { pt3dadd( -59.609, 81.1751, 22.4402, 0.81 ) }
    dend_5 { pt3dadd( -60.0128, 81.7048, 22.7377, 0.81 ) }
    dend_5 { pt3dadd( -60.3765, 82.1564, 23.0072, 0.59 ) }
    dend_5 { pt3dadd( -60.7781, 82.6334, 23.2895, 0.52 ) }
    dend_5 { pt3dadd( -61.3567, 83.2788, 23.6801, 0.59 ) }
    dend_5 { pt3dadd( -61.7629, 83.6947, 23.9597, 0.66 ) }
    dend_5 { pt3dadd( -62.1105, 84.0017, 24.1951, 0.66 ) }
    dend_5 { pt3dadd( -62.7419, 84.4416, 24.6108, 0.59 ) }
    dend_5 { pt3dadd( -63.1538, 84.6731, 24.8969, 0.59 ) }
    dend_5 { pt3dadd( -63.5681, 84.8682, 25.1891, 0.59 ) }
    dend_5 { pt3dadd( -64.1861, 85.1392, 25.606, 0.52 ) }
    dend_5 { pt3dadd( -64.6898, 85.3774, 25.9485, 0.66 ) }
    dend_5 { pt3dadd( -65.1458, 85.6242, 26.2381, 0.66 ) }
    dend_5 { pt3dadd( -65.7484, 85.9991, 26.5637, 0.52 ) }
    dend_5 { pt3dadd( -66.1923, 86.3149, 26.7581, 0.66 ) }
    dend_5 { pt3dadd( -66.871, 86.8676, 26.9898, 0.81 ) }
    dend_5 { pt3dadd( -67.4324, 87.3859, 27.1496, 0.81 ) }
    dend_5 { pt3dadd( -68.2376, 88.2425, 27.372, 0.52 ) }
    dend_5 { pt3dadd( -68.7317, 88.8399, 27.5203, 0.59 ) }
    dend_5 { pt3dadd( -69.0847, 89.2979, 27.6327, 0.59 ) }
    dend_5 { pt3dadd( -69.5137, 89.884, 27.7929, 0.37 ) }
    dend_5 { pt3dadd( -70.117, 90.7165, 28.0728, 0.52 ) }
    dend_5 { pt3dadd( -70.5934, 91.3353, 28.3311, 0.59 ) }
    dend_5 { pt3dadd( -71.1844, 92.0339, 28.6901, 0.22 ) }
    dend_5 { pt3dadd( -71.4578, 92.306, 28.8672, 0.37 ) }
    dend_5 { pt3dadd( -71.8412, 92.6251, 29.086, 0.37 ) }
    dend_5 { pt3dadd( -72.3599, 92.9821, 29.3183, 0.37 ) }
    dend_5 { pt3dadd( -72.9855, 93.3708, 29.5422, 0.66 ) }
    dend_5 { pt3dadd( -73.4583, 93.6763, 29.7595, 0.88 ) }
    dend_5 { pt3dadd( -73.8302, 93.9388, 29.9951, 0.59 ) }
    dend_5 { pt3dadd( -74.6622, 94.6073, 30.7056, 0.29 ) }
    dend_5 { pt3dadd( -75.2015, 95.1715, 31.3417, 0.29 ) }
    dend_5 { pt3dadd( -75.5746, 95.6889, 31.9108, 0.29 ) }
    dend_5 { pt3dadd( -76.2194, 96.9333, 33.2874, 0.88 ) }
    dend_5 { pt3dadd( -76.479, 97.5872, 34.1229, 0.88 ) }
    dend_5 { pt3dadd( -76.5895, 97.9826, 34.6663, 0.66 ) }
    dend_5 { pt3dadd( -76.6528, 98.5439, 35.5618, 0.52 ) }
    dend_5 { pt3dadd( -76.6385, 98.8356, 36.0566, 0.29 ) }
    dend_5 { pt3dadd( -76.6116, 99.0616, 36.4623, 0.29 ) }
    dend_5 { pt3dadd( -76.6611, 100.249, 38.0022, 0.74 ) }
    dend_5 { pt3dadd( -82.1751, 105.534, 44.6553, 0.74 ) }
    dend_5 { pt3dadd( -87.5613, 109.986, 51.9358, 0.74 ) }
    dend_5 { pt3dadd( -92.4535, 114.538, 59.504, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 62/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -26.5826, 52.1557, -6.7567, 0.74 ) }
    dend_2 { pt3dadd( -27.3156, 52.5374, -7.19086, 0.74 ) }
    dend_2 { pt3dadd( -27.8786, 52.9055, -7.49856, 0.74 ) }
    dend_2 { pt3dadd( -28.7596, 53.5577, -7.9199, 0.74 ) }
    dend_2 { pt3dadd( -29.3428, 53.9963, -8.27792, 0.88 ) }
    dend_2 { pt3dadd( -29.9271, 54.3978, -8.7087, 1.03 ) }
    dend_2 { pt3dadd( -30.4944, 54.709, -9.18831, 1.03 ) }
    dend_2 { pt3dadd( -31.0527, 54.9373, -9.7375, 0.96 ) }
    dend_2 { pt3dadd( -31.6611, 55.0864, -10.3475, 0.74 ) }
    dend_2 { pt3dadd( -33.1028, 55.2234, -11.6911, 0.66 ) }
    dend_2 { pt3dadd( -34.0583, 55.2084, -12.4526, 0.66 ) }
    dend_2 { pt3dadd( -35.3098, 55.1039, -13.304, 0.66 ) }
    dend_2 { pt3dadd( -36.0774, 55.0112, -13.7521, 0.59 ) }
    dend_2 { pt3dadd( -37.1142, 54.8601, -14.25, 0.66 ) }
    dend_2 { pt3dadd( -37.9152, 54.7433, -14.5397, 0.66 ) }
    dend_2 { pt3dadd( -39.5619, 54.5532, -14.9352, 0.81 ) }
    dend_2 { pt3dadd( -40.5281, 54.5071, -15.1171, 0.96 ) }
    dend_2 { pt3dadd( -41.2587, 54.5393, -15.2346, 1.18 ) }
    dend_2 { pt3dadd( -42.0115, 54.6325, -15.3605, 1.18 ) }
    dend_2 { pt3dadd( -43.0449, 54.84, -15.5541, 0.66 ) }
    dend_2 { pt3dadd( -43.8295, 55.0332, -15.727, 0.66 ) }
    dend_2 { pt3dadd( -44.4593, 55.2017, -15.8943, 0.59 ) }
    dend_2 { pt3dadd( -45.1587, 55.3577, -16.1606, 0.74 ) }
    dend_2 { pt3dadd( -46.0008, 55.4576, -16.5579, 0.74 ) }
    dend_2 { pt3dadd( -46.3465, 55.4198, -16.813, 0.88 ) }
    dend_2 { pt3dadd( -46.921, 55.1077, -17.5263, 0.88 ) }
    dend_2 { pt3dadd( -47.2901, 54.8204, -18.1609, 0.66 ) }
    dend_2 { pt3dadd( -48.0501, 54.208, -19.558, 0.66 ) }
    dend_2 { pt3dadd( -48.4164, 53.921, -20.24, 1.25 ) }
    dend_2 { pt3dadd( -49.2581, 53.3128, -21.7545, 1.47 ) }
    dend_2 { pt3dadd( -50.1725, 52.7482, -23.2704, 1.62 ) }
    dend_2 { pt3dadd( -51.291, 52.243, -24.9238, 1.55 ) }
    dend_2 { pt3dadd( -51.8549, 52.1081, -25.5925, 0.81 ) }
    dend_2 { pt3dadd( -52.5261, 52.086, -26.1704, 0.59 ) }
    dend_2 { pt3dadd( -53.3698, 52.1853, -26.7528, 0.44 ) }
    dend_2 { pt3dadd( -54.0302, 52.3306, -27.1174, 0.44 ) }
    dend_2 { pt3dadd( -54.7576, 52.5372, -27.4872, 0.59 ) }
    dend_2 { pt3dadd( -55.2545, 52.681, -27.7529, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( -55.9227, 52.8697, -28.2201, 0.29 ) }
    dend_2 { pt3dadd( -57.0432, 53.2316, -29.1602, 1.03 ) }
    dend_2 { pt3dadd( -57.9004, 53.5726, -29.9368, 1.47 ) }
    dend_2 { pt3dadd( -58.5414, 53.8706, -30.5317, 1.69 ) }
    dend_2 { pt3dadd( -58.9392, 54.0774, -30.8949, 2.06 ) }
    dend_2 { pt3dadd( -59.7468, 54.5627, -31.5916, 1.03 ) }
    dend_2 { pt3dadd( -60.5567, 55.1305, -32.2442, 0.52 ) }
    dend_2 { pt3dadd( -61.2499, 55.7259, -32.7885, 0.81 ) }
    dend_2 { pt3dadd( -61.6201, 56.114, -33.0906, 0.96 ) }
    dend_2 { pt3dadd( -62.0782, 56.6985, -33.5181, 0.74 ) }
    dend_2 { pt3dadd( -62.5552, 57.4044, -34.044, 1.03 ) }
    dend_2 { pt3dadd( -62.8579, 57.9038, -34.4248, 0.88 ) }
    dend_2 { pt3dadd( -63.2701, 58.6069, -35.0001, 1.25 ) }
    dend_2 { pt3dadd( -63.594, 59.1309, -35.4808, 1.62 ) }
    dend_2 { pt3dadd( -63.8935, 59.5643, -35.916, 1.77 ) }
    dend_2 { pt3dadd( -64.3298, 60.1667, -36.5686, 1.99 ) }
    dend_2 { pt3dadd( -64.7011, 60.6602, -37.1057, 1.18 ) }
    dend_2 { pt3dadd( -64.9917, 61.0502, -37.5163, 0.29 ) }
    dend_2 { pt3dadd( -65.3956, 61.6195, -38.1119, 0.29 ) }
    dend_2 { pt3dadd( -65.8834, 62.3858, -38.9255, 0.66 ) }
    dend_2 { pt3dadd( -66.2427, 63.064, -39.616, 0.66 ) }
    dend_2 { pt3dadd( -66.4938, 63.6565, -40.1683, 0.22 ) }
    dend_2 { pt3dadd( -66.7173, 64.3251, -40.7543, 0.81 ) }
    dend_2 { pt3dadd( -66.933, 65.0821, -41.4072, 1.18 ) }
    dend_2 { pt3dadd( -67.1712, 65.9908, -42.148, 0.96 ) }
    dend_2 { pt3dadd( -67.3144, 66.4877, -42.5283, 0.37 ) }
    dend_2 { pt3dadd( -67.5022, 66.9495, -42.8661, 0.29 ) }
    dend_2 { pt3dadd( -67.7055, 67.3086, -43.1275, 0.29 ) }
    dend_2 { pt3dadd( -68.0024, 67.7147, -43.3914, 0.29 ) }
    dend_2 { pt3dadd( -68.3463, 68.1585, -43.6205, 0.59 ) }
    dend_2 { pt3dadd( -68.7504, 68.7201, -43.8571, 0.59 ) }
    dend_2 { pt3dadd( -69.1136, 69.3542, -44.1404, 0.59 ) }
    dend_2 { pt3dadd( -69.4187, 70.0323, -44.4689, 0.59 ) }
    dend_2 { pt3dadd( -69.6588, 70.6812, -44.7801, 0.59 ) }
    dend_2 { pt3dadd( -69.8481, 71.2816, -45.0675, 0.29 ) }
    dend_2 { pt3dadd( -69.9962, 71.7916, -45.3184, 0.37 ) }
    dend_2 { pt3dadd( -70.2981, 72.6741, -45.8153, 0.37 ) }
    dend_2 { pt3dadd( -70.6325, 73.4122, -46.3392, 0.74 ) }
    dend_2 { pt3dadd( -70.8368, 73.7442, -46.606, 1.25 ) }
    dend_2 { pt3dadd( -71.1682, 74.1825, -46.9738, 1.69 ) }
    dend_2 { pt3dadd( -71.4886, 74.5469, -47.3052, 1.47 ) }
    dend_2 { pt3dadd( -72.1283, 75.1848, -47.9467, 0.96 ) }
    dend_2 { pt3dadd( -72.8211, 75.8035, -48.6125, 0.59 ) }
    dend_2 { pt3dadd( -73.3469, 76.2473, -49.1446, 0.52 ) }
    dend_2 { pt3dadd( -73.8021, 76.5951, -49.6296, 0.66 ) }
    dend_2 { pt3dadd( -74.405, 76.9889, -50.2583, 0.52 ) }
    dend_2 { pt3dadd( -74.9651, 77.292, -50.8498, 0.81 ) }
    dend_2 { pt3dadd( -75.5598, 77.5167, -51.422, 0.96 ) }
    dend_2 { pt3dadd( -76.1413, 77.6679, -51.9079, 1.55 ) }
    dend_2 { pt3dadd( -76.8923, 77.8211, -52.4891, 1.77 ) }
    dend_2 { pt3dadd( -77.5269, 77.9408, -52.9185, 2.21 ) }
    dend_2 { pt3dadd( -78.5233, 78.1342, -53.4999, 2.36 ) }
    dend_2 { pt3dadd( -79.5835, 78.3379, -54.054, 0.59 ) }
    dend_2 { pt3dadd( -80.4761, 78.478, -54.4996, 0.37 ) }
    dend_2 { pt3dadd( -81.0073, 78.5406, -54.7479, 0.37 ) }
    dend_2 { pt3dadd( -81.7294, 78.5957, -55.0751, 0.37 ) }
    dend_2 { pt3dadd( -82.3475, 78.6257, -55.3572, 0.37 ) }
    dend_2 { pt3dadd( -82.9146, 78.639, -55.5939, 0.37 ) }
    dend_2 { pt3dadd( -83.5909, 78.6539, -55.9053, 0.29 ) }
    dend_2 { pt3dadd( -83.9957, 78.6444, -56.0906, 0.29 ) }
    dend_2 { pt3dadd( -84.4459, 78.6489, -56.3217, 0.44 ) }
    dend_2 { pt3dadd( -85.2106, 78.7614, -56.7594, 0.81 ) }
    dend_2 { pt3dadd( -85.659, 78.9095, -57.0646, 1.18 ) }
    dend_2 { pt3dadd( -86.0809, 79.1062, -57.4032, 1.18 ) }
    dend_2 { pt3dadd( -86.5614, 79.3666, -57.9027, 0.74 ) }
    dend_2 { pt3dadd( -87.3156, 79.7907, -58.8156, 0.37 ) }
    dend_2 { pt3dadd( -87.7583, 80.0478, -59.3998, 0.81 ) }
    dend_2 { pt3dadd( -88.4719, 80.4587, -60.4357, 1.18 ) }
    dend_2 { pt3dadd( -89.0141, 80.768, -61.2703, 1.18 ) }
    dend_2 { pt3dadd( -90.0848, 81.3572, -62.9965, 0.52 ) }
    dend_2 { pt3dadd( -90.619, 81.6468, -63.7999, 0.37 ) }
    dend_2 { pt3dadd( -91.4591, 82.0503, -64.8886, 1.33 ) }
    dend_2 { pt3dadd( -92.1444, 82.3398, -65.6725, 2.14 ) }
    dend_2 { pt3dadd( -92.575, 82.5257, -66.1066, 2.58 ) }
    dend_2 { pt3dadd( -93.5739, 83.0027, -66.9913, 2.8 ) }
    dend_2 { pt3dadd( -94.873, 83.731, -68.0048, 0.37 ) }
    dend_2 { pt3dadd( -95.6529, 84.2721, -68.6063, 0.37 ) }
    dend_2 { pt3dadd( -95.9598, 84.5421, -68.8402, 0.37 ) }
    dend_2 { pt3dadd( -96.4532, 85.1477, -69.2004, 0.59 ) }
    dend_2 { pt3dadd( -96.7791, 85.7272, -69.4706, 0.74 ) }
    dend_2 { pt3dadd( -97.0418, 86.4041, -69.7434, 0.74 ) }
    dend_2 { pt3dadd( -97.2342, 87.0521, -70.1168, 0.74 ) }
    dend_2 { pt3dadd( -97.3757, 87.4295, -70.4012, 0.44 ) }
    dend_2 { pt3dadd( -97.6996, 87.9055, -70.8833, 0.29 ) }
    dend_2 { pt3dadd( -98.0383, 88.2448, -71.3445, 0.29 ) }
    dend_2 { pt3dadd( -98.4388, 88.5486, -71.8732, 0.81 ) }
    dend_2 { pt3dadd( -99.4474, 89.12, -73.0819, 1.03 ) }
    dend_2 { pt3dadd( -99.888, 89.3233, -73.5667, 0.96 ) }
    dend_2 { pt3dadd( -100.71, 89.6832, -74.4266, 0.22 ) }
    dend_2 { pt3dadd( -101.498, 90.0425, -75.2688, 0.59 ) }
    dend_2 { pt3dadd( -102.004, 90.3112, -75.8112, 0.59 ) }
    dend_2 { pt3dadd( -102.51, 90.6298, -76.3623, 0.44 ) }
    dend_2 { pt3dadd( -103.0, 90.975, -76.8758, 0.37 ) }
    dend_2 { pt3dadd( -103.931, 91.6072, -77.8682, 1.03 ) }
    dend_2 { pt3dadd( -104.659, 92.046, -78.6036, 1.69 ) }
    dend_2 { pt3dadd( -105.043, 92.269, -78.9516, 1.92 ) }
    dend_2 { pt3dadd( -105.547, 92.5816, -79.3882, 1.92 ) }
    dend_2 { pt3dadd( -105.857, 92.7864, -79.6645, 1.92 ) }
    dend_2 { pt3dadd( -107.063, 93.6016, -80.7122, 0.44 ) }
    dend_2 { pt3dadd( -107.443, 93.8769, -81.008, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( -107.898, 94.269, -81.3779, 0.52 ) }
    dend_2 { pt3dadd( -108.142, 94.5281, -81.6163, 0.88 ) }
    dend_2 { pt3dadd( -108.608, 95.1337, -82.1587, 1.03 ) }
    dend_2 { pt3dadd( -108.887, 95.5252, -82.5119, 1.18 ) }
    dend_2 { pt3dadd( -109.307, 96.1661, -83.0886, 0.96 ) }
    dend_2 { pt3dadd( -109.829, 96.9583, -83.7946, 0.74 ) }
    dend_2 { pt3dadd( -110.152, 97.4549, -84.205, 0.74 ) }
    dend_2 { pt3dadd( -110.452, 97.9218, -84.5598, 0.59 ) }
    dend_2 { pt3dadd( -110.996, 98.7431, -85.1062, 0.52 ) }
    dend_2 { pt3dadd( -111.357, 99.2695, -85.4237, 0.52 ) }
    dend_2 { pt3dadd( -111.939, 100.074, -85.8346, 0.74 ) }
    dend_2 { pt3dadd( -112.565, 100.884, -86.1575, 1.18 ) }
    dend_2 { pt3dadd( -113.109, 101.561, -86.3829, 1.4 ) }
    dend_2 { pt3dadd( -113.51, 102.039, -86.5243, 1.47 ) }
    dend_2 { pt3dadd( -113.913, 102.476, -86.6462, 1.69 ) }
    dend_2 { pt3dadd( -114.539, 103.035, -86.8268, 1.4 ) }
    dend_2 { pt3dadd( -115.364, 103.621, -87.0819, 0.52 ) }
    dend_2 { pt3dadd( -116.168, 104.062, -87.3446, 0.52 ) }
    dend_2 { pt3dadd( -117.021, 104.435, -87.6262, 0.74 ) }
    dend_2 { pt3dadd( -117.771, 104.716, -87.9148, 0.96 ) }
    dend_2 { pt3dadd( -118.771, 105.053, -88.3705, 0.96 ) }
    dend_2 { pt3dadd( -119.5, 105.294, -88.7681, 0.74 ) }
    dend_2 { pt3dadd( -120.209, 105.574, -89.2209, 0.44 ) }
    dend_2 { pt3dadd( -120.654, 105.827, -89.5498, 0.44 ) }
    dend_2 { pt3dadd( -121.19, 106.232, -89.9914, 0.74 ) }
    dend_2 { pt3dadd( -121.661, 106.634, -90.3772, 0.88 ) }
    dend_2 { pt3dadd( -121.992, 106.926, -90.6723, 0.88 ) }
    dend_2 { pt3dadd( -122.567, 107.46, -91.2308, 0.29 ) }
    dend_2 { pt3dadd( -123.101, 107.973, -91.8, 0.29 ) }
    dend_2 { pt3dadd( -123.689, 108.518, -92.4317, 0.37 ) }
    dend_2 { pt3dadd( -124.254, 109.013, -93.0175, 0.44 ) }
    dend_2 { pt3dadd( -125.16, 109.79, -93.9637, 0.59 ) }
    dend_2 { pt3dadd( -125.564, 110.165, -94.4117, 1.18 ) }
    dend_2 { pt3dadd( -126.14, 110.77, -95.0754, 1.03 ) }
    dend_2 { pt3dadd( -126.59, 111.312, -95.5833, 1.69 ) }
    dend_2 { pt3dadd( -126.828, 111.625, -95.8279, 1.69 ) }
    dend_2 { pt3dadd( -127.359, 112.336, -96.3293, 1.18 ) }
    dend_2 { pt3dadd( -128.068, 113.237, -96.8925, 0.37 ) }
    dend_2 { pt3dadd( -128.494, 113.748, -97.2308, 0.37 ) }
    dend_2 { pt3dadd( -129.161, 114.511, -97.7599, 0.37 ) }
    dend_2 { pt3dadd( -129.771, 115.166, -98.251, 0.59 ) }
    dend_2 { pt3dadd( -130.306, 115.692, -98.6644, 1.11 ) }
    dend_2 { pt3dadd( -130.768, 116.096, -98.9976, 1.62 ) }
    dend_2 { pt3dadd( -131.337, 116.518, -99.4058, 1.69 ) }
    dend_2 { pt3dadd( -131.884, 116.907, -99.842, 1.92 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 45/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -69.723, 22.334, 131.271, 0.88 ) }
    dend_60 { pt3dadd( -73.205, 20.9672, 140.555, 0.88 ) }
    dend_60 { pt3dadd( -77.1829, 21.202, 149.727, 0.88 ) }
    dend_60 { pt3dadd( -79.9042, 22.4507, 159.275, 0.88 ) }
    dend_60 { pt3dadd( -82.5782, 23.7581, 168.831, 0.88 ) }
    dend_60 { pt3dadd( -83.7197, 26.4189, 178.437, 0.88 ) }
    dend_60 { pt3dadd( -84.3725, 29.3047, 188.029, 0.88 ) }
    dend_60 { pt3dadd( -86.7906, 33.0902, 197.038, 0.88 ) }
    dend_60 { pt3dadd( -89.0056, 37.9818, 205.605, 0.88 ) }
    dend_60 { pt3dadd( -91.6489, 43.7652, 213.521, 0.88 ) }
    dend_60 { pt3dadd( -94.6648, 49.9519, 221.017, 0.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 56/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -69.723, 22.334, 131.271, 0.22 ) }
    dend_57 { pt3dadd( -72.5121, 21.4949, 140.841, 0.88 ) }
    dend_57 { pt3dadd( -74.4007, 21.3609, 150.66, 0.88 ) }
    dend_57 { pt3dadd( -78.3191, 22.097, 159.834, 0.88 ) }
    dend_57 { pt3dadd( -82.2486, 23.3738, 168.949, 0.88 ) }
    dend_57 { pt3dadd( -86.5954, 23.5974, 177.952, 0.88 ) }
    dend_57 { pt3dadd( -91.6002, 23.1668, 186.6, 0.88 ) }
    dend_57 { pt3dadd( -95.5498, 22.0946, 195.73, 0.88 ) }
    dend_57 { pt3dadd( -100.045, 21.2019, 204.622, 0.88 ) }
    dend_57 { pt3dadd( -103.178, 18.9048, 213.863, 0.88 ) }
    dend_57 { pt3dadd( -104.759, 16.8972, 223.551, 0.88 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 67/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -161.376, 109.08, 67.1792, 0.88 ) }
    dend_53 { pt3dadd( -170.0, 113.867, 69.3774, 0.88 ) }
    dend_53 { pt3dadd( -178.76, 118.368, 71.5875, 0.88 ) }
    dend_53 { pt3dadd( -187.772, 122.606, 73.1691, 0.88 ) }
    dend_53 { pt3dadd( -197.152, 125.53, 75.2338, 0.88 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 72/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -161.376, 109.08, 67.1792, 0.22 ) }
    dend_52 { pt3dadd( -169.654, 114.612, 69.1063, 0.88 ) }
    dend_52 { pt3dadd( -178.175, 119.645, 71.2067, 0.88 ) }
    dend_52 { pt3dadd( -187.666, 122.558, 72.6994, 0.88 ) }
    dend_52 { pt3dadd( -196.805, 126.821, 72.7481, 0.88 ) }
    dend_52 { pt3dadd( -206.169, 130.298, 73.9058, 0.88 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 78/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -60.7959, -136.582, 68.1133, 0.88 ) }
    dend_42 { pt3dadd( -64.9625, -144.194, 73.5972, 0.88 ) }
    dend_42 { pt3dadd( -68.1399, -151.889, 79.6136, 0.88 ) }
    dend_42 { pt3dadd( -71.2316, -159.123, 86.1694, 0.88 ) }
    dend_42 { pt3dadd( -73.131, -167.563, 91.8073, 0.88 ) }
    dend_42 { pt3dadd( -73.2019, -174.901, 98.9589, 0.88 ) }
    dend_42 { pt3dadd( -74.9089, -181.948, 106.174, 0.88 ) }
    dend_42 { pt3dadd( -74.8429, -187.331, 114.759, 0.88 ) }
    dend_42 { pt3dadd( -73.5078, -192.906, 123.128, 0.88 ) }
    dend_42 { pt3dadd( -70.4226, -197.003, 131.803, 0.88 ) }
    dend_42 { pt3dadd( -67.0088, -202.569, 139.564, 0.88 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 89/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -60.7959, -136.582, 68.1133, 0.22 ) }
    dend_39 { pt3dadd( -65.9157, -144.187, 72.7312, 0.88 ) }
    dend_39 { pt3dadd( -71.4905, -150.963, 77.9531, 0.88 ) }
    dend_39 { pt3dadd( -76.3702, -159.165, 81.8492, 0.88 ) }
    dend_39 { pt3dadd( -81.6879, -167.259, 85.3563, 0.88 ) }
    dend_39 { pt3dadd( -87.1578, -175.557, 88.1184, 0.88 ) }
    dend_39 { pt3dadd( -93.8771, -183.281, 88.9738, 0.88 ) }
    dend_39 { pt3dadd( -100.436, -191.051, 90.4659, 0.88 ) }
    dend_39 { pt3dadd( -107.786, -197.884, 92.3725, 0.88 ) }
    dend_39 { pt3dadd( -116.017, -203.796, 93.115, 0.88 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 99/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -3.83118, -52.276, 5.17685, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_27 { pt3dadd( -3.46327, -53.3116, 4.65333, 1.25 ) }
    dend_27 { pt3dadd( -3.17397, -54.0242, 4.37382, 1.03 ) }
    dend_27 { pt3dadd( -2.68773, -55.0082, 4.10169, 0.88 ) }
    dend_27 { pt3dadd( -2.27968, -55.8111, 3.98439, 0.66 ) }
    dend_27 { pt3dadd( -1.99982, -56.4043, 3.96906, 0.66 ) }
    dend_27 { pt3dadd( -1.62276, -57.3125, 4.01114, 0.74 ) }
    dend_27 { pt3dadd( -1.35189, -58.1827, 4.1497, 0.66 ) }
    dend_27 { pt3dadd( -1.1633, -58.8519, 4.31672, 0.81 ) }
    dend_27 { pt3dadd( -0.987911, -59.5257, 4.51174, 0.81 ) }
    dend_27 { pt3dadd( -0.756509, -60.3945, 4.73758, 0.74 ) }
    dend_27 { pt3dadd( -0.511754, -61.2666, 4.90217, 0.96 ) }
    dend_27 { pt3dadd( -0.218193, -62.2842, 5.02202, 1.03 ) }
    dend_27 { pt3dadd( 0.0753738, -63.2428, 5.1122, 1.11 ) }
    dend_27 { pt3dadd( 0.371846, -64.186, 5.18791, 1.25 ) }
    dend_27 { pt3dadd( 0.798539, -65.3949, 5.26049, 0.96 ) }
    dend_27 { pt3dadd( 1.27716, -66.6085, 5.33108, 0.96 ) }
    dend_27 { pt3dadd( 1.75247, -67.6994, 5.39765, 1.11 ) }
    dend_27 { pt3dadd( 2.18436, -68.6055, 5.45167, 1.47 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 18/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -3.83118, -52.276, 5.17685, 2.06 ) }
    dend_20 { pt3dadd( -4.54009, -53.1668, 4.98786, 2.06 ) }
    dend_20 { pt3dadd( -5.26421, -54.2289, 4.65399, 2.06 ) }
    dend_20 { pt3dadd( -5.83801, -55.2066, 4.28171, 2.06 ) }
    dend_20 { pt3dadd( -6.32958, -56.114, 3.8682, 2.06 ) }
    dend_20 { pt3dadd( -6.87704, -57.1203, 3.33791, 1.99 ) }
    dend_20 { pt3dadd( -7.59044, -58.444, 2.60364, 1.77 ) }
    dend_20 { pt3dadd( -8.16401, -59.6237, 1.85121, 1.47 ) }
    dend_20 { pt3dadd( -8.70222, -60.8216, 1.01276, 1.11 ) }
    dend_20 { pt3dadd( -9.20591, -61.9435, 0.149269, 1.11 ) }
    dend_20 { pt3dadd( -9.58547, -62.7351, -0.489567, 1.25 ) }
    dend_20 { pt3dadd( -9.91021, -63.3385, -0.983379, 1.25 ) }
    dend_20 { pt3dadd( -10.736, -64.5787, -1.97917, 1.18 ) }
    dend_20 { pt3dadd( -11.2975, -65.2294, -2.49141, 1.25 ) }
    dend_20 { pt3dadd( -12.2903, -66.1397, -3.17862, 1.18 ) }
    dend_20 { pt3dadd( -13.0841, -66.7374, -3.56184, 1.18 ) }
    dend_20 { pt3dadd( -13.6986, -67.118, -3.7517, 1.18 ) }
    dend_20 { pt3dadd( -14.7578, -67.6298, -3.93858, 1.18 ) }
    dend_20 { pt3dadd( -15.86, -68.054, -4.01996, 1.25 ) }
    dend_20 { pt3dadd( -16.4624, -68.2452, -4.02498, 1.25 ) }
    dend_20 { pt3dadd( -17.3342, -68.4819, -3.96123, 1.25 ) }
    dend_20 { pt3dadd( -18.6365, -68.8298, -3.83422, 1.77 ) }
    dend_20 { pt3dadd( -19.5377, -69.0675, -3.73319, 2.14 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 56.0858, 135.006, -22.8106, 0.74 ) }
    dend_14 { pt3dadd( 56.6497, 135.084, -23.6344, 0.74 ) }
    dend_14 { pt3dadd( 57.8541, 135.407, -25.2402, 1.03 ) }
    dend_14 { pt3dadd( 58.4746, 135.675, -26.0568, 0.52 ) }
    dend_14 { pt3dadd( 58.9493, 135.96, -26.6777, 0.52 ) }
    dend_14 { pt3dadd( 59.4414, 136.347, -27.3119, 0.74 ) }
    dend_14 { pt3dadd( 59.9364, 136.809, -27.9209, 0.52 ) }
    dend_14 { pt3dadd( 60.4849, 137.45, -28.4824, 0.59 ) }
    dend_14 { pt3dadd( 61.2029, 138.407, -29.0737, 0.44 ) }
    dend_14 { pt3dadd( 61.7053, 139.099, -29.4368, 0.52 ) }
    dend_14 { pt3dadd( 62.3666, 140.025, -29.8728, 0.44 ) }
    dend_14 { pt3dadd( 62.873, 140.718, -30.1565, 0.29 ) }
    dend_14 { pt3dadd( 63.504, 141.509, -30.4648, 0.29 ) }
    dend_14 { pt3dadd( 63.7016, 141.713, -30.5581, 0.59 ) }
    dend_14 { pt3dadd( 64.2403, 142.187, -30.802, 0.59 ) }
    dend_14 { pt3dadd( 64.9189, 142.677, -31.1151, 0.44 ) }
    dend_14 { pt3dadd( 65.4586, 143.012, -31.3789, 0.59 ) }
    dend_14 { pt3dadd( 66.4357, 143.627, -31.8812, 0.37 ) }
    dend_14 { pt3dadd( 67.1586, 144.137, -32.2661, 0.37 ) }
    dend_14 { pt3dadd( 67.7603, 144.594, -32.5694, 0.37 ) }
    dend_14 { pt3dadd( 68.4353, 145.13, -32.8764, 0.37 ) }
    dend_14 { pt3dadd( 69.4463, 145.903, -33.2744, 0.96 ) }
    dend_14 { pt3dadd( 70.1179, 146.41, -33.509, 1.03 ) }
    dend_14 { pt3dadd( 71.0057, 147.087, -33.7837, 0.81 ) }
    dend_14 { pt3dadd( 71.6222, 147.582, -33.9684, 0.66 ) }
    dend_14 { pt3dadd( 72.473, 148.314, -34.2388, 0.88 ) }
    dend_14 { pt3dadd( 72.9088, 148.713, -34.3797, 1.25 ) }
    dend_14 { pt3dadd( 73.5792, 149.284, -34.5681, 0.88 ) }
    dend_14 { pt3dadd( 74.26, 149.78, -34.8042, 0.29 ) }
    dend_14 { pt3dadd( 74.6722, 150.05, -34.9737, 0.44 ) }
    dend_14 { pt3dadd( 75.2501, 150.427, -35.2407, 0.37 ) }
    dend_14 { pt3dadd( 76.1495, 150.965, -35.6702, 0.52 ) }
    dend_14 { pt3dadd( 77.1125, 151.476, -36.1292, 0.59 ) }
    dend_14 { pt3dadd( 78.8026, 152.226, -36.86, 0.66 ) }
    dend_14 { pt3dadd( 79.779, 152.602, -37.2407, 0.52 ) }
    dend_14 { pt3dadd( 80.1909, 152.742, -37.4053, 0.59 ) }
    dend_14 { pt3dadd( 80.9874, 153.005, -37.7213, 0.44 ) }
    dend_14 { pt3dadd( 81.8331, 153.318, -38.0516, 0.37 ) }
    dend_14 { pt3dadd( 82.9473, 153.796, -38.4364, 0.37 ) }
    dend_14 { pt3dadd( 83.5961, 154.099, -38.5927, 0.96 ) }
    dend_14 { pt3dadd( 84.4305, 154.544, -38.7579, 0.88 ) }
    dend_14 { pt3dadd( 85.2967, 155.069, -38.9137, 0.44 ) }
    dend_14 { pt3dadd( 85.8597, 155.452, -39.0231, 0.29 ) }
    dend_14 { pt3dadd( 86.5319, 155.951, -39.1983, 0.44 ) }
    dend_14 { pt3dadd( 87.3795, 156.648, -39.4738, 0.44 ) }
    dend_14 { pt3dadd( 88.2822, 157.462, -39.8459, 0.52 ) }
    dend_14 { pt3dadd( 88.8707, 158.046, -40.1469, 0.66 ) }
    dend_14 { pt3dadd( 89.8272, 159.066, -40.8239, 0.66 ) }
    dend_14 { pt3dadd( 90.6349, 159.996, -41.5487, 0.44 ) }
    dend_14 { pt3dadd( 91.0554, 160.52, -42.0081, 0.37 ) }
    dend_14 { pt3dadd( 91.5172, 161.145, -42.6168, 0.37 ) }
    dend_14 { pt3dadd( 91.8002, 161.504, -43.0057, 0.52 ) }
    dend_14 { pt3dadd( 92.3714, 162.11, -43.7128, 0.59 ) }
    dend_14 { pt3dadd( 92.7102, 162.367, -44.0257, 0.66 ) }
    dend_14 { pt3dadd( 93.3628, 162.657, -44.4218, 0.52 ) }
    dend_14 { pt3dadd( 94.2225, 162.863, -44.8222, 0.88 ) }
    dend_14 { pt3dadd( 94.8564, 162.963, -45.0604, 0.88 ) }
    dend_14 { pt3dadd( 95.5911, 163.086, -45.3537, 0.74 ) }
    dend_14 { pt3dadd( 96.1989, 163.183, -45.6721, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( 96.6452, 163.237, -45.9532, 0.29 ) }
    dend_14 { pt3dadd( 97.462, 163.278, -46.5169, 0.29 ) }
    dend_14 { pt3dadd( 98.0207, 163.277, -46.9242, 0.29 ) }
    dend_14 { pt3dadd( 99.0981, 163.316, -47.7944, 0.88 ) }
    dend_14 { pt3dadd( 100.176, 163.451, -48.7292, 0.96 ) }
    dend_14 { pt3dadd( 100.684, 163.562, -49.1832, 0.88 ) }
    dend_14 { pt3dadd( 101.402, 163.742, -49.838, 0.29 ) }
    dend_14 { pt3dadd( 101.736, 163.811, -50.1116, 0.29 ) }
    dend_14 { pt3dadd( 102.309, 163.848, -50.5129, 0.37 ) }
    dend_14 { pt3dadd( 102.911, 163.812, -50.8769, 0.37 ) }
    dend_14 { pt3dadd( 103.382, 163.78, -51.2041, 0.37 ) }
    dend_14 { pt3dadd( 104.555, 163.671, -52.1088, 0.44 ) }
    dend_14 { pt3dadd( 105.259, 163.574, -52.6815, 0.59 ) }
    dend_14 { pt3dadd( 105.721, 163.467, -53.0537, 0.81 ) }
    dend_14 { pt3dadd( 106.407, 163.291, -53.6137, 0.59 ) }
    dend_14 { pt3dadd( 107.506, 163.052, -54.5261, 1.11 ) }
    dend_14 { pt3dadd( 108.048, 162.973, -54.9909, 1.47 ) }
    dend_14 { pt3dadd( 108.462, 162.935, -55.3261, 1.47 ) }
    dend_14 { pt3dadd( 109.269, 162.854, -55.9525, 1.03 ) }
    dend_14 { pt3dadd( 110.312, 162.756, -56.6799, 0.59 ) }
    dend_14 { pt3dadd( 111.254, 162.643, -57.2591, 0.96 ) }
    dend_14 { pt3dadd( 112.258, 162.482, -57.8126, 0.96 ) }
    dend_14 { pt3dadd( 113.264, 162.309, -58.356, 0.37 ) }
    dend_14 { pt3dadd( 114.179, 162.155, -58.8028, 0.37 ) }
    dend_14 { pt3dadd( 114.863, 162.034, -59.1026, 0.37 ) }
    dend_14 { pt3dadd( 115.94, 161.801, -59.5376, 0.37 ) }
    dend_14 { pt3dadd( 117.004, 161.57, -59.9458, 0.81 ) }
    dend_14 { pt3dadd( 117.92, 161.409, -60.2832, 1.03 ) }
    dend_14 { pt3dadd( 119.18, 161.283, -60.7709, 1.25 ) }
    dend_14 { pt3dadd( 119.543, 161.262, -60.9089, 1.47 ) }
    dend_14 { pt3dadd( 121.082, 161.181, -61.4611, 0.29 ) }
    dend_14 { pt3dadd( 121.575, 161.166, -61.6084, 0.29 ) }
    dend_14 { pt3dadd( 122.147, 161.157, -61.7433, 0.44 ) }
    dend_14 { pt3dadd( 122.82, 161.168, -61.8637, 0.22 ) }
    dend_14 { pt3dadd( 123.57, 161.208, -61.9687, 0.59 ) }
    dend_14 { pt3dadd( 124.227, 161.281, -62.0343, 0.59 ) }
    dend_14 { pt3dadd( 125.281, 161.456, -62.1067, 0.22 ) }
    dend_14 { pt3dadd( 126.39, 161.659, -62.1807, 0.22 ) }
    dend_14 { pt3dadd( 127.767, 161.908, -62.2608, 0.22 ) }
    dend_14 { pt3dadd( 128.563, 162.057, -62.2981, 0.44 ) }
    dend_14 { pt3dadd( 129.951, 162.365, -62.3607, 0.22 ) }
    dend_14 { pt3dadd( 130.789, 162.561, -62.4006, 0.22 ) }
    dend_14 { pt3dadd( 131.439, 162.71, -62.4377, 0.37 ) }
    dend_14 { pt3dadd( 133.258, 163.099, -62.5482, 0.22 ) }
    dend_14 { pt3dadd( 134.496, 163.338, -62.6328, 0.22 ) }
    dend_14 { pt3dadd( 136.716, 163.761, -62.793, 0.22 ) }
    dend_14 { pt3dadd( 137.979, 163.974, -62.9026, 0.22 ) }
    dend_14 { pt3dadd( 138.609, 164.067, -62.9591, 0.96 ) }
    dend_14 { pt3dadd( 139.49, 164.192, -63.04, 0.96 ) }
    dend_14 { pt3dadd( 140.287, 164.302, -63.1155, 0.88 ) }
    dend_14 { pt3dadd( 141.036, 164.387, -63.1796, 0.88 ) }
    dend_14 { pt3dadd( 142.908, 164.596, -63.3057, 0.22 ) }
    dend_14 { pt3dadd( 145.257, 164.841, -63.42, 0.22 ) }
    dend_14 { pt3dadd( 146.439, 164.957, -63.4624, 0.44 ) }
    dend_14 { pt3dadd( 147.1, 165.0, -63.4838, 0.52 ) }
    dend_14 { pt3dadd( 148.603, 165.048, -63.4999, 0.22 ) }
    dend_14 { pt3dadd( 150.775, 165.047, -63.4799, 0.22 ) }
    dend_14 { pt3dadd( 152.462, 165.007, -63.4129, 0.22 ) }
    dend_14 { pt3dadd( 154.076, 164.914, -63.3241, 0.22 ) }
    dend_14 { pt3dadd( 156.242, 164.714, -63.1823, 0.22 ) }
    dend_14 { pt3dadd( 157.514, 164.55, -63.0875, 0.22 ) }
    dend_14 { pt3dadd( 158.497, 164.368, -63.007, 1.33 ) }
    dend_14 { pt3dadd( 159.167, 164.179, -62.9465, 1.47 ) }
    dend_14 { pt3dadd( 160.537, 163.759, -62.8097, 0.66 ) }
    dend_14 { pt3dadd( 161.537, 163.405, -62.7028, 0.29 ) }
    dend_14 { pt3dadd( 162.892, 162.886, -62.5682, 0.29 ) }
    dend_14 { pt3dadd( 163.926, 162.453, -62.5162, 0.29 ) }
    dend_14 { pt3dadd( 164.951, 161.957, -62.479, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 56.0858, 135.006, -22.8106, 0.37 ) }
    dend_13 { pt3dadd( 56.9415, 135.778, -22.6731, 0.37 ) }
    dend_13 { pt3dadd( 57.7844, 136.584, -22.4978, 0.37 ) }
    dend_13 { pt3dadd( 58.1622, 136.956, -22.403, 0.37 ) }
    dend_13 { pt3dadd( 58.8055, 137.589, -22.2756, 0.37 ) }
    dend_13 { pt3dadd( 59.2611, 138.064, -22.1948, 0.37 ) }
    dend_13 { pt3dadd( 60.2358, 139.116, -22.0111, 0.66 ) }
    dend_13 { pt3dadd( 60.7187, 139.664, -21.8471, 1.25 ) }
    dend_13 { pt3dadd( 61.0478, 140.069, -21.6952, 1.25 ) }
    dend_13 { pt3dadd( 61.7056, 141.001, -21.3119, 0.59 ) }
    dend_13 { pt3dadd( 62.2443, 141.838, -20.9206, 0.37 ) }
    dend_13 { pt3dadd( 62.8761, 142.809, -20.4179, 0.37 ) }
    dend_13 { pt3dadd( 63.7794, 144.126, -19.6998, 0.52 ) }
    dend_13 { pt3dadd( 64.1228, 144.629, -19.4064, 0.37 ) }
    dend_13 { pt3dadd( 64.5947, 145.334, -19.0054, 0.52 ) }
    dend_13 { pt3dadd( 64.9535, 145.885, -18.6525, 0.66 ) }
    dend_13 { pt3dadd( 65.2482, 146.339, -18.3681, 0.66 ) }
    dend_13 { pt3dadd( 65.6141, 146.915, -18.038, 0.44 ) }
    dend_13 { pt3dadd( 66.2128, 147.918, -17.5612, 0.66 ) }
    dend_13 { pt3dadd( 66.5168, 148.46, -17.2988, 0.81 ) }
    dend_13 { pt3dadd( 67.1572, 149.671, -16.7145, 1.03 ) }
    dend_13 { pt3dadd( 67.6079, 150.541, -16.2884, 1.18 ) }
    dend_13 { pt3dadd( 67.8462, 150.993, -16.0124, 1.18 ) }
    dend_13 { pt3dadd( 68.3794, 151.935, -15.3376, 0.44 ) }
    dend_13 { pt3dadd( 68.8327, 152.713, -14.7195, 0.37 ) }
    dend_13 { pt3dadd( 69.0803, 153.162, -14.35, 0.37 ) }
    dend_13 { pt3dadd( 69.4438, 153.875, -13.7956, 0.66 ) }
    dend_13 { pt3dadd( 70.2193, 155.367, -12.6099, 0.96 ) }
    dend_13 { pt3dadd( 70.3593, 155.631, -12.4115, 0.66 ) }
    dend_13 { pt3dadd( 70.6729, 156.174, -12.0119, 0.29 ) }
    dend_13 { pt3dadd( 71.0271, 156.747, -11.6455, 0.29 ) }
    dend_13 { pt3dadd( 71.3062, 157.155, -11.4421, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_13 { pt3dadd( 71.9848, 158.018, -11.1279, 0.29 ) }
    dend_13 { pt3dadd( 72.6411, 158.755, -10.9396, 0.44 ) }
    dend_13 { pt3dadd( 73.3541, 159.503, -10.7576, 0.59 ) }
    dend_13 { pt3dadd( 74.168, 160.318, -10.5706, 0.59 ) }
    dend_13 { pt3dadd( 75.0789, 161.231, -10.3736, 0.66 ) }
    dend_13 { pt3dadd( 75.5954, 161.777, -10.2481, 0.44 ) }
    dend_13 { pt3dadd( 76.1033, 162.373, -10.1062, 0.37 ) }
    dend_13 { pt3dadd( 76.5324, 162.923, -9.95484, 0.52 ) }
    dend_13 { pt3dadd( 76.9439, 163.475, -9.78033, 0.66 ) }
    dend_13 { pt3dadd( 77.288, 163.952, -9.60482, 0.66 ) }
    dend_13 { pt3dadd( 78.0176, 164.993, -9.18318, 0.59 ) }
    dend_13 { pt3dadd( 78.5148, 165.726, -8.88661, 0.74 ) }
    dend_13 { pt3dadd( 79.1191, 166.654, -8.48685, 0.66 ) }
    dend_13 { pt3dadd( 79.8478, 167.852, -7.96694, 0.52 ) }
    dend_13 { pt3dadd( 80.3705, 168.77, -7.56422, 0.59 ) }
    dend_13 { pt3dadd( 80.7184, 169.4, -7.27853, 0.59 ) }
    dend_13 { pt3dadd( 81.0812, 170.043, -6.98472, 0.59 ) }
    dend_13 { pt3dadd( 81.6768, 171.044, -6.4891, 0.44 ) }
    dend_13 { pt3dadd( 82.1444, 171.826, -6.08499, 0.29 ) }
    dend_13 { pt3dadd( 82.545, 172.541, -5.67283, 0.44 ) }
    dend_13 { pt3dadd( 83.0135, 173.338, -5.14871, 0.59 ) }
    dend_13 { pt3dadd( 83.5573, 174.114, -4.58514, 0.74 ) }
    dend_13 { pt3dadd( 84.0987, 174.775, -4.09751, 0.59 ) }
    dend_13 { pt3dadd( 84.7227, 175.475, -3.62341, 0.96 ) }
    dend_13 { pt3dadd( 85.1607, 175.977, -3.28527, 1.11 ) }
    dend_13 { pt3dadd( 85.9201, 176.97, -2.68116, 0.59 ) }
    dend_13 { pt3dadd( 86.534, 177.93, -2.18327, 0.52 ) }
    dend_13 { pt3dadd( 87.0285, 178.742, -1.81229, 0.52 ) }
    dend_13 { pt3dadd( 87.5305, 179.541, -1.49007, 0.66 ) }
    dend_13 { pt3dadd( 88.3481, 180.832, -1.04203, 0.74 ) }
    dend_13 { pt3dadd( 88.8455, 181.673, -0.788174, 0.74 ) }
    dend_13 { pt3dadd( 89.4015, 182.678, -0.507119, 0.29 ) }
    dend_13 { pt3dadd( 89.9881, 183.743, -0.216983, 0.29 ) }
    dend_13 { pt3dadd( 90.2198, 184.104, -0.118429, 0.29 ) }
    dend_13 { pt3dadd( 90.879, 185.015, 0.10095, 0.29 ) }
    dend_13 { pt3dadd( 91.5569, 185.808, 0.250378, 0.52 ) }
    dend_13 { pt3dadd( 92.0183, 186.27, 0.350525, 0.37 ) }
    dend_13 { pt3dadd( 92.628, 186.808, 0.485667, 0.37 ) }
    dend_13 { pt3dadd( 93.2617, 187.314, 0.619901, 0.29 ) }
    dend_13 { pt3dadd( 94.2805, 188.041, 0.84447, 0.29 ) }
    dend_13 { pt3dadd( 95.0476, 188.526, 1.00548, 0.37 ) }
    dend_13 { pt3dadd( 95.6979, 188.916, 1.13812, 0.52 ) }
    dend_13 { pt3dadd( 96.201, 189.217, 1.25515, 0.52 ) }
    dend_13 { pt3dadd( 96.8378, 189.596, 1.41642, 0.44 ) }
    dend_13 { pt3dadd( 97.8287, 190.185, 1.66608, 0.44 ) }
    dend_13 { pt3dadd( 98.4711, 190.577, 1.81609, 0.59 ) }
    dend_13 { pt3dadd( 99.1381, 191.029, 1.95636, 0.74 ) }
    dend_13 { pt3dadd( 99.786, 191.496, 2.15242, 0.74 ) }
    dend_13 { pt3dadd( 100.53, 192.064, 2.42293, 0.52 ) }
    dend_13 { pt3dadd( 101.162, 192.572, 2.66336, 0.37 ) }
    dend_13 { pt3dadd( 102.041, 193.279, 2.98747, 0.29 ) }
    dend_13 { pt3dadd( 102.72, 193.823, 3.24562, 0.29 ) }
    dend_13 { pt3dadd( 104.319, 195.08, 3.83883, 0.66 ) }
    dend_13 { pt3dadd( 105.085, 195.677, 4.13038, 0.44 ) }
    dend_13 { pt3dadd( 105.863, 196.264, 4.44595, 0.52 ) }
    dend_13 { pt3dadd( 106.332, 196.609, 4.64138, 0.52 ) }
    dend_13 { pt3dadd( 106.855, 197.0, 4.86812, 0.37 ) }
    dend_13 { pt3dadd( 107.298, 197.368, 5.06073, 0.37 ) }
    dend_13 { pt3dadd( 107.764, 197.786, 5.2239, 0.44 ) }
    dend_13 { pt3dadd( 108.429, 198.44, 5.4889, 0.74 ) }
    dend_13 { pt3dadd( 108.844, 198.887, 5.66366, 0.88 ) }
    dend_13 { pt3dadd( 109.469, 199.638, 5.94542, 0.74 ) }
    dend_13 { pt3dadd( 109.93, 200.221, 6.16086, 0.52 ) }
    dend_13 { pt3dadd( 110.514, 200.965, 6.43501, 0.37 ) }
    dend_13 { pt3dadd( 111.049, 201.617, 6.67246, 0.22 ) }
    dend_13 { pt3dadd( 111.427, 202.042, 6.82351, 0.22 ) }
    dend_13 { pt3dadd( 112.04, 202.674, 7.05227, 0.59 ) }
    dend_13 { pt3dadd( 112.536, 203.125, 7.24961, 0.74 ) }
    dend_13 { pt3dadd( 113.115, 203.563, 7.50925, 0.59 ) }
    dend_13 { pt3dadd( 113.387, 203.736, 7.64628, 0.59 ) }
    dend_13 { pt3dadd( 114.606, 204.438, 8.28828, 0.37 ) }
    dend_13 { pt3dadd( 115.086, 204.71, 8.53878, 0.37 ) }
    dend_13 { pt3dadd( 115.877, 205.139, 8.906, 0.52 ) }
    dend_13 { pt3dadd( 116.64, 205.527, 9.19329, 0.52 ) }
    dend_13 { pt3dadd( 117.243, 205.797, 9.36207, 0.52 ) }
    dend_13 { pt3dadd( 118.139, 206.14, 9.6122, 0.81 ) }
    dend_13 { pt3dadd( 118.665, 206.317, 9.76008, 0.88 ) }
    dend_13 { pt3dadd( 119.352, 206.528, 9.94152, 0.88 ) }
    dend_13 { pt3dadd( 120.471, 206.835, 10.2055, 0.44 ) }
    dend_13 { pt3dadd( 121.518, 207.086, 10.4544, 0.37 ) }
    dend_13 { pt3dadd( 123.27, 207.459, 10.8782, 0.59 ) }
    dend_13 { pt3dadd( 123.939, 207.577, 11.0446, 0.59 ) }
    dend_13 { pt3dadd( 124.922, 207.737, 11.3403, 0.37 ) }
    dend_13 { pt3dadd( 125.633, 207.859, 11.5857, 0.29 ) }
    dend_13 { pt3dadd( 126.401, 207.987, 11.8672, 0.29 ) }
    dend_13 { pt3dadd( 127.347, 208.105, 12.1493, 0.29 ) }
    dend_13 { pt3dadd( 128.332, 208.19, 12.3604, 0.29 ) }
    dend_13 { pt3dadd( 129.934, 208.284, 12.7054, 0.59 ) }
    dend_13 { pt3dadd( 130.663, 208.326, 12.8706, 0.59 ) }
    dend_13 { pt3dadd( 131.346, 208.364, 13.0255, 0.59 ) }
    dend_13 { pt3dadd( 132.728, 208.409, 13.3091, 0.29 ) }
    dend_13 { pt3dadd( 133.459, 208.423, 13.4339, 0.29 ) }
    dend_13 { pt3dadd( 134.645, 208.455, 13.5902, 0.66 ) }
    dend_13 { pt3dadd( 135.471, 208.478, 13.6627, 0.74 ) }
    dend_13 { pt3dadd( 136.209, 208.498, 13.7228, 0.74 ) }
    dend_13 { pt3dadd( 137.675, 208.577, 13.795, 0.22 ) }
    dend_13 { pt3dadd( 138.99, 208.704, 13.8302, 0.22 ) }
    dend_13 { pt3dadd( 139.746, 208.799, 13.8121, 0.29 ) }
    dend_13 { pt3dadd( 140.258, 208.887, 13.771, 0.29 ) }
    dend_13 { pt3dadd( 141.202, 209.113, 13.6713, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_13 { pt3dadd( 142.371, 209.529, 13.5281, 0.37 ) }
    dend_13 { pt3dadd( 142.976, 209.828, 13.4456, 0.52 ) }
    dend_13 { pt3dadd( 143.436, 210.092, 13.3843, 0.52 ) }
    dend_13 { pt3dadd( 144.109, 210.503, 13.3064, 0.59 ) }
    dend_13 { pt3dadd( 144.886, 210.954, 13.2364, 0.59 ) }
    dend_13 { pt3dadd( 145.697, 211.345, 13.2158, 0.52 ) }
    dend_13 { pt3dadd( 146.329, 211.579, 13.2386, 0.59 ) }
    dend_13 { pt3dadd( 147.12, 211.809, 13.278, 0.44 ) }
    dend_13 { pt3dadd( 147.784, 211.963, 13.3131, 0.29 ) }
    dend_13 { pt3dadd( 148.512, 212.114, 13.3934, 0.29 ) }
    dend_13 { pt3dadd( 149.835, 212.444, 13.602, 0.29 ) }
    dend_13 { pt3dadd( 150.307, 212.575, 13.6915, 0.29 ) }
    dend_13 { pt3dadd( 151.247, 212.879, 13.8868, 0.29 ) }
    dend_13 { pt3dadd( 151.737, 213.063, 13.9937, 0.29 ) }
    dend_13 { pt3dadd( 153.225, 213.689, 14.288, 0.29 ) }
    dend_13 { pt3dadd( 154.0, 214.049, 14.3755, 0.29 ) }
    dend_13 { pt3dadd( 154.998, 214.538, 14.4004, 0.22 ) }
    dend_13 { pt3dadd( 155.488, 214.768, 14.3829, 0.44 ) }
    dend_13 { pt3dadd( 155.98, 214.979, 14.3384, 0.44 ) }
    dend_13 { pt3dadd( 156.805, 215.285, 14.2233, 0.29 ) }
    dend_13 { pt3dadd( 158.197, 215.663, 13.9455, 0.22 ) }
    dend_13 { pt3dadd( 158.802, 215.785, 13.8278, 0.22 ) }
    dend_13 { pt3dadd( 159.389, 215.891, 13.7193, 0.44 ) }
    dend_13 { pt3dadd( 159.953, 215.965, 13.6051, 0.44 ) }
    dend_13 { pt3dadd( 160.653, 216.023, 13.4393, 0.37 ) }
    dend_13 { pt3dadd( 161.557, 216.09, 13.2078, 0.29 ) }
    dend_13 { pt3dadd( 162.564, 216.172, 12.9275, 0.29 ) }
    dend_13 { pt3dadd( 163.205, 216.251, 12.7172, 0.29 ) }
    dend_13 { pt3dadd( 164.25, 216.437, 12.3262, 0.29 ) }
    dend_13 { pt3dadd( 164.886, 216.598, 12.0648, 0.29 ) }
    dend_13 { pt3dadd( 165.67, 216.856, 11.6956, 0.44 ) }
    dend_13 { pt3dadd( 166.388, 217.107, 11.2888, 0.37 ) }
    dend_13 { pt3dadd( 167.066, 217.287, 10.8421, 0.52 ) }
    dend_13 { pt3dadd( 167.594, 217.399, 10.48, 0.52 ) }
    dend_13 { pt3dadd( 168.003, 217.472, 10.2161, 0.66 ) }
    dend_13 { pt3dadd( 169.151, 217.648, 9.50413, 0.96 ) }
    dend_13 { pt3dadd( 170.183, 217.805, 8.8924, 0.81 ) }
    dend_13 { pt3dadd( 171.581, 218.076, 8.09618, 0.29 ) }
    dend_13 { pt3dadd( 172.456, 218.263, 7.52648, 0.29 ) }
    dend_13 { pt3dadd( 173.224, 218.473, 6.99875, 0.29 ) }
    dend_13 { pt3dadd( 173.743, 218.661, 6.68155, 0.29 ) }
    dend_13 { pt3dadd( 174.81, 219.061, 6.21116, 0.29 ) }
    dend_13 { pt3dadd( 175.469, 219.286, 5.98953, 0.66 ) }
    dend_13 { pt3dadd( 177.936, 219.933, 5.28979, 0.29 ) }
    dend_13 { pt3dadd( 178.481, 220.009, 5.1417, 0.22 ) }
    dend_13 { pt3dadd( 180.583, 220.172, 4.56311, 0.22 ) }
    dend_13 { pt3dadd( 182.65, 220.188, 4.01104, 0.22 ) }
    dend_13 { pt3dadd( 183.562, 220.133, 3.78315, 0.37 ) }
    dend_13 { pt3dadd( 184.473, 220.04, 3.63117, 0.44 ) }
    dend_13 { pt3dadd( 184.866, 219.997, 3.63318, 0.22 ) }
    dend_13 { pt3dadd( 193.103, 225.902, 4.35336, 0.22 ) }
    dend_13 { pt3dadd( 201.897, 230.837, 3.59568, 0.22 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 52/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -92.4535, 114.538, 59.504, 0.88 ) }
    dend_9 { pt3dadd( -98.4832, 120.143, 65.4319, 0.88 ) }
    dend_9 { pt3dadd( -104.937, 127.026, 69.3547, 0.88 ) }
    dend_9 { pt3dadd( -111.594, 134.717, 70.7784, 0.88 ) }
    dend_9 { pt3dadd( -119.735, 139.929, 73.794, 0.88 ) }
    dend_9 { pt3dadd( -128.826, 143.448, 76.2663, 0.88 ) }
    dend_9 { pt3dadd( -137.775, 146.879, 79.3069, 0.88 ) }
    dend_9 { pt3dadd( -146.84, 151.076, 80.6645, 0.88 ) }
    dend_9 { pt3dadd( -155.561, 154.821, 84.0154, 0.88 ) }
    dend_9 { pt3dadd( -163.326, 159.832, 88.1299, 0.88 ) }
    dend_9 { pt3dadd( -169.625, 165.694, 93.5288, 0.88 ) }
    dend_9 { pt3dadd( -173.966, 172.138, 100.125, 0.88 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 64/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -92.4535, 114.538, 59.504, 0.22 ) }
    dend_6 { pt3dadd( -98.2858, 120.212, 65.5686, 0.88 ) }
    dend_6 { pt3dadd( -103.229, 125.916, 72.355, 0.88 ) }
    dend_6 { pt3dadd( -106.493, 131.253, 80.3246, 0.88 ) }
    dend_6 { pt3dadd( -108.362, 137.327, 88.2645, 0.88 ) }
    dend_6 { pt3dadd( -108.545, 141.807, 97.3066, 0.88 ) }
    dend_6 { pt3dadd( -108.175, 145.869, 106.521, 0.88 ) }
    dend_6 { pt3dadd( -106.605, 149.234, 115.863, 0.88 ) }
    dend_6 { pt3dadd( -106.28, 151.71, 125.575, 0.88 ) }
    dend_6 { pt3dadd( -106.288, 152.67, 135.533, 0.88 ) }
    dend_6 { pt3dadd( -107.636, 153.513, 145.409, 0.88 ) }
    dend_6 { pt3dadd( -107.226, 155.202, 155.271, 0.88 ) }
    dend_6 { pt3dadd( -105.695, 156.431, 165.083, 0.88 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 77/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -131.884, 116.907, -99.842, 0.29 ) }
    dend_4 { pt3dadd( -131.92, 118.447, -100.907, 0.29 ) }
    dend_4 { pt3dadd( -132.119, 119.439, -101.632, 0.29 ) }
    dend_4 { pt3dadd( -132.373, 120.196, -102.193, 0.37 ) }
    dend_4 { pt3dadd( -132.519, 120.593, -102.474, 0.37 ) }
    dend_4 { pt3dadd( -132.695, 121.152, -102.886, 0.81 ) }
    dend_4 { pt3dadd( -132.914, 121.846, -103.405, 0.81 ) }
    dend_4 { pt3dadd( -133.187, 122.47, -103.881, 0.44 ) }
    dend_4 { pt3dadd( -133.402, 122.884, -104.205, 0.22 ) }
    dend_4 { pt3dadd( -133.657, 123.34, -104.628, 0.22 ) }
    dend_4 { pt3dadd( -134.174, 124.344, -105.682, 0.37 ) }
    dend_4 { pt3dadd( -134.305, 124.625, -106.007, 0.22 ) }
    dend_4 { pt3dadd( -134.56, 125.19, -106.656, 0.22 ) }
    dend_4 { pt3dadd( -134.777, 125.643, -107.165, 0.59 ) }
    dend_4 { pt3dadd( -135.149, 126.313, -107.982, 0.74 ) }
    dend_4 { pt3dadd( -135.648, 127.025, -109.049, 0.37 ) }
    dend_4 { pt3dadd( -136.087, 127.49, -110.012, 0.37 ) }
    dend_4 { pt3dadd( -136.391, 127.807, -110.805, 0.37 ) }
    dend_4 { pt3dadd( -136.688, 128.12, -111.629, 1.03 ) }
    dend_4 { pt3dadd( -137.203, 128.641, -113.047, 1.62 ) }
    dend_4 { pt3dadd( -137.941, 129.318, -114.999, 1.84 ) }
    dend_4 { pt3dadd( -138.932, 130.177, -117.64, 1.33 ) }
    dend_4 { pt3dadd( -139.602, 130.773, -119.499, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_4 { pt3dadd( -139.895, 131.065, -120.369, 0.44 ) }
    dend_4 { pt3dadd( -140.175, 131.384, -121.205, 0.44 ) }
    dend_4 { pt3dadd( -140.409, 131.692, -121.853, 0.59 ) }
    dend_4 { pt3dadd( -141.119, 132.694, -123.552, 0.74 ) }
    dend_4 { pt3dadd( -141.349, 132.99, -124.036, 0.74 ) }
    dend_4 { pt3dadd( -141.692, 133.288, -124.67, 0.88 ) }
    dend_4 { pt3dadd( -142.235, 133.603, -125.623, 0.96 ) }
    dend_4 { pt3dadd( -142.726, 133.784, -126.449, 0.52 ) }
    dend_4 { pt3dadd( -143.086, 133.877, -126.984, 0.37 ) }
    dend_4 { pt3dadd( -144.06, 134.061, -128.312, 0.29 ) }
    dend_4 { pt3dadd( -144.812, 134.196, -129.405, 0.29 ) }
    dend_4 { pt3dadd( -145.409, 134.317, -130.299, 0.29 ) }
    dend_4 { pt3dadd( -146.473, 134.614, -131.896, 0.29 ) }
    dend_4 { pt3dadd( -146.901, 134.834, -132.574, 0.29 ) }
    dend_4 { pt3dadd( -147.24, 135.145, -133.174, 0.29 ) }
    dend_4 { pt3dadd( -147.636, 135.762, -133.953, 0.29 ) }
    dend_4 { pt3dadd( -147.863, 136.316, -134.549, 0.52 ) }
    dend_4 { pt3dadd( -147.999, 136.795, -135.034, 0.66 ) }
    dend_4 { pt3dadd( -148.201, 137.55, -135.738, 0.66 ) }
    dend_4 { pt3dadd( -148.463, 138.37, -136.59, 0.44 ) }
    dend_4 { pt3dadd( -148.662, 138.824, -137.14, 0.59 ) }
    dend_4 { pt3dadd( -149.117, 139.76, -138.38, 0.29 ) }
    dend_4 { pt3dadd( -149.436, 140.451, -139.337, 0.29 ) }
    dend_4 { pt3dadd( -149.723, 141.079, -140.186, 0.81 ) }
    dend_4 { pt3dadd( -150.072, 141.881, -141.2, 1.25 ) }
    dend_4 { pt3dadd( -150.797, 143.669, -143.254, 0.44 ) }
    dend_4 { pt3dadd( -151.326, 145.12, -144.755, 0.74 ) }
    dend_4 { pt3dadd( -151.714, 146.304, -145.846, 0.29 ) }
    dend_4 { pt3dadd( -151.931, 147.006, -146.473, 0.29 ) }
    dend_4 { pt3dadd( -152.165, 147.891, -147.223, 0.29 ) }
    dend_4 { pt3dadd( -152.499, 149.463, -148.309, 0.22 ) }
    dend_4 { pt3dadd( -152.647, 150.557, -148.841, 0.22 ) }
    dend_4 { pt3dadd( -152.69, 150.928, -148.971, 0.29 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 33/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -131.884, 116.907, -99.842, 0.44 ) }
    dend_3 { pt3dadd( -133.481, 117.896, -99.8432, 0.44 ) }
    dend_3 { pt3dadd( -134.298, 118.372, -99.8367, 0.52 ) }
    dend_3 { pt3dadd( -134.945, 118.723, -99.8291, 0.59 ) }
    dend_3 { pt3dadd( -135.644, 119.071, -99.8456, 0.59 ) }
    dend_3 { pt3dadd( -136.491, 119.462, -99.8898, 0.37 ) }
    dend_3 { pt3dadd( -137.263, 119.815, -99.9562, 0.37 ) }
    dend_3 { pt3dadd( -137.908, 120.1, -100.025, 0.96 ) }
    dend_3 { pt3dadd( -138.726, 120.458, -100.174, 1.4 ) }
    dend_3 { pt3dadd( -139.403, 120.77, -100.334, 1.62 ) }
    dend_3 { pt3dadd( -140.347, 121.272, -100.606, 0.59 ) }
    dend_3 { pt3dadd( -141.092, 121.749, -100.898, 0.81 ) }
    dend_3 { pt3dadd( -141.674, 122.164, -101.164, 0.96 ) }
    dend_3 { pt3dadd( -141.97, 122.392, -101.313, 1.18 ) }
    dend_3 { pt3dadd( -142.488, 122.826, -101.576, 0.29 ) }
    dend_3 { pt3dadd( -143.144, 123.395, -101.887, 0.22 ) }
    dend_3 { pt3dadd( -144.032, 124.133, -102.304, 0.96 ) }
    dend_3 { pt3dadd( -144.487, 124.47, -102.515, 0.96 ) }
    dend_3 { pt3dadd( -145.161, 124.921, -102.851, 0.66 ) }
    dend_3 { pt3dadd( -145.92, 125.358, -103.276, 0.44 ) }
    dend_3 { pt3dadd( -146.734, 125.739, -103.802, 0.44 ) }
    dend_3 { pt3dadd( -147.553, 126.081, -104.375, 0.81 ) }
    dend_3 { pt3dadd( -148.288, 126.388, -104.908, 0.96 ) }
    dend_3 { pt3dadd( -149.129, 126.761, -105.558, 0.74 ) }
    dend_3 { pt3dadd( -150.324, 127.301, -106.548, 0.29 ) }
    dend_3 { pt3dadd( -151.041, 127.631, -107.187, 0.29 ) }
    dend_3 { pt3dadd( -151.527, 127.864, -107.643, 0.44 ) }
    dend_3 { pt3dadd( -151.9, 128.041, -108.013, 0.66 ) }
    dend_3 { pt3dadd( -152.315, 128.231, -108.44, 0.52 ) }
    dend_3 { pt3dadd( -152.804, 128.42, -108.958, 0.52 ) }
    dend_3 { pt3dadd( -153.394, 128.579, -109.587, 0.66 ) }
    dend_3 { pt3dadd( -154.032, 128.643, -110.226, 0.37 ) }
    dend_3 { pt3dadd( -154.628, 128.605, -110.792, 0.29 ) }
    dend_3 { pt3dadd( -155.112, 128.532, -111.202, 0.29 ) }
    dend_3 { pt3dadd( -155.49, 128.464, -111.506, 0.29 ) }
    dend_3 { pt3dadd( -156.188, 128.312, -111.999, 0.29 ) }
    dend_3 { pt3dadd( -156.681, 128.184, -112.379, 0.52 ) }
    dend_3 { pt3dadd( -157.15, 128.046, -112.778, 0.74 ) }
    dend_3 { pt3dadd( -157.756, 127.806, -113.341, 0.74 ) }
    dend_3 { pt3dadd( -158.583, 127.302, -114.281, 0.52 ) }
    dend_3 { pt3dadd( -158.964, 126.901, -114.875, 1.47 ) }
    dend_3 { pt3dadd( -159.539, 126.065, -115.966, 1.92 ) }
    dend_3 { pt3dadd( -159.812, 125.611, -116.55, 1.84 ) }
    dend_3 { pt3dadd( -160.198, 124.936, -117.443, 0.88 ) }
    dend_3 { pt3dadd( -160.597, 124.311, -118.417, 0.66 ) }
    dend_3 { pt3dadd( -161.195, 123.638, -119.713, 0.37 ) }
    dend_3 { pt3dadd( -161.59, 123.408, -120.428, 0.29 ) }
    dend_3 { pt3dadd( -162.072, 123.33, -121.115, 0.29 ) }
    dend_3 { pt3dadd( -162.671, 123.394, -121.815, 0.44 ) }
    dend_3 { pt3dadd( -163.793, 123.632, -122.928, 0.59 ) }
    dend_3 { pt3dadd( -164.779, 123.942, -123.874, 0.66 ) }
    dend_3 { pt3dadd( -165.358, 124.165, -124.423, 0.66 ) }
    dend_3 { pt3dadd( -165.718, 124.296, -124.793, 0.44 ) }
    dend_3 { pt3dadd( -166.454, 124.512, -125.565, 0.37 ) }
    dend_3 { pt3dadd( -167.491, 124.773, -126.723, 0.37 ) }
    dend_3 { pt3dadd( -168.578, 125.01, -127.895, 0.37 ) }
    dend_3 { pt3dadd( -168.943, 125.089, -128.288, 0.52 ) }
    dend_3 { pt3dadd( -169.689, 125.22, -129.079, 0.66 ) }
    dend_3 { pt3dadd( -170.555, 125.349, -129.953, 0.37 ) }
    dend_3 { pt3dadd( -171.554, 125.401, -131.074, 0.37 ) }
    dend_3 { pt3dadd( -172.384, 125.344, -132.025, 0.74 ) }
    dend_3 { pt3dadd( -172.825, 125.266, -132.513, 0.74 ) }
    dend_3 { pt3dadd( -173.724, 125.073, -133.522, 0.52 ) }
    dend_3 { pt3dadd( -174.588, 124.88, -134.5, 0.52 ) }
    dend_3 { pt3dadd( -176.581, 124.331, -136.925, 0.52 ) }
    dend_3 { pt3dadd( -177.253, 124.045, -137.842, 0.44 ) }
    dend_3 { pt3dadd( -177.677, 123.792, -138.528, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( -178.076, 123.5, -139.227, 0.29 ) }
    dend_3 { pt3dadd( -178.809, 122.886, -140.544, 0.29 ) }
    dend_3 { pt3dadd( -179.372, 122.437, -141.545, 0.29 ) }
    dend_3 { pt3dadd( -180.426, 121.809, -143.099, 0.52 ) }
    dend_3 { pt3dadd( -181.045, 121.418, -144.14, 0.66 ) }
    dend_3 { pt3dadd( -181.444, 121.109, -144.926, 0.66 ) }
    dend_3 { pt3dadd( -181.691, 120.82, -145.546, 0.52 ) }
    dend_3 { pt3dadd( -181.977, 120.38, -146.383, 0.52 ) }
    dend_3 { pt3dadd( -182.211, 120.061, -147.014, 0.22 ) }
    dend_3 { pt3dadd( -183.168, 119.068, -149.2, 1.18 ) }
    dend_3 { pt3dadd( -183.502, 118.7, -149.996, 1.4 ) }
    dend_3 { pt3dadd( -184.077, 117.923, -151.449, 0.52 ) }
    dend_3 { pt3dadd( -184.287, 117.607, -151.955, 0.29 ) }
    dend_3 { pt3dadd( -184.651, 117.044, -152.683, 0.29 ) }
    dend_3 { pt3dadd( -185.15, 116.341, -153.464, 0.29 ) }
    dend_3 { pt3dadd( -186.284, 114.896, -154.686, 0.44 ) }
    dend_3 { pt3dadd( -187.09, 113.966, -155.342, 0.44 ) }
    dend_3 { pt3dadd( -187.732, 113.245, -155.795, 0.29 ) }
    dend_3 { pt3dadd( -189.002, 111.777, -156.632, 0.52 ) }
    dend_3 { pt3dadd( -189.602, 111.059, -156.978, 0.52 ) }
    dend_3 { pt3dadd( -190.449, 110.044, -157.389, 0.37 ) }
    dend_3 { pt3dadd( -191.384, 109.007, -157.722, 0.29 ) }
    dend_3 { pt3dadd( -192.722, 107.684, -158.145, 0.44 ) }
    dend_3 { pt3dadd( -193.329, 107.153, -158.321, 0.44 ) }
    dend_3 { pt3dadd( -194.364, 106.403, -158.6, 0.22 ) }
    dend_3 { pt3dadd( -195.234, 105.873, -158.845, 0.22 ) }
    dend_3 { pt3dadd( -196.094, 105.453, -159.111, 0.52 ) }
    dend_3 { pt3dadd( -196.418, 105.322, -159.218, 0.52 ) }
    dend_3 { pt3dadd( -197.733, 104.881, -159.668, 0.29 ) }
    dend_3 { pt3dadd( -199.352, 104.419, -160.273, 0.29 ) }
    dend_3 { pt3dadd( -200.6, 104.131, -160.775, 0.22 ) }
    dend_3 { pt3dadd( -202.228, 103.784, -161.452, 0.22 ) }
    dend_3 { pt3dadd( -203.136, 103.59, -161.84, 0.59 ) }
    dend_3 { pt3dadd( -204.071, 103.38, -162.234, 0.44 ) }
    dend_3 { pt3dadd( -204.982, 103.174, -162.593, 0.22 ) }
    dend_3 { pt3dadd( -205.541, 103.05, -162.779, 0.22 ) }
    dend_3 { pt3dadd( -206.289, 102.888, -162.979, 0.37 ) }
    dend_3 { pt3dadd( -206.948, 102.753, -163.108, 0.37 ) }
    dend_3 { pt3dadd( -207.672, 102.614, -163.214, 0.22 ) }
    dend_3 { pt3dadd( -208.635, 102.45, -163.341, 0.22 ) }
    dend_3 { pt3dadd( -209.429, 102.342, -163.448, 0.37 ) }
    dend_3 { pt3dadd( -210.099, 102.275, -163.532, 0.37 ) }
    dend_3 { pt3dadd( -210.92, 102.2, -163.614, 0.37 ) }
    dend_3 { pt3dadd( -211.729, 102.118, -163.684, 0.29 ) }
    dend_3 { pt3dadd( -212.495, 102.045, -163.756, 0.37 ) }
    dend_3 { pt3dadd( -214.43, 101.884, -163.95, 0.22 ) }
    dend_3 { pt3dadd( -215.754, 101.779, -164.078, 0.22 ) }
    dend_3 { pt3dadd( -217.588, 101.639, -164.24, 0.22 ) }
    dend_3 { pt3dadd( -218.345, 101.582, -164.298, 0.22 ) }
    dend_3 { pt3dadd( -219.141, 101.521, -164.346, 0.44 ) }
    dend_3 { pt3dadd( -219.555, 101.483, -164.359, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 51/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -94.6648, 49.9519, 221.017, 0.88 ) }
    dend_62 { pt3dadd( -97.2816, 52.797, 230.281, 0.88 ) }
    dend_62 { pt3dadd( -99.661, 55.1088, 239.741, 0.88 ) }
    dend_62 { pt3dadd( -103.358, 57.7657, 248.681, 0.88 ) }
    dend_62 { pt3dadd( -107.317, 60.4206, 257.509, 0.88 ) }
    dend_62 { pt3dadd( -110.967, 62.5482, 266.596, 0.88 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 57/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -94.6648, 49.9519, 221.017, 0.22 ) }
    dend_61 { pt3dadd( -97.2228, 52.8092, 230.294, 0.88 ) }
    dend_61 { pt3dadd( -101.228, 56.228, 238.859, 0.88 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 60/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -104.759, 16.8972, 223.551, 0.88 ) }
    dend_59 { pt3dadd( -110.271, 14.2143, 231.494, 0.88 ) }
    dend_59 { pt3dadd( -114.622, 11.8513, 240.212, 0.88 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 63/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -104.759, 16.8972, 223.551, 0.22 ) }
    dend_58 { pt3dadd( -105.402, 19.0418, 233.319, 0.88 ) }
    dend_58 { pt3dadd( -104.337, 21.1133, 243.064, 0.88 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 66/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -197.152, 125.53, 75.2338, 0.88 ) }
    dend_55 { pt3dadd( -206.751, 124.949, 77.9835, 0.88 ) }
    dend_55 { pt3dadd( -216.661, 124.958, 79.3161, 0.88 ) }
    dend_55 { pt3dadd( -226.454, 126.118, 81.0155, 0.88 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 70/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -197.152, 125.53, 75.2338, 0.22 ) }
    dend_54 { pt3dadd( -202.907, 134.094, 75.8317, 0.88 ) }
    dend_54 { pt3dadd( -208.49, 142.76, 74.981, 0.88 ) }
    dend_54 { pt3dadd( -213.292, 151.895, 73.8571, 0.88 ) }
    dend_54 { pt3dadd( -217.266, 161.333, 72.0135, 0.88 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 75/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -67.0088, -202.569, 139.564, 0.88 ) }
    dend_44 { pt3dadd( -67.7413, -209.46, 147.074, 0.88 ) }
    dend_44 { pt3dadd( -69.0995, -216.602, 154.277, 0.88 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 78/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -67.0088, -202.569, 139.564, 0.22 ) }
    dend_43 { pt3dadd( -67.5259, -209.535, 147.029, 0.88 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 80/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -116.017, -203.796, 93.115, 0.88 ) }
    dend_41 { pt3dadd( -122.082, -211.814, 95.3256, 0.88 ) }
    dend_41 { pt3dadd( -128.382, -219.862, 96.5781, 0.88 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 83/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -116.017, -203.796, 93.115, 0.22 ) }
    dend_40 { pt3dadd( -122.609, -210.291, 97.389, 0.88 ) }
    dend_40 { pt3dadd( -128.681, -218.007, 100.414, 0.88 ) }
    // Section: dend_37, id: dend_37, parent: dend_27 (entry count 86/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 2.18436, -68.6055, 5.45167, 0.66 ) }
    dend_37 { pt3dadd( 2.74534, -70.1642, 5.9183, 0.66 ) }
    dend_37 { pt3dadd( 3.15245, -71.2517, 6.16448, 0.52 ) }
    dend_37 { pt3dadd( 3.61442, -72.581, 6.41086, 1.18 ) }
    dend_37 { pt3dadd( 3.81588, -73.3112, 6.54325, 1.62 ) }
    dend_37 { pt3dadd( 3.95815, -74.0783, 6.67561, 1.33 ) }
    dend_37 { pt3dadd( 4.05174, -75.0717, 6.83642, 0.74 ) }
    dend_37 { pt3dadd( 4.11931, -76.2292, 6.93281, 0.44 ) }
    dend_37 { pt3dadd( 4.13955, -76.9524, 6.99975, 0.44 ) }
    dend_37 { pt3dadd( 4.10924, -77.9691, 7.12031, 0.44 ) }
    dend_37 { pt3dadd( 4.09398, -79.0054, 7.26244, 0.52 ) }
    dend_37 { pt3dadd( 4.14081, -80.0399, 7.42405, 0.66 ) }
    dend_37 { pt3dadd( 4.35379, -81.07, 7.60467, 0.44 ) }
    dend_37 { pt3dadd( 4.78347, -81.9049, 7.83419, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_37 { pt3dadd( 5.08225, -82.325, 8.00584, 0.88 ) }
    dend_37 { pt3dadd( 5.59419, -82.9347, 8.29235, 0.88 ) }
    dend_37 { pt3dadd( 5.89752, -83.2704, 8.45587, 0.96 ) }
    dend_37 { pt3dadd( 6.26914, -83.6773, 8.65132, 0.66 ) }
    dend_37 { pt3dadd( 7.09174, -84.6477, 9.05693, 0.44 ) }
    dend_37 { pt3dadd( 7.92039, -85.7162, 9.39315, 0.52 ) }
    dend_37 { pt3dadd( 8.31262, -86.2367, 9.54072, 0.52 ) }
    dend_37 { pt3dadd( 8.96893, -87.0814, 9.78071, 0.74 ) }
    dend_37 { pt3dadd( 9.43785, -87.644, 9.93239, 0.96 ) }
    dend_37 { pt3dadd( 9.96757, -88.2116, 10.0681, 0.96 ) }
    dend_37 { pt3dadd( 10.8123, -88.9754, 10.2059, 0.59 ) }
    dend_37 { pt3dadd( 11.733, -89.6387, 10.359, 0.59 ) }
    dend_37 { pt3dadd( 12.7834, -90.3378, 10.5882, 0.88 ) }
    dend_37 { pt3dadd( 13.1407, -90.5789, 10.6806, 0.88 ) }
    dend_37 { pt3dadd( 13.6206, -90.9356, 10.8143, 0.88 ) }
    dend_37 { pt3dadd( 14.225, -91.4415, 10.9921, 0.74 ) }
    dend_37 { pt3dadd( 15.1355, -92.2951, 11.2348, 0.74 ) }
    dend_37 { pt3dadd( 15.9317, -93.1377, 11.3868, 0.74 ) }
    dend_37 { pt3dadd( 16.7308, -94.0848, 11.5046, 0.81 ) }
    dend_37 { pt3dadd( 17.2932, -94.8082, 11.5877, 0.96 ) }
    dend_37 { pt3dadd( 17.6883, -95.3637, 11.6371, 0.96 ) }
    dend_37 { pt3dadd( 18.1332, -96.0464, 11.6744, 0.88 ) }
    dend_37 { pt3dadd( 18.6355, -96.8967, 11.684, 0.88 ) }
    dend_37 { pt3dadd( 18.8053, -97.1836, 11.6851, 1.11 ) }
    dend_37 { pt3dadd( 19.3193, -98.0539, 11.6434, 0.74 ) }
    dend_37 { pt3dadd( 19.7191, -98.7153, 11.5828, 0.74 ) }
    dend_37 { pt3dadd( 20.129, -99.3783, 11.5236, 0.66 ) }
    dend_37 { pt3dadd( 20.7741, -100.479, 11.4416, 0.44 ) }
    dend_37 { pt3dadd( 21.2052, -101.269, 11.4071, 1.03 ) }
    dend_37 { pt3dadd( 21.7828, -102.412, 11.3954, 0.81 ) }
    dend_37 { pt3dadd( 22.2485, -103.386, 11.3955, 0.59 ) }
    dend_37 { pt3dadd( 22.7785, -104.553, 11.4184, 0.74 ) }
    dend_37 { pt3dadd( 23.1481, -105.417, 11.4369, 0.59 ) }
    dend_37 { pt3dadd( 23.4444, -106.184, 11.4914, 0.59 ) }
    dend_37 { pt3dadd( 23.8298, -107.365, 11.632, 0.44 ) }
    dend_37 { pt3dadd( 24.0634, -108.258, 11.7793, 0.37 ) }
    dend_37 { pt3dadd( 24.2962, -109.385, 11.9617, 0.74 ) }
    dend_37 { pt3dadd( 24.4469, -110.239, 12.0825, 0.88 ) }
    dend_37 { pt3dadd( 24.7205, -111.754, 12.3081, 0.88 ) }
    dend_37 { pt3dadd( 24.8406, -112.378, 12.4223, 0.74 ) }
    dend_37 { pt3dadd( 25.0866, -113.565, 12.6858, 0.66 ) }
    dend_37 { pt3dadd( 25.2893, -114.431, 12.9096, 0.74 ) }
    dend_37 { pt3dadd( 25.5966, -115.496, 13.2097, 0.74 ) }
    dend_37 { pt3dadd( 25.8437, -116.21, 13.4111, 0.74 ) }
    dend_37 { pt3dadd( 26.3505, -117.514, 13.7359, 0.52 ) }
    dend_37 { pt3dadd( 26.589, -118.101, 13.8672, 0.52 ) }
    dend_37 { pt3dadd( 26.9314, -119.006, 14.1123, 0.29 ) }
    dend_37 { pt3dadd( 27.1976, -119.758, 14.3449, 0.59 ) }
    dend_37 { pt3dadd( 27.3937, -120.317, 14.5279, 0.74 ) }
    dend_37 { pt3dadd( 27.6599, -121.097, 14.7888, 0.44 ) }
    dend_37 { pt3dadd( 27.9831, -122.066, 15.1146, 0.37 ) }
    dend_37 { pt3dadd( 28.5415, -123.784, 15.7497, 0.37 ) }
    dend_37 { pt3dadd( 28.7677, -124.524, 16.0584, 0.52 ) }
    dend_37 { pt3dadd( 28.9655, -125.234, 16.4098, 0.59 ) }
    dend_37 { pt3dadd( 29.1488, -126.006, 16.8466, 0.74 ) }
    dend_37 { pt3dadd( 29.2503, -126.552, 17.1863, 1.18 ) }
    dend_37 { pt3dadd( 29.3005, -126.937, 17.4266, 1.18 ) }
    dend_37 { pt3dadd( 29.3855, -128.052, 18.0615, 0.74 ) }
    dend_37 { pt3dadd( 29.3893, -129.366, 18.8039, 0.52 ) }
    dend_37 { pt3dadd( 29.3285, -130.405, 19.3656, 0.44 ) }
    dend_37 { pt3dadd( 29.1963, -131.678, 19.9966, 0.59 ) }
    dend_37 { pt3dadd( 29.0428, -132.722, 20.456, 0.44 ) }
    dend_37 { pt3dadd( 28.9258, -133.416, 20.7043, 0.44 ) }
    dend_37 { pt3dadd( 28.7493, -134.407, 20.9567, 0.59 ) }
    dend_37 { pt3dadd( 28.6362, -135.115, 21.0639, 0.59 ) }
    dend_37 { pt3dadd( 28.5569, -135.706, 21.1053, 0.59 ) }
    dend_37 { pt3dadd( 28.4165, -136.857, 21.0926, 0.66 ) }
    dend_37 { pt3dadd( 28.3331, -137.684, 21.0502, 0.59 ) }
    dend_37 { pt3dadd( 28.2705, -138.602, 20.9847, 0.52 ) }
    dend_37 { pt3dadd( 28.2465, -139.217, 20.9303, 0.66 ) }
    dend_37 { pt3dadd( 28.2266, -140.184, 20.8471, 0.66 ) }
    dend_37 { pt3dadd( 28.2142, -141.366, 20.7696, 0.52 ) }
    dend_37 { pt3dadd( 28.2046, -142.276, 20.7217, 0.74 ) }
    dend_37 { pt3dadd( 28.1829, -143.051, 20.6964, 0.88 ) }
    dend_37 { pt3dadd( 28.1271, -144.205, 20.6819, 0.96 ) }
    dend_37 { pt3dadd( 28.0494, -145.529, 20.6922, 0.88 ) }
    dend_37 { pt3dadd( 27.9948, -146.452, 20.7209, 0.88 ) }
    dend_37 { pt3dadd( 27.9385, -147.186, 20.7197, 0.81 ) }
    dend_37 { pt3dadd( 27.8274, -148.113, 20.6864, 0.66 ) }
    dend_37 { pt3dadd( 27.7154, -148.823, 20.6685, 0.66 ) }
    dend_37 { pt3dadd( 27.5955, -149.511, 20.6795, 0.44 ) }
    dend_37 { pt3dadd( 27.4399, -150.419, 20.7467, 0.44 ) }
    dend_37 { pt3dadd( 27.2272, -151.765, 20.9701, 0.44 ) }
    dend_37 { pt3dadd( 27.1078, -152.801, 21.2639, 0.44 ) }
    dend_37 { pt3dadd( 27.0471, -153.875, 21.7575, 0.66 ) }
    dend_37 { pt3dadd( 27.0671, -154.506, 22.1586, 0.81 ) }
    dend_37 { pt3dadd( 27.1528, -155.258, 22.7518, 0.96 ) }
    dend_37 { pt3dadd( 27.3386, -156.196, 23.5916, 0.66 ) }
    dend_37 { pt3dadd( 27.5576, -157.109, 24.4608, 0.59 ) }
    dend_37 { pt3dadd( 27.8171, -158.138, 25.4186, 0.96 ) }
    dend_37 { pt3dadd( 27.9947, -158.916, 26.0788, 0.96 ) }
    dend_37 { pt3dadd( 28.1223, -159.598, 26.5923, 0.96 ) }
    dend_37 { pt3dadd( 28.204, -160.285, 27.0175, 0.66 ) }
    dend_37 { pt3dadd( 28.2364, -161.11, 27.3918, 0.44 ) }
    dend_37 { pt3dadd( 28.1866, -161.892, 27.6287, 0.37 ) }
    dend_37 { pt3dadd( 28.1144, -162.493, 27.7254, 0.37 ) }
    dend_37 { pt3dadd( 27.9898, -163.414, 27.8039, 0.29 ) }
    dend_37 { pt3dadd( 27.8459, -164.431, 27.8452, 0.29 ) }
    dend_37 { pt3dadd( 27.704, -165.49, 27.865, 0.37 ) }
    dend_37 { pt3dadd( 27.5941, -166.472, 27.8721, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_37 { pt3dadd( 27.4921, -167.541, 27.8934, 0.29 ) }
    dend_37 { pt3dadd( 27.3876, -168.618, 27.9301, 0.29 ) }
    dend_37 { pt3dadd( 27.2805, -169.741, 27.9816, 0.29 ) }
    dend_37 { pt3dadd( 27.2476, -170.212, 28.0077, 0.44 ) }
    dend_37 { pt3dadd( 27.2134, -170.98, 28.0556, 0.52 ) }
    dend_37 { pt3dadd( 27.18, -172.12, 28.1346, 0.37 ) }
    dend_37 { pt3dadd( 27.1421, -173.24, 28.2233, 1.03 ) }
    dend_37 { pt3dadd( 27.1328, -173.801, 28.2574, 1.03 ) }
    dend_37 { pt3dadd( 27.1586, -174.479, 28.2834, 0.74 ) }
    dend_37 { pt3dadd( 27.226, -175.325, 28.3057, 0.59 ) }
    dend_37 { pt3dadd( 27.2826, -175.815, 28.3214, 0.81 ) }
    dend_37 { pt3dadd( 27.3497, -176.431, 28.3445, 0.81 ) }
    dend_37 { pt3dadd( 27.4597, -177.594, 28.4587, 0.37 ) }
    dend_37 { pt3dadd( 27.4912, -178.444, 28.5914, 0.37 ) }
    dend_37 { pt3dadd( 27.4502, -179.102, 28.7449, 0.37 ) }
    dend_37 { pt3dadd( 27.2326, -180.063, 29.0648, 0.29 ) }
    dend_37 { pt3dadd( 26.976, -180.667, 29.3119, 0.44 ) }
    dend_37 { pt3dadd( 26.5454, -181.343, 29.6264, 0.59 ) }
    dend_37 { pt3dadd( 26.1552, -181.857, 29.8748, 0.74 ) }
    dend_37 { pt3dadd( 25.8713, -182.249, 30.0318, 0.74 ) }
    dend_37 { pt3dadd( 25.3417, -183.071, 30.2916, 0.22 ) }
    dend_37 { pt3dadd( 25.014, -183.796, 30.4441, 0.22 ) }
    dend_37 { pt3dadd( 24.8946, -184.381, 30.5174, 0.66 ) }
    dend_37 { pt3dadd( 24.9005, -185.218, 30.5611, 0.29 ) }
    dend_37 { pt3dadd( 25.0694, -186.249, 30.5965, 0.59 ) }
    dend_37 { pt3dadd( 25.1661, -186.617, 30.6022, 0.44 ) }
    dend_37 { pt3dadd( 25.4663, -187.375, 30.6032, 0.29 ) }
    dend_37 { pt3dadd( 25.6884, -187.807, 30.6042, 0.22 ) }
    dend_37 { pt3dadd( 26.197, -188.651, 30.6078, 0.22 ) }
    dend_37 { pt3dadd( 26.4954, -189.108, 30.6119, 0.22 ) }
    dend_37 { pt3dadd( 30.5504, -198.595, 32.0015, 0.22 ) }
    dend_37 { pt3dadd( 35.3871, -207.546, 33.9838, 0.22 ) }
    dend_37 { pt3dadd( 38.4003, -216.8, 37.6244, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 33/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.18436, -68.6055, 5.45167, 1.03 ) }
    dend_28 { pt3dadd( 2.76894, -69.5257, 4.59085, 1.03 ) }
    dend_28 { pt3dadd( 3.9576, -71.0218, 3.07141, 0.66 ) }
    dend_28 { pt3dadd( 4.56876, -71.6617, 2.39357, 0.66 ) }
    dend_28 { pt3dadd( 5.41753, -72.4534, 1.50365, 0.66 ) }
    dend_28 { pt3dadd( 6.66105, -73.5784, 0.355164, 1.11 ) }
    dend_28 { pt3dadd( 7.24719, -74.1065, -0.127162, 1.18 ) }
    dend_28 { pt3dadd( 7.97923, -74.7127, -0.597623, 0.96 ) }
    dend_28 { pt3dadd( 9.03006, -75.4832, -1.04264, 0.81 ) }
    dend_28 { pt3dadd( 10.9138, -76.712, -1.60983, 0.81 ) }
    dend_28 { pt3dadd( 12.337, -77.5448, -1.8603, 0.74 ) }
    dend_28 { pt3dadd( 13.4163, -78.1231, -1.90821, 0.96 ) }
    dend_28 { pt3dadd( 14.8126, -78.7833, -1.88833, 0.96 ) }
    dend_28 { pt3dadd( 15.3634, -78.9909, -1.87239, 0.96 ) }
    dend_28 { pt3dadd( 16.1802, -79.1851, -1.85077, 0.81 ) }
    dend_28 { pt3dadd( 17.1666, -79.2983, -1.84642, 0.81 ) }
    dend_28 { pt3dadd( 18.7328, -79.3784, -1.94097, 0.74 ) }
    dend_28 { pt3dadd( 19.9, -79.409, -2.07846, 0.96 ) }
    dend_28 { pt3dadd( 21.2908, -79.4788, -2.2806, 0.96 ) }
    dend_28 { pt3dadd( 22.5256, -79.6116, -2.45361, 0.74 ) }
    dend_28 { pt3dadd( 23.87, -79.851, -2.59156, 0.88 ) }
    dend_28 { pt3dadd( 24.949, -80.1194, -2.64775, 1.03 ) }
    dend_28 { pt3dadd( 26.1104, -80.5158, -2.61703, 1.03 ) }
    dend_28 { pt3dadd( 27.1961, -81.0243, -2.42361, 0.88 ) }
    dend_28 { pt3dadd( 27.9824, -81.5047, -2.18105, 0.66 ) }
    dend_28 { pt3dadd( 29.0108, -82.2412, -1.86077, 1.03 ) }
    dend_28 { pt3dadd( 29.6503, -82.7347, -1.68323, 1.03 ) }
    dend_28 { pt3dadd( 30.2649, -83.2151, -1.58154, 0.81 ) }
    dend_28 { pt3dadd( 31.6339, -84.299, -1.40403, 0.59 ) }
    dend_28 { pt3dadd( 32.536, -85.0002, -1.36264, 0.74 ) }
    dend_28 { pt3dadd( 33.902, -86.0317, -1.33333, 0.74 ) }
    dend_28 { pt3dadd( 34.6979, -86.6215, -1.32001, 0.88 ) }
    dend_28 { pt3dadd( 36.0198, -87.5824, -1.25366, 0.66 ) }
    dend_28 { pt3dadd( 37.1948, -88.4273, -1.15971, 0.96 ) }
    dend_28 { pt3dadd( 37.9678, -88.9812, -1.05654, 1.11 ) }
    dend_28 { pt3dadd( 38.697, -89.499, -0.893396, 1.11 ) }
    dend_28 { pt3dadd( 39.8795, -90.3046, -0.542392, 0.81 ) }
    dend_28 { pt3dadd( 41.0873, -91.0577, -0.147015, 0.74 ) }
    dend_28 { pt3dadd( 42.3256, -91.7485, 0.263092, 0.66 ) }
    dend_28 { pt3dadd( 43.7532, -92.4847, 0.654909, 0.88 ) }
    dend_28 { pt3dadd( 44.6415, -92.9626, 0.862295, 1.03 ) }
    dend_28 { pt3dadd( 45.5328, -93.5071, 1.01474, 1.03 ) }
    dend_28 { pt3dadd( 46.5965, -94.2823, 1.1337, 0.81 ) }
    dend_28 { pt3dadd( 47.285, -94.9222, 1.14768, 0.81 ) }
    dend_28 { pt3dadd( 48.1375, -95.9022, 1.0568, 0.81 ) }
    dend_28 { pt3dadd( 49.0452, -97.1516, 0.831141, 0.88 ) }
    dend_28 { pt3dadd( 49.8022, -98.2722, 0.626227, 1.03 ) }
    dend_28 { pt3dadd( 50.3654, -99.1482, 0.472932, 0.88 ) }
    dend_28 { pt3dadd( 51.1421, -100.296, 0.269808, 0.66 ) }
    dend_28 { pt3dadd( 51.7216, -101.024, 0.192217, 0.66 ) }
    dend_28 { pt3dadd( 52.4296, -101.672, 0.203235, 0.59 ) }
    dend_28 { pt3dadd( 53.5103, -102.336, 0.340583, 0.88 ) }
    dend_28 { pt3dadd( 53.9825, -102.559, 0.424342, 0.88 ) }
    dend_28 { pt3dadd( 55.0454, -103.024, 0.60195, 0.59 ) }
    dend_28 { pt3dadd( 55.8224, -103.388, 0.732867, 0.74 ) }
    dend_28 { pt3dadd( 56.5032, -103.758, 0.80592, 0.81 ) }
    dend_28 { pt3dadd( 57.4245, -104.333, 0.796072, 0.74 ) }
    dend_28 { pt3dadd( 58.3259, -104.962, 0.692182, 0.59 ) }
    dend_28 { pt3dadd( 59.6008, -105.926, 0.457455, 0.59 ) }
    dend_28 { pt3dadd( 60.2889, -106.481, 0.297655, 0.88 ) }
    dend_28 { pt3dadd( 60.9865, -107.074, 0.0995974, 1.03 ) }
    dend_28 { pt3dadd( 62.1459, -108.132, -0.270679, 0.66 ) }
    dend_28 { pt3dadd( 62.8922, -108.856, -0.534644, 0.59 ) }
    dend_28 { pt3dadd( 63.8221, -109.764, -0.883786, 2.06 ) }
    dend_28 { pt3dadd( 64.4611, -110.369, -1.1146, 2.73 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 98/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -19.5377, -69.0675, -3.73319, 1.25 ) }
    dend_26 { pt3dadd( -20.5663, -68.9304, -3.81681, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_26 { pt3dadd( -21.7091, -68.9084, -3.91695, 0.66 ) }
    dend_26 { pt3dadd( -22.2296, -68.9387, -3.96227, 0.66 ) }
    dend_26 { pt3dadd( -22.9507, -69.0148, -4.03717, 0.81 ) }
    dend_26 { pt3dadd( -23.6707, -69.1015, -4.12969, 0.81 ) }
    dend_26 { pt3dadd( -24.5979, -69.1952, -4.24968, 0.44 ) }
    dend_26 { pt3dadd( -25.177, -69.2806, -4.3484, 0.44 ) }
    dend_26 { pt3dadd( -25.6822, -69.323, -4.43868, 0.59 ) }
    dend_26 { pt3dadd( -26.0666, -69.302, -4.5211, 0.74 ) }
    dend_26 { pt3dadd( -26.5987, -69.1952, -4.64575, 0.74 ) }
    dend_26 { pt3dadd( -27.1631, -69.0573, -4.81557, 0.66 ) }
    dend_26 { pt3dadd( -27.5545, -68.9703, -4.93893, 0.52 ) }
    dend_26 { pt3dadd( -28.3339, -68.8479, -5.19512, 0.52 ) }
    dend_26 { pt3dadd( -29.0526, -68.7898, -5.42594, 0.52 ) }
    dend_26 { pt3dadd( -29.8827, -68.7733, -5.65657, 0.66 ) }
    dend_26 { pt3dadd( -30.8334, -68.7964, -5.86628, 0.88 ) }
    dend_26 { pt3dadd( -31.7166, -68.8366, -6.02676, 1.03 ) }
    dend_26 { pt3dadd( -32.3427, -68.8611, -6.12294, 1.03 ) }
    dend_26 { pt3dadd( -33.0609, -68.8633, -6.22432, 0.96 ) }
    dend_26 { pt3dadd( -33.7184, -68.8232, -6.30429, 0.74 ) }
    dend_26 { pt3dadd( -34.622, -68.7044, -6.41933, 0.59 ) }
    dend_26 { pt3dadd( -35.149, -68.6223, -6.4844, 0.59 ) }
    dend_26 { pt3dadd( -36.0322, -68.5097, -6.59412, 0.74 ) }
    dend_26 { pt3dadd( -36.7954, -68.4374, -6.69833, 0.74 ) }
    dend_26 { pt3dadd( -37.5936, -68.4002, -6.83808, 0.52 ) }
    dend_26 { pt3dadd( -38.2685, -68.4188, -6.97476, 0.59 ) }
    dend_26 { pt3dadd( -39.1369, -68.5405, -7.15738, 0.59 ) }
    dend_26 { pt3dadd( -39.9246, -68.7147, -7.2992, 0.74 ) }
    dend_26 { pt3dadd( -40.74, -68.9336, -7.41377, 0.74 ) }
    dend_26 { pt3dadd( -41.4152, -69.1199, -7.48934, 0.74 ) }
    dend_26 { pt3dadd( -42.3726, -69.3496, -7.58378, 0.74 ) }
    dend_26 { pt3dadd( -43.3149, -69.5347, -7.66069, 0.74 ) }
    dend_26 { pt3dadd( -44.3417, -69.7071, -7.72381, 0.88 ) }
    dend_26 { pt3dadd( -44.8932, -69.7868, -7.75945, 0.88 ) }
    dend_26 { pt3dadd( -45.8055, -69.9072, -7.86707, 0.96 ) }
    dend_26 { pt3dadd( -46.8387, -70.0152, -8.03829, 0.96 ) }
    dend_26 { pt3dadd( -47.7879, -70.0958, -8.23217, 0.66 ) }
    dend_26 { pt3dadd( -48.4257, -70.174, -8.37453, 0.59 ) }
    dend_26 { pt3dadd( -49.4312, -70.3875, -8.60868, 0.59 ) }
    dend_26 { pt3dadd( -50.918, -70.827, -8.94684, 0.81 ) }
    dend_26 { pt3dadd( -51.7293, -71.1277, -9.1354, 0.96 ) }
    dend_26 { pt3dadd( -52.816, -71.5788, -9.379, 0.96 ) }
    dend_26 { pt3dadd( -54.2499, -72.1965, -9.66673, 0.96 ) }
    dend_26 { pt3dadd( -55.3298, -72.6553, -9.84143, 0.96 ) }
    dend_26 { pt3dadd( -56.1559, -72.9909, -9.93234, 0.96 ) }
    dend_26 { pt3dadd( -56.914, -73.2594, -9.98253, 0.81 ) }
    dend_26 { pt3dadd( -57.705, -73.4764, -10.053, 0.88 ) }
    dend_26 { pt3dadd( -58.5114, -73.6027, -10.1454, 0.88 ) }
    dend_26 { pt3dadd( -59.2553, -73.6377, -10.2477, 0.66 ) }
    dend_26 { pt3dadd( -59.8215, -73.6472, -10.3341, 0.66 ) }
    dend_26 { pt3dadd( -60.3968, -73.6856, -10.4249, 0.59 ) }
    dend_26 { pt3dadd( -60.984, -73.7946, -10.5083, 0.59 ) }
    dend_26 { pt3dadd( -61.7464, -74.0586, -10.614, 0.81 ) }
    dend_26 { pt3dadd( -62.3589, -74.3231, -10.6854, 0.81 ) }
    dend_26 { pt3dadd( -63.2339, -74.705, -10.7831, 0.52 ) }
    dend_26 { pt3dadd( -64.0634, -75.0235, -10.8739, 0.66 ) }
    dend_26 { pt3dadd( -64.8441, -75.2612, -10.9598, 0.66 ) }
    dend_26 { pt3dadd( -65.8522, -75.4542, -11.0596, 0.66 ) }
    dend_26 { pt3dadd( -66.746, -75.5202, -11.1466, 0.88 ) }
    dend_26 { pt3dadd( -67.698, -75.504, -11.2342, 0.88 ) }
    dend_26 { pt3dadd( -68.503, -75.4463, -11.3036, 0.81 ) }
    dend_26 { pt3dadd( -69.3711, -75.388, -11.4311, 0.88 ) }
    dend_26 { pt3dadd( -70.3048, -75.361, -11.6521, 1.03 ) }
    dend_26 { pt3dadd( -71.0211, -75.3821, -11.8772, 1.03 ) }
    dend_26 { pt3dadd( -71.7739, -75.4714, -12.1935, 0.81 ) }
    dend_26 { pt3dadd( -72.4282, -75.6149, -12.5187, 0.81 ) }
    dend_26 { pt3dadd( -73.8357, -76.1432, -13.3839, 0.44 ) }
    dend_26 { pt3dadd( -74.647, -76.574, -13.9832, 0.66 ) }
    dend_26 { pt3dadd( -75.2123, -76.9479, -14.4455, 0.81 ) }
    dend_26 { pt3dadd( -75.9516, -77.5018, -15.0975, 1.03 ) }
    dend_26 { pt3dadd( -76.2747, -77.7572, -15.3855, 1.11 ) }
    dend_26 { pt3dadd( -77.2036, -78.4226, -16.1313, 0.37 ) }
    dend_26 { pt3dadd( -77.8605, -78.7886, -16.5449, 0.37 ) }
    dend_26 { pt3dadd( -78.3551, -79.0198, -16.8083, 1.69 ) }
    dend_26 { pt3dadd( -79.0294, -79.2879, -17.114, 2.06 ) }
    dend_26 { pt3dadd( -79.4895, -79.4443, -17.275, 2.06 ) }
    dend_26 { pt3dadd( -80.8434, -79.8621, -17.6569, 0.59 ) }
    dend_26 { pt3dadd( -82.0176, -80.1757, -17.9073, 0.44 ) }
    dend_26 { pt3dadd( -83.2638, -80.4686, -18.1271, 0.52 ) }
    dend_26 { pt3dadd( -83.9322, -80.603, -18.2259, 0.74 ) }
    dend_26 { pt3dadd( -84.8068, -80.7595, -18.3322, 0.88 ) }
    dend_26 { pt3dadd( -85.712, -80.9144, -18.4274, 0.66 ) }
    dend_26 { pt3dadd( -86.0155, -80.9639, -18.4396, 0.44 ) }
    dend_26 { pt3dadd( -86.7157, -81.0545, -18.4346, 0.37 ) }
    dend_26 { pt3dadd( -87.5006, -81.0951, -18.3882, 0.96 ) }
    dend_26 { pt3dadd( -88.4422, -81.1036, -18.2645, 1.62 ) }
    dend_26 { pt3dadd( -89.2594, -81.1171, -18.0962, 1.77 ) }
    dend_26 { pt3dadd( -90.1917, -81.1557, -17.8623, 1.77 ) }
    dend_26 { pt3dadd( -91.0489, -81.2246, -17.6284, 1.11 ) }
    dend_26 { pt3dadd( -91.8415, -81.3077, -17.4011, 0.66 ) }
    dend_26 { pt3dadd( -92.7537, -81.3937, -17.1495, 0.52 ) }
    dend_26 { pt3dadd( -93.8382, -81.4587, -16.8185, 0.44 ) }
    dend_26 { pt3dadd( -94.628, -81.48, -16.5953, 0.44 ) }
    dend_26 { pt3dadd( -95.2172, -81.4876, -16.4537, 0.59 ) }
    dend_26 { pt3dadd( -95.7377, -81.4977, -16.341, 0.59 ) }
    dend_26 { pt3dadd( -96.4431, -81.528, -16.2158, 0.44 ) }
    dend_26 { pt3dadd( -97.9519, -81.6268, -15.9765, 0.74 ) }
    dend_26 { pt3dadd( -98.6832, -81.6802, -15.8571, 0.81 ) }
    dend_26 { pt3dadd( -99.4842, -81.7512, -15.7385, 0.81 ) }
    dend_26 { pt3dadd( -100.335, -81.837, -15.6468, 0.96 ) }
    dend_26 { pt3dadd( -101.167, -81.9386, -15.6296, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_26 { pt3dadd( -101.873, -82.0299, -15.6738, 1.11 ) }
    dend_26 { pt3dadd( -102.525, -82.1038, -15.7939, 0.81 ) }
    dend_26 { pt3dadd( -103.536, -82.1951, -16.0372, 0.59 ) }
    dend_26 { pt3dadd( -104.332, -82.2306, -16.262, 1.18 ) }
    dend_26 { pt3dadd( -105.437, -82.2397, -16.6006, 1.47 ) }
    dend_26 { pt3dadd( -106.008, -82.2374, -16.7762, 1.62 ) }
    dend_26 { pt3dadd( -106.362, -82.2256, -16.8989, 1.62 ) }
    dend_26 { pt3dadd( -106.954, -82.1798, -17.1083, 1.11 ) }
    dend_26 { pt3dadd( -107.642, -82.0881, -17.3065, 0.66 ) }
    dend_26 { pt3dadd( -108.35, -81.9296, -17.4542, 0.44 ) }
    dend_26 { pt3dadd( -109.196, -81.6648, -17.5724, 0.37 ) }
    dend_26 { pt3dadd( -110.128, -81.3128, -17.6846, 0.37 ) }
    dend_26 { pt3dadd( -110.719, -81.0577, -17.7347, 0.37 ) }
    dend_26 { pt3dadd( -111.545, -80.6617, -17.7736, 0.44 ) }
    dend_26 { pt3dadd( -112.654, -80.126, -17.8276, 0.74 ) }
    dend_26 { pt3dadd( -113.185, -79.8768, -17.8657, 1.18 ) }
    dend_26 { pt3dadd( -113.651, -79.6696, -17.911, 1.33 ) }
    dend_26 { pt3dadd( -114.216, -79.4368, -17.97, 1.33 ) }
    dend_26 { pt3dadd( -114.908, -79.1337, -18.0724, 0.81 ) }
    dend_26 { pt3dadd( -115.826, -78.6918, -18.227, 0.29 ) }
    dend_26 { pt3dadd( -116.465, -78.367, -18.3301, 0.29 ) }
    dend_26 { pt3dadd( -117.452, -77.843, -18.4768, 0.37 ) }
    dend_26 { pt3dadd( -118.091, -77.4861, -18.5548, 0.44 ) }
    dend_26 { pt3dadd( -119.012, -77.0052, -18.7515, 0.44 ) }
    dend_26 { pt3dadd( -120.124, -76.47, -19.0405, 1.4 ) }
    dend_26 { pt3dadd( -120.769, -76.1708, -19.2212, 1.92 ) }
    dend_26 { pt3dadd( -121.048, -76.048, -19.3061, 2.28 ) }
    dend_26 { pt3dadd( -121.662, -75.8057, -19.5182, 2.28 ) }
    dend_26 { pt3dadd( -124.157, -74.8785, -20.4665, 0.29 ) }
    dend_26 { pt3dadd( -124.587, -74.7198, -20.6478, 0.52 ) }
    dend_26 { pt3dadd( -125.126, -74.5161, -20.8933, 0.52 ) }
    dend_26 { pt3dadd( -125.725, -74.2876, -21.1511, 0.74 ) }
    dend_26 { pt3dadd( -126.232, -74.0903, -21.3674, 0.74 ) }
    dend_26 { pt3dadd( -126.906, -73.8375, -21.662, 0.44 ) }
    dend_26 { pt3dadd( -127.648, -73.559, -21.9553, 0.37 ) }
    dend_26 { pt3dadd( -128.292, -73.3369, -22.2552, 0.81 ) }
    dend_26 { pt3dadd( -128.746, -73.1931, -22.492, 0.96 ) }
    dend_26 { pt3dadd( -129.42, -72.9855, -22.8904, 0.96 ) }
    dend_26 { pt3dadd( -130.234, -72.7534, -23.4204, 0.66 ) }
    dend_26 { pt3dadd( -130.911, -72.5884, -23.8934, 0.29 ) }
    dend_26 { pt3dadd( -131.67, -72.4179, -24.4064, 0.66 ) }
    dend_26 { pt3dadd( -132.152, -72.3079, -24.7115, 0.66 ) }
    dend_26 { pt3dadd( -133.167, -72.08, -25.2831, 0.52 ) }
    dend_26 { pt3dadd( -133.838, -71.9154, -25.593, 0.74 ) }
    dend_26 { pt3dadd( -135.255, -71.5486, -26.1632, 0.88 ) }
    dend_26 { pt3dadd( -135.931, -71.3596, -26.4355, 1.11 ) }
    dend_26 { pt3dadd( -136.411, -71.2182, -26.6284, 1.33 ) }
    dend_26 { pt3dadd( -137.229, -70.938, -26.9451, 0.44 ) }
    dend_26 { pt3dadd( -138.089, -70.5723, -27.2484, 0.44 ) }
    dend_26 { pt3dadd( -138.862, -70.1676, -27.5181, 0.29 ) }
    dend_26 { pt3dadd( -140.01, -69.4632, -28.0029, 0.96 ) }
    dend_26 { pt3dadd( -140.511, -69.1455, -28.268, 1.18 ) }
    dend_26 { pt3dadd( -141.13, -68.7466, -28.6335, 2.21 ) }
    dend_26 { pt3dadd( -141.487, -68.517, -28.8581, 2.43 ) }
    dend_26 { pt3dadd( -142.19, -68.0826, -29.3315, 2.43 ) }
    dend_26 { pt3dadd( -143.188, -67.53, -29.9879, 2.21 ) }
    dend_26 { pt3dadd( -144.462, -66.9456, -30.7705, 0.29 ) }
    dend_26 { pt3dadd( -145.157, -66.6831, -31.1685, 0.44 ) }
    dend_26 { pt3dadd( -145.61, -66.5346, -31.3967, 0.52 ) }
    dend_26 { pt3dadd( -147.226, -66.0459, -32.129, 0.29 ) }
    dend_26 { pt3dadd( -148.053, -65.8125, -32.4572, 0.29 ) }
    dend_26 { pt3dadd( -148.747, -65.6297, -32.6809, 0.29 ) }
    dend_26 { pt3dadd( -149.571, -65.4355, -32.9275, 0.29 ) }
    dend_26 { pt3dadd( -150.761, -65.1669, -33.2591, 0.96 ) }
    dend_26 { pt3dadd( -151.297, -65.0385, -33.3904, 1.47 ) }
    dend_26 { pt3dadd( -151.8, -64.9042, -33.4869, 1.47 ) }
    dend_26 { pt3dadd( -152.966, -64.496, -33.715, 0.29 ) }
    dend_26 { pt3dadd( -153.43, -64.3013, -33.8094, 0.29 ) }
    dend_26 { pt3dadd( -154.212, -63.9197, -33.9969, 0.74 ) }
    dend_26 { pt3dadd( -154.617, -63.7023, -34.1016, 0.81 ) }
    dend_26 { pt3dadd( -154.879, -63.5464, -34.1654, 0.81 ) }
    dend_26 { pt3dadd( -155.314, -63.2537, -34.2736, 0.29 ) }
    dend_26 { pt3dadd( -155.682, -62.9724, -34.3778, 0.22 ) }
    dend_26 { pt3dadd( -156.509, -62.3084, -34.6567, 0.22 ) }
    dend_26 { pt3dadd( -157.437, -61.5783, -35.0009, 0.22 ) }
    dend_26 { pt3dadd( -158.087, -61.0927, -35.2316, 0.88 ) }
    dend_26 { pt3dadd( -158.631, -60.6977, -35.4111, 1.11 ) }
    dend_26 { pt3dadd( -158.864, -60.5334, -35.4802, 1.4 ) }
    dend_26 { pt3dadd( -159.376, -60.1797, -35.6039, 1.4 ) }
    dend_26 { pt3dadd( -159.897, -59.8302, -35.687, 0.96 ) }
    dend_26 { pt3dadd( -160.978, -59.1613, -35.8145, 0.29 ) }
    dend_26 { pt3dadd( -161.448, -58.8888, -35.8519, 0.59 ) }
    dend_26 { pt3dadd( -161.764, -58.7065, -35.8652, 0.59 ) }
    dend_26 { pt3dadd( -162.21, -58.4479, -35.8716, 0.37 ) }
    dend_26 { pt3dadd( -163.503, -57.6892, -35.8583, 0.22 ) }
    dend_26 { pt3dadd( -164.299, -57.2167, -35.8507, 0.22 ) }
    dend_26 { pt3dadd( -164.839, -56.8929, -35.8463, 0.22 ) }
    dend_26 { pt3dadd( -165.917, -56.2203, -35.8398, 1.25 ) }
    dend_26 { pt3dadd( -166.449, -55.8648, -35.838, 1.69 ) }
    dend_26 { pt3dadd( -166.837, -55.5856, -35.838, 1.92 ) }
    dend_26 { pt3dadd( -167.346, -55.1868, -35.838, 1.62 ) }
    dend_26 { pt3dadd( -168.214, -54.4996, -35.838, 0.81 ) }
    dend_26 { pt3dadd( -168.767, -54.0609, -35.838, 0.81 ) }
    dend_26 { pt3dadd( -169.735, -53.3155, -35.8004, 0.37 ) }
    dend_26 { pt3dadd( -170.403, -52.815, -35.756, 0.37 ) }
    dend_26 { pt3dadd( -170.801, -52.5341, -35.7216, 0.37 ) }
    dend_26 { pt3dadd( -171.629, -51.9859, -35.6358, 0.29 ) }
    dend_26 { pt3dadd( -172.46, -51.4562, -35.5363, 0.29 ) }
    dend_26 { pt3dadd( -173.499, -50.8007, -35.3688, 0.29 ) }
    dend_26 { pt3dadd( -174.007, -50.4805, -35.2625, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( -174.369, -50.2466, -35.1749, 0.44 ) }
    dend_26 { pt3dadd( -174.844, -49.9324, -35.0528, 0.29 ) }
    dend_26 { pt3dadd( -175.871, -49.2595, -34.7826, 1.4 ) }
    dend_26 { pt3dadd( -176.592, -48.8424, -34.604, 1.77 ) }
    dend_26 { pt3dadd( -176.907, -48.6798, -34.5367, 1.77 ) }
    dend_26 { pt3dadd( -177.744, -48.2786, -34.3737, 0.66 ) }
    dend_26 { pt3dadd( -178.375, -47.984, -34.2658, 0.66 ) }
    dend_26 { pt3dadd( -178.979, -47.7158, -34.1718, 0.81 ) }
    dend_26 { pt3dadd( -179.693, -47.4163, -34.109, 0.81 ) }
    dend_26 { pt3dadd( -180.625, -47.0062, -34.1026, 0.37 ) }
    dend_26 { pt3dadd( -181.8, -46.4373, -34.1523, 0.29 ) }
    dend_26 { pt3dadd( -182.465, -46.0947, -34.2078, 0.29 ) }
    dend_26 { pt3dadd( -183.183, -45.7036, -34.2911, 1.11 ) }
    dend_26 { pt3dadd( -184.128, -45.1443, -34.4342, 1.77 ) }
    dend_26 { pt3dadd( -184.856, -44.6829, -34.5777, 0.88 ) }
    dend_26 { pt3dadd( -185.772, -44.0896, -34.7829, 0.29 ) }
    dend_26 { pt3dadd( -187.162, -43.205, -35.1075, 0.29 ) }
    dend_26 { pt3dadd( -187.893, -42.753, -35.2735, 0.66 ) }
    dend_26 { pt3dadd( -188.445, -42.4305, -35.3884, 0.88 ) }
    dend_26 { pt3dadd( -189.585, -41.7802, -35.6011, 0.29 ) }
    dend_26 { pt3dadd( -190.334, -41.3624, -35.7436, 0.29 ) }
    dend_26 { pt3dadd( -190.985, -41.0179, -35.8752, 0.66 ) }
    dend_26 { pt3dadd( -191.531, -40.7323, -36.0141, 0.66 ) }
    dend_26 { pt3dadd( -192.297, -40.3424, -36.234, 0.29 ) }
    dend_26 { pt3dadd( -192.976, -40.0116, -36.4395, 0.88 ) }
    dend_26 { pt3dadd( -193.422, -39.7885, -36.5803, 0.88 ) }
    dend_26 { pt3dadd( -194.294, -39.3069, -36.8665, 0.29 ) }
    dend_26 { pt3dadd( -195.281, -38.6543, -37.1209, 0.59 ) }
    dend_26 { pt3dadd( -195.574, -38.4044, -37.1705, 0.59 ) }
    dend_26 { pt3dadd( -195.978, -37.9972, -37.1956, 0.59 ) }
    dend_26 { pt3dadd( -196.597, -37.3304, -37.1621, 0.37 ) }
    dend_26 { pt3dadd( -197.255, -36.5602, -37.0666, 0.29 ) }
    dend_26 { pt3dadd( -198.156, -35.4295, -36.8598, 0.29 ) }
    dend_26 { pt3dadd( -198.975, -34.3434, -36.6136, 1.25 ) }
    dend_26 { pt3dadd( -199.471, -33.6403, -36.4682, 1.4 ) }
    dend_26 { pt3dadd( -199.784, -33.1704, -36.3857, 1.4 ) }
    dend_26 { pt3dadd( -200.185, -32.5481, -36.2995, 1.03 ) }
    dend_26 { pt3dadd( -200.673, -31.7886, -36.2299, 0.29 ) }
    dend_26 { pt3dadd( -201.292, -30.8057, -36.2011, 0.29 ) }
    dend_26 { pt3dadd( -201.816, -29.9178, -36.1924, 0.29 ) }
    dend_26 { pt3dadd( -202.459, -28.7134, -36.2045, 1.11 ) }
    dend_26 { pt3dadd( -202.691, -28.2665, -36.2142, 1.55 ) }
    dend_26 { pt3dadd( -203.103, -27.4545, -36.2355, 0.66 ) }
    dend_26 { pt3dadd( -203.754, -26.147, -36.2656, 0.29 ) }
    dend_26 { pt3dadd( -204.626, -24.443, -36.3008, 0.29 ) }
    dend_26 { pt3dadd( -205.166, -23.3977, -36.3183, 0.29 ) }
    dend_26 { pt3dadd( -205.81, -22.1347, -36.3356, 0.44 ) }
    dend_26 { pt3dadd( -206.167, -21.4294, -36.3423, 0.44 ) }
    dend_26 { pt3dadd( -206.555, -20.6606, -36.3499, 0.59 ) }
    dend_26 { pt3dadd( -207.079, -19.6194, -36.3605, 0.29 ) }
    dend_26 { pt3dadd( -207.464, -18.8081, -36.3654, 0.29 ) }
    dend_26 { pt3dadd( -207.789, -18.0293, -36.3721, 0.44 ) }
    dend_26 { pt3dadd( -208.065, -17.2271, -36.3895, 0.29 ) }
    dend_26 { pt3dadd( -208.344, -16.4154, -36.4149, 0.59 ) }
    dend_26 { pt3dadd( -208.691, -15.4746, -36.4521, 1.03 ) }
    dend_26 { pt3dadd( -208.893, -14.9777, -36.4757, 1.03 ) }
    dend_26 { pt3dadd( -209.463, -13.7949, -36.5416, 0.22 ) }
    dend_26 { pt3dadd( -210.086, -12.7474, -36.6094, 0.22 ) }
    dend_26 { pt3dadd( -210.675, -11.8665, -36.6745, 0.22 ) }
    dend_26 { pt3dadd( -211.163, -11.2467, -36.7271, 0.29 ) }
    dend_26 { pt3dadd( -211.489, -10.9235, -36.7582, 0.29 ) }
    dend_26 { pt3dadd( -211.917, -10.6171, -36.7887, 0.52 ) }
    dend_26 { pt3dadd( -212.196, -10.5238, -36.7955, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 63/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -19.5377, -69.0675, -3.73319, 0.88 ) }
    dend_21 { pt3dadd( -20.321, -70.5177, -4.01733, 0.88 ) }
    dend_21 { pt3dadd( -20.9153, -71.7126, -4.26054, 0.88 ) }
    dend_21 { pt3dadd( -21.4508, -72.8686, -4.53491, 0.88 ) }
    dend_21 { pt3dadd( -21.9102, -73.9214, -4.79324, 1.03 ) }
    dend_21 { pt3dadd( -22.3408, -74.973, -5.05413, 1.03 ) }
    dend_21 { pt3dadd( -22.7406, -75.9737, -5.29978, 0.96 ) }
    dend_21 { pt3dadd( -23.1866, -77.121, -5.63929, 0.96 ) }
    dend_21 { pt3dadd( -23.5174, -77.9978, -5.89828, 1.11 ) }
    dend_21 { pt3dadd( -23.8125, -78.7421, -6.10639, 1.11 ) }
    dend_21 { pt3dadd( -24.2044, -79.611, -6.33317, 1.18 ) }
    dend_21 { pt3dadd( -24.8266, -80.7843, -6.62722, 1.18 ) }
    dend_21 { pt3dadd( -25.492, -81.9608, -6.9261, 1.11 ) }
    dend_21 { pt3dadd( -25.9182, -82.6391, -7.10325, 1.25 ) }
    dend_21 { pt3dadd( -26.5864, -83.6131, -7.34153, 1.25 ) }
    dend_21 { pt3dadd( -27.2431, -84.481, -7.57137, 1.47 ) }
    dend_21 { pt3dadd( -27.9026, -85.2543, -7.78445, 1.69 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 80/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 164.951, 161.957, -62.479, 0.88 ) }
    dend_16 { pt3dadd( 165.411, 161.102, -62.353, 0.88 ) }
    dend_16 { pt3dadd( 165.649, 160.68, -62.301, 1.11 ) }
    dend_16 { pt3dadd( 165.885, 160.342, -62.2738, 1.25 ) }
    dend_16 { pt3dadd( 166.331, 159.726, -62.2376, 1.03 ) }
    dend_16 { pt3dadd( 166.935, 158.91, -62.1913, 0.15 ) }
    dend_16 { pt3dadd( 167.275, 158.455, -62.1649, 0.37 ) }
    dend_16 { pt3dadd( 167.442, 158.234, -62.1611, 0.37 ) }
    dend_16 { pt3dadd( 168.439, 156.914, -62.1207, 0.15 ) }
    dend_16 { pt3dadd( 168.762, 156.475, -62.1024, 0.29 ) }
    dend_16 { pt3dadd( 169.126, 155.969, -62.072, 0.15 ) }
    dend_16 { pt3dadd( 169.462, 155.455, -62.0246, 0.15 ) }
    dend_16 { pt3dadd( 169.739, 154.983, -61.9669, 0.15 ) }
    dend_16 { pt3dadd( 169.956, 154.573, -61.8849, 0.22 ) }
    dend_16 { pt3dadd( 170.144, 154.177, -61.7797, 0.22 ) }
    dend_16 { pt3dadd( 170.382, 153.699, -61.6388, 0.29 ) }
    dend_16 { pt3dadd( 170.682, 153.114, -61.4681, 0.29 ) }
    dend_16 { pt3dadd( 171.215, 152.092, -61.1453, 0.15 ) }
    dend_16 { pt3dadd( 171.876, 150.791, -60.7444, 0.59 ) }
    dend_16 { pt3dadd( 172.055, 150.428, -60.6371, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_16 { pt3dadd( 172.265, 150.0, -60.5167, 0.88 ) }
    dend_16 { pt3dadd( 172.88, 148.722, -60.1861, 0.22 ) }
    dend_16 { pt3dadd( 173.342, 147.716, -59.9152, 0.22 ) }
    dend_16 { pt3dadd( 173.904, 146.435, -59.527, 0.22 ) }
    dend_16 { pt3dadd( 174.166, 145.818, -59.3268, 0.59 ) }
    dend_16 { pt3dadd( 174.327, 145.428, -59.1914, 0.74 ) }
    dend_16 { pt3dadd( 174.492, 145.006, -59.0387, 0.52 ) }
    dend_16 { pt3dadd( 174.953, 143.861, -58.6327, 0.22 ) }
    dend_16 { pt3dadd( 175.412, 142.758, -58.2885, 1.33 ) }
    dend_16 { pt3dadd( 175.569, 142.38, -58.1807, 1.4 ) }
    dend_16 { pt3dadd( 176.04, 141.171, -57.9042, 0.22 ) }
    dend_16 { pt3dadd( 176.317, 140.479, -57.7727, 0.15 ) }
    dend_16 { pt3dadd( 176.82, 139.192, -57.5245, 0.15 ) }
    dend_16 { pt3dadd( 177.12, 138.334, -57.3804, 0.29 ) }
    dend_16 { pt3dadd( 177.34, 137.602, -57.2616, 0.29 ) }
    dend_16 { pt3dadd( 177.676, 136.358, -57.0421, 0.15 ) }
    dend_16 { pt3dadd( 177.933, 135.311, -56.8408, 0.15 ) }
    dend_16 { pt3dadd( 178.39, 133.266, -56.4327, 0.15 ) }
    dend_16 { pt3dadd( 178.747, 131.397, -56.0647, 0.15 ) }
    dend_16 { pt3dadd( 179.157, 129.102, -55.6337, 0.15 ) }
    dend_16 { pt3dadd( 179.305, 128.172, -55.4759, 0.22 ) }
    dend_16 { pt3dadd( 179.354, 127.788, -55.4211, 0.96 ) }
    dend_16 { pt3dadd( 179.407, 127.189, -55.3618, 1.18 ) }
    dend_16 { pt3dadd( 179.527, 125.731, -55.3022, 0.15 ) }
    dend_16 { pt3dadd( 179.599, 125.031, -55.275, 0.29 ) }
    dend_16 { pt3dadd( 179.724, 123.999, -55.2726, 0.15 ) }
    dend_16 { pt3dadd( 179.813, 123.387, -55.2886, 0.29 ) }
    dend_16 { pt3dadd( 179.883, 122.936, -55.3021, 0.29 ) }
    dend_16 { pt3dadd( 180.134, 121.429, -55.3566, 0.15 ) }
    dend_16 { pt3dadd( 180.378, 120.165, -55.4159, 0.15 ) }
    dend_16 { pt3dadd( 180.581, 119.233, -55.4697, 0.52 ) }
    dend_16 { pt3dadd( 180.676, 118.902, -55.4945, 0.66 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 164.951, 161.957, -62.479, 0.22 ) }
    dend_15 { pt3dadd( 166.642, 162.073, -62.4239, 0.22 ) }
    dend_15 { pt3dadd( 167.668, 162.129, -62.3151, 0.52 ) }
    dend_15 { pt3dadd( 167.874, 162.14, -62.2884, 0.52 ) }
    dend_15 { pt3dadd( 169.628, 162.23, -62.0438, 0.22 ) }
    dend_15 { pt3dadd( 170.207, 162.269, -61.9656, 0.59 ) }
    dend_15 { pt3dadd( 170.721, 162.307, -61.8982, 0.59 ) }
    dend_15 { pt3dadd( 172.889, 162.408, -61.6093, 0.22 ) }
    dend_15 { pt3dadd( 173.239, 162.428, -61.563, 0.44 ) }
    dend_15 { pt3dadd( 173.459, 162.443, -61.5358, 0.44 ) }
    dend_15 { pt3dadd( 175.148, 162.569, -61.3409, 0.15 ) }
    dend_15 { pt3dadd( 175.448, 162.583, -61.3128, 0.37 ) }
    dend_15 { pt3dadd( 175.785, 162.591, -61.2848, 0.37 ) }
    dend_15 { pt3dadd( 177.038, 162.573, -61.221, 0.15 ) }
    dend_15 { pt3dadd( 177.729, 162.544, -61.1729, 0.15 ) }
    dend_15 { pt3dadd( 178.102, 162.513, -61.1405, 0.29 ) }
    dend_15 { pt3dadd( 178.458, 162.459, -61.1019, 0.29 ) }
    dend_15 { pt3dadd( 179.321, 162.245, -60.9844, 0.22 ) }
    dend_15 { pt3dadd( 179.544, 162.174, -60.9523, 0.44 ) }
    dend_15 { pt3dadd( 180.506, 161.788, -60.8114, 0.22 ) }
    dend_15 { pt3dadd( 180.836, 161.643, -60.7658, 0.44 ) }
    dend_15 { pt3dadd( 181.179, 161.487, -60.7202, 0.44 ) }
    dend_15 { pt3dadd( 183.05, 160.59, -60.4915, 0.22 ) }
    dend_15 { pt3dadd( 184.232, 159.972, -60.3724, 0.22 ) }
    dend_15 { pt3dadd( 184.845, 159.635, -60.3062, 0.37 ) }
    dend_15 { pt3dadd( 185.166, 159.443, -60.268, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -105.695, 156.431, 165.083, 0.88 ) }
    dend_8 { pt3dadd( -107.303, 159.647, 174.466, 0.88 ) }
    dend_8 { pt3dadd( -108.94, 163.885, 183.468, 0.88 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 61/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -105.695, 156.431, 165.083, 0.22 ) }
    dend_7 { pt3dadd( -106.533, 160.452, 174.283, 0.88 ) }
    dend_7 { pt3dadd( -106.448, 162.773, 184.035, 0.88 ) }
    dend_7 { pt3dadd( -105.528, 163.224, 193.983, 0.88 ) }
    dend_7 { pt3dadd( -104.41, 162.214, 203.874, 0.88 ) }
    dend_7 { pt3dadd( -102.268, 162.202, 213.642, 0.88 ) }
    dend_7 { pt3dadd( -99.1315, 163.472, 223.06, 0.88 ) }
    dend_7 { pt3dadd( -97.0561, 165.147, 232.712, 0.88 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 69/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 64.4611, -110.369, -1.1146, 1.11 ) }
    dend_34 { pt3dadd( 66.2297, -110.286, -1.52474, 1.11 ) }
    dend_34 { pt3dadd( 67.3173, -110.297, -1.764, 0.96 ) }
    dend_34 { pt3dadd( 68.4611, -110.376, -2.00301, 0.81 ) }
    dend_34 { pt3dadd( 69.1893, -110.497, -2.14635, 0.81 ) }
    dend_34 { pt3dadd( 70.4315, -110.803, -2.37198, 0.81 ) }
    dend_34 { pt3dadd( 71.2161, -111.007, -2.50449, 1.03 ) }
    dend_34 { pt3dadd( 71.9513, -111.247, -2.60256, 1.03 ) }
    dend_34 { pt3dadd( 72.514, -111.432, -2.70251, 1.03 ) }
    dend_34 { pt3dadd( 73.6499, -111.734, -2.99243, 0.59 ) }
    dend_34 { pt3dadd( 74.3821, -111.78, -3.30217, 0.59 ) }
    dend_34 { pt3dadd( 75.0971, -111.706, -3.71379, 0.81 ) }
    dend_34 { pt3dadd( 75.7461, -111.598, -4.20072, 0.81 ) }
    dend_34 { pt3dadd( 76.5021, -111.492, -4.8434, 0.66 ) }
    dend_34 { pt3dadd( 77.2401, -111.451, -5.51303, 0.66 ) }
    dend_34 { pt3dadd( 78.1992, -111.616, -6.42834, 0.74 ) }
    dend_34 { pt3dadd( 79.0193, -112.075, -7.12662, 0.88 ) }
    dend_34 { pt3dadd( 79.6788, -112.663, -7.58842, 0.88 ) }
    dend_34 { pt3dadd( 80.2574, -113.284, -7.91582, 0.81 ) }
    dend_34 { pt3dadd( 80.8014, -113.902, -8.18253, 0.81 ) }
    dend_34 { pt3dadd( 81.8608, -115.1, -8.62166, 0.59 ) }
    dend_34 { pt3dadd( 82.91, -116.226, -9.01007, 0.52 ) }
    dend_34 { pt3dadd( 83.727, -117.004, -9.31825, 0.66 ) }
    dend_34 { pt3dadd( 84.3278, -117.505, -9.54698, 0.66 ) }
    dend_34 { pt3dadd( 85.1474, -118.116, -9.87353, 0.81 ) }
    dend_34 { pt3dadd( 85.6758, -118.487, -10.1069, 0.81 ) }
    dend_34 { pt3dadd( 86.5974, -119.103, -10.556, 0.66 ) }
    dend_34 { pt3dadd( 87.2219, -119.559, -10.9216, 0.81 ) }
    dend_34 { pt3dadd( 87.9337, -120.135, -11.3254, 0.81 ) }
    dend_34 { pt3dadd( 88.6793, -120.775, -11.723, 0.88 ) }
    dend_34 { pt3dadd( 89.3742, -121.398, -12.0665, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_34 { pt3dadd( 90.0386, -121.979, -12.3737, 0.52 ) }
    dend_34 { pt3dadd( 90.9892, -122.82, -12.8532, 0.88 ) }
    dend_34 { pt3dadd( 91.6389, -123.444, -13.2417, 0.88 ) }
    dend_34 { pt3dadd( 92.1296, -123.984, -13.5899, 1.03 ) }
    dend_34 { pt3dadd( 92.6437, -124.678, -14.031, 0.81 ) }
    dend_34 { pt3dadd( 93.014, -125.266, -14.3798, 0.59 ) }
    dend_34 { pt3dadd( 93.8209, -126.718, -15.1485, 0.59 ) }
    dend_34 { pt3dadd( 94.2594, -127.584, -15.5372, 0.59 ) }
    dend_34 { pt3dadd( 94.5983, -128.263, -15.8274, 0.66 ) }
    dend_34 { pt3dadd( 95.103, -129.154, -16.1267, 0.37 ) }
    dend_34 { pt3dadd( 95.4871, -129.701, -16.2797, 0.37 ) }
    dend_34 { pt3dadd( 96.1693, -130.477, -16.5904, 0.66 ) }
    dend_34 { pt3dadd( 96.5972, -130.876, -16.7707, 0.81 ) }
    dend_34 { pt3dadd( 97.1266, -131.327, -17.0669, 0.81 ) }
    dend_34 { pt3dadd( 97.8298, -131.873, -17.5816, 0.44 ) }
    dend_34 { pt3dadd( 98.75, -132.662, -18.6327, 1.33 ) }
    dend_34 { pt3dadd( 99.8009, -133.661, -20.1103, 1.92 ) }
    dend_34 { pt3dadd( 100.087, -133.941, -20.5553, 1.84 ) }
    dend_34 { pt3dadd( 100.888, -134.682, -21.8294, 0.81 ) }
    dend_34 { pt3dadd( 101.428, -135.12, -22.6661, 0.88 ) }
    dend_34 { pt3dadd( 103.105, -136.205, -25.1394, 0.52 ) }
    dend_34 { pt3dadd( 103.544, -136.405, -25.7008, 0.52 ) }
    dend_34 { pt3dadd( 104.091, -136.566, -26.2827, 0.52 ) }
    dend_34 { pt3dadd( 104.744, -136.672, -26.8476, 0.52 ) }
    dend_34 { pt3dadd( 105.494, -136.705, -27.3305, 1.18 ) }
    dend_34 { pt3dadd( 106.363, -136.682, -27.7272, 1.69 ) }
    dend_34 { pt3dadd( 106.926, -136.616, -27.8985, 1.92 ) }
    dend_34 { pt3dadd( 107.41, -136.553, -28.0633, 1.69 ) }
    dend_34 { pt3dadd( 108.559, -136.45, -28.4497, 0.81 ) }
    dend_34 { pt3dadd( 109.787, -136.371, -28.8479, 0.52 ) }
    dend_34 { pt3dadd( 110.495, -136.333, -29.0634, 0.81 ) }
    dend_34 { pt3dadd( 110.989, -136.308, -29.2073, 0.81 ) }
    dend_34 { pt3dadd( 112.558, -136.22, -29.6893, 0.37 ) }
    dend_34 { pt3dadd( 113.921, -136.12, -30.107, 0.29 ) }
    dend_34 { pt3dadd( 114.934, -136.004, -30.4601, 0.52 ) }
    dend_34 { pt3dadd( 115.771, -135.862, -30.758, 0.88 ) }
    dend_34 { pt3dadd( 116.176, -135.761, -30.9233, 1.18 ) }
    dend_34 { pt3dadd( 116.526, -135.635, -31.0993, 1.4 ) }
    dend_34 { pt3dadd( 117.291, -135.242, -31.5637, 0.88 ) }
    dend_34 { pt3dadd( 118.511, -134.463, -32.4243, 0.44 ) }
    dend_34 { pt3dadd( 119.024, -134.111, -32.803, 0.44 ) }
    dend_34 { pt3dadd( 119.7, -133.645, -33.299, 1.18 ) }
    dend_34 { pt3dadd( 120.622, -133.06, -33.8905, 1.4 ) }
    dend_34 { pt3dadd( 121.175, -132.751, -34.2032, 1.4 ) }
    dend_34 { pt3dadd( 121.728, -132.487, -34.4775, 1.18 ) }
    dend_34 { pt3dadd( 122.046, -132.357, -34.6026, 1.18 ) }
    dend_34 { pt3dadd( 123.376, -131.891, -35.0676, 0.29 ) }
    dend_34 { pt3dadd( 124.47, -131.537, -35.3698, 0.29 ) }
    dend_34 { pt3dadd( 125.419, -131.221, -35.5855, 0.29 ) }
    dend_34 { pt3dadd( 126.143, -130.959, -35.7426, 0.44 ) }
    dend_34 { pt3dadd( 126.8, -130.686, -35.8785, 0.37 ) }
    dend_34 { pt3dadd( 127.213, -130.497, -35.9526, 0.37 ) }
    dend_34 { pt3dadd( 128.341, -129.925, -36.1027, 1.33 ) }
    dend_34 { pt3dadd( 128.859, -129.612, -36.1647, 1.77 ) }
    dend_34 { pt3dadd( 129.509, -129.184, -36.2235, 1.55 ) }
    dend_34 { pt3dadd( 130.196, -128.719, -36.2715, 0.74 ) }
    dend_34 { pt3dadd( 130.885, -128.257, -36.315, 0.52 ) }
    dend_34 { pt3dadd( 131.595, -127.794, -36.3771, 0.29 ) }
    dend_34 { pt3dadd( 132.166, -127.431, -36.4321, 0.29 ) }
    dend_34 { pt3dadd( 132.682, -127.114, -36.4797, 0.66 ) }
    dend_34 { pt3dadd( 133.3, -126.735, -36.5446, 0.66 ) }
    dend_34 { pt3dadd( 134.137, -126.244, -36.6639, 0.29 ) }
    dend_34 { pt3dadd( 135.164, -125.673, -36.8347, 0.29 ) }
    dend_34 { pt3dadd( 135.95, -125.254, -36.9746, 0.29 ) }
    dend_34 { pt3dadd( 136.507, -124.972, -37.0719, 0.44 ) }
    dend_34 { pt3dadd( 137.323, -124.538, -37.2398, 1.33 ) }
    dend_34 { pt3dadd( 138.346, -123.968, -37.4677, 2.36 ) }
    dend_34 { pt3dadd( 138.665, -123.787, -37.5412, 2.36 ) }
    dend_34 { pt3dadd( 139.3, -123.421, -37.6714, 2.06 ) }
    dend_34 { pt3dadd( 140.202, -122.925, -37.8491, 0.66 ) }
    dend_34 { pt3dadd( 141.117, -122.42, -38.0162, 0.29 ) }
    dend_34 { pt3dadd( 141.77, -122.048, -38.1167, 0.29 ) }
    dend_34 { pt3dadd( 142.674, -121.503, -38.2151, 0.52 ) }
    dend_34 { pt3dadd( 143.252, -121.149, -38.2655, 0.66 ) }
    dend_34 { pt3dadd( 143.892, -120.756, -38.2956, 0.29 ) }
    dend_34 { pt3dadd( 144.202, -120.555, -38.2932, 0.29 ) }
    dend_34 { pt3dadd( 144.944, -120.043, -38.2228, 0.88 ) }
    dend_34 { pt3dadd( 145.398, -119.702, -38.1658, 1.03 ) }
    dend_34 { pt3dadd( 146.079, -119.155, -38.0658, 1.03 ) }
    dend_34 { pt3dadd( 146.557, -118.785, -38.0025, 0.74 ) }
    dend_34 { pt3dadd( 146.952, -118.507, -37.9492, 0.44 ) }
    dend_34 { pt3dadd( 147.559, -118.145, -37.8711, 0.37 ) }
    dend_34 { pt3dadd( 148.194, -117.836, -37.8235, 0.37 ) }
    dend_34 { pt3dadd( 148.811, -117.564, -37.8232, 0.59 ) }
    dend_34 { pt3dadd( 149.488, -117.257, -37.8658, 0.81 ) }
    dend_34 { pt3dadd( 149.88, -117.053, -37.912, 0.81 ) }
    dend_34 { pt3dadd( 150.218, -116.835, -37.965, 0.81 ) }
    dend_34 { pt3dadd( 151.143, -116.099, -38.1414, 0.37 ) }
    dend_34 { pt3dadd( 151.927, -115.34, -38.2934, 0.37 ) }
    dend_34 { pt3dadd( 152.476, -114.715, -38.3951, 0.74 ) }
    dend_34 { pt3dadd( 153.067, -113.978, -38.4973, 1.11 ) }
    dend_34 { pt3dadd( 153.694, -113.168, -38.5877, 0.66 ) }
    dend_34 { pt3dadd( 154.124, -112.608, -38.6327, 0.66 ) }
    dend_34 { pt3dadd( 154.627, -111.974, -38.6569, 0.81 ) }
    dend_34 { pt3dadd( 155.118, -111.409, -38.6583, 1.03 ) }
    dend_34 { pt3dadd( 155.666, -110.826, -38.6485, 0.88 ) }
    dend_34 { pt3dadd( 156.277, -110.19, -38.6266, 0.66 ) }
    dend_34 { pt3dadd( 156.796, -109.622, -38.5987, 0.29 ) }
    dend_34 { pt3dadd( 157.374, -108.955, -38.5475, 0.22 ) }
    dend_34 { pt3dadd( 157.882, -108.349, -38.485, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_34 { pt3dadd( 158.235, -107.901, -38.4221, 0.37 ) }
    dend_34 { pt3dadd( 158.742, -107.238, -38.3173, 0.37 ) }
    dend_34 { pt3dadd( 159.187, -106.681, -38.2259, 0.81 ) }
    dend_34 { pt3dadd( 159.624, -106.137, -38.1437, 0.81 ) }
    dend_34 { pt3dadd( 160.19, -105.426, -38.0531, 0.88 ) }
    dend_34 { pt3dadd( 160.897, -104.546, -37.9672, 0.29 ) }
    dend_34 { pt3dadd( 161.394, -103.93, -37.9147, 0.29 ) }
    dend_34 { pt3dadd( 161.837, -103.392, -37.897, 0.37 ) }
    dend_34 { pt3dadd( 162.628, -102.429, -37.9028, 0.52 ) }
    dend_34 { pt3dadd( 163.171, -101.742, -37.9319, 0.66 ) }
    dend_34 { pt3dadd( 163.565, -101.226, -37.9645, 0.59 ) }
    dend_34 { pt3dadd( 164.077, -100.556, -38.0246, 1.62 ) }
    dend_34 { pt3dadd( 164.8, -99.5595, -38.1142, 1.99 ) }
    dend_34 { pt3dadd( 165.471, -98.6266, -38.2098, 1.69 ) }
    dend_34 { pt3dadd( 165.952, -98.0496, -38.2859, 1.77 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 15/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 64.4611, -110.369, -1.1146, 0.74 ) }
    dend_29 { pt3dadd( 65.0083, -112.501, -0.825179, 0.74 ) }
    dend_29 { pt3dadd( 65.3739, -113.756, -0.660768, 0.74 ) }
    dend_29 { pt3dadd( 65.7903, -115.016, -0.508709, 0.74 ) }
    dend_29 { pt3dadd( 66.2292, -116.205, -0.377057, 0.74 ) }
    dend_29 { pt3dadd( 66.779, -117.537, -0.222096, 0.74 ) }
    dend_29 { pt3dadd( 67.1202, -118.313, -0.131689, 0.88 ) }
    dend_29 { pt3dadd( 67.5179, -119.06, -0.0546743, 0.88 ) }
    dend_29 { pt3dadd( 68.1434, -120.153, 0.0589452, 0.59 ) }
    dend_29 { pt3dadd( 68.6226, -121.003, 0.139417, 0.37 ) }
    dend_29 { pt3dadd( 69.1769, -122.023, 0.218273, 0.37 ) }
    dend_29 { pt3dadd( 69.6091, -122.847, 0.263373, 0.59 ) }
    dend_29 { pt3dadd( 70.0337, -123.709, 0.307628, 0.66 ) }
    dend_29 { pt3dadd( 70.4578, -124.71, 0.349947, 0.66 ) }
    dend_29 { pt3dadd( 70.8141, -125.728, 0.380589, 0.81 ) }
    dend_29 { pt3dadd( 71.0036, -126.393, 0.391107, 0.81 ) }
    dend_29 { pt3dadd( 71.1584, -127.082, 0.391107, 0.52 ) }
    dend_29 { pt3dadd( 71.2774, -127.695, 0.383148, 0.52 ) }
    dend_29 { pt3dadd( 71.5382, -129.272, 0.350608, 0.74 ) }
    dend_29 { pt3dadd( 71.7075, -130.415, 0.347227, 0.96 ) }
    dend_29 { pt3dadd( 71.8429, -131.4, 0.371194, 0.96 ) }
    dend_29 { pt3dadd( 71.9451, -132.2, 0.412434, 0.96 ) }
    dend_29 { pt3dadd( 72.0446, -133.186, 0.486459, 0.66 ) }
    dend_29 { pt3dadd( 72.0752, -133.795, 0.547563, 0.66 ) }
    dend_29 { pt3dadd( 72.0444, -134.74, 0.672964, 1.11 ) }
    dend_29 { pt3dadd( 71.9587, -135.358, 0.763604, 1.11 ) }
    dend_29 { pt3dadd( 71.7177, -136.312, 0.907093, 0.81 ) }
    dend_29 { pt3dadd( 71.3296, -137.438, 1.06489, 0.44 ) }
    dend_29 { pt3dadd( 70.8883, -138.487, 1.1943, 0.44 ) }
    dend_29 { pt3dadd( 70.5542, -139.224, 1.25594, 0.44 ) }
    dend_29 { pt3dadd( 70.1394, -140.112, 1.29013, 0.66 ) }
    dend_29 { pt3dadd( 69.8004, -140.859, 1.30267, 0.44 ) }
    dend_29 { pt3dadd( 69.3684, -141.825, 1.31353, 0.81 ) }
    dend_29 { pt3dadd( 69.0931, -142.491, 1.32486, 0.96 ) }
    dend_29 { pt3dadd( 68.8368, -143.21, 1.34079, 0.52 ) }
    dend_29 { pt3dadd( 68.6064, -143.961, 1.34708, 0.44 ) }
    dend_29 { pt3dadd( 68.292, -145.087, 1.31959, 0.37 ) }
    dend_29 { pt3dadd( 68.0597, -145.971, 1.27431, 0.37 ) }
    dend_29 { pt3dadd( 67.806, -146.942, 1.2177, 0.52 ) }
    dend_29 { pt3dadd( 67.5067, -148.151, 1.14243, 0.59 ) }
    dend_29 { pt3dadd( 67.2355, -149.315, 1.0651, 0.59 ) }
    dend_29 { pt3dadd( 67.0207, -150.4, 0.988898, 0.66 ) }
    dend_29 { pt3dadd( 66.8514, -151.58, 0.902603, 0.74 ) }
    dend_29 { pt3dadd( 66.7838, -152.384, 0.85628, 0.59 ) }
    dend_29 { pt3dadd( 66.745, -153.22, 0.831021, 0.44 ) }
    dend_29 { pt3dadd( 66.7349, -153.537, 0.843326, 0.74 ) }
    dend_29 { pt3dadd( 66.7325, -154.087, 0.909879, 0.74 ) }
    dend_29 { pt3dadd( 66.7594, -154.755, 1.02339, 0.44 ) }
    dend_29 { pt3dadd( 66.8463, -155.751, 1.19413, 0.29 ) }
    dend_29 { pt3dadd( 66.9548, -156.494, 1.31088, 0.37 ) }
    dend_29 { pt3dadd( 67.0792, -157.17, 1.41351, 0.59 ) }
    dend_29 { pt3dadd( 67.2684, -158.091, 1.54182, 0.59 ) }
    dend_29 { pt3dadd( 67.4699, -159.027, 1.61103, 0.74 ) }
    dend_29 { pt3dadd( 67.5809, -159.531, 1.64276, 0.81 ) }
    dend_29 { pt3dadd( 67.7844, -160.475, 1.66458, 0.66 ) }
    dend_29 { pt3dadd( 67.902, -161.077, 1.66129, 0.66 ) }
    dend_29 { pt3dadd( 67.9843, -161.562, 1.64764, 0.66 ) }
    dend_29 { pt3dadd( 68.1539, -162.868, 1.60869, 0.59 ) }
    dend_29 { pt3dadd( 68.2679, -164.224, 1.56776, 0.66 ) }
    dend_29 { pt3dadd( 68.3112, -165.213, 1.53976, 0.74 ) }
    dend_29 { pt3dadd( 68.3119, -166.137, 1.51826, 0.74 ) }
    dend_29 { pt3dadd( 68.3136, -166.701, 1.51217, 0.74 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 77/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -27.9026, -85.2543, -7.78445, 0.81 ) }
    dend_25 { pt3dadd( -27.2179, -86.4643, -8.9741, 0.81 ) }
    dend_25 { pt3dadd( -26.9769, -87.1165, -9.43959, 0.74 ) }
    dend_25 { pt3dadd( -26.7471, -87.8907, -9.82696, 0.59 ) }
    dend_25 { pt3dadd( -26.5864, -88.4295, -10.0228, 0.59 ) }
    dend_25 { pt3dadd( -26.329, -89.3279, -10.2764, 0.74 ) }
    dend_25 { pt3dadd( -26.0547, -90.444, -10.5533, 0.66 ) }
    dend_25 { pt3dadd( -25.8681, -91.5483, -10.7161, 0.66 ) }
    dend_25 { pt3dadd( -25.7111, -92.5607, -10.8838, 0.74 ) }
    dend_25 { pt3dadd( -25.5133, -93.6602, -11.0597, 0.74 ) }
    dend_25 { pt3dadd( -25.3558, -94.394, -11.2028, 0.81 ) }
    dend_25 { pt3dadd( -24.9771, -95.8574, -11.5341, 0.96 ) }
    dend_25 { pt3dadd( -24.7936, -96.5291, -11.7183, 1.18 ) }
    dend_25 { pt3dadd( -24.3643, -98.2344, -12.2312, 0.52 ) }
    dend_25 { pt3dadd( -24.111, -99.334, -12.6158, 0.74 ) }
    dend_25 { pt3dadd( -23.8664, -100.313, -13.0426, 0.88 ) }
    dend_25 { pt3dadd( -23.6073, -101.147, -13.5195, 0.59 ) }
    dend_25 { pt3dadd( -23.3303, -101.906, -14.0269, 0.59 ) }
    dend_25 { pt3dadd( -23.062, -102.631, -14.5506, 1.18 ) }
    dend_25 { pt3dadd( -22.7883, -103.461, -15.1391, 1.18 ) }
    dend_25 { pt3dadd( -22.2899, -105.118, -16.2911, 0.59 ) }
    dend_25 { pt3dadd( -21.921, -106.411, -17.13, 0.74 ) }
    dend_25 { pt3dadd( -21.7421, -107.139, -17.63, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_25 { pt3dadd( -21.5591, -108.156, -18.3345, 0.66 ) }
    dend_25 { pt3dadd( -21.4913, -109.177, -18.9999, 0.88 ) }
    dend_25 { pt3dadd( -21.5518, -109.844, -19.3681, 1.03 ) }
    dend_25 { pt3dadd( -21.7612, -110.616, -19.7316, 0.74 ) }
    dend_25 { pt3dadd( -22.3855, -112.265, -20.5261, 0.44 ) }
    dend_25 { pt3dadd( -22.6054, -112.821, -20.8529, 0.44 ) }
    dend_25 { pt3dadd( -22.8264, -113.444, -21.2595, 0.81 ) }
    dend_25 { pt3dadd( -22.9931, -114.244, -21.7913, 1.18 ) }
    dend_25 { pt3dadd( -22.9943, -114.944, -22.2175, 1.18 ) }
    dend_25 { pt3dadd( -22.7717, -115.877, -22.7241, 0.81 ) }
    dend_25 { pt3dadd( -22.161, -117.278, -23.3587, 0.52 ) }
    dend_25 { pt3dadd( -21.7329, -118.031, -23.6762, 0.88 ) }
    dend_25 { pt3dadd( -20.9993, -119.113, -24.1236, 1.03 ) }
    dend_25 { pt3dadd( -20.4135, -119.888, -24.4189, 1.03 ) }
    dend_25 { pt3dadd( -19.8303, -120.637, -24.6675, 1.25 ) }
    dend_25 { pt3dadd( -19.4822, -121.105, -24.7997, 1.92 ) }
    dend_25 { pt3dadd( -19.0628, -121.741, -24.9697, 1.55 ) }
    dend_25 { pt3dadd( -18.2898, -123.206, -25.3213, 0.52 ) }
    dend_25 { pt3dadd( -18.0639, -123.81, -25.4692, 0.44 ) }
    dend_25 { pt3dadd( -17.7962, -124.75, -25.7316, 0.37 ) }
    dend_25 { pt3dadd( -17.6859, -125.226, -25.8785, 0.52 ) }
    dend_25 { pt3dadd( -17.5696, -125.763, -26.0676, 0.52 ) }
    dend_25 { pt3dadd( -17.3222, -126.94, -26.5157, 0.44 ) }
    dend_25 { pt3dadd( -17.0519, -128.221, -26.9983, 0.96 ) }
    dend_25 { pt3dadd( -16.7679, -129.514, -27.4342, 1.69 ) }
    dend_25 { pt3dadd( -16.5516, -130.453, -27.7453, 1.92 ) }
    dend_25 { pt3dadd( -16.3114, -131.478, -28.0609, 1.92 ) }
    dend_25 { pt3dadd( -16.0925, -132.53, -28.3638, 1.92 ) }
    dend_25 { pt3dadd( -15.9152, -133.544, -28.6388, 1.62 ) }
    dend_25 { pt3dadd( -15.7159, -135.096, -28.9409, 0.37 ) }
    dend_25 { pt3dadd( -15.5577, -137.07, -29.2147, 0.29 ) }
    dend_25 { pt3dadd( -15.5309, -137.612, -29.2787, 0.29 ) }
    dend_25 { pt3dadd( -15.507, -138.307, -29.3544, 0.29 ) }
    dend_25 { pt3dadd( -15.4843, -138.693, -29.3969, 0.29 ) }
    dend_25 { pt3dadd( -15.4025, -139.74, -29.5896, 0.88 ) }
    dend_25 { pt3dadd( -15.3537, -140.344, -29.7472, 1.11 ) }
    dend_25 { pt3dadd( -15.3188, -140.777, -29.8641, 1.11 ) }
    dend_25 { pt3dadd( -15.2589, -141.699, -30.1528, 0.29 ) }
    dend_25 { pt3dadd( -15.2284, -142.56, -30.4279, 0.29 ) }
    dend_25 { pt3dadd( -15.2596, -143.853, -30.845, 0.44 ) }
    dend_25 { pt3dadd( -15.3229, -144.595, -31.1013, 0.66 ) }
    dend_25 { pt3dadd( -15.3961, -145.143, -31.2929, 0.66 ) }
    dend_25 { pt3dadd( -15.5714, -146.076, -31.6133, 0.37 ) }
    dend_25 { pt3dadd( -15.858, -147.285, -32.0092, 0.37 ) }
    dend_25 { pt3dadd( -16.115, -148.428, -32.3383, 0.59 ) }
    dend_25 { pt3dadd( -16.2929, -149.445, -32.58, 1.03 ) }
    dend_25 { pt3dadd( -16.3584, -149.949, -32.6928, 1.03 ) }
    dend_25 { pt3dadd( -16.4468, -150.908, -32.89, 0.74 ) }
    dend_25 { pt3dadd( -16.4924, -151.88, -33.1031, 0.29 ) }
    dend_25 { pt3dadd( -16.4914, -152.922, -33.3546, 0.29 ) }
    dend_25 { pt3dadd( -16.4447, -154.051, -33.619, 1.25 ) }
    dend_25 { pt3dadd( -16.3909, -154.801, -33.7816, 2.06 ) }
    dend_25 { pt3dadd( -16.3443, -155.326, -33.8937, 2.06 ) }
    dend_25 { pt3dadd( -16.2477, -156.464, -34.1282, 1.4 ) }
    dend_25 { pt3dadd( -16.1953, -157.685, -34.3684, 0.81 ) }
    dend_25 { pt3dadd( -16.2194, -158.589, -34.5388, 0.44 ) }
    dend_25 { pt3dadd( -16.2572, -159.342, -34.6646, 0.59 ) }
    dend_25 { pt3dadd( -16.2855, -160.04, -34.768, 0.59 ) }
    dend_25 { pt3dadd( -16.2886, -160.932, -34.8755, 0.59 ) }
    dend_25 { pt3dadd( -16.2279, -161.953, -34.9525, 0.44 ) }
    dend_25 { pt3dadd( -16.1144, -162.803, -35.0001, 0.29 ) }
    dend_25 { pt3dadd( -15.9879, -163.522, -35.0609, 0.74 ) }
    dend_25 { pt3dadd( -15.837, -164.275, -35.1489, 0.74 ) }
    dend_25 { pt3dadd( -15.6303, -165.158, -35.296, 0.52 ) }
    dend_25 { pt3dadd( -15.4398, -165.829, -35.4354, 0.52 ) }
    dend_25 { pt3dadd( -15.2391, -166.466, -35.5807, 0.44 ) }
    dend_25 { pt3dadd( -14.9593, -167.413, -35.7946, 0.44 ) }
    dend_25 { pt3dadd( -14.7892, -168.189, -35.9677, 0.37 ) }
    dend_25 { pt3dadd( -14.6638, -169.007, -36.1612, 0.37 ) }
    dend_25 { pt3dadd( -14.5951, -169.54, -36.2867, 0.59 ) }
    dend_25 { pt3dadd( -14.4447, -170.548, -36.5141, 0.59 ) }
    dend_25 { pt3dadd( -14.3216, -171.13, -36.6536, 0.59 ) }
    dend_25 { pt3dadd( -14.0719, -172.018, -36.8592, 0.37 ) }
    dend_25 { pt3dadd( -13.7213, -173.083, -37.1072, 0.29 ) }
    dend_25 { pt3dadd( -13.4911, -173.729, -37.2585, 1.18 ) }
    dend_25 { pt3dadd( -13.2759, -174.288, -37.4449, 1.4 ) }
    dend_25 { pt3dadd( -13.0023, -174.98, -37.7252, 1.4 ) }
    dend_25 { pt3dadd( -12.8091, -175.46, -37.9326, 1.4 ) }
    dend_25 { pt3dadd( -12.5564, -176.039, -38.1929, 0.88 ) }
    dend_25 { pt3dadd( -12.2861, -176.617, -38.436, 0.66 ) }
    dend_25 { pt3dadd( -11.5607, -178.142, -39.0355, 0.37 ) }
    dend_25 { pt3dadd( -11.1172, -179.074, -39.3567, 0.29 ) }
    dend_25 { pt3dadd( -10.8576, -179.615, -39.5086, 0.29 ) }
    dend_25 { pt3dadd( -10.6368, -180.053, -39.6148, 0.29 ) }
    dend_25 { pt3dadd( -10.137, -181.003, -39.789, 1.03 ) }
    dend_25 { pt3dadd( -9.80125, -181.566, -39.8439, 1.47 ) }
    dend_25 { pt3dadd( -9.47958, -182.038, -39.8439, 1.62 ) }
    dend_25 { pt3dadd( -9.10835, -182.561, -39.8417, 1.33 ) }
    dend_25 { pt3dadd( -8.73225, -183.124, -39.8378, 0.81 ) }
    dend_25 { pt3dadd( -8.36258, -183.745, -39.8345, 0.44 ) }
    dend_25 { pt3dadd( -7.80353, -184.793, -39.8374, 0.29 ) }
    dend_25 { pt3dadd( -7.42719, -185.59, -39.8451, 0.88 ) }
    dend_25 { pt3dadd( -7.06188, -186.497, -39.8587, 0.96 ) }
    dend_25 { pt3dadd( -6.83711, -187.148, -39.8798, 1.25 ) }
    dend_25 { pt3dadd( -6.6744, -187.736, -39.9039, 1.4 ) }
    dend_25 { pt3dadd( -6.56232, -188.29, -39.9298, 1.4 ) }
    dend_25 { pt3dadd( -6.46054, -189.134, -39.972, 1.03 ) }
    dend_25 { pt3dadd( -6.39585, -190.202, -40.0412, 0.29 ) }
    dend_25 { pt3dadd( -6.39401, -191.595, -40.1458, 0.29 ) }
    dend_25 { pt3dadd( -6.45504, -192.531, -40.2175, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_25 { pt3dadd( -6.52786, -193.133, -40.2622, 0.44 ) }
    dend_25 { pt3dadd( -6.68283, -193.935, -40.3181, 0.44 ) }
    dend_25 { pt3dadd( -6.90556, -194.742, -40.3953, 0.52 ) }
    dend_25 { pt3dadd( -7.20979, -195.602, -40.5, 0.44 ) }
    dend_25 { pt3dadd( -7.48941, -196.311, -40.6105, 0.29 ) }
    dend_25 { pt3dadd( -7.6643, -196.743, -40.6945, 0.44 ) }
    dend_25 { pt3dadd( -7.97782, -197.551, -40.8644, 0.44 ) }
    dend_25 { pt3dadd( -8.4136, -198.759, -41.173, 1.55 ) }
    dend_25 { pt3dadd( -8.69964, -199.693, -41.4322, 2.43 ) }
    dend_25 { pt3dadd( -8.84085, -200.258, -41.6025, 2.73 ) }
    dend_25 { pt3dadd( -8.92717, -200.704, -41.7383, 2.43 ) }
    dend_25 { pt3dadd( -9.07535, -201.715, -42.0317, 1.69 ) }
    dend_25 { pt3dadd( -9.26151, -203.363, -42.4741, 0.52 ) }
    dend_25 { pt3dadd( -9.31291, -203.889, -42.593, 0.52 ) }
    dend_25 { pt3dadd( -9.36145, -204.341, -42.6813, 0.88 ) }
    dend_25 { pt3dadd( -9.48096, -205.163, -42.8511, 0.59 ) }
    dend_25 { pt3dadd( -9.58026, -205.844, -43.0, 0.59 ) }
    dend_25 { pt3dadd( -9.73823, -206.811, -43.222, 0.66 ) }
    dend_25 { pt3dadd( -9.81957, -207.302, -43.3319, 0.66 ) }
    dend_25 { pt3dadd( -9.90418, -207.884, -43.4792, 0.52 ) }
    dend_25 { pt3dadd( -10.0376, -209.096, -43.8358, 0.29 ) }
    dend_25 { pt3dadd( -10.0881, -209.924, -44.0969, 0.29 ) }
    dend_25 { pt3dadd( -10.0896, -210.126, -44.16, 0.59 ) }
    dend_25 { pt3dadd( -10.0664, -210.792, -44.3507, 0.59 ) }
    dend_25 { pt3dadd( -10.0419, -211.458, -44.5168, 0.29 ) }
    dend_25 { pt3dadd( -10.0321, -212.526, -44.7571, 0.29 ) }
    dend_25 { pt3dadd( -10.0202, -213.303, -44.8882, 0.74 ) }
    dend_25 { pt3dadd( -10.042, -213.797, -44.9994, 0.74 ) }
    dend_25 { pt3dadd( -10.1004, -214.396, -45.1503, 0.74 ) }
    dend_25 { pt3dadd( -10.2065, -215.009, -45.3137, 0.59 ) }
    dend_25 { pt3dadd( -10.4146, -216.0, -45.5813, 0.29 ) }
    dend_25 { pt3dadd( -10.6951, -217.329, -45.9325, 0.29 ) }
    dend_25 { pt3dadd( -10.9784, -218.659, -46.2855, 0.37 ) }
    dend_25 { pt3dadd( -11.0788, -219.135, -46.4058, 0.37 ) }
    dend_25 { pt3dadd( -11.2346, -219.923, -46.5834, 0.29 ) }
    dend_25 { pt3dadd( -11.3947, -220.815, -46.7587, 0.44 ) }
    dend_25 { pt3dadd( -11.4565, -221.217, -46.8143, 0.59 ) }
    dend_25 { pt3dadd( -11.5201, -221.773, -46.8649, 0.44 ) }
    dend_25 { pt3dadd( -11.5117, -222.361, -46.8925, 0.37 ) }
    dend_25 { pt3dadd( -11.4572, -223.046, -46.937, 0.37 ) }
    dend_25 { pt3dadd( -11.3801, -223.646, -46.9842, 0.52 ) }
    dend_25 { pt3dadd( -11.2956, -224.242, -47.0525, 0.74 ) }
    dend_25 { pt3dadd( -11.1676, -225.096, -47.2078, 0.29 ) }
    dend_25 { pt3dadd( -10.9853, -226.251, -47.4752, 1.11 ) }
    dend_25 { pt3dadd( -10.9174, -226.691, -47.5904, 1.33 ) }
    dend_25 { pt3dadd( -10.8579, -227.134, -47.7157, 1.33 ) }
    dend_25 { pt3dadd( -10.799, -227.859, -47.9281, 1.03 ) }
    dend_25 { pt3dadd( -10.7989, -228.906, -48.2571, 0.59 ) }
    dend_25 { pt3dadd( -10.8699, -229.492, -48.4473, 0.37 ) }
    dend_25 { pt3dadd( -11.0334, -230.122, -48.6396, 0.59 ) }
    dend_25 { pt3dadd( -11.1311, -230.418, -48.7317, 0.59 ) }
    dend_25 { pt3dadd( -11.3758, -231.03, -48.9116, 0.29 ) }
    dend_25 { pt3dadd( -11.6381, -231.591, -49.0465, 0.29 ) }
    dend_25 { pt3dadd( -11.856, -232.061, -49.1346, 0.29 ) }
    dend_25 { pt3dadd( -12.0171, -232.51, -49.2804, 0.29 ) }
    dend_25 { pt3dadd( -12.2802, -233.318, -49.6251, 0.88 ) }
    dend_25 { pt3dadd( -12.3503, -233.564, -49.7373, 1.18 ) }
    dend_25 { pt3dadd( -12.4153, -233.831, -49.8676, 1.18 ) }
    dend_25 { pt3dadd( -12.5687, -234.493, -50.2007, 0.74 ) }
    dend_25 { pt3dadd( -12.8705, -235.848, -50.9025, 0.29 ) }
    dend_25 { pt3dadd( -13.0156, -236.475, -51.2175, 0.29 ) }
    dend_25 { pt3dadd( -13.2138, -237.263, -51.5859, 0.29 ) }
    dend_25 { pt3dadd( -13.455, -238.172, -51.9991, 0.96 ) }
    dend_25 { pt3dadd( -13.5927, -238.661, -52.2067, 1.11 ) }
    dend_25 { pt3dadd( -13.8293, -239.493, -52.5135, 0.74 ) }
    dend_25 { pt3dadd( -14.0009, -240.219, -52.7285, 0.59 ) }
    dend_25 { pt3dadd( -14.0677, -240.587, -52.8267, 0.81 ) }
    dend_25 { pt3dadd( -14.2044, -241.387, -53.0191, 0.81 ) }
    dend_25 { pt3dadd( -14.3276, -242.073, -53.1582, 0.44 ) }
    dend_25 { pt3dadd( -14.513, -243.012, -53.3497, 0.29 ) }
    dend_25 { pt3dadd( -14.7362, -243.984, -53.5723, 0.29 ) }
    dend_25 { pt3dadd( -15.0231, -245.174, -53.8789, 1.62 ) }
    dend_25 { pt3dadd( -15.1331, -245.695, -54.0155, 1.84 ) }
    dend_25 { pt3dadd( -15.2001, -246.169, -54.1335, 1.99 ) }
    dend_25 { pt3dadd( -15.2937, -246.992, -54.3857, 1.77 ) }
    dend_25 { pt3dadd( -15.389, -247.777, -54.6584, 1.11 ) }
    dend_25 { pt3dadd( -15.5068, -248.658, -54.9757, 0.44 ) }
    dend_25 { pt3dadd( -15.6054, -249.492, -55.2838, 0.44 ) }
    dend_25 { pt3dadd( -15.7002, -250.564, -55.6486, 0.37 ) }
    dend_25 { pt3dadd( -15.7664, -252.003, -56.0643, 0.29 ) }
    dend_25 { pt3dadd( -15.7808, -252.491, -56.1927, 0.29 ) }
    dend_25 { pt3dadd( -15.8075, -253.51, -56.4434, 0.66 ) }
    dend_25 { pt3dadd( -15.8394, -254.163, -56.6173, 0.81 ) }
    dend_25 { pt3dadd( -15.889, -254.975, -56.8487, 0.37 ) }
    dend_25 { pt3dadd( -15.9307, -256.171, -57.1512, 0.29 ) }
    dend_25 { pt3dadd( -15.8807, -257.819, -57.4877, 1.4 ) }
    dend_25 { pt3dadd( -15.8401, -258.371, -57.5858, 1.99 ) }
    dend_25 { pt3dadd( -15.7769, -259.027, -57.6767, 2.21 ) }
    dend_25 { pt3dadd( -15.6931, -259.867, -57.7441, 1.47 ) }
    dend_25 { pt3dadd( -15.5227, -261.305, -57.7312, 0.29 ) }
    dend_25 { pt3dadd( -15.3986, -262.034, -57.6469, 0.29 ) }
    dend_25 { pt3dadd( -15.1112, -263.083, -57.3797, 0.52 ) }
    dend_25 { pt3dadd( -14.9178, -263.629, -57.203, 0.66 ) }
    dend_25 { pt3dadd( -14.5841, -264.386, -56.9021, 0.44 ) }
    dend_25 { pt3dadd( -14.0481, -265.463, -56.4364, 0.37 ) }
    dend_25 { pt3dadd( -13.6305, -266.201, -56.1301, 0.37 ) }
    dend_25 { pt3dadd( -12.9264, -267.297, -55.5848, 1.25 ) }
    dend_25 { pt3dadd( -12.6689, -267.662, -55.389, 1.84 ) }
    dend_25 { pt3dadd( -12.1842, -268.33, -54.9897, 1.92 ) }
    dend_25 { pt3dadd( -11.5714, -269.126, -54.4714, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_25 { pt3dadd( -11.0286, -269.827, -54.0088, 1.11 ) }
    dend_25 { pt3dadd( -9.75397, -271.558, -52.9116, 0.29 ) }
    dend_25 { pt3dadd( -9.21129, -272.315, -52.4269, 0.29 ) }
    dend_25 { pt3dadd( -8.42562, -273.362, -51.7152, 0.29 ) }
    dend_25 { pt3dadd( -7.96163, -273.959, -51.2922, 0.29 ) }
    dend_25 { pt3dadd( -7.39013, -274.67, -50.7933, 0.52 ) }
    dend_25 { pt3dadd( -7.00746, -275.154, -50.4846, 0.66 ) }
    dend_25 { pt3dadd( -6.06596, -276.355, -49.8243, 0.29 ) }
    dend_25 { pt3dadd( -5.41346, -277.17, -49.372, 1.11 ) }
    dend_25 { pt3dadd( -4.92061, -277.785, -49.04, 1.11 ) }
    dend_25 { pt3dadd( -3.83343, -279.215, -48.2172, 0.22 ) }
    dend_25 { pt3dadd( -3.48454, -279.674, -47.9343, 0.44 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -27.9026, -85.2543, -7.78445, 0.96 ) }
    dend_22 { pt3dadd( -28.9432, -86.3792, -7.67699, 0.96 ) }
    dend_22 { pt3dadd( -29.8123, -87.2716, -7.59863, 0.96 ) }
    dend_22 { pt3dadd( -30.5538, -87.9781, -7.52213, 1.18 ) }
    dend_22 { pt3dadd( -31.2357, -88.5688, -7.4827, 1.18 ) }
    dend_22 { pt3dadd( -32.2734, -89.3782, -7.47623, 0.74 ) }
    dend_22 { pt3dadd( -33.0605, -89.9196, -7.50815, 0.74 ) }
    dend_22 { pt3dadd( -33.6471, -90.2703, -7.59148, 0.74 ) }
    dend_22 { pt3dadd( -34.1854, -90.5378, -7.71774, 0.74 ) }
    dend_22 { pt3dadd( -35.2089, -91.0387, -8.00548, 0.66 ) }
    dend_22 { pt3dadd( -35.6597, -91.3229, -8.15406, 0.66 ) }
    dend_22 { pt3dadd( -36.2143, -91.8024, -8.34068, 0.66 ) }
    dend_22 { pt3dadd( -36.6622, -92.2819, -8.47966, 0.81 ) }
    dend_22 { pt3dadd( -37.1231, -92.8095, -8.59792, 0.96 ) }
    dend_22 { pt3dadd( -37.8002, -93.5931, -8.73088, 1.11 ) }
    dend_22 { pt3dadd( -38.4886, -94.372, -8.80519, 1.11 ) }
    dend_22 { pt3dadd( -39.0407, -95.0078, -8.85552, 1.33 ) }
    dend_22 { pt3dadd( -39.5211, -95.5479, -8.90029, 1.47 ) }
    dend_22 { pt3dadd( -40.226, -96.246, -8.96738, 1.47 ) }
    dend_22 { pt3dadd( -40.8718, -96.7883, -9.02881, 1.4 ) }
    dend_22 { pt3dadd( -41.6028, -97.2673, -9.08545, 1.25 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 33/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 165.952, -98.0496, -38.2859, 0.52 ) }
    dend_36 { pt3dadd( 166.971, -97.141, -38.4156, 0.52 ) }
    dend_36 { pt3dadd( 167.548, -96.5425, -38.4971, 0.29 ) }
    dend_36 { pt3dadd( 168.182, -95.8235, -38.5418, 0.22 ) }
    dend_36 { pt3dadd( 168.835, -95.041, -38.6449, 0.22 ) }
    dend_36 { pt3dadd( 169.421, -94.3239, -38.7783, 0.22 ) }
    dend_36 { pt3dadd( 170.029, -93.5347, -38.9375, 0.22 ) }
    dend_36 { pt3dadd( 170.621, -92.6713, -39.1058, 0.88 ) }
    dend_36 { pt3dadd( 171.061, -91.944, -39.247, 1.18 ) }
    dend_36 { pt3dadd( 171.822, -90.5657, -39.5002, 1.47 ) }
    dend_36 { pt3dadd( 172.083, -90.0669, -39.5844, 1.55 ) }
    dend_36 { pt3dadd( 172.983, -88.3454, -39.8727, 0.22 ) }
    dend_36 { pt3dadd( 173.504, -87.4315, -40.0397, 0.22 ) }
    dend_36 { pt3dadd( 174.193, -86.3491, -40.2101, 0.88 ) }
    dend_36 { pt3dadd( 174.693, -85.6111, -40.3168, 1.4 ) }
    dend_36 { pt3dadd( 175.001, -85.1766, -40.3566, 1.25 ) }
    dend_36 { pt3dadd( 175.5, -84.5021, -40.4182, 0.81 ) }
    dend_36 { pt3dadd( 176.377, -83.3824, -40.5341, 0.22 ) }
    dend_36 { pt3dadd( 177.646, -81.8401, -40.7085, 0.22 ) }
    dend_36 { pt3dadd( 178.429, -80.9542, -40.8162, 0.66 ) }
    dend_36 { pt3dadd( 178.93, -80.4035, -40.8831, 0.81 ) }
    dend_36 { pt3dadd( 179.245, -80.0449, -40.922, 0.66 ) }
    dend_36 { pt3dadd( 179.544, -79.683, -40.9481, 0.52 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 56/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 165.952, -98.0496, -38.2859, 0.29 ) }
    dend_35 { pt3dadd( 165.981, -95.9665, -38.2619, 0.29 ) }
    dend_35 { pt3dadd( 166.018, -94.4949, -38.2473, 0.29 ) }
    dend_35 { pt3dadd( 166.034, -93.3999, -38.2306, 0.52 ) }
    dend_35 { pt3dadd( 166.033, -92.775, -38.2136, 0.66 ) }
    dend_35 { pt3dadd( 166.034, -91.5918, -38.1742, 0.22 ) }
    dend_35 { pt3dadd( 166.031, -90.8136, -38.1462, 0.59 ) }
    dend_35 { pt3dadd( 166.018, -90.0086, -38.1035, 0.74 ) }
    dend_35 { pt3dadd( 166.008, -89.3408, -38.0567, 0.81 ) }
    dend_35 { pt3dadd( 166.007, -88.3271, -37.9714, 0.52 ) }
    dend_35 { pt3dadd( 166.032, -87.1144, -37.8553, 0.22 ) }
    dend_35 { pt3dadd( 166.065, -86.281, -37.769, 0.29 ) }
    dend_35 { pt3dadd( 166.121, -85.5996, -37.6999, 0.29 ) }
    dend_35 { pt3dadd( 166.211, -84.9317, -37.6383, 0.15 ) }
    dend_35 { pt3dadd( 166.383, -84.0539, -37.571, 0.29 ) }
    dend_35 { pt3dadd( 166.524, -83.4448, -37.5338, 0.37 ) }
    dend_35 { pt3dadd( 166.697, -82.7312, -37.4994, 0.22 ) }
    dend_35 { pt3dadd( 166.928, -81.7703, -37.4688, 0.22 ) }
    dend_35 { pt3dadd( 167.109, -80.935, -37.4571, 0.74 ) }
    dend_35 { pt3dadd( 167.228, -80.3158, -37.4527, 0.88 ) }
    dend_35 { pt3dadd( 167.361, -79.5614, -37.4493, 0.52 ) }
    dend_35 { pt3dadd( 167.566, -78.3136, -37.4493, 0.22 ) }
    dend_35 { pt3dadd( 167.673, -77.5444, -37.4493, 0.44 ) }
    dend_35 { pt3dadd( 167.712, -77.0814, -37.4493, 0.44 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 80/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 68.3136, -166.701, 1.51217, 0.37 ) }
    dend_31 { pt3dadd( 68.9112, -167.771, 1.4089, 0.37 ) }
    dend_31 { pt3dadd( 69.3861, -168.549, 1.3493, 0.52 ) }
    dend_31 { pt3dadd( 69.7998, -169.186, 1.31007, 0.59 ) }
    dend_31 { pt3dadd( 70.4486, -170.17, 1.26158, 0.22 ) }
    dend_31 { pt3dadd( 70.855, -170.77, 1.23739, 0.22 ) }
    dend_31 { pt3dadd( 71.2244, -171.309, 1.21911, 0.44 ) }
    dend_31 { pt3dadd( 71.6938, -171.941, 1.22706, 0.44 ) }
    dend_31 { pt3dadd( 72.1389, -172.482, 1.23373, 0.37 ) }
    dend_31 { pt3dadd( 72.6714, -173.052, 1.24022, 0.29 ) }
    dend_31 { pt3dadd( 73.218, -173.569, 1.23907, 0.52 ) }
    dend_31 { pt3dadd( 73.5967, -173.906, 1.23395, 0.74 ) }
    dend_31 { pt3dadd( 74.1705, -174.423, 1.21986, 0.74 ) }
    dend_31 { pt3dadd( 74.7976, -175.005, 1.20092, 0.44 ) }
    dend_31 { pt3dadd( 75.1803, -175.359, 1.18775, 0.44 ) }
    dend_31 { pt3dadd( 75.8814, -175.998, 1.16288, 0.29 ) }
    dend_31 { pt3dadd( 76.4061, -176.487, 1.13657, 0.29 ) }
    dend_31 { pt3dadd( 76.7149, -176.784, 1.1181, 0.66 ) }
    dend_31 { pt3dadd( 77.0708, -177.147, 1.09863, 0.81 ) }
    dend_31 { pt3dadd( 77.3096, -177.386, 1.08794, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_31 { pt3dadd( 78.1272, -178.138, 1.06317, 0.29 ) }
    dend_31 { pt3dadd( 78.7262, -178.611, 1.05388, 0.29 ) }
    dend_31 { pt3dadd( 79.2008, -178.95, 1.04857, 0.44 ) }
    dend_31 { pt3dadd( 79.9594, -179.458, 1.04292, 0.29 ) }
    dend_31 { pt3dadd( 80.5838, -179.851, 1.04984, 0.37 ) }
    dend_31 { pt3dadd( 81.5634, -180.42, 1.06542, 0.37 ) }
    dend_31 { pt3dadd( 82.3812, -180.857, 1.08349, 0.37 ) }
    dend_31 { pt3dadd( 82.8622, -181.085, 1.09676, 0.59 ) }
    dend_31 { pt3dadd( 83.2002, -181.222, 1.1033, 0.59 ) }
    dend_31 { pt3dadd( 84.1185, -181.547, 1.12601, 0.29 ) }
    dend_31 { pt3dadd( 85.0211, -181.845, 1.159, 1.25 ) }
    dend_31 { pt3dadd( 85.4684, -181.985, 1.17893, 1.55 ) }
    dend_31 { pt3dadd( 86.1133, -182.174, 1.21567, 1.55 ) }
    dend_31 { pt3dadd( 87.6414, -182.605, 1.32616, 0.29 ) }
    dend_31 { pt3dadd( 88.6124, -182.903, 1.4057, 0.52 ) }
    dend_31 { pt3dadd( 89.2463, -183.105, 1.46108, 0.59 ) }
    dend_31 { pt3dadd( 89.8976, -183.338, 1.54813, 0.37 ) }
    dend_31 { pt3dadd( 90.4276, -183.547, 1.63168, 0.22 ) }
    dend_31 { pt3dadd( 91.28, -183.925, 1.78119, 0.22 ) }
    dend_31 { pt3dadd( 92.2715, -184.391, 1.97246, 0.22 ) }
    dend_31 { pt3dadd( 92.9333, -184.713, 2.1015, 0.22 ) }
    dend_31 { pt3dadd( 94.1164, -185.305, 2.34432, 0.59 ) }
    dend_31 { pt3dadd( 94.8264, -185.67, 2.49812, 0.59 ) }
    dend_31 { pt3dadd( 95.4554, -186.009, 2.6347, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 24/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 68.3136, -166.701, 1.51217, 0.59 ) }
    dend_30 { pt3dadd( 68.3859, -167.318, 1.47008, 0.59 ) }
    dend_30 { pt3dadd( 68.4965, -168.083, 1.58834, 0.44 ) }
    dend_30 { pt3dadd( 68.6343, -168.964, 1.76499, 0.29 ) }
    dend_30 { pt3dadd( 68.8091, -170.161, 1.9774, 0.59 ) }
    dend_30 { pt3dadd( 68.893, -170.763, 2.07242, 0.66 ) }
    dend_30 { pt3dadd( 69.0553, -171.903, 2.2331, 0.44 ) }
    dend_30 { pt3dadd( 69.4873, -174.573, 2.52277, 0.29 ) }
    dend_30 { pt3dadd( 69.6351, -175.411, 2.58008, 0.29 ) }
    dend_30 { pt3dadd( 69.8596, -176.472, 2.60549, 0.59 ) }
    dend_30 { pt3dadd( 70.035, -177.146, 2.58871, 0.74 ) }
    dend_30 { pt3dadd( 70.1698, -177.612, 2.55863, 0.74 ) }
    dend_30 { pt3dadd( 70.4638, -178.61, 2.45844, 0.44 ) }
    dend_30 { pt3dadd( 70.7324, -179.631, 2.28066, 0.29 ) }
    dend_30 { pt3dadd( 70.9246, -180.505, 2.18241, 0.29 ) }
    dend_30 { pt3dadd( 71.1081, -181.476, 2.09944, 0.59 ) }
    dend_30 { pt3dadd( 71.2505, -182.308, 2.03169, 0.44 ) }
    dend_30 { pt3dadd( 71.3652, -183.002, 1.98392, 0.44 ) }
    dend_30 { pt3dadd( 71.4829, -183.713, 1.95186, 0.44 ) }
    dend_30 { pt3dadd( 71.6601, -184.61, 1.90136, 0.37 ) }
    dend_30 { pt3dadd( 71.9117, -185.671, 1.83155, 0.37 ) }
    dend_30 { pt3dadd( 72.0807, -186.19, 1.79526, 0.66 ) }
    dend_30 { pt3dadd( 72.3484, -186.717, 1.75977, 0.66 ) }
    dend_30 { pt3dadd( 72.5736, -187.037, 1.74071, 0.52 ) }
    dend_30 { pt3dadd( 73.0513, -187.641, 1.71619, 0.74 ) }
    dend_30 { pt3dadd( 73.2692, -187.905, 1.71125, 0.74 ) }
    dend_30 { pt3dadd( 73.8153, -188.62, 1.71547, 0.29 ) }
    dend_30 { pt3dadd( 74.3503, -189.379, 1.72027, 0.29 ) }
    dend_30 { pt3dadd( 74.7555, -189.959, 1.7222, 0.29 ) }
    dend_30 { pt3dadd( 75.3587, -190.828, 1.7222, 0.22 ) }
    dend_30 { pt3dadd( 75.7872, -191.445, 1.7222, 0.22 ) }
    dend_30 { pt3dadd( 76.3904, -192.31, 1.7222, 0.44 ) }
    dend_30 { pt3dadd( 76.8602, -192.981, 1.7222, 0.59 ) }
    dend_30 { pt3dadd( 77.1693, -193.479, 1.7222, 0.59 ) }
    dend_30 { pt3dadd( 81.2104, -202.98, 0.383693, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 59/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -41.6028, -97.2673, -9.08545, 0.88 ) }
    dend_24 { pt3dadd( -41.9305, -97.4384, -9.05203, 0.88 ) }
    dend_24 { pt3dadd( -42.8272, -97.95, -8.95997, 0.74 ) }
    dend_24 { pt3dadd( -43.6967, -98.4642, -8.86662, 0.88 ) }
    dend_24 { pt3dadd( -44.4077, -98.896, -8.82794, 0.52 ) }
    dend_24 { pt3dadd( -45.3359, -99.4536, -8.74902, 0.66 ) }
    dend_24 { pt3dadd( -46.1995, -99.958, -8.66035, 0.74 ) }
    dend_24 { pt3dadd( -47.051, -100.423, -8.56366, 0.88 ) }
    dend_24 { pt3dadd( -47.8327, -100.807, -8.46696, 1.03 ) }
    dend_24 { pt3dadd( -48.9812, -101.328, -8.29934, 1.33 ) }
    dend_24 { pt3dadd( -50.088, -101.797, -8.12505, 1.4 ) }
    dend_24 { pt3dadd( -51.1418, -102.201, -7.95729, 0.66 ) }
    dend_24 { pt3dadd( -51.8203, -102.448, -7.8375, 0.66 ) }
    dend_24 { pt3dadd( -52.4865, -102.716, -7.69325, 0.59 ) }
    dend_24 { pt3dadd( -53.25, -103.103, -7.49817, 0.37 ) }
    dend_24 { pt3dadd( -53.7427, -103.414, -7.35746, 0.88 ) }
    dend_24 { pt3dadd( -54.4342, -103.945, -7.20152, 0.96 ) }
    dend_24 { pt3dadd( -54.9082, -104.361, -7.08583, 0.96 ) }
    dend_24 { pt3dadd( -55.5905, -105.02, -6.89637, 0.66 ) }
    dend_24 { pt3dadd( -56.0987, -105.535, -6.75248, 0.66 ) }
    dend_24 { pt3dadd( -56.8056, -106.243, -6.5719, 0.66 ) }
    dend_24 { pt3dadd( -57.4019, -106.841, -6.42382, 0.74 ) }
    dend_24 { pt3dadd( -57.7897, -107.233, -6.32638, 0.96 ) }
    dend_24 { pt3dadd( -58.4812, -107.93, -6.16217, 0.74 ) }
    dend_24 { pt3dadd( -59.0896, -108.588, -6.01441, 0.74 ) }
    dend_24 { pt3dadd( -59.785, -109.462, -5.81161, 0.96 ) }
    dend_24 { pt3dadd( -60.227, -110.119, -5.65495, 1.03 ) }
    dend_24 { pt3dadd( -60.6278, -110.75, -5.48831, 0.81 ) }
    dend_24 { pt3dadd( -61.0651, -111.409, -5.28428, 0.44 ) }
    dend_24 { pt3dadd( -61.758, -112.425, -4.91791, 0.44 ) }
    dend_24 { pt3dadd( -62.2405, -113.146, -4.60638, 0.44 ) }
    dend_24 { pt3dadd( -62.6895, -113.844, -4.26666, 0.44 ) }
    dend_24 { pt3dadd( -63.3832, -115.004, -3.68249, 0.44 ) }
    dend_24 { pt3dadd( -63.966, -116.098, -3.14866, 0.81 ) }
    dend_24 { pt3dadd( -64.2114, -116.624, -2.90229, 0.81 ) }
    dend_24 { pt3dadd( -64.4983, -117.322, -2.61484, 0.88 ) }
    dend_24 { pt3dadd( -64.6426, -117.71, -2.48021, 0.66 ) }
    dend_24 { pt3dadd( -64.9515, -118.615, -2.23229, 0.37 ) }
    dend_24 { pt3dadd( -65.2456, -119.47, -2.02533, 0.29 ) }
    dend_24 { pt3dadd( -65.5393, -120.067, -1.87535, 0.44 ) }
    dend_24 { pt3dadd( -66.1268, -120.732, -1.63757, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_24 { pt3dadd( -66.6414, -121.116, -1.44462, 0.29 ) }
    dend_24 { pt3dadd( -67.2394, -121.47, -1.20137, 0.37 ) }
    dend_24 { pt3dadd( -68.2085, -121.921, -0.765362, 0.37 ) }
    dend_24 { pt3dadd( -68.8978, -122.235, -0.40278, 0.37 ) }
    dend_24 { pt3dadd( -69.6889, -122.637, 0.0527289, 0.81 ) }
    dend_24 { pt3dadd( -70.2053, -122.935, 0.35713, 1.03 ) }
    dend_24 { pt3dadd( -70.6501, -123.289, 0.6583, 1.03 ) }
    dend_24 { pt3dadd( -70.9824, -123.643, 0.916877, 0.96 ) }
    dend_24 { pt3dadd( -71.7046, -124.646, 1.55782, 0.52 ) }
    dend_24 { pt3dadd( -72.0519, -125.214, 1.91516, 0.52 ) }
    dend_24 { pt3dadd( -72.484, -125.973, 2.39827, 1.77 ) }
    dend_24 { pt3dadd( -73.1658, -127.178, 3.14534, 0.66 ) }
    dend_24 { pt3dadd( -73.5633, -127.798, 3.51385, 0.66 ) }
    dend_24 { pt3dadd( -74.135, -128.579, 3.99327, 0.59 ) }
    dend_24 { pt3dadd( -74.6341, -129.199, 4.3814, 0.74 ) }
    dend_24 { pt3dadd( -75.0871, -129.749, 4.74804, 0.74 ) }
    dend_24 { pt3dadd( -75.5202, -130.242, 5.08537, 0.74 ) }
    dend_24 { pt3dadd( -76.3428, -131.056, 5.63368, 0.37 ) }
    dend_24 { pt3dadd( -77.4104, -132.098, 6.30039, 0.37 ) }
    dend_24 { pt3dadd( -77.9419, -132.635, 6.61944, 0.44 ) }
    dend_24 { pt3dadd( -78.4696, -133.242, 6.95693, 0.44 ) }
    dend_24 { pt3dadd( -79.0462, -133.967, 7.33552, 0.44 ) }
    dend_24 { pt3dadd( -79.4489, -134.492, 7.59312, 0.66 ) }
    dend_24 { pt3dadd( -79.7761, -134.944, 7.78788, 0.74 ) }
    dend_24 { pt3dadd( -80.1111, -135.421, 7.94981, 0.74 ) }
    dend_24 { pt3dadd( -80.7955, -136.389, 8.25304, 0.81 ) }
    dend_24 { pt3dadd( -81.504, -137.406, 8.53434, 0.44 ) }
    dend_24 { pt3dadd( -82.1958, -138.438, 8.80103, 0.44 ) }
    dend_24 { pt3dadd( -82.8114, -139.415, 9.02543, 0.37 ) }
    dend_24 { pt3dadd( -83.4484, -140.484, 9.27175, 0.37 ) }
    dend_24 { pt3dadd( -83.825, -141.142, 9.41538, 1.18 ) }
    dend_24 { pt3dadd( -84.1413, -141.704, 9.52007, 1.62 ) }
    dend_24 { pt3dadd( -84.6195, -142.595, 9.69583, 1.84 ) }
    dend_24 { pt3dadd( -85.0748, -143.444, 9.88295, 1.03 ) }
    dend_24 { pt3dadd( -85.6475, -144.496, 10.1261, 0.74 ) }
    dend_24 { pt3dadd( -85.8924, -144.975, 10.2394, 0.74 ) }
    dend_24 { pt3dadd( -86.3391, -145.974, 10.468, 0.44 ) }
    dend_24 { pt3dadd( -86.7831, -147.094, 10.7205, 0.59 ) }
    dend_24 { pt3dadd( -87.047, -147.85, 10.8833, 0.59 ) }
    dend_24 { pt3dadd( -87.3541, -148.797, 11.0705, 0.37 ) }
    dend_24 { pt3dadd( -87.7174, -149.954, 11.2775, 0.37 ) }
    dend_24 { pt3dadd( -88.068, -151.031, 11.4734, 0.37 ) }
    dend_24 { pt3dadd( -88.3246, -151.768, 11.5992, 0.81 ) }
    dend_24 { pt3dadd( -88.5946, -152.408, 11.6953, 0.96 ) }
    dend_24 { pt3dadd( -88.9736, -153.139, 11.7877, 1.18 ) }
    dend_24 { pt3dadd( -89.6627, -154.268, 11.932, 0.44 ) }
    dend_24 { pt3dadd( -90.2359, -155.108, 12.0614, 0.44 ) }
    dend_24 { pt3dadd( -91.0237, -156.193, 12.3146, 0.44 ) }
    dend_24 { pt3dadd( -91.6476, -157.0, 12.5602, 0.44 ) }
    dend_24 { pt3dadd( -92.3432, -157.87, 12.8646, 0.59 ) }
    dend_24 { pt3dadd( -92.8253, -158.477, 13.1115, 0.74 ) }
    dend_24 { pt3dadd( -93.4341, -159.254, 13.457, 0.96 ) }
    dend_24 { pt3dadd( -94.3113, -160.346, 13.9802, 0.59 ) }
    dend_24 { pt3dadd( -94.8443, -161.007, 14.301, 0.44 ) }
    dend_24 { pt3dadd( -95.4201, -161.768, 14.662, 0.37 ) }
    dend_24 { pt3dadd( -95.8563, -162.398, 14.9514, 0.52 ) }
    dend_24 { pt3dadd( -96.239, -162.999, 15.1857, 0.52 ) }
    dend_24 { pt3dadd( -96.9609, -164.203, 15.594, 0.37 ) }
    dend_24 { pt3dadd( -97.4567, -165.062, 15.867, 0.59 ) }
    dend_24 { pt3dadd( -97.8077, -165.676, 16.0945, 0.74 ) }
    dend_24 { pt3dadd( -98.2884, -166.477, 16.4181, 0.96 ) }
    dend_24 { pt3dadd( -98.561, -166.943, 16.6029, 0.88 ) }
    dend_24 { pt3dadd( -98.8664, -167.495, 16.8217, 0.81 ) }
    dend_24 { pt3dadd( -99.336, -168.312, 17.1759, 0.88 ) }
    dend_24 { pt3dadd( -99.9691, -169.293, 17.6085, 0.37 ) }
    dend_24 { pt3dadd( -100.611, -170.212, 18.011, 0.37 ) }
    dend_24 { pt3dadd( -101.21, -171.027, 18.3591, 0.37 ) }
    dend_24 { pt3dadd( -101.768, -171.753, 18.6767, 0.66 ) }
    dend_24 { pt3dadd( -102.559, -172.732, 19.1143, 0.52 ) }
    dend_24 { pt3dadd( -103.131, -173.361, 19.4096, 0.37 ) }
    dend_24 { pt3dadd( -103.773, -173.945, 19.6921, 0.59 ) }
    dend_24 { pt3dadd( -104.424, -174.439, 19.9838, 0.59 ) }
    dend_24 { pt3dadd( -105.271, -174.99, 20.3965, 0.29 ) }
    dend_24 { pt3dadd( -105.795, -175.324, 20.6928, 0.29 ) }
    dend_24 { pt3dadd( -106.338, -175.704, 21.0265, 0.29 ) }
    dend_24 { pt3dadd( -107.228, -176.389, 21.6239, 0.37 ) }
    dend_24 { pt3dadd( -108.28, -177.268, 22.3572, 0.52 ) }
    dend_24 { pt3dadd( -109.197, -178.104, 23.0225, 0.74 ) }
    dend_24 { pt3dadd( -110.068, -178.951, 23.6543, 0.59 ) }
    dend_24 { pt3dadd( -110.659, -179.551, 24.062, 0.44 ) }
    dend_24 { pt3dadd( -111.034, -179.936, 24.2939, 0.44 ) }
    dend_24 { pt3dadd( -111.558, -180.495, 24.5813, 0.37 ) }
    dend_24 { pt3dadd( -112.121, -181.156, 24.8263, 0.52 ) }
    dend_24 { pt3dadd( -112.692, -181.902, 25.0569, 0.74 ) }
    dend_24 { pt3dadd( -113.365, -182.867, 25.3455, 0.44 ) }
    dend_24 { pt3dadd( -113.782, -183.578, 25.5729, 0.37 ) }
    dend_24 { pt3dadd( -114.116, -184.324, 25.8403, 0.37 ) }
    dend_24 { pt3dadd( -114.457, -185.331, 26.212, 0.59 ) }
    dend_24 { pt3dadd( -114.599, -185.923, 26.4228, 0.59 ) }
    dend_24 { pt3dadd( -114.709, -186.755, 26.7102, 0.59 ) }
    dend_24 { pt3dadd( -114.751, -187.715, 27.0488, 0.66 ) }
    dend_24 { pt3dadd( -114.759, -189.065, 27.5134, 0.66 ) }
    dend_24 { pt3dadd( -114.762, -190.137, 27.8515, 0.37 ) }
    dend_24 { pt3dadd( -114.756, -190.816, 28.0418, 0.37 ) }
    dend_24 { pt3dadd( -114.7, -191.66, 28.2489, 0.37 ) }
    dend_24 { pt3dadd( -114.614, -192.245, 28.3867, 0.37 ) }
    dend_24 { pt3dadd( -114.406, -193.346, 28.6284, 0.59 ) }
    dend_24 { pt3dadd( -114.279, -193.883, 28.7209, 0.74 ) }
    dend_24 { pt3dadd( -114.083, -194.615, 28.8556, 0.74 ) }
    dend_24 { pt3dadd( -113.837, -195.75, 29.0767, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_24 { pt3dadd( -113.752, -196.341, 29.1906, 0.44 ) }
    dend_24 { pt3dadd( -120.767, -203.753, 30.1777, 0.44 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -41.6028, -97.2673, -9.08545, 0.81 ) }
    dend_23 { pt3dadd( -43.9065, -99.6275, -10.8455, 0.81 ) }
    dend_23 { pt3dadd( -44.8077, -100.429, -11.552, 0.74 ) }
    dend_23 { pt3dadd( -45.3416, -100.815, -11.9853, 0.81 ) }
    dend_23 { pt3dadd( -45.9871, -101.19, -12.5323, 0.59 ) }
    dend_23 { pt3dadd( -46.8856, -101.63, -13.2599, 0.44 ) }
    dend_23 { pt3dadd( -47.2373, -101.778, -13.5233, 0.44 ) }
    dend_23 { pt3dadd( -48.5671, -102.04, -14.162, 0.52 ) }
    dend_23 { pt3dadd( -49.2348, -102.069, -14.5358, 0.74 ) }
    dend_23 { pt3dadd( -49.9858, -102.091, -14.9817, 0.59 ) }
    dend_23 { pt3dadd( -50.7092, -102.128, -15.4028, 0.59 ) }
    dend_23 { pt3dadd( -51.3007, -102.195, -15.7269, 1.03 ) }
    dend_23 { pt3dadd( -51.9714, -102.326, -16.0148, 1.18 ) }
    dend_23 { pt3dadd( -52.659, -102.5, -16.2192, 1.18 ) }
    dend_23 { pt3dadd( -53.539, -102.735, -16.4603, 0.52 ) }
    dend_23 { pt3dadd( -54.229, -102.903, -16.6633, 0.37 ) }
    dend_23 { pt3dadd( -54.7836, -103.017, -16.8486, 0.29 ) }
    dend_23 { pt3dadd( -55.3471, -103.119, -17.0596, 0.29 ) }
    dend_23 { pt3dadd( -55.9564, -103.212, -17.2964, 0.88 ) }
    dend_23 { pt3dadd( -56.7121, -103.285, -17.5953, 1.11 ) }
    dend_23 { pt3dadd( -57.3556, -103.286, -17.9191, 1.4 ) }
    dend_23 { pt3dadd( -57.8563, -103.308, -18.2455, 1.55 ) }
    dend_23 { pt3dadd( -58.2472, -103.364, -18.5715, 1.55 ) }
    dend_23 { pt3dadd( -58.9092, -103.522, -19.1893, 0.59 ) }
    dend_23 { pt3dadd( -59.281, -103.639, -19.5425, 0.59 ) }
    dend_23 { pt3dadd( -60.2812, -104.017, -20.44, 0.44 ) }
    dend_23 { pt3dadd( -61.4211, -104.49, -21.4513, 0.29 ) }
    dend_23 { pt3dadd( -62.4339, -104.961, -22.4247, 0.52 ) }
    dend_23 { pt3dadd( -62.8522, -105.184, -22.9261, 0.66 ) }
    dend_23 { pt3dadd( -63.3149, -105.458, -23.5509, 0.66 ) }
    dend_23 { pt3dadd( -63.6229, -105.658, -23.9821, 0.44 ) }
    dend_23 { pt3dadd( -64.3709, -106.148, -25.0479, 0.37 ) }
    dend_23 { pt3dadd( -65.9955, -107.128, -27.4086, 2.8 ) }
    dend_23 { pt3dadd( -67.9887, -108.313, -30.5485, 0.74 ) }
    dend_23 { pt3dadd( -68.8413, -108.809, -32.0199, 0.74 ) }
    dend_23 { pt3dadd( -69.5153, -109.173, -33.3227, 0.52 ) }
    dend_23 { pt3dadd( -70.2599, -109.514, -34.8894, 1.11 ) }
    dend_23 { pt3dadd( -70.563, -109.614, -35.5559, 1.25 ) }
    dend_23 { pt3dadd( -71.8027, -109.707, -38.4695, 0.37 ) }
    dend_23 { pt3dadd( -72.5771, -109.542, -40.3568, 1.03 ) }
    dend_23 { pt3dadd( -73.3456, -109.162, -42.3832, 1.25 ) }
    dend_23 { pt3dadd( -73.7823, -108.835, -43.6235, 0.37 ) }
    dend_23 { pt3dadd( -74.1016, -108.543, -44.5448, 1.84 ) }
    dend_23 { pt3dadd( -74.7025, -107.946, -46.1784, 0.52 ) }
    dend_23 { pt3dadd( -74.8637, -107.765, -46.5546, 0.37 ) }
    dend_23 { pt3dadd( -75.2695, -107.34, -47.3732, 0.74 ) }
    dend_23 { pt3dadd( -75.9905, -106.728, -48.6101, 0.44 ) }
    dend_23 { pt3dadd( -76.6512, -106.31, -49.5815, 0.44 ) }
    dend_23 { pt3dadd( -77.1492, -106.075, -50.1996, 0.44 ) }
    dend_23 { pt3dadd( -77.6823, -105.884, -50.7503, 1.11 ) }
    dend_23 { pt3dadd( -78.1697, -105.729, -51.207, 1.55 ) }
    dend_23 { pt3dadd( -78.724, -105.571, -51.6741, 1.69 ) }
    dend_23 { pt3dadd( -80.3841, -105.156, -52.8849, 0.29 ) }
    dend_23 { pt3dadd( -81.189, -104.982, -53.4343, 0.44 ) }
    dend_23 { pt3dadd( -81.8046, -104.863, -53.8641, 0.44 ) }
    dend_23 { pt3dadd( -82.3227, -104.769, -54.2372, 1.33 ) }
    dend_23 { pt3dadd( -82.8281, -104.671, -54.5912, 1.55 ) }
    dend_23 { pt3dadd( -83.9643, -104.443, -55.3852, 0.29 ) }
    dend_23 { pt3dadd( -84.4877, -104.341, -55.7455, 0.52 ) }
    dend_23 { pt3dadd( -85.3611, -104.19, -56.3437, 0.29 ) }
    dend_23 { pt3dadd( -85.8646, -104.082, -56.7098, 1.03 ) }
    dend_23 { pt3dadd( -86.2985, -103.974, -57.0393, 1.18 ) }
    dend_23 { pt3dadd( -86.7037, -103.853, -57.3496, 1.18 ) }
    dend_23 { pt3dadd( -87.6939, -103.523, -58.1483, 0.29 ) }
    dend_23 { pt3dadd( -88.3852, -103.309, -58.7154, 0.29 ) }
    dend_23 { pt3dadd( -89.5252, -102.984, -59.5957, 0.88 ) }
    dend_23 { pt3dadd( -90.0886, -102.832, -60.0296, 0.66 ) }
    dend_23 { pt3dadd( -90.4711, -102.731, -60.3263, 0.66 ) }
    dend_23 { pt3dadd( -90.9257, -102.6, -60.6675, 0.44 ) }
    dend_23 { pt3dadd( -91.5157, -102.428, -61.1124, 0.29 ) }
    dend_23 { pt3dadd( -92.127, -102.254, -61.5467, 0.74 ) }
    dend_23 { pt3dadd( -92.3925, -102.186, -61.724, 0.88 ) }
    dend_23 { pt3dadd( -93.5764, -101.846, -62.5013, 0.29 ) }
    dend_23 { pt3dadd( -94.3746, -101.602, -63.0018, 1.47 ) }
    dend_23 { pt3dadd( -95.0177, -101.393, -63.3829, 1.92 ) }
    dend_23 { pt3dadd( -95.614, -101.196, -63.7176, 1.92 ) }
    dend_23 { pt3dadd( -96.9554, -100.761, -64.4317, 0.22 ) }
    dend_23 { pt3dadd( -97.9063, -100.462, -64.8888, 0.22 ) }
    dend_23 { pt3dadd( -98.5366, -100.269, -65.1457, 0.59 ) }
    dend_23 { pt3dadd( -98.8778, -100.167, -65.2661, 0.59 ) }
    dend_23 { pt3dadd( -99.8374, -99.8564, -65.5453, 0.22 ) }
    dend_23 { pt3dadd( -100.52, -99.6145, -65.7065, 0.81 ) }
    dend_23 { pt3dadd( -100.822, -99.4951, -65.7706, 1.03 ) }
    dend_23 { pt3dadd( -101.175, -99.3429, -65.8467, 1.03 ) }
    dend_23 { pt3dadd( -102.139, -98.8864, -66.0782, 0.22 ) }
    dend_23 { pt3dadd( -102.646, -98.634, -66.1984, 0.44 ) }
    dend_23 { pt3dadd( -104.304, -97.7431, -66.6014, 0.22 ) }
    dend_23 { pt3dadd( -104.828, -97.4505, -66.7402, 0.22 ) }
    dend_23 { pt3dadd( -105.539, -97.0465, -66.9337, 1.03 ) }
    dend_23 { pt3dadd( -106.031, -96.7596, -67.0693, 1.25 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 92/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 95.4554, -186.009, 2.6347, 0.22 ) }
    dend_33 { pt3dadd( 96.6345, -186.914, 2.67106, 0.22 ) }
    dend_33 { pt3dadd( 97.1457, -187.306, 2.68682, 0.22 ) }
    dend_33 { pt3dadd( 97.5225, -187.596, 2.69844, 0.44 ) }
    dend_33 { pt3dadd( 97.788, -187.799, 2.70662, 0.44 ) }
    dend_33 { pt3dadd( 106.0, -193.624, 4.04576, 0.44 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 98/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 95.4554, -186.009, 2.6347, 0.59 ) }
    dend_32 { pt3dadd( 96.3896, -185.73, 2.6347, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_32 { pt3dadd( 96.901, -185.577, 2.6347, 0.66 ) }
    dend_32 { pt3dadd( 97.1145, -185.513, 2.6347, 0.66 ) }
    dend_32 { pt3dadd( 106.746, -182.925, 3.7015, 0.66 ) }
    dend_32 { pt3dadd( 116.35, -180.495, 5.25387, 0.66 ) }
    dend_32 { pt3dadd( 125.486, -177.992, 8.54976, 0.66 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
    ModelViewParmSubset_2 = new SectionList()
    dend_46 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_46, dend_17, dend_0, axon_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, axon_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
    ModelViewParmSubset_5 = new SectionList()
    dend_46 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_47 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_45 OneSecGrp_SectionRef_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_56 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_51 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_49 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_38 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_11 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_60 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_57 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_53 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_52 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_42 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_39 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_13 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_9 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_6 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_4 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_62 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_37 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_28 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_26 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_7 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_34 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_29 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_25 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_24 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_23 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_17 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_46 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_18 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_19 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_27 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_50 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_20 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_21 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_22 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_12 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_31 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_30 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_33 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_32 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_40 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_41 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_58 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_59 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_61 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_55 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_44 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_35 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_36 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_15 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_59, dend_59, dend_58, dend_58, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_43, dend_41, dend_41, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_22 all.append()
    dend_22 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_47 nseg = 9
    dend_45 nseg = 13
    dend_10 nseg = 5
    dend_56 nseg = 5
    dend_51 nseg = 7
    dend_49 nseg = 7
    dend_48 nseg = 5
    dend_38 nseg = 7
    dend_11 nseg = 9
    dend_5 nseg = 5
    dend_2 nseg = 9
    dend_60 nseg = 5
    dend_57 nseg = 5
    dend_53 nseg = 3
    dend_52 nseg = 3
    dend_42 nseg = 5
    dend_39 nseg = 5
    dend_14 nseg = 7
    dend_13 nseg = 9
    dend_9 nseg = 5
    dend_6 nseg = 7
    dend_4 nseg = 3
    dend_3 nseg = 7
    dend_62 nseg = 3
    dend_54 nseg = 3
    dend_37 nseg = 9
    dend_28 nseg = 3
    dend_26 nseg = 11
    dend_16 nseg = 3
    dend_7 nseg = 3
    dend_34 nseg = 7
    dend_29 nseg = 3
    dend_25 nseg = 11
    dend_24 nseg = 7
    dend_23 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_BTC_c745595fbe_0_0


