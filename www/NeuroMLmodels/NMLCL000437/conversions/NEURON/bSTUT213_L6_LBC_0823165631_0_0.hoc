// Cell: bSTUT213_L6_LBC_0823165631_0_0
/*
{
  "id" : "bSTUT213_L6_LBC_0823165631_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.47547, -21.1079, 2.51381, 3.10391", "-2.25244, -19.1651, 2.29568, 4.54795", "-2.02941, -17.2222, 2.07754, 6.86414", "-1.80638, -15.2794, 1.85941, 9.59749", "-1.58335, -13.3366, 1.64128, 11.8194", "-1.36032, -11.3938, 1.42315, 13.5674", "-1.13729, -9.45099, 1.20502, 14.4744", "-0.914264, -7.50817, 0.986887, 14.6773", "-0.691235, -5.56535, 0.768756, 14.5415", "-0.468206, -3.62254, 0.550625, 13.3405", "-0.245177, -1.67972, 0.332493, 12.1443", "-0.0221479, 0.263091, 0.114362, 10.4715", "0.200881, 2.20591, -0.103769, 8.18984", "0.42391, 4.14872, -0.321901, 6.18554", "0.64694, 6.09154, -0.540032, 4.57765", "0.869969, 8.03435, -0.758163, 3.2886", "1.093, 9.97717, -0.976295, 3.75178", "1.31603, 11.92, -1.19443, 4.68351", "1.53906, 13.8628, -1.41256, 5.54689", "1.76209, 15.8056, -1.63069, 4.92105", "1.98511, 17.7484, -1.84882, 3.22657" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-3.49001, -19.9937, 2.0349, 1.25", "-2.80022, -22.7203, 4.13056, 1.25", "-2.3407, -24.5367, 5.52659, 1.33", "-1.91429, -26.2222, 6.82205, 1.33", "-1.39911, -28.2586, 8.38721, 1.33", "-0.892253, -30.2621, 9.92707, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-4.04001, -21.0392, -0.915102, 2.06", "-4.34368, -21.8572, -0.280128, 2.06", "-4.62849, -22.6244, 0.315415, 2.06", "-5.20007, -24.164, 1.51062, 2.06", "-5.32852, -24.51, 1.7792, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-0.350012, 11.4226, -7.6651, 0.59", "-1.00387, 10.7515, -7.60635, 0.44", "-1.71372, 10.0456, -7.51407, 0.44", "-3.42117, 8.41869, -7.14624, 0.37", "-4.50599, 7.4122, -6.86818, 0.22", "-7.1447, 4.96575, -6.0726, 0.22", "-8.21012, 3.9703, -5.71362, 0.22", "-9.69164, 2.59442, -5.10109, 0.29", "-11.7515, 0.690693, -4.06588, 0.29", "-13.8449, -1.1963, -2.82179, 0.15", "-15.1243, -2.31924, -1.94616, 0.15", "-16.0652, -3.13512, -1.2008, 0.15", "-17.5192, -4.41831, 0.0905303, 0.15", "-18.7812, -5.56035, 1.35512, 0.15", "-19.7295, -6.46332, 2.41655, 0.15", "-20.8987, -7.62788, 3.87968, 0.15", "-21.716, -8.44373, 4.91095, 0.15", "-22.6817, -9.45892, 6.11704, 0.15", "-24.0247, -10.9873, 7.6953, 0.15", "-25.1306, -12.3304, 8.94176, 0.15", "-26.6591, -14.2279, 10.5721, 0.15", "-27.9922, -15.9131, 11.8908, 0.15", "-29.6827, -18.0205, 13.4636, 0.15", "-31.9996, -20.932, 15.5623, 0.15", "-33.1942, -22.4922, 16.6499, 0.15", "-34.1312, -23.705, 17.4728, 0.15", "-35.1831, -24.9653, 18.3346, 0.15", "-36.5128, -26.399, 19.3567, 0.22", "-38.517, -28.3909, 20.9126, 0.22", "-39.8221, -29.6308, 21.966, 0.22", "-41.4382, -31.142, 23.3225, 0.22", "-43.7839, -33.3738, 25.4522, 0.22", "-45.3862, -34.8866, 26.9502, 0.22", "-47.2706, -36.6166, 28.662, 0.22", "-48.489, -37.6665, 29.7603, 0.22", "-49.1747, -38.2652, 30.4298, 0.37", "-50.148, -39.3136, 31.6474, 0.37", "-50.9424, -40.5401, 33.0706, 0.37", "-57.8063, -47.5642, 37.1579, 0.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "0.099989, 19.4893, -1.8651, 1.18", "0.0361526, 21.1728, -0.441201, 1.18", "-0.0088153, 22.3587, 0.561829, 1.4", "-0.1369, 25.7366, 3.41882, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "3.21999, 14.8871, -5.5151, 1.33", "3.59426, 16.108, -6.46602, 1.33", "4.0352, 17.5464, -7.58632, 1.33", "4.39642, 18.7247, -8.50409, 1.55", "4.77009, 19.9437, -9.45348, 1.55", "5.09311, 20.9974, -10.2742, 1.55", "5.48506, 22.276, -11.27, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.43001, 18.1158, -6.9151, 1.11", "-3.126, 18.7712, -6.9151, 1.11", "-4.07002, 19.8035, -6.9151, 1.18", "-4.60229, 20.4357, -6.9151, 1.4", "-5.36275, 21.3608, -6.9151, 1.4", "-5.63803, 21.6789, -6.92996, 1.4", "-6.71432, 22.8186, -7.03735, 1.25", "-7.32816, 23.4036, -7.11969, 1.25", "-8.57571, 24.4264, -7.3122, 1.25", "-9.64185, 25.1531, -7.48407, 1.25", "-11.5064, 26.1457, -7.78181, 0.81", "-12.5967, 26.5898, -7.94298, 0.81", "-13.6767, 26.9125, -8.08771, 0.59", "-14.8642, 27.1893, -8.22968, 0.81", "-15.8556, 27.3526, -8.34, 0.81", "-16.8333, 27.4634, -8.42584, 0.81", "-17.9969, 27.5601, -8.45893, 1.03", "-19.044, 27.6949, -8.45179, 1.03", "-19.3494, 27.7544, -8.44916, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.98511, 17.7484, -1.84882, 1.04656", "3.69583, 32.6505, -1.84882, 1.04656", "5.40654, 47.5527, -1.84882, 1.04656" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-0.892253, -30.2621, 9.92707, 1.11", "-0.70776, -32.7013, 10.6782, 1.11", "-0.715466, -34.6645, 11.5847, 1.11", "-0.657314, -37.098, 12.9388, 1.11", "-0.59989, -37.7559, 13.371, 1.11", "-0.463616, -38.6566, 14.0367, 1.11", "-0.178202, -40.1245, 15.1766, 1.11", "0.335016, -41.9731, 16.901, 1.11", "0.754339, -43.1056, 18.0741, 0.96", "1.32022, -44.3864, 19.5393, 0.81", "1.9351, -45.6525, 20.9075, 0.81", "2.44905, -46.6085, 21.8352, 0.81", "2.87887, -47.3245, 22.4042, 0.81", "3.45682, -48.2335, 22.9802, 0.59", "4.26034, -49.5628, 23.6575, 0.59", "5.00149, -50.7497, 24.089, 0.88", "5.99368, -52.2152, 24.4653, 0.88", "6.87668, -53.4138, 24.7257, 0.88", "7.72498, -54.5066, 24.9662, 0.88", "8.56089, -55.4972, 25.2231, 0.88", "9.38939, -56.3367, 25.5642, 0.88", "9.95433, -56.8308, 25.9069, 0.88", "10.9692, -57.6484, 26.8447, 0.88", "11.6189, -58.2245, 27.7837, 0.88", "11.868, -58.5246, 28.3291, 0.88", "12.2061, -59.1326, 29.3364, 0.88", "12.3962, -59.5577, 30.06, 0.88", "12.5665, -60.0829, 30.8829, 0.88", "12.7402, -60.8882, 31.9008, 0.88", "12.9267, -61.9281, 32.8951, 0.88", "13.0817, -62.9563, 33.687, 0.88", "14.961, -70.872, 37.7783, 0.88", "16.34, -78.6345, 42.3198, 0.88", "17.477, -85.9859, 47.5293, 0.88", "19.4565, -92.8557, 53.1038, 0.88", "20.6225, -99.8787, 58.7221, 0.88", "22.2714, -105.302, 65.7341, 0.88", "24.6001, -110.141, 72.958, 0.88", "26.6971, -114.545, 80.5093, 0.88", "30.2554, -118.837, 87.5617, 0.88", "32.4594, -122.325, 95.526, 0.88", "33.8618, -125.775, 103.683, 0.88", "34.1795, -128.627, 112.166, 0.88", "33.9671, -132.825, 120.102, 0.88", "35.245, -137.478, 127.693, 0.88" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-0.892253, -30.2621, 9.92707, 0.96", "-0.0810141, -30.8382, 10.9157, 0.96", "0.761272, -31.4269, 11.9806, 0.81", "2.06234, -32.4315, 13.7473, 0.81", "3.70821, -33.8007, 16.0528, 0.59", "5.18192, -35.1047, 18.3006, 0.59", "5.77362, -35.6166, 19.1894, 0.59", "6.60479, -36.2901, 20.3969, 0.59", "7.50204, -36.9368, 21.6403, 0.59", "8.53431, -37.5597, 23.0048, 0.59", "10.0707, -38.3663, 25.1568, 0.59", "11.3001, -38.96, 27.026, 0.37", "12.5304, -39.4275, 29.1709, 0.37", "12.7732, -39.482, 29.6733, 0.37", "13.089, -39.4944, 30.3889, 0.37", "13.9096, -39.4256, 32.3062, 0.37", "14.4471, -39.3332, 33.4695, 0.37", "15.6187, -39.0661, 36.1306, 0.37", "16.0151, -38.975, 36.9853, 0.37", "16.9708, -38.7939, 38.8382, 0.37", "17.9673, -38.6195, 40.4935, 0.37", "19.0772, -38.4406, 41.93, 0.37", "19.8142, -38.3276, 42.6888, 0.37", "21.0332, -38.1378, 43.5904, 0.37", "30.3471, -41.2668, 53.9238, 0.37" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-5.32852, -24.51, 1.7792, 0.29", "-5.15525, -24.6381, 0.993399, 0.29", "-4.62869, -24.9981, -1.41833, 0.44", "-4.40265, -25.1481, -2.44297, 0.44", "-4.2374, -25.3078, -3.26823, 0.66", "-4.11766, -25.4793, -3.90091, 0.66", "-4.04657, -25.6746, -4.43635, 0.66", "-4.0543, -26.0318, -5.06919, 0.88", "-4.09539, -26.2148, -5.27558, 0.88", "-4.44627, -27.1181, -5.98059, 1.03", "-4.85626, -27.8987, -6.41582, 1.03", "-5.58123, -29.0106, -6.95552, 1.18", "-6.4606, -30.195, -7.51143, 1.18", "-7.03976, -30.9514, -7.84305, 1.18", "-8.20564, -32.5221, -8.49465, 0.88", "-9.33702, -34.1046, -9.12301, 0.88", "-10.5457, -35.8657, -9.9013, 0.88", "-11.5962, -37.5456, -10.7099, 0.88", "-12.1272, -38.4619, -11.2061, 0.88", "-12.7584, -39.6883, -11.9898, 0.59", "-12.9996, -40.2521, -12.447, 0.59", "-13.4443, -41.6438, -13.7484, 0.59", "-13.6767, -42.6217, -14.6551, 0.59", "-13.7567, -43.033, -15.0507, 0.81", "-13.9408, -43.9712, -15.938, 0.81", "-14.0888, -44.7172, -16.5924, 0.81", "-14.3067, -45.9079, -17.4829, 0.81", "-14.6153, -47.7139, -18.6591, 0.59", "-14.8935, -49.3391, -19.699, 0.59", "-15.0401, -50.0997, -20.1852, 0.59", "-15.1576, -50.6229, -20.5444, 0.59", "-15.5171, -51.862, -21.4011, 0.74", "-15.8982, -52.9251, -22.2242, 0.74", "-16.2802, -53.9114, -23.0899, 0.74", "-16.5318, -54.5306, -23.6327, 0.74", "-17.0068, -55.6403, -24.6325, 0.96", "-17.5969, -56.9287, -25.7967, 1.11", "-18.312, -58.5424, -27.2233, 1.11", "-18.6712, -59.4113, -27.9441, 1.11", "-18.9759, -60.1586, -28.5669, 1.11", "-19.4329, -61.3039, -29.5409, 0.88", "-19.7177, -61.9539, -30.1434, 0.88", "-20.0735, -62.7031, -30.9724, 0.88", "-20.4526, -63.4201, -31.8131, 0.88", "-20.8255, -64.0748, -32.6312, 0.88", "-21.3273, -64.8394, -33.7295, 0.88", "-21.9631, -65.6824, -35.0357, 0.88", "-22.5023, -66.3521, -36.079, 0.88", "-22.8742, -66.7695, -36.7358, 1.11", "-23.4441, -67.3811, -37.6978, 1.11", "-24.759, -68.8282, -39.8601, 0.96", "-25.1832, -69.3553, -40.6128, 0.66", "-25.7748, -70.2594, -41.7298, 0.66", "-26.0629, -70.82, -42.362, 0.66", "-26.3813, -71.6824, -43.2418, 0.66", "-26.5839, -72.524, -43.9787, 0.88", "-26.8865, -74.5253, -45.4456, 0.88", "-27.0641, -75.791, -46.2976, 0.88", "-27.2716, -77.0795, -47.1332, 0.88", "-27.4454, -78.1058, -47.7827, 0.88", "-27.6087, -78.9511, -48.3015, 0.88", "-28.0273, -80.7147, -49.3353, 0.88", "-28.2655, -81.4697, -49.7556, 0.88", "-28.712, -82.5567, -50.4269, 1.03", "-29.1028, -83.3318, -50.9573, 1.03", "-29.57, -84.1612, -51.6832, 1.03", "-29.9424, -84.7863, -52.2992, 0.74", "-30.2707, -85.2882, -52.8116, 0.74", "-30.7098, -85.9365, -53.5117, 0.74", "-31.3671, -86.8838, -54.5548, 0.81", "-32.1282, -88.0146, -55.7348, 0.88", "-32.5728, -88.7808, -56.4874, 0.88", "-32.9534, -89.5295, -57.1649, 0.88", "-33.4162, -90.6187, -58.0989, 0.88", "-33.757, -91.5216, -58.8604, 0.88", "-34.1055, -92.4314, -59.6309, 0.59", "-34.5698, -93.6006, -60.6627, 0.88", "-34.9934, -94.648, -61.6794, 0.88", "-35.3447, -95.4778, -62.4905, 0.88", "-35.6747, -96.1743, -63.113, 0.88", "-35.9501, -96.7231, -63.5885, 0.88", "-36.344, -97.5045, -64.2418, 0.88", "-36.6736, -98.1934, -64.737, 0.88", "-37.156, -99.2746, -65.46, 0.88", "-37.8346, -100.786, -66.4406, 0.88", "-38.3459, -101.873, -67.1548, 0.74", "-38.723, -102.652, -67.7085, 0.74", "-39.3653, -103.932, -68.6644, 0.74", "-39.8181, -104.763, -69.3208, 0.74", "-40.3523, -105.708, -70.1172, 0.74", "-41.0008, -106.819, -71.0873, 0.74", "-41.8516, -108.156, -72.2769, 0.74", "-42.6746, -109.314, -73.3446, 0.74", "-43.3924, -110.242, -74.2414, 0.74", "-44.5362, -111.724, -75.6499, 0.52", "-45.0963, -112.496, -76.37, 0.52", "-45.7399, -113.452, -77.2049, 0.52", "-46.2858, -114.318, -77.9363, 0.52", "-46.9272, -115.425, -78.8579, 0.52", "-47.242, -116.029, -79.2774, 0.52", "-48.0019, -117.603, -80.1802, 0.52", "-48.6133, -118.954, -80.869, 0.52", "-49.4447, -120.883, -81.7523, 0.52", "-50.0775, -122.321, -82.3574, 0.52", "-51.1633, -124.611, -83.307, 0.52", "-51.5723, -125.382, -83.6562, 0.52", "-52.2895, -126.559, -84.2572, 0.52", "-53.1206, -127.78, -84.9745, 0.74", "-53.8878, -128.803, -85.5271, 0.74", "-54.7242, -129.826, -86.2154, 0.88", "-55.3099, -130.436, -86.7689, 0.88", "-56.112, -131.255, -87.5714, 0.88", "-56.5568, -131.747, -88.0437, 0.88", "-57.6305, -133.126, -89.2406, 1.11", "-59.0361, -135.373, -90.9484, 1.11", "-59.6312, -136.59, -91.8067, 0.74", "-60.1812, -138.057, -92.8376, 0.74", "-60.566, -139.258, -93.6712, 0.96", "-61.1, -141.045, -94.9212, 0.96", "-61.4889, -142.301, -95.8382, 0.81", "-62.126, -144.137, -97.143, 0.81", "-62.8124, -145.756, -98.4251, 0.66", "-63.7059, -147.339, -99.9337, 0.66", "-64.2475, -148.052, -100.75, 0.66", "-64.8744, -148.65, -101.572, 0.66", "-65.8436, -149.364, -102.675, 0.66", "-67.2535, -150.224, -104.225, 0.66", "-68.0571, -150.677, -105.195, 0.66", "-68.738, -151.093, -106.131, 0.66", "-69.5419, -151.695, -107.383, 0.66", "-70.2414, -152.348, -108.609, 0.66", "-71.3834, -153.653, -110.853, 0.66", "-72.2268, -154.842, -112.753, 0.44", "-72.7549, -155.667, -113.989, 0.44", "-73.3786, -156.737, -115.574, 0.44", "-73.6517, -157.229, -116.321, 0.52", "-74.1248, -158.002, -117.557, 0.52", "-74.5648, -158.626, -118.624, 0.52", "-75.0378, -159.168, -119.811, 0.52", "-75.2243, -159.33, -120.307, 0.59", "-75.784, -159.713, -121.875, 0.59", "-76.2483, -159.993, -123.293, 0.59", "-76.7134, -160.222, -124.695, 0.59", "-77.2116, -160.444, -126.016, 0.59", "-77.5303, -160.597, -126.765, 0.59", "-77.9952, -160.843, -127.695, 0.59", "-78.2455, -160.971, -128.121, 0.59", "-78.8123, -161.232, -128.976, 0.59", "-79.7232, -161.581, -130.205, 0.37", "-80.5139, -161.791, -131.196, 0.37", "-81.2147, -161.893, -132.048, 0.37", "-81.9561, -161.927, -132.902, 0.37", "-82.859, -161.897, -133.854, 0.37", "-83.7726, -161.805, -134.834, 0.37", "-84.6875, -161.676, -135.797, 0.37", "-85.3754, -161.586, -136.447, 0.37", "-85.7795, -161.571, -136.766, 0.52", "-87.0336, -161.652, -137.735, 0.66", "-88.9639, -161.918, -139.101, 0.66", "-89.4841, -162.005, -139.433, 0.66", "-90.3127, -162.158, -139.946, 0.66", "-92.4501, -162.562, -141.339, 0.15", "-94.4402, -162.935, -142.725, 0.37", "-95.9058, -163.179, -143.766, 0.52", "-97.2153, -163.352, -144.651, 0.52", "-98.7108, -163.509, -145.714, 0.52", "-100.308, -163.641, -146.915, 0.52", "-101.432, -163.715, -147.871, 0.52", "-102.786, -163.828, -149.07, 0.52", "-103.509, -163.908, -149.788, 0.52", "-104.42, -164.031, -150.712, 0.52", "-104.935, -164.11, -151.251, 0.52", "-106.501, -164.386, -152.953, 0.52", "-107.495, -164.605, -154.175, 0.52", "-107.748, -164.674, -154.52, 0.52", "-108.09, -164.771, -155.001, 0.52", "-109.384, -165.203, -156.857, 0.52", "-110.039, -165.494, -157.844, 0.52", "-110.758, -165.904, -159.038, 0.52", "-111.455, -166.383, -160.322, 0.52", "-111.972, -166.793, -161.382, 0.52", "-112.732, -167.43, -162.981, 0.29", "-113.362, -167.977, -164.274, 0.29", "-114.058, -168.64, -165.829, 0.29", "-114.26, -168.873, -166.35, 0.29", "-114.71, -169.579, -167.902, 0.29" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-5.32852, -24.51, 1.7792, 2.06", "-6.1199, -26.348, 2.24383, 2.06", "-6.54352, -27.4469, 2.43906, 2.06", "-7.25076, -29.4314, 2.67829, 2.06", "-7.85318, -31.1376, 2.8497, 1.99", "-8.72253, -33.475, 3.12812, 1.99", "-9.84446, -36.383, 3.51856, 1.99", "-11.0526, -39.484, 3.89271, 1.99", "-12.4601, -43.0509, 4.31798, 1.99", "-13.4425, -45.5681, 4.59817, 1.99", "-14.4959, -48.2299, 4.92259, 1.99", "-15.5897, -50.8768, 5.30814, 1.99", "-15.9836, -51.7486, 5.46556, 1.99", "-16.8009, -53.3979, 5.84694, 1.99" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-57.8063, -47.5642, 37.1579, 0.07", "-63.1435, -52.8926, 41.6486, 0.07", "-68.2565, -57.8433, 46.7662, 0.07", "-72.9818, -63.8429, 51.1336, 0.07", "-78.1011, -68.6439, 56.379, 0.07", "-81.6661, -74.2314, 62.1399, 0.07", "-85.4515, -79.7657, 67.809, 0.07", "-88.4064, -85.2667, 73.9785, 0.07", "-92.3703, -88.8605, 80.8798, 0.07", "-96.757, -93.6127, 86.7872, 0.07", "-100.532, -99.4849, 92.1308, 0.07", "-104.137, -104.675, 98.2112, 0.07", "-108.526, -108.554, 104.696, 0.07", "-111.678, -113.048, 111.511, 0.07" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-57.8063, -47.5642, 37.1579, 0.29", "-66.4852, -56.6072, 43.5754, 0.07", "-72.7118, -66.7738, 51.1186, 0.07", "-78.417, -78.8671, 55.8605, 0.07", "-81.9911, -91.3841, 61.5209, 0.07", "-82.7421, -104.042, 67.8882, 0.07", "-81.3217, -115.558, 75.9585, 0.07", "-81.6715, -127.031, 84.2089, 0.07", "-82.9679, -138.647, 92.1737, 0.07", "-84.3262, -149.382, 101.229, 0.07", "-85.6673, -161.781, 107.976, 0.07", "-86.0967, -174.938, 113.335, 0.07", "-88.0169, -188.043, 118.502, 0.07", "-90.8848, -201.854, 120.621, 0.07", "-91.5867, -215.805, 123.489, 0.07" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.1369, 25.7366, 3.41882, 0.88", "-0.249795, 27.4383, 3.98437, 0.88", "-0.266466, 28.6802, 4.48863, 1.11", "-0.29111, 30.5159, 5.23405, 1.11", "-0.308896, 31.8407, 5.77201, 1.11", "-0.32662, 33.1609, 6.3081, 1.25", "-0.359566, 35.6151, 7.30464, 1.25", "-0.375863, 36.4547, 7.74514, 1.25" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-0.1369, 25.7366, 3.41882, 0.81", "-1.35652, 27.5304, 3.96047, 0.81", "-2.85135, 29.6556, 4.6433, 0.81", "-4.59, 32.1179, 5.48427, 0.81", "-6.24944, 34.4955, 6.33403, 0.66", "-7.86376, 36.8251, 7.29682, 0.66", "-8.56015, 37.8319, 7.80252, 0.37", "-9.40409, 39.1371, 8.57267, 0.22", "-10.3692, 40.6364, 9.64829, 0.22", "-10.7905, 41.2297, 10.1675, 0.37", "-11.8042, 42.4224, 11.6568, 0.37", "-13.0284, 43.7875, 13.623, 0.37", "-13.8176, 44.6594, 14.9009, 0.22", "-14.3555, 45.2263, 15.735, 0.22", "-14.9437, 45.8152, 16.5888, 0.22", "-16.5183, 47.3894, 18.7558, 0.29", "-19.011, 49.8725, 21.9444, 0.52", "-20.3053, 51.2268, 23.5661, 0.52", "-21.7013, 52.7894, 25.4225, 0.52", "-22.0013, 53.1502, 25.8417, 0.66", "-22.9077, 54.3469, 27.2765, 0.81", "-23.841, 55.7649, 28.9102, 0.81", "-24.7261, 57.3123, 30.7329, 0.59", "-25.3908, 58.7169, 32.3234, 0.59", "-26.3272, 61.056, 34.8525, 0.59", "-27.5703, 64.5052, 38.3193, 0.59", "-27.963, 65.6647, 39.3884, 0.07", "-28.3683, 66.6282, 40.2606, 0.07", "-28.7066, 67.2212, 40.8519, 0.07", "-29.3496, 68.0627, 41.7935, 0.15", "-30.2022, 68.8545, 42.8012, 0.15", "-30.9877, 69.4016, 43.5804, 0.15", "-34.4245, 71.5235, 46.8679, 0.37", "-37.347, 73.2329, 49.44, 0.52", "-39.3618, 74.4396, 51.1683, 0.66", "-40.8842, 75.392, 52.4575, 0.44", "-42.2718, 76.319, 53.6216, 0.44", "-43.5713, 77.267, 54.7177, 0.44", "-45.674, 79.0003, 56.4729, 0.44", "-47.3172, 80.4114, 57.8757, 0.44", "-48.9292, 81.873, 59.3324, 0.44", "-49.4781, 82.41, 59.9122, 0.44", "-51.1115, 84.0202, 61.8758, 0.44", "-51.9515, 84.8201, 62.989, 0.44", "-52.8279, 85.6548, 64.5189, 0.44", "-59.4489, 94.3629, 74.6758, 0.44", "-64.1765, 102.05, 86.5328, 0.44", "-66.6277, 110.516, 98.5731, 0.44", "-68.3538, 118.784, 110.867, 0.44", "-71.1896, 124.122, 124.432, 0.44", "-75.9601, 128.616, 137.743, 0.44", "-80.37, 131.004, 151.682, 0.44", "-83.0592, 134.661, 165.797, 0.44", "-84.3661, 137.949, 180.191, 0.44", "-87.4694, 142.517, 193.963, 0.44", "-90.5735, 148.631, 207.154, 0.44", "-94.316, 154.178, 220.416, 0.44", "-98.2603, 159.396, 233.746, 0.44" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "5.48506, 22.276, -11.27, 1.03", "7.38633, 23.7853, -12.8788, 1.03", "8.7875, 24.7917, -14.171, 1.25", "11.6738, 26.627, -16.9464, 1.25", "14.0214, 27.9404, -19.1967, 1.25", "16.299, 29.0042, -21.1711, 1.25", "18.9333, 30.0127, -23.1838, 1.25", "22.5721, 30.7928, -25.5438, 1.25", "24.8188, 30.9365, -26.6482, 0.96", "27.1278, 30.884, -27.6205, 0.96", "30.9304, 30.523, -28.9222, 0.96", "33.9364, 30.0523, -29.6932, 0.96", "38.9973, 29.0335, -30.4834, 0.96", "45.0909, 27.6644, -30.8298, 0.96" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "5.48506, 22.276, -11.27, 0.59", "5.5029, 21.8742, -12.0313, 0.59", "5.43693, 21.0562, -13.659, 0.59", "5.38325, 20.5843, -14.553, 0.59", "5.31565, 20.1438, -15.3644, 0.59", "5.16936, 19.3851, -16.8264, 0.59", "4.99195, 18.5068, -18.5729, 0.59", "4.68468, 17.2187, -21.2201, 0.37", "4.41354, 16.1749, -23.3619, 0.37", "4.16286, 15.1827, -25.4224, 0.37", "3.82837, 13.8699, -28.2936, 0.37", "3.55103, 12.7911, -30.786, 0.07", "3.2523, 11.7877, -33.4447, 0.07", "3.06434, 11.2826, -34.987, 0.07", "2.85531, 10.8822, -36.496, 0.07", "2.5214, 10.3997, -38.6908, 0.07", "2.26645, 10.134, -40.1147, 0.22", "1.4162, 9.49626, -44.1955, 0.22", "1.12765, 9.3106, -45.5271, 0.37", "0.681155, 9.0378, -47.6136, 0.37", "0.487843, 8.91748, -48.5418, 0.37", "0.340819, 8.80977, -49.3258, 0.37", "0.195723, 8.67765, -50.2672, 0.37", "0.0744092, 8.47963, -51.5902, 0.37", "-0.115686, 8.13119, -54.3364, 0.37", "-0.202574, 7.9933, -55.7511, 0.37", "-0.471489, 7.86727, -58.6283, 0.37", "-0.673058, 7.89609, -60.0482, 0.37", "-0.854019, 7.98178, -60.9144, 0.37", "-1.19573, 8.1931, -62.0399, 0.37", "-1.53899, 8.43695, -62.829, 0.37", "-2.70094, 9.32575, -64.8798, 0.37", "-3.30106, 9.79058, -65.7627, 0.37", "-3.81193, 10.1709, -66.4887, 0.37", "-4.4084, 10.5953, -67.3649, 0.37", "-5.08678, 11.1063, -68.5265, 0.37", "-5.58026, 11.5148, -69.4593, 0.37", "-6.2296, 12.1521, -70.8856, 0.37", "-6.74476, 12.7383, -72.2011, 0.37", "-7.23829, 13.421, -73.5322, 0.37", "-7.85217, 14.4606, -75.3788, 0.37", "-8.22145, 15.2435, -76.6646, 0.37", "-8.56304, 16.1393, -77.969, 0.37", "-8.83284, 17.0892, -79.1562, 0.37", "-9.3023, 19.469, -81.5985, 0.07", "-9.54868, 21.2785, -83.1702, 0.07", "-9.65739, 22.4848, -84.1381, 0.07", "-9.69945, 23.4813, -84.9401, 0.07", "-9.69529, 25.0115, -86.2055, 0.07", "-9.57551, 27.3292, -88.2321, 0.07", "-9.50323, 27.912, -88.8236, 0.07", "-9.18487, 29.9581, -91.2055, 0.07", "-8.93351, 31.3201, -92.8622, 0.07", "-8.76589, 32.1066, -93.8487, 0.07", "-8.53931, 33.1461, -95.1408, 0.07", "-8.17415, 34.8018, -97.1388, 0.07", "-7.89305, 36.2092, -98.6487, 0.07", "-7.44112, 38.8725, -101.012, 0.07", "-7.22625, 40.3489, -102.128, 0.07", "-7.10255, 41.5503, -102.961, 0.07", "-7.04748, 42.4649, -103.56, 0.07", "-7.00744, 43.2865, -104.078, 0.07", "-6.88729, 44.6224, -105.039, 0.07", "-6.76172, 45.3839, -105.75, 0.07", "-6.04758, 47.2452, -107.918, 0.07", "-5.45124, 48.0873, -109.119, 0.07", "-4.74825, 48.7103, -110.124, 0.07", "-3.39332, 49.5295, -111.564, 0.07", "-2.61855, 49.8715, -112.178, 0.07", "-0.42405, 50.6642, -113.471, 0.07", "0.740034, 51.0244, -113.923, 0.07", "2.18467, 51.4501, -114.322, 0.07", "3.29771, 51.7688, -114.548, 0.07", "4.5779, 52.0854, -114.696, 0.07", "5.96105, 52.3599, -114.827, 0.07", "7.36923, 52.5707, -115.047, 0.07", "9.26724, 52.7707, -115.519, 0.07", "11.6556, 52.9323, -116.361, 0.07", "12.9712, 52.9754, -116.942, 0.07", "14.427, 52.9875, -117.726, 0.07", "17.661, 53.0422, -119.797, 0.07", "18.3919, 53.0792, -120.318, 0.07", "19.6755, 53.1795, -121.366, 0.07", "20.293, 53.2622, -121.946, 0.07", "20.9319, 53.4085, -122.598, 0.07", "21.801, 53.7007, -123.477, 0.07", "22.7078, 54.2145, -124.391, 0.07" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-19.3494, 27.7544, -8.44916, 0.29", "-21.1991, 28.8647, -9.66365, 0.29", "-23.8785, 30.2828, -11.4049, 0.29", "-25.3149, 30.9928, -12.3153, 0.07", "-26.3857, 31.5109, -12.9712, 0.07", "-26.7489, 31.6916, -13.1933, 0.07", "-28.6335, 32.6648, -14.4002, 0.37", "-29.3675, 33.022, -14.8826, 0.37", "-30.3794, 33.5202, -15.5593, 0.37", "-31.2416, 33.965, -16.2169, 0.37", "-32.2777, 34.4808, -17.0575, 0.59", "-33.2001, 34.8957, -17.8282, 0.59", "-33.9914, 35.1848, -18.4888, 0.59", "-35.5811, 35.6433, -19.7397, 0.59", "-36.9569, 35.9667, -20.8278, 0.59", "-38.7768, 36.2852, -22.2417, 0.81", "-39.9586, 36.4157, -23.1033, 0.81", "-41.2328, 36.4962, -23.9585, 0.81", "-42.7999, 36.5178, -24.9718, 1.03" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-19.3494, 27.7544, -8.44916, 0.29", "-20.6224, 27.8015, -8.33067, 0.29", "-21.5363, 27.841, -8.23706, 0.29", "-22.7997, 27.9125, -8.10134, 0.29", "-24.1623, 28.0147, -7.95185, 0.52", "-26.1762, 28.1897, -7.72596, 0.88", "-27.8054, 28.3599, -7.54163, 0.37", "-28.6289, 28.5102, -7.45177, 0.37", "-29.5229, 28.7342, -7.33964, 0.37", "-30.2407, 28.9563, -7.23746, 0.37", "-31.2472, 29.3162, -7.07818, 0.37", "-32.0705, 29.6354, -6.93788, 0.37", "-33.8446, 30.3852, -6.64176, 0.37", "-35.4243, 31.0562, -6.33069, 0.37", "-36.3498, 31.4444, -6.12836, 0.37", "-38.4004, 32.3099, -5.65266, 0.15", "-39.5888, 32.8241, -5.34285, 0.15", "-41.0086, 33.4508, -4.94019, 0.15", "-43.0665, 34.372, -4.2976, 0.15", "-45.2194, 35.3671, -3.6283, 0.15", "-46.66, 36.0521, -3.14263, 0.15", "-47.6576, 36.548, -2.77844, 0.29", "-48.4687, 36.9706, -2.46919, 0.29", "-50.109, 37.8611, -1.82943, 0.15", "-51.1649, 38.4674, -1.44381, 0.37", "-51.8513, 38.829, -1.18589, 0.37", "-52.7696, 39.2549, -0.86428, 0.37", "-53.5376, 39.5656, -0.603745, 0.37", "-54.9343, 40.0626, -0.12376, 0.37", "-56.2824, 40.4974, 0.33568, 0.37", "-58.5633, 41.2141, 1.10411, 0.59", "-60.3943, 41.8019, 1.6978, 0.59", "-61.5543, 42.2287, 2.10026, 0.44", "-62.304, 42.5505, 2.3789, 0.44", "-63.1088, 42.9398, 2.68125, 0.44", "-64.8844, 43.9071, 3.33896, 0.29", "-66.0903, 44.68, 3.76105, 0.29", "-67.7691, 45.8505, 4.31904, 0.37", "-68.9319, 46.6645, 4.65252, 0.07", "-69.7789, 47.24, 4.87377, 0.07", "-70.7673, 47.8602, 5.09674, 0.07", "-71.5523, 48.2975, 5.23741, 0.29", "-72.5857, 48.8193, 5.36855, 0.29", "-74.0237, 49.4823, 5.47481, 0.29", "-74.5088, 49.7129, 5.508, 0.29", "-75.9028, 50.4693, 5.61671, 0.29", "-76.8244, 51.0113, 5.68572, 0.59", "-78.2665, 51.8979, 5.79032, 0.59", "-79.2433, 52.5128, 5.86079, 0.15", "-79.9597, 52.9723, 5.91276, 0.15", "-80.9633, 53.5781, 6.0035, 0.15", "-81.6954, 54.021, 6.06936, 0.15", "-82.6909, 54.6242, 6.15321, 0.22", "-84.1579, 55.5066, 6.27129, 0.22", "-84.9437, 55.9792, 6.33215, 0.22", "-86.7709, 57.008, 6.39178, 0.22", "-88.412, 57.922, 6.39928, 0.22", "-90.0843, 58.869, 6.37392, 0.22", "-91.3704, 59.6121, 6.32785, 0.22", "-92.4361, 60.2148, 6.28279, 0.22", "-95.5324, 61.9146, 6.15534, 0.22", "-97.4842, 62.9705, 6.07027, 0.22", "-98.8369, 63.6976, 6.02425, 0.22", "-101.706, 65.2885, 5.91643, 0.22", "-104.263, 66.7758, 5.82283, 0.22", "-105.75, 67.6964, 5.80089, 0.22", "-107.064, 68.5647, 5.81616, 0.22", "-109.087, 69.9877, 5.83017, 0.22", "-111.127, 71.5714, 5.82184, 0.22", "-113.209, 73.3488, 5.8188, 0.22", "-115.586, 75.5202, 5.82013, 0.22", "-117.026, 76.8601, 5.83409, 0.22", "-119.222, 78.9033, 5.88539, 0.22", "-120.927, 80.4878, 5.94367, 0.22", "-122.253, 81.7527, 5.99936, 0.22", "-123.951, 83.4521, 6.03886, 0.22", "-125.201, 84.772, 6.03868, 0.22", "-126.079, 85.7788, 6.0306, 0.22", "-128.894, 89.3043, 6.05298, 0.22", "-129.943, 90.7343, 6.06644, 0.22", "-131.114, 92.5188, 6.1591, 0.22", "-132.32, 94.6454, 6.36036, 0.22", "-133.138, 96.2412, 6.57529, 0.22", "-133.728, 97.445, 6.77518, 0.22", "-134.067, 98.1726, 6.9172, 0.22", "-135.839, 101.399, 7.44622, 0.22", "-136.286, 102.115, 7.53262, 0.22", "-138.004, 104.777, 7.69576, 0.22", "-139.511, 107.102, 7.719, 0.22", "-140.952, 109.461, 7.61132, 0.22", "-142.684, 112.64, 7.41273, 0.37", "-144.09, 115.557, 7.15821, 0.37", "-145.232, 118.29, 6.95761, 0.37", "-145.677, 119.759, 6.87082, 0.37", "-146.216, 122.307, 6.76697, 0.07", "-146.622, 125.495, 6.69068, 0.07", "-146.668, 127.34, 6.68166, 0.07", "-146.511, 130.379, 6.57675, 0.07", "-146.216, 134.115, 6.43972, 0.07", "-146.039, 135.803, 6.35821, 0.07", "-145.791, 137.472, 6.23074, 0.07", "-145.422, 139.259, 5.97256, 0.07", "-144.819, 141.489, 5.58459, 0.07" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.40654, 47.5527, -1.84882, 0.405088", "7.11726, 62.4548, -1.84882, 0.405088", "8.82798, 77.3569, -1.84882, 0.405088" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "30.3471, -41.2668, 53.9238, 0.07", "34.225, -42.7611, 60.6973, 0.07", "37.6027, -45.7067, 67.285, 0.07", "41.5199, -49.1066, 73.3503, 0.07" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "30.3471, -41.2668, 53.9238, 0.29", "35.8545, -43.3441, 63.2772, 0.07", "41.1813, -43.9678, 72.9253, 0.07" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-16.8009, -53.3979, 5.84694, 0.96", "-16.4197, -55.1367, 6.62911, 0.96", "-16.123, -56.4257, 7.16961, 0.96", "-15.8247, -58.0116, 7.78222, 0.96", "-15.4599, -60.5556, 8.69519, 1.18", "-15.3321, -61.8287, 9.11838, 1.18", "-15.2338, -63.156, 9.54025, 1.18", "-15.2068, -63.9143, 9.77677, 1.18", "-15.1702, -65.1788, 10.1397, 1.03", "-15.1455, -65.9419, 10.3597, 1.03", "-15.0754, -67.1373, 10.7812, 1.03", "-14.9904, -67.7204, 11.0522, 1.03", "-14.7561, -68.9905, 11.7145, 1.03", "-14.3481, -70.6383, 12.6595, 1.03", "-14.0241, -71.585, 13.2567, 1.03", "-13.4932, -72.8689, 14.1375, 1.03", "-12.8145, -74.2764, 15.2017, 1.03" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-16.8009, -53.3979, 5.84694, 1.33", "-16.7635, -55.2527, 4.3067, 1.33", "-16.7003, -58.3812, 1.70891, 1.33", "-16.6311, -61.8095, -1.13796, 1.33", "-16.603, -63.2035, -2.29549, 1.4" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-0.375863, 36.4547, 7.74514, 0.66", "0.607733, 38.3514, 7.68213, 0.66", "1.58379, 39.8206, 7.72851, 0.66", "2.75372, 41.3095, 7.85816, 0.88", "4.2533, 43.2178, 8.02434, 0.88", "5.1114, 44.3098, 8.11943, 0.88", "6.47779, 46.0487, 8.27085, 1.03", "7.46839, 47.0713, 8.45277, 0.74", "8.3558, 47.8179, 8.61894, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.375863, 36.4547, 7.74514, 0.59", "-1.26538, 37.5945, 8.09414, 0.59", "-2.05224, 38.6004, 8.53505, 0.59", "-2.69423, 39.4409, 8.98748, 0.74", "-3.41614, 40.4229, 9.58147, 1.11", "-3.98455, 41.2413, 10.1426, 1.11", "-4.63689, 42.2425, 10.894, 1.11", "-5.09698, 43.0526, 11.6553, 1.25", "-5.41087, 43.7469, 12.4242, 1.47", "-5.59091, 44.3317, 13.133, 1.47", "-5.6725, 45.0218, 13.997, 1.47", "-5.6391, 45.467, 14.5286, 1.47", "-5.51115, 46.0277, 15.1197, 1.47", "-5.32834, 46.67, 15.7182, 1.47", "-5.12929, 47.3076, 16.2228, 1.47", "-4.8756, 48.0796, 16.7885, 1.62", "-4.58825, 48.991, 17.3793, 1.62", "-4.31459, 49.9007, 17.9178, 1.69", "-3.73781, 51.9585, 19.0204, 1.69", "-3.49485, 52.9587, 19.5181, 1.69" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "45.0909, 27.6644, -30.8298, 0.81", "48.3242, 27.4122, -30.7473, 0.81", "50.0765, 27.4023, -30.6155, 0.81", "52.026, 27.4955, -30.3471, 0.52", "53.5241, 27.6568, -30.0976, 0.52", "55.059, 27.8814, -29.8422, 0.52", "56.4223, 28.0853, -29.5986, 0.74", "58.0506, 28.3297, -29.2913, 0.74", "59.8761, 28.6084, -28.9237, 0.74", "61.6122, 28.8284, -28.6213, 0.74", "64.8382, 28.9997, -28.1293, 0.37", "65.8928, 28.9759, -28.0127, 0.37", "68.6045, 28.808, -27.7783, 0.66", "69.2779, 28.7436, -27.7492, 0.66", "71.947, 28.3747, -27.7155, 1.03", "73.7304, 28.0262, -27.7152, 1.03", "76.4103, 27.4006, -27.7825, 1.03" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "45.0909, 27.6644, -30.8298, 0.59", "46.095, 28.4901, -31.5009, 0.59", "47.2175, 29.4133, -32.2512, 0.59", "49.0689, 30.9358, -33.4886, 0.59", "49.7809, 31.5213, -33.9645, 0.59", "51.4384, 32.8845, -35.0724, 0.59", "52.7585, 33.97, -35.9547, 0.59" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-42.7999, 36.5178, -24.9718, 0.74", "-44.5202, 38.5375, -27.6582, 0.74", "-46.031, 40.4002, -30.1167, 0.74", "-46.755, 41.3833, -31.3267, 0.74", "-48.6273, 43.9039, -34.3251, 0.74", "-49.3876, 44.8748, -35.4901, 0.52", "-50.0746, 45.6852, -36.4606, 0.52", "-50.9973, 46.7179, -37.5735, 0.52", "-52.6422, 48.3344, -39.1526, 0.52", "-53.7293, 49.2214, -40.0265, 0.52", "-54.7713, 49.9028, -40.7013, 0.52", "-56.3949, 50.8577, -41.5845, 0.15", "-57.8632, 51.6473, -42.2745, 0.15", "-59.8192, 52.6051, -43.0992, 0.15", "-62.0737, 53.6194, -44.0124, 0.15", "-63.6981, 54.3521, -44.6985, 0.15", "-65.0415, 54.9548, -45.292, 0.15", "-65.9732, 55.3263, -45.7566, 0.15", "-68.5783, 56.1961, -47.2236, 0.29", "-69.3469, 56.41, -47.7408, 0.29", "-70.6946, 56.7307, -48.8469, 0.29", "-71.5071, 56.8751, -49.5988, 0.29", "-73.3042, 57.111, -51.3891, 0.29", "-74.2008, 57.2353, -52.295, 0.29", "-76.099, 57.5796, -54.1853, 0.44", "-77.3199, 57.8982, -55.37, 0.44", "-78.7279, 58.4094, -56.5773, 0.44", "-79.4135, 58.7656, -57.1397, 0.22", "-81.0026, 59.8639, -58.3574, 0.22", "-82.4126, 61.0276, -59.4131, 0.22", "-83.0371, 61.639, -59.9104, 0.22", "-84.7423, 63.5529, -61.5502, 0.22", "-86.2926, 65.4283, -63.2933, 0.22", "-87.0254, 66.3533, -64.2237, 0.22", "-88.4541, 68.1064, -66.0971, 0.22", "-89.5433, 69.4433, -67.5214, 0.22", "-91.2915, 71.6039, -69.7688, 0.22", "-92.7536, 73.4836, -71.8073, 0.22", "-94.31, 75.3162, -73.7999, 0.22", "-96.9549, 78.0663, -76.8165, 0.22", "-98.958, 79.7263, -78.7755, 0.22", "-100.332, 80.6025, -79.9341, 0.22", "-103.828, 82.3224, -82.5757, 0.22", "-107.052, 83.538, -84.8617, 0.22", "-110.488, 84.5357, -87.1142, 0.22", "-115.32, 85.5902, -90.1952, 0.07", "-118.297, 86.0873, -92.0794, 0.07", "-120.202, 86.3407, -93.2666, 0.07", "-124.257, 86.8345, -95.8221, 0.07", "-126.051, 87.0873, -97.0572, 0.07", "-128.88, 87.5633, -99.0855, 0.07", "-131.56, 88.078, -100.937, 0.07", "-135.755, 88.8892, -103.676, 0.07", "-139.157, 89.5566, -105.822, 0.07", "-141.67, 90.1029, -107.348, 0.07", "-143.51, 90.5786, -108.441, 0.07", "-147.236, 91.719, -110.557, 0.07", "-150.54, 92.9094, -112.431, 0.07", "-153.72, 94.2508, -114.331, 0.07", "-157.007, 95.7827, -116.432, 0.07", "-159.889, 97.2739, -118.423, 0.07", "-162.375, 98.681, -120.097, 0.07", "-164.432, 99.9592, -121.383, 0.07", "-166.301, 101.222, -122.442, 0.07", "-168.062, 102.475, -123.344, 0.07", "-170.67, 104.519, -124.606, 0.07", "-176.077, 109.263, -127.074, 0.07", "-179.15, 112.277, -128.493, 0.07", "-181.069, 114.302, -129.384, 0.07", "-182.961, 116.435, -130.268, 0.07", "-185.085, 119.032, -131.315, 0.07", "-186.787, 121.345, -132.299, 0.07", "-188.767, 124.396, -133.713, 0.07", "-189.962, 126.216, -134.632, 0.07", "-191.084, 127.836, -135.472, 0.07", "-192.462, 129.738, -136.467, 0.07", "-193.668, 131.274, -137.317, 0.07", "-194.967, 132.886, -138.209, 0.07", "-196.761, 135.04, -139.271, 0.07" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-42.7999, 36.5178, -24.9718, 0.44", "-43.7899, 36.6535, -25.467, 0.44", "-44.65, 36.8127, -25.8487, 0.44", "-46.0079, 37.064, -26.4513, 0.44", "-47.1742, 37.2799, -26.9689, 0.44", "-48.8328, 37.5869, -27.705, 0.44", "-51.1426, 38.0145, -28.7301, 0.44", "-53.4945, 38.5963, -29.8064, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "41.5199, -49.1066, 73.3503, 0.07", "38.6456, -44.0599, 85.7542, 0.07", "34.3998, -41.3739, 98.464, 0.07", "32.2114, -38.0293, 111.539, 0.07", "32.6133, -33.1922, 124.34, 0.07", "30.7482, -30.4021, 137.588, 0.07", "28.7587, -28.8569, 151.013, 0.07", "27.0148, -27.2761, 164.467, 0.07", "25.3962, -22.6949, 177.264, 0.07", "22.435, -17.34, 189.523, 0.07", "22.2684, -9.49175, 200.818, 0.07", "24.1595, 0.583264, 210.089, 0.07", "25.8649, 10.5976, 219.459, 0.07", "24.9682, 20.423, 229.13, 0.07", "22.6321, 28.6387, 239.928, 0.07", "18.3465, 38.1535, 248.975, 0.07", "16.7698, 49.688, 256.536, 0.07", "16.8508, 60.3077, 265.415, 0.07", "16.5437, 70.3786, 274.88, 0.07", "17.4874, 80.3452, 284.406, 0.07", "16.8726, 91.9626, 291.982, 0.07", "16.5656, 102.498, 300.953, 0.07", "15.1061, 113.294, 309.509, 0.07", "11.2299, 122.577, 318.959, 0.07", "5.7196, 132.38, 326.997, 0.07", "-0.693189, 139.996, 336.491, 0.07", "-7.41754, 145.216, 347.228, 0.07", "-12.7191, 151.602, 358.159, 0.07" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "41.5199, -49.1066, 73.3503, 0.07", "45.4854, -52.9716, 74.8636, 0.07", "48.6929, -57.1493, 77.1797, 0.07", "51.0613, -62.0323, 79.1706, 0.07", "53.4043, -66.4541, 82.0329, 0.07", "55.456, -70.9712, 84.9773, 0.07", "57.3366, -75.1002, 88.5199, 0.07", "58.1974, -78.8776, 92.7645, 0.07", "59.757, -82.1562, 97.1985, 0.07", "61.2565, -85.3605, 101.704, 0.07", "61.8869, -89.6735, 105.477, 0.07", "61.8532, -94.5353, 108.614, 0.07", "62.4385, -99.0883, 112.116, 0.07", "62.6177, -104.023, 115.137, 0.07", "62.8522, -108.61, 118.638, 0.07", "63.0656, -112.854, 122.531, 0.07", "62.732, -116.949, 126.566, 0.07", "63.4684, -121.473, 130.075, 0.07", "63.8645, -125.977, 133.663, 0.07", "64.0215, -130.441, 137.317, 0.07", "63.5688, -134.992, 140.843, 0.07", "61.9183, -138.711, 144.902, 0.07", "59.8195, -142.103, 149.024, 0.07" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "41.1813, -43.9678, 72.9253, 0.07", "46.3267, -45.31, 80.2107, 0.07", "51.2196, -48.3496, 87.1819, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "41.1813, -43.9678, 72.9253, 0.07", "44.526, -44.8307, 79.8247, 0.07", "46.6811, -45.6998, 87.1799, 0.07", "47.4862, -46.4883, 94.8088, 0.07", "47.8331, -47.5133, 102.444, 0.07", "48.6605, -47.1271, 110.102, 0.07", "49.8382, -47.5738, 117.71, 0.07", "50.1005, -47.1496, 125.406, 0.07", "49.2786, -47.1683, 133.074, 0.07", "49.479, -47.7397, 140.762, 0.07", "49.2208, -48.7359, 148.404, 0.07", "49.5652, -50.5633, 155.894, 0.07", "50.3917, -50.8941, 163.553, 0.07", "52.6166, -52.156, 170.833, 0.07", "54.8025, -53.0333, 178.178, 0.07", "55.7129, -54.1301, 185.759, 0.07", "55.9052, -56.2801, 193.17, 0.07", "55.7896, -57.5196, 200.782, 0.07", "54.7724, -59.176, 208.246, 0.07", "54.044, -59.1464, 215.924, 0.07", "54.0641, -59.4268, 223.63, 0.07", "53.7815, -60.4399, 231.269, 0.07", "54.1406, -60.8636, 238.96, 0.07", "54.0966, -62.2035, 246.556, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-12.8145, -74.2764, 15.2017, 0.81", "-12.241, -75.1356, 16.2327, 0.81", "-11.8137, -75.7965, 17.463, 0.81", "-11.3859, -76.5244, 19.03, 0.81", "-11.1575, -76.8749, 19.7774, 0.81", "-10.6063, -77.7145, 21.4567, 0.81", "-9.55456, -79.3765, 24.4751, 0.81", "-8.71484, -80.742, 26.8374, 0.81", "-8.27078, -81.4397, 27.976, 0.81", "-7.4855, -82.5363, 29.8461, 0.52", "-7.01614, -83.1556, 30.9062, 0.52", "-6.43314, -83.9259, 32.1094, 0.52", "-6.08781, -84.3789, 32.6232, 0.52", "-5.57705, -85.1145, 33.2985, 0.52", "-4.78338, -86.4789, 34.5072, 0.66", "-4.40513, -87.4585, 35.3816, 0.66", "-4.26056, -88.1654, 36.013, 0.66", "-4.26327, -89.1434, 36.8434, 0.66", "-4.51172, -90.3964, 37.8793, 0.66", "-4.96099, -91.4918, 38.7389, 0.81", "-5.54762, -92.4811, 39.4904, 0.81", "-6.31756, -93.4555, 40.2649, 0.66", "-7.07748, -94.3032, 40.9847, 0.66", "-7.88569, -95.1005, 41.721, 0.66", "-8.73941, -95.8063, 42.3646, 0.37", "-9.50794, -96.3373, 42.8445, 0.37", "-10.669, -97.024, 43.4813, 0.37", "-11.7313, -106.176, 52.2882, 0.37", "-10.5916, -113.222, 62.771, 0.37", "-7.97402, -120.977, 72.4866, 0.37", "-4.48604, -130.2, 80.5716, 0.37", "-2.09328, -140.073, 88.3161, 0.37", "-1.24051, -150.573, 95.5805, 0.37", "-2.15147, -160.901, 103.066, 0.37", "-2.51771, -169.754, 112.216, 0.37", "-4.62409, -179.457, 120.237, 0.37", "-8.35459, -189.681, 126.936, 0.37", "-11.9589, -200.565, 132.638, 0.37", "-13.2909, -211.065, 139.826, 0.37", "-12.7194, -221.108, 147.708, 0.37", "-14.9943, -230.132, 156.408, 0.37", "-18.7317, -238.311, 165.392, 0.37", "-23.1597, -246.064, 174.419, 0.37", "-26.3265, -254.907, 183.016, 0.37", "-31.0301, -261.85, 192.518, 0.37", "-34.7701, -269.651, 201.815, 0.37" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-12.8145, -74.2764, 15.2017, 1.03", "-14.7893, -75.2535, 16.5123, 1.03", "-16.1736, -76.0035, 17.546, 1.03", "-17.5222, -76.8249, 18.7257, 1.03", "-18.5519, -77.5354, 19.7185, 0.96", "-19.2294, -78.073, 20.4187, 0.96", "-20.0113, -78.8126, 21.3024, 0.96", "-20.7147, -79.672, 22.1816, 0.66", "-21.74, -81.337, 23.7042, 0.66", "-22.1876, -82.2496, 24.5211, 0.66", "-22.646, -83.2267, 25.424, 0.66", "-23.2817, -84.4738, 26.5275, 0.66", "-23.6858, -85.2331, 27.1347, 0.66", "-24.0679, -85.921, 27.6474, 0.66", "-24.5945, -86.8108, 28.2939, 0.37", "-25.2467, -87.718, 29.0089, 0.37", "-25.9898, -88.5155, 29.7413, 0.52", "-26.8665, -89.2732, 30.538, 0.52", "-27.8327, -90.0649, 31.4387, 0.37", "-28.3304, -90.4908, 31.9507, 0.37", "-28.7706, -90.9075, 32.4282, 0.37", "-29.2559, -91.3972, 32.9991, 0.37", "-29.4654, -91.5859, 33.2558, 0.37", "-29.9446, -91.8932, 33.698, 0.37", "-30.4519, -92.1559, 34.1069, 0.37", "-34.289, -97.3112, 40.4713, 0.37", "-37.9047, -102.279, 47.101, 0.37", "-41.443, -108.697, 52.4689, 0.37", "-43.8553, -116.442, 56.6645, 0.37", "-46.2096, -124.836, 59.4746, 0.37", "-47.2955, -133.595, 61.9812, 0.37", "-48.9545, -142.165, 64.7788, 0.37", "-50.3234, -150.97, 66.9736, 0.37", "-50.1163, -160.007, 68.6037, 0.37", "-49.4595, -168.9, 70.7804, 0.37", "-48.8982, -177.318, 74.3425, 0.37", "-48.9367, -185.334, 78.7366, 0.37", "-48.1491, -192.672, 84.0839, 0.37", "-46.3295, -199.246, 90.0837, 0.37", "-43.6019, -204.607, 96.8402, 0.37", "-41.8351, -208.291, 104.865, 0.37", "-38.6738, -211.496, 112.654, 0.37", "-35.5625, -214.981, 120.348, 0.37", "-32.4913, -219.789, 127.348, 0.37", "-28.9943, -225.334, 133.587, 0.37" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-16.603, -63.2035, -2.29549, 1.18", "-16.8539, -64.2453, -3.55493, 1.18", "-17.0735, -65.9739, -5.66369, 1.18", "-17.0559, -67.4086, -7.12689, 1.4", "-17.0091, -68.4871, -8.10873, 1.69", "-16.9879, -69.3811, -8.91066, 1.69", "-16.9935, -71.0637, -10.3641, 1.69", "-16.9925, -71.9121, -11.0722, 1.69", "-16.9638, -74.3714, -12.8355, 1.4", "-16.9529, -75.4023, -13.5403, 1.4", "-16.9712, -77.2807, -14.823, 1.4", "-17.0783, -79.1378, -16.0872, 1.4", "-17.2858, -81.0733, -17.4606, 1.4", "-17.5097, -82.7352, -18.6845, 1.4", "-17.7942, -84.5978, -20.1577, 1.55", "-17.9663, -86.0239, -21.2747, 1.55", "-18.1649, -88.2177, -22.9273, 1.55", "-18.3467, -90.1637, -24.4831, 1.4" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-16.603, -63.2035, -2.29549, 0.88", "-17.5907, -63.9954, -3.17166, 0.88", "-18.1048, -64.3971, -3.62911, 0.88", "-18.7223, -64.8679, -4.18021, 0.66", "-19.8575, -65.6969, -5.19939, 0.66", "-20.8233, -66.3742, -6.07173, 0.66", "-21.5308, -66.862, -6.71112, 0.81", "-22.5224, -67.5802, -7.60884, 0.81", "-23.0382, -68.0043, -8.05603, 0.81", "-23.9659, -68.8629, -8.81799, 0.59", "-24.4417, -69.3216, -9.16451, 0.59", "-25.422, -70.2543, -9.80877, 0.59", "-26.3212, -71.1162, -10.3393, 0.59", "-27.2363, -72.0302, -10.8166, 0.59", "-28.0665, -72.8964, -11.2061, 0.59", "-29.1264, -74.0759, -11.6464, 0.96", "-29.7538, -74.773, -11.8798, 0.96", "-29.9873, -75.0082, -11.9621, 0.96", "-30.7454, -75.6553, -12.2418, 0.29", "-31.3912, -76.1605, -12.4802, 0.29", "-32.2928, -76.9192, -12.8075, 0.29", "-32.6681, -77.291, -12.9666, 0.29", "-33.6036, -78.3286, -13.4453, 0.29", "-33.9751, -78.7419, -13.6815, 0.29", "-34.2275, -79.0021, -13.8789, 0.29", "-35.0431, -79.907, -14.6258, 0.29", "-35.6245, -80.6315, -15.2488, 0.29", "-36.2024, -81.4049, -15.9846, 0.29", "-36.7846, -82.1567, -16.7849, 0.29", "-37.3632, -82.7978, -17.5465, 0.29", "-38.1371, -83.4807, -18.474, 0.29", "-38.4556, -83.71, -18.8219, 0.29", "-39.685, -84.5273, -20.0791, 0.29", "-41.1884, -85.4599, -21.5732, 0.52", "-42.7768, -86.3863, -23.1356, 0.52", "-45.3007, -87.7481, -25.5139, 0.52", "-48.7133, -89.3593, -28.4388, 0.52", "-50.5928, -90.1724, -29.8746, 0.52", "-52.1048, -90.7899, -30.8908, 0.37", "-53.0237, -91.1247, -31.4319, 0.37", "-54.141, -91.452, -31.9784, 0.37", "-56.4745, -91.9744, -32.8709, 0.37", "-59.5578, -92.5301, -33.7852, 0.37", "-60.8007, -92.7438, -34.1154, 0.37", "-62.0732, -92.9685, -34.4398, 0.37", "-63.7068, -93.2614, -34.9105, 0.29", "-64.3431, -93.3697, -35.1301, 0.29", "-65.7861, -93.5942, -35.7173, 0.29", "-67.0316, -93.755, -36.2573, 0.44", "-68.2248, -93.9395, -36.8243, 0.66", "-69.3132, -94.1405, -37.4018, 0.66", "-70.0678, -94.3082, -37.8668, 0.66", "-70.5362, -94.4195, -38.1896, 0.66", "-72.1368, -94.9063, -39.4023, 0.66", "-73.9541, -95.6536, -40.9167, 0.81", "-74.9082, -96.1743, -41.7779, 0.81", "-75.9989, -96.8957, -42.8102, 0.66", "-76.6644, -97.4027, -43.4571, 0.66", "-77.6006, -98.1718, -44.4733, 0.66", "-78.1645, -98.6576, -45.1955, 0.66", "-78.938, -99.2854, -46.2606, 0.66", "-80.1283, -100.217, -47.9632, 0.66", "-81.0653, -100.904, -49.3251, 0.66", "-83.4053, -102.463, -52.795, 0.66", "-84.7104, -103.276, -54.913, 0.66", "-85.5166, -103.774, -56.314, 0.74", "-86.0889, -104.155, -57.4446, 0.74", "-86.2661, -104.306, -57.895, 0.74", "-86.5964, -104.688, -58.9277, 0.74", "-86.8823, -105.336, -60.311, 0.74", "-86.9648, -105.929, -61.4561, 0.74", "-86.8179, -106.852, -63.2817, 0.74", "-86.542, -107.611, -64.8873, 0.81", "-86.2892, -108.033, -65.8238, 0.81", "-85.8129, -108.555, -67.1262, 0.88", "-85.1842, -109.015, -68.5649, 0.88", "-84.3773, -109.342, -70.1061, 0.88", "-84.035, -109.388, -70.6701, 0.88", "-83.2288, -109.36, -71.8842, 0.74", "-82.35, -109.248, -73.108, 0.74", "-81.5659, -109.107, -74.1395, 0.74", "-81.0314, -108.978, -74.8485, 0.74", "-80.1323, -108.749, -76.094, 0.52", "-79.8248, -108.687, -76.5301, 0.52", "-78.9252, -108.597, -77.7719, 0.52", "-77.5888, -108.639, -79.532, 0.52", "-76.9395, -108.724, -80.3645, 0.52", "-76.2494, -108.855, -81.2418, 0.52", "-75.7827, -108.965, -81.8349, 0.52", "-74.4056, -109.243, -83.4741, 0.52", "-73.9495, -109.31, -83.9728, 0.52", "-73.6538, -109.336, -84.2557, 0.52", "-73.1545, -109.363, -84.6929, 0.29", "-72.7579, -109.371, -85.0418, 0.29", "-71.992, -109.376, -85.711, 0.29", "-71.5004, -109.392, -86.1309, 0.29", "-69.5814, -109.501, -87.7105, 0.29", "-68.8266, -109.556, -88.2945, 0.29", "-67.3847, -109.667, -89.316, 0.29", "-66.4308, -109.71, -89.9148, 0.29", "-65.1669, -109.72, -90.585, 0.29", "-64.2746, -109.706, -90.9665, 0.29", "-63.1033, -109.674, -91.3087, 0.29", "-62.3669, -109.642, -91.4609, 0.15", "-61.0889, -109.551, -91.6624, 0.15", "-60.2659, -109.472, -91.78, 0.15", "-59.3161, -109.372, -91.9198, 0.15", "-58.0643, -109.261, -92.1608, 0.15", "-57.0241, -109.203, -92.4153, 0.15", "-56.0587, -109.197, -92.7172, 0.15", "-55.3924, -109.211, -92.9514, 0.15", "-53.7153, -109.237, -93.5801, 0.15", "-51.8203, -109.23, -94.3166, 0.15", "-51.0496, -109.227, -94.6426, 0.15", "-49.956, -109.285, -95.1193, 0.15" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "8.3558, 47.8179, 8.61894, 0.59", "9.67687, 48.6558, 8.3667, 0.59", "10.4317, 49.188, 8.24567, 0.52", "11.6849, 50.1184, 8.08511, 0.52", "13.4144, 51.4577, 7.93962, 0.44", "14.257, 52.1256, 7.88522, 0.44", "15.4672, 53.0688, 7.76473, 0.44", "17.2579, 54.4043, 7.57369, 0.44", "18.6842, 55.4894, 7.44429, 0.44", "20.7035, 57.0727, 7.30623, 0.44", "21.6336, 57.818, 7.26089, 0.44", "23.3551, 59.1714, 7.17352, 0.44", "24.7997, 60.2951, 7.13661, 0.59", "26.0589, 61.2365, 7.13332, 0.59", "29.7344, 63.9386, 7.22413, 0.74", "31.6099, 65.3032, 7.33126, 0.74", "33.8655, 66.9558, 7.54203, 0.74", "36.0175, 68.5357, 7.81424, 0.74", "37.5391, 69.6651, 7.96911, 0.44", "38.7688, 70.5736, 8.07258, 0.44", "40.5614, 71.8878, 8.20506, 0.29", "41.4519, 72.5248, 8.24954, 0.29", "44.2242, 74.4585, 8.27787, 0.29", "47.6166, 76.779, 8.24204, 0.15", "50.2555, 78.558, 8.19366, 0.15", "52.4854, 80.0055, 8.14318, 0.15", "54.6158, 81.3173, 8.15193, 0.15", "57.4286, 82.9873, 8.25928, 0.15", "58.9997, 83.9143, 8.39861, 0.07", "60.653, 84.8665, 8.66742, 0.07", "62.2081, 85.82, 9.02076, 0.07", "63.8624, 86.8991, 9.54199, 0.07", "64.3795, 87.2723, 9.74226, 0.07", "65.3659, 88.0667, 10.1872, 0.07", "66.0219, 88.6445, 10.4077, 0.07", "66.5269, 89.1327, 10.5617, 0.07", "67.3986, 89.9579, 10.7592, 0.07", "69.0106, 91.2821, 11.0696, 0.07", "70.0515, 92.0032, 11.3284, 0.22", "71.1269, 92.6453, 11.6679, 0.22", "72.889, 93.6181, 12.4166, 0.22", "73.7364, 94.0312, 12.8872, 0.22", "75.1683, 94.6395, 13.8892, 0.44", "76.0779, 94.9377, 14.6194, 0.44", "76.6303, 95.0967, 15.0572, 0.44", "77.4204, 95.339, 15.6943, 0.44", "78.8117, 95.8704, 16.7284, 0.44", "79.9132, 96.4044, 17.445, 0.22", "81.0751, 97.088, 18.1106, 0.22", "82.6987, 98.1538, 18.9735, 0.37", "83.7807, 98.9411, 19.5183, 0.37", "85.2947, 100.239, 20.1806, 0.37", "86.8064, 101.81, 20.7547, 0.37", "87.7438, 102.998, 21.0711, 0.37", "88.5886, 104.275, 21.3613, 0.37", "89.2107, 105.344, 21.5779, 0.37", "90.7352, 108.061, 22.1429, 0.37", "91.4676, 109.424, 22.4553, 0.59", "92.2169, 110.795, 22.787, 0.74", "93.2131, 112.514, 23.2336, 0.74", "94.206, 114.115, 23.7235, 0.74", "95.17, 115.565, 24.2919, 0.74", "95.9843, 116.69, 24.8631, 0.74", "96.9862, 117.933, 25.5619, 0.74", "97.8944, 118.993, 26.191, 0.96", "98.4294, 119.613, 26.563, 0.96", "99.0747, 120.344, 26.9978, 0.96", "99.506, 120.828, 27.2752, 0.96", "100.857, 122.358, 28.1694, 1.18", "101.842, 123.577, 28.857, 1.18", "102.408, 124.34, 29.2417, 1.18", "103.533, 126.07, 30.009, 1.03", "104.34, 127.499, 30.6229, 1.03", "104.772, 128.405, 31.0037, 1.03", "105.197, 129.575, 31.4905, 1.03", "105.532, 130.742, 31.9432, 0.74", "105.769, 131.932, 32.4088, 0.59", "105.868, 133.042, 32.8653, 0.59", "105.912, 133.799, 33.1589, 0.59", "106.043, 134.896, 33.6249, 0.59", "115.05, 141.184, 36.3787, 0.59", "124.598, 146.958, 38.238, 0.59", "134.659, 151.452, 40.6729, 0.59", "144.801, 156.293, 41.7664, 0.59", "154.867, 160.128, 45.0908, 0.59", "164.82, 162.633, 49.7153, 0.59", "174.37, 166.949, 53.8937, 0.59", "184.426, 171.831, 55.4905, 0.59", "194.298, 176.587, 58.2095, 0.59", "204.189, 180.524, 61.9252, 0.59", "213.603, 185.176, 66.0688, 0.59", "223.233, 189.286, 70.2609, 0.59", "233.053, 193.962, 73.2823, 0.59", "242.48, 199.125, 76.7659, 0.59", "252.413, 202.864, 80.5627, 0.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "8.3558, 47.8179, 8.61894, 0.44", "8.51455, 48.6225, 9.17083, 0.44", "8.71041, 49.3071, 9.74892, 0.44", "8.84843, 49.6487, 10.1227, 0.37", "9.09068, 50.132, 10.7687, 0.37", "9.25858, 50.3948, 11.212, 0.44", "9.39268, 50.5716, 11.5739, 0.74", "9.59284, 50.7255, 12.0847, 0.74", "9.84547, 50.8437, 12.7598, 0.74", "9.97021, 50.8982, 13.0924, 0.74", "10.2247, 51.021, 13.7983, 0.74", "10.4229, 51.1686, 14.395, 0.74", "10.5071, 51.2652, 14.726, 0.74", "10.5985, 51.4763, 15.3193, 0.74", "10.6358, 51.8037, 16.0466, 0.96", "10.6222, 52.0535, 16.513, 0.96", "10.5321, 52.5655, 17.3495, 0.66", "10.4601, 52.9671, 17.9348, 0.52", "10.4372, 53.1998, 18.2826, 0.52", "10.4325, 53.4615, 18.6992, 0.66", "10.4631, 53.7972, 19.2954, 0.66", "10.5047, 53.9186, 19.518, 0.66", "10.7004, 54.2134, 20.0441, 0.66", "11.1371, 54.71, 20.928, 0.66", "11.3811, 54.9679, 21.3751, 0.66", "11.6274, 55.2261, 21.8234, 0.81", "11.9856, 55.6108, 22.4845, 0.81", "12.3259, 56.0204, 23.1801, 0.66", "12.6617, 56.4967, 23.9754, 0.66", "12.8549, 56.8319, 24.5075, 0.66", "12.9472, 57.0103, 24.7843, 0.66", "13.0067, 57.1388, 24.9844, 0.66", "13.1663, 57.5528, 25.6351, 0.66", "13.2304, 57.718, 25.9141, 0.66", "13.409, 58.0458, 26.427, 0.66", "13.7664, 58.5283, 27.0652, 0.66", "13.9073, 58.7051, 27.2497, 0.66", "14.1451, 58.9849, 27.4809, 0.66", "14.6108, 59.4857, 27.8138, 0.66", "15.111, 60.0142, 28.1297, 0.52", "15.6251, 60.5738, 28.4067, 0.52", "16.0036, 61.0007, 28.5922, 0.44", "16.4414, 61.5117, 28.7772, 0.44", "16.6643, 61.7845, 28.8478, 0.44", "19.2276, 64.9195, 33.3118, 0.44", "22.3636, 66.9467, 38.0126, 0.44", "25.918, 69.0361, 42.3774, 0.44", "29.2206, 70.7096, 47.0964, 0.44", "33.4113, 71.7052, 51.2591, 0.44", "37.8085, 71.8959, 55.3166, 0.44", "42.7623, 70.7431, 58.4841, 0.44", "47.2864, 69.0326, 62.0314, 0.44", "51.1603, 66.9159, 66.1005, 0.44", "54.8921, 64.7253, 70.2639, 0.44", "57.8979, 61.725, 74.5318, 0.44", "61.6731, 59.4631, 78.6193, 0.44", "65.0913, 57.7901, 83.2536, 0.44", "69.2496, 57.2129, 87.5225, 0.44", "73.4577, 57.7108, 91.7521, 0.44", "77.8172, 58.7866, 95.7177, 0.44", "81.7868, 60.6643, 99.807, 0.44", "86.0826, 62.5338, 103.555, 0.44", "90.6797, 65.1016, 106.456, 0.44", "95.263, 66.8045, 109.929, 0.44", "100.179, 68.7923, 112.739, 0.44", "105.048, 71.0236, 115.455, 0.44", "110.109, 72.054, 118.489, 0.44", "115.693, 73.1662, 120.348, 0.44", "121.17, 73.1499, 122.765, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-3.49485, 52.9587, 19.5181, 0.74", "-3.0445, 53.6297, 19.7117, 0.74", "-2.27624, 54.8449, 20.0686, 0.74", "-1.64207, 55.8828, 20.3365, 0.96", "-1.24309, 56.518, 20.4718, 0.96", "-0.942605, 56.9777, 20.5544, 0.96", "-0.418425, 57.7257, 20.6613, 0.59", "-0.143314, 58.083, 20.6934, 0.59", "0.199567, 58.4521, 20.6729, 0.37", "0.680316, 58.9648, 20.5864, 0.37", "0.870085, 59.1863, 20.5444, 0.37", "1.26572, 59.7, 20.4558, 0.37", "1.68914, 60.3335, 20.3925, 0.37", "2.01883, 60.9262, 20.3669, 0.37", "2.40313, 61.592, 20.3928, 0.37", "2.83982, 62.3524, 20.4458, 0.37", "3.0624, 62.7519, 20.4882, 0.37", "3.44518, 63.5478, 20.5972, 0.52", "4.00791, 64.9267, 20.8034, 0.66", "4.4701, 66.2953, 20.9884, 0.66", "4.71349, 67.1527, 21.089, 0.66", "4.96625, 68.2204, 21.1865, 0.52", "5.22677, 69.6549, 21.338, 0.74", "5.35683, 70.6464, 21.4562, 0.74", "5.57616, 72.6505, 21.7213, 0.74", "5.72805, 74.0227, 21.9009, 0.88", "6.14051, 76.7596, 22.3759, 0.88", "6.38853, 77.933, 22.6451, 0.88", "6.54356, 78.4649, 22.8043, 0.81", "6.8749, 79.383, 23.1454, 0.81", "7.33993, 80.5479, 23.6303, 0.81", "7.88847, 81.9525, 24.213, 0.81", "8.26112, 82.9563, 24.6109, 0.81", "8.61341, 83.954, 24.9619, 0.44", "8.84747, 84.7264, 25.2166, 0.44", "9.15937, 85.9919, 25.6112, 0.44", "9.35926, 86.8843, 25.8654, 0.44", "9.70372, 88.4953, 26.2436, 0.44", "10.0472, 90.238, 26.6485, 0.44", "10.167, 90.8971, 26.8212, 0.44", "10.3449, 91.8793, 27.1041, 0.44", "10.4637, 92.4615, 27.3039, 0.44", "10.5587, 92.8138, 27.4183, 0.44", "10.7321, 93.3898, 27.5782, 0.44", "10.8761, 93.844, 27.6841, 0.44", "11.149, 94.6037, 27.8656, 0.44", "11.5083, 95.5036, 28.0838, 0.44", "12.4041, 97.5493, 28.6323, 0.44", "12.5113, 97.7616, 28.694, 0.44", "15.5, 104.775, 31.0572, 0.44", "17.6059, 112.343, 32.6132, 0.44", "19.6245, 119.498, 35.5432, 0.44", "21.7141, 126.457, 38.8465, 0.44", "23.4557, 133.165, 42.789, 0.44", "24.5825, 140.131, 46.5287, 0.44", "26.2073, 147.233, 49.8091, 0.44", "26.8277, 153.715, 54.4031, 0.44", "26.8432, 159.921, 59.3892, 0.44", "25.9236, 166.209, 64.1946, 0.44", "24.0892, 172.43, 68.8242, 0.44", "21.6682, 178.391, 73.5136, 0.44", "19.612, 185.201, 77.1595, 0.44", "15.9806, 191.889, 79.6109, 0.44", "13.1022, 199.215, 81.1521, 0.44", "11.0624, 206.989, 81.0099, 0.44", "10.3163, 214.887, 79.7138, 0.44", "10.653, 222.36, 76.8379, 0.44", "10.5298, 230.201, 75.0945, 0.44" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.49485, 52.9587, 19.5181, 1.47", "-4.71057, 54.8923, 21.2931, 1.47", "-5.24166, 55.7718, 22.1875, 1.03", "-5.54058, 56.3974, 22.8744, 0.59", "-5.63148, 56.6408, 23.1355, 0.59", "-5.85455, 57.3123, 23.8369, 0.81", "-6.09807, 58.0378, 24.5583, 0.81", "-6.3259, 58.663, 25.1204, 0.96", "-6.66648, 59.6966, 25.8958, 0.96", "-6.88331, 60.3443, 26.3273, 0.59", "-7.33028, 61.5772, 27.0336, 0.59", "-7.65475, 62.3741, 27.4176, 0.74", "-8.16257, 63.4418, 27.8658, 0.96", "-9.03696, 65.0754, 28.4637, 1.11", "-9.74141, 66.2933, 28.9002, 1.11", "-10.083, 66.8424, 29.1188, 1.11", "-10.6517, 67.7199, 29.4848, 0.66", "-11.0449, 68.3164, 29.7487, 0.66", "-11.5153, 69.0015, 30.0787, 0.66", "-12.2557, 69.9396, 30.5568, 0.66", "-13.0169, 70.8983, 31.0253, 0.66", "-13.5669, 71.5814, 31.3709, 0.44", "-14.3404, 72.5178, 31.849, 0.29", "-15.3991, 73.7636, 32.4904, 0.37", "-16.4158, 74.9046, 33.0667, 0.22", "-22.5258, 80.4249, 37.4968, 0.22" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "76.4103, 27.4006, -27.7825, 0.66", "77.8866, 27.4035, -27.9323, 0.66", "80.5889, 27.2409, -28.1661, 0.66", "82.777, 26.9953, -28.4669, 0.66", "85.3092, 26.6519, -28.9642, 0.88", "86.3697, 26.492, -29.2259, 0.88", "88.7498, 26.1223, -29.9027, 1.11", "90.4096, 25.8485, -30.4508, 1.11", "93.605, 25.2243, -31.5702, 1.11", "95.7156, 24.7674, -32.4455, 0.74", "97.1799, 24.4356, -33.1591, 0.74", "98.8572, 24.0915, -34.0699, 0.74", "100.749, 23.8124, -35.2596, 0.74" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "76.4103, 27.4006, -27.7825, 0.29", "76.7512, 28.8048, -27.5892, 0.29", "76.9419, 30.2797, -27.4906, 0.29", "77.0154, 33.6966, -27.4024, 0.29", "77.0393, 34.8064, -27.3737, 0.29", "77.0729, 36.3684, -27.3334, 0.29", "77.0807, 36.7319, -27.324, 0.29", "76.9199, 38.8393, -27.2867, 0.29", "76.6878, 39.6663, -27.4532, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "52.7585, 33.97, -35.9547, 0.66", "53.5901, 34.7438, -36.5441, 0.66", "55.3703, 36.3874, -37.7227, 0.66", "57.05, 37.8719, -38.7203, 0.81", "58.5318, 39.1965, -39.4862, 0.59", "59.4174, 39.9834, -39.8956, 0.59", "60.2251, 40.7, -40.2338, 0.37", "61.204, 41.606, -40.56, 0.37", "62.7109, 42.9837, -40.9137, 0.37", "64.3405, 44.3398, -41.2416, 0.37", "65.4744, 45.2135, -41.46, 0.37", "66.6148, 46.0251, -41.6911, 0.37", "67.7242, 46.8082, -41.9721, 0.37", "68.6478, 47.4831, -42.2537, 0.37", "70.7787, 49.0878, -43.0289, 0.37", "71.7429, 49.8251, -43.437, 0.37", "74.0021, 51.6224, -44.4931, 0.37", "75.6338, 52.9647, -45.3467, 0.37", "76.4161, 53.6332, -45.8047, 0.22", "77.4236, 54.5577, -46.4377, 0.22", "77.898, 55.0393, -46.7634, 0.22", "78.665, 55.8472, -47.3167, 0.22", "79.4271, 56.6496, -47.839, 0.22", "80.4959, 57.6772, -48.4913, 0.22", "81.7042, 58.7808, -49.2071, 0.22", "82.1296, 59.1377, -49.4223, 0.22", "82.7487, 59.6212, -49.6794, 0.22", "84.3997, 60.8397, -50.2396, 0.29", "85.5813, 61.647, -50.561, 0.29", "86.7901, 62.427, -50.8695, 0.29", "88.3932, 63.3818, -51.3058, 0.29", "89.8074, 64.1691, -51.7022, 0.07", "90.6696, 64.602, -51.9059, 0.07", "91.8175, 65.1376, -52.11, 0.07", "93.1937, 65.7285, -52.3311, 0.07", "95.7374, 66.7841, -52.7973, 0.07", "98.1399, 67.7955, -53.3205, 0.07", "101.266, 69.1499, -54.0496, 0.07", "103.803, 70.3247, -54.6581, 0.07", "105.126, 71.0023, -54.9749, 0.07", "106.305, 71.7058, -55.2531, 0.07", "107.839, 72.8365, -55.6507, 0.07", "109.936, 74.6388, -56.129, 0.07", "111.009, 75.6785, -56.3345, 0.07", "112.201, 76.8115, -56.4579, 0.07", "114.081, 78.4417, -56.3879, 0.07", "115.657, 79.6171, -56.1622, 0.07", "118.539, 81.4489, -55.5603, 0.07", "119.874, 82.1957, -55.2092, 0.07", "122.692, 83.575, -54.4027, 0.07", "125.293, 84.61, -53.5729, 0.07", "127.414, 85.3131, -52.8814, 0.07", "129.279, 85.8993, -52.2621, 0.07", "130.943, 86.4524, -51.7118, 0.07", "132.116, 86.8967, -51.3062, 0.07", "136.43, 88.7109, -49.759, 0.22", "138.525, 89.6889, -49.0374, 0.22", "140.656, 90.7678, -48.3143, 0.22", "142.151, 91.5813, -47.8064, 0.22", "144.595, 93.001, -46.9614, 0.22", "146.512, 94.2216, -46.2826, 0.22", "148.204, 95.4005, -45.6734, 0.22", "151.019, 97.4187, -44.5989, 0.22", "152.606, 98.5513, -44.0056, 0.22", "154.325, 99.7534, -43.3919, 0.22", "155.708, 100.744, -42.8934, 0.22", "156.818, 101.637, -42.485, 0.22", "157.979, 102.576, -42.0771, 0.22", "159.198, 103.684, -41.7226, 0.22", "160.608, 105.085, -41.4335, 0.22", "161.589, 106.187, -41.3244, 0.22", "162.88, 107.817, -41.2783, 0.22", "164.323, 109.737, -41.3646, 0.22", "166.204, 112.268, -41.6724, 0.22", "166.99, 113.338, -41.8619, 0.22", "167.725, 114.335, -42.0792, 0.22", "169.683, 116.923, -42.7135, 0.22", "170.397, 117.845, -42.953, 0.22", "171.769, 119.589, -43.3971, 0.22", "173.758, 121.789, -43.907, 0.22", "174.588, 122.661, -44.0802, 0.22", "175.699, 123.752, -44.2658, 0.22", "176.369, 124.348, -44.3593, 0.22", "177.781, 125.481, -44.5053, 0.22", "179.681, 126.842, -44.6569, 0.22", "181.222, 127.849, -44.7974, 0.22", "182.894, 128.857, -44.9854, 0.22", "184.688, 129.825, -45.2434, 0.22", "185.817, 130.423, -45.4474, 0.22", "187.713, 131.438, -45.8518, 0.22", "188.578, 131.886, -46.091, 0.22", "190.185, 132.688, -46.6389, 0.22", "191.22, 133.19, -47.0467, 0.22", "193.186, 133.974, -47.8946, 0.22", "195.253, 134.552, -48.7872, 0.22", "196.963, 134.865, -49.5077, 0.22", "198.297, 135.02, -50.0185, 0.22", "199.646, 135.092, -50.4905, 0.22", "202.38, 135.075, -51.325, 0.22", "205.031, 134.882, -52.0955, 0.22", "206.451, 134.72, -52.4891, 0.22", "207.787, 134.578, -52.7951, 0.22", "209.003, 134.439, -53.0126, 0.22", "211.149, 134.237, -53.2843, 0.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "52.7585, 33.97, -35.9547, 0.44", "53.6128, 34.4846, -33.9104, 0.44", "54.6915, 35.11, -31.4809, 0.44", "56.4541, 35.9449, -27.8486, 0.44", "57.1495, 36.2558, -26.394, 0.44", "58.2589, 36.7809, -23.9519, 0.44", "58.7953, 37.043, -22.7115, 0.44", "59.2326, 37.2432, -21.6023, 0.44", "60.4803, 37.8338, -18.2598, 0.44", "61.9462, 38.5119, -13.9493, 0.07", "62.3241, 38.651, -12.655, 0.07", "62.6311, 38.7243, -11.3302, 0.07", "62.9096, 38.7776, -9.58445, 0.07", "63.0677, 38.795, -8.01944, 0.07", "63.204, 38.8065, -5.41855, 0.07", "63.2945, 38.7982, -3.38083, 0.07", "63.4116, 38.8668, -1.64191, 0.07", "63.6771, 39.4041, 1.88646, 0.07", "63.8446, 39.9126, 3.89779, 0.07", "64.1025, 40.8855, 6.61934, 0.07", "64.2705, 41.7933, 8.47416, 0.07", "64.5499, 43.1778, 10.9542, 0.07", "65.0423, 45.5903, 14.9925, 0.07", "65.1795, 46.2642, 16.0824, 0.07", "65.3652, 47.1876, 17.5803, 0.07", "65.5816, 49.0661, 20.549, 0.07", "65.7439, 50.7619, 23.3061, 0.07", "65.8209, 51.9151, 25.3941, 0.07", "65.9085, 53.2246, 28.1605, 0.07", "65.9517, 54.2167, 30.3601, 0.07", "65.9697, 55.5942, 33.6469, 0.07", "70.2801, 59.238, 44.3946, 0.07" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-53.4945, 38.5963, -29.8064, 0.07", "-55.0129, 38.6335, -31.9256, 0.07", "-56.115, 38.608, -33.4167, 0.29", "-57.2244, 38.549, -34.8423, 0.29", "-58.6938, 38.4262, -36.6581, 0.29", "-59.8227, 38.2683, -38.0187, 0.29", "-60.8867, 38.0656, -39.2554, 0.29", "-62.7046, 37.6022, -41.1619, 0.29", "-63.5651, 37.3359, -41.972, 0.29", "-64.3611, 37.0768, -42.5965, 0.29", "-65.3147, 36.7649, -43.2995, 0.29", "-66.7077, 36.3476, -44.2445, 0.29", "-68.1873, 35.9446, -45.1459, 0.29", "-70.2613, 35.5048, -46.2965, 0.29", "-72.8983, 35.1181, -47.7218, 0.29", "-75.5427, 34.9836, -49.0934, 0.29", "-77.1952, 35.0265, -49.9293, 0.29", "-78.2291, 35.0878, -50.4414, 0.29", "-79.7918, 35.232, -51.1928, 0.29", "-82.5331, 35.5142, -52.5025, 0.29", "-86.5432, 35.9797, -54.334, 0.07", "-88.2096, 36.135, -55.0288, 0.07", "-89.7759, 36.2488, -55.6908, 0.07", "-91.6593, 36.3432, -56.5607, 0.07", "-94.0696, 36.377, -57.707, 0.07", "-95.7886, 36.361, -58.5548, 0.07", "-98.4133, 36.2588, -59.9915, 0.15", "-99.3345, 36.2196, -60.576, 0.37", "-101.926, 36.1054, -62.3793, 0.37", "-103.696, 35.9757, -63.7948, 0.37", "-105.299, 35.8496, -65.2299, 0.37", "-107.355, 35.6556, -67.2221, 0.37", "-110.005, 35.3773, -69.9608, 0.37", "-111.506, 35.1858, -71.5288, 0.37", "-113.456, 34.8763, -73.6346, 0.37", "-114.744, 34.6265, -75.1746, 0.22", "-115.679, 34.4428, -76.3843, 0.22", "-116.388, 34.3149, -77.3511, 0.22", "-116.92, 34.2292, -78.0907, 0.22", "-117.77, 34.1108, -79.2816, 0.22", "-118.986, 33.9474, -80.8889, 0.22", "-120.192, 33.7604, -82.4895, 0.22", "-120.904, 33.6498, -83.4631, 0.22", "-121.513, 33.5625, -84.276, 0.22", "-122.183, 33.4731, -85.1384, 0.22", "-123.952, 33.2801, -87.449, 0.22", "-124.975, 33.1882, -88.8875, 0.22", "-126.293, 33.14, -90.8635, 0.22", "-127.228, 33.1875, -92.3793, 0.22", "-127.985, 33.3103, -93.579, 0.22", "-129.554, 33.6388, -95.8037, 0.22", "-130.614, 33.8336, -97.1572, 0.22", "-131.807, 33.9832, -98.5624, 0.22", "-134.008, 34.0762, -101.076, 0.22", "-136.666, 33.9791, -104.146, 0.22", "-138.191, 33.8157, -105.889, 0.22", "-140.969, 33.3623, -109.023, 0.22", "-142.191, 33.114, -110.456, 0.22", "-144.371, 32.5586, -113.235, 0.22", "-145.386, 32.2491, -114.708, 0.22", "-146.317, 31.932, -116.382, 0.22", "-147.124, 31.7104, -118.227, 0.22", "-147.676, 31.6284, -119.824, 0.22", "-148.028, 31.5993, -121.122, 0.22", "-148.419, 31.5631, -122.997, 0.22", "-148.573, 31.5159, -123.944, 0.22", "-148.849, 31.2131, -126.515, 0.22", "-148.975, 30.7967, -128.388, 0.22", "-149.017, 30.4445, -129.544, 0.22", "-149.007, 30.0811, -130.549, 0.22", "-148.979, 29.8847, -131.023, 0.22", "-148.795, 28.8784, -133.24, 0.22", "-148.61, 27.9461, -135.152, 0.22", "-148.508, 27.5115, -136.046, 0.22", "-148.419, 27.0829, -136.986, 0.22", "-148.321, 26.3685, -138.636, 0.22", "-148.315, 26.1977, -139.052, 0.22", "-148.345, 26.0036, -139.581, 0.22", "-148.501, 25.6655, -140.593, 0.22", "-148.888, 25.195, -142.042, 0.22", "-149.506, 24.6708, -143.657, 0.22", "-150.363, 24.1662, -145.321, 0.22", "-151.795, 23.4667, -147.614, 0.22", "-152.92, 23.0381, -149.074, 0.22", "-154.402, 22.6466, -150.669, 0.22", "-156.074, 22.3668, -152.191, 0.22", "-158.002, 22.183, -153.704, 0.22", "-159.113, 22.1283, -154.505, 0.22", "-160.843, 22.097, -155.766, 0.22", "-162.155, 22.0866, -156.89, 0.22", "-163.245, 22.0472, -158.113, 0.22", "-163.68, 22.0035, -158.741, 0.22", "-164.661, 21.7205, -160.564, 0.22", "-165.405, 21.3669, -162.137, 0.22", "-165.973, 20.9715, -163.545, 0.22", "-166.588, 20.4034, -165.195, 0.22", "-167.025, 19.933, -166.413, 0.22", "-167.937, 18.9375, -168.777, 0.22", "-168.437, 18.421, -169.864, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-53.4945, 38.5963, -29.8064, 0.29", "-53.4937, 40.1592, -29.662, 0.29", "-53.41, 42.0048, -29.5215, 0.29", "-53.3087, 42.9671, -29.447, 0.22", "-53.1656, 44.1053, -29.4069, 0.22", "-52.7075, 46.9745, -29.4039, 0.22", "-52.1174, 50.1354, -29.4866, 0.22", "-51.7437, 51.727, -29.5871, 0.22", "-51.2284, 53.4949, -29.7728, 0.22", "-50.5283, 55.5038, -30.0892, 0.22", "-49.3509, 58.1321, -30.8649, 0.22", "-48.8059, 59.1543, -31.3025, 0.22", "-48.0989, 60.3234, -31.8866, 0.22", "-47.3232, 61.5143, -32.5734, 0.22", "-46.2936, 63.0068, -33.4878, 0.22", "-43.5413, 66.7802, -35.782, 0.22", "-42.7483, 67.8636, -36.4499, 0.22", "-41.8965, 69.029, -37.1704, 0.22", "-40.5754, 70.8516, -38.292, 0.22", "-39.6347, 72.1667, -39.1012, 0.22", "-38.5741, 73.7075, -39.9208, 0.22", "-37.9635, 74.6369, -40.2369, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-18.3467, -90.1637, -24.4831, 1.03", "-18.4993, -92.9483, -24.71, 1.03", "-18.4911, -94.9747, -24.9071, 1.03", "-18.3674, -97.7068, -25.1886, 1.03", "-18.1633, -101.446, -25.592, 1.03", "-17.9765, -104.507, -25.9279, 1.03", "-17.7276, -108.344, -26.3571, 1.03", "-17.5689, -110.137, -26.5841, 1.03", "-17.419, -111.915, -26.7898, 1.03", "-17.3051, -113.797, -26.9797, 1.03", "-17.2955, -115.301, -27.1116, 1.03", "-17.3433, -116.503, -27.1991, 1.03", "-17.5663, -120.113, -27.4197, 1.25", "-17.675, -122.224, -27.54, 1.25", "-17.7823, -124.552, -27.6673, 1.25", "-17.8556, -126.699, -27.7761, 1.25", "-17.9411, -129.121, -27.8928, 1.25", "-18.0224, -131.68, -27.9345, 0.81", "-18.047, -133.016, -27.9452, 0.81", "-18.0836, -135.521, -27.9443, 0.74", "-18.1193, -136.569, -27.9476, 0.74", "-18.2326, -137.971, -27.9911, 1.18", "-18.5997, -141.398, -28.2816, 1.18", "-18.7475, -142.595, -28.4272, 1.18", "-18.9105, -143.956, -28.6448, 1.25", "-19.1988, -147.045, -29.246, 1.25", "-19.5867, -151.018, -30.2682, 1.25", "-19.8647, -153.439, -31.0822, 1.25", "-20.0656, -154.803, -31.6612, 0.74", "-20.3731, -156.566, -32.4419, 0.74", "-20.5187, -157.272, -32.7896, 0.74", "-21.1541, -159.82, -34.1907, 0.74", "-21.475, -160.901, -34.8374, 0.74", "-22.0114, -162.849, -35.8864, 0.52", "-22.6787, -166.328, -37.6293, 0.52", "-22.7398, -166.785, -37.8146, 0.52", "-22.8269, -167.57, -38.0571, 0.81", "-22.8883, -168.607, -38.2781, 1.18", "-22.9608, -170.943, -38.694, 1.18", "-22.9876, -172.833, -39.0399, 1.18", "-23.0758, -175.028, -39.4666, 0.96", "-23.2029, -176.631, -39.7467, 0.96", "-23.4497, -178.723, -40.0787, 0.96", "-23.6743, -180.261, -40.2986, 0.96", "-23.9379, -181.875, -40.4762, 1.4", "-24.3579, -184.356, -40.6716, 1.4", "-25.0309, -187.786, -40.9206, 1.4", "-25.4665, -189.651, -41.0451, 1.4", "-26.0113, -191.728, -41.1679, 1.4", "-26.7427, -194.328, -41.2853, 1.4", "-27.3141, -196.289, -41.3211, 1.62", "-28.044, -198.824, -41.3315, 1.62", "-28.2555, -199.512, -41.3312, 1.62" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-18.3467, -90.1637, -24.4831, 0.66", "-20.3082, -92.1398, -24.3564, 0.66", "-21.5414, -93.3822, -24.2767, 0.37", "-23.0111, -94.8629, -24.1817, 0.37", "-24.1735, -96.0339, -24.1066, 0.37", "-24.9543, -96.8205, -24.0562, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "100.749, 23.8124, -35.2596, 0.37", "104.029, 23.8921, -34.8882, 0.37", "106.46, 23.8838, -34.8367, 0.37", "108.629, 23.8536, -34.8898, 0.37", "111.66, 23.8426, -35.0733, 0.37", "116.6, 23.8246, -35.4504, 0.37", "119.17, 23.8472, -35.6731, 0.37", "123.263, 23.8674, -36.2674, 0.37", "124.589, 23.8889, -36.5215, 0.37", "126.673, 23.9426, -36.9874, 0.52", "129.744, 24.0446, -37.7225, 0.52", "131.571, 24.0562, -38.1049, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "100.749, 23.8124, -35.2596, 0.74", "102.07, 23.1321, -37.8463, 0.74", "103.474, 22.379, -40.6815, 0.52", "104.124, 21.9689, -42.0763, 0.52", "105.263, 21.1513, -44.7684, 0.52", "106.237, 20.3809, -47.3045, 0.52", "107.115, 19.7044, -49.662, 0.52", "107.538, 19.3816, -51.0296, 0.52", "107.973, 19.0291, -52.3771, 0.52", "108.588, 18.5919, -54.3755, 0.52", "109.224, 18.2196, -56.5212, 0.52", "109.84, 17.9182, -58.7383, 0.52", "110.622, 17.5821, -61.3628, 0.52", "111.54, 17.271, -64.2508, 0.22", "112.704, 16.8344, -67.7607, 0.22", "113.558, 16.4297, -70.2469, 0.22", "114.631, 15.7884, -73.3916, 0.22", "115.436, 15.1769, -75.776, 0.22", "115.981, 14.6755, -77.2081, 0.22", "116.851, 13.8507, -79.3882, 0.22", "117.484, 13.2224, -80.7928, 0.37", "117.856, 12.837, -81.5666, 0.37", "118.913, 11.7381, -83.5671, 0.37", "120.483, 10.148, -86.3183, 0.37", "122.749, 8.04205, -89.7804, 0.37", "124.207, 6.83392, -91.765, 0.07", "124.976, 6.23539, -92.7046, 0.07", "126.638, 4.98681, -94.5802, 0.07", "128.856, 3.36434, -96.916, 0.07", "131.273, 1.58723, -99.3384, 0.07", "132.426, 0.678763, -100.386, 0.29", "134.362, -0.933997, -102.26, 0.29", "135.391, -1.82734, -103.325, 0.29", "136.359, -2.74682, -104.517, 0.29", "137.276, -3.79709, -106.132, 0.29", "138.081, -4.97749, -108.032, 0.29", "138.895, -6.53645, -110.474, 0.29", "139.32, -7.54845, -112.03, 0.29", "140.047, -9.32303, -114.725, 0.29", "140.98, -11.5856, -118.195, 0.29", "141.512, -12.7508, -120.068, 0.37", "142.076, -13.8454, -121.776, 0.37", "142.474, -14.5355, -122.72, 0.37", "142.924, -15.292, -123.755, 0.37", "143.356, -15.9302, -124.557, 0.37", "144.123, -16.9629, -125.893, 0.37", "144.876, -17.8674, -127.268, 0.37", "145.418, -18.4171, -128.224, 0.37", "146.558, -19.5135, -130.163, 0.37", "147.201, -20.1414, -131.279, 0.37", "147.994, -20.9413, -132.652, 0.37", "149.789, -22.9049, -135.835, 0.37", "150.959, -24.3412, -138.052, 0.37", "151.524, -25.07, -139.101, 0.37", "152.193, -25.8968, -140.236, 0.37", "153.183, -27.0766, -141.868, 0.37", "154.475, -28.5399, -143.858, 0.37", "155.059, -29.1921, -144.723, 0.37", "155.857, -30.02, -145.731, 0.37", "157.4, -31.5274, -147.487, 0.37", "158.21, -32.2811, -148.326, 0.37", "158.795, -32.8125, -148.913, 0.37", "160.07, -33.9439, -150.153, 0.37", "160.944, -34.7445, -151.014, 0.37", "162.207, -35.989, -152.15, 0.37", "165.091, -38.8247, -154.33, 0.37", "166.228, -39.8682, -155.035, 0.37", "167.223, -40.7644, -155.567, 0.37", "168.313, -41.7161, -156.074, 0.37", "171.45, -44.4062, -157.374, 0.37", "174.256, -46.773, -158.443, 0.37", "176.557, -48.7383, -159.236, 0.37", "178.701, -50.6292, -159.997, 0.37", "181.32, -53.0505, -160.998, 0.37", "183.024, -54.7136, -161.688, 0.37", "185.962, -57.7224, -162.997, 0.37", "187.338, -59.2402, -163.64, 0.37", "188.606, -60.6919, -164.272, 0.29", "189.362, -61.6216, -164.668, 0.29", "190.773, -63.4632, -165.42, 0.29", "192.357, -65.6241, -166.286, 0.29", "194.412, -68.6536, -167.45, 0.29", "195.904, -70.9497, -168.368, 0.29", "197.52, -73.4727, -169.393, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "70.2801, 59.238, 44.3946, 0.07", "71.968, 61.9779, 52.8353, 0.07", "73.4777, 63.1786, 61.6296, 0.07", "75.8339, 62.4539, 70.2679, 0.07", "78.3078, 60.5685, 78.687, 0.07", "79.5123, 58.092, 87.227, 0.07", "80.8358, 54.5862, 95.3833, 0.07", "83.2897, 49.9081, 102.647, 0.07", "85.7122, 43.974, 108.964, 0.07", "89.2705, 37.4929, 114.103, 0.07", "93.6005, 30.2784, 117.347, 0.07", "99.0071, 23.6647, 120.183, 0.07", "104.676, 17.0941, 122.568, 0.07", "109.926, 10.0328, 124.519, 0.07", "114.032, 2.71498, 127.832, 0.07", "118.049, -5.1309, 129.844, 0.07", "122.894, -12.5877, 131.387, 0.07", "127.496, -20.1075, 133.329, 0.07", "131.821, -27.9051, 134.812, 0.07", "134.83, -35.9178, 137.755, 0.07", "135.87, -44.4838, 140.623, 0.07", "137.316, -53.1282, 143.044, 0.07", "138.94, -62.0131, 144.207, 0.07", "141.064, -70.8075, 145.166, 0.07", "142.086, -79.842, 145.931, 0.07", "144.976, -88.4058, 146.804, 0.07", "148.193, -96.7939, 148.043, 0.07", "153.412, -103.918, 149.85, 0.07", "159.217, -110.774, 150.526, 0.07", "166.342, -116.24, 150.804, 0.07", "172.594, -122.467, 152.538, 0.07", "179.544, -127.744, 154.654, 0.07", "186.255, -132.557, 158.169, 0.07" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "70.2801, 59.238, 44.3946, 0.07", "71.1047, 63.1314, 52.4163, 0.07" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-28.2555, -199.512, -41.3312, 0.96", "-29.866, -201.837, -41.495, 0.96", "-30.9442, -203.824, -41.6414, 0.96", "-31.6039, -205.27, -41.6747, 0.59", "-32.3018, -206.963, -41.6718, 0.59", "-32.7454, -208.091, -41.66, 0.59", "-33.4475, -209.816, -41.6719, 0.96", "-34.4501, -212.457, -41.7042, 0.96", "-35.2861, -214.747, -41.7436, 0.96", "-35.7051, -215.921, -41.7703, 0.96", "-36.2285, -217.372, -41.8834, 0.59", "-36.8544, -218.803, -42.0979, 0.52", "-37.0012, -219.075, -42.1673, 0.29", "-37.4077, -219.824, -42.4376, 0.29", "-37.5816, -220.232, -42.6057, 0.44", "-38.1221, -222.007, -43.2494, 0.44", "-38.4196, -223.389, -43.6806, 0.66", "-38.8258, -225.981, -44.3586, 0.66", "-39.1128, -228.301, -44.8923, 0.88", "-39.2555, -230.016, -45.2392, 0.88", "-39.361, -231.92, -45.4929, 0.88", "-39.3841, -232.725, -45.5476, 0.88", "-39.4026, -233.786, -45.6053, 0.88", "-39.4713, -235.973, -45.6766, 0.66", "-39.5342, -236.943, -45.6909, 0.66", "-39.8144, -239.519, -45.7581, 0.88", "-40.0559, -241.385, -45.8339, 0.88", "-40.4312, -243.821, -45.9617, 0.88", "-40.6729, -244.967, -46.072, 0.88", "-41.0285, -246.223, -46.2455, 0.88", "-41.6924, -247.984, -46.5609, 0.88", "-42.1365, -248.951, -46.7958, 0.88", "-42.7311, -250.117, -47.1177, 1.11", "-43.8355, -252.269, -47.8472, 1.11", "-44.3615, -253.359, -48.302, 0.44", "-45.0272, -254.906, -49.0715, 0.44", "-45.4092, -255.827, -49.5711, 0.66", "-45.8652, -257.026, -50.2872, 0.66", "-46.2157, -258.349, -51.1551, 0.66", "-46.2481, -259.478, -51.9416, 0.66", "-46.1129, -260.223, -52.5659, 0.66" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-28.2555, -199.512, -41.3312, 0.29", "-28.2959, -200.63, -41.9461, 0.29", "-28.4718, -202.109, -42.7901, 0.29", "-28.7407, -203.91, -43.8599, 0.07", "-28.9787, -205.471, -44.876, 0.29", "-29.1573, -206.921, -45.8963, 0.29", "-29.2542, -208.007, -46.7274, 0.29", "-29.3143, -208.762, -47.3965, 0.29", "-29.363, -209.403, -48.0298, 0.29", "-29.3891, -210.319, -49.1004, 0.29", "-29.3652, -210.943, -49.975, 0.52", "-29.3114, -211.512, -50.877, 0.52", "-29.2879, -211.896, -51.6171, 0.52", "-29.319, -212.204, -52.4102, 0.52", "-29.4469, -212.49, -53.3588, 0.52", "-29.7091, -212.794, -54.7851, 0.52", "-29.8824, -212.908, -55.5992, 0.52", "-30.2863, -213.022, -57.441, 0.52", "-30.654, -212.996, -59.3346, 0.52", "-30.7688, -212.95, -59.9145, 0.52", "-31.2001, -212.665, -62.1176, 0.52", "-31.3525, -212.542, -62.8629, 0.52", "-31.4578, -212.45, -63.3489, 0.52", "-31.8738, -212.078, -65.0189, 0.52", "-32.213, -211.774, -66.2828, 0.52", "-32.6709, -211.331, -67.9375, 0.52", "-32.8209, -211.159, -68.5229, 0.52", "-32.9328, -210.992, -69.1285, 0.52", "-33.0566, -210.763, -70.0699, 0.52", "-33.1191, -210.572, -71.01, 0.52", "-33.1004, -210.458, -71.6836, 0.52", "-32.9178, -210.175, -73.931, 0.52", "-32.7035, -210.054, -75.5901, 0.52", "-32.5274, -210.051, -76.6208, 0.52", "-32.1653, -210.192, -78.3353, 0.52", "-31.9227, -210.338, -79.2428, 0.52", "-31.5901, -210.573, -80.2627, 0.52", "-31.3916, -210.722, -80.7641, 0.52", "-30.8745, -211.064, -81.9496, 0.52", "-30.5495, -211.231, -82.7215, 0.52", "-30.1675, -211.38, -83.7035, 0.52", "-29.9426, -211.435, -84.3179, 0.52", "-29.7962, -211.463, -84.6813, 0.52", "-29.2391, -211.48, -86.1137, 0.52", "-28.8289, -211.413, -87.194, 0.44", "-28.756, -211.394, -87.4051, 0.15", "-28.5458, -211.367, -88.139, 0.07", "-28.144, -211.429, -89.4549, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-24.9543, -96.8205, -24.0562, 0.07", "-25.8222, -96.668, -24.1597, 0.07", "-27.8801, -96.3749, -24.5669, 0.07", "-29.2843, -96.2244, -24.8935, 0.07", "-30.784, -96.184, -25.2826, 0.07", "-32.3741, -96.2603, -25.6702, 0.07", "-34.9108, -96.509, -26.2265, 0.07", "-37.7475, -96.9599, -26.7472, 0.07", "-41.4581, -97.6792, -27.4817, 0.07", "-44.6555, -98.4055, -28.1308, 0.07", "-47.6028, -99.1627, -28.6795, 0.07", "-48.9197, -99.5589, -28.8658, 0.07", "-50.6842, -100.237, -28.988, 0.07" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-24.9543, -96.8205, -24.0562, 0.07", "-25.7416, -97.5439, -23.7267, 0.07", "-26.5447, -98.3808, -23.4167, 0.07", "-27.349, -99.2227, -23.0894, 0.07", "-28.3165, -100.229, -22.7164, 0.07", "-30.5094, -102.532, -21.9858, 0.07", "-31.45, -103.52, -21.6724, 0.07", "-34.0931, -106.293, -20.8105, 0.15", "-35.6997, -107.996, -20.3298, 0.15", "-36.9521, -109.355, -19.972, 0.15", "-38.7634, -111.378, -19.4512, 0.07" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "131.571, 24.0562, -38.1049, 0.44", "133.249, 24.3307, -38.9466, 0.44", "135.484, 24.6667, -39.7812, 0.44", "136.542, 24.7896, -40.1924, 0.44", "137.6, 24.8969, -40.6135, 0.44", "139.095, 24.9971, -41.1871, 0.44", "140.537, 25.0847, -41.6823, 0.44", "143.16, 25.2207, -42.448, 0.44", "145.643, 25.3381, -43.0122, 0.44", "147.447, 25.403, -43.3752, 0.44", "150.118, 25.4611, -43.8239, 0.44", "152.183, 25.4465, -44.1259, 0.44", "154.469, 25.4024, -44.4138, 0.44", "156.127, 25.3388, -44.5684, 0.44", "157.496, 25.2585, -44.6174, 0.44", "158.958, 25.128, -44.717, 0.44", "159.968, 24.9867, -44.8672, 0.44", "160.925, 24.8345, -45.1345, 0.44", "161.732, 24.7356, -45.4064, 0.44", "162.952, 24.6569, -45.8266, 0.44", "165.406, 24.6279, -46.6811, 0.44", "167.63, 24.7503, -47.4888, 0.44", "170.224, 25.0306, -48.4664, 0.44", "172.245, 25.3324, -49.2701, 0.44", "174.135, 25.6696, -50.0731, 0.44", "175.017, 25.8475, -50.456, 0.22", "176.205, 26.0905, -50.9616, 0.07", "176.98, 26.2608, -51.312, 0.07", "178.475, 26.5373, -51.9422, 0.07", "179.262, 26.6844, -52.2533, 0.07", "180.634, 27.0062, -52.6732, 0.22", "182.152, 27.4702, -52.9596, 0.22", "182.886, 27.7246, -52.9888, 0.22", "184.625, 28.3358, -53.012, 0.22", "186.424, 28.9031, -53.0745, 0.22", "187.861, 29.3604, -53.0436, 0.22", "188.893, 29.65, -53.0154, 0.22", "191.007, 30.1301, -53.0359, 0.22", "193.21, 30.5187, -53.1154, 0.22", "197.36, 31.1133, -53.274, 0.37", "200.944, 31.5094, -53.4435, 0.37", "203.707, 31.7136, -53.5466, 0.37", "205.353, 31.8021, -53.6013, 0.37", "206.83, 31.8759, -53.6588, 0.37", "209.474, 32.0093, -53.6761, 0.37", "211.302, 31.9712, -53.742, 0.37", "212.986, 31.7964, -53.9275, 0.22", "214.092, 31.6948, -54.055, 0.22", "215.001, 31.6292, -54.1836, 0.22", "215.592, 31.5905, -54.2997, 0.22", "217.945, 31.4957, -54.8746, 0.22", "220.932, 31.4302, -55.5733, 0.22", "222.642, 31.4216, -56.0324, 0.22", "225.193, 31.4229, -56.7333, 0.22", "226.039, 31.4371, -56.9738, 0.22", "227.317, 31.5105, -57.3604, 0.22", "238.808, 31.896, -58.269, 0.22" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "131.571, 24.0562, -38.1049, 0.52", "133.381, 24.5638, -38.0113, 0.52", "135.799, 25.3816, -37.9051, 0.52", "137.254, 25.9967, -37.86, 0.52", "141.04, 28.008, -37.6599, 0.52", "144.136, 29.8074, -37.2694, 0.52", "145.642, 30.7127, -37.0422, 0.52", "148.122, 32.2306, -36.6497, 0.52", "149.907, 33.3646, -36.3986, 0.52", "152.424, 34.9349, -35.9478, 0.52", "155.556, 36.9569, -35.1738, 0.52", "158.468, 38.7066, -34.425, 0.52", "159.381, 39.2306, -34.1922, 0.52", "160.717, 39.8528, -33.86, 0.52", "164.906, 41.5084, -32.7448, 0.52", "166.379, 42.0176, -32.3537, 0.29", "167.96, 42.5619, -31.8639, 0.29", "169.027, 42.9278, -31.3586, 0.29", "170.216, 43.3454, -30.6271, 0.29", "172.375, 44.088, -28.9772, 0.29", "174.029, 44.6362, -27.4259, 0.44", "175.401, 45.0387, -25.9591, 0.44", "177.106, 45.5381, -23.8881, 0.44", "178.324, 45.8673, -22.3137, 0.44", "179.175, 46.1049, -21.1478, 0.44", "180.266, 46.3555, -19.6303, 0.44", "182.2, 46.6938, -16.9752, 0.44", "182.82, 46.7887, -16.1982, 0.44", "183.805, 46.9686, -15.0574, 0.44", "184.828, 47.2245, -13.8978, 0.44", "185.597, 47.5229, -13.0255, 0.44", "186.749, 48.054, -11.8347, 0.44", "187.184, 48.2889, -11.3975, 0.44", "188.498, 49.0525, -10.0836, 0.44", "189.029, 49.4014, -9.56765, 0.44", "190.374, 50.3806, -8.32448, 0.37", "192.124, 51.7266, -6.89827, 0.22", "193.791, 53.0014, -5.90754, 0.22", "194.583, 53.5751, -5.53796, 0.22", "195.633, 54.2948, -5.19212, 0.22", "196.389, 54.8238, -5.04341, 0.22", "197.635, 55.7836, -4.94985, 0.22", "199.855, 57.9029, -5.18814, 0.22", "200.536, 58.6211, -5.42251, 0.22", "201.776, 60.036, -6.11817, 0.22", "203.14, 61.6876, -7.23234, 0.22", "203.871, 62.6203, -8.08748, 0.22", "204.864, 63.9413, -9.74928, 0.22", "205.356, 64.5712, -10.8772, 0.22", "205.783, 65.0356, -11.9733, 0.22", "205.906, 65.139, -12.3185, 0.22", "206.277, 65.3164, -13.2721, 0.22", "206.728, 65.424, -14.4891, 0.22", "207.211, 65.4942, -15.7289, 0.22", "207.639, 65.5759, -16.8148, 0.22", "207.889, 65.643, -17.4428, 0.22", "208.098, 65.7244, -18.0086, 0.22", "208.814, 66.1256, -20.2971, 0.22", "209.069, 66.3458, -21.4075, 0.22", "209.251, 66.5719, -22.4934, 0.22", "209.377, 66.7566, -23.4699, 0.22", "209.515, 66.9446, -24.4825, 0.22", "210.104, 67.8259, -28.5396, 0.22", "210.32, 68.1594, -29.8871, 0.22", "210.558, 68.6205, -31.6361, 0.22", "210.81, 69.2278, -33.7182, 0.22", "210.932, 69.6196, -34.9319, 0.22", "211.11, 70.5009, -37.4305, 0.22", "211.124, 70.7625, -38.0918, 0.22", "211.181, 71.4611, -39.7719, 0.22", "211.19, 71.722, -40.3222, 0.22", "211.128, 72.1893, -41.1986, 0.22", "210.867, 72.7242, -42.3831, 0.22", "210.628, 72.925, -43.0438, 0.22", "221.073, 76.8491, -44.7196, 0.22", "231.662, 80.5602, -45.862, 0.22", "241.738, 85.6519, -45.2276, 0.22", "252.508, 88.8276, -44.3098, 0.22", "263.243, 90.8523, -41.6436, 0.22", "274.364, 91.3585, -40.1749, 0.22", "285.086, 92.1443, -36.9263, 0.22", "295.563, 93.7253, -33.1826, 0.22", "306.122, 93.8938, -29.3763, 0.22" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "197.52, -73.4727, -169.393, 0.29", "198.124, -74.0382, -170.134, 0.29", "199.294, -75.1357, -171.573, 0.29", "201.093, -76.8217, -173.784, 0.29", "202.842, -78.461, -175.933, 0.29", "204.286, -79.8151, -177.709, 0.29", "204.991, -80.475, -178.574, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "197.52, -73.4727, -169.393, 0.29", "198.566, -74.4331, -168.138, 0.29", "200.536, -76.2778, -165.758, 0.29", "202.421, -78.1451, -163.37, 0.29", "203.364, -79.2174, -162.238, 0.29", "204.511, -80.4263, -160.777, 0.29", "205.457, -81.367, -159.552, 0.29", "208.082, -83.8053, -156.117, 0.29", "209.464, -85.081, -154.26, 0.29", "211.617, -86.976, -151.348, 0.29", "216.812, -91.0845, -144.639, 0.29", "218.695, -92.4377, -142.304, 0.29", "220.259, -93.4663, -140.47, 0.29", "221.704, -94.3531, -138.927, 0.29", "223.123, -95.1889, -137.527, 0.29", "225.275, -96.3426, -135.471, 0.29", "226.383, -97.0414, -134.686, 0.29", "227.885, -98.0102, -133.755, 0.29", "229.35, -98.9893, -132.985, 0.29", "231.09, -100.154, -132.202, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-46.1129, -260.223, -52.5659, 0.81", "-46.125, -260.843, -53.8706, 0.81", "-46.0561, -261.752, -55.6983, 0.81", "-45.7804, -263.242, -58.4056, 0.81", "-45.4394, -264.528, -60.4394, 0.59", "-45.239, -265.187, -61.3678, 0.59", "-44.9861, -266.019, -62.4359, 0.59", "-44.5775, -267.507, -64.0968, 0.66", "-44.2499, -268.752, -65.271, 0.66", "-43.9311, -270.251, -66.5804, 0.66", "-43.806, -271.065, -67.3446, 0.66", "-43.7217, -271.877, -68.1814, 0.66", "-43.6988, -273.674, -70.2679, 0.96", "-43.7378, -274.563, -71.4725, 0.96", "-43.8733, -275.746, -73.4751, 0.96", "-43.9585, -276.462, -74.9719, 0.96", "-44.0286, -276.919, -76.1594, 0.96", "-44.0996, -277.327, -77.3644, 0.96", "-44.145, -277.768, -78.6612, 0.96", "-44.1949, -278.453, -80.4296, 0.96", "-44.1815, -278.928, -81.4804, 0.96", "-44.0728, -280.606, -84.9242, 0.81", "-44.0275, -281.269, -86.3037, 0.66", "-43.9481, -281.948, -87.6657, 0.66", "-43.7806, -282.575, -88.9031, 0.37", "-43.315, -283.493, -90.5586, 0.37", "-43.0706, -283.814, -91.1198, 0.37", "-42.5006, -284.304, -92.0155, 0.37", "-41.966, -284.681, -92.755, 0.44", "-40.2481, -285.87, -94.9845, 0.44", "-38.9187, -286.765, -96.5372, 0.44", "-37.8726, -287.509, -97.6795, 0.44", "-36.8244, -288.248, -98.6958, 0.44", "-35.3494, -289.315, -100.085, 0.44", "-33.5456, -290.649, -101.785, 0.22", "-32.9534, -291.118, -102.347, 0.22", "-31.0713, -292.696, -104.168, 0.22", "-29.8193, -293.931, -105.419, 0.22", "-28.2397, -295.868, -107.072, 0.22", "-27.4181, -297.083, -107.998, 0.22", "-26.9578, -298.037, -108.563, 0.22", "-26.5435, -299.379, -109.136, 0.37", "-26.2332, -301.527, -109.858, 0.37", "-26.1141, -303.745, -110.617, 0.37", "-26.1157, -304.397, -110.853, 0.59", "-26.2222, -307.377, -112.103, 0.59", "-26.3057, -309.636, -113.186, 0.59", "-26.3174, -312.682, -114.771, 0.59", "-26.1676, -316.443, -116.834, 0.59", "-25.9858, -318.222, -117.799, 0.59", "-25.7721, -319.564, -118.476, 0.59", "-25.3367, -321.628, -119.532, 0.59", "-24.7172, -323.833, -120.549, 0.59", "-24.1398, -325.248, -121.054, 0.59", "-23.0644, -327.513, -121.491, 0.44", "-22.3796, -329.017, -121.653, 0.44", "-21.8008, -330.457, -121.699, 0.44", "-20.9581, -332.796, -121.668, 0.44", "-19.3154, -337.636, -121.469, 0.44", "-17.2863, -343.14, -121.072, 0.44", "-16.6375, -344.938, -120.9, 0.44", "-15.8829, -347.091, -120.593, 0.44", "-15.3894, -348.543, -120.317, 0.44", "-15.056, -349.771, -120.083, 0.44", "-14.6628, -351.153, -119.89, 0.44", "-13.922, -352.909, -119.592, 0.44", "-13.4301, -354.078, -119.391, 0.66", "-12.8954, -355.436, -119.202, 0.66", "-11.7651, -358.668, -118.905, 0.66", "-11.0319, -361.133, -118.772, 0.66", "-10.1597, -364.27, -118.738, 0.37", "-9.2143, -367.564, -118.869, 0.37", "-8.63853, -369.496, -119.072, 0.37", "-8.0187, -371.495, -119.42, 0.37", "-7.24305, -373.658, -120.005, 0.37", "-6.64402, -375.288, -120.588, 0.37", "-5.79937, -377.1, -121.449, 0.37", "-5.04821, -378.298, -122.123, 0.37", "-3.86057, -379.875, -123.04, 0.37", "-2.21068, -381.765, -124.082, 0.37", "-1.1238, -382.908, -124.693, 0.37", "0.368262, -384.532, -125.443, 0.37", "1.7635, -386.1, -126.066, 0.15", "3.39628, -388.015, -126.706, 0.15", "4.5676, -389.418, -127.078, 0.15", "5.22225, -390.258, -127.228, 0.15", "7.04355, -392.658, -127.664, 0.15", "8.02447, -394.005, -127.95, 0.15", "9.1302, -395.615, -128.356, 0.15", "10.2982, -397.333, -128.832, 0.15", "11.478, -399.108, -129.305, 0.15", "12.9366, -401.398, -129.834, 0.15", "14.0223, -403.122, -130.229, 0.15", "14.9331, -404.658, -130.594, 0.15", "15.7423, -406.167, -130.97, 0.15", "16.8296, -408.417, -131.593, 0.15", "17.3977, -409.604, -131.905, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-46.1129, -260.223, -52.5659, 0.66", "-44.6142, -260.24, -53.5784, 0.66", "-43.8388, -260.249, -54.1021, 0.66", "-43.1502, -260.257, -54.5673, 0.66" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "204.991, -80.475, -178.574, 0.22", "205.997, -81.031, -180.277, 0.22", "207.642, -81.9397, -183.059, 0.22", "208.98, -82.6788, -185.322, 0.22", "210.087, -83.2901, -187.194, 0.22", "210.922, -83.7512, -188.606, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "204.991, -80.475, -178.574, 0.15", "205.995, -81.9975, -178.861, 0.15", "206.884, -83.3453, -179.115, 0.15", "207.71, -84.5969, -179.35, 0.15" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_38", "dend_35", "dend_26", "dend_7", "dend_0", "dend_63", "dend_56", "dend_54", "dend_39", "dend_37", "dend_36", "dend_28", "dend_27", "dend_9", "dend_8", "dend_2", "dend_1", "dend_60", "dend_57", "dend_51", "dend_40", "dend_32", "dend_29", "dend_15", "dend_10", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_42", "dend_41", "dend_34", "dend_33", "dend_31", "dend_30", "dend_17", "dend_16", "dend_14", "dend_11", "dend_5", "dend_4", "dend_46", "dend_43", "dend_23", "dend_18", "dend_13", "dend_12", "dend_48", "dend_47", "dend_45", "dend_44", "dend_25", "dend_24", "dend_20", "dend_19", "dend_50", "dend_49", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_38", "dend_35", "dend_26", "dend_7", "dend_0", "dend_63", "dend_56", "dend_54", "dend_39", "dend_37", "dend_36", "dend_28", "dend_27", "dend_9", "dend_8", "dend_2", "dend_1", "dend_60", "dend_57", "dend_51", "dend_40", "dend_32", "dend_29", "dend_15", "dend_10", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_42", "dend_41", "dend_34", "dend_33", "dend_31", "dend_30", "dend_17", "dend_16", "dend_14", "dend_11", "dend_5", "dend_4", "dend_46", "dend_43", "dend_23", "dend_18", "dend_13", "dend_12", "dend_48", "dend_47", "dend_45", "dend_44", "dend_25", "dend_24", "dend_20", "dend_19", "dend_50", "dend_49", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_26", "dend_26", "dend_26", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L6_LBC_0823165631_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_63, id: dend_63, parent: dend_55
create dend_63
public dend_63
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_38
create dend_54
public dend_54
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_39
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_15, id: dend_15, parent: dend_9
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_38, dend_35, dend_26, dend_7, dend_0, dend_63, dend_56, dend_54, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_2, dend_1, dend_60, dend_57, dend_51, dend_40, dend_32, dend_29, dend_15, dend_10, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_42, dend_41, dend_34, dend_33, dend_31, dend_30, dend_17, dend_16, dend_14, dend_11, dend_5, dend_4, dend_46, dend_43, dend_23, dend_18, dend_13, dend_12, dend_48, dend_47, dend_45, dend_44, dend_25, dend_24, dend_20, dend_19, dend_50, dend_49, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_38, dend_35, dend_26, dend_7, dend_0, dend_63, dend_56, dend_54, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_2, dend_1, dend_60, dend_57, dend_51, dend_40, dend_32, dend_29, dend_15, dend_10, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_42, dend_41, dend_34, dend_33, dend_31, dend_30, dend_17, dend_16, dend_14, dend_11, dend_5, dend_4, dend_46, dend_43, dend_23, dend_18, dend_13, dend_12, dend_48, dend_47, dend_45, dend_44, dend_25, dend_24, dend_20, dend_19, dend_50, dend_49, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_66
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_60, dend_60, dend_60, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.45000064008978086)
    connect dend_38(0), soma_0(0.45000064008978086)
    connect dend_35(0), soma_0(0.45000064008978086)
    connect dend_26(0), soma_0(0.45000064008978086)
    connect dend_7(0), soma_0(0.45000064008978086)
    connect dend_0(0), soma_0(0.45000064008978086)
    connect axon_0(0), soma_0(1.0)
    connect dend_63(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_15(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.47547, -21.1079, 2.51381, 3.10391 ) }
    soma_0 { pt3dadd( -2.25244, -19.1651, 2.29568, 4.54795 ) }
    soma_0 { pt3dadd( -2.02941, -17.2222, 2.07754, 6.86414 ) }
    soma_0 { pt3dadd( -1.80638, -15.2794, 1.85941, 9.59749 ) }
    soma_0 { pt3dadd( -1.58335, -13.3366, 1.64128, 11.8194 ) }
    soma_0 { pt3dadd( -1.36032, -11.3938, 1.42315, 13.5674 ) }
    soma_0 { pt3dadd( -1.13729, -9.45099, 1.20502, 14.4744 ) }
    soma_0 { pt3dadd( -0.914264, -7.50817, 0.986887, 14.6773 ) }
    soma_0 { pt3dadd( -0.691235, -5.56535, 0.768756, 14.5415 ) }
    soma_0 { pt3dadd( -0.468206, -3.62254, 0.550625, 13.3405 ) }
    soma_0 { pt3dadd( -0.245177, -1.67972, 0.332493, 12.1443 ) }
    soma_0 { pt3dadd( -0.0221479, 0.263091, 0.114362, 10.4715 ) }
    soma_0 { pt3dadd( 0.200881, 2.20591, -0.103769, 8.18984 ) }
    soma_0 { pt3dadd( 0.42391, 4.14872, -0.321901, 6.18554 ) }
    soma_0 { pt3dadd( 0.64694, 6.09154, -0.540032, 4.57765 ) }
    soma_0 { pt3dadd( 0.869969, 8.03435, -0.758163, 3.2886 ) }
    soma_0 { pt3dadd( 1.093, 9.97717, -0.976295, 3.75178 ) }
    soma_0 { pt3dadd( 1.31603, 11.92, -1.19443, 4.68351 ) }
    soma_0 { pt3dadd( 1.53906, 13.8628, -1.41256, 5.54689 ) }
    soma_0 { pt3dadd( 1.76209, 15.8056, -1.63069, 4.92105 ) }
    soma_0 { pt3dadd( 1.98511, 17.7484, -1.84882, 3.22657 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -3.49001, -19.9937, 2.0349, 1.25 ) }
    dend_55 { pt3dadd( -2.80022, -22.7203, 4.13056, 1.25 ) }
    dend_55 { pt3dadd( -2.3407, -24.5367, 5.52659, 1.33 ) }
    dend_55 { pt3dadd( -1.91429, -26.2222, 6.82205, 1.33 ) }
    dend_55 { pt3dadd( -1.39911, -28.2586, 8.38721, 1.33 ) }
    dend_55 { pt3dadd( -0.892253, -30.2621, 9.92707, 1.33 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 27/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -4.04001, -21.0392, -0.915102, 2.06 ) }
    dend_38 { pt3dadd( -4.34368, -21.8572, -0.280128, 2.06 ) }
    dend_38 { pt3dadd( -4.62849, -22.6244, 0.315415, 2.06 ) }
    dend_38 { pt3dadd( -5.20007, -24.164, 1.51062, 2.06 ) }
    dend_38 { pt3dadd( -5.32852, -24.51, 1.7792, 2.06 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 32/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -0.350012, 11.4226, -7.6651, 0.59 ) }
    dend_35 { pt3dadd( -1.00387, 10.7515, -7.60635, 0.44 ) }
    dend_35 { pt3dadd( -1.71372, 10.0456, -7.51407, 0.44 ) }
    dend_35 { pt3dadd( -3.42117, 8.41869, -7.14624, 0.37 ) }
    dend_35 { pt3dadd( -4.50599, 7.4122, -6.86818, 0.22 ) }
    dend_35 { pt3dadd( -7.1447, 4.96575, -6.0726, 0.22 ) }
    dend_35 { pt3dadd( -8.21012, 3.9703, -5.71362, 0.22 ) }
    dend_35 { pt3dadd( -9.69164, 2.59442, -5.10109, 0.29 ) }
    dend_35 { pt3dadd( -11.7515, 0.690693, -4.06588, 0.29 ) }
    dend_35 { pt3dadd( -13.8449, -1.1963, -2.82179, 0.15 ) }
    dend_35 { pt3dadd( -15.1243, -2.31924, -1.94616, 0.15 ) }
    dend_35 { pt3dadd( -16.0652, -3.13512, -1.2008, 0.15 ) }
    dend_35 { pt3dadd( -17.5192, -4.41831, 0.0905303, 0.15 ) }
    dend_35 { pt3dadd( -18.7812, -5.56035, 1.35512, 0.15 ) }
    dend_35 { pt3dadd( -19.7295, -6.46332, 2.41655, 0.15 ) }
    dend_35 { pt3dadd( -20.8987, -7.62788, 3.87968, 0.15 ) }
    dend_35 { pt3dadd( -21.716, -8.44373, 4.91095, 0.15 ) }
    dend_35 { pt3dadd( -22.6817, -9.45892, 6.11704, 0.15 ) }
    dend_35 { pt3dadd( -24.0247, -10.9873, 7.6953, 0.15 ) }
    dend_35 { pt3dadd( -25.1306, -12.3304, 8.94176, 0.15 ) }
    dend_35 { pt3dadd( -26.6591, -14.2279, 10.5721, 0.15 ) }
    dend_35 { pt3dadd( -27.9922, -15.9131, 11.8908, 0.15 ) }
    dend_35 { pt3dadd( -29.6827, -18.0205, 13.4636, 0.15 ) }
    dend_35 { pt3dadd( -31.9996, -20.932, 15.5623, 0.15 ) }
    dend_35 { pt3dadd( -33.1942, -22.4922, 16.6499, 0.15 ) }
    dend_35 { pt3dadd( -34.1312, -23.705, 17.4728, 0.15 ) }
    dend_35 { pt3dadd( -35.1831, -24.9653, 18.3346, 0.15 ) }
    dend_35 { pt3dadd( -36.5128, -26.399, 19.3567, 0.22 ) }
    dend_35 { pt3dadd( -38.517, -28.3909, 20.9126, 0.22 ) }
    dend_35 { pt3dadd( -39.8221, -29.6308, 21.966, 0.22 ) }
    dend_35 { pt3dadd( -41.4382, -31.142, 23.3225, 0.22 ) }
    dend_35 { pt3dadd( -43.7839, -33.3738, 25.4522, 0.22 ) }
    dend_35 { pt3dadd( -45.3862, -34.8866, 26.9502, 0.22 ) }
    dend_35 { pt3dadd( -47.2706, -36.6166, 28.662, 0.22 ) }
    dend_35 { pt3dadd( -48.489, -37.6665, 29.7603, 0.22 ) }
    dend_35 { pt3dadd( -49.1747, -38.2652, 30.4298, 0.37 ) }
    dend_35 { pt3dadd( -50.148, -39.3136, 31.6474, 0.37 ) }
    dend_35 { pt3dadd( -50.9424, -40.5401, 33.0706, 0.37 ) }
    dend_35 { pt3dadd( -57.8063, -47.5642, 37.1579, 0.37 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 71/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 0.099989, 19.4893, -1.8651, 1.18 ) }
    dend_26 { pt3dadd( 0.0361526, 21.1728, -0.441201, 1.18 ) }
    dend_26 { pt3dadd( -0.0088153, 22.3587, 0.561829, 1.4 ) }
    dend_26 { pt3dadd( -0.1369, 25.7366, 3.41882, 1.55 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 75/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 3.21999, 14.8871, -5.5151, 1.33 ) }
    dend_7 { pt3dadd( 3.59426, 16.108, -6.46602, 1.33 ) }
    dend_7 { pt3dadd( 4.0352, 17.5464, -7.58632, 1.33 ) }
    dend_7 { pt3dadd( 4.39642, 18.7247, -8.50409, 1.55 ) }
    dend_7 { pt3dadd( 4.77009, 19.9437, -9.45348, 1.55 ) }
    dend_7 { pt3dadd( 5.09311, 20.9974, -10.2742, 1.55 ) }
    dend_7 { pt3dadd( 5.48506, 22.276, -11.27, 1.55 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 82/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.43001, 18.1158, -6.9151, 1.11 ) }
    dend_0 { pt3dadd( -3.126, 18.7712, -6.9151, 1.11 ) }
    dend_0 { pt3dadd( -4.07002, 19.8035, -6.9151, 1.18 ) }
    dend_0 { pt3dadd( -4.60229, 20.4357, -6.9151, 1.4 ) }
    dend_0 { pt3dadd( -5.36275, 21.3608, -6.9151, 1.4 ) }
    dend_0 { pt3dadd( -5.63803, 21.6789, -6.92996, 1.4 ) }
    dend_0 { pt3dadd( -6.71432, 22.8186, -7.03735, 1.25 ) }
    dend_0 { pt3dadd( -7.32816, 23.4036, -7.11969, 1.25 ) }
    dend_0 { pt3dadd( -8.57571, 24.4264, -7.3122, 1.25 ) }
    dend_0 { pt3dadd( -9.64185, 25.1531, -7.48407, 1.25 ) }
    dend_0 { pt3dadd( -11.5064, 26.1457, -7.78181, 0.81 ) }
    dend_0 { pt3dadd( -12.5967, 26.5898, -7.94298, 0.81 ) }
    dend_0 { pt3dadd( -13.6767, 26.9125, -8.08771, 0.59 ) }
    dend_0 { pt3dadd( -14.8642, 27.1893, -8.22968, 0.81 ) }
    dend_0 { pt3dadd( -15.8556, 27.3526, -8.34, 0.81 ) }
    dend_0 { pt3dadd( -16.8333, 27.4634, -8.42584, 0.81 ) }
    dend_0 { pt3dadd( -17.9969, 27.5601, -8.45893, 1.03 ) }
    dend_0 { pt3dadd( -19.044, 27.6949, -8.45179, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( -19.3494, 27.7544, -8.44916, 1.18 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 1/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.98511, 17.7484, -1.84882, 1.04656 ) }
    axon_0 { pt3dadd( 3.69583, 32.6505, -1.84882, 1.04656 ) }
    axon_0 { pt3dadd( 5.40654, 47.5527, -1.84882, 1.04656 ) }
    // Section: dend_63, id: dend_63, parent: dend_55 (entry count 4/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -0.892253, -30.2621, 9.92707, 1.11 ) }
    dend_63 { pt3dadd( -0.70776, -32.7013, 10.6782, 1.11 ) }
    dend_63 { pt3dadd( -0.715466, -34.6645, 11.5847, 1.11 ) }
    dend_63 { pt3dadd( -0.657314, -37.098, 12.9388, 1.11 ) }
    dend_63 { pt3dadd( -0.59989, -37.7559, 13.371, 1.11 ) }
    dend_63 { pt3dadd( -0.463616, -38.6566, 14.0367, 1.11 ) }
    dend_63 { pt3dadd( -0.178202, -40.1245, 15.1766, 1.11 ) }
    dend_63 { pt3dadd( 0.335016, -41.9731, 16.901, 1.11 ) }
    dend_63 { pt3dadd( 0.754339, -43.1056, 18.0741, 0.96 ) }
    dend_63 { pt3dadd( 1.32022, -44.3864, 19.5393, 0.81 ) }
    dend_63 { pt3dadd( 1.9351, -45.6525, 20.9075, 0.81 ) }
    dend_63 { pt3dadd( 2.44905, -46.6085, 21.8352, 0.81 ) }
    dend_63 { pt3dadd( 2.87887, -47.3245, 22.4042, 0.81 ) }
    dend_63 { pt3dadd( 3.45682, -48.2335, 22.9802, 0.59 ) }
    dend_63 { pt3dadd( 4.26034, -49.5628, 23.6575, 0.59 ) }
    dend_63 { pt3dadd( 5.00149, -50.7497, 24.089, 0.88 ) }
    dend_63 { pt3dadd( 5.99368, -52.2152, 24.4653, 0.88 ) }
    dend_63 { pt3dadd( 6.87668, -53.4138, 24.7257, 0.88 ) }
    dend_63 { pt3dadd( 7.72498, -54.5066, 24.9662, 0.88 ) }
    dend_63 { pt3dadd( 8.56089, -55.4972, 25.2231, 0.88 ) }
    dend_63 { pt3dadd( 9.38939, -56.3367, 25.5642, 0.88 ) }
    dend_63 { pt3dadd( 9.95433, -56.8308, 25.9069, 0.88 ) }
    dend_63 { pt3dadd( 10.9692, -57.6484, 26.8447, 0.88 ) }
    dend_63 { pt3dadd( 11.6189, -58.2245, 27.7837, 0.88 ) }
    dend_63 { pt3dadd( 11.868, -58.5246, 28.3291, 0.88 ) }
    dend_63 { pt3dadd( 12.2061, -59.1326, 29.3364, 0.88 ) }
    dend_63 { pt3dadd( 12.3962, -59.5577, 30.06, 0.88 ) }
    dend_63 { pt3dadd( 12.5665, -60.0829, 30.8829, 0.88 ) }
    dend_63 { pt3dadd( 12.7402, -60.8882, 31.9008, 0.88 ) }
    dend_63 { pt3dadd( 12.9267, -61.9281, 32.8951, 0.88 ) }
    dend_63 { pt3dadd( 13.0817, -62.9563, 33.687, 0.88 ) }
    dend_63 { pt3dadd( 14.961, -70.872, 37.7783, 0.88 ) }
    dend_63 { pt3dadd( 16.34, -78.6345, 42.3198, 0.88 ) }
    dend_63 { pt3dadd( 17.477, -85.9859, 47.5293, 0.88 ) }
    dend_63 { pt3dadd( 19.4565, -92.8557, 53.1038, 0.88 ) }
    dend_63 { pt3dadd( 20.6225, -99.8787, 58.7221, 0.88 ) }
    dend_63 { pt3dadd( 22.2714, -105.302, 65.7341, 0.88 ) }
    dend_63 { pt3dadd( 24.6001, -110.141, 72.958, 0.88 ) }
    dend_63 { pt3dadd( 26.6971, -114.545, 80.5093, 0.88 ) }
    dend_63 { pt3dadd( 30.2554, -118.837, 87.5617, 0.88 ) }
    dend_63 { pt3dadd( 32.4594, -122.325, 95.526, 0.88 ) }
    dend_63 { pt3dadd( 33.8618, -125.775, 103.683, 0.88 ) }
    dend_63 { pt3dadd( 34.1795, -128.627, 112.166, 0.88 ) }
    dend_63 { pt3dadd( 33.9671, -132.825, 120.102, 0.88 ) }
    dend_63 { pt3dadd( 35.245, -137.478, 127.693, 0.88 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 49/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -0.892253, -30.2621, 9.92707, 0.96 ) }
    dend_56 { pt3dadd( -0.0810141, -30.8382, 10.9157, 0.96 ) }
    dend_56 { pt3dadd( 0.761272, -31.4269, 11.9806, 0.81 ) }
    dend_56 { pt3dadd( 2.06234, -32.4315, 13.7473, 0.81 ) }
    dend_56 { pt3dadd( 3.70821, -33.8007, 16.0528, 0.59 ) }
    dend_56 { pt3dadd( 5.18192, -35.1047, 18.3006, 0.59 ) }
    dend_56 { pt3dadd( 5.77362, -35.6166, 19.1894, 0.59 ) }
    dend_56 { pt3dadd( 6.60479, -36.2901, 20.3969, 0.59 ) }
    dend_56 { pt3dadd( 7.50204, -36.9368, 21.6403, 0.59 ) }
    dend_56 { pt3dadd( 8.53431, -37.5597, 23.0048, 0.59 ) }
    dend_56 { pt3dadd( 10.0707, -38.3663, 25.1568, 0.59 ) }
    dend_56 { pt3dadd( 11.3001, -38.96, 27.026, 0.37 ) }
    dend_56 { pt3dadd( 12.5304, -39.4275, 29.1709, 0.37 ) }
    dend_56 { pt3dadd( 12.7732, -39.482, 29.6733, 0.37 ) }
    dend_56 { pt3dadd( 13.089, -39.4944, 30.3889, 0.37 ) }
    dend_56 { pt3dadd( 13.9096, -39.4256, 32.3062, 0.37 ) }
    dend_56 { pt3dadd( 14.4471, -39.3332, 33.4695, 0.37 ) }
    dend_56 { pt3dadd( 15.6187, -39.0661, 36.1306, 0.37 ) }
    dend_56 { pt3dadd( 16.0151, -38.975, 36.9853, 0.37 ) }
    dend_56 { pt3dadd( 16.9708, -38.7939, 38.8382, 0.37 ) }
    dend_56 { pt3dadd( 17.9673, -38.6195, 40.4935, 0.37 ) }
    dend_56 { pt3dadd( 19.0772, -38.4406, 41.93, 0.37 ) }
    dend_56 { pt3dadd( 19.8142, -38.3276, 42.6888, 0.37 ) }
    dend_56 { pt3dadd( 21.0332, -38.1378, 43.5904, 0.37 ) }
    dend_56 { pt3dadd( 30.3471, -41.2668, 53.9238, 0.37 ) }
    // Section: dend_54, id: dend_54, parent: dend_38 (entry count 74/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -5.32852, -24.51, 1.7792, 0.29 ) }
    dend_54 { pt3dadd( -5.15525, -24.6381, 0.993399, 0.29 ) }
    dend_54 { pt3dadd( -4.62869, -24.9981, -1.41833, 0.44 ) }
    dend_54 { pt3dadd( -4.40265, -25.1481, -2.44297, 0.44 ) }
    dend_54 { pt3dadd( -4.2374, -25.3078, -3.26823, 0.66 ) }
    dend_54 { pt3dadd( -4.11766, -25.4793, -3.90091, 0.66 ) }
    dend_54 { pt3dadd( -4.04657, -25.6746, -4.43635, 0.66 ) }
    dend_54 { pt3dadd( -4.0543, -26.0318, -5.06919, 0.88 ) }
    dend_54 { pt3dadd( -4.09539, -26.2148, -5.27558, 0.88 ) }
    dend_54 { pt3dadd( -4.44627, -27.1181, -5.98059, 1.03 ) }
    dend_54 { pt3dadd( -4.85626, -27.8987, -6.41582, 1.03 ) }
    dend_54 { pt3dadd( -5.58123, -29.0106, -6.95552, 1.18 ) }
    dend_54 { pt3dadd( -6.4606, -30.195, -7.51143, 1.18 ) }
    dend_54 { pt3dadd( -7.03976, -30.9514, -7.84305, 1.18 ) }
    dend_54 { pt3dadd( -8.20564, -32.5221, -8.49465, 0.88 ) }
    dend_54 { pt3dadd( -9.33702, -34.1046, -9.12301, 0.88 ) }
    dend_54 { pt3dadd( -10.5457, -35.8657, -9.9013, 0.88 ) }
    dend_54 { pt3dadd( -11.5962, -37.5456, -10.7099, 0.88 ) }
    dend_54 { pt3dadd( -12.1272, -38.4619, -11.2061, 0.88 ) }
    dend_54 { pt3dadd( -12.7584, -39.6883, -11.9898, 0.59 ) }
    dend_54 { pt3dadd( -12.9996, -40.2521, -12.447, 0.59 ) }
    dend_54 { pt3dadd( -13.4443, -41.6438, -13.7484, 0.59 ) }
    dend_54 { pt3dadd( -13.6767, -42.6217, -14.6551, 0.59 ) }
    dend_54 { pt3dadd( -13.7567, -43.033, -15.0507, 0.81 ) }
    dend_54 { pt3dadd( -13.9408, -43.9712, -15.938, 0.81 ) }
    dend_54 { pt3dadd( -14.0888, -44.7172, -16.5924, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_54 { pt3dadd( -14.3067, -45.9079, -17.4829, 0.81 ) }
    dend_54 { pt3dadd( -14.6153, -47.7139, -18.6591, 0.59 ) }
    dend_54 { pt3dadd( -14.8935, -49.3391, -19.699, 0.59 ) }
    dend_54 { pt3dadd( -15.0401, -50.0997, -20.1852, 0.59 ) }
    dend_54 { pt3dadd( -15.1576, -50.6229, -20.5444, 0.59 ) }
    dend_54 { pt3dadd( -15.5171, -51.862, -21.4011, 0.74 ) }
    dend_54 { pt3dadd( -15.8982, -52.9251, -22.2242, 0.74 ) }
    dend_54 { pt3dadd( -16.2802, -53.9114, -23.0899, 0.74 ) }
    dend_54 { pt3dadd( -16.5318, -54.5306, -23.6327, 0.74 ) }
    dend_54 { pt3dadd( -17.0068, -55.6403, -24.6325, 0.96 ) }
    dend_54 { pt3dadd( -17.5969, -56.9287, -25.7967, 1.11 ) }
    dend_54 { pt3dadd( -18.312, -58.5424, -27.2233, 1.11 ) }
    dend_54 { pt3dadd( -18.6712, -59.4113, -27.9441, 1.11 ) }
    dend_54 { pt3dadd( -18.9759, -60.1586, -28.5669, 1.11 ) }
    dend_54 { pt3dadd( -19.4329, -61.3039, -29.5409, 0.88 ) }
    dend_54 { pt3dadd( -19.7177, -61.9539, -30.1434, 0.88 ) }
    dend_54 { pt3dadd( -20.0735, -62.7031, -30.9724, 0.88 ) }
    dend_54 { pt3dadd( -20.4526, -63.4201, -31.8131, 0.88 ) }
    dend_54 { pt3dadd( -20.8255, -64.0748, -32.6312, 0.88 ) }
    dend_54 { pt3dadd( -21.3273, -64.8394, -33.7295, 0.88 ) }
    dend_54 { pt3dadd( -21.9631, -65.6824, -35.0357, 0.88 ) }
    dend_54 { pt3dadd( -22.5023, -66.3521, -36.079, 0.88 ) }
    dend_54 { pt3dadd( -22.8742, -66.7695, -36.7358, 1.11 ) }
    dend_54 { pt3dadd( -23.4441, -67.3811, -37.6978, 1.11 ) }
    dend_54 { pt3dadd( -24.759, -68.8282, -39.8601, 0.96 ) }
    dend_54 { pt3dadd( -25.1832, -69.3553, -40.6128, 0.66 ) }
    dend_54 { pt3dadd( -25.7748, -70.2594, -41.7298, 0.66 ) }
    dend_54 { pt3dadd( -26.0629, -70.82, -42.362, 0.66 ) }
    dend_54 { pt3dadd( -26.3813, -71.6824, -43.2418, 0.66 ) }
    dend_54 { pt3dadd( -26.5839, -72.524, -43.9787, 0.88 ) }
    dend_54 { pt3dadd( -26.8865, -74.5253, -45.4456, 0.88 ) }
    dend_54 { pt3dadd( -27.0641, -75.791, -46.2976, 0.88 ) }
    dend_54 { pt3dadd( -27.2716, -77.0795, -47.1332, 0.88 ) }
    dend_54 { pt3dadd( -27.4454, -78.1058, -47.7827, 0.88 ) }
    dend_54 { pt3dadd( -27.6087, -78.9511, -48.3015, 0.88 ) }
    dend_54 { pt3dadd( -28.0273, -80.7147, -49.3353, 0.88 ) }
    dend_54 { pt3dadd( -28.2655, -81.4697, -49.7556, 0.88 ) }
    dend_54 { pt3dadd( -28.712, -82.5567, -50.4269, 1.03 ) }
    dend_54 { pt3dadd( -29.1028, -83.3318, -50.9573, 1.03 ) }
    dend_54 { pt3dadd( -29.57, -84.1612, -51.6832, 1.03 ) }
    dend_54 { pt3dadd( -29.9424, -84.7863, -52.2992, 0.74 ) }
    dend_54 { pt3dadd( -30.2707, -85.2882, -52.8116, 0.74 ) }
    dend_54 { pt3dadd( -30.7098, -85.9365, -53.5117, 0.74 ) }
    dend_54 { pt3dadd( -31.3671, -86.8838, -54.5548, 0.81 ) }
    dend_54 { pt3dadd( -32.1282, -88.0146, -55.7348, 0.88 ) }
    dend_54 { pt3dadd( -32.5728, -88.7808, -56.4874, 0.88 ) }
    dend_54 { pt3dadd( -32.9534, -89.5295, -57.1649, 0.88 ) }
    dend_54 { pt3dadd( -33.4162, -90.6187, -58.0989, 0.88 ) }
    dend_54 { pt3dadd( -33.757, -91.5216, -58.8604, 0.88 ) }
    dend_54 { pt3dadd( -34.1055, -92.4314, -59.6309, 0.59 ) }
    dend_54 { pt3dadd( -34.5698, -93.6006, -60.6627, 0.88 ) }
    dend_54 { pt3dadd( -34.9934, -94.648, -61.6794, 0.88 ) }
    dend_54 { pt3dadd( -35.3447, -95.4778, -62.4905, 0.88 ) }
    dend_54 { pt3dadd( -35.6747, -96.1743, -63.113, 0.88 ) }
    dend_54 { pt3dadd( -35.9501, -96.7231, -63.5885, 0.88 ) }
    dend_54 { pt3dadd( -36.344, -97.5045, -64.2418, 0.88 ) }
    dend_54 { pt3dadd( -36.6736, -98.1934, -64.737, 0.88 ) }
    dend_54 { pt3dadd( -37.156, -99.2746, -65.46, 0.88 ) }
    dend_54 { pt3dadd( -37.8346, -100.786, -66.4406, 0.88 ) }
    dend_54 { pt3dadd( -38.3459, -101.873, -67.1548, 0.74 ) }
    dend_54 { pt3dadd( -38.723, -102.652, -67.7085, 0.74 ) }
    dend_54 { pt3dadd( -39.3653, -103.932, -68.6644, 0.74 ) }
    dend_54 { pt3dadd( -39.8181, -104.763, -69.3208, 0.74 ) }
    dend_54 { pt3dadd( -40.3523, -105.708, -70.1172, 0.74 ) }
    dend_54 { pt3dadd( -41.0008, -106.819, -71.0873, 0.74 ) }
    dend_54 { pt3dadd( -41.8516, -108.156, -72.2769, 0.74 ) }
    dend_54 { pt3dadd( -42.6746, -109.314, -73.3446, 0.74 ) }
    dend_54 { pt3dadd( -43.3924, -110.242, -74.2414, 0.74 ) }
    dend_54 { pt3dadd( -44.5362, -111.724, -75.6499, 0.52 ) }
    dend_54 { pt3dadd( -45.0963, -112.496, -76.37, 0.52 ) }
    dend_54 { pt3dadd( -45.7399, -113.452, -77.2049, 0.52 ) }
    dend_54 { pt3dadd( -46.2858, -114.318, -77.9363, 0.52 ) }
    dend_54 { pt3dadd( -46.9272, -115.425, -78.8579, 0.52 ) }
    dend_54 { pt3dadd( -47.242, -116.029, -79.2774, 0.52 ) }
    dend_54 { pt3dadd( -48.0019, -117.603, -80.1802, 0.52 ) }
    dend_54 { pt3dadd( -48.6133, -118.954, -80.869, 0.52 ) }
    dend_54 { pt3dadd( -49.4447, -120.883, -81.7523, 0.52 ) }
    dend_54 { pt3dadd( -50.0775, -122.321, -82.3574, 0.52 ) }
    dend_54 { pt3dadd( -51.1633, -124.611, -83.307, 0.52 ) }
    dend_54 { pt3dadd( -51.5723, -125.382, -83.6562, 0.52 ) }
    dend_54 { pt3dadd( -52.2895, -126.559, -84.2572, 0.52 ) }
    dend_54 { pt3dadd( -53.1206, -127.78, -84.9745, 0.74 ) }
    dend_54 { pt3dadd( -53.8878, -128.803, -85.5271, 0.74 ) }
    dend_54 { pt3dadd( -54.7242, -129.826, -86.2154, 0.88 ) }
    dend_54 { pt3dadd( -55.3099, -130.436, -86.7689, 0.88 ) }
    dend_54 { pt3dadd( -56.112, -131.255, -87.5714, 0.88 ) }
    dend_54 { pt3dadd( -56.5568, -131.747, -88.0437, 0.88 ) }
    dend_54 { pt3dadd( -57.6305, -133.126, -89.2406, 1.11 ) }
    dend_54 { pt3dadd( -59.0361, -135.373, -90.9484, 1.11 ) }
    dend_54 { pt3dadd( -59.6312, -136.59, -91.8067, 0.74 ) }
    dend_54 { pt3dadd( -60.1812, -138.057, -92.8376, 0.74 ) }
    dend_54 { pt3dadd( -60.566, -139.258, -93.6712, 0.96 ) }
    dend_54 { pt3dadd( -61.1, -141.045, -94.9212, 0.96 ) }
    dend_54 { pt3dadd( -61.4889, -142.301, -95.8382, 0.81 ) }
    dend_54 { pt3dadd( -62.126, -144.137, -97.143, 0.81 ) }
    dend_54 { pt3dadd( -62.8124, -145.756, -98.4251, 0.66 ) }
    dend_54 { pt3dadd( -63.7059, -147.339, -99.9337, 0.66 ) }
    dend_54 { pt3dadd( -64.2475, -148.052, -100.75, 0.66 ) }
    dend_54 { pt3dadd( -64.8744, -148.65, -101.572, 0.66 ) }
    dend_54 { pt3dadd( -65.8436, -149.364, -102.675, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_54 { pt3dadd( -67.2535, -150.224, -104.225, 0.66 ) }
    dend_54 { pt3dadd( -68.0571, -150.677, -105.195, 0.66 ) }
    dend_54 { pt3dadd( -68.738, -151.093, -106.131, 0.66 ) }
    dend_54 { pt3dadd( -69.5419, -151.695, -107.383, 0.66 ) }
    dend_54 { pt3dadd( -70.2414, -152.348, -108.609, 0.66 ) }
    dend_54 { pt3dadd( -71.3834, -153.653, -110.853, 0.66 ) }
    dend_54 { pt3dadd( -72.2268, -154.842, -112.753, 0.44 ) }
    dend_54 { pt3dadd( -72.7549, -155.667, -113.989, 0.44 ) }
    dend_54 { pt3dadd( -73.3786, -156.737, -115.574, 0.44 ) }
    dend_54 { pt3dadd( -73.6517, -157.229, -116.321, 0.52 ) }
    dend_54 { pt3dadd( -74.1248, -158.002, -117.557, 0.52 ) }
    dend_54 { pt3dadd( -74.5648, -158.626, -118.624, 0.52 ) }
    dend_54 { pt3dadd( -75.0378, -159.168, -119.811, 0.52 ) }
    dend_54 { pt3dadd( -75.2243, -159.33, -120.307, 0.59 ) }
    dend_54 { pt3dadd( -75.784, -159.713, -121.875, 0.59 ) }
    dend_54 { pt3dadd( -76.2483, -159.993, -123.293, 0.59 ) }
    dend_54 { pt3dadd( -76.7134, -160.222, -124.695, 0.59 ) }
    dend_54 { pt3dadd( -77.2116, -160.444, -126.016, 0.59 ) }
    dend_54 { pt3dadd( -77.5303, -160.597, -126.765, 0.59 ) }
    dend_54 { pt3dadd( -77.9952, -160.843, -127.695, 0.59 ) }
    dend_54 { pt3dadd( -78.2455, -160.971, -128.121, 0.59 ) }
    dend_54 { pt3dadd( -78.8123, -161.232, -128.976, 0.59 ) }
    dend_54 { pt3dadd( -79.7232, -161.581, -130.205, 0.37 ) }
    dend_54 { pt3dadd( -80.5139, -161.791, -131.196, 0.37 ) }
    dend_54 { pt3dadd( -81.2147, -161.893, -132.048, 0.37 ) }
    dend_54 { pt3dadd( -81.9561, -161.927, -132.902, 0.37 ) }
    dend_54 { pt3dadd( -82.859, -161.897, -133.854, 0.37 ) }
    dend_54 { pt3dadd( -83.7726, -161.805, -134.834, 0.37 ) }
    dend_54 { pt3dadd( -84.6875, -161.676, -135.797, 0.37 ) }
    dend_54 { pt3dadd( -85.3754, -161.586, -136.447, 0.37 ) }
    dend_54 { pt3dadd( -85.7795, -161.571, -136.766, 0.52 ) }
    dend_54 { pt3dadd( -87.0336, -161.652, -137.735, 0.66 ) }
    dend_54 { pt3dadd( -88.9639, -161.918, -139.101, 0.66 ) }
    dend_54 { pt3dadd( -89.4841, -162.005, -139.433, 0.66 ) }
    dend_54 { pt3dadd( -90.3127, -162.158, -139.946, 0.66 ) }
    dend_54 { pt3dadd( -92.4501, -162.562, -141.339, 0.15 ) }
    dend_54 { pt3dadd( -94.4402, -162.935, -142.725, 0.37 ) }
    dend_54 { pt3dadd( -95.9058, -163.179, -143.766, 0.52 ) }
    dend_54 { pt3dadd( -97.2153, -163.352, -144.651, 0.52 ) }
    dend_54 { pt3dadd( -98.7108, -163.509, -145.714, 0.52 ) }
    dend_54 { pt3dadd( -100.308, -163.641, -146.915, 0.52 ) }
    dend_54 { pt3dadd( -101.432, -163.715, -147.871, 0.52 ) }
    dend_54 { pt3dadd( -102.786, -163.828, -149.07, 0.52 ) }
    dend_54 { pt3dadd( -103.509, -163.908, -149.788, 0.52 ) }
    dend_54 { pt3dadd( -104.42, -164.031, -150.712, 0.52 ) }
    dend_54 { pt3dadd( -104.935, -164.11, -151.251, 0.52 ) }
    dend_54 { pt3dadd( -106.501, -164.386, -152.953, 0.52 ) }
    dend_54 { pt3dadd( -107.495, -164.605, -154.175, 0.52 ) }
    dend_54 { pt3dadd( -107.748, -164.674, -154.52, 0.52 ) }
    dend_54 { pt3dadd( -108.09, -164.771, -155.001, 0.52 ) }
    dend_54 { pt3dadd( -109.384, -165.203, -156.857, 0.52 ) }
    dend_54 { pt3dadd( -110.039, -165.494, -157.844, 0.52 ) }
    dend_54 { pt3dadd( -110.758, -165.904, -159.038, 0.52 ) }
    dend_54 { pt3dadd( -111.455, -166.383, -160.322, 0.52 ) }
    dend_54 { pt3dadd( -111.972, -166.793, -161.382, 0.52 ) }
    dend_54 { pt3dadd( -112.732, -167.43, -162.981, 0.29 ) }
    dend_54 { pt3dadd( -113.362, -167.977, -164.274, 0.29 ) }
    dend_54 { pt3dadd( -114.058, -168.64, -165.829, 0.29 ) }
    dend_54 { pt3dadd( -114.26, -168.873, -166.35, 0.29 ) }
    dend_54 { pt3dadd( -114.71, -169.579, -167.902, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 60/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -5.32852, -24.51, 1.7792, 2.06 ) }
    dend_39 { pt3dadd( -6.1199, -26.348, 2.24383, 2.06 ) }
    dend_39 { pt3dadd( -6.54352, -27.4469, 2.43906, 2.06 ) }
    dend_39 { pt3dadd( -7.25076, -29.4314, 2.67829, 2.06 ) }
    dend_39 { pt3dadd( -7.85318, -31.1376, 2.8497, 1.99 ) }
    dend_39 { pt3dadd( -8.72253, -33.475, 3.12812, 1.99 ) }
    dend_39 { pt3dadd( -9.84446, -36.383, 3.51856, 1.99 ) }
    dend_39 { pt3dadd( -11.0526, -39.484, 3.89271, 1.99 ) }
    dend_39 { pt3dadd( -12.4601, -43.0509, 4.31798, 1.99 ) }
    dend_39 { pt3dadd( -13.4425, -45.5681, 4.59817, 1.99 ) }
    dend_39 { pt3dadd( -14.4959, -48.2299, 4.92259, 1.99 ) }
    dend_39 { pt3dadd( -15.5897, -50.8768, 5.30814, 1.99 ) }
    dend_39 { pt3dadd( -15.9836, -51.7486, 5.46556, 1.99 ) }
    dend_39 { pt3dadd( -16.8009, -53.3979, 5.84694, 1.99 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 74/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -57.8063, -47.5642, 37.1579, 0.07 ) }
    dend_37 { pt3dadd( -63.1435, -52.8926, 41.6486, 0.07 ) }
    dend_37 { pt3dadd( -68.2565, -57.8433, 46.7662, 0.07 ) }
    dend_37 { pt3dadd( -72.9818, -63.8429, 51.1336, 0.07 ) }
    dend_37 { pt3dadd( -78.1011, -68.6439, 56.379, 0.07 ) }
    dend_37 { pt3dadd( -81.6661, -74.2314, 62.1399, 0.07 ) }
    dend_37 { pt3dadd( -85.4515, -79.7657, 67.809, 0.07 ) }
    dend_37 { pt3dadd( -88.4064, -85.2667, 73.9785, 0.07 ) }
    dend_37 { pt3dadd( -92.3703, -88.8605, 80.8798, 0.07 ) }
    dend_37 { pt3dadd( -96.757, -93.6127, 86.7872, 0.07 ) }
    dend_37 { pt3dadd( -100.532, -99.4849, 92.1308, 0.07 ) }
    dend_37 { pt3dadd( -104.137, -104.675, 98.2112, 0.07 ) }
    dend_37 { pt3dadd( -108.526, -108.554, 104.696, 0.07 ) }
    dend_37 { pt3dadd( -111.678, -113.048, 111.511, 0.07 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 88/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -57.8063, -47.5642, 37.1579, 0.29 ) }
    dend_36 { pt3dadd( -66.4852, -56.6072, 43.5754, 0.07 ) }
    dend_36 { pt3dadd( -72.7118, -66.7738, 51.1186, 0.07 ) }
    dend_36 { pt3dadd( -78.417, -78.8671, 55.8605, 0.07 ) }
    dend_36 { pt3dadd( -81.9911, -91.3841, 61.5209, 0.07 ) }
    dend_36 { pt3dadd( -82.7421, -104.042, 67.8882, 0.07 ) }
    dend_36 { pt3dadd( -81.3217, -115.558, 75.9585, 0.07 ) }
    dend_36 { pt3dadd( -81.6715, -127.031, 84.2089, 0.07 ) }
    dend_36 { pt3dadd( -82.9679, -138.647, 92.1737, 0.07 ) }
    dend_36 { pt3dadd( -84.3262, -149.382, 101.229, 0.07 ) }
    dend_36 { pt3dadd( -85.6673, -161.781, 107.976, 0.07 ) }
    dend_36 { pt3dadd( -86.0967, -174.938, 113.335, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( -88.0169, -188.043, 118.502, 0.07 ) }
    dend_36 { pt3dadd( -90.8848, -201.854, 120.621, 0.07 ) }
    dend_36 { pt3dadd( -91.5867, -215.805, 123.489, 0.07 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 3/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.1369, 25.7366, 3.41882, 0.88 ) }
    dend_28 { pt3dadd( -0.249795, 27.4383, 3.98437, 0.88 ) }
    dend_28 { pt3dadd( -0.266466, 28.6802, 4.48863, 1.11 ) }
    dend_28 { pt3dadd( -0.29111, 30.5159, 5.23405, 1.11 ) }
    dend_28 { pt3dadd( -0.308896, 31.8407, 5.77201, 1.11 ) }
    dend_28 { pt3dadd( -0.32662, 33.1609, 6.3081, 1.25 ) }
    dend_28 { pt3dadd( -0.359566, 35.6151, 7.30464, 1.25 ) }
    dend_28 { pt3dadd( -0.375863, 36.4547, 7.74514, 1.25 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 11/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -0.1369, 25.7366, 3.41882, 0.81 ) }
    dend_27 { pt3dadd( -1.35652, 27.5304, 3.96047, 0.81 ) }
    dend_27 { pt3dadd( -2.85135, 29.6556, 4.6433, 0.81 ) }
    dend_27 { pt3dadd( -4.59, 32.1179, 5.48427, 0.81 ) }
    dend_27 { pt3dadd( -6.24944, 34.4955, 6.33403, 0.66 ) }
    dend_27 { pt3dadd( -7.86376, 36.8251, 7.29682, 0.66 ) }
    dend_27 { pt3dadd( -8.56015, 37.8319, 7.80252, 0.37 ) }
    dend_27 { pt3dadd( -9.40409, 39.1371, 8.57267, 0.22 ) }
    dend_27 { pt3dadd( -10.3692, 40.6364, 9.64829, 0.22 ) }
    dend_27 { pt3dadd( -10.7905, 41.2297, 10.1675, 0.37 ) }
    dend_27 { pt3dadd( -11.8042, 42.4224, 11.6568, 0.37 ) }
    dend_27 { pt3dadd( -13.0284, 43.7875, 13.623, 0.37 ) }
    dend_27 { pt3dadd( -13.8176, 44.6594, 14.9009, 0.22 ) }
    dend_27 { pt3dadd( -14.3555, 45.2263, 15.735, 0.22 ) }
    dend_27 { pt3dadd( -14.9437, 45.8152, 16.5888, 0.22 ) }
    dend_27 { pt3dadd( -16.5183, 47.3894, 18.7558, 0.29 ) }
    dend_27 { pt3dadd( -19.011, 49.8725, 21.9444, 0.52 ) }
    dend_27 { pt3dadd( -20.3053, 51.2268, 23.5661, 0.52 ) }
    dend_27 { pt3dadd( -21.7013, 52.7894, 25.4225, 0.52 ) }
    dend_27 { pt3dadd( -22.0013, 53.1502, 25.8417, 0.66 ) }
    dend_27 { pt3dadd( -22.9077, 54.3469, 27.2765, 0.81 ) }
    dend_27 { pt3dadd( -23.841, 55.7649, 28.9102, 0.81 ) }
    dend_27 { pt3dadd( -24.7261, 57.3123, 30.7329, 0.59 ) }
    dend_27 { pt3dadd( -25.3908, 58.7169, 32.3234, 0.59 ) }
    dend_27 { pt3dadd( -26.3272, 61.056, 34.8525, 0.59 ) }
    dend_27 { pt3dadd( -27.5703, 64.5052, 38.3193, 0.59 ) }
    dend_27 { pt3dadd( -27.963, 65.6647, 39.3884, 0.07 ) }
    dend_27 { pt3dadd( -28.3683, 66.6282, 40.2606, 0.07 ) }
    dend_27 { pt3dadd( -28.7066, 67.2212, 40.8519, 0.07 ) }
    dend_27 { pt3dadd( -29.3496, 68.0627, 41.7935, 0.15 ) }
    dend_27 { pt3dadd( -30.2022, 68.8545, 42.8012, 0.15 ) }
    dend_27 { pt3dadd( -30.9877, 69.4016, 43.5804, 0.15 ) }
    dend_27 { pt3dadd( -34.4245, 71.5235, 46.8679, 0.37 ) }
    dend_27 { pt3dadd( -37.347, 73.2329, 49.44, 0.52 ) }
    dend_27 { pt3dadd( -39.3618, 74.4396, 51.1683, 0.66 ) }
    dend_27 { pt3dadd( -40.8842, 75.392, 52.4575, 0.44 ) }
    dend_27 { pt3dadd( -42.2718, 76.319, 53.6216, 0.44 ) }
    dend_27 { pt3dadd( -43.5713, 77.267, 54.7177, 0.44 ) }
    dend_27 { pt3dadd( -45.674, 79.0003, 56.4729, 0.44 ) }
    dend_27 { pt3dadd( -47.3172, 80.4114, 57.8757, 0.44 ) }
    dend_27 { pt3dadd( -48.9292, 81.873, 59.3324, 0.44 ) }
    dend_27 { pt3dadd( -49.4781, 82.41, 59.9122, 0.44 ) }
    dend_27 { pt3dadd( -51.1115, 84.0202, 61.8758, 0.44 ) }
    dend_27 { pt3dadd( -51.9515, 84.8201, 62.989, 0.44 ) }
    dend_27 { pt3dadd( -52.8279, 85.6548, 64.5189, 0.44 ) }
    dend_27 { pt3dadd( -59.4489, 94.3629, 74.6758, 0.44 ) }
    dend_27 { pt3dadd( -64.1765, 102.05, 86.5328, 0.44 ) }
    dend_27 { pt3dadd( -66.6277, 110.516, 98.5731, 0.44 ) }
    dend_27 { pt3dadd( -68.3538, 118.784, 110.867, 0.44 ) }
    dend_27 { pt3dadd( -71.1896, 124.122, 124.432, 0.44 ) }
    dend_27 { pt3dadd( -75.9601, 128.616, 137.743, 0.44 ) }
    dend_27 { pt3dadd( -80.37, 131.004, 151.682, 0.44 ) }
    dend_27 { pt3dadd( -83.0592, 134.661, 165.797, 0.44 ) }
    dend_27 { pt3dadd( -84.3661, 137.949, 180.191, 0.44 ) }
    dend_27 { pt3dadd( -87.4694, 142.517, 193.963, 0.44 ) }
    dend_27 { pt3dadd( -90.5735, 148.631, 207.154, 0.44 ) }
    dend_27 { pt3dadd( -94.316, 154.178, 220.416, 0.44 ) }
    dend_27 { pt3dadd( -98.2603, 159.396, 233.746, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 69/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 5.48506, 22.276, -11.27, 1.03 ) }
    dend_9 { pt3dadd( 7.38633, 23.7853, -12.8788, 1.03 ) }
    dend_9 { pt3dadd( 8.7875, 24.7917, -14.171, 1.25 ) }
    dend_9 { pt3dadd( 11.6738, 26.627, -16.9464, 1.25 ) }
    dend_9 { pt3dadd( 14.0214, 27.9404, -19.1967, 1.25 ) }
    dend_9 { pt3dadd( 16.299, 29.0042, -21.1711, 1.25 ) }
    dend_9 { pt3dadd( 18.9333, 30.0127, -23.1838, 1.25 ) }
    dend_9 { pt3dadd( 22.5721, 30.7928, -25.5438, 1.25 ) }
    dend_9 { pt3dadd( 24.8188, 30.9365, -26.6482, 0.96 ) }
    dend_9 { pt3dadd( 27.1278, 30.884, -27.6205, 0.96 ) }
    dend_9 { pt3dadd( 30.9304, 30.523, -28.9222, 0.96 ) }
    dend_9 { pt3dadd( 33.9364, 30.0523, -29.6932, 0.96 ) }
    dend_9 { pt3dadd( 38.9973, 29.0335, -30.4834, 0.96 ) }
    dend_9 { pt3dadd( 45.0909, 27.6644, -30.8298, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 83/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 5.48506, 22.276, -11.27, 0.59 ) }
    dend_8 { pt3dadd( 5.5029, 21.8742, -12.0313, 0.59 ) }
    dend_8 { pt3dadd( 5.43693, 21.0562, -13.659, 0.59 ) }
    dend_8 { pt3dadd( 5.38325, 20.5843, -14.553, 0.59 ) }
    dend_8 { pt3dadd( 5.31565, 20.1438, -15.3644, 0.59 ) }
    dend_8 { pt3dadd( 5.16936, 19.3851, -16.8264, 0.59 ) }
    dend_8 { pt3dadd( 4.99195, 18.5068, -18.5729, 0.59 ) }
    dend_8 { pt3dadd( 4.68468, 17.2187, -21.2201, 0.37 ) }
    dend_8 { pt3dadd( 4.41354, 16.1749, -23.3619, 0.37 ) }
    dend_8 { pt3dadd( 4.16286, 15.1827, -25.4224, 0.37 ) }
    dend_8 { pt3dadd( 3.82837, 13.8699, -28.2936, 0.37 ) }
    dend_8 { pt3dadd( 3.55103, 12.7911, -30.786, 0.07 ) }
    dend_8 { pt3dadd( 3.2523, 11.7877, -33.4447, 0.07 ) }
    dend_8 { pt3dadd( 3.06434, 11.2826, -34.987, 0.07 ) }
    dend_8 { pt3dadd( 2.85531, 10.8822, -36.496, 0.07 ) }
    dend_8 { pt3dadd( 2.5214, 10.3997, -38.6908, 0.07 ) }
    dend_8 { pt3dadd( 2.26645, 10.134, -40.1147, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_8 { pt3dadd( 1.4162, 9.49626, -44.1955, 0.22 ) }
    dend_8 { pt3dadd( 1.12765, 9.3106, -45.5271, 0.37 ) }
    dend_8 { pt3dadd( 0.681155, 9.0378, -47.6136, 0.37 ) }
    dend_8 { pt3dadd( 0.487843, 8.91748, -48.5418, 0.37 ) }
    dend_8 { pt3dadd( 0.340819, 8.80977, -49.3258, 0.37 ) }
    dend_8 { pt3dadd( 0.195723, 8.67765, -50.2672, 0.37 ) }
    dend_8 { pt3dadd( 0.0744092, 8.47963, -51.5902, 0.37 ) }
    dend_8 { pt3dadd( -0.115686, 8.13119, -54.3364, 0.37 ) }
    dend_8 { pt3dadd( -0.202574, 7.9933, -55.7511, 0.37 ) }
    dend_8 { pt3dadd( -0.471489, 7.86727, -58.6283, 0.37 ) }
    dend_8 { pt3dadd( -0.673058, 7.89609, -60.0482, 0.37 ) }
    dend_8 { pt3dadd( -0.854019, 7.98178, -60.9144, 0.37 ) }
    dend_8 { pt3dadd( -1.19573, 8.1931, -62.0399, 0.37 ) }
    dend_8 { pt3dadd( -1.53899, 8.43695, -62.829, 0.37 ) }
    dend_8 { pt3dadd( -2.70094, 9.32575, -64.8798, 0.37 ) }
    dend_8 { pt3dadd( -3.30106, 9.79058, -65.7627, 0.37 ) }
    dend_8 { pt3dadd( -3.81193, 10.1709, -66.4887, 0.37 ) }
    dend_8 { pt3dadd( -4.4084, 10.5953, -67.3649, 0.37 ) }
    dend_8 { pt3dadd( -5.08678, 11.1063, -68.5265, 0.37 ) }
    dend_8 { pt3dadd( -5.58026, 11.5148, -69.4593, 0.37 ) }
    dend_8 { pt3dadd( -6.2296, 12.1521, -70.8856, 0.37 ) }
    dend_8 { pt3dadd( -6.74476, 12.7383, -72.2011, 0.37 ) }
    dend_8 { pt3dadd( -7.23829, 13.421, -73.5322, 0.37 ) }
    dend_8 { pt3dadd( -7.85217, 14.4606, -75.3788, 0.37 ) }
    dend_8 { pt3dadd( -8.22145, 15.2435, -76.6646, 0.37 ) }
    dend_8 { pt3dadd( -8.56304, 16.1393, -77.969, 0.37 ) }
    dend_8 { pt3dadd( -8.83284, 17.0892, -79.1562, 0.37 ) }
    dend_8 { pt3dadd( -9.3023, 19.469, -81.5985, 0.07 ) }
    dend_8 { pt3dadd( -9.54868, 21.2785, -83.1702, 0.07 ) }
    dend_8 { pt3dadd( -9.65739, 22.4848, -84.1381, 0.07 ) }
    dend_8 { pt3dadd( -9.69945, 23.4813, -84.9401, 0.07 ) }
    dend_8 { pt3dadd( -9.69529, 25.0115, -86.2055, 0.07 ) }
    dend_8 { pt3dadd( -9.57551, 27.3292, -88.2321, 0.07 ) }
    dend_8 { pt3dadd( -9.50323, 27.912, -88.8236, 0.07 ) }
    dend_8 { pt3dadd( -9.18487, 29.9581, -91.2055, 0.07 ) }
    dend_8 { pt3dadd( -8.93351, 31.3201, -92.8622, 0.07 ) }
    dend_8 { pt3dadd( -8.76589, 32.1066, -93.8487, 0.07 ) }
    dend_8 { pt3dadd( -8.53931, 33.1461, -95.1408, 0.07 ) }
    dend_8 { pt3dadd( -8.17415, 34.8018, -97.1388, 0.07 ) }
    dend_8 { pt3dadd( -7.89305, 36.2092, -98.6487, 0.07 ) }
    dend_8 { pt3dadd( -7.44112, 38.8725, -101.012, 0.07 ) }
    dend_8 { pt3dadd( -7.22625, 40.3489, -102.128, 0.07 ) }
    dend_8 { pt3dadd( -7.10255, 41.5503, -102.961, 0.07 ) }
    dend_8 { pt3dadd( -7.04748, 42.4649, -103.56, 0.07 ) }
    dend_8 { pt3dadd( -7.00744, 43.2865, -104.078, 0.07 ) }
    dend_8 { pt3dadd( -6.88729, 44.6224, -105.039, 0.07 ) }
    dend_8 { pt3dadd( -6.76172, 45.3839, -105.75, 0.07 ) }
    dend_8 { pt3dadd( -6.04758, 47.2452, -107.918, 0.07 ) }
    dend_8 { pt3dadd( -5.45124, 48.0873, -109.119, 0.07 ) }
    dend_8 { pt3dadd( -4.74825, 48.7103, -110.124, 0.07 ) }
    dend_8 { pt3dadd( -3.39332, 49.5295, -111.564, 0.07 ) }
    dend_8 { pt3dadd( -2.61855, 49.8715, -112.178, 0.07 ) }
    dend_8 { pt3dadd( -0.42405, 50.6642, -113.471, 0.07 ) }
    dend_8 { pt3dadd( 0.740034, 51.0244, -113.923, 0.07 ) }
    dend_8 { pt3dadd( 2.18467, 51.4501, -114.322, 0.07 ) }
    dend_8 { pt3dadd( 3.29771, 51.7688, -114.548, 0.07 ) }
    dend_8 { pt3dadd( 4.5779, 52.0854, -114.696, 0.07 ) }
    dend_8 { pt3dadd( 5.96105, 52.3599, -114.827, 0.07 ) }
    dend_8 { pt3dadd( 7.36923, 52.5707, -115.047, 0.07 ) }
    dend_8 { pt3dadd( 9.26724, 52.7707, -115.519, 0.07 ) }
    dend_8 { pt3dadd( 11.6556, 52.9323, -116.361, 0.07 ) }
    dend_8 { pt3dadd( 12.9712, 52.9754, -116.942, 0.07 ) }
    dend_8 { pt3dadd( 14.427, 52.9875, -117.726, 0.07 ) }
    dend_8 { pt3dadd( 17.661, 53.0422, -119.797, 0.07 ) }
    dend_8 { pt3dadd( 18.3919, 53.0792, -120.318, 0.07 ) }
    dend_8 { pt3dadd( 19.6755, 53.1795, -121.366, 0.07 ) }
    dend_8 { pt3dadd( 20.293, 53.2622, -121.946, 0.07 ) }
    dend_8 { pt3dadd( 20.9319, 53.4085, -122.598, 0.07 ) }
    dend_8 { pt3dadd( 21.801, 53.7007, -123.477, 0.07 ) }
    dend_8 { pt3dadd( 22.7078, 54.2145, -124.391, 0.07 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 70/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -19.3494, 27.7544, -8.44916, 0.29 ) }
    dend_2 { pt3dadd( -21.1991, 28.8647, -9.66365, 0.29 ) }
    dend_2 { pt3dadd( -23.8785, 30.2828, -11.4049, 0.29 ) }
    dend_2 { pt3dadd( -25.3149, 30.9928, -12.3153, 0.07 ) }
    dend_2 { pt3dadd( -26.3857, 31.5109, -12.9712, 0.07 ) }
    dend_2 { pt3dadd( -26.7489, 31.6916, -13.1933, 0.07 ) }
    dend_2 { pt3dadd( -28.6335, 32.6648, -14.4002, 0.37 ) }
    dend_2 { pt3dadd( -29.3675, 33.022, -14.8826, 0.37 ) }
    dend_2 { pt3dadd( -30.3794, 33.5202, -15.5593, 0.37 ) }
    dend_2 { pt3dadd( -31.2416, 33.965, -16.2169, 0.37 ) }
    dend_2 { pt3dadd( -32.2777, 34.4808, -17.0575, 0.59 ) }
    dend_2 { pt3dadd( -33.2001, 34.8957, -17.8282, 0.59 ) }
    dend_2 { pt3dadd( -33.9914, 35.1848, -18.4888, 0.59 ) }
    dend_2 { pt3dadd( -35.5811, 35.6433, -19.7397, 0.59 ) }
    dend_2 { pt3dadd( -36.9569, 35.9667, -20.8278, 0.59 ) }
    dend_2 { pt3dadd( -38.7768, 36.2852, -22.2417, 0.81 ) }
    dend_2 { pt3dadd( -39.9586, 36.4157, -23.1033, 0.81 ) }
    dend_2 { pt3dadd( -41.2328, 36.4962, -23.9585, 0.81 ) }
    dend_2 { pt3dadd( -42.7999, 36.5178, -24.9718, 1.03 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 89/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -19.3494, 27.7544, -8.44916, 0.29 ) }
    dend_1 { pt3dadd( -20.6224, 27.8015, -8.33067, 0.29 ) }
    dend_1 { pt3dadd( -21.5363, 27.841, -8.23706, 0.29 ) }
    dend_1 { pt3dadd( -22.7997, 27.9125, -8.10134, 0.29 ) }
    dend_1 { pt3dadd( -24.1623, 28.0147, -7.95185, 0.52 ) }
    dend_1 { pt3dadd( -26.1762, 28.1897, -7.72596, 0.88 ) }
    dend_1 { pt3dadd( -27.8054, 28.3599, -7.54163, 0.37 ) }
    dend_1 { pt3dadd( -28.6289, 28.5102, -7.45177, 0.37 ) }
    dend_1 { pt3dadd( -29.5229, 28.7342, -7.33964, 0.37 ) }
    dend_1 { pt3dadd( -30.2407, 28.9563, -7.23746, 0.37 ) }
    dend_1 { pt3dadd( -31.2472, 29.3162, -7.07818, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_1 { pt3dadd( -32.0705, 29.6354, -6.93788, 0.37 ) }
    dend_1 { pt3dadd( -33.8446, 30.3852, -6.64176, 0.37 ) }
    dend_1 { pt3dadd( -35.4243, 31.0562, -6.33069, 0.37 ) }
    dend_1 { pt3dadd( -36.3498, 31.4444, -6.12836, 0.37 ) }
    dend_1 { pt3dadd( -38.4004, 32.3099, -5.65266, 0.15 ) }
    dend_1 { pt3dadd( -39.5888, 32.8241, -5.34285, 0.15 ) }
    dend_1 { pt3dadd( -41.0086, 33.4508, -4.94019, 0.15 ) }
    dend_1 { pt3dadd( -43.0665, 34.372, -4.2976, 0.15 ) }
    dend_1 { pt3dadd( -45.2194, 35.3671, -3.6283, 0.15 ) }
    dend_1 { pt3dadd( -46.66, 36.0521, -3.14263, 0.15 ) }
    dend_1 { pt3dadd( -47.6576, 36.548, -2.77844, 0.29 ) }
    dend_1 { pt3dadd( -48.4687, 36.9706, -2.46919, 0.29 ) }
    dend_1 { pt3dadd( -50.109, 37.8611, -1.82943, 0.15 ) }
    dend_1 { pt3dadd( -51.1649, 38.4674, -1.44381, 0.37 ) }
    dend_1 { pt3dadd( -51.8513, 38.829, -1.18589, 0.37 ) }
    dend_1 { pt3dadd( -52.7696, 39.2549, -0.86428, 0.37 ) }
    dend_1 { pt3dadd( -53.5376, 39.5656, -0.603745, 0.37 ) }
    dend_1 { pt3dadd( -54.9343, 40.0626, -0.12376, 0.37 ) }
    dend_1 { pt3dadd( -56.2824, 40.4974, 0.33568, 0.37 ) }
    dend_1 { pt3dadd( -58.5633, 41.2141, 1.10411, 0.59 ) }
    dend_1 { pt3dadd( -60.3943, 41.8019, 1.6978, 0.59 ) }
    dend_1 { pt3dadd( -61.5543, 42.2287, 2.10026, 0.44 ) }
    dend_1 { pt3dadd( -62.304, 42.5505, 2.3789, 0.44 ) }
    dend_1 { pt3dadd( -63.1088, 42.9398, 2.68125, 0.44 ) }
    dend_1 { pt3dadd( -64.8844, 43.9071, 3.33896, 0.29 ) }
    dend_1 { pt3dadd( -66.0903, 44.68, 3.76105, 0.29 ) }
    dend_1 { pt3dadd( -67.7691, 45.8505, 4.31904, 0.37 ) }
    dend_1 { pt3dadd( -68.9319, 46.6645, 4.65252, 0.07 ) }
    dend_1 { pt3dadd( -69.7789, 47.24, 4.87377, 0.07 ) }
    dend_1 { pt3dadd( -70.7673, 47.8602, 5.09674, 0.07 ) }
    dend_1 { pt3dadd( -71.5523, 48.2975, 5.23741, 0.29 ) }
    dend_1 { pt3dadd( -72.5857, 48.8193, 5.36855, 0.29 ) }
    dend_1 { pt3dadd( -74.0237, 49.4823, 5.47481, 0.29 ) }
    dend_1 { pt3dadd( -74.5088, 49.7129, 5.508, 0.29 ) }
    dend_1 { pt3dadd( -75.9028, 50.4693, 5.61671, 0.29 ) }
    dend_1 { pt3dadd( -76.8244, 51.0113, 5.68572, 0.59 ) }
    dend_1 { pt3dadd( -78.2665, 51.8979, 5.79032, 0.59 ) }
    dend_1 { pt3dadd( -79.2433, 52.5128, 5.86079, 0.15 ) }
    dend_1 { pt3dadd( -79.9597, 52.9723, 5.91276, 0.15 ) }
    dend_1 { pt3dadd( -80.9633, 53.5781, 6.0035, 0.15 ) }
    dend_1 { pt3dadd( -81.6954, 54.021, 6.06936, 0.15 ) }
    dend_1 { pt3dadd( -82.6909, 54.6242, 6.15321, 0.22 ) }
    dend_1 { pt3dadd( -84.1579, 55.5066, 6.27129, 0.22 ) }
    dend_1 { pt3dadd( -84.9437, 55.9792, 6.33215, 0.22 ) }
    dend_1 { pt3dadd( -86.7709, 57.008, 6.39178, 0.22 ) }
    dend_1 { pt3dadd( -88.412, 57.922, 6.39928, 0.22 ) }
    dend_1 { pt3dadd( -90.0843, 58.869, 6.37392, 0.22 ) }
    dend_1 { pt3dadd( -91.3704, 59.6121, 6.32785, 0.22 ) }
    dend_1 { pt3dadd( -92.4361, 60.2148, 6.28279, 0.22 ) }
    dend_1 { pt3dadd( -95.5324, 61.9146, 6.15534, 0.22 ) }
    dend_1 { pt3dadd( -97.4842, 62.9705, 6.07027, 0.22 ) }
    dend_1 { pt3dadd( -98.8369, 63.6976, 6.02425, 0.22 ) }
    dend_1 { pt3dadd( -101.706, 65.2885, 5.91643, 0.22 ) }
    dend_1 { pt3dadd( -104.263, 66.7758, 5.82283, 0.22 ) }
    dend_1 { pt3dadd( -105.75, 67.6964, 5.80089, 0.22 ) }
    dend_1 { pt3dadd( -107.064, 68.5647, 5.81616, 0.22 ) }
    dend_1 { pt3dadd( -109.087, 69.9877, 5.83017, 0.22 ) }
    dend_1 { pt3dadd( -111.127, 71.5714, 5.82184, 0.22 ) }
    dend_1 { pt3dadd( -113.209, 73.3488, 5.8188, 0.22 ) }
    dend_1 { pt3dadd( -115.586, 75.5202, 5.82013, 0.22 ) }
    dend_1 { pt3dadd( -117.026, 76.8601, 5.83409, 0.22 ) }
    dend_1 { pt3dadd( -119.222, 78.9033, 5.88539, 0.22 ) }
    dend_1 { pt3dadd( -120.927, 80.4878, 5.94367, 0.22 ) }
    dend_1 { pt3dadd( -122.253, 81.7527, 5.99936, 0.22 ) }
    dend_1 { pt3dadd( -123.951, 83.4521, 6.03886, 0.22 ) }
    dend_1 { pt3dadd( -125.201, 84.772, 6.03868, 0.22 ) }
    dend_1 { pt3dadd( -126.079, 85.7788, 6.0306, 0.22 ) }
    dend_1 { pt3dadd( -128.894, 89.3043, 6.05298, 0.22 ) }
    dend_1 { pt3dadd( -129.943, 90.7343, 6.06644, 0.22 ) }
    dend_1 { pt3dadd( -131.114, 92.5188, 6.1591, 0.22 ) }
    dend_1 { pt3dadd( -132.32, 94.6454, 6.36036, 0.22 ) }
    dend_1 { pt3dadd( -133.138, 96.2412, 6.57529, 0.22 ) }
    dend_1 { pt3dadd( -133.728, 97.445, 6.77518, 0.22 ) }
    dend_1 { pt3dadd( -134.067, 98.1726, 6.9172, 0.22 ) }
    dend_1 { pt3dadd( -135.839, 101.399, 7.44622, 0.22 ) }
    dend_1 { pt3dadd( -136.286, 102.115, 7.53262, 0.22 ) }
    dend_1 { pt3dadd( -138.004, 104.777, 7.69576, 0.22 ) }
    dend_1 { pt3dadd( -139.511, 107.102, 7.719, 0.22 ) }
    dend_1 { pt3dadd( -140.952, 109.461, 7.61132, 0.22 ) }
    dend_1 { pt3dadd( -142.684, 112.64, 7.41273, 0.37 ) }
    dend_1 { pt3dadd( -144.09, 115.557, 7.15821, 0.37 ) }
    dend_1 { pt3dadd( -145.232, 118.29, 6.95761, 0.37 ) }
    dend_1 { pt3dadd( -145.677, 119.759, 6.87082, 0.37 ) }
    dend_1 { pt3dadd( -146.216, 122.307, 6.76697, 0.07 ) }
    dend_1 { pt3dadd( -146.622, 125.495, 6.69068, 0.07 ) }
    dend_1 { pt3dadd( -146.668, 127.34, 6.68166, 0.07 ) }
    dend_1 { pt3dadd( -146.511, 130.379, 6.57675, 0.07 ) }
    dend_1 { pt3dadd( -146.216, 134.115, 6.43972, 0.07 ) }
    dend_1 { pt3dadd( -146.039, 135.803, 6.35821, 0.07 ) }
    dend_1 { pt3dadd( -145.791, 137.472, 6.23074, 0.07 ) }
    dend_1 { pt3dadd( -145.422, 139.259, 5.97256, 0.07 ) }
    dend_1 { pt3dadd( -144.819, 141.489, 5.58459, 0.07 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 92/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.40654, 47.5527, -1.84882, 0.405088 ) }
    axon_1 { pt3dadd( 7.11726, 62.4548, -1.84882, 0.405088 ) }
    axon_1 { pt3dadd( 8.82798, 77.3569, -1.84882, 0.405088 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 95/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 30.3471, -41.2668, 53.9238, 0.07 ) }
    dend_60 { pt3dadd( 34.225, -42.7611, 60.6973, 0.07 ) }
    dend_60 { pt3dadd( 37.6027, -45.7067, 67.285, 0.07 ) }
    dend_60 { pt3dadd( 41.5199, -49.1066, 73.3503, 0.07 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 99/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 30.3471, -41.2668, 53.9238, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_57 { pt3dadd( 35.8545, -43.3441, 63.2772, 0.07 ) }
    dend_57 { pt3dadd( 41.1813, -43.9678, 72.9253, 0.07 ) }
    // Section: dend_51, id: dend_51, parent: dend_39 (entry count 2/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -16.8009, -53.3979, 5.84694, 0.96 ) }
    dend_51 { pt3dadd( -16.4197, -55.1367, 6.62911, 0.96 ) }
    dend_51 { pt3dadd( -16.123, -56.4257, 7.16961, 0.96 ) }
    dend_51 { pt3dadd( -15.8247, -58.0116, 7.78222, 0.96 ) }
    dend_51 { pt3dadd( -15.4599, -60.5556, 8.69519, 1.18 ) }
    dend_51 { pt3dadd( -15.3321, -61.8287, 9.11838, 1.18 ) }
    dend_51 { pt3dadd( -15.2338, -63.156, 9.54025, 1.18 ) }
    dend_51 { pt3dadd( -15.2068, -63.9143, 9.77677, 1.18 ) }
    dend_51 { pt3dadd( -15.1702, -65.1788, 10.1397, 1.03 ) }
    dend_51 { pt3dadd( -15.1455, -65.9419, 10.3597, 1.03 ) }
    dend_51 { pt3dadd( -15.0754, -67.1373, 10.7812, 1.03 ) }
    dend_51 { pt3dadd( -14.9904, -67.7204, 11.0522, 1.03 ) }
    dend_51 { pt3dadd( -14.7561, -68.9905, 11.7145, 1.03 ) }
    dend_51 { pt3dadd( -14.3481, -70.6383, 12.6595, 1.03 ) }
    dend_51 { pt3dadd( -14.0241, -71.585, 13.2567, 1.03 ) }
    dend_51 { pt3dadd( -13.4932, -72.8689, 14.1375, 1.03 ) }
    dend_51 { pt3dadd( -12.8145, -74.2764, 15.2017, 1.03 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 19/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -16.8009, -53.3979, 5.84694, 1.33 ) }
    dend_40 { pt3dadd( -16.7635, -55.2527, 4.3067, 1.33 ) }
    dend_40 { pt3dadd( -16.7003, -58.3812, 1.70891, 1.33 ) }
    dend_40 { pt3dadd( -16.6311, -61.8095, -1.13796, 1.33 ) }
    dend_40 { pt3dadd( -16.603, -63.2035, -2.29549, 1.4 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 24/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -0.375863, 36.4547, 7.74514, 0.66 ) }
    dend_32 { pt3dadd( 0.607733, 38.3514, 7.68213, 0.66 ) }
    dend_32 { pt3dadd( 1.58379, 39.8206, 7.72851, 0.66 ) }
    dend_32 { pt3dadd( 2.75372, 41.3095, 7.85816, 0.88 ) }
    dend_32 { pt3dadd( 4.2533, 43.2178, 8.02434, 0.88 ) }
    dend_32 { pt3dadd( 5.1114, 44.3098, 8.11943, 0.88 ) }
    dend_32 { pt3dadd( 6.47779, 46.0487, 8.27085, 1.03 ) }
    dend_32 { pt3dadd( 7.46839, 47.0713, 8.45277, 0.74 ) }
    dend_32 { pt3dadd( 8.3558, 47.8179, 8.61894, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 33/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.375863, 36.4547, 7.74514, 0.59 ) }
    dend_29 { pt3dadd( -1.26538, 37.5945, 8.09414, 0.59 ) }
    dend_29 { pt3dadd( -2.05224, 38.6004, 8.53505, 0.59 ) }
    dend_29 { pt3dadd( -2.69423, 39.4409, 8.98748, 0.74 ) }
    dend_29 { pt3dadd( -3.41614, 40.4229, 9.58147, 1.11 ) }
    dend_29 { pt3dadd( -3.98455, 41.2413, 10.1426, 1.11 ) }
    dend_29 { pt3dadd( -4.63689, 42.2425, 10.894, 1.11 ) }
    dend_29 { pt3dadd( -5.09698, 43.0526, 11.6553, 1.25 ) }
    dend_29 { pt3dadd( -5.41087, 43.7469, 12.4242, 1.47 ) }
    dend_29 { pt3dadd( -5.59091, 44.3317, 13.133, 1.47 ) }
    dend_29 { pt3dadd( -5.6725, 45.0218, 13.997, 1.47 ) }
    dend_29 { pt3dadd( -5.6391, 45.467, 14.5286, 1.47 ) }
    dend_29 { pt3dadd( -5.51115, 46.0277, 15.1197, 1.47 ) }
    dend_29 { pt3dadd( -5.32834, 46.67, 15.7182, 1.47 ) }
    dend_29 { pt3dadd( -5.12929, 47.3076, 16.2228, 1.47 ) }
    dend_29 { pt3dadd( -4.8756, 48.0796, 16.7885, 1.62 ) }
    dend_29 { pt3dadd( -4.58825, 48.991, 17.3793, 1.62 ) }
    dend_29 { pt3dadd( -4.31459, 49.9007, 17.9178, 1.69 ) }
    dend_29 { pt3dadd( -3.73781, 51.9585, 19.0204, 1.69 ) }
    dend_29 { pt3dadd( -3.49485, 52.9587, 19.5181, 1.69 ) }
    // Section: dend_15, id: dend_15, parent: dend_9 (entry count 53/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 45.0909, 27.6644, -30.8298, 0.81 ) }
    dend_15 { pt3dadd( 48.3242, 27.4122, -30.7473, 0.81 ) }
    dend_15 { pt3dadd( 50.0765, 27.4023, -30.6155, 0.81 ) }
    dend_15 { pt3dadd( 52.026, 27.4955, -30.3471, 0.52 ) }
    dend_15 { pt3dadd( 53.5241, 27.6568, -30.0976, 0.52 ) }
    dend_15 { pt3dadd( 55.059, 27.8814, -29.8422, 0.52 ) }
    dend_15 { pt3dadd( 56.4223, 28.0853, -29.5986, 0.74 ) }
    dend_15 { pt3dadd( 58.0506, 28.3297, -29.2913, 0.74 ) }
    dend_15 { pt3dadd( 59.8761, 28.6084, -28.9237, 0.74 ) }
    dend_15 { pt3dadd( 61.6122, 28.8284, -28.6213, 0.74 ) }
    dend_15 { pt3dadd( 64.8382, 28.9997, -28.1293, 0.37 ) }
    dend_15 { pt3dadd( 65.8928, 28.9759, -28.0127, 0.37 ) }
    dend_15 { pt3dadd( 68.6045, 28.808, -27.7783, 0.66 ) }
    dend_15 { pt3dadd( 69.2779, 28.7436, -27.7492, 0.66 ) }
    dend_15 { pt3dadd( 71.947, 28.3747, -27.7155, 1.03 ) }
    dend_15 { pt3dadd( 73.7304, 28.0262, -27.7152, 1.03 ) }
    dend_15 { pt3dadd( 76.4103, 27.4006, -27.7825, 1.03 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 70/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 45.0909, 27.6644, -30.8298, 0.59 ) }
    dend_10 { pt3dadd( 46.095, 28.4901, -31.5009, 0.59 ) }
    dend_10 { pt3dadd( 47.2175, 29.4133, -32.2512, 0.59 ) }
    dend_10 { pt3dadd( 49.0689, 30.9358, -33.4886, 0.59 ) }
    dend_10 { pt3dadd( 49.7809, 31.5213, -33.9645, 0.59 ) }
    dend_10 { pt3dadd( 51.4384, 32.8845, -35.0724, 0.59 ) }
    dend_10 { pt3dadd( 52.7585, 33.97, -35.9547, 0.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 77/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -42.7999, 36.5178, -24.9718, 0.74 ) }
    dend_6 { pt3dadd( -44.5202, 38.5375, -27.6582, 0.74 ) }
    dend_6 { pt3dadd( -46.031, 40.4002, -30.1167, 0.74 ) }
    dend_6 { pt3dadd( -46.755, 41.3833, -31.3267, 0.74 ) }
    dend_6 { pt3dadd( -48.6273, 43.9039, -34.3251, 0.74 ) }
    dend_6 { pt3dadd( -49.3876, 44.8748, -35.4901, 0.52 ) }
    dend_6 { pt3dadd( -50.0746, 45.6852, -36.4606, 0.52 ) }
    dend_6 { pt3dadd( -50.9973, 46.7179, -37.5735, 0.52 ) }
    dend_6 { pt3dadd( -52.6422, 48.3344, -39.1526, 0.52 ) }
    dend_6 { pt3dadd( -53.7293, 49.2214, -40.0265, 0.52 ) }
    dend_6 { pt3dadd( -54.7713, 49.9028, -40.7013, 0.52 ) }
    dend_6 { pt3dadd( -56.3949, 50.8577, -41.5845, 0.15 ) }
    dend_6 { pt3dadd( -57.8632, 51.6473, -42.2745, 0.15 ) }
    dend_6 { pt3dadd( -59.8192, 52.6051, -43.0992, 0.15 ) }
    dend_6 { pt3dadd( -62.0737, 53.6194, -44.0124, 0.15 ) }
    dend_6 { pt3dadd( -63.6981, 54.3521, -44.6985, 0.15 ) }
    dend_6 { pt3dadd( -65.0415, 54.9548, -45.292, 0.15 ) }
    dend_6 { pt3dadd( -65.9732, 55.3263, -45.7566, 0.15 ) }
    dend_6 { pt3dadd( -68.5783, 56.1961, -47.2236, 0.29 ) }
    dend_6 { pt3dadd( -69.3469, 56.41, -47.7408, 0.29 ) }
    dend_6 { pt3dadd( -70.6946, 56.7307, -48.8469, 0.29 ) }
    dend_6 { pt3dadd( -71.5071, 56.8751, -49.5988, 0.29 ) }
    dend_6 { pt3dadd( -73.3042, 57.111, -51.3891, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_6 { pt3dadd( -74.2008, 57.2353, -52.295, 0.29 ) }
    dend_6 { pt3dadd( -76.099, 57.5796, -54.1853, 0.44 ) }
    dend_6 { pt3dadd( -77.3199, 57.8982, -55.37, 0.44 ) }
    dend_6 { pt3dadd( -78.7279, 58.4094, -56.5773, 0.44 ) }
    dend_6 { pt3dadd( -79.4135, 58.7656, -57.1397, 0.22 ) }
    dend_6 { pt3dadd( -81.0026, 59.8639, -58.3574, 0.22 ) }
    dend_6 { pt3dadd( -82.4126, 61.0276, -59.4131, 0.22 ) }
    dend_6 { pt3dadd( -83.0371, 61.639, -59.9104, 0.22 ) }
    dend_6 { pt3dadd( -84.7423, 63.5529, -61.5502, 0.22 ) }
    dend_6 { pt3dadd( -86.2926, 65.4283, -63.2933, 0.22 ) }
    dend_6 { pt3dadd( -87.0254, 66.3533, -64.2237, 0.22 ) }
    dend_6 { pt3dadd( -88.4541, 68.1064, -66.0971, 0.22 ) }
    dend_6 { pt3dadd( -89.5433, 69.4433, -67.5214, 0.22 ) }
    dend_6 { pt3dadd( -91.2915, 71.6039, -69.7688, 0.22 ) }
    dend_6 { pt3dadd( -92.7536, 73.4836, -71.8073, 0.22 ) }
    dend_6 { pt3dadd( -94.31, 75.3162, -73.7999, 0.22 ) }
    dend_6 { pt3dadd( -96.9549, 78.0663, -76.8165, 0.22 ) }
    dend_6 { pt3dadd( -98.958, 79.7263, -78.7755, 0.22 ) }
    dend_6 { pt3dadd( -100.332, 80.6025, -79.9341, 0.22 ) }
    dend_6 { pt3dadd( -103.828, 82.3224, -82.5757, 0.22 ) }
    dend_6 { pt3dadd( -107.052, 83.538, -84.8617, 0.22 ) }
    dend_6 { pt3dadd( -110.488, 84.5357, -87.1142, 0.22 ) }
    dend_6 { pt3dadd( -115.32, 85.5902, -90.1952, 0.07 ) }
    dend_6 { pt3dadd( -118.297, 86.0873, -92.0794, 0.07 ) }
    dend_6 { pt3dadd( -120.202, 86.3407, -93.2666, 0.07 ) }
    dend_6 { pt3dadd( -124.257, 86.8345, -95.8221, 0.07 ) }
    dend_6 { pt3dadd( -126.051, 87.0873, -97.0572, 0.07 ) }
    dend_6 { pt3dadd( -128.88, 87.5633, -99.0855, 0.07 ) }
    dend_6 { pt3dadd( -131.56, 88.078, -100.937, 0.07 ) }
    dend_6 { pt3dadd( -135.755, 88.8892, -103.676, 0.07 ) }
    dend_6 { pt3dadd( -139.157, 89.5566, -105.822, 0.07 ) }
    dend_6 { pt3dadd( -141.67, 90.1029, -107.348, 0.07 ) }
    dend_6 { pt3dadd( -143.51, 90.5786, -108.441, 0.07 ) }
    dend_6 { pt3dadd( -147.236, 91.719, -110.557, 0.07 ) }
    dend_6 { pt3dadd( -150.54, 92.9094, -112.431, 0.07 ) }
    dend_6 { pt3dadd( -153.72, 94.2508, -114.331, 0.07 ) }
    dend_6 { pt3dadd( -157.007, 95.7827, -116.432, 0.07 ) }
    dend_6 { pt3dadd( -159.889, 97.2739, -118.423, 0.07 ) }
    dend_6 { pt3dadd( -162.375, 98.681, -120.097, 0.07 ) }
    dend_6 { pt3dadd( -164.432, 99.9592, -121.383, 0.07 ) }
    dend_6 { pt3dadd( -166.301, 101.222, -122.442, 0.07 ) }
    dend_6 { pt3dadd( -168.062, 102.475, -123.344, 0.07 ) }
    dend_6 { pt3dadd( -170.67, 104.519, -124.606, 0.07 ) }
    dend_6 { pt3dadd( -176.077, 109.263, -127.074, 0.07 ) }
    dend_6 { pt3dadd( -179.15, 112.277, -128.493, 0.07 ) }
    dend_6 { pt3dadd( -181.069, 114.302, -129.384, 0.07 ) }
    dend_6 { pt3dadd( -182.961, 116.435, -130.268, 0.07 ) }
    dend_6 { pt3dadd( -185.085, 119.032, -131.315, 0.07 ) }
    dend_6 { pt3dadd( -186.787, 121.345, -132.299, 0.07 ) }
    dend_6 { pt3dadd( -188.767, 124.396, -133.713, 0.07 ) }
    dend_6 { pt3dadd( -189.962, 126.216, -134.632, 0.07 ) }
    dend_6 { pt3dadd( -191.084, 127.836, -135.472, 0.07 ) }
    dend_6 { pt3dadd( -192.462, 129.738, -136.467, 0.07 ) }
    dend_6 { pt3dadd( -193.668, 131.274, -137.317, 0.07 ) }
    dend_6 { pt3dadd( -194.967, 132.886, -138.209, 0.07 ) }
    dend_6 { pt3dadd( -196.761, 135.04, -139.271, 0.07 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 56/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -42.7999, 36.5178, -24.9718, 0.44 ) }
    dend_3 { pt3dadd( -43.7899, 36.6535, -25.467, 0.44 ) }
    dend_3 { pt3dadd( -44.65, 36.8127, -25.8487, 0.44 ) }
    dend_3 { pt3dadd( -46.0079, 37.064, -26.4513, 0.44 ) }
    dend_3 { pt3dadd( -47.1742, 37.2799, -26.9689, 0.44 ) }
    dend_3 { pt3dadd( -48.8328, 37.5869, -27.705, 0.44 ) }
    dend_3 { pt3dadd( -51.1426, 38.0145, -28.7301, 0.44 ) }
    dend_3 { pt3dadd( -53.4945, 38.5963, -29.8064, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 64/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 41.5199, -49.1066, 73.3503, 0.07 ) }
    dend_62 { pt3dadd( 38.6456, -44.0599, 85.7542, 0.07 ) }
    dend_62 { pt3dadd( 34.3998, -41.3739, 98.464, 0.07 ) }
    dend_62 { pt3dadd( 32.2114, -38.0293, 111.539, 0.07 ) }
    dend_62 { pt3dadd( 32.6133, -33.1922, 124.34, 0.07 ) }
    dend_62 { pt3dadd( 30.7482, -30.4021, 137.588, 0.07 ) }
    dend_62 { pt3dadd( 28.7587, -28.8569, 151.013, 0.07 ) }
    dend_62 { pt3dadd( 27.0148, -27.2761, 164.467, 0.07 ) }
    dend_62 { pt3dadd( 25.3962, -22.6949, 177.264, 0.07 ) }
    dend_62 { pt3dadd( 22.435, -17.34, 189.523, 0.07 ) }
    dend_62 { pt3dadd( 22.2684, -9.49175, 200.818, 0.07 ) }
    dend_62 { pt3dadd( 24.1595, 0.583264, 210.089, 0.07 ) }
    dend_62 { pt3dadd( 25.8649, 10.5976, 219.459, 0.07 ) }
    dend_62 { pt3dadd( 24.9682, 20.423, 229.13, 0.07 ) }
    dend_62 { pt3dadd( 22.6321, 28.6387, 239.928, 0.07 ) }
    dend_62 { pt3dadd( 18.3465, 38.1535, 248.975, 0.07 ) }
    dend_62 { pt3dadd( 16.7698, 49.688, 256.536, 0.07 ) }
    dend_62 { pt3dadd( 16.8508, 60.3077, 265.415, 0.07 ) }
    dend_62 { pt3dadd( 16.5437, 70.3786, 274.88, 0.07 ) }
    dend_62 { pt3dadd( 17.4874, 80.3452, 284.406, 0.07 ) }
    dend_62 { pt3dadd( 16.8726, 91.9626, 291.982, 0.07 ) }
    dend_62 { pt3dadd( 16.5656, 102.498, 300.953, 0.07 ) }
    dend_62 { pt3dadd( 15.1061, 113.294, 309.509, 0.07 ) }
    dend_62 { pt3dadd( 11.2299, 122.577, 318.959, 0.07 ) }
    dend_62 { pt3dadd( 5.7196, 132.38, 326.997, 0.07 ) }
    dend_62 { pt3dadd( -0.693189, 139.996, 336.491, 0.07 ) }
    dend_62 { pt3dadd( -7.41754, 145.216, 347.228, 0.07 ) }
    dend_62 { pt3dadd( -12.7191, 151.602, 358.159, 0.07 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 92/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 41.5199, -49.1066, 73.3503, 0.07 ) }
    dend_61 { pt3dadd( 45.4854, -52.9716, 74.8636, 0.07 ) }
    dend_61 { pt3dadd( 48.6929, -57.1493, 77.1797, 0.07 ) }
    dend_61 { pt3dadd( 51.0613, -62.0323, 79.1706, 0.07 ) }
    dend_61 { pt3dadd( 53.4043, -66.4541, 82.0329, 0.07 ) }
    dend_61 { pt3dadd( 55.456, -70.9712, 84.9773, 0.07 ) }
    dend_61 { pt3dadd( 57.3366, -75.1002, 88.5199, 0.07 ) }
    dend_61 { pt3dadd( 58.1974, -78.8776, 92.7645, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_61 { pt3dadd( 59.757, -82.1562, 97.1985, 0.07 ) }
    dend_61 { pt3dadd( 61.2565, -85.3605, 101.704, 0.07 ) }
    dend_61 { pt3dadd( 61.8869, -89.6735, 105.477, 0.07 ) }
    dend_61 { pt3dadd( 61.8532, -94.5353, 108.614, 0.07 ) }
    dend_61 { pt3dadd( 62.4385, -99.0883, 112.116, 0.07 ) }
    dend_61 { pt3dadd( 62.6177, -104.023, 115.137, 0.07 ) }
    dend_61 { pt3dadd( 62.8522, -108.61, 118.638, 0.07 ) }
    dend_61 { pt3dadd( 63.0656, -112.854, 122.531, 0.07 ) }
    dend_61 { pt3dadd( 62.732, -116.949, 126.566, 0.07 ) }
    dend_61 { pt3dadd( 63.4684, -121.473, 130.075, 0.07 ) }
    dend_61 { pt3dadd( 63.8645, -125.977, 133.663, 0.07 ) }
    dend_61 { pt3dadd( 64.0215, -130.441, 137.317, 0.07 ) }
    dend_61 { pt3dadd( 63.5688, -134.992, 140.843, 0.07 ) }
    dend_61 { pt3dadd( 61.9183, -138.711, 144.902, 0.07 ) }
    dend_61 { pt3dadd( 59.8195, -142.103, 149.024, 0.07 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 15/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 41.1813, -43.9678, 72.9253, 0.07 ) }
    dend_59 { pt3dadd( 46.3267, -45.31, 80.2107, 0.07 ) }
    dend_59 { pt3dadd( 51.2196, -48.3496, 87.1819, 0.07 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 18/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 41.1813, -43.9678, 72.9253, 0.07 ) }
    dend_58 { pt3dadd( 44.526, -44.8307, 79.8247, 0.07 ) }
    dend_58 { pt3dadd( 46.6811, -45.6998, 87.1799, 0.07 ) }
    dend_58 { pt3dadd( 47.4862, -46.4883, 94.8088, 0.07 ) }
    dend_58 { pt3dadd( 47.8331, -47.5133, 102.444, 0.07 ) }
    dend_58 { pt3dadd( 48.6605, -47.1271, 110.102, 0.07 ) }
    dend_58 { pt3dadd( 49.8382, -47.5738, 117.71, 0.07 ) }
    dend_58 { pt3dadd( 50.1005, -47.1496, 125.406, 0.07 ) }
    dend_58 { pt3dadd( 49.2786, -47.1683, 133.074, 0.07 ) }
    dend_58 { pt3dadd( 49.479, -47.7397, 140.762, 0.07 ) }
    dend_58 { pt3dadd( 49.2208, -48.7359, 148.404, 0.07 ) }
    dend_58 { pt3dadd( 49.5652, -50.5633, 155.894, 0.07 ) }
    dend_58 { pt3dadd( 50.3917, -50.8941, 163.553, 0.07 ) }
    dend_58 { pt3dadd( 52.6166, -52.156, 170.833, 0.07 ) }
    dend_58 { pt3dadd( 54.8025, -53.0333, 178.178, 0.07 ) }
    dend_58 { pt3dadd( 55.7129, -54.1301, 185.759, 0.07 ) }
    dend_58 { pt3dadd( 55.9052, -56.2801, 193.17, 0.07 ) }
    dend_58 { pt3dadd( 55.7896, -57.5196, 200.782, 0.07 ) }
    dend_58 { pt3dadd( 54.7724, -59.176, 208.246, 0.07 ) }
    dend_58 { pt3dadd( 54.044, -59.1464, 215.924, 0.07 ) }
    dend_58 { pt3dadd( 54.0641, -59.4268, 223.63, 0.07 ) }
    dend_58 { pt3dadd( 53.7815, -60.4399, 231.269, 0.07 ) }
    dend_58 { pt3dadd( 54.1406, -60.8636, 238.96, 0.07 ) }
    dend_58 { pt3dadd( 54.0966, -62.2035, 246.556, 0.07 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 42/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -12.8145, -74.2764, 15.2017, 0.81 ) }
    dend_53 { pt3dadd( -12.241, -75.1356, 16.2327, 0.81 ) }
    dend_53 { pt3dadd( -11.8137, -75.7965, 17.463, 0.81 ) }
    dend_53 { pt3dadd( -11.3859, -76.5244, 19.03, 0.81 ) }
    dend_53 { pt3dadd( -11.1575, -76.8749, 19.7774, 0.81 ) }
    dend_53 { pt3dadd( -10.6063, -77.7145, 21.4567, 0.81 ) }
    dend_53 { pt3dadd( -9.55456, -79.3765, 24.4751, 0.81 ) }
    dend_53 { pt3dadd( -8.71484, -80.742, 26.8374, 0.81 ) }
    dend_53 { pt3dadd( -8.27078, -81.4397, 27.976, 0.81 ) }
    dend_53 { pt3dadd( -7.4855, -82.5363, 29.8461, 0.52 ) }
    dend_53 { pt3dadd( -7.01614, -83.1556, 30.9062, 0.52 ) }
    dend_53 { pt3dadd( -6.43314, -83.9259, 32.1094, 0.52 ) }
    dend_53 { pt3dadd( -6.08781, -84.3789, 32.6232, 0.52 ) }
    dend_53 { pt3dadd( -5.57705, -85.1145, 33.2985, 0.52 ) }
    dend_53 { pt3dadd( -4.78338, -86.4789, 34.5072, 0.66 ) }
    dend_53 { pt3dadd( -4.40513, -87.4585, 35.3816, 0.66 ) }
    dend_53 { pt3dadd( -4.26056, -88.1654, 36.013, 0.66 ) }
    dend_53 { pt3dadd( -4.26327, -89.1434, 36.8434, 0.66 ) }
    dend_53 { pt3dadd( -4.51172, -90.3964, 37.8793, 0.66 ) }
    dend_53 { pt3dadd( -4.96099, -91.4918, 38.7389, 0.81 ) }
    dend_53 { pt3dadd( -5.54762, -92.4811, 39.4904, 0.81 ) }
    dend_53 { pt3dadd( -6.31756, -93.4555, 40.2649, 0.66 ) }
    dend_53 { pt3dadd( -7.07748, -94.3032, 40.9847, 0.66 ) }
    dend_53 { pt3dadd( -7.88569, -95.1005, 41.721, 0.66 ) }
    dend_53 { pt3dadd( -8.73941, -95.8063, 42.3646, 0.37 ) }
    dend_53 { pt3dadd( -9.50794, -96.3373, 42.8445, 0.37 ) }
    dend_53 { pt3dadd( -10.669, -97.024, 43.4813, 0.37 ) }
    dend_53 { pt3dadd( -11.7313, -106.176, 52.2882, 0.37 ) }
    dend_53 { pt3dadd( -10.5916, -113.222, 62.771, 0.37 ) }
    dend_53 { pt3dadd( -7.97402, -120.977, 72.4866, 0.37 ) }
    dend_53 { pt3dadd( -4.48604, -130.2, 80.5716, 0.37 ) }
    dend_53 { pt3dadd( -2.09328, -140.073, 88.3161, 0.37 ) }
    dend_53 { pt3dadd( -1.24051, -150.573, 95.5805, 0.37 ) }
    dend_53 { pt3dadd( -2.15147, -160.901, 103.066, 0.37 ) }
    dend_53 { pt3dadd( -2.51771, -169.754, 112.216, 0.37 ) }
    dend_53 { pt3dadd( -4.62409, -179.457, 120.237, 0.37 ) }
    dend_53 { pt3dadd( -8.35459, -189.681, 126.936, 0.37 ) }
    dend_53 { pt3dadd( -11.9589, -200.565, 132.638, 0.37 ) }
    dend_53 { pt3dadd( -13.2909, -211.065, 139.826, 0.37 ) }
    dend_53 { pt3dadd( -12.7194, -221.108, 147.708, 0.37 ) }
    dend_53 { pt3dadd( -14.9943, -230.132, 156.408, 0.37 ) }
    dend_53 { pt3dadd( -18.7317, -238.311, 165.392, 0.37 ) }
    dend_53 { pt3dadd( -23.1597, -246.064, 174.419, 0.37 ) }
    dend_53 { pt3dadd( -26.3265, -254.907, 183.016, 0.37 ) }
    dend_53 { pt3dadd( -31.0301, -261.85, 192.518, 0.37 ) }
    dend_53 { pt3dadd( -34.7701, -269.651, 201.815, 0.37 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 88/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -12.8145, -74.2764, 15.2017, 1.03 ) }
    dend_52 { pt3dadd( -14.7893, -75.2535, 16.5123, 1.03 ) }
    dend_52 { pt3dadd( -16.1736, -76.0035, 17.546, 1.03 ) }
    dend_52 { pt3dadd( -17.5222, -76.8249, 18.7257, 1.03 ) }
    dend_52 { pt3dadd( -18.5519, -77.5354, 19.7185, 0.96 ) }
    dend_52 { pt3dadd( -19.2294, -78.073, 20.4187, 0.96 ) }
    dend_52 { pt3dadd( -20.0113, -78.8126, 21.3024, 0.96 ) }
    dend_52 { pt3dadd( -20.7147, -79.672, 22.1816, 0.66 ) }
    dend_52 { pt3dadd( -21.74, -81.337, 23.7042, 0.66 ) }
    dend_52 { pt3dadd( -22.1876, -82.2496, 24.5211, 0.66 ) }
    dend_52 { pt3dadd( -22.646, -83.2267, 25.424, 0.66 ) }
    dend_52 { pt3dadd( -23.2817, -84.4738, 26.5275, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_52 { pt3dadd( -23.6858, -85.2331, 27.1347, 0.66 ) }
    dend_52 { pt3dadd( -24.0679, -85.921, 27.6474, 0.66 ) }
    dend_52 { pt3dadd( -24.5945, -86.8108, 28.2939, 0.37 ) }
    dend_52 { pt3dadd( -25.2467, -87.718, 29.0089, 0.37 ) }
    dend_52 { pt3dadd( -25.9898, -88.5155, 29.7413, 0.52 ) }
    dend_52 { pt3dadd( -26.8665, -89.2732, 30.538, 0.52 ) }
    dend_52 { pt3dadd( -27.8327, -90.0649, 31.4387, 0.37 ) }
    dend_52 { pt3dadd( -28.3304, -90.4908, 31.9507, 0.37 ) }
    dend_52 { pt3dadd( -28.7706, -90.9075, 32.4282, 0.37 ) }
    dend_52 { pt3dadd( -29.2559, -91.3972, 32.9991, 0.37 ) }
    dend_52 { pt3dadd( -29.4654, -91.5859, 33.2558, 0.37 ) }
    dend_52 { pt3dadd( -29.9446, -91.8932, 33.698, 0.37 ) }
    dend_52 { pt3dadd( -30.4519, -92.1559, 34.1069, 0.37 ) }
    dend_52 { pt3dadd( -34.289, -97.3112, 40.4713, 0.37 ) }
    dend_52 { pt3dadd( -37.9047, -102.279, 47.101, 0.37 ) }
    dend_52 { pt3dadd( -41.443, -108.697, 52.4689, 0.37 ) }
    dend_52 { pt3dadd( -43.8553, -116.442, 56.6645, 0.37 ) }
    dend_52 { pt3dadd( -46.2096, -124.836, 59.4746, 0.37 ) }
    dend_52 { pt3dadd( -47.2955, -133.595, 61.9812, 0.37 ) }
    dend_52 { pt3dadd( -48.9545, -142.165, 64.7788, 0.37 ) }
    dend_52 { pt3dadd( -50.3234, -150.97, 66.9736, 0.37 ) }
    dend_52 { pt3dadd( -50.1163, -160.007, 68.6037, 0.37 ) }
    dend_52 { pt3dadd( -49.4595, -168.9, 70.7804, 0.37 ) }
    dend_52 { pt3dadd( -48.8982, -177.318, 74.3425, 0.37 ) }
    dend_52 { pt3dadd( -48.9367, -185.334, 78.7366, 0.37 ) }
    dend_52 { pt3dadd( -48.1491, -192.672, 84.0839, 0.37 ) }
    dend_52 { pt3dadd( -46.3295, -199.246, 90.0837, 0.37 ) }
    dend_52 { pt3dadd( -43.6019, -204.607, 96.8402, 0.37 ) }
    dend_52 { pt3dadd( -41.8351, -208.291, 104.865, 0.37 ) }
    dend_52 { pt3dadd( -38.6738, -211.496, 112.654, 0.37 ) }
    dend_52 { pt3dadd( -35.5625, -214.981, 120.348, 0.37 ) }
    dend_52 { pt3dadd( -32.4913, -219.789, 127.348, 0.37 ) }
    dend_52 { pt3dadd( -28.9943, -225.334, 133.587, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 33/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -16.603, -63.2035, -2.29549, 1.18 ) }
    dend_42 { pt3dadd( -16.8539, -64.2453, -3.55493, 1.18 ) }
    dend_42 { pt3dadd( -17.0735, -65.9739, -5.66369, 1.18 ) }
    dend_42 { pt3dadd( -17.0559, -67.4086, -7.12689, 1.4 ) }
    dend_42 { pt3dadd( -17.0091, -68.4871, -8.10873, 1.69 ) }
    dend_42 { pt3dadd( -16.9879, -69.3811, -8.91066, 1.69 ) }
    dend_42 { pt3dadd( -16.9935, -71.0637, -10.3641, 1.69 ) }
    dend_42 { pt3dadd( -16.9925, -71.9121, -11.0722, 1.69 ) }
    dend_42 { pt3dadd( -16.9638, -74.3714, -12.8355, 1.4 ) }
    dend_42 { pt3dadd( -16.9529, -75.4023, -13.5403, 1.4 ) }
    dend_42 { pt3dadd( -16.9712, -77.2807, -14.823, 1.4 ) }
    dend_42 { pt3dadd( -17.0783, -79.1378, -16.0872, 1.4 ) }
    dend_42 { pt3dadd( -17.2858, -81.0733, -17.4606, 1.4 ) }
    dend_42 { pt3dadd( -17.5097, -82.7352, -18.6845, 1.4 ) }
    dend_42 { pt3dadd( -17.7942, -84.5978, -20.1577, 1.55 ) }
    dend_42 { pt3dadd( -17.9663, -86.0239, -21.2747, 1.55 ) }
    dend_42 { pt3dadd( -18.1649, -88.2177, -22.9273, 1.55 ) }
    dend_42 { pt3dadd( -18.3467, -90.1637, -24.4831, 1.4 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 51/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -16.603, -63.2035, -2.29549, 0.88 ) }
    dend_41 { pt3dadd( -17.5907, -63.9954, -3.17166, 0.88 ) }
    dend_41 { pt3dadd( -18.1048, -64.3971, -3.62911, 0.88 ) }
    dend_41 { pt3dadd( -18.7223, -64.8679, -4.18021, 0.66 ) }
    dend_41 { pt3dadd( -19.8575, -65.6969, -5.19939, 0.66 ) }
    dend_41 { pt3dadd( -20.8233, -66.3742, -6.07173, 0.66 ) }
    dend_41 { pt3dadd( -21.5308, -66.862, -6.71112, 0.81 ) }
    dend_41 { pt3dadd( -22.5224, -67.5802, -7.60884, 0.81 ) }
    dend_41 { pt3dadd( -23.0382, -68.0043, -8.05603, 0.81 ) }
    dend_41 { pt3dadd( -23.9659, -68.8629, -8.81799, 0.59 ) }
    dend_41 { pt3dadd( -24.4417, -69.3216, -9.16451, 0.59 ) }
    dend_41 { pt3dadd( -25.422, -70.2543, -9.80877, 0.59 ) }
    dend_41 { pt3dadd( -26.3212, -71.1162, -10.3393, 0.59 ) }
    dend_41 { pt3dadd( -27.2363, -72.0302, -10.8166, 0.59 ) }
    dend_41 { pt3dadd( -28.0665, -72.8964, -11.2061, 0.59 ) }
    dend_41 { pt3dadd( -29.1264, -74.0759, -11.6464, 0.96 ) }
    dend_41 { pt3dadd( -29.7538, -74.773, -11.8798, 0.96 ) }
    dend_41 { pt3dadd( -29.9873, -75.0082, -11.9621, 0.96 ) }
    dend_41 { pt3dadd( -30.7454, -75.6553, -12.2418, 0.29 ) }
    dend_41 { pt3dadd( -31.3912, -76.1605, -12.4802, 0.29 ) }
    dend_41 { pt3dadd( -32.2928, -76.9192, -12.8075, 0.29 ) }
    dend_41 { pt3dadd( -32.6681, -77.291, -12.9666, 0.29 ) }
    dend_41 { pt3dadd( -33.6036, -78.3286, -13.4453, 0.29 ) }
    dend_41 { pt3dadd( -33.9751, -78.7419, -13.6815, 0.29 ) }
    dend_41 { pt3dadd( -34.2275, -79.0021, -13.8789, 0.29 ) }
    dend_41 { pt3dadd( -35.0431, -79.907, -14.6258, 0.29 ) }
    dend_41 { pt3dadd( -35.6245, -80.6315, -15.2488, 0.29 ) }
    dend_41 { pt3dadd( -36.2024, -81.4049, -15.9846, 0.29 ) }
    dend_41 { pt3dadd( -36.7846, -82.1567, -16.7849, 0.29 ) }
    dend_41 { pt3dadd( -37.3632, -82.7978, -17.5465, 0.29 ) }
    dend_41 { pt3dadd( -38.1371, -83.4807, -18.474, 0.29 ) }
    dend_41 { pt3dadd( -38.4556, -83.71, -18.8219, 0.29 ) }
    dend_41 { pt3dadd( -39.685, -84.5273, -20.0791, 0.29 ) }
    dend_41 { pt3dadd( -41.1884, -85.4599, -21.5732, 0.52 ) }
    dend_41 { pt3dadd( -42.7768, -86.3863, -23.1356, 0.52 ) }
    dend_41 { pt3dadd( -45.3007, -87.7481, -25.5139, 0.52 ) }
    dend_41 { pt3dadd( -48.7133, -89.3593, -28.4388, 0.52 ) }
    dend_41 { pt3dadd( -50.5928, -90.1724, -29.8746, 0.52 ) }
    dend_41 { pt3dadd( -52.1048, -90.7899, -30.8908, 0.37 ) }
    dend_41 { pt3dadd( -53.0237, -91.1247, -31.4319, 0.37 ) }
    dend_41 { pt3dadd( -54.141, -91.452, -31.9784, 0.37 ) }
    dend_41 { pt3dadd( -56.4745, -91.9744, -32.8709, 0.37 ) }
    dend_41 { pt3dadd( -59.5578, -92.5301, -33.7852, 0.37 ) }
    dend_41 { pt3dadd( -60.8007, -92.7438, -34.1154, 0.37 ) }
    dend_41 { pt3dadd( -62.0732, -92.9685, -34.4398, 0.37 ) }
    dend_41 { pt3dadd( -63.7068, -93.2614, -34.9105, 0.29 ) }
    dend_41 { pt3dadd( -64.3431, -93.3697, -35.1301, 0.29 ) }
    dend_41 { pt3dadd( -65.7861, -93.5942, -35.7173, 0.29 ) }
    dend_41 { pt3dadd( -67.0316, -93.755, -36.2573, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( -68.2248, -93.9395, -36.8243, 0.66 ) }
    dend_41 { pt3dadd( -69.3132, -94.1405, -37.4018, 0.66 ) }
    dend_41 { pt3dadd( -70.0678, -94.3082, -37.8668, 0.66 ) }
    dend_41 { pt3dadd( -70.5362, -94.4195, -38.1896, 0.66 ) }
    dend_41 { pt3dadd( -72.1368, -94.9063, -39.4023, 0.66 ) }
    dend_41 { pt3dadd( -73.9541, -95.6536, -40.9167, 0.81 ) }
    dend_41 { pt3dadd( -74.9082, -96.1743, -41.7779, 0.81 ) }
    dend_41 { pt3dadd( -75.9989, -96.8957, -42.8102, 0.66 ) }
    dend_41 { pt3dadd( -76.6644, -97.4027, -43.4571, 0.66 ) }
    dend_41 { pt3dadd( -77.6006, -98.1718, -44.4733, 0.66 ) }
    dend_41 { pt3dadd( -78.1645, -98.6576, -45.1955, 0.66 ) }
    dend_41 { pt3dadd( -78.938, -99.2854, -46.2606, 0.66 ) }
    dend_41 { pt3dadd( -80.1283, -100.217, -47.9632, 0.66 ) }
    dend_41 { pt3dadd( -81.0653, -100.904, -49.3251, 0.66 ) }
    dend_41 { pt3dadd( -83.4053, -102.463, -52.795, 0.66 ) }
    dend_41 { pt3dadd( -84.7104, -103.276, -54.913, 0.66 ) }
    dend_41 { pt3dadd( -85.5166, -103.774, -56.314, 0.74 ) }
    dend_41 { pt3dadd( -86.0889, -104.155, -57.4446, 0.74 ) }
    dend_41 { pt3dadd( -86.2661, -104.306, -57.895, 0.74 ) }
    dend_41 { pt3dadd( -86.5964, -104.688, -58.9277, 0.74 ) }
    dend_41 { pt3dadd( -86.8823, -105.336, -60.311, 0.74 ) }
    dend_41 { pt3dadd( -86.9648, -105.929, -61.4561, 0.74 ) }
    dend_41 { pt3dadd( -86.8179, -106.852, -63.2817, 0.74 ) }
    dend_41 { pt3dadd( -86.542, -107.611, -64.8873, 0.81 ) }
    dend_41 { pt3dadd( -86.2892, -108.033, -65.8238, 0.81 ) }
    dend_41 { pt3dadd( -85.8129, -108.555, -67.1262, 0.88 ) }
    dend_41 { pt3dadd( -85.1842, -109.015, -68.5649, 0.88 ) }
    dend_41 { pt3dadd( -84.3773, -109.342, -70.1061, 0.88 ) }
    dend_41 { pt3dadd( -84.035, -109.388, -70.6701, 0.88 ) }
    dend_41 { pt3dadd( -83.2288, -109.36, -71.8842, 0.74 ) }
    dend_41 { pt3dadd( -82.35, -109.248, -73.108, 0.74 ) }
    dend_41 { pt3dadd( -81.5659, -109.107, -74.1395, 0.74 ) }
    dend_41 { pt3dadd( -81.0314, -108.978, -74.8485, 0.74 ) }
    dend_41 { pt3dadd( -80.1323, -108.749, -76.094, 0.52 ) }
    dend_41 { pt3dadd( -79.8248, -108.687, -76.5301, 0.52 ) }
    dend_41 { pt3dadd( -78.9252, -108.597, -77.7719, 0.52 ) }
    dend_41 { pt3dadd( -77.5888, -108.639, -79.532, 0.52 ) }
    dend_41 { pt3dadd( -76.9395, -108.724, -80.3645, 0.52 ) }
    dend_41 { pt3dadd( -76.2494, -108.855, -81.2418, 0.52 ) }
    dend_41 { pt3dadd( -75.7827, -108.965, -81.8349, 0.52 ) }
    dend_41 { pt3dadd( -74.4056, -109.243, -83.4741, 0.52 ) }
    dend_41 { pt3dadd( -73.9495, -109.31, -83.9728, 0.52 ) }
    dend_41 { pt3dadd( -73.6538, -109.336, -84.2557, 0.52 ) }
    dend_41 { pt3dadd( -73.1545, -109.363, -84.6929, 0.29 ) }
    dend_41 { pt3dadd( -72.7579, -109.371, -85.0418, 0.29 ) }
    dend_41 { pt3dadd( -71.992, -109.376, -85.711, 0.29 ) }
    dend_41 { pt3dadd( -71.5004, -109.392, -86.1309, 0.29 ) }
    dend_41 { pt3dadd( -69.5814, -109.501, -87.7105, 0.29 ) }
    dend_41 { pt3dadd( -68.8266, -109.556, -88.2945, 0.29 ) }
    dend_41 { pt3dadd( -67.3847, -109.667, -89.316, 0.29 ) }
    dend_41 { pt3dadd( -66.4308, -109.71, -89.9148, 0.29 ) }
    dend_41 { pt3dadd( -65.1669, -109.72, -90.585, 0.29 ) }
    dend_41 { pt3dadd( -64.2746, -109.706, -90.9665, 0.29 ) }
    dend_41 { pt3dadd( -63.1033, -109.674, -91.3087, 0.29 ) }
    dend_41 { pt3dadd( -62.3669, -109.642, -91.4609, 0.15 ) }
    dend_41 { pt3dadd( -61.0889, -109.551, -91.6624, 0.15 ) }
    dend_41 { pt3dadd( -60.2659, -109.472, -91.78, 0.15 ) }
    dend_41 { pt3dadd( -59.3161, -109.372, -91.9198, 0.15 ) }
    dend_41 { pt3dadd( -58.0643, -109.261, -92.1608, 0.15 ) }
    dend_41 { pt3dadd( -57.0241, -109.203, -92.4153, 0.15 ) }
    dend_41 { pt3dadd( -56.0587, -109.197, -92.7172, 0.15 ) }
    dend_41 { pt3dadd( -55.3924, -109.211, -92.9514, 0.15 ) }
    dend_41 { pt3dadd( -53.7153, -109.237, -93.5801, 0.15 ) }
    dend_41 { pt3dadd( -51.8203, -109.23, -94.3166, 0.15 ) }
    dend_41 { pt3dadd( -51.0496, -109.227, -94.6426, 0.15 ) }
    dend_41 { pt3dadd( -49.956, -109.285, -95.1193, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 66/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 8.3558, 47.8179, 8.61894, 0.59 ) }
    dend_34 { pt3dadd( 9.67687, 48.6558, 8.3667, 0.59 ) }
    dend_34 { pt3dadd( 10.4317, 49.188, 8.24567, 0.52 ) }
    dend_34 { pt3dadd( 11.6849, 50.1184, 8.08511, 0.52 ) }
    dend_34 { pt3dadd( 13.4144, 51.4577, 7.93962, 0.44 ) }
    dend_34 { pt3dadd( 14.257, 52.1256, 7.88522, 0.44 ) }
    dend_34 { pt3dadd( 15.4672, 53.0688, 7.76473, 0.44 ) }
    dend_34 { pt3dadd( 17.2579, 54.4043, 7.57369, 0.44 ) }
    dend_34 { pt3dadd( 18.6842, 55.4894, 7.44429, 0.44 ) }
    dend_34 { pt3dadd( 20.7035, 57.0727, 7.30623, 0.44 ) }
    dend_34 { pt3dadd( 21.6336, 57.818, 7.26089, 0.44 ) }
    dend_34 { pt3dadd( 23.3551, 59.1714, 7.17352, 0.44 ) }
    dend_34 { pt3dadd( 24.7997, 60.2951, 7.13661, 0.59 ) }
    dend_34 { pt3dadd( 26.0589, 61.2365, 7.13332, 0.59 ) }
    dend_34 { pt3dadd( 29.7344, 63.9386, 7.22413, 0.74 ) }
    dend_34 { pt3dadd( 31.6099, 65.3032, 7.33126, 0.74 ) }
    dend_34 { pt3dadd( 33.8655, 66.9558, 7.54203, 0.74 ) }
    dend_34 { pt3dadd( 36.0175, 68.5357, 7.81424, 0.74 ) }
    dend_34 { pt3dadd( 37.5391, 69.6651, 7.96911, 0.44 ) }
    dend_34 { pt3dadd( 38.7688, 70.5736, 8.07258, 0.44 ) }
    dend_34 { pt3dadd( 40.5614, 71.8878, 8.20506, 0.29 ) }
    dend_34 { pt3dadd( 41.4519, 72.5248, 8.24954, 0.29 ) }
    dend_34 { pt3dadd( 44.2242, 74.4585, 8.27787, 0.29 ) }
    dend_34 { pt3dadd( 47.6166, 76.779, 8.24204, 0.15 ) }
    dend_34 { pt3dadd( 50.2555, 78.558, 8.19366, 0.15 ) }
    dend_34 { pt3dadd( 52.4854, 80.0055, 8.14318, 0.15 ) }
    dend_34 { pt3dadd( 54.6158, 81.3173, 8.15193, 0.15 ) }
    dend_34 { pt3dadd( 57.4286, 82.9873, 8.25928, 0.15 ) }
    dend_34 { pt3dadd( 58.9997, 83.9143, 8.39861, 0.07 ) }
    dend_34 { pt3dadd( 60.653, 84.8665, 8.66742, 0.07 ) }
    dend_34 { pt3dadd( 62.2081, 85.82, 9.02076, 0.07 ) }
    dend_34 { pt3dadd( 63.8624, 86.8991, 9.54199, 0.07 ) }
    dend_34 { pt3dadd( 64.3795, 87.2723, 9.74226, 0.07 ) }
    dend_34 { pt3dadd( 65.3659, 88.0667, 10.1872, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( 66.0219, 88.6445, 10.4077, 0.07 ) }
    dend_34 { pt3dadd( 66.5269, 89.1327, 10.5617, 0.07 ) }
    dend_34 { pt3dadd( 67.3986, 89.9579, 10.7592, 0.07 ) }
    dend_34 { pt3dadd( 69.0106, 91.2821, 11.0696, 0.07 ) }
    dend_34 { pt3dadd( 70.0515, 92.0032, 11.3284, 0.22 ) }
    dend_34 { pt3dadd( 71.1269, 92.6453, 11.6679, 0.22 ) }
    dend_34 { pt3dadd( 72.889, 93.6181, 12.4166, 0.22 ) }
    dend_34 { pt3dadd( 73.7364, 94.0312, 12.8872, 0.22 ) }
    dend_34 { pt3dadd( 75.1683, 94.6395, 13.8892, 0.44 ) }
    dend_34 { pt3dadd( 76.0779, 94.9377, 14.6194, 0.44 ) }
    dend_34 { pt3dadd( 76.6303, 95.0967, 15.0572, 0.44 ) }
    dend_34 { pt3dadd( 77.4204, 95.339, 15.6943, 0.44 ) }
    dend_34 { pt3dadd( 78.8117, 95.8704, 16.7284, 0.44 ) }
    dend_34 { pt3dadd( 79.9132, 96.4044, 17.445, 0.22 ) }
    dend_34 { pt3dadd( 81.0751, 97.088, 18.1106, 0.22 ) }
    dend_34 { pt3dadd( 82.6987, 98.1538, 18.9735, 0.37 ) }
    dend_34 { pt3dadd( 83.7807, 98.9411, 19.5183, 0.37 ) }
    dend_34 { pt3dadd( 85.2947, 100.239, 20.1806, 0.37 ) }
    dend_34 { pt3dadd( 86.8064, 101.81, 20.7547, 0.37 ) }
    dend_34 { pt3dadd( 87.7438, 102.998, 21.0711, 0.37 ) }
    dend_34 { pt3dadd( 88.5886, 104.275, 21.3613, 0.37 ) }
    dend_34 { pt3dadd( 89.2107, 105.344, 21.5779, 0.37 ) }
    dend_34 { pt3dadd( 90.7352, 108.061, 22.1429, 0.37 ) }
    dend_34 { pt3dadd( 91.4676, 109.424, 22.4553, 0.59 ) }
    dend_34 { pt3dadd( 92.2169, 110.795, 22.787, 0.74 ) }
    dend_34 { pt3dadd( 93.2131, 112.514, 23.2336, 0.74 ) }
    dend_34 { pt3dadd( 94.206, 114.115, 23.7235, 0.74 ) }
    dend_34 { pt3dadd( 95.17, 115.565, 24.2919, 0.74 ) }
    dend_34 { pt3dadd( 95.9843, 116.69, 24.8631, 0.74 ) }
    dend_34 { pt3dadd( 96.9862, 117.933, 25.5619, 0.74 ) }
    dend_34 { pt3dadd( 97.8944, 118.993, 26.191, 0.96 ) }
    dend_34 { pt3dadd( 98.4294, 119.613, 26.563, 0.96 ) }
    dend_34 { pt3dadd( 99.0747, 120.344, 26.9978, 0.96 ) }
    dend_34 { pt3dadd( 99.506, 120.828, 27.2752, 0.96 ) }
    dend_34 { pt3dadd( 100.857, 122.358, 28.1694, 1.18 ) }
    dend_34 { pt3dadd( 101.842, 123.577, 28.857, 1.18 ) }
    dend_34 { pt3dadd( 102.408, 124.34, 29.2417, 1.18 ) }
    dend_34 { pt3dadd( 103.533, 126.07, 30.009, 1.03 ) }
    dend_34 { pt3dadd( 104.34, 127.499, 30.6229, 1.03 ) }
    dend_34 { pt3dadd( 104.772, 128.405, 31.0037, 1.03 ) }
    dend_34 { pt3dadd( 105.197, 129.575, 31.4905, 1.03 ) }
    dend_34 { pt3dadd( 105.532, 130.742, 31.9432, 0.74 ) }
    dend_34 { pt3dadd( 105.769, 131.932, 32.4088, 0.59 ) }
    dend_34 { pt3dadd( 105.868, 133.042, 32.8653, 0.59 ) }
    dend_34 { pt3dadd( 105.912, 133.799, 33.1589, 0.59 ) }
    dend_34 { pt3dadd( 106.043, 134.896, 33.6249, 0.59 ) }
    dend_34 { pt3dadd( 115.05, 141.184, 36.3787, 0.59 ) }
    dend_34 { pt3dadd( 124.598, 146.958, 38.238, 0.59 ) }
    dend_34 { pt3dadd( 134.659, 151.452, 40.6729, 0.59 ) }
    dend_34 { pt3dadd( 144.801, 156.293, 41.7664, 0.59 ) }
    dend_34 { pt3dadd( 154.867, 160.128, 45.0908, 0.59 ) }
    dend_34 { pt3dadd( 164.82, 162.633, 49.7153, 0.59 ) }
    dend_34 { pt3dadd( 174.37, 166.949, 53.8937, 0.59 ) }
    dend_34 { pt3dadd( 184.426, 171.831, 55.4905, 0.59 ) }
    dend_34 { pt3dadd( 194.298, 176.587, 58.2095, 0.59 ) }
    dend_34 { pt3dadd( 204.189, 180.524, 61.9252, 0.59 ) }
    dend_34 { pt3dadd( 213.603, 185.176, 66.0688, 0.59 ) }
    dend_34 { pt3dadd( 223.233, 189.286, 70.2609, 0.59 ) }
    dend_34 { pt3dadd( 233.053, 193.962, 73.2823, 0.59 ) }
    dend_34 { pt3dadd( 242.48, 199.125, 76.7659, 0.59 ) }
    dend_34 { pt3dadd( 252.413, 202.864, 80.5627, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 61/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 8.3558, 47.8179, 8.61894, 0.44 ) }
    dend_33 { pt3dadd( 8.51455, 48.6225, 9.17083, 0.44 ) }
    dend_33 { pt3dadd( 8.71041, 49.3071, 9.74892, 0.44 ) }
    dend_33 { pt3dadd( 8.84843, 49.6487, 10.1227, 0.37 ) }
    dend_33 { pt3dadd( 9.09068, 50.132, 10.7687, 0.37 ) }
    dend_33 { pt3dadd( 9.25858, 50.3948, 11.212, 0.44 ) }
    dend_33 { pt3dadd( 9.39268, 50.5716, 11.5739, 0.74 ) }
    dend_33 { pt3dadd( 9.59284, 50.7255, 12.0847, 0.74 ) }
    dend_33 { pt3dadd( 9.84547, 50.8437, 12.7598, 0.74 ) }
    dend_33 { pt3dadd( 9.97021, 50.8982, 13.0924, 0.74 ) }
    dend_33 { pt3dadd( 10.2247, 51.021, 13.7983, 0.74 ) }
    dend_33 { pt3dadd( 10.4229, 51.1686, 14.395, 0.74 ) }
    dend_33 { pt3dadd( 10.5071, 51.2652, 14.726, 0.74 ) }
    dend_33 { pt3dadd( 10.5985, 51.4763, 15.3193, 0.74 ) }
    dend_33 { pt3dadd( 10.6358, 51.8037, 16.0466, 0.96 ) }
    dend_33 { pt3dadd( 10.6222, 52.0535, 16.513, 0.96 ) }
    dend_33 { pt3dadd( 10.5321, 52.5655, 17.3495, 0.66 ) }
    dend_33 { pt3dadd( 10.4601, 52.9671, 17.9348, 0.52 ) }
    dend_33 { pt3dadd( 10.4372, 53.1998, 18.2826, 0.52 ) }
    dend_33 { pt3dadd( 10.4325, 53.4615, 18.6992, 0.66 ) }
    dend_33 { pt3dadd( 10.4631, 53.7972, 19.2954, 0.66 ) }
    dend_33 { pt3dadd( 10.5047, 53.9186, 19.518, 0.66 ) }
    dend_33 { pt3dadd( 10.7004, 54.2134, 20.0441, 0.66 ) }
    dend_33 { pt3dadd( 11.1371, 54.71, 20.928, 0.66 ) }
    dend_33 { pt3dadd( 11.3811, 54.9679, 21.3751, 0.66 ) }
    dend_33 { pt3dadd( 11.6274, 55.2261, 21.8234, 0.81 ) }
    dend_33 { pt3dadd( 11.9856, 55.6108, 22.4845, 0.81 ) }
    dend_33 { pt3dadd( 12.3259, 56.0204, 23.1801, 0.66 ) }
    dend_33 { pt3dadd( 12.6617, 56.4967, 23.9754, 0.66 ) }
    dend_33 { pt3dadd( 12.8549, 56.8319, 24.5075, 0.66 ) }
    dend_33 { pt3dadd( 12.9472, 57.0103, 24.7843, 0.66 ) }
    dend_33 { pt3dadd( 13.0067, 57.1388, 24.9844, 0.66 ) }
    dend_33 { pt3dadd( 13.1663, 57.5528, 25.6351, 0.66 ) }
    dend_33 { pt3dadd( 13.2304, 57.718, 25.9141, 0.66 ) }
    dend_33 { pt3dadd( 13.409, 58.0458, 26.427, 0.66 ) }
    dend_33 { pt3dadd( 13.7664, 58.5283, 27.0652, 0.66 ) }
    dend_33 { pt3dadd( 13.9073, 58.7051, 27.2497, 0.66 ) }
    dend_33 { pt3dadd( 14.1451, 58.9849, 27.4809, 0.66 ) }
    dend_33 { pt3dadd( 14.6108, 59.4857, 27.8138, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_33 { pt3dadd( 15.111, 60.0142, 28.1297, 0.52 ) }
    dend_33 { pt3dadd( 15.6251, 60.5738, 28.4067, 0.52 ) }
    dend_33 { pt3dadd( 16.0036, 61.0007, 28.5922, 0.44 ) }
    dend_33 { pt3dadd( 16.4414, 61.5117, 28.7772, 0.44 ) }
    dend_33 { pt3dadd( 16.6643, 61.7845, 28.8478, 0.44 ) }
    dend_33 { pt3dadd( 19.2276, 64.9195, 33.3118, 0.44 ) }
    dend_33 { pt3dadd( 22.3636, 66.9467, 38.0126, 0.44 ) }
    dend_33 { pt3dadd( 25.918, 69.0361, 42.3774, 0.44 ) }
    dend_33 { pt3dadd( 29.2206, 70.7096, 47.0964, 0.44 ) }
    dend_33 { pt3dadd( 33.4113, 71.7052, 51.2591, 0.44 ) }
    dend_33 { pt3dadd( 37.8085, 71.8959, 55.3166, 0.44 ) }
    dend_33 { pt3dadd( 42.7623, 70.7431, 58.4841, 0.44 ) }
    dend_33 { pt3dadd( 47.2864, 69.0326, 62.0314, 0.44 ) }
    dend_33 { pt3dadd( 51.1603, 66.9159, 66.1005, 0.44 ) }
    dend_33 { pt3dadd( 54.8921, 64.7253, 70.2639, 0.44 ) }
    dend_33 { pt3dadd( 57.8979, 61.725, 74.5318, 0.44 ) }
    dend_33 { pt3dadd( 61.6731, 59.4631, 78.6193, 0.44 ) }
    dend_33 { pt3dadd( 65.0913, 57.7901, 83.2536, 0.44 ) }
    dend_33 { pt3dadd( 69.2496, 57.2129, 87.5225, 0.44 ) }
    dend_33 { pt3dadd( 73.4577, 57.7108, 91.7521, 0.44 ) }
    dend_33 { pt3dadd( 77.8172, 58.7866, 95.7177, 0.44 ) }
    dend_33 { pt3dadd( 81.7868, 60.6643, 99.807, 0.44 ) }
    dend_33 { pt3dadd( 86.0826, 62.5338, 103.555, 0.44 ) }
    dend_33 { pt3dadd( 90.6797, 65.1016, 106.456, 0.44 ) }
    dend_33 { pt3dadd( 95.263, 66.8045, 109.929, 0.44 ) }
    dend_33 { pt3dadd( 100.179, 68.7923, 112.739, 0.44 ) }
    dend_33 { pt3dadd( 105.048, 71.0236, 115.455, 0.44 ) }
    dend_33 { pt3dadd( 110.109, 72.054, 118.489, 0.44 ) }
    dend_33 { pt3dadd( 115.693, 73.1662, 120.348, 0.44 ) }
    dend_33 { pt3dadd( 121.17, 73.1499, 122.765, 0.44 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 30/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -3.49485, 52.9587, 19.5181, 0.74 ) }
    dend_31 { pt3dadd( -3.0445, 53.6297, 19.7117, 0.74 ) }
    dend_31 { pt3dadd( -2.27624, 54.8449, 20.0686, 0.74 ) }
    dend_31 { pt3dadd( -1.64207, 55.8828, 20.3365, 0.96 ) }
    dend_31 { pt3dadd( -1.24309, 56.518, 20.4718, 0.96 ) }
    dend_31 { pt3dadd( -0.942605, 56.9777, 20.5544, 0.96 ) }
    dend_31 { pt3dadd( -0.418425, 57.7257, 20.6613, 0.59 ) }
    dend_31 { pt3dadd( -0.143314, 58.083, 20.6934, 0.59 ) }
    dend_31 { pt3dadd( 0.199567, 58.4521, 20.6729, 0.37 ) }
    dend_31 { pt3dadd( 0.680316, 58.9648, 20.5864, 0.37 ) }
    dend_31 { pt3dadd( 0.870085, 59.1863, 20.5444, 0.37 ) }
    dend_31 { pt3dadd( 1.26572, 59.7, 20.4558, 0.37 ) }
    dend_31 { pt3dadd( 1.68914, 60.3335, 20.3925, 0.37 ) }
    dend_31 { pt3dadd( 2.01883, 60.9262, 20.3669, 0.37 ) }
    dend_31 { pt3dadd( 2.40313, 61.592, 20.3928, 0.37 ) }
    dend_31 { pt3dadd( 2.83982, 62.3524, 20.4458, 0.37 ) }
    dend_31 { pt3dadd( 3.0624, 62.7519, 20.4882, 0.37 ) }
    dend_31 { pt3dadd( 3.44518, 63.5478, 20.5972, 0.52 ) }
    dend_31 { pt3dadd( 4.00791, 64.9267, 20.8034, 0.66 ) }
    dend_31 { pt3dadd( 4.4701, 66.2953, 20.9884, 0.66 ) }
    dend_31 { pt3dadd( 4.71349, 67.1527, 21.089, 0.66 ) }
    dend_31 { pt3dadd( 4.96625, 68.2204, 21.1865, 0.52 ) }
    dend_31 { pt3dadd( 5.22677, 69.6549, 21.338, 0.74 ) }
    dend_31 { pt3dadd( 5.35683, 70.6464, 21.4562, 0.74 ) }
    dend_31 { pt3dadd( 5.57616, 72.6505, 21.7213, 0.74 ) }
    dend_31 { pt3dadd( 5.72805, 74.0227, 21.9009, 0.88 ) }
    dend_31 { pt3dadd( 6.14051, 76.7596, 22.3759, 0.88 ) }
    dend_31 { pt3dadd( 6.38853, 77.933, 22.6451, 0.88 ) }
    dend_31 { pt3dadd( 6.54356, 78.4649, 22.8043, 0.81 ) }
    dend_31 { pt3dadd( 6.8749, 79.383, 23.1454, 0.81 ) }
    dend_31 { pt3dadd( 7.33993, 80.5479, 23.6303, 0.81 ) }
    dend_31 { pt3dadd( 7.88847, 81.9525, 24.213, 0.81 ) }
    dend_31 { pt3dadd( 8.26112, 82.9563, 24.6109, 0.81 ) }
    dend_31 { pt3dadd( 8.61341, 83.954, 24.9619, 0.44 ) }
    dend_31 { pt3dadd( 8.84747, 84.7264, 25.2166, 0.44 ) }
    dend_31 { pt3dadd( 9.15937, 85.9919, 25.6112, 0.44 ) }
    dend_31 { pt3dadd( 9.35926, 86.8843, 25.8654, 0.44 ) }
    dend_31 { pt3dadd( 9.70372, 88.4953, 26.2436, 0.44 ) }
    dend_31 { pt3dadd( 10.0472, 90.238, 26.6485, 0.44 ) }
    dend_31 { pt3dadd( 10.167, 90.8971, 26.8212, 0.44 ) }
    dend_31 { pt3dadd( 10.3449, 91.8793, 27.1041, 0.44 ) }
    dend_31 { pt3dadd( 10.4637, 92.4615, 27.3039, 0.44 ) }
    dend_31 { pt3dadd( 10.5587, 92.8138, 27.4183, 0.44 ) }
    dend_31 { pt3dadd( 10.7321, 93.3898, 27.5782, 0.44 ) }
    dend_31 { pt3dadd( 10.8761, 93.844, 27.6841, 0.44 ) }
    dend_31 { pt3dadd( 11.149, 94.6037, 27.8656, 0.44 ) }
    dend_31 { pt3dadd( 11.5083, 95.5036, 28.0838, 0.44 ) }
    dend_31 { pt3dadd( 12.4041, 97.5493, 28.6323, 0.44 ) }
    dend_31 { pt3dadd( 12.5113, 97.7616, 28.694, 0.44 ) }
    dend_31 { pt3dadd( 15.5, 104.775, 31.0572, 0.44 ) }
    dend_31 { pt3dadd( 17.6059, 112.343, 32.6132, 0.44 ) }
    dend_31 { pt3dadd( 19.6245, 119.498, 35.5432, 0.44 ) }
    dend_31 { pt3dadd( 21.7141, 126.457, 38.8465, 0.44 ) }
    dend_31 { pt3dadd( 23.4557, 133.165, 42.789, 0.44 ) }
    dend_31 { pt3dadd( 24.5825, 140.131, 46.5287, 0.44 ) }
    dend_31 { pt3dadd( 26.2073, 147.233, 49.8091, 0.44 ) }
    dend_31 { pt3dadd( 26.8277, 153.715, 54.4031, 0.44 ) }
    dend_31 { pt3dadd( 26.8432, 159.921, 59.3892, 0.44 ) }
    dend_31 { pt3dadd( 25.9236, 166.209, 64.1946, 0.44 ) }
    dend_31 { pt3dadd( 24.0892, 172.43, 68.8242, 0.44 ) }
    dend_31 { pt3dadd( 21.6682, 178.391, 73.5136, 0.44 ) }
    dend_31 { pt3dadd( 19.612, 185.201, 77.1595, 0.44 ) }
    dend_31 { pt3dadd( 15.9806, 191.889, 79.6109, 0.44 ) }
    dend_31 { pt3dadd( 13.1022, 199.215, 81.1521, 0.44 ) }
    dend_31 { pt3dadd( 11.0624, 206.989, 81.0099, 0.44 ) }
    dend_31 { pt3dadd( 10.3163, 214.887, 79.7138, 0.44 ) }
    dend_31 { pt3dadd( 10.653, 222.36, 76.8379, 0.44 ) }
    dend_31 { pt3dadd( 10.5298, 230.201, 75.0945, 0.44 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 98/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.49485, 52.9587, 19.5181, 1.47 ) }
    dend_30 { pt3dadd( -4.71057, 54.8923, 21.2931, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_30 { pt3dadd( -5.24166, 55.7718, 22.1875, 1.03 ) }
    dend_30 { pt3dadd( -5.54058, 56.3974, 22.8744, 0.59 ) }
    dend_30 { pt3dadd( -5.63148, 56.6408, 23.1355, 0.59 ) }
    dend_30 { pt3dadd( -5.85455, 57.3123, 23.8369, 0.81 ) }
    dend_30 { pt3dadd( -6.09807, 58.0378, 24.5583, 0.81 ) }
    dend_30 { pt3dadd( -6.3259, 58.663, 25.1204, 0.96 ) }
    dend_30 { pt3dadd( -6.66648, 59.6966, 25.8958, 0.96 ) }
    dend_30 { pt3dadd( -6.88331, 60.3443, 26.3273, 0.59 ) }
    dend_30 { pt3dadd( -7.33028, 61.5772, 27.0336, 0.59 ) }
    dend_30 { pt3dadd( -7.65475, 62.3741, 27.4176, 0.74 ) }
    dend_30 { pt3dadd( -8.16257, 63.4418, 27.8658, 0.96 ) }
    dend_30 { pt3dadd( -9.03696, 65.0754, 28.4637, 1.11 ) }
    dend_30 { pt3dadd( -9.74141, 66.2933, 28.9002, 1.11 ) }
    dend_30 { pt3dadd( -10.083, 66.8424, 29.1188, 1.11 ) }
    dend_30 { pt3dadd( -10.6517, 67.7199, 29.4848, 0.66 ) }
    dend_30 { pt3dadd( -11.0449, 68.3164, 29.7487, 0.66 ) }
    dend_30 { pt3dadd( -11.5153, 69.0015, 30.0787, 0.66 ) }
    dend_30 { pt3dadd( -12.2557, 69.9396, 30.5568, 0.66 ) }
    dend_30 { pt3dadd( -13.0169, 70.8983, 31.0253, 0.66 ) }
    dend_30 { pt3dadd( -13.5669, 71.5814, 31.3709, 0.44 ) }
    dend_30 { pt3dadd( -14.3404, 72.5178, 31.849, 0.29 ) }
    dend_30 { pt3dadd( -15.3991, 73.7636, 32.4904, 0.37 ) }
    dend_30 { pt3dadd( -16.4158, 74.9046, 33.0667, 0.22 ) }
    dend_30 { pt3dadd( -22.5258, 80.4249, 37.4968, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 24/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 76.4103, 27.4006, -27.7825, 0.66 ) }
    dend_17 { pt3dadd( 77.8866, 27.4035, -27.9323, 0.66 ) }
    dend_17 { pt3dadd( 80.5889, 27.2409, -28.1661, 0.66 ) }
    dend_17 { pt3dadd( 82.777, 26.9953, -28.4669, 0.66 ) }
    dend_17 { pt3dadd( 85.3092, 26.6519, -28.9642, 0.88 ) }
    dend_17 { pt3dadd( 86.3697, 26.492, -29.2259, 0.88 ) }
    dend_17 { pt3dadd( 88.7498, 26.1223, -29.9027, 1.11 ) }
    dend_17 { pt3dadd( 90.4096, 25.8485, -30.4508, 1.11 ) }
    dend_17 { pt3dadd( 93.605, 25.2243, -31.5702, 1.11 ) }
    dend_17 { pt3dadd( 95.7156, 24.7674, -32.4455, 0.74 ) }
    dend_17 { pt3dadd( 97.1799, 24.4356, -33.1591, 0.74 ) }
    dend_17 { pt3dadd( 98.8572, 24.0915, -34.0699, 0.74 ) }
    dend_17 { pt3dadd( 100.749, 23.8124, -35.2596, 0.74 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 37/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 76.4103, 27.4006, -27.7825, 0.29 ) }
    dend_16 { pt3dadd( 76.7512, 28.8048, -27.5892, 0.29 ) }
    dend_16 { pt3dadd( 76.9419, 30.2797, -27.4906, 0.29 ) }
    dend_16 { pt3dadd( 77.0154, 33.6966, -27.4024, 0.29 ) }
    dend_16 { pt3dadd( 77.0393, 34.8064, -27.3737, 0.29 ) }
    dend_16 { pt3dadd( 77.0729, 36.3684, -27.3334, 0.29 ) }
    dend_16 { pt3dadd( 77.0807, 36.7319, -27.324, 0.29 ) }
    dend_16 { pt3dadd( 76.9199, 38.8393, -27.2867, 0.29 ) }
    dend_16 { pt3dadd( 76.6878, 39.6663, -27.4532, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 46/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 52.7585, 33.97, -35.9547, 0.66 ) }
    dend_14 { pt3dadd( 53.5901, 34.7438, -36.5441, 0.66 ) }
    dend_14 { pt3dadd( 55.3703, 36.3874, -37.7227, 0.66 ) }
    dend_14 { pt3dadd( 57.05, 37.8719, -38.7203, 0.81 ) }
    dend_14 { pt3dadd( 58.5318, 39.1965, -39.4862, 0.59 ) }
    dend_14 { pt3dadd( 59.4174, 39.9834, -39.8956, 0.59 ) }
    dend_14 { pt3dadd( 60.2251, 40.7, -40.2338, 0.37 ) }
    dend_14 { pt3dadd( 61.204, 41.606, -40.56, 0.37 ) }
    dend_14 { pt3dadd( 62.7109, 42.9837, -40.9137, 0.37 ) }
    dend_14 { pt3dadd( 64.3405, 44.3398, -41.2416, 0.37 ) }
    dend_14 { pt3dadd( 65.4744, 45.2135, -41.46, 0.37 ) }
    dend_14 { pt3dadd( 66.6148, 46.0251, -41.6911, 0.37 ) }
    dend_14 { pt3dadd( 67.7242, 46.8082, -41.9721, 0.37 ) }
    dend_14 { pt3dadd( 68.6478, 47.4831, -42.2537, 0.37 ) }
    dend_14 { pt3dadd( 70.7787, 49.0878, -43.0289, 0.37 ) }
    dend_14 { pt3dadd( 71.7429, 49.8251, -43.437, 0.37 ) }
    dend_14 { pt3dadd( 74.0021, 51.6224, -44.4931, 0.37 ) }
    dend_14 { pt3dadd( 75.6338, 52.9647, -45.3467, 0.37 ) }
    dend_14 { pt3dadd( 76.4161, 53.6332, -45.8047, 0.22 ) }
    dend_14 { pt3dadd( 77.4236, 54.5577, -46.4377, 0.22 ) }
    dend_14 { pt3dadd( 77.898, 55.0393, -46.7634, 0.22 ) }
    dend_14 { pt3dadd( 78.665, 55.8472, -47.3167, 0.22 ) }
    dend_14 { pt3dadd( 79.4271, 56.6496, -47.839, 0.22 ) }
    dend_14 { pt3dadd( 80.4959, 57.6772, -48.4913, 0.22 ) }
    dend_14 { pt3dadd( 81.7042, 58.7808, -49.2071, 0.22 ) }
    dend_14 { pt3dadd( 82.1296, 59.1377, -49.4223, 0.22 ) }
    dend_14 { pt3dadd( 82.7487, 59.6212, -49.6794, 0.22 ) }
    dend_14 { pt3dadd( 84.3997, 60.8397, -50.2396, 0.29 ) }
    dend_14 { pt3dadd( 85.5813, 61.647, -50.561, 0.29 ) }
    dend_14 { pt3dadd( 86.7901, 62.427, -50.8695, 0.29 ) }
    dend_14 { pt3dadd( 88.3932, 63.3818, -51.3058, 0.29 ) }
    dend_14 { pt3dadd( 89.8074, 64.1691, -51.7022, 0.07 ) }
    dend_14 { pt3dadd( 90.6696, 64.602, -51.9059, 0.07 ) }
    dend_14 { pt3dadd( 91.8175, 65.1376, -52.11, 0.07 ) }
    dend_14 { pt3dadd( 93.1937, 65.7285, -52.3311, 0.07 ) }
    dend_14 { pt3dadd( 95.7374, 66.7841, -52.7973, 0.07 ) }
    dend_14 { pt3dadd( 98.1399, 67.7955, -53.3205, 0.07 ) }
    dend_14 { pt3dadd( 101.266, 69.1499, -54.0496, 0.07 ) }
    dend_14 { pt3dadd( 103.803, 70.3247, -54.6581, 0.07 ) }
    dend_14 { pt3dadd( 105.126, 71.0023, -54.9749, 0.07 ) }
    dend_14 { pt3dadd( 106.305, 71.7058, -55.2531, 0.07 ) }
    dend_14 { pt3dadd( 107.839, 72.8365, -55.6507, 0.07 ) }
    dend_14 { pt3dadd( 109.936, 74.6388, -56.129, 0.07 ) }
    dend_14 { pt3dadd( 111.009, 75.6785, -56.3345, 0.07 ) }
    dend_14 { pt3dadd( 112.201, 76.8115, -56.4579, 0.07 ) }
    dend_14 { pt3dadd( 114.081, 78.4417, -56.3879, 0.07 ) }
    dend_14 { pt3dadd( 115.657, 79.6171, -56.1622, 0.07 ) }
    dend_14 { pt3dadd( 118.539, 81.4489, -55.5603, 0.07 ) }
    dend_14 { pt3dadd( 119.874, 82.1957, -55.2092, 0.07 ) }
    dend_14 { pt3dadd( 122.692, 83.575, -54.4027, 0.07 ) }
    dend_14 { pt3dadd( 125.293, 84.61, -53.5729, 0.07 ) }
    dend_14 { pt3dadd( 127.414, 85.3131, -52.8814, 0.07 ) }
    dend_14 { pt3dadd( 129.279, 85.8993, -52.2621, 0.07 ) }
    dend_14 { pt3dadd( 130.943, 86.4524, -51.7118, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_14 { pt3dadd( 132.116, 86.8967, -51.3062, 0.07 ) }
    dend_14 { pt3dadd( 136.43, 88.7109, -49.759, 0.22 ) }
    dend_14 { pt3dadd( 138.525, 89.6889, -49.0374, 0.22 ) }
    dend_14 { pt3dadd( 140.656, 90.7678, -48.3143, 0.22 ) }
    dend_14 { pt3dadd( 142.151, 91.5813, -47.8064, 0.22 ) }
    dend_14 { pt3dadd( 144.595, 93.001, -46.9614, 0.22 ) }
    dend_14 { pt3dadd( 146.512, 94.2216, -46.2826, 0.22 ) }
    dend_14 { pt3dadd( 148.204, 95.4005, -45.6734, 0.22 ) }
    dend_14 { pt3dadd( 151.019, 97.4187, -44.5989, 0.22 ) }
    dend_14 { pt3dadd( 152.606, 98.5513, -44.0056, 0.22 ) }
    dend_14 { pt3dadd( 154.325, 99.7534, -43.3919, 0.22 ) }
    dend_14 { pt3dadd( 155.708, 100.744, -42.8934, 0.22 ) }
    dend_14 { pt3dadd( 156.818, 101.637, -42.485, 0.22 ) }
    dend_14 { pt3dadd( 157.979, 102.576, -42.0771, 0.22 ) }
    dend_14 { pt3dadd( 159.198, 103.684, -41.7226, 0.22 ) }
    dend_14 { pt3dadd( 160.608, 105.085, -41.4335, 0.22 ) }
    dend_14 { pt3dadd( 161.589, 106.187, -41.3244, 0.22 ) }
    dend_14 { pt3dadd( 162.88, 107.817, -41.2783, 0.22 ) }
    dend_14 { pt3dadd( 164.323, 109.737, -41.3646, 0.22 ) }
    dend_14 { pt3dadd( 166.204, 112.268, -41.6724, 0.22 ) }
    dend_14 { pt3dadd( 166.99, 113.338, -41.8619, 0.22 ) }
    dend_14 { pt3dadd( 167.725, 114.335, -42.0792, 0.22 ) }
    dend_14 { pt3dadd( 169.683, 116.923, -42.7135, 0.22 ) }
    dend_14 { pt3dadd( 170.397, 117.845, -42.953, 0.22 ) }
    dend_14 { pt3dadd( 171.769, 119.589, -43.3971, 0.22 ) }
    dend_14 { pt3dadd( 173.758, 121.789, -43.907, 0.22 ) }
    dend_14 { pt3dadd( 174.588, 122.661, -44.0802, 0.22 ) }
    dend_14 { pt3dadd( 175.699, 123.752, -44.2658, 0.22 ) }
    dend_14 { pt3dadd( 176.369, 124.348, -44.3593, 0.22 ) }
    dend_14 { pt3dadd( 177.781, 125.481, -44.5053, 0.22 ) }
    dend_14 { pt3dadd( 179.681, 126.842, -44.6569, 0.22 ) }
    dend_14 { pt3dadd( 181.222, 127.849, -44.7974, 0.22 ) }
    dend_14 { pt3dadd( 182.894, 128.857, -44.9854, 0.22 ) }
    dend_14 { pt3dadd( 184.688, 129.825, -45.2434, 0.22 ) }
    dend_14 { pt3dadd( 185.817, 130.423, -45.4474, 0.22 ) }
    dend_14 { pt3dadd( 187.713, 131.438, -45.8518, 0.22 ) }
    dend_14 { pt3dadd( 188.578, 131.886, -46.091, 0.22 ) }
    dend_14 { pt3dadd( 190.185, 132.688, -46.6389, 0.22 ) }
    dend_14 { pt3dadd( 191.22, 133.19, -47.0467, 0.22 ) }
    dend_14 { pt3dadd( 193.186, 133.974, -47.8946, 0.22 ) }
    dend_14 { pt3dadd( 195.253, 134.552, -48.7872, 0.22 ) }
    dend_14 { pt3dadd( 196.963, 134.865, -49.5077, 0.22 ) }
    dend_14 { pt3dadd( 198.297, 135.02, -50.0185, 0.22 ) }
    dend_14 { pt3dadd( 199.646, 135.092, -50.4905, 0.22 ) }
    dend_14 { pt3dadd( 202.38, 135.075, -51.325, 0.22 ) }
    dend_14 { pt3dadd( 205.031, 134.882, -52.0955, 0.22 ) }
    dend_14 { pt3dadd( 206.451, 134.72, -52.4891, 0.22 ) }
    dend_14 { pt3dadd( 207.787, 134.578, -52.7951, 0.22 ) }
    dend_14 { pt3dadd( 209.003, 134.439, -53.0126, 0.22 ) }
    dend_14 { pt3dadd( 211.149, 134.237, -53.2843, 0.22 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 52.7585, 33.97, -35.9547, 0.44 ) }
    dend_11 { pt3dadd( 53.6128, 34.4846, -33.9104, 0.44 ) }
    dend_11 { pt3dadd( 54.6915, 35.11, -31.4809, 0.44 ) }
    dend_11 { pt3dadd( 56.4541, 35.9449, -27.8486, 0.44 ) }
    dend_11 { pt3dadd( 57.1495, 36.2558, -26.394, 0.44 ) }
    dend_11 { pt3dadd( 58.2589, 36.7809, -23.9519, 0.44 ) }
    dend_11 { pt3dadd( 58.7953, 37.043, -22.7115, 0.44 ) }
    dend_11 { pt3dadd( 59.2326, 37.2432, -21.6023, 0.44 ) }
    dend_11 { pt3dadd( 60.4803, 37.8338, -18.2598, 0.44 ) }
    dend_11 { pt3dadd( 61.9462, 38.5119, -13.9493, 0.07 ) }
    dend_11 { pt3dadd( 62.3241, 38.651, -12.655, 0.07 ) }
    dend_11 { pt3dadd( 62.6311, 38.7243, -11.3302, 0.07 ) }
    dend_11 { pt3dadd( 62.9096, 38.7776, -9.58445, 0.07 ) }
    dend_11 { pt3dadd( 63.0677, 38.795, -8.01944, 0.07 ) }
    dend_11 { pt3dadd( 63.204, 38.8065, -5.41855, 0.07 ) }
    dend_11 { pt3dadd( 63.2945, 38.7982, -3.38083, 0.07 ) }
    dend_11 { pt3dadd( 63.4116, 38.8668, -1.64191, 0.07 ) }
    dend_11 { pt3dadd( 63.6771, 39.4041, 1.88646, 0.07 ) }
    dend_11 { pt3dadd( 63.8446, 39.9126, 3.89779, 0.07 ) }
    dend_11 { pt3dadd( 64.1025, 40.8855, 6.61934, 0.07 ) }
    dend_11 { pt3dadd( 64.2705, 41.7933, 8.47416, 0.07 ) }
    dend_11 { pt3dadd( 64.5499, 43.1778, 10.9542, 0.07 ) }
    dend_11 { pt3dadd( 65.0423, 45.5903, 14.9925, 0.07 ) }
    dend_11 { pt3dadd( 65.1795, 46.2642, 16.0824, 0.07 ) }
    dend_11 { pt3dadd( 65.3652, 47.1876, 17.5803, 0.07 ) }
    dend_11 { pt3dadd( 65.5816, 49.0661, 20.549, 0.07 ) }
    dend_11 { pt3dadd( 65.7439, 50.7619, 23.3061, 0.07 ) }
    dend_11 { pt3dadd( 65.8209, 51.9151, 25.3941, 0.07 ) }
    dend_11 { pt3dadd( 65.9085, 53.2246, 28.1605, 0.07 ) }
    dend_11 { pt3dadd( 65.9517, 54.2167, 30.3601, 0.07 ) }
    dend_11 { pt3dadd( 65.9697, 55.5942, 33.6469, 0.07 ) }
    dend_11 { pt3dadd( 70.2801, 59.238, 44.3946, 0.07 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 82/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -53.4945, 38.5963, -29.8064, 0.07 ) }
    dend_5 { pt3dadd( -55.0129, 38.6335, -31.9256, 0.07 ) }
    dend_5 { pt3dadd( -56.115, 38.608, -33.4167, 0.29 ) }
    dend_5 { pt3dadd( -57.2244, 38.549, -34.8423, 0.29 ) }
    dend_5 { pt3dadd( -58.6938, 38.4262, -36.6581, 0.29 ) }
    dend_5 { pt3dadd( -59.8227, 38.2683, -38.0187, 0.29 ) }
    dend_5 { pt3dadd( -60.8867, 38.0656, -39.2554, 0.29 ) }
    dend_5 { pt3dadd( -62.7046, 37.6022, -41.1619, 0.29 ) }
    dend_5 { pt3dadd( -63.5651, 37.3359, -41.972, 0.29 ) }
    dend_5 { pt3dadd( -64.3611, 37.0768, -42.5965, 0.29 ) }
    dend_5 { pt3dadd( -65.3147, 36.7649, -43.2995, 0.29 ) }
    dend_5 { pt3dadd( -66.7077, 36.3476, -44.2445, 0.29 ) }
    dend_5 { pt3dadd( -68.1873, 35.9446, -45.1459, 0.29 ) }
    dend_5 { pt3dadd( -70.2613, 35.5048, -46.2965, 0.29 ) }
    dend_5 { pt3dadd( -72.8983, 35.1181, -47.7218, 0.29 ) }
    dend_5 { pt3dadd( -75.5427, 34.9836, -49.0934, 0.29 ) }
    dend_5 { pt3dadd( -77.1952, 35.0265, -49.9293, 0.29 ) }
    dend_5 { pt3dadd( -78.2291, 35.0878, -50.4414, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_5 { pt3dadd( -79.7918, 35.232, -51.1928, 0.29 ) }
    dend_5 { pt3dadd( -82.5331, 35.5142, -52.5025, 0.29 ) }
    dend_5 { pt3dadd( -86.5432, 35.9797, -54.334, 0.07 ) }
    dend_5 { pt3dadd( -88.2096, 36.135, -55.0288, 0.07 ) }
    dend_5 { pt3dadd( -89.7759, 36.2488, -55.6908, 0.07 ) }
    dend_5 { pt3dadd( -91.6593, 36.3432, -56.5607, 0.07 ) }
    dend_5 { pt3dadd( -94.0696, 36.377, -57.707, 0.07 ) }
    dend_5 { pt3dadd( -95.7886, 36.361, -58.5548, 0.07 ) }
    dend_5 { pt3dadd( -98.4133, 36.2588, -59.9915, 0.15 ) }
    dend_5 { pt3dadd( -99.3345, 36.2196, -60.576, 0.37 ) }
    dend_5 { pt3dadd( -101.926, 36.1054, -62.3793, 0.37 ) }
    dend_5 { pt3dadd( -103.696, 35.9757, -63.7948, 0.37 ) }
    dend_5 { pt3dadd( -105.299, 35.8496, -65.2299, 0.37 ) }
    dend_5 { pt3dadd( -107.355, 35.6556, -67.2221, 0.37 ) }
    dend_5 { pt3dadd( -110.005, 35.3773, -69.9608, 0.37 ) }
    dend_5 { pt3dadd( -111.506, 35.1858, -71.5288, 0.37 ) }
    dend_5 { pt3dadd( -113.456, 34.8763, -73.6346, 0.37 ) }
    dend_5 { pt3dadd( -114.744, 34.6265, -75.1746, 0.22 ) }
    dend_5 { pt3dadd( -115.679, 34.4428, -76.3843, 0.22 ) }
    dend_5 { pt3dadd( -116.388, 34.3149, -77.3511, 0.22 ) }
    dend_5 { pt3dadd( -116.92, 34.2292, -78.0907, 0.22 ) }
    dend_5 { pt3dadd( -117.77, 34.1108, -79.2816, 0.22 ) }
    dend_5 { pt3dadd( -118.986, 33.9474, -80.8889, 0.22 ) }
    dend_5 { pt3dadd( -120.192, 33.7604, -82.4895, 0.22 ) }
    dend_5 { pt3dadd( -120.904, 33.6498, -83.4631, 0.22 ) }
    dend_5 { pt3dadd( -121.513, 33.5625, -84.276, 0.22 ) }
    dend_5 { pt3dadd( -122.183, 33.4731, -85.1384, 0.22 ) }
    dend_5 { pt3dadd( -123.952, 33.2801, -87.449, 0.22 ) }
    dend_5 { pt3dadd( -124.975, 33.1882, -88.8875, 0.22 ) }
    dend_5 { pt3dadd( -126.293, 33.14, -90.8635, 0.22 ) }
    dend_5 { pt3dadd( -127.228, 33.1875, -92.3793, 0.22 ) }
    dend_5 { pt3dadd( -127.985, 33.3103, -93.579, 0.22 ) }
    dend_5 { pt3dadd( -129.554, 33.6388, -95.8037, 0.22 ) }
    dend_5 { pt3dadd( -130.614, 33.8336, -97.1572, 0.22 ) }
    dend_5 { pt3dadd( -131.807, 33.9832, -98.5624, 0.22 ) }
    dend_5 { pt3dadd( -134.008, 34.0762, -101.076, 0.22 ) }
    dend_5 { pt3dadd( -136.666, 33.9791, -104.146, 0.22 ) }
    dend_5 { pt3dadd( -138.191, 33.8157, -105.889, 0.22 ) }
    dend_5 { pt3dadd( -140.969, 33.3623, -109.023, 0.22 ) }
    dend_5 { pt3dadd( -142.191, 33.114, -110.456, 0.22 ) }
    dend_5 { pt3dadd( -144.371, 32.5586, -113.235, 0.22 ) }
    dend_5 { pt3dadd( -145.386, 32.2491, -114.708, 0.22 ) }
    dend_5 { pt3dadd( -146.317, 31.932, -116.382, 0.22 ) }
    dend_5 { pt3dadd( -147.124, 31.7104, -118.227, 0.22 ) }
    dend_5 { pt3dadd( -147.676, 31.6284, -119.824, 0.22 ) }
    dend_5 { pt3dadd( -148.028, 31.5993, -121.122, 0.22 ) }
    dend_5 { pt3dadd( -148.419, 31.5631, -122.997, 0.22 ) }
    dend_5 { pt3dadd( -148.573, 31.5159, -123.944, 0.22 ) }
    dend_5 { pt3dadd( -148.849, 31.2131, -126.515, 0.22 ) }
    dend_5 { pt3dadd( -148.975, 30.7967, -128.388, 0.22 ) }
    dend_5 { pt3dadd( -149.017, 30.4445, -129.544, 0.22 ) }
    dend_5 { pt3dadd( -149.007, 30.0811, -130.549, 0.22 ) }
    dend_5 { pt3dadd( -148.979, 29.8847, -131.023, 0.22 ) }
    dend_5 { pt3dadd( -148.795, 28.8784, -133.24, 0.22 ) }
    dend_5 { pt3dadd( -148.61, 27.9461, -135.152, 0.22 ) }
    dend_5 { pt3dadd( -148.508, 27.5115, -136.046, 0.22 ) }
    dend_5 { pt3dadd( -148.419, 27.0829, -136.986, 0.22 ) }
    dend_5 { pt3dadd( -148.321, 26.3685, -138.636, 0.22 ) }
    dend_5 { pt3dadd( -148.315, 26.1977, -139.052, 0.22 ) }
    dend_5 { pt3dadd( -148.345, 26.0036, -139.581, 0.22 ) }
    dend_5 { pt3dadd( -148.501, 25.6655, -140.593, 0.22 ) }
    dend_5 { pt3dadd( -148.888, 25.195, -142.042, 0.22 ) }
    dend_5 { pt3dadd( -149.506, 24.6708, -143.657, 0.22 ) }
    dend_5 { pt3dadd( -150.363, 24.1662, -145.321, 0.22 ) }
    dend_5 { pt3dadd( -151.795, 23.4667, -147.614, 0.22 ) }
    dend_5 { pt3dadd( -152.92, 23.0381, -149.074, 0.22 ) }
    dend_5 { pt3dadd( -154.402, 22.6466, -150.669, 0.22 ) }
    dend_5 { pt3dadd( -156.074, 22.3668, -152.191, 0.22 ) }
    dend_5 { pt3dadd( -158.002, 22.183, -153.704, 0.22 ) }
    dend_5 { pt3dadd( -159.113, 22.1283, -154.505, 0.22 ) }
    dend_5 { pt3dadd( -160.843, 22.097, -155.766, 0.22 ) }
    dend_5 { pt3dadd( -162.155, 22.0866, -156.89, 0.22 ) }
    dend_5 { pt3dadd( -163.245, 22.0472, -158.113, 0.22 ) }
    dend_5 { pt3dadd( -163.68, 22.0035, -158.741, 0.22 ) }
    dend_5 { pt3dadd( -164.661, 21.7205, -160.564, 0.22 ) }
    dend_5 { pt3dadd( -165.405, 21.3669, -162.137, 0.22 ) }
    dend_5 { pt3dadd( -165.973, 20.9715, -163.545, 0.22 ) }
    dend_5 { pt3dadd( -166.588, 20.4034, -165.195, 0.22 ) }
    dend_5 { pt3dadd( -167.025, 19.933, -166.413, 0.22 ) }
    dend_5 { pt3dadd( -167.937, 18.9375, -168.777, 0.22 ) }
    dend_5 { pt3dadd( -168.437, 18.421, -169.864, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 81/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -53.4945, 38.5963, -29.8064, 0.29 ) }
    dend_4 { pt3dadd( -53.4937, 40.1592, -29.662, 0.29 ) }
    dend_4 { pt3dadd( -53.41, 42.0048, -29.5215, 0.29 ) }
    dend_4 { pt3dadd( -53.3087, 42.9671, -29.447, 0.22 ) }
    dend_4 { pt3dadd( -53.1656, 44.1053, -29.4069, 0.22 ) }
    dend_4 { pt3dadd( -52.7075, 46.9745, -29.4039, 0.22 ) }
    dend_4 { pt3dadd( -52.1174, 50.1354, -29.4866, 0.22 ) }
    dend_4 { pt3dadd( -51.7437, 51.727, -29.5871, 0.22 ) }
    dend_4 { pt3dadd( -51.2284, 53.4949, -29.7728, 0.22 ) }
    dend_4 { pt3dadd( -50.5283, 55.5038, -30.0892, 0.22 ) }
    dend_4 { pt3dadd( -49.3509, 58.1321, -30.8649, 0.22 ) }
    dend_4 { pt3dadd( -48.8059, 59.1543, -31.3025, 0.22 ) }
    dend_4 { pt3dadd( -48.0989, 60.3234, -31.8866, 0.22 ) }
    dend_4 { pt3dadd( -47.3232, 61.5143, -32.5734, 0.22 ) }
    dend_4 { pt3dadd( -46.2936, 63.0068, -33.4878, 0.22 ) }
    dend_4 { pt3dadd( -43.5413, 66.7802, -35.782, 0.22 ) }
    dend_4 { pt3dadd( -42.7483, 67.8636, -36.4499, 0.22 ) }
    dend_4 { pt3dadd( -41.8965, 69.029, -37.1704, 0.22 ) }
    dend_4 { pt3dadd( -40.5754, 70.8516, -38.292, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_4 { pt3dadd( -39.6347, 72.1667, -39.1012, 0.22 ) }
    dend_4 { pt3dadd( -38.5741, 73.7075, -39.9208, 0.22 ) }
    dend_4 { pt3dadd( -37.9635, 74.6369, -40.2369, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 3/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -18.3467, -90.1637, -24.4831, 1.03 ) }
    dend_46 { pt3dadd( -18.4993, -92.9483, -24.71, 1.03 ) }
    dend_46 { pt3dadd( -18.4911, -94.9747, -24.9071, 1.03 ) }
    dend_46 { pt3dadd( -18.3674, -97.7068, -25.1886, 1.03 ) }
    dend_46 { pt3dadd( -18.1633, -101.446, -25.592, 1.03 ) }
    dend_46 { pt3dadd( -17.9765, -104.507, -25.9279, 1.03 ) }
    dend_46 { pt3dadd( -17.7276, -108.344, -26.3571, 1.03 ) }
    dend_46 { pt3dadd( -17.5689, -110.137, -26.5841, 1.03 ) }
    dend_46 { pt3dadd( -17.419, -111.915, -26.7898, 1.03 ) }
    dend_46 { pt3dadd( -17.3051, -113.797, -26.9797, 1.03 ) }
    dend_46 { pt3dadd( -17.2955, -115.301, -27.1116, 1.03 ) }
    dend_46 { pt3dadd( -17.3433, -116.503, -27.1991, 1.03 ) }
    dend_46 { pt3dadd( -17.5663, -120.113, -27.4197, 1.25 ) }
    dend_46 { pt3dadd( -17.675, -122.224, -27.54, 1.25 ) }
    dend_46 { pt3dadd( -17.7823, -124.552, -27.6673, 1.25 ) }
    dend_46 { pt3dadd( -17.8556, -126.699, -27.7761, 1.25 ) }
    dend_46 { pt3dadd( -17.9411, -129.121, -27.8928, 1.25 ) }
    dend_46 { pt3dadd( -18.0224, -131.68, -27.9345, 0.81 ) }
    dend_46 { pt3dadd( -18.047, -133.016, -27.9452, 0.81 ) }
    dend_46 { pt3dadd( -18.0836, -135.521, -27.9443, 0.74 ) }
    dend_46 { pt3dadd( -18.1193, -136.569, -27.9476, 0.74 ) }
    dend_46 { pt3dadd( -18.2326, -137.971, -27.9911, 1.18 ) }
    dend_46 { pt3dadd( -18.5997, -141.398, -28.2816, 1.18 ) }
    dend_46 { pt3dadd( -18.7475, -142.595, -28.4272, 1.18 ) }
    dend_46 { pt3dadd( -18.9105, -143.956, -28.6448, 1.25 ) }
    dend_46 { pt3dadd( -19.1988, -147.045, -29.246, 1.25 ) }
    dend_46 { pt3dadd( -19.5867, -151.018, -30.2682, 1.25 ) }
    dend_46 { pt3dadd( -19.8647, -153.439, -31.0822, 1.25 ) }
    dend_46 { pt3dadd( -20.0656, -154.803, -31.6612, 0.74 ) }
    dend_46 { pt3dadd( -20.3731, -156.566, -32.4419, 0.74 ) }
    dend_46 { pt3dadd( -20.5187, -157.272, -32.7896, 0.74 ) }
    dend_46 { pt3dadd( -21.1541, -159.82, -34.1907, 0.74 ) }
    dend_46 { pt3dadd( -21.475, -160.901, -34.8374, 0.74 ) }
    dend_46 { pt3dadd( -22.0114, -162.849, -35.8864, 0.52 ) }
    dend_46 { pt3dadd( -22.6787, -166.328, -37.6293, 0.52 ) }
    dend_46 { pt3dadd( -22.7398, -166.785, -37.8146, 0.52 ) }
    dend_46 { pt3dadd( -22.8269, -167.57, -38.0571, 0.81 ) }
    dend_46 { pt3dadd( -22.8883, -168.607, -38.2781, 1.18 ) }
    dend_46 { pt3dadd( -22.9608, -170.943, -38.694, 1.18 ) }
    dend_46 { pt3dadd( -22.9876, -172.833, -39.0399, 1.18 ) }
    dend_46 { pt3dadd( -23.0758, -175.028, -39.4666, 0.96 ) }
    dend_46 { pt3dadd( -23.2029, -176.631, -39.7467, 0.96 ) }
    dend_46 { pt3dadd( -23.4497, -178.723, -40.0787, 0.96 ) }
    dend_46 { pt3dadd( -23.6743, -180.261, -40.2986, 0.96 ) }
    dend_46 { pt3dadd( -23.9379, -181.875, -40.4762, 1.4 ) }
    dend_46 { pt3dadd( -24.3579, -184.356, -40.6716, 1.4 ) }
    dend_46 { pt3dadd( -25.0309, -187.786, -40.9206, 1.4 ) }
    dend_46 { pt3dadd( -25.4665, -189.651, -41.0451, 1.4 ) }
    dend_46 { pt3dadd( -26.0113, -191.728, -41.1679, 1.4 ) }
    dend_46 { pt3dadd( -26.7427, -194.328, -41.2853, 1.4 ) }
    dend_46 { pt3dadd( -27.3141, -196.289, -41.3211, 1.62 ) }
    dend_46 { pt3dadd( -28.044, -198.824, -41.3315, 1.62 ) }
    dend_46 { pt3dadd( -28.2555, -199.512, -41.3312, 1.62 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 56/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -18.3467, -90.1637, -24.4831, 0.66 ) }
    dend_43 { pt3dadd( -20.3082, -92.1398, -24.3564, 0.66 ) }
    dend_43 { pt3dadd( -21.5414, -93.3822, -24.2767, 0.37 ) }
    dend_43 { pt3dadd( -23.0111, -94.8629, -24.1817, 0.37 ) }
    dend_43 { pt3dadd( -24.1735, -96.0339, -24.1066, 0.37 ) }
    dend_43 { pt3dadd( -24.9543, -96.8205, -24.0562, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 62/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 100.749, 23.8124, -35.2596, 0.37 ) }
    dend_23 { pt3dadd( 104.029, 23.8921, -34.8882, 0.37 ) }
    dend_23 { pt3dadd( 106.46, 23.8838, -34.8367, 0.37 ) }
    dend_23 { pt3dadd( 108.629, 23.8536, -34.8898, 0.37 ) }
    dend_23 { pt3dadd( 111.66, 23.8426, -35.0733, 0.37 ) }
    dend_23 { pt3dadd( 116.6, 23.8246, -35.4504, 0.37 ) }
    dend_23 { pt3dadd( 119.17, 23.8472, -35.6731, 0.37 ) }
    dend_23 { pt3dadd( 123.263, 23.8674, -36.2674, 0.37 ) }
    dend_23 { pt3dadd( 124.589, 23.8889, -36.5215, 0.37 ) }
    dend_23 { pt3dadd( 126.673, 23.9426, -36.9874, 0.52 ) }
    dend_23 { pt3dadd( 129.744, 24.0446, -37.7225, 0.52 ) }
    dend_23 { pt3dadd( 131.571, 24.0562, -38.1049, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 74/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 100.749, 23.8124, -35.2596, 0.74 ) }
    dend_18 { pt3dadd( 102.07, 23.1321, -37.8463, 0.74 ) }
    dend_18 { pt3dadd( 103.474, 22.379, -40.6815, 0.52 ) }
    dend_18 { pt3dadd( 104.124, 21.9689, -42.0763, 0.52 ) }
    dend_18 { pt3dadd( 105.263, 21.1513, -44.7684, 0.52 ) }
    dend_18 { pt3dadd( 106.237, 20.3809, -47.3045, 0.52 ) }
    dend_18 { pt3dadd( 107.115, 19.7044, -49.662, 0.52 ) }
    dend_18 { pt3dadd( 107.538, 19.3816, -51.0296, 0.52 ) }
    dend_18 { pt3dadd( 107.973, 19.0291, -52.3771, 0.52 ) }
    dend_18 { pt3dadd( 108.588, 18.5919, -54.3755, 0.52 ) }
    dend_18 { pt3dadd( 109.224, 18.2196, -56.5212, 0.52 ) }
    dend_18 { pt3dadd( 109.84, 17.9182, -58.7383, 0.52 ) }
    dend_18 { pt3dadd( 110.622, 17.5821, -61.3628, 0.52 ) }
    dend_18 { pt3dadd( 111.54, 17.271, -64.2508, 0.22 ) }
    dend_18 { pt3dadd( 112.704, 16.8344, -67.7607, 0.22 ) }
    dend_18 { pt3dadd( 113.558, 16.4297, -70.2469, 0.22 ) }
    dend_18 { pt3dadd( 114.631, 15.7884, -73.3916, 0.22 ) }
    dend_18 { pt3dadd( 115.436, 15.1769, -75.776, 0.22 ) }
    dend_18 { pt3dadd( 115.981, 14.6755, -77.2081, 0.22 ) }
    dend_18 { pt3dadd( 116.851, 13.8507, -79.3882, 0.22 ) }
    dend_18 { pt3dadd( 117.484, 13.2224, -80.7928, 0.37 ) }
    dend_18 { pt3dadd( 117.856, 12.837, -81.5666, 0.37 ) }
    dend_18 { pt3dadd( 118.913, 11.7381, -83.5671, 0.37 ) }
    dend_18 { pt3dadd( 120.483, 10.148, -86.3183, 0.37 ) }
    dend_18 { pt3dadd( 122.749, 8.04205, -89.7804, 0.37 ) }
    dend_18 { pt3dadd( 124.207, 6.83392, -91.765, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_18 { pt3dadd( 124.976, 6.23539, -92.7046, 0.07 ) }
    dend_18 { pt3dadd( 126.638, 4.98681, -94.5802, 0.07 ) }
    dend_18 { pt3dadd( 128.856, 3.36434, -96.916, 0.07 ) }
    dend_18 { pt3dadd( 131.273, 1.58723, -99.3384, 0.07 ) }
    dend_18 { pt3dadd( 132.426, 0.678763, -100.386, 0.29 ) }
    dend_18 { pt3dadd( 134.362, -0.933997, -102.26, 0.29 ) }
    dend_18 { pt3dadd( 135.391, -1.82734, -103.325, 0.29 ) }
    dend_18 { pt3dadd( 136.359, -2.74682, -104.517, 0.29 ) }
    dend_18 { pt3dadd( 137.276, -3.79709, -106.132, 0.29 ) }
    dend_18 { pt3dadd( 138.081, -4.97749, -108.032, 0.29 ) }
    dend_18 { pt3dadd( 138.895, -6.53645, -110.474, 0.29 ) }
    dend_18 { pt3dadd( 139.32, -7.54845, -112.03, 0.29 ) }
    dend_18 { pt3dadd( 140.047, -9.32303, -114.725, 0.29 ) }
    dend_18 { pt3dadd( 140.98, -11.5856, -118.195, 0.29 ) }
    dend_18 { pt3dadd( 141.512, -12.7508, -120.068, 0.37 ) }
    dend_18 { pt3dadd( 142.076, -13.8454, -121.776, 0.37 ) }
    dend_18 { pt3dadd( 142.474, -14.5355, -122.72, 0.37 ) }
    dend_18 { pt3dadd( 142.924, -15.292, -123.755, 0.37 ) }
    dend_18 { pt3dadd( 143.356, -15.9302, -124.557, 0.37 ) }
    dend_18 { pt3dadd( 144.123, -16.9629, -125.893, 0.37 ) }
    dend_18 { pt3dadd( 144.876, -17.8674, -127.268, 0.37 ) }
    dend_18 { pt3dadd( 145.418, -18.4171, -128.224, 0.37 ) }
    dend_18 { pt3dadd( 146.558, -19.5135, -130.163, 0.37 ) }
    dend_18 { pt3dadd( 147.201, -20.1414, -131.279, 0.37 ) }
    dend_18 { pt3dadd( 147.994, -20.9413, -132.652, 0.37 ) }
    dend_18 { pt3dadd( 149.789, -22.9049, -135.835, 0.37 ) }
    dend_18 { pt3dadd( 150.959, -24.3412, -138.052, 0.37 ) }
    dend_18 { pt3dadd( 151.524, -25.07, -139.101, 0.37 ) }
    dend_18 { pt3dadd( 152.193, -25.8968, -140.236, 0.37 ) }
    dend_18 { pt3dadd( 153.183, -27.0766, -141.868, 0.37 ) }
    dend_18 { pt3dadd( 154.475, -28.5399, -143.858, 0.37 ) }
    dend_18 { pt3dadd( 155.059, -29.1921, -144.723, 0.37 ) }
    dend_18 { pt3dadd( 155.857, -30.02, -145.731, 0.37 ) }
    dend_18 { pt3dadd( 157.4, -31.5274, -147.487, 0.37 ) }
    dend_18 { pt3dadd( 158.21, -32.2811, -148.326, 0.37 ) }
    dend_18 { pt3dadd( 158.795, -32.8125, -148.913, 0.37 ) }
    dend_18 { pt3dadd( 160.07, -33.9439, -150.153, 0.37 ) }
    dend_18 { pt3dadd( 160.944, -34.7445, -151.014, 0.37 ) }
    dend_18 { pt3dadd( 162.207, -35.989, -152.15, 0.37 ) }
    dend_18 { pt3dadd( 165.091, -38.8247, -154.33, 0.37 ) }
    dend_18 { pt3dadd( 166.228, -39.8682, -155.035, 0.37 ) }
    dend_18 { pt3dadd( 167.223, -40.7644, -155.567, 0.37 ) }
    dend_18 { pt3dadd( 168.313, -41.7161, -156.074, 0.37 ) }
    dend_18 { pt3dadd( 171.45, -44.4062, -157.374, 0.37 ) }
    dend_18 { pt3dadd( 174.256, -46.773, -158.443, 0.37 ) }
    dend_18 { pt3dadd( 176.557, -48.7383, -159.236, 0.37 ) }
    dend_18 { pt3dadd( 178.701, -50.6292, -159.997, 0.37 ) }
    dend_18 { pt3dadd( 181.32, -53.0505, -160.998, 0.37 ) }
    dend_18 { pt3dadd( 183.024, -54.7136, -161.688, 0.37 ) }
    dend_18 { pt3dadd( 185.962, -57.7224, -162.997, 0.37 ) }
    dend_18 { pt3dadd( 187.338, -59.2402, -163.64, 0.37 ) }
    dend_18 { pt3dadd( 188.606, -60.6919, -164.272, 0.29 ) }
    dend_18 { pt3dadd( 189.362, -61.6216, -164.668, 0.29 ) }
    dend_18 { pt3dadd( 190.773, -63.4632, -165.42, 0.29 ) }
    dend_18 { pt3dadd( 192.357, -65.6241, -166.286, 0.29 ) }
    dend_18 { pt3dadd( 194.412, -68.6536, -167.45, 0.29 ) }
    dend_18 { pt3dadd( 195.904, -70.9497, -168.368, 0.29 ) }
    dend_18 { pt3dadd( 197.52, -73.4727, -169.393, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 58/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 70.2801, 59.238, 44.3946, 0.07 ) }
    dend_13 { pt3dadd( 71.968, 61.9779, 52.8353, 0.07 ) }
    dend_13 { pt3dadd( 73.4777, 63.1786, 61.6296, 0.07 ) }
    dend_13 { pt3dadd( 75.8339, 62.4539, 70.2679, 0.07 ) }
    dend_13 { pt3dadd( 78.3078, 60.5685, 78.687, 0.07 ) }
    dend_13 { pt3dadd( 79.5123, 58.092, 87.227, 0.07 ) }
    dend_13 { pt3dadd( 80.8358, 54.5862, 95.3833, 0.07 ) }
    dend_13 { pt3dadd( 83.2897, 49.9081, 102.647, 0.07 ) }
    dend_13 { pt3dadd( 85.7122, 43.974, 108.964, 0.07 ) }
    dend_13 { pt3dadd( 89.2705, 37.4929, 114.103, 0.07 ) }
    dend_13 { pt3dadd( 93.6005, 30.2784, 117.347, 0.07 ) }
    dend_13 { pt3dadd( 99.0071, 23.6647, 120.183, 0.07 ) }
    dend_13 { pt3dadd( 104.676, 17.0941, 122.568, 0.07 ) }
    dend_13 { pt3dadd( 109.926, 10.0328, 124.519, 0.07 ) }
    dend_13 { pt3dadd( 114.032, 2.71498, 127.832, 0.07 ) }
    dend_13 { pt3dadd( 118.049, -5.1309, 129.844, 0.07 ) }
    dend_13 { pt3dadd( 122.894, -12.5877, 131.387, 0.07 ) }
    dend_13 { pt3dadd( 127.496, -20.1075, 133.329, 0.07 ) }
    dend_13 { pt3dadd( 131.821, -27.9051, 134.812, 0.07 ) }
    dend_13 { pt3dadd( 134.83, -35.9178, 137.755, 0.07 ) }
    dend_13 { pt3dadd( 135.87, -44.4838, 140.623, 0.07 ) }
    dend_13 { pt3dadd( 137.316, -53.1282, 143.044, 0.07 ) }
    dend_13 { pt3dadd( 138.94, -62.0131, 144.207, 0.07 ) }
    dend_13 { pt3dadd( 141.064, -70.8075, 145.166, 0.07 ) }
    dend_13 { pt3dadd( 142.086, -79.842, 145.931, 0.07 ) }
    dend_13 { pt3dadd( 144.976, -88.4058, 146.804, 0.07 ) }
    dend_13 { pt3dadd( 148.193, -96.7939, 148.043, 0.07 ) }
    dend_13 { pt3dadd( 153.412, -103.918, 149.85, 0.07 ) }
    dend_13 { pt3dadd( 159.217, -110.774, 150.526, 0.07 ) }
    dend_13 { pt3dadd( 166.342, -116.24, 150.804, 0.07 ) }
    dend_13 { pt3dadd( 172.594, -122.467, 152.538, 0.07 ) }
    dend_13 { pt3dadd( 179.544, -127.744, 154.654, 0.07 ) }
    dend_13 { pt3dadd( 186.255, -132.557, 158.169, 0.07 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 91/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 70.2801, 59.238, 44.3946, 0.07 ) }
    dend_12 { pt3dadd( 71.1047, 63.1314, 52.4163, 0.07 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 93/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -28.2555, -199.512, -41.3312, 0.96 ) }
    dend_48 { pt3dadd( -29.866, -201.837, -41.495, 0.96 ) }
    dend_48 { pt3dadd( -30.9442, -203.824, -41.6414, 0.96 ) }
    dend_48 { pt3dadd( -31.6039, -205.27, -41.6747, 0.59 ) }
    dend_48 { pt3dadd( -32.3018, -206.963, -41.6718, 0.59 ) }
    dend_48 { pt3dadd( -32.7454, -208.091, -41.66, 0.59 ) }
    dend_48 { pt3dadd( -33.4475, -209.816, -41.6719, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_48 { pt3dadd( -34.4501, -212.457, -41.7042, 0.96 ) }
    dend_48 { pt3dadd( -35.2861, -214.747, -41.7436, 0.96 ) }
    dend_48 { pt3dadd( -35.7051, -215.921, -41.7703, 0.96 ) }
    dend_48 { pt3dadd( -36.2285, -217.372, -41.8834, 0.59 ) }
    dend_48 { pt3dadd( -36.8544, -218.803, -42.0979, 0.52 ) }
    dend_48 { pt3dadd( -37.0012, -219.075, -42.1673, 0.29 ) }
    dend_48 { pt3dadd( -37.4077, -219.824, -42.4376, 0.29 ) }
    dend_48 { pt3dadd( -37.5816, -220.232, -42.6057, 0.44 ) }
    dend_48 { pt3dadd( -38.1221, -222.007, -43.2494, 0.44 ) }
    dend_48 { pt3dadd( -38.4196, -223.389, -43.6806, 0.66 ) }
    dend_48 { pt3dadd( -38.8258, -225.981, -44.3586, 0.66 ) }
    dend_48 { pt3dadd( -39.1128, -228.301, -44.8923, 0.88 ) }
    dend_48 { pt3dadd( -39.2555, -230.016, -45.2392, 0.88 ) }
    dend_48 { pt3dadd( -39.361, -231.92, -45.4929, 0.88 ) }
    dend_48 { pt3dadd( -39.3841, -232.725, -45.5476, 0.88 ) }
    dend_48 { pt3dadd( -39.4026, -233.786, -45.6053, 0.88 ) }
    dend_48 { pt3dadd( -39.4713, -235.973, -45.6766, 0.66 ) }
    dend_48 { pt3dadd( -39.5342, -236.943, -45.6909, 0.66 ) }
    dend_48 { pt3dadd( -39.8144, -239.519, -45.7581, 0.88 ) }
    dend_48 { pt3dadd( -40.0559, -241.385, -45.8339, 0.88 ) }
    dend_48 { pt3dadd( -40.4312, -243.821, -45.9617, 0.88 ) }
    dend_48 { pt3dadd( -40.6729, -244.967, -46.072, 0.88 ) }
    dend_48 { pt3dadd( -41.0285, -246.223, -46.2455, 0.88 ) }
    dend_48 { pt3dadd( -41.6924, -247.984, -46.5609, 0.88 ) }
    dend_48 { pt3dadd( -42.1365, -248.951, -46.7958, 0.88 ) }
    dend_48 { pt3dadd( -42.7311, -250.117, -47.1177, 1.11 ) }
    dend_48 { pt3dadd( -43.8355, -252.269, -47.8472, 1.11 ) }
    dend_48 { pt3dadd( -44.3615, -253.359, -48.302, 0.44 ) }
    dend_48 { pt3dadd( -45.0272, -254.906, -49.0715, 0.44 ) }
    dend_48 { pt3dadd( -45.4092, -255.827, -49.5711, 0.66 ) }
    dend_48 { pt3dadd( -45.8652, -257.026, -50.2872, 0.66 ) }
    dend_48 { pt3dadd( -46.2157, -258.349, -51.1551, 0.66 ) }
    dend_48 { pt3dadd( -46.2481, -259.478, -51.9416, 0.66 ) }
    dend_48 { pt3dadd( -46.1129, -260.223, -52.5659, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 34/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -28.2555, -199.512, -41.3312, 0.29 ) }
    dend_47 { pt3dadd( -28.2959, -200.63, -41.9461, 0.29 ) }
    dend_47 { pt3dadd( -28.4718, -202.109, -42.7901, 0.29 ) }
    dend_47 { pt3dadd( -28.7407, -203.91, -43.8599, 0.07 ) }
    dend_47 { pt3dadd( -28.9787, -205.471, -44.876, 0.29 ) }
    dend_47 { pt3dadd( -29.1573, -206.921, -45.8963, 0.29 ) }
    dend_47 { pt3dadd( -29.2542, -208.007, -46.7274, 0.29 ) }
    dend_47 { pt3dadd( -29.3143, -208.762, -47.3965, 0.29 ) }
    dend_47 { pt3dadd( -29.363, -209.403, -48.0298, 0.29 ) }
    dend_47 { pt3dadd( -29.3891, -210.319, -49.1004, 0.29 ) }
    dend_47 { pt3dadd( -29.3652, -210.943, -49.975, 0.52 ) }
    dend_47 { pt3dadd( -29.3114, -211.512, -50.877, 0.52 ) }
    dend_47 { pt3dadd( -29.2879, -211.896, -51.6171, 0.52 ) }
    dend_47 { pt3dadd( -29.319, -212.204, -52.4102, 0.52 ) }
    dend_47 { pt3dadd( -29.4469, -212.49, -53.3588, 0.52 ) }
    dend_47 { pt3dadd( -29.7091, -212.794, -54.7851, 0.52 ) }
    dend_47 { pt3dadd( -29.8824, -212.908, -55.5992, 0.52 ) }
    dend_47 { pt3dadd( -30.2863, -213.022, -57.441, 0.52 ) }
    dend_47 { pt3dadd( -30.654, -212.996, -59.3346, 0.52 ) }
    dend_47 { pt3dadd( -30.7688, -212.95, -59.9145, 0.52 ) }
    dend_47 { pt3dadd( -31.2001, -212.665, -62.1176, 0.52 ) }
    dend_47 { pt3dadd( -31.3525, -212.542, -62.8629, 0.52 ) }
    dend_47 { pt3dadd( -31.4578, -212.45, -63.3489, 0.52 ) }
    dend_47 { pt3dadd( -31.8738, -212.078, -65.0189, 0.52 ) }
    dend_47 { pt3dadd( -32.213, -211.774, -66.2828, 0.52 ) }
    dend_47 { pt3dadd( -32.6709, -211.331, -67.9375, 0.52 ) }
    dend_47 { pt3dadd( -32.8209, -211.159, -68.5229, 0.52 ) }
    dend_47 { pt3dadd( -32.9328, -210.992, -69.1285, 0.52 ) }
    dend_47 { pt3dadd( -33.0566, -210.763, -70.0699, 0.52 ) }
    dend_47 { pt3dadd( -33.1191, -210.572, -71.01, 0.52 ) }
    dend_47 { pt3dadd( -33.1004, -210.458, -71.6836, 0.52 ) }
    dend_47 { pt3dadd( -32.9178, -210.175, -73.931, 0.52 ) }
    dend_47 { pt3dadd( -32.7035, -210.054, -75.5901, 0.52 ) }
    dend_47 { pt3dadd( -32.5274, -210.051, -76.6208, 0.52 ) }
    dend_47 { pt3dadd( -32.1653, -210.192, -78.3353, 0.52 ) }
    dend_47 { pt3dadd( -31.9227, -210.338, -79.2428, 0.52 ) }
    dend_47 { pt3dadd( -31.5901, -210.573, -80.2627, 0.52 ) }
    dend_47 { pt3dadd( -31.3916, -210.722, -80.7641, 0.52 ) }
    dend_47 { pt3dadd( -30.8745, -211.064, -81.9496, 0.52 ) }
    dend_47 { pt3dadd( -30.5495, -211.231, -82.7215, 0.52 ) }
    dend_47 { pt3dadd( -30.1675, -211.38, -83.7035, 0.52 ) }
    dend_47 { pt3dadd( -29.9426, -211.435, -84.3179, 0.52 ) }
    dend_47 { pt3dadd( -29.7962, -211.463, -84.6813, 0.52 ) }
    dend_47 { pt3dadd( -29.2391, -211.48, -86.1137, 0.52 ) }
    dend_47 { pt3dadd( -28.8289, -211.413, -87.194, 0.44 ) }
    dend_47 { pt3dadd( -28.756, -211.394, -87.4051, 0.15 ) }
    dend_47 { pt3dadd( -28.5458, -211.367, -88.139, 0.07 ) }
    dend_47 { pt3dadd( -28.144, -211.429, -89.4549, 0.22 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 82/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -24.9543, -96.8205, -24.0562, 0.07 ) }
    dend_45 { pt3dadd( -25.8222, -96.668, -24.1597, 0.07 ) }
    dend_45 { pt3dadd( -27.8801, -96.3749, -24.5669, 0.07 ) }
    dend_45 { pt3dadd( -29.2843, -96.2244, -24.8935, 0.07 ) }
    dend_45 { pt3dadd( -30.784, -96.184, -25.2826, 0.07 ) }
    dend_45 { pt3dadd( -32.3741, -96.2603, -25.6702, 0.07 ) }
    dend_45 { pt3dadd( -34.9108, -96.509, -26.2265, 0.07 ) }
    dend_45 { pt3dadd( -37.7475, -96.9599, -26.7472, 0.07 ) }
    dend_45 { pt3dadd( -41.4581, -97.6792, -27.4817, 0.07 ) }
    dend_45 { pt3dadd( -44.6555, -98.4055, -28.1308, 0.07 ) }
    dend_45 { pt3dadd( -47.6028, -99.1627, -28.6795, 0.07 ) }
    dend_45 { pt3dadd( -48.9197, -99.5589, -28.8658, 0.07 ) }
    dend_45 { pt3dadd( -50.6842, -100.237, -28.988, 0.07 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 95/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -24.9543, -96.8205, -24.0562, 0.07 ) }
    dend_44 { pt3dadd( -25.7416, -97.5439, -23.7267, 0.07 ) }
    dend_44 { pt3dadd( -26.5447, -98.3808, -23.4167, 0.07 ) }
    dend_44 { pt3dadd( -27.349, -99.2227, -23.0894, 0.07 ) }
    dend_44 { pt3dadd( -28.3165, -100.229, -22.7164, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_44 { pt3dadd( -30.5094, -102.532, -21.9858, 0.07 ) }
    dend_44 { pt3dadd( -31.45, -103.52, -21.6724, 0.07 ) }
    dend_44 { pt3dadd( -34.0931, -106.293, -20.8105, 0.15 ) }
    dend_44 { pt3dadd( -35.6997, -107.996, -20.3298, 0.15 ) }
    dend_44 { pt3dadd( -36.9521, -109.355, -19.972, 0.15 ) }
    dend_44 { pt3dadd( -38.7634, -111.378, -19.4512, 0.07 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 6/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 131.571, 24.0562, -38.1049, 0.44 ) }
    dend_25 { pt3dadd( 133.249, 24.3307, -38.9466, 0.44 ) }
    dend_25 { pt3dadd( 135.484, 24.6667, -39.7812, 0.44 ) }
    dend_25 { pt3dadd( 136.542, 24.7896, -40.1924, 0.44 ) }
    dend_25 { pt3dadd( 137.6, 24.8969, -40.6135, 0.44 ) }
    dend_25 { pt3dadd( 139.095, 24.9971, -41.1871, 0.44 ) }
    dend_25 { pt3dadd( 140.537, 25.0847, -41.6823, 0.44 ) }
    dend_25 { pt3dadd( 143.16, 25.2207, -42.448, 0.44 ) }
    dend_25 { pt3dadd( 145.643, 25.3381, -43.0122, 0.44 ) }
    dend_25 { pt3dadd( 147.447, 25.403, -43.3752, 0.44 ) }
    dend_25 { pt3dadd( 150.118, 25.4611, -43.8239, 0.44 ) }
    dend_25 { pt3dadd( 152.183, 25.4465, -44.1259, 0.44 ) }
    dend_25 { pt3dadd( 154.469, 25.4024, -44.4138, 0.44 ) }
    dend_25 { pt3dadd( 156.127, 25.3388, -44.5684, 0.44 ) }
    dend_25 { pt3dadd( 157.496, 25.2585, -44.6174, 0.44 ) }
    dend_25 { pt3dadd( 158.958, 25.128, -44.717, 0.44 ) }
    dend_25 { pt3dadd( 159.968, 24.9867, -44.8672, 0.44 ) }
    dend_25 { pt3dadd( 160.925, 24.8345, -45.1345, 0.44 ) }
    dend_25 { pt3dadd( 161.732, 24.7356, -45.4064, 0.44 ) }
    dend_25 { pt3dadd( 162.952, 24.6569, -45.8266, 0.44 ) }
    dend_25 { pt3dadd( 165.406, 24.6279, -46.6811, 0.44 ) }
    dend_25 { pt3dadd( 167.63, 24.7503, -47.4888, 0.44 ) }
    dend_25 { pt3dadd( 170.224, 25.0306, -48.4664, 0.44 ) }
    dend_25 { pt3dadd( 172.245, 25.3324, -49.2701, 0.44 ) }
    dend_25 { pt3dadd( 174.135, 25.6696, -50.0731, 0.44 ) }
    dend_25 { pt3dadd( 175.017, 25.8475, -50.456, 0.22 ) }
    dend_25 { pt3dadd( 176.205, 26.0905, -50.9616, 0.07 ) }
    dend_25 { pt3dadd( 176.98, 26.2608, -51.312, 0.07 ) }
    dend_25 { pt3dadd( 178.475, 26.5373, -51.9422, 0.07 ) }
    dend_25 { pt3dadd( 179.262, 26.6844, -52.2533, 0.07 ) }
    dend_25 { pt3dadd( 180.634, 27.0062, -52.6732, 0.22 ) }
    dend_25 { pt3dadd( 182.152, 27.4702, -52.9596, 0.22 ) }
    dend_25 { pt3dadd( 182.886, 27.7246, -52.9888, 0.22 ) }
    dend_25 { pt3dadd( 184.625, 28.3358, -53.012, 0.22 ) }
    dend_25 { pt3dadd( 186.424, 28.9031, -53.0745, 0.22 ) }
    dend_25 { pt3dadd( 187.861, 29.3604, -53.0436, 0.22 ) }
    dend_25 { pt3dadd( 188.893, 29.65, -53.0154, 0.22 ) }
    dend_25 { pt3dadd( 191.007, 30.1301, -53.0359, 0.22 ) }
    dend_25 { pt3dadd( 193.21, 30.5187, -53.1154, 0.22 ) }
    dend_25 { pt3dadd( 197.36, 31.1133, -53.274, 0.37 ) }
    dend_25 { pt3dadd( 200.944, 31.5094, -53.4435, 0.37 ) }
    dend_25 { pt3dadd( 203.707, 31.7136, -53.5466, 0.37 ) }
    dend_25 { pt3dadd( 205.353, 31.8021, -53.6013, 0.37 ) }
    dend_25 { pt3dadd( 206.83, 31.8759, -53.6588, 0.37 ) }
    dend_25 { pt3dadd( 209.474, 32.0093, -53.6761, 0.37 ) }
    dend_25 { pt3dadd( 211.302, 31.9712, -53.742, 0.37 ) }
    dend_25 { pt3dadd( 212.986, 31.7964, -53.9275, 0.22 ) }
    dend_25 { pt3dadd( 214.092, 31.6948, -54.055, 0.22 ) }
    dend_25 { pt3dadd( 215.001, 31.6292, -54.1836, 0.22 ) }
    dend_25 { pt3dadd( 215.592, 31.5905, -54.2997, 0.22 ) }
    dend_25 { pt3dadd( 217.945, 31.4957, -54.8746, 0.22 ) }
    dend_25 { pt3dadd( 220.932, 31.4302, -55.5733, 0.22 ) }
    dend_25 { pt3dadd( 222.642, 31.4216, -56.0324, 0.22 ) }
    dend_25 { pt3dadd( 225.193, 31.4229, -56.7333, 0.22 ) }
    dend_25 { pt3dadd( 226.039, 31.4371, -56.9738, 0.22 ) }
    dend_25 { pt3dadd( 227.317, 31.5105, -57.3604, 0.22 ) }
    dend_25 { pt3dadd( 238.808, 31.896, -58.269, 0.22 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 63/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 131.571, 24.0562, -38.1049, 0.52 ) }
    dend_24 { pt3dadd( 133.381, 24.5638, -38.0113, 0.52 ) }
    dend_24 { pt3dadd( 135.799, 25.3816, -37.9051, 0.52 ) }
    dend_24 { pt3dadd( 137.254, 25.9967, -37.86, 0.52 ) }
    dend_24 { pt3dadd( 141.04, 28.008, -37.6599, 0.52 ) }
    dend_24 { pt3dadd( 144.136, 29.8074, -37.2694, 0.52 ) }
    dend_24 { pt3dadd( 145.642, 30.7127, -37.0422, 0.52 ) }
    dend_24 { pt3dadd( 148.122, 32.2306, -36.6497, 0.52 ) }
    dend_24 { pt3dadd( 149.907, 33.3646, -36.3986, 0.52 ) }
    dend_24 { pt3dadd( 152.424, 34.9349, -35.9478, 0.52 ) }
    dend_24 { pt3dadd( 155.556, 36.9569, -35.1738, 0.52 ) }
    dend_24 { pt3dadd( 158.468, 38.7066, -34.425, 0.52 ) }
    dend_24 { pt3dadd( 159.381, 39.2306, -34.1922, 0.52 ) }
    dend_24 { pt3dadd( 160.717, 39.8528, -33.86, 0.52 ) }
    dend_24 { pt3dadd( 164.906, 41.5084, -32.7448, 0.52 ) }
    dend_24 { pt3dadd( 166.379, 42.0176, -32.3537, 0.29 ) }
    dend_24 { pt3dadd( 167.96, 42.5619, -31.8639, 0.29 ) }
    dend_24 { pt3dadd( 169.027, 42.9278, -31.3586, 0.29 ) }
    dend_24 { pt3dadd( 170.216, 43.3454, -30.6271, 0.29 ) }
    dend_24 { pt3dadd( 172.375, 44.088, -28.9772, 0.29 ) }
    dend_24 { pt3dadd( 174.029, 44.6362, -27.4259, 0.44 ) }
    dend_24 { pt3dadd( 175.401, 45.0387, -25.9591, 0.44 ) }
    dend_24 { pt3dadd( 177.106, 45.5381, -23.8881, 0.44 ) }
    dend_24 { pt3dadd( 178.324, 45.8673, -22.3137, 0.44 ) }
    dend_24 { pt3dadd( 179.175, 46.1049, -21.1478, 0.44 ) }
    dend_24 { pt3dadd( 180.266, 46.3555, -19.6303, 0.44 ) }
    dend_24 { pt3dadd( 182.2, 46.6938, -16.9752, 0.44 ) }
    dend_24 { pt3dadd( 182.82, 46.7887, -16.1982, 0.44 ) }
    dend_24 { pt3dadd( 183.805, 46.9686, -15.0574, 0.44 ) }
    dend_24 { pt3dadd( 184.828, 47.2245, -13.8978, 0.44 ) }
    dend_24 { pt3dadd( 185.597, 47.5229, -13.0255, 0.44 ) }
    dend_24 { pt3dadd( 186.749, 48.054, -11.8347, 0.44 ) }
    dend_24 { pt3dadd( 187.184, 48.2889, -11.3975, 0.44 ) }
    dend_24 { pt3dadd( 188.498, 49.0525, -10.0836, 0.44 ) }
    dend_24 { pt3dadd( 189.029, 49.4014, -9.56765, 0.44 ) }
    dend_24 { pt3dadd( 190.374, 50.3806, -8.32448, 0.37 ) }
    dend_24 { pt3dadd( 192.124, 51.7266, -6.89827, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_24 { pt3dadd( 193.791, 53.0014, -5.90754, 0.22 ) }
    dend_24 { pt3dadd( 194.583, 53.5751, -5.53796, 0.22 ) }
    dend_24 { pt3dadd( 195.633, 54.2948, -5.19212, 0.22 ) }
    dend_24 { pt3dadd( 196.389, 54.8238, -5.04341, 0.22 ) }
    dend_24 { pt3dadd( 197.635, 55.7836, -4.94985, 0.22 ) }
    dend_24 { pt3dadd( 199.855, 57.9029, -5.18814, 0.22 ) }
    dend_24 { pt3dadd( 200.536, 58.6211, -5.42251, 0.22 ) }
    dend_24 { pt3dadd( 201.776, 60.036, -6.11817, 0.22 ) }
    dend_24 { pt3dadd( 203.14, 61.6876, -7.23234, 0.22 ) }
    dend_24 { pt3dadd( 203.871, 62.6203, -8.08748, 0.22 ) }
    dend_24 { pt3dadd( 204.864, 63.9413, -9.74928, 0.22 ) }
    dend_24 { pt3dadd( 205.356, 64.5712, -10.8772, 0.22 ) }
    dend_24 { pt3dadd( 205.783, 65.0356, -11.9733, 0.22 ) }
    dend_24 { pt3dadd( 205.906, 65.139, -12.3185, 0.22 ) }
    dend_24 { pt3dadd( 206.277, 65.3164, -13.2721, 0.22 ) }
    dend_24 { pt3dadd( 206.728, 65.424, -14.4891, 0.22 ) }
    dend_24 { pt3dadd( 207.211, 65.4942, -15.7289, 0.22 ) }
    dend_24 { pt3dadd( 207.639, 65.5759, -16.8148, 0.22 ) }
    dend_24 { pt3dadd( 207.889, 65.643, -17.4428, 0.22 ) }
    dend_24 { pt3dadd( 208.098, 65.7244, -18.0086, 0.22 ) }
    dend_24 { pt3dadd( 208.814, 66.1256, -20.2971, 0.22 ) }
    dend_24 { pt3dadd( 209.069, 66.3458, -21.4075, 0.22 ) }
    dend_24 { pt3dadd( 209.251, 66.5719, -22.4934, 0.22 ) }
    dend_24 { pt3dadd( 209.377, 66.7566, -23.4699, 0.22 ) }
    dend_24 { pt3dadd( 209.515, 66.9446, -24.4825, 0.22 ) }
    dend_24 { pt3dadd( 210.104, 67.8259, -28.5396, 0.22 ) }
    dend_24 { pt3dadd( 210.32, 68.1594, -29.8871, 0.22 ) }
    dend_24 { pt3dadd( 210.558, 68.6205, -31.6361, 0.22 ) }
    dend_24 { pt3dadd( 210.81, 69.2278, -33.7182, 0.22 ) }
    dend_24 { pt3dadd( 210.932, 69.6196, -34.9319, 0.22 ) }
    dend_24 { pt3dadd( 211.11, 70.5009, -37.4305, 0.22 ) }
    dend_24 { pt3dadd( 211.124, 70.7625, -38.0918, 0.22 ) }
    dend_24 { pt3dadd( 211.181, 71.4611, -39.7719, 0.22 ) }
    dend_24 { pt3dadd( 211.19, 71.722, -40.3222, 0.22 ) }
    dend_24 { pt3dadd( 211.128, 72.1893, -41.1986, 0.22 ) }
    dend_24 { pt3dadd( 210.867, 72.7242, -42.3831, 0.22 ) }
    dend_24 { pt3dadd( 210.628, 72.925, -43.0438, 0.22 ) }
    dend_24 { pt3dadd( 221.073, 76.8491, -44.7196, 0.22 ) }
    dend_24 { pt3dadd( 231.662, 80.5602, -45.862, 0.22 ) }
    dend_24 { pt3dadd( 241.738, 85.6519, -45.2276, 0.22 ) }
    dend_24 { pt3dadd( 252.508, 88.8276, -44.3098, 0.22 ) }
    dend_24 { pt3dadd( 263.243, 90.8523, -41.6436, 0.22 ) }
    dend_24 { pt3dadd( 274.364, 91.3585, -40.1749, 0.22 ) }
    dend_24 { pt3dadd( 285.086, 92.1443, -36.9263, 0.22 ) }
    dend_24 { pt3dadd( 295.563, 93.7253, -33.1826, 0.22 ) }
    dend_24 { pt3dadd( 306.122, 93.8938, -29.3763, 0.22 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 46/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 197.52, -73.4727, -169.393, 0.29 ) }
    dend_20 { pt3dadd( 198.124, -74.0382, -170.134, 0.29 ) }
    dend_20 { pt3dadd( 199.294, -75.1357, -171.573, 0.29 ) }
    dend_20 { pt3dadd( 201.093, -76.8217, -173.784, 0.29 ) }
    dend_20 { pt3dadd( 202.842, -78.461, -175.933, 0.29 ) }
    dend_20 { pt3dadd( 204.286, -79.8151, -177.709, 0.29 ) }
    dend_20 { pt3dadd( 204.991, -80.475, -178.574, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 53/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 197.52, -73.4727, -169.393, 0.29 ) }
    dend_19 { pt3dadd( 198.566, -74.4331, -168.138, 0.29 ) }
    dend_19 { pt3dadd( 200.536, -76.2778, -165.758, 0.29 ) }
    dend_19 { pt3dadd( 202.421, -78.1451, -163.37, 0.29 ) }
    dend_19 { pt3dadd( 203.364, -79.2174, -162.238, 0.29 ) }
    dend_19 { pt3dadd( 204.511, -80.4263, -160.777, 0.29 ) }
    dend_19 { pt3dadd( 205.457, -81.367, -159.552, 0.29 ) }
    dend_19 { pt3dadd( 208.082, -83.8053, -156.117, 0.29 ) }
    dend_19 { pt3dadd( 209.464, -85.081, -154.26, 0.29 ) }
    dend_19 { pt3dadd( 211.617, -86.976, -151.348, 0.29 ) }
    dend_19 { pt3dadd( 216.812, -91.0845, -144.639, 0.29 ) }
    dend_19 { pt3dadd( 218.695, -92.4377, -142.304, 0.29 ) }
    dend_19 { pt3dadd( 220.259, -93.4663, -140.47, 0.29 ) }
    dend_19 { pt3dadd( 221.704, -94.3531, -138.927, 0.29 ) }
    dend_19 { pt3dadd( 223.123, -95.1889, -137.527, 0.29 ) }
    dend_19 { pt3dadd( 225.275, -96.3426, -135.471, 0.29 ) }
    dend_19 { pt3dadd( 226.383, -97.0414, -134.686, 0.29 ) }
    dend_19 { pt3dadd( 227.885, -98.0102, -133.755, 0.29 ) }
    dend_19 { pt3dadd( 229.35, -98.9893, -132.985, 0.29 ) }
    dend_19 { pt3dadd( 231.09, -100.154, -132.202, 0.29 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 73/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -46.1129, -260.223, -52.5659, 0.81 ) }
    dend_50 { pt3dadd( -46.125, -260.843, -53.8706, 0.81 ) }
    dend_50 { pt3dadd( -46.0561, -261.752, -55.6983, 0.81 ) }
    dend_50 { pt3dadd( -45.7804, -263.242, -58.4056, 0.81 ) }
    dend_50 { pt3dadd( -45.4394, -264.528, -60.4394, 0.59 ) }
    dend_50 { pt3dadd( -45.239, -265.187, -61.3678, 0.59 ) }
    dend_50 { pt3dadd( -44.9861, -266.019, -62.4359, 0.59 ) }
    dend_50 { pt3dadd( -44.5775, -267.507, -64.0968, 0.66 ) }
    dend_50 { pt3dadd( -44.2499, -268.752, -65.271, 0.66 ) }
    dend_50 { pt3dadd( -43.9311, -270.251, -66.5804, 0.66 ) }
    dend_50 { pt3dadd( -43.806, -271.065, -67.3446, 0.66 ) }
    dend_50 { pt3dadd( -43.7217, -271.877, -68.1814, 0.66 ) }
    dend_50 { pt3dadd( -43.6988, -273.674, -70.2679, 0.96 ) }
    dend_50 { pt3dadd( -43.7378, -274.563, -71.4725, 0.96 ) }
    dend_50 { pt3dadd( -43.8733, -275.746, -73.4751, 0.96 ) }
    dend_50 { pt3dadd( -43.9585, -276.462, -74.9719, 0.96 ) }
    dend_50 { pt3dadd( -44.0286, -276.919, -76.1594, 0.96 ) }
    dend_50 { pt3dadd( -44.0996, -277.327, -77.3644, 0.96 ) }
    dend_50 { pt3dadd( -44.145, -277.768, -78.6612, 0.96 ) }
    dend_50 { pt3dadd( -44.1949, -278.453, -80.4296, 0.96 ) }
    dend_50 { pt3dadd( -44.1815, -278.928, -81.4804, 0.96 ) }
    dend_50 { pt3dadd( -44.0728, -280.606, -84.9242, 0.81 ) }
    dend_50 { pt3dadd( -44.0275, -281.269, -86.3037, 0.66 ) }
    dend_50 { pt3dadd( -43.9481, -281.948, -87.6657, 0.66 ) }
    dend_50 { pt3dadd( -43.7806, -282.575, -88.9031, 0.37 ) }
    dend_50 { pt3dadd( -43.315, -283.493, -90.5586, 0.37 ) }
    dend_50 { pt3dadd( -43.0706, -283.814, -91.1198, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_50 { pt3dadd( -42.5006, -284.304, -92.0155, 0.37 ) }
    dend_50 { pt3dadd( -41.966, -284.681, -92.755, 0.44 ) }
    dend_50 { pt3dadd( -40.2481, -285.87, -94.9845, 0.44 ) }
    dend_50 { pt3dadd( -38.9187, -286.765, -96.5372, 0.44 ) }
    dend_50 { pt3dadd( -37.8726, -287.509, -97.6795, 0.44 ) }
    dend_50 { pt3dadd( -36.8244, -288.248, -98.6958, 0.44 ) }
    dend_50 { pt3dadd( -35.3494, -289.315, -100.085, 0.44 ) }
    dend_50 { pt3dadd( -33.5456, -290.649, -101.785, 0.22 ) }
    dend_50 { pt3dadd( -32.9534, -291.118, -102.347, 0.22 ) }
    dend_50 { pt3dadd( -31.0713, -292.696, -104.168, 0.22 ) }
    dend_50 { pt3dadd( -29.8193, -293.931, -105.419, 0.22 ) }
    dend_50 { pt3dadd( -28.2397, -295.868, -107.072, 0.22 ) }
    dend_50 { pt3dadd( -27.4181, -297.083, -107.998, 0.22 ) }
    dend_50 { pt3dadd( -26.9578, -298.037, -108.563, 0.22 ) }
    dend_50 { pt3dadd( -26.5435, -299.379, -109.136, 0.37 ) }
    dend_50 { pt3dadd( -26.2332, -301.527, -109.858, 0.37 ) }
    dend_50 { pt3dadd( -26.1141, -303.745, -110.617, 0.37 ) }
    dend_50 { pt3dadd( -26.1157, -304.397, -110.853, 0.59 ) }
    dend_50 { pt3dadd( -26.2222, -307.377, -112.103, 0.59 ) }
    dend_50 { pt3dadd( -26.3057, -309.636, -113.186, 0.59 ) }
    dend_50 { pt3dadd( -26.3174, -312.682, -114.771, 0.59 ) }
    dend_50 { pt3dadd( -26.1676, -316.443, -116.834, 0.59 ) }
    dend_50 { pt3dadd( -25.9858, -318.222, -117.799, 0.59 ) }
    dend_50 { pt3dadd( -25.7721, -319.564, -118.476, 0.59 ) }
    dend_50 { pt3dadd( -25.3367, -321.628, -119.532, 0.59 ) }
    dend_50 { pt3dadd( -24.7172, -323.833, -120.549, 0.59 ) }
    dend_50 { pt3dadd( -24.1398, -325.248, -121.054, 0.59 ) }
    dend_50 { pt3dadd( -23.0644, -327.513, -121.491, 0.44 ) }
    dend_50 { pt3dadd( -22.3796, -329.017, -121.653, 0.44 ) }
    dend_50 { pt3dadd( -21.8008, -330.457, -121.699, 0.44 ) }
    dend_50 { pt3dadd( -20.9581, -332.796, -121.668, 0.44 ) }
    dend_50 { pt3dadd( -19.3154, -337.636, -121.469, 0.44 ) }
    dend_50 { pt3dadd( -17.2863, -343.14, -121.072, 0.44 ) }
    dend_50 { pt3dadd( -16.6375, -344.938, -120.9, 0.44 ) }
    dend_50 { pt3dadd( -15.8829, -347.091, -120.593, 0.44 ) }
    dend_50 { pt3dadd( -15.3894, -348.543, -120.317, 0.44 ) }
    dend_50 { pt3dadd( -15.056, -349.771, -120.083, 0.44 ) }
    dend_50 { pt3dadd( -14.6628, -351.153, -119.89, 0.44 ) }
    dend_50 { pt3dadd( -13.922, -352.909, -119.592, 0.44 ) }
    dend_50 { pt3dadd( -13.4301, -354.078, -119.391, 0.66 ) }
    dend_50 { pt3dadd( -12.8954, -355.436, -119.202, 0.66 ) }
    dend_50 { pt3dadd( -11.7651, -358.668, -118.905, 0.66 ) }
    dend_50 { pt3dadd( -11.0319, -361.133, -118.772, 0.66 ) }
    dend_50 { pt3dadd( -10.1597, -364.27, -118.738, 0.37 ) }
    dend_50 { pt3dadd( -9.2143, -367.564, -118.869, 0.37 ) }
    dend_50 { pt3dadd( -8.63853, -369.496, -119.072, 0.37 ) }
    dend_50 { pt3dadd( -8.0187, -371.495, -119.42, 0.37 ) }
    dend_50 { pt3dadd( -7.24305, -373.658, -120.005, 0.37 ) }
    dend_50 { pt3dadd( -6.64402, -375.288, -120.588, 0.37 ) }
    dend_50 { pt3dadd( -5.79937, -377.1, -121.449, 0.37 ) }
    dend_50 { pt3dadd( -5.04821, -378.298, -122.123, 0.37 ) }
    dend_50 { pt3dadd( -3.86057, -379.875, -123.04, 0.37 ) }
    dend_50 { pt3dadd( -2.21068, -381.765, -124.082, 0.37 ) }
    dend_50 { pt3dadd( -1.1238, -382.908, -124.693, 0.37 ) }
    dend_50 { pt3dadd( 0.368262, -384.532, -125.443, 0.37 ) }
    dend_50 { pt3dadd( 1.7635, -386.1, -126.066, 0.15 ) }
    dend_50 { pt3dadd( 3.39628, -388.015, -126.706, 0.15 ) }
    dend_50 { pt3dadd( 4.5676, -389.418, -127.078, 0.15 ) }
    dend_50 { pt3dadd( 5.22225, -390.258, -127.228, 0.15 ) }
    dend_50 { pt3dadd( 7.04355, -392.658, -127.664, 0.15 ) }
    dend_50 { pt3dadd( 8.02447, -394.005, -127.95, 0.15 ) }
    dend_50 { pt3dadd( 9.1302, -395.615, -128.356, 0.15 ) }
    dend_50 { pt3dadd( 10.2982, -397.333, -128.832, 0.15 ) }
    dend_50 { pt3dadd( 11.478, -399.108, -129.305, 0.15 ) }
    dend_50 { pt3dadd( 12.9366, -401.398, -129.834, 0.15 ) }
    dend_50 { pt3dadd( 14.0223, -403.122, -130.229, 0.15 ) }
    dend_50 { pt3dadd( 14.9331, -404.658, -130.594, 0.15 ) }
    dend_50 { pt3dadd( 15.7423, -406.167, -130.97, 0.15 ) }
    dend_50 { pt3dadd( 16.8296, -408.417, -131.593, 0.15 ) }
    dend_50 { pt3dadd( 17.3977, -409.604, -131.905, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 70/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -46.1129, -260.223, -52.5659, 0.66 ) }
    dend_49 { pt3dadd( -44.6142, -260.24, -53.5784, 0.66 ) }
    dend_49 { pt3dadd( -43.8388, -260.249, -54.1021, 0.66 ) }
    dend_49 { pt3dadd( -43.1502, -260.257, -54.5673, 0.66 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 74/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 204.991, -80.475, -178.574, 0.22 ) }
    dend_22 { pt3dadd( 205.997, -81.031, -180.277, 0.22 ) }
    dend_22 { pt3dadd( 207.642, -81.9397, -183.059, 0.22 ) }
    dend_22 { pt3dadd( 208.98, -82.6788, -185.322, 0.22 ) }
    dend_22 { pt3dadd( 210.087, -83.2901, -187.194, 0.22 ) }
    dend_22 { pt3dadd( 210.922, -83.7512, -188.606, 0.22 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 80/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 204.991, -80.475, -178.574, 0.15 ) }
    dend_21 { pt3dadd( 205.995, -81.9975, -178.861, 0.15 ) }
    dend_21 { pt3dadd( 206.884, -83.3453, -179.115, 0.15 ) }
    dend_21 { pt3dadd( 207.71, -84.5969, -179.35, 0.15 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_38, dend_35, dend_26, dend_7, dend_0, dend_63, dend_56, dend_54, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_2, dend_1, dend_60, dend_57, dend_51, dend_40, dend_32, dend_29, dend_15, dend_10, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_42, dend_41, dend_34, dend_33, dend_31, dend_30, dend_17, dend_16, dend_14, dend_11, dend_5, dend_4, dend_46, dend_43, dend_23, dend_18, dend_13, dend_12, dend_48, dend_47, dend_45, dend_44, dend_25, dend_24, dend_20, dend_19, dend_50, dend_49, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_38, dend_35, dend_26, dend_7, dend_0, dend_63, dend_56, dend_54, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_2, dend_1, dend_60, dend_57, dend_51, dend_40, dend_32, dend_29, dend_15, dend_10, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_42, dend_41, dend_34, dend_33, dend_31, dend_30, dend_17, dend_16, dend_14, dend_11, dend_5, dend_4, dend_46, dend_43, dend_23, dend_18, dend_13, dend_12, dend_48, dend_47, dend_45, dend_44, dend_25, dend_24, dend_20, dend_19, dend_50, dend_49, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_63 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_56 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_54 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_37 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_36 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_27 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_9 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_8 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_6 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_62 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_61 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_58 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_53 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_52 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_41 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_33 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_31 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_14 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_11 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_18 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_13 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_48 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_47 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_25 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_24 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_19 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_50 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_38 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_26 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_7 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_28 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_32 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_39 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_40 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_51 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_10 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_30 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_42 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_15 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_57 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_43 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_60 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_16 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_59 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_44 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_17 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_45 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_23 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_12 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_49 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_20 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_21 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_22 OneSecGrp_SectionRef_66.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_60, dend_60, dend_60, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_35 nseg = 5
    dend_63 nseg = 9
    dend_56 nseg = 3
    dend_54 nseg = 13
    dend_37 nseg = 5
    dend_36 nseg = 9
    dend_27 nseg = 15
    dend_9 nseg = 3
    dend_8 nseg = 7
    dend_1 nseg = 9
    dend_6 nseg = 11
    dend_62 nseg = 19
    dend_61 nseg = 7
    dend_58 nseg = 9
    dend_53 nseg = 15
    dend_52 nseg = 11
    dend_41 nseg = 9
    dend_34 nseg = 15
    dend_33 nseg = 9
    dend_31 nseg = 11
    dend_14 nseg = 9
    dend_11 nseg = 5
    dend_5 nseg = 9
    dend_4 nseg = 3
    dend_46 nseg = 5
    dend_18 nseg = 11
    dend_13 nseg = 15
    dend_48 nseg = 3
    dend_47 nseg = 3
    dend_25 nseg = 5
    dend_24 nseg = 11
    dend_19 nseg = 3
    dend_50 nseg = 11
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L6_LBC_0823165631_0_0


