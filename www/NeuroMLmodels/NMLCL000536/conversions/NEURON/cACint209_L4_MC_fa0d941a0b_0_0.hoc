// Cell: cACint209_L4_MC_fa0d941a0b_0_0
/*
{
  "id" : "cACint209_L4_MC_fa0d941a0b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-5.81032, -8.96414, 0.0, 3.39321", "-5.35021, -8.05454, 0.0, 5.70157", "-4.8901, -7.14495, 0.0, 8.17623", "-4.42999, -6.23536, 0.0, 10.0451", "-3.96988, -5.32576, 0.0, 11.2842", "-3.50977, -4.41617, 0.0, 12.1609", "-3.04966, -3.50658, 0.0, 13.0983", "-2.58955, -2.59698, 0.0, 14.2729", "-2.12944, -1.68739, 0.0, 15.6323", "-1.66933, -0.777799, 0.0, 16.1737", "-1.20922, 0.131794, 0.0, 15.8371", "-0.74911, 1.04139, 0.0, 15.1688", "-0.289, 1.95098, 0.0, 14.0685", "0.17111, 2.86057, 0.0, 12.5203", "0.631219, 3.77017, 0.0, 11.8901", "1.09133, 4.67976, 0.0, 11.5663", "1.55144, 5.58935, 0.0, 11.2497", "2.01155, 6.49895, 0.0, 10.4762", "2.47166, 7.40854, 0.0, 8.56185", "2.93177, 8.31813, 0.0, 6.66045", "3.39188, 9.22772, 0.0, 3.67528" ]
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "-4.78859, 6.76653, 3.88, 6.86", "-4.78859, 6.76653, 3.88, 6.86", "-5.8947, 7.44094, 4.12694, 5.68", "-7.00615, 8.11861, 4.37508, 5.46", "-9.27304, 9.50077, 4.88118, 4.5", "-10.7931, 10.4276, 5.22054, 4.5", "-12.666, 11.5695, 5.63868, 4.79", "-14.2886, 12.5148, 6.0155, 5.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001750799176
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-1.94859, -7.20522, -1.28, 3.24", "-1.94859, -7.20522, -1.28, 3.24", "-0.456228, -8.98429, -1.42382, 1.47", "0.659019, -10.2733, -1.65016, 1.55", "1.51726, -11.251, -1.91978, 1.7", "2.4888, -12.3078, -2.3473, 1.92", "3.99379, -13.8531, -3.20935, 1.84", "5.27482, -15.0716, -4.19303, 1.7", "6.47029, -16.145, -5.40507, 1.4", "7.2818, -16.9073, -6.47929, 1.25", "8.28185, -17.9608, -8.16628, 1.55", "9.1629, -18.911, -9.88276, 1.7", "9.83179, -19.6507, -11.4487, 1.99", "10.3717, -20.2899, -12.9365, 2.06", "10.9292, -21.0484, -14.7282, 2.06", "11.2392, -21.583, -15.8947, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001750799176
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-6.16859, -8.44347, 4.84, 2.21", "-6.32593, -8.67105, 4.8795, 2.21", "-6.82039, -9.75434, 5.02997, 1.99", "-7.27358, -11.2297, 5.18964, 1.55", "-7.397, -12.1126, 5.24095, 1.77", "-7.42958, -13.5939, 5.28505, 1.99", "-7.37825, -15.0518, 5.34723, 2.14", "-7.27779, -16.0276, 5.38978, 2.14", "-7.08743, -17.184, 5.41503, 2.51", "-6.68657, -19.1722, 5.39584, 2.14", "-6.34427, -20.829, 5.28584, 2.43", "-6.01062, -22.475, 5.15798, 2.95", "-5.67877, -24.2618, 4.99513, 3.39", "-5.44438, -25.6854, 4.86576, 3.61", "-5.20682, -27.2127, 4.70308, 3.32", "-4.96701, -29.3673, 4.41892, 3.02" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001750799176
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.94141, -3.06147, -1.79, 3.61", "4.94141, -3.06147, -1.79, 3.61", "6.20855, -2.93482, -2.64936, 2.43", "7.37741, -2.81799, -3.44207, 2.06", "8.76449, -2.67935, -4.38276, 2.29", "9.86895, -2.56896, -5.13179, 2.88", "10.466, -2.50929, -5.53668, 2.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001750799176
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.39188, 9.22772, 0.0, 0.613956", "10.1626, 22.6127, 0.0, 0.613956", "16.9332, 35.9977, 0.0, 0.613956" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_163",
    "id" : "dend_163",
    "points3d" : [ "-14.2886, 12.5148, 6.0155, 1.77", "-14.6992, 13.8938, 4.7424, 1.77", "-14.9717, 14.5377, 4.13106, 1.11", "-15.3466, 15.2333, 3.48953, 1.11", "-16.0547, 16.391, 2.52605, 1.47", "-16.6849, 17.3836, 1.81574, 1.92", "-17.4528, 18.6216, 1.12691, 1.92", "-18.4144, 20.1067, 0.509121, 1.18", "-19.2644, 21.5567, 0.254272, 1.77", "-19.8882, 23.0749, 0.555009, 1.18", "-20.1162, 24.2023, 1.14764, 1.47", "-20.1616, 25.9771, 2.32928, 1.33", "-20.0357, 27.1897, 3.1801, 1.47", "-19.7386, 28.4388, 4.01357, 1.47", "-19.0008, 30.6597, 5.28825, 1.11", "-18.5815, 31.747, 5.72266, 1.25", "-17.974, 33.3492, 5.90945, 1.47", "-17.5895, 34.7128, 5.52507, 1.25", "-17.4253, 35.9831, 4.72902, 1.55", "-17.4446, 37.0477, 3.84729, 1.55", "-17.5753, 38.0245, 2.9544, 1.4", "-17.7887, 38.9564, 2.13252, 1.4", "-18.1721, 40.1869, 1.26474, 1.03", "-18.4652, 41.116, 0.906169, 1.03", "-18.8185, 42.529, 0.886104, 1.4", "-18.9681, 43.7636, 1.24803, 1.4", "-18.9669, 44.7586, 1.7531, 1.4", "-18.8547, 46.1016, 2.62645, 1.11", "-18.7, 47.254, 3.43385, 1.55", "-18.4929, 48.7483, 4.45409, 1.4", "-18.3613, 50.0567, 5.19716, 1.03", "-18.3573, 51.3469, 5.60969, 1.03", "-18.451, 52.3785, 5.67113, 1.03", "-18.7305, 54.052, 5.49104, 1.25", "-19.0225, 55.4965, 5.23046, 1.4", "-19.4425, 57.3703, 4.82899, 1.84", "-19.7973, 59.0504, 4.4849, 1.11", "-20.0967, 60.6459, 4.25972, 0.81", "-20.2413, 61.6139, 4.21369, 1.03", "-20.4079, 63.1149, 4.27353, 1.4", "-20.5268, 64.6511, 4.39694, 1.4", "-20.6053, 66.2688, 4.52332, 1.11", "-20.6711, 68.3863, 4.62406, 1.03", "-20.7189, 69.779, 4.61634, 1.03", "-20.7582, 71.6766, 4.50052, 1.33", "-20.7652, 73.0841, 4.35634, 1.62", "-20.7422, 74.3891, 4.19868, 1.4", "-20.7265, 75.7095, 3.99222, 0.96", "-20.7278, 76.9721, 3.75785, 1.25", "-20.8302, 78.3685, 3.50748, 1.03", "-21.1051, 79.7325, 3.28992, 1.62", "-21.5821, 81.0029, 3.1249, 1.62", "-22.4632, 82.5626, 2.96119, 1.03", "-23.1013, 83.4593, 2.86314, 1.03", "-24.0544, 84.7159, 2.67069, 0.88", "-25.069, 86.0417, 2.41701, 1.18", "-25.7611, 87.1223, 2.18553, 0.81", "-26.1229, 88.1493, 2.00087, 0.81", "-26.0789, 89.2987, 1.8981, 1.03", "-25.6516, 91.1516, 1.89977, 1.47", "-25.3296, 92.2594, 2.03496, 1.11", "-24.7442, 94.2385, 2.49134, 0.96", "-24.4074, 95.4736, 2.86575, 0.81", "-24.1478, 96.6511, 3.30197, 1.33", "-23.9908, 97.8012, 3.78105, 1.18", "-23.8918, 99.5422, 4.4687, 0.81", "-23.8821, 100.548, 4.76152, 0.81", "-23.9351, 102.563, 5.02825, 1.11", "-23.9648, 103.847, 4.94809, 1.33", "-23.9664, 105.052, 4.67963, 1.47", "-23.9734, 106.469, 4.20256, 1.4", "-23.984, 107.873, 3.62187, 1.62", "-24.0249, 109.258, 3.03335, 1.47", "-24.0847, 110.847, 2.39494, 0.96", "-24.0864, 111.84, 2.07372, 0.96", "-24.0472, 112.763, 1.8857, 0.96", "-23.9274, 114.3, 1.8339, 1.11", "-23.7651, 116.027, 2.00436, 1.18", "-23.642, 117.526, 2.24595, 0.88", "-23.5525, 118.986, 2.48803, 0.81", "-23.5575, 120.542, 2.68972, 1.11", "-23.6986, 122.339, 2.78907, 0.88", "-23.9619, 123.641, 2.72273, 0.81", "-24.479, 125.335, 2.43552, 0.74", "-24.9447, 126.551, 2.11053, 1.03", "-25.6832, 128.238, 1.51696, 1.33", "-26.3355, 129.703, 0.893563, 1.33", "-26.9644, 131.217, 0.241341, 0.81", "-27.4058, 132.455, -0.199542, 1.55", "-27.6925, 133.473, -0.430926, 1.55", "-27.9092, 134.615, -0.4994, 1.18", "-28.03, 136.912, -0.130362, 0.74", "-27.9336, 138.408, 0.4178, 0.74", "-27.7547, 139.871, 1.09982, 1.4", "-27.6283, 140.899, 1.57917, 1.99", "-27.4828, 142.371, 2.17677, 1.47", "-27.4657, 144.095, 2.69129, 1.18", "-27.7725, 145.955, 2.8646, 1.55", "-28.3003, 147.511, 2.6247, 1.99", "-29.0355, 149.237, 2.13839, 2.21", "-29.7706, 150.801, 1.59186, 1.92", "-30.7287, 152.777, 0.841626, 1.47", "-31.6373, 154.763, 0.0699149, 1.11", "-32.0729, 156.002, -0.354505, 0.96", "-32.3285, 157.366, -0.662843, 0.96", "-32.3337, 159.017, -0.786233, 0.74", "-32.1029, 160.446, -0.739377, 1.25", "-31.6813, 161.803, -0.629209, 1.47", "-30.8947, 163.818, -0.413284, 0.81", "-30.4225, 165.044, -0.311344, 0.66", "-30.0955, 165.999, -0.27255, 0.66", "-29.9065, 166.761, -0.283443, 1.11", "-29.7064, 168.276, -0.422253, 1.99", "-29.6429, 169.928, -0.664103, 1.84", "-29.6757, 171.687, -0.99508, 0.81", "-29.6888, 172.546, -1.17199, 0.81", "-29.6248, 174.298, -1.5521, 1.25", "-29.4428, 175.507, -1.78217, 1.11", "-28.9069, 177.086, -1.9626, 1.03", "-28.2463, 178.201, -2.00847, 1.55", "-27.8471, 178.714, -1.99882, 1.7", "-26.9158, 179.796, -1.93697, 1.47", "-25.5318, 181.387, -1.8139, 1.03", "-24.2495, 183.063, -1.75853, 1.03", "-23.531, 184.472, -1.8846, 0.88", "-23.4808, 185.145, -2.10933, 0.88", "-23.7077, 186.016, -2.54992, 1.11", "-24.417, 187.512, -3.45449, 1.55", "-25.2688, 188.939, -4.38064, 1.03", "-26.0565, 190.219, -5.2266, 1.4", "-26.8397, 191.586, -6.04325, 1.62", "-27.6397, 193.252, -6.86391, 1.62", "-28.3141, 195.115, -7.55581, 0.88", "-28.9017, 197.673, -8.10465, 0.96", "-29.0923, 199.579, -8.18446, 1.18", "-29.0316, 201.325, -8.00303, 1.4", "-28.7807, 202.97, -7.61737, 1.4", "-28.3111, 204.625, -7.03115, 0.88", "-27.5949, 206.354, -6.26788, 0.88", "-26.8815, 207.714, -5.60737, 1.18", "-26.2086, 208.884, -5.09035, 1.4", "-25.7009, 209.769, -4.81373, 1.4", "-24.8693, 211.341, -4.57852, 0.88", "-24.1799, 212.929, -4.63217, 0.74", "-23.8393, 214.102, -4.93035, 0.96", "-23.6553, 215.486, -5.48678, 1.03", "-23.6633, 216.99, -6.22036, 1.03", "-23.7748, 218.418, -6.94972, 1.4", "-23.8642, 219.536, -7.53292, 1.55", "-23.9068, 221.15, -8.31009, 1.7", "-23.7883, 222.439, -8.83064, 1.55", "-23.3793, 224.098, -9.34492, 1.33", "-22.9011, 225.441, -9.6398, 1.18", "-22.1289, 227.45, -9.9601, 0.96", "-21.5831, 229.007, -10.1382, 1.4", "-21.1324, 230.728, -10.2424, 1.55", "-20.7665, 233.097, -10.2654, 1.11", "-20.6579, 235.119, -10.2212, 1.18", "-20.7266, 236.91, -10.183, 1.11", "-20.9313, 238.93, -10.1619, 1.25", "-21.1772, 241.062, -10.2143, 0.88", "-21.3581, 242.878, -10.326, 1.11", "-21.4281, 244.481, -10.5184, 1.25", "-21.3447, 246.16, -10.8233, 1.47", "-21.0884, 247.88, -11.2195, 0.96", "-20.8091, 249.144, -11.5643, 1.33", "-20.4276, 250.623, -12.0036, 1.25", "-19.9881, 252.218, -12.4943, 0.96", "-19.5462, 253.692, -12.9147, 1.55", "-18.8008, 255.963, -13.4644, 1.11", "-18.2238, 257.633, -13.7441, 1.11", "-17.4005, 259.821, -13.9165, 1.25", "-16.7853, 261.291, -13.8814, 1.92", "-15.9247, 263.292, -13.6018, 1.47", "-15.1755, 265.098, -13.2028, 1.11", "-14.5192, 266.942, -12.6938, 1.47", "-14.0502, 268.789, -12.1868, 1.18", "-13.8656, 270.653, -11.741, 0.96", "-14.0051, 272.179, -11.5391, 1.11", "-14.3327, 273.461, -11.5254, 0.88", "-15.0125, 275.464, -11.7397, 1.62", "-15.6646, 277.415, -12.1228, 1.62", "-16.1271, 278.974, -12.5348, 1.62", "-16.5162, 280.719, -13.0634, 1.25", "-16.6823, 282.155, -13.482, 1.47", "-16.681, 283.634, -13.8566, 1.7", "-16.4515, 285.635, -14.2826, 1.18", "-16.164, 287.194, -14.5779, 1.18", "-15.8315, 288.691, -14.8305, 1.18", "-15.4896, 290.131, -15.0226, 0.96", "-15.1978, 291.444, -15.1691, 1.62", "-14.9923, 292.592, -15.2201, 1.62", "-14.6977, 294.926, -15.1776, 0.88", "-14.5815, 296.544, -15.0688, 1.03", "-14.5507, 297.833, -14.9619, 1.03", "-14.6341, 299.726, -14.8328, 1.55", "-14.9748, 302.368, -14.7381, 0.74", "-15.3554, 304.197, -14.7789, 0.88", "-15.8968, 306.289, -14.9558, 1.11", "-16.1983, 307.417, -15.0937, 1.33", "-16.6196, 309.097, -15.3007, 1.33", "-16.93, 310.737, -15.464, 1.03", "-16.9989, 312.193, -15.5392, 0.74", "-16.7607, 314.016, -15.5089, 0.74", "-16.2124, 315.95, -15.412, 1.03", "-15.6159, 317.52, -15.336, 1.11", "-14.8479, 319.235, -15.2598, 0.96", "-14.0207, 320.981, -15.2221, 1.4", "-13.2897, 322.546, -15.2725, 0.74", "-12.8401, 323.623, -15.4089, 1.4", "-12.3397, 325.12, -15.7456, 2.36", "-11.9152, 326.823, -16.273, 0.96", "-11.7296, 327.978, -16.7118, 1.11", "-11.668, 328.899, -17.0983, 1.18", "-11.6542, 330.245, -17.6243, 1.11", "-11.686, 331.93, -18.1835, 1.33", "-11.732, 333.363, -18.5714, 1.33", "-11.7887, 334.778, -18.8631, 1.25", "-11.8468, 336.426, -19.0047, 1.4", "-11.885, 338.134, -18.8201, 0.66", "-11.8642, 339.159, -18.47, 1.18", "-11.7476, 340.178, -17.8965, 1.4", "-11.5629, 341.225, -17.2021, 1.11", "-11.3103, 342.386, -16.4131, 0.74", "-10.9462, 343.786, -15.568, 0.88", "-10.6199, 344.973, -15.0526, 1.11", "-10.0873, 346.929, -14.5901, 0.66", "-9.75612, 348.198, -14.5276, 1.18", "-9.42145, 349.545, -14.6735, 1.47", "-9.05429, 351.228, -15.1067, 1.03", "-8.78677, 352.595, -15.5999, 0.88", "-8.61094, 353.615, -16.04, 0.88", "-8.44672, 354.818, -16.606, 1.25", "-8.31802, 355.745, -17.0289, 1.4", "-8.09017, 357.513, -17.7928, 0.88", "-7.96686, 358.629, -18.2317, 0.88", "-7.86588, 359.992, -18.7063, 1.33", "-7.84604, 361.206, -19.0217, 1.4", "-7.95335, 362.834, -19.3167, 1.03", "-8.18621, 364.436, -19.4929, 0.88", "-8.4407, 365.511, -19.5357, 1.11", "-9.05394, 367.398, -19.5267, 1.4", "-9.85639, 369.599, -19.4282, 1.47", "-10.3786, 371.017, -19.3089, 1.47", "-10.748, 372.086, -19.1927, 1.47", "-11.1334, 373.485, -19.0363, 1.55", "-11.5067, 375.929, -18.7949, 0.74", "-11.4495, 377.262, -18.7208, 1.11", "-11.098, 378.466, -18.7328, 0.81", "-10.4723, 379.748, -18.8046, 1.03", "-9.90818, 380.661, -18.8924, 0.66", "-9.18128, 381.71, -19.0463, 1.25", "-8.3792, 382.847, -19.2652, 1.25", "-7.56433, 384.263, -19.5757, 0.96", "-7.04555, 385.53, -19.8225, 0.81", "-6.71406, 386.857, -19.9967, 1.03", "-6.61308, 388.068, -20.0841, 1.18", "-6.6806, 388.966, -20.1366, 1.47", "-6.95635, 390.153, -20.1843, 1.62", "-7.47219, 391.745, -20.2817, 0.81", "-7.83784, 392.753, -20.3545, 0.81", "-8.45212, 394.343, -20.5079, 0.96", "-8.93719, 395.612, -20.6508, 1.25", "-9.71044, 397.753, -20.9673, 0.88", "-10.0789, 398.852, -21.1356, 0.96", "-10.3464, 399.751, -21.2573, 0.96", "-10.5111, 400.64, -21.3066, 0.96", "-10.5565, 401.786, -21.2241, 0.96", "-10.4342, 403.137, -20.9404, 0.81", "-10.1972, 404.487, -20.5401, 1.33", "-9.92435, 405.895, -20.1092, 1.18", "-9.54235, 407.757, -19.6082, 0.81", "-9.19463, 409.408, -19.2849, 0.66", "-8.849, 411.163, -19.1207, 0.52", "-8.77495, 411.661, -19.1466, 0.74", "-8.6389, 413.197, -19.5225, 1.33", "-8.62886, 414.639, -20.1189, 1.18", "-8.64, 415.972, -20.8098, 0.74", "-8.64872, 417.013, -21.4047, 0.96", "-8.62221, 418.123, -22.0355, 0.81", "-8.52418, 419.365, -22.6497, 1.18", "-8.35122, 420.954, -23.2625, 1.03", "-8.13866, 422.862, -23.8185, 0.88", "-8.04123, 423.997, -24.0273, 0.74", "-7.98425, 425.034, -24.1095, 0.74", "-7.97664, 426.531, -24.1132, 0.81", "-8.07638, 428.052, -24.0494, 1.03", "-8.23022, 429.358, -23.966, 1.25", "-8.54724, 431.596, -23.8276, 0.74", "-8.67802, 433.231, -23.747, 0.59", "-8.69458, 434.738, -23.6645, 0.81", "-8.54628, 435.938, -23.5898, 0.81", "-8.32043, 436.755, -23.54, 0.66", "-7.78632, 438.191, -23.4431, 0.88", "-6.86392, 440.312, -23.3299, 1.25", "-6.24264, 441.729, -23.296, 0.59", "-5.6123, 443.375, -23.2146, 0.52", "-5.37988, 444.366, -23.1517, 0.52", "-5.27872, 445.667, -23.0963, 0.59", "-5.34099, 446.991, -23.1042, 0.74", "-5.44758, 447.934, -23.1679, 0.74", "-5.61385, 449.552, -23.3635, 1.55", "-5.73094, 451.814, -23.7102, 0.37", "-5.68614, 453.253, -23.9565, 0.88", "-5.5022, 454.673, -24.2259, 1.11", "-5.231, 455.97, -24.4874, 1.18", "-4.94592, 457.07, -24.7286, 0.88", "-4.41718, 458.659, -25.1288, 0.44", "-4.10744, 459.445, -25.3403, 0.59", "-3.58081, 460.786, -25.6855, 0.37", "-3.18614, 461.876, -25.9503, 0.15", "-2.84334, 462.997, -26.2135, 0.52", "-1.31872, 472.573, -27.3163, 0.52" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 25
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "-14.2886, 12.5148, 6.0155, 3.76", "-16.8152, 11.421, 6.15969, 3.76", "-19.1789, 10.2713, 6.32758, 3.47", "-20.3428, 9.67097, 6.45162, 3.61", "-22.3528, 8.60671, 6.80655, 2.73", "-24.4822, 7.40533, 7.35789, 2.51", "-26.2929, 6.29771, 7.99359, 2.21", "-27.8114, 5.12246, 8.84203, 1.84", "-28.8171, 4.09885, 9.73159, 1.84", "-30.0344, 2.55029, 11.2849, 2.51", "-30.882, 1.26839, 12.735, 2.8", "-31.6228, 0.0392162, 14.1871, 2.58", "-32.5353, -1.49461, 16.0078, 2.73", "-33.3705, -3.04323, 17.8556, 2.36", "-33.9874, -4.28289, 19.2704, 2.29", "-34.574, -5.48228, 20.5295, 2.58", "-35.3979, -6.84005, 21.8577, 2.88", "-36.1425, -7.74184, 22.6541, 3.02" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "11.2392, -21.583, -15.8947, 1.4", "11.2425, -22.2943, -16.7957, 1.4", "11.2572, -23.231, -17.6878, 1.4", "11.2782, -24.3571, -18.4373, 1.4", "11.3587, -26.2439, -19.1173, 0.59", "11.4845, -27.7235, -19.4064, 1.18", "11.666, -29.1056, -19.624, 0.96", "11.9777, -30.7917, -19.7169, 0.74", "12.3515, -32.1917, -19.6176, 0.96", "12.9232, -33.8478, -19.4412, 0.88", "13.3331, -34.8521, -19.2653, 0.74", "13.9186, -36.1423, -19.0356, 1.03", "14.5276, -37.2553, -18.9917, 0.96", "15.2891, -38.4583, -19.1977, 0.59", "16.2832, -39.7905, -19.6984, 0.59" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "11.2392, -21.583, -15.8947, 0.74", "9.01923, -23.0015, -15.6308, 0.74", "7.66039, -23.8007, -15.4286, 0.88", "6.11359, -24.6073, -15.1956, 1.03", "4.76897, -25.233, -15.0311, 0.88", "3.70824, -25.6806, -14.9554, 0.96", "2.37841, -26.1774, -14.9514, 0.81", "1.01223, -26.5653, -15.0972, 0.96", "-0.778489, -26.9548, -15.5253, 0.74", "-1.87549, -27.1705, -15.9696, 0.81", "-2.96156, -27.4385, -16.5816, 1.03", "-4.28477, -27.911, -17.5602, 1.47", "-5.1398, -28.4138, -18.3931, 1.62", "-5.85507, -29.184, -19.3433, 1.47", "-6.24324, -30.193, -20.2058, 0.81", "-6.40219, -31.4855, -20.894, 0.74", "-6.3844, -32.6249, -21.2384, 0.88", "-6.29218, -33.6962, -21.3784, 0.88", "-6.19344, -34.5525, -21.4073, 0.88", "-6.04231, -35.9323, -21.3837, 0.52", "-5.98906, -37.3983, -21.3474, 0.74", "-6.10496, -38.7028, -21.3688, 0.66", "-6.36208, -39.9382, -21.4321, 1.11", "-6.67024, -41.0042, -21.4966, 0.74", "-7.01829, -42.1414, -21.6147, 1.18", "-7.43355, -43.5244, -21.8136, 1.03", "-7.78606, -44.9124, -22.078, 0.74", "-7.96938, -45.8374, -22.2465, 0.74", "-8.11227, -46.9295, -22.4269, 1.33", "-8.25358, -48.5706, -22.6404, 1.62", "-8.33852, -50.1385, -22.7785, 0.88", "-8.38028, -51.5196, -22.8745, 0.96", "-8.42121, -52.6994, -22.917, 0.96", "-8.51822, -54.0379, -22.9475, 0.66", "-8.69159, -55.2069, -22.971, 0.66", "-8.95976, -56.1006, -22.961, 0.96", "-9.25233, -56.7569, -22.9815, 1.62", "-10.1708, -58.1238, -23.1371, 1.03", "-10.9406, -58.9428, -23.3315, 0.74", "-11.8642, -59.7355, -23.636, 1.11", "-13.437, -61.0213, -24.3312, 0.74", "-14.2637, -61.7227, -24.8437, 0.88", "-15.319, -62.7109, -25.7548, 1.33", "-15.9411, -63.413, -26.5502, 1.03", "-16.3573, -64.1132, -27.3547, 1.47", "-16.6748, -65.125, -28.4195, 1.25", "-16.8468, -66.2161, -29.4643, 1.4", "-17.0477, -67.5687, -30.5777, 1.18", "-17.2078, -68.6357, -31.3546, 0.96", "-17.3882, -69.5055, -31.9377, 0.66", "-17.802, -70.8543, -32.8215, 0.74", "-18.2535, -71.8538, -33.4603, 0.96", "-18.9714, -73.0517, -34.1924, 0.74", "-19.6594, -73.9214, -34.6713, 0.74", "-20.1126, -74.3671, -34.7542, 0.74", "-19.232, -73.4974, -35.2524, 0.59", "-18.7655, -72.9313, -35.723, 0.96", "-18.1419, -72.0976, -36.4656, 0.96", "-17.5002, -71.2066, -37.2609, 0.66", "-16.7837, -70.1752, -38.1376, 0.88", "-16.2085, -69.3159, -38.8297, 0.66", "-15.7592, -68.3682, -39.0912, 0.81", "-16.2378, -69.4768, -39.5408, 0.81", "-16.7428, -70.3988, -39.9727, 0.74", "-17.5166, -71.7085, -40.4585, 0.59", "-18.1997, -72.9002, -40.7857, 0.66", "-18.7514, -73.856, -40.983, 0.81", "-19.6263, -75.4339, -41.2292, 0.88", "-20.2667, -76.5186, -41.3563, 0.37", "-20.8591, -77.3603, -41.4543, 0.37", "-21.2816, -77.8164, -41.5002, 0.37", "-22.2585, -78.693, -41.5306, 0.52" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-4.96701, -29.3673, 4.41892, 0.88", "-4.27917, -30.9398, 3.05959, 0.88", "-3.95496, -31.9971, 2.23722, 0.74", "-3.74876, -33.1794, 1.38912, 0.81", "-3.69129, -34.4613, 0.569834, 1.03", "-3.72527, -35.3324, 0.0737244, 0.81", "-3.77466, -36.0236, -0.27202, 0.81", "-3.98082, -37.0261, -0.672938, 1.11", "-4.24201, -38.0562, -0.944843, 0.74", "-4.53506, -39.2834, -1.13557, 0.59", "-4.73734, -40.4619, -1.18116, 0.37", "-4.83398, -41.4349, -1.12046, 0.74", "-4.84587, -41.9113, -1.04398, 0.88", "-4.72414, -43.8966, -0.576751, 0.59", "-4.52494, -45.0581, -0.225705, 0.88", "-3.93103, -46.926, 0.439628, 0.66", "-3.38896, -48.0357, 0.890053, 0.88", "-2.83498, -48.906, 1.25965, 1.03", "-2.32884, -49.6341, 1.56151, 1.25", "-1.58856, -50.6956, 1.94881, 1.47", "-0.825773, -52.068, 2.30255, 1.25", "-0.214317, -53.7163, 2.48624, 1.11", "0.0898222, -55.2206, 2.48233, 1.18", "0.197985, -56.9706, 2.27666, 1.03", "0.117887, -58.7769, 1.89395, 0.88", "-0.0573353, -60.5548, 1.36957, 1.11", "-0.207818, -61.9825, 0.850883, 0.88", "-0.294176, -63.204, 0.330888, 0.66", "-0.286059, -64.8698, -0.441171, 0.96", "-0.135404, -66.3352, -1.13888, 1.7", "0.152166, -68.0904, -1.93856, 0.52", "0.450161, -69.5388, -2.5529, 1.18", "0.778297, -70.9068, -3.08253, 0.81", "1.2401, -72.7047, -3.66789, 1.33", "1.48802, -73.6778, -3.9034, 0.96", "1.79927, -75.0362, -4.16668, 0.88", "1.86859, -75.4938, -4.23983, 0.88" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-4.96701, -29.3673, 4.41892, 1.47", "-6.68515, -31.173, 4.22102, 1.47", "-7.67218, -32.3281, 4.06512, 1.7", "-8.72771, -33.5633, 3.8984, 1.7", "-10.018, -35.0732, 3.6946, 1.92", "-11.2041, -36.4613, 3.50725, 1.84", "-12.5033, -37.9817, 3.30204, 1.99", "-13.4846, -39.0865, 3.1509, 2.21" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "10.466, -2.50929, -5.53668, 1.62", "11.6699, -3.94295, -5.75347, 1.62", "12.2904, -4.87258, -5.91165, 1.62", "12.8217, -5.82716, -6.11276, 1.62", "13.2815, -6.79896, -6.36428, 1.62", "13.8145, -8.10252, -6.75119, 1.62", "14.3867, -9.66048, -7.25597, 1.4", "14.682, -10.7162, -7.63783, 1.92", "14.9766, -11.8405, -8.06674, 1.7", "15.3311, -13.0665, -8.55626, 1.84", "15.8773, -14.6839, -9.24981, 2.14", "16.5465, -16.2752, -9.98431, 1.62", "17.2277, -17.539, -10.5468, 2.14", "18.0691, -18.8365, -11.0539, 1.99", "19.2758, -20.4459, -11.5854, 1.77", "20.2661, -21.6318, -11.8628, 1.7", "21.4239, -22.9466, -11.9973, 1.33", "22.6349, -24.3802, -11.8593, 1.25", "23.5558, -25.6259, -11.4926, 1.25", "24.1555, -26.6757, -10.9816, 1.25", "24.7927, -27.9693, -10.1986, 1.47", "25.4281, -29.5338, -9.09374, 1.7", "26.0446, -31.6826, -7.40388, 1.55", "26.2313, -32.8824, -6.39795, 1.84", "26.2816, -34.2064, -5.17932, 2.21" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "10.466, -2.50929, -5.53668, 0.52", "12.4315, -2.05492, -6.57672, 0.52", "13.5745, -1.89934, -7.10536, 1.18", "14.4173, -1.84076, -7.42552, 1.92", "15.2983, -1.82483, -7.70228, 1.92", "16.5989, -1.87124, -8.00067, 1.25", "18.0637, -2.01155, -8.2273, 0.88", "19.0777, -2.25219, -8.25102, 1.11", "20.0651, -2.57013, -8.10326, 1.33", "21.0425, -2.96647, -7.78166, 1.47", "22.4503, -3.64136, -7.04361, 0.81", "23.4703, -4.21743, -6.31974, 0.88", "24.3977, -4.84726, -5.49129, 1.11", "25.3005, -5.5706, -4.49333, 1.4", "26.1615, -6.38931, -3.26683, 0.88", "26.7702, -7.08196, -2.07264, 0.88", "27.0805, -7.53958, -1.11553, 0.88", "27.2381, -7.84067, -0.265064, 1.11", "27.3189, -8.06634, 0.728518, 1.11", "27.3431, -8.14841, 1.86875, 1.11", "27.3891, -8.10355, 2.83408, 1.11", "27.5718, -8.00982, 3.69221, 1.11", "27.9385, -7.92643, 4.27812, 1.11", "28.5247, -7.8582, 4.77428, 1.11", "29.627, -7.75568, 5.37072, 1.33", "30.9366, -7.61823, 5.93412, 1.33", "32.2446, -7.43168, 6.44187, 1.33", "33.8455, -7.11893, 7.05181, 1.03", "35.2712, -6.78971, 7.62873, 1.03", "37.0876, -6.35945, 8.43419, 1.03", "38.4092, -6.0686, 9.09738, 0.81", "39.6109, -5.86924, 9.82846, 0.88", "40.7918, -5.84977, 10.7385, 0.81", "41.6533, -6.1289, 11.5533, 1.33", "42.6237, -6.9881, 12.5705, 1.62", "43.3224, -8.08502, 13.2712, 0.96", "44.1078, -9.80849, 13.8664, 0.88", "44.5856, -11.127, 14.0776, 1.25", "44.9903, -12.58, 14.1155, 1.7", "45.2276, -13.6675, 14.0836, 1.55", "45.5052, -15.1697, 13.9916, 0.96", "45.7807, -16.6644, 13.902, 0.74", "46.0523, -17.9151, 13.8745, 0.66", "46.4537, -19.5454, 13.9596, 0.44", "46.9757, -21.2841, 14.2112, 1.11", "47.3731, -22.342, 14.4583, 1.25", "48.0641, -23.7775, 14.9035, 0.74", "48.8646, -25.018, 15.3379, 0.96", "49.5621, -25.9134, 15.6488, 0.81", "50.2547, -26.7058, 15.879, 0.74", "50.9512, -27.5062, 16.0153, 1.33", "51.5623, -28.3366, 16.094, 1.18", "52.2513, -29.5983, 16.1006, 0.44", "52.466, -30.3982, 16.0553, 0.37", "52.6076, -31.4365, 15.9762, 0.81", "52.6011, -32.4797, 15.8833, 1.62", "52.3867, -34.0124, 15.7297, 1.4", "52.2286, -34.6118, 15.67, 1.03", "51.701, -36.0066, 15.5413, 0.74" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "16.9332, 35.9977, 0.0, 0.564909", "23.7039, 49.3827, 0.0, 0.564909", "30.4746, 62.7677, 0.0, 0.564909" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_150",
    "id" : "dend_150",
    "points3d" : [ "-36.1425, -7.74184, 22.6541, 0.96", "-36.7903, -9.27106, 23.5213, 0.96", "-36.7518, -10.6713, 24.6983, 0.81", "-36.64, -11.3666, 25.3357, 0.96", "-36.5247, -12.2587, 26.073, 1.11", "-36.4396, -13.5227, 26.952, 1.33", "-36.4268, -15.0502, 27.8196, 1.33", "-36.4098, -16.556, 28.4588, 1.03", "-36.5383, -18.3619, 28.8343, 1.18", "-36.8749, -19.8907, 28.791, 1.11", "-37.3976, -21.4375, 28.4846, 1.47", "-37.9086, -22.7671, 28.1028, 1.62", "-38.7804, -25.0055, 27.3479, 1.25", "-39.2659, -26.3348, 26.8836, 1.47", "-39.6505, -27.7008, 26.5072, 1.62", "-39.892, -29.2075, 26.3117, 1.55", "-39.9521, -30.8091, 26.3596, 1.4", "-39.8781, -32.2296, 26.6025, 1.7", "-39.7334, -33.6986, 27.0365, 1.99", "-39.5528, -36.0916, 27.9696, 0.96", "-39.5582, -37.655, 28.7267, 1.18", "-39.708, -39.0317, 29.4982, 0.96", "-39.9931, -40.3593, 30.2881, 1.11", "-40.4756, -41.8824, 31.1653, 1.7", "-41.178, -43.705, 32.2378, 1.7", "-41.9562, -45.3122, 33.1688, 1.4", "-43.1003, -47.3492, 34.2962, 1.55", "-44.2154, -49.1599, 35.2397, 1.55", "-45.4309, -51.1174, 36.173, 1.92" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "-36.1425, -7.74184, 22.6541, 1.47", "-38.1653, -7.33358, 22.2184, 1.47", "-39.2104, -7.12265, 21.9933, 1.47", "-41.1214, -6.73696, 21.5817, 1.84" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "16.2832, -39.7905, -19.6984, 0.29", "17.5902, -38.9404, -20.554, 0.29", "18.5906, -38.0181, -21.2735, 0.29", "19.2872, -37.3877, -21.7575, 0.29", "19.7235, -37.0322, -22.054, 0.29", "20.5618, -36.4743, -22.6021, 0.44", "21.501, -35.9852, -23.2048, 0.59", "22.4956, -35.5814, -23.8794, 0.37", "23.3059, -35.953, -24.3035, 0.59", "23.7784, -36.3648, -24.5567, 0.59", "24.4566, -37.0635, -24.9634, 0.44", "25.1541, -37.8582, -25.4312, 1.03", "25.8453, -38.6845, -25.9374, 1.11", "26.7671, -39.7669, -26.6644, 0.44", "27.5425, -40.5455, -27.3003, 0.29", "28.2163, -41.0027, -27.8269, 0.29", "28.8748, -41.171, -28.2751, 0.74", "30.0651, -41.1209, -28.9925, 0.37", "30.9941, -40.861, -29.5735, 0.37", "31.7918, -40.434, -30.0799, 0.52", "32.7025, -39.8638, -30.6083, 0.37", "34.2041, -38.7975, -31.4237, 0.44", "34.9149, -38.2387, -31.7929, 0.66", "36.1308, -37.2071, -32.4149, 0.37", "37.1645, -36.2077, -33.109, 0.15", "45.6412, -33.3098, -37.5035, 0.15", "54.739, -31.993, -41.4287, 0.15", "63.6403, -30.271, -45.6295, 0.15" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "16.2832, -39.7905, -19.6984, 0.44", "16.2258, -38.4711, -20.6443, 0.44", "16.4131, -37.3604, -21.4627, 0.44", "16.7969, -36.5409, -22.263, 0.44", "17.3435, -35.9374, -23.0164, 0.44", "18.2207, -35.4561, -23.9344, 0.66", "18.7159, -35.2588, -24.3948, 0.66", "19.7428, -34.9386, -25.2285, 0.74", "21.0453, -34.7681, -26.1864, 0.52", "21.8059, -34.8252, -26.7768, 0.52", "22.771, -35.0967, -27.6555, 0.44", "23.3305, -35.437, -28.3653, 0.44", "23.5138, -35.8118, -29.0349, 0.44", "23.1575, -36.304, -29.7574, 0.44", "22.7504, -36.6235, -30.191, 0.44", "22.0994, -37.0214, -30.7411, 0.44", "21.1536, -37.4737, -31.381, 0.59", "20.034, -37.9371, -32.0487, 0.88", "19.2407, -38.2231, -32.4932, 0.52", "18.2859, -38.5132, -32.93, 0.74", "17.4795, -38.758, -33.2639, 0.74", "16.4451, -39.1031, -33.6671, 0.66", "15.1, -39.5933, -34.1998, 0.44", "14.5314, -39.8377, -34.4564, 0.29", "13.3402, -40.4826, -35.0598, 0.66", "12.5546, -41.0534, -35.556, 0.29", "12.0962, -41.5295, -35.9396, 0.66", "11.3565, -42.7735, -36.9145, 0.37", "11.0129, -43.7762, -37.6813, 0.37", "10.8317, -44.6458, -38.3385, 0.88", "10.6893, -45.4418, -38.9631, 1.11", "10.5707, -46.3879, -39.6825, 0.59", "10.5762, -47.7195, -40.6288, 0.37", "10.6636, -48.159, -40.8915, 0.52", "10.9237, -49.0094, -41.3154, 0.74", "11.3399, -50.3046, -41.88, 0.22", "9.74694, -55.3475, -50.289, 0.22", "7.49744, -58.9304, -59.3132, 0.22", "4.78223, -60.9424, -68.7137, 0.22", "2.5813, -61.223, -78.4642, 0.22", "-0.357757, -63.8523, -87.6343, 0.22", "-3.42975, -64.6823, -97.1126, 0.22", "-5.12824, -66.1556, -106.851, 0.22", "-7.34636, -69.6361, -115.925, 0.22", "-11.0181, -71.2932, -125.07, 0.22" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-22.2585, -78.693, -41.5306, 0.59", "-22.8889, -79.336, -41.8214, 0.59", "-24.1163, -80.12, -42.2534, 1.11", "-25.5909, -80.7387, -42.6226, 0.37", "-26.5151, -81.1265, -42.854, 0.44", "-27.4348, -81.5125, -43.0843, 0.44", "-29.1004, -82.2114, -43.5013, 0.44", "-30.2558, -82.4865, -43.7304, 0.44", "-31.464, -82.5523, -43.8775, 0.81", "-41.0602, -85.2158, -44.5485, 0.81", "-50.7109, -87.0872, -46.3315, 0.81", "-59.8594, -88.8235, -49.9557, 0.81", "-68.0645, -91.2982, -55.0776, 0.81", "-76.4932, -94.4844, -59.3528, 0.81", "-84.9672, -98.5027, -62.7003, 0.81", "-93.7273, -101.151, -66.6851, 0.81", "-103.443, -102.123, -68.8365, 0.81", "-113.254, -102.378, -70.7528, 0.81", "-122.679, -103.606, -73.8486, 0.81" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-22.2585, -78.693, -41.5306, 0.37", "-23.5889, -79.9514, -41.3357, 0.37", "-24.4153, -80.733, -41.2147, 0.74", "-25.1248, -81.4041, -41.1107, 0.44", "-25.4978, -81.7569, -41.0561, 0.44", "-33.3613, -87.5736, -39.4518, 0.44", "-40.893, -93.846, -38.078, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "1.86859, -75.4938, -4.23983, 0.74", "2.3587, -76.2973, -3.49198, 0.74", "2.89575, -77.0433, -2.84009, 0.59", "3.57991, -77.876, -2.14881, 0.37", "4.20596, -78.5287, -1.62186, 0.52", "4.78022, -79.0398, -1.21918, 0.96", "5.7312, -79.7965, -0.657928, 0.44", "6.74829, -80.5, -0.174244, 0.74", "7.44814, -80.9902, 0.0941443, 1.03", "8.20887, -81.5692, 0.359643, 0.88", "9.11285, -82.319, 0.646484, 0.88", "10.0064, -83.1132, 0.913127, 1.03", "11.1003, -84.1442, 1.22845, 0.52", "11.8423, -84.9273, 1.4447, 0.52", "12.4601, -85.688, 1.65395, 0.37", "12.8099, -86.2549, 1.80777, 0.37", "13.1812, -87.0962, 2.05301, 0.81", "13.4599, -88.0482, 2.37102, 0.44", "13.623, -88.8973, 2.66428, 0.66", "13.7177, -89.7958, 2.96938, 1.03", "13.7818, -91.2824, 3.47783, 1.18", "13.7909, -92.4714, 3.90456, 0.66", "13.7842, -93.8452, 4.39494, 0.74", "13.8091, -94.6661, 4.68384, 0.88", "13.9761, -95.8593, 5.09315, 0.44", "14.1856, -96.3627, 5.29046, 0.44", "14.6248, -96.8126, 5.50728, 0.44", "15.4585, -97.2964, 5.80915, 0.81", "16.5012, -97.6842, 6.17186, 1.03", "17.3094, -97.8879, 6.49176, 1.18", "18.7415, -98.148, 7.14967, 0.52", "20.1223, -98.3816, 7.91079, 0.96", "21.0813, -98.5753, 8.56223, 0.37", "21.7822, -98.7715, 9.17373, 0.52", "22.5511, -99.1141, 10.0154, 1.03", "23.096, -99.5293, 10.7651, 1.18", "23.5431, -100.204, 11.6021, 0.74", "23.859, -101.1, 12.3663, 0.22", "24.066, -101.911, 12.8947, 0.88", "24.3174, -102.979, 13.4568, 0.59", "24.526, -103.89, 13.8547, 1.62", "24.7367, -104.821, 14.2107, 1.4", "25.0219, -106.115, 14.6655, 0.37", "25.2586, -107.312, 15.1002, 0.37", "25.3009, -107.651, 15.2291, 0.37", "25.3019, -107.956, 15.3793, 0.37", "25.2367, -108.5, 15.6757, 0.37", "25.1036, -109.142, 15.9534, 0.37", "24.9623, -109.817, 16.2094, 0.37", "24.822, -110.734, 16.5591, 0.66", "24.7579, -111.407, 16.8473, 1.33", "24.7386, -112.005, 17.1481, 1.84", "24.8218, -113.372, 17.9828, 0.59", "24.9685, -114.26, 18.6489, 0.22", "25.1332, -114.849, 19.1809, 0.66", "25.4528, -115.645, 20.0059, 0.74", "25.787, -116.308, 20.7366, 0.52", "26.1404, -116.886, 21.3749, 0.22", "26.4415, -117.308, 21.8088, 0.22", "26.7271, -117.719, 22.1341, 0.22", "27.1092, -118.328, 22.51, 0.96", "27.5139, -119.102, 22.8998, 1.47", "27.798, -119.911, 23.2551, 0.66", "27.9787, -120.576, 23.5163, 0.37", "28.1065, -121.223, 23.7724, 0.37", "28.1864, -121.935, 24.083, 0.37", "28.1867, -122.869, 24.5626, 0.59", "28.0431, -123.79, 25.1189, 1.11" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "1.86859, -75.4938, -4.23983, 0.22", "1.64591, -76.5064, -4.16474, 0.22", "1.6027, -77.5023, -4.08591, 0.37", "1.7114, -78.309, -4.04586, 0.37", "2.12531, -79.7259, -4.10497, 0.66", "2.58057, -80.8516, -4.28986, 0.44", "3.07777, -81.9452, -4.60958, 0.74", "3.58349, -82.8797, -5.02981, 0.74", "4.12706, -83.8474, -5.62586, 0.52", "4.6579, -84.821, -6.33294, 0.66", "5.16634, -85.7453, -7.04749, 1.11", "5.68306, -86.7109, -7.75387, 1.33", "6.28276, -87.9522, -8.53053, 0.81", "6.78039, -89.1002, -9.0989, 0.59", "7.22275, -90.2374, -9.47652, 0.88", "7.60816, -91.2632, -9.67495, 0.59", "8.03929, -92.5442, -9.84441, 0.88", "8.37621, -93.7879, -9.99377, 0.44", "8.58367, -94.8785, -10.1398, 0.81", "8.65814, -95.9696, -10.3827, 0.66", "8.5843, -96.9367, -10.7763, 0.52", "8.29708, -98.2765, -11.587, 0.74", "7.94843, -99.1893, -12.3374, 0.52", "7.61135, -99.7091, -12.8847, 1.11", "6.98931, -100.361, -13.6966, 1.4", "6.07331, -101.089, -14.6942, 1.62", "5.01464, -101.804, -15.6197, 1.33", "3.67135, -102.667, -16.5214, 0.66", "2.10818, -103.671, -17.2636, 0.44", "1.0531, -104.402, -17.5353, 0.66", "0.180505, -105.164, -17.4919, 0.44", "-0.744972, -106.309, -17.1285, 1.55", "-1.36109, -107.461, -16.6373, 0.44", "-1.63787, -108.259, -16.2963, 0.44", "-1.85438, -109.229, -15.9072, 0.66", "-2.11615, -110.669, -15.336, 0.81", "-2.3628, -112.046, -14.793, 0.96", "-2.66685, -113.425, -14.2491, 1.4", "-3.07261, -114.965, -13.6382, 0.74", "-3.40962, -116.061, -13.2365, 0.52", "-3.88136, -117.462, -12.7735, 1.25", "-4.21592, -118.36, -12.5118, 1.03", "-4.78442, -119.812, -12.1964, 0.59", "-5.24532, -121.079, -12.0737, 0.81", "-5.60672, -122.283, -12.1759, 0.59", "-5.86121, -123.316, -12.4476, 1.33", "-5.99609, -124.003, -12.7506, 1.03", "-6.19282, -125.161, -13.4505, 0.59", "-6.33398, -126.324, -14.3915, 0.52", "-6.4055, -127.356, -15.5193, 0.52", "-6.41239, -127.809, -16.2265, 0.81", "-6.35886, -128.226, -17.3129, 0.81", "-6.24361, -128.262, -18.1253, 0.81", "-6.02758, -127.962, -19.1353, 0.81", "-5.73458, -127.318, -20.4277, 0.81", "-5.54475, -126.816, -21.2762, 0.81", "-5.32152, -126.096, -22.5007, 0.59", "-5.25412, -125.55, -23.4536, 0.59", "-5.36148, -125.378, -23.9395, 0.81", "-6.04392, -125.49, -24.9252, 0.81", "-6.46238, -125.724, -25.3411, 1.11", "-7.1147, -126.27, -25.8401, 1.25", "-8.012, -127.172, -26.3721, 0.74", "-8.62796, -127.878, -26.6754, 0.44", "-9.32845, -128.747, -26.9981, 0.44", "-9.90655, -129.51, -27.2271, 0.44", "-10.7937, -130.753, -27.552, 0.74", "-11.4737, -131.79, -27.7826, 1.18", "-12.0992, -132.832, -28.0083, 1.03", "-12.4224, -133.306, -28.1024, 1.03" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-13.4846, -39.0865, 3.1509, 0.88", "-12.6338, -39.8203, 2.97321, 0.88", "-11.8714, -40.4128, 2.76416, 0.74", "-11.179, -40.9508, 2.57429, 0.74", "-10.3794, -41.5723, 2.35501, 0.81", "-9.45441, -42.2911, 2.10135, 0.96", "-8.82711, -42.7786, 1.92933, 1.33", "-7.95688, -43.4867, 1.65313, 1.77" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-13.4846, -39.0865, 3.1509, 1.7", "-13.7205, -40.5664, 3.75284, 1.7", "-13.9125, -41.5183, 4.14152, 1.47", "-14.4245, -43.2891, 4.91411, 1.33", "-15.0115, -44.6129, 5.59599, 1.11", "-15.6837, -45.7697, 6.26534, 1.18", "-16.3733, -46.6604, 6.84701, 1.55", "-17.0599, -47.2733, 7.32448, 1.4", "-18.2548, -47.9625, 7.9089, 1.18", "-20.2481, -48.7317, 8.48723, 1.18", "-21.0336, -49.009, 8.59323, 1.18", "-22.5171, -49.6422, 8.59157, 1.18", "-23.4164, -50.1848, 8.49125, 1.33", "-24.6561, -51.2931, 8.27216, 1.4", "-25.4964, -52.3247, 8.09884, 1.7", "-26.4561, -53.7401, 7.89701, 1.4", "-27.505, -55.3583, 7.70129, 1.03", "-28.3462, -56.6707, 7.55723, 1.55", "-29.365, -58.1398, 7.4369, 1.25", "-30.3722, -59.451, 7.34014, 1.25", "-31.3925, -60.6262, 7.19472, 0.96", "-32.4248, -61.6938, 6.96637, 1.4", "-33.4175, -62.6415, 6.63585, 1.55", "-34.2217, -63.4267, 6.26703, 1.47", "-35.415, -64.721, 5.54049, 1.84", "-36.1879, -65.7768, 4.91543, 1.55", "-36.8914, -67.124, 4.19596, 1.25", "-37.3366, -68.4805, 3.60672, 1.55", "-37.5788, -69.9386, 3.15811, 1.33", "-37.6529, -71.5398, 2.89341, 0.96", "-37.6371, -73.1942, 2.89955, 1.11", "-37.622, -74.6249, 3.0778, 1.18", "-37.6563, -76.0627, 3.3988, 1.4", "-37.79, -77.7807, 3.8485, 1.55", "-38.0391, -79.3132, 4.23397, 1.55", "-38.5479, -81.2725, 4.63849, 1.33", "-39.0514, -82.6236, 4.79309, 1.25", "-39.6644, -83.9003, 4.77314, 1.47", "-40.3337, -85.1583, 4.6432, 1.4", "-41.0199, -86.3553, 4.39415, 1.4", "-41.5681, -87.2612, 4.10613, 1.03", "-42.1021, -88.1025, 3.72452, 1.11", "-43.2037, -89.6898, 2.8488, 1.25" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "26.2816, -34.2064, -5.17932, 2.21", "26.0578, -35.4634, -3.89871, 2.21", "25.8252, -36.7693, -2.56829, 2.21" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "26.2816, -34.2064, -5.17932, 0.74", "26.766, -36.2991, -5.50168, 0.74", "27.2174, -37.7316, -5.82758, 0.81", "27.5994, -38.6914, -6.14767, 0.59", "28.0961, -39.654, -6.61164, 0.88", "28.7145, -40.6885, -7.26233, 0.88", "29.1351, -41.384, -7.76596, 0.52", "29.6024, -42.0709, -8.46765, 0.96", "30.0328, -42.7465, -9.29069, 1.18", "30.4694, -43.6161, -10.3799, 1.4", "30.6899, -44.3108, -11.2448, 1.03", "30.8207, -45.3378, -12.4582, 0.88", "30.7781, -46.2428, -13.4961, 1.03", "30.6539, -46.8033, -14.1375, 1.03", "30.3146, -47.5468, -15.0446, 0.74", "29.8083, -48.2142, -15.9233, 1.03", "29.3149, -48.6775, -16.5826, 1.25", "28.6462, -49.2163, -17.3738, 1.11", "27.8845, -49.8634, -18.254, 0.96", "27.0755, -50.6309, -19.1929, 1.18", "26.4711, -51.2963, -19.9107, 1.4", "25.6822, -52.5882, -21.0027, 0.88", "25.5857, -53.3767, -21.5231, 0.88", "25.9811, -54.2976, -22.0938, 0.74", "26.7238, -55.2629, -22.7153, 0.66", "27.3758, -55.9831, -23.1847, 0.66", "28.0203, -56.6645, -23.6104, 1.11", "28.8533, -57.5321, -24.1675, 1.47", "29.6518, -58.5445, -24.8396, 0.96", "30.2136, -59.5321, -25.4908, 1.18", "30.6672, -60.7074, -26.237, 0.81", "30.9583, -61.8607, -26.8788, 1.25", "31.0612, -62.7118, -27.2878, 1.77", "31.0278, -64.0936, -27.8662, 2.06", "30.8388, -65.4517, -28.4145, 0.59", "30.7118, -66.1217, -28.702, 0.81", "30.6023, -66.6672, -28.9506, 0.59", "30.3798, -67.6539, -29.4297, 1.25", "29.9554, -69.0945, -30.0742, 0.66", "29.5701, -70.2244, -30.5243, 0.88", "29.1415, -71.4103, -30.9345, 0.88", "28.6818, -72.774, -31.2978, 0.74", "28.3256, -73.8428, -31.5065, 0.74", "27.7393, -75.6115, -31.7182, 0.66", "27.4058, -76.5865, -31.7585, 1.11", "26.8204, -78.1647, -31.721, 1.47", "26.1723, -79.8058, -31.594, 0.44", "25.7286, -80.974, -31.4613, 0.66", "25.2984, -82.2152, -31.2839, 0.44", "25.1336, -82.7599, -31.209, 0.44", "24.8354, -83.6627, -31.1097, 0.88", "24.5437, -84.4035, -31.0597, 0.66", "24.2291, -85.0817, -31.107, 0.44", "23.169, -94.2021, -34.4796, 0.44" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "51.701, -36.0066, 15.5413, 0.22", "52.5601, -36.7432, 15.4969, 0.22", "53.163, -37.1773, 15.4923, 0.37", "54.0827, -37.7607, 15.5058, 0.44", "54.9463, -38.3064, 15.5266, 0.22", "55.8519, -38.8763, 15.5746, 0.66", "56.5843, -39.3327, 15.6045, 0.81", "57.3998, -39.8077, 15.6248, 1.11", "58.4628, -40.3392, 15.6046, 0.66", "59.4155, -40.7393, 15.5759, 0.66", "60.1855, -41.0136, 15.5412, 0.29", "61.0481, -41.2941, 15.5173, 0.22", "61.7937, -41.5285, 15.5438, 0.44", "62.7486, -41.8638, 15.6952, 0.22", "63.3137, -42.089, 15.8588, 0.22", "64.2829, -42.5936, 16.24, 0.81", "65.2104, -43.2268, 16.6834, 0.74", "66.1216, -43.9423, 17.1671, 0.37", "67.101, -44.7322, 17.7404, 0.81", "67.6785, -45.1813, 18.1055, 0.81", "68.6919, -45.888, 18.7566, 0.52", "69.4182, -46.2959, 19.2612, 0.74", "70.4091, -46.5638, 19.9948, 0.37", "71.4337, -46.3417, 20.7951, 0.52", "72.1824, -45.8731, 21.4437, 1.03", "72.6949, -45.3645, 21.9638, 1.7", "73.1779, -44.6371, 22.5942, 1.55", "73.5664, -43.6573, 23.3681, 0.81", "73.7588, -42.6004, 24.1657, 0.29", "73.7889, -42.0945, 24.5231, 0.29", "73.7921, -41.3154, 25.0405, 0.96", "73.777, -40.4656, 25.6028, 1.4", "73.7537, -39.4457, 26.2827, 0.52", "73.7453, -38.9106, 26.6517, 0.52", "73.8187, -37.9947, 27.3144, 0.37", "74.0408, -36.9486, 28.0586, 0.22", "74.3043, -36.1617, 28.6517, 0.66", "74.6039, -35.4771, 29.2234, 1.18", "74.9469, -34.7432, 29.919, 0.29", "75.2936, -33.9366, 30.7864, 0.29", "75.4323, -33.5588, 31.2629, 1.11", "75.6584, -32.8518, 32.2717, 1.77", "75.8049, -32.3605, 33.0514, 1.77", "76.0751, -31.5556, 34.5226, 0.29", "76.3374, -30.8456, 35.9881, 0.96", "76.6048, -30.1349, 37.558, 0.96", "76.7993, -29.6385, 38.6566, 1.11", "77.0197, -29.0495, 39.8182, 1.11", "77.3013, -28.2885, 41.161, 0.59", "77.5749, -27.6072, 42.2291, 0.59", "77.8107, -26.9992, 43.0314, 0.59", "78.0601, -26.3781, 43.6613, 1.11", "78.678, -24.9706, 44.7392, 0.22", "79.0524, -24.1154, 45.1778, 0.22", "79.3988, -23.2854, 45.4285, 0.96", "79.6307, -22.738, 45.5071, 1.4", "80.2263, -21.4086, 45.5408, 0.29", "80.6941, -20.4151, 45.537, 1.03", "81.2296, -19.2366, 45.493, 0.22", "81.5763, -18.2814, 45.4213, 0.66", "81.9378, -16.9093, 45.3164, 0.15", "82.0405, -16.3179, 45.2785, 0.15", "82.1601, -14.9553, 45.1918, 0.22", "82.1828, -14.2131, 45.1885, 0.22", "82.1943, -13.5482, 45.2729, 0.22", "82.2001, -12.9009, 45.4213, 1.11", "82.1656, -11.8732, 45.7099, 1.62" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "51.701, -36.0066, 15.5413, 0.44", "52.7054, -37.1532, 15.7992, 0.44", "53.3721, -38.0192, 16.1034, 0.44", "54.0486, -38.9837, 16.4906, 0.44", "54.8409, -40.2001, 17.0089, 0.37", "55.423, -41.2062, 17.4319, 0.59", "55.979, -42.3112, 17.8242, 0.59", "56.4307, -43.4291, 18.2092, 0.37", "56.574, -43.8741, 18.3328, 0.81", "56.7348, -44.4059, 18.4263, 1.33", "57.0666, -45.3744, 18.4419, 1.03", "57.6731, -46.7077, 18.2528, 0.29", "58.1142, -47.4093, 18.0836, 0.29", "58.8542, -48.3133, 17.8526, 1.03", "59.6433, -49.1155, 17.7024, 0.52", "60.5327, -49.8574, 17.6639, 0.74", "61.4166, -50.4889, 17.7581, 1.03", "62.5599, -51.2897, 18.0739, 0.59", "63.3946, -51.9794, 18.4591, 0.59", "64.0358, -52.7052, 18.9665, 0.59", "64.5847, -53.6124, 19.6763, 0.59", "64.8613, -54.2415, 20.2179, 0.44", "65.1674, -55.1489, 21.0338, 0.66", "65.477, -56.1806, 22.0044, 0.88", "65.7338, -57.0013, 22.7534, 0.44", "66.0619, -57.7466, 23.4359, 0.29", "66.2962, -58.0185, 23.7451, 0.29", "66.9427, -58.0591, 24.2227, 0.29", "67.9602, -57.8358, 24.8575, 0.81", "68.7867, -57.5725, 25.3269, 1.4", "70.2617, -57.0462, 26.118, 0.29", "71.1542, -56.7437, 26.5963, 0.29", "71.7393, -56.6017, 26.9355, 0.29", "72.3062, -56.5876, 27.3332, 0.29", "72.7834, -56.8025, 27.7624, 0.88", "73.407, -57.2925, 28.4016, 0.88", "74.056, -57.9212, 29.0636, 0.22", "74.3851, -58.2318, 29.3833, 0.22", "74.9671, -58.6738, 29.9013, 0.22", "75.3847, -58.897, 30.2487, 0.59", "76.3544, -59.2228, 31.0574, 0.88", "77.0487, -59.3771, 31.6408, 0.88", "77.9923, -59.5642, 32.4697, 0.52", "78.719, -59.7502, 33.1658, 0.22", "79.3231, -59.9932, 33.826, 0.66", "79.8882, -60.3468, 34.5958, 1.03", "80.3316, -60.9593, 35.5473, 0.29", "80.3184, -61.5017, 36.0497, 0.29", "80.1109, -62.2084, 36.5451, 0.29", "79.7953, -63.1804, 37.154, 0.29", "79.5541, -63.9968, 37.6552, 0.96", "79.42, -64.6497, 38.0462, 0.88", "79.4107, -65.5275, 38.6289, 0.37", "79.6653, -66.27, 39.2446, 0.37", "80.0251, -66.8454, 39.7579, 0.59", "80.6242, -67.5513, 40.3373, 1.25", "81.6141, -68.5111, 41.0461, 0.44", "82.2652, -69.0457, 41.4282, 0.29", "82.8977, -69.4973, 41.7455, 0.29", "83.8154, -70.0822, 42.1849, 0.22", "84.7199, -70.6262, 42.6345, 0.22", "85.3823, -70.9616, 42.9969, 0.29", "86.0933, -71.2515, 43.4483, 0.66", "86.7564, -71.4528, 43.8679, 0.44", "87.9409, -71.6911, 44.5913, 1.03", "88.7218, -71.7687, 45.0746, 1.11", "90.3239, -71.8138, 46.1038, 0.22", "91.1261, -71.8046, 46.6164, 0.74", "91.5686, -71.7827, 46.8915, 0.74", "92.2919, -71.7205, 47.3073, 0.22", "92.9149, -71.6305, 47.647, 0.22", "93.4965, -71.5119, 47.9254, 0.22", "94.2432, -71.3641, 48.1784, 0.81", "94.8733, -71.2521, 48.3279, 1.25", "96.6544, -70.9127, 48.6719, 0.44", "97.3061, -70.7761, 48.7713, 0.81", "98.251, -70.5805, 48.8689, 0.96", "99.9103, -70.2623, 48.95, 0.81", "101.372, -70.0013, 48.9213, 0.29", "102.262, -69.8488, 48.8558, 0.29", "102.908, -69.7501, 48.7738, 0.96", "104.004, -69.6427, 48.6331, 0.22", "104.888, -69.6194, 48.5451, 0.22", "105.676, -69.6947, 48.514, 0.22", "106.888, -70.0364, 48.6134, 0.81", "107.973, -70.5755, 48.9152, 0.22", "108.488, -70.9346, 49.1801, 0.59", "108.979, -71.3654, 49.6144, 1.25", "109.83, -72.1948, 50.7556, 0.52", "110.408, -72.8469, 51.8608, 0.29", "110.807, -73.4068, 52.8821, 0.29", "110.885, -73.534, 53.1258, 0.29", "111.121, -73.9388, 53.8724, 0.29", "111.473, -74.4446, 54.83, 0.29", "111.838, -74.7709, 55.4884, 0.29", "112.399, -75.1127, 56.2126, 0.52", "112.843, -75.3413, 56.6464, 0.66", "113.654, -75.8385, 57.2944, 0.29", "114.299, -76.3144, 57.6615, 0.29", "115.143, -76.8761, 58.0383, 0.44", "115.769, -77.1863, 58.3263, 0.22", "116.564, -77.4658, 58.7777, 0.22", "117.467, -77.7017, 59.358, 0.37", "118.347, -77.8367, 59.9863, 0.22", "119.708, -77.9351, 61.0777, 0.88", "120.854, -77.8791, 62.1208, 0.29", "121.846, -77.701, 63.0946, 0.59", "122.257, -77.5821, 63.5302, 0.66", "123.098, -77.2656, 64.4961, 0.22", "123.694, -76.9994, 65.2761, 0.22", "124.419, -76.6319, 66.4218, 0.81", "124.951, -76.2996, 67.5191, 0.66", "125.203, -76.1092, 68.3253, 0.44", "125.409, -75.9797, 69.6035, 0.44", "125.427, -76.0492, 70.3447, 0.44", "125.384, -76.4294, 71.6298, 0.44", "125.301, -76.8002, 72.3753, 0.44", "125.168, -77.2106, 73.062, 0.44", "124.973, -77.7434, 73.8671, 0.96", "124.824, -78.2606, 74.5671, 0.74", "124.725, -78.882, 75.4045, 0.44", "124.72, -79.6692, 76.512, 0.29", "124.76, -80.2942, 77.4486, 0.29", "124.8, -80.8361, 78.4279, 0.81", "124.803, -81.3387, 79.5864, 0.52", "124.752, -81.669, 80.5216, 0.52", "124.692, -81.9159, 81.2463, 0.52", "124.653, -82.1086, 81.7071, 0.52", "124.477, -82.6502, 82.5805, 0.52", "124.379, -82.8799, 82.8594, 0.52", "124.001, -83.6281, 83.6354, 0.52", "123.592, -84.3686, 84.2698, 0.29", "122.925, -85.555, 85.1343, 0.37", "122.144, -87.0205, 86.0421, 0.96", "121.494, -88.259, 86.7176, 0.29", "121.205, -88.7906, 86.9953, 0.29", "120.591, -89.8335, 87.5109, 0.22", "119.844, -90.9342, 88.0285, 0.44", "119.373, -91.5569, 88.2836, 0.22", "118.925, -92.0851, 88.4696, 0.22", "118.423, -92.6257, 88.6477, 0.22", "117.81, -93.3063, 88.9256, 0.81", "116.911, -94.3115, 89.4556, 1.25", "116.56, -94.7116, 89.7009, 1.03", "115.575, -95.9029, 90.5018, 1.7", "114.569, -97.1997, 91.3864, 1.55", "113.318, -98.9029, 92.5889, 0.07", "112.675, -99.8046, 93.289, 0.07", "112.313, -100.31, 93.7334, 0.37", "112.113, -100.595, 94.0044, 0.37" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_156",
    "id" : "dend_156",
    "points3d" : [ "-45.4309, -51.1174, 36.173, 1.03", "-45.9633, -51.6229, 37.507, 1.03", "-46.2396, -52.2135, 38.8356, 0.59", "-46.3426, -52.9664, 40.2111, 0.81", "-46.4125, -53.4821, 41.072, 0.59", "-46.586, -54.1393, 42.146, 0.74", "-46.8008, -54.677, 43.0073, 0.52", "-47.0018, -55.3032, 43.8529, 0.44", "-47.2331, -56.0548, 44.7145, 0.66", "-47.5097, -56.6661, 45.4458, 0.81", "-48.0361, -57.3842, 46.4712, 0.52", "-48.8637, -58.1103, 47.6898, 1.4", "-49.7446, -58.6645, 48.7097, 0.88", "-50.5014, -59.0572, 49.4367, 0.74", "-51.6106, -59.6034, 50.3625, 0.59", "-52.5128, -60.0433, 51.0392, 0.37", "-53.443, -60.4033, 51.6048, 0.88", "-54.7645, -60.7638, 52.2764, 0.37", "-56.1628, -61.0569, 52.9428, 0.74", "-57.3052, -61.3114, 53.4684, 1.25", "-58.4914, -61.6691, 53.9961, 1.47", "-60.2559, -62.3161, 54.8472, 0.59", "-61.0969, -62.6236, 55.2956, 0.44", "-62.1181, -62.9279, 55.8981, 0.44", "-63.0936, -63.0738, 56.4992, 0.74", "-63.9502, -63.0837, 57.0321, 0.44", "-64.9437, -63.0108, 57.6282, 0.44", "-65.7862, -62.8924, 58.1257, 0.74", "-66.5841, -62.7317, 58.5893, 1.03", "-67.8645, -62.3733, 59.3199, 0.44", "-68.6342, -62.1708, 59.7591, 0.22", "-68.9057, -62.1438, 59.8937, 0.22", "-69.3451, -62.2372, 60.0431, 0.22", "-70.3217, -62.7631, 60.2318, 0.22", "-70.8015, -63.0947, 60.2692, 0.81", "-71.847, -63.867, 60.3273, 1.33", "-73.0931, -64.737, 60.4805, 0.81", "-74.2069, -65.4954, 60.5986, 0.52", "-75.6649, -66.4509, 60.7292, 0.96", "-77.2287, -67.4469, 60.8317, 0.52", "-78.3476, -68.1624, 60.9207, 0.74", "-80.1611, -69.3503, 61.1101, 1.92" ],
    "parent" : "dend_150",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_151",
    "id" : "dend_151",
    "points3d" : [ "-45.4309, -51.1174, 36.173, 0.81", "-45.4257, -52.2023, 35.4878, 0.81", "-45.1339, -53.4704, 34.9031, 0.59", "-44.7152, -54.548, 34.5818, 0.66", "-44.2959, -55.6265, 34.3704, 0.66", "-44.0177, -56.457, 34.2588, 0.66", "-43.6538, -57.8963, 34.1238, 0.59", "-43.3899, -59.3717, 34.1242, 0.81", "-43.2825, -60.4869, 34.194, 1.47", "-43.3331, -62.1187, 34.3486, 1.47", "-43.6535, -63.6526, 34.4972, 1.25", "-44.4168, -65.4552, 34.7027, 1.03", "-45.3427, -66.8782, 34.8848, 0.74", "-46.0423, -67.7089, 34.9903, 0.59", "-47.1972, -68.8979, 35.2122, 0.59", "-47.9153, -69.6093, 35.3772, 0.59", "-48.9024, -70.6577, 35.6624, 0.96", "-50.0171, -72.0674, 36.0622, 1.47", "-50.8767, -73.5321, 36.4445, 0.59", "-51.3932, -74.7925, 36.7352, 1.18", "-51.7657, -76.0588, 36.9845, 0.88", "-52.1257, -77.5216, 37.2146, 0.59", "-52.4045, -78.701, 37.3415, 0.96", "-52.6793, -79.7562, 37.4039, 0.96", "-53.1533, -81.1126, 37.3872, 0.74", "-53.6317, -82.1181, 37.2705, 0.52", "-54.0485, -82.8723, 37.1136, 0.37", "-54.5334, -83.8272, 36.8461, 0.37", "-54.7727, -84.565, 36.6518, 0.37", "-54.9527, -85.3606, 36.4375, 1.03", "-55.2558, -86.7304, 36.0851, 1.7", "-55.6042, -88.2391, 35.7034, 1.03", "-55.9874, -89.7302, 35.3545, 1.47", "-56.6701, -91.973, 34.8193, 0.52", "-57.0612, -93.074, 34.5557, 0.52", "-57.7866, -94.8299, 34.1362, 0.74", "-58.3135, -95.9247, 33.878, 1.55", "-59.0597, -97.3116, 33.5356, 1.92", "-60.1088, -99.1376, 33.0075, 0.66", "-60.6418, -100.101, 32.702, 0.96", "-61.1273, -101.114, 32.3857, 1.33", "-61.5273, -102.033, 32.0636, 1.7", "-62.2005, -103.475, 31.4666, 0.88", "-62.6689, -104.318, 30.9995, 0.88", "-63.5127, -105.459, 30.1021, 0.44", "-63.9084, -105.893, 29.6498, 0.74", "-64.5398, -106.531, 28.8943, 0.59", "-65.4022, -107.375, 27.8873, 0.66", "-65.9065, -107.839, 27.3614, 0.66", "-66.7149, -108.534, 26.595, 0.74", "-67.9464, -109.5, 25.5402, 1.4", "-68.9381, -110.3, 24.769, 0.52", "-69.5875, -110.839, 24.3091, 0.52", "-70.7305, -111.758, 23.6082, 0.66", "-71.5183, -112.331, 23.2202, 0.88", "-72.8835, -113.249, 22.6537, 1.77", "-74.4947, -114.337, 22.0789, 0.52", "-75.4513, -115.067, 21.7503, 1.25", "-76.6246, -116.207, 21.3199, 1.18", "-77.7926, -117.639, 20.8505, 0.52", "-78.5806, -118.766, 20.498, 1.33", "-79.3318, -119.945, 20.132, 1.62", "-80.0523, -121.073, 19.7652, 1.33", "-81.2226, -122.813, 19.1328, 0.52", "-81.7391, -123.47, 18.8358, 0.52", "-82.4481, -124.096, 18.4902, 0.52", "-83.3212, -124.645, 18.1643, 0.74", "-84.5133, -125.307, 17.7643, 0.44", "-85.2637, -125.742, 17.5186, 1.03", "-86.2146, -126.447, 17.1977, 1.18", "-87.3768, -127.809, 16.7346, 0.44", "-87.9243, -128.662, 16.457, 0.44", "-88.5872, -129.835, 16.036, 0.88", "-89.2734, -131.056, 15.5502, 1.25", "-90.0768, -132.301, 14.9814, 1.25", "-91.1517, -133.762, 14.2191, 0.66", "-92.1499, -134.929, 13.5489, 0.66", "-93.1275, -135.904, 12.9487, 1.25", "-94.1951, -136.866, 12.3253, 1.47", "-95.2847, -137.863, 11.7058, 0.52", "-95.8859, -138.457, 11.3786, 0.52", "-96.262, -138.943, 11.2314, 0.52", "-96.8128, -139.961, 11.2735, 0.74", "-97.3157, -141.006, 11.4949, 1.03", "-98.0261, -142.514, 11.9247, 0.44", "-98.7448, -143.91, 12.3088, 0.59", "-99.6772, -145.338, 12.5757, 0.81", "-100.67, -146.416, 12.5497, 0.59", "-101.886, -147.294, 12.2766, 1.33", "-102.5, -147.604, 12.023, 1.33", "-103.772, -148.129, 11.3072, 0.96", "-105.121, -148.713, 10.3274, 0.96", "-106.124, -149.242, 9.47773, 1.4", "-107.089, -149.895, 8.64765, 0.52", "-108.122, -150.831, 7.89838, 0.37", "-108.604, -151.395, 7.65748, 0.66", "-109.27, -152.282, 7.45303, 0.81", "-110.361, -153.842, 7.21125, 0.59", "-111.113, -154.938, 7.028, 0.96", "-111.892, -155.945, 6.80592, 1.18", "-113.044, -157.112, 6.44754, 0.88", "-114.601, -158.194, 5.91935, 0.66", "-115.158, -158.467, 5.7481, 0.81", "-116.192, -158.853, 5.47392, 0.81", "-117.791, -159.393, 5.10188, 1.25", "-119.17, -159.889, 4.84434, 0.74", "-120.662, -160.543, 4.59673, 1.11", "-122.33, -161.535, 4.34489, 1.4", "-123.467, -162.508, 4.10406, 0.66", "-123.956, -163.171, 3.88117, 0.59", "-124.58, -164.371, 3.36601, 1.03", "-125.166, -165.562, 2.77144, 0.96", "-125.646, -166.455, 2.22151, 1.25", "-126.317, -167.445, 1.49382, 1.4", "-127.349, -168.547, 0.601694, 0.81", "-128.623, -169.56, -0.214298, 0.88", "-130.02, -170.52, -0.889503, 0.88", "-131.041, -171.243, -1.29107, 0.66", "-131.808, -171.86, -1.55241, 0.66", "-132.352, -172.455, -1.74606, 0.66", "-132.974, -173.682, -2.09694, 0.66", "-133.307, -175.046, -2.49451, 0.74", "-133.542, -176.564, -2.92357, 0.81", "-133.733, -177.808, -3.26921, 0.81", "-134.073, -179.451, -3.71346, 0.59", "-134.492, -180.749, -4.05545, 0.59", "-135.172, -181.977, -4.39224, 0.81", "-135.894, -182.761, -4.63627, 0.81", "-136.994, -183.544, -4.89847, 0.74", "-138.159, -184.13, -5.11067, 0.96", "-139.449, -184.636, -5.33847, 1.4", "-140.521, -185.032, -5.54281, 0.52", "-141.075, -185.263, -5.69817, 0.81", "-141.66, -185.616, -5.9655, 0.59", "-142.22, -186.147, -6.38128, 0.74", "-143.129, -187.322, -7.18921, 0.88", "-143.686, -188.162, -7.70804, 0.74", "-144.435, -189.326, -8.33874, 0.96", "-145.202, -190.409, -8.85341, 1.25", "-146.036, -191.373, -9.31174, 1.03", "-147.053, -192.264, -9.76691, 0.81", "-147.604, -192.633, -9.96469, 1.03", "-148.311, -193.079, -10.2169, 0.66", "-149.358, -193.786, -10.5115, 0.66", "-150.783, -194.857, -10.8958, 1.11", "-151.689, -195.633, -11.234, 1.11", "-152.813, -196.761, -11.8401, 0.66", "-153.841, -198.059, -12.5995, 0.59", "-154.739, -199.339, -13.364, 0.74", "-155.296, -200.275, -13.9128, 0.96", "-156.036, -201.785, -14.6777, 0.96", "-156.446, -202.774, -15.1619, 1.18", "-156.925, -204.141, -15.9376, 1.55" ],
    "parent" : "dend_150",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_117",
    "id" : "dend_117",
    "points3d" : [ "-41.1214, -6.73696, 21.5817, 0.81", "-41.9589, -7.30597, 22.4249, 0.81", "-42.57, -7.90724, 23.0157, 0.81", "-43.177, -8.64344, 23.5678, 0.96", "-43.7399, -9.356, 23.9723, 1.33", "-44.2943, -10.031, 24.28, 1.47", "-45.5071, -11.4018, 24.7884, 0.96", "-46.6212, -12.5828, 25.1111, 1.33", "-47.3831, -13.3027, 25.2342, 1.25", "-48.5413, -14.2632, 25.3115, 1.47", "-49.6126, -15.0579, 25.3132, 1.33", "-51.0346, -16.0105, 25.2932, 1.7", "-52.4143, -16.8568, 25.3256, 1.33", "-53.5162, -17.5167, 25.4052, 1.33", "-54.8073, -18.2816, 25.5311, 0.88", "-56.31, -19.1455, 25.6845, 0.96", "-57.7877, -19.9402, 25.777, 1.25", "-59.4171, -20.754, 25.7802, 1.33", "-60.4721, -21.2808, 25.7156, 1.33", "-61.6356, -21.8828, 25.5512, 1.62", "-63.2504, -22.7836, 25.1698, 1.33", "-64.5775, -23.6884, 24.6919, 1.03", "-65.5336, -24.6621, 24.1289, 0.88", "-66.0955, -25.6975, 23.5534, 0.96", "-66.4311, -26.96, 22.9359, 1.03", "-66.6108, -28.3625, 22.2975, 1.18", "-66.7362, -30.3604, 21.4656, 1.25", "-66.834, -31.8618, 20.8682, 1.25", "-66.9865, -33.1939, 20.3615, 1.11", "-67.3147, -34.4892, 19.8853, 1.11", "-67.8565, -35.3554, 19.6343, 1.11", "-68.7783, -35.862, 19.6263, 1.11", "-70.2935, -36.2128, 19.8743, 1.03", "-71.8139, -36.4063, 20.2038, 0.96", "-73.1538, -36.5102, 20.481, 1.11", "-74.8769, -36.5817, 20.783, 1.33", "-76.5072, -36.6351, 20.9462, 1.47", "-78.1085, -36.7038, 20.8505, 1.18", "-79.4083, -36.8123, 20.5656, 0.74", "-80.817, -37.0282, 19.9669, 0.74", "-81.8328, -37.2788, 19.3389, 0.96", "-82.8646, -37.6599, 18.5077, 1.11", "-84.2714, -38.333, 17.2955, 1.55", "-85.2819, -38.9051, 16.4561, 2.36", "-86.4243, -39.6709, 15.6775, 1.84", "-87.6384, -40.6324, 15.055, 1.55", "-88.8175, -41.7212, 14.5985, 1.25", "-90.0064, -42.9018, 14.2701, 1.33", "-90.9103, -43.8479, 14.1167, 1.47", "-92.141, -45.1516, 13.9416, 0.96", "-93.4776, -46.5306, 13.809, 0.81", "-94.6753, -47.7599, 13.6647, 1.03", "-95.6464, -48.7816, 13.44, 1.4", "-96.4508, -49.6991, 13.0684, 1.4", "-97.0343, -50.4123, 12.6277, 1.4", "-97.8646, -51.4698, 11.7576, 1.03", "-98.6387, -52.5007, 10.7931, 1.18", "-99.4431, -53.6237, 9.71635, 1.55", "-100.121, -54.5902, 8.83511, 1.92", "-100.792, -55.4952, 8.09766, 1.7", "-101.956, -56.884, 7.19078, 0.74", "-102.677, -57.5405, 6.88078, 0.96", "-104.0, -58.3074, 6.6985, 1.7", "-105.406, -58.7549, 6.73893, 1.25", "-106.855, -59.0421, 6.88682, 0.81", "-108.276, -59.2419, 7.07042, 1.11", "-110.312, -59.4545, 7.29239, 1.25", "-112.255, -59.6769, 7.42243, 1.7", "-114.88, -60.0971, 7.42552, 1.18", "-116.837, -60.5842, 7.2326, 0.96", "-117.668, -60.9452, 7.01437, 1.11", "-119.043, -62.048, 6.29262, 1.03", "-119.746, -63.0885, 5.5984, 1.25", "-120.368, -64.5505, 4.57953, 1.47", "-120.727, -65.7156, 3.74009, 1.62", "-121.117, -67.1175, 2.68145, 1.33", "-121.508, -68.3045, 1.80838, 1.11", "-122.112, -69.6981, 0.803974, 0.88", "-122.585, -70.4296, 0.276383, 0.88", "-123.378, -71.3068, -0.313655, 1.11", "-124.185, -71.9449, -0.72073, 1.47", "-125.623, -72.8568, -1.29047, 1.55", "-126.968, -73.5606, -1.72136, 0.88", "-127.947, -73.9888, -1.98209, 1.55", "-129.071, -74.4623, -2.26122, 2.51", "-130.092, -74.8714, -2.51879, 2.8" ],
    "parent" : "dend_101",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "-41.1214, -6.73696, 21.5817, 1.11", "-42.4745, -7.02103, 22.3756, 1.11", "-43.6962, -7.48233, 23.1121, 0.88", "-44.7716, -8.04836, 23.7526, 0.74", "-45.7615, -8.68833, 24.2768, 0.96", "-46.6119, -9.27699, 24.6284, 0.74", "-47.6418, -9.99907, 24.9156, 0.74", "-48.4535, -10.6593, 25.0007, 1.11", "-49.1015, -11.1626, 24.9494, 1.25", "-50.0236, -11.7911, 24.762, 1.33", "-51.1554, -12.4731, 24.4378, 1.4", "-52.3871, -13.1591, 24.047, 1.25", "-53.3443, -13.669, 23.7465, 1.03", "-54.6837, -14.4082, 23.3891, 1.18", "-55.863, -15.1139, 23.1092, 1.03", "-57.0532, -15.9499, 22.834, 1.18", "-57.8916, -16.7013, 22.5985, 1.33", "-59.0442, -18.058, 22.1313, 1.18", "-59.7842, -19.295, 21.6109, 1.62", "-60.1204, -20.2117, 21.1019, 1.03", "-60.3215, -21.4618, 20.1124, 1.11", "-60.2984, -22.693, 18.8143, 1.25", "-60.1821, -23.6198, 17.6229, 1.7", "-60.0319, -24.5925, 16.2119, 1.18", "-59.9374, -25.6593, 14.5285, 1.33", "-60.0044, -26.6078, 12.9906, 1.7", "-60.3411, -27.5663, 11.4379, 1.99", "-60.8381, -28.1723, 10.5243, 1.47", "-62.0229, -28.9619, 9.57141, 1.55", "-63.3215, -29.5744, 9.09556, 1.62", "-64.5983, -30.0825, 8.85223, 1.4", "-65.6649, -30.4631, 8.72965, 1.99", "-66.3975, -30.6953, 8.65147, 1.99", "-68.4252, -31.3279, 8.30179, 1.03", "-70.0239, -31.8469, 7.80071, 1.11", "-71.1848, -32.2297, 7.35851, 1.47", "-72.1407, -32.551, 6.9124, 1.77", "-73.3134, -32.9637, 6.23811, 1.77", "-74.643, -33.483, 5.30852, 1.99", "-75.7361, -33.9804, 4.22219, 2.14" ],
    "parent" : "dend_101",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "63.6403, -30.271, -45.6295, 0.29", "71.1704, -28.0603, -51.8065, 0.29", "78.6895, -25.4821, -57.8457, 0.29", "85.4347, -23.0232, -64.7841, 0.29", "93.4737, -22.438, -70.7014, 0.29", "100.313, -20.6087, -77.7512, 0.29", "107.388, -19.0076, -84.625, 0.29", "112.633, -15.735, -92.4494, 0.29", "118.327, -12.8491, -100.118, 0.29", "124.248, -9.11573, -107.209, 0.29", "129.789, -6.20035, -114.978, 0.29", "136.338, -4.02945, -122.2, 0.29", "142.314, -0.835072, -129.518, 0.29", "148.468, 4.11172, -135.55, 0.29", "153.601, 9.99783, -141.65, 0.29", "158.057, 16.9761, -147.028, 0.29" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "63.6403, -30.271, -45.6295, 0.29", "73.2495, -29.2548, -48.1942, 0.29", "83.1368, -28.9062, -49.6476, 0.29", "93.1224, -29.0111, -50.1729, 0.29", "103.039, -29.598, -49.0332, 0.29", "112.383, -31.8395, -46.3152, 0.29", "121.13, -35.9617, -43.9442, 0.29", "129.206, -41.549, -42.5546, 0.29", "138.042, -45.9579, -41.3389, 0.29", "147.41, -49.277, -40.5218, 0.29", "157.084, -51.6709, -39.9075, 0.29", "166.966, -52.703, -41.0175, 0.29", "176.074, -55.5556, -43.9292, 0.29", "184.938, -57.1583, -48.2562, 0.29", "193.25, -60.6864, -52.4783, 0.29", "201.706, -63.5603, -56.9287, 0.29", "210.292, -67.431, -60.1723, 0.29", "219.05, -70.8023, -63.5394, 0.29", "227.199, -76.0824, -65.605, 0.29", "236.046, -80.2153, -67.5471, 0.29", "245.231, -83.5991, -69.4402, 0.29", "253.889, -87.0166, -73.0107, 0.29" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-11.0181, -71.2932, -125.07, 0.29", "-18.4813, -74.637, -130.774, 0.29", "-26.1213, -77.8636, -136.313, 0.29", "-32.9603, -82.5133, -141.834, 0.29", "-39.648, -87.8927, -146.817, 0.29", "-46.6159, -93.6068, -150.953, 0.29", "-52.9196, -99.6832, -155.581, 0.29", "-59.952, -105.869, -158.788, 0.29", "-67.3299, -112.255, -160.422, 0.29", "-74.5411, -118.511, -163.036, 0.29", "-82.6736, -123.966, -164.634, 0.29", "-91.3231, -128.561, -166.358, 0.29", "-100.808, -131.637, -166.67, 0.29", "-109.823, -135.615, -168.114, 0.29", "-118.688, -139.6, -170.282, 0.29", "-127.44, -144.277, -170.913, 0.29", "-136.235, -148.755, -169.666, 0.29", "-145.202, -153.043, -169.169, 0.29" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-11.0181, -71.2932, -125.07, 0.29", "-8.66445, -72.8356, -134.659, 0.29", "-4.99479, -75.1862, -143.644, 0.29", "-0.945324, -78.0222, -152.312, 0.29", "4.16431, -80.4834, -160.529, 0.29", "11.1578, -83.5348, -166.955, 0.29", "16.7023, -87.5925, -174.162, 0.29", "23.1408, -90.7237, -181.107, 0.29", "29.5175, -94.2569, -187.905, 0.29" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-40.893, -93.846, -38.078, 0.59", "-48.4028, -100.128, -36.6361, 0.59", "-55.7002, -106.794, -36.7194, 0.59", "-63.0783, -113.368, -36.3925, 0.59" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-40.893, -93.846, -38.078, 0.37", "-48.5351, -99.9857, -36.6835, 0.59", "-55.7032, -106.462, -34.5628, 0.59", "-62.9512, -113.166, -34.1337, 0.59" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "28.0431, -123.79, 25.1189, 0.52", "28.286, -125.099, 25.7603, 0.52", "28.5629, -126.058, 26.1899, 0.81", "29.005, -127.152, 26.5679, 0.66", "29.6301, -128.228, 26.7824, 0.37", "30.1046, -128.94, 26.8468, 0.22", "30.6284, -129.74, 26.9173, 0.22", "31.2007, -130.49, 26.9628, 0.52", "31.9004, -131.361, 27.0869, 1.03", "32.9222, -132.613, 27.4125, 0.22", "33.4346, -133.252, 27.6951, 0.52", "34.1083, -134.071, 28.2841, 0.96", "34.574, -134.566, 28.8181, 1.33", "35.4685, -135.38, 30.0602, 0.44", "35.9956, -135.803, 30.887, 0.22", "36.598, -136.247, 31.979, 0.15", "37.2174, -136.651, 33.173, 0.29", "37.7611, -136.979, 34.2495, 0.29", "38.1293, -137.246, 35.1502, 0.29", "38.2255, -137.411, 35.6688, 0.29", "38.1725, -137.785, 36.7344, 0.29", "38.0471, -137.981, 37.3127, 0.29", "37.8609, -138.202, 37.9867, 0.29", "37.607, -138.534, 39.0008, 0.52", "37.58, -138.752, 39.6525, 0.74", "37.7969, -139.121, 40.5394, 0.74", "38.0968, -139.511, 41.2911, 0.22", "38.4578, -139.97, 42.062, 0.22", "38.6894, -140.269, 42.5084, 0.37", "39.1415, -140.957, 43.401, 0.22", "39.637, -141.888, 44.4921, 0.22", "39.9327, -142.604, 45.2424, 0.22", "40.0987, -143.051, 45.6654, 0.88", "40.2944, -143.55, 46.1267, 1.33", "40.6882, -144.347, 46.8831, 0.52", "41.0732, -144.969, 47.4588, 0.29", "41.7197, -145.768, 48.14, 0.66", "42.4057, -146.51, 48.7489, 0.15", "42.8614, -146.968, 49.1287, 0.44", "43.5972, -147.683, 49.7399, 0.22", "44.1687, -148.266, 50.238, 1.4", "45.0709, -149.333, 51.1193, 0.22", "45.4854, -149.881, 51.5972, 0.74", "45.9185, -150.569, 52.2691, 0.37", "46.1826, -151.11, 52.8546, 0.37", "46.3768, -151.716, 53.6053, 0.37", "46.4573, -152.219, 54.2841, 0.59", "46.4243, -152.69, 54.939, 0.44", "46.2662, -153.348, 55.9001, 0.96", "46.0017, -153.968, 56.8767, 1.18", "45.6416, -154.586, 57.9203, 0.66", "45.3385, -155.004, 58.6611, 0.22", "44.946, -155.507, 59.484, 0.22", "44.6753, -155.891, 60.0054, 0.22", "44.5436, -156.146, 60.29, 0.22", "44.451, -156.446, 60.5851, 0.59", "44.3747, -156.864, 60.9948, 0.96", "44.1349, -157.809, 62.0161, 0.22", "43.9144, -158.441, 62.8281, 0.22", "43.758, -158.878, 63.4773, 0.22", "43.6177, -159.262, 64.0983, 0.37", "43.3871, -159.714, 64.908, 0.37", "42.9412, -160.295, 66.0534, 0.74", "42.3612, -160.798, 67.1006, 0.37", "41.7472, -161.262, 68.0403, 0.37", "41.4545, -161.48, 68.4702, 0.22", "40.9336, -161.926, 69.3185, 0.22", "40.6769, -162.199, 69.8214, 0.44", "40.2395, -162.789, 70.938, 0.96", "39.8769, -163.385, 72.1121, 0.44", "39.6449, -163.896, 73.2439, 0.59", "39.6412, -164.153, 73.9586, 0.59", "39.848, -164.401, 74.8132, 0.44", "40.2998, -164.672, 75.8664, 0.22", "40.7578, -164.877, 76.6233, 0.22", "41.1132, -165.032, 77.1108, 0.44", "41.6326, -165.236, 77.7512, 0.74", "42.0401, -165.395, 78.2491, 0.74", "42.4565, -165.559, 78.7478, 0.74", "42.9566, -165.766, 79.3097, 0.29", "43.4146, -165.977, 79.85, 0.29", "43.9542, -166.272, 80.4772, 0.29", "44.4793, -166.623, 81.0667, 0.52", "45.1875, -167.171, 81.8045, 0.88", "45.7851, -167.685, 82.3805, 0.22", "46.6519, -168.603, 83.2084, 0.15", "47.0296, -169.129, 83.553, 0.52", "47.4181, -169.836, 83.9132, 0.22", "47.7462, -170.593, 84.269, 0.07", "47.8979, -171.018, 84.4626, 0.15", "48.165, -171.844, 84.867, 0.15", "48.2938, -172.283, 85.1347, 0.96", "48.4291, -172.998, 85.7342, 0.15", "48.4927, -173.76, 86.5521, 0.66", "48.4794, -174.351, 87.3256, 0.88", "48.4157, -175.053, 88.4156, 0.29", "48.3233, -175.68, 89.6002, 0.59", "48.1404, -176.455, 91.2887, 0.59", "47.9822, -176.913, 92.2886, 0.59", "47.8628, -177.24, 92.9657, 0.59", "47.7445, -177.536, 93.525, 0.59", "47.6057, -177.893, 94.1253, 0.59", "47.5395, -178.066, 94.368, 0.59", "47.0831, -179.364, 95.9386, 0.22", "46.7493, -180.423, 97.0741, 1.03", "46.5919, -181.144, 97.7604, 0.22", "46.566, -181.349, 97.9407, 0.22", "46.5862, -181.864, 98.3787, 0.22", "46.9722, -182.321, 98.7374, 0.22", "47.343, -182.413, 98.7064, 0.22", "49.1134, -182.699, 98.2314, 0.07", "49.9218, -182.805, 97.962, 0.07", "50.5182, -182.897, 97.7261, 0.29", "51.9127, -183.141, 97.1217, 0.07", "53.0141, -183.356, 96.6002, 0.15", "53.9847, -183.539, 96.085, 0.07", "55.1, -183.718, 95.3996, 0.07", "56.6328, -183.973, 94.4043, 0.07", "57.1087, -184.058, 94.1083, 0.22" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "28.0431, -123.79, 25.1189, 0.07", "29.0064, -124.168, 25.1987, 0.07", "29.6757, -124.43, 25.2542, 0.07", "30.2593, -124.659, 25.3025, 0.29", "30.8772, -124.901, 25.3538, 0.15", "31.3584, -125.089, 25.3936, 0.52" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-12.4224, -133.306, -28.1024, 1.11", "-11.7207, -134.155, -28.4964, 1.11", "-10.957, -135.171, -28.931, 0.88", "-10.3101, -136.137, -29.3016, 1.18", "-9.39772, -137.665, -29.8407, 1.11", "-8.47387, -139.327, -30.3717, 0.59", "-7.89989, -140.458, -30.705, 0.37", "-7.34203, -141.746, -30.9729, 1.18", "-7.01571, -142.782, -31.1172, 0.44", "-6.88222, -143.451, -31.2054, 0.66", "-6.8093, -144.175, -31.3489, 0.44", "-6.77648, -145.125, -31.6486, 1.18", "-6.78922, -146.359, -32.1759, 0.59", "-6.80106, -147.478, -32.7238, 0.37", "-6.85495, -148.512, -33.2588, 0.59", "-6.95027, -149.677, -33.8256, 0.74", "-7.05197, -150.672, -34.25, 0.74", "-7.16189, -151.904, -34.6515, 1.03", "-7.22128, -153.447, -34.9549, 0.37", "-7.29101, -154.889, -35.0938, 0.44", "-7.38927, -156.373, -35.088, 0.74", "-7.46529, -157.459, -34.9736, 0.59", "-7.5194, -158.746, -34.7234, 0.96", "-7.43196, -160.266, -34.305, 0.37", "-7.55397, -169.471, -37.6012, 0.37", "-8.52036, -178.617, -40.9269, 0.37", "-11.5934, -187.586, -43.3629, 0.37", "-14.3414, -196.285, -46.9475, 0.37" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-12.4224, -133.306, -28.1024, 0.15", "-13.1677, -134.091, -28.3802, 0.15", "-13.6494, -134.614, -28.5686, 0.15", "-14.1415, -135.148, -28.7609, 0.15", "-14.6683, -135.721, -28.9669, 0.15", "-15.5126, -136.637, -29.297, 0.52", "-16.2879, -137.48, -29.6001, 0.22", "-16.7423, -138.127, -29.8407, 0.81", "-23.797, -144.56, -32.4284, 0.81", "-30.8401, -151.005, -35.0159, 0.81", "-37.9303, -157.541, -37.2066, 0.81", "-45.3731, -162.967, -40.8983, 0.81", "-52.7832, -168.949, -43.6264, 0.81", "-60.7754, -174.326, -46.0185, 0.81", "-68.1208, -180.632, -48.0697, 0.81", "-75.6938, -186.403, -50.8301, 0.81", "-84.3548, -190.77, -53.0488, 0.81", "-92.7339, -195.383, -55.7698, 0.81", "-99.1924, -201.501, -60.1196, 0.81", "-104.7, -208.008, -65.1321, 0.81", "-109.114, -214.557, -71.0825, 0.81", "-113.215, -221.198, -77.1469, 0.81", "-116.252, -228.474, -83.0712, 0.81" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-7.95688, -43.4867, 1.65313, 0.59", "-7.01314, -44.4165, 1.84832, 0.59", "-6.30627, -44.9643, 2.15231, 0.44", "-5.48819, -45.5388, 2.60293, 0.44", "-4.77941, -46.0873, 3.08347, 0.44", "-4.02726, -46.7234, 3.66322, 0.66", "-3.14807, -47.5409, 4.41227, 0.88", "-2.01588, -48.712, 5.5388, 0.88", "-1.26959, -49.6169, 6.37584, 0.66", "-0.250079, -51.222, 7.69834, 0.66", "0.266442, -52.6605, 8.61472, 0.44", "0.34429, -53.7276, 8.99996, 0.44", "0.273354, -54.5267, 9.10819, 0.44", "0.0545716, -56.0787, 9.08433, 0.74", "-0.243971, -58.1431, 8.85299, 0.88", "-0.504948, -60.2732, 8.4565, 0.44", "-0.608454, -61.8812, 8.12391, 0.44", "-0.546617, -63.449, 7.85724, 0.59", "-0.277755, -65.1449, 7.68721, 0.59", "0.0880902, -66.44, 7.66111, 0.59", "0.51885, -67.5633, 7.73846, 0.88", "1.05984, -68.8685, 7.9389, 0.37", "1.55759, -70.2951, 8.27509, 0.52", "1.75546, -71.1216, 8.49674, 0.96", "1.88539, -72.0862, 8.7683, 1.03", "1.9732, -73.4811, 9.17832, 0.52", "1.95775, -74.6292, 9.55423, 0.88", "1.81197, -75.8181, 9.95835, 0.74", "1.51816, -76.9096, 10.3128, 0.59", "1.06399, -78.0437, 10.6815, 0.52", "0.667979, -78.8615, 10.9581, 0.66", "0.0968292, -79.9373, 11.3204, 0.96", "-0.379423, -80.8603, 11.6423, 0.96", "-1.00306, -82.251, 12.1691, 1.18", "-1.45685, -83.5861, 12.6807, 0.37", "-1.57468, -84.3255, 12.9404, 0.37", "-1.50842, -84.8701, 13.0794, 0.81", "-1.23446, -85.6849, 13.2416, 1.03", "-0.669892, -86.9686, 13.5216, 0.37", "-0.302975, -87.8205, 13.7001, 0.37", "-0.121991, -88.3845, 13.8279, 0.37", "0.0477731, -89.4385, 14.1492, 0.59", "0.0460957, -90.1002, 14.395, 1.03", "-0.18563, -91.1697, 14.8989, 1.33", "-0.743545, -92.5468, 15.6918, 0.59", "-1.30917, -93.6089, 16.3896, 0.37", "-1.87824, -94.5672, 17.0894, 0.81", "-2.23445, -95.1414, 17.5776, 0.96", "-2.89839, -96.3194, 18.7092, 0.22", "-3.04288, -96.656, 19.1129, 0.22", "-2.93534, -97.1271, 19.8617, 0.37", "-2.64176, -97.4721, 20.4135, 0.66", "-2.05976, -98.0415, 21.2502, 0.74", "-1.42181, -98.6983, 22.2065, 0.44", "-0.93117, -99.2842, 23.0165, 0.29", "-0.386912, -100.159, 24.0998, 0.29", "-0.141638, -100.805, 24.7713, 0.81", "-0.0418404, -101.427, 25.3112, 0.81", "-0.0148359, -102.654, 26.2157, 0.37", "-0.061529, -103.577, 26.8217, 0.37", "-0.104948, -104.565, 27.4572, 0.59", "-0.0448149, -105.647, 28.1839, 0.52", "0.212481, -106.461, 28.7892, 0.37", "0.553176, -106.99, 29.2297, 0.37", "0.904939, -107.371, 29.5855, 0.37", "1.71442, -108.182, 30.4017, 0.66", "2.4061, -108.89, 31.1713, 1.33", "3.13857, -109.793, 32.0768, 0.59", "3.42109, -110.498, 32.6103, 0.29", "3.36161, -111.274, 33.063, 0.29", "2.91612, -112.457, 33.6449, 0.52", "2.60676, -113.057, 33.9418, 1.25", "2.02032, -114.096, 34.5052, 0.59", "1.52572, -114.983, 35.061, 0.44", "1.27288, -115.684, 35.5722, 0.44", "1.37098, -116.111, 35.9966, 0.44", "1.89601, -116.73, 36.7726, 0.44", "2.4992, -117.249, 37.5013, 0.74", "3.33464, -117.895, 38.4572, 1.03", "4.19608, -118.565, 39.4156, 1.25", "5.10506, -119.359, 40.4946, 0.52", "5.64141, -120.015, 41.3173, 0.52", "5.79399, -120.59, 41.9378, 0.52", "5.66832, -121.381, 42.7406, 0.74", "5.42079, -121.977, 43.3251, 1.03", "4.75358, -123.152, 44.4325, 0.44", "4.24318, -123.971, 45.1473, 0.59", "3.72562, -124.838, 45.8875, 0.59", "3.40559, -125.516, 46.4668, 0.88", "3.13366, -126.467, 47.3279, 1.55", "3.09399, -127.198, 48.0298, 0.74", "3.27155, -127.991, 48.8284, 0.22", "3.40123, -128.305, 49.1384, 0.22", "3.7617, -128.969, 49.7534, 0.22", "4.08161, -129.508, 50.2331, 0.22", "4.48034, -130.07, 50.7729, 0.22", "4.82988, -130.479, 51.2541, 0.74", "5.06741, -130.711, 51.5968, 1.33", "5.78915, -131.33, 52.7075, 0.37", "6.6213, -131.987, 54.0257, 0.59", "7.22959, -132.449, 55.0076, 0.37", "7.92852, -132.991, 56.1976, 0.66", "8.54297, -133.502, 57.2759, 0.96", "9.13985, -134.05, 58.3255, 0.96", "9.49481, -134.441, 58.9218, 0.44", "9.83417, -135.084, 59.4935, 0.44", "10.1337, -136.169, 59.9942, 0.37", "10.3168, -137.189, 60.2733, 0.66", "10.4378, -138.172, 60.4534, 1.55", "10.512, -139.21, 60.5987, 1.84", "10.5416, -140.459, 60.7644, 0.66", "10.5297, -141.696, 60.9829, 0.29", "10.5047, -142.417, 61.1686, 0.52", "10.4228, -143.311, 61.4564, 0.22", "10.2606, -144.344, 61.8399, 1.25", "10.0358, -145.295, 62.2523, 0.37", "9.58582, -146.685, 62.9809, 0.37", "9.20161, -147.642, 63.5811, 0.37", "8.95658, -148.193, 63.9747, 1.11" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-7.95688, -43.4867, 1.65313, 0.44", "-7.01347, -43.5628, 0.816538, 0.44", "-6.00806, -43.5669, 0.00293754, 0.44", "-4.53501, -43.4878, -1.07546, 0.81", "-3.56602, -43.4226, -1.68668, 0.81", "-2.73817, -43.3755, -2.1506, 0.88", "-1.43681, -43.3093, -2.81086, 1.03", "-0.0363751, -43.2763, -3.36525, 0.96", "1.11644, -43.2691, -3.72562, 0.96", "2.68765, -43.3237, -4.12102, 0.88", "3.95367, -43.4467, -4.43568, 1.18", "4.74754, -43.602, -4.66131, 1.18", "6.25148, -44.0706, -5.16483, 0.81", "7.23241, -44.4674, -5.55187, 0.96", "8.22412, -44.918, -6.0227, 0.96", "9.1255, -45.3635, -6.55604, 0.96", "10.0918, -45.8856, -7.25096, 0.81", "11.183, -46.5779, -8.23, 0.59", "11.7949, -47.0481, -8.92971, 0.59", "12.0466, -47.28, -9.24951, 0.59", "12.4163, -47.6528, -9.72243, 0.59", "12.7828, -48.0423, -10.0275, 0.59", "13.5316, -48.7635, -10.209, 0.59", "13.99, -49.1251, -10.1065, 0.74", "14.7468, -49.6625, -9.90448, 0.59", "15.5975, -50.223, -9.75063, 0.81", "16.8923, -51.0141, -9.71215, 0.88", "17.9377, -51.6328, -9.91901, 0.52", "18.8866, -52.2219, -10.4051, 0.52", "19.7597, -52.8548, -11.2397, 0.52", "20.3733, -53.4111, -12.3187, 0.96", "20.8674, -54.0582, -14.0027, 0.96", "21.0478, -54.5668, -15.6751, 0.81", "21.0268, -54.8513, -16.6869, 0.81", "20.9352, -55.0205, -17.2764, 0.81", "20.5525, -55.417, -18.4708, 0.74", "20.1395, -55.7866, -19.3327, 1.11", "19.604, -56.3094, -20.2217, 1.33", "19.2018, -56.8106, -20.8294, 1.47", "18.7438, -57.7976, -21.6553, 0.52", "18.5343, -58.7274, -22.2089, 0.52", "18.486, -59.5188, -22.5234, 0.52", "18.526, -60.412, -22.7544, 0.96", "18.6271, -61.1567, -22.9132, 0.96", "18.8292, -62.1368, -23.1161, 0.66", "19.0769, -63.1638, -23.3269, 1.03", "19.377, -64.5137, -23.6177, 1.33", "19.6347, -65.9995, -23.9559, 0.52", "19.7682, -67.2218, -24.231, 0.96", "19.8379, -68.8849, -24.6528, 0.52", "19.7925, -69.7536, -24.8989, 0.74", "19.6855, -70.6739, -25.2016, 0.74", "19.5654, -71.3383, -25.4604, 0.74", "19.3026, -72.4371, -25.9276, 0.59", "18.9567, -73.501, -26.4074, 0.88", "18.5033, -74.5604, -26.8983, 1.18", "17.8409, -75.8792, -27.4836, 0.52", "17.2261, -76.8904, -27.8728, 0.66", "16.8244, -77.4278, -28.0323, 0.66", "16.0095, -78.2656, -28.1186, 0.52", "14.8776, -79.1724, -27.8957, 0.74", "14.0527, -79.7207, -27.5699, 0.74", "12.8856, -80.4471, -26.9574, 0.44", "12.1702, -80.9356, -26.481, 0.74", "11.4219, -81.5564, -25.8754, 0.96", "10.7711, -82.2946, -25.2197, 0.44", "10.3706, -82.9866, -24.717, 0.44", "10.1993, -83.6546, -24.3548, 0.44", "10.3031, -84.5428, -24.0915, 0.66", "10.5833, -85.3292, -24.0361, 0.66", "10.9675, -86.1127, -24.0986, 0.96", "11.2889, -86.6776, -24.1906, 1.18", "12.025, -87.8739, -24.416, 0.88", "12.899, -89.3449, -24.6693, 0.66", "13.2437, -89.9874, -24.755, 0.66", "13.718, -91.0039, -24.8578, 1.18", "14.2832, -92.3722, -24.972, 0.66", "14.7021, -93.5499, -25.0404, 0.66", "15.0798, -94.8069, -25.1014, 0.88", "15.3372, -95.7273, -25.1654, 0.88", "15.6959, -96.8689, -25.3509, 0.52", "16.0443, -97.831, -25.652, 0.52", "16.2426, -98.339, -25.9072, 0.52", "16.5733, -99.1516, -26.5052, 0.52", "16.8516, -99.8284, -27.1882, 0.74", "17.1226, -100.54, -28.0695, 0.74", "17.2932, -100.994, -28.7116, 0.74", "17.4008, -101.385, -29.325, 0.81", "17.4887, -101.902, -30.2246, 0.52", "17.4397, -102.476, -31.2913, 0.52", "17.0336, -102.938, -32.3553, 0.66" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-43.2037, -89.6898, 2.8488, 0.74", "-44.1483, -90.1636, 3.52515, 0.74", "-44.739, -90.5055, 4.01982, 0.81", "-45.2887, -90.865, 4.50428, 0.81", "-45.9244, -91.3279, 5.06291, 0.59", "-46.749, -91.9805, 5.71247, 1.03", "-47.5915, -92.6671, 6.2689, 0.74", "-48.5536, -93.5154, 6.75874, 0.74", "-49.5041, -94.3882, 7.03066, 0.96", "-50.3399, -95.1803, 7.04524, 0.74", "-51.3488, -96.089, 6.78038, 1.25", "-52.2547, -96.8439, 6.31873, 0.74", "-53.296, -97.608, 5.63309, 0.96", "-53.9642, -98.0365, 5.1472, 1.03", "-54.7794, -98.4673, 4.56313, 1.03", "-55.8122, -98.9059, 3.91148, 1.03", "-56.7289, -99.1992, 3.49168, 0.74", "-58.49, -99.6405, 3.00213, 0.52", "-59.0828, -99.7699, 2.94691, 0.52", "-60.1995, -100.014, 3.0506, 0.66", "-61.0377, -100.244, 3.32324, 0.66", "-62.2508, -100.602, 3.93142, 0.81", "-62.9502, -100.827, 4.43339, 0.81", "-63.6232, -101.102, 5.13658, 0.96", "-64.2739, -101.478, 5.98023, 1.18", "-64.7386, -101.942, 6.80352, 1.33" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-43.2037, -89.6898, 2.8488, 0.96", "-43.7532, -90.3811, 3.45097, 0.96", "-44.2171, -90.8743, 3.97069, 0.66", "-44.8839, -91.5022, 4.69835, 1.03", "-45.3914, -91.9937, 5.25025, 1.4", "-45.975, -92.5802, 5.87666, 1.33", "-46.7018, -93.3208, 6.57821, 1.11", "-47.3509, -93.941, 7.09062, 0.96", "-48.0522, -94.6058, 7.50389, 1.03", "-49.1323, -95.6668, 7.83342, 1.03", "-50.0502, -96.65, 7.79047, 1.11", "-50.8948, -97.6024, 7.41436, 0.74", "-51.9129, -98.7894, 6.61049, 1.03", "-52.4478, -99.3861, 6.05929, 1.4", "-53.0446, -99.9787, 5.33581, 1.7", "-53.8043, -100.61, 4.37438, 1.62", "-54.6098, -101.21, 3.40057, 0.96", "-55.359, -101.733, 2.66309, 1.11", "-56.3644, -102.396, 1.95319, 1.25", "-57.4524, -103.06, 1.50228, 0.81", "-58.5401, -103.682, 1.41365, 0.88", "-59.6633, -104.322, 1.72232, 0.88", "-61.0891, -105.255, 2.51041, 1.03", "-62.0511, -106.001, 3.17817, 0.88", "-63.2114, -107.167, 4.14557, 1.33", "-64.0184, -108.16, 4.92631, 1.25", "-64.598, -109.025, 5.56519, 1.25", "-65.2344, -110.193, 6.39234, 0.74", "-65.7994, -111.627, 7.34165, 0.59", "-66.1846, -113.175, 8.35809, 0.52", "-66.2807, -114.104, 8.9939, 0.96", "-66.2654, -115.217, 9.90564, 1.11", "-66.1503, -116.138, 10.8938, 1.33", "-65.8962, -117.228, 12.6605, 1.11", "-65.7181, -117.848, 14.1986, 1.11", "-65.6512, -118.097, 15.2204, 1.11", "-65.6662, -118.306, 16.4339, 1.11", "-65.7437, -118.408, 17.0987, 1.11", "-66.1067, -118.644, 18.4246, 1.11", "-66.6696, -118.933, 19.642, 0.74", "-67.4687, -119.404, 20.877, 0.59", "-68.168, -119.906, 21.7965, 0.59", "-68.723, -120.433, 22.6125, 0.74", "-69.0389, -120.844, 23.2132, 0.96", "-69.3622, -121.528, 24.2112, 0.74", "-69.4693, -122.203, 25.3551, 0.96", "-69.3952, -122.713, 26.4212, 1.11", "-69.1097, -123.742, 28.9325, 1.47", "-69.0169, -124.111, 29.8818, 1.47", "-68.9075, -124.69, 31.348, 1.03", "-68.8802, -125.26, 32.7393, 0.96", "-69.0338, -125.788, 33.9464, 0.96", "-69.5387, -126.305, 34.8358, 0.96", "-70.6722, -126.927, 35.6649, 0.81", "-71.8051, -127.447, 36.2619, 0.59", "-72.9173, -127.964, 36.7453, 0.44", "-74.0573, -128.577, 37.2089, 0.44", "-75.289, -129.34, 37.736, 0.59", "-76.4229, -130.118, 38.3279, 0.96", "-77.4305, -130.815, 38.9877, 1.11", "-78.6249, -131.622, 39.9579, 0.81", "-79.9715, -132.469, 41.1806, 0.81", "-81.0634, -133.106, 42.2149, 0.66", "-82.0803, -133.654, 43.202, 0.96", "-83.299, -134.252, 44.3146, 0.81", "-84.2757, -134.7, 45.1694, 0.66", "-84.9666, -135.071, 45.7383, 0.44", "-85.6895, -135.683, 46.3068, 0.44", "-86.3712, -136.606, 46.8172, 0.66", "-87.2405, -138.084, 47.4202, 0.88", "-87.8023, -139.052, 47.7887, 0.96", "-88.5424, -140.321, 48.3126, 0.44", "-89.0629, -141.209, 48.7352, 0.59", "-89.5566, -142.028, 49.2005, 1.11", "-89.9946, -142.751, 49.7022, 1.11", "-90.6701, -144.081, 50.8147, 0.81", "-90.8413, -144.822, 51.469, 0.81", "-90.7183, -145.583, 52.0745, 0.59", "-90.4514, -146.128, 52.4339, 0.59", "-89.7049, -147.292, 53.0685, 0.88", "-88.6619, -148.857, 53.8121, 0.66", "-87.7524, -150.296, 54.4211, 1.11", "-87.1233, -151.464, 54.8735, 1.25", "-86.3652, -153.257, 55.5112, 0.74", "-85.9928, -154.659, 55.9608, 0.59", "-85.8651, -156.415, 56.4722, 0.66", "-86.027, -157.847, 56.8739, 0.96", "-86.3419, -159.024, 57.2258, 1.25", "-86.7554, -160.079, 57.5874, 1.4", "-87.0875, -160.756, 57.8373, 1.11", "-87.4155, -161.425, 58.1326, 0.44", "-87.5605, -161.849, 58.3706, 0.44", "-87.6586, -162.473, 58.8328, 0.44", "-87.7152, -163.03, 59.338, 0.44", "-87.7927, -163.745, 60.0672, 0.66", "-87.9458, -164.603, 61.0135, 1.03", "-88.1944, -165.359, 61.8839, 0.88", "-88.5429, -166.097, 62.7123, 1.03", "-88.9802, -166.874, 63.534, 1.55", "-89.6542, -168.044, 64.6634, 0.74", "-90.0463, -168.776, 65.3003, 0.74", "-90.494, -169.96, 66.1431, 1.11", "-90.6319, -170.771, 66.5977, 0.52", "-90.5895, -171.518, 66.9184, 0.81", "-90.3472, -172.726, 67.3256, 1.18", "-90.0825, -173.75, 67.5951, 1.03", "-89.7502, -175.22, 67.9191, 0.66", "-89.5915, -176.317, 68.1327, 0.44", "-89.586, -177.19, 68.3028, 1.03", "-89.849, -178.651, 68.5668, 0.44", "-90.188, -179.614, 68.7078, 0.74", "-90.9006, -181.197, 68.8471, 0.96", "-91.5488, -182.51, 68.9966, 0.66", "-91.875, -183.175, 69.096, 1.25", "-92.3926, -184.29, 69.3631, 1.77", "-92.9171, -185.587, 69.8395, 0.59", "-93.3176, -186.699, 70.3939, 0.22", "-93.9294, -188.583, 71.5658, 0.44", "-94.1933, -189.353, 72.0888, 0.66", "-94.5587, -190.472, 72.8293, 0.66", "-94.8463, -191.432, 73.4292, 0.59", "-95.1195, -192.366, 73.928, 0.88", "-95.2835, -192.894, 74.1068, 1.18", "-95.7442, -194.395, 74.2649, 1.25", "-96.1648, -195.888, 74.2555, 0.52", "-96.4154, -196.791, 74.1871, 0.52", "-96.5896, -197.428, 74.1259, 0.52", "-96.9794, -198.933, 74.0322, 0.74", "-97.2161, -199.953, 74.0234, 0.81", "-97.4329, -200.994, 74.0654, 1.11", "-97.8756, -203.558, 74.2925, 0.52", "-97.9502, -204.131, 74.3772, 0.52", "-98.1078, -205.396, 74.66, 0.66", "-98.2783, -206.766, 75.0393, 0.88", "-98.386, -207.387, 75.1989, 1.03", "-98.8105, -209.012, 75.546, 0.37", "-99.3197, -210.193, 75.6845, 0.44", "-100.185, -211.608, 75.6163, 0.44", "-100.719, -212.327, 75.4712, 0.66", "-101.792, -213.655, 75.1472, 1.03", "-102.377, -214.389, 74.9828, 0.81", "-103.035, -215.275, 74.8141, 0.66", "-103.588, -216.239, 74.6886, 0.52", "-104.017, -217.395, 74.6427, 0.81", "-104.356, -218.787, 74.7609, 0.44", "-104.523, -219.832, 74.9722, 0.59", "-104.668, -220.922, 75.2538, 0.74", "-104.805, -221.769, 75.5251, 0.74", "-105.115, -223.028, 76.0377, 0.59", "-105.514, -224.116, 76.5893, 0.52", "-105.808, -224.748, 76.9665, 0.52", "-106.231, -225.511, 77.49, 0.81", "-106.752, -226.4, 78.154, 1.11", "-107.29, -227.319, 78.8302, 1.25", "-107.906, -228.368, 79.6171, 0.66", "-108.329, -229.111, 80.1403, 0.44", "-108.721, -229.811, 80.5928, 0.88", "-109.145, -230.601, 81.061, 0.88", "-109.774, -231.822, 81.6798, 0.52", "-110.144, -232.511, 81.9777, 0.44", "-110.619, -233.304, 82.275, 0.44", "-111.077, -234.0, 82.5452, 0.37", "-111.43, -234.628, 82.824, 0.37", "-111.647, -235.199, 83.118, 0.37", "-111.701, -235.715, 83.4174, 0.37", "-111.65, -236.292, 83.753, 0.66", "-111.479, -237.303, 84.3219, 1.55", "-111.166, -238.777, 85.051, 0.52", "-110.963, -239.703, 85.4323, 0.52", "-110.804, -240.686, 85.743, 0.52", "-110.774, -241.217, 85.8601, 0.52", "-110.946, -242.849, 86.0655, 0.29", "-111.299, -243.802, 86.0863, 0.59", "-111.789, -244.573, 86.0635, 1.03", "-112.702, -245.686, 86.0723, 0.44", "-113.439, -246.543, 86.1514, 0.74", "-114.176, -247.432, 86.3456, 1.03", "-114.931, -248.439, 86.7188, 0.44", "-115.336, -249.094, 87.0129, 0.59", "-115.748, -250.022, 87.3708, 0.59", "-116.139, -251.702, 87.771, 0.59", "-116.222, -252.55, 87.8818, 0.59", "-116.242, -253.263, 87.9045, 0.74", "-116.244, -254.345, 87.8699, 0.52", "-116.251, -255.91, 87.7657, 0.37", "-116.233, -257.111, 87.685, 0.44", "-116.201, -257.983, 87.6526, 0.44", "-116.073, -259.609, 87.705, 0.74", "-115.981, -260.506, 87.8218, 1.11", "-115.854, -261.717, 88.1119, 0.74", "-115.769, -263.201, 88.6423, 0.52", "-115.803, -264.23, 89.0923, 0.44", "-115.929, -265.256, 89.592, 0.44", "-116.106, -266.217, 90.1138, 0.81", "-116.269, -266.985, 90.5426, 1.25", "-116.528, -268.171, 91.1464, 1.33", "-116.834, -269.667, 91.7927, 0.66", "-117.004, -270.915, 92.2321, 0.52", "-117.01, -271.956, 92.4926, 0.74", "-116.894, -272.8, 92.6308, 1.03", "-116.427, -274.587, 92.8249, 0.29", "-115.973, -275.779, 92.8958, 0.29", "-115.55, -276.734, 92.9337, 0.44", "-115.085, -277.748, 92.9711, 0.96", "-114.549, -278.946, 93.0576, 0.52", "-114.296, -279.549, 93.1472, 0.52", "-114.005, -280.353, 93.33, 0.59", "-113.682, -281.427, 93.5926, 0.29", "-113.543, -282.145, 93.7569, 0.96", "-113.436, -283.111, 93.9947, 0.74", "-113.431, -284.16, 94.2773, 0.52", "-113.538, -285.316, 94.6121, 0.52", "-113.758, -286.331, 94.9256, 0.74", "-114.043, -287.145, 95.1907, 1.03" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "25.8252, -36.7693, -2.56829, 0.66", "25.7251, -38.0136, -2.54437, 0.66", "25.7662, -38.8845, -2.51476, 0.52", "25.9087, -39.7878, -2.5, 0.52", "26.0405, -40.4788, -2.46296, 0.44", "26.1892, -41.2761, -2.40746, 0.44", "26.353, -42.1335, -2.34173, 0.44", "26.5868, -43.2133, -2.27655, 0.44", "26.8073, -44.3844, -2.24867, 0.59", "26.9211, -45.3874, -2.27332, 0.96", "26.8898, -46.1549, -2.34863, 0.96", "26.6984, -46.7937, -2.54187, 0.66", "26.2254, -47.661, -2.94385, 0.22", "25.8684, -48.1983, -3.20736, 0.37", "25.2105, -49.2461, -3.60137, 0.81", "24.9137, -49.8553, -3.72806, 1.03", "24.4575, -51.0857, -3.66555, 0.59", "24.1437, -51.9699, -3.43565, 0.96", "23.7582, -53.0456, -2.98166, 1.03", "23.2618, -54.3549, -2.28969, 0.81", "22.9198, -55.2513, -1.74874, 0.59", "22.5082, -56.2927, -1.10635, 0.96", "21.9436, -57.662, -0.255227, 0.81", "21.4153, -58.9319, 0.448552, 1.11", "21.0602, -59.785, 0.866681, 0.88", "20.6271, -60.8672, 1.34064, 0.44", "20.2164, -62.0533, 1.81445, 0.88", "19.9616, -63.0544, 2.17068, 0.74", "19.7388, -64.3592, 2.59739, 0.88", "19.6295, -65.2941, 2.88026, 0.66", "19.4973, -66.6195, 3.25083, 0.44", "19.4041, -67.5611, 3.51683, 0.88", "19.2703, -68.6376, 3.8222, 1.47", "19.111, -69.5897, 4.08603, 1.47", "18.6923, -71.427, 4.57587, 0.81", "18.2088, -72.9478, 4.94797, 0.59", "17.6913, -74.0917, 5.2088, 0.66", "16.9723, -75.1898, 5.47768, 0.52", "16.3953, -75.8092, 5.6496, 0.52", "15.3143, -76.6901, 5.88542, 1.03", "14.3667, -77.3278, 6.0617, 0.44", "13.9105, -77.6334, 6.16743, 0.66", "13.0852, -78.2669, 6.43146, 1.03", "12.5732, -78.8922, 6.77573, 1.25", "12.2837, -80.0224, 7.56568, 0.52", "12.3791, -80.7763, 8.225, 0.52", "12.6721, -81.6086, 9.00016, 0.74", "13.082, -82.64, 9.84801, 1.03", "13.311, -83.2767, 10.3014, 1.55", "13.5841, -84.3038, 10.9533, 0.44", "13.6975, -85.2682, 11.4496, 0.22", "13.502, -86.5342, 11.8936, 0.96", "12.7282, -88.3777, 12.3201, 0.59", "12.0145, -89.5614, 12.5163, 0.29", "11.4531, -90.3161, 12.6159, 0.59", "10.8756, -90.9947, 12.6811, 0.44", "9.95534, -92.0188, 12.7299, 0.66", "8.99348, -93.0337, 12.7509, 1.62", "8.37682, -93.6732, 12.7611, 1.03", "7.26972, -94.7833, 12.7009, 0.44", "6.49069, -95.524, 12.6063, 0.88", "5.68942, -96.2734, 12.4785, 0.52", "4.95074, -96.9464, 12.3414, 0.52", "3.91765, -97.8071, 12.2211, 0.74", "2.87765, -98.5907, 12.2066, 0.44", "1.64592, -99.4548, 12.3363, 0.44", "1.23175, -99.7491, 12.4467, 1.11", "0.451891, -100.334, 12.8067, 1.84", "-0.464593, -101.124, 13.4294, 0.59", "-1.04614, -101.715, 13.9336, 0.22", "-1.47148, -102.226, 14.3571, 0.22", "-1.87977, -102.798, 14.8004, 0.22", "-2.3415, -103.556, 15.296, 0.74", "-2.58876, -104.068, 15.539, 0.88", "-3.08849, -105.283, 15.9659, 0.22", "-3.56753, -106.421, 16.3324, 0.66", "-4.02307, -107.417, 16.5888, 0.96", "-4.48003, -108.301, 16.7476, 1.18", "-5.29365, -109.726, 16.8895, 0.29", "-5.85251, -110.543, 16.9152, 0.29", "-6.64542, -111.446, 16.8775, 0.29", "-7.58304, -112.292, 16.8012, 0.88", "-8.80503, -113.24, 16.7508, 1.18", "-9.77557, -113.924, 16.7502, 0.96", "-10.8054, -114.585, 16.7874, 0.96", "-11.8205, -115.241, 16.8718, 0.44", "-12.6451, -115.827, 17.0284, 0.44", "-13.6485, -116.638, 17.4618, 0.44", "-14.1215, -117.128, 17.909, 0.44", "-14.293, -117.438, 18.3574, 0.44", "-14.3215, -117.724, 18.9232, 0.44", "-14.3328, -118.077, 19.7714, 0.44", "-14.2865, -118.33, 20.4839, 0.66", "-14.1334, -118.702, 21.6347, 0.66", "-14.0071, -118.951, 22.3966, 0.66", "-13.8958, -119.253, 23.1646, 0.66", "-13.8633, -119.967, 24.7345, 1.25" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "25.8252, -36.7693, -2.56829, 0.66", "27.2935, -37.5848, -3.10332, 0.66", "28.3775, -38.1171, -3.64864, 0.74", "29.4447, -38.5944, -4.31761, 0.59", "30.3392, -38.9907, -4.9908, 0.88", "31.2353, -39.3905, -5.74587, 0.74", "32.1245, -39.7879, -6.56301, 0.96", "33.0786, -40.1624, -7.60542, 1.11", "33.9854, -40.4891, -8.61041, 1.33", "35.1764, -40.8727, -9.78849, 0.88", "35.6511, -41.0316, -10.1689, 0.88", "36.418, -41.2954, -10.5605, 0.88", "37.7184, -41.7749, -10.8977, 0.59", "39.2673, -42.444, -11.0832, 0.81", "40.7091, -43.1705, -11.1797, 0.66", "41.8661, -43.8653, -11.2743, 0.66", "42.9958, -44.6672, -11.4775, 0.81", "43.5706, -45.1306, -11.6696, 0.88", "44.6243, -46.0338, -12.2247, 0.66", "45.5439, -46.8128, -12.882, 1.18", "46.6385, -47.7192, -13.8031, 0.74", "47.4398, -48.3708, -14.5285, 0.66", "48.3704, -49.1739, -15.417, 0.74", "49.0423, -49.7449, -16.0141, 0.74", "49.3841, -50.0338, -16.2771, 0.96", "50.0297, -50.6362, -16.7006, 0.96", "50.5897, -51.2737, -17.019, 0.81", "51.3782, -52.3659, -17.3686, 0.74", "52.0115, -53.3297, -17.5456, 0.59", "52.5461, -54.1189, -17.6359, 0.59", "53.1442, -54.9464, -17.7101, 0.88", "53.766, -55.7508, -17.754, 0.81", "54.5088, -56.6417, -17.7843, 0.88", "55.4908, -57.7659, -17.7911, 0.81", "56.4202, -58.8324, -17.7671, 0.88", "57.3006, -59.8613, -17.7084, 0.81", "58.156, -60.8789, -17.6063, 0.74", "58.8183, -61.6547, -17.4791, 0.59", "59.4458, -62.3797, -17.3135, 0.59", "60.0245, -63.026, -17.1208, 0.59", "60.7705, -63.7357, -16.8456, 0.59", "61.3433, -64.1215, -16.6531, 0.81", "62.0211, -64.4316, -16.4997, 0.81", "63.2926, -64.8625, -16.3411, 0.74", "64.1289, -65.1126, -16.3356, 0.66", "65.2289, -65.4662, -16.4414, 1.18", "66.3917, -65.9165, -16.6452, 0.29", "67.1524, -66.3484, -16.8135, 0.29", "67.6168, -66.7043, -16.9052, 0.52", "68.4903, -67.4261, -16.965, 0.52", "69.5525, -68.2777, -16.8242, 0.44", "70.2443, -68.8058, -16.5655, 0.66", "71.201, -69.406, -16.0696, 0.59", "72.5342, -70.0317, -15.3539, 0.44", "73.6036, -70.4438, -14.8291, 0.44", "74.4393, -70.7318, -14.447, 0.44", "75.7064, -71.167, -13.9027, 0.59", "76.7176, -71.5666, -13.4857, 0.59", "77.7574, -72.1235, -13.0369, 0.81", "78.6043, -72.7719, -12.5764, 0.52", "79.1374, -73.2938, -12.2428, 0.52", "79.7254, -73.9235, -11.8164, 0.52", "80.074, -74.3162, -11.4847, 0.52", "80.5571, -74.8677, -10.8325, 0.52", "81.05, -75.3832, -9.80672, 0.52", "81.334, -75.5613, -8.99493, 0.66", "81.6619, -75.4437, -7.82888, 0.59", "81.8747, -74.9888, -6.88077, 0.59", "81.9753, -74.2808, -6.05163, 0.44", "81.9619, -73.4667, -5.30294, 0.44", "81.8571, -72.7299, -4.69052, 0.29", "81.5793, -71.6633, -3.74639, 0.52", "81.1898, -70.7511, -2.83708, 0.66", "80.7214, -70.0503, -1.99124, 0.44", "80.052, -69.5468, -1.00244, 0.44", "79.5326, -69.3802, -0.316586, 0.44", "78.7346, -69.2887, 0.686686, 0.59", "77.9771, -69.2953, 1.63073, 0.59", "77.3377, -69.3438, 2.50571, 0.74", "76.5857, -69.4064, 3.69311, 0.52", "76.2214, -69.3961, 4.57017, 0.52", "76.2422, -69.3458, 5.37559, 0.52", "76.5523, -69.3256, 6.03059, 0.52", "77.4513, -69.3776, 7.2195, 0.59", "78.3855, -69.4608, 8.22039, 0.44", "79.3157, -69.5375, 9.08542, 0.44", "80.4357, -69.635, 10.073, 0.44", "81.5187, -69.7241, 11.0211, 0.66", "82.5788, -69.7689, 12.0175, 0.44", "83.1693, -69.7228, 12.6887, 0.29", "83.4777, -69.3111, 13.3713, 0.22", "83.4347, -68.8751, 13.6987, 0.22", "83.3199, -68.1462, 14.1927, 0.52", "83.1337, -66.9904, 15.0434, 1.18", "82.9506, -65.8254, 16.1047, 0.59", "82.8525, -65.024, 17.117, 0.29", "82.8731, -64.5595, 18.1367, 0.29", "83.0589, -64.3258, 19.3387, 0.52", "83.5484, -64.4279, 20.8977, 0.52", "84.2564, -64.7986, 22.2857, 0.52", "84.9069, -65.15, 23.1626, 0.74", "86.1135, -65.7619, 24.3649, 0.22", "87.3094, -66.3176, 25.2344, 0.29", "88.2374, -66.703, 25.6997, 0.29", "89.3957, -67.1377, 26.0638, 0.37", "90.8484, -67.6766, 26.3876, 0.22", "91.8367, -68.0444, 26.6178, 0.22", "92.5406, -68.3122, 26.8325, 0.44", "93.2269, -68.6351, 27.1489, 1.25", "93.9935, -69.0971, 27.6018, 1.4", "95.1697, -69.9819, 28.4562, 0.59", "95.802, -70.5165, 29.0138, 0.59", "96.3849, -70.9534, 29.6034, 0.44", "96.8554, -71.1483, 30.1706, 0.44", "97.0922, -71.0838, 30.5179, 0.44", "97.382, -70.7515, 30.9397, 0.44", "97.7849, -70.1002, 31.471, 0.44", "98.2552, -69.3452, 32.0078, 0.44", "98.6256, -68.7462, 32.4357, 0.96", "98.9421, -68.2446, 32.8028, 1.4", "99.6496, -67.1737, 33.6846, 0.66", "100.235, -66.3553, 34.4685, 0.22", "100.886, -65.5251, 35.4321, 0.52", "101.481, -64.8521, 36.4769, 0.52", "101.598, -64.7437, 36.734, 0.52", "101.932, -64.5244, 37.5812, 0.52", "102.144, -64.4673, 38.11, 0.52", "102.427, -64.4654, 38.722, 0.52", "102.85, -64.5696, 39.4964, 0.52", "103.556, -64.8829, 40.5821, 0.81", "104.305, -65.3027, 41.6064, 0.66", "105.105, -65.8099, 42.6076, 0.44", "105.561, -66.1459, 43.1719, 0.44", "106.319, -66.8012, 44.1138, 0.74", "107.008, -67.4922, 44.9242, 0.22", "107.398, -67.9285, 45.3513, 0.22", "107.585, -68.1223, 45.5336, 0.22", "107.87, -68.3479, 45.772, 0.22", "108.289, -68.6106, 46.1046, 0.52", "109.232, -69.0902, 46.8707, 0.96", "109.794, -69.3457, 47.3348, 0.96", "110.46, -69.5904, 47.8776, 0.22", "111.402, -69.8662, 48.6271, 0.52", "112.212, -70.075, 49.2571, 0.22", "112.915, -70.2671, 49.8092, 0.22", "113.768, -70.5119, 50.4804, 0.74", "114.822, -70.8386, 51.2884, 1.11", "115.894, -71.2123, 52.0624, 0.22", "116.346, -71.3836, 52.3709, 0.29", "117.206, -71.8264, 52.9109, 0.29", "117.706, -72.2727, 53.2297, 0.81", "118.062, -72.7734, 53.4862, 1.18", "118.664, -73.8638, 53.9792, 0.29", "118.973, -74.4557, 54.2333, 0.15", "119.408, -75.2036, 54.5783, 0.81", "120.092, -76.1908, 55.0951, 0.22", "120.756, -77.0309, 55.6063, 0.88", "121.425, -77.8086, 56.1053, 1.11", "122.067, -78.4945, 56.5804, 1.25", "123.017, -79.4123, 57.2782, 0.66", "124.111, -80.3545, 58.124, 0.37", "124.839, -80.9139, 58.7123, 0.37", "125.578, -81.4369, 59.3603, 0.88", "126.543, -82.1439, 60.2946, 0.22", "127.09, -82.5975, 60.881, 0.22", "127.695, -83.2013, 61.568, 0.22", "127.995, -83.6255, 61.915, 0.44", "128.351, -84.3032, 62.2821, 1.03", "128.892, -85.6148, 62.6799, 0.66", "129.349, -87.051, 62.7872, 1.11", "129.622, -88.0452, 62.7353, 0.81", "130.025, -89.7213, 62.5161, 0.22", "130.182, -90.4324, 62.4198, 0.22", "130.383, -91.4435, 62.2701, 0.22", "130.521, -92.2717, 62.1683, 0.44", "130.594, -93.1844, 62.097, 1.25", "130.614, -94.5425, 62.1041, 0.29", "130.567, -96.0023, 62.2297, 0.44", "130.522, -96.6059, 62.3148, 0.66", "130.378, -97.6938, 62.4825, 0.52", "130.147, -99.1121, 62.7245, 0.74", "129.958, -100.148, 62.8881, 0.37", "129.791, -101.062, 63.0021, 0.37", "129.639, -102.082, 63.08, 0.59", "129.555, -103.275, 63.1931, 1.33", "129.554, -104.547, 63.3485, 0.74", "129.592, -105.393, 63.4911, 0.44", "129.636, -106.318, 63.6754, 0.74", "129.713, -107.647, 63.9535, 0.52", "129.83, -109.046, 64.2593, 0.22", "129.938, -109.899, 64.4477, 0.22", "130.073, -110.912, 64.6376, 0.96", "130.194, -111.862, 64.8214, 0.37", "130.265, -112.507, 64.9539, 0.15", "130.307, -113.002, 65.0346, 0.15", "130.321, -113.468, 65.0772, 0.59", "130.314, -114.274, 65.1369, 0.22", "130.262, -115.306, 65.2621, 0.81", "130.146, -116.284, 65.4501, 0.22", "129.974, -117.161, 65.664, 0.74", "129.755, -117.97, 65.899, 0.66", "129.466, -118.902, 66.2191, 0.88", "129.13, -119.964, 66.6135, 0.29", "128.833, -120.983, 66.9836, 0.52", "128.614, -121.898, 67.3108, 0.81", "128.324, -123.341, 67.8709, 0.96", "128.109, -124.562, 68.372, 0.29", "127.965, -125.397, 68.756, 0.22", "127.8, -126.353, 69.2705, 0.44", "127.664, -127.146, 69.7873, 0.22", "127.481, -128.01, 70.4782, 0.37", "127.302, -128.601, 71.0276, 0.59", "126.916, -129.411, 71.8628, 0.74", "126.439, -130.155, 72.6108, 0.88", "125.978, -130.847, 73.1882, 0.15", "125.665, -131.356, 73.5236, 0.81", "125.137, -132.353, 74.0063, 0.15", "124.673, -133.346, 74.3457, 1.03", "123.827, -135.301, 74.8092, 0.29", "123.093, -137.023, 75.1114, 0.29", "122.652, -138.049, 75.2593, 0.81", "122.092, -139.289, 75.4188, 0.66", "121.528, -140.481, 75.5498, 0.22", "121.236, -141.077, 75.6124, 0.22", "120.974, -141.538, 75.671, 0.22", "120.479, -142.206, 75.8427, 0.88", "119.751, -143.003, 76.1252, 0.66", "119.208, -143.489, 76.3311, 0.22", "118.576, -143.972, 76.5448, 0.22", "117.426, -144.764, 76.8344, 1.03", "116.037, -145.637, 77.0684, 0.22", "115.298, -146.049, 77.1331, 0.66", "114.392, -146.497, 77.1562, 0.22", "113.681, -146.823, 77.1475, 0.22", "112.631, -147.28, 77.1208, 0.66", "111.901, -147.585, 77.0999, 0.22", "111.422, -147.782, 77.0736, 0.15", "110.938, -148.013, 77.0855, 0.15", "110.157, -148.437, 77.1735, 0.29", "109.37, -148.873, 77.3044, 0.07", "108.637, -149.283, 77.4746, 0.44", "107.856, -149.735, 77.6686, 0.15", "107.367, -150.023, 77.7868, 0.15", "107.041, -150.194, 77.8668, 0.15", "106.078, -150.646, 78.1337, 0.88", "104.841, -151.23, 78.5457, 0.22", "104.352, -151.484, 78.7596, 0.66", "103.861, -151.737, 79.0067, 0.44", "103.202, -152.005, 79.3213, 0.15", "102.633, -152.15, 79.5957, 0.52", "102.14, -152.218, 79.8453, 0.52", "100.99, -152.318, 80.416, 0.29", "99.5246, -152.395, 81.1478, 0.44", "98.1015, -152.432, 81.8475, 0.81", "96.4901, -152.458, 82.5981, 0.22", "95.3375, -152.425, 83.108, 0.66" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "23.169, -94.2021, -34.4796, 0.59", "19.7227, -103.346, -34.8771, 0.59", "15.059, -111.71, -37.0365, 0.59", "10.6612, -120.451, -37.5705, 0.59", "5.32629, -128.662, -38.3543, 0.59" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "23.169, -94.2021, -34.4796, 0.37", "25.8162, -100.508, -41.6317, 0.59", "28.4584, -106.753, -48.8428, 0.59", "32.5476, -111.724, -56.4113, 0.59", "38.9623, -115.119, -63.2468, 0.59", "45.2181, -119.067, -69.9155, 0.59", "50.6026, -125.106, -75.6294, 0.59", "55.5439, -130.706, -82.1556, 0.59", "61.8586, -136.824, -86.711, 0.59", "68.2574, -142.479, -91.7525, 0.59", "74.9035, -147.124, -97.5082, 0.59", "81.664, -150.303, -104.116, 0.59" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "82.1656, -11.8732, 45.7099, 0.81", "82.4209, -10.7228, 45.9349, 0.81", "82.728, -9.54326, 46.1048, 1.4", "83.1812, -7.85932, 46.2221, 0.07", "83.4127, -7.07035, 46.2121, 0.59", "83.6444, -6.37243, 46.1579, 0.44", "84.0311, -5.20721, 46.0674, 0.22", "84.3701, -4.372, 45.9488, 0.59", "84.8874, -3.22285, 45.6982, 0.29", "85.3269, -2.20957, 45.3838, 0.15", "85.6702, -1.39095, 45.0593, 0.37" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "82.1656, -11.8732, 45.7099, 0.15", "82.6569, -10.6819, 45.1753, 0.15", "83.0468, -9.76819, 44.7973, 0.15", "83.4981, -8.71046, 44.3597, 0.66", "84.0703, -7.36968, 43.8051, 0.22", "84.5341, -6.28275, 43.3554, 0.88", "84.9059, -5.41156, 42.995, 0.15", "85.2885, -4.5356, 42.6058, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_158",
    "id" : "dend_158",
    "points3d" : [ "-80.1611, -69.3503, 61.1101, 0.66", "-82.1042, -70.0029, 60.9281, 0.66", "-82.9758, -70.4617, 60.8855, 0.52", "-83.9273, -71.0355, 60.9389, 0.52", "-84.8113, -71.5545, 61.0299, 0.52", "-85.6682, -72.0014, 61.1288, 0.52", "-86.1756, -72.2361, 61.2005, 0.52", "-87.0644, -72.6401, 61.4162, 0.37", "-88.2549, -73.1438, 61.7543, 0.37", "-88.9864, -73.4723, 61.9668, 0.96", "-90.467, -74.1915, 62.4059, 1.18", "-91.9547, -74.9433, 62.849, 0.59", "-93.5332, -75.7643, 63.3313, 0.22", "-94.0612, -76.0572, 63.5123, 0.22", "-95.1594, -76.7857, 63.9325, 0.44", "-96.1235, -77.5591, 64.3654, 0.15", "-96.6141, -78.0506, 64.6163, 0.74", "-97.2811, -78.8021, 64.9511, 1.4", "-98.1895, -79.7492, 65.3577, 0.44", "-98.8374, -80.3038, 65.6413, 0.44", "-99.346, -80.6883, 65.8626, 0.44", "-100.243, -81.3556, 66.2432, 0.29", "-100.916, -81.8934, 66.5244, 0.59", "-101.831, -82.6843, 66.9249, 0.81", "-102.614, -83.3664, 67.2566, 0.66", "-103.166, -83.8141, 67.4441, 0.52", "-103.703, -84.2026, 67.5305, 0.88", "-104.714, -84.8748, 67.4465, 0.66", "-105.833, -85.6314, 67.2163, 0.37", "-106.367, -86.0068, 67.0755, 0.66", "-107.688, -86.8857, 66.759, 0.88", "-109.54, -87.9877, 66.5016, 1.55", "-110.989, -88.7719, 66.5161, 0.52", "-112.088, -89.3434, 66.6517, 0.74", "-113.002, -89.8475, 66.8771, 0.66", "-114.372, -90.6902, 67.4109, 1.03", "-115.511, -91.4324, 68.0079, 0.66", "-117.005, -92.3618, 68.883, 0.37", "-117.637, -92.6989, 69.2102, 0.37", "-118.689, -93.1409, 69.5742, 0.52", "-119.476, -93.3434, 69.7293, 0.59", "-120.569, -93.4538, 69.7862, 0.52", "-122.056, -93.4554, 69.6926, 0.44", "-123.19, -93.417, 69.538, 1.03", "-124.276, -93.3876, 69.369, 1.03", "-126.149, -93.4269, 68.9569, 0.44", "-127.471, -93.5801, 68.5616, 0.44", "-128.658, -93.8506, 68.1141, 0.59", "-129.809, -94.1965, 67.6075, 1.03", "-130.691, -94.4218, 67.1997, 0.88", "-132.56, -94.692, 66.3288, 0.37", "-133.669, -94.7137, 65.844, 0.37", "-134.471, -94.6156, 65.5732, 0.88", "-135.966, -94.2594, 65.1282, 1.33", "-137.986, -93.549, 64.6147, 0.66", "-139.605, -92.8244, 64.2831, 0.44", "-140.654, -92.2494, 64.1619, 0.52", "-141.676, -91.6294, 64.0839, 0.59" ],
    "parent" : "dend_156",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_157",
    "id" : "dend_157",
    "points3d" : [ "-80.1611, -69.3503, 61.1101, 0.29", "-80.3656, -69.2536, 61.9089, 0.29", "-81.0165, -68.9654, 64.0442, 0.29", "-81.4936, -68.7281, 65.5694, 0.29", "-82.0052, -68.4765, 67.2744, 0.29", "-82.4773, -68.2886, 68.921, 0.59", "-82.8871, -68.1711, 70.318, 0.37", "-83.1875, -68.1443, 71.2429, 0.37", "-83.3832, -68.1524, 71.7509, 0.37", "-83.7925, -68.1472, 72.7746, 0.37", "-84.2067, -68.0216, 73.8902, 0.37", "-84.4589, -67.8523, 74.5876, 0.37", "-84.9689, -67.4295, 76.0173, 0.52", "-85.5363, -66.9541, 77.525, 0.81", "-86.1336, -66.4316, 79.0731, 0.52", "-86.588, -65.9, 80.4328, 0.37", "-86.8152, -65.5064, 81.3713, 0.37", "-86.9054, -65.1894, 82.1584, 0.37", "-86.9161, -64.978, 82.7172, 0.37", "-86.9363, -64.7787, 83.4372, 0.37", "-87.0327, -64.5339, 84.9534, 0.37", "-87.1559, -64.407, 86.1557, 0.37", "-87.3723, -64.2571, 87.5307, 0.37", "-87.6229, -64.114, 88.5775, 0.37", "-88.4374, -63.8111, 90.8419, 0.59", "-88.9858, -63.6983, 91.9471, 0.37", "-89.5019, -63.664, 92.8588, 0.37", "-89.9862, -63.6885, 93.7048, 0.37", "-90.3109, -63.7547, 94.2541, 0.37", "-90.678, -63.9589, 95.0419, 0.22", "-90.834, -64.3404, 95.9124, 0.37", "-90.7921, -65.5078, 97.6988, 0.22", "-90.7345, -65.8558, 98.0569, 0.22", "-90.4378, -67.0165, 99.0073, 0.22", "-90.0166, -68.2238, 99.9299, 0.22", "-89.7114, -68.941, 100.47, 0.22", "-89.2803, -69.9064, 101.124, 1.18", "-88.6414, -71.3788, 102.064, 0.22", "-88.2088, -72.3095, 102.72, 0.37", "-87.7744, -73.1588, 103.426, 0.22", "-87.2721, -74.0926, 104.231, 0.22", "-86.9011, -74.7652, 104.85, 0.44", "-86.3083, -75.7497, 105.871, 0.22", "-85.7483, -76.706, 106.973, 0.81", "-85.3315, -77.5246, 107.979, 0.22", "-85.0934, -78.1205, 108.769, 0.22", "-84.9154, -78.6775, 109.649, 0.37", "-84.8119, -79.1997, 110.695, 0.37", "-84.7783, -79.7081, 111.98, 0.37", "-84.8226, -80.1811, 113.389, 0.88", "-84.8745, -80.6215, 114.989, 0.52", "-84.9259, -80.8476, 116.026, 0.52", "-85.0346, -81.0533, 117.109, 0.52", "-85.151, -81.1862, 117.745, 0.52", "-85.5005, -81.4975, 119.125, 0.81", "-86.0494, -81.9141, 120.711, 0.81", "-86.5295, -82.3412, 121.786, 0.81", "-87.2425, -83.0134, 122.988, 0.29", "-88.0734, -83.792, 124.061, 0.22", "-88.7305, -84.3527, 124.762, 0.22", "-89.4202, -84.8971, 125.338, 0.44", "-90.7269, -85.9472, 126.193, 0.15", "-91.6371, -86.7594, 126.711, 0.07", "-92.1203, -87.2511, 126.955, 0.74" ],
    "parent" : "dend_156",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_153",
    "id" : "dend_153",
    "points3d" : [ "-156.925, -204.141, -15.9376, 0.74", "-158.274, -205.561, -15.2987, 0.74", "-158.954, -206.256, -15.0511, 0.74", "-160.327, -207.789, -14.6535, 1.33", "-161.226, -208.89, -14.4898, 0.88", "-162.053, -210.014, -14.3916, 1.03", "-162.949, -211.33, -14.4054, 0.88", "-164.028, -212.977, -14.5729, 0.66", "-164.716, -214.116, -14.9063, 0.81", "-165.394, -215.298, -15.4554, 0.59", "-165.818, -216.025, -15.8749, 1.18", "-166.764, -217.519, -16.8106, 1.18", "-167.4, -218.449, -17.4039, 0.96", "-167.922, -219.165, -17.8167, 0.96", "-168.695, -220.162, -18.2147, 0.66", "-169.332, -221.059, -18.3831, 0.44", "-169.963, -222.238, -18.377, 0.81", "-170.201, -223.297, -18.1715, 0.74", "-170.138, -224.731, -17.777, 0.52", "-169.908, -225.832, -17.4389, 0.22", "-169.651, -226.63, -17.1986, 0.29", "-169.271, -227.58, -16.9303, 0.29", "-168.898, -228.387, -16.7402, 0.29", "-168.375, -229.545, -16.5171, 0.81", "-167.887, -230.65, -16.3016, 0.59", "-167.561, -231.382, -16.117, 1.03", "-169.348, -240.95, -16.8305, 1.03", "-172.025, -250.311, -17.635, 1.03", "-175.203, -259.503, -16.624, 1.03", "-178.14, -268.818, -16.9392, 1.03", "-182.238, -277.557, -18.6349, 1.03" ],
    "parent" : "dend_151",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_152",
    "id" : "dend_152",
    "points3d" : [ "-156.925, -204.141, -15.9376, 0.37", "-155.997, -204.228, -17.518, 0.37", "-155.356, -204.154, -18.7987, 0.37", "-154.912, -203.916, -19.9536, 0.37", "-154.755, -203.711, -20.636, 0.37", "-154.757, -203.586, -20.9195, 0.37", "-154.96, -203.092, -21.6974, 0.37", "-155.403, -202.311, -22.4935, 0.37", "-155.798, -201.498, -23.1762, 0.37", "-156.13, -200.559, -23.9178, 0.37", "-156.379, -199.352, -24.8438, 0.81", "-156.391, -198.207, -25.6393, 0.59", "-156.257, -196.823, -26.5695, 0.44", "-156.038, -196.032, -27.1031, 1.25", "-155.381, -194.877, -27.8829, 0.44", "-155.035, -194.474, -28.166, 0.66", "-153.854, -193.541, -28.8712, 0.29", "-150.449, -187.326, -35.7828, 0.29" ],
    "parent" : "dend_151",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_131",
    "id" : "dend_131",
    "points3d" : [ "-130.092, -74.8714, -2.51879, 0.96", "-131.375, -75.3901, -1.88707, 0.96", "-132.771, -75.8854, -1.45591, 1.55", "-133.864, -76.1403, -1.47211, 0.88", "-135.114, -76.3116, -1.77124, 0.74", "-136.202, -76.3946, -2.17581, 0.74", "-137.599, -76.4384, -2.75922, 1.18", "-138.869, -76.3866, -3.45324, 1.99", "-141.35, -76.2457, -4.95658, 0.74", "-142.067, -76.2223, -5.40138, 0.96", "-143.149, -76.2583, -6.04487, 1.03", "-144.049, -76.4303, -6.4863, 1.03", "-145.192, -76.9247, -6.79172, 0.88", "-146.331, -77.7488, -6.81188, 0.96", "-147.212, -78.5507, -6.66825, 1.33", "-148.32, -79.6444, -6.41397, 1.11", "-149.506, -80.8352, -6.06988, 0.81", "-150.116, -81.4187, -5.87342, 1.03", "-151.648, -82.7891, -5.33776, 0.81", "-152.798, -83.6981, -4.94218, 1.11", "-153.627, -84.2508, -4.67178, 1.25", "-154.931, -84.9765, -4.27506, 1.18", "-156.285, -85.6267, -3.83742, 1.11", "-157.136, -85.9997, -3.58304, 0.88", "-158.409, -86.5131, -3.31289, 0.88", "-159.701, -87.0523, -3.18676, 0.88", "-160.409, -87.3719, -3.19762, 1.4", "-161.733, -88.023, -3.43692, 1.4", "-162.805, -88.5922, -3.82501, 0.96", "-164.456, -89.4703, -4.79965, 0.74", "-165.326, -89.9524, -5.6583, 0.74", "-165.669, -90.1412, -6.20164, 0.74", "-166.103, -90.2915, -7.0215, 0.74", "-166.467, -90.2924, -7.68766, 0.88", "-167.092, -90.1228, -8.54067, 0.88", "-167.761, -89.8472, -9.23123, 0.88", "-169.266, -89.2189, -10.3942, 1.62", "-170.652, -88.6855, -11.3004, 1.47", "-172.332, -88.1227, -12.1367, 1.03", "-174.143, -87.5499, -12.936, 0.96", "-175.315, -87.2006, -13.371, 1.11", "-176.815, -86.7612, -13.8193, 1.25", "-178.095, -86.3914, -14.094, 1.77", "-179.975, -85.9792, -14.4407, 2.14" ],
    "parent" : "dend_117",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_118",
    "id" : "dend_118",
    "points3d" : [ "-130.092, -74.8714, -2.51879, 0.59", "-131.545, -73.8761, -3.08538, 0.59", "-132.387, -73.1947, -3.44357, 0.59", "-133.187, -72.429, -3.82406, 0.81", "-134.07, -71.35, -4.37115, 0.52", "-134.459, -70.7258, -4.71254, 0.37", "-134.833, -70.0215, -5.16863, 0.37", "-135.058, -69.4721, -5.64722, 0.37", "-135.315, -68.8053, -6.36552, 0.44", "-135.551, -68.2088, -7.13284, 0.44", "-135.788, -67.713, -7.81678, 0.59", "-136.222, -67.0707, -8.67246, 0.74", "-136.917, -66.2093, -9.67907, 0.59", "-137.476, -65.5021, -10.3704, 0.96", "-137.82, -65.0438, -10.729, 0.96", "-138.405, -64.2037, -11.182, 0.81", "-139.077, -63.2062, -11.4971, 0.88", "-139.813, -62.1428, -11.5911, 0.66", "-140.566, -61.1405, -11.4877, 0.66", "-141.32, -60.2476, -11.2142, 0.52", "-142.288, -59.233, -10.727, 0.52", "-143.288, -58.3275, -10.1406, 0.66", "-144.363, -57.4692, -9.44874, 1.55", "-145.149, -56.9317, -8.9094, 0.88", "-146.407, -56.1863, -8.02253, 0.59", "-147.2, -55.7393, -7.44991, 0.74", "-147.743, -55.401, -7.09932, 0.88" ],
    "parent" : "dend_117",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_116",
    "id" : "dend_116",
    "points3d" : [ "-75.7361, -33.9804, 4.22219, 1.03", "-77.2463, -33.5483, 3.60284, 1.03", "-78.2159, -33.2933, 3.28359, 0.74", "-79.7837, -32.923, 2.87115, 0.81", "-81.8377, -32.5602, 2.42182, 1.11", "-83.2735, -32.3913, 2.10876, 0.81", "-84.2441, -32.3433, 1.87553, 0.66", "-84.9233, -32.406, 1.73561, 0.66", "-85.9531, -32.6617, 1.48975, 0.66", "-86.9951, -33.0669, 1.11729, 0.59", "-87.7643, -33.4534, 0.64456, 0.66", "-88.6562, -33.8467, -0.0272479, 0.52", "-89.3737, -33.9842, -0.65865, 0.88", "-90.0218, -33.897, -1.30096, 1.11", "-91.0192, -33.5361, -2.36901, 0.81", "-91.7375, -33.1942, -3.17307, 0.96", "-92.5812, -32.7581, -4.1957, 1.03", "-93.533, -32.2624, -5.48368, 0.59", "-94.5, -31.8601, -6.99998, 1.11", "-95.056, -31.7597, -7.98301, 1.33", "-95.6505, -31.8446, -9.10933, 0.81", "-96.4326, -32.1513, -10.5225, 0.66", "-96.9775, -32.445, -11.4005, 0.81", "-97.8585, -32.9326, -12.4653, 0.66", "-98.8915, -33.4357, -13.3626, 0.74", "-99.6793, -33.7661, -13.921, 0.52", "-100.496, -34.0553, -14.4318, 0.96", "-101.483, -34.352, -15.0282, 1.11", "-102.723, -34.7361, -15.9097, 0.44", "-103.303, -35.0408, -16.5759, 0.66", "-103.657, -35.7234, -17.8877, 0.96", "-103.815, -36.2072, -18.7033, 0.96", "-104.088, -36.9312, -19.7938, 0.81", "-104.365, -37.5193, -20.5817, 0.81", "-104.761, -38.0274, -21.2248, 1.03", "-105.856, -38.6059, -21.8947, 0.88", "-107.469, -38.9555, -22.4683, 0.81", "-108.939, -39.0473, -22.9493, 0.66", "-110.351, -38.8926, -23.4171, 0.37", "-111.571, -38.4513, -23.9344, 0.37", "-112.214, -38.0575, -24.2954, 0.59", "-113.234, -37.1045, -25.0144, 0.59", "-113.699, -36.5469, -25.4627, 0.88", "-114.275, -35.7321, -26.1478, 1.18", "-114.749, -35.0008, -26.7903, 0.88", "-115.291, -34.0814, -27.5409, 0.88", "-116.003, -32.8125, -28.3901, 0.88", "-116.708, -31.4253, -29.141, 0.59", "-117.113, -30.5658, -29.5703, 0.88", "-117.333, -30.0762, -29.8097, 0.96", "-117.814, -28.8937, -30.3986, 0.59", "-118.237, -27.853, -30.9412, 0.81", "-118.696, -26.8709, -31.4437, 0.81", "-119.126, -26.0735, -31.7748, 1.03", "-119.712, -25.1117, -32.0741, 1.25", "-120.231, -24.3166, -32.239, 1.11", "-121.027, -23.1859, -32.3807, 1.11", "-121.638, -22.3312, -32.43, 0.59", "-122.265, -21.411, -32.4326, 0.81", "-123.078, -20.0659, -32.4061, 0.74", "-123.669, -18.9579, -32.3825, 0.59", "-124.103, -18.0414, -32.3813, 0.81", "-124.554, -16.9288, -32.4401, 0.74", "-124.917, -15.8736, -32.5534, 0.66", "-125.212, -14.8591, -32.6923, 0.59", "-125.409, -14.0777, -32.7978, 0.59", "-125.671, -12.9795, -32.915, 0.81", "-125.944, -11.9981, -32.977, 0.88", "-126.396, -10.7181, -32.9891, 0.74", "-126.883, -9.62244, -32.9603, 0.66", "-127.492, -8.45684, -32.9167, 0.66", "-128.15, -7.29195, -32.8786, 0.66", "-128.938, -5.90688, -32.8294, 0.88", "-129.633, -4.65157, -32.7447, 1.11", "-130.428, -3.08853, -32.5691, 0.66", "-130.926, -1.84377, -32.3838, 0.88", "-131.275, -0.414353, -32.1323, 0.66", "-131.468, 1.3459, -31.7897, 0.52", "-131.498, 2.85925, -31.465, 0.88", "-131.467, 3.98146, -31.2196, 0.52", "-131.407, 5.10791, -30.942, 0.74", "-131.338, 6.61668, -30.5531, 0.52", "-131.35, 7.36647, -30.3702, 0.37", "-131.497, 8.37892, -30.2032, 0.37", "-131.768, 9.35218, -30.1154, 0.37", "-132.098, 10.1475, -30.0503, 0.59", "-132.492, 10.8953, -30.0029, 0.44", "-133.082, 11.86, -29.9658, 0.44", "-133.551, 12.6745, -29.9963, 0.44", "-133.89, 13.3405, -30.1089, 0.37", "-134.222, 14.0094, -30.2307, 0.37", "-134.692, 14.8758, -30.4747, 0.37", "-134.962, 15.3224, -30.6573, 0.37", "-135.54, 16.1411, -31.1984, 0.37", "-136.114, 16.8852, -31.9461, 0.29", "-143.726, 22.234, -35.4052, 0.29", "-151.159, 28.1308, -38.2614, 0.29", "-158.275, 34.9337, -39.0868, 0.29", "-163.685, 42.8936, -41.1084, 0.29", "-168.496, 51.3442, -42.4242, 0.29" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "-75.7361, -33.9804, 4.22219, 1.62", "-76.7696, -34.8084, 3.52249, 1.62", "-77.5375, -35.2148, 3.27697, 1.4", "-78.999, -35.8436, 3.19788, 1.25", "-80.0022, -36.3264, 3.33834, 1.25", "-80.928, -36.8462, 3.58151, 1.33", "-82.2461, -37.6568, 3.98754, 0.88", "-83.5458, -38.4155, 4.55303, 0.88", "-84.6584, -39.0978, 5.13492, 1.33", "-85.9155, -39.928, 5.87186, 1.25", "-86.8889, -40.6803, 6.46038, 1.4", "-87.9141, -41.6515, 7.06827, 1.25", "-88.9348, -42.8024, 7.63109, 1.33", "-89.85, -44.0424, 8.10136, 1.62", "-90.9282, -45.8266, 8.61009, 0.81", "-91.5598, -47.1185, 8.89992, 0.96", "-92.0318, -48.4248, 9.10077, 0.96", "-92.2685, -49.3098, 9.15949, 1.47", "-92.7, -51.0669, 9.09058, 1.25", "-93.0863, -52.6003, 8.92045, 1.03", "-93.2662, -53.199, 8.80253, 1.25", "-93.7794, -54.543, 8.50965, 1.25", "-94.4136, -55.9611, 8.23895, 0.88", "-95.1558, -57.5158, 8.05929, 1.4", "-95.7509, -58.6697, 8.06251, 1.47", "-96.5441, -60.2144, 8.24767, 0.96", "-97.0257, -61.1627, 8.43066, 1.18", "-97.6585, -62.4778, 8.73776, 1.4", "-98.4105, -64.2283, 9.1405, 0.66", "-99.003, -65.7988, 9.34282, 0.96", "-99.456, -66.8895, 9.18523, 1.4", "-99.8883, -67.8261, 8.68863, 1.18", "-100.454, -68.9685, 7.78743, 0.96", "-100.836, -69.6358, 7.12064, 1.4", "-101.502, -70.7101, 5.88053, 1.62", "-102.097, -71.7208, 4.66749, 1.62", "-102.774, -73.045, 3.16466, 1.03", "-103.097, -73.7551, 2.40476, 0.88", "-103.584, -74.968, 1.19405, 0.96", "-103.949, -75.8777, 0.315556, 0.96", "-104.374, -76.9861, -0.713957, 1.11", "-104.705, -78.0727, -1.72112, 1.62", "-104.833, -78.6379, -2.30712, 1.7", "-104.898, -79.447, -3.12743, 1.84" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "253.889, -87.0166, -73.0107, 0.29", "263.734, -87.0284, -74.767, 0.29", "273.301, -86.8695, -77.672, 0.29", "282.773, -87.8986, -80.7007, 0.29", "292.196, -90.2382, -83.0353, 0.29", "301.669, -92.7058, -84.9982, 0.29", "310.99, -93.2099, -88.5837, 0.29" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "253.889, -87.0166, -73.0107, 0.29", "261.692, -93.0775, -73.7004, 0.29", "269.713, -98.891, -74.0392, 0.29", "277.442, -105.034, -73.2975, 0.29", "284.919, -111.496, -72.8764, 0.29", "292.191, -117.841, -70.6937, 0.29", "299.437, -124.238, -68.5842, 0.29" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-145.202, -153.043, -169.169, 0.29", "-153.349, -158.046, -171.872, 0.29", "-161.739, -163.25, -172.923, 0.29", "-170.988, -166.687, -174.351, 0.29", "-180.049, -170.712, -175.274, 0.29", "-188.419, -175.646, -177.356, 0.29", "-196.48, -180.359, -180.769, 0.29", "-204.991, -184.409, -183.982, 0.29" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-145.202, -153.043, -169.169, 0.29", "-153.41, -157.974, -171.824, 0.29", "-161.046, -164.231, -172.541, 0.29", "-168.874, -169.808, -174.989, 0.29", "-177.348, -174.104, -177.952, 0.29", "-186.13, -177.11, -181.61, 0.29", "-195.474, -178.45, -184.897, 0.29", "-203.884, -181.162, -189.538, 0.29" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-62.9512, -113.166, -34.1337, 0.59", "-69.6353, -120.128, -32.0532, 0.59", "-74.6038, -127.717, -28.2137, 0.59", "-78.7502, -135.164, -23.267, 0.59" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-62.9512, -113.166, -34.1337, 0.22", "-70.7053, -119.268, -33.2977, 0.59", "-78.4693, -125.23, -31.7708, 0.59", "-87.2776, -128.912, -28.9147, 0.59" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-116.252, -228.474, -83.0712, 0.22", "-124.441, -234.064, -82.8089, 0.22", "-132.526, -239.549, -81.0811, 0.22", "-140.425, -245.199, -79.0741, 0.22", "-149.564, -249.121, -78.5324, 0.22", "-158.71, -252.409, -76.3012, 0.22", "-167.696, -256.616, -75.5076, 0.22", "-176.331, -261.516, -75.9323, 0.22", "-183.376, -268.217, -77.7058, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-116.252, -228.474, -83.0712, 0.44", "-121.451, -234.534, -88.931, 0.22", "-125.518, -239.382, -96.5948, 0.22", "-129.241, -244.251, -104.418, 0.22", "-132.09, -247.573, -113.378, 0.22", "-135.381, -250.705, -122.258, 0.22", "-139.495, -253.633, -130.863, 0.22", "-142.079, -257.848, -139.502, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "8.95658, -148.193, 63.9747, 0.22", "9.00296, -149.23, 64.5999, 0.22", "9.10949, -150.244, 65.2257, 0.15", "9.26058, -151.197, 65.787, 0.29", "9.39479, -151.97, 66.219, 0.15", "9.58089, -152.909, 66.701, 1.03", "9.82863, -154.117, 67.2813, 0.22", "9.97052, -155.047, 67.7033, 0.88", "10.0514, -155.785, 68.0084, 0.52", "10.0859, -156.213, 68.1756, 0.29", "10.1197, -157.216, 68.5186, 0.15", "10.0708, -158.144, 68.8234, 0.15", "9.95492, -159.163, 69.1597, 0.88", "9.77551, -160.385, 69.5749, 0.22", "9.67811, -161.098, 69.823, 1.11", "9.61355, -161.635, 69.9948, 0.88", "9.46777, -162.731, 70.3376, 0.15", "9.36868, -163.452, 70.5445, 0.15", "9.2977, -164.016, 70.6852, 0.52", "9.18466, -164.951, 70.879, 0.22", "8.99924, -166.522, 71.2189, 0.15", "8.89676, -167.33, 71.4083, 0.15", "8.79465, -168.274, 71.658, 1.18", "8.69505, -169.288, 71.9652, 0.15", "8.64898, -170.109, 72.2512, 0.59", "8.67837, -171.013, 72.5973, 0.22", "8.85268, -172.034, 73.0036, 0.74", "9.11533, -173.05, 73.3728, 0.22", "9.22853, -173.44, 73.5062, 0.59", "9.49271, -174.554, 73.8419, 0.22", "9.65385, -175.364, 74.0621, 0.74", "9.77815, -176.065, 74.2334, 0.59", "9.90914, -176.943, 74.438, 0.22", "10.0062, -177.927, 74.6573, 0.59", "10.0951, -179.159, 74.9443, 0.15", "10.1524, -180.362, 75.2407, 0.22", "10.1626, -181.209, 75.4709, 0.22", "10.1628, -181.952, 75.6936, 0.59", "10.2097, -182.766, 75.9714, 0.15", "10.3126, -183.382, 76.2018, 0.66" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "8.95658, -148.193, 63.9747, 0.22", "7.93014, -149.243, 64.2852, 0.22", "7.53917, -149.679, 64.4158, 0.22", "6.80953, -150.634, 64.6606, 0.37", "6.18811, -151.555, 64.866, 0.37", "5.68384, -152.311, 65.0294, 0.88", "4.85115, -153.528, 65.3291, 1.25", "4.28307, -154.32, 65.5629, 0.22", "3.72791, -155.15, 65.8339, 0.22", "3.37238, -155.754, 66.026, 0.22", "2.92656, -156.572, 66.2948, 0.07", "2.53614, -157.352, 66.5412, 0.07", "2.28305, -157.922, 66.7444, 0.59", "2.01605, -158.577, 66.9753, 1.11", "1.47583, -160.02, 67.4912, 0.22", "1.267, -160.691, 67.707, 0.88", "1.04767, -161.618, 67.9474, 0.15", "0.920246, -162.339, 68.1053, 0.74", "0.759783, -163.697, 68.3562, 0.07", "0.737292, -164.094, 68.4206, 0.74", "0.745348, -164.797, 68.5262, 0.88", "0.779982, -165.861, 68.6532, 0.15", "0.787977, -166.524, 68.6771, 0.15", "0.785061, -167.328, 68.636, 0.15", "0.798103, -167.715, 68.5764, 0.52", "0.843647, -168.418, 68.465, 0.52", "0.933795, -169.172, 68.3376, 0.22", "1.11196, -170.234, 68.1208, 0.88", "1.27826, -171.007, 67.9474, 0.44", "1.58273, -172.296, 67.6333, 0.15", "1.81305, -173.249, 67.3739, 0.15", "1.9471, -173.833, 67.1839, 0.81", "2.07135, -174.49, 66.9111, 0.81", "2.15391, -175.4, 66.4125, 0.22", "2.09225, -176.099, 65.8763, 0.22", "1.95505, -176.554, 65.4265, 0.52", "1.69693, -177.104, 64.7841, 0.66", "1.21127, -177.933, 63.7281, 0.37", "0.841332, -178.493, 62.9473, 0.37", "0.504014, -178.945, 62.2626, 0.22", "0.285675, -179.242, 61.8426, 0.22", "-0.0028411, -179.609, 61.3488, 0.22", "-0.874739, -180.548, 60.1713, 0.37", "-1.39457, -181.0, 59.6505, 0.74", "-1.95821, -181.469, 59.2029, 0.88", "-2.69855, -182.116, 58.6784, 0.22", "-3.01145, -182.402, 58.4655, 0.22", "-3.50015, -182.952, 58.1059, 0.22", "-3.97034, -183.706, 57.6776, 0.29", "-4.27037, -184.438, 57.2708, 0.29", "-4.52289, -185.351, 56.7528, 0.59", "-4.72588, -186.319, 56.2296, 0.29", "-4.92992, -187.424, 55.7042, 0.29", "-5.08879, -188.411, 55.2683, 0.52", "-5.28375, -189.79, 54.6804, 0.52", "-5.43066, -190.956, 54.2006, 0.81", "-5.54585, -192.019, 53.7955, 1.11", "-5.67778, -193.347, 53.3662, 0.59", "-5.724, -194.357, 53.0907, 0.22", "-5.68183, -194.923, 52.9642, 0.22", "-5.45243, -195.988, 52.7722, 0.81", "-5.16641, -197.046, 52.6302, 0.15", "-4.72619, -198.518, 52.4895, 0.22", "-4.41965, -199.508, 52.4601, 0.22", "-4.21783, -200.255, 52.4953, 0.81", "-3.92718, -201.549, 52.6096, 0.15", "-3.77015, -202.549, 52.7385, 0.15", "-3.72854, -202.953, 52.8042, 0.29", "-3.6345, -203.886, 52.9966, 0.96", "-3.55847, -205.433, 53.3494, 0.07", "-3.56335, -206.34, 53.5516, 0.15", "-3.57602, -207.279, 53.7486, 0.07", "-3.57031, -207.784, 53.843, 0.29", "-3.57358, -208.495, 53.965, 0.07", "-3.61632, -209.253, 54.0908, 0.66", "-3.74231, -210.346, 54.2925, 0.07", "-3.80112, -210.778, 54.3666, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "17.0336, -102.938, -32.3553, 0.59", "17.1364, -102.33, -33.3736, 0.59", "17.2457, -101.82, -34.4159, 0.59", "17.2588, -101.363, -35.5746, 0.59", "17.1747, -101.269, -36.0537, 0.59", "16.8175, -101.319, -36.9129, 0.59", "16.6685, -101.385, -37.1722, 0.59", "16.3001, -101.674, -37.6635, 0.59", "15.633, -102.373, -38.4851, 0.74", "14.815, -103.469, -39.5063, 0.66", "14.4197, -104.08, -40.0298, 0.88", "13.8284, -105.133, -40.8456, 0.88", "13.3878, -106.122, -41.542, 0.88", "13.0753, -107.015, -42.1215, 0.59", "12.7335, -108.197, -42.8396, 0.81", "12.4676, -109.134, -43.3824, 0.66", "12.2113, -109.863, -43.7682, 1.03", "11.7568, -110.725, -44.1473, 0.52", "11.1722, -111.405, -44.4002, 0.52", "10.2937, -112.051, -44.6369, 0.44", "9.54808, -112.447, -44.802, 0.44", "8.82431, -112.723, -44.9466, 0.81", "7.95399, -112.938, -45.1483, 0.52", "6.81198, -113.079, -45.4601, 0.74", "5.07268, -113.124, -46.0409, 0.37", "4.11211, -113.092, -46.4321, 0.37", "3.09522, -112.945, -46.8857, 0.29", "2.3122, -112.686, -47.2406, 0.29", "1.64735, -112.316, -47.5203, 0.22", "1.18319, -111.941, -47.6673, 0.22", "0.30874, -110.928, -47.7242, 0.22", "-0.179287, -110.251, -47.5868, 0.29", "-0.546763, -109.63, -47.3018, 0.29", "-1.0581, -108.667, -46.662, 0.22", "-1.18253, -108.317, -46.3711, 0.22", "-1.24275, -107.724, -45.8345, 0.22", "-1.21863, -107.542, -45.6669, 0.22", "-1.11113, -107.215, -45.3298, 0.22", "-9.10647, -110.016, -50.6049, 0.22" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "17.0336, -102.938, -32.3553, 0.22", "15.6844, -103.437, -32.7337, 0.22", "14.51, -103.871, -33.0631, 0.44", "13.7156, -104.164, -33.2858, 0.59", "13.1204, -104.384, -33.4528, 0.59", "3.97783, -106.283, -37.0055, 0.59", "-4.63291, -109.206, -41.1122, 0.59", "-13.1646, -113.164, -44.3881, 0.59", "-21.1042, -115.947, -49.756, 0.59" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-64.7386, -101.942, 6.80352, 0.22", "-64.7774, -103.256, 7.1226, 0.22", "-64.7058, -104.2, 7.3933, 0.22", "-64.6436, -105.018, 7.62821, 0.22", "-64.5558, -106.175, 7.96013, 0.07", "-64.492, -107.015, 8.20112, 0.29", "-64.4213, -107.947, 8.46846, 0.29", "-64.3843, -108.659, 8.78982, 0.29" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-64.7386, -101.942, 6.80352, 0.74", "-65.2128, -103.348, 6.25057, 0.74", "-65.6204, -104.898, 5.41193, 0.81", "-65.8896, -106.018, 4.76044, 0.81", "-66.1561, -107.183, 4.08486, 0.96", "-66.4093, -108.4, 3.42336, 1.03", "-66.7011, -109.857, 2.68739, 1.33", "-66.9489, -111.18, 1.96481, 0.81", "-67.2328, -112.448, 1.2543, 0.66", "-67.4976, -113.35, 0.78922, 1.03", "-67.9779, -114.638, 0.210744, 0.81", "-68.5458, -115.862, -0.239073, 0.59", "-69.1624, -116.941, -0.565928, 0.96", "-69.9508, -118.146, -0.884583, 1.11", "-70.3106, -118.676, -1.02621, 1.11", "-70.6233, -119.137, -1.14731, 0.88", "-71.4414, -120.422, -1.50026, 1.33", "-72.266, -121.993, -1.90609, 0.66", "-72.6756, -123.065, -2.14243, 0.81", "-72.9728, -124.105, -2.34634, 0.81", "-73.1999, -125.047, -2.53007, 0.96", "-73.409, -126.064, -2.73076, 0.52", "-73.5356, -127.041, -2.92207, 0.52", "-73.5737, -128.01, -3.09115, 0.66", "-73.5889, -128.998, -3.26247, 0.74", "-73.6042, -129.454, -3.32666, 0.74" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-114.043, -287.145, 95.1907, 0.29", "-113.207, -288.088, 95.4529, 0.29", "-112.775, -288.557, 95.5913, 0.81", "-112.288, -289.104, 95.7918, 0.66", "-111.52, -290.018, 96.1655, 0.52", "-110.657, -291.07, 96.5984, 0.22", "-110.153, -291.714, 96.8464, 0.37", "-109.681, -292.317, 97.096, 0.37", "-109.186, -293.091, 97.3771, 0.22", "-108.822, -293.89, 97.6204, 0.22", "-108.577, -294.779, 97.8382, 0.29", "-108.396, -295.955, 98.0414, 0.22", "-108.356, -296.499, 98.1096, 0.81", "-108.346, -297.997, 98.2245, 0.22", "-108.398, -298.863, 98.2487, 0.22", "-108.44, -299.164, 98.2533, 0.22", "-108.544, -299.616, 98.2789, 0.22", "-108.771, -300.514, 98.4004, 0.44", "-108.867, -301.068, 98.5111, 0.22", "-108.893, -301.653, 98.6753, 0.22", "-108.845, -302.332, 98.8894, 0.88", "-108.668, -303.448, 99.2601, 0.22", "-108.454, -304.26, 99.5349, 0.15", "-108.197, -305.047, 99.7882, 0.59", "-107.877, -305.921, 100.04, 0.15", "-107.568, -306.675, 100.257, 0.15", "-107.247, -307.384, 100.45, 0.66", "-106.81, -308.279, 100.654, 0.15", "-106.391, -309.216, 100.831, 0.15", "-106.115, -309.971, 100.975, 0.52", "-105.796, -311.127, 101.182, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-114.043, -287.145, 95.1907, 0.29", "-112.562, -287.561, 96.4244, 0.29", "-111.91, -287.768, 97.0228, 0.44", "-111.023, -288.126, 97.9746, 0.66", "-110.307, -288.526, 98.8908, 0.96", "-109.574, -289.08, 99.9501, 0.29", "-109.081, -289.551, 100.692, 0.29", "-108.618, -290.138, 101.454, 0.52", "-108.137, -290.901, 102.32, 0.66", "-107.659, -291.814, 103.274, 0.29", "-107.306, -292.516, 103.958, 0.52", "-106.757, -293.511, 104.881, 0.29", "-106.293, -294.24, 105.494, 0.29", "-106.132, -294.465, 105.676, 0.29", "-105.758, -294.945, 106.071, 0.66", "-105.303, -295.45, 106.55, 0.44", "-104.873, -295.845, 107.029, 0.44", "-104.201, -296.407, 107.857, 0.88", "-103.243, -297.177, 109.097, 0.44", "-102.662, -297.633, 109.872, 0.44", "-101.999, -298.141, 110.725, 0.44", "-101.22, -298.629, 111.606, 0.29", "-100.696, -298.845, 112.099, 0.29", "-100.181, -298.971, 112.487, 0.44", "-99.6309, -299.103, 112.777, 0.59", "-98.7844, -299.424, 113.115, 0.29", "-98.1461, -299.872, 113.312, 0.29", "-97.6885, -300.319, 113.439, 0.59", "-97.0804, -300.995, 113.553, 0.66", "-95.9835, -302.349, 113.714, 0.29", "-95.488, -303.005, 113.823, 0.96", "-94.4242, -304.482, 114.133, 0.29", "-93.8905, -305.234, 114.316, 0.29", "-93.1307, -306.225, 114.597, 0.15", "-92.7118, -306.703, 114.745, 0.29", "-91.5649, -307.786, 115.094, 0.29", "-91.1297, -308.145, 115.196, 0.52", "-90.5204, -308.63, 115.301, 0.37", "-89.9054, -309.263, 115.363, 0.22", "-89.2726, -310.126, 115.407, 0.59", "-88.7471, -311.078, 115.375, 0.29", "-88.4901, -311.809, 115.302, 1.03", "-88.2844, -312.88, 115.208, 0.81", "-88.2035, -314.208, 115.115, 0.22", "-88.2, -314.642, 115.078, 0.22", "-88.2031, -315.029, 115.046, 0.22", "-88.2102, -315.524, 114.989, 0.22", "-88.2142, -315.728, 114.961, 0.22", "-88.2616, -316.697, 114.82, 0.44", "-88.3724, -318.108, 114.62, 0.22", "-88.4514, -318.776, 114.512, 0.22", "-88.5982, -319.598, 114.373, 0.59", "-88.8959, -320.689, 114.195, 0.88", "-89.2189, -321.591, 114.055, 0.88", "-89.6157, -322.472, 113.929, 0.29", "-90.0213, -323.295, 113.833, 0.29", "-90.4371, -324.192, 113.749, 0.59", "-90.9188, -325.453, 113.701, 0.22", "-91.1021, -325.984, 113.687, 0.22", "-91.3501, -326.794, 113.687, 0.88", "-91.6486, -327.927, 113.734, 0.44", "-91.8945, -329.121, 113.862, 0.22", "-92.0448, -330.356, 114.037, 0.07" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-13.8633, -119.967, 24.7345, 0.81", "-14.2512, -120.388, 24.9839, 0.81", "-14.5518, -120.908, 25.2108, 0.52", "-14.845, -121.84, 25.4977, 0.29", "-14.9348, -122.406, 25.631, 0.37", "-15.0479, -123.143, 25.7651, 0.37", "-15.1771, -123.868, 25.8865, 0.59", "-15.3723, -124.878, 26.0249, 0.88", "-15.6777, -125.926, 26.1265, 1.03", "-16.3595, -127.383, 26.1951, 0.29", "-16.8258, -127.981, 26.2196, 0.29", "-17.4207, -128.531, 26.2578, 0.52", "-18.2404, -129.177, 26.3497, 1.03", "-19.5855, -130.169, 26.6002, 1.7", "-20.5701, -130.884, 26.8801, 1.47", "-21.7215, -131.765, 27.3503, 0.29", "-22.1564, -132.159, 27.5845, 0.59", "-22.9067, -132.896, 28.0739, 0.81", "-23.768, -133.75, 28.7228, 0.44", "-24.5287, -134.467, 29.346, 0.66", "-25.335, -135.089, 29.9441, 1.47", "-26.5626, -135.85, 30.7384, 0.44", "-27.3806, -136.27, 31.1756, 0.44", "-28.6469, -136.833, 31.7467, 0.74", "-29.7362, -137.288, 32.1714, 1.18", "-31.6177, -138.099, 32.784, 1.18", "-32.4526, -138.485, 32.9855, 0.74", "-33.5007, -138.999, 33.1735, 0.37", "-34.075, -139.313, 33.2268, 0.37", "-34.6041, -139.593, 33.2157, 0.37", "-35.5055, -139.989, 33.1073, 0.59", "-36.9499, -140.44, 32.8626, 0.29", "-37.6756, -140.602, 32.721, 0.88", "-38.6441, -140.759, 32.5342, 1.33", "-40.4011, -140.963, 32.2287, 0.44", "-41.6638, -141.077, 32.0433, 0.96", "-42.859, -141.164, 31.8695, 0.22", "-43.7445, -141.228, 31.7441, 0.22", "-44.3239, -141.286, 31.6484, 0.52", "-45.8578, -141.489, 31.3824, 0.29", "-46.4979, -141.59, 31.2738, 0.15", "-47.8617, -141.785, 31.0044, 1.03" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-13.8633, -119.967, 24.7345, 0.22", "-14.6951, -119.814, 25.2563, 0.22", "-15.9519, -119.67, 26.0893, 0.96", "-16.8552, -119.635, 26.7014, 0.22", "-17.4991, -119.634, 27.1511, 0.52", "-18.2732, -119.626, 27.688, 0.52", "-19.265, -119.602, 28.3508, 0.37", "-20.1354, -119.603, 28.9441, 0.07", "-20.9081, -119.614, 29.4851, 0.29", "-21.6488, -119.624, 30.0418, 0.29", "-22.2409, -119.645, 30.5056, 1.11", "-23.235, -119.705, 31.2864, 0.74", "-24.3409, -119.818, 32.1619, 0.22", "-24.9265, -119.962, 32.6308, 0.22", "-25.6953, -120.272, 33.2538, 0.22", "-26.4098, -120.684, 33.8361, 0.22", "-26.7114, -120.902, 34.0767, 1.18", "-27.3565, -121.437, 34.5534, 1.62", "-28.4052, -122.373, 35.2717, 0.22", "-29.2952, -123.139, 35.8158, 0.07", "-29.7152, -123.484, 36.0427, 0.66", "-30.3708, -124.018, 36.3881, 0.15", "-31.1137, -124.639, 36.8012, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.32629, -128.662, -38.3543, 0.59", "0.651076, -137.136, -39.9662, 0.59", "-4.98811, -145.157, -40.6879, 0.59" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "5.32629, -128.662, -38.3543, 0.37", "1.23573, -137.557, -38.1733, 0.59", "-2.29821, -146.516, -39.9302, 0.59", "-6.85844, -154.926, -42.121, 0.59", "-13.7572, -161.951, -42.8262, 0.59", "-21.052, -168.418, -44.4961, 0.59", "-28.6763, -174.463, -46.348, 0.59" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_160",
    "id" : "dend_160",
    "points3d" : [ "-141.676, -91.6294, 64.0839, 0.59", "-142.456, -92.0773, 63.8993, 0.59", "-143.298, -92.2505, 63.5845, 0.81", "-144.451, -92.1945, 63.0175, 0.29", "-145.094, -92.1059, 62.6592, 0.29", "-145.949, -91.929, 62.1136, 0.44", "-146.795, -91.7422, 61.5022, 0.66", "-147.728, -91.457, 60.691, 0.96", "-148.515, -91.1581, 59.9763, 0.74", "-149.336, -90.8296, 59.2475, 0.96", "-150.278, -90.5252, 58.4958, 0.66", "-151.35, -90.3288, 57.8204, 0.88", "-152.699, -90.2823, 57.2102, 0.29", "-153.972, -90.42, 56.8352, 0.29", "-154.891, -90.6213, 56.6857, 0.52", "-156.235, -90.9756, 56.5827, 0.88", "-157.827, -91.4752, 56.6038, 0.96", "-159.388, -92.0296, 56.7539, 0.66", "-160.644, -92.5588, 56.9452, 0.52", "-161.267, -92.883, 57.0222, 0.52" ],
    "parent" : "dend_158",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_159",
    "id" : "dend_159",
    "points3d" : [ "-141.676, -91.6294, 64.0839, 0.07", "-142.282, -90.6213, 64.3738, 0.07", "-142.616, -90.1593, 64.5398, 0.07", "-142.963, -89.7246, 64.7226, 0.29", "-143.462, -89.0918, 65.0654, 0.15", "-143.985, -88.4252, 65.4741, 0.29", "-144.649, -87.6343, 66.056, 0.29", "-145.319, -86.9117, 66.7121, 0.07", "-145.721, -86.5396, 67.1571, 0.29", "-146.543, -85.8185, 68.1847, 0.15", "-146.916, -85.5198, 68.671, 0.29", "-147.568, -85.0566, 69.4834, 0.15", "-147.965, -84.8095, 69.955, 0.37", "-148.627, -84.4318, 70.676, 0.37", "-149.349, -84.0554, 71.4022, 0.22", "-150.334, -83.5957, 72.2612, 0.15", "-150.889, -83.3276, 72.7145, 0.52", "-151.86, -82.7909, 73.4202, 0.07", "-152.328, -82.5347, 73.7344, 0.22" ],
    "parent" : "dend_158",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_155",
    "id" : "dend_155",
    "points3d" : [ "-182.238, -277.557, -18.6349, 0.22", "-185.518, -286.766, -18.8308, 0.22", "-188.177, -296.158, -18.465, 0.22" ],
    "parent" : "dend_153",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_154",
    "id" : "dend_154",
    "points3d" : [ "-182.238, -277.557, -18.6349, 0.44", "-185.332, -286.818, -19.1089, 0.22", "-190.595, -294.951, -20.7576, 0.22" ],
    "parent" : "dend_153",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_149",
    "id" : "dend_149",
    "points3d" : [ "-179.975, -85.9792, -14.4407, 1.11", "-180.19, -86.8573, -12.1292, 1.11", "-180.361, -87.1695, -10.9586, 1.11", "-180.588, -87.3724, -9.57895, 1.11", "-180.774, -87.369, -8.09856, 0.88", "-180.893, -87.1487, -6.70567, 0.88", "-180.97, -86.7216, -5.34216, 0.88", "-181.019, -85.6764, -3.8238, 1.4", "-180.995, -84.6004, -2.83001, 1.03", "-180.862, -82.7212, -1.61093, 0.59", "-180.729, -81.437, -1.02495, 0.59", "-180.592, -80.2033, -0.666394, 0.81", "-180.513, -79.2495, -0.536922, 0.66", "-180.486, -78.3234, -0.538072, 1.25", "-180.576, -77.517, -0.650514, 1.18", "-180.915, -76.3862, -0.998496, 1.03", "-181.417, -75.2051, -1.47296, 0.59", "-181.963, -74.1418, -1.91497, 0.59", "-182.27, -73.5745, -2.13196, 1.11", "-182.864, -72.4658, -2.50846, 2.06", "-183.292, -71.6335, -2.7019, 2.06", "-184.099, -69.8447, -2.85244, 1.11", "-184.541, -68.6198, -2.79625, 1.25", "-184.911, -67.2016, -2.52672, 0.66", "-185.04, -66.4758, -2.33266, 0.66", "-185.214, -64.8259, -1.72301, 0.81", "-185.3, -63.3505, -1.07061, 0.96", "-185.321, -62.4528, -0.646704, 0.96", "-185.351, -60.7931, 0.123504, 0.66", "-185.367, -60.0657, 0.417644, 1.4", "-185.378, -58.6128, 0.805894, 1.18", "-185.366, -57.5913, 0.875501, 0.81", "-185.358, -56.4404, 0.768232, 1.03", "-185.382, -55.5779, 0.594396, 1.33", "-185.477, -54.3032, 0.238521, 0.96", "-185.682, -52.7624, -0.198612, 0.88", "-185.905, -51.5831, -0.547584, 0.96", "-186.086, -50.729, -0.745741, 1.18", "-186.387, -49.2775, -1.02024, 0.96", "-186.718, -47.7821, -1.24262, 1.25", "-186.966, -46.6699, -1.36505, 0.81", "-187.195, -45.374, -1.49633, 0.52", "-187.349, -43.7474, -1.63477, 0.66", "-187.364, -42.4102, -1.71282, 0.96", "-187.275, -41.0934, -1.72453, 1.33", "-187.131, -39.7802, -1.66063, 0.74", "-186.932, -38.0356, -1.47303, 0.52", "-186.846, -36.9192, -1.3128, 0.88", "-186.844, -35.8077, -1.09295, 0.96", "-186.946, -34.3247, -0.675859, 1.25", "-187.153, -32.8854, -0.116092, 0.88", "-187.505, -31.6611, 0.534055, 0.59", "-187.965, -30.7359, 1.19621, 0.44", "-188.353, -30.2612, 1.66235, 0.29", "-188.63, -30.0619, 1.98557, 0.29", "-189.562, -29.5852, 3.17892, 0.29", "-190.122, -29.32, 3.98187, 1.25", "-190.509, -29.0889, 4.64648, 1.55", "-190.977, -28.6146, 5.7283, 1.25", "-191.361, -27.8556, 6.96977, 0.44", "-191.675, -26.9046, 8.20019, 0.44", "-191.798, -26.4186, 8.7524, 0.59", "-191.989, -25.5782, 9.70637, 0.74", "-192.204, -24.797, 10.7093, 1.03", "-192.461, -24.313, 11.5429, 1.33", "-192.957, -23.9877, 12.6311, 0.22", "-193.397, -23.9676, 13.4297, 0.22", "-193.961, -24.1191, 14.4627, 0.22", "-194.628, -24.4987, 15.8071, 0.59", "-195.27, -25.0318, 17.4644, 0.74", "-195.603, -25.3988, 18.6103, 0.74", "-195.82, -25.6689, 19.7744, 0.74", "-195.985, -25.7727, 20.9779, 0.74", "-196.085, -25.6817, 22.2294, 0.74", "-196.16, -25.168, 24.2049, 1.03", "-196.162, -24.8301, 24.9898, 1.03", "-196.183, -24.0146, 26.4627, 0.81", "-196.242, -23.4186, 27.4248, 0.59", "-196.343, -22.935, 28.1788, 0.59", "-196.428, -22.6399, 28.6404, 0.59", "-196.516, -22.1828, 29.3295, 0.59", "-196.532, -22.0048, 29.5601, 0.59", "-196.592, -21.4593, 30.0018, 0.59", "-196.657, -21.1392, 30.1345, 0.59", "-196.805, -20.5379, 30.3188, 0.59", "-197.017, -19.6567, 30.581, 0.59", "-197.352, -18.2681, 30.9998, 0.37", "-197.618, -17.152, 31.3531, 1.18", "-197.911, -15.7951, 31.8271, 0.22", "-198.113, -14.8234, 32.2431, 0.88", "-198.355, -13.7105, 32.8328, 0.37", "-198.536, -12.9917, 33.2977, 1.25", "-198.743, -12.3137, 33.8166, 1.4", "-199.184, -11.1579, 34.8108, 0.29", "-199.596, -10.2097, 35.6635, 0.29", "-199.862, -9.60933, 36.1772, 0.29", "-200.093, -9.01283, 36.6293, 1.11", "-200.215, -8.58484, 36.9005, 1.77", "-200.538, -6.89042, 37.7557, 0.15", "-200.649, -5.95594, 38.1203, 0.59", "-200.678, -5.06774, 38.4057, 0.59", "-200.63, -3.83043, 38.8182, 0.22", "-200.522, -2.59145, 39.2894, 0.37", "-200.436, -1.69965, 39.6668, 0.81", "-200.384, -0.931594, 40.0593, 1.18", "-200.385, -0.0607392, 40.5869, 1.55", "-200.477, 1.30499, 41.5799, 0.22", "-200.576, 2.18585, 42.3172, 0.74", "-200.632, 2.68671, 42.7768, 1.03", "-200.745, 3.86253, 43.9353, 0.22", "-200.829, 4.69343, 44.7757, 0.96", "-200.931, 5.50376, 45.5989, 0.15", "-200.983, 5.93254, 46.0185, 0.15", "-201.016, 6.4519, 46.5046, 0.74", "-200.986, 7.30771, 47.2809, 0.22", "-200.872, 7.9999, 47.8604, 0.81" ],
    "parent" : "dend_131",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_132",
    "id" : "dend_132",
    "points3d" : [ "-179.975, -85.9792, -14.4407, 0.96", "-181.424, -87.1949, -14.2809, 0.96", "-182.313, -87.925, -14.2407, 1.03", "-183.872, -89.2055, -14.1701, 0.96", "-184.657, -89.8505, -14.1346, 1.11", "-186.08, -91.0189, -14.0702, 0.96", "-187.298, -92.0197, -14.0151, 1.11", "-188.754, -93.1658, -13.8789, 0.96" ],
    "parent" : "dend_131",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_120",
    "id" : "dend_120",
    "points3d" : [ "-147.743, -55.401, -7.09932, 0.96", "-148.743, -55.4693, -7.09967, 0.96", "-150.53, -55.7844, -7.19756, 0.66", "-151.993, -56.2286, -7.26281, 0.59", "-153.229, -56.7563, -7.37048, 0.66", "-154.279, -57.3272, -7.51978, 0.66", "-155.353, -58.0117, -7.74975, 0.81", "-156.262, -58.7534, -8.0411, 0.66", "-157.253, -59.7242, -8.47496, 0.74", "-158.084, -60.6272, -8.92909, 0.88", "-159.081, -61.7654, -9.49294, 1.18", "-159.86, -62.6682, -9.90169, 0.96", "-160.53, -63.42, -10.2344, 0.88", "-161.288, -64.2472, -10.5978, 0.59", "-162.382, -65.4506, -11.0901, 0.59", "-162.977, -66.1523, -11.2895, 0.66", "-163.903, -67.3615, -11.4865, 0.96", "-164.603, -68.3038, -11.5861, 0.44", "-165.382, -69.3686, -11.6987, 0.66", "-165.938, -70.0913, -11.7813, 0.29", "-166.687, -70.9939, -11.8945, 1.03", "-167.579, -71.9827, -12.0099, 0.29", "-168.496, -72.8313, -12.0828, 0.37", "-169.324, -73.4485, -12.1009, 0.44", "-170.131, -73.8473, -11.981, 0.66", "-170.878, -74.0978, -11.7533, 0.52", "-171.968, -74.3383, -11.386, 0.22", "-172.695, -74.4244, -11.0561, 0.88", "-173.106, -74.4454, -10.8285, 0.88", "-174.994, -74.3567, -9.69112, 0.44", "-176.028, -74.1515, -9.03615, 0.44", "-176.927, -73.82, -8.49501, 1.11", "-177.87, -73.3262, -7.96953, 0.74", "-178.331, -73.0107, -7.75717, 0.74", "-178.884, -72.5338, -7.55761, 0.44", "-179.57, -71.8071, -7.40452, 0.44", "-180.034, -71.2592, -7.31226, 1.18", "-180.472, -70.7059, -7.24811, 1.84", "-181.54, -69.3036, -7.17302, 0.44", "-181.934, -68.7435, -7.14895, 0.52", "-182.411, -68.0089, -7.16901, 0.37", "-182.6, -67.6688, -7.2107, 0.37", "-183.134, -66.4952, -7.43402, 0.81", "-183.564, -65.2755, -7.74006, 0.66", "-183.819, -64.3109, -8.04489, 0.52", "-184.059, -63.0937, -8.51048, 0.88", "-184.239, -61.9413, -9.00571, 0.52", "-184.365, -60.9489, -9.48422, 1.03", "-184.41, -60.3016, -9.86031, 0.81", "-184.4, -59.8129, -10.2226, 0.29", "-184.334, -59.3165, -10.6404, 0.29", "-193.923, -60.6464, -13.13, 0.29" ],
    "parent" : "dend_118",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_119",
    "id" : "dend_119",
    "points3d" : [ "-147.743, -55.401, -7.09932, 0.37", "-147.803, -54.691, -7.07349, 0.37", "-148.15, -53.315, -7.12351, 0.81", "-148.504, -52.3363, -7.26229, 0.52", "-148.796, -51.5806, -7.48536, 0.22", "-149.111, -50.855, -7.75651, 0.29", "-149.454, -50.1232, -8.09951, 0.29", "-149.786, -49.4366, -8.61991, 0.37", "-150.116, -48.6763, -9.38501, 0.81", "-150.365, -47.8474, -10.3868, 0.66", "-150.405, -47.4491, -10.9127, 1.11", "-150.38, -46.8164, -11.7629, 0.96", "-150.303, -45.5497, -13.4747, 0.74", "-150.313, -45.0269, -14.1548, 0.52", "-150.434, -44.3716, -14.9646, 0.52", "-150.67, -43.7975, -15.5825, 0.52", "-151.102, -43.0926, -16.2412, 0.74", "-151.868, -42.1526, -16.9425, 0.66", "-152.682, -41.2751, -17.4621, 0.96", "-153.563, -40.3415, -17.9898, 0.66", "-154.558, -39.3142, -18.5831, 0.66", "-155.348, -38.4924, -19.0956, 0.29", "-155.968, -37.8293, -19.5095, 0.66", "-156.622, -37.073, -19.9802, 0.22", "-157.458, -36.0183, -20.6681, 0.52", "-158.179, -35.026, -21.3064, 0.29", "-158.719, -34.2406, -21.9303, 0.29", "-162.11, -27.133, -27.8769, 0.29", "-167.196, -21.6128, -34.363, 0.29", "-171.087, -15.776, -41.3651, 0.29", "-176.767, -11.8271, -48.5296, 0.29" ],
    "parent" : "dend_118",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_109",
    "id" : "dend_109",
    "points3d" : [ "-104.898, -79.447, -3.12743, 1.03", "-105.997, -80.3286, -3.97165, 1.03", "-107.474, -81.427, -4.80146, 0.88", "-108.586, -82.3445, -5.33693, 0.74", "-109.783, -83.5908, -5.88236, 0.74", "-110.788, -84.9568, -6.33334, 0.66", "-111.236, -85.7557, -6.52015, 0.66", "-111.607, -86.6151, -6.55672, 0.66", "-111.903, -87.783, -6.4309, 0.88", "-112.112, -89.4441, -6.11263, 1.25", "-112.18, -90.9038, -5.76105, 0.74", "-112.202, -92.2965, -5.40062, 1.03", "-112.246, -93.5195, -5.00885, 0.74", "-112.332, -94.2805, -4.70819, 0.74", "-112.704, -95.7331, -4.02538, 0.96", "-113.028, -96.5475, -3.60644, 0.66", "-113.573, -97.616, -3.02689, 0.59", "-114.108, -98.4256, -2.59896, 0.88", "-114.86, -99.3462, -2.17524, 1.4", "-116.0, -100.56, -1.69093, 0.96", "-117.355, -101.905, -1.29192, 0.81", "-118.044, -102.567, -1.15576, 0.81", "-119.651, -104.163, -0.94759, 0.88", "-120.915, -105.575, -0.861738, 0.74", "-121.572, -106.472, -0.830751, 0.81", "-122.351, -107.854, -0.778757, 0.96", "-122.836, -108.844, -0.761135, 0.96", "-123.293, -110.154, -0.741257, 0.74", "-123.488, -111.525, -0.66966, 0.59", "-123.487, -113.328, -0.45344, 0.59", "-123.367, -114.509, -0.268645, 0.96" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "-104.898, -79.447, -3.12743, 0.59", "-105.808, -79.8989, -2.45386, 0.59", "-107.22, -80.439, -1.93615, 0.59", "-108.478, -80.9043, -1.6457, 0.59", "-109.303, -81.2278, -1.54529, 0.59", "-110.112, -81.5865, -1.49602, 1.03", "-111.976, -82.5777, -1.43998, 0.81", "-113.504, -83.5137, -1.51347, 0.66", "-113.94, -83.8563, -1.5546, 0.66", "-115.023, -84.9926, -1.63307, 0.96", "-115.919, -86.3261, -1.58974, 0.66", "-116.588, -87.7106, -1.42492, 0.66", "-117.054, -88.9865, -1.16196, 0.74", "-117.544, -90.4891, -0.776024, 0.59", "-117.808, -91.2612, -0.55086, 0.59", "-118.18, -92.2359, -0.264585, 0.88", "-118.75, -93.3867, 0.0539683, 1.03", "-120.046, -95.2222, 0.508457, 0.59", "-121.036, -96.2399, 0.701075, 0.59", "-122.392, -97.3138, 0.843965, 0.59", "-123.581, -98.0665, 0.926453, 0.59", "-124.855, -98.7035, 1.05392, 0.81", "-126.385, -99.2936, 1.32169, 0.96", "-127.66, -99.6548, 1.72281, 0.52", "-128.205, -99.8002, 2.02043, 0.52", "-128.891, -100.026, 2.61881, 0.74", "-130.052, -100.589, 4.08033, 1.25", "-130.691, -101.034, 5.08063, 1.25", "-131.471, -101.718, 6.39722, 0.96", "-132.314, -102.547, 7.78537, 0.66", "-132.917, -103.157, 8.64326, 0.66", "-133.668, -103.91, 9.50782, 0.52", "-134.459, -104.663, 10.1012, 0.52", "-135.511, -105.609, 10.5355, 0.96", "-136.177, -106.193, 10.6059, 0.59", "-137.041, -106.903, 10.5396, 0.59", "-137.567, -107.284, 10.4557, 0.81", "-138.81, -107.977, 10.2413, 1.03", "-139.761, -108.372, 10.1126, 0.74", "-141.389, -108.866, 9.99042, 0.52", "-142.622, -109.147, 10.0102, 0.88", "-143.994, -109.374, 10.1818, 1.03", "-146.044, -109.597, 10.5704, 0.52", "-147.004, -109.628, 10.8226, 1.03", "-148.08, -109.585, 11.1896, 0.88", "-149.351, -109.446, 11.7671, 0.52", "-150.942, -109.235, 12.6899, 0.44", "-151.453, -109.155, 13.114, 0.44", "-152.033, -109.034, 13.9563, 0.59", "-152.474, -108.946, 15.0746, 0.52", "-152.654, -108.966, 16.01, 0.52", "-152.711, -109.08, 16.7872, 0.74", "-152.791, -109.422, 17.7124, 0.74", "-153.049, -110.136, 18.8122, 0.88", "-153.546, -111.132, 19.7961, 0.88", "-153.998, -111.8, 20.3182, 1.25", "-154.348, -112.216, 20.6205, 1.25", "-155.475, -113.288, 21.3955, 0.74", "-156.394, -113.989, 21.9378, 0.44", "-157.49, -114.714, 22.5067, 0.52", "-158.719, -115.39, 23.1245, 0.44", "-159.452, -115.745, 23.487, 0.44", "-160.187, -116.043, 23.8724, 0.96", "-161.205, -116.285, 24.4784, 1.18" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "310.99, -93.2099, -88.5837, 0.29", "320.938, -94.1667, -88.8552, 0.29", "330.728, -95.0925, -90.658, 0.29", "339.8, -96.9347, -94.4162, 0.29" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "310.99, -93.2099, -88.5837, 0.29", "320.236, -94.2694, -92.2349, 0.29", "329.804, -94.9002, -95.0667, 0.29" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "299.437, -124.238, -68.5842, 0.29", "307.151, -130.391, -67.7739, 0.29", "315.386, -135.54, -65.7003, 0.29" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "299.437, -124.238, -68.5842, 0.29", "306.958, -130.634, -67.9536, 0.29", "314.37, -137.149, -67.3148, 0.29", "322.23, -143.117, -68.19, 0.29" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-204.991, -184.409, -183.982, 0.29", "-213.645, -188.754, -186.273, 0.29", "-220.943, -194.38, -189.939, 0.29", "-228.471, -198.828, -194.683, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-204.991, -184.409, -183.982, 0.29", "-213.559, -189.032, -186.009, 0.29", "-222.528, -193.203, -187.123, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-203.884, -181.162, -189.538, 0.29", "-212.233, -186.046, -191.818, 0.29", "-220.731, -190.888, -193.586, 0.29", "-228.144, -196.624, -196.816, 0.29" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-203.884, -181.162, -189.538, 0.29", "-212.541, -182.946, -194.197, 0.29", "-220.457, -185.473, -199.73, 0.29", "-227.564, -187.609, -206.415, 0.29" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-78.7502, -135.164, -23.267, 0.59", "-82.2601, -143.343, -19.1076, 0.59", "-86.2188, -151.993, -16.7358, 0.59", "-91.5049, -159.989, -14.5458, 0.59", "-95.9502, -168.604, -13.0721, 0.59", "-100.422, -177.315, -13.4956, 0.59" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-78.7502, -135.164, -23.267, 0.22", "-87.3075, -139.804, -21.2371, 0.59", "-94.7001, -145.791, -18.4714, 0.59", "-102.445, -151.455, -15.9671, 0.59" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-87.2776, -128.912, -28.9147, 0.59", "-94.4714, -134.92, -25.7102, 0.59", "-102.372, -140.75, -24.3532, 0.59", "-111.365, -144.711, -22.7324, 0.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-87.2776, -128.912, -28.9147, 0.22", "-95.945, -133.703, -28.0611, 0.59", "-105.014, -137.479, -26.3984, 0.59", "-112.819, -142.889, -23.5191, 0.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-183.376, -268.217, -77.7058, 0.29", "-192.056, -273.052, -77.4796, 0.29", "-200.015, -278.74, -79.1026, 0.29", "-207.83, -284.33, -81.5621, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-183.376, -268.217, -77.7058, 0.29", "-191.809, -273.377, -76.7759, 0.29", "-200.804, -277.55, -77.6591, 0.29", "-209.609, -281.87, -79.341, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-142.079, -257.848, -139.502, 0.29", "-145.164, -262.424, -147.776, 0.29", "-147.77, -266.469, -156.493, 0.29", "-150.874, -270.984, -164.795, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-142.079, -257.848, -139.502, 0.29", "-146.436, -261.778, -147.55, 0.29", "-150.6, -265.729, -155.689, 0.29", "-156.219, -269.229, -163.142, 0.29", "-162.015, -272.442, -170.594, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-73.6042, -129.454, -3.32666, 0.66", "-73.2484, -130.422, -2.87007, 0.66", "-73.0628, -131.036, -2.69241, 0.81", "-72.7672, -132.312, -2.56535, 1.03", "-72.576, -133.504, -2.58628, 0.66", "-72.5186, -134.183, -2.63525, 1.18", "-72.4934, -135.196, -2.72138, 1.47", "-72.5142, -136.669, -2.86103, 0.81", "-72.5426, -138.015, -2.95681, 0.59", "-72.5534, -138.924, -3.00129, 0.81", "-72.5093, -140.158, -2.98853, 0.59", "-72.3088, -141.517, -2.7312, 1.03", "-71.8979, -142.549, -2.19042, 0.81", "-71.2808, -143.512, -1.45406, 0.66", "-70.6566, -144.301, -0.73093, 0.52", "-70.0521, -144.947, -0.043081, 0.52", "-69.6364, -145.37, 0.44547, 0.74", "-69.1189, -145.944, 1.15714, 1.18", "-68.3178, -146.928, 2.36314, 0.88", "-67.7066, -147.754, 3.34066, 0.74", "-67.1557, -148.526, 4.23648, 0.66", "-66.6487, -149.184, 4.98425, 0.66", "-65.5139, -150.488, 6.42558, 0.81", "-64.8537, -151.181, 7.19512, 0.59", "-64.1505, -151.871, 7.96753, 0.59", "-63.7959, -152.235, 8.34344, 0.81", "-62.7912, -153.329, 9.43387, 0.74", "-61.911, -154.343, 10.4832, 0.59", "-61.2443, -155.204, 11.4358, 0.52", "-60.9356, -155.679, 12.122, 0.52", "-60.7367, -155.973, 12.9147, 0.52", "-60.5926, -155.848, 14.0463, 0.81", "-60.4656, -155.412, 14.9327, 0.81", "-60.208, -154.621, 16.056, 0.59", "-59.8899, -153.829, 17.0368, 0.44", "-59.5046, -153.059, 18.0044, 1.11", "-58.9613, -152.176, 19.2637, 0.96", "-58.4927, -151.559, 20.4022, 0.96", "-58.311, -151.344, 20.9392, 0.96", "-58.1401, -151.122, 21.8224, 0.96", "-58.1234, -150.966, 23.0989, 0.96", "-58.2961, -150.954, 24.5577, 0.96", "-58.5936, -151.064, 26.0872, 0.96", "-58.7933, -151.163, 27.0126, 0.96", "-59.0083, -151.292, 28.0993, 0.96", "-59.2389, -151.479, 29.4923, 0.96", "-59.3593, -151.688, 30.3426, 0.96", "-59.4295, -152.013, 31.0132, 0.96", "-59.5326, -152.882, 32.026, 0.96", "-59.6108, -153.689, 32.62, 0.96", "-59.6517, -154.054, 32.7914, 0.96", "-59.967, -156.32, 33.542, 0.44", "-60.2274, -157.682, 33.8559, 0.44", "-60.3886, -158.335, 33.9481, 0.44", "-60.6991, -159.386, 33.9958, 1.47", "-60.9434, -160.144, 33.9776, 1.7" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-73.6042, -129.454, -3.32666, 0.29", "-75.7619, -128.457, -2.21791, 0.29", "-76.5101, -128.169, -1.96895, 0.88", "-77.1136, -128.013, -1.86728, 0.88", "-78.2073, -127.876, -1.80405, 0.74", "-79.3825, -127.89, -1.7603, 0.59", "-80.3519, -128.0, -1.73448, 1.03", "-81.5112, -128.341, -1.87608, 0.52", "-82.7391, -128.999, -2.03761, 0.81", "-83.5461, -129.632, -2.10845, 0.52", "-84.5556, -130.58, -2.12438, 0.52", "-84.8927, -130.9, -2.10806, 0.81", "-85.4085, -131.341, -2.04992, 0.52", "-86.1703, -131.816, -1.92233, 0.96", "-87.5495, -132.312, -1.75208, 0.22", "-88.7143, -132.412, -1.75951, 0.66", "-89.9399, -132.215, -1.92161, 0.44", "-90.7829, -131.936, -2.09172, 0.44", "-91.7202, -131.518, -2.2921, 0.44", "-92.4946, -131.106, -2.47501, 0.44", "-93.5085, -130.538, -2.70395, 0.81", "-94.5668, -130.016, -2.86014, 0.59", "-95.5289, -129.749, -2.77917, 0.37", "-96.4889, -129.659, -2.46895, 0.37", "-97.1586, -129.679, -2.16271, 0.81", "-98.222, -129.763, -1.58988, 0.88", "-99.1711, -129.856, -1.02053, 1.03", "-100.863, -130.041, 0.0405173, 0.52", "-101.459, -130.11, 0.410514, 0.52", "-102.364, -130.217, 0.926125, 0.44", "-103.591, -130.391, 1.57288, 0.81", "-105.148, -130.672, 2.26995, 0.37", "-105.887, -130.86, 2.54805, 0.81", "-106.615, -131.156, 2.78396, 0.96", "-107.532, -131.726, 3.04227, 0.44", "-108.527, -132.537, 3.32656, 1.25", "-109.232, -133.164, 3.50582, 0.59", "-109.704, -133.575, 3.61451, 0.88", "-110.408, -134.059, 3.79718, 0.96", "-111.56, -134.615, 4.16781, 0.52", "-112.691, -134.971, 4.63364, 0.52", "-113.876, -135.235, 5.20733, 0.66", "-114.659, -135.399, 5.6636, 0.66", "-115.517, -135.6, 6.2806, 0.29", "-116.231, -135.834, 6.91904, 0.29", "-116.887, -136.157, 7.61217, 0.29", "-117.46, -136.548, 8.2452, 0.96", "-118.058, -137.039, 8.95714, 1.55", "-118.971, -137.883, 10.1014, 1.55", "-119.949, -138.862, 11.4061, 0.44", "-120.468, -139.371, 12.1119, 0.15", "-121.012, -139.893, 12.8361, 0.15" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_162",
    "id" : "dend_162",
    "points3d" : [ "-161.267, -92.883, 57.0222, 0.59", "-161.672, -93.4894, 57.2626, 0.59", "-162.022, -94.0975, 57.4661, 0.81", "-162.67, -95.508, 57.8843, 0.29", "-162.996, -96.2667, 58.0707, 0.29", "-163.17, -96.6856, 58.1575, 0.29", "-163.396, -97.2608, 58.2632, 0.29", "-163.707, -98.1641, 58.4252, 0.74", "-164.29, -100.262, 58.7814, 0.29", "-164.617, -102.019, 59.0773, 0.66", "-164.826, -103.456, 59.3498, 0.37", "-164.944, -104.253, 59.5105, 0.37", "-165.125, -105.466, 59.7658, 0.29", "-165.245, -106.194, 59.9253, 0.66", "-165.348, -106.754, 60.0612, 0.29", "-165.546, -107.759, 60.3416, 0.22", "-165.818, -109.031, 60.7058, 0.22", "-165.968, -109.63, 60.8639, 0.52", "-166.192, -110.544, 61.0967, 0.74", "-166.432, -111.72, 61.362, 0.29", "-166.613, -112.849, 61.5753, 0.37", "-166.679, -113.567, 61.6873, 0.66", "-166.712, -114.377, 61.7949, 0.96", "-166.704, -115.604, 61.9684, 0.74", "-166.641, -116.888, 62.1454, 0.22", "-166.549, -118.317, 62.3209, 0.29", "-166.468, -119.63, 62.4899, 0.22", "-166.423, -120.748, 62.6573, 0.96", "-166.39, -122.363, 62.929, 0.07", "-166.411, -123.231, 63.0883, 0.22", "-166.447, -123.983, 63.257, 0.44", "-166.497, -124.555, 63.3933, 0.96", "-166.732, -125.815, 63.6942, 0.44", "-167.001, -126.63, 63.868, 0.59", "-167.488, -127.658, 64.0331, 0.22", "-167.872, -128.322, 64.13, 0.22", "-168.114, -128.678, 64.1729, 0.44", "-168.567, -129.289, 64.2274, 0.74", "-169.212, -130.07, 64.2601, 0.07", "-169.742, -130.65, 64.2741, 0.07", "-170.107, -130.998, 64.2741, 0.22", "-170.604, -131.432, 64.2741, 0.37" ],
    "parent" : "dend_160",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_161",
    "id" : "dend_161",
    "points3d" : [ "-161.267, -92.883, 57.0222, 0.22", "-161.404, -93.282, 56.5563, 0.22", "-161.583, -93.6241, 56.0468, 0.22", "-161.902, -93.9416, 55.3718, 0.22", "-162.313, -94.1507, 54.7042, 0.22", "-162.918, -94.3121, 53.8454, 0.37", "-163.429, -94.3961, 53.1181, 0.37", "-164.035, -94.4937, 52.218, 0.81", "-164.697, -94.625, 51.1395, 0.37", "-165.181, -94.7681, 50.2832, 0.37", "-165.41, -94.8802, 49.8789, 0.37", "-165.703, -95.1548, 49.3982, 0.37", "-166.234, -95.9179, 48.5476, 0.59", "-166.649, -96.5823, 47.9588, 0.52", "-167.184, -97.3597, 47.2808, 0.81", "-167.676, -97.9058, 46.7598, 0.52", "-168.59, -98.4795, 45.996, 0.22", "-169.079, -98.5905, 45.6549, 0.22", "-169.913, -98.5756, 45.2125, 0.74", "-170.926, -98.4579, 44.8072, 0.22", "-171.635, -98.3392, 44.5396, 0.74", "-172.566, -98.1697, 44.1437, 0.15", "-173.629, -97.9788, 43.63, 0.29", "-174.962, -97.8153, 42.839, 0.44", "-175.867, -97.7579, 42.1839, 0.22", "-176.623, -97.6865, 41.5594, 0.37", "-177.099, -97.4573, 41.0115, 0.37", "-177.338, -97.1203, 40.6259, 0.52", "-177.625, -96.5608, 40.0796, 0.52", "-177.84, -96.2026, 39.7251, 0.37", "-178.389, -95.4263, 38.9721, 0.81", "-179.1, -94.6112, 38.1792, 0.29", "-179.512, -94.2063, 37.7413, 0.52", "-180.122, -93.66, 37.1332, 0.52", "-180.959, -92.9808, 36.3133, 0.22", "-181.77, -92.3936, 35.4911, 0.44", "-182.341, -92.0363, 34.8612, 0.44", "-183.209, -91.5276, 33.7847, 0.44", "-183.721, -91.1964, 33.0175, 0.22", "-183.962, -90.9835, 32.5595, 0.22", "-184.15, -90.7718, 32.1318, 0.29", "-184.462, -90.4829, 31.5465, 0.29", "-184.894, -90.2757, 30.9336, 0.29", "-185.505, -90.1525, 30.2629, 0.29", "-186.359, -90.062, 29.4653, 0.29", "-187.44, -89.9438, 28.579, 0.52", "-188.32, -89.8067, 27.9969, 0.44", "-189.868, -89.4736, 27.2725, 0.29", "-190.588, -89.2629, 27.0816, 0.29", "-191.412, -88.9541, 26.9974, 0.22", "-192.12, -88.5954, 27.0414, 0.22", "-193.321, -87.8003, 27.3062, 1.03", "-194.685, -86.7029, 27.801, 0.29", "-195.798, -85.7112, 28.378, 0.15", "-196.56, -85.0701, 28.8499, 0.29", "-197.08, -84.7139, 29.2045, 0.29", "-197.335, -84.5915, 29.3747, 0.29", "-197.926, -84.4255, 29.6352, 0.29", "-198.888, -84.2414, 29.7199, 0.52", "-200.216, -83.9711, 29.4199, 0.22", "-201.101, -83.6196, 28.934, 0.22", "-201.628, -83.3073, 28.4813, 0.44", "-202.648, -82.536, 27.3879, 0.22", "-203.524, -81.6593, 26.2302, 0.37", "-203.809, -81.3194, 25.7818, 0.66", "-204.474, -80.3469, 24.4609, 0.15", "-204.888, -79.634, 23.4439, 0.37", "-205.056, -79.2975, 22.9639, 0.22", "-205.246, -78.841, 22.391, 0.37" ],
    "parent" : "dend_160",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_134",
    "id" : "dend_134",
    "points3d" : [ "-188.754, -93.1658, -13.8789, 0.88", "-190.198, -93.1391, -14.97, 0.88", "-191.004, -93.0638, -15.4104, 0.88", "-192.39, -92.9046, -15.9181, 0.74", "-193.733, -92.7716, -16.2535, 0.88", "-195.124, -92.6889, -16.5123, 0.59", "-196.212, -92.6776, -16.6654, 0.74", "-197.263, -92.7126, -16.6001, 0.59", "-198.39, -92.8239, -16.4104, 0.88", "-199.162, -93.024, -16.1892, 0.81", "-199.765, -93.2965, -15.9961, 0.96", "-200.382, -93.6472, -15.7931, 0.81", "-201.398, -94.2843, -15.5679, 1.18", "-202.235, -94.8189, -15.4968, 0.59", "-203.411, -95.5643, -15.5909, 0.74", "-204.475, -96.1875, -15.8167, 0.74", "-205.292, -96.6276, -16.1095, 0.66", "-206.761, -97.3444, -16.8108, 0.81", "-207.54, -97.6411, -17.2413, 1.25", "-208.75, -97.9283, -17.9198, 0.66", "-209.965, -98.0441, -18.6019, 0.52", "-210.849, -98.0191, -19.0848, 0.74", "-212.034, -97.7974, -19.6792, 1.25", "-213.533, -97.3004, -20.2196, 0.59", "-214.692, -96.7222, -20.524, 0.52", "-215.532, -96.1225, -20.626, 0.52", "-216.106, -95.5231, -20.6189, 0.52", "-216.787, -94.5369, -20.4935, 1.11" ],
    "parent" : "dend_132",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_133",
    "id" : "dend_133",
    "points3d" : [ "-188.754, -93.1658, -13.8789, 0.59", "-188.99, -94.6849, -14.1571, 0.59", "-189.286, -96.0125, -14.356, 0.44", "-189.49, -96.685, -14.4414, 0.44", "-189.709, -97.2942, -14.5044, 0.66", "-189.997, -98.0572, -14.5374, 0.74", "-190.301, -98.8212, -14.5375, 0.66", "-190.709, -99.6187, -14.4801, 0.44", "-191.116, -100.296, -14.3894, 0.44", "-191.712, -101.282, -14.2425, 0.37", "-192.176, -102.049, -14.1151, 0.37", "-192.669, -102.84, -13.9663, 0.74", "-193.266, -103.733, -13.7756, 0.22", "-193.93, -104.742, -13.5381, 0.22", "-198.816, -113.083, -15.252, 0.22" ],
    "parent" : "dend_132",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_124",
    "id" : "dend_124",
    "points3d" : [ "-193.923, -60.6464, -13.13, 0.29", "-203.624, -61.9649, -15.1435, 0.29", "-213.448, -63.7556, -15.4818, 0.29", "-223.098, -65.1601, -17.674, 0.29", "-232.965, -66.2764, -18.8295, 0.29", "-242.702, -68.4254, -19.4026, 0.29", "-252.619, -69.6573, -19.1521, 0.29" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_121",
    "id" : "dend_121",
    "points3d" : [ "-193.923, -60.6464, -13.13, 0.29", "-203.873, -61.522, -13.5517, 0.29", "-213.835, -60.818, -14.0367, 0.29", "-223.798, -59.981, -14.0678, 0.29", "-233.439, -58.0056, -15.789, 0.29" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_115",
    "id" : "dend_115",
    "points3d" : [ "-123.367, -114.509, -0.268645, 0.66", "-123.484, -115.66, -0.707208, 0.66", "-123.48, -116.326, -1.02708, 0.66", "-123.5, -117.577, -1.82265, 0.59", "-123.587, -118.477, -2.51347, 0.44", "-123.723, -119.264, -3.19838, 0.44", "-123.925, -120.225, -4.10001, 0.44", "-124.175, -121.111, -4.99832, 0.66", "-124.453, -122.162, -6.07552, 0.96", "-124.668, -123.01, -6.90313, 0.66", "-124.968, -124.066, -7.8441, 0.74", "-125.255, -124.89, -8.47287, 0.74", "-125.616, -125.776, -9.07148, 1.03", "-125.958, -126.632, -9.56635, 1.11", "-126.291, -127.6, -10.028, 0.96", "-126.578, -128.567, -10.4734, 0.52", "-126.773, -129.312, -10.8639, 0.52", "-126.9, -129.992, -11.3123, 0.52", "-126.94, -130.747, -11.9494, 0.74", "-126.872, -131.308, -12.5285, 1.03", "-126.627, -132.047, -13.348, 0.96", "-126.191, -132.959, -14.249, 0.66", "-125.787, -133.744, -14.9509, 0.44", "-125.504, -134.349, -15.4295, 0.66", "-125.262, -135.03, -15.9136, 0.66", "-125.046, -136.217, -16.6232, 0.66", "-125.222, -137.715, -17.2269, 0.52", "-125.586, -138.536, -17.3989, 0.52", "-126.176, -139.438, -17.4496, 0.52", "-126.894, -140.438, -17.4175, 0.59", "-127.149, -140.785, -17.3727, 0.44", "-128.088, -142.055, -17.1111, 0.74", "-128.655, -142.929, -16.9031, 0.52", "-129.283, -144.291, -16.6425, 0.66", "-129.577, -145.353, -16.5076, 0.44", "-129.676, -146.285, -16.4586, 0.74", "-129.64, -146.999, -16.476, 0.88", "-129.325, -148.125, -16.6604, 0.52", "-128.677, -149.265, -17.067, 0.44", "-128.269, -149.717, -17.3456, 0.44", "-127.588, -150.351, -17.793, 0.44", "-126.798, -151.045, -18.3516, 0.88", "-125.866, -151.853, -19.0591, 0.44", "-125.29, -152.381, -19.5966, 0.74", "-124.588, -153.189, -20.4669, 0.52", "-124.084, -154.036, -21.4052, 0.37", "-123.821, -155.017, -22.4669, 0.37", "-123.818, -156.001, -23.4583, 0.74", "-124.033, -157.148, -24.4655, 0.74", "-124.312, -158.079, -25.2088, 0.74", "-124.415, -158.376, -25.4352, 0.74", "-124.683, -159.218, -26.005, 0.29", "-124.751, -159.924, -26.1721, 0.66", "-124.742, -161.105, -26.1783, 0.37", "-124.596, -161.951, -26.0542, 0.74", "-124.289, -162.892, -25.8668, 0.59", "-123.968, -163.607, -25.7138, 0.22", "-123.25, -164.735, -25.4569, 0.22", "-122.286, -172.993, -30.6855, 0.22", "-120.719, -181.498, -35.3175, 0.22" ],
    "parent" : "dend_109",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_110",
    "id" : "dend_110",
    "points3d" : [ "-123.367, -114.509, -0.268645, 0.44", "-124.362, -115.304, -0.657865, 0.44", "-125.194, -115.943, -0.941318, 0.44", "-125.876, -116.572, -1.15382, 0.52", "-126.456, -117.19, -1.31154, 0.52", "-127.162, -118.046, -1.51149, 0.52", "-127.683, -118.762, -1.66219, 0.74", "-128.051, -119.368, -1.79986, 1.4", "-128.626, -120.546, -2.01002, 1.4", "-129.031, -121.688, -2.20756, 0.96", "-129.446, -123.55, -2.51012, 0.44", "-129.551, -124.543, -2.69028, 0.52", "-129.558, -125.48, -2.86864, 0.52", "-129.508, -126.259, -3.01619, 0.88", "-129.403, -127.173, -3.20168, 1.62", "-129.185, -128.618, -3.45211, 1.11", "-128.954, -129.983, -3.63492, 0.66", "-128.788, -131.303, -3.74713, 0.66", "-128.707, -132.585, -3.78609, 0.59", "-128.663, -133.845, -3.73691, 0.59", "-128.648, -135.098, -3.5629, 1.11", "-128.648, -136.138, -3.32982, 0.81", "-128.706, -137.592, -2.96233, 0.59", "-128.863, -138.955, -2.64663, 0.66", "-129.134, -140.379, -2.38146, 0.59", "-129.472, -141.524, -2.28769, 0.59", "-129.761, -142.121, -2.40737, 0.81", "-130.523, -143.37, -3.04864, 0.66", "-131.194, -144.456, -3.94308, 1.18", "-131.643, -145.259, -4.71779, 1.4", "-132.104, -146.244, -5.69444, 1.11", "-132.416, -147.233, -6.60648, 1.11", "-132.628, -148.35, -7.43705, 0.88", "-132.673, -149.56, -8.05842, 0.74", "-132.585, -150.618, -8.39796, 1.11", "-132.438, -151.581, -8.52578, 1.47", "-132.148, -153.108, -8.4847, 0.74", "-131.895, -154.438, -8.2946, 0.52", "-131.736, -155.66, -8.02729, 0.66", "-131.674, -156.666, -7.78023, 0.88", "-131.689, -158.085, -7.45399, 0.44", "-131.802, -159.29, -7.20135, 0.59", "-131.995, -160.44, -7.00256, 1.03", "-132.3, -161.785, -6.87165, 1.55", "-132.985, -164.326, -6.86748, 0.66", "-133.482, -166.093, -7.00665, 0.66", "-133.827, -167.349, -7.19765, 1.03", "-134.108, -168.356, -7.39562, 1.03", "-134.363, -169.187, -7.57931, 0.66", "-134.83, -170.467, -7.84994, 0.66", "-135.246, -171.376, -8.04914, 1.11", "-136.081, -172.86, -8.3383, 0.44", "-136.661, -173.773, -8.50695, 1.11", "-137.52, -175.005, -8.71538, 1.18", "-138.753, -176.65, -8.96534, 0.88", "-139.608, -177.75, -9.10437, 0.59", "-140.162, -178.505, -9.22292, 0.59", "-140.59, -179.234, -9.39545, 0.59", "-140.892, -180.009, -9.64522, 0.29", "-141.06, -180.811, -9.98146, 1.18", "-141.123, -181.627, -10.3565, 0.37", "-141.141, -182.613, -10.7603, 0.96", "-141.103, -183.556, -11.1082, 0.44", "-141.09, -184.473, -11.4195, 1.18", "-141.099, -185.574, -11.7934, 0.96", "-141.118, -186.566, -12.1498, 1.18", "-141.14, -187.411, -12.4579, 1.18", "-141.097, -188.577, -12.8014, 0.96" ],
    "parent" : "dend_109",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "-161.205, -116.285, 24.4784, 0.15", "-161.964, -117.378, 25.1948, 0.15", "-162.328, -117.806, 25.4858, 0.29", "-163.127, -118.537, 26.0367, 0.15", "-163.729, -118.951, 26.3942, 0.15", "-164.295, -119.34, 26.7296, 0.15", "-164.736, -119.644, 26.9914, 0.15", "-165.335, -120.182, 27.5027, 0.15", "-165.761, -120.565, 27.8634, 0.15", "-166.347, -120.76, 28.1547, 0.29" ],
    "parent" : "dend_104",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "-161.205, -116.285, 24.4784, 0.29", "-160.472, -116.789, 25.4693, 0.29", "-160.023, -117.035, 26.047, 0.29", "-159.46, -117.345, 26.7872, 0.29", "-159.03, -117.637, 27.4611, 0.59", "-158.607, -118.02, 28.3595, 0.74", "-158.192, -118.54, 29.6626, 0.66", "-158.094, -118.808, 30.4605, 0.66", "-158.194, -119.001, 31.1163, 0.66", "-158.67, -119.307, 32.3401, 0.81", "-159.332, -119.564, 33.5634, 1.11", "-159.878, -119.701, 34.4271, 1.11", "-160.897, -119.89, 35.9757, 0.52", "-161.231, -119.943, 36.5092, 0.52", "-161.629, -120.021, 37.1711, 0.52", "-162.008, -120.17, 37.8444, 0.52", "-162.326, -120.427, 38.4336, 0.59", "-162.741, -120.962, 39.1413, 0.59", "-163.114, -121.679, 39.7723, 0.59", "-163.58, -122.814, 40.5675, 0.44", "-164.016, -123.981, 41.2884, 0.37", "-164.265, -124.602, 41.6364, 1.03", "-164.656, -125.466, 42.0861, 1.4", "-165.321, -126.745, 42.708, 0.59", "-166.02, -128.003, 43.3034, 0.59", "-166.603, -129.079, 43.7961, 0.81", "-167.323, -130.432, 44.3765, 1.03", "-167.805, -131.372, 44.7355, 1.11", "-168.369, -132.519, 45.0819, 0.37", "-168.637, -133.069, 45.1766, 0.37", "-169.117, -134.106, 45.2085, 0.88", "-169.381, -134.777, 45.1591, 0.52", "-169.694, -135.682, 45.0086, 0.52", "-169.97, -136.407, 44.8088, 0.52", "-170.307, -137.146, 44.5112, 0.52", "-170.925, -138.168, 43.9573, 0.74", "-171.458, -138.916, 43.4955, 1.03", "-172.125, -139.751, 42.9304, 0.37", "-172.869, -140.582, 42.3194, 1.11", "-173.44, -141.159, 41.8659, 1.62", "-174.696, -142.218, 40.9175, 0.29", "-175.295, -142.61, 40.4924, 0.29", "-176.112, -143.04, 39.9764, 0.22", "-176.602, -143.263, 39.7205, 0.59", "-177.34, -143.569, 39.3936, 1.4", "-178.79, -144.175, 38.8344, 0.59", "-179.675, -144.557, 38.5311, 0.29", "-180.579, -144.974, 38.2411, 0.29", "-181.296, -145.341, 38.0276, 0.52", "-182.676, -146.113, 37.6551, 0.37", "-183.994, -146.887, 37.3337, 0.52", "-184.759, -147.314, 37.1579, 0.96", "-185.471, -147.645, 36.9916, 1.03", "-185.747, -147.741, 36.9288, 1.03", "-187.242, -148.132, 36.5606, 0.29", "-187.836, -148.243, 36.4416, 0.22", "-189.078, -148.413, 36.2187, 0.22", "-189.406, -148.488, 36.186, 0.22", "-189.984, -148.818, 36.2978, 0.22", "-190.473, -149.244, 36.5236, 0.22", "-191.524, -150.304, 37.0868, 0.22", "-191.913, -150.718, 37.3171, 0.44", "-192.69, -151.574, 37.8102, 1.03", "-193.923, -152.92, 38.5794, 0.37", "-195.323, -154.394, 39.4111, 0.44", "-196.52, -155.6, 40.0846, 0.81" ],
    "parent" : "dend_104",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-100.422, -177.315, -13.4956, 0.59", "-105.032, -185.743, -11.4897, 0.59", "-108.405, -194.793, -9.91975, 0.59", "-111.82, -203.319, -6.47469, 0.59", "-116.044, -212.1, -5.45077, 0.59" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-100.422, -177.315, -13.4956, 0.22", "-104.638, -185.947, -11.5363, 0.59", "-108.546, -194.906, -10.9822, 0.59", "-113.221, -203.424, -9.63128, 0.59", "-117.693, -212.101, -8.74793, 0.59" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-111.365, -144.711, -22.7324, 0.59", "-119.474, -146.933, -17.343, 0.59", "-127.341, -149.447, -11.7346, 0.59", "-135.638, -152.938, -7.45159, 0.59", "-143.357, -157.223, -2.85771, 0.59", "-150.186, -162.044, 2.51888, 0.59", "-157.557, -167.939, 5.53766, 0.59", "-165.653, -172.486, 9.10251, 0.59" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-111.365, -144.711, -22.7324, 0.22", "-118.204, -151.759, -23.715, 0.59", "-124.261, -159.076, -26.3586, 0.59", "-129.9, -166.323, -29.9579, 0.59", "-135.98, -173.323, -33.3478, 0.59", "-141.047, -181.095, -36.6331, 0.59", "-145.763, -189.118, -39.801, 0.59", "-148.564, -197.422, -44.2312, 0.59", "-152.737, -204.113, -50.188, 0.59" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-112.819, -142.889, -23.5191, 0.59", "-120.935, -148.003, -20.9473, 0.59", "-129.531, -152.62, -19.0245, 0.59" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-112.819, -142.889, -23.5191, 0.22", "-121.794, -147.083, -22.5399, 0.59", "-129.666, -152.781, -20.5709, 0.59", "-138.469, -156.435, -17.6647, 0.59", "-147.362, -159.705, -14.5555, 0.59" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-60.9434, -160.144, 33.9776, 0.29", "-62.6277, -159.829, 34.7833, 0.29", "-63.5092, -159.72, 35.1832, 0.29", "-64.1273, -159.668, 35.4801, 0.29", "-64.5623, -159.643, 35.6933, 0.29", "-65.4145, -159.602, 36.1491, 0.29", "-66.2433, -159.582, 36.5936, 0.29", "-67.0347, -159.571, 37.0356, 0.74", "-67.8407, -159.569, 37.4806, 1.4", "-68.8808, -159.582, 38.0629, 1.11", "-69.8079, -159.576, 38.5961, 0.29", "-70.7284, -159.539, 39.1398, 1.03", "-71.8145, -159.489, 39.7698, 0.15", "-72.3968, -159.459, 40.1139, 0.37", "-73.5519, -159.387, 40.7551, 0.29" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-60.9434, -160.144, 33.9776, 0.66", "-60.4269, -161.641, 33.701, 0.66", "-59.9478, -162.837, 33.573, 0.37", "-59.5876, -163.753, 33.5255, 0.66", "-59.3994, -164.339, 33.5164, 1.33", "-59.2011, -165.216, 33.516, 1.47", "-58.9702, -166.948, 33.5305, 0.44", "-58.9532, -168.051, 33.5885, 0.22", "-59.0026, -169.183, 33.6744, 0.88", "-59.1206, -170.587, 33.7968, 1.7", "-59.3259, -172.281, 33.9637, 1.92", "-59.6433, -174.255, 34.1677, 0.22", "-59.9782, -176.057, 34.3676, 0.52", "-60.1134, -176.868, 34.4756, 0.15", "-60.1549, -177.34, 34.5477, 0.15", "-60.1159, -178.199, 34.7022, 0.66", "-59.9696, -178.943, 34.852, 0.44", "-59.7039, -179.714, 34.9989, 0.88", "-59.4993, -180.195, 35.0546, 0.66", "-59.1651, -181.072, 35.073, 0.22", "-58.9123, -181.791, 35.0314, 0.44", "-58.6568, -182.599, 34.9223, 0.15", "-58.5454, -182.964, 34.8555, 0.15", "-58.3328, -183.802, 34.6481, 0.15", "-58.2337, -184.305, 34.5053, 0.15", "-58.1949, -184.739, 34.359, 0.66", "-58.2096, -185.234, 34.1724, 0.07" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_136",
    "id" : "dend_136",
    "points3d" : [ "-216.787, -94.5369, -20.4935, 0.74", "-217.391, -93.493, -20.8176, 0.74", "-217.919, -92.7866, -20.9968, 0.74", "-218.789, -91.7397, -21.2148, 0.81", "-219.421, -91.0005, -21.3433, 0.81", "-220.236, -90.0368, -21.487, 0.96", "-221.03, -89.054, -21.6171, 1.33", "-222.087, -87.7544, -21.7339, 0.66", "-222.916, -86.6465, -21.802, 0.66", "-223.567, -85.5929, -21.837, 0.88", "-223.953, -84.6886, -21.8445, 0.37", "-224.096, -83.9906, -21.8467, 0.37", "-224.128, -83.026, -21.8659, 0.74", "-224.072, -82.026, -21.9006, 1.11", "-224.013, -81.1619, -21.9583, 0.59", "-223.974, -80.0498, -22.0663, 0.59", "-224.005, -78.7266, -22.2515, 0.59", "-224.19, -77.2027, -22.5395, 1.11", "-224.579, -75.6535, -22.9054, 0.66", "-225.013, -74.3067, -23.262, 0.44", "-225.408, -73.3339, -23.5529, 0.52", "-225.753, -72.6662, -23.7859, 0.81", "-226.321, -71.8006, -24.154, 0.52", "-226.972, -71.0686, -24.5424, 0.22", "-229.735, -62.0836, -27.2702, 0.22", "-232.921, -52.8671, -27.9736, 0.22" ],
    "parent" : "dend_134",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_135",
    "id" : "dend_135",
    "points3d" : [ "-216.787, -94.5369, -20.4935, 0.29", "-218.356, -93.5642, -20.0629, 0.29", "-219.205, -93.038, -19.83, 0.44", "-220.005, -92.5422, -19.6105, 0.22", "-220.786, -92.0579, -19.3962, 0.29", "-221.615, -91.5439, -19.1687, 0.22", "-222.138, -91.2198, -19.0252, 0.22", "-231.027, -87.0399, -17.4109, 0.22", "-239.049, -81.2857, -16.5092, 0.22" ],
    "parent" : "dend_134",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_128",
    "id" : "dend_128",
    "points3d" : [ "-252.619, -69.6573, -19.1521, 0.29", "-262.438, -71.2306, -20.145, 0.29", "-272.384, -72.0678, -19.5695, 0.29", "-282.331, -71.3461, -20.2876, 0.29", "-292.123, -69.3715, -20.2913, 0.29", "-301.993, -68.0171, -19.4731, 0.29", "-311.412, -65.8092, -16.9952, 0.29", "-320.454, -62.3261, -14.654, 0.29", "-328.966, -58.8625, -10.79, 0.29" ],
    "parent" : "dend_124",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_125",
    "id" : "dend_125",
    "points3d" : [ "-252.619, -69.6573, -19.1521, 0.29", "-262.452, -71.1294, -20.1691, 0.29", "-272.255, -72.8951, -20.9516, 0.29", "-281.509, -76.3891, -22.1841, 0.29", "-290.98, -78.7501, -24.291, 0.29", "-300.834, -79.5556, -25.7784, 0.29", "-310.645, -81.1596, -26.8004, 0.29", "-320.624, -81.4484, -27.3785, 0.29" ],
    "parent" : "dend_124",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_123",
    "id" : "dend_123",
    "points3d" : [ "-233.439, -58.0056, -15.789, 0.29", "-243.414, -57.3581, -16.0148, 0.29" ],
    "parent" : "dend_121",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_122",
    "id" : "dend_122",
    "points3d" : [ "-233.439, -58.0056, -15.789, 0.29", "-243.35, -57.3234, -16.9168, 0.29" ],
    "parent" : "dend_121",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_112",
    "id" : "dend_112",
    "points3d" : [ "-141.097, -188.577, -12.8014, 0.52", "-140.627, -189.774, -13.2391, 0.52", "-140.257, -190.732, -13.6547, 0.37", "-139.865, -191.888, -14.2314, 0.66", "-139.615, -192.762, -14.6825, 0.37", "-139.416, -193.712, -15.1539, 0.37", "-139.255, -194.641, -15.5938, 0.66", "-139.111, -196.045, -16.18, 0.88", "-139.01, -197.339, -16.6997, 0.37", "-138.971, -197.881, -16.8917, 0.37", "-138.894, -199.169, -17.2745, 0.59", "-138.859, -199.822, -17.4135, 0.81", "-138.846, -200.956, -17.5965, 0.44", "-138.869, -201.236, -17.6322, 0.59", "-139.003, -202.197, -17.77, 0.37", "-139.099, -202.809, -17.9087, 0.37", "-139.176, -203.219, -18.0362, 0.37", "-139.35, -204.004, -18.2897, 0.44", "-139.51, -204.707, -18.5097, 0.44", "-139.704, -205.718, -18.7414, 0.44", "-139.803, -206.496, -18.8582, 0.59", "-139.825, -207.365, -18.9342, 0.81", "-139.757, -208.376, -18.9929, 0.74", "-139.647, -209.138, -19.0298, 1.11", "-139.4, -210.382, -19.0868, 0.59", "-139.231, -211.185, -19.1217, 0.74", "-139.031, -212.109, -19.1957, 0.74", "-138.837, -213.082, -19.3117, 0.74", "-138.693, -213.987, -19.4504, 0.96", "-138.631, -214.72, -19.58, 0.96", "-138.661, -215.879, -19.8079, 0.81", "-138.864, -216.967, -20.0546, 0.88", "-139.193, -218.039, -20.3186, 0.59", "-139.476, -218.843, -20.5264, 0.59", "-139.806, -219.795, -20.7508, 0.37", "-140.005, -220.47, -20.9231, 0.66", "-140.274, -221.86, -21.3325, 0.44", "-140.296, -222.293, -21.488, 0.52", "-140.023, -223.295, -22.0392, 0.88", "-139.555, -223.996, -22.6183, 0.37", "-138.867, -224.675, -23.3734, 0.37", "-138.274, -225.133, -23.9571, 0.37", "-137.669, -225.545, -24.4613, 0.37", "-137.201, -226.027, -24.8364, 0.37", "-137.007, -226.415, -24.9439, 0.37", "-136.648, -227.4, -25.0335, 0.37", "-136.418, -228.168, -25.0186, 0.52", "-136.083, -229.43, -24.9287, 0.81", "-135.693, -231.001, -24.7518, 0.29", "-135.349, -232.519, -24.5175, 0.29", "-135.258, -232.947, -24.4427, 0.29", "-133.782, -242.104, -27.5441, 0.29", "-132.726, -251.612, -29.489, 0.29", "-130.057, -260.404, -32.893, 0.29", "-128.411, -269.763, -35.1549, 0.29", "-128.493, -279.297, -37.2478, 0.29", "-129.904, -288.904, -38.2076, 0.29", "-132.231, -298.281, -39.6564, 0.29" ],
    "parent" : "dend_110",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_111",
    "id" : "dend_111",
    "points3d" : [ "-141.097, -188.577, -12.8014, 0.29", "-141.51, -189.809, -12.3243, 0.29", "-141.878, -190.94, -11.9068, 0.52", "-142.191, -191.939, -11.5609, 0.88", "-142.383, -192.6, -11.3414, 0.88", "-142.716, -193.879, -10.9399, 0.29", "-142.999, -195.164, -10.588, 0.29", "-143.077, -195.607, -10.4898, 0.59", "-143.121, -196.204, -10.3892, 1.11", "-143.062, -197.704, -10.1976, 0.37", "-142.939, -198.588, -10.105, 1.03", "-142.678, -199.755, -10.0067, 0.37", "-142.494, -200.443, -9.96325, 0.37", "-142.294, -201.239, -9.95071, 0.66", "-142.157, -201.894, -10.0181, 0.66", "-141.946, -203.152, -10.3394, 0.22", "-141.863, -203.984, -10.6524, 0.88", "-141.812, -204.983, -11.1756, 0.37", "-141.778, -206.062, -11.9088, 0.59", "-141.752, -207.459, -13.1256, 0.37", "-141.745, -208.039, -13.812, 0.37", "-141.746, -208.254, -14.179, 0.37", "-141.729, -208.857, -15.4412, 0.37", "-141.697, -209.103, -16.1087, 0.37", "-141.616, -209.286, -16.7964, 0.37", "-141.436, -209.434, -17.7769, 0.37", "-141.312, -209.457, -18.8662, 0.37", "-141.457, -218.379, -22.8969, 0.37" ],
    "parent" : "dend_110",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "-196.52, -155.6, 40.0846, 0.29", "-196.091, -156.693, 40.1246, 0.29", "-195.961, -157.258, 40.1392, 0.29", "-195.787, -158.017, 40.1588, 0.74", "-195.575, -158.938, 40.1826, 0.15", "-195.387, -159.753, 40.2036, 0.29", "-195.273, -160.25, 40.2165, 0.29", "-195.01, -161.749, 40.248, 0.22" ],
    "parent" : "dend_105",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "-196.52, -155.6, 40.0846, 0.44", "-197.415, -155.497, 38.8673, 0.44", "-198.122, -155.475, 38.1651, 0.44", "-198.983, -155.502, 37.3772, 0.44", "-199.694, -155.569, 36.763, 0.88", "-200.894, -155.752, 35.7339, 0.44", "-201.534, -155.89, 35.1906, 1.03", "-202.849, -156.265, 34.2165, 0.29", "-203.513, -156.472, 33.7261, 0.37", "-204.38, -156.715, 33.0805, 0.59", "-204.906, -156.868, 32.6584, 0.59", "-205.546, -157.07, 32.0777, 0.59", "-206.413, -157.338, 31.2263, 0.22", "-207.342, -157.597, 30.2529, 0.22", "-208.181, -157.694, 29.3822, 0.59" ],
    "parent" : "dend_105",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-116.044, -212.1, -5.45077, 0.59", "-120.642, -220.464, -3.15538, 0.59" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-116.044, -212.1, -5.45077, 0.22", "-117.645, -221.669, -4.394, 0.59" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-117.693, -212.101, -8.74793, 0.59", "-123.011, -220.221, -7.20861, 0.59" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-117.693, -212.101, -8.74793, 0.22", "-121.333, -221.135, -7.79845, 0.59" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-165.653, -172.486, 9.10251, 0.59", "-172.691, -177.177, 14.3287, 0.59" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-165.653, -172.486, 9.10251, 0.22", "-174.084, -175.923, 13.1635, 0.59" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-152.737, -204.113, -50.188, 0.59", "-158.252, -211.493, -53.693, 0.59", "-164.685, -218.628, -55.9453, 0.59", "-171.497, -225.57, -57.6511, 0.59", "-176.961, -233.671, -58.701, 0.59", "-181.971, -242.107, -58.8715, 0.59", "-186.889, -250.555, -58.0006, 0.59", "-191.616, -258.874, -55.8016, 0.59" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-152.737, -204.113, -50.188, 0.22", "-157.749, -211.838, -53.6664, 0.59", "-162.678, -220.048, -55.8596, 0.59", "-165.907, -229.223, -56.8645, 0.59", "-169.081, -238.462, -56.4909, 0.59", "-171.738, -247.691, -54.6616, 0.59", "-173.67, -257.05, -52.632, 0.59", "-175.621, -266.233, -49.8967, 0.59", "-179.575, -274.622, -46.6811, 0.59" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_138",
    "id" : "dend_138",
    "points3d" : [ "-232.921, -52.8671, -27.9736, 0.29", "-236.504, -43.785, -28.6041, 0.29", "-238.302, -34.252, -29.6849, 0.29", "-239.145, -24.7253, -31.6385, 0.29", "-240.93, -15.534, -34.4577, 0.29", "-243.63, -6.91994, -38.2855, 0.29", "-245.483, 1.98541, -41.9107, 0.29", "-248.229, 10.282, -46.3884, 0.29", "-252.676, 18.2472, -50.0613, 0.29", "-256.332, 27.1414, -51.9095, 0.29" ],
    "parent" : "dend_136",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_137",
    "id" : "dend_137",
    "points3d" : [ "-232.921, -52.8671, -27.9736, 0.29", "-236.211, -44.1298, -30.952, 0.29", "-238.001, -34.7461, -32.9935, 0.29", "-238.917, -25.2052, -34.839, 0.29", "-240.657, -15.6048, -34.7024, 0.29", "-243.308, -6.22711, -34.0244, 0.29", "-246.088, 3.13582, -34.2572, 0.29", "-247.903, 12.7129, -34.7271, 0.29", "-251.158, 21.9281, -35.0001, 0.29", "-255.168, 30.7684, -33.6912, 0.29", "-261.112, 38.494, -32.3193, 0.29" ],
    "parent" : "dend_136",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_130",
    "id" : "dend_130",
    "points3d" : [ "-328.966, -58.8625, -10.79, 0.29", "-338.817, -57.3828, -9.97777, 0.29", "-348.296, -54.8996, -8.06467, 0.29" ],
    "parent" : "dend_128",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_129",
    "id" : "dend_129",
    "points3d" : [ "-328.966, -58.8625, -10.79, 0.29", "-338.744, -57.691, -9.07108, 0.29", "-348.139, -54.6257, -7.71006, 0.29" ],
    "parent" : "dend_128",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_127",
    "id" : "dend_127",
    "points3d" : [ "-320.624, -81.4484, -27.3785, 0.29", "-330.432, -83.0989, -28.3502, 0.29", "-339.87, -84.5731, -31.2868, 0.29", "-349.36, -86.8697, -33.3833, 0.29" ],
    "parent" : "dend_125",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_126",
    "id" : "dend_126",
    "points3d" : [ "-320.624, -81.4484, -27.3785, 0.29", "-330.355, -83.1982, -28.8246, 0.29", "-340.284, -83.9522, -29.7284, 0.29", "-350.005, -86.2366, -29.7282, 0.29" ],
    "parent" : "dend_125",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_114",
    "id" : "dend_114",
    "points3d" : [ "-132.231, -298.281, -39.6564, 0.29", "-131.432, -307.809, -41.6247, 0.29", "-131.504, -317.426, -43.26, 0.29", "-130.907, -327.021, -44.9351, 0.29" ],
    "parent" : "dend_112",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_113",
    "id" : "dend_113",
    "points3d" : [ "-132.231, -298.281, -39.6564, 0.29", "-131.519, -307.611, -42.4743, 0.29", "-132.658, -317.242, -43.5235, 0.29" ],
    "parent" : "dend_112",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-191.616, -258.874, -55.8016, 0.59", "-198.913, -265.537, -56.0267, 0.59", "-206.118, -272.271, -56.6596, 0.59", "-212.298, -279.87, -55.6339, 0.59" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-191.616, -258.874, -55.8016, 0.22", "-196.566, -267.284, -56.8458, 0.59", "-201.985, -275.08, -59.4382, 0.59", "-206.155, -282.917, -63.6799, 0.59" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-179.575, -274.622, -46.6811, 0.59", "-183.575, -283.501, -45.6448, 0.59", "-189.566, -291.293, -46.1306, 0.59", "-195.499, -299.046, -47.3907, 0.59" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-179.575, -274.622, -46.6811, 0.22", "-182.862, -283.827, -46.4316, 0.59", "-185.035, -293.297, -47.4061, 0.59" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_142",
    "id" : "dend_142",
    "points3d" : [ "-256.332, 27.1414, -51.9095, 0.29", "-259.077, 36.3051, -53.9422, 0.29", "-260.053, 45.7844, -56.0686, 0.29" ],
    "parent" : "dend_138",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_139",
    "id" : "dend_139",
    "points3d" : [ "-256.332, 27.1414, -51.9095, 0.29", "-258.76, 35.823, -55.759, 0.29", "-261.293, 43.4196, -61.4931, 0.29", "-263.758, 51.5361, -66.4553, 0.29", "-265.346, 58.5866, -73.1775, 0.29", "-267.559, 65.462, -79.9138, 0.29", "-267.849, 72.255, -87.0814, 0.29", "-269.872, 79.8056, -93.0757, 0.29", "-273.312, 86.2554, -99.74, 0.29", "-275.677, 92.7384, -106.825, 0.29", "-277.85, 98.8746, -114.286, 0.29", "-279.671, 105.218, -121.658, 0.29", "-281.142, 112.806, -127.764, 0.29", "-282.338, 120.053, -134.346, 0.29" ],
    "parent" : "dend_138",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_146",
    "id" : "dend_146",
    "points3d" : [ "-260.053, 45.7844, -56.0686, 0.29", "-261.461, 54.6038, -60.093, 0.29", "-263.469, 63.5157, -63.6173, 0.29", "-265.37, 72.5892, -66.745, 0.29", "-268.322, 81.7036, -68.7189, 0.29", "-272.352, 90.445, -70.5584, 0.29", "-275.917, 99.0127, -73.7321, 0.29", "-281.212, 106.38, -77.5876, 0.29", "-284.678, 114.96, -80.8358, 0.29", "-286.648, 124.049, -83.8724, 0.29", "-288.913, 133.244, -86.3062, 0.29" ],
    "parent" : "dend_142",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_143",
    "id" : "dend_143",
    "points3d" : [ "-260.053, 45.7844, -56.0686, 0.29", "-262.228, 55.2885, -56.57, 0.29", "-262.641, 64.963, -57.7417, 0.29", "-261.681, 74.1996, -60.7966, 0.29", "-261.343, 83.8062, -62.4719, 0.29", "-260.301, 93.3521, -64.2205, 0.29", "-260.066, 102.706, -67.0327, 0.29", "-259.203, 111.727, -70.7286, 0.29", "-257.766, 120.549, -74.7364, 0.29", "-257.591, 129.699, -78.1856, 0.29", "-258.041, 138.551, -82.3531, 0.29", "-256.865, 147.669, -85.6943, 0.29", "-255.39, 156.156, -90.3913, 0.29", "-252.874, 163.943, -95.8568, 0.29", "-251.82, 171.903, -101.535, 0.29", "-249.871, 179.978, -106.79, 0.29", "-248.771, 187.389, -113.194, 0.29" ],
    "parent" : "dend_142",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_141",
    "id" : "dend_141",
    "points3d" : [ "-282.338, 120.053, -134.346, 0.29", "-284.378, 127.238, -140.79, 0.29", "-287.595, 133.883, -147.363, 0.29" ],
    "parent" : "dend_139",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_140",
    "id" : "dend_140",
    "points3d" : [ "-282.338, 120.053, -134.346, 0.29", "-284.301, 127.384, -140.639, 0.29", "-284.348, 135.958, -145.401, 0.29", "-282.597, 144.53, -149.831, 0.29", "-280.158, 152.578, -154.922, 0.29", "-276.818, 160.329, -159.987, 0.29", "-274.716, 168.259, -165.413, 0.29" ],
    "parent" : "dend_139",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_148",
    "id" : "dend_148",
    "points3d" : [ "-288.913, 133.244, -86.3062, 0.29", "-291.97, 142.52, -86.6917, 0.29", "-294.207, 152.015, -87.0981, 0.29", "-294.894, 161.737, -87.4234, 0.29", "-296.679, 171.311, -88.0312, 0.29" ],
    "parent" : "dend_146",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_147",
    "id" : "dend_147",
    "points3d" : [ "-288.913, 133.244, -86.3062, 0.29", "-291.699, 141.683, -90.4691, 0.29", "-293.951, 149.79, -95.5475, 0.29", "-298.044, 158.016, -99.0203, 0.29" ],
    "parent" : "dend_146",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_145",
    "id" : "dend_145",
    "points3d" : [ "-248.771, 187.389, -113.194, 0.29", "-248.02, 196.11, -117.601, 0.29", "-246.935, 205.239, -120.942, 0.29", "-244.612, 214.304, -123.797, 0.29" ],
    "parent" : "dend_143",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_144",
    "id" : "dend_144",
    "points3d" : [ "-248.771, 187.389, -113.194, 0.29", "-248.083, 196.7, -116.079, 0.29", "-248.68, 206.366, -117.248, 0.29", "-247.703, 216.066, -117.507, 0.29", "-245.923, 225.626, -116.681, 0.29", "-243.047, 234.74, -114.593, 0.29" ],
    "parent" : "dend_143",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_99", "dend_50", "dend_17", "dend_0", "dend_163", "dend_100", "dend_80", "dend_51", "dend_37", "dend_18", "dend_6", "dend_1", "dend_150", "dend_101", "dend_90", "dend_81", "dend_79", "dend_52", "dend_47", "dend_38", "dend_30", "dend_19", "dend_12", "dend_7", "dend_3", "dend_2", "dend_156", "dend_151", "dend_117", "dend_102", "dend_98", "dend_91", "dend_83", "dend_82", "dend_78", "dend_53", "dend_49", "dend_48", "dend_46", "dend_39", "dend_34", "dend_31", "dend_23", "dend_20", "dend_14", "dend_13", "dend_9", "dend_8", "dend_5", "dend_4", "dend_158", "dend_157", "dend_153", "dend_152", "dend_131", "dend_118", "dend_116", "dend_103", "dend_95", "dend_92", "dend_87", "dend_84", "dend_69", "dend_54", "dend_43", "dend_40", "dend_36", "dend_35", "dend_33", "dend_32", "dend_29", "dend_24", "dend_22", "dend_21", "dend_16", "dend_15", "dend_11", "dend_10", "dend_160", "dend_159", "dend_155", "dend_154", "dend_149", "dend_132", "dend_120", "dend_119", "dend_109", "dend_104", "dend_97", "dend_96", "dend_94", "dend_93", "dend_89", "dend_88", "dend_86", "dend_85", "dend_71", "dend_70", "dend_58", "dend_55", "dend_45", "dend_44", "dend_42", "dend_41", "dend_26", "dend_25", "dend_162", "dend_161", "dend_134", "dend_133", "dend_124", "dend_121", "dend_115", "dend_110", "dend_108", "dend_105", "dend_75", "dend_72", "dend_66", "dend_59", "dend_57", "dend_56", "dend_28", "dend_27", "dend_136", "dend_135", "dend_128", "dend_125", "dend_123", "dend_122", "dend_112", "dend_111", "dend_107", "dend_106", "dend_77", "dend_76", "dend_74", "dend_73", "dend_68", "dend_67", "dend_63", "dend_60", "dend_138", "dend_137", "dend_130", "dend_129", "dend_127", "dend_126", "dend_114", "dend_113", "dend_65", "dend_64", "dend_62", "dend_61", "dend_142", "dend_139", "dend_146", "dend_143", "dend_141", "dend_140", "dend_148", "dend_147", "dend_145", "dend_144" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_99", "dend_50", "dend_17", "dend_0", "dend_163", "dend_100", "dend_80", "dend_51", "dend_37", "dend_18", "dend_6", "dend_1", "dend_150", "dend_101", "dend_90", "dend_81", "dend_79", "dend_52", "dend_47", "dend_38", "dend_30", "dend_19", "dend_12", "dend_7", "dend_3", "dend_2", "dend_156", "dend_151", "dend_117", "dend_102", "dend_98", "dend_91", "dend_83", "dend_82", "dend_78", "dend_53", "dend_49", "dend_48", "dend_46", "dend_39", "dend_34", "dend_31", "dend_23", "dend_20", "dend_14", "dend_13", "dend_9", "dend_8", "dend_5", "dend_4", "dend_158", "dend_157", "dend_153", "dend_152", "dend_131", "dend_118", "dend_116", "dend_103", "dend_95", "dend_92", "dend_87", "dend_84", "dend_69", "dend_54", "dend_43", "dend_40", "dend_36", "dend_35", "dend_33", "dend_32", "dend_29", "dend_24", "dend_22", "dend_21", "dend_16", "dend_15", "dend_11", "dend_10", "dend_160", "dend_159", "dend_155", "dend_154", "dend_149", "dend_132", "dend_120", "dend_119", "dend_109", "dend_104", "dend_97", "dend_96", "dend_94", "dend_93", "dend_89", "dend_88", "dend_86", "dend_85", "dend_71", "dend_70", "dend_58", "dend_55", "dend_45", "dend_44", "dend_42", "dend_41", "dend_26", "dend_25", "dend_162", "dend_161", "dend_134", "dend_133", "dend_124", "dend_121", "dend_115", "dend_110", "dend_108", "dend_105", "dend_75", "dend_72", "dend_66", "dend_59", "dend_57", "dend_56", "dend_28", "dend_27", "dend_136", "dend_135", "dend_128", "dend_125", "dend_123", "dend_122", "dend_112", "dend_111", "dend_107", "dend_106", "dend_77", "dend_76", "dend_74", "dend_73", "dend_68", "dend_67", "dend_63", "dend_60", "dend_138", "dend_137", "dend_130", "dend_129", "dend_127", "dend_126", "dend_114", "dend_113", "dend_65", "dend_64", "dend_62", "dend_61", "dend_142", "dend_139", "dend_146", "dend_143", "dend_141", "dend_140", "dend_148", "dend_147", "dend_145", "dend_144" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_75", "dend_72" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "dend_99", "dend_50", "dend_17", "dend_0", "axon_0", "dend_163", "dend_100", "dend_80", "dend_51", "dend_37", "dend_18", "dend_6", "dend_1", "axon_1", "dend_150", "dend_101", "dend_90", "dend_81", "dend_79", "dend_52", "dend_47", "dend_38", "dend_30", "dend_19", "dend_12", "dend_7", "dend_3", "dend_2", "dend_156", "dend_151", "dend_117", "dend_102", "dend_98", "dend_91", "dend_83", "dend_82", "dend_78", "dend_53", "dend_49", "dend_48", "dend_46", "dend_39", "dend_34", "dend_31", "dend_23", "dend_20", "dend_14", "dend_13", "dend_9", "dend_8", "dend_5", "dend_4", "dend_158", "dend_157", "dend_153", "dend_152", "dend_131", "dend_118", "dend_116", "dend_103", "dend_95", "dend_92", "dend_87", "dend_84", "dend_69", "dend_54", "dend_43", "dend_40", "dend_36", "dend_35", "dend_33", "dend_32", "dend_29", "dend_24", "dend_22", "dend_21", "dend_16", "dend_15", "dend_11", "dend_10", "dend_160", "dend_159", "dend_155", "dend_154", "dend_149", "dend_132", "dend_120", "dend_119", "dend_109", "dend_104", "dend_97", "dend_96", "dend_94", "dend_93", "dend_89", "dend_88", "dend_86", "dend_85", "dend_71", "dend_70", "dend_58", "dend_55", "dend_45", "dend_44", "dend_42", "dend_41", "dend_26", "dend_25", "dend_162", "dend_161", "dend_134", "dend_133", "dend_124", "dend_121", "dend_115", "dend_110", "dend_108", "dend_105", "dend_75", "dend_72", "dend_66", "dend_59", "dend_57", "dend_56", "dend_28", "dend_27", "dend_136", "dend_135", "dend_128", "dend_125", "dend_123", "dend_122", "dend_112", "dend_111", "dend_107", "dend_106", "dend_77", "dend_76", "dend_74", "dend_73", "dend_68", "dend_67", "dend_63", "dend_60", "dend_138", "dend_137", "dend_130", "dend_129", "dend_127", "dend_126", "dend_114", "dend_113", "dend_65", "dend_64", "dend_62", "dend_61", "dend_142", "dend_139", "dend_146", "dend_143", "dend_141", "dend_140", "dend_148", "dend_147", "dend_145", "dend_144" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_163" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_150" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_156" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_151" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_117" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_158" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_157" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_153" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_131" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_116" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_149" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_120" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_119" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_109" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_162" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_161" ]
  }, {
    "name" : "OneSecGrp_SectionRef_114",
    "groups" : [ ],
    "sections" : [ "dend_124" ]
  }, {
    "name" : "OneSecGrp_SectionRef_116",
    "groups" : [ ],
    "sections" : [ "dend_115" ]
  }, {
    "name" : "OneSecGrp_SectionRef_117",
    "groups" : [ ],
    "sections" : [ "dend_110" ]
  }, {
    "name" : "OneSecGrp_SectionRef_119",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_122",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_123",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_128",
    "groups" : [ ],
    "sections" : [ "dend_136" ]
  }, {
    "name" : "OneSecGrp_SectionRef_130",
    "groups" : [ ],
    "sections" : [ "dend_128" ]
  }, {
    "name" : "OneSecGrp_SectionRef_131",
    "groups" : [ ],
    "sections" : [ "dend_125" ]
  }, {
    "name" : "OneSecGrp_SectionRef_134",
    "groups" : [ ],
    "sections" : [ "dend_112" ]
  }, {
    "name" : "OneSecGrp_SectionRef_144",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_145",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_146",
    "groups" : [ ],
    "sections" : [ "dend_138" ]
  }, {
    "name" : "OneSecGrp_SectionRef_147",
    "groups" : [ ],
    "sections" : [ "dend_137" ]
  }, {
    "name" : "OneSecGrp_SectionRef_159",
    "groups" : [ ],
    "sections" : [ "dend_139" ]
  }, {
    "name" : "OneSecGrp_SectionRef_160",
    "groups" : [ ],
    "sections" : [ "dend_146" ]
  }, {
    "name" : "OneSecGrp_SectionRef_161",
    "groups" : [ ],
    "sections" : [ "dend_143" ]
  }, {
    "name" : "OneSecGrp_SectionRef_163",
    "groups" : [ ],
    "sections" : [ "dend_140" ]
  }, {
    "name" : "OneSecGrp_SectionRef_167",
    "groups" : [ ],
    "sections" : [ "dend_144" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_118" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_159" ]
  }, {
    "name" : "OneSecGrp_SectionRef_126",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_160" ]
  }, {
    "name" : "OneSecGrp_SectionRef_127",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_132" ]
  }, {
    "name" : "OneSecGrp_SectionRef_124",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_118",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_125",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_113",
    "groups" : [ ],
    "sections" : [ "dend_133" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_134" ]
  }, {
    "name" : "OneSecGrp_SectionRef_139",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_141",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_138",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_140",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_129",
    "groups" : [ ],
    "sections" : [ "dend_135" ]
  }, {
    "name" : "OneSecGrp_SectionRef_142",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_143",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_115",
    "groups" : [ ],
    "sections" : [ "dend_121" ]
  }, {
    "name" : "OneSecGrp_SectionRef_133",
    "groups" : [ ],
    "sections" : [ "dend_122" ]
  }, {
    "name" : "OneSecGrp_SectionRef_132",
    "groups" : [ ],
    "sections" : [ "dend_123" ]
  }, {
    "name" : "OneSecGrp_SectionRef_136",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_135",
    "groups" : [ ],
    "sections" : [ "dend_111" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_152" ]
  }, {
    "name" : "OneSecGrp_SectionRef_137",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_155" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_154" ]
  }, {
    "name" : "OneSecGrp_SectionRef_157",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_155",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_154",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_156",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_153",
    "groups" : [ ],
    "sections" : [ "dend_113" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_149",
    "groups" : [ ],
    "sections" : [ "dend_129" ]
  }, {
    "name" : "OneSecGrp_SectionRef_148",
    "groups" : [ ],
    "sections" : [ "dend_130" ]
  }, {
    "name" : "OneSecGrp_SectionRef_150",
    "groups" : [ ],
    "sections" : [ "dend_127" ]
  }, {
    "name" : "OneSecGrp_SectionRef_151",
    "groups" : [ ],
    "sections" : [ "dend_126" ]
  }, {
    "name" : "OneSecGrp_SectionRef_158",
    "groups" : [ ],
    "sections" : [ "dend_142" ]
  }, {
    "name" : "OneSecGrp_SectionRef_152",
    "groups" : [ ],
    "sections" : [ "dend_114" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_165",
    "groups" : [ ],
    "sections" : [ "dend_147" ]
  }, {
    "name" : "OneSecGrp_SectionRef_162",
    "groups" : [ ],
    "sections" : [ "dend_141" ]
  }, {
    "name" : "OneSecGrp_SectionRef_164",
    "groups" : [ ],
    "sections" : [ "dend_148" ]
  }, {
    "name" : "OneSecGrp_SectionRef_166",
    "groups" : [ ],
    "sections" : [ "dend_145" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108", "dend_109", "dend_110", "dend_111", "dend_112", "dend_113", "dend_114", "dend_115", "dend_116", "dend_117", "dend_118", "dend_119", "dend_120", "dend_121", "dend_122", "dend_123", "dend_124", "dend_125", "dend_126", "dend_127", "dend_128", "dend_129", "dend_130", "dend_131", "dend_132", "dend_133", "dend_134", "dend_135", "dend_136", "dend_137", "dend_138", "dend_139", "dend_140", "dend_141", "dend_142", "dend_143", "dend_144", "dend_145", "dend_146", "dend_147", "dend_148", "dend_149", "dend_150", "dend_151", "dend_152", "dend_153", "dend_154", "dend_155", "dend_156", "dend_157", "dend_158", "dend_159", "dend_160", "dend_161", "dend_162", "dend_163" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_163", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_101", "dend_101", "dend_101", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_156", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_78", "dend_78", "dend_78", "dend_53", "dend_53", "dend_53", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_158", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_157", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_69", "dend_69", "dend_69", "dend_54", "dend_54", "dend_54", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_160", "dend_160", "dend_160", "dend_160", "dend_160", "dend_160", "dend_160", "dend_160", "dend_160", "dend_160", "dend_160", "dend_160", "dend_160", "dend_160", "dend_160", "dend_160", "dend_160", "dend_160", "dend_160", "dend_159", "dend_159", "dend_159", "dend_159", "dend_159", "dend_159", "dend_159", "dend_159", "dend_159", "dend_159", "dend_159", "dend_159", "dend_159", "dend_159", "dend_159", "dend_159", "dend_159", "dend_159", "dend_155", "dend_155", "dend_154", "dend_154", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_97", "dend_97", "dend_97", "dend_96", "dend_96", "dend_94", "dend_94", "dend_93", "dend_93", "dend_93", "dend_89", "dend_89", "dend_89", "dend_88", "dend_88", "dend_86", "dend_86", "dend_86", "dend_85", "dend_85", "dend_85", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_162", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_161", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_121", "dend_121", "dend_121", "dend_121", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_75", "dend_75", "dend_75", "dend_75", "dend_72", "dend_72", "dend_72", "dend_72", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_123", "dend_122", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_77", "dend_76", "dend_74", "dend_73", "dend_68", "dend_67", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_130", "dend_130", "dend_129", "dend_129", "dend_127", "dend_127", "dend_127", "dend_126", "dend_126", "dend_126", "dend_114", "dend_114", "dend_114", "dend_113", "dend_113", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_142", "dend_142", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_141", "dend_141", "dend_140", "dend_140", "dend_140", "dend_140", "dend_140", "dend_140", "dend_148", "dend_148", "dend_148", "dend_148", "dend_147", "dend_147", "dend_147", "dend_145", "dend_145", "dend_145", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_MC_fa0d941a0b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_99, id: dend_99, parent: soma_0
create dend_99
public dend_99
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_163, id: dend_163, parent: dend_99
create dend_163
public dend_163
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_80, id: dend_80, parent: dend_50
create dend_80
public dend_80
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_37, id: dend_37, parent: dend_17
create dend_37
public dend_37
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_150, id: dend_150, parent: dend_100
create dend_150
public dend_150
// Section: dend_101, id: dend_101, parent: dend_100
create dend_101
public dend_101
// Section: dend_90, id: dend_90, parent: dend_80
create dend_90
public dend_90
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_79, id: dend_79, parent: dend_51
create dend_79
public dend_79
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_37
create dend_47
public dend_47
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_30, id: dend_30, parent: dend_18
create dend_30
public dend_30
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_156, id: dend_156, parent: dend_150
create dend_156
public dend_156
// Section: dend_151, id: dend_151, parent: dend_150
create dend_151
public dend_151
// Section: dend_117, id: dend_117, parent: dend_101
create dend_117
public dend_117
// Section: dend_102, id: dend_102, parent: dend_101
create dend_102
public dend_102
// Section: dend_98, id: dend_98, parent: dend_90
create dend_98
public dend_98
// Section: dend_91, id: dend_91, parent: dend_90
create dend_91
public dend_91
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_78, id: dend_78, parent: dend_52
create dend_78
public dend_78
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_46, id: dend_46, parent: dend_38
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_158, id: dend_158, parent: dend_156
create dend_158
public dend_158
// Section: dend_157, id: dend_157, parent: dend_156
create dend_157
public dend_157
// Section: dend_153, id: dend_153, parent: dend_151
create dend_153
public dend_153
// Section: dend_152, id: dend_152, parent: dend_151
create dend_152
public dend_152
// Section: dend_131, id: dend_131, parent: dend_117
create dend_131
public dend_131
// Section: dend_118, id: dend_118, parent: dend_117
create dend_118
public dend_118
// Section: dend_116, id: dend_116, parent: dend_102
create dend_116
public dend_116
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103
// Section: dend_95, id: dend_95, parent: dend_91
create dend_95
public dend_95
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_87, id: dend_87, parent: dend_83
create dend_87
public dend_87
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_69, id: dend_69, parent: dend_53
create dend_69
public dend_69
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_160, id: dend_160, parent: dend_158
create dend_160
public dend_160
// Section: dend_159, id: dend_159, parent: dend_158
create dend_159
public dend_159
// Section: dend_155, id: dend_155, parent: dend_153
create dend_155
public dend_155
// Section: dend_154, id: dend_154, parent: dend_153
create dend_154
public dend_154
// Section: dend_149, id: dend_149, parent: dend_131
create dend_149
public dend_149
// Section: dend_132, id: dend_132, parent: dend_131
create dend_132
public dend_132
// Section: dend_120, id: dend_120, parent: dend_118
create dend_120
public dend_120
// Section: dend_119, id: dend_119, parent: dend_118
create dend_119
public dend_119
// Section: dend_109, id: dend_109, parent: dend_103
create dend_109
public dend_109
// Section: dend_104, id: dend_104, parent: dend_103
create dend_104
public dend_104
// Section: dend_97, id: dend_97, parent: dend_95
create dend_97
public dend_97
// Section: dend_96, id: dend_96, parent: dend_95
create dend_96
public dend_96
// Section: dend_94, id: dend_94, parent: dend_92
create dend_94
public dend_94
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_89, id: dend_89, parent: dend_87
create dend_89
public dend_89
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_86, id: dend_86, parent: dend_84
create dend_86
public dend_86
// Section: dend_85, id: dend_85, parent: dend_84
create dend_85
public dend_85
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_162, id: dend_162, parent: dend_160
create dend_162
public dend_162
// Section: dend_161, id: dend_161, parent: dend_160
create dend_161
public dend_161
// Section: dend_134, id: dend_134, parent: dend_132
create dend_134
public dend_134
// Section: dend_133, id: dend_133, parent: dend_132
create dend_133
public dend_133
// Section: dend_124, id: dend_124, parent: dend_120
create dend_124
public dend_124
// Section: dend_121, id: dend_121, parent: dend_120
create dend_121
public dend_121
// Section: dend_115, id: dend_115, parent: dend_109
create dend_115
public dend_115
// Section: dend_110, id: dend_110, parent: dend_109
create dend_110
public dend_110
// Section: dend_108, id: dend_108, parent: dend_104
create dend_108
public dend_108
// Section: dend_105, id: dend_105, parent: dend_104
create dend_105
public dend_105
// Section: dend_75, id: dend_75, parent: dend_71
create dend_75
public dend_75
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_66, id: dend_66, parent: dend_58
create dend_66
public dend_66
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_136, id: dend_136, parent: dend_134
create dend_136
public dend_136
// Section: dend_135, id: dend_135, parent: dend_134
create dend_135
public dend_135
// Section: dend_128, id: dend_128, parent: dend_124
create dend_128
public dend_128
// Section: dend_125, id: dend_125, parent: dend_124
create dend_125
public dend_125
// Section: dend_123, id: dend_123, parent: dend_121
create dend_123
public dend_123
// Section: dend_122, id: dend_122, parent: dend_121
create dend_122
public dend_122
// Section: dend_112, id: dend_112, parent: dend_110
create dend_112
public dend_112
// Section: dend_111, id: dend_111, parent: dend_110
create dend_111
public dend_111
// Section: dend_107, id: dend_107, parent: dend_105
create dend_107
public dend_107
// Section: dend_106, id: dend_106, parent: dend_105
create dend_106
public dend_106
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_63, id: dend_63, parent: dend_59
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_138, id: dend_138, parent: dend_136
create dend_138
public dend_138
// Section: dend_137, id: dend_137, parent: dend_136
create dend_137
public dend_137
// Section: dend_130, id: dend_130, parent: dend_128
create dend_130
public dend_130
// Section: dend_129, id: dend_129, parent: dend_128
create dend_129
public dend_129
// Section: dend_127, id: dend_127, parent: dend_125
create dend_127
public dend_127
// Section: dend_126, id: dend_126, parent: dend_125
create dend_126
public dend_126
// Section: dend_114, id: dend_114, parent: dend_112
create dend_114
public dend_114
// Section: dend_113, id: dend_113, parent: dend_112
create dend_113
public dend_113
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_142, id: dend_142, parent: dend_138
create dend_142
public dend_142
// Section: dend_139, id: dend_139, parent: dend_138
create dend_139
public dend_139
// Section: dend_146, id: dend_146, parent: dend_142
create dend_146
public dend_146
// Section: dend_143, id: dend_143, parent: dend_142
create dend_143
public dend_143
// Section: dend_141, id: dend_141, parent: dend_139
create dend_141
public dend_141
// Section: dend_140, id: dend_140, parent: dend_139
create dend_140
public dend_140
// Section: dend_148, id: dend_148, parent: dend_146
create dend_148
public dend_148
// Section: dend_147, id: dend_147, parent: dend_146
create dend_147
public dend_147
// Section: dend_145, id: dend_145, parent: dend_143
create dend_145
public dend_145
// Section: dend_144, id: dend_144, parent: dend_143
create dend_144
public dend_144

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_99, dend_50, dend_17, dend_0, dend_163, dend_100, dend_80, dend_51, dend_37, dend_18, dend_6, dend_1, dend_150, dend_101, dend_90, dend_81, dend_79, dend_52, dend_47, dend_38, dend_30, dend_19, dend_12, dend_7, dend_3, dend_2, dend_156, dend_151, dend_117, dend_102, dend_98, dend_91, dend_83, dend_82, dend_78, dend_53, dend_49, dend_48, dend_46, dend_39, dend_34, dend_31, dend_23, dend_20, dend_14, dend_13, dend_9, dend_8, dend_5, dend_4, dend_158, dend_157, dend_153, dend_152, dend_131, dend_118, dend_116, dend_103, dend_95, dend_92, dend_87, dend_84, dend_69, dend_54, dend_43, dend_40, dend_36, dend_35, dend_33, dend_32, dend_29, dend_24, dend_22, dend_21, dend_16, dend_15, dend_11, dend_10, dend_160, dend_159, dend_155, dend_154, dend_149, dend_132, dend_120, dend_119, dend_109, dend_104, dend_97, dend_96, dend_94, dend_93, dend_89, dend_88, dend_86, dend_85, dend_71, dend_70, dend_58, dend_55, dend_45, dend_44, dend_42, dend_41, dend_26, dend_25, dend_162, dend_161, dend_134, dend_133, dend_124, dend_121, dend_115, dend_110, dend_108, dend_105, dend_75, dend_72, dend_66, dend_59, dend_57, dend_56, dend_28, dend_27, dend_136, dend_135, dend_128, dend_125, dend_123, dend_122, dend_112, dend_111, dend_107, dend_106, dend_77, dend_76, dend_74, dend_73, dend_68, dend_67, dend_63, dend_60, dend_138, dend_137, dend_130, dend_129, dend_127, dend_126, dend_114, dend_113, dend_65, dend_64, dend_62, dend_61, dend_142, dend_139, dend_146, dend_143, dend_141, dend_140, dend_148, dend_147, dend_145, dend_144]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_99, dend_50, dend_17, dend_0, dend_163, dend_100, dend_80, dend_51, dend_37, dend_18, dend_6, dend_1, dend_150, dend_101, dend_90, dend_81, dend_79, dend_52, dend_47, dend_38, dend_30, dend_19, dend_12, dend_7, dend_3, dend_2, dend_156, dend_151, dend_117, dend_102, dend_98, dend_91, dend_83, dend_82, dend_78, dend_53, dend_49, dend_48, dend_46, dend_39, dend_34, dend_31, dend_23, dend_20, dend_14, dend_13, dend_9, dend_8, dend_5, dend_4, dend_158, dend_157, dend_153, dend_152, dend_131, dend_118, dend_116, dend_103, dend_95, dend_92, dend_87, dend_84, dend_69, dend_54, dend_43, dend_40, dend_36, dend_35, dend_33, dend_32, dend_29, dend_24, dend_22, dend_21, dend_16, dend_15, dend_11, dend_10, dend_160, dend_159, dend_155, dend_154, dend_149, dend_132, dend_120, dend_119, dend_109, dend_104, dend_97, dend_96, dend_94, dend_93, dend_89, dend_88, dend_86, dend_85, dend_71, dend_70, dend_58, dend_55, dend_45, dend_44, dend_42, dend_41, dend_26, dend_25, dend_162, dend_161, dend_134, dend_133, dend_124, dend_121, dend_115, dend_110, dend_108, dend_105, dend_75, dend_72, dend_66, dend_59, dend_57, dend_56, dend_28, dend_27, dend_136, dend_135, dend_128, dend_125, dend_123, dend_122, dend_112, dend_111, dend_107, dend_106, dend_77, dend_76, dend_74, dend_73, dend_68, dend_67, dend_63, dend_60, dend_138, dend_137, dend_130, dend_129, dend_127, dend_126, dend_114, dend_113, dend_65, dend_64, dend_62, dend_61, dend_142, dend_139, dend_146, dend_143, dend_141, dend_140, dend_148, dend_147, dend_145, dend_144]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_75, dend_72]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[dend_99, dend_50, dend_17, dend_0, axon_0, dend_163, dend_100, dend_80, dend_51, dend_37, dend_18, dend_6, dend_1, axon_1, dend_150, dend_101, dend_90, dend_81, dend_79, dend_52, dend_47, dend_38, dend_30, dend_19, dend_12, dend_7, dend_3, dend_2, dend_156, dend_151, dend_117, dend_102, dend_98, dend_91, dend_83, dend_82, dend_78, dend_53, dend_49, dend_48, dend_46, dend_39, dend_34, dend_31, dend_23, dend_20, dend_14, dend_13, dend_9, dend_8, dend_5, dend_4, dend_158, dend_157, dend_153, dend_152, dend_131, dend_118, dend_116, dend_103, dend_95, dend_92, dend_87, dend_84, dend_69, dend_54, dend_43, dend_40, dend_36, dend_35, dend_33, dend_32, dend_29, dend_24, dend_22, dend_21, dend_16, dend_15, dend_11, dend_10, dend_160, dend_159, dend_155, dend_154, dend_149, dend_132, dend_120, dend_119, dend_109, dend_104, dend_97, dend_96, dend_94, dend_93, dend_89, dend_88, dend_86, dend_85, dend_71, dend_70, dend_58, dend_55, dend_45, dend_44, dend_42, dend_41, dend_26, dend_25, dend_162, dend_161, dend_134, dend_133, dend_124, dend_121, dend_115, dend_110, dend_108, dend_105, dend_75, dend_72, dend_66, dend_59, dend_57, dend_56, dend_28, dend_27, dend_136, dend_135, dend_128, dend_125, dend_123, dend_122, dend_112, dend_111, dend_107, dend_106, dend_77, dend_76, dend_74, dend_73, dend_68, dend_67, dend_63, dend_60, dend_138, dend_137, dend_130, dend_129, dend_127, dend_126, dend_114, dend_113, dend_65, dend_64, dend_62, dend_61, dend_142, dend_139, dend_146, dend_143, dend_141, dend_140, dend_148, dend_147, dend_145, dend_144]}
objref ModelViewParmSubset_6
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_163]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_150]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_156]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_151]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_117]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_158]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_157]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_153]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_131]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_116]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_149]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_120]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_119]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_109]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_162]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_161]}
objref OneSecGrp_SectionRef_111
// Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_124]}
objref OneSecGrp_SectionRef_114
// Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_115]}
objref OneSecGrp_SectionRef_116
// Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_110]}
objref OneSecGrp_SectionRef_117
// Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_119
// Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_122
// Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_123
// Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_136]}
objref OneSecGrp_SectionRef_128
// Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_128]}
objref OneSecGrp_SectionRef_130
// Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_125]}
objref OneSecGrp_SectionRef_131
// Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_112]}
objref OneSecGrp_SectionRef_134
// Group: {name=OneSecGrp_SectionRef_144, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_144
// Group: {name=OneSecGrp_SectionRef_145, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_145
// Group: {name=OneSecGrp_SectionRef_146, groups=[], sections=[dend_138]}
objref OneSecGrp_SectionRef_146
// Group: {name=OneSecGrp_SectionRef_147, groups=[], sections=[dend_137]}
objref OneSecGrp_SectionRef_147
// Group: {name=OneSecGrp_SectionRef_159, groups=[], sections=[dend_139]}
objref OneSecGrp_SectionRef_159
// Group: {name=OneSecGrp_SectionRef_160, groups=[], sections=[dend_146]}
objref OneSecGrp_SectionRef_160
// Group: {name=OneSecGrp_SectionRef_161, groups=[], sections=[dend_143]}
objref OneSecGrp_SectionRef_161
// Group: {name=OneSecGrp_SectionRef_163, groups=[], sections=[dend_140]}
objref OneSecGrp_SectionRef_163
// Group: {name=OneSecGrp_SectionRef_167, groups=[], sections=[dend_144]}
objref OneSecGrp_SectionRef_167
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_118]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_159]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_126
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_160]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_127
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_132]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_124
// Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_118
// Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_125
// Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_133]}
objref OneSecGrp_SectionRef_113
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_134]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_139, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_139
// Group: {name=OneSecGrp_SectionRef_141, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_141
// Group: {name=OneSecGrp_SectionRef_138, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_138
// Group: {name=OneSecGrp_SectionRef_140, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_140
// Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_135]}
objref OneSecGrp_SectionRef_129
// Group: {name=OneSecGrp_SectionRef_142, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_142
// Group: {name=OneSecGrp_SectionRef_143, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_143
// Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_121]}
objref OneSecGrp_SectionRef_115
// Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_122]}
objref OneSecGrp_SectionRef_133
// Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_123]}
objref OneSecGrp_SectionRef_132
// Group: {name=OneSecGrp_SectionRef_136, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_136
// Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_111]}
objref OneSecGrp_SectionRef_135
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_152]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_137, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_137
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_155]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_154]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_157, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_157
// Group: {name=OneSecGrp_SectionRef_155, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_155
// Group: {name=OneSecGrp_SectionRef_154, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_154
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_156, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_156
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_153, groups=[], sections=[dend_113]}
objref OneSecGrp_SectionRef_153
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_149, groups=[], sections=[dend_129]}
objref OneSecGrp_SectionRef_149
// Group: {name=OneSecGrp_SectionRef_148, groups=[], sections=[dend_130]}
objref OneSecGrp_SectionRef_148
// Group: {name=OneSecGrp_SectionRef_150, groups=[], sections=[dend_127]}
objref OneSecGrp_SectionRef_150
// Group: {name=OneSecGrp_SectionRef_151, groups=[], sections=[dend_126]}
objref OneSecGrp_SectionRef_151
// Group: {name=OneSecGrp_SectionRef_158, groups=[], sections=[dend_142]}
objref OneSecGrp_SectionRef_158
// Group: {name=OneSecGrp_SectionRef_152, groups=[], sections=[dend_114]}
objref OneSecGrp_SectionRef_152
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_165, groups=[], sections=[dend_147]}
objref OneSecGrp_SectionRef_165
// Group: {name=OneSecGrp_SectionRef_162, groups=[], sections=[dend_141]}
objref OneSecGrp_SectionRef_162
// Group: {name=OneSecGrp_SectionRef_164, groups=[], sections=[dend_148]}
objref OneSecGrp_SectionRef_164
// Group: {name=OneSecGrp_SectionRef_166, groups=[], sections=[dend_145]}
objref OneSecGrp_SectionRef_166
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131, dend_132, dend_133, dend_134, dend_135, dend_136, dend_137, dend_138, dend_139, dend_140, dend_141, dend_142, dend_143, dend_144, dend_145, dend_146, dend_147, dend_148, dend_149, dend_150, dend_151, dend_152, dend_153, dend_154, dend_155, dend_156, dend_157, dend_158, dend_159, dend_160, dend_161, dend_162, dend_163], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_101, dend_101, dend_101, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_155, dend_155, dend_154, dend_154, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_97, dend_97, dend_97, dend_96, dend_96, dend_94, dend_94, dend_93, dend_93, dend_93, dend_89, dend_89, dend_89, dend_88, dend_88, dend_86, dend_86, dend_86, dend_85, dend_85, dend_85, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_121, dend_121, dend_121, dend_121, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_72, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_123, dend_122, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_77, dend_76, dend_74, dend_73, dend_68, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_130, dend_130, dend_129, dend_129, dend_127, dend_127, dend_127, dend_126, dend_126, dend_126, dend_114, dend_114, dend_114, dend_113, dend_113, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_61, dend_61, dend_142, dend_142, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_141, dend_141, dend_140, dend_140, dend_140, dend_140, dend_140, dend_140, dend_148, dend_148, dend_148, dend_148, dend_147, dend_147, dend_147, dend_145, dend_145, dend_145, dend_144, dend_144, dend_144, dend_144, dend_144]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_99(0), soma_0(0.4500001750799176)
    connect dend_50(0), soma_0(0.4500001750799176)
    connect dend_17(0), soma_0(0.4500001750799176)
    connect dend_0(0), soma_0(0.4500001750799176)
    connect axon_0(0), soma_0(1.0)
    connect dend_163(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_80(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_37(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_150(0), dend_100(1.0)
    connect dend_101(0), dend_100(1.0)
    connect dend_90(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_79(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_47(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_30(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_156(0), dend_150(1.0)
    connect dend_151(0), dend_150(1.0)
    connect dend_117(0), dend_101(1.0)
    connect dend_102(0), dend_101(1.0)
    connect dend_98(0), dend_90(1.0)
    connect dend_91(0), dend_90(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_78(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_46(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_158(0), dend_156(1.0)
    connect dend_157(0), dend_156(1.0)
    connect dend_153(0), dend_151(1.0)
    connect dend_152(0), dend_151(1.0)
    connect dend_131(0), dend_117(1.0)
    connect dend_118(0), dend_117(1.0)
    connect dend_116(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)
    connect dend_95(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_87(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_69(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_160(0), dend_158(1.0)
    connect dend_159(0), dend_158(1.0)
    connect dend_155(0), dend_153(1.0)
    connect dend_154(0), dend_153(1.0)
    connect dend_149(0), dend_131(1.0)
    connect dend_132(0), dend_131(1.0)
    connect dend_120(0), dend_118(1.0)
    connect dend_119(0), dend_118(1.0)
    connect dend_109(0), dend_103(1.0)
    connect dend_104(0), dend_103(1.0)
    connect dend_97(0), dend_95(1.0)
    connect dend_96(0), dend_95(1.0)
    connect dend_94(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_89(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_86(0), dend_84(1.0)
    connect dend_85(0), dend_84(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_162(0), dend_160(1.0)
    connect dend_161(0), dend_160(1.0)
    connect dend_134(0), dend_132(1.0)
    connect dend_133(0), dend_132(1.0)
    connect dend_124(0), dend_120(1.0)
    connect dend_121(0), dend_120(1.0)
    connect dend_115(0), dend_109(1.0)
    connect dend_110(0), dend_109(1.0)
    connect dend_108(0), dend_104(1.0)
    connect dend_105(0), dend_104(1.0)
    connect dend_75(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_66(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_136(0), dend_134(1.0)
    connect dend_135(0), dend_134(1.0)
    connect dend_128(0), dend_124(1.0)
    connect dend_125(0), dend_124(1.0)
    connect dend_123(0), dend_121(1.0)
    connect dend_122(0), dend_121(1.0)
    connect dend_112(0), dend_110(1.0)
    connect dend_111(0), dend_110(1.0)
    connect dend_107(0), dend_105(1.0)
    connect dend_106(0), dend_105(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_63(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_138(0), dend_136(1.0)
    connect dend_137(0), dend_136(1.0)
    connect dend_130(0), dend_128(1.0)
    connect dend_129(0), dend_128(1.0)
    connect dend_127(0), dend_125(1.0)
    connect dend_126(0), dend_125(1.0)
    connect dend_114(0), dend_112(1.0)
    connect dend_113(0), dend_112(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_142(0), dend_138(1.0)
    connect dend_139(0), dend_138(1.0)
    connect dend_146(0), dend_142(1.0)
    connect dend_143(0), dend_142(1.0)
    connect dend_141(0), dend_139(1.0)
    connect dend_140(0), dend_139(1.0)
    connect dend_148(0), dend_146(1.0)
    connect dend_147(0), dend_146(1.0)
    connect dend_145(0), dend_143(1.0)
    connect dend_144(0), dend_143(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -5.81032, -8.96414, 0.0, 3.39321 ) }
    soma_0 { pt3dadd( -5.35021, -8.05454, 0.0, 5.70157 ) }
    soma_0 { pt3dadd( -4.8901, -7.14495, 0.0, 8.17623 ) }
    soma_0 { pt3dadd( -4.42999, -6.23536, 0.0, 10.0451 ) }
    soma_0 { pt3dadd( -3.96988, -5.32576, 0.0, 11.2842 ) }
    soma_0 { pt3dadd( -3.50977, -4.41617, 0.0, 12.1609 ) }
    soma_0 { pt3dadd( -3.04966, -3.50658, 0.0, 13.0983 ) }
    soma_0 { pt3dadd( -2.58955, -2.59698, 0.0, 14.2729 ) }
    soma_0 { pt3dadd( -2.12944, -1.68739, 0.0, 15.6323 ) }
    soma_0 { pt3dadd( -1.66933, -0.777799, 0.0, 16.1737 ) }
    soma_0 { pt3dadd( -1.20922, 0.131794, 0.0, 15.8371 ) }
    soma_0 { pt3dadd( -0.74911, 1.04139, 0.0, 15.1688 ) }
    soma_0 { pt3dadd( -0.289, 1.95098, 0.0, 14.0685 ) }
    soma_0 { pt3dadd( 0.17111, 2.86057, 0.0, 12.5203 ) }
    soma_0 { pt3dadd( 0.631219, 3.77017, 0.0, 11.8901 ) }
    soma_0 { pt3dadd( 1.09133, 4.67976, 0.0, 11.5663 ) }
    soma_0 { pt3dadd( 1.55144, 5.58935, 0.0, 11.2497 ) }
    soma_0 { pt3dadd( 2.01155, 6.49895, 0.0, 10.4762 ) }
    soma_0 { pt3dadd( 2.47166, 7.40854, 0.0, 8.56185 ) }
    soma_0 { pt3dadd( 2.93177, 8.31813, 0.0, 6.66045 ) }
    soma_0 { pt3dadd( 3.39188, 9.22772, 0.0, 3.67528 ) }
    // Section: dend_99, id: dend_99, parent: soma_0 (entry count 21/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( -4.78859, 6.76653, 3.88, 6.86 ) }
    dend_99 { pt3dadd( -4.78859, 6.76653, 3.88, 6.86 ) }
    dend_99 { pt3dadd( -5.8947, 7.44094, 4.12694, 5.68 ) }
    dend_99 { pt3dadd( -7.00615, 8.11861, 4.37508, 5.46 ) }
    dend_99 { pt3dadd( -9.27304, 9.50077, 4.88118, 4.5 ) }
    dend_99 { pt3dadd( -10.7931, 10.4276, 5.22054, 4.5 ) }
    dend_99 { pt3dadd( -12.666, 11.5695, 5.63868, 4.79 ) }
    dend_99 { pt3dadd( -14.2886, 12.5148, 6.0155, 5.24 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 29/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -1.94859, -7.20522, -1.28, 3.24 ) }
    dend_50 { pt3dadd( -1.94859, -7.20522, -1.28, 3.24 ) }
    dend_50 { pt3dadd( -0.456228, -8.98429, -1.42382, 1.47 ) }
    dend_50 { pt3dadd( 0.659019, -10.2733, -1.65016, 1.55 ) }
    dend_50 { pt3dadd( 1.51726, -11.251, -1.91978, 1.7 ) }
    dend_50 { pt3dadd( 2.4888, -12.3078, -2.3473, 1.92 ) }
    dend_50 { pt3dadd( 3.99379, -13.8531, -3.20935, 1.84 ) }
    dend_50 { pt3dadd( 5.27482, -15.0716, -4.19303, 1.7 ) }
    dend_50 { pt3dadd( 6.47029, -16.145, -5.40507, 1.4 ) }
    dend_50 { pt3dadd( 7.2818, -16.9073, -6.47929, 1.25 ) }
    dend_50 { pt3dadd( 8.28185, -17.9608, -8.16628, 1.55 ) }
    dend_50 { pt3dadd( 9.1629, -18.911, -9.88276, 1.7 ) }
    dend_50 { pt3dadd( 9.83179, -19.6507, -11.4487, 1.99 ) }
    dend_50 { pt3dadd( 10.3717, -20.2899, -12.9365, 2.06 ) }
    dend_50 { pt3dadd( 10.9292, -21.0484, -14.7282, 2.06 ) }
    dend_50 { pt3dadd( 11.2392, -21.583, -15.8947, 2.58 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 45/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -6.16859, -8.44347, 4.84, 2.21 ) }
    dend_17 { pt3dadd( -6.32593, -8.67105, 4.8795, 2.21 ) }
    dend_17 { pt3dadd( -6.82039, -9.75434, 5.02997, 1.99 ) }
    dend_17 { pt3dadd( -7.27358, -11.2297, 5.18964, 1.55 ) }
    dend_17 { pt3dadd( -7.397, -12.1126, 5.24095, 1.77 ) }
    dend_17 { pt3dadd( -7.42958, -13.5939, 5.28505, 1.99 ) }
    dend_17 { pt3dadd( -7.37825, -15.0518, 5.34723, 2.14 ) }
    dend_17 { pt3dadd( -7.27779, -16.0276, 5.38978, 2.14 ) }
    dend_17 { pt3dadd( -7.08743, -17.184, 5.41503, 2.51 ) }
    dend_17 { pt3dadd( -6.68657, -19.1722, 5.39584, 2.14 ) }
    dend_17 { pt3dadd( -6.34427, -20.829, 5.28584, 2.43 ) }
    dend_17 { pt3dadd( -6.01062, -22.475, 5.15798, 2.95 ) }
    dend_17 { pt3dadd( -5.67877, -24.2618, 4.99513, 3.39 ) }
    dend_17 { pt3dadd( -5.44438, -25.6854, 4.86576, 3.61 ) }
    dend_17 { pt3dadd( -5.20682, -27.2127, 4.70308, 3.32 ) }
    dend_17 { pt3dadd( -4.96701, -29.3673, 4.41892, 3.02 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.94141, -3.06147, -1.79, 3.61 ) }
    dend_0 { pt3dadd( 4.94141, -3.06147, -1.79, 3.61 ) }
    dend_0 { pt3dadd( 6.20855, -2.93482, -2.64936, 2.43 ) }
    dend_0 { pt3dadd( 7.37741, -2.81799, -3.44207, 2.06 ) }
    dend_0 { pt3dadd( 8.76449, -2.67935, -4.38276, 2.29 ) }
    dend_0 { pt3dadd( 9.86895, -2.56896, -5.13179, 2.88 ) }
    dend_0 { pt3dadd( 10.466, -2.50929, -5.53668, 2.88 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 68/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.39188, 9.22772, 0.0, 0.613956 ) }
    axon_0 { pt3dadd( 10.1626, 22.6127, 0.0, 0.613956 ) }
    axon_0 { pt3dadd( 16.9332, 35.9977, 0.0, 0.613956 ) }
    // Section: dend_163, id: dend_163, parent: dend_99 (entry count 71/100)
    dend_163 { pt3dclear() }
    dend_163 { pt3dadd( -14.2886, 12.5148, 6.0155, 1.77 ) }
    dend_163 { pt3dadd( -14.6992, 13.8938, 4.7424, 1.77 ) }
    dend_163 { pt3dadd( -14.9717, 14.5377, 4.13106, 1.11 ) }
    dend_163 { pt3dadd( -15.3466, 15.2333, 3.48953, 1.11 ) }
    dend_163 { pt3dadd( -16.0547, 16.391, 2.52605, 1.47 ) }
    dend_163 { pt3dadd( -16.6849, 17.3836, 1.81574, 1.92 ) }
    dend_163 { pt3dadd( -17.4528, 18.6216, 1.12691, 1.92 ) }
    dend_163 { pt3dadd( -18.4144, 20.1067, 0.509121, 1.18 ) }
    dend_163 { pt3dadd( -19.2644, 21.5567, 0.254272, 1.77 ) }
    dend_163 { pt3dadd( -19.8882, 23.0749, 0.555009, 1.18 ) }
    dend_163 { pt3dadd( -20.1162, 24.2023, 1.14764, 1.47 ) }
    dend_163 { pt3dadd( -20.1616, 25.9771, 2.32928, 1.33 ) }
    dend_163 { pt3dadd( -20.0357, 27.1897, 3.1801, 1.47 ) }
    dend_163 { pt3dadd( -19.7386, 28.4388, 4.01357, 1.47 ) }
    dend_163 { pt3dadd( -19.0008, 30.6597, 5.28825, 1.11 ) }
    dend_163 { pt3dadd( -18.5815, 31.747, 5.72266, 1.25 ) }
    dend_163 { pt3dadd( -17.974, 33.3492, 5.90945, 1.47 ) }
    dend_163 { pt3dadd( -17.5895, 34.7128, 5.52507, 1.25 ) }
    dend_163 { pt3dadd( -17.4253, 35.9831, 4.72902, 1.55 ) }
    dend_163 { pt3dadd( -17.4446, 37.0477, 3.84729, 1.55 ) }
    dend_163 { pt3dadd( -17.5753, 38.0245, 2.9544, 1.4 ) }
    dend_163 { pt3dadd( -17.7887, 38.9564, 2.13252, 1.4 ) }
    dend_163 { pt3dadd( -18.1721, 40.1869, 1.26474, 1.03 ) }
    dend_163 { pt3dadd( -18.4652, 41.116, 0.906169, 1.03 ) }
    dend_163 { pt3dadd( -18.8185, 42.529, 0.886104, 1.4 ) }
    dend_163 { pt3dadd( -18.9681, 43.7636, 1.24803, 1.4 ) }
    dend_163 { pt3dadd( -18.9669, 44.7586, 1.7531, 1.4 ) }
    dend_163 { pt3dadd( -18.8547, 46.1016, 2.62645, 1.11 ) }
    dend_163 { pt3dadd( -18.7, 47.254, 3.43385, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_163 { pt3dadd( -18.4929, 48.7483, 4.45409, 1.4 ) }
    dend_163 { pt3dadd( -18.3613, 50.0567, 5.19716, 1.03 ) }
    dend_163 { pt3dadd( -18.3573, 51.3469, 5.60969, 1.03 ) }
    dend_163 { pt3dadd( -18.451, 52.3785, 5.67113, 1.03 ) }
    dend_163 { pt3dadd( -18.7305, 54.052, 5.49104, 1.25 ) }
    dend_163 { pt3dadd( -19.0225, 55.4965, 5.23046, 1.4 ) }
    dend_163 { pt3dadd( -19.4425, 57.3703, 4.82899, 1.84 ) }
    dend_163 { pt3dadd( -19.7973, 59.0504, 4.4849, 1.11 ) }
    dend_163 { pt3dadd( -20.0967, 60.6459, 4.25972, 0.81 ) }
    dend_163 { pt3dadd( -20.2413, 61.6139, 4.21369, 1.03 ) }
    dend_163 { pt3dadd( -20.4079, 63.1149, 4.27353, 1.4 ) }
    dend_163 { pt3dadd( -20.5268, 64.6511, 4.39694, 1.4 ) }
    dend_163 { pt3dadd( -20.6053, 66.2688, 4.52332, 1.11 ) }
    dend_163 { pt3dadd( -20.6711, 68.3863, 4.62406, 1.03 ) }
    dend_163 { pt3dadd( -20.7189, 69.779, 4.61634, 1.03 ) }
    dend_163 { pt3dadd( -20.7582, 71.6766, 4.50052, 1.33 ) }
    dend_163 { pt3dadd( -20.7652, 73.0841, 4.35634, 1.62 ) }
    dend_163 { pt3dadd( -20.7422, 74.3891, 4.19868, 1.4 ) }
    dend_163 { pt3dadd( -20.7265, 75.7095, 3.99222, 0.96 ) }
    dend_163 { pt3dadd( -20.7278, 76.9721, 3.75785, 1.25 ) }
    dend_163 { pt3dadd( -20.8302, 78.3685, 3.50748, 1.03 ) }
    dend_163 { pt3dadd( -21.1051, 79.7325, 3.28992, 1.62 ) }
    dend_163 { pt3dadd( -21.5821, 81.0029, 3.1249, 1.62 ) }
    dend_163 { pt3dadd( -22.4632, 82.5626, 2.96119, 1.03 ) }
    dend_163 { pt3dadd( -23.1013, 83.4593, 2.86314, 1.03 ) }
    dend_163 { pt3dadd( -24.0544, 84.7159, 2.67069, 0.88 ) }
    dend_163 { pt3dadd( -25.069, 86.0417, 2.41701, 1.18 ) }
    dend_163 { pt3dadd( -25.7611, 87.1223, 2.18553, 0.81 ) }
    dend_163 { pt3dadd( -26.1229, 88.1493, 2.00087, 0.81 ) }
    dend_163 { pt3dadd( -26.0789, 89.2987, 1.8981, 1.03 ) }
    dend_163 { pt3dadd( -25.6516, 91.1516, 1.89977, 1.47 ) }
    dend_163 { pt3dadd( -25.3296, 92.2594, 2.03496, 1.11 ) }
    dend_163 { pt3dadd( -24.7442, 94.2385, 2.49134, 0.96 ) }
    dend_163 { pt3dadd( -24.4074, 95.4736, 2.86575, 0.81 ) }
    dend_163 { pt3dadd( -24.1478, 96.6511, 3.30197, 1.33 ) }
    dend_163 { pt3dadd( -23.9908, 97.8012, 3.78105, 1.18 ) }
    dend_163 { pt3dadd( -23.8918, 99.5422, 4.4687, 0.81 ) }
    dend_163 { pt3dadd( -23.8821, 100.548, 4.76152, 0.81 ) }
    dend_163 { pt3dadd( -23.9351, 102.563, 5.02825, 1.11 ) }
    dend_163 { pt3dadd( -23.9648, 103.847, 4.94809, 1.33 ) }
    dend_163 { pt3dadd( -23.9664, 105.052, 4.67963, 1.47 ) }
    dend_163 { pt3dadd( -23.9734, 106.469, 4.20256, 1.4 ) }
    dend_163 { pt3dadd( -23.984, 107.873, 3.62187, 1.62 ) }
    dend_163 { pt3dadd( -24.0249, 109.258, 3.03335, 1.47 ) }
    dend_163 { pt3dadd( -24.0847, 110.847, 2.39494, 0.96 ) }
    dend_163 { pt3dadd( -24.0864, 111.84, 2.07372, 0.96 ) }
    dend_163 { pt3dadd( -24.0472, 112.763, 1.8857, 0.96 ) }
    dend_163 { pt3dadd( -23.9274, 114.3, 1.8339, 1.11 ) }
    dend_163 { pt3dadd( -23.7651, 116.027, 2.00436, 1.18 ) }
    dend_163 { pt3dadd( -23.642, 117.526, 2.24595, 0.88 ) }
    dend_163 { pt3dadd( -23.5525, 118.986, 2.48803, 0.81 ) }
    dend_163 { pt3dadd( -23.5575, 120.542, 2.68972, 1.11 ) }
    dend_163 { pt3dadd( -23.6986, 122.339, 2.78907, 0.88 ) }
    dend_163 { pt3dadd( -23.9619, 123.641, 2.72273, 0.81 ) }
    dend_163 { pt3dadd( -24.479, 125.335, 2.43552, 0.74 ) }
    dend_163 { pt3dadd( -24.9447, 126.551, 2.11053, 1.03 ) }
    dend_163 { pt3dadd( -25.6832, 128.238, 1.51696, 1.33 ) }
    dend_163 { pt3dadd( -26.3355, 129.703, 0.893563, 1.33 ) }
    dend_163 { pt3dadd( -26.9644, 131.217, 0.241341, 0.81 ) }
    dend_163 { pt3dadd( -27.4058, 132.455, -0.199542, 1.55 ) }
    dend_163 { pt3dadd( -27.6925, 133.473, -0.430926, 1.55 ) }
    dend_163 { pt3dadd( -27.9092, 134.615, -0.4994, 1.18 ) }
    dend_163 { pt3dadd( -28.03, 136.912, -0.130362, 0.74 ) }
    dend_163 { pt3dadd( -27.9336, 138.408, 0.4178, 0.74 ) }
    dend_163 { pt3dadd( -27.7547, 139.871, 1.09982, 1.4 ) }
    dend_163 { pt3dadd( -27.6283, 140.899, 1.57917, 1.99 ) }
    dend_163 { pt3dadd( -27.4828, 142.371, 2.17677, 1.47 ) }
    dend_163 { pt3dadd( -27.4657, 144.095, 2.69129, 1.18 ) }
    dend_163 { pt3dadd( -27.7725, 145.955, 2.8646, 1.55 ) }
    dend_163 { pt3dadd( -28.3003, 147.511, 2.6247, 1.99 ) }
    dend_163 { pt3dadd( -29.0355, 149.237, 2.13839, 2.21 ) }
    dend_163 { pt3dadd( -29.7706, 150.801, 1.59186, 1.92 ) }
    dend_163 { pt3dadd( -30.7287, 152.777, 0.841626, 1.47 ) }
    dend_163 { pt3dadd( -31.6373, 154.763, 0.0699149, 1.11 ) }
    dend_163 { pt3dadd( -32.0729, 156.002, -0.354505, 0.96 ) }
    dend_163 { pt3dadd( -32.3285, 157.366, -0.662843, 0.96 ) }
    dend_163 { pt3dadd( -32.3337, 159.017, -0.786233, 0.74 ) }
    dend_163 { pt3dadd( -32.1029, 160.446, -0.739377, 1.25 ) }
    dend_163 { pt3dadd( -31.6813, 161.803, -0.629209, 1.47 ) }
    dend_163 { pt3dadd( -30.8947, 163.818, -0.413284, 0.81 ) }
    dend_163 { pt3dadd( -30.4225, 165.044, -0.311344, 0.66 ) }
    dend_163 { pt3dadd( -30.0955, 165.999, -0.27255, 0.66 ) }
    dend_163 { pt3dadd( -29.9065, 166.761, -0.283443, 1.11 ) }
    dend_163 { pt3dadd( -29.7064, 168.276, -0.422253, 1.99 ) }
    dend_163 { pt3dadd( -29.6429, 169.928, -0.664103, 1.84 ) }
    dend_163 { pt3dadd( -29.6757, 171.687, -0.99508, 0.81 ) }
    dend_163 { pt3dadd( -29.6888, 172.546, -1.17199, 0.81 ) }
    dend_163 { pt3dadd( -29.6248, 174.298, -1.5521, 1.25 ) }
    dend_163 { pt3dadd( -29.4428, 175.507, -1.78217, 1.11 ) }
    dend_163 { pt3dadd( -28.9069, 177.086, -1.9626, 1.03 ) }
    dend_163 { pt3dadd( -28.2463, 178.201, -2.00847, 1.55 ) }
    dend_163 { pt3dadd( -27.8471, 178.714, -1.99882, 1.7 ) }
    dend_163 { pt3dadd( -26.9158, 179.796, -1.93697, 1.47 ) }
    dend_163 { pt3dadd( -25.5318, 181.387, -1.8139, 1.03 ) }
    dend_163 { pt3dadd( -24.2495, 183.063, -1.75853, 1.03 ) }
    dend_163 { pt3dadd( -23.531, 184.472, -1.8846, 0.88 ) }
    dend_163 { pt3dadd( -23.4808, 185.145, -2.10933, 0.88 ) }
    dend_163 { pt3dadd( -23.7077, 186.016, -2.54992, 1.11 ) }
    dend_163 { pt3dadd( -24.417, 187.512, -3.45449, 1.55 ) }
    dend_163 { pt3dadd( -25.2688, 188.939, -4.38064, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_163 { pt3dadd( -26.0565, 190.219, -5.2266, 1.4 ) }
    dend_163 { pt3dadd( -26.8397, 191.586, -6.04325, 1.62 ) }
    dend_163 { pt3dadd( -27.6397, 193.252, -6.86391, 1.62 ) }
    dend_163 { pt3dadd( -28.3141, 195.115, -7.55581, 0.88 ) }
    dend_163 { pt3dadd( -28.9017, 197.673, -8.10465, 0.96 ) }
    dend_163 { pt3dadd( -29.0923, 199.579, -8.18446, 1.18 ) }
    dend_163 { pt3dadd( -29.0316, 201.325, -8.00303, 1.4 ) }
    dend_163 { pt3dadd( -28.7807, 202.97, -7.61737, 1.4 ) }
    dend_163 { pt3dadd( -28.3111, 204.625, -7.03115, 0.88 ) }
    dend_163 { pt3dadd( -27.5949, 206.354, -6.26788, 0.88 ) }
    dend_163 { pt3dadd( -26.8815, 207.714, -5.60737, 1.18 ) }
    dend_163 { pt3dadd( -26.2086, 208.884, -5.09035, 1.4 ) }
    dend_163 { pt3dadd( -25.7009, 209.769, -4.81373, 1.4 ) }
    dend_163 { pt3dadd( -24.8693, 211.341, -4.57852, 0.88 ) }
    dend_163 { pt3dadd( -24.1799, 212.929, -4.63217, 0.74 ) }
    dend_163 { pt3dadd( -23.8393, 214.102, -4.93035, 0.96 ) }
    dend_163 { pt3dadd( -23.6553, 215.486, -5.48678, 1.03 ) }
    dend_163 { pt3dadd( -23.6633, 216.99, -6.22036, 1.03 ) }
    dend_163 { pt3dadd( -23.7748, 218.418, -6.94972, 1.4 ) }
    dend_163 { pt3dadd( -23.8642, 219.536, -7.53292, 1.55 ) }
    dend_163 { pt3dadd( -23.9068, 221.15, -8.31009, 1.7 ) }
    dend_163 { pt3dadd( -23.7883, 222.439, -8.83064, 1.55 ) }
    dend_163 { pt3dadd( -23.3793, 224.098, -9.34492, 1.33 ) }
    dend_163 { pt3dadd( -22.9011, 225.441, -9.6398, 1.18 ) }
    dend_163 { pt3dadd( -22.1289, 227.45, -9.9601, 0.96 ) }
    dend_163 { pt3dadd( -21.5831, 229.007, -10.1382, 1.4 ) }
    dend_163 { pt3dadd( -21.1324, 230.728, -10.2424, 1.55 ) }
    dend_163 { pt3dadd( -20.7665, 233.097, -10.2654, 1.11 ) }
    dend_163 { pt3dadd( -20.6579, 235.119, -10.2212, 1.18 ) }
    dend_163 { pt3dadd( -20.7266, 236.91, -10.183, 1.11 ) }
    dend_163 { pt3dadd( -20.9313, 238.93, -10.1619, 1.25 ) }
    dend_163 { pt3dadd( -21.1772, 241.062, -10.2143, 0.88 ) }
    dend_163 { pt3dadd( -21.3581, 242.878, -10.326, 1.11 ) }
    dend_163 { pt3dadd( -21.4281, 244.481, -10.5184, 1.25 ) }
    dend_163 { pt3dadd( -21.3447, 246.16, -10.8233, 1.47 ) }
    dend_163 { pt3dadd( -21.0884, 247.88, -11.2195, 0.96 ) }
    dend_163 { pt3dadd( -20.8091, 249.144, -11.5643, 1.33 ) }
    dend_163 { pt3dadd( -20.4276, 250.623, -12.0036, 1.25 ) }
    dend_163 { pt3dadd( -19.9881, 252.218, -12.4943, 0.96 ) }
    dend_163 { pt3dadd( -19.5462, 253.692, -12.9147, 1.55 ) }
    dend_163 { pt3dadd( -18.8008, 255.963, -13.4644, 1.11 ) }
    dend_163 { pt3dadd( -18.2238, 257.633, -13.7441, 1.11 ) }
    dend_163 { pt3dadd( -17.4005, 259.821, -13.9165, 1.25 ) }
    dend_163 { pt3dadd( -16.7853, 261.291, -13.8814, 1.92 ) }
    dend_163 { pt3dadd( -15.9247, 263.292, -13.6018, 1.47 ) }
    dend_163 { pt3dadd( -15.1755, 265.098, -13.2028, 1.11 ) }
    dend_163 { pt3dadd( -14.5192, 266.942, -12.6938, 1.47 ) }
    dend_163 { pt3dadd( -14.0502, 268.789, -12.1868, 1.18 ) }
    dend_163 { pt3dadd( -13.8656, 270.653, -11.741, 0.96 ) }
    dend_163 { pt3dadd( -14.0051, 272.179, -11.5391, 1.11 ) }
    dend_163 { pt3dadd( -14.3327, 273.461, -11.5254, 0.88 ) }
    dend_163 { pt3dadd( -15.0125, 275.464, -11.7397, 1.62 ) }
    dend_163 { pt3dadd( -15.6646, 277.415, -12.1228, 1.62 ) }
    dend_163 { pt3dadd( -16.1271, 278.974, -12.5348, 1.62 ) }
    dend_163 { pt3dadd( -16.5162, 280.719, -13.0634, 1.25 ) }
    dend_163 { pt3dadd( -16.6823, 282.155, -13.482, 1.47 ) }
    dend_163 { pt3dadd( -16.681, 283.634, -13.8566, 1.7 ) }
    dend_163 { pt3dadd( -16.4515, 285.635, -14.2826, 1.18 ) }
    dend_163 { pt3dadd( -16.164, 287.194, -14.5779, 1.18 ) }
    dend_163 { pt3dadd( -15.8315, 288.691, -14.8305, 1.18 ) }
    dend_163 { pt3dadd( -15.4896, 290.131, -15.0226, 0.96 ) }
    dend_163 { pt3dadd( -15.1978, 291.444, -15.1691, 1.62 ) }
    dend_163 { pt3dadd( -14.9923, 292.592, -15.2201, 1.62 ) }
    dend_163 { pt3dadd( -14.6977, 294.926, -15.1776, 0.88 ) }
    dend_163 { pt3dadd( -14.5815, 296.544, -15.0688, 1.03 ) }
    dend_163 { pt3dadd( -14.5507, 297.833, -14.9619, 1.03 ) }
    dend_163 { pt3dadd( -14.6341, 299.726, -14.8328, 1.55 ) }
    dend_163 { pt3dadd( -14.9748, 302.368, -14.7381, 0.74 ) }
    dend_163 { pt3dadd( -15.3554, 304.197, -14.7789, 0.88 ) }
    dend_163 { pt3dadd( -15.8968, 306.289, -14.9558, 1.11 ) }
    dend_163 { pt3dadd( -16.1983, 307.417, -15.0937, 1.33 ) }
    dend_163 { pt3dadd( -16.6196, 309.097, -15.3007, 1.33 ) }
    dend_163 { pt3dadd( -16.93, 310.737, -15.464, 1.03 ) }
    dend_163 { pt3dadd( -16.9989, 312.193, -15.5392, 0.74 ) }
    dend_163 { pt3dadd( -16.7607, 314.016, -15.5089, 0.74 ) }
    dend_163 { pt3dadd( -16.2124, 315.95, -15.412, 1.03 ) }
    dend_163 { pt3dadd( -15.6159, 317.52, -15.336, 1.11 ) }
    dend_163 { pt3dadd( -14.8479, 319.235, -15.2598, 0.96 ) }
    dend_163 { pt3dadd( -14.0207, 320.981, -15.2221, 1.4 ) }
    dend_163 { pt3dadd( -13.2897, 322.546, -15.2725, 0.74 ) }
    dend_163 { pt3dadd( -12.8401, 323.623, -15.4089, 1.4 ) }
    dend_163 { pt3dadd( -12.3397, 325.12, -15.7456, 2.36 ) }
    dend_163 { pt3dadd( -11.9152, 326.823, -16.273, 0.96 ) }
    dend_163 { pt3dadd( -11.7296, 327.978, -16.7118, 1.11 ) }
    dend_163 { pt3dadd( -11.668, 328.899, -17.0983, 1.18 ) }
    dend_163 { pt3dadd( -11.6542, 330.245, -17.6243, 1.11 ) }
    dend_163 { pt3dadd( -11.686, 331.93, -18.1835, 1.33 ) }
    dend_163 { pt3dadd( -11.732, 333.363, -18.5714, 1.33 ) }
    dend_163 { pt3dadd( -11.7887, 334.778, -18.8631, 1.25 ) }
    dend_163 { pt3dadd( -11.8468, 336.426, -19.0047, 1.4 ) }
    dend_163 { pt3dadd( -11.885, 338.134, -18.8201, 0.66 ) }
    dend_163 { pt3dadd( -11.8642, 339.159, -18.47, 1.18 ) }
    dend_163 { pt3dadd( -11.7476, 340.178, -17.8965, 1.4 ) }
    dend_163 { pt3dadd( -11.5629, 341.225, -17.2021, 1.11 ) }
    dend_163 { pt3dadd( -11.3103, 342.386, -16.4131, 0.74 ) }
    dend_163 { pt3dadd( -10.9462, 343.786, -15.568, 0.88 ) }
    dend_163 { pt3dadd( -10.6199, 344.973, -15.0526, 1.11 ) }
    dend_163 { pt3dadd( -10.0873, 346.929, -14.5901, 0.66 ) }
    dend_163 { pt3dadd( -9.75612, 348.198, -14.5276, 1.18 ) }
    dend_163 { pt3dadd( -9.42145, 349.545, -14.6735, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_163 { pt3dadd( -9.05429, 351.228, -15.1067, 1.03 ) }
    dend_163 { pt3dadd( -8.78677, 352.595, -15.5999, 0.88 ) }
    dend_163 { pt3dadd( -8.61094, 353.615, -16.04, 0.88 ) }
    dend_163 { pt3dadd( -8.44672, 354.818, -16.606, 1.25 ) }
    dend_163 { pt3dadd( -8.31802, 355.745, -17.0289, 1.4 ) }
    dend_163 { pt3dadd( -8.09017, 357.513, -17.7928, 0.88 ) }
    dend_163 { pt3dadd( -7.96686, 358.629, -18.2317, 0.88 ) }
    dend_163 { pt3dadd( -7.86588, 359.992, -18.7063, 1.33 ) }
    dend_163 { pt3dadd( -7.84604, 361.206, -19.0217, 1.4 ) }
    dend_163 { pt3dadd( -7.95335, 362.834, -19.3167, 1.03 ) }
    dend_163 { pt3dadd( -8.18621, 364.436, -19.4929, 0.88 ) }
    dend_163 { pt3dadd( -8.4407, 365.511, -19.5357, 1.11 ) }
    dend_163 { pt3dadd( -9.05394, 367.398, -19.5267, 1.4 ) }
    dend_163 { pt3dadd( -9.85639, 369.599, -19.4282, 1.47 ) }
    dend_163 { pt3dadd( -10.3786, 371.017, -19.3089, 1.47 ) }
    dend_163 { pt3dadd( -10.748, 372.086, -19.1927, 1.47 ) }
    dend_163 { pt3dadd( -11.1334, 373.485, -19.0363, 1.55 ) }
    dend_163 { pt3dadd( -11.5067, 375.929, -18.7949, 0.74 ) }
    dend_163 { pt3dadd( -11.4495, 377.262, -18.7208, 1.11 ) }
    dend_163 { pt3dadd( -11.098, 378.466, -18.7328, 0.81 ) }
    dend_163 { pt3dadd( -10.4723, 379.748, -18.8046, 1.03 ) }
    dend_163 { pt3dadd( -9.90818, 380.661, -18.8924, 0.66 ) }
    dend_163 { pt3dadd( -9.18128, 381.71, -19.0463, 1.25 ) }
    dend_163 { pt3dadd( -8.3792, 382.847, -19.2652, 1.25 ) }
    dend_163 { pt3dadd( -7.56433, 384.263, -19.5757, 0.96 ) }
    dend_163 { pt3dadd( -7.04555, 385.53, -19.8225, 0.81 ) }
    dend_163 { pt3dadd( -6.71406, 386.857, -19.9967, 1.03 ) }
    dend_163 { pt3dadd( -6.61308, 388.068, -20.0841, 1.18 ) }
    dend_163 { pt3dadd( -6.6806, 388.966, -20.1366, 1.47 ) }
    dend_163 { pt3dadd( -6.95635, 390.153, -20.1843, 1.62 ) }
    dend_163 { pt3dadd( -7.47219, 391.745, -20.2817, 0.81 ) }
    dend_163 { pt3dadd( -7.83784, 392.753, -20.3545, 0.81 ) }
    dend_163 { pt3dadd( -8.45212, 394.343, -20.5079, 0.96 ) }
    dend_163 { pt3dadd( -8.93719, 395.612, -20.6508, 1.25 ) }
    dend_163 { pt3dadd( -9.71044, 397.753, -20.9673, 0.88 ) }
    dend_163 { pt3dadd( -10.0789, 398.852, -21.1356, 0.96 ) }
    dend_163 { pt3dadd( -10.3464, 399.751, -21.2573, 0.96 ) }
    dend_163 { pt3dadd( -10.5111, 400.64, -21.3066, 0.96 ) }
    dend_163 { pt3dadd( -10.5565, 401.786, -21.2241, 0.96 ) }
    dend_163 { pt3dadd( -10.4342, 403.137, -20.9404, 0.81 ) }
    dend_163 { pt3dadd( -10.1972, 404.487, -20.5401, 1.33 ) }
    dend_163 { pt3dadd( -9.92435, 405.895, -20.1092, 1.18 ) }
    dend_163 { pt3dadd( -9.54235, 407.757, -19.6082, 0.81 ) }
    dend_163 { pt3dadd( -9.19463, 409.408, -19.2849, 0.66 ) }
    dend_163 { pt3dadd( -8.849, 411.163, -19.1207, 0.52 ) }
    dend_163 { pt3dadd( -8.77495, 411.661, -19.1466, 0.74 ) }
    dend_163 { pt3dadd( -8.6389, 413.197, -19.5225, 1.33 ) }
    dend_163 { pt3dadd( -8.62886, 414.639, -20.1189, 1.18 ) }
    dend_163 { pt3dadd( -8.64, 415.972, -20.8098, 0.74 ) }
    dend_163 { pt3dadd( -8.64872, 417.013, -21.4047, 0.96 ) }
    dend_163 { pt3dadd( -8.62221, 418.123, -22.0355, 0.81 ) }
    dend_163 { pt3dadd( -8.52418, 419.365, -22.6497, 1.18 ) }
    dend_163 { pt3dadd( -8.35122, 420.954, -23.2625, 1.03 ) }
    dend_163 { pt3dadd( -8.13866, 422.862, -23.8185, 0.88 ) }
    dend_163 { pt3dadd( -8.04123, 423.997, -24.0273, 0.74 ) }
    dend_163 { pt3dadd( -7.98425, 425.034, -24.1095, 0.74 ) }
    dend_163 { pt3dadd( -7.97664, 426.531, -24.1132, 0.81 ) }
    dend_163 { pt3dadd( -8.07638, 428.052, -24.0494, 1.03 ) }
    dend_163 { pt3dadd( -8.23022, 429.358, -23.966, 1.25 ) }
    dend_163 { pt3dadd( -8.54724, 431.596, -23.8276, 0.74 ) }
    dend_163 { pt3dadd( -8.67802, 433.231, -23.747, 0.59 ) }
    dend_163 { pt3dadd( -8.69458, 434.738, -23.6645, 0.81 ) }
    dend_163 { pt3dadd( -8.54628, 435.938, -23.5898, 0.81 ) }
    dend_163 { pt3dadd( -8.32043, 436.755, -23.54, 0.66 ) }
    dend_163 { pt3dadd( -7.78632, 438.191, -23.4431, 0.88 ) }
    dend_163 { pt3dadd( -6.86392, 440.312, -23.3299, 1.25 ) }
    dend_163 { pt3dadd( -6.24264, 441.729, -23.296, 0.59 ) }
    dend_163 { pt3dadd( -5.6123, 443.375, -23.2146, 0.52 ) }
    dend_163 { pt3dadd( -5.37988, 444.366, -23.1517, 0.52 ) }
    dend_163 { pt3dadd( -5.27872, 445.667, -23.0963, 0.59 ) }
    dend_163 { pt3dadd( -5.34099, 446.991, -23.1042, 0.74 ) }
    dend_163 { pt3dadd( -5.44758, 447.934, -23.1679, 0.74 ) }
    dend_163 { pt3dadd( -5.61385, 449.552, -23.3635, 1.55 ) }
    dend_163 { pt3dadd( -5.73094, 451.814, -23.7102, 0.37 ) }
    dend_163 { pt3dadd( -5.68614, 453.253, -23.9565, 0.88 ) }
    dend_163 { pt3dadd( -5.5022, 454.673, -24.2259, 1.11 ) }
    dend_163 { pt3dadd( -5.231, 455.97, -24.4874, 1.18 ) }
    dend_163 { pt3dadd( -4.94592, 457.07, -24.7286, 0.88 ) }
    dend_163 { pt3dadd( -4.41718, 458.659, -25.1288, 0.44 ) }
    dend_163 { pt3dadd( -4.10744, 459.445, -25.3403, 0.59 ) }
    dend_163 { pt3dadd( -3.58081, 460.786, -25.6855, 0.37 ) }
    dend_163 { pt3dadd( -3.18614, 461.876, -25.9503, 0.15 ) }
    dend_163 { pt3dadd( -2.84334, 462.997, -26.2135, 0.52 ) }
    dend_163 { pt3dadd( -1.31872, 472.573, -27.3163, 0.52 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 84/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( -14.2886, 12.5148, 6.0155, 3.76 ) }
    dend_100 { pt3dadd( -16.8152, 11.421, 6.15969, 3.76 ) }
    dend_100 { pt3dadd( -19.1789, 10.2713, 6.32758, 3.47 ) }
    dend_100 { pt3dadd( -20.3428, 9.67097, 6.45162, 3.61 ) }
    dend_100 { pt3dadd( -22.3528, 8.60671, 6.80655, 2.73 ) }
    dend_100 { pt3dadd( -24.4822, 7.40533, 7.35789, 2.51 ) }
    dend_100 { pt3dadd( -26.2929, 6.29771, 7.99359, 2.21 ) }
    dend_100 { pt3dadd( -27.8114, 5.12246, 8.84203, 1.84 ) }
    dend_100 { pt3dadd( -28.8171, 4.09885, 9.73159, 1.84 ) }
    dend_100 { pt3dadd( -30.0344, 2.55029, 11.2849, 2.51 ) }
    dend_100 { pt3dadd( -30.882, 1.26839, 12.735, 2.8 ) }
    dend_100 { pt3dadd( -31.6228, 0.0392162, 14.1871, 2.58 ) }
    dend_100 { pt3dadd( -32.5353, -1.49461, 16.0078, 2.73 ) }
    dend_100 { pt3dadd( -33.3705, -3.04323, 17.8556, 2.36 ) }
    dend_100 { pt3dadd( -33.9874, -4.28289, 19.2704, 2.29 ) }
    dend_100 { pt3dadd( -34.574, -5.48228, 20.5295, 2.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_100 { pt3dadd( -35.3979, -6.84005, 21.8577, 2.88 ) }
    dend_100 { pt3dadd( -36.1425, -7.74184, 22.6541, 3.02 ) }
    // Section: dend_80, id: dend_80, parent: dend_50 (entry count 2/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 11.2392, -21.583, -15.8947, 1.4 ) }
    dend_80 { pt3dadd( 11.2425, -22.2943, -16.7957, 1.4 ) }
    dend_80 { pt3dadd( 11.2572, -23.231, -17.6878, 1.4 ) }
    dend_80 { pt3dadd( 11.2782, -24.3571, -18.4373, 1.4 ) }
    dend_80 { pt3dadd( 11.3587, -26.2439, -19.1173, 0.59 ) }
    dend_80 { pt3dadd( 11.4845, -27.7235, -19.4064, 1.18 ) }
    dend_80 { pt3dadd( 11.666, -29.1056, -19.624, 0.96 ) }
    dend_80 { pt3dadd( 11.9777, -30.7917, -19.7169, 0.74 ) }
    dend_80 { pt3dadd( 12.3515, -32.1917, -19.6176, 0.96 ) }
    dend_80 { pt3dadd( 12.9232, -33.8478, -19.4412, 0.88 ) }
    dend_80 { pt3dadd( 13.3331, -34.8521, -19.2653, 0.74 ) }
    dend_80 { pt3dadd( 13.9186, -36.1423, -19.0356, 1.03 ) }
    dend_80 { pt3dadd( 14.5276, -37.2553, -18.9917, 0.96 ) }
    dend_80 { pt3dadd( 15.2891, -38.4583, -19.1977, 0.59 ) }
    dend_80 { pt3dadd( 16.2832, -39.7905, -19.6984, 0.59 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 17/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 11.2392, -21.583, -15.8947, 0.74 ) }
    dend_51 { pt3dadd( 9.01923, -23.0015, -15.6308, 0.74 ) }
    dend_51 { pt3dadd( 7.66039, -23.8007, -15.4286, 0.88 ) }
    dend_51 { pt3dadd( 6.11359, -24.6073, -15.1956, 1.03 ) }
    dend_51 { pt3dadd( 4.76897, -25.233, -15.0311, 0.88 ) }
    dend_51 { pt3dadd( 3.70824, -25.6806, -14.9554, 0.96 ) }
    dend_51 { pt3dadd( 2.37841, -26.1774, -14.9514, 0.81 ) }
    dend_51 { pt3dadd( 1.01223, -26.5653, -15.0972, 0.96 ) }
    dend_51 { pt3dadd( -0.778489, -26.9548, -15.5253, 0.74 ) }
    dend_51 { pt3dadd( -1.87549, -27.1705, -15.9696, 0.81 ) }
    dend_51 { pt3dadd( -2.96156, -27.4385, -16.5816, 1.03 ) }
    dend_51 { pt3dadd( -4.28477, -27.911, -17.5602, 1.47 ) }
    dend_51 { pt3dadd( -5.1398, -28.4138, -18.3931, 1.62 ) }
    dend_51 { pt3dadd( -5.85507, -29.184, -19.3433, 1.47 ) }
    dend_51 { pt3dadd( -6.24324, -30.193, -20.2058, 0.81 ) }
    dend_51 { pt3dadd( -6.40219, -31.4855, -20.894, 0.74 ) }
    dend_51 { pt3dadd( -6.3844, -32.6249, -21.2384, 0.88 ) }
    dend_51 { pt3dadd( -6.29218, -33.6962, -21.3784, 0.88 ) }
    dend_51 { pt3dadd( -6.19344, -34.5525, -21.4073, 0.88 ) }
    dend_51 { pt3dadd( -6.04231, -35.9323, -21.3837, 0.52 ) }
    dend_51 { pt3dadd( -5.98906, -37.3983, -21.3474, 0.74 ) }
    dend_51 { pt3dadd( -6.10496, -38.7028, -21.3688, 0.66 ) }
    dend_51 { pt3dadd( -6.36208, -39.9382, -21.4321, 1.11 ) }
    dend_51 { pt3dadd( -6.67024, -41.0042, -21.4966, 0.74 ) }
    dend_51 { pt3dadd( -7.01829, -42.1414, -21.6147, 1.18 ) }
    dend_51 { pt3dadd( -7.43355, -43.5244, -21.8136, 1.03 ) }
    dend_51 { pt3dadd( -7.78606, -44.9124, -22.078, 0.74 ) }
    dend_51 { pt3dadd( -7.96938, -45.8374, -22.2465, 0.74 ) }
    dend_51 { pt3dadd( -8.11227, -46.9295, -22.4269, 1.33 ) }
    dend_51 { pt3dadd( -8.25358, -48.5706, -22.6404, 1.62 ) }
    dend_51 { pt3dadd( -8.33852, -50.1385, -22.7785, 0.88 ) }
    dend_51 { pt3dadd( -8.38028, -51.5196, -22.8745, 0.96 ) }
    dend_51 { pt3dadd( -8.42121, -52.6994, -22.917, 0.96 ) }
    dend_51 { pt3dadd( -8.51822, -54.0379, -22.9475, 0.66 ) }
    dend_51 { pt3dadd( -8.69159, -55.2069, -22.971, 0.66 ) }
    dend_51 { pt3dadd( -8.95976, -56.1006, -22.961, 0.96 ) }
    dend_51 { pt3dadd( -9.25233, -56.7569, -22.9815, 1.62 ) }
    dend_51 { pt3dadd( -10.1708, -58.1238, -23.1371, 1.03 ) }
    dend_51 { pt3dadd( -10.9406, -58.9428, -23.3315, 0.74 ) }
    dend_51 { pt3dadd( -11.8642, -59.7355, -23.636, 1.11 ) }
    dend_51 { pt3dadd( -13.437, -61.0213, -24.3312, 0.74 ) }
    dend_51 { pt3dadd( -14.2637, -61.7227, -24.8437, 0.88 ) }
    dend_51 { pt3dadd( -15.319, -62.7109, -25.7548, 1.33 ) }
    dend_51 { pt3dadd( -15.9411, -63.413, -26.5502, 1.03 ) }
    dend_51 { pt3dadd( -16.3573, -64.1132, -27.3547, 1.47 ) }
    dend_51 { pt3dadd( -16.6748, -65.125, -28.4195, 1.25 ) }
    dend_51 { pt3dadd( -16.8468, -66.2161, -29.4643, 1.4 ) }
    dend_51 { pt3dadd( -17.0477, -67.5687, -30.5777, 1.18 ) }
    dend_51 { pt3dadd( -17.2078, -68.6357, -31.3546, 0.96 ) }
    dend_51 { pt3dadd( -17.3882, -69.5055, -31.9377, 0.66 ) }
    dend_51 { pt3dadd( -17.802, -70.8543, -32.8215, 0.74 ) }
    dend_51 { pt3dadd( -18.2535, -71.8538, -33.4603, 0.96 ) }
    dend_51 { pt3dadd( -18.9714, -73.0517, -34.1924, 0.74 ) }
    dend_51 { pt3dadd( -19.6594, -73.9214, -34.6713, 0.74 ) }
    dend_51 { pt3dadd( -20.1126, -74.3671, -34.7542, 0.74 ) }
    dend_51 { pt3dadd( -19.232, -73.4974, -35.2524, 0.59 ) }
    dend_51 { pt3dadd( -18.7655, -72.9313, -35.723, 0.96 ) }
    dend_51 { pt3dadd( -18.1419, -72.0976, -36.4656, 0.96 ) }
    dend_51 { pt3dadd( -17.5002, -71.2066, -37.2609, 0.66 ) }
    dend_51 { pt3dadd( -16.7837, -70.1752, -38.1376, 0.88 ) }
    dend_51 { pt3dadd( -16.2085, -69.3159, -38.8297, 0.66 ) }
    dend_51 { pt3dadd( -15.7592, -68.3682, -39.0912, 0.81 ) }
    dend_51 { pt3dadd( -16.2378, -69.4768, -39.5408, 0.81 ) }
    dend_51 { pt3dadd( -16.7428, -70.3988, -39.9727, 0.74 ) }
    dend_51 { pt3dadd( -17.5166, -71.7085, -40.4585, 0.59 ) }
    dend_51 { pt3dadd( -18.1997, -72.9002, -40.7857, 0.66 ) }
    dend_51 { pt3dadd( -18.7514, -73.856, -40.983, 0.81 ) }
    dend_51 { pt3dadd( -19.6263, -75.4339, -41.2292, 0.88 ) }
    dend_51 { pt3dadd( -20.2667, -76.5186, -41.3563, 0.37 ) }
    dend_51 { pt3dadd( -20.8591, -77.3603, -41.4543, 0.37 ) }
    dend_51 { pt3dadd( -21.2816, -77.8164, -41.5002, 0.37 ) }
    dend_51 { pt3dadd( -22.2585, -78.693, -41.5306, 0.52 ) }
    // Section: dend_37, id: dend_37, parent: dend_17 (entry count 89/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -4.96701, -29.3673, 4.41892, 0.88 ) }
    dend_37 { pt3dadd( -4.27917, -30.9398, 3.05959, 0.88 ) }
    dend_37 { pt3dadd( -3.95496, -31.9971, 2.23722, 0.74 ) }
    dend_37 { pt3dadd( -3.74876, -33.1794, 1.38912, 0.81 ) }
    dend_37 { pt3dadd( -3.69129, -34.4613, 0.569834, 1.03 ) }
    dend_37 { pt3dadd( -3.72527, -35.3324, 0.0737244, 0.81 ) }
    dend_37 { pt3dadd( -3.77466, -36.0236, -0.27202, 0.81 ) }
    dend_37 { pt3dadd( -3.98082, -37.0261, -0.672938, 1.11 ) }
    dend_37 { pt3dadd( -4.24201, -38.0562, -0.944843, 0.74 ) }
    dend_37 { pt3dadd( -4.53506, -39.2834, -1.13557, 0.59 ) }
    dend_37 { pt3dadd( -4.73734, -40.4619, -1.18116, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_37 { pt3dadd( -4.83398, -41.4349, -1.12046, 0.74 ) }
    dend_37 { pt3dadd( -4.84587, -41.9113, -1.04398, 0.88 ) }
    dend_37 { pt3dadd( -4.72414, -43.8966, -0.576751, 0.59 ) }
    dend_37 { pt3dadd( -4.52494, -45.0581, -0.225705, 0.88 ) }
    dend_37 { pt3dadd( -3.93103, -46.926, 0.439628, 0.66 ) }
    dend_37 { pt3dadd( -3.38896, -48.0357, 0.890053, 0.88 ) }
    dend_37 { pt3dadd( -2.83498, -48.906, 1.25965, 1.03 ) }
    dend_37 { pt3dadd( -2.32884, -49.6341, 1.56151, 1.25 ) }
    dend_37 { pt3dadd( -1.58856, -50.6956, 1.94881, 1.47 ) }
    dend_37 { pt3dadd( -0.825773, -52.068, 2.30255, 1.25 ) }
    dend_37 { pt3dadd( -0.214317, -53.7163, 2.48624, 1.11 ) }
    dend_37 { pt3dadd( 0.0898222, -55.2206, 2.48233, 1.18 ) }
    dend_37 { pt3dadd( 0.197985, -56.9706, 2.27666, 1.03 ) }
    dend_37 { pt3dadd( 0.117887, -58.7769, 1.89395, 0.88 ) }
    dend_37 { pt3dadd( -0.0573353, -60.5548, 1.36957, 1.11 ) }
    dend_37 { pt3dadd( -0.207818, -61.9825, 0.850883, 0.88 ) }
    dend_37 { pt3dadd( -0.294176, -63.204, 0.330888, 0.66 ) }
    dend_37 { pt3dadd( -0.286059, -64.8698, -0.441171, 0.96 ) }
    dend_37 { pt3dadd( -0.135404, -66.3352, -1.13888, 1.7 ) }
    dend_37 { pt3dadd( 0.152166, -68.0904, -1.93856, 0.52 ) }
    dend_37 { pt3dadd( 0.450161, -69.5388, -2.5529, 1.18 ) }
    dend_37 { pt3dadd( 0.778297, -70.9068, -3.08253, 0.81 ) }
    dend_37 { pt3dadd( 1.2401, -72.7047, -3.66789, 1.33 ) }
    dend_37 { pt3dadd( 1.48802, -73.6778, -3.9034, 0.96 ) }
    dend_37 { pt3dadd( 1.79927, -75.0362, -4.16668, 0.88 ) }
    dend_37 { pt3dadd( 1.86859, -75.4938, -4.23983, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 26/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -4.96701, -29.3673, 4.41892, 1.47 ) }
    dend_18 { pt3dadd( -6.68515, -31.173, 4.22102, 1.47 ) }
    dend_18 { pt3dadd( -7.67218, -32.3281, 4.06512, 1.7 ) }
    dend_18 { pt3dadd( -8.72771, -33.5633, 3.8984, 1.7 ) }
    dend_18 { pt3dadd( -10.018, -35.0732, 3.6946, 1.92 ) }
    dend_18 { pt3dadd( -11.2041, -36.4613, 3.50725, 1.84 ) }
    dend_18 { pt3dadd( -12.5033, -37.9817, 3.30204, 1.99 ) }
    dend_18 { pt3dadd( -13.4846, -39.0865, 3.1509, 2.21 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 34/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 10.466, -2.50929, -5.53668, 1.62 ) }
    dend_6 { pt3dadd( 11.6699, -3.94295, -5.75347, 1.62 ) }
    dend_6 { pt3dadd( 12.2904, -4.87258, -5.91165, 1.62 ) }
    dend_6 { pt3dadd( 12.8217, -5.82716, -6.11276, 1.62 ) }
    dend_6 { pt3dadd( 13.2815, -6.79896, -6.36428, 1.62 ) }
    dend_6 { pt3dadd( 13.8145, -8.10252, -6.75119, 1.62 ) }
    dend_6 { pt3dadd( 14.3867, -9.66048, -7.25597, 1.4 ) }
    dend_6 { pt3dadd( 14.682, -10.7162, -7.63783, 1.92 ) }
    dend_6 { pt3dadd( 14.9766, -11.8405, -8.06674, 1.7 ) }
    dend_6 { pt3dadd( 15.3311, -13.0665, -8.55626, 1.84 ) }
    dend_6 { pt3dadd( 15.8773, -14.6839, -9.24981, 2.14 ) }
    dend_6 { pt3dadd( 16.5465, -16.2752, -9.98431, 1.62 ) }
    dend_6 { pt3dadd( 17.2277, -17.539, -10.5468, 2.14 ) }
    dend_6 { pt3dadd( 18.0691, -18.8365, -11.0539, 1.99 ) }
    dend_6 { pt3dadd( 19.2758, -20.4459, -11.5854, 1.77 ) }
    dend_6 { pt3dadd( 20.2661, -21.6318, -11.8628, 1.7 ) }
    dend_6 { pt3dadd( 21.4239, -22.9466, -11.9973, 1.33 ) }
    dend_6 { pt3dadd( 22.6349, -24.3802, -11.8593, 1.25 ) }
    dend_6 { pt3dadd( 23.5558, -25.6259, -11.4926, 1.25 ) }
    dend_6 { pt3dadd( 24.1555, -26.6757, -10.9816, 1.25 ) }
    dend_6 { pt3dadd( 24.7927, -27.9693, -10.1986, 1.47 ) }
    dend_6 { pt3dadd( 25.4281, -29.5338, -9.09374, 1.7 ) }
    dend_6 { pt3dadd( 26.0446, -31.6826, -7.40388, 1.55 ) }
    dend_6 { pt3dadd( 26.2313, -32.8824, -6.39795, 1.84 ) }
    dend_6 { pt3dadd( 26.2816, -34.2064, -5.17932, 2.21 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 59/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 10.466, -2.50929, -5.53668, 0.52 ) }
    dend_1 { pt3dadd( 12.4315, -2.05492, -6.57672, 0.52 ) }
    dend_1 { pt3dadd( 13.5745, -1.89934, -7.10536, 1.18 ) }
    dend_1 { pt3dadd( 14.4173, -1.84076, -7.42552, 1.92 ) }
    dend_1 { pt3dadd( 15.2983, -1.82483, -7.70228, 1.92 ) }
    dend_1 { pt3dadd( 16.5989, -1.87124, -8.00067, 1.25 ) }
    dend_1 { pt3dadd( 18.0637, -2.01155, -8.2273, 0.88 ) }
    dend_1 { pt3dadd( 19.0777, -2.25219, -8.25102, 1.11 ) }
    dend_1 { pt3dadd( 20.0651, -2.57013, -8.10326, 1.33 ) }
    dend_1 { pt3dadd( 21.0425, -2.96647, -7.78166, 1.47 ) }
    dend_1 { pt3dadd( 22.4503, -3.64136, -7.04361, 0.81 ) }
    dend_1 { pt3dadd( 23.4703, -4.21743, -6.31974, 0.88 ) }
    dend_1 { pt3dadd( 24.3977, -4.84726, -5.49129, 1.11 ) }
    dend_1 { pt3dadd( 25.3005, -5.5706, -4.49333, 1.4 ) }
    dend_1 { pt3dadd( 26.1615, -6.38931, -3.26683, 0.88 ) }
    dend_1 { pt3dadd( 26.7702, -7.08196, -2.07264, 0.88 ) }
    dend_1 { pt3dadd( 27.0805, -7.53958, -1.11553, 0.88 ) }
    dend_1 { pt3dadd( 27.2381, -7.84067, -0.265064, 1.11 ) }
    dend_1 { pt3dadd( 27.3189, -8.06634, 0.728518, 1.11 ) }
    dend_1 { pt3dadd( 27.3431, -8.14841, 1.86875, 1.11 ) }
    dend_1 { pt3dadd( 27.3891, -8.10355, 2.83408, 1.11 ) }
    dend_1 { pt3dadd( 27.5718, -8.00982, 3.69221, 1.11 ) }
    dend_1 { pt3dadd( 27.9385, -7.92643, 4.27812, 1.11 ) }
    dend_1 { pt3dadd( 28.5247, -7.8582, 4.77428, 1.11 ) }
    dend_1 { pt3dadd( 29.627, -7.75568, 5.37072, 1.33 ) }
    dend_1 { pt3dadd( 30.9366, -7.61823, 5.93412, 1.33 ) }
    dend_1 { pt3dadd( 32.2446, -7.43168, 6.44187, 1.33 ) }
    dend_1 { pt3dadd( 33.8455, -7.11893, 7.05181, 1.03 ) }
    dend_1 { pt3dadd( 35.2712, -6.78971, 7.62873, 1.03 ) }
    dend_1 { pt3dadd( 37.0876, -6.35945, 8.43419, 1.03 ) }
    dend_1 { pt3dadd( 38.4092, -6.0686, 9.09738, 0.81 ) }
    dend_1 { pt3dadd( 39.6109, -5.86924, 9.82846, 0.88 ) }
    dend_1 { pt3dadd( 40.7918, -5.84977, 10.7385, 0.81 ) }
    dend_1 { pt3dadd( 41.6533, -6.1289, 11.5533, 1.33 ) }
    dend_1 { pt3dadd( 42.6237, -6.9881, 12.5705, 1.62 ) }
    dend_1 { pt3dadd( 43.3224, -8.08502, 13.2712, 0.96 ) }
    dend_1 { pt3dadd( 44.1078, -9.80849, 13.8664, 0.88 ) }
    dend_1 { pt3dadd( 44.5856, -11.127, 14.0776, 1.25 ) }
    dend_1 { pt3dadd( 44.9903, -12.58, 14.1155, 1.7 ) }
    dend_1 { pt3dadd( 45.2276, -13.6675, 14.0836, 1.55 ) }
    dend_1 { pt3dadd( 45.5052, -15.1697, 13.9916, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_1 { pt3dadd( 45.7807, -16.6644, 13.902, 0.74 ) }
    dend_1 { pt3dadd( 46.0523, -17.9151, 13.8745, 0.66 ) }
    dend_1 { pt3dadd( 46.4537, -19.5454, 13.9596, 0.44 ) }
    dend_1 { pt3dadd( 46.9757, -21.2841, 14.2112, 1.11 ) }
    dend_1 { pt3dadd( 47.3731, -22.342, 14.4583, 1.25 ) }
    dend_1 { pt3dadd( 48.0641, -23.7775, 14.9035, 0.74 ) }
    dend_1 { pt3dadd( 48.8646, -25.018, 15.3379, 0.96 ) }
    dend_1 { pt3dadd( 49.5621, -25.9134, 15.6488, 0.81 ) }
    dend_1 { pt3dadd( 50.2547, -26.7058, 15.879, 0.74 ) }
    dend_1 { pt3dadd( 50.9512, -27.5062, 16.0153, 1.33 ) }
    dend_1 { pt3dadd( 51.5623, -28.3366, 16.094, 1.18 ) }
    dend_1 { pt3dadd( 52.2513, -29.5983, 16.1006, 0.44 ) }
    dend_1 { pt3dadd( 52.466, -30.3982, 16.0553, 0.37 ) }
    dend_1 { pt3dadd( 52.6076, -31.4365, 15.9762, 0.81 ) }
    dend_1 { pt3dadd( 52.6011, -32.4797, 15.8833, 1.62 ) }
    dend_1 { pt3dadd( 52.3867, -34.0124, 15.7297, 1.4 ) }
    dend_1 { pt3dadd( 52.2286, -34.6118, 15.67, 1.03 ) }
    dend_1 { pt3dadd( 51.701, -36.0066, 15.5413, 0.74 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 18/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 16.9332, 35.9977, 0.0, 0.564909 ) }
    axon_1 { pt3dadd( 23.7039, 49.3827, 0.0, 0.564909 ) }
    axon_1 { pt3dadd( 30.4746, 62.7677, 0.0, 0.564909 ) }
    // Section: dend_150, id: dend_150, parent: dend_100 (entry count 21/100)
    dend_150 { pt3dclear() }
    dend_150 { pt3dadd( -36.1425, -7.74184, 22.6541, 0.96 ) }
    dend_150 { pt3dadd( -36.7903, -9.27106, 23.5213, 0.96 ) }
    dend_150 { pt3dadd( -36.7518, -10.6713, 24.6983, 0.81 ) }
    dend_150 { pt3dadd( -36.64, -11.3666, 25.3357, 0.96 ) }
    dend_150 { pt3dadd( -36.5247, -12.2587, 26.073, 1.11 ) }
    dend_150 { pt3dadd( -36.4396, -13.5227, 26.952, 1.33 ) }
    dend_150 { pt3dadd( -36.4268, -15.0502, 27.8196, 1.33 ) }
    dend_150 { pt3dadd( -36.4098, -16.556, 28.4588, 1.03 ) }
    dend_150 { pt3dadd( -36.5383, -18.3619, 28.8343, 1.18 ) }
    dend_150 { pt3dadd( -36.8749, -19.8907, 28.791, 1.11 ) }
    dend_150 { pt3dadd( -37.3976, -21.4375, 28.4846, 1.47 ) }
    dend_150 { pt3dadd( -37.9086, -22.7671, 28.1028, 1.62 ) }
    dend_150 { pt3dadd( -38.7804, -25.0055, 27.3479, 1.25 ) }
    dend_150 { pt3dadd( -39.2659, -26.3348, 26.8836, 1.47 ) }
    dend_150 { pt3dadd( -39.6505, -27.7008, 26.5072, 1.62 ) }
    dend_150 { pt3dadd( -39.892, -29.2075, 26.3117, 1.55 ) }
    dend_150 { pt3dadd( -39.9521, -30.8091, 26.3596, 1.4 ) }
    dend_150 { pt3dadd( -39.8781, -32.2296, 26.6025, 1.7 ) }
    dend_150 { pt3dadd( -39.7334, -33.6986, 27.0365, 1.99 ) }
    dend_150 { pt3dadd( -39.5528, -36.0916, 27.9696, 0.96 ) }
    dend_150 { pt3dadd( -39.5582, -37.655, 28.7267, 1.18 ) }
    dend_150 { pt3dadd( -39.708, -39.0317, 29.4982, 0.96 ) }
    dend_150 { pt3dadd( -39.9931, -40.3593, 30.2881, 1.11 ) }
    dend_150 { pt3dadd( -40.4756, -41.8824, 31.1653, 1.7 ) }
    dend_150 { pt3dadd( -41.178, -43.705, 32.2378, 1.7 ) }
    dend_150 { pt3dadd( -41.9562, -45.3122, 33.1688, 1.4 ) }
    dend_150 { pt3dadd( -43.1003, -47.3492, 34.2962, 1.55 ) }
    dend_150 { pt3dadd( -44.2154, -49.1599, 35.2397, 1.55 ) }
    dend_150 { pt3dadd( -45.4309, -51.1174, 36.173, 1.92 ) }
    // Section: dend_101, id: dend_101, parent: dend_100 (entry count 50/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( -36.1425, -7.74184, 22.6541, 1.47 ) }
    dend_101 { pt3dadd( -38.1653, -7.33358, 22.2184, 1.47 ) }
    dend_101 { pt3dadd( -39.2104, -7.12265, 21.9933, 1.47 ) }
    dend_101 { pt3dadd( -41.1214, -6.73696, 21.5817, 1.84 ) }
    // Section: dend_90, id: dend_90, parent: dend_80 (entry count 54/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( 16.2832, -39.7905, -19.6984, 0.29 ) }
    dend_90 { pt3dadd( 17.5902, -38.9404, -20.554, 0.29 ) }
    dend_90 { pt3dadd( 18.5906, -38.0181, -21.2735, 0.29 ) }
    dend_90 { pt3dadd( 19.2872, -37.3877, -21.7575, 0.29 ) }
    dend_90 { pt3dadd( 19.7235, -37.0322, -22.054, 0.29 ) }
    dend_90 { pt3dadd( 20.5618, -36.4743, -22.6021, 0.44 ) }
    dend_90 { pt3dadd( 21.501, -35.9852, -23.2048, 0.59 ) }
    dend_90 { pt3dadd( 22.4956, -35.5814, -23.8794, 0.37 ) }
    dend_90 { pt3dadd( 23.3059, -35.953, -24.3035, 0.59 ) }
    dend_90 { pt3dadd( 23.7784, -36.3648, -24.5567, 0.59 ) }
    dend_90 { pt3dadd( 24.4566, -37.0635, -24.9634, 0.44 ) }
    dend_90 { pt3dadd( 25.1541, -37.8582, -25.4312, 1.03 ) }
    dend_90 { pt3dadd( 25.8453, -38.6845, -25.9374, 1.11 ) }
    dend_90 { pt3dadd( 26.7671, -39.7669, -26.6644, 0.44 ) }
    dend_90 { pt3dadd( 27.5425, -40.5455, -27.3003, 0.29 ) }
    dend_90 { pt3dadd( 28.2163, -41.0027, -27.8269, 0.29 ) }
    dend_90 { pt3dadd( 28.8748, -41.171, -28.2751, 0.74 ) }
    dend_90 { pt3dadd( 30.0651, -41.1209, -28.9925, 0.37 ) }
    dend_90 { pt3dadd( 30.9941, -40.861, -29.5735, 0.37 ) }
    dend_90 { pt3dadd( 31.7918, -40.434, -30.0799, 0.52 ) }
    dend_90 { pt3dadd( 32.7025, -39.8638, -30.6083, 0.37 ) }
    dend_90 { pt3dadd( 34.2041, -38.7975, -31.4237, 0.44 ) }
    dend_90 { pt3dadd( 34.9149, -38.2387, -31.7929, 0.66 ) }
    dend_90 { pt3dadd( 36.1308, -37.2071, -32.4149, 0.37 ) }
    dend_90 { pt3dadd( 37.1645, -36.2077, -33.109, 0.15 ) }
    dend_90 { pt3dadd( 45.6412, -33.3098, -37.5035, 0.15 ) }
    dend_90 { pt3dadd( 54.739, -31.993, -41.4287, 0.15 ) }
    dend_90 { pt3dadd( 63.6403, -30.271, -45.6295, 0.15 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 82/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 16.2832, -39.7905, -19.6984, 0.44 ) }
    dend_81 { pt3dadd( 16.2258, -38.4711, -20.6443, 0.44 ) }
    dend_81 { pt3dadd( 16.4131, -37.3604, -21.4627, 0.44 ) }
    dend_81 { pt3dadd( 16.7969, -36.5409, -22.263, 0.44 ) }
    dend_81 { pt3dadd( 17.3435, -35.9374, -23.0164, 0.44 ) }
    dend_81 { pt3dadd( 18.2207, -35.4561, -23.9344, 0.66 ) }
    dend_81 { pt3dadd( 18.7159, -35.2588, -24.3948, 0.66 ) }
    dend_81 { pt3dadd( 19.7428, -34.9386, -25.2285, 0.74 ) }
    dend_81 { pt3dadd( 21.0453, -34.7681, -26.1864, 0.52 ) }
    dend_81 { pt3dadd( 21.8059, -34.8252, -26.7768, 0.52 ) }
    dend_81 { pt3dadd( 22.771, -35.0967, -27.6555, 0.44 ) }
    dend_81 { pt3dadd( 23.3305, -35.437, -28.3653, 0.44 ) }
    dend_81 { pt3dadd( 23.5138, -35.8118, -29.0349, 0.44 ) }
    dend_81 { pt3dadd( 23.1575, -36.304, -29.7574, 0.44 ) }
    dend_81 { pt3dadd( 22.7504, -36.6235, -30.191, 0.44 ) }
    dend_81 { pt3dadd( 22.0994, -37.0214, -30.7411, 0.44 ) }
    dend_81 { pt3dadd( 21.1536, -37.4737, -31.381, 0.59 ) }
    dend_81 { pt3dadd( 20.034, -37.9371, -32.0487, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_81 { pt3dadd( 19.2407, -38.2231, -32.4932, 0.52 ) }
    dend_81 { pt3dadd( 18.2859, -38.5132, -32.93, 0.74 ) }
    dend_81 { pt3dadd( 17.4795, -38.758, -33.2639, 0.74 ) }
    dend_81 { pt3dadd( 16.4451, -39.1031, -33.6671, 0.66 ) }
    dend_81 { pt3dadd( 15.1, -39.5933, -34.1998, 0.44 ) }
    dend_81 { pt3dadd( 14.5314, -39.8377, -34.4564, 0.29 ) }
    dend_81 { pt3dadd( 13.3402, -40.4826, -35.0598, 0.66 ) }
    dend_81 { pt3dadd( 12.5546, -41.0534, -35.556, 0.29 ) }
    dend_81 { pt3dadd( 12.0962, -41.5295, -35.9396, 0.66 ) }
    dend_81 { pt3dadd( 11.3565, -42.7735, -36.9145, 0.37 ) }
    dend_81 { pt3dadd( 11.0129, -43.7762, -37.6813, 0.37 ) }
    dend_81 { pt3dadd( 10.8317, -44.6458, -38.3385, 0.88 ) }
    dend_81 { pt3dadd( 10.6893, -45.4418, -38.9631, 1.11 ) }
    dend_81 { pt3dadd( 10.5707, -46.3879, -39.6825, 0.59 ) }
    dend_81 { pt3dadd( 10.5762, -47.7195, -40.6288, 0.37 ) }
    dend_81 { pt3dadd( 10.6636, -48.159, -40.8915, 0.52 ) }
    dend_81 { pt3dadd( 10.9237, -49.0094, -41.3154, 0.74 ) }
    dend_81 { pt3dadd( 11.3399, -50.3046, -41.88, 0.22 ) }
    dend_81 { pt3dadd( 9.74694, -55.3475, -50.289, 0.22 ) }
    dend_81 { pt3dadd( 7.49744, -58.9304, -59.3132, 0.22 ) }
    dend_81 { pt3dadd( 4.78223, -60.9424, -68.7137, 0.22 ) }
    dend_81 { pt3dadd( 2.5813, -61.223, -78.4642, 0.22 ) }
    dend_81 { pt3dadd( -0.357757, -63.8523, -87.6343, 0.22 ) }
    dend_81 { pt3dadd( -3.42975, -64.6823, -97.1126, 0.22 ) }
    dend_81 { pt3dadd( -5.12824, -66.1556, -106.851, 0.22 ) }
    dend_81 { pt3dadd( -7.34636, -69.6361, -115.925, 0.22 ) }
    dend_81 { pt3dadd( -11.0181, -71.2932, -125.07, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_51 (entry count 27/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -22.2585, -78.693, -41.5306, 0.59 ) }
    dend_79 { pt3dadd( -22.8889, -79.336, -41.8214, 0.59 ) }
    dend_79 { pt3dadd( -24.1163, -80.12, -42.2534, 1.11 ) }
    dend_79 { pt3dadd( -25.5909, -80.7387, -42.6226, 0.37 ) }
    dend_79 { pt3dadd( -26.5151, -81.1265, -42.854, 0.44 ) }
    dend_79 { pt3dadd( -27.4348, -81.5125, -43.0843, 0.44 ) }
    dend_79 { pt3dadd( -29.1004, -82.2114, -43.5013, 0.44 ) }
    dend_79 { pt3dadd( -30.2558, -82.4865, -43.7304, 0.44 ) }
    dend_79 { pt3dadd( -31.464, -82.5523, -43.8775, 0.81 ) }
    dend_79 { pt3dadd( -41.0602, -85.2158, -44.5485, 0.81 ) }
    dend_79 { pt3dadd( -50.7109, -87.0872, -46.3315, 0.81 ) }
    dend_79 { pt3dadd( -59.8594, -88.8235, -49.9557, 0.81 ) }
    dend_79 { pt3dadd( -68.0645, -91.2982, -55.0776, 0.81 ) }
    dend_79 { pt3dadd( -76.4932, -94.4844, -59.3528, 0.81 ) }
    dend_79 { pt3dadd( -84.9672, -98.5027, -62.7003, 0.81 ) }
    dend_79 { pt3dadd( -93.7273, -101.151, -66.6851, 0.81 ) }
    dend_79 { pt3dadd( -103.443, -102.123, -68.8365, 0.81 ) }
    dend_79 { pt3dadd( -113.254, -102.378, -70.7528, 0.81 ) }
    dend_79 { pt3dadd( -122.679, -103.606, -73.8486, 0.81 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 46/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -22.2585, -78.693, -41.5306, 0.37 ) }
    dend_52 { pt3dadd( -23.5889, -79.9514, -41.3357, 0.37 ) }
    dend_52 { pt3dadd( -24.4153, -80.733, -41.2147, 0.74 ) }
    dend_52 { pt3dadd( -25.1248, -81.4041, -41.1107, 0.44 ) }
    dend_52 { pt3dadd( -25.4978, -81.7569, -41.0561, 0.44 ) }
    dend_52 { pt3dadd( -33.3613, -87.5736, -39.4518, 0.44 ) }
    dend_52 { pt3dadd( -40.893, -93.846, -38.078, 0.44 ) }
    // Section: dend_47, id: dend_47, parent: dend_37 (entry count 53/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 1.86859, -75.4938, -4.23983, 0.74 ) }
    dend_47 { pt3dadd( 2.3587, -76.2973, -3.49198, 0.74 ) }
    dend_47 { pt3dadd( 2.89575, -77.0433, -2.84009, 0.59 ) }
    dend_47 { pt3dadd( 3.57991, -77.876, -2.14881, 0.37 ) }
    dend_47 { pt3dadd( 4.20596, -78.5287, -1.62186, 0.52 ) }
    dend_47 { pt3dadd( 4.78022, -79.0398, -1.21918, 0.96 ) }
    dend_47 { pt3dadd( 5.7312, -79.7965, -0.657928, 0.44 ) }
    dend_47 { pt3dadd( 6.74829, -80.5, -0.174244, 0.74 ) }
    dend_47 { pt3dadd( 7.44814, -80.9902, 0.0941443, 1.03 ) }
    dend_47 { pt3dadd( 8.20887, -81.5692, 0.359643, 0.88 ) }
    dend_47 { pt3dadd( 9.11285, -82.319, 0.646484, 0.88 ) }
    dend_47 { pt3dadd( 10.0064, -83.1132, 0.913127, 1.03 ) }
    dend_47 { pt3dadd( 11.1003, -84.1442, 1.22845, 0.52 ) }
    dend_47 { pt3dadd( 11.8423, -84.9273, 1.4447, 0.52 ) }
    dend_47 { pt3dadd( 12.4601, -85.688, 1.65395, 0.37 ) }
    dend_47 { pt3dadd( 12.8099, -86.2549, 1.80777, 0.37 ) }
    dend_47 { pt3dadd( 13.1812, -87.0962, 2.05301, 0.81 ) }
    dend_47 { pt3dadd( 13.4599, -88.0482, 2.37102, 0.44 ) }
    dend_47 { pt3dadd( 13.623, -88.8973, 2.66428, 0.66 ) }
    dend_47 { pt3dadd( 13.7177, -89.7958, 2.96938, 1.03 ) }
    dend_47 { pt3dadd( 13.7818, -91.2824, 3.47783, 1.18 ) }
    dend_47 { pt3dadd( 13.7909, -92.4714, 3.90456, 0.66 ) }
    dend_47 { pt3dadd( 13.7842, -93.8452, 4.39494, 0.74 ) }
    dend_47 { pt3dadd( 13.8091, -94.6661, 4.68384, 0.88 ) }
    dend_47 { pt3dadd( 13.9761, -95.8593, 5.09315, 0.44 ) }
    dend_47 { pt3dadd( 14.1856, -96.3627, 5.29046, 0.44 ) }
    dend_47 { pt3dadd( 14.6248, -96.8126, 5.50728, 0.44 ) }
    dend_47 { pt3dadd( 15.4585, -97.2964, 5.80915, 0.81 ) }
    dend_47 { pt3dadd( 16.5012, -97.6842, 6.17186, 1.03 ) }
    dend_47 { pt3dadd( 17.3094, -97.8879, 6.49176, 1.18 ) }
    dend_47 { pt3dadd( 18.7415, -98.148, 7.14967, 0.52 ) }
    dend_47 { pt3dadd( 20.1223, -98.3816, 7.91079, 0.96 ) }
    dend_47 { pt3dadd( 21.0813, -98.5753, 8.56223, 0.37 ) }
    dend_47 { pt3dadd( 21.7822, -98.7715, 9.17373, 0.52 ) }
    dend_47 { pt3dadd( 22.5511, -99.1141, 10.0154, 1.03 ) }
    dend_47 { pt3dadd( 23.096, -99.5293, 10.7651, 1.18 ) }
    dend_47 { pt3dadd( 23.5431, -100.204, 11.6021, 0.74 ) }
    dend_47 { pt3dadd( 23.859, -101.1, 12.3663, 0.22 ) }
    dend_47 { pt3dadd( 24.066, -101.911, 12.8947, 0.88 ) }
    dend_47 { pt3dadd( 24.3174, -102.979, 13.4568, 0.59 ) }
    dend_47 { pt3dadd( 24.526, -103.89, 13.8547, 1.62 ) }
    dend_47 { pt3dadd( 24.7367, -104.821, 14.2107, 1.4 ) }
    dend_47 { pt3dadd( 25.0219, -106.115, 14.6655, 0.37 ) }
    dend_47 { pt3dadd( 25.2586, -107.312, 15.1002, 0.37 ) }
    dend_47 { pt3dadd( 25.3009, -107.651, 15.2291, 0.37 ) }
    dend_47 { pt3dadd( 25.3019, -107.956, 15.3793, 0.37 ) }
    dend_47 { pt3dadd( 25.2367, -108.5, 15.6757, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_47 { pt3dadd( 25.1036, -109.142, 15.9534, 0.37 ) }
    dend_47 { pt3dadd( 24.9623, -109.817, 16.2094, 0.37 ) }
    dend_47 { pt3dadd( 24.822, -110.734, 16.5591, 0.66 ) }
    dend_47 { pt3dadd( 24.7579, -111.407, 16.8473, 1.33 ) }
    dend_47 { pt3dadd( 24.7386, -112.005, 17.1481, 1.84 ) }
    dend_47 { pt3dadd( 24.8218, -113.372, 17.9828, 0.59 ) }
    dend_47 { pt3dadd( 24.9685, -114.26, 18.6489, 0.22 ) }
    dend_47 { pt3dadd( 25.1332, -114.849, 19.1809, 0.66 ) }
    dend_47 { pt3dadd( 25.4528, -115.645, 20.0059, 0.74 ) }
    dend_47 { pt3dadd( 25.787, -116.308, 20.7366, 0.52 ) }
    dend_47 { pt3dadd( 26.1404, -116.886, 21.3749, 0.22 ) }
    dend_47 { pt3dadd( 26.4415, -117.308, 21.8088, 0.22 ) }
    dend_47 { pt3dadd( 26.7271, -117.719, 22.1341, 0.22 ) }
    dend_47 { pt3dadd( 27.1092, -118.328, 22.51, 0.96 ) }
    dend_47 { pt3dadd( 27.5139, -119.102, 22.8998, 1.47 ) }
    dend_47 { pt3dadd( 27.798, -119.911, 23.2551, 0.66 ) }
    dend_47 { pt3dadd( 27.9787, -120.576, 23.5163, 0.37 ) }
    dend_47 { pt3dadd( 28.1065, -121.223, 23.7724, 0.37 ) }
    dend_47 { pt3dadd( 28.1864, -121.935, 24.083, 0.37 ) }
    dend_47 { pt3dadd( 28.1867, -122.869, 24.5626, 0.59 ) }
    dend_47 { pt3dadd( 28.0431, -123.79, 25.1189, 1.11 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 1.86859, -75.4938, -4.23983, 0.22 ) }
    dend_38 { pt3dadd( 1.64591, -76.5064, -4.16474, 0.22 ) }
    dend_38 { pt3dadd( 1.6027, -77.5023, -4.08591, 0.37 ) }
    dend_38 { pt3dadd( 1.7114, -78.309, -4.04586, 0.37 ) }
    dend_38 { pt3dadd( 2.12531, -79.7259, -4.10497, 0.66 ) }
    dend_38 { pt3dadd( 2.58057, -80.8516, -4.28986, 0.44 ) }
    dend_38 { pt3dadd( 3.07777, -81.9452, -4.60958, 0.74 ) }
    dend_38 { pt3dadd( 3.58349, -82.8797, -5.02981, 0.74 ) }
    dend_38 { pt3dadd( 4.12706, -83.8474, -5.62586, 0.52 ) }
    dend_38 { pt3dadd( 4.6579, -84.821, -6.33294, 0.66 ) }
    dend_38 { pt3dadd( 5.16634, -85.7453, -7.04749, 1.11 ) }
    dend_38 { pt3dadd( 5.68306, -86.7109, -7.75387, 1.33 ) }
    dend_38 { pt3dadd( 6.28276, -87.9522, -8.53053, 0.81 ) }
    dend_38 { pt3dadd( 6.78039, -89.1002, -9.0989, 0.59 ) }
    dend_38 { pt3dadd( 7.22275, -90.2374, -9.47652, 0.88 ) }
    dend_38 { pt3dadd( 7.60816, -91.2632, -9.67495, 0.59 ) }
    dend_38 { pt3dadd( 8.03929, -92.5442, -9.84441, 0.88 ) }
    dend_38 { pt3dadd( 8.37621, -93.7879, -9.99377, 0.44 ) }
    dend_38 { pt3dadd( 8.58367, -94.8785, -10.1398, 0.81 ) }
    dend_38 { pt3dadd( 8.65814, -95.9696, -10.3827, 0.66 ) }
    dend_38 { pt3dadd( 8.5843, -96.9367, -10.7763, 0.52 ) }
    dend_38 { pt3dadd( 8.29708, -98.2765, -11.587, 0.74 ) }
    dend_38 { pt3dadd( 7.94843, -99.1893, -12.3374, 0.52 ) }
    dend_38 { pt3dadd( 7.61135, -99.7091, -12.8847, 1.11 ) }
    dend_38 { pt3dadd( 6.98931, -100.361, -13.6966, 1.4 ) }
    dend_38 { pt3dadd( 6.07331, -101.089, -14.6942, 1.62 ) }
    dend_38 { pt3dadd( 5.01464, -101.804, -15.6197, 1.33 ) }
    dend_38 { pt3dadd( 3.67135, -102.667, -16.5214, 0.66 ) }
    dend_38 { pt3dadd( 2.10818, -103.671, -17.2636, 0.44 ) }
    dend_38 { pt3dadd( 1.0531, -104.402, -17.5353, 0.66 ) }
    dend_38 { pt3dadd( 0.180505, -105.164, -17.4919, 0.44 ) }
    dend_38 { pt3dadd( -0.744972, -106.309, -17.1285, 1.55 ) }
    dend_38 { pt3dadd( -1.36109, -107.461, -16.6373, 0.44 ) }
    dend_38 { pt3dadd( -1.63787, -108.259, -16.2963, 0.44 ) }
    dend_38 { pt3dadd( -1.85438, -109.229, -15.9072, 0.66 ) }
    dend_38 { pt3dadd( -2.11615, -110.669, -15.336, 0.81 ) }
    dend_38 { pt3dadd( -2.3628, -112.046, -14.793, 0.96 ) }
    dend_38 { pt3dadd( -2.66685, -113.425, -14.2491, 1.4 ) }
    dend_38 { pt3dadd( -3.07261, -114.965, -13.6382, 0.74 ) }
    dend_38 { pt3dadd( -3.40962, -116.061, -13.2365, 0.52 ) }
    dend_38 { pt3dadd( -3.88136, -117.462, -12.7735, 1.25 ) }
    dend_38 { pt3dadd( -4.21592, -118.36, -12.5118, 1.03 ) }
    dend_38 { pt3dadd( -4.78442, -119.812, -12.1964, 0.59 ) }
    dend_38 { pt3dadd( -5.24532, -121.079, -12.0737, 0.81 ) }
    dend_38 { pt3dadd( -5.60672, -122.283, -12.1759, 0.59 ) }
    dend_38 { pt3dadd( -5.86121, -123.316, -12.4476, 1.33 ) }
    dend_38 { pt3dadd( -5.99609, -124.003, -12.7506, 1.03 ) }
    dend_38 { pt3dadd( -6.19282, -125.161, -13.4505, 0.59 ) }
    dend_38 { pt3dadd( -6.33398, -126.324, -14.3915, 0.52 ) }
    dend_38 { pt3dadd( -6.4055, -127.356, -15.5193, 0.52 ) }
    dend_38 { pt3dadd( -6.41239, -127.809, -16.2265, 0.81 ) }
    dend_38 { pt3dadd( -6.35886, -128.226, -17.3129, 0.81 ) }
    dend_38 { pt3dadd( -6.24361, -128.262, -18.1253, 0.81 ) }
    dend_38 { pt3dadd( -6.02758, -127.962, -19.1353, 0.81 ) }
    dend_38 { pt3dadd( -5.73458, -127.318, -20.4277, 0.81 ) }
    dend_38 { pt3dadd( -5.54475, -126.816, -21.2762, 0.81 ) }
    dend_38 { pt3dadd( -5.32152, -126.096, -22.5007, 0.59 ) }
    dend_38 { pt3dadd( -5.25412, -125.55, -23.4536, 0.59 ) }
    dend_38 { pt3dadd( -5.36148, -125.378, -23.9395, 0.81 ) }
    dend_38 { pt3dadd( -6.04392, -125.49, -24.9252, 0.81 ) }
    dend_38 { pt3dadd( -6.46238, -125.724, -25.3411, 1.11 ) }
    dend_38 { pt3dadd( -7.1147, -126.27, -25.8401, 1.25 ) }
    dend_38 { pt3dadd( -8.012, -127.172, -26.3721, 0.74 ) }
    dend_38 { pt3dadd( -8.62796, -127.878, -26.6754, 0.44 ) }
    dend_38 { pt3dadd( -9.32845, -128.747, -26.9981, 0.44 ) }
    dend_38 { pt3dadd( -9.90655, -129.51, -27.2271, 0.44 ) }
    dend_38 { pt3dadd( -10.7937, -130.753, -27.552, 0.74 ) }
    dend_38 { pt3dadd( -11.4737, -131.79, -27.7826, 1.18 ) }
    dend_38 { pt3dadd( -12.0992, -132.832, -28.0083, 1.03 ) }
    dend_38 { pt3dadd( -12.4224, -133.306, -28.1024, 1.03 ) }
    // Section: dend_30, id: dend_30, parent: dend_18 (entry count 91/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -13.4846, -39.0865, 3.1509, 0.88 ) }
    dend_30 { pt3dadd( -12.6338, -39.8203, 2.97321, 0.88 ) }
    dend_30 { pt3dadd( -11.8714, -40.4128, 2.76416, 0.74 ) }
    dend_30 { pt3dadd( -11.179, -40.9508, 2.57429, 0.74 ) }
    dend_30 { pt3dadd( -10.3794, -41.5723, 2.35501, 0.81 ) }
    dend_30 { pt3dadd( -9.45441, -42.2911, 2.10135, 0.96 ) }
    dend_30 { pt3dadd( -8.82711, -42.7786, 1.92933, 1.33 ) }
    dend_30 { pt3dadd( -7.95688, -43.4867, 1.65313, 1.77 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 99/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -13.4846, -39.0865, 3.1509, 1.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_19 { pt3dadd( -13.7205, -40.5664, 3.75284, 1.7 ) }
    dend_19 { pt3dadd( -13.9125, -41.5183, 4.14152, 1.47 ) }
    dend_19 { pt3dadd( -14.4245, -43.2891, 4.91411, 1.33 ) }
    dend_19 { pt3dadd( -15.0115, -44.6129, 5.59599, 1.11 ) }
    dend_19 { pt3dadd( -15.6837, -45.7697, 6.26534, 1.18 ) }
    dend_19 { pt3dadd( -16.3733, -46.6604, 6.84701, 1.55 ) }
    dend_19 { pt3dadd( -17.0599, -47.2733, 7.32448, 1.4 ) }
    dend_19 { pt3dadd( -18.2548, -47.9625, 7.9089, 1.18 ) }
    dend_19 { pt3dadd( -20.2481, -48.7317, 8.48723, 1.18 ) }
    dend_19 { pt3dadd( -21.0336, -49.009, 8.59323, 1.18 ) }
    dend_19 { pt3dadd( -22.5171, -49.6422, 8.59157, 1.18 ) }
    dend_19 { pt3dadd( -23.4164, -50.1848, 8.49125, 1.33 ) }
    dend_19 { pt3dadd( -24.6561, -51.2931, 8.27216, 1.4 ) }
    dend_19 { pt3dadd( -25.4964, -52.3247, 8.09884, 1.7 ) }
    dend_19 { pt3dadd( -26.4561, -53.7401, 7.89701, 1.4 ) }
    dend_19 { pt3dadd( -27.505, -55.3583, 7.70129, 1.03 ) }
    dend_19 { pt3dadd( -28.3462, -56.6707, 7.55723, 1.55 ) }
    dend_19 { pt3dadd( -29.365, -58.1398, 7.4369, 1.25 ) }
    dend_19 { pt3dadd( -30.3722, -59.451, 7.34014, 1.25 ) }
    dend_19 { pt3dadd( -31.3925, -60.6262, 7.19472, 0.96 ) }
    dend_19 { pt3dadd( -32.4248, -61.6938, 6.96637, 1.4 ) }
    dend_19 { pt3dadd( -33.4175, -62.6415, 6.63585, 1.55 ) }
    dend_19 { pt3dadd( -34.2217, -63.4267, 6.26703, 1.47 ) }
    dend_19 { pt3dadd( -35.415, -64.721, 5.54049, 1.84 ) }
    dend_19 { pt3dadd( -36.1879, -65.7768, 4.91543, 1.55 ) }
    dend_19 { pt3dadd( -36.8914, -67.124, 4.19596, 1.25 ) }
    dend_19 { pt3dadd( -37.3366, -68.4805, 3.60672, 1.55 ) }
    dend_19 { pt3dadd( -37.5788, -69.9386, 3.15811, 1.33 ) }
    dend_19 { pt3dadd( -37.6529, -71.5398, 2.89341, 0.96 ) }
    dend_19 { pt3dadd( -37.6371, -73.1942, 2.89955, 1.11 ) }
    dend_19 { pt3dadd( -37.622, -74.6249, 3.0778, 1.18 ) }
    dend_19 { pt3dadd( -37.6563, -76.0627, 3.3988, 1.4 ) }
    dend_19 { pt3dadd( -37.79, -77.7807, 3.8485, 1.55 ) }
    dend_19 { pt3dadd( -38.0391, -79.3132, 4.23397, 1.55 ) }
    dend_19 { pt3dadd( -38.5479, -81.2725, 4.63849, 1.33 ) }
    dend_19 { pt3dadd( -39.0514, -82.6236, 4.79309, 1.25 ) }
    dend_19 { pt3dadd( -39.6644, -83.9003, 4.77314, 1.47 ) }
    dend_19 { pt3dadd( -40.3337, -85.1583, 4.6432, 1.4 ) }
    dend_19 { pt3dadd( -41.0199, -86.3553, 4.39415, 1.4 ) }
    dend_19 { pt3dadd( -41.5681, -87.2612, 4.10613, 1.03 ) }
    dend_19 { pt3dadd( -42.1021, -88.1025, 3.72452, 1.11 ) }
    dend_19 { pt3dadd( -43.2037, -89.6898, 2.8488, 1.25 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 42/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 26.2816, -34.2064, -5.17932, 2.21 ) }
    dend_12 { pt3dadd( 26.0578, -35.4634, -3.89871, 2.21 ) }
    dend_12 { pt3dadd( 25.8252, -36.7693, -2.56829, 2.21 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 45/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 26.2816, -34.2064, -5.17932, 0.74 ) }
    dend_7 { pt3dadd( 26.766, -36.2991, -5.50168, 0.74 ) }
    dend_7 { pt3dadd( 27.2174, -37.7316, -5.82758, 0.81 ) }
    dend_7 { pt3dadd( 27.5994, -38.6914, -6.14767, 0.59 ) }
    dend_7 { pt3dadd( 28.0961, -39.654, -6.61164, 0.88 ) }
    dend_7 { pt3dadd( 28.7145, -40.6885, -7.26233, 0.88 ) }
    dend_7 { pt3dadd( 29.1351, -41.384, -7.76596, 0.52 ) }
    dend_7 { pt3dadd( 29.6024, -42.0709, -8.46765, 0.96 ) }
    dend_7 { pt3dadd( 30.0328, -42.7465, -9.29069, 1.18 ) }
    dend_7 { pt3dadd( 30.4694, -43.6161, -10.3799, 1.4 ) }
    dend_7 { pt3dadd( 30.6899, -44.3108, -11.2448, 1.03 ) }
    dend_7 { pt3dadd( 30.8207, -45.3378, -12.4582, 0.88 ) }
    dend_7 { pt3dadd( 30.7781, -46.2428, -13.4961, 1.03 ) }
    dend_7 { pt3dadd( 30.6539, -46.8033, -14.1375, 1.03 ) }
    dend_7 { pt3dadd( 30.3146, -47.5468, -15.0446, 0.74 ) }
    dend_7 { pt3dadd( 29.8083, -48.2142, -15.9233, 1.03 ) }
    dend_7 { pt3dadd( 29.3149, -48.6775, -16.5826, 1.25 ) }
    dend_7 { pt3dadd( 28.6462, -49.2163, -17.3738, 1.11 ) }
    dend_7 { pt3dadd( 27.8845, -49.8634, -18.254, 0.96 ) }
    dend_7 { pt3dadd( 27.0755, -50.6309, -19.1929, 1.18 ) }
    dend_7 { pt3dadd( 26.4711, -51.2963, -19.9107, 1.4 ) }
    dend_7 { pt3dadd( 25.6822, -52.5882, -21.0027, 0.88 ) }
    dend_7 { pt3dadd( 25.5857, -53.3767, -21.5231, 0.88 ) }
    dend_7 { pt3dadd( 25.9811, -54.2976, -22.0938, 0.74 ) }
    dend_7 { pt3dadd( 26.7238, -55.2629, -22.7153, 0.66 ) }
    dend_7 { pt3dadd( 27.3758, -55.9831, -23.1847, 0.66 ) }
    dend_7 { pt3dadd( 28.0203, -56.6645, -23.6104, 1.11 ) }
    dend_7 { pt3dadd( 28.8533, -57.5321, -24.1675, 1.47 ) }
    dend_7 { pt3dadd( 29.6518, -58.5445, -24.8396, 0.96 ) }
    dend_7 { pt3dadd( 30.2136, -59.5321, -25.4908, 1.18 ) }
    dend_7 { pt3dadd( 30.6672, -60.7074, -26.237, 0.81 ) }
    dend_7 { pt3dadd( 30.9583, -61.8607, -26.8788, 1.25 ) }
    dend_7 { pt3dadd( 31.0612, -62.7118, -27.2878, 1.77 ) }
    dend_7 { pt3dadd( 31.0278, -64.0936, -27.8662, 2.06 ) }
    dend_7 { pt3dadd( 30.8388, -65.4517, -28.4145, 0.59 ) }
    dend_7 { pt3dadd( 30.7118, -66.1217, -28.702, 0.81 ) }
    dend_7 { pt3dadd( 30.6023, -66.6672, -28.9506, 0.59 ) }
    dend_7 { pt3dadd( 30.3798, -67.6539, -29.4297, 1.25 ) }
    dend_7 { pt3dadd( 29.9554, -69.0945, -30.0742, 0.66 ) }
    dend_7 { pt3dadd( 29.5701, -70.2244, -30.5243, 0.88 ) }
    dend_7 { pt3dadd( 29.1415, -71.4103, -30.9345, 0.88 ) }
    dend_7 { pt3dadd( 28.6818, -72.774, -31.2978, 0.74 ) }
    dend_7 { pt3dadd( 28.3256, -73.8428, -31.5065, 0.74 ) }
    dend_7 { pt3dadd( 27.7393, -75.6115, -31.7182, 0.66 ) }
    dend_7 { pt3dadd( 27.4058, -76.5865, -31.7585, 1.11 ) }
    dend_7 { pt3dadd( 26.8204, -78.1647, -31.721, 1.47 ) }
    dend_7 { pt3dadd( 26.1723, -79.8058, -31.594, 0.44 ) }
    dend_7 { pt3dadd( 25.7286, -80.974, -31.4613, 0.66 ) }
    dend_7 { pt3dadd( 25.2984, -82.2152, -31.2839, 0.44 ) }
    dend_7 { pt3dadd( 25.1336, -82.7599, -31.209, 0.44 ) }
    dend_7 { pt3dadd( 24.8354, -83.6627, -31.1097, 0.88 ) }
    dend_7 { pt3dadd( 24.5437, -84.4035, -31.0597, 0.66 ) }
    dend_7 { pt3dadd( 24.2291, -85.0817, -31.107, 0.44 ) }
    dend_7 { pt3dadd( 23.169, -94.2021, -34.4796, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 51.701, -36.0066, 15.5413, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_3 { pt3dadd( 52.5601, -36.7432, 15.4969, 0.22 ) }
    dend_3 { pt3dadd( 53.163, -37.1773, 15.4923, 0.37 ) }
    dend_3 { pt3dadd( 54.0827, -37.7607, 15.5058, 0.44 ) }
    dend_3 { pt3dadd( 54.9463, -38.3064, 15.5266, 0.22 ) }
    dend_3 { pt3dadd( 55.8519, -38.8763, 15.5746, 0.66 ) }
    dend_3 { pt3dadd( 56.5843, -39.3327, 15.6045, 0.81 ) }
    dend_3 { pt3dadd( 57.3998, -39.8077, 15.6248, 1.11 ) }
    dend_3 { pt3dadd( 58.4628, -40.3392, 15.6046, 0.66 ) }
    dend_3 { pt3dadd( 59.4155, -40.7393, 15.5759, 0.66 ) }
    dend_3 { pt3dadd( 60.1855, -41.0136, 15.5412, 0.29 ) }
    dend_3 { pt3dadd( 61.0481, -41.2941, 15.5173, 0.22 ) }
    dend_3 { pt3dadd( 61.7937, -41.5285, 15.5438, 0.44 ) }
    dend_3 { pt3dadd( 62.7486, -41.8638, 15.6952, 0.22 ) }
    dend_3 { pt3dadd( 63.3137, -42.089, 15.8588, 0.22 ) }
    dend_3 { pt3dadd( 64.2829, -42.5936, 16.24, 0.81 ) }
    dend_3 { pt3dadd( 65.2104, -43.2268, 16.6834, 0.74 ) }
    dend_3 { pt3dadd( 66.1216, -43.9423, 17.1671, 0.37 ) }
    dend_3 { pt3dadd( 67.101, -44.7322, 17.7404, 0.81 ) }
    dend_3 { pt3dadd( 67.6785, -45.1813, 18.1055, 0.81 ) }
    dend_3 { pt3dadd( 68.6919, -45.888, 18.7566, 0.52 ) }
    dend_3 { pt3dadd( 69.4182, -46.2959, 19.2612, 0.74 ) }
    dend_3 { pt3dadd( 70.4091, -46.5638, 19.9948, 0.37 ) }
    dend_3 { pt3dadd( 71.4337, -46.3417, 20.7951, 0.52 ) }
    dend_3 { pt3dadd( 72.1824, -45.8731, 21.4437, 1.03 ) }
    dend_3 { pt3dadd( 72.6949, -45.3645, 21.9638, 1.7 ) }
    dend_3 { pt3dadd( 73.1779, -44.6371, 22.5942, 1.55 ) }
    dend_3 { pt3dadd( 73.5664, -43.6573, 23.3681, 0.81 ) }
    dend_3 { pt3dadd( 73.7588, -42.6004, 24.1657, 0.29 ) }
    dend_3 { pt3dadd( 73.7889, -42.0945, 24.5231, 0.29 ) }
    dend_3 { pt3dadd( 73.7921, -41.3154, 25.0405, 0.96 ) }
    dend_3 { pt3dadd( 73.777, -40.4656, 25.6028, 1.4 ) }
    dend_3 { pt3dadd( 73.7537, -39.4457, 26.2827, 0.52 ) }
    dend_3 { pt3dadd( 73.7453, -38.9106, 26.6517, 0.52 ) }
    dend_3 { pt3dadd( 73.8187, -37.9947, 27.3144, 0.37 ) }
    dend_3 { pt3dadd( 74.0408, -36.9486, 28.0586, 0.22 ) }
    dend_3 { pt3dadd( 74.3043, -36.1617, 28.6517, 0.66 ) }
    dend_3 { pt3dadd( 74.6039, -35.4771, 29.2234, 1.18 ) }
    dend_3 { pt3dadd( 74.9469, -34.7432, 29.919, 0.29 ) }
    dend_3 { pt3dadd( 75.2936, -33.9366, 30.7864, 0.29 ) }
    dend_3 { pt3dadd( 75.4323, -33.5588, 31.2629, 1.11 ) }
    dend_3 { pt3dadd( 75.6584, -32.8518, 32.2717, 1.77 ) }
    dend_3 { pt3dadd( 75.8049, -32.3605, 33.0514, 1.77 ) }
    dend_3 { pt3dadd( 76.0751, -31.5556, 34.5226, 0.29 ) }
    dend_3 { pt3dadd( 76.3374, -30.8456, 35.9881, 0.96 ) }
    dend_3 { pt3dadd( 76.6048, -30.1349, 37.558, 0.96 ) }
    dend_3 { pt3dadd( 76.7993, -29.6385, 38.6566, 1.11 ) }
    dend_3 { pt3dadd( 77.0197, -29.0495, 39.8182, 1.11 ) }
    dend_3 { pt3dadd( 77.3013, -28.2885, 41.161, 0.59 ) }
    dend_3 { pt3dadd( 77.5749, -27.6072, 42.2291, 0.59 ) }
    dend_3 { pt3dadd( 77.8107, -26.9992, 43.0314, 0.59 ) }
    dend_3 { pt3dadd( 78.0601, -26.3781, 43.6613, 1.11 ) }
    dend_3 { pt3dadd( 78.678, -24.9706, 44.7392, 0.22 ) }
    dend_3 { pt3dadd( 79.0524, -24.1154, 45.1778, 0.22 ) }
    dend_3 { pt3dadd( 79.3988, -23.2854, 45.4285, 0.96 ) }
    dend_3 { pt3dadd( 79.6307, -22.738, 45.5071, 1.4 ) }
    dend_3 { pt3dadd( 80.2263, -21.4086, 45.5408, 0.29 ) }
    dend_3 { pt3dadd( 80.6941, -20.4151, 45.537, 1.03 ) }
    dend_3 { pt3dadd( 81.2296, -19.2366, 45.493, 0.22 ) }
    dend_3 { pt3dadd( 81.5763, -18.2814, 45.4213, 0.66 ) }
    dend_3 { pt3dadd( 81.9378, -16.9093, 45.3164, 0.15 ) }
    dend_3 { pt3dadd( 82.0405, -16.3179, 45.2785, 0.15 ) }
    dend_3 { pt3dadd( 82.1601, -14.9553, 45.1918, 0.22 ) }
    dend_3 { pt3dadd( 82.1828, -14.2131, 45.1885, 0.22 ) }
    dend_3 { pt3dadd( 82.1943, -13.5482, 45.2729, 0.22 ) }
    dend_3 { pt3dadd( 82.2001, -12.9009, 45.4213, 1.11 ) }
    dend_3 { pt3dadd( 82.1656, -11.8732, 45.7099, 1.62 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 66/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 51.701, -36.0066, 15.5413, 0.44 ) }
    dend_2 { pt3dadd( 52.7054, -37.1532, 15.7992, 0.44 ) }
    dend_2 { pt3dadd( 53.3721, -38.0192, 16.1034, 0.44 ) }
    dend_2 { pt3dadd( 54.0486, -38.9837, 16.4906, 0.44 ) }
    dend_2 { pt3dadd( 54.8409, -40.2001, 17.0089, 0.37 ) }
    dend_2 { pt3dadd( 55.423, -41.2062, 17.4319, 0.59 ) }
    dend_2 { pt3dadd( 55.979, -42.3112, 17.8242, 0.59 ) }
    dend_2 { pt3dadd( 56.4307, -43.4291, 18.2092, 0.37 ) }
    dend_2 { pt3dadd( 56.574, -43.8741, 18.3328, 0.81 ) }
    dend_2 { pt3dadd( 56.7348, -44.4059, 18.4263, 1.33 ) }
    dend_2 { pt3dadd( 57.0666, -45.3744, 18.4419, 1.03 ) }
    dend_2 { pt3dadd( 57.6731, -46.7077, 18.2528, 0.29 ) }
    dend_2 { pt3dadd( 58.1142, -47.4093, 18.0836, 0.29 ) }
    dend_2 { pt3dadd( 58.8542, -48.3133, 17.8526, 1.03 ) }
    dend_2 { pt3dadd( 59.6433, -49.1155, 17.7024, 0.52 ) }
    dend_2 { pt3dadd( 60.5327, -49.8574, 17.6639, 0.74 ) }
    dend_2 { pt3dadd( 61.4166, -50.4889, 17.7581, 1.03 ) }
    dend_2 { pt3dadd( 62.5599, -51.2897, 18.0739, 0.59 ) }
    dend_2 { pt3dadd( 63.3946, -51.9794, 18.4591, 0.59 ) }
    dend_2 { pt3dadd( 64.0358, -52.7052, 18.9665, 0.59 ) }
    dend_2 { pt3dadd( 64.5847, -53.6124, 19.6763, 0.59 ) }
    dend_2 { pt3dadd( 64.8613, -54.2415, 20.2179, 0.44 ) }
    dend_2 { pt3dadd( 65.1674, -55.1489, 21.0338, 0.66 ) }
    dend_2 { pt3dadd( 65.477, -56.1806, 22.0044, 0.88 ) }
    dend_2 { pt3dadd( 65.7338, -57.0013, 22.7534, 0.44 ) }
    dend_2 { pt3dadd( 66.0619, -57.7466, 23.4359, 0.29 ) }
    dend_2 { pt3dadd( 66.2962, -58.0185, 23.7451, 0.29 ) }
    dend_2 { pt3dadd( 66.9427, -58.0591, 24.2227, 0.29 ) }
    dend_2 { pt3dadd( 67.9602, -57.8358, 24.8575, 0.81 ) }
    dend_2 { pt3dadd( 68.7867, -57.5725, 25.3269, 1.4 ) }
    dend_2 { pt3dadd( 70.2617, -57.0462, 26.118, 0.29 ) }
    dend_2 { pt3dadd( 71.1542, -56.7437, 26.5963, 0.29 ) }
    dend_2 { pt3dadd( 71.7393, -56.6017, 26.9355, 0.29 ) }
    dend_2 { pt3dadd( 72.3062, -56.5876, 27.3332, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_2 { pt3dadd( 72.7834, -56.8025, 27.7624, 0.88 ) }
    dend_2 { pt3dadd( 73.407, -57.2925, 28.4016, 0.88 ) }
    dend_2 { pt3dadd( 74.056, -57.9212, 29.0636, 0.22 ) }
    dend_2 { pt3dadd( 74.3851, -58.2318, 29.3833, 0.22 ) }
    dend_2 { pt3dadd( 74.9671, -58.6738, 29.9013, 0.22 ) }
    dend_2 { pt3dadd( 75.3847, -58.897, 30.2487, 0.59 ) }
    dend_2 { pt3dadd( 76.3544, -59.2228, 31.0574, 0.88 ) }
    dend_2 { pt3dadd( 77.0487, -59.3771, 31.6408, 0.88 ) }
    dend_2 { pt3dadd( 77.9923, -59.5642, 32.4697, 0.52 ) }
    dend_2 { pt3dadd( 78.719, -59.7502, 33.1658, 0.22 ) }
    dend_2 { pt3dadd( 79.3231, -59.9932, 33.826, 0.66 ) }
    dend_2 { pt3dadd( 79.8882, -60.3468, 34.5958, 1.03 ) }
    dend_2 { pt3dadd( 80.3316, -60.9593, 35.5473, 0.29 ) }
    dend_2 { pt3dadd( 80.3184, -61.5017, 36.0497, 0.29 ) }
    dend_2 { pt3dadd( 80.1109, -62.2084, 36.5451, 0.29 ) }
    dend_2 { pt3dadd( 79.7953, -63.1804, 37.154, 0.29 ) }
    dend_2 { pt3dadd( 79.5541, -63.9968, 37.6552, 0.96 ) }
    dend_2 { pt3dadd( 79.42, -64.6497, 38.0462, 0.88 ) }
    dend_2 { pt3dadd( 79.4107, -65.5275, 38.6289, 0.37 ) }
    dend_2 { pt3dadd( 79.6653, -66.27, 39.2446, 0.37 ) }
    dend_2 { pt3dadd( 80.0251, -66.8454, 39.7579, 0.59 ) }
    dend_2 { pt3dadd( 80.6242, -67.5513, 40.3373, 1.25 ) }
    dend_2 { pt3dadd( 81.6141, -68.5111, 41.0461, 0.44 ) }
    dend_2 { pt3dadd( 82.2652, -69.0457, 41.4282, 0.29 ) }
    dend_2 { pt3dadd( 82.8977, -69.4973, 41.7455, 0.29 ) }
    dend_2 { pt3dadd( 83.8154, -70.0822, 42.1849, 0.22 ) }
    dend_2 { pt3dadd( 84.7199, -70.6262, 42.6345, 0.22 ) }
    dend_2 { pt3dadd( 85.3823, -70.9616, 42.9969, 0.29 ) }
    dend_2 { pt3dadd( 86.0933, -71.2515, 43.4483, 0.66 ) }
    dend_2 { pt3dadd( 86.7564, -71.4528, 43.8679, 0.44 ) }
    dend_2 { pt3dadd( 87.9409, -71.6911, 44.5913, 1.03 ) }
    dend_2 { pt3dadd( 88.7218, -71.7687, 45.0746, 1.11 ) }
    dend_2 { pt3dadd( 90.3239, -71.8138, 46.1038, 0.22 ) }
    dend_2 { pt3dadd( 91.1261, -71.8046, 46.6164, 0.74 ) }
    dend_2 { pt3dadd( 91.5686, -71.7827, 46.8915, 0.74 ) }
    dend_2 { pt3dadd( 92.2919, -71.7205, 47.3073, 0.22 ) }
    dend_2 { pt3dadd( 92.9149, -71.6305, 47.647, 0.22 ) }
    dend_2 { pt3dadd( 93.4965, -71.5119, 47.9254, 0.22 ) }
    dend_2 { pt3dadd( 94.2432, -71.3641, 48.1784, 0.81 ) }
    dend_2 { pt3dadd( 94.8733, -71.2521, 48.3279, 1.25 ) }
    dend_2 { pt3dadd( 96.6544, -70.9127, 48.6719, 0.44 ) }
    dend_2 { pt3dadd( 97.3061, -70.7761, 48.7713, 0.81 ) }
    dend_2 { pt3dadd( 98.251, -70.5805, 48.8689, 0.96 ) }
    dend_2 { pt3dadd( 99.9103, -70.2623, 48.95, 0.81 ) }
    dend_2 { pt3dadd( 101.372, -70.0013, 48.9213, 0.29 ) }
    dend_2 { pt3dadd( 102.262, -69.8488, 48.8558, 0.29 ) }
    dend_2 { pt3dadd( 102.908, -69.7501, 48.7738, 0.96 ) }
    dend_2 { pt3dadd( 104.004, -69.6427, 48.6331, 0.22 ) }
    dend_2 { pt3dadd( 104.888, -69.6194, 48.5451, 0.22 ) }
    dend_2 { pt3dadd( 105.676, -69.6947, 48.514, 0.22 ) }
    dend_2 { pt3dadd( 106.888, -70.0364, 48.6134, 0.81 ) }
    dend_2 { pt3dadd( 107.973, -70.5755, 48.9152, 0.22 ) }
    dend_2 { pt3dadd( 108.488, -70.9346, 49.1801, 0.59 ) }
    dend_2 { pt3dadd( 108.979, -71.3654, 49.6144, 1.25 ) }
    dend_2 { pt3dadd( 109.83, -72.1948, 50.7556, 0.52 ) }
    dend_2 { pt3dadd( 110.408, -72.8469, 51.8608, 0.29 ) }
    dend_2 { pt3dadd( 110.807, -73.4068, 52.8821, 0.29 ) }
    dend_2 { pt3dadd( 110.885, -73.534, 53.1258, 0.29 ) }
    dend_2 { pt3dadd( 111.121, -73.9388, 53.8724, 0.29 ) }
    dend_2 { pt3dadd( 111.473, -74.4446, 54.83, 0.29 ) }
    dend_2 { pt3dadd( 111.838, -74.7709, 55.4884, 0.29 ) }
    dend_2 { pt3dadd( 112.399, -75.1127, 56.2126, 0.52 ) }
    dend_2 { pt3dadd( 112.843, -75.3413, 56.6464, 0.66 ) }
    dend_2 { pt3dadd( 113.654, -75.8385, 57.2944, 0.29 ) }
    dend_2 { pt3dadd( 114.299, -76.3144, 57.6615, 0.29 ) }
    dend_2 { pt3dadd( 115.143, -76.8761, 58.0383, 0.44 ) }
    dend_2 { pt3dadd( 115.769, -77.1863, 58.3263, 0.22 ) }
    dend_2 { pt3dadd( 116.564, -77.4658, 58.7777, 0.22 ) }
    dend_2 { pt3dadd( 117.467, -77.7017, 59.358, 0.37 ) }
    dend_2 { pt3dadd( 118.347, -77.8367, 59.9863, 0.22 ) }
    dend_2 { pt3dadd( 119.708, -77.9351, 61.0777, 0.88 ) }
    dend_2 { pt3dadd( 120.854, -77.8791, 62.1208, 0.29 ) }
    dend_2 { pt3dadd( 121.846, -77.701, 63.0946, 0.59 ) }
    dend_2 { pt3dadd( 122.257, -77.5821, 63.5302, 0.66 ) }
    dend_2 { pt3dadd( 123.098, -77.2656, 64.4961, 0.22 ) }
    dend_2 { pt3dadd( 123.694, -76.9994, 65.2761, 0.22 ) }
    dend_2 { pt3dadd( 124.419, -76.6319, 66.4218, 0.81 ) }
    dend_2 { pt3dadd( 124.951, -76.2996, 67.5191, 0.66 ) }
    dend_2 { pt3dadd( 125.203, -76.1092, 68.3253, 0.44 ) }
    dend_2 { pt3dadd( 125.409, -75.9797, 69.6035, 0.44 ) }
    dend_2 { pt3dadd( 125.427, -76.0492, 70.3447, 0.44 ) }
    dend_2 { pt3dadd( 125.384, -76.4294, 71.6298, 0.44 ) }
    dend_2 { pt3dadd( 125.301, -76.8002, 72.3753, 0.44 ) }
    dend_2 { pt3dadd( 125.168, -77.2106, 73.062, 0.44 ) }
    dend_2 { pt3dadd( 124.973, -77.7434, 73.8671, 0.96 ) }
    dend_2 { pt3dadd( 124.824, -78.2606, 74.5671, 0.74 ) }
    dend_2 { pt3dadd( 124.725, -78.882, 75.4045, 0.44 ) }
    dend_2 { pt3dadd( 124.72, -79.6692, 76.512, 0.29 ) }
    dend_2 { pt3dadd( 124.76, -80.2942, 77.4486, 0.29 ) }
    dend_2 { pt3dadd( 124.8, -80.8361, 78.4279, 0.81 ) }
    dend_2 { pt3dadd( 124.803, -81.3387, 79.5864, 0.52 ) }
    dend_2 { pt3dadd( 124.752, -81.669, 80.5216, 0.52 ) }
    dend_2 { pt3dadd( 124.692, -81.9159, 81.2463, 0.52 ) }
    dend_2 { pt3dadd( 124.653, -82.1086, 81.7071, 0.52 ) }
    dend_2 { pt3dadd( 124.477, -82.6502, 82.5805, 0.52 ) }
    dend_2 { pt3dadd( 124.379, -82.8799, 82.8594, 0.52 ) }
    dend_2 { pt3dadd( 124.001, -83.6281, 83.6354, 0.52 ) }
    dend_2 { pt3dadd( 123.592, -84.3686, 84.2698, 0.29 ) }
    dend_2 { pt3dadd( 122.925, -85.555, 85.1343, 0.37 ) }
    dend_2 { pt3dadd( 122.144, -87.0205, 86.0421, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 121.494, -88.259, 86.7176, 0.29 ) }
    dend_2 { pt3dadd( 121.205, -88.7906, 86.9953, 0.29 ) }
    dend_2 { pt3dadd( 120.591, -89.8335, 87.5109, 0.22 ) }
    dend_2 { pt3dadd( 119.844, -90.9342, 88.0285, 0.44 ) }
    dend_2 { pt3dadd( 119.373, -91.5569, 88.2836, 0.22 ) }
    dend_2 { pt3dadd( 118.925, -92.0851, 88.4696, 0.22 ) }
    dend_2 { pt3dadd( 118.423, -92.6257, 88.6477, 0.22 ) }
    dend_2 { pt3dadd( 117.81, -93.3063, 88.9256, 0.81 ) }
    dend_2 { pt3dadd( 116.911, -94.3115, 89.4556, 1.25 ) }
    dend_2 { pt3dadd( 116.56, -94.7116, 89.7009, 1.03 ) }
    dend_2 { pt3dadd( 115.575, -95.9029, 90.5018, 1.7 ) }
    dend_2 { pt3dadd( 114.569, -97.1997, 91.3864, 1.55 ) }
    dend_2 { pt3dadd( 113.318, -98.9029, 92.5889, 0.07 ) }
    dend_2 { pt3dadd( 112.675, -99.8046, 93.289, 0.07 ) }
    dend_2 { pt3dadd( 112.313, -100.31, 93.7334, 0.37 ) }
    dend_2 { pt3dadd( 112.113, -100.595, 94.0044, 0.37 ) }
    // Section: dend_156, id: dend_156, parent: dend_150 (entry count 16/100)
    dend_156 { pt3dclear() }
    dend_156 { pt3dadd( -45.4309, -51.1174, 36.173, 1.03 ) }
    dend_156 { pt3dadd( -45.9633, -51.6229, 37.507, 1.03 ) }
    dend_156 { pt3dadd( -46.2396, -52.2135, 38.8356, 0.59 ) }
    dend_156 { pt3dadd( -46.3426, -52.9664, 40.2111, 0.81 ) }
    dend_156 { pt3dadd( -46.4125, -53.4821, 41.072, 0.59 ) }
    dend_156 { pt3dadd( -46.586, -54.1393, 42.146, 0.74 ) }
    dend_156 { pt3dadd( -46.8008, -54.677, 43.0073, 0.52 ) }
    dend_156 { pt3dadd( -47.0018, -55.3032, 43.8529, 0.44 ) }
    dend_156 { pt3dadd( -47.2331, -56.0548, 44.7145, 0.66 ) }
    dend_156 { pt3dadd( -47.5097, -56.6661, 45.4458, 0.81 ) }
    dend_156 { pt3dadd( -48.0361, -57.3842, 46.4712, 0.52 ) }
    dend_156 { pt3dadd( -48.8637, -58.1103, 47.6898, 1.4 ) }
    dend_156 { pt3dadd( -49.7446, -58.6645, 48.7097, 0.88 ) }
    dend_156 { pt3dadd( -50.5014, -59.0572, 49.4367, 0.74 ) }
    dend_156 { pt3dadd( -51.6106, -59.6034, 50.3625, 0.59 ) }
    dend_156 { pt3dadd( -52.5128, -60.0433, 51.0392, 0.37 ) }
    dend_156 { pt3dadd( -53.443, -60.4033, 51.6048, 0.88 ) }
    dend_156 { pt3dadd( -54.7645, -60.7638, 52.2764, 0.37 ) }
    dend_156 { pt3dadd( -56.1628, -61.0569, 52.9428, 0.74 ) }
    dend_156 { pt3dadd( -57.3052, -61.3114, 53.4684, 1.25 ) }
    dend_156 { pt3dadd( -58.4914, -61.6691, 53.9961, 1.47 ) }
    dend_156 { pt3dadd( -60.2559, -62.3161, 54.8472, 0.59 ) }
    dend_156 { pt3dadd( -61.0969, -62.6236, 55.2956, 0.44 ) }
    dend_156 { pt3dadd( -62.1181, -62.9279, 55.8981, 0.44 ) }
    dend_156 { pt3dadd( -63.0936, -63.0738, 56.4992, 0.74 ) }
    dend_156 { pt3dadd( -63.9502, -63.0837, 57.0321, 0.44 ) }
    dend_156 { pt3dadd( -64.9437, -63.0108, 57.6282, 0.44 ) }
    dend_156 { pt3dadd( -65.7862, -62.8924, 58.1257, 0.74 ) }
    dend_156 { pt3dadd( -66.5841, -62.7317, 58.5893, 1.03 ) }
    dend_156 { pt3dadd( -67.8645, -62.3733, 59.3199, 0.44 ) }
    dend_156 { pt3dadd( -68.6342, -62.1708, 59.7591, 0.22 ) }
    dend_156 { pt3dadd( -68.9057, -62.1438, 59.8937, 0.22 ) }
    dend_156 { pt3dadd( -69.3451, -62.2372, 60.0431, 0.22 ) }
    dend_156 { pt3dadd( -70.3217, -62.7631, 60.2318, 0.22 ) }
    dend_156 { pt3dadd( -70.8015, -63.0947, 60.2692, 0.81 ) }
    dend_156 { pt3dadd( -71.847, -63.867, 60.3273, 1.33 ) }
    dend_156 { pt3dadd( -73.0931, -64.737, 60.4805, 0.81 ) }
    dend_156 { pt3dadd( -74.2069, -65.4954, 60.5986, 0.52 ) }
    dend_156 { pt3dadd( -75.6649, -66.4509, 60.7292, 0.96 ) }
    dend_156 { pt3dadd( -77.2287, -67.4469, 60.8317, 0.52 ) }
    dend_156 { pt3dadd( -78.3476, -68.1624, 60.9207, 0.74 ) }
    dend_156 { pt3dadd( -80.1611, -69.3503, 61.1101, 1.92 ) }
    // Section: dend_151, id: dend_151, parent: dend_150 (entry count 58/100)
    dend_151 { pt3dclear() }
    dend_151 { pt3dadd( -45.4309, -51.1174, 36.173, 0.81 ) }
    dend_151 { pt3dadd( -45.4257, -52.2023, 35.4878, 0.81 ) }
    dend_151 { pt3dadd( -45.1339, -53.4704, 34.9031, 0.59 ) }
    dend_151 { pt3dadd( -44.7152, -54.548, 34.5818, 0.66 ) }
    dend_151 { pt3dadd( -44.2959, -55.6265, 34.3704, 0.66 ) }
    dend_151 { pt3dadd( -44.0177, -56.457, 34.2588, 0.66 ) }
    dend_151 { pt3dadd( -43.6538, -57.8963, 34.1238, 0.59 ) }
    dend_151 { pt3dadd( -43.3899, -59.3717, 34.1242, 0.81 ) }
    dend_151 { pt3dadd( -43.2825, -60.4869, 34.194, 1.47 ) }
    dend_151 { pt3dadd( -43.3331, -62.1187, 34.3486, 1.47 ) }
    dend_151 { pt3dadd( -43.6535, -63.6526, 34.4972, 1.25 ) }
    dend_151 { pt3dadd( -44.4168, -65.4552, 34.7027, 1.03 ) }
    dend_151 { pt3dadd( -45.3427, -66.8782, 34.8848, 0.74 ) }
    dend_151 { pt3dadd( -46.0423, -67.7089, 34.9903, 0.59 ) }
    dend_151 { pt3dadd( -47.1972, -68.8979, 35.2122, 0.59 ) }
    dend_151 { pt3dadd( -47.9153, -69.6093, 35.3772, 0.59 ) }
    dend_151 { pt3dadd( -48.9024, -70.6577, 35.6624, 0.96 ) }
    dend_151 { pt3dadd( -50.0171, -72.0674, 36.0622, 1.47 ) }
    dend_151 { pt3dadd( -50.8767, -73.5321, 36.4445, 0.59 ) }
    dend_151 { pt3dadd( -51.3932, -74.7925, 36.7352, 1.18 ) }
    dend_151 { pt3dadd( -51.7657, -76.0588, 36.9845, 0.88 ) }
    dend_151 { pt3dadd( -52.1257, -77.5216, 37.2146, 0.59 ) }
    dend_151 { pt3dadd( -52.4045, -78.701, 37.3415, 0.96 ) }
    dend_151 { pt3dadd( -52.6793, -79.7562, 37.4039, 0.96 ) }
    dend_151 { pt3dadd( -53.1533, -81.1126, 37.3872, 0.74 ) }
    dend_151 { pt3dadd( -53.6317, -82.1181, 37.2705, 0.52 ) }
    dend_151 { pt3dadd( -54.0485, -82.8723, 37.1136, 0.37 ) }
    dend_151 { pt3dadd( -54.5334, -83.8272, 36.8461, 0.37 ) }
    dend_151 { pt3dadd( -54.7727, -84.565, 36.6518, 0.37 ) }
    dend_151 { pt3dadd( -54.9527, -85.3606, 36.4375, 1.03 ) }
    dend_151 { pt3dadd( -55.2558, -86.7304, 36.0851, 1.7 ) }
    dend_151 { pt3dadd( -55.6042, -88.2391, 35.7034, 1.03 ) }
    dend_151 { pt3dadd( -55.9874, -89.7302, 35.3545, 1.47 ) }
    dend_151 { pt3dadd( -56.6701, -91.973, 34.8193, 0.52 ) }
    dend_151 { pt3dadd( -57.0612, -93.074, 34.5557, 0.52 ) }
    dend_151 { pt3dadd( -57.7866, -94.8299, 34.1362, 0.74 ) }
    dend_151 { pt3dadd( -58.3135, -95.9247, 33.878, 1.55 ) }
    dend_151 { pt3dadd( -59.0597, -97.3116, 33.5356, 1.92 ) }
    dend_151 { pt3dadd( -60.1088, -99.1376, 33.0075, 0.66 ) }
    dend_151 { pt3dadd( -60.6418, -100.101, 32.702, 0.96 ) }
    dend_151 { pt3dadd( -61.1273, -101.114, 32.3857, 1.33 ) }
    dend_151 { pt3dadd( -61.5273, -102.033, 32.0636, 1.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_151 { pt3dadd( -62.2005, -103.475, 31.4666, 0.88 ) }
    dend_151 { pt3dadd( -62.6689, -104.318, 30.9995, 0.88 ) }
    dend_151 { pt3dadd( -63.5127, -105.459, 30.1021, 0.44 ) }
    dend_151 { pt3dadd( -63.9084, -105.893, 29.6498, 0.74 ) }
    dend_151 { pt3dadd( -64.5398, -106.531, 28.8943, 0.59 ) }
    dend_151 { pt3dadd( -65.4022, -107.375, 27.8873, 0.66 ) }
    dend_151 { pt3dadd( -65.9065, -107.839, 27.3614, 0.66 ) }
    dend_151 { pt3dadd( -66.7149, -108.534, 26.595, 0.74 ) }
    dend_151 { pt3dadd( -67.9464, -109.5, 25.5402, 1.4 ) }
    dend_151 { pt3dadd( -68.9381, -110.3, 24.769, 0.52 ) }
    dend_151 { pt3dadd( -69.5875, -110.839, 24.3091, 0.52 ) }
    dend_151 { pt3dadd( -70.7305, -111.758, 23.6082, 0.66 ) }
    dend_151 { pt3dadd( -71.5183, -112.331, 23.2202, 0.88 ) }
    dend_151 { pt3dadd( -72.8835, -113.249, 22.6537, 1.77 ) }
    dend_151 { pt3dadd( -74.4947, -114.337, 22.0789, 0.52 ) }
    dend_151 { pt3dadd( -75.4513, -115.067, 21.7503, 1.25 ) }
    dend_151 { pt3dadd( -76.6246, -116.207, 21.3199, 1.18 ) }
    dend_151 { pt3dadd( -77.7926, -117.639, 20.8505, 0.52 ) }
    dend_151 { pt3dadd( -78.5806, -118.766, 20.498, 1.33 ) }
    dend_151 { pt3dadd( -79.3318, -119.945, 20.132, 1.62 ) }
    dend_151 { pt3dadd( -80.0523, -121.073, 19.7652, 1.33 ) }
    dend_151 { pt3dadd( -81.2226, -122.813, 19.1328, 0.52 ) }
    dend_151 { pt3dadd( -81.7391, -123.47, 18.8358, 0.52 ) }
    dend_151 { pt3dadd( -82.4481, -124.096, 18.4902, 0.52 ) }
    dend_151 { pt3dadd( -83.3212, -124.645, 18.1643, 0.74 ) }
    dend_151 { pt3dadd( -84.5133, -125.307, 17.7643, 0.44 ) }
    dend_151 { pt3dadd( -85.2637, -125.742, 17.5186, 1.03 ) }
    dend_151 { pt3dadd( -86.2146, -126.447, 17.1977, 1.18 ) }
    dend_151 { pt3dadd( -87.3768, -127.809, 16.7346, 0.44 ) }
    dend_151 { pt3dadd( -87.9243, -128.662, 16.457, 0.44 ) }
    dend_151 { pt3dadd( -88.5872, -129.835, 16.036, 0.88 ) }
    dend_151 { pt3dadd( -89.2734, -131.056, 15.5502, 1.25 ) }
    dend_151 { pt3dadd( -90.0768, -132.301, 14.9814, 1.25 ) }
    dend_151 { pt3dadd( -91.1517, -133.762, 14.2191, 0.66 ) }
    dend_151 { pt3dadd( -92.1499, -134.929, 13.5489, 0.66 ) }
    dend_151 { pt3dadd( -93.1275, -135.904, 12.9487, 1.25 ) }
    dend_151 { pt3dadd( -94.1951, -136.866, 12.3253, 1.47 ) }
    dend_151 { pt3dadd( -95.2847, -137.863, 11.7058, 0.52 ) }
    dend_151 { pt3dadd( -95.8859, -138.457, 11.3786, 0.52 ) }
    dend_151 { pt3dadd( -96.262, -138.943, 11.2314, 0.52 ) }
    dend_151 { pt3dadd( -96.8128, -139.961, 11.2735, 0.74 ) }
    dend_151 { pt3dadd( -97.3157, -141.006, 11.4949, 1.03 ) }
    dend_151 { pt3dadd( -98.0261, -142.514, 11.9247, 0.44 ) }
    dend_151 { pt3dadd( -98.7448, -143.91, 12.3088, 0.59 ) }
    dend_151 { pt3dadd( -99.6772, -145.338, 12.5757, 0.81 ) }
    dend_151 { pt3dadd( -100.67, -146.416, 12.5497, 0.59 ) }
    dend_151 { pt3dadd( -101.886, -147.294, 12.2766, 1.33 ) }
    dend_151 { pt3dadd( -102.5, -147.604, 12.023, 1.33 ) }
    dend_151 { pt3dadd( -103.772, -148.129, 11.3072, 0.96 ) }
    dend_151 { pt3dadd( -105.121, -148.713, 10.3274, 0.96 ) }
    dend_151 { pt3dadd( -106.124, -149.242, 9.47773, 1.4 ) }
    dend_151 { pt3dadd( -107.089, -149.895, 8.64765, 0.52 ) }
    dend_151 { pt3dadd( -108.122, -150.831, 7.89838, 0.37 ) }
    dend_151 { pt3dadd( -108.604, -151.395, 7.65748, 0.66 ) }
    dend_151 { pt3dadd( -109.27, -152.282, 7.45303, 0.81 ) }
    dend_151 { pt3dadd( -110.361, -153.842, 7.21125, 0.59 ) }
    dend_151 { pt3dadd( -111.113, -154.938, 7.028, 0.96 ) }
    dend_151 { pt3dadd( -111.892, -155.945, 6.80592, 1.18 ) }
    dend_151 { pt3dadd( -113.044, -157.112, 6.44754, 0.88 ) }
    dend_151 { pt3dadd( -114.601, -158.194, 5.91935, 0.66 ) }
    dend_151 { pt3dadd( -115.158, -158.467, 5.7481, 0.81 ) }
    dend_151 { pt3dadd( -116.192, -158.853, 5.47392, 0.81 ) }
    dend_151 { pt3dadd( -117.791, -159.393, 5.10188, 1.25 ) }
    dend_151 { pt3dadd( -119.17, -159.889, 4.84434, 0.74 ) }
    dend_151 { pt3dadd( -120.662, -160.543, 4.59673, 1.11 ) }
    dend_151 { pt3dadd( -122.33, -161.535, 4.34489, 1.4 ) }
    dend_151 { pt3dadd( -123.467, -162.508, 4.10406, 0.66 ) }
    dend_151 { pt3dadd( -123.956, -163.171, 3.88117, 0.59 ) }
    dend_151 { pt3dadd( -124.58, -164.371, 3.36601, 1.03 ) }
    dend_151 { pt3dadd( -125.166, -165.562, 2.77144, 0.96 ) }
    dend_151 { pt3dadd( -125.646, -166.455, 2.22151, 1.25 ) }
    dend_151 { pt3dadd( -126.317, -167.445, 1.49382, 1.4 ) }
    dend_151 { pt3dadd( -127.349, -168.547, 0.601694, 0.81 ) }
    dend_151 { pt3dadd( -128.623, -169.56, -0.214298, 0.88 ) }
    dend_151 { pt3dadd( -130.02, -170.52, -0.889503, 0.88 ) }
    dend_151 { pt3dadd( -131.041, -171.243, -1.29107, 0.66 ) }
    dend_151 { pt3dadd( -131.808, -171.86, -1.55241, 0.66 ) }
    dend_151 { pt3dadd( -132.352, -172.455, -1.74606, 0.66 ) }
    dend_151 { pt3dadd( -132.974, -173.682, -2.09694, 0.66 ) }
    dend_151 { pt3dadd( -133.307, -175.046, -2.49451, 0.74 ) }
    dend_151 { pt3dadd( -133.542, -176.564, -2.92357, 0.81 ) }
    dend_151 { pt3dadd( -133.733, -177.808, -3.26921, 0.81 ) }
    dend_151 { pt3dadd( -134.073, -179.451, -3.71346, 0.59 ) }
    dend_151 { pt3dadd( -134.492, -180.749, -4.05545, 0.59 ) }
    dend_151 { pt3dadd( -135.172, -181.977, -4.39224, 0.81 ) }
    dend_151 { pt3dadd( -135.894, -182.761, -4.63627, 0.81 ) }
    dend_151 { pt3dadd( -136.994, -183.544, -4.89847, 0.74 ) }
    dend_151 { pt3dadd( -138.159, -184.13, -5.11067, 0.96 ) }
    dend_151 { pt3dadd( -139.449, -184.636, -5.33847, 1.4 ) }
    dend_151 { pt3dadd( -140.521, -185.032, -5.54281, 0.52 ) }
    dend_151 { pt3dadd( -141.075, -185.263, -5.69817, 0.81 ) }
    dend_151 { pt3dadd( -141.66, -185.616, -5.9655, 0.59 ) }
    dend_151 { pt3dadd( -142.22, -186.147, -6.38128, 0.74 ) }
    dend_151 { pt3dadd( -143.129, -187.322, -7.18921, 0.88 ) }
    dend_151 { pt3dadd( -143.686, -188.162, -7.70804, 0.74 ) }
    dend_151 { pt3dadd( -144.435, -189.326, -8.33874, 0.96 ) }
    dend_151 { pt3dadd( -145.202, -190.409, -8.85341, 1.25 ) }
    dend_151 { pt3dadd( -146.036, -191.373, -9.31174, 1.03 ) }
    dend_151 { pt3dadd( -147.053, -192.264, -9.76691, 0.81 ) }
    dend_151 { pt3dadd( -147.604, -192.633, -9.96469, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_151 { pt3dadd( -148.311, -193.079, -10.2169, 0.66 ) }
    dend_151 { pt3dadd( -149.358, -193.786, -10.5115, 0.66 ) }
    dend_151 { pt3dadd( -150.783, -194.857, -10.8958, 1.11 ) }
    dend_151 { pt3dadd( -151.689, -195.633, -11.234, 1.11 ) }
    dend_151 { pt3dadd( -152.813, -196.761, -11.8401, 0.66 ) }
    dend_151 { pt3dadd( -153.841, -198.059, -12.5995, 0.59 ) }
    dend_151 { pt3dadd( -154.739, -199.339, -13.364, 0.74 ) }
    dend_151 { pt3dadd( -155.296, -200.275, -13.9128, 0.96 ) }
    dend_151 { pt3dadd( -156.036, -201.785, -14.6777, 0.96 ) }
    dend_151 { pt3dadd( -156.446, -202.774, -15.1619, 1.18 ) }
    dend_151 { pt3dadd( -156.925, -204.141, -15.9376, 1.55 ) }
    // Section: dend_117, id: dend_117, parent: dend_101 (entry count 11/100)
    dend_117 { pt3dclear() }
    dend_117 { pt3dadd( -41.1214, -6.73696, 21.5817, 0.81 ) }
    dend_117 { pt3dadd( -41.9589, -7.30597, 22.4249, 0.81 ) }
    dend_117 { pt3dadd( -42.57, -7.90724, 23.0157, 0.81 ) }
    dend_117 { pt3dadd( -43.177, -8.64344, 23.5678, 0.96 ) }
    dend_117 { pt3dadd( -43.7399, -9.356, 23.9723, 1.33 ) }
    dend_117 { pt3dadd( -44.2943, -10.031, 24.28, 1.47 ) }
    dend_117 { pt3dadd( -45.5071, -11.4018, 24.7884, 0.96 ) }
    dend_117 { pt3dadd( -46.6212, -12.5828, 25.1111, 1.33 ) }
    dend_117 { pt3dadd( -47.3831, -13.3027, 25.2342, 1.25 ) }
    dend_117 { pt3dadd( -48.5413, -14.2632, 25.3115, 1.47 ) }
    dend_117 { pt3dadd( -49.6126, -15.0579, 25.3132, 1.33 ) }
    dend_117 { pt3dadd( -51.0346, -16.0105, 25.2932, 1.7 ) }
    dend_117 { pt3dadd( -52.4143, -16.8568, 25.3256, 1.33 ) }
    dend_117 { pt3dadd( -53.5162, -17.5167, 25.4052, 1.33 ) }
    dend_117 { pt3dadd( -54.8073, -18.2816, 25.5311, 0.88 ) }
    dend_117 { pt3dadd( -56.31, -19.1455, 25.6845, 0.96 ) }
    dend_117 { pt3dadd( -57.7877, -19.9402, 25.777, 1.25 ) }
    dend_117 { pt3dadd( -59.4171, -20.754, 25.7802, 1.33 ) }
    dend_117 { pt3dadd( -60.4721, -21.2808, 25.7156, 1.33 ) }
    dend_117 { pt3dadd( -61.6356, -21.8828, 25.5512, 1.62 ) }
    dend_117 { pt3dadd( -63.2504, -22.7836, 25.1698, 1.33 ) }
    dend_117 { pt3dadd( -64.5775, -23.6884, 24.6919, 1.03 ) }
    dend_117 { pt3dadd( -65.5336, -24.6621, 24.1289, 0.88 ) }
    dend_117 { pt3dadd( -66.0955, -25.6975, 23.5534, 0.96 ) }
    dend_117 { pt3dadd( -66.4311, -26.96, 22.9359, 1.03 ) }
    dend_117 { pt3dadd( -66.6108, -28.3625, 22.2975, 1.18 ) }
    dend_117 { pt3dadd( -66.7362, -30.3604, 21.4656, 1.25 ) }
    dend_117 { pt3dadd( -66.834, -31.8618, 20.8682, 1.25 ) }
    dend_117 { pt3dadd( -66.9865, -33.1939, 20.3615, 1.11 ) }
    dend_117 { pt3dadd( -67.3147, -34.4892, 19.8853, 1.11 ) }
    dend_117 { pt3dadd( -67.8565, -35.3554, 19.6343, 1.11 ) }
    dend_117 { pt3dadd( -68.7783, -35.862, 19.6263, 1.11 ) }
    dend_117 { pt3dadd( -70.2935, -36.2128, 19.8743, 1.03 ) }
    dend_117 { pt3dadd( -71.8139, -36.4063, 20.2038, 0.96 ) }
    dend_117 { pt3dadd( -73.1538, -36.5102, 20.481, 1.11 ) }
    dend_117 { pt3dadd( -74.8769, -36.5817, 20.783, 1.33 ) }
    dend_117 { pt3dadd( -76.5072, -36.6351, 20.9462, 1.47 ) }
    dend_117 { pt3dadd( -78.1085, -36.7038, 20.8505, 1.18 ) }
    dend_117 { pt3dadd( -79.4083, -36.8123, 20.5656, 0.74 ) }
    dend_117 { pt3dadd( -80.817, -37.0282, 19.9669, 0.74 ) }
    dend_117 { pt3dadd( -81.8328, -37.2788, 19.3389, 0.96 ) }
    dend_117 { pt3dadd( -82.8646, -37.6599, 18.5077, 1.11 ) }
    dend_117 { pt3dadd( -84.2714, -38.333, 17.2955, 1.55 ) }
    dend_117 { pt3dadd( -85.2819, -38.9051, 16.4561, 2.36 ) }
    dend_117 { pt3dadd( -86.4243, -39.6709, 15.6775, 1.84 ) }
    dend_117 { pt3dadd( -87.6384, -40.6324, 15.055, 1.55 ) }
    dend_117 { pt3dadd( -88.8175, -41.7212, 14.5985, 1.25 ) }
    dend_117 { pt3dadd( -90.0064, -42.9018, 14.2701, 1.33 ) }
    dend_117 { pt3dadd( -90.9103, -43.8479, 14.1167, 1.47 ) }
    dend_117 { pt3dadd( -92.141, -45.1516, 13.9416, 0.96 ) }
    dend_117 { pt3dadd( -93.4776, -46.5306, 13.809, 0.81 ) }
    dend_117 { pt3dadd( -94.6753, -47.7599, 13.6647, 1.03 ) }
    dend_117 { pt3dadd( -95.6464, -48.7816, 13.44, 1.4 ) }
    dend_117 { pt3dadd( -96.4508, -49.6991, 13.0684, 1.4 ) }
    dend_117 { pt3dadd( -97.0343, -50.4123, 12.6277, 1.4 ) }
    dend_117 { pt3dadd( -97.8646, -51.4698, 11.7576, 1.03 ) }
    dend_117 { pt3dadd( -98.6387, -52.5007, 10.7931, 1.18 ) }
    dend_117 { pt3dadd( -99.4431, -53.6237, 9.71635, 1.55 ) }
    dend_117 { pt3dadd( -100.121, -54.5902, 8.83511, 1.92 ) }
    dend_117 { pt3dadd( -100.792, -55.4952, 8.09766, 1.7 ) }
    dend_117 { pt3dadd( -101.956, -56.884, 7.19078, 0.74 ) }
    dend_117 { pt3dadd( -102.677, -57.5405, 6.88078, 0.96 ) }
    dend_117 { pt3dadd( -104.0, -58.3074, 6.6985, 1.7 ) }
    dend_117 { pt3dadd( -105.406, -58.7549, 6.73893, 1.25 ) }
    dend_117 { pt3dadd( -106.855, -59.0421, 6.88682, 0.81 ) }
    dend_117 { pt3dadd( -108.276, -59.2419, 7.07042, 1.11 ) }
    dend_117 { pt3dadd( -110.312, -59.4545, 7.29239, 1.25 ) }
    dend_117 { pt3dadd( -112.255, -59.6769, 7.42243, 1.7 ) }
    dend_117 { pt3dadd( -114.88, -60.0971, 7.42552, 1.18 ) }
    dend_117 { pt3dadd( -116.837, -60.5842, 7.2326, 0.96 ) }
    dend_117 { pt3dadd( -117.668, -60.9452, 7.01437, 1.11 ) }
    dend_117 { pt3dadd( -119.043, -62.048, 6.29262, 1.03 ) }
    dend_117 { pt3dadd( -119.746, -63.0885, 5.5984, 1.25 ) }
    dend_117 { pt3dadd( -120.368, -64.5505, 4.57953, 1.47 ) }
    dend_117 { pt3dadd( -120.727, -65.7156, 3.74009, 1.62 ) }
    dend_117 { pt3dadd( -121.117, -67.1175, 2.68145, 1.33 ) }
    dend_117 { pt3dadd( -121.508, -68.3045, 1.80838, 1.11 ) }
    dend_117 { pt3dadd( -122.112, -69.6981, 0.803974, 0.88 ) }
    dend_117 { pt3dadd( -122.585, -70.4296, 0.276383, 0.88 ) }
    dend_117 { pt3dadd( -123.378, -71.3068, -0.313655, 1.11 ) }
    dend_117 { pt3dadd( -124.185, -71.9449, -0.72073, 1.47 ) }
    dend_117 { pt3dadd( -125.623, -72.8568, -1.29047, 1.55 ) }
    dend_117 { pt3dadd( -126.968, -73.5606, -1.72136, 0.88 ) }
    dend_117 { pt3dadd( -127.947, -73.9888, -1.98209, 1.55 ) }
    dend_117 { pt3dadd( -129.071, -74.4623, -2.26122, 2.51 ) }
    dend_117 { pt3dadd( -130.092, -74.8714, -2.51879, 2.8 ) }
    // Section: dend_102, id: dend_102, parent: dend_101 (entry count 97/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( -41.1214, -6.73696, 21.5817, 1.11 ) }
    dend_102 { pt3dadd( -42.4745, -7.02103, 22.3756, 1.11 ) }
    dend_102 { pt3dadd( -43.6962, -7.48233, 23.1121, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_102 { pt3dadd( -44.7716, -8.04836, 23.7526, 0.74 ) }
    dend_102 { pt3dadd( -45.7615, -8.68833, 24.2768, 0.96 ) }
    dend_102 { pt3dadd( -46.6119, -9.27699, 24.6284, 0.74 ) }
    dend_102 { pt3dadd( -47.6418, -9.99907, 24.9156, 0.74 ) }
    dend_102 { pt3dadd( -48.4535, -10.6593, 25.0007, 1.11 ) }
    dend_102 { pt3dadd( -49.1015, -11.1626, 24.9494, 1.25 ) }
    dend_102 { pt3dadd( -50.0236, -11.7911, 24.762, 1.33 ) }
    dend_102 { pt3dadd( -51.1554, -12.4731, 24.4378, 1.4 ) }
    dend_102 { pt3dadd( -52.3871, -13.1591, 24.047, 1.25 ) }
    dend_102 { pt3dadd( -53.3443, -13.669, 23.7465, 1.03 ) }
    dend_102 { pt3dadd( -54.6837, -14.4082, 23.3891, 1.18 ) }
    dend_102 { pt3dadd( -55.863, -15.1139, 23.1092, 1.03 ) }
    dend_102 { pt3dadd( -57.0532, -15.9499, 22.834, 1.18 ) }
    dend_102 { pt3dadd( -57.8916, -16.7013, 22.5985, 1.33 ) }
    dend_102 { pt3dadd( -59.0442, -18.058, 22.1313, 1.18 ) }
    dend_102 { pt3dadd( -59.7842, -19.295, 21.6109, 1.62 ) }
    dend_102 { pt3dadd( -60.1204, -20.2117, 21.1019, 1.03 ) }
    dend_102 { pt3dadd( -60.3215, -21.4618, 20.1124, 1.11 ) }
    dend_102 { pt3dadd( -60.2984, -22.693, 18.8143, 1.25 ) }
    dend_102 { pt3dadd( -60.1821, -23.6198, 17.6229, 1.7 ) }
    dend_102 { pt3dadd( -60.0319, -24.5925, 16.2119, 1.18 ) }
    dend_102 { pt3dadd( -59.9374, -25.6593, 14.5285, 1.33 ) }
    dend_102 { pt3dadd( -60.0044, -26.6078, 12.9906, 1.7 ) }
    dend_102 { pt3dadd( -60.3411, -27.5663, 11.4379, 1.99 ) }
    dend_102 { pt3dadd( -60.8381, -28.1723, 10.5243, 1.47 ) }
    dend_102 { pt3dadd( -62.0229, -28.9619, 9.57141, 1.55 ) }
    dend_102 { pt3dadd( -63.3215, -29.5744, 9.09556, 1.62 ) }
    dend_102 { pt3dadd( -64.5983, -30.0825, 8.85223, 1.4 ) }
    dend_102 { pt3dadd( -65.6649, -30.4631, 8.72965, 1.99 ) }
    dend_102 { pt3dadd( -66.3975, -30.6953, 8.65147, 1.99 ) }
    dend_102 { pt3dadd( -68.4252, -31.3279, 8.30179, 1.03 ) }
    dend_102 { pt3dadd( -70.0239, -31.8469, 7.80071, 1.11 ) }
    dend_102 { pt3dadd( -71.1848, -32.2297, 7.35851, 1.47 ) }
    dend_102 { pt3dadd( -72.1407, -32.551, 6.9124, 1.77 ) }
    dend_102 { pt3dadd( -73.3134, -32.9637, 6.23811, 1.77 ) }
    dend_102 { pt3dadd( -74.643, -33.483, 5.30852, 1.99 ) }
    dend_102 { pt3dadd( -75.7361, -33.9804, 4.22219, 2.14 ) }
    // Section: dend_98, id: dend_98, parent: dend_90 (entry count 37/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 63.6403, -30.271, -45.6295, 0.29 ) }
    dend_98 { pt3dadd( 71.1704, -28.0603, -51.8065, 0.29 ) }
    dend_98 { pt3dadd( 78.6895, -25.4821, -57.8457, 0.29 ) }
    dend_98 { pt3dadd( 85.4347, -23.0232, -64.7841, 0.29 ) }
    dend_98 { pt3dadd( 93.4737, -22.438, -70.7014, 0.29 ) }
    dend_98 { pt3dadd( 100.313, -20.6087, -77.7512, 0.29 ) }
    dend_98 { pt3dadd( 107.388, -19.0076, -84.625, 0.29 ) }
    dend_98 { pt3dadd( 112.633, -15.735, -92.4494, 0.29 ) }
    dend_98 { pt3dadd( 118.327, -12.8491, -100.118, 0.29 ) }
    dend_98 { pt3dadd( 124.248, -9.11573, -107.209, 0.29 ) }
    dend_98 { pt3dadd( 129.789, -6.20035, -114.978, 0.29 ) }
    dend_98 { pt3dadd( 136.338, -4.02945, -122.2, 0.29 ) }
    dend_98 { pt3dadd( 142.314, -0.835072, -129.518, 0.29 ) }
    dend_98 { pt3dadd( 148.468, 4.11172, -135.55, 0.29 ) }
    dend_98 { pt3dadd( 153.601, 9.99783, -141.65, 0.29 ) }
    dend_98 { pt3dadd( 158.057, 16.9761, -147.028, 0.29 ) }
    // Section: dend_91, id: dend_91, parent: dend_90 (entry count 53/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 63.6403, -30.271, -45.6295, 0.29 ) }
    dend_91 { pt3dadd( 73.2495, -29.2548, -48.1942, 0.29 ) }
    dend_91 { pt3dadd( 83.1368, -28.9062, -49.6476, 0.29 ) }
    dend_91 { pt3dadd( 93.1224, -29.0111, -50.1729, 0.29 ) }
    dend_91 { pt3dadd( 103.039, -29.598, -49.0332, 0.29 ) }
    dend_91 { pt3dadd( 112.383, -31.8395, -46.3152, 0.29 ) }
    dend_91 { pt3dadd( 121.13, -35.9617, -43.9442, 0.29 ) }
    dend_91 { pt3dadd( 129.206, -41.549, -42.5546, 0.29 ) }
    dend_91 { pt3dadd( 138.042, -45.9579, -41.3389, 0.29 ) }
    dend_91 { pt3dadd( 147.41, -49.277, -40.5218, 0.29 ) }
    dend_91 { pt3dadd( 157.084, -51.6709, -39.9075, 0.29 ) }
    dend_91 { pt3dadd( 166.966, -52.703, -41.0175, 0.29 ) }
    dend_91 { pt3dadd( 176.074, -55.5556, -43.9292, 0.29 ) }
    dend_91 { pt3dadd( 184.938, -57.1583, -48.2562, 0.29 ) }
    dend_91 { pt3dadd( 193.25, -60.6864, -52.4783, 0.29 ) }
    dend_91 { pt3dadd( 201.706, -63.5603, -56.9287, 0.29 ) }
    dend_91 { pt3dadd( 210.292, -67.431, -60.1723, 0.29 ) }
    dend_91 { pt3dadd( 219.05, -70.8023, -63.5394, 0.29 ) }
    dend_91 { pt3dadd( 227.199, -76.0824, -65.605, 0.29 ) }
    dend_91 { pt3dadd( 236.046, -80.2153, -67.5471, 0.29 ) }
    dend_91 { pt3dadd( 245.231, -83.5991, -69.4402, 0.29 ) }
    dend_91 { pt3dadd( 253.889, -87.0166, -73.0107, 0.29 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 75/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -11.0181, -71.2932, -125.07, 0.29 ) }
    dend_83 { pt3dadd( -18.4813, -74.637, -130.774, 0.29 ) }
    dend_83 { pt3dadd( -26.1213, -77.8636, -136.313, 0.29 ) }
    dend_83 { pt3dadd( -32.9603, -82.5133, -141.834, 0.29 ) }
    dend_83 { pt3dadd( -39.648, -87.8927, -146.817, 0.29 ) }
    dend_83 { pt3dadd( -46.6159, -93.6068, -150.953, 0.29 ) }
    dend_83 { pt3dadd( -52.9196, -99.6832, -155.581, 0.29 ) }
    dend_83 { pt3dadd( -59.952, -105.869, -158.788, 0.29 ) }
    dend_83 { pt3dadd( -67.3299, -112.255, -160.422, 0.29 ) }
    dend_83 { pt3dadd( -74.5411, -118.511, -163.036, 0.29 ) }
    dend_83 { pt3dadd( -82.6736, -123.966, -164.634, 0.29 ) }
    dend_83 { pt3dadd( -91.3231, -128.561, -166.358, 0.29 ) }
    dend_83 { pt3dadd( -100.808, -131.637, -166.67, 0.29 ) }
    dend_83 { pt3dadd( -109.823, -135.615, -168.114, 0.29 ) }
    dend_83 { pt3dadd( -118.688, -139.6, -170.282, 0.29 ) }
    dend_83 { pt3dadd( -127.44, -144.277, -170.913, 0.29 ) }
    dend_83 { pt3dadd( -136.235, -148.755, -169.666, 0.29 ) }
    dend_83 { pt3dadd( -145.202, -153.043, -169.169, 0.29 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 93/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -11.0181, -71.2932, -125.07, 0.29 ) }
    dend_82 { pt3dadd( -8.66445, -72.8356, -134.659, 0.29 ) }
    dend_82 { pt3dadd( -4.99479, -75.1862, -143.644, 0.29 ) }
    dend_82 { pt3dadd( -0.945324, -78.0222, -152.312, 0.29 ) }
    dend_82 { pt3dadd( 4.16431, -80.4834, -160.529, 0.29 ) }
    dend_82 { pt3dadd( 11.1578, -83.5348, -166.955, 0.29 ) }
    dend_82 { pt3dadd( 16.7023, -87.5925, -174.162, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_82 { pt3dadd( 23.1408, -90.7237, -181.107, 0.29 ) }
    dend_82 { pt3dadd( 29.5175, -94.2569, -187.905, 0.29 ) }
    // Section: dend_78, id: dend_78, parent: dend_52 (entry count 2/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -40.893, -93.846, -38.078, 0.59 ) }
    dend_78 { pt3dadd( -48.4028, -100.128, -36.6361, 0.59 ) }
    dend_78 { pt3dadd( -55.7002, -106.794, -36.7194, 0.59 ) }
    dend_78 { pt3dadd( -63.0783, -113.368, -36.3925, 0.59 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 6/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -40.893, -93.846, -38.078, 0.37 ) }
    dend_53 { pt3dadd( -48.5351, -99.9857, -36.6835, 0.59 ) }
    dend_53 { pt3dadd( -55.7032, -106.462, -34.5628, 0.59 ) }
    dend_53 { pt3dadd( -62.9512, -113.166, -34.1337, 0.59 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 10/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 28.0431, -123.79, 25.1189, 0.52 ) }
    dend_49 { pt3dadd( 28.286, -125.099, 25.7603, 0.52 ) }
    dend_49 { pt3dadd( 28.5629, -126.058, 26.1899, 0.81 ) }
    dend_49 { pt3dadd( 29.005, -127.152, 26.5679, 0.66 ) }
    dend_49 { pt3dadd( 29.6301, -128.228, 26.7824, 0.37 ) }
    dend_49 { pt3dadd( 30.1046, -128.94, 26.8468, 0.22 ) }
    dend_49 { pt3dadd( 30.6284, -129.74, 26.9173, 0.22 ) }
    dend_49 { pt3dadd( 31.2007, -130.49, 26.9628, 0.52 ) }
    dend_49 { pt3dadd( 31.9004, -131.361, 27.0869, 1.03 ) }
    dend_49 { pt3dadd( 32.9222, -132.613, 27.4125, 0.22 ) }
    dend_49 { pt3dadd( 33.4346, -133.252, 27.6951, 0.52 ) }
    dend_49 { pt3dadd( 34.1083, -134.071, 28.2841, 0.96 ) }
    dend_49 { pt3dadd( 34.574, -134.566, 28.8181, 1.33 ) }
    dend_49 { pt3dadd( 35.4685, -135.38, 30.0602, 0.44 ) }
    dend_49 { pt3dadd( 35.9956, -135.803, 30.887, 0.22 ) }
    dend_49 { pt3dadd( 36.598, -136.247, 31.979, 0.15 ) }
    dend_49 { pt3dadd( 37.2174, -136.651, 33.173, 0.29 ) }
    dend_49 { pt3dadd( 37.7611, -136.979, 34.2495, 0.29 ) }
    dend_49 { pt3dadd( 38.1293, -137.246, 35.1502, 0.29 ) }
    dend_49 { pt3dadd( 38.2255, -137.411, 35.6688, 0.29 ) }
    dend_49 { pt3dadd( 38.1725, -137.785, 36.7344, 0.29 ) }
    dend_49 { pt3dadd( 38.0471, -137.981, 37.3127, 0.29 ) }
    dend_49 { pt3dadd( 37.8609, -138.202, 37.9867, 0.29 ) }
    dend_49 { pt3dadd( 37.607, -138.534, 39.0008, 0.52 ) }
    dend_49 { pt3dadd( 37.58, -138.752, 39.6525, 0.74 ) }
    dend_49 { pt3dadd( 37.7969, -139.121, 40.5394, 0.74 ) }
    dend_49 { pt3dadd( 38.0968, -139.511, 41.2911, 0.22 ) }
    dend_49 { pt3dadd( 38.4578, -139.97, 42.062, 0.22 ) }
    dend_49 { pt3dadd( 38.6894, -140.269, 42.5084, 0.37 ) }
    dend_49 { pt3dadd( 39.1415, -140.957, 43.401, 0.22 ) }
    dend_49 { pt3dadd( 39.637, -141.888, 44.4921, 0.22 ) }
    dend_49 { pt3dadd( 39.9327, -142.604, 45.2424, 0.22 ) }
    dend_49 { pt3dadd( 40.0987, -143.051, 45.6654, 0.88 ) }
    dend_49 { pt3dadd( 40.2944, -143.55, 46.1267, 1.33 ) }
    dend_49 { pt3dadd( 40.6882, -144.347, 46.8831, 0.52 ) }
    dend_49 { pt3dadd( 41.0732, -144.969, 47.4588, 0.29 ) }
    dend_49 { pt3dadd( 41.7197, -145.768, 48.14, 0.66 ) }
    dend_49 { pt3dadd( 42.4057, -146.51, 48.7489, 0.15 ) }
    dend_49 { pt3dadd( 42.8614, -146.968, 49.1287, 0.44 ) }
    dend_49 { pt3dadd( 43.5972, -147.683, 49.7399, 0.22 ) }
    dend_49 { pt3dadd( 44.1687, -148.266, 50.238, 1.4 ) }
    dend_49 { pt3dadd( 45.0709, -149.333, 51.1193, 0.22 ) }
    dend_49 { pt3dadd( 45.4854, -149.881, 51.5972, 0.74 ) }
    dend_49 { pt3dadd( 45.9185, -150.569, 52.2691, 0.37 ) }
    dend_49 { pt3dadd( 46.1826, -151.11, 52.8546, 0.37 ) }
    dend_49 { pt3dadd( 46.3768, -151.716, 53.6053, 0.37 ) }
    dend_49 { pt3dadd( 46.4573, -152.219, 54.2841, 0.59 ) }
    dend_49 { pt3dadd( 46.4243, -152.69, 54.939, 0.44 ) }
    dend_49 { pt3dadd( 46.2662, -153.348, 55.9001, 0.96 ) }
    dend_49 { pt3dadd( 46.0017, -153.968, 56.8767, 1.18 ) }
    dend_49 { pt3dadd( 45.6416, -154.586, 57.9203, 0.66 ) }
    dend_49 { pt3dadd( 45.3385, -155.004, 58.6611, 0.22 ) }
    dend_49 { pt3dadd( 44.946, -155.507, 59.484, 0.22 ) }
    dend_49 { pt3dadd( 44.6753, -155.891, 60.0054, 0.22 ) }
    dend_49 { pt3dadd( 44.5436, -156.146, 60.29, 0.22 ) }
    dend_49 { pt3dadd( 44.451, -156.446, 60.5851, 0.59 ) }
    dend_49 { pt3dadd( 44.3747, -156.864, 60.9948, 0.96 ) }
    dend_49 { pt3dadd( 44.1349, -157.809, 62.0161, 0.22 ) }
    dend_49 { pt3dadd( 43.9144, -158.441, 62.8281, 0.22 ) }
    dend_49 { pt3dadd( 43.758, -158.878, 63.4773, 0.22 ) }
    dend_49 { pt3dadd( 43.6177, -159.262, 64.0983, 0.37 ) }
    dend_49 { pt3dadd( 43.3871, -159.714, 64.908, 0.37 ) }
    dend_49 { pt3dadd( 42.9412, -160.295, 66.0534, 0.74 ) }
    dend_49 { pt3dadd( 42.3612, -160.798, 67.1006, 0.37 ) }
    dend_49 { pt3dadd( 41.7472, -161.262, 68.0403, 0.37 ) }
    dend_49 { pt3dadd( 41.4545, -161.48, 68.4702, 0.22 ) }
    dend_49 { pt3dadd( 40.9336, -161.926, 69.3185, 0.22 ) }
    dend_49 { pt3dadd( 40.6769, -162.199, 69.8214, 0.44 ) }
    dend_49 { pt3dadd( 40.2395, -162.789, 70.938, 0.96 ) }
    dend_49 { pt3dadd( 39.8769, -163.385, 72.1121, 0.44 ) }
    dend_49 { pt3dadd( 39.6449, -163.896, 73.2439, 0.59 ) }
    dend_49 { pt3dadd( 39.6412, -164.153, 73.9586, 0.59 ) }
    dend_49 { pt3dadd( 39.848, -164.401, 74.8132, 0.44 ) }
    dend_49 { pt3dadd( 40.2998, -164.672, 75.8664, 0.22 ) }
    dend_49 { pt3dadd( 40.7578, -164.877, 76.6233, 0.22 ) }
    dend_49 { pt3dadd( 41.1132, -165.032, 77.1108, 0.44 ) }
    dend_49 { pt3dadd( 41.6326, -165.236, 77.7512, 0.74 ) }
    dend_49 { pt3dadd( 42.0401, -165.395, 78.2491, 0.74 ) }
    dend_49 { pt3dadd( 42.4565, -165.559, 78.7478, 0.74 ) }
    dend_49 { pt3dadd( 42.9566, -165.766, 79.3097, 0.29 ) }
    dend_49 { pt3dadd( 43.4146, -165.977, 79.85, 0.29 ) }
    dend_49 { pt3dadd( 43.9542, -166.272, 80.4772, 0.29 ) }
    dend_49 { pt3dadd( 44.4793, -166.623, 81.0667, 0.52 ) }
    dend_49 { pt3dadd( 45.1875, -167.171, 81.8045, 0.88 ) }
    dend_49 { pt3dadd( 45.7851, -167.685, 82.3805, 0.22 ) }
    dend_49 { pt3dadd( 46.6519, -168.603, 83.2084, 0.15 ) }
    dend_49 { pt3dadd( 47.0296, -169.129, 83.553, 0.52 ) }
    dend_49 { pt3dadd( 47.4181, -169.836, 83.9132, 0.22 ) }
    dend_49 { pt3dadd( 47.7462, -170.593, 84.269, 0.07 ) }
    dend_49 { pt3dadd( 47.8979, -171.018, 84.4626, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_49 { pt3dadd( 48.165, -171.844, 84.867, 0.15 ) }
    dend_49 { pt3dadd( 48.2938, -172.283, 85.1347, 0.96 ) }
    dend_49 { pt3dadd( 48.4291, -172.998, 85.7342, 0.15 ) }
    dend_49 { pt3dadd( 48.4927, -173.76, 86.5521, 0.66 ) }
    dend_49 { pt3dadd( 48.4794, -174.351, 87.3256, 0.88 ) }
    dend_49 { pt3dadd( 48.4157, -175.053, 88.4156, 0.29 ) }
    dend_49 { pt3dadd( 48.3233, -175.68, 89.6002, 0.59 ) }
    dend_49 { pt3dadd( 48.1404, -176.455, 91.2887, 0.59 ) }
    dend_49 { pt3dadd( 47.9822, -176.913, 92.2886, 0.59 ) }
    dend_49 { pt3dadd( 47.8628, -177.24, 92.9657, 0.59 ) }
    dend_49 { pt3dadd( 47.7445, -177.536, 93.525, 0.59 ) }
    dend_49 { pt3dadd( 47.6057, -177.893, 94.1253, 0.59 ) }
    dend_49 { pt3dadd( 47.5395, -178.066, 94.368, 0.59 ) }
    dend_49 { pt3dadd( 47.0831, -179.364, 95.9386, 0.22 ) }
    dend_49 { pt3dadd( 46.7493, -180.423, 97.0741, 1.03 ) }
    dend_49 { pt3dadd( 46.5919, -181.144, 97.7604, 0.22 ) }
    dend_49 { pt3dadd( 46.566, -181.349, 97.9407, 0.22 ) }
    dend_49 { pt3dadd( 46.5862, -181.864, 98.3787, 0.22 ) }
    dend_49 { pt3dadd( 46.9722, -182.321, 98.7374, 0.22 ) }
    dend_49 { pt3dadd( 47.343, -182.413, 98.7064, 0.22 ) }
    dend_49 { pt3dadd( 49.1134, -182.699, 98.2314, 0.07 ) }
    dend_49 { pt3dadd( 49.9218, -182.805, 97.962, 0.07 ) }
    dend_49 { pt3dadd( 50.5182, -182.897, 97.7261, 0.29 ) }
    dend_49 { pt3dadd( 51.9127, -183.141, 97.1217, 0.07 ) }
    dend_49 { pt3dadd( 53.0141, -183.356, 96.6002, 0.15 ) }
    dend_49 { pt3dadd( 53.9847, -183.539, 96.085, 0.07 ) }
    dend_49 { pt3dadd( 55.1, -183.718, 95.3996, 0.07 ) }
    dend_49 { pt3dadd( 56.6328, -183.973, 94.4043, 0.07 ) }
    dend_49 { pt3dadd( 57.1087, -184.058, 94.1083, 0.22 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 29/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 28.0431, -123.79, 25.1189, 0.07 ) }
    dend_48 { pt3dadd( 29.0064, -124.168, 25.1987, 0.07 ) }
    dend_48 { pt3dadd( 29.6757, -124.43, 25.2542, 0.07 ) }
    dend_48 { pt3dadd( 30.2593, -124.659, 25.3025, 0.29 ) }
    dend_48 { pt3dadd( 30.8772, -124.901, 25.3538, 0.15 ) }
    dend_48 { pt3dadd( 31.3584, -125.089, 25.3936, 0.52 ) }
    // Section: dend_46, id: dend_46, parent: dend_38 (entry count 35/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -12.4224, -133.306, -28.1024, 1.11 ) }
    dend_46 { pt3dadd( -11.7207, -134.155, -28.4964, 1.11 ) }
    dend_46 { pt3dadd( -10.957, -135.171, -28.931, 0.88 ) }
    dend_46 { pt3dadd( -10.3101, -136.137, -29.3016, 1.18 ) }
    dend_46 { pt3dadd( -9.39772, -137.665, -29.8407, 1.11 ) }
    dend_46 { pt3dadd( -8.47387, -139.327, -30.3717, 0.59 ) }
    dend_46 { pt3dadd( -7.89989, -140.458, -30.705, 0.37 ) }
    dend_46 { pt3dadd( -7.34203, -141.746, -30.9729, 1.18 ) }
    dend_46 { pt3dadd( -7.01571, -142.782, -31.1172, 0.44 ) }
    dend_46 { pt3dadd( -6.88222, -143.451, -31.2054, 0.66 ) }
    dend_46 { pt3dadd( -6.8093, -144.175, -31.3489, 0.44 ) }
    dend_46 { pt3dadd( -6.77648, -145.125, -31.6486, 1.18 ) }
    dend_46 { pt3dadd( -6.78922, -146.359, -32.1759, 0.59 ) }
    dend_46 { pt3dadd( -6.80106, -147.478, -32.7238, 0.37 ) }
    dend_46 { pt3dadd( -6.85495, -148.512, -33.2588, 0.59 ) }
    dend_46 { pt3dadd( -6.95027, -149.677, -33.8256, 0.74 ) }
    dend_46 { pt3dadd( -7.05197, -150.672, -34.25, 0.74 ) }
    dend_46 { pt3dadd( -7.16189, -151.904, -34.6515, 1.03 ) }
    dend_46 { pt3dadd( -7.22128, -153.447, -34.9549, 0.37 ) }
    dend_46 { pt3dadd( -7.29101, -154.889, -35.0938, 0.44 ) }
    dend_46 { pt3dadd( -7.38927, -156.373, -35.088, 0.74 ) }
    dend_46 { pt3dadd( -7.46529, -157.459, -34.9736, 0.59 ) }
    dend_46 { pt3dadd( -7.5194, -158.746, -34.7234, 0.96 ) }
    dend_46 { pt3dadd( -7.43196, -160.266, -34.305, 0.37 ) }
    dend_46 { pt3dadd( -7.55397, -169.471, -37.6012, 0.37 ) }
    dend_46 { pt3dadd( -8.52036, -178.617, -40.9269, 0.37 ) }
    dend_46 { pt3dadd( -11.5934, -187.586, -43.3629, 0.37 ) }
    dend_46 { pt3dadd( -14.3414, -196.285, -46.9475, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 63/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -12.4224, -133.306, -28.1024, 0.15 ) }
    dend_39 { pt3dadd( -13.1677, -134.091, -28.3802, 0.15 ) }
    dend_39 { pt3dadd( -13.6494, -134.614, -28.5686, 0.15 ) }
    dend_39 { pt3dadd( -14.1415, -135.148, -28.7609, 0.15 ) }
    dend_39 { pt3dadd( -14.6683, -135.721, -28.9669, 0.15 ) }
    dend_39 { pt3dadd( -15.5126, -136.637, -29.297, 0.52 ) }
    dend_39 { pt3dadd( -16.2879, -137.48, -29.6001, 0.22 ) }
    dend_39 { pt3dadd( -16.7423, -138.127, -29.8407, 0.81 ) }
    dend_39 { pt3dadd( -23.797, -144.56, -32.4284, 0.81 ) }
    dend_39 { pt3dadd( -30.8401, -151.005, -35.0159, 0.81 ) }
    dend_39 { pt3dadd( -37.9303, -157.541, -37.2066, 0.81 ) }
    dend_39 { pt3dadd( -45.3731, -162.967, -40.8983, 0.81 ) }
    dend_39 { pt3dadd( -52.7832, -168.949, -43.6264, 0.81 ) }
    dend_39 { pt3dadd( -60.7754, -174.326, -46.0185, 0.81 ) }
    dend_39 { pt3dadd( -68.1208, -180.632, -48.0697, 0.81 ) }
    dend_39 { pt3dadd( -75.6938, -186.403, -50.8301, 0.81 ) }
    dend_39 { pt3dadd( -84.3548, -190.77, -53.0488, 0.81 ) }
    dend_39 { pt3dadd( -92.7339, -195.383, -55.7698, 0.81 ) }
    dend_39 { pt3dadd( -99.1924, -201.501, -60.1196, 0.81 ) }
    dend_39 { pt3dadd( -104.7, -208.008, -65.1321, 0.81 ) }
    dend_39 { pt3dadd( -109.114, -214.557, -71.0825, 0.81 ) }
    dend_39 { pt3dadd( -113.215, -221.198, -77.1469, 0.81 ) }
    dend_39 { pt3dadd( -116.252, -228.474, -83.0712, 0.81 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 86/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -7.95688, -43.4867, 1.65313, 0.59 ) }
    dend_34 { pt3dadd( -7.01314, -44.4165, 1.84832, 0.59 ) }
    dend_34 { pt3dadd( -6.30627, -44.9643, 2.15231, 0.44 ) }
    dend_34 { pt3dadd( -5.48819, -45.5388, 2.60293, 0.44 ) }
    dend_34 { pt3dadd( -4.77941, -46.0873, 3.08347, 0.44 ) }
    dend_34 { pt3dadd( -4.02726, -46.7234, 3.66322, 0.66 ) }
    dend_34 { pt3dadd( -3.14807, -47.5409, 4.41227, 0.88 ) }
    dend_34 { pt3dadd( -2.01588, -48.712, 5.5388, 0.88 ) }
    dend_34 { pt3dadd( -1.26959, -49.6169, 6.37584, 0.66 ) }
    dend_34 { pt3dadd( -0.250079, -51.222, 7.69834, 0.66 ) }
    dend_34 { pt3dadd( 0.266442, -52.6605, 8.61472, 0.44 ) }
    dend_34 { pt3dadd( 0.34429, -53.7276, 8.99996, 0.44 ) }
    dend_34 { pt3dadd( 0.273354, -54.5267, 9.10819, 0.44 ) }
    dend_34 { pt3dadd( 0.0545716, -56.0787, 9.08433, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_34 { pt3dadd( -0.243971, -58.1431, 8.85299, 0.88 ) }
    dend_34 { pt3dadd( -0.504948, -60.2732, 8.4565, 0.44 ) }
    dend_34 { pt3dadd( -0.608454, -61.8812, 8.12391, 0.44 ) }
    dend_34 { pt3dadd( -0.546617, -63.449, 7.85724, 0.59 ) }
    dend_34 { pt3dadd( -0.277755, -65.1449, 7.68721, 0.59 ) }
    dend_34 { pt3dadd( 0.0880902, -66.44, 7.66111, 0.59 ) }
    dend_34 { pt3dadd( 0.51885, -67.5633, 7.73846, 0.88 ) }
    dend_34 { pt3dadd( 1.05984, -68.8685, 7.9389, 0.37 ) }
    dend_34 { pt3dadd( 1.55759, -70.2951, 8.27509, 0.52 ) }
    dend_34 { pt3dadd( 1.75546, -71.1216, 8.49674, 0.96 ) }
    dend_34 { pt3dadd( 1.88539, -72.0862, 8.7683, 1.03 ) }
    dend_34 { pt3dadd( 1.9732, -73.4811, 9.17832, 0.52 ) }
    dend_34 { pt3dadd( 1.95775, -74.6292, 9.55423, 0.88 ) }
    dend_34 { pt3dadd( 1.81197, -75.8181, 9.95835, 0.74 ) }
    dend_34 { pt3dadd( 1.51816, -76.9096, 10.3128, 0.59 ) }
    dend_34 { pt3dadd( 1.06399, -78.0437, 10.6815, 0.52 ) }
    dend_34 { pt3dadd( 0.667979, -78.8615, 10.9581, 0.66 ) }
    dend_34 { pt3dadd( 0.0968292, -79.9373, 11.3204, 0.96 ) }
    dend_34 { pt3dadd( -0.379423, -80.8603, 11.6423, 0.96 ) }
    dend_34 { pt3dadd( -1.00306, -82.251, 12.1691, 1.18 ) }
    dend_34 { pt3dadd( -1.45685, -83.5861, 12.6807, 0.37 ) }
    dend_34 { pt3dadd( -1.57468, -84.3255, 12.9404, 0.37 ) }
    dend_34 { pt3dadd( -1.50842, -84.8701, 13.0794, 0.81 ) }
    dend_34 { pt3dadd( -1.23446, -85.6849, 13.2416, 1.03 ) }
    dend_34 { pt3dadd( -0.669892, -86.9686, 13.5216, 0.37 ) }
    dend_34 { pt3dadd( -0.302975, -87.8205, 13.7001, 0.37 ) }
    dend_34 { pt3dadd( -0.121991, -88.3845, 13.8279, 0.37 ) }
    dend_34 { pt3dadd( 0.0477731, -89.4385, 14.1492, 0.59 ) }
    dend_34 { pt3dadd( 0.0460957, -90.1002, 14.395, 1.03 ) }
    dend_34 { pt3dadd( -0.18563, -91.1697, 14.8989, 1.33 ) }
    dend_34 { pt3dadd( -0.743545, -92.5468, 15.6918, 0.59 ) }
    dend_34 { pt3dadd( -1.30917, -93.6089, 16.3896, 0.37 ) }
    dend_34 { pt3dadd( -1.87824, -94.5672, 17.0894, 0.81 ) }
    dend_34 { pt3dadd( -2.23445, -95.1414, 17.5776, 0.96 ) }
    dend_34 { pt3dadd( -2.89839, -96.3194, 18.7092, 0.22 ) }
    dend_34 { pt3dadd( -3.04288, -96.656, 19.1129, 0.22 ) }
    dend_34 { pt3dadd( -2.93534, -97.1271, 19.8617, 0.37 ) }
    dend_34 { pt3dadd( -2.64176, -97.4721, 20.4135, 0.66 ) }
    dend_34 { pt3dadd( -2.05976, -98.0415, 21.2502, 0.74 ) }
    dend_34 { pt3dadd( -1.42181, -98.6983, 22.2065, 0.44 ) }
    dend_34 { pt3dadd( -0.93117, -99.2842, 23.0165, 0.29 ) }
    dend_34 { pt3dadd( -0.386912, -100.159, 24.0998, 0.29 ) }
    dend_34 { pt3dadd( -0.141638, -100.805, 24.7713, 0.81 ) }
    dend_34 { pt3dadd( -0.0418404, -101.427, 25.3112, 0.81 ) }
    dend_34 { pt3dadd( -0.0148359, -102.654, 26.2157, 0.37 ) }
    dend_34 { pt3dadd( -0.061529, -103.577, 26.8217, 0.37 ) }
    dend_34 { pt3dadd( -0.104948, -104.565, 27.4572, 0.59 ) }
    dend_34 { pt3dadd( -0.0448149, -105.647, 28.1839, 0.52 ) }
    dend_34 { pt3dadd( 0.212481, -106.461, 28.7892, 0.37 ) }
    dend_34 { pt3dadd( 0.553176, -106.99, 29.2297, 0.37 ) }
    dend_34 { pt3dadd( 0.904939, -107.371, 29.5855, 0.37 ) }
    dend_34 { pt3dadd( 1.71442, -108.182, 30.4017, 0.66 ) }
    dend_34 { pt3dadd( 2.4061, -108.89, 31.1713, 1.33 ) }
    dend_34 { pt3dadd( 3.13857, -109.793, 32.0768, 0.59 ) }
    dend_34 { pt3dadd( 3.42109, -110.498, 32.6103, 0.29 ) }
    dend_34 { pt3dadd( 3.36161, -111.274, 33.063, 0.29 ) }
    dend_34 { pt3dadd( 2.91612, -112.457, 33.6449, 0.52 ) }
    dend_34 { pt3dadd( 2.60676, -113.057, 33.9418, 1.25 ) }
    dend_34 { pt3dadd( 2.02032, -114.096, 34.5052, 0.59 ) }
    dend_34 { pt3dadd( 1.52572, -114.983, 35.061, 0.44 ) }
    dend_34 { pt3dadd( 1.27288, -115.684, 35.5722, 0.44 ) }
    dend_34 { pt3dadd( 1.37098, -116.111, 35.9966, 0.44 ) }
    dend_34 { pt3dadd( 1.89601, -116.73, 36.7726, 0.44 ) }
    dend_34 { pt3dadd( 2.4992, -117.249, 37.5013, 0.74 ) }
    dend_34 { pt3dadd( 3.33464, -117.895, 38.4572, 1.03 ) }
    dend_34 { pt3dadd( 4.19608, -118.565, 39.4156, 1.25 ) }
    dend_34 { pt3dadd( 5.10506, -119.359, 40.4946, 0.52 ) }
    dend_34 { pt3dadd( 5.64141, -120.015, 41.3173, 0.52 ) }
    dend_34 { pt3dadd( 5.79399, -120.59, 41.9378, 0.52 ) }
    dend_34 { pt3dadd( 5.66832, -121.381, 42.7406, 0.74 ) }
    dend_34 { pt3dadd( 5.42079, -121.977, 43.3251, 1.03 ) }
    dend_34 { pt3dadd( 4.75358, -123.152, 44.4325, 0.44 ) }
    dend_34 { pt3dadd( 4.24318, -123.971, 45.1473, 0.59 ) }
    dend_34 { pt3dadd( 3.72562, -124.838, 45.8875, 0.59 ) }
    dend_34 { pt3dadd( 3.40559, -125.516, 46.4668, 0.88 ) }
    dend_34 { pt3dadd( 3.13366, -126.467, 47.3279, 1.55 ) }
    dend_34 { pt3dadd( 3.09399, -127.198, 48.0298, 0.74 ) }
    dend_34 { pt3dadd( 3.27155, -127.991, 48.8284, 0.22 ) }
    dend_34 { pt3dadd( 3.40123, -128.305, 49.1384, 0.22 ) }
    dend_34 { pt3dadd( 3.7617, -128.969, 49.7534, 0.22 ) }
    dend_34 { pt3dadd( 4.08161, -129.508, 50.2331, 0.22 ) }
    dend_34 { pt3dadd( 4.48034, -130.07, 50.7729, 0.22 ) }
    dend_34 { pt3dadd( 4.82988, -130.479, 51.2541, 0.74 ) }
    dend_34 { pt3dadd( 5.06741, -130.711, 51.5968, 1.33 ) }
    dend_34 { pt3dadd( 5.78915, -131.33, 52.7075, 0.37 ) }
    dend_34 { pt3dadd( 6.6213, -131.987, 54.0257, 0.59 ) }
    dend_34 { pt3dadd( 7.22959, -132.449, 55.0076, 0.37 ) }
    dend_34 { pt3dadd( 7.92852, -132.991, 56.1976, 0.66 ) }
    dend_34 { pt3dadd( 8.54297, -133.502, 57.2759, 0.96 ) }
    dend_34 { pt3dadd( 9.13985, -134.05, 58.3255, 0.96 ) }
    dend_34 { pt3dadd( 9.49481, -134.441, 58.9218, 0.44 ) }
    dend_34 { pt3dadd( 9.83417, -135.084, 59.4935, 0.44 ) }
    dend_34 { pt3dadd( 10.1337, -136.169, 59.9942, 0.37 ) }
    dend_34 { pt3dadd( 10.3168, -137.189, 60.2733, 0.66 ) }
    dend_34 { pt3dadd( 10.4378, -138.172, 60.4534, 1.55 ) }
    dend_34 { pt3dadd( 10.512, -139.21, 60.5987, 1.84 ) }
    dend_34 { pt3dadd( 10.5416, -140.459, 60.7644, 0.66 ) }
    dend_34 { pt3dadd( 10.5297, -141.696, 60.9829, 0.29 ) }
    dend_34 { pt3dadd( 10.5047, -142.417, 61.1686, 0.52 ) }
    dend_34 { pt3dadd( 10.4228, -143.311, 61.4564, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_34 { pt3dadd( 10.2606, -144.344, 61.8399, 1.25 ) }
    dend_34 { pt3dadd( 10.0358, -145.295, 62.2523, 0.37 ) }
    dend_34 { pt3dadd( 9.58582, -146.685, 62.9809, 0.37 ) }
    dend_34 { pt3dadd( 9.20161, -147.642, 63.5811, 0.37 ) }
    dend_34 { pt3dadd( 8.95658, -148.193, 63.9747, 1.11 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 5/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -7.95688, -43.4867, 1.65313, 0.44 ) }
    dend_31 { pt3dadd( -7.01347, -43.5628, 0.816538, 0.44 ) }
    dend_31 { pt3dadd( -6.00806, -43.5669, 0.00293754, 0.44 ) }
    dend_31 { pt3dadd( -4.53501, -43.4878, -1.07546, 0.81 ) }
    dend_31 { pt3dadd( -3.56602, -43.4226, -1.68668, 0.81 ) }
    dend_31 { pt3dadd( -2.73817, -43.3755, -2.1506, 0.88 ) }
    dend_31 { pt3dadd( -1.43681, -43.3093, -2.81086, 1.03 ) }
    dend_31 { pt3dadd( -0.0363751, -43.2763, -3.36525, 0.96 ) }
    dend_31 { pt3dadd( 1.11644, -43.2691, -3.72562, 0.96 ) }
    dend_31 { pt3dadd( 2.68765, -43.3237, -4.12102, 0.88 ) }
    dend_31 { pt3dadd( 3.95367, -43.4467, -4.43568, 1.18 ) }
    dend_31 { pt3dadd( 4.74754, -43.602, -4.66131, 1.18 ) }
    dend_31 { pt3dadd( 6.25148, -44.0706, -5.16483, 0.81 ) }
    dend_31 { pt3dadd( 7.23241, -44.4674, -5.55187, 0.96 ) }
    dend_31 { pt3dadd( 8.22412, -44.918, -6.0227, 0.96 ) }
    dend_31 { pt3dadd( 9.1255, -45.3635, -6.55604, 0.96 ) }
    dend_31 { pt3dadd( 10.0918, -45.8856, -7.25096, 0.81 ) }
    dend_31 { pt3dadd( 11.183, -46.5779, -8.23, 0.59 ) }
    dend_31 { pt3dadd( 11.7949, -47.0481, -8.92971, 0.59 ) }
    dend_31 { pt3dadd( 12.0466, -47.28, -9.24951, 0.59 ) }
    dend_31 { pt3dadd( 12.4163, -47.6528, -9.72243, 0.59 ) }
    dend_31 { pt3dadd( 12.7828, -48.0423, -10.0275, 0.59 ) }
    dend_31 { pt3dadd( 13.5316, -48.7635, -10.209, 0.59 ) }
    dend_31 { pt3dadd( 13.99, -49.1251, -10.1065, 0.74 ) }
    dend_31 { pt3dadd( 14.7468, -49.6625, -9.90448, 0.59 ) }
    dend_31 { pt3dadd( 15.5975, -50.223, -9.75063, 0.81 ) }
    dend_31 { pt3dadd( 16.8923, -51.0141, -9.71215, 0.88 ) }
    dend_31 { pt3dadd( 17.9377, -51.6328, -9.91901, 0.52 ) }
    dend_31 { pt3dadd( 18.8866, -52.2219, -10.4051, 0.52 ) }
    dend_31 { pt3dadd( 19.7597, -52.8548, -11.2397, 0.52 ) }
    dend_31 { pt3dadd( 20.3733, -53.4111, -12.3187, 0.96 ) }
    dend_31 { pt3dadd( 20.8674, -54.0582, -14.0027, 0.96 ) }
    dend_31 { pt3dadd( 21.0478, -54.5668, -15.6751, 0.81 ) }
    dend_31 { pt3dadd( 21.0268, -54.8513, -16.6869, 0.81 ) }
    dend_31 { pt3dadd( 20.9352, -55.0205, -17.2764, 0.81 ) }
    dend_31 { pt3dadd( 20.5525, -55.417, -18.4708, 0.74 ) }
    dend_31 { pt3dadd( 20.1395, -55.7866, -19.3327, 1.11 ) }
    dend_31 { pt3dadd( 19.604, -56.3094, -20.2217, 1.33 ) }
    dend_31 { pt3dadd( 19.2018, -56.8106, -20.8294, 1.47 ) }
    dend_31 { pt3dadd( 18.7438, -57.7976, -21.6553, 0.52 ) }
    dend_31 { pt3dadd( 18.5343, -58.7274, -22.2089, 0.52 ) }
    dend_31 { pt3dadd( 18.486, -59.5188, -22.5234, 0.52 ) }
    dend_31 { pt3dadd( 18.526, -60.412, -22.7544, 0.96 ) }
    dend_31 { pt3dadd( 18.6271, -61.1567, -22.9132, 0.96 ) }
    dend_31 { pt3dadd( 18.8292, -62.1368, -23.1161, 0.66 ) }
    dend_31 { pt3dadd( 19.0769, -63.1638, -23.3269, 1.03 ) }
    dend_31 { pt3dadd( 19.377, -64.5137, -23.6177, 1.33 ) }
    dend_31 { pt3dadd( 19.6347, -65.9995, -23.9559, 0.52 ) }
    dend_31 { pt3dadd( 19.7682, -67.2218, -24.231, 0.96 ) }
    dend_31 { pt3dadd( 19.8379, -68.8849, -24.6528, 0.52 ) }
    dend_31 { pt3dadd( 19.7925, -69.7536, -24.8989, 0.74 ) }
    dend_31 { pt3dadd( 19.6855, -70.6739, -25.2016, 0.74 ) }
    dend_31 { pt3dadd( 19.5654, -71.3383, -25.4604, 0.74 ) }
    dend_31 { pt3dadd( 19.3026, -72.4371, -25.9276, 0.59 ) }
    dend_31 { pt3dadd( 18.9567, -73.501, -26.4074, 0.88 ) }
    dend_31 { pt3dadd( 18.5033, -74.5604, -26.8983, 1.18 ) }
    dend_31 { pt3dadd( 17.8409, -75.8792, -27.4836, 0.52 ) }
    dend_31 { pt3dadd( 17.2261, -76.8904, -27.8728, 0.66 ) }
    dend_31 { pt3dadd( 16.8244, -77.4278, -28.0323, 0.66 ) }
    dend_31 { pt3dadd( 16.0095, -78.2656, -28.1186, 0.52 ) }
    dend_31 { pt3dadd( 14.8776, -79.1724, -27.8957, 0.74 ) }
    dend_31 { pt3dadd( 14.0527, -79.7207, -27.5699, 0.74 ) }
    dend_31 { pt3dadd( 12.8856, -80.4471, -26.9574, 0.44 ) }
    dend_31 { pt3dadd( 12.1702, -80.9356, -26.481, 0.74 ) }
    dend_31 { pt3dadd( 11.4219, -81.5564, -25.8754, 0.96 ) }
    dend_31 { pt3dadd( 10.7711, -82.2946, -25.2197, 0.44 ) }
    dend_31 { pt3dadd( 10.3706, -82.9866, -24.717, 0.44 ) }
    dend_31 { pt3dadd( 10.1993, -83.6546, -24.3548, 0.44 ) }
    dend_31 { pt3dadd( 10.3031, -84.5428, -24.0915, 0.66 ) }
    dend_31 { pt3dadd( 10.5833, -85.3292, -24.0361, 0.66 ) }
    dend_31 { pt3dadd( 10.9675, -86.1127, -24.0986, 0.96 ) }
    dend_31 { pt3dadd( 11.2889, -86.6776, -24.1906, 1.18 ) }
    dend_31 { pt3dadd( 12.025, -87.8739, -24.416, 0.88 ) }
    dend_31 { pt3dadd( 12.899, -89.3449, -24.6693, 0.66 ) }
    dend_31 { pt3dadd( 13.2437, -89.9874, -24.755, 0.66 ) }
    dend_31 { pt3dadd( 13.718, -91.0039, -24.8578, 1.18 ) }
    dend_31 { pt3dadd( 14.2832, -92.3722, -24.972, 0.66 ) }
    dend_31 { pt3dadd( 14.7021, -93.5499, -25.0404, 0.66 ) }
    dend_31 { pt3dadd( 15.0798, -94.8069, -25.1014, 0.88 ) }
    dend_31 { pt3dadd( 15.3372, -95.7273, -25.1654, 0.88 ) }
    dend_31 { pt3dadd( 15.6959, -96.8689, -25.3509, 0.52 ) }
    dend_31 { pt3dadd( 16.0443, -97.831, -25.652, 0.52 ) }
    dend_31 { pt3dadd( 16.2426, -98.339, -25.9072, 0.52 ) }
    dend_31 { pt3dadd( 16.5733, -99.1516, -26.5052, 0.52 ) }
    dend_31 { pt3dadd( 16.8516, -99.8284, -27.1882, 0.74 ) }
    dend_31 { pt3dadd( 17.1226, -100.54, -28.0695, 0.74 ) }
    dend_31 { pt3dadd( 17.2932, -100.994, -28.7116, 0.74 ) }
    dend_31 { pt3dadd( 17.4008, -101.385, -29.325, 0.81 ) }
    dend_31 { pt3dadd( 17.4887, -101.902, -30.2246, 0.52 ) }
    dend_31 { pt3dadd( 17.4397, -102.476, -31.2913, 0.52 ) }
    dend_31 { pt3dadd( 17.0336, -102.938, -32.3553, 0.66 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 96/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -43.2037, -89.6898, 2.8488, 0.74 ) }
    dend_23 { pt3dadd( -44.1483, -90.1636, 3.52515, 0.74 ) }
    dend_23 { pt3dadd( -44.739, -90.5055, 4.01982, 0.81 ) }
    dend_23 { pt3dadd( -45.2887, -90.865, 4.50428, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_23 { pt3dadd( -45.9244, -91.3279, 5.06291, 0.59 ) }
    dend_23 { pt3dadd( -46.749, -91.9805, 5.71247, 1.03 ) }
    dend_23 { pt3dadd( -47.5915, -92.6671, 6.2689, 0.74 ) }
    dend_23 { pt3dadd( -48.5536, -93.5154, 6.75874, 0.74 ) }
    dend_23 { pt3dadd( -49.5041, -94.3882, 7.03066, 0.96 ) }
    dend_23 { pt3dadd( -50.3399, -95.1803, 7.04524, 0.74 ) }
    dend_23 { pt3dadd( -51.3488, -96.089, 6.78038, 1.25 ) }
    dend_23 { pt3dadd( -52.2547, -96.8439, 6.31873, 0.74 ) }
    dend_23 { pt3dadd( -53.296, -97.608, 5.63309, 0.96 ) }
    dend_23 { pt3dadd( -53.9642, -98.0365, 5.1472, 1.03 ) }
    dend_23 { pt3dadd( -54.7794, -98.4673, 4.56313, 1.03 ) }
    dend_23 { pt3dadd( -55.8122, -98.9059, 3.91148, 1.03 ) }
    dend_23 { pt3dadd( -56.7289, -99.1992, 3.49168, 0.74 ) }
    dend_23 { pt3dadd( -58.49, -99.6405, 3.00213, 0.52 ) }
    dend_23 { pt3dadd( -59.0828, -99.7699, 2.94691, 0.52 ) }
    dend_23 { pt3dadd( -60.1995, -100.014, 3.0506, 0.66 ) }
    dend_23 { pt3dadd( -61.0377, -100.244, 3.32324, 0.66 ) }
    dend_23 { pt3dadd( -62.2508, -100.602, 3.93142, 0.81 ) }
    dend_23 { pt3dadd( -62.9502, -100.827, 4.43339, 0.81 ) }
    dend_23 { pt3dadd( -63.6232, -101.102, 5.13658, 0.96 ) }
    dend_23 { pt3dadd( -64.2739, -101.478, 5.98023, 1.18 ) }
    dend_23 { pt3dadd( -64.7386, -101.942, 6.80352, 1.33 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 22/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -43.2037, -89.6898, 2.8488, 0.96 ) }
    dend_20 { pt3dadd( -43.7532, -90.3811, 3.45097, 0.96 ) }
    dend_20 { pt3dadd( -44.2171, -90.8743, 3.97069, 0.66 ) }
    dend_20 { pt3dadd( -44.8839, -91.5022, 4.69835, 1.03 ) }
    dend_20 { pt3dadd( -45.3914, -91.9937, 5.25025, 1.4 ) }
    dend_20 { pt3dadd( -45.975, -92.5802, 5.87666, 1.33 ) }
    dend_20 { pt3dadd( -46.7018, -93.3208, 6.57821, 1.11 ) }
    dend_20 { pt3dadd( -47.3509, -93.941, 7.09062, 0.96 ) }
    dend_20 { pt3dadd( -48.0522, -94.6058, 7.50389, 1.03 ) }
    dend_20 { pt3dadd( -49.1323, -95.6668, 7.83342, 1.03 ) }
    dend_20 { pt3dadd( -50.0502, -96.65, 7.79047, 1.11 ) }
    dend_20 { pt3dadd( -50.8948, -97.6024, 7.41436, 0.74 ) }
    dend_20 { pt3dadd( -51.9129, -98.7894, 6.61049, 1.03 ) }
    dend_20 { pt3dadd( -52.4478, -99.3861, 6.05929, 1.4 ) }
    dend_20 { pt3dadd( -53.0446, -99.9787, 5.33581, 1.7 ) }
    dend_20 { pt3dadd( -53.8043, -100.61, 4.37438, 1.62 ) }
    dend_20 { pt3dadd( -54.6098, -101.21, 3.40057, 0.96 ) }
    dend_20 { pt3dadd( -55.359, -101.733, 2.66309, 1.11 ) }
    dend_20 { pt3dadd( -56.3644, -102.396, 1.95319, 1.25 ) }
    dend_20 { pt3dadd( -57.4524, -103.06, 1.50228, 0.81 ) }
    dend_20 { pt3dadd( -58.5401, -103.682, 1.41365, 0.88 ) }
    dend_20 { pt3dadd( -59.6633, -104.322, 1.72232, 0.88 ) }
    dend_20 { pt3dadd( -61.0891, -105.255, 2.51041, 1.03 ) }
    dend_20 { pt3dadd( -62.0511, -106.001, 3.17817, 0.88 ) }
    dend_20 { pt3dadd( -63.2114, -107.167, 4.14557, 1.33 ) }
    dend_20 { pt3dadd( -64.0184, -108.16, 4.92631, 1.25 ) }
    dend_20 { pt3dadd( -64.598, -109.025, 5.56519, 1.25 ) }
    dend_20 { pt3dadd( -65.2344, -110.193, 6.39234, 0.74 ) }
    dend_20 { pt3dadd( -65.7994, -111.627, 7.34165, 0.59 ) }
    dend_20 { pt3dadd( -66.1846, -113.175, 8.35809, 0.52 ) }
    dend_20 { pt3dadd( -66.2807, -114.104, 8.9939, 0.96 ) }
    dend_20 { pt3dadd( -66.2654, -115.217, 9.90564, 1.11 ) }
    dend_20 { pt3dadd( -66.1503, -116.138, 10.8938, 1.33 ) }
    dend_20 { pt3dadd( -65.8962, -117.228, 12.6605, 1.11 ) }
    dend_20 { pt3dadd( -65.7181, -117.848, 14.1986, 1.11 ) }
    dend_20 { pt3dadd( -65.6512, -118.097, 15.2204, 1.11 ) }
    dend_20 { pt3dadd( -65.6662, -118.306, 16.4339, 1.11 ) }
    dend_20 { pt3dadd( -65.7437, -118.408, 17.0987, 1.11 ) }
    dend_20 { pt3dadd( -66.1067, -118.644, 18.4246, 1.11 ) }
    dend_20 { pt3dadd( -66.6696, -118.933, 19.642, 0.74 ) }
    dend_20 { pt3dadd( -67.4687, -119.404, 20.877, 0.59 ) }
    dend_20 { pt3dadd( -68.168, -119.906, 21.7965, 0.59 ) }
    dend_20 { pt3dadd( -68.723, -120.433, 22.6125, 0.74 ) }
    dend_20 { pt3dadd( -69.0389, -120.844, 23.2132, 0.96 ) }
    dend_20 { pt3dadd( -69.3622, -121.528, 24.2112, 0.74 ) }
    dend_20 { pt3dadd( -69.4693, -122.203, 25.3551, 0.96 ) }
    dend_20 { pt3dadd( -69.3952, -122.713, 26.4212, 1.11 ) }
    dend_20 { pt3dadd( -69.1097, -123.742, 28.9325, 1.47 ) }
    dend_20 { pt3dadd( -69.0169, -124.111, 29.8818, 1.47 ) }
    dend_20 { pt3dadd( -68.9075, -124.69, 31.348, 1.03 ) }
    dend_20 { pt3dadd( -68.8802, -125.26, 32.7393, 0.96 ) }
    dend_20 { pt3dadd( -69.0338, -125.788, 33.9464, 0.96 ) }
    dend_20 { pt3dadd( -69.5387, -126.305, 34.8358, 0.96 ) }
    dend_20 { pt3dadd( -70.6722, -126.927, 35.6649, 0.81 ) }
    dend_20 { pt3dadd( -71.8051, -127.447, 36.2619, 0.59 ) }
    dend_20 { pt3dadd( -72.9173, -127.964, 36.7453, 0.44 ) }
    dend_20 { pt3dadd( -74.0573, -128.577, 37.2089, 0.44 ) }
    dend_20 { pt3dadd( -75.289, -129.34, 37.736, 0.59 ) }
    dend_20 { pt3dadd( -76.4229, -130.118, 38.3279, 0.96 ) }
    dend_20 { pt3dadd( -77.4305, -130.815, 38.9877, 1.11 ) }
    dend_20 { pt3dadd( -78.6249, -131.622, 39.9579, 0.81 ) }
    dend_20 { pt3dadd( -79.9715, -132.469, 41.1806, 0.81 ) }
    dend_20 { pt3dadd( -81.0634, -133.106, 42.2149, 0.66 ) }
    dend_20 { pt3dadd( -82.0803, -133.654, 43.202, 0.96 ) }
    dend_20 { pt3dadd( -83.299, -134.252, 44.3146, 0.81 ) }
    dend_20 { pt3dadd( -84.2757, -134.7, 45.1694, 0.66 ) }
    dend_20 { pt3dadd( -84.9666, -135.071, 45.7383, 0.44 ) }
    dend_20 { pt3dadd( -85.6895, -135.683, 46.3068, 0.44 ) }
    dend_20 { pt3dadd( -86.3712, -136.606, 46.8172, 0.66 ) }
    dend_20 { pt3dadd( -87.2405, -138.084, 47.4202, 0.88 ) }
    dend_20 { pt3dadd( -87.8023, -139.052, 47.7887, 0.96 ) }
    dend_20 { pt3dadd( -88.5424, -140.321, 48.3126, 0.44 ) }
    dend_20 { pt3dadd( -89.0629, -141.209, 48.7352, 0.59 ) }
    dend_20 { pt3dadd( -89.5566, -142.028, 49.2005, 1.11 ) }
    dend_20 { pt3dadd( -89.9946, -142.751, 49.7022, 1.11 ) }
    dend_20 { pt3dadd( -90.6701, -144.081, 50.8147, 0.81 ) }
    dend_20 { pt3dadd( -90.8413, -144.822, 51.469, 0.81 ) }
    dend_20 { pt3dadd( -90.7183, -145.583, 52.0745, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_20 { pt3dadd( -90.4514, -146.128, 52.4339, 0.59 ) }
    dend_20 { pt3dadd( -89.7049, -147.292, 53.0685, 0.88 ) }
    dend_20 { pt3dadd( -88.6619, -148.857, 53.8121, 0.66 ) }
    dend_20 { pt3dadd( -87.7524, -150.296, 54.4211, 1.11 ) }
    dend_20 { pt3dadd( -87.1233, -151.464, 54.8735, 1.25 ) }
    dend_20 { pt3dadd( -86.3652, -153.257, 55.5112, 0.74 ) }
    dend_20 { pt3dadd( -85.9928, -154.659, 55.9608, 0.59 ) }
    dend_20 { pt3dadd( -85.8651, -156.415, 56.4722, 0.66 ) }
    dend_20 { pt3dadd( -86.027, -157.847, 56.8739, 0.96 ) }
    dend_20 { pt3dadd( -86.3419, -159.024, 57.2258, 1.25 ) }
    dend_20 { pt3dadd( -86.7554, -160.079, 57.5874, 1.4 ) }
    dend_20 { pt3dadd( -87.0875, -160.756, 57.8373, 1.11 ) }
    dend_20 { pt3dadd( -87.4155, -161.425, 58.1326, 0.44 ) }
    dend_20 { pt3dadd( -87.5605, -161.849, 58.3706, 0.44 ) }
    dend_20 { pt3dadd( -87.6586, -162.473, 58.8328, 0.44 ) }
    dend_20 { pt3dadd( -87.7152, -163.03, 59.338, 0.44 ) }
    dend_20 { pt3dadd( -87.7927, -163.745, 60.0672, 0.66 ) }
    dend_20 { pt3dadd( -87.9458, -164.603, 61.0135, 1.03 ) }
    dend_20 { pt3dadd( -88.1944, -165.359, 61.8839, 0.88 ) }
    dend_20 { pt3dadd( -88.5429, -166.097, 62.7123, 1.03 ) }
    dend_20 { pt3dadd( -88.9802, -166.874, 63.534, 1.55 ) }
    dend_20 { pt3dadd( -89.6542, -168.044, 64.6634, 0.74 ) }
    dend_20 { pt3dadd( -90.0463, -168.776, 65.3003, 0.74 ) }
    dend_20 { pt3dadd( -90.494, -169.96, 66.1431, 1.11 ) }
    dend_20 { pt3dadd( -90.6319, -170.771, 66.5977, 0.52 ) }
    dend_20 { pt3dadd( -90.5895, -171.518, 66.9184, 0.81 ) }
    dend_20 { pt3dadd( -90.3472, -172.726, 67.3256, 1.18 ) }
    dend_20 { pt3dadd( -90.0825, -173.75, 67.5951, 1.03 ) }
    dend_20 { pt3dadd( -89.7502, -175.22, 67.9191, 0.66 ) }
    dend_20 { pt3dadd( -89.5915, -176.317, 68.1327, 0.44 ) }
    dend_20 { pt3dadd( -89.586, -177.19, 68.3028, 1.03 ) }
    dend_20 { pt3dadd( -89.849, -178.651, 68.5668, 0.44 ) }
    dend_20 { pt3dadd( -90.188, -179.614, 68.7078, 0.74 ) }
    dend_20 { pt3dadd( -90.9006, -181.197, 68.8471, 0.96 ) }
    dend_20 { pt3dadd( -91.5488, -182.51, 68.9966, 0.66 ) }
    dend_20 { pt3dadd( -91.875, -183.175, 69.096, 1.25 ) }
    dend_20 { pt3dadd( -92.3926, -184.29, 69.3631, 1.77 ) }
    dend_20 { pt3dadd( -92.9171, -185.587, 69.8395, 0.59 ) }
    dend_20 { pt3dadd( -93.3176, -186.699, 70.3939, 0.22 ) }
    dend_20 { pt3dadd( -93.9294, -188.583, 71.5658, 0.44 ) }
    dend_20 { pt3dadd( -94.1933, -189.353, 72.0888, 0.66 ) }
    dend_20 { pt3dadd( -94.5587, -190.472, 72.8293, 0.66 ) }
    dend_20 { pt3dadd( -94.8463, -191.432, 73.4292, 0.59 ) }
    dend_20 { pt3dadd( -95.1195, -192.366, 73.928, 0.88 ) }
    dend_20 { pt3dadd( -95.2835, -192.894, 74.1068, 1.18 ) }
    dend_20 { pt3dadd( -95.7442, -194.395, 74.2649, 1.25 ) }
    dend_20 { pt3dadd( -96.1648, -195.888, 74.2555, 0.52 ) }
    dend_20 { pt3dadd( -96.4154, -196.791, 74.1871, 0.52 ) }
    dend_20 { pt3dadd( -96.5896, -197.428, 74.1259, 0.52 ) }
    dend_20 { pt3dadd( -96.9794, -198.933, 74.0322, 0.74 ) }
    dend_20 { pt3dadd( -97.2161, -199.953, 74.0234, 0.81 ) }
    dend_20 { pt3dadd( -97.4329, -200.994, 74.0654, 1.11 ) }
    dend_20 { pt3dadd( -97.8756, -203.558, 74.2925, 0.52 ) }
    dend_20 { pt3dadd( -97.9502, -204.131, 74.3772, 0.52 ) }
    dend_20 { pt3dadd( -98.1078, -205.396, 74.66, 0.66 ) }
    dend_20 { pt3dadd( -98.2783, -206.766, 75.0393, 0.88 ) }
    dend_20 { pt3dadd( -98.386, -207.387, 75.1989, 1.03 ) }
    dend_20 { pt3dadd( -98.8105, -209.012, 75.546, 0.37 ) }
    dend_20 { pt3dadd( -99.3197, -210.193, 75.6845, 0.44 ) }
    dend_20 { pt3dadd( -100.185, -211.608, 75.6163, 0.44 ) }
    dend_20 { pt3dadd( -100.719, -212.327, 75.4712, 0.66 ) }
    dend_20 { pt3dadd( -101.792, -213.655, 75.1472, 1.03 ) }
    dend_20 { pt3dadd( -102.377, -214.389, 74.9828, 0.81 ) }
    dend_20 { pt3dadd( -103.035, -215.275, 74.8141, 0.66 ) }
    dend_20 { pt3dadd( -103.588, -216.239, 74.6886, 0.52 ) }
    dend_20 { pt3dadd( -104.017, -217.395, 74.6427, 0.81 ) }
    dend_20 { pt3dadd( -104.356, -218.787, 74.7609, 0.44 ) }
    dend_20 { pt3dadd( -104.523, -219.832, 74.9722, 0.59 ) }
    dend_20 { pt3dadd( -104.668, -220.922, 75.2538, 0.74 ) }
    dend_20 { pt3dadd( -104.805, -221.769, 75.5251, 0.74 ) }
    dend_20 { pt3dadd( -105.115, -223.028, 76.0377, 0.59 ) }
    dend_20 { pt3dadd( -105.514, -224.116, 76.5893, 0.52 ) }
    dend_20 { pt3dadd( -105.808, -224.748, 76.9665, 0.52 ) }
    dend_20 { pt3dadd( -106.231, -225.511, 77.49, 0.81 ) }
    dend_20 { pt3dadd( -106.752, -226.4, 78.154, 1.11 ) }
    dend_20 { pt3dadd( -107.29, -227.319, 78.8302, 1.25 ) }
    dend_20 { pt3dadd( -107.906, -228.368, 79.6171, 0.66 ) }
    dend_20 { pt3dadd( -108.329, -229.111, 80.1403, 0.44 ) }
    dend_20 { pt3dadd( -108.721, -229.811, 80.5928, 0.88 ) }
    dend_20 { pt3dadd( -109.145, -230.601, 81.061, 0.88 ) }
    dend_20 { pt3dadd( -109.774, -231.822, 81.6798, 0.52 ) }
    dend_20 { pt3dadd( -110.144, -232.511, 81.9777, 0.44 ) }
    dend_20 { pt3dadd( -110.619, -233.304, 82.275, 0.44 ) }
    dend_20 { pt3dadd( -111.077, -234.0, 82.5452, 0.37 ) }
    dend_20 { pt3dadd( -111.43, -234.628, 82.824, 0.37 ) }
    dend_20 { pt3dadd( -111.647, -235.199, 83.118, 0.37 ) }
    dend_20 { pt3dadd( -111.701, -235.715, 83.4174, 0.37 ) }
    dend_20 { pt3dadd( -111.65, -236.292, 83.753, 0.66 ) }
    dend_20 { pt3dadd( -111.479, -237.303, 84.3219, 1.55 ) }
    dend_20 { pt3dadd( -111.166, -238.777, 85.051, 0.52 ) }
    dend_20 { pt3dadd( -110.963, -239.703, 85.4323, 0.52 ) }
    dend_20 { pt3dadd( -110.804, -240.686, 85.743, 0.52 ) }
    dend_20 { pt3dadd( -110.774, -241.217, 85.8601, 0.52 ) }
    dend_20 { pt3dadd( -110.946, -242.849, 86.0655, 0.29 ) }
    dend_20 { pt3dadd( -111.299, -243.802, 86.0863, 0.59 ) }
    dend_20 { pt3dadd( -111.789, -244.573, 86.0635, 1.03 ) }
    dend_20 { pt3dadd( -112.702, -245.686, 86.0723, 0.44 ) }
    dend_20 { pt3dadd( -113.439, -246.543, 86.1514, 0.74 ) }
    dend_20 { pt3dadd( -114.176, -247.432, 86.3456, 1.03 ) }
    dend_20 { pt3dadd( -114.931, -248.439, 86.7188, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_20 { pt3dadd( -115.336, -249.094, 87.0129, 0.59 ) }
    dend_20 { pt3dadd( -115.748, -250.022, 87.3708, 0.59 ) }
    dend_20 { pt3dadd( -116.139, -251.702, 87.771, 0.59 ) }
    dend_20 { pt3dadd( -116.222, -252.55, 87.8818, 0.59 ) }
    dend_20 { pt3dadd( -116.242, -253.263, 87.9045, 0.74 ) }
    dend_20 { pt3dadd( -116.244, -254.345, 87.8699, 0.52 ) }
    dend_20 { pt3dadd( -116.251, -255.91, 87.7657, 0.37 ) }
    dend_20 { pt3dadd( -116.233, -257.111, 87.685, 0.44 ) }
    dend_20 { pt3dadd( -116.201, -257.983, 87.6526, 0.44 ) }
    dend_20 { pt3dadd( -116.073, -259.609, 87.705, 0.74 ) }
    dend_20 { pt3dadd( -115.981, -260.506, 87.8218, 1.11 ) }
    dend_20 { pt3dadd( -115.854, -261.717, 88.1119, 0.74 ) }
    dend_20 { pt3dadd( -115.769, -263.201, 88.6423, 0.52 ) }
    dend_20 { pt3dadd( -115.803, -264.23, 89.0923, 0.44 ) }
    dend_20 { pt3dadd( -115.929, -265.256, 89.592, 0.44 ) }
    dend_20 { pt3dadd( -116.106, -266.217, 90.1138, 0.81 ) }
    dend_20 { pt3dadd( -116.269, -266.985, 90.5426, 1.25 ) }
    dend_20 { pt3dadd( -116.528, -268.171, 91.1464, 1.33 ) }
    dend_20 { pt3dadd( -116.834, -269.667, 91.7927, 0.66 ) }
    dend_20 { pt3dadd( -117.004, -270.915, 92.2321, 0.52 ) }
    dend_20 { pt3dadd( -117.01, -271.956, 92.4926, 0.74 ) }
    dend_20 { pt3dadd( -116.894, -272.8, 92.6308, 1.03 ) }
    dend_20 { pt3dadd( -116.427, -274.587, 92.8249, 0.29 ) }
    dend_20 { pt3dadd( -115.973, -275.779, 92.8958, 0.29 ) }
    dend_20 { pt3dadd( -115.55, -276.734, 92.9337, 0.44 ) }
    dend_20 { pt3dadd( -115.085, -277.748, 92.9711, 0.96 ) }
    dend_20 { pt3dadd( -114.549, -278.946, 93.0576, 0.52 ) }
    dend_20 { pt3dadd( -114.296, -279.549, 93.1472, 0.52 ) }
    dend_20 { pt3dadd( -114.005, -280.353, 93.33, 0.59 ) }
    dend_20 { pt3dadd( -113.682, -281.427, 93.5926, 0.29 ) }
    dend_20 { pt3dadd( -113.543, -282.145, 93.7569, 0.96 ) }
    dend_20 { pt3dadd( -113.436, -283.111, 93.9947, 0.74 ) }
    dend_20 { pt3dadd( -113.431, -284.16, 94.2773, 0.52 ) }
    dend_20 { pt3dadd( -113.538, -285.316, 94.6121, 0.52 ) }
    dend_20 { pt3dadd( -113.758, -286.331, 94.9256, 0.74 ) }
    dend_20 { pt3dadd( -114.043, -287.145, 95.1907, 1.03 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 36/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 25.8252, -36.7693, -2.56829, 0.66 ) }
    dend_14 { pt3dadd( 25.7251, -38.0136, -2.54437, 0.66 ) }
    dend_14 { pt3dadd( 25.7662, -38.8845, -2.51476, 0.52 ) }
    dend_14 { pt3dadd( 25.9087, -39.7878, -2.5, 0.52 ) }
    dend_14 { pt3dadd( 26.0405, -40.4788, -2.46296, 0.44 ) }
    dend_14 { pt3dadd( 26.1892, -41.2761, -2.40746, 0.44 ) }
    dend_14 { pt3dadd( 26.353, -42.1335, -2.34173, 0.44 ) }
    dend_14 { pt3dadd( 26.5868, -43.2133, -2.27655, 0.44 ) }
    dend_14 { pt3dadd( 26.8073, -44.3844, -2.24867, 0.59 ) }
    dend_14 { pt3dadd( 26.9211, -45.3874, -2.27332, 0.96 ) }
    dend_14 { pt3dadd( 26.8898, -46.1549, -2.34863, 0.96 ) }
    dend_14 { pt3dadd( 26.6984, -46.7937, -2.54187, 0.66 ) }
    dend_14 { pt3dadd( 26.2254, -47.661, -2.94385, 0.22 ) }
    dend_14 { pt3dadd( 25.8684, -48.1983, -3.20736, 0.37 ) }
    dend_14 { pt3dadd( 25.2105, -49.2461, -3.60137, 0.81 ) }
    dend_14 { pt3dadd( 24.9137, -49.8553, -3.72806, 1.03 ) }
    dend_14 { pt3dadd( 24.4575, -51.0857, -3.66555, 0.59 ) }
    dend_14 { pt3dadd( 24.1437, -51.9699, -3.43565, 0.96 ) }
    dend_14 { pt3dadd( 23.7582, -53.0456, -2.98166, 1.03 ) }
    dend_14 { pt3dadd( 23.2618, -54.3549, -2.28969, 0.81 ) }
    dend_14 { pt3dadd( 22.9198, -55.2513, -1.74874, 0.59 ) }
    dend_14 { pt3dadd( 22.5082, -56.2927, -1.10635, 0.96 ) }
    dend_14 { pt3dadd( 21.9436, -57.662, -0.255227, 0.81 ) }
    dend_14 { pt3dadd( 21.4153, -58.9319, 0.448552, 1.11 ) }
    dend_14 { pt3dadd( 21.0602, -59.785, 0.866681, 0.88 ) }
    dend_14 { pt3dadd( 20.6271, -60.8672, 1.34064, 0.44 ) }
    dend_14 { pt3dadd( 20.2164, -62.0533, 1.81445, 0.88 ) }
    dend_14 { pt3dadd( 19.9616, -63.0544, 2.17068, 0.74 ) }
    dend_14 { pt3dadd( 19.7388, -64.3592, 2.59739, 0.88 ) }
    dend_14 { pt3dadd( 19.6295, -65.2941, 2.88026, 0.66 ) }
    dend_14 { pt3dadd( 19.4973, -66.6195, 3.25083, 0.44 ) }
    dend_14 { pt3dadd( 19.4041, -67.5611, 3.51683, 0.88 ) }
    dend_14 { pt3dadd( 19.2703, -68.6376, 3.8222, 1.47 ) }
    dend_14 { pt3dadd( 19.111, -69.5897, 4.08603, 1.47 ) }
    dend_14 { pt3dadd( 18.6923, -71.427, 4.57587, 0.81 ) }
    dend_14 { pt3dadd( 18.2088, -72.9478, 4.94797, 0.59 ) }
    dend_14 { pt3dadd( 17.6913, -74.0917, 5.2088, 0.66 ) }
    dend_14 { pt3dadd( 16.9723, -75.1898, 5.47768, 0.52 ) }
    dend_14 { pt3dadd( 16.3953, -75.8092, 5.6496, 0.52 ) }
    dend_14 { pt3dadd( 15.3143, -76.6901, 5.88542, 1.03 ) }
    dend_14 { pt3dadd( 14.3667, -77.3278, 6.0617, 0.44 ) }
    dend_14 { pt3dadd( 13.9105, -77.6334, 6.16743, 0.66 ) }
    dend_14 { pt3dadd( 13.0852, -78.2669, 6.43146, 1.03 ) }
    dend_14 { pt3dadd( 12.5732, -78.8922, 6.77573, 1.25 ) }
    dend_14 { pt3dadd( 12.2837, -80.0224, 7.56568, 0.52 ) }
    dend_14 { pt3dadd( 12.3791, -80.7763, 8.225, 0.52 ) }
    dend_14 { pt3dadd( 12.6721, -81.6086, 9.00016, 0.74 ) }
    dend_14 { pt3dadd( 13.082, -82.64, 9.84801, 1.03 ) }
    dend_14 { pt3dadd( 13.311, -83.2767, 10.3014, 1.55 ) }
    dend_14 { pt3dadd( 13.5841, -84.3038, 10.9533, 0.44 ) }
    dend_14 { pt3dadd( 13.6975, -85.2682, 11.4496, 0.22 ) }
    dend_14 { pt3dadd( 13.502, -86.5342, 11.8936, 0.96 ) }
    dend_14 { pt3dadd( 12.7282, -88.3777, 12.3201, 0.59 ) }
    dend_14 { pt3dadd( 12.0145, -89.5614, 12.5163, 0.29 ) }
    dend_14 { pt3dadd( 11.4531, -90.3161, 12.6159, 0.59 ) }
    dend_14 { pt3dadd( 10.8756, -90.9947, 12.6811, 0.44 ) }
    dend_14 { pt3dadd( 9.95534, -92.0188, 12.7299, 0.66 ) }
    dend_14 { pt3dadd( 8.99348, -93.0337, 12.7509, 1.62 ) }
    dend_14 { pt3dadd( 8.37682, -93.6732, 12.7611, 1.03 ) }
    dend_14 { pt3dadd( 7.26972, -94.7833, 12.7009, 0.44 ) }
    dend_14 { pt3dadd( 6.49069, -95.524, 12.6063, 0.88 ) }
    dend_14 { pt3dadd( 5.68942, -96.2734, 12.4785, 0.52 ) }
    dend_14 { pt3dadd( 4.95074, -96.9464, 12.3414, 0.52 ) }
    dend_14 { pt3dadd( 3.91765, -97.8071, 12.2211, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_14 { pt3dadd( 2.87765, -98.5907, 12.2066, 0.44 ) }
    dend_14 { pt3dadd( 1.64592, -99.4548, 12.3363, 0.44 ) }
    dend_14 { pt3dadd( 1.23175, -99.7491, 12.4467, 1.11 ) }
    dend_14 { pt3dadd( 0.451891, -100.334, 12.8067, 1.84 ) }
    dend_14 { pt3dadd( -0.464593, -101.124, 13.4294, 0.59 ) }
    dend_14 { pt3dadd( -1.04614, -101.715, 13.9336, 0.22 ) }
    dend_14 { pt3dadd( -1.47148, -102.226, 14.3571, 0.22 ) }
    dend_14 { pt3dadd( -1.87977, -102.798, 14.8004, 0.22 ) }
    dend_14 { pt3dadd( -2.3415, -103.556, 15.296, 0.74 ) }
    dend_14 { pt3dadd( -2.58876, -104.068, 15.539, 0.88 ) }
    dend_14 { pt3dadd( -3.08849, -105.283, 15.9659, 0.22 ) }
    dend_14 { pt3dadd( -3.56753, -106.421, 16.3324, 0.66 ) }
    dend_14 { pt3dadd( -4.02307, -107.417, 16.5888, 0.96 ) }
    dend_14 { pt3dadd( -4.48003, -108.301, 16.7476, 1.18 ) }
    dend_14 { pt3dadd( -5.29365, -109.726, 16.8895, 0.29 ) }
    dend_14 { pt3dadd( -5.85251, -110.543, 16.9152, 0.29 ) }
    dend_14 { pt3dadd( -6.64542, -111.446, 16.8775, 0.29 ) }
    dend_14 { pt3dadd( -7.58304, -112.292, 16.8012, 0.88 ) }
    dend_14 { pt3dadd( -8.80503, -113.24, 16.7508, 1.18 ) }
    dend_14 { pt3dadd( -9.77557, -113.924, 16.7502, 0.96 ) }
    dend_14 { pt3dadd( -10.8054, -114.585, 16.7874, 0.96 ) }
    dend_14 { pt3dadd( -11.8205, -115.241, 16.8718, 0.44 ) }
    dend_14 { pt3dadd( -12.6451, -115.827, 17.0284, 0.44 ) }
    dend_14 { pt3dadd( -13.6485, -116.638, 17.4618, 0.44 ) }
    dend_14 { pt3dadd( -14.1215, -117.128, 17.909, 0.44 ) }
    dend_14 { pt3dadd( -14.293, -117.438, 18.3574, 0.44 ) }
    dend_14 { pt3dadd( -14.3215, -117.724, 18.9232, 0.44 ) }
    dend_14 { pt3dadd( -14.3328, -118.077, 19.7714, 0.44 ) }
    dend_14 { pt3dadd( -14.2865, -118.33, 20.4839, 0.66 ) }
    dend_14 { pt3dadd( -14.1334, -118.702, 21.6347, 0.66 ) }
    dend_14 { pt3dadd( -14.0071, -118.951, 22.3966, 0.66 ) }
    dend_14 { pt3dadd( -13.8958, -119.253, 23.1646, 0.66 ) }
    dend_14 { pt3dadd( -13.8633, -119.967, 24.7345, 1.25 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 33/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 25.8252, -36.7693, -2.56829, 0.66 ) }
    dend_13 { pt3dadd( 27.2935, -37.5848, -3.10332, 0.66 ) }
    dend_13 { pt3dadd( 28.3775, -38.1171, -3.64864, 0.74 ) }
    dend_13 { pt3dadd( 29.4447, -38.5944, -4.31761, 0.59 ) }
    dend_13 { pt3dadd( 30.3392, -38.9907, -4.9908, 0.88 ) }
    dend_13 { pt3dadd( 31.2353, -39.3905, -5.74587, 0.74 ) }
    dend_13 { pt3dadd( 32.1245, -39.7879, -6.56301, 0.96 ) }
    dend_13 { pt3dadd( 33.0786, -40.1624, -7.60542, 1.11 ) }
    dend_13 { pt3dadd( 33.9854, -40.4891, -8.61041, 1.33 ) }
    dend_13 { pt3dadd( 35.1764, -40.8727, -9.78849, 0.88 ) }
    dend_13 { pt3dadd( 35.6511, -41.0316, -10.1689, 0.88 ) }
    dend_13 { pt3dadd( 36.418, -41.2954, -10.5605, 0.88 ) }
    dend_13 { pt3dadd( 37.7184, -41.7749, -10.8977, 0.59 ) }
    dend_13 { pt3dadd( 39.2673, -42.444, -11.0832, 0.81 ) }
    dend_13 { pt3dadd( 40.7091, -43.1705, -11.1797, 0.66 ) }
    dend_13 { pt3dadd( 41.8661, -43.8653, -11.2743, 0.66 ) }
    dend_13 { pt3dadd( 42.9958, -44.6672, -11.4775, 0.81 ) }
    dend_13 { pt3dadd( 43.5706, -45.1306, -11.6696, 0.88 ) }
    dend_13 { pt3dadd( 44.6243, -46.0338, -12.2247, 0.66 ) }
    dend_13 { pt3dadd( 45.5439, -46.8128, -12.882, 1.18 ) }
    dend_13 { pt3dadd( 46.6385, -47.7192, -13.8031, 0.74 ) }
    dend_13 { pt3dadd( 47.4398, -48.3708, -14.5285, 0.66 ) }
    dend_13 { pt3dadd( 48.3704, -49.1739, -15.417, 0.74 ) }
    dend_13 { pt3dadd( 49.0423, -49.7449, -16.0141, 0.74 ) }
    dend_13 { pt3dadd( 49.3841, -50.0338, -16.2771, 0.96 ) }
    dend_13 { pt3dadd( 50.0297, -50.6362, -16.7006, 0.96 ) }
    dend_13 { pt3dadd( 50.5897, -51.2737, -17.019, 0.81 ) }
    dend_13 { pt3dadd( 51.3782, -52.3659, -17.3686, 0.74 ) }
    dend_13 { pt3dadd( 52.0115, -53.3297, -17.5456, 0.59 ) }
    dend_13 { pt3dadd( 52.5461, -54.1189, -17.6359, 0.59 ) }
    dend_13 { pt3dadd( 53.1442, -54.9464, -17.7101, 0.88 ) }
    dend_13 { pt3dadd( 53.766, -55.7508, -17.754, 0.81 ) }
    dend_13 { pt3dadd( 54.5088, -56.6417, -17.7843, 0.88 ) }
    dend_13 { pt3dadd( 55.4908, -57.7659, -17.7911, 0.81 ) }
    dend_13 { pt3dadd( 56.4202, -58.8324, -17.7671, 0.88 ) }
    dend_13 { pt3dadd( 57.3006, -59.8613, -17.7084, 0.81 ) }
    dend_13 { pt3dadd( 58.156, -60.8789, -17.6063, 0.74 ) }
    dend_13 { pt3dadd( 58.8183, -61.6547, -17.4791, 0.59 ) }
    dend_13 { pt3dadd( 59.4458, -62.3797, -17.3135, 0.59 ) }
    dend_13 { pt3dadd( 60.0245, -63.026, -17.1208, 0.59 ) }
    dend_13 { pt3dadd( 60.7705, -63.7357, -16.8456, 0.59 ) }
    dend_13 { pt3dadd( 61.3433, -64.1215, -16.6531, 0.81 ) }
    dend_13 { pt3dadd( 62.0211, -64.4316, -16.4997, 0.81 ) }
    dend_13 { pt3dadd( 63.2926, -64.8625, -16.3411, 0.74 ) }
    dend_13 { pt3dadd( 64.1289, -65.1126, -16.3356, 0.66 ) }
    dend_13 { pt3dadd( 65.2289, -65.4662, -16.4414, 1.18 ) }
    dend_13 { pt3dadd( 66.3917, -65.9165, -16.6452, 0.29 ) }
    dend_13 { pt3dadd( 67.1524, -66.3484, -16.8135, 0.29 ) }
    dend_13 { pt3dadd( 67.6168, -66.7043, -16.9052, 0.52 ) }
    dend_13 { pt3dadd( 68.4903, -67.4261, -16.965, 0.52 ) }
    dend_13 { pt3dadd( 69.5525, -68.2777, -16.8242, 0.44 ) }
    dend_13 { pt3dadd( 70.2443, -68.8058, -16.5655, 0.66 ) }
    dend_13 { pt3dadd( 71.201, -69.406, -16.0696, 0.59 ) }
    dend_13 { pt3dadd( 72.5342, -70.0317, -15.3539, 0.44 ) }
    dend_13 { pt3dadd( 73.6036, -70.4438, -14.8291, 0.44 ) }
    dend_13 { pt3dadd( 74.4393, -70.7318, -14.447, 0.44 ) }
    dend_13 { pt3dadd( 75.7064, -71.167, -13.9027, 0.59 ) }
    dend_13 { pt3dadd( 76.7176, -71.5666, -13.4857, 0.59 ) }
    dend_13 { pt3dadd( 77.7574, -72.1235, -13.0369, 0.81 ) }
    dend_13 { pt3dadd( 78.6043, -72.7719, -12.5764, 0.52 ) }
    dend_13 { pt3dadd( 79.1374, -73.2938, -12.2428, 0.52 ) }
    dend_13 { pt3dadd( 79.7254, -73.9235, -11.8164, 0.52 ) }
    dend_13 { pt3dadd( 80.074, -74.3162, -11.4847, 0.52 ) }
    dend_13 { pt3dadd( 80.5571, -74.8677, -10.8325, 0.52 ) }
    dend_13 { pt3dadd( 81.05, -75.3832, -9.80672, 0.52 ) }
    dend_13 { pt3dadd( 81.334, -75.5613, -8.99493, 0.66 ) }
    dend_13 { pt3dadd( 81.6619, -75.4437, -7.82888, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_13 { pt3dadd( 81.8747, -74.9888, -6.88077, 0.59 ) }
    dend_13 { pt3dadd( 81.9753, -74.2808, -6.05163, 0.44 ) }
    dend_13 { pt3dadd( 81.9619, -73.4667, -5.30294, 0.44 ) }
    dend_13 { pt3dadd( 81.8571, -72.7299, -4.69052, 0.29 ) }
    dend_13 { pt3dadd( 81.5793, -71.6633, -3.74639, 0.52 ) }
    dend_13 { pt3dadd( 81.1898, -70.7511, -2.83708, 0.66 ) }
    dend_13 { pt3dadd( 80.7214, -70.0503, -1.99124, 0.44 ) }
    dend_13 { pt3dadd( 80.052, -69.5468, -1.00244, 0.44 ) }
    dend_13 { pt3dadd( 79.5326, -69.3802, -0.316586, 0.44 ) }
    dend_13 { pt3dadd( 78.7346, -69.2887, 0.686686, 0.59 ) }
    dend_13 { pt3dadd( 77.9771, -69.2953, 1.63073, 0.59 ) }
    dend_13 { pt3dadd( 77.3377, -69.3438, 2.50571, 0.74 ) }
    dend_13 { pt3dadd( 76.5857, -69.4064, 3.69311, 0.52 ) }
    dend_13 { pt3dadd( 76.2214, -69.3961, 4.57017, 0.52 ) }
    dend_13 { pt3dadd( 76.2422, -69.3458, 5.37559, 0.52 ) }
    dend_13 { pt3dadd( 76.5523, -69.3256, 6.03059, 0.52 ) }
    dend_13 { pt3dadd( 77.4513, -69.3776, 7.2195, 0.59 ) }
    dend_13 { pt3dadd( 78.3855, -69.4608, 8.22039, 0.44 ) }
    dend_13 { pt3dadd( 79.3157, -69.5375, 9.08542, 0.44 ) }
    dend_13 { pt3dadd( 80.4357, -69.635, 10.073, 0.44 ) }
    dend_13 { pt3dadd( 81.5187, -69.7241, 11.0211, 0.66 ) }
    dend_13 { pt3dadd( 82.5788, -69.7689, 12.0175, 0.44 ) }
    dend_13 { pt3dadd( 83.1693, -69.7228, 12.6887, 0.29 ) }
    dend_13 { pt3dadd( 83.4777, -69.3111, 13.3713, 0.22 ) }
    dend_13 { pt3dadd( 83.4347, -68.8751, 13.6987, 0.22 ) }
    dend_13 { pt3dadd( 83.3199, -68.1462, 14.1927, 0.52 ) }
    dend_13 { pt3dadd( 83.1337, -66.9904, 15.0434, 1.18 ) }
    dend_13 { pt3dadd( 82.9506, -65.8254, 16.1047, 0.59 ) }
    dend_13 { pt3dadd( 82.8525, -65.024, 17.117, 0.29 ) }
    dend_13 { pt3dadd( 82.8731, -64.5595, 18.1367, 0.29 ) }
    dend_13 { pt3dadd( 83.0589, -64.3258, 19.3387, 0.52 ) }
    dend_13 { pt3dadd( 83.5484, -64.4279, 20.8977, 0.52 ) }
    dend_13 { pt3dadd( 84.2564, -64.7986, 22.2857, 0.52 ) }
    dend_13 { pt3dadd( 84.9069, -65.15, 23.1626, 0.74 ) }
    dend_13 { pt3dadd( 86.1135, -65.7619, 24.3649, 0.22 ) }
    dend_13 { pt3dadd( 87.3094, -66.3176, 25.2344, 0.29 ) }
    dend_13 { pt3dadd( 88.2374, -66.703, 25.6997, 0.29 ) }
    dend_13 { pt3dadd( 89.3957, -67.1377, 26.0638, 0.37 ) }
    dend_13 { pt3dadd( 90.8484, -67.6766, 26.3876, 0.22 ) }
    dend_13 { pt3dadd( 91.8367, -68.0444, 26.6178, 0.22 ) }
    dend_13 { pt3dadd( 92.5406, -68.3122, 26.8325, 0.44 ) }
    dend_13 { pt3dadd( 93.2269, -68.6351, 27.1489, 1.25 ) }
    dend_13 { pt3dadd( 93.9935, -69.0971, 27.6018, 1.4 ) }
    dend_13 { pt3dadd( 95.1697, -69.9819, 28.4562, 0.59 ) }
    dend_13 { pt3dadd( 95.802, -70.5165, 29.0138, 0.59 ) }
    dend_13 { pt3dadd( 96.3849, -70.9534, 29.6034, 0.44 ) }
    dend_13 { pt3dadd( 96.8554, -71.1483, 30.1706, 0.44 ) }
    dend_13 { pt3dadd( 97.0922, -71.0838, 30.5179, 0.44 ) }
    dend_13 { pt3dadd( 97.382, -70.7515, 30.9397, 0.44 ) }
    dend_13 { pt3dadd( 97.7849, -70.1002, 31.471, 0.44 ) }
    dend_13 { pt3dadd( 98.2552, -69.3452, 32.0078, 0.44 ) }
    dend_13 { pt3dadd( 98.6256, -68.7462, 32.4357, 0.96 ) }
    dend_13 { pt3dadd( 98.9421, -68.2446, 32.8028, 1.4 ) }
    dend_13 { pt3dadd( 99.6496, -67.1737, 33.6846, 0.66 ) }
    dend_13 { pt3dadd( 100.235, -66.3553, 34.4685, 0.22 ) }
    dend_13 { pt3dadd( 100.886, -65.5251, 35.4321, 0.52 ) }
    dend_13 { pt3dadd( 101.481, -64.8521, 36.4769, 0.52 ) }
    dend_13 { pt3dadd( 101.598, -64.7437, 36.734, 0.52 ) }
    dend_13 { pt3dadd( 101.932, -64.5244, 37.5812, 0.52 ) }
    dend_13 { pt3dadd( 102.144, -64.4673, 38.11, 0.52 ) }
    dend_13 { pt3dadd( 102.427, -64.4654, 38.722, 0.52 ) }
    dend_13 { pt3dadd( 102.85, -64.5696, 39.4964, 0.52 ) }
    dend_13 { pt3dadd( 103.556, -64.8829, 40.5821, 0.81 ) }
    dend_13 { pt3dadd( 104.305, -65.3027, 41.6064, 0.66 ) }
    dend_13 { pt3dadd( 105.105, -65.8099, 42.6076, 0.44 ) }
    dend_13 { pt3dadd( 105.561, -66.1459, 43.1719, 0.44 ) }
    dend_13 { pt3dadd( 106.319, -66.8012, 44.1138, 0.74 ) }
    dend_13 { pt3dadd( 107.008, -67.4922, 44.9242, 0.22 ) }
    dend_13 { pt3dadd( 107.398, -67.9285, 45.3513, 0.22 ) }
    dend_13 { pt3dadd( 107.585, -68.1223, 45.5336, 0.22 ) }
    dend_13 { pt3dadd( 107.87, -68.3479, 45.772, 0.22 ) }
    dend_13 { pt3dadd( 108.289, -68.6106, 46.1046, 0.52 ) }
    dend_13 { pt3dadd( 109.232, -69.0902, 46.8707, 0.96 ) }
    dend_13 { pt3dadd( 109.794, -69.3457, 47.3348, 0.96 ) }
    dend_13 { pt3dadd( 110.46, -69.5904, 47.8776, 0.22 ) }
    dend_13 { pt3dadd( 111.402, -69.8662, 48.6271, 0.52 ) }
    dend_13 { pt3dadd( 112.212, -70.075, 49.2571, 0.22 ) }
    dend_13 { pt3dadd( 112.915, -70.2671, 49.8092, 0.22 ) }
    dend_13 { pt3dadd( 113.768, -70.5119, 50.4804, 0.74 ) }
    dend_13 { pt3dadd( 114.822, -70.8386, 51.2884, 1.11 ) }
    dend_13 { pt3dadd( 115.894, -71.2123, 52.0624, 0.22 ) }
    dend_13 { pt3dadd( 116.346, -71.3836, 52.3709, 0.29 ) }
    dend_13 { pt3dadd( 117.206, -71.8264, 52.9109, 0.29 ) }
    dend_13 { pt3dadd( 117.706, -72.2727, 53.2297, 0.81 ) }
    dend_13 { pt3dadd( 118.062, -72.7734, 53.4862, 1.18 ) }
    dend_13 { pt3dadd( 118.664, -73.8638, 53.9792, 0.29 ) }
    dend_13 { pt3dadd( 118.973, -74.4557, 54.2333, 0.15 ) }
    dend_13 { pt3dadd( 119.408, -75.2036, 54.5783, 0.81 ) }
    dend_13 { pt3dadd( 120.092, -76.1908, 55.0951, 0.22 ) }
    dend_13 { pt3dadd( 120.756, -77.0309, 55.6063, 0.88 ) }
    dend_13 { pt3dadd( 121.425, -77.8086, 56.1053, 1.11 ) }
    dend_13 { pt3dadd( 122.067, -78.4945, 56.5804, 1.25 ) }
    dend_13 { pt3dadd( 123.017, -79.4123, 57.2782, 0.66 ) }
    dend_13 { pt3dadd( 124.111, -80.3545, 58.124, 0.37 ) }
    dend_13 { pt3dadd( 124.839, -80.9139, 58.7123, 0.37 ) }
    dend_13 { pt3dadd( 125.578, -81.4369, 59.3603, 0.88 ) }
    dend_13 { pt3dadd( 126.543, -82.1439, 60.2946, 0.22 ) }
    dend_13 { pt3dadd( 127.09, -82.5975, 60.881, 0.22 ) }
    dend_13 { pt3dadd( 127.695, -83.2013, 61.568, 0.22 ) }
    dend_13 { pt3dadd( 127.995, -83.6255, 61.915, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_13 { pt3dadd( 128.351, -84.3032, 62.2821, 1.03 ) }
    dend_13 { pt3dadd( 128.892, -85.6148, 62.6799, 0.66 ) }
    dend_13 { pt3dadd( 129.349, -87.051, 62.7872, 1.11 ) }
    dend_13 { pt3dadd( 129.622, -88.0452, 62.7353, 0.81 ) }
    dend_13 { pt3dadd( 130.025, -89.7213, 62.5161, 0.22 ) }
    dend_13 { pt3dadd( 130.182, -90.4324, 62.4198, 0.22 ) }
    dend_13 { pt3dadd( 130.383, -91.4435, 62.2701, 0.22 ) }
    dend_13 { pt3dadd( 130.521, -92.2717, 62.1683, 0.44 ) }
    dend_13 { pt3dadd( 130.594, -93.1844, 62.097, 1.25 ) }
    dend_13 { pt3dadd( 130.614, -94.5425, 62.1041, 0.29 ) }
    dend_13 { pt3dadd( 130.567, -96.0023, 62.2297, 0.44 ) }
    dend_13 { pt3dadd( 130.522, -96.6059, 62.3148, 0.66 ) }
    dend_13 { pt3dadd( 130.378, -97.6938, 62.4825, 0.52 ) }
    dend_13 { pt3dadd( 130.147, -99.1121, 62.7245, 0.74 ) }
    dend_13 { pt3dadd( 129.958, -100.148, 62.8881, 0.37 ) }
    dend_13 { pt3dadd( 129.791, -101.062, 63.0021, 0.37 ) }
    dend_13 { pt3dadd( 129.639, -102.082, 63.08, 0.59 ) }
    dend_13 { pt3dadd( 129.555, -103.275, 63.1931, 1.33 ) }
    dend_13 { pt3dadd( 129.554, -104.547, 63.3485, 0.74 ) }
    dend_13 { pt3dadd( 129.592, -105.393, 63.4911, 0.44 ) }
    dend_13 { pt3dadd( 129.636, -106.318, 63.6754, 0.74 ) }
    dend_13 { pt3dadd( 129.713, -107.647, 63.9535, 0.52 ) }
    dend_13 { pt3dadd( 129.83, -109.046, 64.2593, 0.22 ) }
    dend_13 { pt3dadd( 129.938, -109.899, 64.4477, 0.22 ) }
    dend_13 { pt3dadd( 130.073, -110.912, 64.6376, 0.96 ) }
    dend_13 { pt3dadd( 130.194, -111.862, 64.8214, 0.37 ) }
    dend_13 { pt3dadd( 130.265, -112.507, 64.9539, 0.15 ) }
    dend_13 { pt3dadd( 130.307, -113.002, 65.0346, 0.15 ) }
    dend_13 { pt3dadd( 130.321, -113.468, 65.0772, 0.59 ) }
    dend_13 { pt3dadd( 130.314, -114.274, 65.1369, 0.22 ) }
    dend_13 { pt3dadd( 130.262, -115.306, 65.2621, 0.81 ) }
    dend_13 { pt3dadd( 130.146, -116.284, 65.4501, 0.22 ) }
    dend_13 { pt3dadd( 129.974, -117.161, 65.664, 0.74 ) }
    dend_13 { pt3dadd( 129.755, -117.97, 65.899, 0.66 ) }
    dend_13 { pt3dadd( 129.466, -118.902, 66.2191, 0.88 ) }
    dend_13 { pt3dadd( 129.13, -119.964, 66.6135, 0.29 ) }
    dend_13 { pt3dadd( 128.833, -120.983, 66.9836, 0.52 ) }
    dend_13 { pt3dadd( 128.614, -121.898, 67.3108, 0.81 ) }
    dend_13 { pt3dadd( 128.324, -123.341, 67.8709, 0.96 ) }
    dend_13 { pt3dadd( 128.109, -124.562, 68.372, 0.29 ) }
    dend_13 { pt3dadd( 127.965, -125.397, 68.756, 0.22 ) }
    dend_13 { pt3dadd( 127.8, -126.353, 69.2705, 0.44 ) }
    dend_13 { pt3dadd( 127.664, -127.146, 69.7873, 0.22 ) }
    dend_13 { pt3dadd( 127.481, -128.01, 70.4782, 0.37 ) }
    dend_13 { pt3dadd( 127.302, -128.601, 71.0276, 0.59 ) }
    dend_13 { pt3dadd( 126.916, -129.411, 71.8628, 0.74 ) }
    dend_13 { pt3dadd( 126.439, -130.155, 72.6108, 0.88 ) }
    dend_13 { pt3dadd( 125.978, -130.847, 73.1882, 0.15 ) }
    dend_13 { pt3dadd( 125.665, -131.356, 73.5236, 0.81 ) }
    dend_13 { pt3dadd( 125.137, -132.353, 74.0063, 0.15 ) }
    dend_13 { pt3dadd( 124.673, -133.346, 74.3457, 1.03 ) }
    dend_13 { pt3dadd( 123.827, -135.301, 74.8092, 0.29 ) }
    dend_13 { pt3dadd( 123.093, -137.023, 75.1114, 0.29 ) }
    dend_13 { pt3dadd( 122.652, -138.049, 75.2593, 0.81 ) }
    dend_13 { pt3dadd( 122.092, -139.289, 75.4188, 0.66 ) }
    dend_13 { pt3dadd( 121.528, -140.481, 75.5498, 0.22 ) }
    dend_13 { pt3dadd( 121.236, -141.077, 75.6124, 0.22 ) }
    dend_13 { pt3dadd( 120.974, -141.538, 75.671, 0.22 ) }
    dend_13 { pt3dadd( 120.479, -142.206, 75.8427, 0.88 ) }
    dend_13 { pt3dadd( 119.751, -143.003, 76.1252, 0.66 ) }
    dend_13 { pt3dadd( 119.208, -143.489, 76.3311, 0.22 ) }
    dend_13 { pt3dadd( 118.576, -143.972, 76.5448, 0.22 ) }
    dend_13 { pt3dadd( 117.426, -144.764, 76.8344, 1.03 ) }
    dend_13 { pt3dadd( 116.037, -145.637, 77.0684, 0.22 ) }
    dend_13 { pt3dadd( 115.298, -146.049, 77.1331, 0.66 ) }
    dend_13 { pt3dadd( 114.392, -146.497, 77.1562, 0.22 ) }
    dend_13 { pt3dadd( 113.681, -146.823, 77.1475, 0.22 ) }
    dend_13 { pt3dadd( 112.631, -147.28, 77.1208, 0.66 ) }
    dend_13 { pt3dadd( 111.901, -147.585, 77.0999, 0.22 ) }
    dend_13 { pt3dadd( 111.422, -147.782, 77.0736, 0.15 ) }
    dend_13 { pt3dadd( 110.938, -148.013, 77.0855, 0.15 ) }
    dend_13 { pt3dadd( 110.157, -148.437, 77.1735, 0.29 ) }
    dend_13 { pt3dadd( 109.37, -148.873, 77.3044, 0.07 ) }
    dend_13 { pt3dadd( 108.637, -149.283, 77.4746, 0.44 ) }
    dend_13 { pt3dadd( 107.856, -149.735, 77.6686, 0.15 ) }
    dend_13 { pt3dadd( 107.367, -150.023, 77.7868, 0.15 ) }
    dend_13 { pt3dadd( 107.041, -150.194, 77.8668, 0.15 ) }
    dend_13 { pt3dadd( 106.078, -150.646, 78.1337, 0.88 ) }
    dend_13 { pt3dadd( 104.841, -151.23, 78.5457, 0.22 ) }
    dend_13 { pt3dadd( 104.352, -151.484, 78.7596, 0.66 ) }
    dend_13 { pt3dadd( 103.861, -151.737, 79.0067, 0.44 ) }
    dend_13 { pt3dadd( 103.202, -152.005, 79.3213, 0.15 ) }
    dend_13 { pt3dadd( 102.633, -152.15, 79.5957, 0.52 ) }
    dend_13 { pt3dadd( 102.14, -152.218, 79.8453, 0.52 ) }
    dend_13 { pt3dadd( 100.99, -152.318, 80.416, 0.29 ) }
    dend_13 { pt3dadd( 99.5246, -152.395, 81.1478, 0.44 ) }
    dend_13 { pt3dadd( 98.1015, -152.432, 81.8475, 0.81 ) }
    dend_13 { pt3dadd( 96.4901, -152.458, 82.5981, 0.22 ) }
    dend_13 { pt3dadd( 95.3375, -152.425, 83.108, 0.66 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 89/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 23.169, -94.2021, -34.4796, 0.59 ) }
    dend_9 { pt3dadd( 19.7227, -103.346, -34.8771, 0.59 ) }
    dend_9 { pt3dadd( 15.059, -111.71, -37.0365, 0.59 ) }
    dend_9 { pt3dadd( 10.6612, -120.451, -37.5705, 0.59 ) }
    dend_9 { pt3dadd( 5.32629, -128.662, -38.3543, 0.59 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 94/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 23.169, -94.2021, -34.4796, 0.37 ) }
    dend_8 { pt3dadd( 25.8162, -100.508, -41.6317, 0.59 ) }
    dend_8 { pt3dadd( 28.4584, -106.753, -48.8428, 0.59 ) }
    dend_8 { pt3dadd( 32.5476, -111.724, -56.4113, 0.59 ) }
    dend_8 { pt3dadd( 38.9623, -115.119, -63.2468, 0.59 ) }
    dend_8 { pt3dadd( 45.2181, -119.067, -69.9155, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_8 { pt3dadd( 50.6026, -125.106, -75.6294, 0.59 ) }
    dend_8 { pt3dadd( 55.5439, -130.706, -82.1556, 0.59 ) }
    dend_8 { pt3dadd( 61.8586, -136.824, -86.711, 0.59 ) }
    dend_8 { pt3dadd( 68.2574, -142.479, -91.7525, 0.59 ) }
    dend_8 { pt3dadd( 74.9035, -147.124, -97.5082, 0.59 ) }
    dend_8 { pt3dadd( 81.664, -150.303, -104.116, 0.59 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 6/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 82.1656, -11.8732, 45.7099, 0.81 ) }
    dend_5 { pt3dadd( 82.4209, -10.7228, 45.9349, 0.81 ) }
    dend_5 { pt3dadd( 82.728, -9.54326, 46.1048, 1.4 ) }
    dend_5 { pt3dadd( 83.1812, -7.85932, 46.2221, 0.07 ) }
    dend_5 { pt3dadd( 83.4127, -7.07035, 46.2121, 0.59 ) }
    dend_5 { pt3dadd( 83.6444, -6.37243, 46.1579, 0.44 ) }
    dend_5 { pt3dadd( 84.0311, -5.20721, 46.0674, 0.22 ) }
    dend_5 { pt3dadd( 84.3701, -4.372, 45.9488, 0.59 ) }
    dend_5 { pt3dadd( 84.8874, -3.22285, 45.6982, 0.29 ) }
    dend_5 { pt3dadd( 85.3269, -2.20957, 45.3838, 0.15 ) }
    dend_5 { pt3dadd( 85.6702, -1.39095, 45.0593, 0.37 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 17/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 82.1656, -11.8732, 45.7099, 0.15 ) }
    dend_4 { pt3dadd( 82.6569, -10.6819, 45.1753, 0.15 ) }
    dend_4 { pt3dadd( 83.0468, -9.76819, 44.7973, 0.15 ) }
    dend_4 { pt3dadd( 83.4981, -8.71046, 44.3597, 0.66 ) }
    dend_4 { pt3dadd( 84.0703, -7.36968, 43.8051, 0.22 ) }
    dend_4 { pt3dadd( 84.5341, -6.28275, 43.3554, 0.88 ) }
    dend_4 { pt3dadd( 84.9059, -5.41156, 42.995, 0.15 ) }
    dend_4 { pt3dadd( 85.2885, -4.5356, 42.6058, 0.66 ) }
    // Section: dend_158, id: dend_158, parent: dend_156 (entry count 25/100)
    dend_158 { pt3dclear() }
    dend_158 { pt3dadd( -80.1611, -69.3503, 61.1101, 0.66 ) }
    dend_158 { pt3dadd( -82.1042, -70.0029, 60.9281, 0.66 ) }
    dend_158 { pt3dadd( -82.9758, -70.4617, 60.8855, 0.52 ) }
    dend_158 { pt3dadd( -83.9273, -71.0355, 60.9389, 0.52 ) }
    dend_158 { pt3dadd( -84.8113, -71.5545, 61.0299, 0.52 ) }
    dend_158 { pt3dadd( -85.6682, -72.0014, 61.1288, 0.52 ) }
    dend_158 { pt3dadd( -86.1756, -72.2361, 61.2005, 0.52 ) }
    dend_158 { pt3dadd( -87.0644, -72.6401, 61.4162, 0.37 ) }
    dend_158 { pt3dadd( -88.2549, -73.1438, 61.7543, 0.37 ) }
    dend_158 { pt3dadd( -88.9864, -73.4723, 61.9668, 0.96 ) }
    dend_158 { pt3dadd( -90.467, -74.1915, 62.4059, 1.18 ) }
    dend_158 { pt3dadd( -91.9547, -74.9433, 62.849, 0.59 ) }
    dend_158 { pt3dadd( -93.5332, -75.7643, 63.3313, 0.22 ) }
    dend_158 { pt3dadd( -94.0612, -76.0572, 63.5123, 0.22 ) }
    dend_158 { pt3dadd( -95.1594, -76.7857, 63.9325, 0.44 ) }
    dend_158 { pt3dadd( -96.1235, -77.5591, 64.3654, 0.15 ) }
    dend_158 { pt3dadd( -96.6141, -78.0506, 64.6163, 0.74 ) }
    dend_158 { pt3dadd( -97.2811, -78.8021, 64.9511, 1.4 ) }
    dend_158 { pt3dadd( -98.1895, -79.7492, 65.3577, 0.44 ) }
    dend_158 { pt3dadd( -98.8374, -80.3038, 65.6413, 0.44 ) }
    dend_158 { pt3dadd( -99.346, -80.6883, 65.8626, 0.44 ) }
    dend_158 { pt3dadd( -100.243, -81.3556, 66.2432, 0.29 ) }
    dend_158 { pt3dadd( -100.916, -81.8934, 66.5244, 0.59 ) }
    dend_158 { pt3dadd( -101.831, -82.6843, 66.9249, 0.81 ) }
    dend_158 { pt3dadd( -102.614, -83.3664, 67.2566, 0.66 ) }
    dend_158 { pt3dadd( -103.166, -83.8141, 67.4441, 0.52 ) }
    dend_158 { pt3dadd( -103.703, -84.2026, 67.5305, 0.88 ) }
    dend_158 { pt3dadd( -104.714, -84.8748, 67.4465, 0.66 ) }
    dend_158 { pt3dadd( -105.833, -85.6314, 67.2163, 0.37 ) }
    dend_158 { pt3dadd( -106.367, -86.0068, 67.0755, 0.66 ) }
    dend_158 { pt3dadd( -107.688, -86.8857, 66.759, 0.88 ) }
    dend_158 { pt3dadd( -109.54, -87.9877, 66.5016, 1.55 ) }
    dend_158 { pt3dadd( -110.989, -88.7719, 66.5161, 0.52 ) }
    dend_158 { pt3dadd( -112.088, -89.3434, 66.6517, 0.74 ) }
    dend_158 { pt3dadd( -113.002, -89.8475, 66.8771, 0.66 ) }
    dend_158 { pt3dadd( -114.372, -90.6902, 67.4109, 1.03 ) }
    dend_158 { pt3dadd( -115.511, -91.4324, 68.0079, 0.66 ) }
    dend_158 { pt3dadd( -117.005, -92.3618, 68.883, 0.37 ) }
    dend_158 { pt3dadd( -117.637, -92.6989, 69.2102, 0.37 ) }
    dend_158 { pt3dadd( -118.689, -93.1409, 69.5742, 0.52 ) }
    dend_158 { pt3dadd( -119.476, -93.3434, 69.7293, 0.59 ) }
    dend_158 { pt3dadd( -120.569, -93.4538, 69.7862, 0.52 ) }
    dend_158 { pt3dadd( -122.056, -93.4554, 69.6926, 0.44 ) }
    dend_158 { pt3dadd( -123.19, -93.417, 69.538, 1.03 ) }
    dend_158 { pt3dadd( -124.276, -93.3876, 69.369, 1.03 ) }
    dend_158 { pt3dadd( -126.149, -93.4269, 68.9569, 0.44 ) }
    dend_158 { pt3dadd( -127.471, -93.5801, 68.5616, 0.44 ) }
    dend_158 { pt3dadd( -128.658, -93.8506, 68.1141, 0.59 ) }
    dend_158 { pt3dadd( -129.809, -94.1965, 67.6075, 1.03 ) }
    dend_158 { pt3dadd( -130.691, -94.4218, 67.1997, 0.88 ) }
    dend_158 { pt3dadd( -132.56, -94.692, 66.3288, 0.37 ) }
    dend_158 { pt3dadd( -133.669, -94.7137, 65.844, 0.37 ) }
    dend_158 { pt3dadd( -134.471, -94.6156, 65.5732, 0.88 ) }
    dend_158 { pt3dadd( -135.966, -94.2594, 65.1282, 1.33 ) }
    dend_158 { pt3dadd( -137.986, -93.549, 64.6147, 0.66 ) }
    dend_158 { pt3dadd( -139.605, -92.8244, 64.2831, 0.44 ) }
    dend_158 { pt3dadd( -140.654, -92.2494, 64.1619, 0.52 ) }
    dend_158 { pt3dadd( -141.676, -91.6294, 64.0839, 0.59 ) }
    // Section: dend_157, id: dend_157, parent: dend_156 (entry count 83/100)
    dend_157 { pt3dclear() }
    dend_157 { pt3dadd( -80.1611, -69.3503, 61.1101, 0.29 ) }
    dend_157 { pt3dadd( -80.3656, -69.2536, 61.9089, 0.29 ) }
    dend_157 { pt3dadd( -81.0165, -68.9654, 64.0442, 0.29 ) }
    dend_157 { pt3dadd( -81.4936, -68.7281, 65.5694, 0.29 ) }
    dend_157 { pt3dadd( -82.0052, -68.4765, 67.2744, 0.29 ) }
    dend_157 { pt3dadd( -82.4773, -68.2886, 68.921, 0.59 ) }
    dend_157 { pt3dadd( -82.8871, -68.1711, 70.318, 0.37 ) }
    dend_157 { pt3dadd( -83.1875, -68.1443, 71.2429, 0.37 ) }
    dend_157 { pt3dadd( -83.3832, -68.1524, 71.7509, 0.37 ) }
    dend_157 { pt3dadd( -83.7925, -68.1472, 72.7746, 0.37 ) }
    dend_157 { pt3dadd( -84.2067, -68.0216, 73.8902, 0.37 ) }
    dend_157 { pt3dadd( -84.4589, -67.8523, 74.5876, 0.37 ) }
    dend_157 { pt3dadd( -84.9689, -67.4295, 76.0173, 0.52 ) }
    dend_157 { pt3dadd( -85.5363, -66.9541, 77.525, 0.81 ) }
    dend_157 { pt3dadd( -86.1336, -66.4316, 79.0731, 0.52 ) }
    dend_157 { pt3dadd( -86.588, -65.9, 80.4328, 0.37 ) }
    dend_157 { pt3dadd( -86.8152, -65.5064, 81.3713, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_157 { pt3dadd( -86.9054, -65.1894, 82.1584, 0.37 ) }
    dend_157 { pt3dadd( -86.9161, -64.978, 82.7172, 0.37 ) }
    dend_157 { pt3dadd( -86.9363, -64.7787, 83.4372, 0.37 ) }
    dend_157 { pt3dadd( -87.0327, -64.5339, 84.9534, 0.37 ) }
    dend_157 { pt3dadd( -87.1559, -64.407, 86.1557, 0.37 ) }
    dend_157 { pt3dadd( -87.3723, -64.2571, 87.5307, 0.37 ) }
    dend_157 { pt3dadd( -87.6229, -64.114, 88.5775, 0.37 ) }
    dend_157 { pt3dadd( -88.4374, -63.8111, 90.8419, 0.59 ) }
    dend_157 { pt3dadd( -88.9858, -63.6983, 91.9471, 0.37 ) }
    dend_157 { pt3dadd( -89.5019, -63.664, 92.8588, 0.37 ) }
    dend_157 { pt3dadd( -89.9862, -63.6885, 93.7048, 0.37 ) }
    dend_157 { pt3dadd( -90.3109, -63.7547, 94.2541, 0.37 ) }
    dend_157 { pt3dadd( -90.678, -63.9589, 95.0419, 0.22 ) }
    dend_157 { pt3dadd( -90.834, -64.3404, 95.9124, 0.37 ) }
    dend_157 { pt3dadd( -90.7921, -65.5078, 97.6988, 0.22 ) }
    dend_157 { pt3dadd( -90.7345, -65.8558, 98.0569, 0.22 ) }
    dend_157 { pt3dadd( -90.4378, -67.0165, 99.0073, 0.22 ) }
    dend_157 { pt3dadd( -90.0166, -68.2238, 99.9299, 0.22 ) }
    dend_157 { pt3dadd( -89.7114, -68.941, 100.47, 0.22 ) }
    dend_157 { pt3dadd( -89.2803, -69.9064, 101.124, 1.18 ) }
    dend_157 { pt3dadd( -88.6414, -71.3788, 102.064, 0.22 ) }
    dend_157 { pt3dadd( -88.2088, -72.3095, 102.72, 0.37 ) }
    dend_157 { pt3dadd( -87.7744, -73.1588, 103.426, 0.22 ) }
    dend_157 { pt3dadd( -87.2721, -74.0926, 104.231, 0.22 ) }
    dend_157 { pt3dadd( -86.9011, -74.7652, 104.85, 0.44 ) }
    dend_157 { pt3dadd( -86.3083, -75.7497, 105.871, 0.22 ) }
    dend_157 { pt3dadd( -85.7483, -76.706, 106.973, 0.81 ) }
    dend_157 { pt3dadd( -85.3315, -77.5246, 107.979, 0.22 ) }
    dend_157 { pt3dadd( -85.0934, -78.1205, 108.769, 0.22 ) }
    dend_157 { pt3dadd( -84.9154, -78.6775, 109.649, 0.37 ) }
    dend_157 { pt3dadd( -84.8119, -79.1997, 110.695, 0.37 ) }
    dend_157 { pt3dadd( -84.7783, -79.7081, 111.98, 0.37 ) }
    dend_157 { pt3dadd( -84.8226, -80.1811, 113.389, 0.88 ) }
    dend_157 { pt3dadd( -84.8745, -80.6215, 114.989, 0.52 ) }
    dend_157 { pt3dadd( -84.9259, -80.8476, 116.026, 0.52 ) }
    dend_157 { pt3dadd( -85.0346, -81.0533, 117.109, 0.52 ) }
    dend_157 { pt3dadd( -85.151, -81.1862, 117.745, 0.52 ) }
    dend_157 { pt3dadd( -85.5005, -81.4975, 119.125, 0.81 ) }
    dend_157 { pt3dadd( -86.0494, -81.9141, 120.711, 0.81 ) }
    dend_157 { pt3dadd( -86.5295, -82.3412, 121.786, 0.81 ) }
    dend_157 { pt3dadd( -87.2425, -83.0134, 122.988, 0.29 ) }
    dend_157 { pt3dadd( -88.0734, -83.792, 124.061, 0.22 ) }
    dend_157 { pt3dadd( -88.7305, -84.3527, 124.762, 0.22 ) }
    dend_157 { pt3dadd( -89.4202, -84.8971, 125.338, 0.44 ) }
    dend_157 { pt3dadd( -90.7269, -85.9472, 126.193, 0.15 ) }
    dend_157 { pt3dadd( -91.6371, -86.7594, 126.711, 0.07 ) }
    dend_157 { pt3dadd( -92.1203, -87.2511, 126.955, 0.74 ) }
    // Section: dend_153, id: dend_153, parent: dend_151 (entry count 47/100)
    dend_153 { pt3dclear() }
    dend_153 { pt3dadd( -156.925, -204.141, -15.9376, 0.74 ) }
    dend_153 { pt3dadd( -158.274, -205.561, -15.2987, 0.74 ) }
    dend_153 { pt3dadd( -158.954, -206.256, -15.0511, 0.74 ) }
    dend_153 { pt3dadd( -160.327, -207.789, -14.6535, 1.33 ) }
    dend_153 { pt3dadd( -161.226, -208.89, -14.4898, 0.88 ) }
    dend_153 { pt3dadd( -162.053, -210.014, -14.3916, 1.03 ) }
    dend_153 { pt3dadd( -162.949, -211.33, -14.4054, 0.88 ) }
    dend_153 { pt3dadd( -164.028, -212.977, -14.5729, 0.66 ) }
    dend_153 { pt3dadd( -164.716, -214.116, -14.9063, 0.81 ) }
    dend_153 { pt3dadd( -165.394, -215.298, -15.4554, 0.59 ) }
    dend_153 { pt3dadd( -165.818, -216.025, -15.8749, 1.18 ) }
    dend_153 { pt3dadd( -166.764, -217.519, -16.8106, 1.18 ) }
    dend_153 { pt3dadd( -167.4, -218.449, -17.4039, 0.96 ) }
    dend_153 { pt3dadd( -167.922, -219.165, -17.8167, 0.96 ) }
    dend_153 { pt3dadd( -168.695, -220.162, -18.2147, 0.66 ) }
    dend_153 { pt3dadd( -169.332, -221.059, -18.3831, 0.44 ) }
    dend_153 { pt3dadd( -169.963, -222.238, -18.377, 0.81 ) }
    dend_153 { pt3dadd( -170.201, -223.297, -18.1715, 0.74 ) }
    dend_153 { pt3dadd( -170.138, -224.731, -17.777, 0.52 ) }
    dend_153 { pt3dadd( -169.908, -225.832, -17.4389, 0.22 ) }
    dend_153 { pt3dadd( -169.651, -226.63, -17.1986, 0.29 ) }
    dend_153 { pt3dadd( -169.271, -227.58, -16.9303, 0.29 ) }
    dend_153 { pt3dadd( -168.898, -228.387, -16.7402, 0.29 ) }
    dend_153 { pt3dadd( -168.375, -229.545, -16.5171, 0.81 ) }
    dend_153 { pt3dadd( -167.887, -230.65, -16.3016, 0.59 ) }
    dend_153 { pt3dadd( -167.561, -231.382, -16.117, 1.03 ) }
    dend_153 { pt3dadd( -169.348, -240.95, -16.8305, 1.03 ) }
    dend_153 { pt3dadd( -172.025, -250.311, -17.635, 1.03 ) }
    dend_153 { pt3dadd( -175.203, -259.503, -16.624, 1.03 ) }
    dend_153 { pt3dadd( -178.14, -268.818, -16.9392, 1.03 ) }
    dend_153 { pt3dadd( -182.238, -277.557, -18.6349, 1.03 ) }
    // Section: dend_152, id: dend_152, parent: dend_151 (entry count 78/100)
    dend_152 { pt3dclear() }
    dend_152 { pt3dadd( -156.925, -204.141, -15.9376, 0.37 ) }
    dend_152 { pt3dadd( -155.997, -204.228, -17.518, 0.37 ) }
    dend_152 { pt3dadd( -155.356, -204.154, -18.7987, 0.37 ) }
    dend_152 { pt3dadd( -154.912, -203.916, -19.9536, 0.37 ) }
    dend_152 { pt3dadd( -154.755, -203.711, -20.636, 0.37 ) }
    dend_152 { pt3dadd( -154.757, -203.586, -20.9195, 0.37 ) }
    dend_152 { pt3dadd( -154.96, -203.092, -21.6974, 0.37 ) }
    dend_152 { pt3dadd( -155.403, -202.311, -22.4935, 0.37 ) }
    dend_152 { pt3dadd( -155.798, -201.498, -23.1762, 0.37 ) }
    dend_152 { pt3dadd( -156.13, -200.559, -23.9178, 0.37 ) }
    dend_152 { pt3dadd( -156.379, -199.352, -24.8438, 0.81 ) }
    dend_152 { pt3dadd( -156.391, -198.207, -25.6393, 0.59 ) }
    dend_152 { pt3dadd( -156.257, -196.823, -26.5695, 0.44 ) }
    dend_152 { pt3dadd( -156.038, -196.032, -27.1031, 1.25 ) }
    dend_152 { pt3dadd( -155.381, -194.877, -27.8829, 0.44 ) }
    dend_152 { pt3dadd( -155.035, -194.474, -28.166, 0.66 ) }
    dend_152 { pt3dadd( -153.854, -193.541, -28.8712, 0.29 ) }
    dend_152 { pt3dadd( -150.449, -187.326, -35.7828, 0.29 ) }
    // Section: dend_131, id: dend_131, parent: dend_117 (entry count 96/100)
    dend_131 { pt3dclear() }
    dend_131 { pt3dadd( -130.092, -74.8714, -2.51879, 0.96 ) }
    dend_131 { pt3dadd( -131.375, -75.3901, -1.88707, 0.96 ) }
    dend_131 { pt3dadd( -132.771, -75.8854, -1.45591, 1.55 ) }
    dend_131 { pt3dadd( -133.864, -76.1403, -1.47211, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_131 { pt3dadd( -135.114, -76.3116, -1.77124, 0.74 ) }
    dend_131 { pt3dadd( -136.202, -76.3946, -2.17581, 0.74 ) }
    dend_131 { pt3dadd( -137.599, -76.4384, -2.75922, 1.18 ) }
    dend_131 { pt3dadd( -138.869, -76.3866, -3.45324, 1.99 ) }
    dend_131 { pt3dadd( -141.35, -76.2457, -4.95658, 0.74 ) }
    dend_131 { pt3dadd( -142.067, -76.2223, -5.40138, 0.96 ) }
    dend_131 { pt3dadd( -143.149, -76.2583, -6.04487, 1.03 ) }
    dend_131 { pt3dadd( -144.049, -76.4303, -6.4863, 1.03 ) }
    dend_131 { pt3dadd( -145.192, -76.9247, -6.79172, 0.88 ) }
    dend_131 { pt3dadd( -146.331, -77.7488, -6.81188, 0.96 ) }
    dend_131 { pt3dadd( -147.212, -78.5507, -6.66825, 1.33 ) }
    dend_131 { pt3dadd( -148.32, -79.6444, -6.41397, 1.11 ) }
    dend_131 { pt3dadd( -149.506, -80.8352, -6.06988, 0.81 ) }
    dend_131 { pt3dadd( -150.116, -81.4187, -5.87342, 1.03 ) }
    dend_131 { pt3dadd( -151.648, -82.7891, -5.33776, 0.81 ) }
    dend_131 { pt3dadd( -152.798, -83.6981, -4.94218, 1.11 ) }
    dend_131 { pt3dadd( -153.627, -84.2508, -4.67178, 1.25 ) }
    dend_131 { pt3dadd( -154.931, -84.9765, -4.27506, 1.18 ) }
    dend_131 { pt3dadd( -156.285, -85.6267, -3.83742, 1.11 ) }
    dend_131 { pt3dadd( -157.136, -85.9997, -3.58304, 0.88 ) }
    dend_131 { pt3dadd( -158.409, -86.5131, -3.31289, 0.88 ) }
    dend_131 { pt3dadd( -159.701, -87.0523, -3.18676, 0.88 ) }
    dend_131 { pt3dadd( -160.409, -87.3719, -3.19762, 1.4 ) }
    dend_131 { pt3dadd( -161.733, -88.023, -3.43692, 1.4 ) }
    dend_131 { pt3dadd( -162.805, -88.5922, -3.82501, 0.96 ) }
    dend_131 { pt3dadd( -164.456, -89.4703, -4.79965, 0.74 ) }
    dend_131 { pt3dadd( -165.326, -89.9524, -5.6583, 0.74 ) }
    dend_131 { pt3dadd( -165.669, -90.1412, -6.20164, 0.74 ) }
    dend_131 { pt3dadd( -166.103, -90.2915, -7.0215, 0.74 ) }
    dend_131 { pt3dadd( -166.467, -90.2924, -7.68766, 0.88 ) }
    dend_131 { pt3dadd( -167.092, -90.1228, -8.54067, 0.88 ) }
    dend_131 { pt3dadd( -167.761, -89.8472, -9.23123, 0.88 ) }
    dend_131 { pt3dadd( -169.266, -89.2189, -10.3942, 1.62 ) }
    dend_131 { pt3dadd( -170.652, -88.6855, -11.3004, 1.47 ) }
    dend_131 { pt3dadd( -172.332, -88.1227, -12.1367, 1.03 ) }
    dend_131 { pt3dadd( -174.143, -87.5499, -12.936, 0.96 ) }
    dend_131 { pt3dadd( -175.315, -87.2006, -13.371, 1.11 ) }
    dend_131 { pt3dadd( -176.815, -86.7612, -13.8193, 1.25 ) }
    dend_131 { pt3dadd( -178.095, -86.3914, -14.094, 1.77 ) }
    dend_131 { pt3dadd( -179.975, -85.9792, -14.4407, 2.14 ) }
    // Section: dend_118, id: dend_118, parent: dend_117 (entry count 40/100)
    dend_118 { pt3dclear() }
    dend_118 { pt3dadd( -130.092, -74.8714, -2.51879, 0.59 ) }
    dend_118 { pt3dadd( -131.545, -73.8761, -3.08538, 0.59 ) }
    dend_118 { pt3dadd( -132.387, -73.1947, -3.44357, 0.59 ) }
    dend_118 { pt3dadd( -133.187, -72.429, -3.82406, 0.81 ) }
    dend_118 { pt3dadd( -134.07, -71.35, -4.37115, 0.52 ) }
    dend_118 { pt3dadd( -134.459, -70.7258, -4.71254, 0.37 ) }
    dend_118 { pt3dadd( -134.833, -70.0215, -5.16863, 0.37 ) }
    dend_118 { pt3dadd( -135.058, -69.4721, -5.64722, 0.37 ) }
    dend_118 { pt3dadd( -135.315, -68.8053, -6.36552, 0.44 ) }
    dend_118 { pt3dadd( -135.551, -68.2088, -7.13284, 0.44 ) }
    dend_118 { pt3dadd( -135.788, -67.713, -7.81678, 0.59 ) }
    dend_118 { pt3dadd( -136.222, -67.0707, -8.67246, 0.74 ) }
    dend_118 { pt3dadd( -136.917, -66.2093, -9.67907, 0.59 ) }
    dend_118 { pt3dadd( -137.476, -65.5021, -10.3704, 0.96 ) }
    dend_118 { pt3dadd( -137.82, -65.0438, -10.729, 0.96 ) }
    dend_118 { pt3dadd( -138.405, -64.2037, -11.182, 0.81 ) }
    dend_118 { pt3dadd( -139.077, -63.2062, -11.4971, 0.88 ) }
    dend_118 { pt3dadd( -139.813, -62.1428, -11.5911, 0.66 ) }
    dend_118 { pt3dadd( -140.566, -61.1405, -11.4877, 0.66 ) }
    dend_118 { pt3dadd( -141.32, -60.2476, -11.2142, 0.52 ) }
    dend_118 { pt3dadd( -142.288, -59.233, -10.727, 0.52 ) }
    dend_118 { pt3dadd( -143.288, -58.3275, -10.1406, 0.66 ) }
    dend_118 { pt3dadd( -144.363, -57.4692, -9.44874, 1.55 ) }
    dend_118 { pt3dadd( -145.149, -56.9317, -8.9094, 0.88 ) }
    dend_118 { pt3dadd( -146.407, -56.1863, -8.02253, 0.59 ) }
    dend_118 { pt3dadd( -147.2, -55.7393, -7.44991, 0.74 ) }
    dend_118 { pt3dadd( -147.743, -55.401, -7.09932, 0.88 ) }
    // Section: dend_116, id: dend_116, parent: dend_102 (entry count 67/100)
    dend_116 { pt3dclear() }
    dend_116 { pt3dadd( -75.7361, -33.9804, 4.22219, 1.03 ) }
    dend_116 { pt3dadd( -77.2463, -33.5483, 3.60284, 1.03 ) }
    dend_116 { pt3dadd( -78.2159, -33.2933, 3.28359, 0.74 ) }
    dend_116 { pt3dadd( -79.7837, -32.923, 2.87115, 0.81 ) }
    dend_116 { pt3dadd( -81.8377, -32.5602, 2.42182, 1.11 ) }
    dend_116 { pt3dadd( -83.2735, -32.3913, 2.10876, 0.81 ) }
    dend_116 { pt3dadd( -84.2441, -32.3433, 1.87553, 0.66 ) }
    dend_116 { pt3dadd( -84.9233, -32.406, 1.73561, 0.66 ) }
    dend_116 { pt3dadd( -85.9531, -32.6617, 1.48975, 0.66 ) }
    dend_116 { pt3dadd( -86.9951, -33.0669, 1.11729, 0.59 ) }
    dend_116 { pt3dadd( -87.7643, -33.4534, 0.64456, 0.66 ) }
    dend_116 { pt3dadd( -88.6562, -33.8467, -0.0272479, 0.52 ) }
    dend_116 { pt3dadd( -89.3737, -33.9842, -0.65865, 0.88 ) }
    dend_116 { pt3dadd( -90.0218, -33.897, -1.30096, 1.11 ) }
    dend_116 { pt3dadd( -91.0192, -33.5361, -2.36901, 0.81 ) }
    dend_116 { pt3dadd( -91.7375, -33.1942, -3.17307, 0.96 ) }
    dend_116 { pt3dadd( -92.5812, -32.7581, -4.1957, 1.03 ) }
    dend_116 { pt3dadd( -93.533, -32.2624, -5.48368, 0.59 ) }
    dend_116 { pt3dadd( -94.5, -31.8601, -6.99998, 1.11 ) }
    dend_116 { pt3dadd( -95.056, -31.7597, -7.98301, 1.33 ) }
    dend_116 { pt3dadd( -95.6505, -31.8446, -9.10933, 0.81 ) }
    dend_116 { pt3dadd( -96.4326, -32.1513, -10.5225, 0.66 ) }
    dend_116 { pt3dadd( -96.9775, -32.445, -11.4005, 0.81 ) }
    dend_116 { pt3dadd( -97.8585, -32.9326, -12.4653, 0.66 ) }
    dend_116 { pt3dadd( -98.8915, -33.4357, -13.3626, 0.74 ) }
    dend_116 { pt3dadd( -99.6793, -33.7661, -13.921, 0.52 ) }
    dend_116 { pt3dadd( -100.496, -34.0553, -14.4318, 0.96 ) }
    dend_116 { pt3dadd( -101.483, -34.352, -15.0282, 1.11 ) }
    dend_116 { pt3dadd( -102.723, -34.7361, -15.9097, 0.44 ) }
    dend_116 { pt3dadd( -103.303, -35.0408, -16.5759, 0.66 ) }
    dend_116 { pt3dadd( -103.657, -35.7234, -17.8877, 0.96 ) }
    dend_116 { pt3dadd( -103.815, -36.2072, -18.7033, 0.96 ) }
    dend_116 { pt3dadd( -104.088, -36.9312, -19.7938, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_116 { pt3dadd( -104.365, -37.5193, -20.5817, 0.81 ) }
    dend_116 { pt3dadd( -104.761, -38.0274, -21.2248, 1.03 ) }
    dend_116 { pt3dadd( -105.856, -38.6059, -21.8947, 0.88 ) }
    dend_116 { pt3dadd( -107.469, -38.9555, -22.4683, 0.81 ) }
    dend_116 { pt3dadd( -108.939, -39.0473, -22.9493, 0.66 ) }
    dend_116 { pt3dadd( -110.351, -38.8926, -23.4171, 0.37 ) }
    dend_116 { pt3dadd( -111.571, -38.4513, -23.9344, 0.37 ) }
    dend_116 { pt3dadd( -112.214, -38.0575, -24.2954, 0.59 ) }
    dend_116 { pt3dadd( -113.234, -37.1045, -25.0144, 0.59 ) }
    dend_116 { pt3dadd( -113.699, -36.5469, -25.4627, 0.88 ) }
    dend_116 { pt3dadd( -114.275, -35.7321, -26.1478, 1.18 ) }
    dend_116 { pt3dadd( -114.749, -35.0008, -26.7903, 0.88 ) }
    dend_116 { pt3dadd( -115.291, -34.0814, -27.5409, 0.88 ) }
    dend_116 { pt3dadd( -116.003, -32.8125, -28.3901, 0.88 ) }
    dend_116 { pt3dadd( -116.708, -31.4253, -29.141, 0.59 ) }
    dend_116 { pt3dadd( -117.113, -30.5658, -29.5703, 0.88 ) }
    dend_116 { pt3dadd( -117.333, -30.0762, -29.8097, 0.96 ) }
    dend_116 { pt3dadd( -117.814, -28.8937, -30.3986, 0.59 ) }
    dend_116 { pt3dadd( -118.237, -27.853, -30.9412, 0.81 ) }
    dend_116 { pt3dadd( -118.696, -26.8709, -31.4437, 0.81 ) }
    dend_116 { pt3dadd( -119.126, -26.0735, -31.7748, 1.03 ) }
    dend_116 { pt3dadd( -119.712, -25.1117, -32.0741, 1.25 ) }
    dend_116 { pt3dadd( -120.231, -24.3166, -32.239, 1.11 ) }
    dend_116 { pt3dadd( -121.027, -23.1859, -32.3807, 1.11 ) }
    dend_116 { pt3dadd( -121.638, -22.3312, -32.43, 0.59 ) }
    dend_116 { pt3dadd( -122.265, -21.411, -32.4326, 0.81 ) }
    dend_116 { pt3dadd( -123.078, -20.0659, -32.4061, 0.74 ) }
    dend_116 { pt3dadd( -123.669, -18.9579, -32.3825, 0.59 ) }
    dend_116 { pt3dadd( -124.103, -18.0414, -32.3813, 0.81 ) }
    dend_116 { pt3dadd( -124.554, -16.9288, -32.4401, 0.74 ) }
    dend_116 { pt3dadd( -124.917, -15.8736, -32.5534, 0.66 ) }
    dend_116 { pt3dadd( -125.212, -14.8591, -32.6923, 0.59 ) }
    dend_116 { pt3dadd( -125.409, -14.0777, -32.7978, 0.59 ) }
    dend_116 { pt3dadd( -125.671, -12.9795, -32.915, 0.81 ) }
    dend_116 { pt3dadd( -125.944, -11.9981, -32.977, 0.88 ) }
    dend_116 { pt3dadd( -126.396, -10.7181, -32.9891, 0.74 ) }
    dend_116 { pt3dadd( -126.883, -9.62244, -32.9603, 0.66 ) }
    dend_116 { pt3dadd( -127.492, -8.45684, -32.9167, 0.66 ) }
    dend_116 { pt3dadd( -128.15, -7.29195, -32.8786, 0.66 ) }
    dend_116 { pt3dadd( -128.938, -5.90688, -32.8294, 0.88 ) }
    dend_116 { pt3dadd( -129.633, -4.65157, -32.7447, 1.11 ) }
    dend_116 { pt3dadd( -130.428, -3.08853, -32.5691, 0.66 ) }
    dend_116 { pt3dadd( -130.926, -1.84377, -32.3838, 0.88 ) }
    dend_116 { pt3dadd( -131.275, -0.414353, -32.1323, 0.66 ) }
    dend_116 { pt3dadd( -131.468, 1.3459, -31.7897, 0.52 ) }
    dend_116 { pt3dadd( -131.498, 2.85925, -31.465, 0.88 ) }
    dend_116 { pt3dadd( -131.467, 3.98146, -31.2196, 0.52 ) }
    dend_116 { pt3dadd( -131.407, 5.10791, -30.942, 0.74 ) }
    dend_116 { pt3dadd( -131.338, 6.61668, -30.5531, 0.52 ) }
    dend_116 { pt3dadd( -131.35, 7.36647, -30.3702, 0.37 ) }
    dend_116 { pt3dadd( -131.497, 8.37892, -30.2032, 0.37 ) }
    dend_116 { pt3dadd( -131.768, 9.35218, -30.1154, 0.37 ) }
    dend_116 { pt3dadd( -132.098, 10.1475, -30.0503, 0.59 ) }
    dend_116 { pt3dadd( -132.492, 10.8953, -30.0029, 0.44 ) }
    dend_116 { pt3dadd( -133.082, 11.86, -29.9658, 0.44 ) }
    dend_116 { pt3dadd( -133.551, 12.6745, -29.9963, 0.44 ) }
    dend_116 { pt3dadd( -133.89, 13.3405, -30.1089, 0.37 ) }
    dend_116 { pt3dadd( -134.222, 14.0094, -30.2307, 0.37 ) }
    dend_116 { pt3dadd( -134.692, 14.8758, -30.4747, 0.37 ) }
    dend_116 { pt3dadd( -134.962, 15.3224, -30.6573, 0.37 ) }
    dend_116 { pt3dadd( -135.54, 16.1411, -31.1984, 0.37 ) }
    dend_116 { pt3dadd( -136.114, 16.8852, -31.9461, 0.29 ) }
    dend_116 { pt3dadd( -143.726, 22.234, -35.4052, 0.29 ) }
    dend_116 { pt3dadd( -151.159, 28.1308, -38.2614, 0.29 ) }
    dend_116 { pt3dadd( -158.275, 34.9337, -39.0868, 0.29 ) }
    dend_116 { pt3dadd( -163.685, 42.8936, -41.1084, 0.29 ) }
    dend_116 { pt3dadd( -168.496, 51.3442, -42.4242, 0.29 ) }
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 67/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( -75.7361, -33.9804, 4.22219, 1.62 ) }
    dend_103 { pt3dadd( -76.7696, -34.8084, 3.52249, 1.62 ) }
    dend_103 { pt3dadd( -77.5375, -35.2148, 3.27697, 1.4 ) }
    dend_103 { pt3dadd( -78.999, -35.8436, 3.19788, 1.25 ) }
    dend_103 { pt3dadd( -80.0022, -36.3264, 3.33834, 1.25 ) }
    dend_103 { pt3dadd( -80.928, -36.8462, 3.58151, 1.33 ) }
    dend_103 { pt3dadd( -82.2461, -37.6568, 3.98754, 0.88 ) }
    dend_103 { pt3dadd( -83.5458, -38.4155, 4.55303, 0.88 ) }
    dend_103 { pt3dadd( -84.6584, -39.0978, 5.13492, 1.33 ) }
    dend_103 { pt3dadd( -85.9155, -39.928, 5.87186, 1.25 ) }
    dend_103 { pt3dadd( -86.8889, -40.6803, 6.46038, 1.4 ) }
    dend_103 { pt3dadd( -87.9141, -41.6515, 7.06827, 1.25 ) }
    dend_103 { pt3dadd( -88.9348, -42.8024, 7.63109, 1.33 ) }
    dend_103 { pt3dadd( -89.85, -44.0424, 8.10136, 1.62 ) }
    dend_103 { pt3dadd( -90.9282, -45.8266, 8.61009, 0.81 ) }
    dend_103 { pt3dadd( -91.5598, -47.1185, 8.89992, 0.96 ) }
    dend_103 { pt3dadd( -92.0318, -48.4248, 9.10077, 0.96 ) }
    dend_103 { pt3dadd( -92.2685, -49.3098, 9.15949, 1.47 ) }
    dend_103 { pt3dadd( -92.7, -51.0669, 9.09058, 1.25 ) }
    dend_103 { pt3dadd( -93.0863, -52.6003, 8.92045, 1.03 ) }
    dend_103 { pt3dadd( -93.2662, -53.199, 8.80253, 1.25 ) }
    dend_103 { pt3dadd( -93.7794, -54.543, 8.50965, 1.25 ) }
    dend_103 { pt3dadd( -94.4136, -55.9611, 8.23895, 0.88 ) }
    dend_103 { pt3dadd( -95.1558, -57.5158, 8.05929, 1.4 ) }
    dend_103 { pt3dadd( -95.7509, -58.6697, 8.06251, 1.47 ) }
    dend_103 { pt3dadd( -96.5441, -60.2144, 8.24767, 0.96 ) }
    dend_103 { pt3dadd( -97.0257, -61.1627, 8.43066, 1.18 ) }
    dend_103 { pt3dadd( -97.6585, -62.4778, 8.73776, 1.4 ) }
    dend_103 { pt3dadd( -98.4105, -64.2283, 9.1405, 0.66 ) }
    dend_103 { pt3dadd( -99.003, -65.7988, 9.34282, 0.96 ) }
    dend_103 { pt3dadd( -99.456, -66.8895, 9.18523, 1.4 ) }
    dend_103 { pt3dadd( -99.8883, -67.8261, 8.68863, 1.18 ) }
    dend_103 { pt3dadd( -100.454, -68.9685, 7.78743, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_103 { pt3dadd( -100.836, -69.6358, 7.12064, 1.4 ) }
    dend_103 { pt3dadd( -101.502, -70.7101, 5.88053, 1.62 ) }
    dend_103 { pt3dadd( -102.097, -71.7208, 4.66749, 1.62 ) }
    dend_103 { pt3dadd( -102.774, -73.045, 3.16466, 1.03 ) }
    dend_103 { pt3dadd( -103.097, -73.7551, 2.40476, 0.88 ) }
    dend_103 { pt3dadd( -103.584, -74.968, 1.19405, 0.96 ) }
    dend_103 { pt3dadd( -103.949, -75.8777, 0.315556, 0.96 ) }
    dend_103 { pt3dadd( -104.374, -76.9861, -0.713957, 1.11 ) }
    dend_103 { pt3dadd( -104.705, -78.0727, -1.72112, 1.62 ) }
    dend_103 { pt3dadd( -104.833, -78.6379, -2.30712, 1.7 ) }
    dend_103 { pt3dadd( -104.898, -79.447, -3.12743, 1.84 ) }
    // Section: dend_95, id: dend_95, parent: dend_91 (entry count 11/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( 253.889, -87.0166, -73.0107, 0.29 ) }
    dend_95 { pt3dadd( 263.734, -87.0284, -74.767, 0.29 ) }
    dend_95 { pt3dadd( 273.301, -86.8695, -77.672, 0.29 ) }
    dend_95 { pt3dadd( 282.773, -87.8986, -80.7007, 0.29 ) }
    dend_95 { pt3dadd( 292.196, -90.2382, -83.0353, 0.29 ) }
    dend_95 { pt3dadd( 301.669, -92.7058, -84.9982, 0.29 ) }
    dend_95 { pt3dadd( 310.99, -93.2099, -88.5837, 0.29 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 18/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 253.889, -87.0166, -73.0107, 0.29 ) }
    dend_92 { pt3dadd( 261.692, -93.0775, -73.7004, 0.29 ) }
    dend_92 { pt3dadd( 269.713, -98.891, -74.0392, 0.29 ) }
    dend_92 { pt3dadd( 277.442, -105.034, -73.2975, 0.29 ) }
    dend_92 { pt3dadd( 284.919, -111.496, -72.8764, 0.29 ) }
    dend_92 { pt3dadd( 292.191, -117.841, -70.6937, 0.29 ) }
    dend_92 { pt3dadd( 299.437, -124.238, -68.5842, 0.29 ) }
    // Section: dend_87, id: dend_87, parent: dend_83 (entry count 25/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -145.202, -153.043, -169.169, 0.29 ) }
    dend_87 { pt3dadd( -153.349, -158.046, -171.872, 0.29 ) }
    dend_87 { pt3dadd( -161.739, -163.25, -172.923, 0.29 ) }
    dend_87 { pt3dadd( -170.988, -166.687, -174.351, 0.29 ) }
    dend_87 { pt3dadd( -180.049, -170.712, -175.274, 0.29 ) }
    dend_87 { pt3dadd( -188.419, -175.646, -177.356, 0.29 ) }
    dend_87 { pt3dadd( -196.48, -180.359, -180.769, 0.29 ) }
    dend_87 { pt3dadd( -204.991, -184.409, -183.982, 0.29 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 33/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -145.202, -153.043, -169.169, 0.29 ) }
    dend_84 { pt3dadd( -153.41, -157.974, -171.824, 0.29 ) }
    dend_84 { pt3dadd( -161.046, -164.231, -172.541, 0.29 ) }
    dend_84 { pt3dadd( -168.874, -169.808, -174.989, 0.29 ) }
    dend_84 { pt3dadd( -177.348, -174.104, -177.952, 0.29 ) }
    dend_84 { pt3dadd( -186.13, -177.11, -181.61, 0.29 ) }
    dend_84 { pt3dadd( -195.474, -178.45, -184.897, 0.29 ) }
    dend_84 { pt3dadd( -203.884, -181.162, -189.538, 0.29 ) }
    // Section: dend_69, id: dend_69, parent: dend_53 (entry count 41/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -62.9512, -113.166, -34.1337, 0.59 ) }
    dend_69 { pt3dadd( -69.6353, -120.128, -32.0532, 0.59 ) }
    dend_69 { pt3dadd( -74.6038, -127.717, -28.2137, 0.59 ) }
    dend_69 { pt3dadd( -78.7502, -135.164, -23.267, 0.59 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 45/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -62.9512, -113.166, -34.1337, 0.22 ) }
    dend_54 { pt3dadd( -70.7053, -119.268, -33.2977, 0.59 ) }
    dend_54 { pt3dadd( -78.4693, -125.23, -31.7708, 0.59 ) }
    dend_54 { pt3dadd( -87.2776, -128.912, -28.9147, 0.59 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 49/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -116.252, -228.474, -83.0712, 0.22 ) }
    dend_43 { pt3dadd( -124.441, -234.064, -82.8089, 0.22 ) }
    dend_43 { pt3dadd( -132.526, -239.549, -81.0811, 0.22 ) }
    dend_43 { pt3dadd( -140.425, -245.199, -79.0741, 0.22 ) }
    dend_43 { pt3dadd( -149.564, -249.121, -78.5324, 0.22 ) }
    dend_43 { pt3dadd( -158.71, -252.409, -76.3012, 0.22 ) }
    dend_43 { pt3dadd( -167.696, -256.616, -75.5076, 0.22 ) }
    dend_43 { pt3dadd( -176.331, -261.516, -75.9323, 0.22 ) }
    dend_43 { pt3dadd( -183.376, -268.217, -77.7058, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 58/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -116.252, -228.474, -83.0712, 0.44 ) }
    dend_40 { pt3dadd( -121.451, -234.534, -88.931, 0.22 ) }
    dend_40 { pt3dadd( -125.518, -239.382, -96.5948, 0.22 ) }
    dend_40 { pt3dadd( -129.241, -244.251, -104.418, 0.22 ) }
    dend_40 { pt3dadd( -132.09, -247.573, -113.378, 0.22 ) }
    dend_40 { pt3dadd( -135.381, -250.705, -122.258, 0.22 ) }
    dend_40 { pt3dadd( -139.495, -253.633, -130.863, 0.22 ) }
    dend_40 { pt3dadd( -142.079, -257.848, -139.502, 0.22 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 66/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 8.95658, -148.193, 63.9747, 0.22 ) }
    dend_36 { pt3dadd( 9.00296, -149.23, 64.5999, 0.22 ) }
    dend_36 { pt3dadd( 9.10949, -150.244, 65.2257, 0.15 ) }
    dend_36 { pt3dadd( 9.26058, -151.197, 65.787, 0.29 ) }
    dend_36 { pt3dadd( 9.39479, -151.97, 66.219, 0.15 ) }
    dend_36 { pt3dadd( 9.58089, -152.909, 66.701, 1.03 ) }
    dend_36 { pt3dadd( 9.82863, -154.117, 67.2813, 0.22 ) }
    dend_36 { pt3dadd( 9.97052, -155.047, 67.7033, 0.88 ) }
    dend_36 { pt3dadd( 10.0514, -155.785, 68.0084, 0.52 ) }
    dend_36 { pt3dadd( 10.0859, -156.213, 68.1756, 0.29 ) }
    dend_36 { pt3dadd( 10.1197, -157.216, 68.5186, 0.15 ) }
    dend_36 { pt3dadd( 10.0708, -158.144, 68.8234, 0.15 ) }
    dend_36 { pt3dadd( 9.95492, -159.163, 69.1597, 0.88 ) }
    dend_36 { pt3dadd( 9.77551, -160.385, 69.5749, 0.22 ) }
    dend_36 { pt3dadd( 9.67811, -161.098, 69.823, 1.11 ) }
    dend_36 { pt3dadd( 9.61355, -161.635, 69.9948, 0.88 ) }
    dend_36 { pt3dadd( 9.46777, -162.731, 70.3376, 0.15 ) }
    dend_36 { pt3dadd( 9.36868, -163.452, 70.5445, 0.15 ) }
    dend_36 { pt3dadd( 9.2977, -164.016, 70.6852, 0.52 ) }
    dend_36 { pt3dadd( 9.18466, -164.951, 70.879, 0.22 ) }
    dend_36 { pt3dadd( 8.99924, -166.522, 71.2189, 0.15 ) }
    dend_36 { pt3dadd( 8.89676, -167.33, 71.4083, 0.15 ) }
    dend_36 { pt3dadd( 8.79465, -168.274, 71.658, 1.18 ) }
    dend_36 { pt3dadd( 8.69505, -169.288, 71.9652, 0.15 ) }
    dend_36 { pt3dadd( 8.64898, -170.109, 72.2512, 0.59 ) }
    dend_36 { pt3dadd( 8.67837, -171.013, 72.5973, 0.22 ) }
    dend_36 { pt3dadd( 8.85268, -172.034, 73.0036, 0.74 ) }
    dend_36 { pt3dadd( 9.11533, -173.05, 73.3728, 0.22 ) }
    dend_36 { pt3dadd( 9.22853, -173.44, 73.5062, 0.59 ) }
    dend_36 { pt3dadd( 9.49271, -174.554, 73.8419, 0.22 ) }
    dend_36 { pt3dadd( 9.65385, -175.364, 74.0621, 0.74 ) }
    dend_36 { pt3dadd( 9.77815, -176.065, 74.2334, 0.59 ) }
    dend_36 { pt3dadd( 9.90914, -176.943, 74.438, 0.22 ) }
    dend_36 { pt3dadd( 10.0062, -177.927, 74.6573, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_36 { pt3dadd( 10.0951, -179.159, 74.9443, 0.15 ) }
    dend_36 { pt3dadd( 10.1524, -180.362, 75.2407, 0.22 ) }
    dend_36 { pt3dadd( 10.1626, -181.209, 75.4709, 0.22 ) }
    dend_36 { pt3dadd( 10.1628, -181.952, 75.6936, 0.59 ) }
    dend_36 { pt3dadd( 10.2097, -182.766, 75.9714, 0.15 ) }
    dend_36 { pt3dadd( 10.3126, -183.382, 76.2018, 0.66 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 6/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 8.95658, -148.193, 63.9747, 0.22 ) }
    dend_35 { pt3dadd( 7.93014, -149.243, 64.2852, 0.22 ) }
    dend_35 { pt3dadd( 7.53917, -149.679, 64.4158, 0.22 ) }
    dend_35 { pt3dadd( 6.80953, -150.634, 64.6606, 0.37 ) }
    dend_35 { pt3dadd( 6.18811, -151.555, 64.866, 0.37 ) }
    dend_35 { pt3dadd( 5.68384, -152.311, 65.0294, 0.88 ) }
    dend_35 { pt3dadd( 4.85115, -153.528, 65.3291, 1.25 ) }
    dend_35 { pt3dadd( 4.28307, -154.32, 65.5629, 0.22 ) }
    dend_35 { pt3dadd( 3.72791, -155.15, 65.8339, 0.22 ) }
    dend_35 { pt3dadd( 3.37238, -155.754, 66.026, 0.22 ) }
    dend_35 { pt3dadd( 2.92656, -156.572, 66.2948, 0.07 ) }
    dend_35 { pt3dadd( 2.53614, -157.352, 66.5412, 0.07 ) }
    dend_35 { pt3dadd( 2.28305, -157.922, 66.7444, 0.59 ) }
    dend_35 { pt3dadd( 2.01605, -158.577, 66.9753, 1.11 ) }
    dend_35 { pt3dadd( 1.47583, -160.02, 67.4912, 0.22 ) }
    dend_35 { pt3dadd( 1.267, -160.691, 67.707, 0.88 ) }
    dend_35 { pt3dadd( 1.04767, -161.618, 67.9474, 0.15 ) }
    dend_35 { pt3dadd( 0.920246, -162.339, 68.1053, 0.74 ) }
    dend_35 { pt3dadd( 0.759783, -163.697, 68.3562, 0.07 ) }
    dend_35 { pt3dadd( 0.737292, -164.094, 68.4206, 0.74 ) }
    dend_35 { pt3dadd( 0.745348, -164.797, 68.5262, 0.88 ) }
    dend_35 { pt3dadd( 0.779982, -165.861, 68.6532, 0.15 ) }
    dend_35 { pt3dadd( 0.787977, -166.524, 68.6771, 0.15 ) }
    dend_35 { pt3dadd( 0.785061, -167.328, 68.636, 0.15 ) }
    dend_35 { pt3dadd( 0.798103, -167.715, 68.5764, 0.52 ) }
    dend_35 { pt3dadd( 0.843647, -168.418, 68.465, 0.52 ) }
    dend_35 { pt3dadd( 0.933795, -169.172, 68.3376, 0.22 ) }
    dend_35 { pt3dadd( 1.11196, -170.234, 68.1208, 0.88 ) }
    dend_35 { pt3dadd( 1.27826, -171.007, 67.9474, 0.44 ) }
    dend_35 { pt3dadd( 1.58273, -172.296, 67.6333, 0.15 ) }
    dend_35 { pt3dadd( 1.81305, -173.249, 67.3739, 0.15 ) }
    dend_35 { pt3dadd( 1.9471, -173.833, 67.1839, 0.81 ) }
    dend_35 { pt3dadd( 2.07135, -174.49, 66.9111, 0.81 ) }
    dend_35 { pt3dadd( 2.15391, -175.4, 66.4125, 0.22 ) }
    dend_35 { pt3dadd( 2.09225, -176.099, 65.8763, 0.22 ) }
    dend_35 { pt3dadd( 1.95505, -176.554, 65.4265, 0.52 ) }
    dend_35 { pt3dadd( 1.69693, -177.104, 64.7841, 0.66 ) }
    dend_35 { pt3dadd( 1.21127, -177.933, 63.7281, 0.37 ) }
    dend_35 { pt3dadd( 0.841332, -178.493, 62.9473, 0.37 ) }
    dend_35 { pt3dadd( 0.504014, -178.945, 62.2626, 0.22 ) }
    dend_35 { pt3dadd( 0.285675, -179.242, 61.8426, 0.22 ) }
    dend_35 { pt3dadd( -0.0028411, -179.609, 61.3488, 0.22 ) }
    dend_35 { pt3dadd( -0.874739, -180.548, 60.1713, 0.37 ) }
    dend_35 { pt3dadd( -1.39457, -181.0, 59.6505, 0.74 ) }
    dend_35 { pt3dadd( -1.95821, -181.469, 59.2029, 0.88 ) }
    dend_35 { pt3dadd( -2.69855, -182.116, 58.6784, 0.22 ) }
    dend_35 { pt3dadd( -3.01145, -182.402, 58.4655, 0.22 ) }
    dend_35 { pt3dadd( -3.50015, -182.952, 58.1059, 0.22 ) }
    dend_35 { pt3dadd( -3.97034, -183.706, 57.6776, 0.29 ) }
    dend_35 { pt3dadd( -4.27037, -184.438, 57.2708, 0.29 ) }
    dend_35 { pt3dadd( -4.52289, -185.351, 56.7528, 0.59 ) }
    dend_35 { pt3dadd( -4.72588, -186.319, 56.2296, 0.29 ) }
    dend_35 { pt3dadd( -4.92992, -187.424, 55.7042, 0.29 ) }
    dend_35 { pt3dadd( -5.08879, -188.411, 55.2683, 0.52 ) }
    dend_35 { pt3dadd( -5.28375, -189.79, 54.6804, 0.52 ) }
    dend_35 { pt3dadd( -5.43066, -190.956, 54.2006, 0.81 ) }
    dend_35 { pt3dadd( -5.54585, -192.019, 53.7955, 1.11 ) }
    dend_35 { pt3dadd( -5.67778, -193.347, 53.3662, 0.59 ) }
    dend_35 { pt3dadd( -5.724, -194.357, 53.0907, 0.22 ) }
    dend_35 { pt3dadd( -5.68183, -194.923, 52.9642, 0.22 ) }
    dend_35 { pt3dadd( -5.45243, -195.988, 52.7722, 0.81 ) }
    dend_35 { pt3dadd( -5.16641, -197.046, 52.6302, 0.15 ) }
    dend_35 { pt3dadd( -4.72619, -198.518, 52.4895, 0.22 ) }
    dend_35 { pt3dadd( -4.41965, -199.508, 52.4601, 0.22 ) }
    dend_35 { pt3dadd( -4.21783, -200.255, 52.4953, 0.81 ) }
    dend_35 { pt3dadd( -3.92718, -201.549, 52.6096, 0.15 ) }
    dend_35 { pt3dadd( -3.77015, -202.549, 52.7385, 0.15 ) }
    dend_35 { pt3dadd( -3.72854, -202.953, 52.8042, 0.29 ) }
    dend_35 { pt3dadd( -3.6345, -203.886, 52.9966, 0.96 ) }
    dend_35 { pt3dadd( -3.55847, -205.433, 53.3494, 0.07 ) }
    dend_35 { pt3dadd( -3.56335, -206.34, 53.5516, 0.15 ) }
    dend_35 { pt3dadd( -3.57602, -207.279, 53.7486, 0.07 ) }
    dend_35 { pt3dadd( -3.57031, -207.784, 53.843, 0.29 ) }
    dend_35 { pt3dadd( -3.57358, -208.495, 53.965, 0.07 ) }
    dend_35 { pt3dadd( -3.61632, -209.253, 54.0908, 0.66 ) }
    dend_35 { pt3dadd( -3.74231, -210.346, 54.2925, 0.07 ) }
    dend_35 { pt3dadd( -3.80112, -210.778, 54.3666, 0.44 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 83/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 17.0336, -102.938, -32.3553, 0.59 ) }
    dend_33 { pt3dadd( 17.1364, -102.33, -33.3736, 0.59 ) }
    dend_33 { pt3dadd( 17.2457, -101.82, -34.4159, 0.59 ) }
    dend_33 { pt3dadd( 17.2588, -101.363, -35.5746, 0.59 ) }
    dend_33 { pt3dadd( 17.1747, -101.269, -36.0537, 0.59 ) }
    dend_33 { pt3dadd( 16.8175, -101.319, -36.9129, 0.59 ) }
    dend_33 { pt3dadd( 16.6685, -101.385, -37.1722, 0.59 ) }
    dend_33 { pt3dadd( 16.3001, -101.674, -37.6635, 0.59 ) }
    dend_33 { pt3dadd( 15.633, -102.373, -38.4851, 0.74 ) }
    dend_33 { pt3dadd( 14.815, -103.469, -39.5063, 0.66 ) }
    dend_33 { pt3dadd( 14.4197, -104.08, -40.0298, 0.88 ) }
    dend_33 { pt3dadd( 13.8284, -105.133, -40.8456, 0.88 ) }
    dend_33 { pt3dadd( 13.3878, -106.122, -41.542, 0.88 ) }
    dend_33 { pt3dadd( 13.0753, -107.015, -42.1215, 0.59 ) }
    dend_33 { pt3dadd( 12.7335, -108.197, -42.8396, 0.81 ) }
    dend_33 { pt3dadd( 12.4676, -109.134, -43.3824, 0.66 ) }
    dend_33 { pt3dadd( 12.2113, -109.863, -43.7682, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_33 { pt3dadd( 11.7568, -110.725, -44.1473, 0.52 ) }
    dend_33 { pt3dadd( 11.1722, -111.405, -44.4002, 0.52 ) }
    dend_33 { pt3dadd( 10.2937, -112.051, -44.6369, 0.44 ) }
    dend_33 { pt3dadd( 9.54808, -112.447, -44.802, 0.44 ) }
    dend_33 { pt3dadd( 8.82431, -112.723, -44.9466, 0.81 ) }
    dend_33 { pt3dadd( 7.95399, -112.938, -45.1483, 0.52 ) }
    dend_33 { pt3dadd( 6.81198, -113.079, -45.4601, 0.74 ) }
    dend_33 { pt3dadd( 5.07268, -113.124, -46.0409, 0.37 ) }
    dend_33 { pt3dadd( 4.11211, -113.092, -46.4321, 0.37 ) }
    dend_33 { pt3dadd( 3.09522, -112.945, -46.8857, 0.29 ) }
    dend_33 { pt3dadd( 2.3122, -112.686, -47.2406, 0.29 ) }
    dend_33 { pt3dadd( 1.64735, -112.316, -47.5203, 0.22 ) }
    dend_33 { pt3dadd( 1.18319, -111.941, -47.6673, 0.22 ) }
    dend_33 { pt3dadd( 0.30874, -110.928, -47.7242, 0.22 ) }
    dend_33 { pt3dadd( -0.179287, -110.251, -47.5868, 0.29 ) }
    dend_33 { pt3dadd( -0.546763, -109.63, -47.3018, 0.29 ) }
    dend_33 { pt3dadd( -1.0581, -108.667, -46.662, 0.22 ) }
    dend_33 { pt3dadd( -1.18253, -108.317, -46.3711, 0.22 ) }
    dend_33 { pt3dadd( -1.24275, -107.724, -45.8345, 0.22 ) }
    dend_33 { pt3dadd( -1.21863, -107.542, -45.6669, 0.22 ) }
    dend_33 { pt3dadd( -1.11113, -107.215, -45.3298, 0.22 ) }
    dend_33 { pt3dadd( -9.10647, -110.016, -50.6049, 0.22 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 17.0336, -102.938, -32.3553, 0.22 ) }
    dend_32 { pt3dadd( 15.6844, -103.437, -32.7337, 0.22 ) }
    dend_32 { pt3dadd( 14.51, -103.871, -33.0631, 0.44 ) }
    dend_32 { pt3dadd( 13.7156, -104.164, -33.2858, 0.59 ) }
    dend_32 { pt3dadd( 13.1204, -104.384, -33.4528, 0.59 ) }
    dend_32 { pt3dadd( 3.97783, -106.283, -37.0055, 0.59 ) }
    dend_32 { pt3dadd( -4.63291, -109.206, -41.1122, 0.59 ) }
    dend_32 { pt3dadd( -13.1646, -113.164, -44.3881, 0.59 ) }
    dend_32 { pt3dadd( -21.1042, -115.947, -49.756, 0.59 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -64.7386, -101.942, 6.80352, 0.22 ) }
    dend_29 { pt3dadd( -64.7774, -103.256, 7.1226, 0.22 ) }
    dend_29 { pt3dadd( -64.7058, -104.2, 7.3933, 0.22 ) }
    dend_29 { pt3dadd( -64.6436, -105.018, 7.62821, 0.22 ) }
    dend_29 { pt3dadd( -64.5558, -106.175, 7.96013, 0.07 ) }
    dend_29 { pt3dadd( -64.492, -107.015, 8.20112, 0.29 ) }
    dend_29 { pt3dadd( -64.4213, -107.947, 8.46846, 0.29 ) }
    dend_29 { pt3dadd( -64.3843, -108.659, 8.78982, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 39/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -64.7386, -101.942, 6.80352, 0.74 ) }
    dend_24 { pt3dadd( -65.2128, -103.348, 6.25057, 0.74 ) }
    dend_24 { pt3dadd( -65.6204, -104.898, 5.41193, 0.81 ) }
    dend_24 { pt3dadd( -65.8896, -106.018, 4.76044, 0.81 ) }
    dend_24 { pt3dadd( -66.1561, -107.183, 4.08486, 0.96 ) }
    dend_24 { pt3dadd( -66.4093, -108.4, 3.42336, 1.03 ) }
    dend_24 { pt3dadd( -66.7011, -109.857, 2.68739, 1.33 ) }
    dend_24 { pt3dadd( -66.9489, -111.18, 1.96481, 0.81 ) }
    dend_24 { pt3dadd( -67.2328, -112.448, 1.2543, 0.66 ) }
    dend_24 { pt3dadd( -67.4976, -113.35, 0.78922, 1.03 ) }
    dend_24 { pt3dadd( -67.9779, -114.638, 0.210744, 0.81 ) }
    dend_24 { pt3dadd( -68.5458, -115.862, -0.239073, 0.59 ) }
    dend_24 { pt3dadd( -69.1624, -116.941, -0.565928, 0.96 ) }
    dend_24 { pt3dadd( -69.9508, -118.146, -0.884583, 1.11 ) }
    dend_24 { pt3dadd( -70.3106, -118.676, -1.02621, 1.11 ) }
    dend_24 { pt3dadd( -70.6233, -119.137, -1.14731, 0.88 ) }
    dend_24 { pt3dadd( -71.4414, -120.422, -1.50026, 1.33 ) }
    dend_24 { pt3dadd( -72.266, -121.993, -1.90609, 0.66 ) }
    dend_24 { pt3dadd( -72.6756, -123.065, -2.14243, 0.81 ) }
    dend_24 { pt3dadd( -72.9728, -124.105, -2.34634, 0.81 ) }
    dend_24 { pt3dadd( -73.1999, -125.047, -2.53007, 0.96 ) }
    dend_24 { pt3dadd( -73.409, -126.064, -2.73076, 0.52 ) }
    dend_24 { pt3dadd( -73.5356, -127.041, -2.92207, 0.52 ) }
    dend_24 { pt3dadd( -73.5737, -128.01, -3.09115, 0.66 ) }
    dend_24 { pt3dadd( -73.5889, -128.998, -3.26247, 0.74 ) }
    dend_24 { pt3dadd( -73.6042, -129.454, -3.32666, 0.74 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 65/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -114.043, -287.145, 95.1907, 0.29 ) }
    dend_22 { pt3dadd( -113.207, -288.088, 95.4529, 0.29 ) }
    dend_22 { pt3dadd( -112.775, -288.557, 95.5913, 0.81 ) }
    dend_22 { pt3dadd( -112.288, -289.104, 95.7918, 0.66 ) }
    dend_22 { pt3dadd( -111.52, -290.018, 96.1655, 0.52 ) }
    dend_22 { pt3dadd( -110.657, -291.07, 96.5984, 0.22 ) }
    dend_22 { pt3dadd( -110.153, -291.714, 96.8464, 0.37 ) }
    dend_22 { pt3dadd( -109.681, -292.317, 97.096, 0.37 ) }
    dend_22 { pt3dadd( -109.186, -293.091, 97.3771, 0.22 ) }
    dend_22 { pt3dadd( -108.822, -293.89, 97.6204, 0.22 ) }
    dend_22 { pt3dadd( -108.577, -294.779, 97.8382, 0.29 ) }
    dend_22 { pt3dadd( -108.396, -295.955, 98.0414, 0.22 ) }
    dend_22 { pt3dadd( -108.356, -296.499, 98.1096, 0.81 ) }
    dend_22 { pt3dadd( -108.346, -297.997, 98.2245, 0.22 ) }
    dend_22 { pt3dadd( -108.398, -298.863, 98.2487, 0.22 ) }
    dend_22 { pt3dadd( -108.44, -299.164, 98.2533, 0.22 ) }
    dend_22 { pt3dadd( -108.544, -299.616, 98.2789, 0.22 ) }
    dend_22 { pt3dadd( -108.771, -300.514, 98.4004, 0.44 ) }
    dend_22 { pt3dadd( -108.867, -301.068, 98.5111, 0.22 ) }
    dend_22 { pt3dadd( -108.893, -301.653, 98.6753, 0.22 ) }
    dend_22 { pt3dadd( -108.845, -302.332, 98.8894, 0.88 ) }
    dend_22 { pt3dadd( -108.668, -303.448, 99.2601, 0.22 ) }
    dend_22 { pt3dadd( -108.454, -304.26, 99.5349, 0.15 ) }
    dend_22 { pt3dadd( -108.197, -305.047, 99.7882, 0.59 ) }
    dend_22 { pt3dadd( -107.877, -305.921, 100.04, 0.15 ) }
    dend_22 { pt3dadd( -107.568, -306.675, 100.257, 0.15 ) }
    dend_22 { pt3dadd( -107.247, -307.384, 100.45, 0.66 ) }
    dend_22 { pt3dadd( -106.81, -308.279, 100.654, 0.15 ) }
    dend_22 { pt3dadd( -106.391, -309.216, 100.831, 0.15 ) }
    dend_22 { pt3dadd( -106.115, -309.971, 100.975, 0.52 ) }
    dend_22 { pt3dadd( -105.796, -311.127, 101.182, 0.22 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 96/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -114.043, -287.145, 95.1907, 0.29 ) }
    dend_21 { pt3dadd( -112.562, -287.561, 96.4244, 0.29 ) }
    dend_21 { pt3dadd( -111.91, -287.768, 97.0228, 0.44 ) }
    dend_21 { pt3dadd( -111.023, -288.126, 97.9746, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_21 { pt3dadd( -110.307, -288.526, 98.8908, 0.96 ) }
    dend_21 { pt3dadd( -109.574, -289.08, 99.9501, 0.29 ) }
    dend_21 { pt3dadd( -109.081, -289.551, 100.692, 0.29 ) }
    dend_21 { pt3dadd( -108.618, -290.138, 101.454, 0.52 ) }
    dend_21 { pt3dadd( -108.137, -290.901, 102.32, 0.66 ) }
    dend_21 { pt3dadd( -107.659, -291.814, 103.274, 0.29 ) }
    dend_21 { pt3dadd( -107.306, -292.516, 103.958, 0.52 ) }
    dend_21 { pt3dadd( -106.757, -293.511, 104.881, 0.29 ) }
    dend_21 { pt3dadd( -106.293, -294.24, 105.494, 0.29 ) }
    dend_21 { pt3dadd( -106.132, -294.465, 105.676, 0.29 ) }
    dend_21 { pt3dadd( -105.758, -294.945, 106.071, 0.66 ) }
    dend_21 { pt3dadd( -105.303, -295.45, 106.55, 0.44 ) }
    dend_21 { pt3dadd( -104.873, -295.845, 107.029, 0.44 ) }
    dend_21 { pt3dadd( -104.201, -296.407, 107.857, 0.88 ) }
    dend_21 { pt3dadd( -103.243, -297.177, 109.097, 0.44 ) }
    dend_21 { pt3dadd( -102.662, -297.633, 109.872, 0.44 ) }
    dend_21 { pt3dadd( -101.999, -298.141, 110.725, 0.44 ) }
    dend_21 { pt3dadd( -101.22, -298.629, 111.606, 0.29 ) }
    dend_21 { pt3dadd( -100.696, -298.845, 112.099, 0.29 ) }
    dend_21 { pt3dadd( -100.181, -298.971, 112.487, 0.44 ) }
    dend_21 { pt3dadd( -99.6309, -299.103, 112.777, 0.59 ) }
    dend_21 { pt3dadd( -98.7844, -299.424, 113.115, 0.29 ) }
    dend_21 { pt3dadd( -98.1461, -299.872, 113.312, 0.29 ) }
    dend_21 { pt3dadd( -97.6885, -300.319, 113.439, 0.59 ) }
    dend_21 { pt3dadd( -97.0804, -300.995, 113.553, 0.66 ) }
    dend_21 { pt3dadd( -95.9835, -302.349, 113.714, 0.29 ) }
    dend_21 { pt3dadd( -95.488, -303.005, 113.823, 0.96 ) }
    dend_21 { pt3dadd( -94.4242, -304.482, 114.133, 0.29 ) }
    dend_21 { pt3dadd( -93.8905, -305.234, 114.316, 0.29 ) }
    dend_21 { pt3dadd( -93.1307, -306.225, 114.597, 0.15 ) }
    dend_21 { pt3dadd( -92.7118, -306.703, 114.745, 0.29 ) }
    dend_21 { pt3dadd( -91.5649, -307.786, 115.094, 0.29 ) }
    dend_21 { pt3dadd( -91.1297, -308.145, 115.196, 0.52 ) }
    dend_21 { pt3dadd( -90.5204, -308.63, 115.301, 0.37 ) }
    dend_21 { pt3dadd( -89.9054, -309.263, 115.363, 0.22 ) }
    dend_21 { pt3dadd( -89.2726, -310.126, 115.407, 0.59 ) }
    dend_21 { pt3dadd( -88.7471, -311.078, 115.375, 0.29 ) }
    dend_21 { pt3dadd( -88.4901, -311.809, 115.302, 1.03 ) }
    dend_21 { pt3dadd( -88.2844, -312.88, 115.208, 0.81 ) }
    dend_21 { pt3dadd( -88.2035, -314.208, 115.115, 0.22 ) }
    dend_21 { pt3dadd( -88.2, -314.642, 115.078, 0.22 ) }
    dend_21 { pt3dadd( -88.2031, -315.029, 115.046, 0.22 ) }
    dend_21 { pt3dadd( -88.2102, -315.524, 114.989, 0.22 ) }
    dend_21 { pt3dadd( -88.2142, -315.728, 114.961, 0.22 ) }
    dend_21 { pt3dadd( -88.2616, -316.697, 114.82, 0.44 ) }
    dend_21 { pt3dadd( -88.3724, -318.108, 114.62, 0.22 ) }
    dend_21 { pt3dadd( -88.4514, -318.776, 114.512, 0.22 ) }
    dend_21 { pt3dadd( -88.5982, -319.598, 114.373, 0.59 ) }
    dend_21 { pt3dadd( -88.8959, -320.689, 114.195, 0.88 ) }
    dend_21 { pt3dadd( -89.2189, -321.591, 114.055, 0.88 ) }
    dend_21 { pt3dadd( -89.6157, -322.472, 113.929, 0.29 ) }
    dend_21 { pt3dadd( -90.0213, -323.295, 113.833, 0.29 ) }
    dend_21 { pt3dadd( -90.4371, -324.192, 113.749, 0.59 ) }
    dend_21 { pt3dadd( -90.9188, -325.453, 113.701, 0.22 ) }
    dend_21 { pt3dadd( -91.1021, -325.984, 113.687, 0.22 ) }
    dend_21 { pt3dadd( -91.3501, -326.794, 113.687, 0.88 ) }
    dend_21 { pt3dadd( -91.6486, -327.927, 113.734, 0.44 ) }
    dend_21 { pt3dadd( -91.8945, -329.121, 113.862, 0.22 ) }
    dend_21 { pt3dadd( -92.0448, -330.356, 114.037, 0.07 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 59/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -13.8633, -119.967, 24.7345, 0.81 ) }
    dend_16 { pt3dadd( -14.2512, -120.388, 24.9839, 0.81 ) }
    dend_16 { pt3dadd( -14.5518, -120.908, 25.2108, 0.52 ) }
    dend_16 { pt3dadd( -14.845, -121.84, 25.4977, 0.29 ) }
    dend_16 { pt3dadd( -14.9348, -122.406, 25.631, 0.37 ) }
    dend_16 { pt3dadd( -15.0479, -123.143, 25.7651, 0.37 ) }
    dend_16 { pt3dadd( -15.1771, -123.868, 25.8865, 0.59 ) }
    dend_16 { pt3dadd( -15.3723, -124.878, 26.0249, 0.88 ) }
    dend_16 { pt3dadd( -15.6777, -125.926, 26.1265, 1.03 ) }
    dend_16 { pt3dadd( -16.3595, -127.383, 26.1951, 0.29 ) }
    dend_16 { pt3dadd( -16.8258, -127.981, 26.2196, 0.29 ) }
    dend_16 { pt3dadd( -17.4207, -128.531, 26.2578, 0.52 ) }
    dend_16 { pt3dadd( -18.2404, -129.177, 26.3497, 1.03 ) }
    dend_16 { pt3dadd( -19.5855, -130.169, 26.6002, 1.7 ) }
    dend_16 { pt3dadd( -20.5701, -130.884, 26.8801, 1.47 ) }
    dend_16 { pt3dadd( -21.7215, -131.765, 27.3503, 0.29 ) }
    dend_16 { pt3dadd( -22.1564, -132.159, 27.5845, 0.59 ) }
    dend_16 { pt3dadd( -22.9067, -132.896, 28.0739, 0.81 ) }
    dend_16 { pt3dadd( -23.768, -133.75, 28.7228, 0.44 ) }
    dend_16 { pt3dadd( -24.5287, -134.467, 29.346, 0.66 ) }
    dend_16 { pt3dadd( -25.335, -135.089, 29.9441, 1.47 ) }
    dend_16 { pt3dadd( -26.5626, -135.85, 30.7384, 0.44 ) }
    dend_16 { pt3dadd( -27.3806, -136.27, 31.1756, 0.44 ) }
    dend_16 { pt3dadd( -28.6469, -136.833, 31.7467, 0.74 ) }
    dend_16 { pt3dadd( -29.7362, -137.288, 32.1714, 1.18 ) }
    dend_16 { pt3dadd( -31.6177, -138.099, 32.784, 1.18 ) }
    dend_16 { pt3dadd( -32.4526, -138.485, 32.9855, 0.74 ) }
    dend_16 { pt3dadd( -33.5007, -138.999, 33.1735, 0.37 ) }
    dend_16 { pt3dadd( -34.075, -139.313, 33.2268, 0.37 ) }
    dend_16 { pt3dadd( -34.6041, -139.593, 33.2157, 0.37 ) }
    dend_16 { pt3dadd( -35.5055, -139.989, 33.1073, 0.59 ) }
    dend_16 { pt3dadd( -36.9499, -140.44, 32.8626, 0.29 ) }
    dend_16 { pt3dadd( -37.6756, -140.602, 32.721, 0.88 ) }
    dend_16 { pt3dadd( -38.6441, -140.759, 32.5342, 1.33 ) }
    dend_16 { pt3dadd( -40.4011, -140.963, 32.2287, 0.44 ) }
    dend_16 { pt3dadd( -41.6638, -141.077, 32.0433, 0.96 ) }
    dend_16 { pt3dadd( -42.859, -141.164, 31.8695, 0.22 ) }
    dend_16 { pt3dadd( -43.7445, -141.228, 31.7441, 0.22 ) }
    dend_16 { pt3dadd( -44.3239, -141.286, 31.6484, 0.52 ) }
    dend_16 { pt3dadd( -45.8578, -141.489, 31.3824, 0.29 ) }
    dend_16 { pt3dadd( -46.4979, -141.59, 31.2738, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_16 { pt3dadd( -47.8617, -141.785, 31.0044, 1.03 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 1/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -13.8633, -119.967, 24.7345, 0.22 ) }
    dend_15 { pt3dadd( -14.6951, -119.814, 25.2563, 0.22 ) }
    dend_15 { pt3dadd( -15.9519, -119.67, 26.0893, 0.96 ) }
    dend_15 { pt3dadd( -16.8552, -119.635, 26.7014, 0.22 ) }
    dend_15 { pt3dadd( -17.4991, -119.634, 27.1511, 0.52 ) }
    dend_15 { pt3dadd( -18.2732, -119.626, 27.688, 0.52 ) }
    dend_15 { pt3dadd( -19.265, -119.602, 28.3508, 0.37 ) }
    dend_15 { pt3dadd( -20.1354, -119.603, 28.9441, 0.07 ) }
    dend_15 { pt3dadd( -20.9081, -119.614, 29.4851, 0.29 ) }
    dend_15 { pt3dadd( -21.6488, -119.624, 30.0418, 0.29 ) }
    dend_15 { pt3dadd( -22.2409, -119.645, 30.5056, 1.11 ) }
    dend_15 { pt3dadd( -23.235, -119.705, 31.2864, 0.74 ) }
    dend_15 { pt3dadd( -24.3409, -119.818, 32.1619, 0.22 ) }
    dend_15 { pt3dadd( -24.9265, -119.962, 32.6308, 0.22 ) }
    dend_15 { pt3dadd( -25.6953, -120.272, 33.2538, 0.22 ) }
    dend_15 { pt3dadd( -26.4098, -120.684, 33.8361, 0.22 ) }
    dend_15 { pt3dadd( -26.7114, -120.902, 34.0767, 1.18 ) }
    dend_15 { pt3dadd( -27.3565, -121.437, 34.5534, 1.62 ) }
    dend_15 { pt3dadd( -28.4052, -122.373, 35.2717, 0.22 ) }
    dend_15 { pt3dadd( -29.2952, -123.139, 35.8158, 0.07 ) }
    dend_15 { pt3dadd( -29.7152, -123.484, 36.0427, 0.66 ) }
    dend_15 { pt3dadd( -30.3708, -124.018, 36.3881, 0.15 ) }
    dend_15 { pt3dadd( -31.1137, -124.639, 36.8012, 0.81 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 24/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.32629, -128.662, -38.3543, 0.59 ) }
    dend_11 { pt3dadd( 0.651076, -137.136, -39.9662, 0.59 ) }
    dend_11 { pt3dadd( -4.98811, -145.157, -40.6879, 0.59 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 27/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 5.32629, -128.662, -38.3543, 0.37 ) }
    dend_10 { pt3dadd( 1.23573, -137.557, -38.1733, 0.59 ) }
    dend_10 { pt3dadd( -2.29821, -146.516, -39.9302, 0.59 ) }
    dend_10 { pt3dadd( -6.85844, -154.926, -42.121, 0.59 ) }
    dend_10 { pt3dadd( -13.7572, -161.951, -42.8262, 0.59 ) }
    dend_10 { pt3dadd( -21.052, -168.418, -44.4961, 0.59 ) }
    dend_10 { pt3dadd( -28.6763, -174.463, -46.348, 0.59 ) }
    // Section: dend_160, id: dend_160, parent: dend_158 (entry count 34/100)
    dend_160 { pt3dclear() }
    dend_160 { pt3dadd( -141.676, -91.6294, 64.0839, 0.59 ) }
    dend_160 { pt3dadd( -142.456, -92.0773, 63.8993, 0.59 ) }
    dend_160 { pt3dadd( -143.298, -92.2505, 63.5845, 0.81 ) }
    dend_160 { pt3dadd( -144.451, -92.1945, 63.0175, 0.29 ) }
    dend_160 { pt3dadd( -145.094, -92.1059, 62.6592, 0.29 ) }
    dend_160 { pt3dadd( -145.949, -91.929, 62.1136, 0.44 ) }
    dend_160 { pt3dadd( -146.795, -91.7422, 61.5022, 0.66 ) }
    dend_160 { pt3dadd( -147.728, -91.457, 60.691, 0.96 ) }
    dend_160 { pt3dadd( -148.515, -91.1581, 59.9763, 0.74 ) }
    dend_160 { pt3dadd( -149.336, -90.8296, 59.2475, 0.96 ) }
    dend_160 { pt3dadd( -150.278, -90.5252, 58.4958, 0.66 ) }
    dend_160 { pt3dadd( -151.35, -90.3288, 57.8204, 0.88 ) }
    dend_160 { pt3dadd( -152.699, -90.2823, 57.2102, 0.29 ) }
    dend_160 { pt3dadd( -153.972, -90.42, 56.8352, 0.29 ) }
    dend_160 { pt3dadd( -154.891, -90.6213, 56.6857, 0.52 ) }
    dend_160 { pt3dadd( -156.235, -90.9756, 56.5827, 0.88 ) }
    dend_160 { pt3dadd( -157.827, -91.4752, 56.6038, 0.96 ) }
    dend_160 { pt3dadd( -159.388, -92.0296, 56.7539, 0.66 ) }
    dend_160 { pt3dadd( -160.644, -92.5588, 56.9452, 0.52 ) }
    dend_160 { pt3dadd( -161.267, -92.883, 57.0222, 0.52 ) }
    // Section: dend_159, id: dend_159, parent: dend_158 (entry count 54/100)
    dend_159 { pt3dclear() }
    dend_159 { pt3dadd( -141.676, -91.6294, 64.0839, 0.07 ) }
    dend_159 { pt3dadd( -142.282, -90.6213, 64.3738, 0.07 ) }
    dend_159 { pt3dadd( -142.616, -90.1593, 64.5398, 0.07 ) }
    dend_159 { pt3dadd( -142.963, -89.7246, 64.7226, 0.29 ) }
    dend_159 { pt3dadd( -143.462, -89.0918, 65.0654, 0.15 ) }
    dend_159 { pt3dadd( -143.985, -88.4252, 65.4741, 0.29 ) }
    dend_159 { pt3dadd( -144.649, -87.6343, 66.056, 0.29 ) }
    dend_159 { pt3dadd( -145.319, -86.9117, 66.7121, 0.07 ) }
    dend_159 { pt3dadd( -145.721, -86.5396, 67.1571, 0.29 ) }
    dend_159 { pt3dadd( -146.543, -85.8185, 68.1847, 0.15 ) }
    dend_159 { pt3dadd( -146.916, -85.5198, 68.671, 0.29 ) }
    dend_159 { pt3dadd( -147.568, -85.0566, 69.4834, 0.15 ) }
    dend_159 { pt3dadd( -147.965, -84.8095, 69.955, 0.37 ) }
    dend_159 { pt3dadd( -148.627, -84.4318, 70.676, 0.37 ) }
    dend_159 { pt3dadd( -149.349, -84.0554, 71.4022, 0.22 ) }
    dend_159 { pt3dadd( -150.334, -83.5957, 72.2612, 0.15 ) }
    dend_159 { pt3dadd( -150.889, -83.3276, 72.7145, 0.52 ) }
    dend_159 { pt3dadd( -151.86, -82.7909, 73.4202, 0.07 ) }
    dend_159 { pt3dadd( -152.328, -82.5347, 73.7344, 0.22 ) }
    // Section: dend_155, id: dend_155, parent: dend_153 (entry count 73/100)
    dend_155 { pt3dclear() }
    dend_155 { pt3dadd( -182.238, -277.557, -18.6349, 0.22 ) }
    dend_155 { pt3dadd( -185.518, -286.766, -18.8308, 0.22 ) }
    dend_155 { pt3dadd( -188.177, -296.158, -18.465, 0.22 ) }
    // Section: dend_154, id: dend_154, parent: dend_153 (entry count 76/100)
    dend_154 { pt3dclear() }
    dend_154 { pt3dadd( -182.238, -277.557, -18.6349, 0.44 ) }
    dend_154 { pt3dadd( -185.332, -286.818, -19.1089, 0.22 ) }
    dend_154 { pt3dadd( -190.595, -294.951, -20.7576, 0.22 ) }
    // Section: dend_149, id: dend_149, parent: dend_131 (entry count 79/100)
    dend_149 { pt3dclear() }
    dend_149 { pt3dadd( -179.975, -85.9792, -14.4407, 1.11 ) }
    dend_149 { pt3dadd( -180.19, -86.8573, -12.1292, 1.11 ) }
    dend_149 { pt3dadd( -180.361, -87.1695, -10.9586, 1.11 ) }
    dend_149 { pt3dadd( -180.588, -87.3724, -9.57895, 1.11 ) }
    dend_149 { pt3dadd( -180.774, -87.369, -8.09856, 0.88 ) }
    dend_149 { pt3dadd( -180.893, -87.1487, -6.70567, 0.88 ) }
    dend_149 { pt3dadd( -180.97, -86.7216, -5.34216, 0.88 ) }
    dend_149 { pt3dadd( -181.019, -85.6764, -3.8238, 1.4 ) }
    dend_149 { pt3dadd( -180.995, -84.6004, -2.83001, 1.03 ) }
    dend_149 { pt3dadd( -180.862, -82.7212, -1.61093, 0.59 ) }
    dend_149 { pt3dadd( -180.729, -81.437, -1.02495, 0.59 ) }
    dend_149 { pt3dadd( -180.592, -80.2033, -0.666394, 0.81 ) }
    dend_149 { pt3dadd( -180.513, -79.2495, -0.536922, 0.66 ) }
    dend_149 { pt3dadd( -180.486, -78.3234, -0.538072, 1.25 ) }
    dend_149 { pt3dadd( -180.576, -77.517, -0.650514, 1.18 ) }
    dend_149 { pt3dadd( -180.915, -76.3862, -0.998496, 1.03 ) }
    dend_149 { pt3dadd( -181.417, -75.2051, -1.47296, 0.59 ) }
    dend_149 { pt3dadd( -181.963, -74.1418, -1.91497, 0.59 ) }
    dend_149 { pt3dadd( -182.27, -73.5745, -2.13196, 1.11 ) }
    dend_149 { pt3dadd( -182.864, -72.4658, -2.50846, 2.06 ) }
    dend_149 { pt3dadd( -183.292, -71.6335, -2.7019, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_149 { pt3dadd( -184.099, -69.8447, -2.85244, 1.11 ) }
    dend_149 { pt3dadd( -184.541, -68.6198, -2.79625, 1.25 ) }
    dend_149 { pt3dadd( -184.911, -67.2016, -2.52672, 0.66 ) }
    dend_149 { pt3dadd( -185.04, -66.4758, -2.33266, 0.66 ) }
    dend_149 { pt3dadd( -185.214, -64.8259, -1.72301, 0.81 ) }
    dend_149 { pt3dadd( -185.3, -63.3505, -1.07061, 0.96 ) }
    dend_149 { pt3dadd( -185.321, -62.4528, -0.646704, 0.96 ) }
    dend_149 { pt3dadd( -185.351, -60.7931, 0.123504, 0.66 ) }
    dend_149 { pt3dadd( -185.367, -60.0657, 0.417644, 1.4 ) }
    dend_149 { pt3dadd( -185.378, -58.6128, 0.805894, 1.18 ) }
    dend_149 { pt3dadd( -185.366, -57.5913, 0.875501, 0.81 ) }
    dend_149 { pt3dadd( -185.358, -56.4404, 0.768232, 1.03 ) }
    dend_149 { pt3dadd( -185.382, -55.5779, 0.594396, 1.33 ) }
    dend_149 { pt3dadd( -185.477, -54.3032, 0.238521, 0.96 ) }
    dend_149 { pt3dadd( -185.682, -52.7624, -0.198612, 0.88 ) }
    dend_149 { pt3dadd( -185.905, -51.5831, -0.547584, 0.96 ) }
    dend_149 { pt3dadd( -186.086, -50.729, -0.745741, 1.18 ) }
    dend_149 { pt3dadd( -186.387, -49.2775, -1.02024, 0.96 ) }
    dend_149 { pt3dadd( -186.718, -47.7821, -1.24262, 1.25 ) }
    dend_149 { pt3dadd( -186.966, -46.6699, -1.36505, 0.81 ) }
    dend_149 { pt3dadd( -187.195, -45.374, -1.49633, 0.52 ) }
    dend_149 { pt3dadd( -187.349, -43.7474, -1.63477, 0.66 ) }
    dend_149 { pt3dadd( -187.364, -42.4102, -1.71282, 0.96 ) }
    dend_149 { pt3dadd( -187.275, -41.0934, -1.72453, 1.33 ) }
    dend_149 { pt3dadd( -187.131, -39.7802, -1.66063, 0.74 ) }
    dend_149 { pt3dadd( -186.932, -38.0356, -1.47303, 0.52 ) }
    dend_149 { pt3dadd( -186.846, -36.9192, -1.3128, 0.88 ) }
    dend_149 { pt3dadd( -186.844, -35.8077, -1.09295, 0.96 ) }
    dend_149 { pt3dadd( -186.946, -34.3247, -0.675859, 1.25 ) }
    dend_149 { pt3dadd( -187.153, -32.8854, -0.116092, 0.88 ) }
    dend_149 { pt3dadd( -187.505, -31.6611, 0.534055, 0.59 ) }
    dend_149 { pt3dadd( -187.965, -30.7359, 1.19621, 0.44 ) }
    dend_149 { pt3dadd( -188.353, -30.2612, 1.66235, 0.29 ) }
    dend_149 { pt3dadd( -188.63, -30.0619, 1.98557, 0.29 ) }
    dend_149 { pt3dadd( -189.562, -29.5852, 3.17892, 0.29 ) }
    dend_149 { pt3dadd( -190.122, -29.32, 3.98187, 1.25 ) }
    dend_149 { pt3dadd( -190.509, -29.0889, 4.64648, 1.55 ) }
    dend_149 { pt3dadd( -190.977, -28.6146, 5.7283, 1.25 ) }
    dend_149 { pt3dadd( -191.361, -27.8556, 6.96977, 0.44 ) }
    dend_149 { pt3dadd( -191.675, -26.9046, 8.20019, 0.44 ) }
    dend_149 { pt3dadd( -191.798, -26.4186, 8.7524, 0.59 ) }
    dend_149 { pt3dadd( -191.989, -25.5782, 9.70637, 0.74 ) }
    dend_149 { pt3dadd( -192.204, -24.797, 10.7093, 1.03 ) }
    dend_149 { pt3dadd( -192.461, -24.313, 11.5429, 1.33 ) }
    dend_149 { pt3dadd( -192.957, -23.9877, 12.6311, 0.22 ) }
    dend_149 { pt3dadd( -193.397, -23.9676, 13.4297, 0.22 ) }
    dend_149 { pt3dadd( -193.961, -24.1191, 14.4627, 0.22 ) }
    dend_149 { pt3dadd( -194.628, -24.4987, 15.8071, 0.59 ) }
    dend_149 { pt3dadd( -195.27, -25.0318, 17.4644, 0.74 ) }
    dend_149 { pt3dadd( -195.603, -25.3988, 18.6103, 0.74 ) }
    dend_149 { pt3dadd( -195.82, -25.6689, 19.7744, 0.74 ) }
    dend_149 { pt3dadd( -195.985, -25.7727, 20.9779, 0.74 ) }
    dend_149 { pt3dadd( -196.085, -25.6817, 22.2294, 0.74 ) }
    dend_149 { pt3dadd( -196.16, -25.168, 24.2049, 1.03 ) }
    dend_149 { pt3dadd( -196.162, -24.8301, 24.9898, 1.03 ) }
    dend_149 { pt3dadd( -196.183, -24.0146, 26.4627, 0.81 ) }
    dend_149 { pt3dadd( -196.242, -23.4186, 27.4248, 0.59 ) }
    dend_149 { pt3dadd( -196.343, -22.935, 28.1788, 0.59 ) }
    dend_149 { pt3dadd( -196.428, -22.6399, 28.6404, 0.59 ) }
    dend_149 { pt3dadd( -196.516, -22.1828, 29.3295, 0.59 ) }
    dend_149 { pt3dadd( -196.532, -22.0048, 29.5601, 0.59 ) }
    dend_149 { pt3dadd( -196.592, -21.4593, 30.0018, 0.59 ) }
    dend_149 { pt3dadd( -196.657, -21.1392, 30.1345, 0.59 ) }
    dend_149 { pt3dadd( -196.805, -20.5379, 30.3188, 0.59 ) }
    dend_149 { pt3dadd( -197.017, -19.6567, 30.581, 0.59 ) }
    dend_149 { pt3dadd( -197.352, -18.2681, 30.9998, 0.37 ) }
    dend_149 { pt3dadd( -197.618, -17.152, 31.3531, 1.18 ) }
    dend_149 { pt3dadd( -197.911, -15.7951, 31.8271, 0.22 ) }
    dend_149 { pt3dadd( -198.113, -14.8234, 32.2431, 0.88 ) }
    dend_149 { pt3dadd( -198.355, -13.7105, 32.8328, 0.37 ) }
    dend_149 { pt3dadd( -198.536, -12.9917, 33.2977, 1.25 ) }
    dend_149 { pt3dadd( -198.743, -12.3137, 33.8166, 1.4 ) }
    dend_149 { pt3dadd( -199.184, -11.1579, 34.8108, 0.29 ) }
    dend_149 { pt3dadd( -199.596, -10.2097, 35.6635, 0.29 ) }
    dend_149 { pt3dadd( -199.862, -9.60933, 36.1772, 0.29 ) }
    dend_149 { pt3dadd( -200.093, -9.01283, 36.6293, 1.11 ) }
    dend_149 { pt3dadd( -200.215, -8.58484, 36.9005, 1.77 ) }
    dend_149 { pt3dadd( -200.538, -6.89042, 37.7557, 0.15 ) }
    dend_149 { pt3dadd( -200.649, -5.95594, 38.1203, 0.59 ) }
    dend_149 { pt3dadd( -200.678, -5.06774, 38.4057, 0.59 ) }
    dend_149 { pt3dadd( -200.63, -3.83043, 38.8182, 0.22 ) }
    dend_149 { pt3dadd( -200.522, -2.59145, 39.2894, 0.37 ) }
    dend_149 { pt3dadd( -200.436, -1.69965, 39.6668, 0.81 ) }
    dend_149 { pt3dadd( -200.384, -0.931594, 40.0593, 1.18 ) }
    dend_149 { pt3dadd( -200.385, -0.0607392, 40.5869, 1.55 ) }
    dend_149 { pt3dadd( -200.477, 1.30499, 41.5799, 0.22 ) }
    dend_149 { pt3dadd( -200.576, 2.18585, 42.3172, 0.74 ) }
    dend_149 { pt3dadd( -200.632, 2.68671, 42.7768, 1.03 ) }
    dend_149 { pt3dadd( -200.745, 3.86253, 43.9353, 0.22 ) }
    dend_149 { pt3dadd( -200.829, 4.69343, 44.7757, 0.96 ) }
    dend_149 { pt3dadd( -200.931, 5.50376, 45.5989, 0.15 ) }
    dend_149 { pt3dadd( -200.983, 5.93254, 46.0185, 0.15 ) }
    dend_149 { pt3dadd( -201.016, 6.4519, 46.5046, 0.74 ) }
    dend_149 { pt3dadd( -200.986, 7.30771, 47.2809, 0.22 ) }
    dend_149 { pt3dadd( -200.872, 7.9999, 47.8604, 0.81 ) }
    // Section: dend_132, id: dend_132, parent: dend_131 (entry count 95/100)
    dend_132 { pt3dclear() }
    dend_132 { pt3dadd( -179.975, -85.9792, -14.4407, 0.96 ) }
    dend_132 { pt3dadd( -181.424, -87.1949, -14.2809, 0.96 ) }
    dend_132 { pt3dadd( -182.313, -87.925, -14.2407, 1.03 ) }
    dend_132 { pt3dadd( -183.872, -89.2055, -14.1701, 0.96 ) }
    dend_132 { pt3dadd( -184.657, -89.8505, -14.1346, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_132 { pt3dadd( -186.08, -91.0189, -14.0702, 0.96 ) }
    dend_132 { pt3dadd( -187.298, -92.0197, -14.0151, 1.11 ) }
    dend_132 { pt3dadd( -188.754, -93.1658, -13.8789, 0.96 ) }
    // Section: dend_120, id: dend_120, parent: dend_118 (entry count 3/100)
    dend_120 { pt3dclear() }
    dend_120 { pt3dadd( -147.743, -55.401, -7.09932, 0.96 ) }
    dend_120 { pt3dadd( -148.743, -55.4693, -7.09967, 0.96 ) }
    dend_120 { pt3dadd( -150.53, -55.7844, -7.19756, 0.66 ) }
    dend_120 { pt3dadd( -151.993, -56.2286, -7.26281, 0.59 ) }
    dend_120 { pt3dadd( -153.229, -56.7563, -7.37048, 0.66 ) }
    dend_120 { pt3dadd( -154.279, -57.3272, -7.51978, 0.66 ) }
    dend_120 { pt3dadd( -155.353, -58.0117, -7.74975, 0.81 ) }
    dend_120 { pt3dadd( -156.262, -58.7534, -8.0411, 0.66 ) }
    dend_120 { pt3dadd( -157.253, -59.7242, -8.47496, 0.74 ) }
    dend_120 { pt3dadd( -158.084, -60.6272, -8.92909, 0.88 ) }
    dend_120 { pt3dadd( -159.081, -61.7654, -9.49294, 1.18 ) }
    dend_120 { pt3dadd( -159.86, -62.6682, -9.90169, 0.96 ) }
    dend_120 { pt3dadd( -160.53, -63.42, -10.2344, 0.88 ) }
    dend_120 { pt3dadd( -161.288, -64.2472, -10.5978, 0.59 ) }
    dend_120 { pt3dadd( -162.382, -65.4506, -11.0901, 0.59 ) }
    dend_120 { pt3dadd( -162.977, -66.1523, -11.2895, 0.66 ) }
    dend_120 { pt3dadd( -163.903, -67.3615, -11.4865, 0.96 ) }
    dend_120 { pt3dadd( -164.603, -68.3038, -11.5861, 0.44 ) }
    dend_120 { pt3dadd( -165.382, -69.3686, -11.6987, 0.66 ) }
    dend_120 { pt3dadd( -165.938, -70.0913, -11.7813, 0.29 ) }
    dend_120 { pt3dadd( -166.687, -70.9939, -11.8945, 1.03 ) }
    dend_120 { pt3dadd( -167.579, -71.9827, -12.0099, 0.29 ) }
    dend_120 { pt3dadd( -168.496, -72.8313, -12.0828, 0.37 ) }
    dend_120 { pt3dadd( -169.324, -73.4485, -12.1009, 0.44 ) }
    dend_120 { pt3dadd( -170.131, -73.8473, -11.981, 0.66 ) }
    dend_120 { pt3dadd( -170.878, -74.0978, -11.7533, 0.52 ) }
    dend_120 { pt3dadd( -171.968, -74.3383, -11.386, 0.22 ) }
    dend_120 { pt3dadd( -172.695, -74.4244, -11.0561, 0.88 ) }
    dend_120 { pt3dadd( -173.106, -74.4454, -10.8285, 0.88 ) }
    dend_120 { pt3dadd( -174.994, -74.3567, -9.69112, 0.44 ) }
    dend_120 { pt3dadd( -176.028, -74.1515, -9.03615, 0.44 ) }
    dend_120 { pt3dadd( -176.927, -73.82, -8.49501, 1.11 ) }
    dend_120 { pt3dadd( -177.87, -73.3262, -7.96953, 0.74 ) }
    dend_120 { pt3dadd( -178.331, -73.0107, -7.75717, 0.74 ) }
    dend_120 { pt3dadd( -178.884, -72.5338, -7.55761, 0.44 ) }
    dend_120 { pt3dadd( -179.57, -71.8071, -7.40452, 0.44 ) }
    dend_120 { pt3dadd( -180.034, -71.2592, -7.31226, 1.18 ) }
    dend_120 { pt3dadd( -180.472, -70.7059, -7.24811, 1.84 ) }
    dend_120 { pt3dadd( -181.54, -69.3036, -7.17302, 0.44 ) }
    dend_120 { pt3dadd( -181.934, -68.7435, -7.14895, 0.52 ) }
    dend_120 { pt3dadd( -182.411, -68.0089, -7.16901, 0.37 ) }
    dend_120 { pt3dadd( -182.6, -67.6688, -7.2107, 0.37 ) }
    dend_120 { pt3dadd( -183.134, -66.4952, -7.43402, 0.81 ) }
    dend_120 { pt3dadd( -183.564, -65.2755, -7.74006, 0.66 ) }
    dend_120 { pt3dadd( -183.819, -64.3109, -8.04489, 0.52 ) }
    dend_120 { pt3dadd( -184.059, -63.0937, -8.51048, 0.88 ) }
    dend_120 { pt3dadd( -184.239, -61.9413, -9.00571, 0.52 ) }
    dend_120 { pt3dadd( -184.365, -60.9489, -9.48422, 1.03 ) }
    dend_120 { pt3dadd( -184.41, -60.3016, -9.86031, 0.81 ) }
    dend_120 { pt3dadd( -184.4, -59.8129, -10.2226, 0.29 ) }
    dend_120 { pt3dadd( -184.334, -59.3165, -10.6404, 0.29 ) }
    dend_120 { pt3dadd( -193.923, -60.6464, -13.13, 0.29 ) }
    // Section: dend_119, id: dend_119, parent: dend_118 (entry count 55/100)
    dend_119 { pt3dclear() }
    dend_119 { pt3dadd( -147.743, -55.401, -7.09932, 0.37 ) }
    dend_119 { pt3dadd( -147.803, -54.691, -7.07349, 0.37 ) }
    dend_119 { pt3dadd( -148.15, -53.315, -7.12351, 0.81 ) }
    dend_119 { pt3dadd( -148.504, -52.3363, -7.26229, 0.52 ) }
    dend_119 { pt3dadd( -148.796, -51.5806, -7.48536, 0.22 ) }
    dend_119 { pt3dadd( -149.111, -50.855, -7.75651, 0.29 ) }
    dend_119 { pt3dadd( -149.454, -50.1232, -8.09951, 0.29 ) }
    dend_119 { pt3dadd( -149.786, -49.4366, -8.61991, 0.37 ) }
    dend_119 { pt3dadd( -150.116, -48.6763, -9.38501, 0.81 ) }
    dend_119 { pt3dadd( -150.365, -47.8474, -10.3868, 0.66 ) }
    dend_119 { pt3dadd( -150.405, -47.4491, -10.9127, 1.11 ) }
    dend_119 { pt3dadd( -150.38, -46.8164, -11.7629, 0.96 ) }
    dend_119 { pt3dadd( -150.303, -45.5497, -13.4747, 0.74 ) }
    dend_119 { pt3dadd( -150.313, -45.0269, -14.1548, 0.52 ) }
    dend_119 { pt3dadd( -150.434, -44.3716, -14.9646, 0.52 ) }
    dend_119 { pt3dadd( -150.67, -43.7975, -15.5825, 0.52 ) }
    dend_119 { pt3dadd( -151.102, -43.0926, -16.2412, 0.74 ) }
    dend_119 { pt3dadd( -151.868, -42.1526, -16.9425, 0.66 ) }
    dend_119 { pt3dadd( -152.682, -41.2751, -17.4621, 0.96 ) }
    dend_119 { pt3dadd( -153.563, -40.3415, -17.9898, 0.66 ) }
    dend_119 { pt3dadd( -154.558, -39.3142, -18.5831, 0.66 ) }
    dend_119 { pt3dadd( -155.348, -38.4924, -19.0956, 0.29 ) }
    dend_119 { pt3dadd( -155.968, -37.8293, -19.5095, 0.66 ) }
    dend_119 { pt3dadd( -156.622, -37.073, -19.9802, 0.22 ) }
    dend_119 { pt3dadd( -157.458, -36.0183, -20.6681, 0.52 ) }
    dend_119 { pt3dadd( -158.179, -35.026, -21.3064, 0.29 ) }
    dend_119 { pt3dadd( -158.719, -34.2406, -21.9303, 0.29 ) }
    dend_119 { pt3dadd( -162.11, -27.133, -27.8769, 0.29 ) }
    dend_119 { pt3dadd( -167.196, -21.6128, -34.363, 0.29 ) }
    dend_119 { pt3dadd( -171.087, -15.776, -41.3651, 0.29 ) }
    dend_119 { pt3dadd( -176.767, -11.8271, -48.5296, 0.29 ) }
    // Section: dend_109, id: dend_109, parent: dend_103 (entry count 86/100)
    dend_109 { pt3dclear() }
    dend_109 { pt3dadd( -104.898, -79.447, -3.12743, 1.03 ) }
    dend_109 { pt3dadd( -105.997, -80.3286, -3.97165, 1.03 ) }
    dend_109 { pt3dadd( -107.474, -81.427, -4.80146, 0.88 ) }
    dend_109 { pt3dadd( -108.586, -82.3445, -5.33693, 0.74 ) }
    dend_109 { pt3dadd( -109.783, -83.5908, -5.88236, 0.74 ) }
    dend_109 { pt3dadd( -110.788, -84.9568, -6.33334, 0.66 ) }
    dend_109 { pt3dadd( -111.236, -85.7557, -6.52015, 0.66 ) }
    dend_109 { pt3dadd( -111.607, -86.6151, -6.55672, 0.66 ) }
    dend_109 { pt3dadd( -111.903, -87.783, -6.4309, 0.88 ) }
    dend_109 { pt3dadd( -112.112, -89.4441, -6.11263, 1.25 ) }
    dend_109 { pt3dadd( -112.18, -90.9038, -5.76105, 0.74 ) }
    dend_109 { pt3dadd( -112.202, -92.2965, -5.40062, 1.03 ) }
    dend_109 { pt3dadd( -112.246, -93.5195, -5.00885, 0.74 ) }
    dend_109 { pt3dadd( -112.332, -94.2805, -4.70819, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_109 { pt3dadd( -112.704, -95.7331, -4.02538, 0.96 ) }
    dend_109 { pt3dadd( -113.028, -96.5475, -3.60644, 0.66 ) }
    dend_109 { pt3dadd( -113.573, -97.616, -3.02689, 0.59 ) }
    dend_109 { pt3dadd( -114.108, -98.4256, -2.59896, 0.88 ) }
    dend_109 { pt3dadd( -114.86, -99.3462, -2.17524, 1.4 ) }
    dend_109 { pt3dadd( -116.0, -100.56, -1.69093, 0.96 ) }
    dend_109 { pt3dadd( -117.355, -101.905, -1.29192, 0.81 ) }
    dend_109 { pt3dadd( -118.044, -102.567, -1.15576, 0.81 ) }
    dend_109 { pt3dadd( -119.651, -104.163, -0.94759, 0.88 ) }
    dend_109 { pt3dadd( -120.915, -105.575, -0.861738, 0.74 ) }
    dend_109 { pt3dadd( -121.572, -106.472, -0.830751, 0.81 ) }
    dend_109 { pt3dadd( -122.351, -107.854, -0.778757, 0.96 ) }
    dend_109 { pt3dadd( -122.836, -108.844, -0.761135, 0.96 ) }
    dend_109 { pt3dadd( -123.293, -110.154, -0.741257, 0.74 ) }
    dend_109 { pt3dadd( -123.488, -111.525, -0.66966, 0.59 ) }
    dend_109 { pt3dadd( -123.487, -113.328, -0.45344, 0.59 ) }
    dend_109 { pt3dadd( -123.367, -114.509, -0.268645, 0.96 ) }
    // Section: dend_104, id: dend_104, parent: dend_103 (entry count 17/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( -104.898, -79.447, -3.12743, 0.59 ) }
    dend_104 { pt3dadd( -105.808, -79.8989, -2.45386, 0.59 ) }
    dend_104 { pt3dadd( -107.22, -80.439, -1.93615, 0.59 ) }
    dend_104 { pt3dadd( -108.478, -80.9043, -1.6457, 0.59 ) }
    dend_104 { pt3dadd( -109.303, -81.2278, -1.54529, 0.59 ) }
    dend_104 { pt3dadd( -110.112, -81.5865, -1.49602, 1.03 ) }
    dend_104 { pt3dadd( -111.976, -82.5777, -1.43998, 0.81 ) }
    dend_104 { pt3dadd( -113.504, -83.5137, -1.51347, 0.66 ) }
    dend_104 { pt3dadd( -113.94, -83.8563, -1.5546, 0.66 ) }
    dend_104 { pt3dadd( -115.023, -84.9926, -1.63307, 0.96 ) }
    dend_104 { pt3dadd( -115.919, -86.3261, -1.58974, 0.66 ) }
    dend_104 { pt3dadd( -116.588, -87.7106, -1.42492, 0.66 ) }
    dend_104 { pt3dadd( -117.054, -88.9865, -1.16196, 0.74 ) }
    dend_104 { pt3dadd( -117.544, -90.4891, -0.776024, 0.59 ) }
    dend_104 { pt3dadd( -117.808, -91.2612, -0.55086, 0.59 ) }
    dend_104 { pt3dadd( -118.18, -92.2359, -0.264585, 0.88 ) }
    dend_104 { pt3dadd( -118.75, -93.3867, 0.0539683, 1.03 ) }
    dend_104 { pt3dadd( -120.046, -95.2222, 0.508457, 0.59 ) }
    dend_104 { pt3dadd( -121.036, -96.2399, 0.701075, 0.59 ) }
    dend_104 { pt3dadd( -122.392, -97.3138, 0.843965, 0.59 ) }
    dend_104 { pt3dadd( -123.581, -98.0665, 0.926453, 0.59 ) }
    dend_104 { pt3dadd( -124.855, -98.7035, 1.05392, 0.81 ) }
    dend_104 { pt3dadd( -126.385, -99.2936, 1.32169, 0.96 ) }
    dend_104 { pt3dadd( -127.66, -99.6548, 1.72281, 0.52 ) }
    dend_104 { pt3dadd( -128.205, -99.8002, 2.02043, 0.52 ) }
    dend_104 { pt3dadd( -128.891, -100.026, 2.61881, 0.74 ) }
    dend_104 { pt3dadd( -130.052, -100.589, 4.08033, 1.25 ) }
    dend_104 { pt3dadd( -130.691, -101.034, 5.08063, 1.25 ) }
    dend_104 { pt3dadd( -131.471, -101.718, 6.39722, 0.96 ) }
    dend_104 { pt3dadd( -132.314, -102.547, 7.78537, 0.66 ) }
    dend_104 { pt3dadd( -132.917, -103.157, 8.64326, 0.66 ) }
    dend_104 { pt3dadd( -133.668, -103.91, 9.50782, 0.52 ) }
    dend_104 { pt3dadd( -134.459, -104.663, 10.1012, 0.52 ) }
    dend_104 { pt3dadd( -135.511, -105.609, 10.5355, 0.96 ) }
    dend_104 { pt3dadd( -136.177, -106.193, 10.6059, 0.59 ) }
    dend_104 { pt3dadd( -137.041, -106.903, 10.5396, 0.59 ) }
    dend_104 { pt3dadd( -137.567, -107.284, 10.4557, 0.81 ) }
    dend_104 { pt3dadd( -138.81, -107.977, 10.2413, 1.03 ) }
    dend_104 { pt3dadd( -139.761, -108.372, 10.1126, 0.74 ) }
    dend_104 { pt3dadd( -141.389, -108.866, 9.99042, 0.52 ) }
    dend_104 { pt3dadd( -142.622, -109.147, 10.0102, 0.88 ) }
    dend_104 { pt3dadd( -143.994, -109.374, 10.1818, 1.03 ) }
    dend_104 { pt3dadd( -146.044, -109.597, 10.5704, 0.52 ) }
    dend_104 { pt3dadd( -147.004, -109.628, 10.8226, 1.03 ) }
    dend_104 { pt3dadd( -148.08, -109.585, 11.1896, 0.88 ) }
    dend_104 { pt3dadd( -149.351, -109.446, 11.7671, 0.52 ) }
    dend_104 { pt3dadd( -150.942, -109.235, 12.6899, 0.44 ) }
    dend_104 { pt3dadd( -151.453, -109.155, 13.114, 0.44 ) }
    dend_104 { pt3dadd( -152.033, -109.034, 13.9563, 0.59 ) }
    dend_104 { pt3dadd( -152.474, -108.946, 15.0746, 0.52 ) }
    dend_104 { pt3dadd( -152.654, -108.966, 16.01, 0.52 ) }
    dend_104 { pt3dadd( -152.711, -109.08, 16.7872, 0.74 ) }
    dend_104 { pt3dadd( -152.791, -109.422, 17.7124, 0.74 ) }
    dend_104 { pt3dadd( -153.049, -110.136, 18.8122, 0.88 ) }
    dend_104 { pt3dadd( -153.546, -111.132, 19.7961, 0.88 ) }
    dend_104 { pt3dadd( -153.998, -111.8, 20.3182, 1.25 ) }
    dend_104 { pt3dadd( -154.348, -112.216, 20.6205, 1.25 ) }
    dend_104 { pt3dadd( -155.475, -113.288, 21.3955, 0.74 ) }
    dend_104 { pt3dadd( -156.394, -113.989, 21.9378, 0.44 ) }
    dend_104 { pt3dadd( -157.49, -114.714, 22.5067, 0.52 ) }
    dend_104 { pt3dadd( -158.719, -115.39, 23.1245, 0.44 ) }
    dend_104 { pt3dadd( -159.452, -115.745, 23.487, 0.44 ) }
    dend_104 { pt3dadd( -160.187, -116.043, 23.8724, 0.96 ) }
    dend_104 { pt3dadd( -161.205, -116.285, 24.4784, 1.18 ) }
    // Section: dend_97, id: dend_97, parent: dend_95 (entry count 81/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( 310.99, -93.2099, -88.5837, 0.29 ) }
    dend_97 { pt3dadd( 320.938, -94.1667, -88.8552, 0.29 ) }
    dend_97 { pt3dadd( 330.728, -95.0925, -90.658, 0.29 ) }
    dend_97 { pt3dadd( 339.8, -96.9347, -94.4162, 0.29 ) }
    // Section: dend_96, id: dend_96, parent: dend_95 (entry count 85/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( 310.99, -93.2099, -88.5837, 0.29 ) }
    dend_96 { pt3dadd( 320.236, -94.2694, -92.2349, 0.29 ) }
    dend_96 { pt3dadd( 329.804, -94.9002, -95.0667, 0.29 ) }
    // Section: dend_94, id: dend_94, parent: dend_92 (entry count 88/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( 299.437, -124.238, -68.5842, 0.29 ) }
    dend_94 { pt3dadd( 307.151, -130.391, -67.7739, 0.29 ) }
    dend_94 { pt3dadd( 315.386, -135.54, -65.7003, 0.29 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 91/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 299.437, -124.238, -68.5842, 0.29 ) }
    dend_93 { pt3dadd( 306.958, -130.634, -67.9536, 0.29 ) }
    dend_93 { pt3dadd( 314.37, -137.149, -67.3148, 0.29 ) }
    dend_93 { pt3dadd( 322.23, -143.117, -68.19, 0.29 ) }
    // Section: dend_89, id: dend_89, parent: dend_87 (entry count 95/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -204.991, -184.409, -183.982, 0.29 ) }
    dend_89 { pt3dadd( -213.645, -188.754, -186.273, 0.29 ) }
    dend_89 { pt3dadd( -220.943, -194.38, -189.939, 0.29 ) }
    dend_89 { pt3dadd( -228.471, -198.828, -194.683, 0.29 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 99/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -204.991, -184.409, -183.982, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_88 { pt3dadd( -213.559, -189.032, -186.009, 0.29 ) }
    dend_88 { pt3dadd( -222.528, -193.203, -187.123, 0.29 ) }
    // Section: dend_86, id: dend_86, parent: dend_84 (entry count 2/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -203.884, -181.162, -189.538, 0.29 ) }
    dend_86 { pt3dadd( -212.233, -186.046, -191.818, 0.29 ) }
    dend_86 { pt3dadd( -220.731, -190.888, -193.586, 0.29 ) }
    dend_86 { pt3dadd( -228.144, -196.624, -196.816, 0.29 ) }
    // Section: dend_85, id: dend_85, parent: dend_84 (entry count 6/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -203.884, -181.162, -189.538, 0.29 ) }
    dend_85 { pt3dadd( -212.541, -182.946, -194.197, 0.29 ) }
    dend_85 { pt3dadd( -220.457, -185.473, -199.73, 0.29 ) }
    dend_85 { pt3dadd( -227.564, -187.609, -206.415, 0.29 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 10/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -78.7502, -135.164, -23.267, 0.59 ) }
    dend_71 { pt3dadd( -82.2601, -143.343, -19.1076, 0.59 ) }
    dend_71 { pt3dadd( -86.2188, -151.993, -16.7358, 0.59 ) }
    dend_71 { pt3dadd( -91.5049, -159.989, -14.5458, 0.59 ) }
    dend_71 { pt3dadd( -95.9502, -168.604, -13.0721, 0.59 ) }
    dend_71 { pt3dadd( -100.422, -177.315, -13.4956, 0.59 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 16/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -78.7502, -135.164, -23.267, 0.22 ) }
    dend_70 { pt3dadd( -87.3075, -139.804, -21.2371, 0.59 ) }
    dend_70 { pt3dadd( -94.7001, -145.791, -18.4714, 0.59 ) }
    dend_70 { pt3dadd( -102.445, -151.455, -15.9671, 0.59 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 20/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -87.2776, -128.912, -28.9147, 0.59 ) }
    dend_58 { pt3dadd( -94.4714, -134.92, -25.7102, 0.59 ) }
    dend_58 { pt3dadd( -102.372, -140.75, -24.3532, 0.59 ) }
    dend_58 { pt3dadd( -111.365, -144.711, -22.7324, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 24/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -87.2776, -128.912, -28.9147, 0.22 ) }
    dend_55 { pt3dadd( -95.945, -133.703, -28.0611, 0.59 ) }
    dend_55 { pt3dadd( -105.014, -137.479, -26.3984, 0.59 ) }
    dend_55 { pt3dadd( -112.819, -142.889, -23.5191, 0.59 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 28/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -183.376, -268.217, -77.7058, 0.29 ) }
    dend_45 { pt3dadd( -192.056, -273.052, -77.4796, 0.29 ) }
    dend_45 { pt3dadd( -200.015, -278.74, -79.1026, 0.29 ) }
    dend_45 { pt3dadd( -207.83, -284.33, -81.5621, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 32/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -183.376, -268.217, -77.7058, 0.29 ) }
    dend_44 { pt3dadd( -191.809, -273.377, -76.7759, 0.29 ) }
    dend_44 { pt3dadd( -200.804, -277.55, -77.6591, 0.29 ) }
    dend_44 { pt3dadd( -209.609, -281.87, -79.341, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 36/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -142.079, -257.848, -139.502, 0.29 ) }
    dend_42 { pt3dadd( -145.164, -262.424, -147.776, 0.29 ) }
    dend_42 { pt3dadd( -147.77, -266.469, -156.493, 0.29 ) }
    dend_42 { pt3dadd( -150.874, -270.984, -164.795, 0.29 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 40/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -142.079, -257.848, -139.502, 0.29 ) }
    dend_41 { pt3dadd( -146.436, -261.778, -147.55, 0.29 ) }
    dend_41 { pt3dadd( -150.6, -265.729, -155.689, 0.29 ) }
    dend_41 { pt3dadd( -156.219, -269.229, -163.142, 0.29 ) }
    dend_41 { pt3dadd( -162.015, -272.442, -170.594, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 45/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -73.6042, -129.454, -3.32666, 0.66 ) }
    dend_26 { pt3dadd( -73.2484, -130.422, -2.87007, 0.66 ) }
    dend_26 { pt3dadd( -73.0628, -131.036, -2.69241, 0.81 ) }
    dend_26 { pt3dadd( -72.7672, -132.312, -2.56535, 1.03 ) }
    dend_26 { pt3dadd( -72.576, -133.504, -2.58628, 0.66 ) }
    dend_26 { pt3dadd( -72.5186, -134.183, -2.63525, 1.18 ) }
    dend_26 { pt3dadd( -72.4934, -135.196, -2.72138, 1.47 ) }
    dend_26 { pt3dadd( -72.5142, -136.669, -2.86103, 0.81 ) }
    dend_26 { pt3dadd( -72.5426, -138.015, -2.95681, 0.59 ) }
    dend_26 { pt3dadd( -72.5534, -138.924, -3.00129, 0.81 ) }
    dend_26 { pt3dadd( -72.5093, -140.158, -2.98853, 0.59 ) }
    dend_26 { pt3dadd( -72.3088, -141.517, -2.7312, 1.03 ) }
    dend_26 { pt3dadd( -71.8979, -142.549, -2.19042, 0.81 ) }
    dend_26 { pt3dadd( -71.2808, -143.512, -1.45406, 0.66 ) }
    dend_26 { pt3dadd( -70.6566, -144.301, -0.73093, 0.52 ) }
    dend_26 { pt3dadd( -70.0521, -144.947, -0.043081, 0.52 ) }
    dend_26 { pt3dadd( -69.6364, -145.37, 0.44547, 0.74 ) }
    dend_26 { pt3dadd( -69.1189, -145.944, 1.15714, 1.18 ) }
    dend_26 { pt3dadd( -68.3178, -146.928, 2.36314, 0.88 ) }
    dend_26 { pt3dadd( -67.7066, -147.754, 3.34066, 0.74 ) }
    dend_26 { pt3dadd( -67.1557, -148.526, 4.23648, 0.66 ) }
    dend_26 { pt3dadd( -66.6487, -149.184, 4.98425, 0.66 ) }
    dend_26 { pt3dadd( -65.5139, -150.488, 6.42558, 0.81 ) }
    dend_26 { pt3dadd( -64.8537, -151.181, 7.19512, 0.59 ) }
    dend_26 { pt3dadd( -64.1505, -151.871, 7.96753, 0.59 ) }
    dend_26 { pt3dadd( -63.7959, -152.235, 8.34344, 0.81 ) }
    dend_26 { pt3dadd( -62.7912, -153.329, 9.43387, 0.74 ) }
    dend_26 { pt3dadd( -61.911, -154.343, 10.4832, 0.59 ) }
    dend_26 { pt3dadd( -61.2443, -155.204, 11.4358, 0.52 ) }
    dend_26 { pt3dadd( -60.9356, -155.679, 12.122, 0.52 ) }
    dend_26 { pt3dadd( -60.7367, -155.973, 12.9147, 0.52 ) }
    dend_26 { pt3dadd( -60.5926, -155.848, 14.0463, 0.81 ) }
    dend_26 { pt3dadd( -60.4656, -155.412, 14.9327, 0.81 ) }
    dend_26 { pt3dadd( -60.208, -154.621, 16.056, 0.59 ) }
    dend_26 { pt3dadd( -59.8899, -153.829, 17.0368, 0.44 ) }
    dend_26 { pt3dadd( -59.5046, -153.059, 18.0044, 1.11 ) }
    dend_26 { pt3dadd( -58.9613, -152.176, 19.2637, 0.96 ) }
    dend_26 { pt3dadd( -58.4927, -151.559, 20.4022, 0.96 ) }
    dend_26 { pt3dadd( -58.311, -151.344, 20.9392, 0.96 ) }
    dend_26 { pt3dadd( -58.1401, -151.122, 21.8224, 0.96 ) }
    dend_26 { pt3dadd( -58.1234, -150.966, 23.0989, 0.96 ) }
    dend_26 { pt3dadd( -58.2961, -150.954, 24.5577, 0.96 ) }
    dend_26 { pt3dadd( -58.5936, -151.064, 26.0872, 0.96 ) }
    dend_26 { pt3dadd( -58.7933, -151.163, 27.0126, 0.96 ) }
    dend_26 { pt3dadd( -59.0083, -151.292, 28.0993, 0.96 ) }
    dend_26 { pt3dadd( -59.2389, -151.479, 29.4923, 0.96 ) }
    dend_26 { pt3dadd( -59.3593, -151.688, 30.3426, 0.96 ) }
    dend_26 { pt3dadd( -59.4295, -152.013, 31.0132, 0.96 ) }
    dend_26 { pt3dadd( -59.5326, -152.882, 32.026, 0.96 ) }
    dend_26 { pt3dadd( -59.6108, -153.689, 32.62, 0.96 ) }
    dend_26 { pt3dadd( -59.6517, -154.054, 32.7914, 0.96 ) }
    dend_26 { pt3dadd( -59.967, -156.32, 33.542, 0.44 ) }
    dend_26 { pt3dadd( -60.2274, -157.682, 33.8559, 0.44 ) }
    dend_26 { pt3dadd( -60.3886, -158.335, 33.9481, 0.44 ) }
    dend_26 { pt3dadd( -60.6991, -159.386, 33.9958, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_26 { pt3dadd( -60.9434, -160.144, 33.9776, 1.7 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 1/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -73.6042, -129.454, -3.32666, 0.29 ) }
    dend_25 { pt3dadd( -75.7619, -128.457, -2.21791, 0.29 ) }
    dend_25 { pt3dadd( -76.5101, -128.169, -1.96895, 0.88 ) }
    dend_25 { pt3dadd( -77.1136, -128.013, -1.86728, 0.88 ) }
    dend_25 { pt3dadd( -78.2073, -127.876, -1.80405, 0.74 ) }
    dend_25 { pt3dadd( -79.3825, -127.89, -1.7603, 0.59 ) }
    dend_25 { pt3dadd( -80.3519, -128.0, -1.73448, 1.03 ) }
    dend_25 { pt3dadd( -81.5112, -128.341, -1.87608, 0.52 ) }
    dend_25 { pt3dadd( -82.7391, -128.999, -2.03761, 0.81 ) }
    dend_25 { pt3dadd( -83.5461, -129.632, -2.10845, 0.52 ) }
    dend_25 { pt3dadd( -84.5556, -130.58, -2.12438, 0.52 ) }
    dend_25 { pt3dadd( -84.8927, -130.9, -2.10806, 0.81 ) }
    dend_25 { pt3dadd( -85.4085, -131.341, -2.04992, 0.52 ) }
    dend_25 { pt3dadd( -86.1703, -131.816, -1.92233, 0.96 ) }
    dend_25 { pt3dadd( -87.5495, -132.312, -1.75208, 0.22 ) }
    dend_25 { pt3dadd( -88.7143, -132.412, -1.75951, 0.66 ) }
    dend_25 { pt3dadd( -89.9399, -132.215, -1.92161, 0.44 ) }
    dend_25 { pt3dadd( -90.7829, -131.936, -2.09172, 0.44 ) }
    dend_25 { pt3dadd( -91.7202, -131.518, -2.2921, 0.44 ) }
    dend_25 { pt3dadd( -92.4946, -131.106, -2.47501, 0.44 ) }
    dend_25 { pt3dadd( -93.5085, -130.538, -2.70395, 0.81 ) }
    dend_25 { pt3dadd( -94.5668, -130.016, -2.86014, 0.59 ) }
    dend_25 { pt3dadd( -95.5289, -129.749, -2.77917, 0.37 ) }
    dend_25 { pt3dadd( -96.4889, -129.659, -2.46895, 0.37 ) }
    dend_25 { pt3dadd( -97.1586, -129.679, -2.16271, 0.81 ) }
    dend_25 { pt3dadd( -98.222, -129.763, -1.58988, 0.88 ) }
    dend_25 { pt3dadd( -99.1711, -129.856, -1.02053, 1.03 ) }
    dend_25 { pt3dadd( -100.863, -130.041, 0.0405173, 0.52 ) }
    dend_25 { pt3dadd( -101.459, -130.11, 0.410514, 0.52 ) }
    dend_25 { pt3dadd( -102.364, -130.217, 0.926125, 0.44 ) }
    dend_25 { pt3dadd( -103.591, -130.391, 1.57288, 0.81 ) }
    dend_25 { pt3dadd( -105.148, -130.672, 2.26995, 0.37 ) }
    dend_25 { pt3dadd( -105.887, -130.86, 2.54805, 0.81 ) }
    dend_25 { pt3dadd( -106.615, -131.156, 2.78396, 0.96 ) }
    dend_25 { pt3dadd( -107.532, -131.726, 3.04227, 0.44 ) }
    dend_25 { pt3dadd( -108.527, -132.537, 3.32656, 1.25 ) }
    dend_25 { pt3dadd( -109.232, -133.164, 3.50582, 0.59 ) }
    dend_25 { pt3dadd( -109.704, -133.575, 3.61451, 0.88 ) }
    dend_25 { pt3dadd( -110.408, -134.059, 3.79718, 0.96 ) }
    dend_25 { pt3dadd( -111.56, -134.615, 4.16781, 0.52 ) }
    dend_25 { pt3dadd( -112.691, -134.971, 4.63364, 0.52 ) }
    dend_25 { pt3dadd( -113.876, -135.235, 5.20733, 0.66 ) }
    dend_25 { pt3dadd( -114.659, -135.399, 5.6636, 0.66 ) }
    dend_25 { pt3dadd( -115.517, -135.6, 6.2806, 0.29 ) }
    dend_25 { pt3dadd( -116.231, -135.834, 6.91904, 0.29 ) }
    dend_25 { pt3dadd( -116.887, -136.157, 7.61217, 0.29 ) }
    dend_25 { pt3dadd( -117.46, -136.548, 8.2452, 0.96 ) }
    dend_25 { pt3dadd( -118.058, -137.039, 8.95714, 1.55 ) }
    dend_25 { pt3dadd( -118.971, -137.883, 10.1014, 1.55 ) }
    dend_25 { pt3dadd( -119.949, -138.862, 11.4061, 0.44 ) }
    dend_25 { pt3dadd( -120.468, -139.371, 12.1119, 0.15 ) }
    dend_25 { pt3dadd( -121.012, -139.893, 12.8361, 0.15 ) }
    // Section: dend_162, id: dend_162, parent: dend_160 (entry count 53/100)
    dend_162 { pt3dclear() }
    dend_162 { pt3dadd( -161.267, -92.883, 57.0222, 0.59 ) }
    dend_162 { pt3dadd( -161.672, -93.4894, 57.2626, 0.59 ) }
    dend_162 { pt3dadd( -162.022, -94.0975, 57.4661, 0.81 ) }
    dend_162 { pt3dadd( -162.67, -95.508, 57.8843, 0.29 ) }
    dend_162 { pt3dadd( -162.996, -96.2667, 58.0707, 0.29 ) }
    dend_162 { pt3dadd( -163.17, -96.6856, 58.1575, 0.29 ) }
    dend_162 { pt3dadd( -163.396, -97.2608, 58.2632, 0.29 ) }
    dend_162 { pt3dadd( -163.707, -98.1641, 58.4252, 0.74 ) }
    dend_162 { pt3dadd( -164.29, -100.262, 58.7814, 0.29 ) }
    dend_162 { pt3dadd( -164.617, -102.019, 59.0773, 0.66 ) }
    dend_162 { pt3dadd( -164.826, -103.456, 59.3498, 0.37 ) }
    dend_162 { pt3dadd( -164.944, -104.253, 59.5105, 0.37 ) }
    dend_162 { pt3dadd( -165.125, -105.466, 59.7658, 0.29 ) }
    dend_162 { pt3dadd( -165.245, -106.194, 59.9253, 0.66 ) }
    dend_162 { pt3dadd( -165.348, -106.754, 60.0612, 0.29 ) }
    dend_162 { pt3dadd( -165.546, -107.759, 60.3416, 0.22 ) }
    dend_162 { pt3dadd( -165.818, -109.031, 60.7058, 0.22 ) }
    dend_162 { pt3dadd( -165.968, -109.63, 60.8639, 0.52 ) }
    dend_162 { pt3dadd( -166.192, -110.544, 61.0967, 0.74 ) }
    dend_162 { pt3dadd( -166.432, -111.72, 61.362, 0.29 ) }
    dend_162 { pt3dadd( -166.613, -112.849, 61.5753, 0.37 ) }
    dend_162 { pt3dadd( -166.679, -113.567, 61.6873, 0.66 ) }
    dend_162 { pt3dadd( -166.712, -114.377, 61.7949, 0.96 ) }
    dend_162 { pt3dadd( -166.704, -115.604, 61.9684, 0.74 ) }
    dend_162 { pt3dadd( -166.641, -116.888, 62.1454, 0.22 ) }
    dend_162 { pt3dadd( -166.549, -118.317, 62.3209, 0.29 ) }
    dend_162 { pt3dadd( -166.468, -119.63, 62.4899, 0.22 ) }
    dend_162 { pt3dadd( -166.423, -120.748, 62.6573, 0.96 ) }
    dend_162 { pt3dadd( -166.39, -122.363, 62.929, 0.07 ) }
    dend_162 { pt3dadd( -166.411, -123.231, 63.0883, 0.22 ) }
    dend_162 { pt3dadd( -166.447, -123.983, 63.257, 0.44 ) }
    dend_162 { pt3dadd( -166.497, -124.555, 63.3933, 0.96 ) }
    dend_162 { pt3dadd( -166.732, -125.815, 63.6942, 0.44 ) }
    dend_162 { pt3dadd( -167.001, -126.63, 63.868, 0.59 ) }
    dend_162 { pt3dadd( -167.488, -127.658, 64.0331, 0.22 ) }
    dend_162 { pt3dadd( -167.872, -128.322, 64.13, 0.22 ) }
    dend_162 { pt3dadd( -168.114, -128.678, 64.1729, 0.44 ) }
    dend_162 { pt3dadd( -168.567, -129.289, 64.2274, 0.74 ) }
    dend_162 { pt3dadd( -169.212, -130.07, 64.2601, 0.07 ) }
    dend_162 { pt3dadd( -169.742, -130.65, 64.2741, 0.07 ) }
    dend_162 { pt3dadd( -170.107, -130.998, 64.2741, 0.22 ) }
    dend_162 { pt3dadd( -170.604, -131.432, 64.2741, 0.37 ) }
    // Section: dend_161, id: dend_161, parent: dend_160 (entry count 95/100)
    dend_161 { pt3dclear() }
    dend_161 { pt3dadd( -161.267, -92.883, 57.0222, 0.22 ) }
    dend_161 { pt3dadd( -161.404, -93.282, 56.5563, 0.22 ) }
    dend_161 { pt3dadd( -161.583, -93.6241, 56.0468, 0.22 ) }
    dend_161 { pt3dadd( -161.902, -93.9416, 55.3718, 0.22 ) }
    dend_161 { pt3dadd( -162.313, -94.1507, 54.7042, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_161 { pt3dadd( -162.918, -94.3121, 53.8454, 0.37 ) }
    dend_161 { pt3dadd( -163.429, -94.3961, 53.1181, 0.37 ) }
    dend_161 { pt3dadd( -164.035, -94.4937, 52.218, 0.81 ) }
    dend_161 { pt3dadd( -164.697, -94.625, 51.1395, 0.37 ) }
    dend_161 { pt3dadd( -165.181, -94.7681, 50.2832, 0.37 ) }
    dend_161 { pt3dadd( -165.41, -94.8802, 49.8789, 0.37 ) }
    dend_161 { pt3dadd( -165.703, -95.1548, 49.3982, 0.37 ) }
    dend_161 { pt3dadd( -166.234, -95.9179, 48.5476, 0.59 ) }
    dend_161 { pt3dadd( -166.649, -96.5823, 47.9588, 0.52 ) }
    dend_161 { pt3dadd( -167.184, -97.3597, 47.2808, 0.81 ) }
    dend_161 { pt3dadd( -167.676, -97.9058, 46.7598, 0.52 ) }
    dend_161 { pt3dadd( -168.59, -98.4795, 45.996, 0.22 ) }
    dend_161 { pt3dadd( -169.079, -98.5905, 45.6549, 0.22 ) }
    dend_161 { pt3dadd( -169.913, -98.5756, 45.2125, 0.74 ) }
    dend_161 { pt3dadd( -170.926, -98.4579, 44.8072, 0.22 ) }
    dend_161 { pt3dadd( -171.635, -98.3392, 44.5396, 0.74 ) }
    dend_161 { pt3dadd( -172.566, -98.1697, 44.1437, 0.15 ) }
    dend_161 { pt3dadd( -173.629, -97.9788, 43.63, 0.29 ) }
    dend_161 { pt3dadd( -174.962, -97.8153, 42.839, 0.44 ) }
    dend_161 { pt3dadd( -175.867, -97.7579, 42.1839, 0.22 ) }
    dend_161 { pt3dadd( -176.623, -97.6865, 41.5594, 0.37 ) }
    dend_161 { pt3dadd( -177.099, -97.4573, 41.0115, 0.37 ) }
    dend_161 { pt3dadd( -177.338, -97.1203, 40.6259, 0.52 ) }
    dend_161 { pt3dadd( -177.625, -96.5608, 40.0796, 0.52 ) }
    dend_161 { pt3dadd( -177.84, -96.2026, 39.7251, 0.37 ) }
    dend_161 { pt3dadd( -178.389, -95.4263, 38.9721, 0.81 ) }
    dend_161 { pt3dadd( -179.1, -94.6112, 38.1792, 0.29 ) }
    dend_161 { pt3dadd( -179.512, -94.2063, 37.7413, 0.52 ) }
    dend_161 { pt3dadd( -180.122, -93.66, 37.1332, 0.52 ) }
    dend_161 { pt3dadd( -180.959, -92.9808, 36.3133, 0.22 ) }
    dend_161 { pt3dadd( -181.77, -92.3936, 35.4911, 0.44 ) }
    dend_161 { pt3dadd( -182.341, -92.0363, 34.8612, 0.44 ) }
    dend_161 { pt3dadd( -183.209, -91.5276, 33.7847, 0.44 ) }
    dend_161 { pt3dadd( -183.721, -91.1964, 33.0175, 0.22 ) }
    dend_161 { pt3dadd( -183.962, -90.9835, 32.5595, 0.22 ) }
    dend_161 { pt3dadd( -184.15, -90.7718, 32.1318, 0.29 ) }
    dend_161 { pt3dadd( -184.462, -90.4829, 31.5465, 0.29 ) }
    dend_161 { pt3dadd( -184.894, -90.2757, 30.9336, 0.29 ) }
    dend_161 { pt3dadd( -185.505, -90.1525, 30.2629, 0.29 ) }
    dend_161 { pt3dadd( -186.359, -90.062, 29.4653, 0.29 ) }
    dend_161 { pt3dadd( -187.44, -89.9438, 28.579, 0.52 ) }
    dend_161 { pt3dadd( -188.32, -89.8067, 27.9969, 0.44 ) }
    dend_161 { pt3dadd( -189.868, -89.4736, 27.2725, 0.29 ) }
    dend_161 { pt3dadd( -190.588, -89.2629, 27.0816, 0.29 ) }
    dend_161 { pt3dadd( -191.412, -88.9541, 26.9974, 0.22 ) }
    dend_161 { pt3dadd( -192.12, -88.5954, 27.0414, 0.22 ) }
    dend_161 { pt3dadd( -193.321, -87.8003, 27.3062, 1.03 ) }
    dend_161 { pt3dadd( -194.685, -86.7029, 27.801, 0.29 ) }
    dend_161 { pt3dadd( -195.798, -85.7112, 28.378, 0.15 ) }
    dend_161 { pt3dadd( -196.56, -85.0701, 28.8499, 0.29 ) }
    dend_161 { pt3dadd( -197.08, -84.7139, 29.2045, 0.29 ) }
    dend_161 { pt3dadd( -197.335, -84.5915, 29.3747, 0.29 ) }
    dend_161 { pt3dadd( -197.926, -84.4255, 29.6352, 0.29 ) }
    dend_161 { pt3dadd( -198.888, -84.2414, 29.7199, 0.52 ) }
    dend_161 { pt3dadd( -200.216, -83.9711, 29.4199, 0.22 ) }
    dend_161 { pt3dadd( -201.101, -83.6196, 28.934, 0.22 ) }
    dend_161 { pt3dadd( -201.628, -83.3073, 28.4813, 0.44 ) }
    dend_161 { pt3dadd( -202.648, -82.536, 27.3879, 0.22 ) }
    dend_161 { pt3dadd( -203.524, -81.6593, 26.2302, 0.37 ) }
    dend_161 { pt3dadd( -203.809, -81.3194, 25.7818, 0.66 ) }
    dend_161 { pt3dadd( -204.474, -80.3469, 24.4609, 0.15 ) }
    dend_161 { pt3dadd( -204.888, -79.634, 23.4439, 0.37 ) }
    dend_161 { pt3dadd( -205.056, -79.2975, 22.9639, 0.22 ) }
    dend_161 { pt3dadd( -205.246, -78.841, 22.391, 0.37 ) }
    // Section: dend_134, id: dend_134, parent: dend_132 (entry count 64/100)
    dend_134 { pt3dclear() }
    dend_134 { pt3dadd( -188.754, -93.1658, -13.8789, 0.88 ) }
    dend_134 { pt3dadd( -190.198, -93.1391, -14.97, 0.88 ) }
    dend_134 { pt3dadd( -191.004, -93.0638, -15.4104, 0.88 ) }
    dend_134 { pt3dadd( -192.39, -92.9046, -15.9181, 0.74 ) }
    dend_134 { pt3dadd( -193.733, -92.7716, -16.2535, 0.88 ) }
    dend_134 { pt3dadd( -195.124, -92.6889, -16.5123, 0.59 ) }
    dend_134 { pt3dadd( -196.212, -92.6776, -16.6654, 0.74 ) }
    dend_134 { pt3dadd( -197.263, -92.7126, -16.6001, 0.59 ) }
    dend_134 { pt3dadd( -198.39, -92.8239, -16.4104, 0.88 ) }
    dend_134 { pt3dadd( -199.162, -93.024, -16.1892, 0.81 ) }
    dend_134 { pt3dadd( -199.765, -93.2965, -15.9961, 0.96 ) }
    dend_134 { pt3dadd( -200.382, -93.6472, -15.7931, 0.81 ) }
    dend_134 { pt3dadd( -201.398, -94.2843, -15.5679, 1.18 ) }
    dend_134 { pt3dadd( -202.235, -94.8189, -15.4968, 0.59 ) }
    dend_134 { pt3dadd( -203.411, -95.5643, -15.5909, 0.74 ) }
    dend_134 { pt3dadd( -204.475, -96.1875, -15.8167, 0.74 ) }
    dend_134 { pt3dadd( -205.292, -96.6276, -16.1095, 0.66 ) }
    dend_134 { pt3dadd( -206.761, -97.3444, -16.8108, 0.81 ) }
    dend_134 { pt3dadd( -207.54, -97.6411, -17.2413, 1.25 ) }
    dend_134 { pt3dadd( -208.75, -97.9283, -17.9198, 0.66 ) }
    dend_134 { pt3dadd( -209.965, -98.0441, -18.6019, 0.52 ) }
    dend_134 { pt3dadd( -210.849, -98.0191, -19.0848, 0.74 ) }
    dend_134 { pt3dadd( -212.034, -97.7974, -19.6792, 1.25 ) }
    dend_134 { pt3dadd( -213.533, -97.3004, -20.2196, 0.59 ) }
    dend_134 { pt3dadd( -214.692, -96.7222, -20.524, 0.52 ) }
    dend_134 { pt3dadd( -215.532, -96.1225, -20.626, 0.52 ) }
    dend_134 { pt3dadd( -216.106, -95.5231, -20.6189, 0.52 ) }
    dend_134 { pt3dadd( -216.787, -94.5369, -20.4935, 1.11 ) }
    // Section: dend_133, id: dend_133, parent: dend_132 (entry count 92/100)
    dend_133 { pt3dclear() }
    dend_133 { pt3dadd( -188.754, -93.1658, -13.8789, 0.59 ) }
    dend_133 { pt3dadd( -188.99, -94.6849, -14.1571, 0.59 ) }
    dend_133 { pt3dadd( -189.286, -96.0125, -14.356, 0.44 ) }
    dend_133 { pt3dadd( -189.49, -96.685, -14.4414, 0.44 ) }
    dend_133 { pt3dadd( -189.709, -97.2942, -14.5044, 0.66 ) }
    dend_133 { pt3dadd( -189.997, -98.0572, -14.5374, 0.74 ) }
    dend_133 { pt3dadd( -190.301, -98.8212, -14.5375, 0.66 ) }
    dend_133 { pt3dadd( -190.709, -99.6187, -14.4801, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_133 { pt3dadd( -191.116, -100.296, -14.3894, 0.44 ) }
    dend_133 { pt3dadd( -191.712, -101.282, -14.2425, 0.37 ) }
    dend_133 { pt3dadd( -192.176, -102.049, -14.1151, 0.37 ) }
    dend_133 { pt3dadd( -192.669, -102.84, -13.9663, 0.74 ) }
    dend_133 { pt3dadd( -193.266, -103.733, -13.7756, 0.22 ) }
    dend_133 { pt3dadd( -193.93, -104.742, -13.5381, 0.22 ) }
    dend_133 { pt3dadd( -198.816, -113.083, -15.252, 0.22 ) }
    // Section: dend_124, id: dend_124, parent: dend_120 (entry count 7/100)
    dend_124 { pt3dclear() }
    dend_124 { pt3dadd( -193.923, -60.6464, -13.13, 0.29 ) }
    dend_124 { pt3dadd( -203.624, -61.9649, -15.1435, 0.29 ) }
    dend_124 { pt3dadd( -213.448, -63.7556, -15.4818, 0.29 ) }
    dend_124 { pt3dadd( -223.098, -65.1601, -17.674, 0.29 ) }
    dend_124 { pt3dadd( -232.965, -66.2764, -18.8295, 0.29 ) }
    dend_124 { pt3dadd( -242.702, -68.4254, -19.4026, 0.29 ) }
    dend_124 { pt3dadd( -252.619, -69.6573, -19.1521, 0.29 ) }
    // Section: dend_121, id: dend_121, parent: dend_120 (entry count 14/100)
    dend_121 { pt3dclear() }
    dend_121 { pt3dadd( -193.923, -60.6464, -13.13, 0.29 ) }
    dend_121 { pt3dadd( -203.873, -61.522, -13.5517, 0.29 ) }
    dend_121 { pt3dadd( -213.835, -60.818, -14.0367, 0.29 ) }
    dend_121 { pt3dadd( -223.798, -59.981, -14.0678, 0.29 ) }
    dend_121 { pt3dadd( -233.439, -58.0056, -15.789, 0.29 ) }
    // Section: dend_115, id: dend_115, parent: dend_109 (entry count 19/100)
    dend_115 { pt3dclear() }
    dend_115 { pt3dadd( -123.367, -114.509, -0.268645, 0.66 ) }
    dend_115 { pt3dadd( -123.484, -115.66, -0.707208, 0.66 ) }
    dend_115 { pt3dadd( -123.48, -116.326, -1.02708, 0.66 ) }
    dend_115 { pt3dadd( -123.5, -117.577, -1.82265, 0.59 ) }
    dend_115 { pt3dadd( -123.587, -118.477, -2.51347, 0.44 ) }
    dend_115 { pt3dadd( -123.723, -119.264, -3.19838, 0.44 ) }
    dend_115 { pt3dadd( -123.925, -120.225, -4.10001, 0.44 ) }
    dend_115 { pt3dadd( -124.175, -121.111, -4.99832, 0.66 ) }
    dend_115 { pt3dadd( -124.453, -122.162, -6.07552, 0.96 ) }
    dend_115 { pt3dadd( -124.668, -123.01, -6.90313, 0.66 ) }
    dend_115 { pt3dadd( -124.968, -124.066, -7.8441, 0.74 ) }
    dend_115 { pt3dadd( -125.255, -124.89, -8.47287, 0.74 ) }
    dend_115 { pt3dadd( -125.616, -125.776, -9.07148, 1.03 ) }
    dend_115 { pt3dadd( -125.958, -126.632, -9.56635, 1.11 ) }
    dend_115 { pt3dadd( -126.291, -127.6, -10.028, 0.96 ) }
    dend_115 { pt3dadd( -126.578, -128.567, -10.4734, 0.52 ) }
    dend_115 { pt3dadd( -126.773, -129.312, -10.8639, 0.52 ) }
    dend_115 { pt3dadd( -126.9, -129.992, -11.3123, 0.52 ) }
    dend_115 { pt3dadd( -126.94, -130.747, -11.9494, 0.74 ) }
    dend_115 { pt3dadd( -126.872, -131.308, -12.5285, 1.03 ) }
    dend_115 { pt3dadd( -126.627, -132.047, -13.348, 0.96 ) }
    dend_115 { pt3dadd( -126.191, -132.959, -14.249, 0.66 ) }
    dend_115 { pt3dadd( -125.787, -133.744, -14.9509, 0.44 ) }
    dend_115 { pt3dadd( -125.504, -134.349, -15.4295, 0.66 ) }
    dend_115 { pt3dadd( -125.262, -135.03, -15.9136, 0.66 ) }
    dend_115 { pt3dadd( -125.046, -136.217, -16.6232, 0.66 ) }
    dend_115 { pt3dadd( -125.222, -137.715, -17.2269, 0.52 ) }
    dend_115 { pt3dadd( -125.586, -138.536, -17.3989, 0.52 ) }
    dend_115 { pt3dadd( -126.176, -139.438, -17.4496, 0.52 ) }
    dend_115 { pt3dadd( -126.894, -140.438, -17.4175, 0.59 ) }
    dend_115 { pt3dadd( -127.149, -140.785, -17.3727, 0.44 ) }
    dend_115 { pt3dadd( -128.088, -142.055, -17.1111, 0.74 ) }
    dend_115 { pt3dadd( -128.655, -142.929, -16.9031, 0.52 ) }
    dend_115 { pt3dadd( -129.283, -144.291, -16.6425, 0.66 ) }
    dend_115 { pt3dadd( -129.577, -145.353, -16.5076, 0.44 ) }
    dend_115 { pt3dadd( -129.676, -146.285, -16.4586, 0.74 ) }
    dend_115 { pt3dadd( -129.64, -146.999, -16.476, 0.88 ) }
    dend_115 { pt3dadd( -129.325, -148.125, -16.6604, 0.52 ) }
    dend_115 { pt3dadd( -128.677, -149.265, -17.067, 0.44 ) }
    dend_115 { pt3dadd( -128.269, -149.717, -17.3456, 0.44 ) }
    dend_115 { pt3dadd( -127.588, -150.351, -17.793, 0.44 ) }
    dend_115 { pt3dadd( -126.798, -151.045, -18.3516, 0.88 ) }
    dend_115 { pt3dadd( -125.866, -151.853, -19.0591, 0.44 ) }
    dend_115 { pt3dadd( -125.29, -152.381, -19.5966, 0.74 ) }
    dend_115 { pt3dadd( -124.588, -153.189, -20.4669, 0.52 ) }
    dend_115 { pt3dadd( -124.084, -154.036, -21.4052, 0.37 ) }
    dend_115 { pt3dadd( -123.821, -155.017, -22.4669, 0.37 ) }
    dend_115 { pt3dadd( -123.818, -156.001, -23.4583, 0.74 ) }
    dend_115 { pt3dadd( -124.033, -157.148, -24.4655, 0.74 ) }
    dend_115 { pt3dadd( -124.312, -158.079, -25.2088, 0.74 ) }
    dend_115 { pt3dadd( -124.415, -158.376, -25.4352, 0.74 ) }
    dend_115 { pt3dadd( -124.683, -159.218, -26.005, 0.29 ) }
    dend_115 { pt3dadd( -124.751, -159.924, -26.1721, 0.66 ) }
    dend_115 { pt3dadd( -124.742, -161.105, -26.1783, 0.37 ) }
    dend_115 { pt3dadd( -124.596, -161.951, -26.0542, 0.74 ) }
    dend_115 { pt3dadd( -124.289, -162.892, -25.8668, 0.59 ) }
    dend_115 { pt3dadd( -123.968, -163.607, -25.7138, 0.22 ) }
    dend_115 { pt3dadd( -123.25, -164.735, -25.4569, 0.22 ) }
    dend_115 { pt3dadd( -122.286, -172.993, -30.6855, 0.22 ) }
    dend_115 { pt3dadd( -120.719, -181.498, -35.3175, 0.22 ) }
    // Section: dend_110, id: dend_110, parent: dend_109 (entry count 79/100)
    dend_110 { pt3dclear() }
    dend_110 { pt3dadd( -123.367, -114.509, -0.268645, 0.44 ) }
    dend_110 { pt3dadd( -124.362, -115.304, -0.657865, 0.44 ) }
    dend_110 { pt3dadd( -125.194, -115.943, -0.941318, 0.44 ) }
    dend_110 { pt3dadd( -125.876, -116.572, -1.15382, 0.52 ) }
    dend_110 { pt3dadd( -126.456, -117.19, -1.31154, 0.52 ) }
    dend_110 { pt3dadd( -127.162, -118.046, -1.51149, 0.52 ) }
    dend_110 { pt3dadd( -127.683, -118.762, -1.66219, 0.74 ) }
    dend_110 { pt3dadd( -128.051, -119.368, -1.79986, 1.4 ) }
    dend_110 { pt3dadd( -128.626, -120.546, -2.01002, 1.4 ) }
    dend_110 { pt3dadd( -129.031, -121.688, -2.20756, 0.96 ) }
    dend_110 { pt3dadd( -129.446, -123.55, -2.51012, 0.44 ) }
    dend_110 { pt3dadd( -129.551, -124.543, -2.69028, 0.52 ) }
    dend_110 { pt3dadd( -129.558, -125.48, -2.86864, 0.52 ) }
    dend_110 { pt3dadd( -129.508, -126.259, -3.01619, 0.88 ) }
    dend_110 { pt3dadd( -129.403, -127.173, -3.20168, 1.62 ) }
    dend_110 { pt3dadd( -129.185, -128.618, -3.45211, 1.11 ) }
    dend_110 { pt3dadd( -128.954, -129.983, -3.63492, 0.66 ) }
    dend_110 { pt3dadd( -128.788, -131.303, -3.74713, 0.66 ) }
    dend_110 { pt3dadd( -128.707, -132.585, -3.78609, 0.59 ) }
    dend_110 { pt3dadd( -128.663, -133.845, -3.73691, 0.59 ) }
    dend_110 { pt3dadd( -128.648, -135.098, -3.5629, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_110 { pt3dadd( -128.648, -136.138, -3.32982, 0.81 ) }
    dend_110 { pt3dadd( -128.706, -137.592, -2.96233, 0.59 ) }
    dend_110 { pt3dadd( -128.863, -138.955, -2.64663, 0.66 ) }
    dend_110 { pt3dadd( -129.134, -140.379, -2.38146, 0.59 ) }
    dend_110 { pt3dadd( -129.472, -141.524, -2.28769, 0.59 ) }
    dend_110 { pt3dadd( -129.761, -142.121, -2.40737, 0.81 ) }
    dend_110 { pt3dadd( -130.523, -143.37, -3.04864, 0.66 ) }
    dend_110 { pt3dadd( -131.194, -144.456, -3.94308, 1.18 ) }
    dend_110 { pt3dadd( -131.643, -145.259, -4.71779, 1.4 ) }
    dend_110 { pt3dadd( -132.104, -146.244, -5.69444, 1.11 ) }
    dend_110 { pt3dadd( -132.416, -147.233, -6.60648, 1.11 ) }
    dend_110 { pt3dadd( -132.628, -148.35, -7.43705, 0.88 ) }
    dend_110 { pt3dadd( -132.673, -149.56, -8.05842, 0.74 ) }
    dend_110 { pt3dadd( -132.585, -150.618, -8.39796, 1.11 ) }
    dend_110 { pt3dadd( -132.438, -151.581, -8.52578, 1.47 ) }
    dend_110 { pt3dadd( -132.148, -153.108, -8.4847, 0.74 ) }
    dend_110 { pt3dadd( -131.895, -154.438, -8.2946, 0.52 ) }
    dend_110 { pt3dadd( -131.736, -155.66, -8.02729, 0.66 ) }
    dend_110 { pt3dadd( -131.674, -156.666, -7.78023, 0.88 ) }
    dend_110 { pt3dadd( -131.689, -158.085, -7.45399, 0.44 ) }
    dend_110 { pt3dadd( -131.802, -159.29, -7.20135, 0.59 ) }
    dend_110 { pt3dadd( -131.995, -160.44, -7.00256, 1.03 ) }
    dend_110 { pt3dadd( -132.3, -161.785, -6.87165, 1.55 ) }
    dend_110 { pt3dadd( -132.985, -164.326, -6.86748, 0.66 ) }
    dend_110 { pt3dadd( -133.482, -166.093, -7.00665, 0.66 ) }
    dend_110 { pt3dadd( -133.827, -167.349, -7.19765, 1.03 ) }
    dend_110 { pt3dadd( -134.108, -168.356, -7.39562, 1.03 ) }
    dend_110 { pt3dadd( -134.363, -169.187, -7.57931, 0.66 ) }
    dend_110 { pt3dadd( -134.83, -170.467, -7.84994, 0.66 ) }
    dend_110 { pt3dadd( -135.246, -171.376, -8.04914, 1.11 ) }
    dend_110 { pt3dadd( -136.081, -172.86, -8.3383, 0.44 ) }
    dend_110 { pt3dadd( -136.661, -173.773, -8.50695, 1.11 ) }
    dend_110 { pt3dadd( -137.52, -175.005, -8.71538, 1.18 ) }
    dend_110 { pt3dadd( -138.753, -176.65, -8.96534, 0.88 ) }
    dend_110 { pt3dadd( -139.608, -177.75, -9.10437, 0.59 ) }
    dend_110 { pt3dadd( -140.162, -178.505, -9.22292, 0.59 ) }
    dend_110 { pt3dadd( -140.59, -179.234, -9.39545, 0.59 ) }
    dend_110 { pt3dadd( -140.892, -180.009, -9.64522, 0.29 ) }
    dend_110 { pt3dadd( -141.06, -180.811, -9.98146, 1.18 ) }
    dend_110 { pt3dadd( -141.123, -181.627, -10.3565, 0.37 ) }
    dend_110 { pt3dadd( -141.141, -182.613, -10.7603, 0.96 ) }
    dend_110 { pt3dadd( -141.103, -183.556, -11.1082, 0.44 ) }
    dend_110 { pt3dadd( -141.09, -184.473, -11.4195, 1.18 ) }
    dend_110 { pt3dadd( -141.099, -185.574, -11.7934, 0.96 ) }
    dend_110 { pt3dadd( -141.118, -186.566, -12.1498, 1.18 ) }
    dend_110 { pt3dadd( -141.14, -187.411, -12.4579, 1.18 ) }
    dend_110 { pt3dadd( -141.097, -188.577, -12.8014, 0.96 ) }
    // Section: dend_108, id: dend_108, parent: dend_104 (entry count 47/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( -161.205, -116.285, 24.4784, 0.15 ) }
    dend_108 { pt3dadd( -161.964, -117.378, 25.1948, 0.15 ) }
    dend_108 { pt3dadd( -162.328, -117.806, 25.4858, 0.29 ) }
    dend_108 { pt3dadd( -163.127, -118.537, 26.0367, 0.15 ) }
    dend_108 { pt3dadd( -163.729, -118.951, 26.3942, 0.15 ) }
    dend_108 { pt3dadd( -164.295, -119.34, 26.7296, 0.15 ) }
    dend_108 { pt3dadd( -164.736, -119.644, 26.9914, 0.15 ) }
    dend_108 { pt3dadd( -165.335, -120.182, 27.5027, 0.15 ) }
    dend_108 { pt3dadd( -165.761, -120.565, 27.8634, 0.15 ) }
    dend_108 { pt3dadd( -166.347, -120.76, 28.1547, 0.29 ) }
    // Section: dend_105, id: dend_105, parent: dend_104 (entry count 57/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( -161.205, -116.285, 24.4784, 0.29 ) }
    dend_105 { pt3dadd( -160.472, -116.789, 25.4693, 0.29 ) }
    dend_105 { pt3dadd( -160.023, -117.035, 26.047, 0.29 ) }
    dend_105 { pt3dadd( -159.46, -117.345, 26.7872, 0.29 ) }
    dend_105 { pt3dadd( -159.03, -117.637, 27.4611, 0.59 ) }
    dend_105 { pt3dadd( -158.607, -118.02, 28.3595, 0.74 ) }
    dend_105 { pt3dadd( -158.192, -118.54, 29.6626, 0.66 ) }
    dend_105 { pt3dadd( -158.094, -118.808, 30.4605, 0.66 ) }
    dend_105 { pt3dadd( -158.194, -119.001, 31.1163, 0.66 ) }
    dend_105 { pt3dadd( -158.67, -119.307, 32.3401, 0.81 ) }
    dend_105 { pt3dadd( -159.332, -119.564, 33.5634, 1.11 ) }
    dend_105 { pt3dadd( -159.878, -119.701, 34.4271, 1.11 ) }
    dend_105 { pt3dadd( -160.897, -119.89, 35.9757, 0.52 ) }
    dend_105 { pt3dadd( -161.231, -119.943, 36.5092, 0.52 ) }
    dend_105 { pt3dadd( -161.629, -120.021, 37.1711, 0.52 ) }
    dend_105 { pt3dadd( -162.008, -120.17, 37.8444, 0.52 ) }
    dend_105 { pt3dadd( -162.326, -120.427, 38.4336, 0.59 ) }
    dend_105 { pt3dadd( -162.741, -120.962, 39.1413, 0.59 ) }
    dend_105 { pt3dadd( -163.114, -121.679, 39.7723, 0.59 ) }
    dend_105 { pt3dadd( -163.58, -122.814, 40.5675, 0.44 ) }
    dend_105 { pt3dadd( -164.016, -123.981, 41.2884, 0.37 ) }
    dend_105 { pt3dadd( -164.265, -124.602, 41.6364, 1.03 ) }
    dend_105 { pt3dadd( -164.656, -125.466, 42.0861, 1.4 ) }
    dend_105 { pt3dadd( -165.321, -126.745, 42.708, 0.59 ) }
    dend_105 { pt3dadd( -166.02, -128.003, 43.3034, 0.59 ) }
    dend_105 { pt3dadd( -166.603, -129.079, 43.7961, 0.81 ) }
    dend_105 { pt3dadd( -167.323, -130.432, 44.3765, 1.03 ) }
    dend_105 { pt3dadd( -167.805, -131.372, 44.7355, 1.11 ) }
    dend_105 { pt3dadd( -168.369, -132.519, 45.0819, 0.37 ) }
    dend_105 { pt3dadd( -168.637, -133.069, 45.1766, 0.37 ) }
    dend_105 { pt3dadd( -169.117, -134.106, 45.2085, 0.88 ) }
    dend_105 { pt3dadd( -169.381, -134.777, 45.1591, 0.52 ) }
    dend_105 { pt3dadd( -169.694, -135.682, 45.0086, 0.52 ) }
    dend_105 { pt3dadd( -169.97, -136.407, 44.8088, 0.52 ) }
    dend_105 { pt3dadd( -170.307, -137.146, 44.5112, 0.52 ) }
    dend_105 { pt3dadd( -170.925, -138.168, 43.9573, 0.74 ) }
    dend_105 { pt3dadd( -171.458, -138.916, 43.4955, 1.03 ) }
    dend_105 { pt3dadd( -172.125, -139.751, 42.9304, 0.37 ) }
    dend_105 { pt3dadd( -172.869, -140.582, 42.3194, 1.11 ) }
    dend_105 { pt3dadd( -173.44, -141.159, 41.8659, 1.62 ) }
    dend_105 { pt3dadd( -174.696, -142.218, 40.9175, 0.29 ) }
    dend_105 { pt3dadd( -175.295, -142.61, 40.4924, 0.29 ) }
    dend_105 { pt3dadd( -176.112, -143.04, 39.9764, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_105 { pt3dadd( -176.602, -143.263, 39.7205, 0.59 ) }
    dend_105 { pt3dadd( -177.34, -143.569, 39.3936, 1.4 ) }
    dend_105 { pt3dadd( -178.79, -144.175, 38.8344, 0.59 ) }
    dend_105 { pt3dadd( -179.675, -144.557, 38.5311, 0.29 ) }
    dend_105 { pt3dadd( -180.579, -144.974, 38.2411, 0.29 ) }
    dend_105 { pt3dadd( -181.296, -145.341, 38.0276, 0.52 ) }
    dend_105 { pt3dadd( -182.676, -146.113, 37.6551, 0.37 ) }
    dend_105 { pt3dadd( -183.994, -146.887, 37.3337, 0.52 ) }
    dend_105 { pt3dadd( -184.759, -147.314, 37.1579, 0.96 ) }
    dend_105 { pt3dadd( -185.471, -147.645, 36.9916, 1.03 ) }
    dend_105 { pt3dadd( -185.747, -147.741, 36.9288, 1.03 ) }
    dend_105 { pt3dadd( -187.242, -148.132, 36.5606, 0.29 ) }
    dend_105 { pt3dadd( -187.836, -148.243, 36.4416, 0.22 ) }
    dend_105 { pt3dadd( -189.078, -148.413, 36.2187, 0.22 ) }
    dend_105 { pt3dadd( -189.406, -148.488, 36.186, 0.22 ) }
    dend_105 { pt3dadd( -189.984, -148.818, 36.2978, 0.22 ) }
    dend_105 { pt3dadd( -190.473, -149.244, 36.5236, 0.22 ) }
    dend_105 { pt3dadd( -191.524, -150.304, 37.0868, 0.22 ) }
    dend_105 { pt3dadd( -191.913, -150.718, 37.3171, 0.44 ) }
    dend_105 { pt3dadd( -192.69, -151.574, 37.8102, 1.03 ) }
    dend_105 { pt3dadd( -193.923, -152.92, 38.5794, 0.37 ) }
    dend_105 { pt3dadd( -195.323, -154.394, 39.4111, 0.44 ) }
    dend_105 { pt3dadd( -196.52, -155.6, 40.0846, 0.81 ) }
    // Section: dend_75, id: dend_75, parent: dend_71 (entry count 23/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -100.422, -177.315, -13.4956, 0.59 ) }
    dend_75 { pt3dadd( -105.032, -185.743, -11.4897, 0.59 ) }
    dend_75 { pt3dadd( -108.405, -194.793, -9.91975, 0.59 ) }
    dend_75 { pt3dadd( -111.82, -203.319, -6.47469, 0.59 ) }
    dend_75 { pt3dadd( -116.044, -212.1, -5.45077, 0.59 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 28/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -100.422, -177.315, -13.4956, 0.22 ) }
    dend_72 { pt3dadd( -104.638, -185.947, -11.5363, 0.59 ) }
    dend_72 { pt3dadd( -108.546, -194.906, -10.9822, 0.59 ) }
    dend_72 { pt3dadd( -113.221, -203.424, -9.63128, 0.59 ) }
    dend_72 { pt3dadd( -117.693, -212.101, -8.74793, 0.59 ) }
    // Section: dend_66, id: dend_66, parent: dend_58 (entry count 33/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -111.365, -144.711, -22.7324, 0.59 ) }
    dend_66 { pt3dadd( -119.474, -146.933, -17.343, 0.59 ) }
    dend_66 { pt3dadd( -127.341, -149.447, -11.7346, 0.59 ) }
    dend_66 { pt3dadd( -135.638, -152.938, -7.45159, 0.59 ) }
    dend_66 { pt3dadd( -143.357, -157.223, -2.85771, 0.59 ) }
    dend_66 { pt3dadd( -150.186, -162.044, 2.51888, 0.59 ) }
    dend_66 { pt3dadd( -157.557, -167.939, 5.53766, 0.59 ) }
    dend_66 { pt3dadd( -165.653, -172.486, 9.10251, 0.59 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 41/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -111.365, -144.711, -22.7324, 0.22 ) }
    dend_59 { pt3dadd( -118.204, -151.759, -23.715, 0.59 ) }
    dend_59 { pt3dadd( -124.261, -159.076, -26.3586, 0.59 ) }
    dend_59 { pt3dadd( -129.9, -166.323, -29.9579, 0.59 ) }
    dend_59 { pt3dadd( -135.98, -173.323, -33.3478, 0.59 ) }
    dend_59 { pt3dadd( -141.047, -181.095, -36.6331, 0.59 ) }
    dend_59 { pt3dadd( -145.763, -189.118, -39.801, 0.59 ) }
    dend_59 { pt3dadd( -148.564, -197.422, -44.2312, 0.59 ) }
    dend_59 { pt3dadd( -152.737, -204.113, -50.188, 0.59 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 50/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -112.819, -142.889, -23.5191, 0.59 ) }
    dend_57 { pt3dadd( -120.935, -148.003, -20.9473, 0.59 ) }
    dend_57 { pt3dadd( -129.531, -152.62, -19.0245, 0.59 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 53/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -112.819, -142.889, -23.5191, 0.22 ) }
    dend_56 { pt3dadd( -121.794, -147.083, -22.5399, 0.59 ) }
    dend_56 { pt3dadd( -129.666, -152.781, -20.5709, 0.59 ) }
    dend_56 { pt3dadd( -138.469, -156.435, -17.6647, 0.59 ) }
    dend_56 { pt3dadd( -147.362, -159.705, -14.5555, 0.59 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 58/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -60.9434, -160.144, 33.9776, 0.29 ) }
    dend_28 { pt3dadd( -62.6277, -159.829, 34.7833, 0.29 ) }
    dend_28 { pt3dadd( -63.5092, -159.72, 35.1832, 0.29 ) }
    dend_28 { pt3dadd( -64.1273, -159.668, 35.4801, 0.29 ) }
    dend_28 { pt3dadd( -64.5623, -159.643, 35.6933, 0.29 ) }
    dend_28 { pt3dadd( -65.4145, -159.602, 36.1491, 0.29 ) }
    dend_28 { pt3dadd( -66.2433, -159.582, 36.5936, 0.29 ) }
    dend_28 { pt3dadd( -67.0347, -159.571, 37.0356, 0.74 ) }
    dend_28 { pt3dadd( -67.8407, -159.569, 37.4806, 1.4 ) }
    dend_28 { pt3dadd( -68.8808, -159.582, 38.0629, 1.11 ) }
    dend_28 { pt3dadd( -69.8079, -159.576, 38.5961, 0.29 ) }
    dend_28 { pt3dadd( -70.7284, -159.539, 39.1398, 1.03 ) }
    dend_28 { pt3dadd( -71.8145, -159.489, 39.7698, 0.15 ) }
    dend_28 { pt3dadd( -72.3968, -159.459, 40.1139, 0.37 ) }
    dend_28 { pt3dadd( -73.5519, -159.387, 40.7551, 0.29 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 73/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -60.9434, -160.144, 33.9776, 0.66 ) }
    dend_27 { pt3dadd( -60.4269, -161.641, 33.701, 0.66 ) }
    dend_27 { pt3dadd( -59.9478, -162.837, 33.573, 0.37 ) }
    dend_27 { pt3dadd( -59.5876, -163.753, 33.5255, 0.66 ) }
    dend_27 { pt3dadd( -59.3994, -164.339, 33.5164, 1.33 ) }
    dend_27 { pt3dadd( -59.2011, -165.216, 33.516, 1.47 ) }
    dend_27 { pt3dadd( -58.9702, -166.948, 33.5305, 0.44 ) }
    dend_27 { pt3dadd( -58.9532, -168.051, 33.5885, 0.22 ) }
    dend_27 { pt3dadd( -59.0026, -169.183, 33.6744, 0.88 ) }
    dend_27 { pt3dadd( -59.1206, -170.587, 33.7968, 1.7 ) }
    dend_27 { pt3dadd( -59.3259, -172.281, 33.9637, 1.92 ) }
    dend_27 { pt3dadd( -59.6433, -174.255, 34.1677, 0.22 ) }
    dend_27 { pt3dadd( -59.9782, -176.057, 34.3676, 0.52 ) }
    dend_27 { pt3dadd( -60.1134, -176.868, 34.4756, 0.15 ) }
    dend_27 { pt3dadd( -60.1549, -177.34, 34.5477, 0.15 ) }
    dend_27 { pt3dadd( -60.1159, -178.199, 34.7022, 0.66 ) }
    dend_27 { pt3dadd( -59.9696, -178.943, 34.852, 0.44 ) }
    dend_27 { pt3dadd( -59.7039, -179.714, 34.9989, 0.88 ) }
    dend_27 { pt3dadd( -59.4993, -180.195, 35.0546, 0.66 ) }
    dend_27 { pt3dadd( -59.1651, -181.072, 35.073, 0.22 ) }
    dend_27 { pt3dadd( -58.9123, -181.791, 35.0314, 0.44 ) }
    dend_27 { pt3dadd( -58.6568, -182.599, 34.9223, 0.15 ) }
    dend_27 { pt3dadd( -58.5454, -182.964, 34.8555, 0.15 ) }
    dend_27 { pt3dadd( -58.3328, -183.802, 34.6481, 0.15 ) }
    dend_27 { pt3dadd( -58.2337, -184.305, 34.5053, 0.15 ) }
    dend_27 { pt3dadd( -58.1949, -184.739, 34.359, 0.66 ) }
    dend_27 { pt3dadd( -58.2096, -185.234, 34.1724, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    // Section: dend_136, id: dend_136, parent: dend_134 (entry count 0/100)
    dend_136 { pt3dclear() }
    dend_136 { pt3dadd( -216.787, -94.5369, -20.4935, 0.74 ) }
    dend_136 { pt3dadd( -217.391, -93.493, -20.8176, 0.74 ) }
    dend_136 { pt3dadd( -217.919, -92.7866, -20.9968, 0.74 ) }
    dend_136 { pt3dadd( -218.789, -91.7397, -21.2148, 0.81 ) }
    dend_136 { pt3dadd( -219.421, -91.0005, -21.3433, 0.81 ) }
    dend_136 { pt3dadd( -220.236, -90.0368, -21.487, 0.96 ) }
    dend_136 { pt3dadd( -221.03, -89.054, -21.6171, 1.33 ) }
    dend_136 { pt3dadd( -222.087, -87.7544, -21.7339, 0.66 ) }
    dend_136 { pt3dadd( -222.916, -86.6465, -21.802, 0.66 ) }
    dend_136 { pt3dadd( -223.567, -85.5929, -21.837, 0.88 ) }
    dend_136 { pt3dadd( -223.953, -84.6886, -21.8445, 0.37 ) }
    dend_136 { pt3dadd( -224.096, -83.9906, -21.8467, 0.37 ) }
    dend_136 { pt3dadd( -224.128, -83.026, -21.8659, 0.74 ) }
    dend_136 { pt3dadd( -224.072, -82.026, -21.9006, 1.11 ) }
    dend_136 { pt3dadd( -224.013, -81.1619, -21.9583, 0.59 ) }
    dend_136 { pt3dadd( -223.974, -80.0498, -22.0663, 0.59 ) }
    dend_136 { pt3dadd( -224.005, -78.7266, -22.2515, 0.59 ) }
    dend_136 { pt3dadd( -224.19, -77.2027, -22.5395, 1.11 ) }
    dend_136 { pt3dadd( -224.579, -75.6535, -22.9054, 0.66 ) }
    dend_136 { pt3dadd( -225.013, -74.3067, -23.262, 0.44 ) }
    dend_136 { pt3dadd( -225.408, -73.3339, -23.5529, 0.52 ) }
    dend_136 { pt3dadd( -225.753, -72.6662, -23.7859, 0.81 ) }
    dend_136 { pt3dadd( -226.321, -71.8006, -24.154, 0.52 ) }
    dend_136 { pt3dadd( -226.972, -71.0686, -24.5424, 0.22 ) }
    dend_136 { pt3dadd( -229.735, -62.0836, -27.2702, 0.22 ) }
    dend_136 { pt3dadd( -232.921, -52.8671, -27.9736, 0.22 ) }
    // Section: dend_135, id: dend_135, parent: dend_134 (entry count 26/100)
    dend_135 { pt3dclear() }
    dend_135 { pt3dadd( -216.787, -94.5369, -20.4935, 0.29 ) }
    dend_135 { pt3dadd( -218.356, -93.5642, -20.0629, 0.29 ) }
    dend_135 { pt3dadd( -219.205, -93.038, -19.83, 0.44 ) }
    dend_135 { pt3dadd( -220.005, -92.5422, -19.6105, 0.22 ) }
    dend_135 { pt3dadd( -220.786, -92.0579, -19.3962, 0.29 ) }
    dend_135 { pt3dadd( -221.615, -91.5439, -19.1687, 0.22 ) }
    dend_135 { pt3dadd( -222.138, -91.2198, -19.0252, 0.22 ) }
    dend_135 { pt3dadd( -231.027, -87.0399, -17.4109, 0.22 ) }
    dend_135 { pt3dadd( -239.049, -81.2857, -16.5092, 0.22 ) }
    // Section: dend_128, id: dend_128, parent: dend_124 (entry count 35/100)
    dend_128 { pt3dclear() }
    dend_128 { pt3dadd( -252.619, -69.6573, -19.1521, 0.29 ) }
    dend_128 { pt3dadd( -262.438, -71.2306, -20.145, 0.29 ) }
    dend_128 { pt3dadd( -272.384, -72.0678, -19.5695, 0.29 ) }
    dend_128 { pt3dadd( -282.331, -71.3461, -20.2876, 0.29 ) }
    dend_128 { pt3dadd( -292.123, -69.3715, -20.2913, 0.29 ) }
    dend_128 { pt3dadd( -301.993, -68.0171, -19.4731, 0.29 ) }
    dend_128 { pt3dadd( -311.412, -65.8092, -16.9952, 0.29 ) }
    dend_128 { pt3dadd( -320.454, -62.3261, -14.654, 0.29 ) }
    dend_128 { pt3dadd( -328.966, -58.8625, -10.79, 0.29 ) }
    // Section: dend_125, id: dend_125, parent: dend_124 (entry count 44/100)
    dend_125 { pt3dclear() }
    dend_125 { pt3dadd( -252.619, -69.6573, -19.1521, 0.29 ) }
    dend_125 { pt3dadd( -262.452, -71.1294, -20.1691, 0.29 ) }
    dend_125 { pt3dadd( -272.255, -72.8951, -20.9516, 0.29 ) }
    dend_125 { pt3dadd( -281.509, -76.3891, -22.1841, 0.29 ) }
    dend_125 { pt3dadd( -290.98, -78.7501, -24.291, 0.29 ) }
    dend_125 { pt3dadd( -300.834, -79.5556, -25.7784, 0.29 ) }
    dend_125 { pt3dadd( -310.645, -81.1596, -26.8004, 0.29 ) }
    dend_125 { pt3dadd( -320.624, -81.4484, -27.3785, 0.29 ) }
    // Section: dend_123, id: dend_123, parent: dend_121 (entry count 52/100)
    dend_123 { pt3dclear() }
    dend_123 { pt3dadd( -233.439, -58.0056, -15.789, 0.29 ) }
    dend_123 { pt3dadd( -243.414, -57.3581, -16.0148, 0.29 ) }
    // Section: dend_122, id: dend_122, parent: dend_121 (entry count 54/100)
    dend_122 { pt3dclear() }
    dend_122 { pt3dadd( -233.439, -58.0056, -15.789, 0.29 ) }
    dend_122 { pt3dadd( -243.35, -57.3234, -16.9168, 0.29 ) }
    // Section: dend_112, id: dend_112, parent: dend_110 (entry count 56/100)
    dend_112 { pt3dclear() }
    dend_112 { pt3dadd( -141.097, -188.577, -12.8014, 0.52 ) }
    dend_112 { pt3dadd( -140.627, -189.774, -13.2391, 0.52 ) }
    dend_112 { pt3dadd( -140.257, -190.732, -13.6547, 0.37 ) }
    dend_112 { pt3dadd( -139.865, -191.888, -14.2314, 0.66 ) }
    dend_112 { pt3dadd( -139.615, -192.762, -14.6825, 0.37 ) }
    dend_112 { pt3dadd( -139.416, -193.712, -15.1539, 0.37 ) }
    dend_112 { pt3dadd( -139.255, -194.641, -15.5938, 0.66 ) }
    dend_112 { pt3dadd( -139.111, -196.045, -16.18, 0.88 ) }
    dend_112 { pt3dadd( -139.01, -197.339, -16.6997, 0.37 ) }
    dend_112 { pt3dadd( -138.971, -197.881, -16.8917, 0.37 ) }
    dend_112 { pt3dadd( -138.894, -199.169, -17.2745, 0.59 ) }
    dend_112 { pt3dadd( -138.859, -199.822, -17.4135, 0.81 ) }
    dend_112 { pt3dadd( -138.846, -200.956, -17.5965, 0.44 ) }
    dend_112 { pt3dadd( -138.869, -201.236, -17.6322, 0.59 ) }
    dend_112 { pt3dadd( -139.003, -202.197, -17.77, 0.37 ) }
    dend_112 { pt3dadd( -139.099, -202.809, -17.9087, 0.37 ) }
    dend_112 { pt3dadd( -139.176, -203.219, -18.0362, 0.37 ) }
    dend_112 { pt3dadd( -139.35, -204.004, -18.2897, 0.44 ) }
    dend_112 { pt3dadd( -139.51, -204.707, -18.5097, 0.44 ) }
    dend_112 { pt3dadd( -139.704, -205.718, -18.7414, 0.44 ) }
    dend_112 { pt3dadd( -139.803, -206.496, -18.8582, 0.59 ) }
    dend_112 { pt3dadd( -139.825, -207.365, -18.9342, 0.81 ) }
    dend_112 { pt3dadd( -139.757, -208.376, -18.9929, 0.74 ) }
    dend_112 { pt3dadd( -139.647, -209.138, -19.0298, 1.11 ) }
    dend_112 { pt3dadd( -139.4, -210.382, -19.0868, 0.59 ) }
    dend_112 { pt3dadd( -139.231, -211.185, -19.1217, 0.74 ) }
    dend_112 { pt3dadd( -139.031, -212.109, -19.1957, 0.74 ) }
    dend_112 { pt3dadd( -138.837, -213.082, -19.3117, 0.74 ) }
    dend_112 { pt3dadd( -138.693, -213.987, -19.4504, 0.96 ) }
    dend_112 { pt3dadd( -138.631, -214.72, -19.58, 0.96 ) }
    dend_112 { pt3dadd( -138.661, -215.879, -19.8079, 0.81 ) }
    dend_112 { pt3dadd( -138.864, -216.967, -20.0546, 0.88 ) }
    dend_112 { pt3dadd( -139.193, -218.039, -20.3186, 0.59 ) }
    dend_112 { pt3dadd( -139.476, -218.843, -20.5264, 0.59 ) }
    dend_112 { pt3dadd( -139.806, -219.795, -20.7508, 0.37 ) }
    dend_112 { pt3dadd( -140.005, -220.47, -20.9231, 0.66 ) }
    dend_112 { pt3dadd( -140.274, -221.86, -21.3325, 0.44 ) }
    dend_112 { pt3dadd( -140.296, -222.293, -21.488, 0.52 ) }
    dend_112 { pt3dadd( -140.023, -223.295, -22.0392, 0.88 ) }
    dend_112 { pt3dadd( -139.555, -223.996, -22.6183, 0.37 ) }
    dend_112 { pt3dadd( -138.867, -224.675, -23.3734, 0.37 ) }
    dend_112 { pt3dadd( -138.274, -225.133, -23.9571, 0.37 ) }
    dend_112 { pt3dadd( -137.669, -225.545, -24.4613, 0.37 ) }
    dend_112 { pt3dadd( -137.201, -226.027, -24.8364, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_112 { pt3dadd( -137.007, -226.415, -24.9439, 0.37 ) }
    dend_112 { pt3dadd( -136.648, -227.4, -25.0335, 0.37 ) }
    dend_112 { pt3dadd( -136.418, -228.168, -25.0186, 0.52 ) }
    dend_112 { pt3dadd( -136.083, -229.43, -24.9287, 0.81 ) }
    dend_112 { pt3dadd( -135.693, -231.001, -24.7518, 0.29 ) }
    dend_112 { pt3dadd( -135.349, -232.519, -24.5175, 0.29 ) }
    dend_112 { pt3dadd( -135.258, -232.947, -24.4427, 0.29 ) }
    dend_112 { pt3dadd( -133.782, -242.104, -27.5441, 0.29 ) }
    dend_112 { pt3dadd( -132.726, -251.612, -29.489, 0.29 ) }
    dend_112 { pt3dadd( -130.057, -260.404, -32.893, 0.29 ) }
    dend_112 { pt3dadd( -128.411, -269.763, -35.1549, 0.29 ) }
    dend_112 { pt3dadd( -128.493, -279.297, -37.2478, 0.29 ) }
    dend_112 { pt3dadd( -129.904, -288.904, -38.2076, 0.29 ) }
    dend_112 { pt3dadd( -132.231, -298.281, -39.6564, 0.29 ) }
    // Section: dend_111, id: dend_111, parent: dend_110 (entry count 14/100)
    dend_111 { pt3dclear() }
    dend_111 { pt3dadd( -141.097, -188.577, -12.8014, 0.29 ) }
    dend_111 { pt3dadd( -141.51, -189.809, -12.3243, 0.29 ) }
    dend_111 { pt3dadd( -141.878, -190.94, -11.9068, 0.52 ) }
    dend_111 { pt3dadd( -142.191, -191.939, -11.5609, 0.88 ) }
    dend_111 { pt3dadd( -142.383, -192.6, -11.3414, 0.88 ) }
    dend_111 { pt3dadd( -142.716, -193.879, -10.9399, 0.29 ) }
    dend_111 { pt3dadd( -142.999, -195.164, -10.588, 0.29 ) }
    dend_111 { pt3dadd( -143.077, -195.607, -10.4898, 0.59 ) }
    dend_111 { pt3dadd( -143.121, -196.204, -10.3892, 1.11 ) }
    dend_111 { pt3dadd( -143.062, -197.704, -10.1976, 0.37 ) }
    dend_111 { pt3dadd( -142.939, -198.588, -10.105, 1.03 ) }
    dend_111 { pt3dadd( -142.678, -199.755, -10.0067, 0.37 ) }
    dend_111 { pt3dadd( -142.494, -200.443, -9.96325, 0.37 ) }
    dend_111 { pt3dadd( -142.294, -201.239, -9.95071, 0.66 ) }
    dend_111 { pt3dadd( -142.157, -201.894, -10.0181, 0.66 ) }
    dend_111 { pt3dadd( -141.946, -203.152, -10.3394, 0.22 ) }
    dend_111 { pt3dadd( -141.863, -203.984, -10.6524, 0.88 ) }
    dend_111 { pt3dadd( -141.812, -204.983, -11.1756, 0.37 ) }
    dend_111 { pt3dadd( -141.778, -206.062, -11.9088, 0.59 ) }
    dend_111 { pt3dadd( -141.752, -207.459, -13.1256, 0.37 ) }
    dend_111 { pt3dadd( -141.745, -208.039, -13.812, 0.37 ) }
    dend_111 { pt3dadd( -141.746, -208.254, -14.179, 0.37 ) }
    dend_111 { pt3dadd( -141.729, -208.857, -15.4412, 0.37 ) }
    dend_111 { pt3dadd( -141.697, -209.103, -16.1087, 0.37 ) }
    dend_111 { pt3dadd( -141.616, -209.286, -16.7964, 0.37 ) }
    dend_111 { pt3dadd( -141.436, -209.434, -17.7769, 0.37 ) }
    dend_111 { pt3dadd( -141.312, -209.457, -18.8662, 0.37 ) }
    dend_111 { pt3dadd( -141.457, -218.379, -22.8969, 0.37 ) }
    // Section: dend_107, id: dend_107, parent: dend_105 (entry count 42/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( -196.52, -155.6, 40.0846, 0.29 ) }
    dend_107 { pt3dadd( -196.091, -156.693, 40.1246, 0.29 ) }
    dend_107 { pt3dadd( -195.961, -157.258, 40.1392, 0.29 ) }
    dend_107 { pt3dadd( -195.787, -158.017, 40.1588, 0.74 ) }
    dend_107 { pt3dadd( -195.575, -158.938, 40.1826, 0.15 ) }
    dend_107 { pt3dadd( -195.387, -159.753, 40.2036, 0.29 ) }
    dend_107 { pt3dadd( -195.273, -160.25, 40.2165, 0.29 ) }
    dend_107 { pt3dadd( -195.01, -161.749, 40.248, 0.22 ) }
    // Section: dend_106, id: dend_106, parent: dend_105 (entry count 50/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( -196.52, -155.6, 40.0846, 0.44 ) }
    dend_106 { pt3dadd( -197.415, -155.497, 38.8673, 0.44 ) }
    dend_106 { pt3dadd( -198.122, -155.475, 38.1651, 0.44 ) }
    dend_106 { pt3dadd( -198.983, -155.502, 37.3772, 0.44 ) }
    dend_106 { pt3dadd( -199.694, -155.569, 36.763, 0.88 ) }
    dend_106 { pt3dadd( -200.894, -155.752, 35.7339, 0.44 ) }
    dend_106 { pt3dadd( -201.534, -155.89, 35.1906, 1.03 ) }
    dend_106 { pt3dadd( -202.849, -156.265, 34.2165, 0.29 ) }
    dend_106 { pt3dadd( -203.513, -156.472, 33.7261, 0.37 ) }
    dend_106 { pt3dadd( -204.38, -156.715, 33.0805, 0.59 ) }
    dend_106 { pt3dadd( -204.906, -156.868, 32.6584, 0.59 ) }
    dend_106 { pt3dadd( -205.546, -157.07, 32.0777, 0.59 ) }
    dend_106 { pt3dadd( -206.413, -157.338, 31.2263, 0.22 ) }
    dend_106 { pt3dadd( -207.342, -157.597, 30.2529, 0.22 ) }
    dend_106 { pt3dadd( -208.181, -157.694, 29.3822, 0.59 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 65/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -116.044, -212.1, -5.45077, 0.59 ) }
    dend_77 { pt3dadd( -120.642, -220.464, -3.15538, 0.59 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 67/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -116.044, -212.1, -5.45077, 0.22 ) }
    dend_76 { pt3dadd( -117.645, -221.669, -4.394, 0.59 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 69/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -117.693, -212.101, -8.74793, 0.59 ) }
    dend_74 { pt3dadd( -123.011, -220.221, -7.20861, 0.59 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 71/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -117.693, -212.101, -8.74793, 0.22 ) }
    dend_73 { pt3dadd( -121.333, -221.135, -7.79845, 0.59 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 73/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -165.653, -172.486, 9.10251, 0.59 ) }
    dend_68 { pt3dadd( -172.691, -177.177, 14.3287, 0.59 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 75/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -165.653, -172.486, 9.10251, 0.22 ) }
    dend_67 { pt3dadd( -174.084, -175.923, 13.1635, 0.59 ) }
    // Section: dend_63, id: dend_63, parent: dend_59 (entry count 77/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -152.737, -204.113, -50.188, 0.59 ) }
    dend_63 { pt3dadd( -158.252, -211.493, -53.693, 0.59 ) }
    dend_63 { pt3dadd( -164.685, -218.628, -55.9453, 0.59 ) }
    dend_63 { pt3dadd( -171.497, -225.57, -57.6511, 0.59 ) }
    dend_63 { pt3dadd( -176.961, -233.671, -58.701, 0.59 ) }
    dend_63 { pt3dadd( -181.971, -242.107, -58.8715, 0.59 ) }
    dend_63 { pt3dadd( -186.889, -250.555, -58.0006, 0.59 ) }
    dend_63 { pt3dadd( -191.616, -258.874, -55.8016, 0.59 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 85/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -152.737, -204.113, -50.188, 0.22 ) }
    dend_60 { pt3dadd( -157.749, -211.838, -53.6664, 0.59 ) }
    dend_60 { pt3dadd( -162.678, -220.048, -55.8596, 0.59 ) }
    dend_60 { pt3dadd( -165.907, -229.223, -56.8645, 0.59 ) }
    dend_60 { pt3dadd( -169.081, -238.462, -56.4909, 0.59 ) }
    dend_60 { pt3dadd( -171.738, -247.691, -54.6616, 0.59 ) }
    dend_60 { pt3dadd( -173.67, -257.05, -52.632, 0.59 ) }
    dend_60 { pt3dadd( -175.621, -266.233, -49.8967, 0.59 ) }
    dend_60 { pt3dadd( -179.575, -274.622, -46.6811, 0.59 ) }
    // Section: dend_138, id: dend_138, parent: dend_136 (entry count 94/100)
    dend_138 { pt3dclear() }
    dend_138 { pt3dadd( -232.921, -52.8671, -27.9736, 0.29 ) }
    dend_138 { pt3dadd( -236.504, -43.785, -28.6041, 0.29 ) }
    dend_138 { pt3dadd( -238.302, -34.252, -29.6849, 0.29 ) }
    dend_138 { pt3dadd( -239.145, -24.7253, -31.6385, 0.29 ) }
    dend_138 { pt3dadd( -240.93, -15.534, -34.4577, 0.29 ) }
    dend_138 { pt3dadd( -243.63, -6.91994, -38.2855, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_138 { pt3dadd( -245.483, 1.98541, -41.9107, 0.29 ) }
    dend_138 { pt3dadd( -248.229, 10.282, -46.3884, 0.29 ) }
    dend_138 { pt3dadd( -252.676, 18.2472, -50.0613, 0.29 ) }
    dend_138 { pt3dadd( -256.332, 27.1414, -51.9095, 0.29 ) }
    // Section: dend_137, id: dend_137, parent: dend_136 (entry count 4/100)
    dend_137 { pt3dclear() }
    dend_137 { pt3dadd( -232.921, -52.8671, -27.9736, 0.29 ) }
    dend_137 { pt3dadd( -236.211, -44.1298, -30.952, 0.29 ) }
    dend_137 { pt3dadd( -238.001, -34.7461, -32.9935, 0.29 ) }
    dend_137 { pt3dadd( -238.917, -25.2052, -34.839, 0.29 ) }
    dend_137 { pt3dadd( -240.657, -15.6048, -34.7024, 0.29 ) }
    dend_137 { pt3dadd( -243.308, -6.22711, -34.0244, 0.29 ) }
    dend_137 { pt3dadd( -246.088, 3.13582, -34.2572, 0.29 ) }
    dend_137 { pt3dadd( -247.903, 12.7129, -34.7271, 0.29 ) }
    dend_137 { pt3dadd( -251.158, 21.9281, -35.0001, 0.29 ) }
    dend_137 { pt3dadd( -255.168, 30.7684, -33.6912, 0.29 ) }
    dend_137 { pt3dadd( -261.112, 38.494, -32.3193, 0.29 ) }
    // Section: dend_130, id: dend_130, parent: dend_128 (entry count 15/100)
    dend_130 { pt3dclear() }
    dend_130 { pt3dadd( -328.966, -58.8625, -10.79, 0.29 ) }
    dend_130 { pt3dadd( -338.817, -57.3828, -9.97777, 0.29 ) }
    dend_130 { pt3dadd( -348.296, -54.8996, -8.06467, 0.29 ) }
    // Section: dend_129, id: dend_129, parent: dend_128 (entry count 18/100)
    dend_129 { pt3dclear() }
    dend_129 { pt3dadd( -328.966, -58.8625, -10.79, 0.29 ) }
    dend_129 { pt3dadd( -338.744, -57.691, -9.07108, 0.29 ) }
    dend_129 { pt3dadd( -348.139, -54.6257, -7.71006, 0.29 ) }
    // Section: dend_127, id: dend_127, parent: dend_125 (entry count 21/100)
    dend_127 { pt3dclear() }
    dend_127 { pt3dadd( -320.624, -81.4484, -27.3785, 0.29 ) }
    dend_127 { pt3dadd( -330.432, -83.0989, -28.3502, 0.29 ) }
    dend_127 { pt3dadd( -339.87, -84.5731, -31.2868, 0.29 ) }
    dend_127 { pt3dadd( -349.36, -86.8697, -33.3833, 0.29 ) }
    // Section: dend_126, id: dend_126, parent: dend_125 (entry count 25/100)
    dend_126 { pt3dclear() }
    dend_126 { pt3dadd( -320.624, -81.4484, -27.3785, 0.29 ) }
    dend_126 { pt3dadd( -330.355, -83.1982, -28.8246, 0.29 ) }
    dend_126 { pt3dadd( -340.284, -83.9522, -29.7284, 0.29 ) }
    dend_126 { pt3dadd( -350.005, -86.2366, -29.7282, 0.29 ) }
    // Section: dend_114, id: dend_114, parent: dend_112 (entry count 29/100)
    dend_114 { pt3dclear() }
    dend_114 { pt3dadd( -132.231, -298.281, -39.6564, 0.29 ) }
    dend_114 { pt3dadd( -131.432, -307.809, -41.6247, 0.29 ) }
    dend_114 { pt3dadd( -131.504, -317.426, -43.26, 0.29 ) }
    dend_114 { pt3dadd( -130.907, -327.021, -44.9351, 0.29 ) }
    // Section: dend_113, id: dend_113, parent: dend_112 (entry count 33/100)
    dend_113 { pt3dclear() }
    dend_113 { pt3dadd( -132.231, -298.281, -39.6564, 0.29 ) }
    dend_113 { pt3dadd( -131.519, -307.611, -42.4743, 0.29 ) }
    dend_113 { pt3dadd( -132.658, -317.242, -43.5235, 0.29 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 36/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -191.616, -258.874, -55.8016, 0.59 ) }
    dend_65 { pt3dadd( -198.913, -265.537, -56.0267, 0.59 ) }
    dend_65 { pt3dadd( -206.118, -272.271, -56.6596, 0.59 ) }
    dend_65 { pt3dadd( -212.298, -279.87, -55.6339, 0.59 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 40/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -191.616, -258.874, -55.8016, 0.22 ) }
    dend_64 { pt3dadd( -196.566, -267.284, -56.8458, 0.59 ) }
    dend_64 { pt3dadd( -201.985, -275.08, -59.4382, 0.59 ) }
    dend_64 { pt3dadd( -206.155, -282.917, -63.6799, 0.59 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 44/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -179.575, -274.622, -46.6811, 0.59 ) }
    dend_62 { pt3dadd( -183.575, -283.501, -45.6448, 0.59 ) }
    dend_62 { pt3dadd( -189.566, -291.293, -46.1306, 0.59 ) }
    dend_62 { pt3dadd( -195.499, -299.046, -47.3907, 0.59 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 48/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -179.575, -274.622, -46.6811, 0.22 ) }
    dend_61 { pt3dadd( -182.862, -283.827, -46.4316, 0.59 ) }
    dend_61 { pt3dadd( -185.035, -293.297, -47.4061, 0.59 ) }
    // Section: dend_142, id: dend_142, parent: dend_138 (entry count 51/100)
    dend_142 { pt3dclear() }
    dend_142 { pt3dadd( -256.332, 27.1414, -51.9095, 0.29 ) }
    dend_142 { pt3dadd( -259.077, 36.3051, -53.9422, 0.29 ) }
    dend_142 { pt3dadd( -260.053, 45.7844, -56.0686, 0.29 ) }
    // Section: dend_139, id: dend_139, parent: dend_138 (entry count 54/100)
    dend_139 { pt3dclear() }
    dend_139 { pt3dadd( -256.332, 27.1414, -51.9095, 0.29 ) }
    dend_139 { pt3dadd( -258.76, 35.823, -55.759, 0.29 ) }
    dend_139 { pt3dadd( -261.293, 43.4196, -61.4931, 0.29 ) }
    dend_139 { pt3dadd( -263.758, 51.5361, -66.4553, 0.29 ) }
    dend_139 { pt3dadd( -265.346, 58.5866, -73.1775, 0.29 ) }
    dend_139 { pt3dadd( -267.559, 65.462, -79.9138, 0.29 ) }
    dend_139 { pt3dadd( -267.849, 72.255, -87.0814, 0.29 ) }
    dend_139 { pt3dadd( -269.872, 79.8056, -93.0757, 0.29 ) }
    dend_139 { pt3dadd( -273.312, 86.2554, -99.74, 0.29 ) }
    dend_139 { pt3dadd( -275.677, 92.7384, -106.825, 0.29 ) }
    dend_139 { pt3dadd( -277.85, 98.8746, -114.286, 0.29 ) }
    dend_139 { pt3dadd( -279.671, 105.218, -121.658, 0.29 ) }
    dend_139 { pt3dadd( -281.142, 112.806, -127.764, 0.29 ) }
    dend_139 { pt3dadd( -282.338, 120.053, -134.346, 0.29 ) }
    // Section: dend_146, id: dend_146, parent: dend_142 (entry count 68/100)
    dend_146 { pt3dclear() }
    dend_146 { pt3dadd( -260.053, 45.7844, -56.0686, 0.29 ) }
    dend_146 { pt3dadd( -261.461, 54.6038, -60.093, 0.29 ) }
    dend_146 { pt3dadd( -263.469, 63.5157, -63.6173, 0.29 ) }
    dend_146 { pt3dadd( -265.37, 72.5892, -66.745, 0.29 ) }
    dend_146 { pt3dadd( -268.322, 81.7036, -68.7189, 0.29 ) }
    dend_146 { pt3dadd( -272.352, 90.445, -70.5584, 0.29 ) }
    dend_146 { pt3dadd( -275.917, 99.0127, -73.7321, 0.29 ) }
    dend_146 { pt3dadd( -281.212, 106.38, -77.5876, 0.29 ) }
    dend_146 { pt3dadd( -284.678, 114.96, -80.8358, 0.29 ) }
    dend_146 { pt3dadd( -286.648, 124.049, -83.8724, 0.29 ) }
    dend_146 { pt3dadd( -288.913, 133.244, -86.3062, 0.29 ) }
    // Section: dend_143, id: dend_143, parent: dend_142 (entry count 79/100)
    dend_143 { pt3dclear() }
    dend_143 { pt3dadd( -260.053, 45.7844, -56.0686, 0.29 ) }
    dend_143 { pt3dadd( -262.228, 55.2885, -56.57, 0.29 ) }
    dend_143 { pt3dadd( -262.641, 64.963, -57.7417, 0.29 ) }
    dend_143 { pt3dadd( -261.681, 74.1996, -60.7966, 0.29 ) }
    dend_143 { pt3dadd( -261.343, 83.8062, -62.4719, 0.29 ) }
    dend_143 { pt3dadd( -260.301, 93.3521, -64.2205, 0.29 ) }
    dend_143 { pt3dadd( -260.066, 102.706, -67.0327, 0.29 ) }
    dend_143 { pt3dadd( -259.203, 111.727, -70.7286, 0.29 ) }
    dend_143 { pt3dadd( -257.766, 120.549, -74.7364, 0.29 ) }
    dend_143 { pt3dadd( -257.591, 129.699, -78.1856, 0.29 ) }
    dend_143 { pt3dadd( -258.041, 138.551, -82.3531, 0.29 ) }
    dend_143 { pt3dadd( -256.865, 147.669, -85.6943, 0.29 ) }
    dend_143 { pt3dadd( -255.39, 156.156, -90.3913, 0.29 ) }
    dend_143 { pt3dadd( -252.874, 163.943, -95.8568, 0.29 ) }
    dend_143 { pt3dadd( -251.82, 171.903, -101.535, 0.29 ) }
    dend_143 { pt3dadd( -249.871, 179.978, -106.79, 0.29 ) }
    dend_143 { pt3dadd( -248.771, 187.389, -113.194, 0.29 ) }
    // Section: dend_141, id: dend_141, parent: dend_139 (entry count 96/100)
    dend_141 { pt3dclear() }
    dend_141 { pt3dadd( -282.338, 120.053, -134.346, 0.29 ) }
    dend_141 { pt3dadd( -284.378, 127.238, -140.79, 0.29 ) }
    dend_141 { pt3dadd( -287.595, 133.883, -147.363, 0.29 ) }
    // Section: dend_140, id: dend_140, parent: dend_139 (entry count 99/100)
    dend_140 { pt3dclear() }
    dend_140 { pt3dadd( -282.338, 120.053, -134.346, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_140 { pt3dadd( -284.301, 127.384, -140.639, 0.29 ) }
    dend_140 { pt3dadd( -284.348, 135.958, -145.401, 0.29 ) }
    dend_140 { pt3dadd( -282.597, 144.53, -149.831, 0.29 ) }
    dend_140 { pt3dadd( -280.158, 152.578, -154.922, 0.29 ) }
    dend_140 { pt3dadd( -276.818, 160.329, -159.987, 0.29 ) }
    dend_140 { pt3dadd( -274.716, 168.259, -165.413, 0.29 ) }
    // Section: dend_148, id: dend_148, parent: dend_146 (entry count 6/100)
    dend_148 { pt3dclear() }
    dend_148 { pt3dadd( -288.913, 133.244, -86.3062, 0.29 ) }
    dend_148 { pt3dadd( -291.97, 142.52, -86.6917, 0.29 ) }
    dend_148 { pt3dadd( -294.207, 152.015, -87.0981, 0.29 ) }
    dend_148 { pt3dadd( -294.894, 161.737, -87.4234, 0.29 ) }
    dend_148 { pt3dadd( -296.679, 171.311, -88.0312, 0.29 ) }
    // Section: dend_147, id: dend_147, parent: dend_146 (entry count 11/100)
    dend_147 { pt3dclear() }
    dend_147 { pt3dadd( -288.913, 133.244, -86.3062, 0.29 ) }
    dend_147 { pt3dadd( -291.699, 141.683, -90.4691, 0.29 ) }
    dend_147 { pt3dadd( -293.951, 149.79, -95.5475, 0.29 ) }
    dend_147 { pt3dadd( -298.044, 158.016, -99.0203, 0.29 ) }
    // Section: dend_145, id: dend_145, parent: dend_143 (entry count 15/100)
    dend_145 { pt3dclear() }
    dend_145 { pt3dadd( -248.771, 187.389, -113.194, 0.29 ) }
    dend_145 { pt3dadd( -248.02, 196.11, -117.601, 0.29 ) }
    dend_145 { pt3dadd( -246.935, 205.239, -120.942, 0.29 ) }
    dend_145 { pt3dadd( -244.612, 214.304, -123.797, 0.29 ) }
    // Section: dend_144, id: dend_144, parent: dend_143 (entry count 19/100)
    dend_144 { pt3dclear() }
    dend_144 { pt3dadd( -248.771, 187.389, -113.194, 0.29 ) }
    dend_144 { pt3dadd( -248.083, 196.7, -116.079, 0.29 ) }
    dend_144 { pt3dadd( -248.68, 206.366, -117.248, 0.29 ) }
    dend_144 { pt3dadd( -247.703, 216.066, -117.507, 0.29 ) }
    dend_144 { pt3dadd( -245.923, 225.626, -116.681, 0.29 ) }
    dend_144 { pt3dadd( -243.047, 234.74, -114.593, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_99, dend_50, dend_17, dend_0, dend_163, dend_100, dend_80, dend_51, dend_37, dend_18, dend_6, dend_1, dend_150, dend_101, dend_90, dend_81, dend_79, dend_52, dend_47, dend_38, dend_30, dend_19, dend_12, dend_7, dend_3, dend_2, dend_156, dend_151, dend_117, dend_102, dend_98, dend_91, dend_83, dend_82, dend_78, dend_53, dend_49, dend_48, dend_46, dend_39, dend_34, dend_31, dend_23, dend_20, dend_14, dend_13, dend_9, dend_8, dend_5, dend_4, dend_158, dend_157, dend_153, dend_152, dend_131, dend_118, dend_116, dend_103, dend_95, dend_92, dend_87, dend_84, dend_69, dend_54, dend_43, dend_40, dend_36, dend_35, dend_33, dend_32, dend_29, dend_24, dend_22, dend_21, dend_16, dend_15, dend_11, dend_10, dend_160, dend_159, dend_155, dend_154, dend_149, dend_132, dend_120, dend_119, dend_109, dend_104, dend_97, dend_96, dend_94, dend_93, dend_89, dend_88, dend_86, dend_85, dend_71, dend_70, dend_58, dend_55, dend_45, dend_44, dend_42, dend_41, dend_26, dend_25, dend_162, dend_161, dend_134, dend_133, dend_124, dend_121, dend_115, dend_110, dend_108, dend_105, dend_75, dend_72, dend_66, dend_59, dend_57, dend_56, dend_28, dend_27, dend_136, dend_135, dend_128, dend_125, dend_123, dend_122, dend_112, dend_111, dend_107, dend_106, dend_77, dend_76, dend_74, dend_73, dend_68, dend_67, dend_63, dend_60, dend_138, dend_137, dend_130, dend_129, dend_127, dend_126, dend_114, dend_113, dend_65, dend_64, dend_62, dend_61, dend_142, dend_139, dend_146, dend_143, dend_141, dend_140, dend_148, dend_147, dend_145, dend_144]}
    ModelViewParmSubset_2 = new SectionList()
    dend_99 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_163 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_150 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_156 ModelViewParmSubset_2.append()
    dend_151 ModelViewParmSubset_2.append()
    dend_117 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_158 ModelViewParmSubset_2.append()
    dend_157 ModelViewParmSubset_2.append()
    dend_153 ModelViewParmSubset_2.append()
    dend_152 ModelViewParmSubset_2.append()
    dend_131 ModelViewParmSubset_2.append()
    dend_118 ModelViewParmSubset_2.append()
    dend_116 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_160 ModelViewParmSubset_2.append()
    dend_159 ModelViewParmSubset_2.append()
    dend_155 ModelViewParmSubset_2.append()
    dend_154 ModelViewParmSubset_2.append()
    dend_149 ModelViewParmSubset_2.append()
    dend_132 ModelViewParmSubset_2.append()
    dend_120 ModelViewParmSubset_2.append()
    dend_119 ModelViewParmSubset_2.append()
    dend_109 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_70 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_162 ModelViewParmSubset_2.append()
    dend_161 ModelViewParmSubset_2.append()
    dend_134 ModelViewParmSubset_2.append()
    dend_133 ModelViewParmSubset_2.append()
    dend_124 ModelViewParmSubset_2.append()
    dend_121 ModelViewParmSubset_2.append()
    dend_115 ModelViewParmSubset_2.append()
    dend_110 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_136 ModelViewParmSubset_2.append()
    dend_135 ModelViewParmSubset_2.append()
    dend_128 ModelViewParmSubset_2.append()
    dend_125 ModelViewParmSubset_2.append()
    dend_123 ModelViewParmSubset_2.append()
    dend_122 ModelViewParmSubset_2.append()
    dend_112 ModelViewParmSubset_2.append()
    dend_111 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_106 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_138 ModelViewParmSubset_2.append()
    dend_137 ModelViewParmSubset_2.append()
    dend_130 ModelViewParmSubset_2.append()
    dend_129 ModelViewParmSubset_2.append()
    dend_127 ModelViewParmSubset_2.append()
    dend_126 ModelViewParmSubset_2.append()
    dend_114 ModelViewParmSubset_2.append()
    dend_113 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_142 ModelViewParmSubset_2.append()
    dend_139 ModelViewParmSubset_2.append()
    dend_146 ModelViewParmSubset_2.append()
    dend_143 ModelViewParmSubset_2.append()
    dend_141 ModelViewParmSubset_2.append()
    dend_140 ModelViewParmSubset_2.append()
    dend_148 ModelViewParmSubset_2.append()
    dend_147 ModelViewParmSubset_2.append()
    dend_145 ModelViewParmSubset_2.append()
    dend_144 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_99, dend_50, dend_17, dend_0, dend_163, dend_100, dend_80, dend_51, dend_37, dend_18, dend_6, dend_1, dend_150, dend_101, dend_90, dend_81, dend_79, dend_52, dend_47, dend_38, dend_30, dend_19, dend_12, dend_7, dend_3, dend_2, dend_156, dend_151, dend_117, dend_102, dend_98, dend_91, dend_83, dend_82, dend_78, dend_53, dend_49, dend_48, dend_46, dend_39, dend_34, dend_31, dend_23, dend_20, dend_14, dend_13, dend_9, dend_8, dend_5, dend_4, dend_158, dend_157, dend_153, dend_152, dend_131, dend_118, dend_116, dend_103, dend_95, dend_92, dend_87, dend_84, dend_69, dend_54, dend_43, dend_40, dend_36, dend_35, dend_33, dend_32, dend_29, dend_24, dend_22, dend_21, dend_16, dend_15, dend_11, dend_10, dend_160, dend_159, dend_155, dend_154, dend_149, dend_132, dend_120, dend_119, dend_109, dend_104, dend_97, dend_96, dend_94, dend_93, dend_89, dend_88, dend_86, dend_85, dend_71, dend_70, dend_58, dend_55, dend_45, dend_44, dend_42, dend_41, dend_26, dend_25, dend_162, dend_161, dend_134, dend_133, dend_124, dend_121, dend_115, dend_110, dend_108, dend_105, dend_75, dend_72, dend_66, dend_59, dend_57, dend_56, dend_28, dend_27, dend_136, dend_135, dend_128, dend_125, dend_123, dend_122, dend_112, dend_111, dend_107, dend_106, dend_77, dend_76, dend_74, dend_73, dend_68, dend_67, dend_63, dend_60, dend_138, dend_137, dend_130, dend_129, dend_127, dend_126, dend_114, dend_113, dend_65, dend_64, dend_62, dend_61, dend_142, dend_139, dend_146, dend_143, dend_141, dend_140, dend_148, dend_147, dend_145, dend_144]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_163 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_150 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_156 ModelViewParmSubset_4.append()
    dend_151 ModelViewParmSubset_4.append()
    dend_117 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_98 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_158 ModelViewParmSubset_4.append()
    dend_157 ModelViewParmSubset_4.append()
    dend_153 ModelViewParmSubset_4.append()
    dend_152 ModelViewParmSubset_4.append()
    dend_131 ModelViewParmSubset_4.append()
    dend_118 ModelViewParmSubset_4.append()
    dend_116 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_160 ModelViewParmSubset_4.append()
    dend_159 ModelViewParmSubset_4.append()
    dend_155 ModelViewParmSubset_4.append()
    dend_154 ModelViewParmSubset_4.append()
    dend_149 ModelViewParmSubset_4.append()
    dend_132 ModelViewParmSubset_4.append()
    dend_120 ModelViewParmSubset_4.append()
    dend_119 ModelViewParmSubset_4.append()
    dend_109 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_162 ModelViewParmSubset_4.append()
    dend_161 ModelViewParmSubset_4.append()
    dend_134 ModelViewParmSubset_4.append()
    dend_133 ModelViewParmSubset_4.append()
    dend_124 ModelViewParmSubset_4.append()
    dend_121 ModelViewParmSubset_4.append()
    dend_115 ModelViewParmSubset_4.append()
    dend_110 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_136 ModelViewParmSubset_4.append()
    dend_135 ModelViewParmSubset_4.append()
    dend_128 ModelViewParmSubset_4.append()
    dend_125 ModelViewParmSubset_4.append()
    dend_123 ModelViewParmSubset_4.append()
    dend_122 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_112 ModelViewParmSubset_4.append()
    dend_111 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_138 ModelViewParmSubset_4.append()
    dend_137 ModelViewParmSubset_4.append()
    dend_130 ModelViewParmSubset_4.append()
    dend_129 ModelViewParmSubset_4.append()
    dend_127 ModelViewParmSubset_4.append()
    dend_126 ModelViewParmSubset_4.append()
    dend_114 ModelViewParmSubset_4.append()
    dend_113 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_142 ModelViewParmSubset_4.append()
    dend_139 ModelViewParmSubset_4.append()
    dend_146 ModelViewParmSubset_4.append()
    dend_143 ModelViewParmSubset_4.append()
    dend_141 ModelViewParmSubset_4.append()
    dend_140 ModelViewParmSubset_4.append()
    dend_148 ModelViewParmSubset_4.append()
    dend_147 ModelViewParmSubset_4.append()
    dend_145 ModelViewParmSubset_4.append()
    dend_144 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_75, dend_72]}
    ModelViewParmSubset_5 = new SectionList()
    dend_75 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[dend_99, dend_50, dend_17, dend_0, axon_0, dend_163, dend_100, dend_80, dend_51, dend_37, dend_18, dend_6, dend_1, axon_1, dend_150, dend_101, dend_90, dend_81, dend_79, dend_52, dend_47, dend_38, dend_30, dend_19, dend_12, dend_7, dend_3, dend_2, dend_156, dend_151, dend_117, dend_102, dend_98, dend_91, dend_83, dend_82, dend_78, dend_53, dend_49, dend_48, dend_46, dend_39, dend_34, dend_31, dend_23, dend_20, dend_14, dend_13, dend_9, dend_8, dend_5, dend_4, dend_158, dend_157, dend_153, dend_152, dend_131, dend_118, dend_116, dend_103, dend_95, dend_92, dend_87, dend_84, dend_69, dend_54, dend_43, dend_40, dend_36, dend_35, dend_33, dend_32, dend_29, dend_24, dend_22, dend_21, dend_16, dend_15, dend_11, dend_10, dend_160, dend_159, dend_155, dend_154, dend_149, dend_132, dend_120, dend_119, dend_109, dend_104, dend_97, dend_96, dend_94, dend_93, dend_89, dend_88, dend_86, dend_85, dend_71, dend_70, dend_58, dend_55, dend_45, dend_44, dend_42, dend_41, dend_26, dend_25, dend_162, dend_161, dend_134, dend_133, dend_124, dend_121, dend_115, dend_110, dend_108, dend_105, dend_75, dend_72, dend_66, dend_59, dend_57, dend_56, dend_28, dend_27, dend_136, dend_135, dend_128, dend_125, dend_123, dend_122, dend_112, dend_111, dend_107, dend_106, dend_77, dend_76, dend_74, dend_73, dend_68, dend_67, dend_63, dend_60, dend_138, dend_137, dend_130, dend_129, dend_127, dend_126, dend_114, dend_113, dend_65, dend_64, dend_62, dend_61, dend_142, dend_139, dend_146, dend_143, dend_141, dend_140, dend_148, dend_147, dend_145, dend_144]}
    ModelViewParmSubset_6 = new SectionList()
    dend_99 ModelViewParmSubset_6.append()
    dend_50 ModelViewParmSubset_6.append()
    dend_17 ModelViewParmSubset_6.append()
    dend_0 ModelViewParmSubset_6.append()
    axon_0 ModelViewParmSubset_6.append()
    dend_163 ModelViewParmSubset_6.append()
    dend_100 ModelViewParmSubset_6.append()
    dend_80 ModelViewParmSubset_6.append()
    dend_51 ModelViewParmSubset_6.append()
    dend_37 ModelViewParmSubset_6.append()
    dend_18 ModelViewParmSubset_6.append()
    dend_6 ModelViewParmSubset_6.append()
    dend_1 ModelViewParmSubset_6.append()
    axon_1 ModelViewParmSubset_6.append()
    dend_150 ModelViewParmSubset_6.append()
    dend_101 ModelViewParmSubset_6.append()
    dend_90 ModelViewParmSubset_6.append()
    dend_81 ModelViewParmSubset_6.append()
    dend_79 ModelViewParmSubset_6.append()
    dend_52 ModelViewParmSubset_6.append()
    dend_47 ModelViewParmSubset_6.append()
    dend_38 ModelViewParmSubset_6.append()
    dend_30 ModelViewParmSubset_6.append()
    dend_19 ModelViewParmSubset_6.append()
    dend_12 ModelViewParmSubset_6.append()
    dend_7 ModelViewParmSubset_6.append()
    dend_3 ModelViewParmSubset_6.append()
    dend_2 ModelViewParmSubset_6.append()
    dend_156 ModelViewParmSubset_6.append()
    dend_151 ModelViewParmSubset_6.append()
    dend_117 ModelViewParmSubset_6.append()
    dend_102 ModelViewParmSubset_6.append()
    dend_98 ModelViewParmSubset_6.append()
    dend_91 ModelViewParmSubset_6.append()
    dend_83 ModelViewParmSubset_6.append()
    dend_82 ModelViewParmSubset_6.append()
    dend_78 ModelViewParmSubset_6.append()
    dend_53 ModelViewParmSubset_6.append()
    dend_49 ModelViewParmSubset_6.append()
    dend_48 ModelViewParmSubset_6.append()
    dend_46 ModelViewParmSubset_6.append()
    dend_39 ModelViewParmSubset_6.append()
    dend_34 ModelViewParmSubset_6.append()
    dend_31 ModelViewParmSubset_6.append()
    dend_23 ModelViewParmSubset_6.append()
    dend_20 ModelViewParmSubset_6.append()
    dend_14 ModelViewParmSubset_6.append()
    dend_13 ModelViewParmSubset_6.append()
    dend_9 ModelViewParmSubset_6.append()
    dend_8 ModelViewParmSubset_6.append()
    dend_5 ModelViewParmSubset_6.append()
    dend_4 ModelViewParmSubset_6.append()
    dend_158 ModelViewParmSubset_6.append()
    dend_157 ModelViewParmSubset_6.append()
    dend_153 ModelViewParmSubset_6.append()
    dend_152 ModelViewParmSubset_6.append()
    dend_131 ModelViewParmSubset_6.append()
    dend_118 ModelViewParmSubset_6.append()
    dend_116 ModelViewParmSubset_6.append()
    dend_103 ModelViewParmSubset_6.append()
    dend_95 ModelViewParmSubset_6.append()
    dend_92 ModelViewParmSubset_6.append()
    dend_87 ModelViewParmSubset_6.append()
    dend_84 ModelViewParmSubset_6.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_69 ModelViewParmSubset_6.append()
    dend_54 ModelViewParmSubset_6.append()
    dend_43 ModelViewParmSubset_6.append()
    dend_40 ModelViewParmSubset_6.append()
    dend_36 ModelViewParmSubset_6.append()
    dend_35 ModelViewParmSubset_6.append()
    dend_33 ModelViewParmSubset_6.append()
    dend_32 ModelViewParmSubset_6.append()
    dend_29 ModelViewParmSubset_6.append()
    dend_24 ModelViewParmSubset_6.append()
    dend_22 ModelViewParmSubset_6.append()
    dend_21 ModelViewParmSubset_6.append()
    dend_16 ModelViewParmSubset_6.append()
    dend_15 ModelViewParmSubset_6.append()
    dend_11 ModelViewParmSubset_6.append()
    dend_10 ModelViewParmSubset_6.append()
    dend_160 ModelViewParmSubset_6.append()
    dend_159 ModelViewParmSubset_6.append()
    dend_155 ModelViewParmSubset_6.append()
    dend_154 ModelViewParmSubset_6.append()
    dend_149 ModelViewParmSubset_6.append()
    dend_132 ModelViewParmSubset_6.append()
    dend_120 ModelViewParmSubset_6.append()
    dend_119 ModelViewParmSubset_6.append()
    dend_109 ModelViewParmSubset_6.append()
    dend_104 ModelViewParmSubset_6.append()
    dend_97 ModelViewParmSubset_6.append()
    dend_96 ModelViewParmSubset_6.append()
    dend_94 ModelViewParmSubset_6.append()
    dend_93 ModelViewParmSubset_6.append()
    dend_89 ModelViewParmSubset_6.append()
    dend_88 ModelViewParmSubset_6.append()
    dend_86 ModelViewParmSubset_6.append()
    dend_85 ModelViewParmSubset_6.append()
    dend_71 ModelViewParmSubset_6.append()
    dend_70 ModelViewParmSubset_6.append()
    dend_58 ModelViewParmSubset_6.append()
    dend_55 ModelViewParmSubset_6.append()
    dend_45 ModelViewParmSubset_6.append()
    dend_44 ModelViewParmSubset_6.append()
    dend_42 ModelViewParmSubset_6.append()
    dend_41 ModelViewParmSubset_6.append()
    dend_26 ModelViewParmSubset_6.append()
    dend_25 ModelViewParmSubset_6.append()
    dend_162 ModelViewParmSubset_6.append()
    dend_161 ModelViewParmSubset_6.append()
    dend_134 ModelViewParmSubset_6.append()
    dend_133 ModelViewParmSubset_6.append()
    dend_124 ModelViewParmSubset_6.append()
    dend_121 ModelViewParmSubset_6.append()
    dend_115 ModelViewParmSubset_6.append()
    dend_110 ModelViewParmSubset_6.append()
    dend_108 ModelViewParmSubset_6.append()
    dend_105 ModelViewParmSubset_6.append()
    dend_75 ModelViewParmSubset_6.append()
    dend_72 ModelViewParmSubset_6.append()
    dend_66 ModelViewParmSubset_6.append()
    dend_59 ModelViewParmSubset_6.append()
    dend_57 ModelViewParmSubset_6.append()
    dend_56 ModelViewParmSubset_6.append()
    dend_28 ModelViewParmSubset_6.append()
    dend_27 ModelViewParmSubset_6.append()
    dend_136 ModelViewParmSubset_6.append()
    dend_135 ModelViewParmSubset_6.append()
    dend_128 ModelViewParmSubset_6.append()
    dend_125 ModelViewParmSubset_6.append()
    dend_123 ModelViewParmSubset_6.append()
    dend_122 ModelViewParmSubset_6.append()
    dend_112 ModelViewParmSubset_6.append()
    dend_111 ModelViewParmSubset_6.append()
    dend_107 ModelViewParmSubset_6.append()
    dend_106 ModelViewParmSubset_6.append()
    dend_77 ModelViewParmSubset_6.append()
    dend_76 ModelViewParmSubset_6.append()
    dend_74 ModelViewParmSubset_6.append()
    dend_73 ModelViewParmSubset_6.append()
    dend_68 ModelViewParmSubset_6.append()
    dend_67 ModelViewParmSubset_6.append()
    dend_63 ModelViewParmSubset_6.append()
    dend_60 ModelViewParmSubset_6.append()
    dend_138 ModelViewParmSubset_6.append()
    dend_137 ModelViewParmSubset_6.append()
    dend_130 ModelViewParmSubset_6.append()
    dend_129 ModelViewParmSubset_6.append()
    dend_127 ModelViewParmSubset_6.append()
    dend_126 ModelViewParmSubset_6.append()
    dend_114 ModelViewParmSubset_6.append()
    dend_113 ModelViewParmSubset_6.append()
    dend_65 ModelViewParmSubset_6.append()
    dend_64 ModelViewParmSubset_6.append()
    dend_62 ModelViewParmSubset_6.append()
    dend_61 ModelViewParmSubset_6.append()
    dend_142 ModelViewParmSubset_6.append()
    dend_139 ModelViewParmSubset_6.append()
    dend_146 ModelViewParmSubset_6.append()
    dend_143 ModelViewParmSubset_6.append()
    dend_141 ModelViewParmSubset_6.append()
    dend_140 ModelViewParmSubset_6.append()
    dend_148 ModelViewParmSubset_6.append()
    dend_147 ModelViewParmSubset_6.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_145 ModelViewParmSubset_6.append()
    dend_144 ModelViewParmSubset_6.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_163]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_163 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_51 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_37 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_150]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_150 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_90 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_81 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_79 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_47 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_38 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_19 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_7 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_3 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_156]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_156 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_151]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_151 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_117]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_117 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_102 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_98 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_91 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_83 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_82 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_49 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_46 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_39 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_34 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_31 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_20 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_14 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_13 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_8 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_158]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_158 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_157]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_157 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_153]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_153 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_131]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_131 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_116]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_116 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_103 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_95 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_92 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_87 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_84 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_43 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_40 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_35 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_33 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_32 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_21 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_16 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_10 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_149]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_149 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_120]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_120 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_119]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_119 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_109]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_109 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_104 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_71 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_26 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_25 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_162]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_162 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_161]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_161 OneSecGrp_SectionRef_111.append()

    // Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_124]}
    OneSecGrp_SectionRef_114 = new SectionList()
    dend_124 OneSecGrp_SectionRef_114.append()

    // Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_115]}
    OneSecGrp_SectionRef_116 = new SectionList()
    dend_115 OneSecGrp_SectionRef_116.append()

    // Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_110]}
    OneSecGrp_SectionRef_117 = new SectionList()
    dend_110 OneSecGrp_SectionRef_117.append()

    // Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_119 = new SectionList()
    dend_105 OneSecGrp_SectionRef_119.append()

    // Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_122 = new SectionList()
    dend_66 OneSecGrp_SectionRef_122.append()

    // Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_123 = new SectionList()
    dend_59 OneSecGrp_SectionRef_123.append()

    // Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_136]}
    OneSecGrp_SectionRef_128 = new SectionList()
    dend_136 OneSecGrp_SectionRef_128.append()

    // Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_128]}
    OneSecGrp_SectionRef_130 = new SectionList()
    dend_128 OneSecGrp_SectionRef_130.append()

    // Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_125]}
    OneSecGrp_SectionRef_131 = new SectionList()
    dend_125 OneSecGrp_SectionRef_131.append()

    // Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_112]}
    OneSecGrp_SectionRef_134 = new SectionList()
    dend_112 OneSecGrp_SectionRef_134.append()

    // Group: {name=OneSecGrp_SectionRef_144, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_144 = new SectionList()
    dend_63 OneSecGrp_SectionRef_144.append()

    // Group: {name=OneSecGrp_SectionRef_145, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_145 = new SectionList()
    dend_60 OneSecGrp_SectionRef_145.append()

    // Group: {name=OneSecGrp_SectionRef_146, groups=[], sections=[dend_138]}
    OneSecGrp_SectionRef_146 = new SectionList()
    dend_138 OneSecGrp_SectionRef_146.append()

    // Group: {name=OneSecGrp_SectionRef_147, groups=[], sections=[dend_137]}
    OneSecGrp_SectionRef_147 = new SectionList()
    dend_137 OneSecGrp_SectionRef_147.append()

    // Group: {name=OneSecGrp_SectionRef_159, groups=[], sections=[dend_139]}
    OneSecGrp_SectionRef_159 = new SectionList()
    dend_139 OneSecGrp_SectionRef_159.append()

    // Group: {name=OneSecGrp_SectionRef_160, groups=[], sections=[dend_146]}
    OneSecGrp_SectionRef_160 = new SectionList()
    dend_146 OneSecGrp_SectionRef_160.append()

    // Group: {name=OneSecGrp_SectionRef_161, groups=[], sections=[dend_143]}
    OneSecGrp_SectionRef_161 = new SectionList()
    dend_143 OneSecGrp_SectionRef_161.append()

    // Group: {name=OneSecGrp_SectionRef_163, groups=[], sections=[dend_140]}
    OneSecGrp_SectionRef_163 = new SectionList()
    dend_140 OneSecGrp_SectionRef_163.append()

    // Group: {name=OneSecGrp_SectionRef_167, groups=[], sections=[dend_144]}
    OneSecGrp_SectionRef_167 = new SectionList()
    dend_144 OneSecGrp_SectionRef_167.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_99 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_50 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_18 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_6 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_80 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_100 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_101 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_23 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_29 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_48 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_52 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_24 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_9 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_4 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_5 OneSecGrp_SectionRef_52.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_78 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_53 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_11 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_15 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_69 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_54 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_118]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_118 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_36 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_70 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_58 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_55 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_159]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_159 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_126 = new SectionList()
    dend_28 OneSecGrp_SectionRef_126.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_160]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_160 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_127 = new SectionList()
    dend_27 OneSecGrp_SectionRef_127.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_132]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_132 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_124 = new SectionList()
    dend_57 OneSecGrp_SectionRef_124.append()

    // Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_118 = new SectionList()
    dend_108 OneSecGrp_SectionRef_118.append()

    // Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_125 = new SectionList()
    dend_56 OneSecGrp_SectionRef_125.append()

    // Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_133]}
    OneSecGrp_SectionRef_113 = new SectionList()
    dend_133 OneSecGrp_SectionRef_113.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_134]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_134 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_139, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_139 = new SectionList()
    dend_76 OneSecGrp_SectionRef_139.append()

    // Group: {name=OneSecGrp_SectionRef_141, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_141 = new SectionList()
    dend_73 OneSecGrp_SectionRef_141.append()

    // Group: {name=OneSecGrp_SectionRef_138, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_138 = new SectionList()
    dend_77 OneSecGrp_SectionRef_138.append()

    // Group: {name=OneSecGrp_SectionRef_140, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_140 = new SectionList()
    dend_74 OneSecGrp_SectionRef_140.append()

    // Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_135]}
    OneSecGrp_SectionRef_129 = new SectionList()
    dend_135 OneSecGrp_SectionRef_129.append()

    // Group: {name=OneSecGrp_SectionRef_142, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_142 = new SectionList()
    dend_68 OneSecGrp_SectionRef_142.append()

    // Group: {name=OneSecGrp_SectionRef_143, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_143 = new SectionList()
    dend_67 OneSecGrp_SectionRef_143.append()

    // Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_121]}
    OneSecGrp_SectionRef_115 = new SectionList()
    dend_121 OneSecGrp_SectionRef_115.append()

    // Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_122]}
    OneSecGrp_SectionRef_133 = new SectionList()
    dend_122 OneSecGrp_SectionRef_133.append()

    // Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_123]}
    OneSecGrp_SectionRef_132 = new SectionList()
    dend_123 OneSecGrp_SectionRef_132.append()

    // Group: {name=OneSecGrp_SectionRef_136, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_136 = new SectionList()
    dend_107 OneSecGrp_SectionRef_136.append()

    // Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_111]}
    OneSecGrp_SectionRef_135 = new SectionList()
    dend_111 OneSecGrp_SectionRef_135.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_152]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_152 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_137, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_137 = new SectionList()
    dend_106 OneSecGrp_SectionRef_137.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_22 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_94 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_96 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_93 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_97 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_155]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_155 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_154]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_154 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_157, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_157 = new SectionList()
    dend_61 OneSecGrp_SectionRef_157.append()

    // Group: {name=OneSecGrp_SectionRef_155, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_155 = new SectionList()
    dend_64 OneSecGrp_SectionRef_155.append()

    // Group: {name=OneSecGrp_SectionRef_154, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_154 = new SectionList()
    dend_65 OneSecGrp_SectionRef_154.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_42 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_156, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_156 = new SectionList()
    dend_62 OneSecGrp_SectionRef_156.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_45 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_44 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_41 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_153, groups=[], sections=[dend_113]}
    OneSecGrp_SectionRef_153 = new SectionList()
    dend_113 OneSecGrp_SectionRef_153.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_88 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_149, groups=[], sections=[dend_129]}
    OneSecGrp_SectionRef_149 = new SectionList()
    dend_129 OneSecGrp_SectionRef_149.append()

    // Group: {name=OneSecGrp_SectionRef_148, groups=[], sections=[dend_130]}
    OneSecGrp_SectionRef_148 = new SectionList()
    dend_130 OneSecGrp_SectionRef_148.append()

    // Group: {name=OneSecGrp_SectionRef_150, groups=[], sections=[dend_127]}
    OneSecGrp_SectionRef_150 = new SectionList()
    dend_127 OneSecGrp_SectionRef_150.append()

    // Group: {name=OneSecGrp_SectionRef_151, groups=[], sections=[dend_126]}
    OneSecGrp_SectionRef_151 = new SectionList()
    dend_126 OneSecGrp_SectionRef_151.append()

    // Group: {name=OneSecGrp_SectionRef_158, groups=[], sections=[dend_142]}
    OneSecGrp_SectionRef_158 = new SectionList()
    dend_142 OneSecGrp_SectionRef_158.append()

    // Group: {name=OneSecGrp_SectionRef_152, groups=[], sections=[dend_114]}
    OneSecGrp_SectionRef_152 = new SectionList()
    dend_114 OneSecGrp_SectionRef_152.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_89 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_86 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_85 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_165, groups=[], sections=[dend_147]}
    OneSecGrp_SectionRef_165 = new SectionList()
    dend_147 OneSecGrp_SectionRef_165.append()

    // Group: {name=OneSecGrp_SectionRef_162, groups=[], sections=[dend_141]}
    OneSecGrp_SectionRef_162 = new SectionList()
    dend_141 OneSecGrp_SectionRef_162.append()

    // Group: {name=OneSecGrp_SectionRef_164, groups=[], sections=[dend_148]}
    OneSecGrp_SectionRef_164 = new SectionList()
    dend_148 OneSecGrp_SectionRef_164.append()

    // Group: {name=OneSecGrp_SectionRef_166, groups=[], sections=[dend_145]}
    OneSecGrp_SectionRef_166 = new SectionList()
    dend_145 OneSecGrp_SectionRef_166.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131, dend_132, dend_133, dend_134, dend_135, dend_136, dend_137, dend_138, dend_139, dend_140, dend_141, dend_142, dend_143, dend_144, dend_145, dend_146, dend_147, dend_148, dend_149, dend_150, dend_151, dend_152, dend_153, dend_154, dend_155, dend_156, dend_157, dend_158, dend_159, dend_160, dend_161, dend_162, dend_163], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()
    dend_109 basal.append()
    dend_110 basal.append()
    dend_111 basal.append()
    dend_112 basal.append()
    dend_113 basal.append()
    dend_114 basal.append()
    dend_115 basal.append()
    dend_116 basal.append()
    dend_117 basal.append()
    dend_118 basal.append()
    dend_119 basal.append()
    dend_120 basal.append()
    dend_121 basal.append()
    dend_122 basal.append()
    dend_123 basal.append()
    dend_124 basal.append()
    dend_125 basal.append()
    dend_126 basal.append()
    dend_127 basal.append()
    dend_128 basal.append()
    dend_129 basal.append()
    dend_130 basal.append()
    dend_131 basal.append()
    dend_132 basal.append()
    dend_133 basal.append()
    dend_134 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_135 basal.append()
    dend_136 basal.append()
    dend_137 basal.append()
    dend_138 basal.append()
    dend_139 basal.append()
    dend_140 basal.append()
    dend_141 basal.append()
    dend_142 basal.append()
    dend_143 basal.append()
    dend_144 basal.append()
    dend_145 basal.append()
    dend_146 basal.append()
    dend_147 basal.append()
    dend_148 basal.append()
    dend_149 basal.append()
    dend_150 basal.append()
    dend_151 basal.append()
    dend_152 basal.append()
    dend_153 basal.append()
    dend_154 basal.append()
    dend_155 basal.append()
    dend_156 basal.append()
    dend_157 basal.append()
    dend_158 basal.append()
    dend_159 basal.append()
    dend_160 basal.append()
    dend_161 basal.append()
    dend_162 basal.append()
    dend_163 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_163, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_101, dend_101, dend_101, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_156, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_158, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_157, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_160, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_159, dend_155, dend_155, dend_154, dend_154, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_97, dend_97, dend_97, dend_96, dend_96, dend_94, dend_94, dend_93, dend_93, dend_93, dend_89, dend_89, dend_89, dend_88, dend_88, dend_86, dend_86, dend_86, dend_85, dend_85, dend_85, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_162, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_161, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_121, dend_121, dend_121, dend_121, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_72, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_123, dend_122, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_77, dend_76, dend_74, dend_73, dend_68, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_130, dend_130, dend_129, dend_129, dend_127, dend_127, dend_127, dend_126, dend_126, dend_126, dend_114, dend_114, dend_114, dend_113, dend_113, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_61, dend_61, dend_142, dend_142, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_141, dend_141, dend_140, dend_140, dend_140, dend_140, dend_140, dend_140, dend_148, dend_148, dend_148, dend_148, dend_147, dend_147, dend_147, dend_145, dend_145, dend_145, dend_144, dend_144, dend_144, dend_144, dend_144]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_163 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_156 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_158 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_157 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_87 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_160 all.append()
    dend_160 all.append()
    dend_160 all.append()
    dend_160 all.append()
    dend_160 all.append()
    dend_160 all.append()
    dend_160 all.append()
    dend_160 all.append()
    dend_160 all.append()
    dend_160 all.append()
    dend_160 all.append()
    dend_160 all.append()
    dend_160 all.append()
    dend_160 all.append()
    dend_160 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_160 all.append()
    dend_160 all.append()
    dend_160 all.append()
    dend_160 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_159 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_119 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_162 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_161 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_123 all.append()
    dend_122 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_130 all.append()
    dend_130 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_163 nseg = 25
    dend_51 nseg = 5
    dend_37 nseg = 3
    dend_1 nseg = 3
    dend_150 nseg = 3
    dend_90 nseg = 3
    dend_81 nseg = 7
    dend_79 nseg = 5
    dend_47 nseg = 3
    dend_38 nseg = 5
    dend_19 nseg = 3
    dend_7 nseg = 3
    dend_3 nseg = 3
    dend_2 nseg = 7
    dend_156 nseg = 3
    dend_151 nseg = 11
    dend_117 nseg = 7
    dend_102 nseg = 3
    dend_98 nseg = 7
    dend_91 nseg = 11
    dend_83 nseg = 9
    dend_82 nseg = 3
    dend_49 nseg = 5
    dend_46 nseg = 3
    dend_39 nseg = 7
    dend_34 nseg = 7
    dend_31 nseg = 5
    dend_20 nseg = 13
    dend_14 nseg = 5
    dend_13 nseg = 15
    dend_8 nseg = 5
    dend_158 nseg = 3
    dend_157 nseg = 5
    dend_153 nseg = 5
    dend_131 nseg = 3
    dend_116 nseg = 9
    dend_103 nseg = 3
    dend_95 nseg = 3
    dend_92 nseg = 3
    dend_87 nseg = 3
    dend_84 nseg = 3
    dend_43 nseg = 3
    dend_40 nseg = 3
    dend_35 nseg = 3
    dend_33 nseg = 3
    dend_32 nseg = 3
    dend_21 nseg = 3
    dend_16 nseg = 3
    dend_10 nseg = 3
    dend_149 nseg = 7
    dend_120 nseg = 3
    dend_119 nseg = 3
    dend_109 nseg = 3
    dend_104 nseg = 5
    dend_71 nseg = 3
    dend_26 nseg = 3
    dend_25 nseg = 3
    dend_162 nseg = 3
    dend_161 nseg = 3
    dend_124 nseg = 3
    dend_115 nseg = 5
    dend_110 nseg = 5
    dend_105 nseg = 3
    dend_66 nseg = 3
    dend_59 nseg = 3
    dend_136 nseg = 3
    dend_128 nseg = 3
    dend_125 nseg = 3
    dend_112 nseg = 5
    dend_63 nseg = 3
    dend_60 nseg = 3
    dend_138 nseg = 5
    dend_137 nseg = 5
    dend_139 nseg = 7
    dend_146 nseg = 5
    dend_143 nseg = 7
    dend_140 nseg = 3
    dend_144 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_MC_fa0d941a0b_0_0


