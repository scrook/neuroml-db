// Cell: cACint209_L23_DBC_4114c4c36c_0_0
/*
{
  "id" : "cACint209_L23_DBC_4114c4c36c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.250943, 5.15502, -0.455322, 3.76408", "-0.287266, 4.50998, -0.403251, 6.96761", "-0.32359, 3.86493, -0.351181, 8.3161", "-0.359913, 3.21989, -0.299111, 9.45043", "-0.396236, 2.57484, -0.247041, 9.98693", "-0.43256, 1.9298, -0.194971, 10.312", "-0.468883, 1.28475, -0.142901, 10.5326", "-0.505206, 0.639706, -0.0908309, 10.6917", "-0.54153, -0.00533917, -0.0387608, 10.8509", "-0.577853, -0.650384, 0.0133093, 11.01", "-0.614177, -1.29543, 0.0653794, 11.1688", "-0.6505, -1.94047, 0.11745, 11.0157", "-0.686823, -2.58552, 0.16952, 10.5759", "-0.723147, -3.23057, 0.22159, 10.1362", "-0.75947, -3.87561, 0.27366, 9.69643", "-0.795793, -4.52066, 0.32573, 9.25667", "-0.832117, -5.1657, 0.3778, 8.77464", "-0.86844, -5.81075, 0.42987, 7.84202", "-0.904764, -6.45579, 0.48194, 6.36994", "-0.941087, -7.10084, 0.53401, 4.84705", "-0.97741, -7.74588, 0.58608, 2.62404" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-4.32706, 4.39755, 0.284896, 0.83", "-4.91027, 5.92018, 0.284896, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.73706, -4.35945, 3.5949, 0.28", "-6.81018, -5.10116, 3.99677, 0.28", "-7.81008, -5.75434, 4.32261, 1.38", "-9.46196, -6.86753, 4.83291, 0.83", "-11.6168, -8.31964, 5.49858, 0.28", "-12.6447, -9.0123, 5.8161, 1.38", "-14.286, -10.1184, 6.32314, 0.28", "-15.8935, -11.1901, 6.83911, 0.28", "-17.1389, -11.9868, 7.22617, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-4.50706, -7.33095, 2.1449, 0.55", "-5.08512, -13.0919, 3.22151, 0.55", "-5.29491, -14.9307, 3.56642, 0.83", "-5.58678, -17.1439, 3.96366, 0.55", "-6.41148, -22.5066, 5.11689, 1.11", "-7.76002, -31.071, 6.82019, 0.28", "-8.11757, -33.348, 7.18933, 0.83", "-8.41226, -35.1807, 7.44313, 0.28", "-8.92026, -38.3318, 7.74083, 0.83", "-9.8831, -44.659, 8.06245, 0.28", "-10.5474, -48.7996, 8.04919, 0.55", "-11.174, -53.0514, 7.77678, 0.28", "-11.4093, -54.8753, 7.60235, 0.55", "-11.653, -57.3223, 7.28112, 0.28", "-11.9291, -62.0351, 6.30311, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "4.26294, 2.87505, 2.6749, 0.28", "6.40313, 6.17529, 2.6749, 0.28", "7.39642, 7.94349, 2.72736, 0.83", "8.73196, 10.4695, 2.83306, 0.28", "9.74077, 12.5327, 2.97073, 1.11", "11.2869, 15.8793, 3.24109, 0.28", "12.2876, 18.0977, 3.47637, 0.83", "13.9039, 22.095, 4.01043, 0.28", "14.5803, 23.8714, 4.2751, 0.55", "15.7488, 27.1239, 4.86545, 0.28", "16.2532, 28.549, 5.15668, 0.83", "17.5315, 32.0298, 6.05356, 0.55", "19.0136, 35.8904, 7.19659, 0.28", "19.663, 37.5338, 7.73031, 0.83", "20.9265, 40.769, 8.83557, 0.28", "21.4607, 42.1487, 9.29038, 0.83", "22.45, 44.9095, 10.1936, 0.28", "22.7403, 45.7895, 10.4398, 0.55", "23.0286, 46.6816, 10.6504, 0.28", "23.5102, 48.1483, 10.8749, 0.55", "24.2968, 50.5514, 11.0383, 0.28", "24.6394, 51.6061, 11.0579, 0.55", "25.391, 53.9903, 10.9509, 0.28", "25.6972, 54.9143, 10.915, 0.55", "26.4893, 57.0549, 10.8582, 0.55", "27.3161, 59.0386, 10.8598, 0.28", "28.237, 61.0536, 10.9833, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.78294, -7.12095, -1.9751, 0.55", "3.5947, -7.79396, -2.1781, 0.55", "4.93796, -8.90761, -2.514, 1.11", "8.26622, -11.667, -3.34629, 0.28", "9.02161, -12.2932, -3.53518, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.97741, -7.74588, 0.58608, 0.55", "-1.82074, -22.7222, 0.58608, 0.55", "-2.66408, -37.6984, 0.58608, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-4.91027, 5.92018, 0.284896, 0.28", "-6.53324, 7.63707, 0.800562, 0.28", "-7.67851, 8.84861, 1.16445, 0.55", "-8.58261, 9.805, 1.45171, 0.28", "-9.48556, 10.7602, 1.7386, 0.55", "-11.7904, 13.1984, 2.47089, 0.28", "-12.7145, 14.1759, 2.7645, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-4.91027, 5.92018, 0.284896, 0.28", "-4.57194, 8.4367, 0.105779, 0.28", "-4.18557, 10.6939, -0.12806, 0.83", "-3.27368, 15.3248, -0.590934, 0.28", "-3.06235, 16.2814, -0.709842, 0.55", "-2.44583, 18.7629, -1.02609, 0.28", "-2.02293, 20.3144, -1.24272, 0.83", "-0.828945, 24.1544, -1.86861, 0.28", "-0.187664, 25.9603, -2.21421, 0.55", "1.51298, 30.2505, -3.13944, 0.28", "2.18618, 31.9141, -3.4728, 0.83", "3.02351, 33.9337, -3.82515, 0.28", "3.27602, 34.5745, -3.95217, 0.55", "3.88886, 36.2291, -4.27308, 0.28", "4.36379, 37.4725, -4.48315, 0.83", "5.64022, 40.9778, -4.91355, 0.28", "6.25123, 42.7433, -5.09482, 0.83", "7.39806, 46.1651, -5.37303, 0.28", "8.23361, 48.697, -5.55216, 0.28", "9.09836, 51.2201, -5.68099, 0.83", "9.62516, 52.6773, -5.78495, 0.55", "9.77141, 53.0437, -5.8111, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-17.1389, -11.9868, 7.22617, 0.28", "-18.9344, -14.7876, 7.1197, 0.28", "-19.5641, -15.9286, 7.10765, 0.55", "-20.9118, -18.6015, 7.15006, 0.28", "-21.5151, -19.7978, 7.16905, 0.83", "-23.3789, -23.4943, 7.22771, 0.28", "-24.2116, -25.1458, 7.25391, 0.55", "-25.15, -27.4135, 7.2741, 0.28", "-25.7942, -29.1971, 7.2664, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-17.1389, -11.9868, 7.22617, 0.28", "-16.6827, -14.3981, 6.37181, 0.28", "-16.3995, -16.5327, 5.6251, 0.55", "-16.0908, -20.6274, 4.23079, 0.28", "-16.0547, -21.1062, 4.06775, 0.55", "-15.8982, -23.1824, 3.36077, 0.28", "-15.8178, -24.2486, 2.99769, 0.55", "-15.7925, -25.2651, 2.63886, 0.28", "-15.9499, -26.3031, 2.23965, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-11.9291, -62.0351, 6.30311, 0.28", "-9.97036, -64.4037, 5.71261, 0.28", "-9.2488, -65.5297, 5.51915, 0.55", "-8.68893, -66.6782, 5.41099, 0.28", "-8.29919, -67.6164, 5.34861, 0.55", "-7.80636, -69.0677, 5.29547, 0.28", "-7.60901, -69.7291, 5.2905, 0.83", "-7.11723, -72.0512, 5.3482, 0.28", "-6.48249, -75.7809, 5.54918, 0.55", "-6.26369, -77.2755, 5.65591, 0.55", "-5.93248, -79.6929, 5.69065, 0.28", "-5.79165, -80.8338, 5.67346, 0.55", "-5.60115, -82.5476, 5.5764, 0.28", "-5.40098, -84.5128, 5.40531, 0.55", "-5.07317, -87.9278, 5.16683, 1.11", "-4.65522, -91.9339, 4.9631, 0.28", "-4.5473, -92.9312, 4.90374, 0.55", "-4.21715, -96.192, 4.71485, 0.28", "-4.03278, -98.9557, 4.4414, 1.11", "-3.889, -102.277, 4.06933, 0.28", "-3.85583, -104.998, 3.70952, 0.83", "-3.87227, -108.73, 3.22036, 0.28", "-3.84281, -110.397, 2.90095, 1.11", "-3.64282, -115.892, 1.55089, 0.28", "-3.60995, -116.87, 1.28131, 0.55", "-3.56145, -118.697, 0.750395, 0.28", "-3.50015, -119.785, 0.441788, 0.55", "-3.02335, -124.94, -0.856593, 0.28", "-2.6592, -127.959, -1.51929, 1.11", "-1.98539, -132.182, -2.24981, 0.28", "-1.78703, -133.352, -2.43851, 0.55", "-1.04777, -137.465, -3.03092, 0.28", "-0.740151, -139.172, -3.25079, 0.55", "-0.29842, -141.562, -3.46499, 0.28", "0.00259208, -143.07, -3.57749, 0.83", "0.748961, -146.404, -3.7266, 0.28", "0.995426, -147.581, -3.74949, 0.55", "1.64759, -151.396, -3.66163, 0.28", "1.9029, -152.984, -3.62372, 0.55", "2.57126, -157.354, -3.49404, 0.28", "2.69389, -158.344, -3.45528, 0.55", "2.75226, -158.928, -3.42332, 0.55", "2.93565, -161.414, -3.24745, 0.28" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-11.9291, -62.0351, 6.30311, 0.55", "-13.516, -64.0524, 6.6553, 0.55", "-15.0876, -66.0091, 6.99717, 0.28", "-15.6533, -66.794, 7.13666, 0.55", "-19.011, -71.8143, 8.08373, 0.28", "-19.5452, -72.6319, 8.19141, 0.83", "-20.9786, -74.8727, 8.40558, 0.28", "-21.5791, -75.8893, 8.45175, 0.55", "-25.3936, -83.0182, 8.57915, 0.28", "-25.9526, -84.3941, 8.50145, 0.55", "-26.9872, -88.0621, 8.08142, 0.28", "-27.1859, -88.9938, 7.9472, 0.55", "-27.5054, -91.2421, 7.58849, 0.28", "-27.6522, -92.072, 7.43846, 0.55", "-29.2916, -100.856, 5.76579, 0.28", "-29.5107, -101.812, 5.60347, 0.55", "-30.0041, -103.654, 5.28314, 0.28", "-30.6991, -105.855, 4.84679, 0.55", "-33.8806, -114.54, 3.07421, 0.28", "-34.4258, -115.87, 2.76296, 0.83", "-35.2312, -117.591, 2.31791, 0.83", "-37.3488, -122.081, 0.937884, 0.28", "-37.743, -122.925, 0.635294, 0.55", "-38.4501, -124.584, 0.0177294, 0.28", "-39.3666, -127.572, -0.99671, 0.55", "-39.6089, -128.453, -1.19944, 0.55", "-40.3482, -131.89, -1.60744, 0.28", "-40.4972, -132.88, -1.66544, 0.55", "-40.9213, -136.465, -1.86733, 0.28", "-41.0831, -138.077, -1.9558, 0.83", "-41.3933, -141.954, -2.0434, 0.28", "-41.5904, -144.877, -2.10529, 0.83", "-41.8009, -150.134, -2.21431, 0.28", "-41.8376, -151.158, -2.25, 0.55", "-41.9189, -153.638, -2.3768, 0.28", "-41.9497, -154.281, -2.39291, 0.55", "-42.0543, -155.858, -2.37931, 0.28", "-42.1382, -156.855, -2.31551, 0.55", "-42.2698, -158.2, -2.1988, 0.28", "-42.4461, -160.08, -2.04792, 1.11", "-43.0101, -165.527, -1.69738, 0.28", "-43.1528, -166.8, -1.63638, 0.83", "-43.3865, -168.773, -1.58664, 0.83", "-44.2023, -175.079, -1.54009, 0.28", "-44.3157, -175.81, -1.55957, 0.55", "-44.694, -177.927, -1.67889, 0.28", "-44.9131, -178.871, -1.77767, 0.55", "-45.4828, -181.091, -2.07171, 0.28", "-45.9485, -182.597, -2.32228, 0.83", "-46.7839, -184.842, -2.76563, 0.28", "-46.8984, -185.13, -2.8513, 0.55", "-47.6929, -187.221, -3.61806, 0.28", "-47.9166, -187.841, -3.86977, 0.55", "-48.2791, -188.904, -4.35843, 0.55", "-48.6259, -190.283, -5.19813, 0.83", "-49.1545, -193.479, -7.41998, 0.28", "-49.223, -194.194, -8.50119, 0.55", "-49.193, -194.719, -9.83055, 0.28", "-49.121, -195.034, -10.8643, 0.55", "-48.7513, -195.93, -14.3589, 0.28", "-48.6702, -196.074, -15.0133, 0.83", "-47.4907, -197.832, -23.9478, 0.28", "-47.419, -197.956, -24.6031, 0.55", "-47.1424, -198.54, -27.616, 0.28", "-47.0671, -198.875, -28.9353, 0.55", "-47.0627, -199.315, -30.0602, 0.28", "-47.0832, -199.736, -30.8536, 0.55", "-47.2405, -201.156, -32.0573, 0.28", "-47.3713, -201.899, -32.6661, 0.55", "-47.985, -204.271, -34.3762, 0.28", "-48.4486, -206.066, -35.6189, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "28.237, 61.0536, 10.9833, 0.28", "26.6485, 62.9231, 11.1734, 0.28", "26.0923, 63.6193, 11.2179, 0.55", "23.6743, 66.832, 11.3663, 0.28", "23.0225, 67.7686, 11.3906, 0.55", "19.6125, 72.9866, 11.4633, 0.28", "18.5813, 74.6556, 11.4783, 0.83", "17.3136, 76.9553, 11.4794, 0.28", "16.6936, 78.201, 11.427, 0.55", "16.1228, 79.696, 11.289, 0.28", "15.9861, 80.1919, 11.2125, 0.55", "15.8456, 81.8221, 10.7897, 0.28", "15.8036, 82.9173, 10.4588, 0.55", "15.7253, 85.1568, 9.87968, 0.28", "15.6463, 86.7201, 9.52198, 0.83", "15.6347, 87.8145, 9.33594, 0.83", "15.7523, 89.9298, 9.06654, 0.28", "15.8259, 90.7811, 8.96551, 0.55", "16.2764, 95.0164, 8.57618, 0.28", "16.3485, 95.597, 8.56504, 0.55", "16.8479, 99.3678, 8.64814, 0.28", "17.1015, 100.809, 8.72407, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "28.237, 61.0536, 10.9833, 0.28", "29.1893, 63.9601, 11.23, 0.28", "29.2844, 64.326, 11.2827, 0.55", "30.1558, 68.4302, 12.0214, 0.28", "30.4003, 69.8369, 12.3483, 0.55", "30.8808, 73.1367, 13.2026, 0.28", "31.0327, 74.3059, 13.5265, 0.55", "31.1626, 76.258, 14.1875, 0.28", "31.2367, 78.4138, 14.884, 0.83", "31.225, 81.2498, 15.7942, 0.28", "31.218, 81.7978, 15.9448, 0.55", "31.1899, 83.7874, 16.4392, 0.28", "31.1517, 85.2065, 16.7546, 0.83", "30.9819, 90.3046, 17.7238, 0.28", "30.9271, 91.5001, 17.9149, 0.55", "30.8079, 93.5065, 18.1955, 0.28", "30.7679, 94.1202, 18.2842, 0.55", "30.416, 98.0907, 18.8727, 0.28", "30.3829, 98.4329, 18.9249, 0.55", "30.0351, 101.373, 19.4017, 0.28", "30.002, 102.125, 19.4953, 0.55", "30.0447, 103.678, 19.6594, 0.28", "30.1259, 105.108, 19.7884, 0.83", "30.4254, 107.835, 19.9777, 0.28", "30.4928, 108.32, 20.0061, 0.83", "31.3184, 112.718, 20.1658, 0.28", "31.6738, 114.265, 20.1721, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "9.02161, -12.2932, -3.53518, 0.28", "10.1558, -14.9056, -4.02735, 0.28", "10.7719, -16.3245, -4.29468, 0.55", "11.686, -18.4301, -4.69137, 0.28", "12.8112, -21.0217, -5.17963, 0.83", "14.0375, -23.8461, -5.71175, 0.28", "14.769, -25.5308, -6.02916, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "9.02161, -12.2932, -3.53518, 0.28", "10.9711, -13.1389, -3.52776, 0.28", "12.1237, -13.6388, -3.52337, 0.83", "14.275, -14.5719, -3.51518, 0.28", "15.7484, -15.211, -3.50957, 1.11", "17.4549, -15.9512, -3.50308, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.66408, -37.6984, 0.58608, 0.28", "-3.50741, -52.6747, 0.58608, 0.28", "-4.35075, -67.651, 0.58608, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-12.7145, 14.1759, 2.7645, 0.28", "-15.1607, 14.4736, 3.02766, 0.28", "-16.6243, 14.6672, 3.22722, 0.55", "-17.9193, 14.8223, 3.40704, 0.28", "-19.973, 15.0365, 3.73247, 0.83", "-22.2295, 15.2031, 4.07556, 0.28", "-23.9912, 15.2967, 4.33001, 0.28", "-25.969, 15.3602, 4.64747, 0.83", "-27.8453, 15.3941, 4.95705, 0.28", "-29.4082, 15.4047, 5.20244, 0.83", "-33.4522, 15.3851, 5.81833, 0.28", "-35.9581, 15.3894, 6.12588, 1.11" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-12.7145, 14.1759, 2.7645, 0.28", "-11.8603, 17.21, 3.50904, 0.28", "-11.3571, 18.9974, 3.94764, 0.28", "-11.147, 19.7437, 4.13076, 0.55", "-10.0144, 23.7667, 5.11798, 0.28", "-9.45819, 25.7423, 5.60277, 0.83", "-8.40806, 29.4725, 6.51811, 0.28" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "9.77141, 53.0437, -5.8111, 0.28", "10.4741, 57.3796, -5.74531, 0.28", "10.6307, 58.2929, -5.74396, 0.55", "10.8505, 59.4974, -5.74085, 0.28", "11.0227, 60.4444, -5.73932, 0.55", "11.7347, 64.3598, -5.73295, 0.28", "12.2376, 67.1248, -5.72846, 0.83", "12.7719, 70.3135, -5.61776, 0.28", "12.9885, 71.5551, -5.58295, 0.55", "13.0494, 71.8844, -5.57508, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "9.77141, 53.0437, -5.8111, 0.28", "13.0308, 57.2109, -7.25149, 0.28", "14.5273, 59.1701, -7.91953, 0.55", "16.6054, 61.8555, -8.80397, 0.28", "16.9489, 62.285, -8.97476, 0.55", "19.3379, 65.2765, -10.2364, 0.28", "20.2171, 66.3787, -10.781, 0.55", "21.8169, 68.5366, -11.9153, 0.28", "22.334, 69.2444, -12.3724, 0.55", "24.7434, 72.5913, -14.8303, 0.28", "25.1844, 73.1877, -15.5839, 0.83", "26.488, 74.9237, -18.681, 0.28", "26.9196, 75.4517, -19.834, 0.55", "27.5003, 76.0373, -21.4377, 0.28", "28.1583, 76.5623, -23.1672, 0.55", "32.5913, 79.2181, -34.1965, 0.28", "32.9877, 79.3876, -35.0831, 0.55", "34.2964, 79.7275, -37.5528, 0.28", "35.4448, 79.8427, -39.3142, 0.55", "37.6066, 79.8423, -41.8928, 0.28", "38.5349, 79.7426, -42.6995, 0.55", "39.9667, 79.4798, -43.4211, 0.28", "42.3274, 78.9098, -44.6125, 0.55", "46.0942, 77.7713, -46.4829, 0.28", "47.5066, 77.2606, -47.1935, 0.55", "49.1982, 76.5717, -48.0438, 0.28", "50.6896, 75.9448, -48.8212, 0.55", "53.0543, 74.9815, -50.1853, 0.28", "54.3702, 74.4736, -51.0666, 0.83", "58.539, 73.0427, -54.0516, 0.28", "59.318, 72.8797, -54.5826, 0.55", "61.2047, 72.7134, -55.8094, 0.28", "62.9623, 72.7531, -56.9194, 0.55", "65.3889, 73.0828, -58.4904, 0.28", "66.4461, 73.3489, -59.2837, 0.55", "73.3079, 75.7379, -64.7869, 0.28", "74.4745, 76.154, -65.7874, 0.55", "77.9163, 77.4035, -68.8681, 0.28", "79.575, 78.0218, -70.3617, 0.55", "83.6148, 79.6305, -74.1286, 0.28", "84.7807, 80.1299, -75.3626, 0.55", "86.2098, 80.8871, -77.4966, 0.28", "87.1311, 81.2692, -78.907, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-25.7942, -29.1971, 7.2664, 0.28", "-23.3231, -34.2307, 7.07904, 0.28", "-22.882, -35.1292, 7.04559, 0.55", "-21.0935, -38.7724, 6.90998, 0.28", "-20.5019, -39.9775, 6.86512, 0.83", "-19.0586, -42.9176, 6.75569, 0.28", "-18.3372, -44.387, 6.70099, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-25.7942, -29.1971, 7.2664, 0.28", "-26.5366, -31.2447, 9.05415, 0.28", "-26.6316, -31.5216, 9.27058, 0.83", "-27.1327, -32.9297, 10.3595, 0.28", "-27.2748, -33.3823, 10.6607, 0.83", "-27.6799, -34.6782, 11.4265, 0.28", "-27.7877, -35.0222, 11.6079, 0.55", "-28.2272, -36.3919, 12.1798, 0.28", "-28.7653, -38.0361, 12.7581, 0.83", "-29.5762, -40.3738, 13.457, 0.28", "-30.0183, -41.6351, 13.793, 0.83", "-30.5379, -43.0687, 14.111, 0.28", "-31.0798, -44.4303, 14.3628, 0.83", "-31.5097, -45.4152, 14.481, 0.28", "-31.8194, -46.0953, 14.5226, 0.55", "-32.2883, -46.9921, 14.5719, 0.28", "-32.6617, -47.7051, 14.6108, 0.55", "-34.0375, -50.1826, 14.7404, 0.83", "-34.8794, -51.6854, 14.8289, 0.28", "-35.4352, -52.6153, 14.8673, 0.55", "-36.9133, -54.9573, 14.9276, 0.28", "-37.7493, -56.24, 15.0034, 1.11", "-39.2467, -58.5525, 15.173, 0.28", "-39.7768, -59.4182, 15.2834, 0.55", "-40.7936, -61.2156, 15.5839, 0.28", "-41.2914, -62.1891, 15.76, 0.83", "-42.6819, -65.7028, 16.4822, 0.28", "-43.0681, -67.0633, 16.794, 0.83", "-43.748, -70.7268, 17.702, 0.28", "-43.9552, -72.4772, 18.1661, 1.11", "-44.0121, -73.5215, 18.4603, 1.11", "-44.0397, -76.3938, 19.3454, 0.28", "-43.9528, -78.8032, 20.1251, 0.28", "-43.9273, -79.5961, 20.3721, 0.55", "-43.8857, -81.6814, 20.9867, 0.28", "-43.8921, -82.7045, 21.2503, 0.83", "-43.9771, -85.4411, 21.8679, 0.28", "-44.0285, -86.5382, 22.0861, 0.55", "-44.3085, -92.1442, 23.1378, 0.28", "-44.3792, -93.295, 23.3859, 0.55", "-44.5807, -96.0103, 24.0178, 0.28", "-44.6456, -96.797, 24.2121, 0.55", "-45.0499, -101.113, 25.3034, 0.28", "-45.2346, -103.413, 25.9536, 0.83", "-45.4089, -106.611, 27.0132, 0.28", "-45.4451, -107.613, 27.3237, 0.83", "-45.478, -108.866, 27.7382, 0.28", "-45.4712, -109.664, 27.9406, 0.55", "-45.3973, -111.951, 28.3696, 0.28", "-45.3558, -112.773, 28.5092, 0.55", "-45.1273, -116.433, 29.1044, 0.28", "-45.0609, -117.668, 29.3245, 0.55", "-44.6889, -125.879, 30.9362, 0.28", "-44.6337, -127.403, 31.2564, 0.83", "-44.5235, -132.74, 32.4538, 0.28", "-44.4947, -133.665, 32.6678, 0.55", "-44.2554, -139.005, 33.9659, 0.28", "-44.2293, -139.533, 34.0915, 0.55", "-44.0241, -142.61, 34.8993, 0.28", "-43.9786, -143.191, 35.0571, 0.83", "-43.9109, -144.214, 35.337, 0.83", "-43.8281, -146.106, 35.8655, 0.83", "-43.7265, -148.538, 36.5849, 0.28", "-43.6634, -150.393, 37.0088, 0.28", "-43.6262, -151.052, 37.1244, 0.55", "-43.4851, -153.159, 37.4628, 0.28", "-43.4015, -154.476, 37.6549, 0.55", "-43.0637, -158.844, 38.2397, 0.28", "-42.8475, -161.571, 38.5847, 0.83", "-42.2104, -169.141, 39.4661, 0.28", "-42.1124, -170.096, 39.5688, 0.83", "-41.9224, -171.634, 39.7361, 0.28", "-41.8045, -172.548, 39.8337, 0.83", "-41.3251, -176.338, 40.2263, 0.28", "-41.2701, -176.796, 40.2901, 0.55", "-40.9828, -179.36, 40.6023, 0.28", "-40.822, -180.713, 40.7634, 0.83", "-40.4807, -183.453, 41.1106, 0.28", "-40.3195, -184.818, 41.2823, 0.55", "-39.6316, -190.872, 42.0423, 0.28", "-39.5819, -191.315, 42.1051, 0.55", "-39.4235, -192.79, 42.3397, 0.28", "-39.2305, -194.385, 42.606, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.93565, -161.414, -3.24745, 0.28", "5.10234, -162.177, -4.66146, 0.28", "6.51396, -162.675, -5.5827, 0.83", "8.44748, -163.356, -6.84454, 0.28", "9.61224, -163.767, -7.60469, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "2.93565, -161.414, -3.24745, 0.83", "3.13486, -165.248, -3.31807, 0.83", "3.62929, -169.269, -3.33104, 0.28", "3.77543, -170.063, -3.36201, 0.55", "4.29414, -172.721, -3.48965, 0.28", "4.45834, -173.567, -3.5226, 0.55", "4.86137, -175.746, -3.58403, 0.28", "5.22829, -177.61, -3.57102, 0.83", "6.10315, -181.577, -3.42305, 0.28", "6.32039, -182.714, -3.33737, 0.55", "6.83234, -186.078, -3.02847, 0.28", "6.97499, -187.532, -2.89057, 0.55", "7.04333, -191.042, -2.6077, 0.28", "7.0123, -192.654, -2.45414, 0.83", "7.01229, -195.299, -2.13877, 0.83", "7.09259, -197.408, -1.90175, 0.28", "7.23474, -199.228, -1.6988, 0.55", "7.80332, -205.127, -1.00696, 0.28", "8.01717, -207.016, -0.729494, 0.55", "8.49273, -211.147, -0.00591989, 0.28", "8.82851, -213.918, 0.601457, 0.55", "9.29853, -217.866, 1.6754, 0.28", "9.58164, -220.69, 2.54032, 0.55", "9.98355, -225.102, 4.0071, 0.28", "10.1399, -228.245, 4.96996, 0.83", "10.2075, -233.112, 6.35544, 0.28", "10.2315, -234.841, 6.79085, 0.55", "10.3412, -240.642, 8.05379, 0.28", "10.4281, -243.076, 8.47606, 0.55", "10.6601, -248.944, 9.22476, 0.28", "10.8783, -252.668, 9.55501, 0.83", "11.1438, -256.35, 9.73207, 0.28", "11.202, -257.169, 9.75355, 0.55", "11.4185, -260.536, 9.84787, 0.28", "11.4548, -261.704, 9.88801, 0.83", "11.5399, -264.982, 10.0596, 0.28", "11.4887, -266.583, 10.1514, 0.55", "11.1124, -270.243, 10.3882, 0.28", "10.8833, -271.502, 10.4054, 0.55", "10.2616, -274.314, 10.3663, 0.28", "10.128, -274.912, 10.3568, 0.55", "9.72185, -276.732, 10.3224, 0.28", "9.45764, -278.173, 10.298, 0.55", "7.9767, -287.96, 10.1688, 0.28", "7.49413, -291.98, 10.1401, 0.83", "7.18805, -295.362, 10.1545, 0.28", "7.0983, -297.333, 10.1883, 0.55", "7.2909, -307.343, 10.4143, 0.28", "7.58153, -309.642, 10.4307, 1.11", "8.03704, -311.286, 10.4417, 0.28", "8.50853, -312.538, 10.4124, 0.55", "10.442, -316.536, 10.2526, 0.28", "11.7403, -318.828, 10.1634, 0.28", "15.8504, -324.98, 9.87597, 0.28", "16.8965, -326.515, 9.79793, 0.83", "18.051, -328.231, 9.70222, 0.28", "19.5285, -330.531, 9.57762, 0.83", "22.2735, -335.189, 9.31684, 0.28", "22.6121, -335.882, 9.32559, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-48.4486, -206.066, -35.6189, 0.28", "-47.6215, -213.046, -35.8604, 0.28", "-47.4823, -215.454, -36.1621, 0.55", "-47.4004, -217.57, -36.4545, 0.28", "-47.3744, -218.967, -36.6305, 0.55", "-47.3782, -221.231, -36.8894, 0.28", "-47.3974, -223.257, -37.0738, 0.55", "-47.682, -229.492, -37.5465, 0.28", "-47.7448, -230.559, -37.6002, 0.55", "-47.8519, -232.69, -37.6075, 0.28", "-47.8888, -234.065, -37.5475, 0.55", "-47.873, -236.122, -37.3719, 0.28", "-47.7692, -238.046, -37.1639, 1.94", "-47.3994, -241.857, -36.5571, 0.28", "-47.0644, -244.84, -36.1468, 1.38", "-46.7721, -246.919, -35.8994, 0.28", "-46.5531, -248.263, -35.7588, 0.83", "-46.1274, -250.731, -35.5732, 0.28", "-45.7216, -252.779, -35.4409, 1.94" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-48.4486, -206.066, -35.6189, 0.55", "-51.1997, -206.735, -38.135, 0.55", "-52.7196, -207.098, -39.2507, 0.28", "-53.2081, -207.215, -39.6093, 0.55", "-55.9054, -207.859, -41.5893, 0.28", "-57.4404, -208.226, -42.7161, 0.83", "-60.1655, -208.877, -44.7165, 0.28", "-61.5716, -209.09, -45.4029, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "14.769, -25.5308, -6.02916, 0.28", "18.3692, -23.6931, -6.00914, 0.28", "19.3706, -23.2207, -5.96579, 0.83", "23.3188, -21.6672, -5.5114, 0.28", "24.6005, -21.2072, -5.38355, 0.55", "26.9081, -20.3791, -5.15337, 0.28", "28.373, -19.8534, -5.00725, 0.55", "29.9233, -19.3392, -4.80166, 0.55", "33.6534, -18.2586, -4.20105, 0.28", "35.854, -17.8457, -3.66503, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "14.769, -25.5308, -6.02916, 0.28", "14.3744, -27.7641, -5.46414, 0.28", "14.2331, -28.9065, -5.29007, 0.83", "14.0741, -30.5289, -5.08162, 0.28", "14.057, -30.9101, -5.01882, 0.55", "14.0424, -32.4524, -4.72851, 0.28", "14.1035, -34.4471, -4.37328, 1.11", "14.3746, -36.9861, -3.97468, 0.28", "14.5088, -37.86, -3.84127, 0.55", "14.9903, -40.2602, -3.48359, 0.28", "15.16, -40.9973, -3.38315, 0.55", "15.901, -43.6821, -3.04751, 0.28", "16.3162, -45.0025, -2.87963, 0.83", "16.9539, -46.8229, -2.59126, 0.28", "17.2858, -47.7537, -2.46986, 0.55", "17.8589, -49.3644, -2.32325, 0.28", "18.2499, -50.4245, -2.21467, 0.55", "18.778, -51.7227, -2.00897, 0.28", "19.3247, -53.0136, -1.77824, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "17.4549, -15.9512, -3.50308, 0.28", "19.1914, -15.9866, -1.77695, 0.28", "22.3014, -14.8483, 1.47818, 0.28", "26.4384, -11.9985, 5.96185, 0.28", "27.5696, -10.8617, 7.08219, 0.83", "29.7522, -8.21573, 9.14007, 0.28", "30.8807, -6.84762, 10.2041, 0.83", "32.8219, -3.39503, 12.0645, 0.28", "33.2689, -2.12396, 12.5313, 0.55", "34.1893, 1.84367, 13.1488, 0.28", "34.3777, 2.71694, 13.2406, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "17.4549, -15.9512, -3.50308, 0.55", "17.5069, -16.8298, -3.67314, 0.55", "17.7821, -19.4991, -4.05562, 0.28", "17.9984, -21.2033, -4.16462, 0.28", "18.1292, -22.2338, -4.23054, 0.55", "18.2249, -22.9883, -4.2788, 0.55", "18.5319, -25.4076, -4.43354, 0.83", "19.3633, -31.0606, -4.66473, 0.28", "19.6882, -33.0234, -4.63455, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-35.9581, 15.3894, 6.12588, 0.55", "-39.5323, 15.8054, 6.97653, 0.55", "-44.4345, 16.3482, 8.32454, 0.28", "-48.8768, 16.8885, 9.83267, 0.55", "-52.217, 17.2954, 11.0462, 0.28", "-53.6915, 17.5463, 11.6508, 0.28", "-55.4693, 17.9588, 12.4547, 0.55", "-58.5591, 18.6565, 14.1137, 0.55", "-61.2824, 19.4843, 15.8925, 0.28", "-62.2351, 19.8936, 16.5786, 0.55", "-65.1408, 21.2275, 18.627, 0.28", "-66.8091, 22.2035, 19.9775, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-35.9581, 15.3894, 6.12588, 0.28", "-39.2413, 15.3904, 5.17829, 0.28", "-39.6523, 15.4065, 5.00911, 0.55", "-41.8899, 15.362, 4.26458, 0.28", "-42.8446, 15.2969, 3.9864, 0.55", "-44.5944, 15.1245, 3.63256, 0.28", "-45.9416, 14.8927, 3.43762, 0.55", "-51.5396, 13.6475, 3.00275, 0.28", "-55.1441, 12.7528, 2.85231, 0.55", "-56.3224, 12.4459, 2.83934, 0.28", "-59.4362, 11.5863, 2.91482, 0.28", "-64.2954, 10.2411, 3.00232, 0.83", "-66.1062, 9.702, 3.10414, 0.55", "-68.4207, 8.95435, 3.35905, 0.28", "-70.2721, 8.43357, 3.44759, 0.55", "-72.5097, 7.89127, 3.44684, 0.28", "-75.5721, 7.26286, 3.12511, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-8.40806, 29.4725, 6.51811, 0.28", "-7.27527, 29.969, 7.16237, 0.28", "-6.75162, 30.1985, 7.46019, 0.55", "-4.534, 31.1704, 8.72143, 0.28", "-3.37453, 31.6785, 9.38087, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-8.40806, 29.4725, 6.51811, 0.28", "-8.58155, 30.7045, 7.24284, 0.28", "-8.71798, 31.6733, 7.81272, 0.83" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "13.0494, 71.8844, -5.57508, 0.28", "16.8985, 72.8966, -4.67508, 0.28", "17.7654, 73.0979, -4.43619, 0.55", "19.226, 73.3705, -3.95657, 0.28", "20.6074, 73.5654, -3.45314, 0.55", "21.7665, 73.7102, -3.03578, 0.28", "24.0763, 73.9119, -2.13082, 0.83", "26.5277, 74.0628, -1.03953, 0.28", "28.501, 74.1908, -0.151853, 0.55", "31.7162, 74.4629, 1.33566, 0.28", "34.0291, 74.7492, 2.36749, 0.55", "37.4961, 75.2747, 3.90416, 0.28", "39.8945, 75.7796, 4.90856, 0.83", "42.5325, 76.5196, 5.95432, 0.28", "43.7433, 76.9656, 6.36043, 0.55", "47.0295, 78.4361, 7.32302, 0.28", "48.2632, 79.083, 7.64122, 0.55", "51.7346, 81.1, 8.37301, 0.28", "53.1664, 81.9822, 8.62287, 0.55", "57.5144, 84.8893, 9.32388, 0.28", "58.8522, 85.8683, 9.52439, 0.83", "60.2727, 87.0895, 9.75125, 0.83", "61.3437, 88.149, 9.91836, 0.83", "64.0565, 91.4046, 10.3217, 0.28", "65.6907, 93.8843, 10.546, 0.28", "66.1823, 94.849, 10.6246, 0.55", "68.0097, 98.6599, 10.7608, 0.28", "68.5203, 99.7538, 10.7744, 0.55", "69.7911, 102.363, 10.6497, 0.28", "71.7249, 106.458, 10.3861, 0.28", "72.826, 108.705, 10.1762, 0.83", "75.2506, 113.334, 9.64493, 0.28", "75.9792, 114.635, 9.43836, 0.55", "78.5118, 118.713, 8.70741, 0.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "13.0494, 71.8844, -5.57508, 0.28", "12.0904, 73.7439, -5.93218, 0.28", "11.8127, 74.1453, -6.05037, 0.55", "9.56306, 76.9246, -7.01806, 0.28", "9.3001, 77.2097, -7.13769, 0.55", "8.56522, 77.8928, -7.47299, 0.28", "7.87558, 78.4248, -7.79578, 0.55", "5.40334, 79.6901, -8.97575, 0.28", "5.06203, 79.7957, -9.15848, 0.55", "4.15795, 79.9564, -9.65191, 0.28", "3.14954, 80.1161, -10.2324, 0.83", "1.76162, 80.3114, -11.0322, 0.28", "0.676817, 80.4942, -11.6022, 0.83", "-3.18112, 81.2898, -13.6384, 0.28", "-4.57575, 81.6297, -14.3924, 0.55", "-6.06296, 82.0272, -15.194, 0.28", "-6.94893, 82.3002, -15.7114, 0.55", "-10.8829, 83.5534, -18.079, 0.28", "-11.9816, 83.8979, -18.7466, 0.55", "-13.0441, 84.2211, -19.3881, 0.28", "-13.8268, 84.4343, -19.8706, 0.55", "-16.4603, 85.0609, -21.4838, 0.28", "-17.7577, 85.2994, -22.3291, 0.28", "-18.7688, 85.4082, -23.0172, 0.55", "-19.7491, 85.493, -23.6495, 0.28", "-20.7722, 85.6026, -24.3165, 0.83", "-22.607, 85.8472, -25.5449, 0.28", "-23.7024, 86.0182, -26.2743, 0.83", "-26.8826, 86.67, -28.6041, 0.28", "-27.8118, 86.9216, -29.372, 0.55", "-29.0959, 87.3781, -30.5277, 0.28", "-29.3677, 87.4764, -30.8012, 0.55", "-29.6926, 87.5893, -31.155, 0.28", "-30.3551, 87.7971, -31.9282, 0.55", "-31.9429, 88.1941, -33.853, 0.28", "-33.1591, 88.3468, -35.1412, 0.83", "-36.9401, 88.5032, -38.7822, 0.28", "-38.1056, 88.4865, -39.8183, 0.55", "-39.3637, 88.4216, -40.845, 0.28", "-40.0016, 88.3737, -41.2941, 0.55", "-43.3942, 88.0382, -43.3948, 0.28", "-44.4291, 87.9217, -43.9761, 0.55", "-45.8048, 87.7934, -44.5987, 0.28", "-47.0048, 87.7102, -45.0796, 0.55", "-49.3074, 87.6113, -45.9119, 0.28", "-50.3556, 87.612, -46.3228, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-18.3372, -44.387, 6.70099, 0.55", "-15.8435, -44.1965, 6.26274, 0.55", "-14.1297, -44.0656, 5.96157, 0.28", "-12.8081, -43.9647, 5.72932, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-18.3372, -44.387, 6.70099, 0.28", "-18.8888, -51.7113, 6.27687, 0.28", "-19.1111, -54.4801, 6.29734, 0.83", "-19.2024, -55.8012, 6.18747, 0.83", "-19.3481, -58.8492, 5.82493, 0.28", "-19.3855, -59.925, 5.68811, 0.55", "-19.4059, -61.8038, 5.46707, 0.28", "-19.3573, -63.9048, 5.24289, 0.55", "-18.9798, -71.3676, 4.23036, 0.28", "-18.8354, -72.7606, 4.01423, 0.55", "-18.3114, -76.0808, 3.43179, 0.28", "-17.9887, -77.8212, 3.06496, 0.55", "-17.5977, -79.8004, 2.6036, 0.28", "-17.0511, -82.3632, 2.02419, 1.38", "-16.6562, -84.2242, 1.6733, 0.83", "-16.1697, -87.1054, 1.10007, 0.83", "-15.6733, -91.0655, 0.223662, 0.28", "-15.6299, -92.3951, -0.135241, 0.55", "-15.6995, -93.5524, -0.451342, 0.28", "-15.9797, -95.4798, -1.0212, 0.55", "-16.4385, -97.4779, -1.55971, 0.28", "-16.9734, -99.4619, -2.01974, 1.38", "-17.997, -102.931, -2.65081, 0.55", "-18.6939, -105.565, -3.00261, 0.28", "-19.1575, -107.364, -3.17788, 0.55", "-20.0168, -111.029, -3.44286, 0.28", "-20.4485, -113.106, -3.57104, 1.11", "-20.8544, -115.171, -3.62148, 1.11", "-22.5823, -124.724, -3.65931, 0.28", "-22.9295, -126.751, -3.73888, 0.83", "-24.0303, -133.356, -4.11367, 0.28", "-24.3166, -135.297, -4.27898, 0.55", "-24.9845, -139.994, -4.75217, 0.28", "-25.3836, -143.018, -5.10694, 0.83", "-25.9972, -147.847, -5.81174, 0.28", "-26.1354, -149.018, -6.00528, 0.83", "-26.7176, -154.084, -6.9607, 0.28", "-26.9834, -156.408, -7.44711, 0.83", "-27.0087, -156.781, -7.54805, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "35.854, -17.8457, -3.66503, 0.28", "35.0723, -14.7157, -2.81135, 0.28", "34.8447, -13.8046, -2.56285, 0.83", "33.9719, -10.3102, -1.60976, 0.28", "33.6644, -9.07906, -1.27396, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "35.854, -17.8457, -3.66503, 0.28", "37.674, -16.8316, -2.10315, 0.28", "38.3946, -16.36, -1.49575, 0.83", "39.6987, -15.4222, -0.412519, 0.83", "42.4018, -13.3434, 1.72346, 0.28", "45.3567, -10.9945, 3.99423, 0.28", "46.0721, -10.4381, 4.53615, 0.83", "47.5574, -9.21794, 5.65262, 0.28", "48.8264, -8.16063, 6.56534, 0.83", "50.9451, -6.39116, 8.04088, 0.28", "51.585, -5.96258, 8.3959, 0.55", "52.7023, -5.4666, 8.92368, 0.28", "53.1492, -5.30196, 9.12576, 0.55", "54.8122, -4.85911, 9.83561, 0.28", "55.3517, -4.7572, 10.0487, 0.83", "61.6821, -4.00446, 12.3825, 0.28", "62.7712, -3.87725, 12.7562, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "19.3247, -53.0136, -1.77824, 0.83", "19.253, -53.2181, -1.81904, 0.83", "17.4516, -57.2153, -2.77399, 0.28", "16.017, -60.1696, -3.45127, 0.83", "13.7842, -64.4943, -4.48887, 0.28", "12.8275, -66.3075, -4.90787, 0.83", "10.2236, -71.1807, -6.10302, 0.28", "8.65057, -73.9393, -6.90373, 0.28", "7.77707, -75.314, -7.37803, 0.55", "6.39204, -77.555, -8.33869, 0.28", "5.8183, -78.641, -8.82884, 0.55", "4.8984, -80.684, -9.73106, 0.83", "4.17844, -82.9855, -10.7782, 0.28", "3.99168, -83.7227, -11.1791, 0.55", "3.01688, -88.1122, -13.8754, 0.28", "2.71974, -90.0429, -15.114, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "19.3247, -53.0136, -1.77824, 0.28", "21.4153, -53.5616, -1.31389, 0.28", "23.6135, -53.7626, -0.755701, 0.83", "28.6125, -53.9146, 0.493636, 0.28", "30.9719, -53.8753, 1.01423, 0.83", "35.5004, -53.6824, 1.91163, 0.28", "36.7536, -53.5875, 2.11619, 0.55", "45.6611, -52.3733, 3.28323, 0.28", "47.0473, -52.1238, 3.44315, 0.55", "50.98, -51.2686, 3.77328, 0.28", "52.4599, -50.9324, 3.89047, 0.55", "57.7563, -49.6439, 4.16977, 0.28", "59.4227, -49.2364, 4.18996, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "34.3777, 2.71694, 13.2406, 0.28", "35.033, 4.96134, 12.7422, 0.28", "35.1235, 5.23378, 12.6723, 0.55", "37.3587, 11.7667, 10.9715, 0.28", "37.673, 12.6526, 10.7873, 0.55", "38.3777, 14.5899, 10.4328, 0.28", "38.8299, 15.8332, 10.2053, 0.83", "41.401, 22.7475, 8.97829, 0.28", "41.8305, 23.8604, 8.79076, 0.55", "44.138, 29.5132, 7.96444, 0.28", "44.4044, 30.155, 7.87628, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "34.3777, 2.71694, 13.2406, 0.28", "35.7115, 4.71394, 12.2185, 0.28", "36.2918, 5.58466, 11.7717, 0.55", "37.8056, 7.87937, 10.4958, 0.28", "38.2808, 8.57881, 10.0701, 0.55", "41.4408, 13.1849, 7.14926, 0.28", "42.2092, 14.2846, 6.41325, 0.83", "45.0189, 18.2527, 3.57632, 0.28", "46.0178, 19.6514, 2.5339, 0.83", "47.3628, 21.4715, 1.09916, 0.28", "47.6689, 21.8795, 0.755438, 0.55", "48.4986, 22.9275, -0.305402, 0.28", "49.0023, 23.5225, -0.98796, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "19.6882, -33.0234, -4.63455, 0.83", "19.6592, -33.2444, -4.58022, 0.83", "19.4102, -35.9707, -3.87054, 0.28", "19.3548, -37.2299, -3.61111, 0.55", "19.2746, -39.8212, -2.98284, 0.28", "19.2345, -41.5372, -2.62211, 0.55", "19.1552, -44.6426, -1.99286, 0.28", "19.1652, -46.6405, -1.61715, 0.55", "19.2444, -49.4192, -1.1257, 0.28", "19.3424, -52.1574, -0.662102, 0.83", "19.4891, -55.9284, -0.16073, 0.28", "19.5784, -58.6706, 0.255187, 0.83", "19.6215, -60.7226, 0.645824, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "19.6882, -33.0234, -4.63455, 0.28", "17.9478, -33.2481, -2.50354, 0.28", "17.2826, -33.3248, -2.06113, 0.55", "14.0017, -33.7172, -0.124701, 0.28", "13.319, -33.8279, 0.283324, 0.55", "11.1062, -34.2548, 1.67353, 0.28", "9.89211, -34.4891, 2.43632, 0.83", "4.06505, -35.4294, 5.74246, 0.28", "2.76857, -35.6506, 6.42827, 0.83", "0.484469, -36.1486, 7.48803, 0.28", "-0.787268, -36.4424, 8.11084, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-75.5721, 7.26286, 3.12511, 0.55", "-77.1536, 6.4243, 2.31775, 0.55", "-78.5314, 5.7034, 1.42521, 0.28", "-79.6065, 5.14294, 0.635533, 0.28", "-81.8061, 4.02931, -1.33, 0.55", "-82.7719, 3.56092, -2.2427, 0.28", "-82.9967, 3.45087, -2.48338, 0.55", "-84.4811, 2.72273, -4.46095, 0.28", "-85.0592, 2.43737, -5.39178, 0.55", "-86.235, 1.85363, -7.56339, 0.28", "-86.5157, 1.70415, -8.16775, 0.55", "-87.5359, 1.07761, -10.4216, 0.28", "-87.65, 0.97815, -10.7106, 0.83", "-88.3272, 0.184223, -12.5862, 0.28", "-88.5935, -0.271024, -13.4809, 0.55", "-89.3054, -1.81987, -15.9482, 0.28", "-89.6003, -2.626, -17.0434, 0.83", "-90.1172, -4.25754, -18.9089, 0.28", "-90.2645, -4.77717, -19.4304, 0.55", "-90.9515, -7.423, -21.7546, 0.28", "-91.3859, -9.16835, -23.1782, 0.83", "-91.8639, -11.0875, -24.5665, 0.28", "-92.1413, -12.1318, -25.2794, 0.55", "-92.4616, -13.1928, -25.9673, 0.28", "-92.9765, -14.8264, -27.0229, 0.83" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-75.5721, 7.26286, 3.12511, 0.28", "-76.9528, 8.76309, 2.73864, 0.28", "-77.3989, 9.24461, 2.64127, 0.55", "-78.8541, 10.7994, 2.3816, 0.28", "-79.8641, 11.7225, 2.27768, 0.55", "-86.1958, 17.488, 1.51756, 0.28", "-86.7641, 17.9841, 1.46386, 0.55", "-88.7163, 19.608, 1.35419, 0.28", "-89.2141, 20.0488, 1.31571, 0.55", "-93.9831, 24.4299, 0.920117, 0.28", "-96.5904, 26.9453, 0.594324, 0.55", "-98.9315, 29.2059, 0.243874, 0.28", "-99.7709, 30.0632, 0.0560199, 0.55", "-103.344, 33.9063, -0.921271, 0.28", "-103.689, 34.3467, -1.07634, 0.55", "-104.767, 36.0065, -1.82437, 0.28", "-105.499, 37.2039, -2.46227, 0.55", "-107.344, 40.6536, -4.51484, 0.28", "-107.633, 41.2578, -4.88393, 0.55", "-109.745, 46.0936, -7.84367, 0.28", "-109.986, 46.7614, -8.24544, 0.55", "-110.484, 48.83, -9.47119, 0.28", "-110.681, 50.4107, -10.3842, 0.55", "-110.754, 52.7648, -11.6212, 0.28", "-110.78, 53.5428, -11.9743, 0.28", "-110.78, 53.5428, -11.9743, 0.55", "-111.319, 56.4957, -13.3007, 0.28", "-111.525, 57.5076, -13.765, 0.55", "-112.377, 61.2552, -15.5906, 0.28", "-112.578, 62.0044, -15.9663, 0.55", "-114.953, 70.0518, -20.104, 0.28", "-115.841, 72.7764, -21.5246, 0.55" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-8.71798, 31.6733, 7.81272, 0.28", "-5.70206, 33.2259, 7.84281, 0.28", "-4.26427, 33.9661, 7.85716, 0.55", "-1.91022, 35.178, 7.88064, 0.28", "-0.861701, 35.7178, 7.89111, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-8.71798, 31.6733, 7.81272, 0.28", "-9.76901, 33.6984, 7.95486, 0.28", "-10.2504, 34.7598, 8.04403, 0.55", "-11.2038, 36.9513, 8.2678, 0.28", "-11.4747, 37.624, 8.30757, 0.55", "-12.1209, 39.4354, 8.31271, 0.28", "-12.1926, 39.6661, 8.31472, 0.55", "-12.5891, 41.507, 8.32161, 0.28", "-12.7638, 42.2253, 8.32128, 0.55", "-13.1646, 43.7748, 8.33189, 0.28", "-13.5507, 45.2661, 8.316, 0.83", "-14.1252, 47.5403, 8.42074, 0.28", "-14.3677, 48.5306, 8.49732, 0.55", "-15.6329, 54.3501, 9.08576, 0.28", "-15.8332, 55.38, 9.21607, 0.83", "-16.4317, 58.9729, 9.8084, 0.28", "-16.9015, 62.3995, 10.4441, 0.28", "-17.032, 64.4099, 10.8439, 0.83", "-16.9884, 66.7411, 11.3771, 0.28", "-16.8517, 67.6882, 11.6423, 0.55", "-16.3834, 69.9274, 12.2791, 0.28", "-16.0865, 71.0474, 12.5991, 0.55", "-15.1377, 74.2337, 13.3761, 0.28", "-14.7075, 75.5225, 13.749, 0.55", "-14.0904, 77.2668, 14.2863, 0.28", "-13.6583, 78.4011, 14.6231, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "78.5118, 118.713, 8.70741, 0.28", "80.1561, 118.686, 9.25712, 0.28", "81.1237, 118.634, 9.60764, 0.55", "82.6284, 118.491, 10.0254, 0.55", "84.591, 118.309, 10.5119, 0.28", "85.401, 118.212, 10.7057, 0.55", "87.1791, 117.99, 11.1344, 0.28", "87.9877, 117.89, 11.3043, 0.55", "90.5739, 117.674, 11.8556, 0.28", "91.486, 117.599, 12.0447, 0.55", "93.8329, 117.434, 12.553, 0.28", "94.406, 117.403, 12.6615, 0.55", "97.0806, 117.357, 13.169, 0.28", "98.4405, 117.392, 13.453, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "78.5118, 118.713, 8.70741, 0.28", "81.9616, 115.926, 8.31935, 0.28", "82.8873, 115.179, 8.21523, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-27.0087, -156.781, -7.54805, 0.28", "-27.5217, -159.564, -7.21697, 0.28", "-27.6754, -160.496, -7.11421, 0.55", "-28.2541, -164.604, -6.75072, 0.28", "-28.3749, -165.447, -6.69436, 0.83", "-28.5808, -166.885, -6.6166, 0.83", "-28.7585, -168.076, -6.55747, 0.28", "-28.9206, -169.253, -6.51523, 0.55", "-29.4794, -173.169, -6.34402, 0.28", "-29.6577, -174.188, -6.30525, 0.83", "-30.3842, -177.613, -6.18191, 0.28", "-30.804, -179.184, -6.09165, 0.83", "-31.383, -181.061, -5.95139, 0.28", "-31.8886, -182.569, -5.82197, 0.83", "-33.0481, -185.662, -5.49823, 0.28", "-33.6865, -187.275, -5.30364, 0.83", "-34.609, -189.287, -5.04406, 0.28", "-35.4317, -190.942, -4.82791, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-27.0087, -156.781, -7.54805, 0.28", "-27.1086, -158.126, -7.68265, 0.28", "-27.3651, -161.439, -8.00377, 0.28", "-27.7049, -165.347, -8.36721, 0.28", "-28.1001, -170.064, -8.80573, 0.28", "-28.3456, -173.756, -9.16295, 0.28", "-28.5373, -177.258, -9.50772, 0.28", "-28.7082, -180.577, -9.82302, 0.28", "-28.8182, -182.51, -10.0032, 0.28", "-28.9918, -185.506, -10.2811, 0.28", "-29.255, -194.092, -11.1429, 0.28", "-29.2664, -196.142, -11.3647, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.71974, -90.0429, -15.114, 0.28", "6.36376, -95.0485, -14.2699, 0.28", "6.99658, -95.9177, -14.1233, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "2.71974, -90.0429, -15.114, 0.28", "0.885665, -92.5311, -15.3321, 0.28", "0.108626, -93.5853, -15.4245, 0.55", "-1.26054, -95.4428, -15.5874, 0.28", "-2.77123, -97.4922, -15.7671, 0.83", "-6.57424, -102.651, -16.2194, 0.28", "-7.56432, -103.995, -16.3371, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "19.6215, -60.7226, 0.645824, 0.83", "20.1557, -61.9252, 0.431367, 0.83", "21.8467, -66.4936, -0.17997, 0.28", "22.1489, -67.4982, -0.359043, 0.83", "23.0137, -70.7623, -0.99271, 0.28", "23.2341, -71.9596, -1.07712, 0.55", "23.4544, -73.7132, -1.06159, 0.28", "23.4923, -75.0207, -0.914536, 0.55", "23.1878, -78.0811, -0.132889, 0.28", "22.917, -80.1504, 0.44616, 0.83", "22.057, -85.5752, 1.89902, 0.28", "21.8552, -86.8733, 2.22339, 0.83", "21.7148, -87.904, 2.45919, 0.83", "20.7568, -95.3538, 4.11335, 0.28", "20.6584, -96.172, 4.29618, 0.55", "19.9531, -101.788, 5.2784, 0.28", "19.8538, -102.8, 5.30992, 0.55", "19.5207, -106.92, 5.19804, 0.28", "19.486, -107.592, 5.14894, 0.83", "19.4488, -109.264, 4.93926, 0.83", "19.354, -112.132, 4.5973, 0.83", "18.8733, -122.032, 3.39509, 0.28", "18.7572, -122.969, 3.28928, 0.55", "17.744, -128.51, 2.7021, 0.28", "17.4972, -129.527, 2.6074, 0.55", "14.8169, -137.496, 1.98303, 0.28", "13.8378, -139.73, 1.88318, 0.83", "10.4229, -145.411, 1.95835, 0.28", "9.6539, -146.489, 1.97031, 0.55", "8.39526, -147.957, 1.98316, 0.55", "5.80263, -150.733, 2.02591, 0.28", "4.95187, -151.568, 2.03539, 0.55", "3.83758, -152.831, 2.06507, 0.28", "3.31264, -153.609, 2.0921, 0.55", "1.95683, -155.909, 2.18228, 0.28", "1.4507, -156.844, 2.23767, 0.55", "-0.392536, -160.458, 2.48604, 0.28", "-1.04663, -161.778, 2.59926, 0.55", "-1.48246, -162.671, 2.70577, 0.28", "-2.01347, -164.049, 2.9716, 0.55", "-3.36161, -168.334, 4.09031, 0.28", "-3.64437, -169.32, 4.37928, 0.83", "-4.16027, -171.461, 5.11653, 0.28", "-4.31075, -172.256, 5.4048, 0.55", "-4.99776, -178.066, 7.69578, 0.28", "-4.9882, -178.678, 7.96114, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "19.6215, -60.7226, 0.645824, 0.28", "20.3354, -59.865, 0.118687, 0.28", "20.7123, -59.2527, -0.278822, 0.55", "21.6771, -57.4689, -1.38223, 0.28", "21.9361, -56.6445, -1.77841, 0.55", "22.3207, -55.0808, -2.43364, 0.28", "22.6458, -53.6904, -2.83941, 0.83", "23.5222, -49.4896, -3.77887, 0.28", "23.6843, -48.5794, -3.93596, 0.83", "24.8938, -40.6219, -4.96799, 0.28", "25.1694, -38.3163, -5.23823, 0.83", "25.7365, -31.552, -5.85294, 0.28", "25.8009, -30.6053, -5.91827, 0.55", "25.9586, -28.0028, -5.97742, 0.28", "26.0276, -26.7562, -5.99019, 0.83", "26.1899, -23.109, -5.8413, 0.28", "26.1529, -21.5325, -5.86912, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-92.9765, -14.8264, -27.0229, 0.28", "-95.9563, -13.7428, -27.3111, 0.28", "-96.6109, -13.488, -27.3716, 0.55", "-100.703, -11.9194, -27.5879, 0.28", "-100.912, -11.8417, -27.5918, 0.55", "-102.755, -11.2154, -27.5811, 0.28", "-103.467, -10.9889, -27.5549, 0.83", "-104.367, -10.7283, -27.4461, 0.83", "-106.909, -10.0063, -26.9445, 0.28", "-107.827, -9.72967, -26.5967, 0.55", "-109.606, -9.12643, -25.7038, 0.28", "-110.468, -8.55614, -25.0297, 0.83", "-111.353, -7.77612, -24.193, 0.28", "-111.493, -7.6193, -24.0395, 0.55", "-113.012, -5.49447, -22.1419, 0.28", "-113.58, -4.58905, -21.4113, 0.55", "-116.713, 0.94564, -17.1304, 0.28", "-117.035, 1.54158, -16.6946, 0.83", "-118.167, 3.67532, -15.2324, 0.28", "-118.462, 4.25657, -14.8519, 0.83", "-118.96, 5.34137, -14.2281, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-92.9765, -14.8264, -27.0229, 0.28", "-93.602, -18.6683, -30.9932, 0.28", "-93.7364, -19.4937, -31.8462, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-93.7364, -19.4937, -31.8462, 0.28", "-92.5453, -22.3452, -35.4652, 0.28", "-92.3475, -22.8186, -36.0661, 0.55", "-92.1393, -23.3172, -36.6989, 0.28", "-91.9889, -23.6772, -37.1559, 0.55", "-91.0192, -25.9987, -40.1023, 0.28", "-90.629, -26.9329, -41.2879, 0.83" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-93.7364, -19.4937, -31.8462, 0.28", "-95.6568, -23.4139, -33.1559, 0.28", "-96.6829, -24.7508, -33.8619, 0.55", "-98.6436, -26.8493, -35.1656, 0.28", "-99.6819, -27.7804, -35.8765, 0.55", "-101.986, -29.7312, -37.493, 0.28", "-103.276, -30.8236, -38.3809, 0.55", "-107.524, -34.1829, -40.8849, 0.28", "-108.084, -34.6871, -41.1925, 0.55", "-110.202, -36.7606, -42.2575, 0.28", "-112.185, -38.9612, -43.1002, 0.83", "-114.214, -41.5184, -43.7514, 0.28", "-114.799, -42.4459, -43.8847, 0.55", "-118.062, -48.7001, -44.1785, 0.28", "-118.718, -50.1804, -44.1653, 0.83", "-120.012, -53.6255, -43.9855, 0.28", "-120.545, -55.4184, -43.8794, 0.55", "-121.835, -60.8736, -43.5617, 0.28", "-122.048, -62.2269, -43.5458, 0.83", "-122.537, -68.3476, -43.5851, 0.28", "-122.608, -69.6626, -43.657, 0.83", "-122.717, -73.9752, -44.0819, 0.28", "-122.717, -75.3657, -44.2493, 0.83", "-122.539, -82.5995, -45.2913, 0.28", "-122.497, -84.4301, -45.6481, 0.55", "-122.48, -89.5732, -47.0943, 0.28", "-122.548, -91.0856, -47.5545, 0.83" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_29", "dend_22", "dend_19", "dend_0", "dend_46", "dend_39", "dend_31", "dend_30", "dend_26", "dend_23", "dend_21", "dend_20", "dend_10", "dend_1", "dend_52", "dend_47", "dend_41", "dend_40", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_16", "dend_11", "dend_7", "dend_2", "dend_60", "dend_53", "dend_51", "dend_48", "dend_43", "dend_42", "dend_37", "dend_34", "dend_18", "dend_17", "dend_13", "dend_12", "dend_9", "dend_8", "dend_4", "dend_3", "dend_55", "dend_54", "dend_50", "dend_49", "dend_45", "dend_44", "dend_36", "dend_35", "dend_15", "dend_14", "dend_6", "dend_5", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_29", "dend_22", "dend_19", "dend_0", "dend_46", "dend_39", "dend_31", "dend_30", "dend_26", "dend_23", "dend_21", "dend_20", "dend_10", "dend_1", "dend_52", "dend_47", "dend_41", "dend_40", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_16", "dend_11", "dend_7", "dend_2", "dend_60", "dend_53", "dend_51", "dend_48", "dend_43", "dend_42", "dend_37", "dend_34", "dend_18", "dend_17", "dend_13", "dend_12", "dend_9", "dend_8", "dend_4", "dend_3", "dend_55", "dend_54", "dend_50", "dend_49", "dend_45", "dend_44", "dend_36", "dend_35", "dend_15", "dend_14", "dend_6", "dend_5", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_29", "dend_22", "dend_19", "dend_0", "axon_0", "dend_46", "dend_39", "dend_31", "dend_30", "dend_26", "dend_23", "dend_21", "dend_20", "dend_10", "dend_1", "axon_1", "dend_52", "dend_47", "dend_41", "dend_40", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_16", "dend_11", "dend_7", "dend_2", "dend_60", "dend_53", "dend_51", "dend_48", "dend_43", "dend_42", "dend_37", "dend_34", "dend_18", "dend_17", "dend_13", "dend_12", "dend_9", "dend_8", "dend_4", "dend_3", "dend_55", "dend_54", "dend_50", "dend_49", "dend_45", "dend_44", "dend_36", "dend_35", "dend_15", "dend_14", "dend_6", "dend_5", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_DBC_4114c4c36c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_38
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_52
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_29, dend_22, dend_19, dend_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_29, dend_22, dend_19, dend_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_38, dend_29, dend_22, dend_19, dend_0, axon_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, axon_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.44999992506011677)
    connect dend_29(0), soma_0(0.44999992506011677)
    connect dend_22(0), soma_0(0.44999992506011677)
    connect dend_19(0), soma_0(0.44999992506011677)
    connect dend_0(0), soma_0(0.44999992506011677)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.250943, 5.15502, -0.455322, 3.76408 ) }
    soma_0 { pt3dadd( -0.287266, 4.50998, -0.403251, 6.96761 ) }
    soma_0 { pt3dadd( -0.32359, 3.86493, -0.351181, 8.3161 ) }
    soma_0 { pt3dadd( -0.359913, 3.21989, -0.299111, 9.45043 ) }
    soma_0 { pt3dadd( -0.396236, 2.57484, -0.247041, 9.98693 ) }
    soma_0 { pt3dadd( -0.43256, 1.9298, -0.194971, 10.312 ) }
    soma_0 { pt3dadd( -0.468883, 1.28475, -0.142901, 10.5326 ) }
    soma_0 { pt3dadd( -0.505206, 0.639706, -0.0908309, 10.6917 ) }
    soma_0 { pt3dadd( -0.54153, -0.00533917, -0.0387608, 10.8509 ) }
    soma_0 { pt3dadd( -0.577853, -0.650384, 0.0133093, 11.01 ) }
    soma_0 { pt3dadd( -0.614177, -1.29543, 0.0653794, 11.1688 ) }
    soma_0 { pt3dadd( -0.6505, -1.94047, 0.11745, 11.0157 ) }
    soma_0 { pt3dadd( -0.686823, -2.58552, 0.16952, 10.5759 ) }
    soma_0 { pt3dadd( -0.723147, -3.23057, 0.22159, 10.1362 ) }
    soma_0 { pt3dadd( -0.75947, -3.87561, 0.27366, 9.69643 ) }
    soma_0 { pt3dadd( -0.795793, -4.52066, 0.32573, 9.25667 ) }
    soma_0 { pt3dadd( -0.832117, -5.1657, 0.3778, 8.77464 ) }
    soma_0 { pt3dadd( -0.86844, -5.81075, 0.42987, 7.84202 ) }
    soma_0 { pt3dadd( -0.904764, -6.45579, 0.48194, 6.36994 ) }
    soma_0 { pt3dadd( -0.941087, -7.10084, 0.53401, 4.84705 ) }
    soma_0 { pt3dadd( -0.97741, -7.74588, 0.58608, 2.62404 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -4.32706, 4.39755, 0.284896, 0.83 ) }
    dend_38 { pt3dadd( -4.91027, 5.92018, 0.284896, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 23/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.73706, -4.35945, 3.5949, 0.28 ) }
    dend_29 { pt3dadd( -6.81018, -5.10116, 3.99677, 0.28 ) }
    dend_29 { pt3dadd( -7.81008, -5.75434, 4.32261, 1.38 ) }
    dend_29 { pt3dadd( -9.46196, -6.86753, 4.83291, 0.83 ) }
    dend_29 { pt3dadd( -11.6168, -8.31964, 5.49858, 0.28 ) }
    dend_29 { pt3dadd( -12.6447, -9.0123, 5.8161, 1.38 ) }
    dend_29 { pt3dadd( -14.286, -10.1184, 6.32314, 0.28 ) }
    dend_29 { pt3dadd( -15.8935, -11.1901, 6.83911, 0.28 ) }
    dend_29 { pt3dadd( -17.1389, -11.9868, 7.22617, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 32/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -4.50706, -7.33095, 2.1449, 0.55 ) }
    dend_22 { pt3dadd( -5.08512, -13.0919, 3.22151, 0.55 ) }
    dend_22 { pt3dadd( -5.29491, -14.9307, 3.56642, 0.83 ) }
    dend_22 { pt3dadd( -5.58678, -17.1439, 3.96366, 0.55 ) }
    dend_22 { pt3dadd( -6.41148, -22.5066, 5.11689, 1.11 ) }
    dend_22 { pt3dadd( -7.76002, -31.071, 6.82019, 0.28 ) }
    dend_22 { pt3dadd( -8.11757, -33.348, 7.18933, 0.83 ) }
    dend_22 { pt3dadd( -8.41226, -35.1807, 7.44313, 0.28 ) }
    dend_22 { pt3dadd( -8.92026, -38.3318, 7.74083, 0.83 ) }
    dend_22 { pt3dadd( -9.8831, -44.659, 8.06245, 0.28 ) }
    dend_22 { pt3dadd( -10.5474, -48.7996, 8.04919, 0.55 ) }
    dend_22 { pt3dadd( -11.174, -53.0514, 7.77678, 0.28 ) }
    dend_22 { pt3dadd( -11.4093, -54.8753, 7.60235, 0.55 ) }
    dend_22 { pt3dadd( -11.653, -57.3223, 7.28112, 0.28 ) }
    dend_22 { pt3dadd( -11.9291, -62.0351, 6.30311, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 47/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 4.26294, 2.87505, 2.6749, 0.28 ) }
    dend_19 { pt3dadd( 6.40313, 6.17529, 2.6749, 0.28 ) }
    dend_19 { pt3dadd( 7.39642, 7.94349, 2.72736, 0.83 ) }
    dend_19 { pt3dadd( 8.73196, 10.4695, 2.83306, 0.28 ) }
    dend_19 { pt3dadd( 9.74077, 12.5327, 2.97073, 1.11 ) }
    dend_19 { pt3dadd( 11.2869, 15.8793, 3.24109, 0.28 ) }
    dend_19 { pt3dadd( 12.2876, 18.0977, 3.47637, 0.83 ) }
    dend_19 { pt3dadd( 13.9039, 22.095, 4.01043, 0.28 ) }
    dend_19 { pt3dadd( 14.5803, 23.8714, 4.2751, 0.55 ) }
    dend_19 { pt3dadd( 15.7488, 27.1239, 4.86545, 0.28 ) }
    dend_19 { pt3dadd( 16.2532, 28.549, 5.15668, 0.83 ) }
    dend_19 { pt3dadd( 17.5315, 32.0298, 6.05356, 0.55 ) }
    dend_19 { pt3dadd( 19.0136, 35.8904, 7.19659, 0.28 ) }
    dend_19 { pt3dadd( 19.663, 37.5338, 7.73031, 0.83 ) }
    dend_19 { pt3dadd( 20.9265, 40.769, 8.83557, 0.28 ) }
    dend_19 { pt3dadd( 21.4607, 42.1487, 9.29038, 0.83 ) }
    dend_19 { pt3dadd( 22.45, 44.9095, 10.1936, 0.28 ) }
    dend_19 { pt3dadd( 22.7403, 45.7895, 10.4398, 0.55 ) }
    dend_19 { pt3dadd( 23.0286, 46.6816, 10.6504, 0.28 ) }
    dend_19 { pt3dadd( 23.5102, 48.1483, 10.8749, 0.55 ) }
    dend_19 { pt3dadd( 24.2968, 50.5514, 11.0383, 0.28 ) }
    dend_19 { pt3dadd( 24.6394, 51.6061, 11.0579, 0.55 ) }
    dend_19 { pt3dadd( 25.391, 53.9903, 10.9509, 0.28 ) }
    dend_19 { pt3dadd( 25.6972, 54.9143, 10.915, 0.55 ) }
    dend_19 { pt3dadd( 26.4893, 57.0549, 10.8582, 0.55 ) }
    dend_19 { pt3dadd( 27.3161, 59.0386, 10.8598, 0.28 ) }
    dend_19 { pt3dadd( 28.237, 61.0536, 10.9833, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 74/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.78294, -7.12095, -1.9751, 0.55 ) }
    dend_0 { pt3dadd( 3.5947, -7.79396, -2.1781, 0.55 ) }
    dend_0 { pt3dadd( 4.93796, -8.90761, -2.514, 1.11 ) }
    dend_0 { pt3dadd( 8.26622, -11.667, -3.34629, 0.28 ) }
    dend_0 { pt3dadd( 9.02161, -12.2932, -3.53518, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 79/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.97741, -7.74588, 0.58608, 0.55 ) }
    axon_0 { pt3dadd( -1.82074, -22.7222, 0.58608, 0.55 ) }
    axon_0 { pt3dadd( -2.66408, -37.6984, 0.58608, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_38 (entry count 82/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -4.91027, 5.92018, 0.284896, 0.28 ) }
    dend_46 { pt3dadd( -6.53324, 7.63707, 0.800562, 0.28 ) }
    dend_46 { pt3dadd( -7.67851, 8.84861, 1.16445, 0.55 ) }
    dend_46 { pt3dadd( -8.58261, 9.805, 1.45171, 0.28 ) }
    dend_46 { pt3dadd( -9.48556, 10.7602, 1.7386, 0.55 ) }
    dend_46 { pt3dadd( -11.7904, 13.1984, 2.47089, 0.28 ) }
    dend_46 { pt3dadd( -12.7145, 14.1759, 2.7645, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 89/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -4.91027, 5.92018, 0.284896, 0.28 ) }
    dend_39 { pt3dadd( -4.57194, 8.4367, 0.105779, 0.28 ) }
    dend_39 { pt3dadd( -4.18557, 10.6939, -0.12806, 0.83 ) }
    dend_39 { pt3dadd( -3.27368, 15.3248, -0.590934, 0.28 ) }
    dend_39 { pt3dadd( -3.06235, 16.2814, -0.709842, 0.55 ) }
    dend_39 { pt3dadd( -2.44583, 18.7629, -1.02609, 0.28 ) }
    dend_39 { pt3dadd( -2.02293, 20.3144, -1.24272, 0.83 ) }
    dend_39 { pt3dadd( -0.828945, 24.1544, -1.86861, 0.28 ) }
    dend_39 { pt3dadd( -0.187664, 25.9603, -2.21421, 0.55 ) }
    dend_39 { pt3dadd( 1.51298, 30.2505, -3.13944, 0.28 ) }
    dend_39 { pt3dadd( 2.18618, 31.9141, -3.4728, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( 3.02351, 33.9337, -3.82515, 0.28 ) }
    dend_39 { pt3dadd( 3.27602, 34.5745, -3.95217, 0.55 ) }
    dend_39 { pt3dadd( 3.88886, 36.2291, -4.27308, 0.28 ) }
    dend_39 { pt3dadd( 4.36379, 37.4725, -4.48315, 0.83 ) }
    dend_39 { pt3dadd( 5.64022, 40.9778, -4.91355, 0.28 ) }
    dend_39 { pt3dadd( 6.25123, 42.7433, -5.09482, 0.83 ) }
    dend_39 { pt3dadd( 7.39806, 46.1651, -5.37303, 0.28 ) }
    dend_39 { pt3dadd( 8.23361, 48.697, -5.55216, 0.28 ) }
    dend_39 { pt3dadd( 9.09836, 51.2201, -5.68099, 0.83 ) }
    dend_39 { pt3dadd( 9.62516, 52.6773, -5.78495, 0.55 ) }
    dend_39 { pt3dadd( 9.77141, 53.0437, -5.8111, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 11/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -17.1389, -11.9868, 7.22617, 0.28 ) }
    dend_31 { pt3dadd( -18.9344, -14.7876, 7.1197, 0.28 ) }
    dend_31 { pt3dadd( -19.5641, -15.9286, 7.10765, 0.55 ) }
    dend_31 { pt3dadd( -20.9118, -18.6015, 7.15006, 0.28 ) }
    dend_31 { pt3dadd( -21.5151, -19.7978, 7.16905, 0.83 ) }
    dend_31 { pt3dadd( -23.3789, -23.4943, 7.22771, 0.28 ) }
    dend_31 { pt3dadd( -24.2116, -25.1458, 7.25391, 0.55 ) }
    dend_31 { pt3dadd( -25.15, -27.4135, 7.2741, 0.28 ) }
    dend_31 { pt3dadd( -25.7942, -29.1971, 7.2664, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 20/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -17.1389, -11.9868, 7.22617, 0.28 ) }
    dend_30 { pt3dadd( -16.6827, -14.3981, 6.37181, 0.28 ) }
    dend_30 { pt3dadd( -16.3995, -16.5327, 5.6251, 0.55 ) }
    dend_30 { pt3dadd( -16.0908, -20.6274, 4.23079, 0.28 ) }
    dend_30 { pt3dadd( -16.0547, -21.1062, 4.06775, 0.55 ) }
    dend_30 { pt3dadd( -15.8982, -23.1824, 3.36077, 0.28 ) }
    dend_30 { pt3dadd( -15.8178, -24.2486, 2.99769, 0.55 ) }
    dend_30 { pt3dadd( -15.7925, -25.2651, 2.63886, 0.28 ) }
    dend_30 { pt3dadd( -15.9499, -26.3031, 2.23965, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 29/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -11.9291, -62.0351, 6.30311, 0.28 ) }
    dend_26 { pt3dadd( -9.97036, -64.4037, 5.71261, 0.28 ) }
    dend_26 { pt3dadd( -9.2488, -65.5297, 5.51915, 0.55 ) }
    dend_26 { pt3dadd( -8.68893, -66.6782, 5.41099, 0.28 ) }
    dend_26 { pt3dadd( -8.29919, -67.6164, 5.34861, 0.55 ) }
    dend_26 { pt3dadd( -7.80636, -69.0677, 5.29547, 0.28 ) }
    dend_26 { pt3dadd( -7.60901, -69.7291, 5.2905, 0.83 ) }
    dend_26 { pt3dadd( -7.11723, -72.0512, 5.3482, 0.28 ) }
    dend_26 { pt3dadd( -6.48249, -75.7809, 5.54918, 0.55 ) }
    dend_26 { pt3dadd( -6.26369, -77.2755, 5.65591, 0.55 ) }
    dend_26 { pt3dadd( -5.93248, -79.6929, 5.69065, 0.28 ) }
    dend_26 { pt3dadd( -5.79165, -80.8338, 5.67346, 0.55 ) }
    dend_26 { pt3dadd( -5.60115, -82.5476, 5.5764, 0.28 ) }
    dend_26 { pt3dadd( -5.40098, -84.5128, 5.40531, 0.55 ) }
    dend_26 { pt3dadd( -5.07317, -87.9278, 5.16683, 1.11 ) }
    dend_26 { pt3dadd( -4.65522, -91.9339, 4.9631, 0.28 ) }
    dend_26 { pt3dadd( -4.5473, -92.9312, 4.90374, 0.55 ) }
    dend_26 { pt3dadd( -4.21715, -96.192, 4.71485, 0.28 ) }
    dend_26 { pt3dadd( -4.03278, -98.9557, 4.4414, 1.11 ) }
    dend_26 { pt3dadd( -3.889, -102.277, 4.06933, 0.28 ) }
    dend_26 { pt3dadd( -3.85583, -104.998, 3.70952, 0.83 ) }
    dend_26 { pt3dadd( -3.87227, -108.73, 3.22036, 0.28 ) }
    dend_26 { pt3dadd( -3.84281, -110.397, 2.90095, 1.11 ) }
    dend_26 { pt3dadd( -3.64282, -115.892, 1.55089, 0.28 ) }
    dend_26 { pt3dadd( -3.60995, -116.87, 1.28131, 0.55 ) }
    dend_26 { pt3dadd( -3.56145, -118.697, 0.750395, 0.28 ) }
    dend_26 { pt3dadd( -3.50015, -119.785, 0.441788, 0.55 ) }
    dend_26 { pt3dadd( -3.02335, -124.94, -0.856593, 0.28 ) }
    dend_26 { pt3dadd( -2.6592, -127.959, -1.51929, 1.11 ) }
    dend_26 { pt3dadd( -1.98539, -132.182, -2.24981, 0.28 ) }
    dend_26 { pt3dadd( -1.78703, -133.352, -2.43851, 0.55 ) }
    dend_26 { pt3dadd( -1.04777, -137.465, -3.03092, 0.28 ) }
    dend_26 { pt3dadd( -0.740151, -139.172, -3.25079, 0.55 ) }
    dend_26 { pt3dadd( -0.29842, -141.562, -3.46499, 0.28 ) }
    dend_26 { pt3dadd( 0.00259208, -143.07, -3.57749, 0.83 ) }
    dend_26 { pt3dadd( 0.748961, -146.404, -3.7266, 0.28 ) }
    dend_26 { pt3dadd( 0.995426, -147.581, -3.74949, 0.55 ) }
    dend_26 { pt3dadd( 1.64759, -151.396, -3.66163, 0.28 ) }
    dend_26 { pt3dadd( 1.9029, -152.984, -3.62372, 0.55 ) }
    dend_26 { pt3dadd( 2.57126, -157.354, -3.49404, 0.28 ) }
    dend_26 { pt3dadd( 2.69389, -158.344, -3.45528, 0.55 ) }
    dend_26 { pt3dadd( 2.75226, -158.928, -3.42332, 0.55 ) }
    dend_26 { pt3dadd( 2.93565, -161.414, -3.24745, 0.28 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 72/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -11.9291, -62.0351, 6.30311, 0.55 ) }
    dend_23 { pt3dadd( -13.516, -64.0524, 6.6553, 0.55 ) }
    dend_23 { pt3dadd( -15.0876, -66.0091, 6.99717, 0.28 ) }
    dend_23 { pt3dadd( -15.6533, -66.794, 7.13666, 0.55 ) }
    dend_23 { pt3dadd( -19.011, -71.8143, 8.08373, 0.28 ) }
    dend_23 { pt3dadd( -19.5452, -72.6319, 8.19141, 0.83 ) }
    dend_23 { pt3dadd( -20.9786, -74.8727, 8.40558, 0.28 ) }
    dend_23 { pt3dadd( -21.5791, -75.8893, 8.45175, 0.55 ) }
    dend_23 { pt3dadd( -25.3936, -83.0182, 8.57915, 0.28 ) }
    dend_23 { pt3dadd( -25.9526, -84.3941, 8.50145, 0.55 ) }
    dend_23 { pt3dadd( -26.9872, -88.0621, 8.08142, 0.28 ) }
    dend_23 { pt3dadd( -27.1859, -88.9938, 7.9472, 0.55 ) }
    dend_23 { pt3dadd( -27.5054, -91.2421, 7.58849, 0.28 ) }
    dend_23 { pt3dadd( -27.6522, -92.072, 7.43846, 0.55 ) }
    dend_23 { pt3dadd( -29.2916, -100.856, 5.76579, 0.28 ) }
    dend_23 { pt3dadd( -29.5107, -101.812, 5.60347, 0.55 ) }
    dend_23 { pt3dadd( -30.0041, -103.654, 5.28314, 0.28 ) }
    dend_23 { pt3dadd( -30.6991, -105.855, 4.84679, 0.55 ) }
    dend_23 { pt3dadd( -33.8806, -114.54, 3.07421, 0.28 ) }
    dend_23 { pt3dadd( -34.4258, -115.87, 2.76296, 0.83 ) }
    dend_23 { pt3dadd( -35.2312, -117.591, 2.31791, 0.83 ) }
    dend_23 { pt3dadd( -37.3488, -122.081, 0.937884, 0.28 ) }
    dend_23 { pt3dadd( -37.743, -122.925, 0.635294, 0.55 ) }
    dend_23 { pt3dadd( -38.4501, -124.584, 0.0177294, 0.28 ) }
    dend_23 { pt3dadd( -39.3666, -127.572, -0.99671, 0.55 ) }
    dend_23 { pt3dadd( -39.6089, -128.453, -1.19944, 0.55 ) }
    dend_23 { pt3dadd( -40.3482, -131.89, -1.60744, 0.28 ) }
    dend_23 { pt3dadd( -40.4972, -132.88, -1.66544, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_23 { pt3dadd( -40.9213, -136.465, -1.86733, 0.28 ) }
    dend_23 { pt3dadd( -41.0831, -138.077, -1.9558, 0.83 ) }
    dend_23 { pt3dadd( -41.3933, -141.954, -2.0434, 0.28 ) }
    dend_23 { pt3dadd( -41.5904, -144.877, -2.10529, 0.83 ) }
    dend_23 { pt3dadd( -41.8009, -150.134, -2.21431, 0.28 ) }
    dend_23 { pt3dadd( -41.8376, -151.158, -2.25, 0.55 ) }
    dend_23 { pt3dadd( -41.9189, -153.638, -2.3768, 0.28 ) }
    dend_23 { pt3dadd( -41.9497, -154.281, -2.39291, 0.55 ) }
    dend_23 { pt3dadd( -42.0543, -155.858, -2.37931, 0.28 ) }
    dend_23 { pt3dadd( -42.1382, -156.855, -2.31551, 0.55 ) }
    dend_23 { pt3dadd( -42.2698, -158.2, -2.1988, 0.28 ) }
    dend_23 { pt3dadd( -42.4461, -160.08, -2.04792, 1.11 ) }
    dend_23 { pt3dadd( -43.0101, -165.527, -1.69738, 0.28 ) }
    dend_23 { pt3dadd( -43.1528, -166.8, -1.63638, 0.83 ) }
    dend_23 { pt3dadd( -43.3865, -168.773, -1.58664, 0.83 ) }
    dend_23 { pt3dadd( -44.2023, -175.079, -1.54009, 0.28 ) }
    dend_23 { pt3dadd( -44.3157, -175.81, -1.55957, 0.55 ) }
    dend_23 { pt3dadd( -44.694, -177.927, -1.67889, 0.28 ) }
    dend_23 { pt3dadd( -44.9131, -178.871, -1.77767, 0.55 ) }
    dend_23 { pt3dadd( -45.4828, -181.091, -2.07171, 0.28 ) }
    dend_23 { pt3dadd( -45.9485, -182.597, -2.32228, 0.83 ) }
    dend_23 { pt3dadd( -46.7839, -184.842, -2.76563, 0.28 ) }
    dend_23 { pt3dadd( -46.8984, -185.13, -2.8513, 0.55 ) }
    dend_23 { pt3dadd( -47.6929, -187.221, -3.61806, 0.28 ) }
    dend_23 { pt3dadd( -47.9166, -187.841, -3.86977, 0.55 ) }
    dend_23 { pt3dadd( -48.2791, -188.904, -4.35843, 0.55 ) }
    dend_23 { pt3dadd( -48.6259, -190.283, -5.19813, 0.83 ) }
    dend_23 { pt3dadd( -49.1545, -193.479, -7.41998, 0.28 ) }
    dend_23 { pt3dadd( -49.223, -194.194, -8.50119, 0.55 ) }
    dend_23 { pt3dadd( -49.193, -194.719, -9.83055, 0.28 ) }
    dend_23 { pt3dadd( -49.121, -195.034, -10.8643, 0.55 ) }
    dend_23 { pt3dadd( -48.7513, -195.93, -14.3589, 0.28 ) }
    dend_23 { pt3dadd( -48.6702, -196.074, -15.0133, 0.83 ) }
    dend_23 { pt3dadd( -47.4907, -197.832, -23.9478, 0.28 ) }
    dend_23 { pt3dadd( -47.419, -197.956, -24.6031, 0.55 ) }
    dend_23 { pt3dadd( -47.1424, -198.54, -27.616, 0.28 ) }
    dend_23 { pt3dadd( -47.0671, -198.875, -28.9353, 0.55 ) }
    dend_23 { pt3dadd( -47.0627, -199.315, -30.0602, 0.28 ) }
    dend_23 { pt3dadd( -47.0832, -199.736, -30.8536, 0.55 ) }
    dend_23 { pt3dadd( -47.2405, -201.156, -32.0573, 0.28 ) }
    dend_23 { pt3dadd( -47.3713, -201.899, -32.6661, 0.55 ) }
    dend_23 { pt3dadd( -47.985, -204.271, -34.3762, 0.28 ) }
    dend_23 { pt3dadd( -48.4486, -206.066, -35.6189, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 43/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 28.237, 61.0536, 10.9833, 0.28 ) }
    dend_21 { pt3dadd( 26.6485, 62.9231, 11.1734, 0.28 ) }
    dend_21 { pt3dadd( 26.0923, 63.6193, 11.2179, 0.55 ) }
    dend_21 { pt3dadd( 23.6743, 66.832, 11.3663, 0.28 ) }
    dend_21 { pt3dadd( 23.0225, 67.7686, 11.3906, 0.55 ) }
    dend_21 { pt3dadd( 19.6125, 72.9866, 11.4633, 0.28 ) }
    dend_21 { pt3dadd( 18.5813, 74.6556, 11.4783, 0.83 ) }
    dend_21 { pt3dadd( 17.3136, 76.9553, 11.4794, 0.28 ) }
    dend_21 { pt3dadd( 16.6936, 78.201, 11.427, 0.55 ) }
    dend_21 { pt3dadd( 16.1228, 79.696, 11.289, 0.28 ) }
    dend_21 { pt3dadd( 15.9861, 80.1919, 11.2125, 0.55 ) }
    dend_21 { pt3dadd( 15.8456, 81.8221, 10.7897, 0.28 ) }
    dend_21 { pt3dadd( 15.8036, 82.9173, 10.4588, 0.55 ) }
    dend_21 { pt3dadd( 15.7253, 85.1568, 9.87968, 0.28 ) }
    dend_21 { pt3dadd( 15.6463, 86.7201, 9.52198, 0.83 ) }
    dend_21 { pt3dadd( 15.6347, 87.8145, 9.33594, 0.83 ) }
    dend_21 { pt3dadd( 15.7523, 89.9298, 9.06654, 0.28 ) }
    dend_21 { pt3dadd( 15.8259, 90.7811, 8.96551, 0.55 ) }
    dend_21 { pt3dadd( 16.2764, 95.0164, 8.57618, 0.28 ) }
    dend_21 { pt3dadd( 16.3485, 95.597, 8.56504, 0.55 ) }
    dend_21 { pt3dadd( 16.8479, 99.3678, 8.64814, 0.28 ) }
    dend_21 { pt3dadd( 17.1015, 100.809, 8.72407, 1.11 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 65/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 28.237, 61.0536, 10.9833, 0.28 ) }
    dend_20 { pt3dadd( 29.1893, 63.9601, 11.23, 0.28 ) }
    dend_20 { pt3dadd( 29.2844, 64.326, 11.2827, 0.55 ) }
    dend_20 { pt3dadd( 30.1558, 68.4302, 12.0214, 0.28 ) }
    dend_20 { pt3dadd( 30.4003, 69.8369, 12.3483, 0.55 ) }
    dend_20 { pt3dadd( 30.8808, 73.1367, 13.2026, 0.28 ) }
    dend_20 { pt3dadd( 31.0327, 74.3059, 13.5265, 0.55 ) }
    dend_20 { pt3dadd( 31.1626, 76.258, 14.1875, 0.28 ) }
    dend_20 { pt3dadd( 31.2367, 78.4138, 14.884, 0.83 ) }
    dend_20 { pt3dadd( 31.225, 81.2498, 15.7942, 0.28 ) }
    dend_20 { pt3dadd( 31.218, 81.7978, 15.9448, 0.55 ) }
    dend_20 { pt3dadd( 31.1899, 83.7874, 16.4392, 0.28 ) }
    dend_20 { pt3dadd( 31.1517, 85.2065, 16.7546, 0.83 ) }
    dend_20 { pt3dadd( 30.9819, 90.3046, 17.7238, 0.28 ) }
    dend_20 { pt3dadd( 30.9271, 91.5001, 17.9149, 0.55 ) }
    dend_20 { pt3dadd( 30.8079, 93.5065, 18.1955, 0.28 ) }
    dend_20 { pt3dadd( 30.7679, 94.1202, 18.2842, 0.55 ) }
    dend_20 { pt3dadd( 30.416, 98.0907, 18.8727, 0.28 ) }
    dend_20 { pt3dadd( 30.3829, 98.4329, 18.9249, 0.55 ) }
    dend_20 { pt3dadd( 30.0351, 101.373, 19.4017, 0.28 ) }
    dend_20 { pt3dadd( 30.002, 102.125, 19.4953, 0.55 ) }
    dend_20 { pt3dadd( 30.0447, 103.678, 19.6594, 0.28 ) }
    dend_20 { pt3dadd( 30.1259, 105.108, 19.7884, 0.83 ) }
    dend_20 { pt3dadd( 30.4254, 107.835, 19.9777, 0.28 ) }
    dend_20 { pt3dadd( 30.4928, 108.32, 20.0061, 0.83 ) }
    dend_20 { pt3dadd( 31.3184, 112.718, 20.1658, 0.28 ) }
    dend_20 { pt3dadd( 31.6738, 114.265, 20.1721, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 92/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 9.02161, -12.2932, -3.53518, 0.28 ) }
    dend_10 { pt3dadd( 10.1558, -14.9056, -4.02735, 0.28 ) }
    dend_10 { pt3dadd( 10.7719, -16.3245, -4.29468, 0.55 ) }
    dend_10 { pt3dadd( 11.686, -18.4301, -4.69137, 0.28 ) }
    dend_10 { pt3dadd( 12.8112, -21.0217, -5.17963, 0.83 ) }
    dend_10 { pt3dadd( 14.0375, -23.8461, -5.71175, 0.28 ) }
    dend_10 { pt3dadd( 14.769, -25.5308, -6.02916, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 9.02161, -12.2932, -3.53518, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 10.9711, -13.1389, -3.52776, 0.28 ) }
    dend_1 { pt3dadd( 12.1237, -13.6388, -3.52337, 0.83 ) }
    dend_1 { pt3dadd( 14.275, -14.5719, -3.51518, 0.28 ) }
    dend_1 { pt3dadd( 15.7484, -15.211, -3.50957, 1.11 ) }
    dend_1 { pt3dadd( 17.4549, -15.9512, -3.50308, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 5/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.66408, -37.6984, 0.58608, 0.28 ) }
    axon_1 { pt3dadd( -3.50741, -52.6747, 0.58608, 0.28 ) }
    axon_1 { pt3dadd( -4.35075, -67.651, 0.58608, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 8/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -12.7145, 14.1759, 2.7645, 0.28 ) }
    dend_52 { pt3dadd( -15.1607, 14.4736, 3.02766, 0.28 ) }
    dend_52 { pt3dadd( -16.6243, 14.6672, 3.22722, 0.55 ) }
    dend_52 { pt3dadd( -17.9193, 14.8223, 3.40704, 0.28 ) }
    dend_52 { pt3dadd( -19.973, 15.0365, 3.73247, 0.83 ) }
    dend_52 { pt3dadd( -22.2295, 15.2031, 4.07556, 0.28 ) }
    dend_52 { pt3dadd( -23.9912, 15.2967, 4.33001, 0.28 ) }
    dend_52 { pt3dadd( -25.969, 15.3602, 4.64747, 0.83 ) }
    dend_52 { pt3dadd( -27.8453, 15.3941, 4.95705, 0.28 ) }
    dend_52 { pt3dadd( -29.4082, 15.4047, 5.20244, 0.83 ) }
    dend_52 { pt3dadd( -33.4522, 15.3851, 5.81833, 0.28 ) }
    dend_52 { pt3dadd( -35.9581, 15.3894, 6.12588, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -12.7145, 14.1759, 2.7645, 0.28 ) }
    dend_47 { pt3dadd( -11.8603, 17.21, 3.50904, 0.28 ) }
    dend_47 { pt3dadd( -11.3571, 18.9974, 3.94764, 0.28 ) }
    dend_47 { pt3dadd( -11.147, 19.7437, 4.13076, 0.55 ) }
    dend_47 { pt3dadd( -10.0144, 23.7667, 5.11798, 0.28 ) }
    dend_47 { pt3dadd( -9.45819, 25.7423, 5.60277, 0.83 ) }
    dend_47 { pt3dadd( -8.40806, 29.4725, 6.51811, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 27/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 9.77141, 53.0437, -5.8111, 0.28 ) }
    dend_41 { pt3dadd( 10.4741, 57.3796, -5.74531, 0.28 ) }
    dend_41 { pt3dadd( 10.6307, 58.2929, -5.74396, 0.55 ) }
    dend_41 { pt3dadd( 10.8505, 59.4974, -5.74085, 0.28 ) }
    dend_41 { pt3dadd( 11.0227, 60.4444, -5.73932, 0.55 ) }
    dend_41 { pt3dadd( 11.7347, 64.3598, -5.73295, 0.28 ) }
    dend_41 { pt3dadd( 12.2376, 67.1248, -5.72846, 0.83 ) }
    dend_41 { pt3dadd( 12.7719, 70.3135, -5.61776, 0.28 ) }
    dend_41 { pt3dadd( 12.9885, 71.5551, -5.58295, 0.55 ) }
    dend_41 { pt3dadd( 13.0494, 71.8844, -5.57508, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 37/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 9.77141, 53.0437, -5.8111, 0.28 ) }
    dend_40 { pt3dadd( 13.0308, 57.2109, -7.25149, 0.28 ) }
    dend_40 { pt3dadd( 14.5273, 59.1701, -7.91953, 0.55 ) }
    dend_40 { pt3dadd( 16.6054, 61.8555, -8.80397, 0.28 ) }
    dend_40 { pt3dadd( 16.9489, 62.285, -8.97476, 0.55 ) }
    dend_40 { pt3dadd( 19.3379, 65.2765, -10.2364, 0.28 ) }
    dend_40 { pt3dadd( 20.2171, 66.3787, -10.781, 0.55 ) }
    dend_40 { pt3dadd( 21.8169, 68.5366, -11.9153, 0.28 ) }
    dend_40 { pt3dadd( 22.334, 69.2444, -12.3724, 0.55 ) }
    dend_40 { pt3dadd( 24.7434, 72.5913, -14.8303, 0.28 ) }
    dend_40 { pt3dadd( 25.1844, 73.1877, -15.5839, 0.83 ) }
    dend_40 { pt3dadd( 26.488, 74.9237, -18.681, 0.28 ) }
    dend_40 { pt3dadd( 26.9196, 75.4517, -19.834, 0.55 ) }
    dend_40 { pt3dadd( 27.5003, 76.0373, -21.4377, 0.28 ) }
    dend_40 { pt3dadd( 28.1583, 76.5623, -23.1672, 0.55 ) }
    dend_40 { pt3dadd( 32.5913, 79.2181, -34.1965, 0.28 ) }
    dend_40 { pt3dadd( 32.9877, 79.3876, -35.0831, 0.55 ) }
    dend_40 { pt3dadd( 34.2964, 79.7275, -37.5528, 0.28 ) }
    dend_40 { pt3dadd( 35.4448, 79.8427, -39.3142, 0.55 ) }
    dend_40 { pt3dadd( 37.6066, 79.8423, -41.8928, 0.28 ) }
    dend_40 { pt3dadd( 38.5349, 79.7426, -42.6995, 0.55 ) }
    dend_40 { pt3dadd( 39.9667, 79.4798, -43.4211, 0.28 ) }
    dend_40 { pt3dadd( 42.3274, 78.9098, -44.6125, 0.55 ) }
    dend_40 { pt3dadd( 46.0942, 77.7713, -46.4829, 0.28 ) }
    dend_40 { pt3dadd( 47.5066, 77.2606, -47.1935, 0.55 ) }
    dend_40 { pt3dadd( 49.1982, 76.5717, -48.0438, 0.28 ) }
    dend_40 { pt3dadd( 50.6896, 75.9448, -48.8212, 0.55 ) }
    dend_40 { pt3dadd( 53.0543, 74.9815, -50.1853, 0.28 ) }
    dend_40 { pt3dadd( 54.3702, 74.4736, -51.0666, 0.83 ) }
    dend_40 { pt3dadd( 58.539, 73.0427, -54.0516, 0.28 ) }
    dend_40 { pt3dadd( 59.318, 72.8797, -54.5826, 0.55 ) }
    dend_40 { pt3dadd( 61.2047, 72.7134, -55.8094, 0.28 ) }
    dend_40 { pt3dadd( 62.9623, 72.7531, -56.9194, 0.55 ) }
    dend_40 { pt3dadd( 65.3889, 73.0828, -58.4904, 0.28 ) }
    dend_40 { pt3dadd( 66.4461, 73.3489, -59.2837, 0.55 ) }
    dend_40 { pt3dadd( 73.3079, 75.7379, -64.7869, 0.28 ) }
    dend_40 { pt3dadd( 74.4745, 76.154, -65.7874, 0.55 ) }
    dend_40 { pt3dadd( 77.9163, 77.4035, -68.8681, 0.28 ) }
    dend_40 { pt3dadd( 79.575, 78.0218, -70.3617, 0.55 ) }
    dend_40 { pt3dadd( 83.6148, 79.6305, -74.1286, 0.28 ) }
    dend_40 { pt3dadd( 84.7807, 80.1299, -75.3626, 0.55 ) }
    dend_40 { pt3dadd( 86.2098, 80.8871, -77.4966, 0.28 ) }
    dend_40 { pt3dadd( 87.1311, 81.2692, -78.907, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 80/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -25.7942, -29.1971, 7.2664, 0.28 ) }
    dend_33 { pt3dadd( -23.3231, -34.2307, 7.07904, 0.28 ) }
    dend_33 { pt3dadd( -22.882, -35.1292, 7.04559, 0.55 ) }
    dend_33 { pt3dadd( -21.0935, -38.7724, 6.90998, 0.28 ) }
    dend_33 { pt3dadd( -20.5019, -39.9775, 6.86512, 0.83 ) }
    dend_33 { pt3dadd( -19.0586, -42.9176, 6.75569, 0.28 ) }
    dend_33 { pt3dadd( -18.3372, -44.387, 6.70099, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 87/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -25.7942, -29.1971, 7.2664, 0.28 ) }
    dend_32 { pt3dadd( -26.5366, -31.2447, 9.05415, 0.28 ) }
    dend_32 { pt3dadd( -26.6316, -31.5216, 9.27058, 0.83 ) }
    dend_32 { pt3dadd( -27.1327, -32.9297, 10.3595, 0.28 ) }
    dend_32 { pt3dadd( -27.2748, -33.3823, 10.6607, 0.83 ) }
    dend_32 { pt3dadd( -27.6799, -34.6782, 11.4265, 0.28 ) }
    dend_32 { pt3dadd( -27.7877, -35.0222, 11.6079, 0.55 ) }
    dend_32 { pt3dadd( -28.2272, -36.3919, 12.1798, 0.28 ) }
    dend_32 { pt3dadd( -28.7653, -38.0361, 12.7581, 0.83 ) }
    dend_32 { pt3dadd( -29.5762, -40.3738, 13.457, 0.28 ) }
    dend_32 { pt3dadd( -30.0183, -41.6351, 13.793, 0.83 ) }
    dend_32 { pt3dadd( -30.5379, -43.0687, 14.111, 0.28 ) }
    dend_32 { pt3dadd( -31.0798, -44.4303, 14.3628, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( -31.5097, -45.4152, 14.481, 0.28 ) }
    dend_32 { pt3dadd( -31.8194, -46.0953, 14.5226, 0.55 ) }
    dend_32 { pt3dadd( -32.2883, -46.9921, 14.5719, 0.28 ) }
    dend_32 { pt3dadd( -32.6617, -47.7051, 14.6108, 0.55 ) }
    dend_32 { pt3dadd( -34.0375, -50.1826, 14.7404, 0.83 ) }
    dend_32 { pt3dadd( -34.8794, -51.6854, 14.8289, 0.28 ) }
    dend_32 { pt3dadd( -35.4352, -52.6153, 14.8673, 0.55 ) }
    dend_32 { pt3dadd( -36.9133, -54.9573, 14.9276, 0.28 ) }
    dend_32 { pt3dadd( -37.7493, -56.24, 15.0034, 1.11 ) }
    dend_32 { pt3dadd( -39.2467, -58.5525, 15.173, 0.28 ) }
    dend_32 { pt3dadd( -39.7768, -59.4182, 15.2834, 0.55 ) }
    dend_32 { pt3dadd( -40.7936, -61.2156, 15.5839, 0.28 ) }
    dend_32 { pt3dadd( -41.2914, -62.1891, 15.76, 0.83 ) }
    dend_32 { pt3dadd( -42.6819, -65.7028, 16.4822, 0.28 ) }
    dend_32 { pt3dadd( -43.0681, -67.0633, 16.794, 0.83 ) }
    dend_32 { pt3dadd( -43.748, -70.7268, 17.702, 0.28 ) }
    dend_32 { pt3dadd( -43.9552, -72.4772, 18.1661, 1.11 ) }
    dend_32 { pt3dadd( -44.0121, -73.5215, 18.4603, 1.11 ) }
    dend_32 { pt3dadd( -44.0397, -76.3938, 19.3454, 0.28 ) }
    dend_32 { pt3dadd( -43.9528, -78.8032, 20.1251, 0.28 ) }
    dend_32 { pt3dadd( -43.9273, -79.5961, 20.3721, 0.55 ) }
    dend_32 { pt3dadd( -43.8857, -81.6814, 20.9867, 0.28 ) }
    dend_32 { pt3dadd( -43.8921, -82.7045, 21.2503, 0.83 ) }
    dend_32 { pt3dadd( -43.9771, -85.4411, 21.8679, 0.28 ) }
    dend_32 { pt3dadd( -44.0285, -86.5382, 22.0861, 0.55 ) }
    dend_32 { pt3dadd( -44.3085, -92.1442, 23.1378, 0.28 ) }
    dend_32 { pt3dadd( -44.3792, -93.295, 23.3859, 0.55 ) }
    dend_32 { pt3dadd( -44.5807, -96.0103, 24.0178, 0.28 ) }
    dend_32 { pt3dadd( -44.6456, -96.797, 24.2121, 0.55 ) }
    dend_32 { pt3dadd( -45.0499, -101.113, 25.3034, 0.28 ) }
    dend_32 { pt3dadd( -45.2346, -103.413, 25.9536, 0.83 ) }
    dend_32 { pt3dadd( -45.4089, -106.611, 27.0132, 0.28 ) }
    dend_32 { pt3dadd( -45.4451, -107.613, 27.3237, 0.83 ) }
    dend_32 { pt3dadd( -45.478, -108.866, 27.7382, 0.28 ) }
    dend_32 { pt3dadd( -45.4712, -109.664, 27.9406, 0.55 ) }
    dend_32 { pt3dadd( -45.3973, -111.951, 28.3696, 0.28 ) }
    dend_32 { pt3dadd( -45.3558, -112.773, 28.5092, 0.55 ) }
    dend_32 { pt3dadd( -45.1273, -116.433, 29.1044, 0.28 ) }
    dend_32 { pt3dadd( -45.0609, -117.668, 29.3245, 0.55 ) }
    dend_32 { pt3dadd( -44.6889, -125.879, 30.9362, 0.28 ) }
    dend_32 { pt3dadd( -44.6337, -127.403, 31.2564, 0.83 ) }
    dend_32 { pt3dadd( -44.5235, -132.74, 32.4538, 0.28 ) }
    dend_32 { pt3dadd( -44.4947, -133.665, 32.6678, 0.55 ) }
    dend_32 { pt3dadd( -44.2554, -139.005, 33.9659, 0.28 ) }
    dend_32 { pt3dadd( -44.2293, -139.533, 34.0915, 0.55 ) }
    dend_32 { pt3dadd( -44.0241, -142.61, 34.8993, 0.28 ) }
    dend_32 { pt3dadd( -43.9786, -143.191, 35.0571, 0.83 ) }
    dend_32 { pt3dadd( -43.9109, -144.214, 35.337, 0.83 ) }
    dend_32 { pt3dadd( -43.8281, -146.106, 35.8655, 0.83 ) }
    dend_32 { pt3dadd( -43.7265, -148.538, 36.5849, 0.28 ) }
    dend_32 { pt3dadd( -43.6634, -150.393, 37.0088, 0.28 ) }
    dend_32 { pt3dadd( -43.6262, -151.052, 37.1244, 0.55 ) }
    dend_32 { pt3dadd( -43.4851, -153.159, 37.4628, 0.28 ) }
    dend_32 { pt3dadd( -43.4015, -154.476, 37.6549, 0.55 ) }
    dend_32 { pt3dadd( -43.0637, -158.844, 38.2397, 0.28 ) }
    dend_32 { pt3dadd( -42.8475, -161.571, 38.5847, 0.83 ) }
    dend_32 { pt3dadd( -42.2104, -169.141, 39.4661, 0.28 ) }
    dend_32 { pt3dadd( -42.1124, -170.096, 39.5688, 0.83 ) }
    dend_32 { pt3dadd( -41.9224, -171.634, 39.7361, 0.28 ) }
    dend_32 { pt3dadd( -41.8045, -172.548, 39.8337, 0.83 ) }
    dend_32 { pt3dadd( -41.3251, -176.338, 40.2263, 0.28 ) }
    dend_32 { pt3dadd( -41.2701, -176.796, 40.2901, 0.55 ) }
    dend_32 { pt3dadd( -40.9828, -179.36, 40.6023, 0.28 ) }
    dend_32 { pt3dadd( -40.822, -180.713, 40.7634, 0.83 ) }
    dend_32 { pt3dadd( -40.4807, -183.453, 41.1106, 0.28 ) }
    dend_32 { pt3dadd( -40.3195, -184.818, 41.2823, 0.55 ) }
    dend_32 { pt3dadd( -39.6316, -190.872, 42.0423, 0.28 ) }
    dend_32 { pt3dadd( -39.5819, -191.315, 42.1051, 0.55 ) }
    dend_32 { pt3dadd( -39.4235, -192.79, 42.3397, 0.28 ) }
    dend_32 { pt3dadd( -39.2305, -194.385, 42.606, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 70/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.93565, -161.414, -3.24745, 0.28 ) }
    dend_28 { pt3dadd( 5.10234, -162.177, -4.66146, 0.28 ) }
    dend_28 { pt3dadd( 6.51396, -162.675, -5.5827, 0.83 ) }
    dend_28 { pt3dadd( 8.44748, -163.356, -6.84454, 0.28 ) }
    dend_28 { pt3dadd( 9.61224, -163.767, -7.60469, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 75/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 2.93565, -161.414, -3.24745, 0.83 ) }
    dend_27 { pt3dadd( 3.13486, -165.248, -3.31807, 0.83 ) }
    dend_27 { pt3dadd( 3.62929, -169.269, -3.33104, 0.28 ) }
    dend_27 { pt3dadd( 3.77543, -170.063, -3.36201, 0.55 ) }
    dend_27 { pt3dadd( 4.29414, -172.721, -3.48965, 0.28 ) }
    dend_27 { pt3dadd( 4.45834, -173.567, -3.5226, 0.55 ) }
    dend_27 { pt3dadd( 4.86137, -175.746, -3.58403, 0.28 ) }
    dend_27 { pt3dadd( 5.22829, -177.61, -3.57102, 0.83 ) }
    dend_27 { pt3dadd( 6.10315, -181.577, -3.42305, 0.28 ) }
    dend_27 { pt3dadd( 6.32039, -182.714, -3.33737, 0.55 ) }
    dend_27 { pt3dadd( 6.83234, -186.078, -3.02847, 0.28 ) }
    dend_27 { pt3dadd( 6.97499, -187.532, -2.89057, 0.55 ) }
    dend_27 { pt3dadd( 7.04333, -191.042, -2.6077, 0.28 ) }
    dend_27 { pt3dadd( 7.0123, -192.654, -2.45414, 0.83 ) }
    dend_27 { pt3dadd( 7.01229, -195.299, -2.13877, 0.83 ) }
    dend_27 { pt3dadd( 7.09259, -197.408, -1.90175, 0.28 ) }
    dend_27 { pt3dadd( 7.23474, -199.228, -1.6988, 0.55 ) }
    dend_27 { pt3dadd( 7.80332, -205.127, -1.00696, 0.28 ) }
    dend_27 { pt3dadd( 8.01717, -207.016, -0.729494, 0.55 ) }
    dend_27 { pt3dadd( 8.49273, -211.147, -0.00591989, 0.28 ) }
    dend_27 { pt3dadd( 8.82851, -213.918, 0.601457, 0.55 ) }
    dend_27 { pt3dadd( 9.29853, -217.866, 1.6754, 0.28 ) }
    dend_27 { pt3dadd( 9.58164, -220.69, 2.54032, 0.55 ) }
    dend_27 { pt3dadd( 9.98355, -225.102, 4.0071, 0.28 ) }
    dend_27 { pt3dadd( 10.1399, -228.245, 4.96996, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_27 { pt3dadd( 10.2075, -233.112, 6.35544, 0.28 ) }
    dend_27 { pt3dadd( 10.2315, -234.841, 6.79085, 0.55 ) }
    dend_27 { pt3dadd( 10.3412, -240.642, 8.05379, 0.28 ) }
    dend_27 { pt3dadd( 10.4281, -243.076, 8.47606, 0.55 ) }
    dend_27 { pt3dadd( 10.6601, -248.944, 9.22476, 0.28 ) }
    dend_27 { pt3dadd( 10.8783, -252.668, 9.55501, 0.83 ) }
    dend_27 { pt3dadd( 11.1438, -256.35, 9.73207, 0.28 ) }
    dend_27 { pt3dadd( 11.202, -257.169, 9.75355, 0.55 ) }
    dend_27 { pt3dadd( 11.4185, -260.536, 9.84787, 0.28 ) }
    dend_27 { pt3dadd( 11.4548, -261.704, 9.88801, 0.83 ) }
    dend_27 { pt3dadd( 11.5399, -264.982, 10.0596, 0.28 ) }
    dend_27 { pt3dadd( 11.4887, -266.583, 10.1514, 0.55 ) }
    dend_27 { pt3dadd( 11.1124, -270.243, 10.3882, 0.28 ) }
    dend_27 { pt3dadd( 10.8833, -271.502, 10.4054, 0.55 ) }
    dend_27 { pt3dadd( 10.2616, -274.314, 10.3663, 0.28 ) }
    dend_27 { pt3dadd( 10.128, -274.912, 10.3568, 0.55 ) }
    dend_27 { pt3dadd( 9.72185, -276.732, 10.3224, 0.28 ) }
    dend_27 { pt3dadd( 9.45764, -278.173, 10.298, 0.55 ) }
    dend_27 { pt3dadd( 7.9767, -287.96, 10.1688, 0.28 ) }
    dend_27 { pt3dadd( 7.49413, -291.98, 10.1401, 0.83 ) }
    dend_27 { pt3dadd( 7.18805, -295.362, 10.1545, 0.28 ) }
    dend_27 { pt3dadd( 7.0983, -297.333, 10.1883, 0.55 ) }
    dend_27 { pt3dadd( 7.2909, -307.343, 10.4143, 0.28 ) }
    dend_27 { pt3dadd( 7.58153, -309.642, 10.4307, 1.11 ) }
    dend_27 { pt3dadd( 8.03704, -311.286, 10.4417, 0.28 ) }
    dend_27 { pt3dadd( 8.50853, -312.538, 10.4124, 0.55 ) }
    dend_27 { pt3dadd( 10.442, -316.536, 10.2526, 0.28 ) }
    dend_27 { pt3dadd( 11.7403, -318.828, 10.1634, 0.28 ) }
    dend_27 { pt3dadd( 15.8504, -324.98, 9.87597, 0.28 ) }
    dend_27 { pt3dadd( 16.8965, -326.515, 9.79793, 0.83 ) }
    dend_27 { pt3dadd( 18.051, -328.231, 9.70222, 0.28 ) }
    dend_27 { pt3dadd( 19.5285, -330.531, 9.57762, 0.83 ) }
    dend_27 { pt3dadd( 22.2735, -335.189, 9.31684, 0.28 ) }
    dend_27 { pt3dadd( 22.6121, -335.882, 9.32559, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 34/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -48.4486, -206.066, -35.6189, 0.28 ) }
    dend_25 { pt3dadd( -47.6215, -213.046, -35.8604, 0.28 ) }
    dend_25 { pt3dadd( -47.4823, -215.454, -36.1621, 0.55 ) }
    dend_25 { pt3dadd( -47.4004, -217.57, -36.4545, 0.28 ) }
    dend_25 { pt3dadd( -47.3744, -218.967, -36.6305, 0.55 ) }
    dend_25 { pt3dadd( -47.3782, -221.231, -36.8894, 0.28 ) }
    dend_25 { pt3dadd( -47.3974, -223.257, -37.0738, 0.55 ) }
    dend_25 { pt3dadd( -47.682, -229.492, -37.5465, 0.28 ) }
    dend_25 { pt3dadd( -47.7448, -230.559, -37.6002, 0.55 ) }
    dend_25 { pt3dadd( -47.8519, -232.69, -37.6075, 0.28 ) }
    dend_25 { pt3dadd( -47.8888, -234.065, -37.5475, 0.55 ) }
    dend_25 { pt3dadd( -47.873, -236.122, -37.3719, 0.28 ) }
    dend_25 { pt3dadd( -47.7692, -238.046, -37.1639, 1.94 ) }
    dend_25 { pt3dadd( -47.3994, -241.857, -36.5571, 0.28 ) }
    dend_25 { pt3dadd( -47.0644, -244.84, -36.1468, 1.38 ) }
    dend_25 { pt3dadd( -46.7721, -246.919, -35.8994, 0.28 ) }
    dend_25 { pt3dadd( -46.5531, -248.263, -35.7588, 0.83 ) }
    dend_25 { pt3dadd( -46.1274, -250.731, -35.5732, 0.28 ) }
    dend_25 { pt3dadd( -45.7216, -252.779, -35.4409, 1.94 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 53/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -48.4486, -206.066, -35.6189, 0.55 ) }
    dend_24 { pt3dadd( -51.1997, -206.735, -38.135, 0.55 ) }
    dend_24 { pt3dadd( -52.7196, -207.098, -39.2507, 0.28 ) }
    dend_24 { pt3dadd( -53.2081, -207.215, -39.6093, 0.55 ) }
    dend_24 { pt3dadd( -55.9054, -207.859, -41.5893, 0.28 ) }
    dend_24 { pt3dadd( -57.4404, -208.226, -42.7161, 0.83 ) }
    dend_24 { pt3dadd( -60.1655, -208.877, -44.7165, 0.28 ) }
    dend_24 { pt3dadd( -61.5716, -209.09, -45.4029, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 61/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 14.769, -25.5308, -6.02916, 0.28 ) }
    dend_16 { pt3dadd( 18.3692, -23.6931, -6.00914, 0.28 ) }
    dend_16 { pt3dadd( 19.3706, -23.2207, -5.96579, 0.83 ) }
    dend_16 { pt3dadd( 23.3188, -21.6672, -5.5114, 0.28 ) }
    dend_16 { pt3dadd( 24.6005, -21.2072, -5.38355, 0.55 ) }
    dend_16 { pt3dadd( 26.9081, -20.3791, -5.15337, 0.28 ) }
    dend_16 { pt3dadd( 28.373, -19.8534, -5.00725, 0.55 ) }
    dend_16 { pt3dadd( 29.9233, -19.3392, -4.80166, 0.55 ) }
    dend_16 { pt3dadd( 33.6534, -18.2586, -4.20105, 0.28 ) }
    dend_16 { pt3dadd( 35.854, -17.8457, -3.66503, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 71/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 14.769, -25.5308, -6.02916, 0.28 ) }
    dend_11 { pt3dadd( 14.3744, -27.7641, -5.46414, 0.28 ) }
    dend_11 { pt3dadd( 14.2331, -28.9065, -5.29007, 0.83 ) }
    dend_11 { pt3dadd( 14.0741, -30.5289, -5.08162, 0.28 ) }
    dend_11 { pt3dadd( 14.057, -30.9101, -5.01882, 0.55 ) }
    dend_11 { pt3dadd( 14.0424, -32.4524, -4.72851, 0.28 ) }
    dend_11 { pt3dadd( 14.1035, -34.4471, -4.37328, 1.11 ) }
    dend_11 { pt3dadd( 14.3746, -36.9861, -3.97468, 0.28 ) }
    dend_11 { pt3dadd( 14.5088, -37.86, -3.84127, 0.55 ) }
    dend_11 { pt3dadd( 14.9903, -40.2602, -3.48359, 0.28 ) }
    dend_11 { pt3dadd( 15.16, -40.9973, -3.38315, 0.55 ) }
    dend_11 { pt3dadd( 15.901, -43.6821, -3.04751, 0.28 ) }
    dend_11 { pt3dadd( 16.3162, -45.0025, -2.87963, 0.83 ) }
    dend_11 { pt3dadd( 16.9539, -46.8229, -2.59126, 0.28 ) }
    dend_11 { pt3dadd( 17.2858, -47.7537, -2.46986, 0.55 ) }
    dend_11 { pt3dadd( 17.8589, -49.3644, -2.32325, 0.28 ) }
    dend_11 { pt3dadd( 18.2499, -50.4245, -2.21467, 0.55 ) }
    dend_11 { pt3dadd( 18.778, -51.7227, -2.00897, 0.28 ) }
    dend_11 { pt3dadd( 19.3247, -53.0136, -1.77824, 0.28 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 90/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 17.4549, -15.9512, -3.50308, 0.28 ) }
    dend_7 { pt3dadd( 19.1914, -15.9866, -1.77695, 0.28 ) }
    dend_7 { pt3dadd( 22.3014, -14.8483, 1.47818, 0.28 ) }
    dend_7 { pt3dadd( 26.4384, -11.9985, 5.96185, 0.28 ) }
    dend_7 { pt3dadd( 27.5696, -10.8617, 7.08219, 0.83 ) }
    dend_7 { pt3dadd( 29.7522, -8.21573, 9.14007, 0.28 ) }
    dend_7 { pt3dadd( 30.8807, -6.84762, 10.2041, 0.83 ) }
    dend_7 { pt3dadd( 32.8219, -3.39503, 12.0645, 0.28 ) }
    dend_7 { pt3dadd( 33.2689, -2.12396, 12.5313, 0.55 ) }
    dend_7 { pt3dadd( 34.1893, 1.84367, 13.1488, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_7 { pt3dadd( 34.3777, 2.71694, 13.2406, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 1/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 17.4549, -15.9512, -3.50308, 0.55 ) }
    dend_2 { pt3dadd( 17.5069, -16.8298, -3.67314, 0.55 ) }
    dend_2 { pt3dadd( 17.7821, -19.4991, -4.05562, 0.28 ) }
    dend_2 { pt3dadd( 17.9984, -21.2033, -4.16462, 0.28 ) }
    dend_2 { pt3dadd( 18.1292, -22.2338, -4.23054, 0.55 ) }
    dend_2 { pt3dadd( 18.2249, -22.9883, -4.2788, 0.55 ) }
    dend_2 { pt3dadd( 18.5319, -25.4076, -4.43354, 0.83 ) }
    dend_2 { pt3dadd( 19.3633, -31.0606, -4.66473, 0.28 ) }
    dend_2 { pt3dadd( 19.6882, -33.0234, -4.63455, 0.28 ) }
    // Section: dend_60, id: dend_60, parent: dend_52 (entry count 10/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -35.9581, 15.3894, 6.12588, 0.55 ) }
    dend_60 { pt3dadd( -39.5323, 15.8054, 6.97653, 0.55 ) }
    dend_60 { pt3dadd( -44.4345, 16.3482, 8.32454, 0.28 ) }
    dend_60 { pt3dadd( -48.8768, 16.8885, 9.83267, 0.55 ) }
    dend_60 { pt3dadd( -52.217, 17.2954, 11.0462, 0.28 ) }
    dend_60 { pt3dadd( -53.6915, 17.5463, 11.6508, 0.28 ) }
    dend_60 { pt3dadd( -55.4693, 17.9588, 12.4547, 0.55 ) }
    dend_60 { pt3dadd( -58.5591, 18.6565, 14.1137, 0.55 ) }
    dend_60 { pt3dadd( -61.2824, 19.4843, 15.8925, 0.28 ) }
    dend_60 { pt3dadd( -62.2351, 19.8936, 16.5786, 0.55 ) }
    dend_60 { pt3dadd( -65.1408, 21.2275, 18.627, 0.28 ) }
    dend_60 { pt3dadd( -66.8091, 22.2035, 19.9775, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 22/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -35.9581, 15.3894, 6.12588, 0.28 ) }
    dend_53 { pt3dadd( -39.2413, 15.3904, 5.17829, 0.28 ) }
    dend_53 { pt3dadd( -39.6523, 15.4065, 5.00911, 0.55 ) }
    dend_53 { pt3dadd( -41.8899, 15.362, 4.26458, 0.28 ) }
    dend_53 { pt3dadd( -42.8446, 15.2969, 3.9864, 0.55 ) }
    dend_53 { pt3dadd( -44.5944, 15.1245, 3.63256, 0.28 ) }
    dend_53 { pt3dadd( -45.9416, 14.8927, 3.43762, 0.55 ) }
    dend_53 { pt3dadd( -51.5396, 13.6475, 3.00275, 0.28 ) }
    dend_53 { pt3dadd( -55.1441, 12.7528, 2.85231, 0.55 ) }
    dend_53 { pt3dadd( -56.3224, 12.4459, 2.83934, 0.28 ) }
    dend_53 { pt3dadd( -59.4362, 11.5863, 2.91482, 0.28 ) }
    dend_53 { pt3dadd( -64.2954, 10.2411, 3.00232, 0.83 ) }
    dend_53 { pt3dadd( -66.1062, 9.702, 3.10414, 0.55 ) }
    dend_53 { pt3dadd( -68.4207, 8.95435, 3.35905, 0.28 ) }
    dend_53 { pt3dadd( -70.2721, 8.43357, 3.44759, 0.55 ) }
    dend_53 { pt3dadd( -72.5097, 7.89127, 3.44684, 0.28 ) }
    dend_53 { pt3dadd( -75.5721, 7.26286, 3.12511, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 39/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -8.40806, 29.4725, 6.51811, 0.28 ) }
    dend_51 { pt3dadd( -7.27527, 29.969, 7.16237, 0.28 ) }
    dend_51 { pt3dadd( -6.75162, 30.1985, 7.46019, 0.55 ) }
    dend_51 { pt3dadd( -4.534, 31.1704, 8.72143, 0.28 ) }
    dend_51 { pt3dadd( -3.37453, 31.6785, 9.38087, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 44/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -8.40806, 29.4725, 6.51811, 0.28 ) }
    dend_48 { pt3dadd( -8.58155, 30.7045, 7.24284, 0.28 ) }
    dend_48 { pt3dadd( -8.71798, 31.6733, 7.81272, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 47/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 13.0494, 71.8844, -5.57508, 0.28 ) }
    dend_43 { pt3dadd( 16.8985, 72.8966, -4.67508, 0.28 ) }
    dend_43 { pt3dadd( 17.7654, 73.0979, -4.43619, 0.55 ) }
    dend_43 { pt3dadd( 19.226, 73.3705, -3.95657, 0.28 ) }
    dend_43 { pt3dadd( 20.6074, 73.5654, -3.45314, 0.55 ) }
    dend_43 { pt3dadd( 21.7665, 73.7102, -3.03578, 0.28 ) }
    dend_43 { pt3dadd( 24.0763, 73.9119, -2.13082, 0.83 ) }
    dend_43 { pt3dadd( 26.5277, 74.0628, -1.03953, 0.28 ) }
    dend_43 { pt3dadd( 28.501, 74.1908, -0.151853, 0.55 ) }
    dend_43 { pt3dadd( 31.7162, 74.4629, 1.33566, 0.28 ) }
    dend_43 { pt3dadd( 34.0291, 74.7492, 2.36749, 0.55 ) }
    dend_43 { pt3dadd( 37.4961, 75.2747, 3.90416, 0.28 ) }
    dend_43 { pt3dadd( 39.8945, 75.7796, 4.90856, 0.83 ) }
    dend_43 { pt3dadd( 42.5325, 76.5196, 5.95432, 0.28 ) }
    dend_43 { pt3dadd( 43.7433, 76.9656, 6.36043, 0.55 ) }
    dend_43 { pt3dadd( 47.0295, 78.4361, 7.32302, 0.28 ) }
    dend_43 { pt3dadd( 48.2632, 79.083, 7.64122, 0.55 ) }
    dend_43 { pt3dadd( 51.7346, 81.1, 8.37301, 0.28 ) }
    dend_43 { pt3dadd( 53.1664, 81.9822, 8.62287, 0.55 ) }
    dend_43 { pt3dadd( 57.5144, 84.8893, 9.32388, 0.28 ) }
    dend_43 { pt3dadd( 58.8522, 85.8683, 9.52439, 0.83 ) }
    dend_43 { pt3dadd( 60.2727, 87.0895, 9.75125, 0.83 ) }
    dend_43 { pt3dadd( 61.3437, 88.149, 9.91836, 0.83 ) }
    dend_43 { pt3dadd( 64.0565, 91.4046, 10.3217, 0.28 ) }
    dend_43 { pt3dadd( 65.6907, 93.8843, 10.546, 0.28 ) }
    dend_43 { pt3dadd( 66.1823, 94.849, 10.6246, 0.55 ) }
    dend_43 { pt3dadd( 68.0097, 98.6599, 10.7608, 0.28 ) }
    dend_43 { pt3dadd( 68.5203, 99.7538, 10.7744, 0.55 ) }
    dend_43 { pt3dadd( 69.7911, 102.363, 10.6497, 0.28 ) }
    dend_43 { pt3dadd( 71.7249, 106.458, 10.3861, 0.28 ) }
    dend_43 { pt3dadd( 72.826, 108.705, 10.1762, 0.83 ) }
    dend_43 { pt3dadd( 75.2506, 113.334, 9.64493, 0.28 ) }
    dend_43 { pt3dadd( 75.9792, 114.635, 9.43836, 0.55 ) }
    dend_43 { pt3dadd( 78.5118, 118.713, 8.70741, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 81/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 13.0494, 71.8844, -5.57508, 0.28 ) }
    dend_42 { pt3dadd( 12.0904, 73.7439, -5.93218, 0.28 ) }
    dend_42 { pt3dadd( 11.8127, 74.1453, -6.05037, 0.55 ) }
    dend_42 { pt3dadd( 9.56306, 76.9246, -7.01806, 0.28 ) }
    dend_42 { pt3dadd( 9.3001, 77.2097, -7.13769, 0.55 ) }
    dend_42 { pt3dadd( 8.56522, 77.8928, -7.47299, 0.28 ) }
    dend_42 { pt3dadd( 7.87558, 78.4248, -7.79578, 0.55 ) }
    dend_42 { pt3dadd( 5.40334, 79.6901, -8.97575, 0.28 ) }
    dend_42 { pt3dadd( 5.06203, 79.7957, -9.15848, 0.55 ) }
    dend_42 { pt3dadd( 4.15795, 79.9564, -9.65191, 0.28 ) }
    dend_42 { pt3dadd( 3.14954, 80.1161, -10.2324, 0.83 ) }
    dend_42 { pt3dadd( 1.76162, 80.3114, -11.0322, 0.28 ) }
    dend_42 { pt3dadd( 0.676817, 80.4942, -11.6022, 0.83 ) }
    dend_42 { pt3dadd( -3.18112, 81.2898, -13.6384, 0.28 ) }
    dend_42 { pt3dadd( -4.57575, 81.6297, -14.3924, 0.55 ) }
    dend_42 { pt3dadd( -6.06296, 82.0272, -15.194, 0.28 ) }
    dend_42 { pt3dadd( -6.94893, 82.3002, -15.7114, 0.55 ) }
    dend_42 { pt3dadd( -10.8829, 83.5534, -18.079, 0.28 ) }
    dend_42 { pt3dadd( -11.9816, 83.8979, -18.7466, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_42 { pt3dadd( -13.0441, 84.2211, -19.3881, 0.28 ) }
    dend_42 { pt3dadd( -13.8268, 84.4343, -19.8706, 0.55 ) }
    dend_42 { pt3dadd( -16.4603, 85.0609, -21.4838, 0.28 ) }
    dend_42 { pt3dadd( -17.7577, 85.2994, -22.3291, 0.28 ) }
    dend_42 { pt3dadd( -18.7688, 85.4082, -23.0172, 0.55 ) }
    dend_42 { pt3dadd( -19.7491, 85.493, -23.6495, 0.28 ) }
    dend_42 { pt3dadd( -20.7722, 85.6026, -24.3165, 0.83 ) }
    dend_42 { pt3dadd( -22.607, 85.8472, -25.5449, 0.28 ) }
    dend_42 { pt3dadd( -23.7024, 86.0182, -26.2743, 0.83 ) }
    dend_42 { pt3dadd( -26.8826, 86.67, -28.6041, 0.28 ) }
    dend_42 { pt3dadd( -27.8118, 86.9216, -29.372, 0.55 ) }
    dend_42 { pt3dadd( -29.0959, 87.3781, -30.5277, 0.28 ) }
    dend_42 { pt3dadd( -29.3677, 87.4764, -30.8012, 0.55 ) }
    dend_42 { pt3dadd( -29.6926, 87.5893, -31.155, 0.28 ) }
    dend_42 { pt3dadd( -30.3551, 87.7971, -31.9282, 0.55 ) }
    dend_42 { pt3dadd( -31.9429, 88.1941, -33.853, 0.28 ) }
    dend_42 { pt3dadd( -33.1591, 88.3468, -35.1412, 0.83 ) }
    dend_42 { pt3dadd( -36.9401, 88.5032, -38.7822, 0.28 ) }
    dend_42 { pt3dadd( -38.1056, 88.4865, -39.8183, 0.55 ) }
    dend_42 { pt3dadd( -39.3637, 88.4216, -40.845, 0.28 ) }
    dend_42 { pt3dadd( -40.0016, 88.3737, -41.2941, 0.55 ) }
    dend_42 { pt3dadd( -43.3942, 88.0382, -43.3948, 0.28 ) }
    dend_42 { pt3dadd( -44.4291, 87.9217, -43.9761, 0.55 ) }
    dend_42 { pt3dadd( -45.8048, 87.7934, -44.5987, 0.28 ) }
    dend_42 { pt3dadd( -47.0048, 87.7102, -45.0796, 0.55 ) }
    dend_42 { pt3dadd( -49.3074, 87.6113, -45.9119, 0.28 ) }
    dend_42 { pt3dadd( -50.3556, 87.612, -46.3228, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 27/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -18.3372, -44.387, 6.70099, 0.55 ) }
    dend_37 { pt3dadd( -15.8435, -44.1965, 6.26274, 0.55 ) }
    dend_37 { pt3dadd( -14.1297, -44.0656, 5.96157, 0.28 ) }
    dend_37 { pt3dadd( -12.8081, -43.9647, 5.72932, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 31/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -18.3372, -44.387, 6.70099, 0.28 ) }
    dend_34 { pt3dadd( -18.8888, -51.7113, 6.27687, 0.28 ) }
    dend_34 { pt3dadd( -19.1111, -54.4801, 6.29734, 0.83 ) }
    dend_34 { pt3dadd( -19.2024, -55.8012, 6.18747, 0.83 ) }
    dend_34 { pt3dadd( -19.3481, -58.8492, 5.82493, 0.28 ) }
    dend_34 { pt3dadd( -19.3855, -59.925, 5.68811, 0.55 ) }
    dend_34 { pt3dadd( -19.4059, -61.8038, 5.46707, 0.28 ) }
    dend_34 { pt3dadd( -19.3573, -63.9048, 5.24289, 0.55 ) }
    dend_34 { pt3dadd( -18.9798, -71.3676, 4.23036, 0.28 ) }
    dend_34 { pt3dadd( -18.8354, -72.7606, 4.01423, 0.55 ) }
    dend_34 { pt3dadd( -18.3114, -76.0808, 3.43179, 0.28 ) }
    dend_34 { pt3dadd( -17.9887, -77.8212, 3.06496, 0.55 ) }
    dend_34 { pt3dadd( -17.5977, -79.8004, 2.6036, 0.28 ) }
    dend_34 { pt3dadd( -17.0511, -82.3632, 2.02419, 1.38 ) }
    dend_34 { pt3dadd( -16.6562, -84.2242, 1.6733, 0.83 ) }
    dend_34 { pt3dadd( -16.1697, -87.1054, 1.10007, 0.83 ) }
    dend_34 { pt3dadd( -15.6733, -91.0655, 0.223662, 0.28 ) }
    dend_34 { pt3dadd( -15.6299, -92.3951, -0.135241, 0.55 ) }
    dend_34 { pt3dadd( -15.6995, -93.5524, -0.451342, 0.28 ) }
    dend_34 { pt3dadd( -15.9797, -95.4798, -1.0212, 0.55 ) }
    dend_34 { pt3dadd( -16.4385, -97.4779, -1.55971, 0.28 ) }
    dend_34 { pt3dadd( -16.9734, -99.4619, -2.01974, 1.38 ) }
    dend_34 { pt3dadd( -17.997, -102.931, -2.65081, 0.55 ) }
    dend_34 { pt3dadd( -18.6939, -105.565, -3.00261, 0.28 ) }
    dend_34 { pt3dadd( -19.1575, -107.364, -3.17788, 0.55 ) }
    dend_34 { pt3dadd( -20.0168, -111.029, -3.44286, 0.28 ) }
    dend_34 { pt3dadd( -20.4485, -113.106, -3.57104, 1.11 ) }
    dend_34 { pt3dadd( -20.8544, -115.171, -3.62148, 1.11 ) }
    dend_34 { pt3dadd( -22.5823, -124.724, -3.65931, 0.28 ) }
    dend_34 { pt3dadd( -22.9295, -126.751, -3.73888, 0.83 ) }
    dend_34 { pt3dadd( -24.0303, -133.356, -4.11367, 0.28 ) }
    dend_34 { pt3dadd( -24.3166, -135.297, -4.27898, 0.55 ) }
    dend_34 { pt3dadd( -24.9845, -139.994, -4.75217, 0.28 ) }
    dend_34 { pt3dadd( -25.3836, -143.018, -5.10694, 0.83 ) }
    dend_34 { pt3dadd( -25.9972, -147.847, -5.81174, 0.28 ) }
    dend_34 { pt3dadd( -26.1354, -149.018, -6.00528, 0.83 ) }
    dend_34 { pt3dadd( -26.7176, -154.084, -6.9607, 0.28 ) }
    dend_34 { pt3dadd( -26.9834, -156.408, -7.44711, 0.83 ) }
    dend_34 { pt3dadd( -27.0087, -156.781, -7.54805, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 70/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 35.854, -17.8457, -3.66503, 0.28 ) }
    dend_18 { pt3dadd( 35.0723, -14.7157, -2.81135, 0.28 ) }
    dend_18 { pt3dadd( 34.8447, -13.8046, -2.56285, 0.83 ) }
    dend_18 { pt3dadd( 33.9719, -10.3102, -1.60976, 0.28 ) }
    dend_18 { pt3dadd( 33.6644, -9.07906, -1.27396, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 75/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 35.854, -17.8457, -3.66503, 0.28 ) }
    dend_17 { pt3dadd( 37.674, -16.8316, -2.10315, 0.28 ) }
    dend_17 { pt3dadd( 38.3946, -16.36, -1.49575, 0.83 ) }
    dend_17 { pt3dadd( 39.6987, -15.4222, -0.412519, 0.83 ) }
    dend_17 { pt3dadd( 42.4018, -13.3434, 1.72346, 0.28 ) }
    dend_17 { pt3dadd( 45.3567, -10.9945, 3.99423, 0.28 ) }
    dend_17 { pt3dadd( 46.0721, -10.4381, 4.53615, 0.83 ) }
    dend_17 { pt3dadd( 47.5574, -9.21794, 5.65262, 0.28 ) }
    dend_17 { pt3dadd( 48.8264, -8.16063, 6.56534, 0.83 ) }
    dend_17 { pt3dadd( 50.9451, -6.39116, 8.04088, 0.28 ) }
    dend_17 { pt3dadd( 51.585, -5.96258, 8.3959, 0.55 ) }
    dend_17 { pt3dadd( 52.7023, -5.4666, 8.92368, 0.28 ) }
    dend_17 { pt3dadd( 53.1492, -5.30196, 9.12576, 0.55 ) }
    dend_17 { pt3dadd( 54.8122, -4.85911, 9.83561, 0.28 ) }
    dend_17 { pt3dadd( 55.3517, -4.7572, 10.0487, 0.83 ) }
    dend_17 { pt3dadd( 61.6821, -4.00446, 12.3825, 0.28 ) }
    dend_17 { pt3dadd( 62.7712, -3.87725, 12.7562, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 92/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 19.3247, -53.0136, -1.77824, 0.83 ) }
    dend_13 { pt3dadd( 19.253, -53.2181, -1.81904, 0.83 ) }
    dend_13 { pt3dadd( 17.4516, -57.2153, -2.77399, 0.28 ) }
    dend_13 { pt3dadd( 16.017, -60.1696, -3.45127, 0.83 ) }
    dend_13 { pt3dadd( 13.7842, -64.4943, -4.48887, 0.28 ) }
    dend_13 { pt3dadd( 12.8275, -66.3075, -4.90787, 0.83 ) }
    dend_13 { pt3dadd( 10.2236, -71.1807, -6.10302, 0.28 ) }
    dend_13 { pt3dadd( 8.65057, -73.9393, -6.90373, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_13 { pt3dadd( 7.77707, -75.314, -7.37803, 0.55 ) }
    dend_13 { pt3dadd( 6.39204, -77.555, -8.33869, 0.28 ) }
    dend_13 { pt3dadd( 5.8183, -78.641, -8.82884, 0.55 ) }
    dend_13 { pt3dadd( 4.8984, -80.684, -9.73106, 0.83 ) }
    dend_13 { pt3dadd( 4.17844, -82.9855, -10.7782, 0.28 ) }
    dend_13 { pt3dadd( 3.99168, -83.7227, -11.1791, 0.55 ) }
    dend_13 { pt3dadd( 3.01688, -88.1122, -13.8754, 0.28 ) }
    dend_13 { pt3dadd( 2.71974, -90.0429, -15.114, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 8/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 19.3247, -53.0136, -1.77824, 0.28 ) }
    dend_12 { pt3dadd( 21.4153, -53.5616, -1.31389, 0.28 ) }
    dend_12 { pt3dadd( 23.6135, -53.7626, -0.755701, 0.83 ) }
    dend_12 { pt3dadd( 28.6125, -53.9146, 0.493636, 0.28 ) }
    dend_12 { pt3dadd( 30.9719, -53.8753, 1.01423, 0.83 ) }
    dend_12 { pt3dadd( 35.5004, -53.6824, 1.91163, 0.28 ) }
    dend_12 { pt3dadd( 36.7536, -53.5875, 2.11619, 0.55 ) }
    dend_12 { pt3dadd( 45.6611, -52.3733, 3.28323, 0.28 ) }
    dend_12 { pt3dadd( 47.0473, -52.1238, 3.44315, 0.55 ) }
    dend_12 { pt3dadd( 50.98, -51.2686, 3.77328, 0.28 ) }
    dend_12 { pt3dadd( 52.4599, -50.9324, 3.89047, 0.55 ) }
    dend_12 { pt3dadd( 57.7563, -49.6439, 4.16977, 0.28 ) }
    dend_12 { pt3dadd( 59.4227, -49.2364, 4.18996, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 21/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 34.3777, 2.71694, 13.2406, 0.28 ) }
    dend_9 { pt3dadd( 35.033, 4.96134, 12.7422, 0.28 ) }
    dend_9 { pt3dadd( 35.1235, 5.23378, 12.6723, 0.55 ) }
    dend_9 { pt3dadd( 37.3587, 11.7667, 10.9715, 0.28 ) }
    dend_9 { pt3dadd( 37.673, 12.6526, 10.7873, 0.55 ) }
    dend_9 { pt3dadd( 38.3777, 14.5899, 10.4328, 0.28 ) }
    dend_9 { pt3dadd( 38.8299, 15.8332, 10.2053, 0.83 ) }
    dend_9 { pt3dadd( 41.401, 22.7475, 8.97829, 0.28 ) }
    dend_9 { pt3dadd( 41.8305, 23.8604, 8.79076, 0.55 ) }
    dend_9 { pt3dadd( 44.138, 29.5132, 7.96444, 0.28 ) }
    dend_9 { pt3dadd( 44.4044, 30.155, 7.87628, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 32/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 34.3777, 2.71694, 13.2406, 0.28 ) }
    dend_8 { pt3dadd( 35.7115, 4.71394, 12.2185, 0.28 ) }
    dend_8 { pt3dadd( 36.2918, 5.58466, 11.7717, 0.55 ) }
    dend_8 { pt3dadd( 37.8056, 7.87937, 10.4958, 0.28 ) }
    dend_8 { pt3dadd( 38.2808, 8.57881, 10.0701, 0.55 ) }
    dend_8 { pt3dadd( 41.4408, 13.1849, 7.14926, 0.28 ) }
    dend_8 { pt3dadd( 42.2092, 14.2846, 6.41325, 0.83 ) }
    dend_8 { pt3dadd( 45.0189, 18.2527, 3.57632, 0.28 ) }
    dend_8 { pt3dadd( 46.0178, 19.6514, 2.5339, 0.83 ) }
    dend_8 { pt3dadd( 47.3628, 21.4715, 1.09916, 0.28 ) }
    dend_8 { pt3dadd( 47.6689, 21.8795, 0.755438, 0.55 ) }
    dend_8 { pt3dadd( 48.4986, 22.9275, -0.305402, 0.28 ) }
    dend_8 { pt3dadd( 49.0023, 23.5225, -0.98796, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 45/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 19.6882, -33.0234, -4.63455, 0.83 ) }
    dend_4 { pt3dadd( 19.6592, -33.2444, -4.58022, 0.83 ) }
    dend_4 { pt3dadd( 19.4102, -35.9707, -3.87054, 0.28 ) }
    dend_4 { pt3dadd( 19.3548, -37.2299, -3.61111, 0.55 ) }
    dend_4 { pt3dadd( 19.2746, -39.8212, -2.98284, 0.28 ) }
    dend_4 { pt3dadd( 19.2345, -41.5372, -2.62211, 0.55 ) }
    dend_4 { pt3dadd( 19.1552, -44.6426, -1.99286, 0.28 ) }
    dend_4 { pt3dadd( 19.1652, -46.6405, -1.61715, 0.55 ) }
    dend_4 { pt3dadd( 19.2444, -49.4192, -1.1257, 0.28 ) }
    dend_4 { pt3dadd( 19.3424, -52.1574, -0.662102, 0.83 ) }
    dend_4 { pt3dadd( 19.4891, -55.9284, -0.16073, 0.28 ) }
    dend_4 { pt3dadd( 19.5784, -58.6706, 0.255187, 0.83 ) }
    dend_4 { pt3dadd( 19.6215, -60.7226, 0.645824, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 58/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 19.6882, -33.0234, -4.63455, 0.28 ) }
    dend_3 { pt3dadd( 17.9478, -33.2481, -2.50354, 0.28 ) }
    dend_3 { pt3dadd( 17.2826, -33.3248, -2.06113, 0.55 ) }
    dend_3 { pt3dadd( 14.0017, -33.7172, -0.124701, 0.28 ) }
    dend_3 { pt3dadd( 13.319, -33.8279, 0.283324, 0.55 ) }
    dend_3 { pt3dadd( 11.1062, -34.2548, 1.67353, 0.28 ) }
    dend_3 { pt3dadd( 9.89211, -34.4891, 2.43632, 0.83 ) }
    dend_3 { pt3dadd( 4.06505, -35.4294, 5.74246, 0.28 ) }
    dend_3 { pt3dadd( 2.76857, -35.6506, 6.42827, 0.83 ) }
    dend_3 { pt3dadd( 0.484469, -36.1486, 7.48803, 0.28 ) }
    dend_3 { pt3dadd( -0.787268, -36.4424, 8.11084, 0.83 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 69/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -75.5721, 7.26286, 3.12511, 0.55 ) }
    dend_55 { pt3dadd( -77.1536, 6.4243, 2.31775, 0.55 ) }
    dend_55 { pt3dadd( -78.5314, 5.7034, 1.42521, 0.28 ) }
    dend_55 { pt3dadd( -79.6065, 5.14294, 0.635533, 0.28 ) }
    dend_55 { pt3dadd( -81.8061, 4.02931, -1.33, 0.55 ) }
    dend_55 { pt3dadd( -82.7719, 3.56092, -2.2427, 0.28 ) }
    dend_55 { pt3dadd( -82.9967, 3.45087, -2.48338, 0.55 ) }
    dend_55 { pt3dadd( -84.4811, 2.72273, -4.46095, 0.28 ) }
    dend_55 { pt3dadd( -85.0592, 2.43737, -5.39178, 0.55 ) }
    dend_55 { pt3dadd( -86.235, 1.85363, -7.56339, 0.28 ) }
    dend_55 { pt3dadd( -86.5157, 1.70415, -8.16775, 0.55 ) }
    dend_55 { pt3dadd( -87.5359, 1.07761, -10.4216, 0.28 ) }
    dend_55 { pt3dadd( -87.65, 0.97815, -10.7106, 0.83 ) }
    dend_55 { pt3dadd( -88.3272, 0.184223, -12.5862, 0.28 ) }
    dend_55 { pt3dadd( -88.5935, -0.271024, -13.4809, 0.55 ) }
    dend_55 { pt3dadd( -89.3054, -1.81987, -15.9482, 0.28 ) }
    dend_55 { pt3dadd( -89.6003, -2.626, -17.0434, 0.83 ) }
    dend_55 { pt3dadd( -90.1172, -4.25754, -18.9089, 0.28 ) }
    dend_55 { pt3dadd( -90.2645, -4.77717, -19.4304, 0.55 ) }
    dend_55 { pt3dadd( -90.9515, -7.423, -21.7546, 0.28 ) }
    dend_55 { pt3dadd( -91.3859, -9.16835, -23.1782, 0.83 ) }
    dend_55 { pt3dadd( -91.8639, -11.0875, -24.5665, 0.28 ) }
    dend_55 { pt3dadd( -92.1413, -12.1318, -25.2794, 0.55 ) }
    dend_55 { pt3dadd( -92.4616, -13.1928, -25.9673, 0.28 ) }
    dend_55 { pt3dadd( -92.9765, -14.8264, -27.0229, 0.83 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 94/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -75.5721, 7.26286, 3.12511, 0.28 ) }
    dend_54 { pt3dadd( -76.9528, 8.76309, 2.73864, 0.28 ) }
    dend_54 { pt3dadd( -77.3989, 9.24461, 2.64127, 0.55 ) }
    dend_54 { pt3dadd( -78.8541, 10.7994, 2.3816, 0.28 ) }
    dend_54 { pt3dadd( -79.8641, 11.7225, 2.27768, 0.55 ) }
    dend_54 { pt3dadd( -86.1958, 17.488, 1.51756, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_54 { pt3dadd( -86.7641, 17.9841, 1.46386, 0.55 ) }
    dend_54 { pt3dadd( -88.7163, 19.608, 1.35419, 0.28 ) }
    dend_54 { pt3dadd( -89.2141, 20.0488, 1.31571, 0.55 ) }
    dend_54 { pt3dadd( -93.9831, 24.4299, 0.920117, 0.28 ) }
    dend_54 { pt3dadd( -96.5904, 26.9453, 0.594324, 0.55 ) }
    dend_54 { pt3dadd( -98.9315, 29.2059, 0.243874, 0.28 ) }
    dend_54 { pt3dadd( -99.7709, 30.0632, 0.0560199, 0.55 ) }
    dend_54 { pt3dadd( -103.344, 33.9063, -0.921271, 0.28 ) }
    dend_54 { pt3dadd( -103.689, 34.3467, -1.07634, 0.55 ) }
    dend_54 { pt3dadd( -104.767, 36.0065, -1.82437, 0.28 ) }
    dend_54 { pt3dadd( -105.499, 37.2039, -2.46227, 0.55 ) }
    dend_54 { pt3dadd( -107.344, 40.6536, -4.51484, 0.28 ) }
    dend_54 { pt3dadd( -107.633, 41.2578, -4.88393, 0.55 ) }
    dend_54 { pt3dadd( -109.745, 46.0936, -7.84367, 0.28 ) }
    dend_54 { pt3dadd( -109.986, 46.7614, -8.24544, 0.55 ) }
    dend_54 { pt3dadd( -110.484, 48.83, -9.47119, 0.28 ) }
    dend_54 { pt3dadd( -110.681, 50.4107, -10.3842, 0.55 ) }
    dend_54 { pt3dadd( -110.754, 52.7648, -11.6212, 0.28 ) }
    dend_54 { pt3dadd( -110.78, 53.5428, -11.9743, 0.28 ) }
    dend_54 { pt3dadd( -110.78, 53.5428, -11.9743, 0.55 ) }
    dend_54 { pt3dadd( -111.319, 56.4957, -13.3007, 0.28 ) }
    dend_54 { pt3dadd( -111.525, 57.5076, -13.765, 0.55 ) }
    dend_54 { pt3dadd( -112.377, 61.2552, -15.5906, 0.28 ) }
    dend_54 { pt3dadd( -112.578, 62.0044, -15.9663, 0.55 ) }
    dend_54 { pt3dadd( -114.953, 70.0518, -20.104, 0.28 ) }
    dend_54 { pt3dadd( -115.841, 72.7764, -21.5246, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 26/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -8.71798, 31.6733, 7.81272, 0.28 ) }
    dend_50 { pt3dadd( -5.70206, 33.2259, 7.84281, 0.28 ) }
    dend_50 { pt3dadd( -4.26427, 33.9661, 7.85716, 0.55 ) }
    dend_50 { pt3dadd( -1.91022, 35.178, 7.88064, 0.28 ) }
    dend_50 { pt3dadd( -0.861701, 35.7178, 7.89111, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 31/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -8.71798, 31.6733, 7.81272, 0.28 ) }
    dend_49 { pt3dadd( -9.76901, 33.6984, 7.95486, 0.28 ) }
    dend_49 { pt3dadd( -10.2504, 34.7598, 8.04403, 0.55 ) }
    dend_49 { pt3dadd( -11.2038, 36.9513, 8.2678, 0.28 ) }
    dend_49 { pt3dadd( -11.4747, 37.624, 8.30757, 0.55 ) }
    dend_49 { pt3dadd( -12.1209, 39.4354, 8.31271, 0.28 ) }
    dend_49 { pt3dadd( -12.1926, 39.6661, 8.31472, 0.55 ) }
    dend_49 { pt3dadd( -12.5891, 41.507, 8.32161, 0.28 ) }
    dend_49 { pt3dadd( -12.7638, 42.2253, 8.32128, 0.55 ) }
    dend_49 { pt3dadd( -13.1646, 43.7748, 8.33189, 0.28 ) }
    dend_49 { pt3dadd( -13.5507, 45.2661, 8.316, 0.83 ) }
    dend_49 { pt3dadd( -14.1252, 47.5403, 8.42074, 0.28 ) }
    dend_49 { pt3dadd( -14.3677, 48.5306, 8.49732, 0.55 ) }
    dend_49 { pt3dadd( -15.6329, 54.3501, 9.08576, 0.28 ) }
    dend_49 { pt3dadd( -15.8332, 55.38, 9.21607, 0.83 ) }
    dend_49 { pt3dadd( -16.4317, 58.9729, 9.8084, 0.28 ) }
    dend_49 { pt3dadd( -16.9015, 62.3995, 10.4441, 0.28 ) }
    dend_49 { pt3dadd( -17.032, 64.4099, 10.8439, 0.83 ) }
    dend_49 { pt3dadd( -16.9884, 66.7411, 11.3771, 0.28 ) }
    dend_49 { pt3dadd( -16.8517, 67.6882, 11.6423, 0.55 ) }
    dend_49 { pt3dadd( -16.3834, 69.9274, 12.2791, 0.28 ) }
    dend_49 { pt3dadd( -16.0865, 71.0474, 12.5991, 0.55 ) }
    dend_49 { pt3dadd( -15.1377, 74.2337, 13.3761, 0.28 ) }
    dend_49 { pt3dadd( -14.7075, 75.5225, 13.749, 0.55 ) }
    dend_49 { pt3dadd( -14.0904, 77.2668, 14.2863, 0.28 ) }
    dend_49 { pt3dadd( -13.6583, 78.4011, 14.6231, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 57/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 78.5118, 118.713, 8.70741, 0.28 ) }
    dend_45 { pt3dadd( 80.1561, 118.686, 9.25712, 0.28 ) }
    dend_45 { pt3dadd( 81.1237, 118.634, 9.60764, 0.55 ) }
    dend_45 { pt3dadd( 82.6284, 118.491, 10.0254, 0.55 ) }
    dend_45 { pt3dadd( 84.591, 118.309, 10.5119, 0.28 ) }
    dend_45 { pt3dadd( 85.401, 118.212, 10.7057, 0.55 ) }
    dend_45 { pt3dadd( 87.1791, 117.99, 11.1344, 0.28 ) }
    dend_45 { pt3dadd( 87.9877, 117.89, 11.3043, 0.55 ) }
    dend_45 { pt3dadd( 90.5739, 117.674, 11.8556, 0.28 ) }
    dend_45 { pt3dadd( 91.486, 117.599, 12.0447, 0.55 ) }
    dend_45 { pt3dadd( 93.8329, 117.434, 12.553, 0.28 ) }
    dend_45 { pt3dadd( 94.406, 117.403, 12.6615, 0.55 ) }
    dend_45 { pt3dadd( 97.0806, 117.357, 13.169, 0.28 ) }
    dend_45 { pt3dadd( 98.4405, 117.392, 13.453, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 71/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 78.5118, 118.713, 8.70741, 0.28 ) }
    dend_44 { pt3dadd( 81.9616, 115.926, 8.31935, 0.28 ) }
    dend_44 { pt3dadd( 82.8873, 115.179, 8.21523, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 74/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -27.0087, -156.781, -7.54805, 0.28 ) }
    dend_36 { pt3dadd( -27.5217, -159.564, -7.21697, 0.28 ) }
    dend_36 { pt3dadd( -27.6754, -160.496, -7.11421, 0.55 ) }
    dend_36 { pt3dadd( -28.2541, -164.604, -6.75072, 0.28 ) }
    dend_36 { pt3dadd( -28.3749, -165.447, -6.69436, 0.83 ) }
    dend_36 { pt3dadd( -28.5808, -166.885, -6.6166, 0.83 ) }
    dend_36 { pt3dadd( -28.7585, -168.076, -6.55747, 0.28 ) }
    dend_36 { pt3dadd( -28.9206, -169.253, -6.51523, 0.55 ) }
    dend_36 { pt3dadd( -29.4794, -173.169, -6.34402, 0.28 ) }
    dend_36 { pt3dadd( -29.6577, -174.188, -6.30525, 0.83 ) }
    dend_36 { pt3dadd( -30.3842, -177.613, -6.18191, 0.28 ) }
    dend_36 { pt3dadd( -30.804, -179.184, -6.09165, 0.83 ) }
    dend_36 { pt3dadd( -31.383, -181.061, -5.95139, 0.28 ) }
    dend_36 { pt3dadd( -31.8886, -182.569, -5.82197, 0.83 ) }
    dend_36 { pt3dadd( -33.0481, -185.662, -5.49823, 0.28 ) }
    dend_36 { pt3dadd( -33.6865, -187.275, -5.30364, 0.83 ) }
    dend_36 { pt3dadd( -34.609, -189.287, -5.04406, 0.28 ) }
    dend_36 { pt3dadd( -35.4317, -190.942, -4.82791, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 92/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -27.0087, -156.781, -7.54805, 0.28 ) }
    dend_35 { pt3dadd( -27.1086, -158.126, -7.68265, 0.28 ) }
    dend_35 { pt3dadd( -27.3651, -161.439, -8.00377, 0.28 ) }
    dend_35 { pt3dadd( -27.7049, -165.347, -8.36721, 0.28 ) }
    dend_35 { pt3dadd( -28.1001, -170.064, -8.80573, 0.28 ) }
    dend_35 { pt3dadd( -28.3456, -173.756, -9.16295, 0.28 ) }
    dend_35 { pt3dadd( -28.5373, -177.258, -9.50772, 0.28 ) }
    dend_35 { pt3dadd( -28.7082, -180.577, -9.82302, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_35 { pt3dadd( -28.8182, -182.51, -10.0032, 0.28 ) }
    dend_35 { pt3dadd( -28.9918, -185.506, -10.2811, 0.28 ) }
    dend_35 { pt3dadd( -29.255, -194.092, -11.1429, 0.28 ) }
    dend_35 { pt3dadd( -29.2664, -196.142, -11.3647, 0.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 4/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.71974, -90.0429, -15.114, 0.28 ) }
    dend_15 { pt3dadd( 6.36376, -95.0485, -14.2699, 0.28 ) }
    dend_15 { pt3dadd( 6.99658, -95.9177, -14.1233, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 7/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 2.71974, -90.0429, -15.114, 0.28 ) }
    dend_14 { pt3dadd( 0.885665, -92.5311, -15.3321, 0.28 ) }
    dend_14 { pt3dadd( 0.108626, -93.5853, -15.4245, 0.55 ) }
    dend_14 { pt3dadd( -1.26054, -95.4428, -15.5874, 0.28 ) }
    dend_14 { pt3dadd( -2.77123, -97.4922, -15.7671, 0.83 ) }
    dend_14 { pt3dadd( -6.57424, -102.651, -16.2194, 0.28 ) }
    dend_14 { pt3dadd( -7.56432, -103.995, -16.3371, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 14/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 19.6215, -60.7226, 0.645824, 0.83 ) }
    dend_6 { pt3dadd( 20.1557, -61.9252, 0.431367, 0.83 ) }
    dend_6 { pt3dadd( 21.8467, -66.4936, -0.17997, 0.28 ) }
    dend_6 { pt3dadd( 22.1489, -67.4982, -0.359043, 0.83 ) }
    dend_6 { pt3dadd( 23.0137, -70.7623, -0.99271, 0.28 ) }
    dend_6 { pt3dadd( 23.2341, -71.9596, -1.07712, 0.55 ) }
    dend_6 { pt3dadd( 23.4544, -73.7132, -1.06159, 0.28 ) }
    dend_6 { pt3dadd( 23.4923, -75.0207, -0.914536, 0.55 ) }
    dend_6 { pt3dadd( 23.1878, -78.0811, -0.132889, 0.28 ) }
    dend_6 { pt3dadd( 22.917, -80.1504, 0.44616, 0.83 ) }
    dend_6 { pt3dadd( 22.057, -85.5752, 1.89902, 0.28 ) }
    dend_6 { pt3dadd( 21.8552, -86.8733, 2.22339, 0.83 ) }
    dend_6 { pt3dadd( 21.7148, -87.904, 2.45919, 0.83 ) }
    dend_6 { pt3dadd( 20.7568, -95.3538, 4.11335, 0.28 ) }
    dend_6 { pt3dadd( 20.6584, -96.172, 4.29618, 0.55 ) }
    dend_6 { pt3dadd( 19.9531, -101.788, 5.2784, 0.28 ) }
    dend_6 { pt3dadd( 19.8538, -102.8, 5.30992, 0.55 ) }
    dend_6 { pt3dadd( 19.5207, -106.92, 5.19804, 0.28 ) }
    dend_6 { pt3dadd( 19.486, -107.592, 5.14894, 0.83 ) }
    dend_6 { pt3dadd( 19.4488, -109.264, 4.93926, 0.83 ) }
    dend_6 { pt3dadd( 19.354, -112.132, 4.5973, 0.83 ) }
    dend_6 { pt3dadd( 18.8733, -122.032, 3.39509, 0.28 ) }
    dend_6 { pt3dadd( 18.7572, -122.969, 3.28928, 0.55 ) }
    dend_6 { pt3dadd( 17.744, -128.51, 2.7021, 0.28 ) }
    dend_6 { pt3dadd( 17.4972, -129.527, 2.6074, 0.55 ) }
    dend_6 { pt3dadd( 14.8169, -137.496, 1.98303, 0.28 ) }
    dend_6 { pt3dadd( 13.8378, -139.73, 1.88318, 0.83 ) }
    dend_6 { pt3dadd( 10.4229, -145.411, 1.95835, 0.28 ) }
    dend_6 { pt3dadd( 9.6539, -146.489, 1.97031, 0.55 ) }
    dend_6 { pt3dadd( 8.39526, -147.957, 1.98316, 0.55 ) }
    dend_6 { pt3dadd( 5.80263, -150.733, 2.02591, 0.28 ) }
    dend_6 { pt3dadd( 4.95187, -151.568, 2.03539, 0.55 ) }
    dend_6 { pt3dadd( 3.83758, -152.831, 2.06507, 0.28 ) }
    dend_6 { pt3dadd( 3.31264, -153.609, 2.0921, 0.55 ) }
    dend_6 { pt3dadd( 1.95683, -155.909, 2.18228, 0.28 ) }
    dend_6 { pt3dadd( 1.4507, -156.844, 2.23767, 0.55 ) }
    dend_6 { pt3dadd( -0.392536, -160.458, 2.48604, 0.28 ) }
    dend_6 { pt3dadd( -1.04663, -161.778, 2.59926, 0.55 ) }
    dend_6 { pt3dadd( -1.48246, -162.671, 2.70577, 0.28 ) }
    dend_6 { pt3dadd( -2.01347, -164.049, 2.9716, 0.55 ) }
    dend_6 { pt3dadd( -3.36161, -168.334, 4.09031, 0.28 ) }
    dend_6 { pt3dadd( -3.64437, -169.32, 4.37928, 0.83 ) }
    dend_6 { pt3dadd( -4.16027, -171.461, 5.11653, 0.28 ) }
    dend_6 { pt3dadd( -4.31075, -172.256, 5.4048, 0.55 ) }
    dend_6 { pt3dadd( -4.99776, -178.066, 7.69578, 0.28 ) }
    dend_6 { pt3dadd( -4.9882, -178.678, 7.96114, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 60/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 19.6215, -60.7226, 0.645824, 0.28 ) }
    dend_5 { pt3dadd( 20.3354, -59.865, 0.118687, 0.28 ) }
    dend_5 { pt3dadd( 20.7123, -59.2527, -0.278822, 0.55 ) }
    dend_5 { pt3dadd( 21.6771, -57.4689, -1.38223, 0.28 ) }
    dend_5 { pt3dadd( 21.9361, -56.6445, -1.77841, 0.55 ) }
    dend_5 { pt3dadd( 22.3207, -55.0808, -2.43364, 0.28 ) }
    dend_5 { pt3dadd( 22.6458, -53.6904, -2.83941, 0.83 ) }
    dend_5 { pt3dadd( 23.5222, -49.4896, -3.77887, 0.28 ) }
    dend_5 { pt3dadd( 23.6843, -48.5794, -3.93596, 0.83 ) }
    dend_5 { pt3dadd( 24.8938, -40.6219, -4.96799, 0.28 ) }
    dend_5 { pt3dadd( 25.1694, -38.3163, -5.23823, 0.83 ) }
    dend_5 { pt3dadd( 25.7365, -31.552, -5.85294, 0.28 ) }
    dend_5 { pt3dadd( 25.8009, -30.6053, -5.91827, 0.55 ) }
    dend_5 { pt3dadd( 25.9586, -28.0028, -5.97742, 0.28 ) }
    dend_5 { pt3dadd( 26.0276, -26.7562, -5.99019, 0.83 ) }
    dend_5 { pt3dadd( 26.1899, -23.109, -5.8413, 0.28 ) }
    dend_5 { pt3dadd( 26.1529, -21.5325, -5.86912, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 77/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -92.9765, -14.8264, -27.0229, 0.28 ) }
    dend_59 { pt3dadd( -95.9563, -13.7428, -27.3111, 0.28 ) }
    dend_59 { pt3dadd( -96.6109, -13.488, -27.3716, 0.55 ) }
    dend_59 { pt3dadd( -100.703, -11.9194, -27.5879, 0.28 ) }
    dend_59 { pt3dadd( -100.912, -11.8417, -27.5918, 0.55 ) }
    dend_59 { pt3dadd( -102.755, -11.2154, -27.5811, 0.28 ) }
    dend_59 { pt3dadd( -103.467, -10.9889, -27.5549, 0.83 ) }
    dend_59 { pt3dadd( -104.367, -10.7283, -27.4461, 0.83 ) }
    dend_59 { pt3dadd( -106.909, -10.0063, -26.9445, 0.28 ) }
    dend_59 { pt3dadd( -107.827, -9.72967, -26.5967, 0.55 ) }
    dend_59 { pt3dadd( -109.606, -9.12643, -25.7038, 0.28 ) }
    dend_59 { pt3dadd( -110.468, -8.55614, -25.0297, 0.83 ) }
    dend_59 { pt3dadd( -111.353, -7.77612, -24.193, 0.28 ) }
    dend_59 { pt3dadd( -111.493, -7.6193, -24.0395, 0.55 ) }
    dend_59 { pt3dadd( -113.012, -5.49447, -22.1419, 0.28 ) }
    dend_59 { pt3dadd( -113.58, -4.58905, -21.4113, 0.55 ) }
    dend_59 { pt3dadd( -116.713, 0.94564, -17.1304, 0.28 ) }
    dend_59 { pt3dadd( -117.035, 1.54158, -16.6946, 0.83 ) }
    dend_59 { pt3dadd( -118.167, 3.67532, -15.2324, 0.28 ) }
    dend_59 { pt3dadd( -118.462, 4.25657, -14.8519, 0.83 ) }
    dend_59 { pt3dadd( -118.96, 5.34137, -14.2281, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 98/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -92.9765, -14.8264, -27.0229, 0.28 ) }
    dend_56 { pt3dadd( -93.602, -18.6683, -30.9932, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_56 { pt3dadd( -93.7364, -19.4937, -31.8462, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 1/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -93.7364, -19.4937, -31.8462, 0.28 ) }
    dend_58 { pt3dadd( -92.5453, -22.3452, -35.4652, 0.28 ) }
    dend_58 { pt3dadd( -92.3475, -22.8186, -36.0661, 0.55 ) }
    dend_58 { pt3dadd( -92.1393, -23.3172, -36.6989, 0.28 ) }
    dend_58 { pt3dadd( -91.9889, -23.6772, -37.1559, 0.55 ) }
    dend_58 { pt3dadd( -91.0192, -25.9987, -40.1023, 0.28 ) }
    dend_58 { pt3dadd( -90.629, -26.9329, -41.2879, 0.83 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 8/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -93.7364, -19.4937, -31.8462, 0.28 ) }
    dend_57 { pt3dadd( -95.6568, -23.4139, -33.1559, 0.28 ) }
    dend_57 { pt3dadd( -96.6829, -24.7508, -33.8619, 0.55 ) }
    dend_57 { pt3dadd( -98.6436, -26.8493, -35.1656, 0.28 ) }
    dend_57 { pt3dadd( -99.6819, -27.7804, -35.8765, 0.55 ) }
    dend_57 { pt3dadd( -101.986, -29.7312, -37.493, 0.28 ) }
    dend_57 { pt3dadd( -103.276, -30.8236, -38.3809, 0.55 ) }
    dend_57 { pt3dadd( -107.524, -34.1829, -40.8849, 0.28 ) }
    dend_57 { pt3dadd( -108.084, -34.6871, -41.1925, 0.55 ) }
    dend_57 { pt3dadd( -110.202, -36.7606, -42.2575, 0.28 ) }
    dend_57 { pt3dadd( -112.185, -38.9612, -43.1002, 0.83 ) }
    dend_57 { pt3dadd( -114.214, -41.5184, -43.7514, 0.28 ) }
    dend_57 { pt3dadd( -114.799, -42.4459, -43.8847, 0.55 ) }
    dend_57 { pt3dadd( -118.062, -48.7001, -44.1785, 0.28 ) }
    dend_57 { pt3dadd( -118.718, -50.1804, -44.1653, 0.83 ) }
    dend_57 { pt3dadd( -120.012, -53.6255, -43.9855, 0.28 ) }
    dend_57 { pt3dadd( -120.545, -55.4184, -43.8794, 0.55 ) }
    dend_57 { pt3dadd( -121.835, -60.8736, -43.5617, 0.28 ) }
    dend_57 { pt3dadd( -122.048, -62.2269, -43.5458, 0.83 ) }
    dend_57 { pt3dadd( -122.537, -68.3476, -43.5851, 0.28 ) }
    dend_57 { pt3dadd( -122.608, -69.6626, -43.657, 0.83 ) }
    dend_57 { pt3dadd( -122.717, -73.9752, -44.0819, 0.28 ) }
    dend_57 { pt3dadd( -122.717, -75.3657, -44.2493, 0.83 ) }
    dend_57 { pt3dadd( -122.539, -82.5995, -45.2913, 0.28 ) }
    dend_57 { pt3dadd( -122.497, -84.4301, -45.6481, 0.55 ) }
    dend_57 { pt3dadd( -122.48, -89.5732, -47.0943, 0.28 ) }
    dend_57 { pt3dadd( -122.548, -91.0856, -47.5545, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_29, dend_22, dend_19, dend_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_29, dend_22, dend_19, dend_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_38, dend_29, dend_22, dend_19, dend_0, axon_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, axon_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_5 = new SectionList()
    dend_38 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_22 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_19 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_39 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_26 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_23 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_21 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_20 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_40 OneSecGrp_SectionRef_22.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_32 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_27 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_25 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_53 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_43 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_42 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_13 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_55 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_54 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_49 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_6 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_5 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_57 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_46 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_29 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_10 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_30 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_47 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_48 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_31 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_51 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_52 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_50 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_7 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_33 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_11 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_18 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_37 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_3 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_4 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_41 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_60 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_8 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_9 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_15 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_56 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_58 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_59 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_44 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_45 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_36 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_35 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_22 nseg = 3
    dend_19 nseg = 3
    dend_39 nseg = 3
    dend_26 nseg = 5
    dend_23 nseg = 9
    dend_21 nseg = 3
    dend_20 nseg = 3
    dend_40 nseg = 7
    dend_32 nseg = 9
    dend_27 nseg = 9
    dend_25 nseg = 3
    dend_53 nseg = 3
    dend_43 nseg = 5
    dend_42 nseg = 5
    dend_34 nseg = 5
    dend_13 nseg = 3
    dend_12 nseg = 3
    dend_55 nseg = 3
    dend_54 nseg = 5
    dend_49 nseg = 3
    dend_6 nseg = 7
    dend_5 nseg = 3
    dend_57 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_DBC_4114c4c36c_0_0


