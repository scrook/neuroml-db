// Cell: cADpyr230_L4_SS_08eefff078_0_0
/*
{
  "id" : "cADpyr230_L4_SS_08eefff078_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.22921, 8.43818, 0.170204, 3.86713", "-2.03503, 7.55772, 0.189792, 6.97619", "-1.84085, 6.67725, 0.20938, 9.05853", "-1.64667, 5.79679, 0.228967, 10.4448", "-1.4525, 4.91633, 0.248555, 11.547", "-1.25832, 4.03586, 0.268143, 11.8847", "-1.06414, 3.1554, 0.287731, 11.8052", "-0.869961, 2.27493, 0.307319, 11.7257", "-0.675783, 1.39447, 0.326907, 11.6462", "-0.481605, 0.514006, 0.346495, 11.6622", "-0.287427, -0.366458, 0.366082, 11.8066", "-0.0932491, -1.24692, 0.38567, 11.8931", "0.100929, -2.12739, 0.405258, 11.7494", "0.295107, -3.00785, 0.424846, 11.5995", "0.489285, -3.88831, 0.444434, 11.4362", "0.683463, -4.76878, 0.464022, 11.0379", "0.877641, -5.64924, 0.48361, 10.4513", "1.07182, -6.5297, 0.503198, 9.62464", "1.266, -7.41017, 0.522785, 7.94147", "1.46018, -8.29063, 0.542373, 5.00417", "1.65435, -9.1711, 0.561961, 2.93148" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "1.40694, 8.80997, 2.61396, 2.66", "1.73523, 10.7354, 3.2027, 2.66", "1.73596, 25.3489, 1.37827, 2.0", "1.73641, 34.2515, 0.266807, 2.0", "1.73668, 39.7402, -0.418444, 2.0", "1.73728, 51.703, -1.91194, 2.0", "1.73802, 66.5292, -3.76294, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992695277334,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-5.01111, 6.09531, -4.4687, 1.33", "-4.9566, 6.03096, -4.41962, 1.33", "-8.45038, 6.37103, -7.52754, 1.33", "-11.637, 6.6812, -10.3622, 1.33", "-13.4675, 6.85937, -11.9905, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992695277334
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-4.22832, -6.88919, -3.4678, 1.33", "-3.82607, -6.20193, -3.13418, 1.33", "-6.32578, -9.52136, 0.106975, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992695277334
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "0.0471281, -5.79206, -6.52533, 1.33", "0.0754971, -6.76968, -7.6674, 1.33", "18.4468, -9.69837, 0.855211, 0.67", "27.3093, -10.8249, 4.48227, 0.67", "34.1175, -11.2501, 6.92746, 0.67", "38.5773, -11.3596, 8.32437, 0.67", "44.7683, -11.3477, 10.0531, 0.67", "51.3569, -10.8805, 11.2591, 0.67", "59.0648, -9.64763, 11.5295, 0.67", "65.9994, -8.28108, 11.3189, 0.67", "70.3067, -7.18518, 10.9543, 0.67", "72.5441, -6.52005, 10.7009, 1.33", "77.3474, -5.07311, 9.95309, 0.67", "82.4343, -3.56367, 8.88749, 0.67", "92.7285, -0.780946, 6.33126, 0.67", "99.9983, 0.68397, 4.61057, 0.67", "103.62, 1.29449, 3.78359, 0.67", "105.285, 1.5258, 3.50534, 0.67", "109.251, 1.88879, 3.08605, 0.67", "113.962, 1.99515, 2.79693, 0.67", "116.795, 2.08943, 2.71375, 0.67", "119.162, 2.06528, 2.54561, 0.67", "126.662, 2.02906, 1.97127, 0.67", "130.865, 2.0862, 1.60515, 0.67", "140.913, 2.19435, 0.63254, 0.67", "148.926, 2.22511, 0.0175563, 0.67", "153.367, 1.94619, -0.234233, 0.67", "156.657, 1.56692, -0.414405, 0.67", "160.882, 0.85183, -0.829913, 0.67", "163.855, 0.238082, -1.11483, 0.67", "171.07, -1.36227, -1.79124, 0.67", "180.665, -3.20501, -2.75602, 0.67", "187.863, -3.89527, -3.69509, 0.67", "192.933, -3.96316, -4.53574, 0.67", "195.217, -3.77509, -5.0917, 0.33", "200.286, -2.56241, -6.83275, 0.67", "203.178, -1.33289, -8.20732, 0.67", "206.798, 1.09262, -10.2203, 0.67", "208.25, 2.25104, -11.0049, 0.67", "211.563, 5.16237, -12.6306, 0.67", "214.37, 7.71735, -14.0438, 0.33", "215.836, 9.05058, -14.8041, 0.67", "218.723, 11.7183, -16.2682, 0.33", "221.579, 14.7303, -17.6654, 0.67", "223.083, 16.5209, -18.3327, 0.33", "225.497, 20.0105, -19.2132, 0.33", "226.282, 21.1905, -19.4771, 0.67", "227.494, 22.9552, -19.6444, 0.33", "228.982, 24.8288, -19.621, 0.67", "231.009, 27.1051, -19.4743, 0.67", "234.433, 30.8307, -19.1646, 0.67", "237.155, 33.8901, -18.7837, 0.33", "241.385, 38.322, -18.093, 0.67", "244.243, 41.1485, -17.4831, 0.33", "245.507, 42.2484, -17.1381, 0.33", "259.352, 45.1414, -16.9269, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992695277334,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.19789, 7.79738, -4.33335, 2.66", "1.82103, 6.53301, -3.60895, 2.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992695277334
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.65435, -9.1711, 0.561961, 0.67", "4.88483, -23.8191, 0.561961, 0.67", "8.1153, -38.4671, 0.561961, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "1.73802, 66.5292, -3.76294, 2.0", "-2.62021, 68.999, -8.55928, 0.67", "-4.46386, 70.1788, -10.3671, 0.67", "-6.52405, 71.2674, -12.205, 0.67", "-8.1299, 72.1751, -13.5476, 0.67", "-9.74945, 73.0768, -14.8265, 0.67", "-11.7809, 74.2105, -16.372, 0.67", "-14.648, 75.8841, -18.2214, 0.67", "-17.6593, 77.7468, -20.1198, 0.67", "-20.8886, 79.8585, -22.1612, 0.67", "-23.4942, 81.4345, -23.8214, 0.67", "-24.9357, 82.2482, -24.7525, 0.67", "-27.8842, 83.8716, -26.6815, 0.67", "-30.259, 85.182, -28.3734, 0.67", "-33.1862, 87.0092, -31.0754, 0.67", "-35.0444, 88.0543, -33.1788, 0.67", "-35.7934, 88.5285, -34.189, 0.67", "-36.7819, 89.1375, -35.6114, 0.67", "-39.21, 90.4675, -39.4388, 0.67", "-41.9221, 91.8707, -44.2779, 0.67", "-42.5696, 92.3231, -45.6394, 0.67", "-43.5314, 93.0864, -47.7816, 0.67", "-45.1129, 94.2546, -51.5591, 0.67", "-45.8969, 94.819, -53.6588, 0.67", "-47.0072, 95.8226, -56.8963, 0.67", "-47.7773, 96.8182, -59.8474, 0.67", "-48.022, 97.2853, -61.3533, 1.33", "-48.2764, 98.0718, -63.9754, 0.67", "-48.482, 99.0136, -66.5613, 0.33", "-48.7923, 100.154, -69.1029, 2.0", "-49.7274, 103.01, -75.0091, 0.33", "-50.0707, 103.983, -76.8647, 0.67", "-50.6417, 105.528, -79.5951, 0.33", "-51.6048, 107.532, -82.8807, 1.33", "-52.0767, 108.243, -84.0129, 0.33", "-52.5577, 108.826, -84.871, 0.67", "-53.5846, 109.843, -85.9057, 0.67", "-54.5348, 110.76, -86.8362, 0.33", "-55.2189, 111.323, -87.4121, 0.67", "-56.4427, 112.324, -88.5254, 0.33", "-58.0152, 113.482, -89.6341, 1.33", "-59.643, 114.59, -90.5578, 1.33", "-61.6512, 115.99, -91.5835, 0.33", "-63.2802, 117.272, -92.3563, 1.33", "-65.0651, 118.782, -93.1401, 0.33", "-68.5741, 121.789, -94.5613, 2.0", "-70.7913, 123.83, -95.3505, 0.33", "-72.1975, 125.234, -95.7827, 0.33", "-73.4596, 126.55, -96.1963, 0.67", "-74.257, 127.363, -96.5541, 0.33", "-75.1273, 128.279, -97.0497, 0.33", "-75.8939, 129.183, -97.7084, 0.33", "-76.5774, 129.95, -98.3111, 0.67", "-78.1786, 131.66, -99.7174, 0.33", "-79.4715, 132.966, -100.822, 0.67", "-80.9472, 134.38, -102.039, 0.33", "-81.8567, 135.282, -102.894, 1.33", "-82.7361, 136.06, -103.827, 0.67", "-83.737, 136.809, -104.822, 0.67", "-84.8649, 137.506, -105.833, 0.67", "-85.9945, 138.029, -106.821, 0.33", "-88.5226, 138.762, -108.902, 1.33", "-90.7665, 139.251, -110.632, 0.33", "-93.0504, 139.608, -112.28, 0.33", "-94.7208, 139.757, -113.548, 0.67", "-96.2247, 139.79, -114.708, 0.33", "-97.4919, 139.756, -115.666, 1.33", "-98.5562, 139.651, -116.42, 0.33", "-99.3648, 139.503, -117.061, 0.67", "-101.377, 138.884, -119.634, 1.33", "-102.27, 138.479, -121.202, 0.33", "-102.623, 138.293, -121.878, 0.33", "-103.104, 138.042, -122.806, 1.33", "-104.295, 137.48, -124.734, 0.33", "-107.257, 136.319, -129.1, 0.67", "-108.332, 136.033, -130.454, 0.33", "-109.987, 135.674, -132.433, 0.67", "-111.153, 135.451, -133.604, 0.33", "-113.529, 135.066, -135.693, 1.33", "-116.153, 134.737, -137.297, 0.33", "-116.939, 134.627, -137.531, 0.67", "-118.177, 134.442, -137.906, 0.33", "-119.617, 134.197, -138.721, 0.67" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "1.73802, 66.5292, -3.76294, 2.0", "0.031135, 75.8859, -5.60297, 2.0" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-13.4675, 6.85937, -11.9905, 1.33", "-15.9387, 4.43199, -11.6361, 0.67", "-18.9097, 1.56888, -12.0482, 0.67", "-22.5604, -2.7383, -12.858, 1.33", "-25.5422, -6.64458, -13.8459, 0.67", "-27.0174, -8.64123, -14.3425, 1.33", "-30.5397, -13.0947, -15.4348, 0.67", "-31.694, -14.4361, -15.9953, 1.33", "-33.6983, -17.0232, -17.3399, 0.67", "-35.5289, -19.8626, -18.8788, 1.33", "-37.7864, -23.6516, -20.5629, 0.67", "-40.0605, -27.5231, -21.5826, 0.67", "-42.9966, -32.7527, -22.2277, 0.67", "-45.426, -37.0417, -22.346, 1.33", "-46.852, -39.4201, -22.1951, 0.33", "-50.9843, -46.512, -20.8942, 1.33", "-56.0109, -55.2605, -17.9412, 0.67", "-57.4756, -57.6545, -16.8278, 0.67", "-58.586, -59.3163, -15.8708, 0.67", "-60.312, -61.6817, -14.3241, 1.33", "-62.8976, -65.3739, -11.7637, 0.67", "-65.4845, -69.4848, -8.63994, 0.67", "-66.9441, -71.6851, -7.1239, 0.33", "-67.5225, -72.6396, -6.44294, 0.33", "-68.2718, -73.8377, -5.74264, 0.67", "-69.4701, -75.4845, -4.98657, 0.33", "-72.6793, -79.2046, -3.91422, 0.67", "-74.2049, -81.3808, -3.63132, 1.33", "-76.0152, -84.435, -3.36951, 0.67", "-80.3652, -91.9315, -2.98851, 0.67", "-81.9284, -94.6266, -2.94114, 0.67", "-83.1003, -96.8293, -2.9466, 0.67", "-86.769, -105.098, -2.91861, 0.67", "-87.7506, -107.615, -2.88835, 0.67", "-88.6638, -110.459, -2.77222, 0.33", "-88.8128, -111.435, -2.69369, 0.67", "-89.2952, -116.418, -2.14555, 0.33", "-89.7378, -120.727, -1.38908, 0.67", "-95.4518, -132.493, 0.759162, 0.67" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-13.4675, 6.85937, -11.9905, 1.33", "-17.8482, 13.3169, -10.1676, 1.33" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-6.32578, -9.52136, 0.106975, 1.33", "-9.55485, -10.0227, 1.42331, 0.67", "-10.2341, -10.1564, 1.81817, 0.67", "-12.4479, -10.501, 3.36437, 0.67", "-13.4688, -10.6104, 4.19744, 0.67", "-14.6804, -10.7402, 5.18613, 0.67", "-16.0826, -10.8904, 6.33039, 0.67", "-17.7047, -11.0025, 7.56703, 0.67", "-21.0756, -11.3096, 10.397, 0.67", "-24.0283, -11.8203, 13.2239, 0.67", "-29.8912, -12.485, 16.2724, 0.67", "-36.3221, -12.5508, 17.893, 0.67", "-42.8973, -11.668, 17.6097, 0.67", "-49.5152, -11.5032, 18.014, 0.67", "-55.9659, -10.0122, 18.6086, 0.67" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-6.32578, -9.52136, 0.106975, 1.33", "-9.27916, -21.7137, 0.693845, 0.67", "-10.5743, -25.8805, 1.06281, 0.67", "-11.8167, -29.859, 1.66252, 0.67", "-14.2065, -37.1052, 3.00508, 0.67", "-17.7931, -46.3942, 5.37234, 0.67", "-19.1366, -49.5575, 6.31325, 0.67", "-20.1157, -51.5934, 7.31105, 0.67", "-22.1163, -55.744, 9.46115, 0.67", "-22.9114, -57.5278, 10.408, 0.67", "-24.9267, -62.4382, 12.8714, 0.67", "-26.3569, -65.5852, 13.6928, 0.67", "-28.7898, -70.8901, 14.3745, 0.67", "-30.5466, -74.6797, 14.5097, 0.67", "-31.7322, -77.0226, 14.4078, 0.67", "-32.592, -79.0169, 14.2513, 0.67", "-37.2853, -91.0862, 12.868, 0.67", "-38.7575, -95.2391, 12.4346, 0.67", "-39.8884, -98.4939, 12.1314, 0.67", "-40.8765, -101.452, 11.89, 0.67", "-43.1651, -108.323, 11.2956, 0.67", "-44.3157, -111.649, 11.0081, 0.67", "-47.3068, -120.011, 10.9015, 0.67", "-49.2846, -124.468, 11.1298, 0.67", "-51.5476, -128.193, 11.3048, 0.67", "-54.5289, -131.693, 11.4389, 0.67", "-55.9293, -132.68, 11.3863, 0.67", "-63.1167, -135.717, 9.99909, 0.67", "-66.7169, -136.424, 8.73652, 0.67", "-72.4013, -136.818, 5.8918, 0.67", "-75.371, -136.629, 3.9223, 0.67", "-80.5536, -135.445, -0.817997, 0.67", "-85.6021, -133.767, -6.39042, 0.67", "-87.4462, -132.886, -8.79128, 0.67", "-88.3546, -132.354, -10.1339, 0.67", "-89.9467, -131.487, -12.3834, 0.67", "-93.461, -129.411, -16.9593, 0.33", "-95.4502, -128.435, -18.7314, 0.33", "-97.435, -127.555, -19.7911, 0.33", "-101.231, -125.922, -21.4313, 1.33", "-106.298, -124.198, -22.9147, 0.33", "-106.698, -124.051, -23.1067, 0.67", "-108.613, -123.192, -24.3028, 0.33", "-108.937, -123.014, -24.5907, 0.67", "-110.221, -122.277, -25.8544, 0.33", "-111.387, -121.476, -27.2834, 1.33", "-117.136, -116.889, -35.743, 0.33", "-118.038, -116.104, -37.2281, 0.67", "-119.293, -114.862, -39.6853, 0.33", "-120.226, -113.864, -41.7342, 0.67" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "1.82103, 6.53301, -3.60895, 2.66", "9.69643, 10.7226, -18.7305, 0.67", "10.3808, 11.1377, -19.9802, 1.33", "11.5857, 12.0837, -22.454, 0.67", "14.1101, 14.4057, -27.8977, 0.67", "15.2968, 15.5558, -30.369, 1.33", "16.7106, 16.8459, -33.0995, 0.67", "19.0697, 19.9076, -37.3601, 2.0", "20.8201, 22.3086, -40.8759, 0.67", "21.34, 22.9005, -41.914, 0.67", "23.4081, 24.6462, -45.7299, 0.67", "24.865, 25.6469, -48.5511, 1.33", "26.5602, 26.5939, -51.7243, 1.33", "29.499, 27.9554, -56.7656, 0.67", "31.8408, 28.8194, -60.5615, 0.67", "35.487, 30.0408, -66.8531, 1.33", "37.2907, 30.5992, -70.2529, 1.33", "39.5088, 31.2383, -74.5126, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.82103, 6.53301, -3.60895, 2.66", "7.70817, 10.6636, -8.93822, 2.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "8.1153, -38.4671, 0.561961, 0.67", "11.3458, -53.1151, 0.561961, 0.67", "14.5763, -67.7631, 0.561961, 0.67" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "0.031135, 75.8859, -5.60297, 2.0", "2.97481, 78.488, -5.96291, 0.67", "8.01921, 82.9931, -5.96466, 0.67", "8.87326, 83.6999, -5.91556, 0.67", "17.9848, 90.3887, -5.11327, 0.67", "20.8016, 92.3127, -4.76035, 0.67", "24.7511, 94.965, -4.18145, 0.67", "28.7118, 97.5589, -3.25999, 0.67", "32.189, 99.8181, -1.99317, 0.67", "35.8452, 102.126, -0.460593, 0.67", "38.0632, 103.455, 0.642384, 0.67", "39.8381, 104.538, 1.44001, 0.67", "42.4598, 106.344, 2.6498, 0.67", "45.1451, 108.726, 3.90528, 0.67", "47.2473, 111.082, 5.03799, 0.67", "48.7686, 112.864, 5.89513, 0.67", "51.7004, 116.173, 7.40673, 0.67", "54.7382, 119.166, 8.80573, 0.67", "56.5449, 120.729, 9.47643, 0.67", "58.3851, 122.03, 10.0966, 0.67", "61.9748, 123.96, 11.4012, 0.67", "63.7669, 124.615, 12.1372, 0.67", "66.585, 125.4, 13.3519, 0.67", "69.4103, 126.112, 14.4743, 0.67", "72.8134, 126.865, 15.8439, 0.67", "76.5875, 127.74, 17.4532, 0.67", "80.582, 128.881, 19.1836, 0.67", "82.4669, 129.453, 20.0245, 0.33", "84.3925, 130.136, 20.9389, 0.67", "86.2026, 130.827, 21.8163, 0.67", "87.8447, 131.593, 22.5474, 0.33", "90.107, 132.549, 23.395, 0.33", "91.5439, 133.253, 23.7848, 0.67", "99.314, 138.154, 24.4057, 0.67", "106.166, 144.381, 23.7485, 0.67", "113.021, 150.564, 24.6817, 0.67", "119.273, 157.36, 25.9276, 0.67", "125.732, 163.952, 27.116, 0.67", "131.318, 171.365, 28.3361, 0.67", "136.124, 179.454, 28.6327, 0.67", "141.002, 187.392, 27.3574, 0.67", "146.583, 194.455, 24.8715, 0.67", "152.883, 200.168, 21.2257, 0.67", "157.715, 205.988, 15.8852, 0.67", "163.397, 212.593, 12.6103, 0.67", "169.548, 219.112, 10.1198, 0.67" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "0.031135, 75.8859, -5.60297, 2.0", "-0.495126, 81.9008, -2.65262, 2.0", "-1.27543, 89.7339, 0.327636, 1.33", "-1.66914, 95.6605, 2.45753, 1.33", "-1.96726, 102.079, 4.61977, 1.33", "-2.3167, 107.097, 6.06189, 1.33", "-3.01883, 115.692, 8.14606, 1.33", "-3.2396, 120.764, 8.86244, 1.33", "-3.36695, 124.421, 9.00956, 1.33", "-3.42668, 127.111, 9.14322, 1.33", "-3.28703, 133.156, 9.66886, 1.33", "-3.17898, 135.979, 10.068, 1.33", "-3.01585, 143.51, 11.3644, 1.33", "-3.07916, 148.404, 12.2255, 1.33", "-3.07583, 156.951, 13.6905, 1.33", "-2.91385, 163.699, 14.9102, 1.33", "-2.71338, 172.413, 16.6926, 1.33", "-2.5764, 177.895, 17.6856, 1.33", "-2.52188, 181.133, 18.1939, 1.33", "-2.2171, 189.91, 19.4308, 1.33", "-2.13178, 193.505, 19.8103, 1.33", "-1.74643, 200.784, 20.6468, 1.33", "-1.02331, 209.789, 22.0925, 1.33", "-0.527284, 215.422, 23.1777, 1.33", "0.139632, 223.936, 24.9513, 0.67", "0.40351, 230.051, 26.2327, 0.67", "0.595298, 233.646, 27.0183, 0.67", "0.857223, 237.322, 27.8447, 0.67", "0.887426, 239.551, 28.4741, 0.67", "0.961102, 242.081, 29.1308, 0.67", "1.33429, 250.418, 30.8911, 0.67", "2.32455, 263.505, 34.036, 0.67", "5.39373, 276.47, 36.1198, 0.67", "9.11308, 288.981, 39.3413, 0.67", "10.8414, 301.403, 44.1618, 0.67", "11.4211, 312.91, 50.9254, 0.67", "12.6136, 324.681, 57.1768, 0.67", "14.9858, 335.052, 65.1132, 0.67", "17.929, 344.531, 73.8308, 0.67", "18.8085, 354.29, 82.7192, 0.67", "21.5139, 364.222, 91.0483, 0.67", "23.259, 375.463, 98.0133, 0.67" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-17.8482, 13.3169, -10.1676, 1.33", "-22.126, 16.4273, -9.12589, 0.67", "-27.9065, 20.1478, -7.15579, 0.67", "-30.3302, 21.4557, -6.35662, 0.67", "-32.6609, 22.5127, -5.71293, 0.67", "-35.522, 23.6633, -5.01517, 0.67", "-36.6507, 24.113, -4.76278, 0.67", "-46.211, 27.6132, -2.5078, 0.67", "-49.4794, 28.7822, -1.52907, 0.67", "-52.4287, 29.5364, -0.528112, 0.67", "-53.5033, 29.7407, -0.138844, 0.67", "-56.387, 30.2114, 1.09217, 0.67", "-61.4837, 30.7595, 3.64304, 0.67", "-62.8885, 30.9104, 4.40552, 0.67", "-66.1434, 31.3316, 6.33625, 0.67", "-68.2387, 31.5004, 7.61297, 0.67", "-73.7866, 31.9204, 10.7017, 0.67", "-77.3368, 32.0638, 12.3414, 0.67", "-82.4322, 32.3508, 14.5157, 0.67", "-88.6507, 32.9405, 17.3811, 0.67", "-93.015, 33.5419, 19.5517, 0.67", "-97.7845, 34.138, 22.3117, 0.67", "-102.144, 34.5335, 25.058, 0.67", "-106.793, 34.8458, 28.3639, 0.67", "-109.16, 34.6656, 30.4397, 0.67", "-110.776, 34.548, 32.1806, 0.67", "-113.702, 34.2158, 36.514, 0.67", "-114.847, 33.6032, 39.217, 0.67", "-115.385, 33.0213, 41.4045, 0.33", "-115.856, 31.2309, 43.6245, 0.67", "-125.424, 31.3606, 50.374, 0.67", "-133.917, 32.5627, 58.3568, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-17.8482, 13.3169, -10.1676, 1.33", "-18.7376, 16.5055, -11.0773, 0.67", "-19.2043, 17.7172, -11.3935, 0.67", "-22.5658, 24.8179, -12.9908, 0.67", "-25.4304, 30.3019, -14.1118, 0.67", "-27.0458, 33.1002, -14.6492, 0.67", "-29.806, 37.544, -15.3385, 0.67", "-31.9742, 40.4705, -15.7021, 0.67", "-35.5427, 44.7193, -15.9331, 0.67", "-36.75, 45.9966, -15.9312, 0.67", "-38.3306, 47.4829, -16.0136, 0.67", "-41.8581, 50.5897, -16.2253, 0.67", "-44.0922, 52.7448, -16.5421, 0.67", "-46.0632, 54.9826, -17.2356, 0.67", "-48.5046, 58.4915, -18.836, 0.67", "-50.2409, 61.9694, -20.8958, 0.67", "-50.6142, 62.9663, -21.623, 0.67", "-51.8411, 66.8672, -25.1163, 0.67", "-52.7134, 70.1186, -28.2465, 0.67", "-53.356, 72.377, -30.7492, 2.0", "-54.2745, 75.4751, -34.3214, 0.33", "-54.8018, 77.0631, -36.2599, 0.67", "-55.7489, 79.0704, -38.891, 0.33", "-56.1426, 79.6957, -39.7219, 2.0", "-58.0413, 82.3724, -43.3222, 0.33", "-58.8179, 83.5018, -44.8028, 1.33", "-60.1837, 85.8918, -47.6341, 0.33", "-60.8282, 87.2536, -49.1087, 1.33", "-61.5016, 89.041, -50.9352, 0.33", "-62.1285, 91.0163, -52.9181, 1.33", "-62.4875, 92.7633, -54.4726, 0.33", "-62.7802, 95.0599, -56.6254, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-55.9659, -10.0122, 18.6086, 0.67", "-69.7597, -10.1864, 21.8358, 0.67", "-82.1739, -12.0526, 28.4614, 0.67", "-95.4192, -11.3294, 33.4342, 0.67", "-108.374, -11.0256, 39.1616, 0.67" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-55.9659, -10.0122, 18.6086, 0.67", "-66.2163, -9.86617, 23.3767, 0.67", "-76.6762, -12.5277, 26.8518, 0.67", "-86.7116, -14.3604, 31.793, 0.67", "-97.7974, -14.5881, 33.9854, 0.67" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "39.5088, 31.2383, -74.5126, 1.33", "39.8234, 32.4429, -77.5877, 0.33", "40.1252, 35.1215, -84.6224, 1.33", "40.2554, 36.8693, -90.3538, 0.33", "40.4977, 37.7666, -94.9218, 1.33", "41.1118, 38.4784, -101.136, 1.33", "42.871, 39.0232, -112.409, 0.67", "44.9725, 38.2161, -122.911, 0.67", "46.3656, 37.4346, -128.088, 0.67", "48.0416, 36.5672, -134.225, 1.33", "49.4116, 36.0274, -138.991, 0.33", "51.0501, 35.3662, -144.519, 0.33", "52.0765, 34.9923, -148.035, 1.33", "54.9775, 34.41, -155.942, 0.67", "58.0819, 34.315, -164.796, 1.33", "58.9718, 34.5093, -167.705, 0.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "39.5088, 31.2383, -74.5126, 1.33", "41.7762, 32.4328, -76.4141, 0.33", "43.3808, 33.324, -77.8325, 0.67", "47.495, 35.368, -82.3147, 0.67", "50.3836, 36.4136, -86.6606, 0.67", "51.886, 36.7844, -89.4329, 0.67", "53.1539, 37.0249, -91.992, 0.67", "54.4076, 37.1541, -94.9094, 0.67", "57.5834, 37.1558, -102.902, 0.67", "60.8541, 36.7658, -112.06, 2.0", "62.9871, 36.3677, -118.758, 0.67", "64.1676, 36.1021, -122.676, 2.0", "65.6683, 35.7489, -127.573, 0.33", "66.4409, 35.626, -129.84, 2.0", "68.2791, 35.5139, -134.982, 0.33", "68.6749, 35.5541, -135.933, 1.33", "70.338, 35.9871, -139.861, 0.33", "70.8207, 36.1859, -141.056, 0.67", "72.6569, 37.2027, -145.65, 0.33", "73.4057, 37.7203, -147.642, 0.33", "75.0145, 38.9006, -152.127, 0.67", "75.8286, 39.5343, -154.654, 0.33", "77.01, 40.694, -158.749, 1.33", "77.3972, 41.1181, -160.241, 0.67", "78.1045, 42.0304, -163.371, 0.67", "79.056, 43.1773, -167.758, 0.67", "80.0348, 44.3007, -172.354, 0.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "7.70817, 10.6636, -8.93822, 2.66", "7.19376, 16.2856, -8.24175, 1.33", "6.80764, 20.5053, -7.71898, 1.33", "6.45924, 24.313, -7.24728, 0.67", "6.21651, 26.9657, -6.91865, 1.33", "5.72908, 32.2928, -6.2587, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.70817, 10.6636, -8.93822, 2.66", "12.3078, 10.9493, -12.3817, 2.0" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.72908, 32.2928, -6.2587, 1.33", "7.56135, 36.0427, -6.42875, 0.67", "11.1015, 44.0396, -6.70689, 0.67", "12.4569, 47.0797, -6.79319, 0.67", "14.4118, 51.2211, -7.01044, 0.67", "16.7859, 56.082, -7.55481, 1.33", "17.8254, 58.2452, -7.86511, 0.67", "19.2952, 61.439, -8.35583, 0.67", "20.3039, 63.8357, -8.89654, 0.67", "21.1, 66.5847, -9.53517, 0.33", "22.0774, 70.8645, -10.4812, 1.33", "22.5923, 73.3175, -10.8587, 0.67", "23.319, 78.0646, -11.2262, 0.67", "23.5764, 84.3513, -11.1713, 0.33", "23.4369, 87.9126, -10.8434, 0.67", "23.181, 91.2861, -10.2535, 2.66", "22.5936, 97.6145, -8.7028, 0.67", "22.3803, 99.2712, -8.2865, 0.67", "21.9871, 102.131, -7.60208, 1.33", "21.6671, 104.167, -7.0776, 0.33", "21.3853, 105.614, -6.79236, 0.67", "20.6566, 108.446, -6.3988, 0.67", "18.9883, 114.567, -5.90896, 1.33", "17.9721, 119.48, -5.42526, 0.67", "17.131, 124.135, -4.7402, 0.67", "16.7386, 126.615, -4.34637, 0.33", "16.4724, 128.827, -3.97562, 0.67", "16.2667, 131.707, -3.46368, 0.67", "16.1827, 138.447, -2.18171, 0.67", "16.2974, 143.256, -1.21986, 0.67", "16.7362, 147.527, -0.222722, 0.33", "16.9558, 149.249, 0.170542, 0.67", "17.3359, 151.608, 0.66065, 0.33", "17.4592, 152.52, 0.825481, 0.33", "17.847, 155.437, 1.06072, 0.67", "18.5933, 160.748, 1.22763, 0.33", "18.9464, 164.03, 1.28745, 2.0", "19.2774, 167.065, 1.39173, 0.33", "19.7532, 170.408, 1.53975, 0.67", "20.6698, 175.795, 1.82178, 0.33", "21.2046, 178.521, 1.97293, 0.33", "21.572, 180.456, 2.03397, 0.67", "22.6512, 185.257, 2.46303, 0.33", "23.193, 187.254, 2.74954, 1.33", "24.3017, 190.143, 3.47035, 0.33", "25.08, 191.901, 4.26471, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "5.72908, 32.2928, -6.2587, 1.33", "4.93725, 34.897, -14.4162, 0.67", "4.44472, 37.348, -20.608, 0.67", "3.60319, 41.0924, -29.494, 0.67", "3.25615, 42.3048, -32.1979, 1.33", "2.20694, 45.3839, -38.6766, 0.67", "1.25777, 48.0226, -43.8326, 0.67", "-0.266193, 51.4355, -49.2454, 0.67", "-1.07963, 53.2035, -51.6358, 0.33", "-2.28128, 54.8801, -53.8545, 0.67", "-3.28143, 55.9677, -55.3642, 0.33", "-4.47794, 57.1611, -56.9658, 0.33", "-5.36113, 57.885, -58.0186, 0.33", "-7.48825, 59.3682, -60.8228, 0.67", "-11.3872, 62.0156, -66.3763, 0.33", "-14.4151, 64.1246, -71.0435, 1.33", "-17.4032, 66.2727, -75.7954, 0.33", "-18.404, 66.9813, -77.4872, 1.33", "-22.9176, 70.2778, -85.1383, 0.33", "-23.4688, 70.6596, -86.0819, 0.67", "-24.797, 71.4221, -88.1073, 0.33", "-25.9024, 71.9669, -89.7521, 1.33", "-29.8688, 74.0031, -96.33, 0.67", "-31.8541, 75.1242, -99.8127, 1.33", "-35.4001, 77.4029, -106.211, 0.33", "-36.353, 78.0448, -107.942, 0.33", "-38.9644, 79.7087, -112.559, 1.33", "-41.9277, 81.7014, -117.601, 0.33", "-43.5506, 82.9673, -120.214, 1.33", "-46.8704, 85.657, -125.395, 0.67", "-47.9721, 86.478, -126.785, 0.33", "-51.8495, 88.8805, -130.839, 0.67", "-53.7815, 89.7208, -132.234, 0.33", "-56.3942, 90.4457, -133.94, 0.33", "-57.9069, 90.7576, -135.203, 1.33", "-60.6277, 91.1539, -137.649, 0.33", "-61.6883, 91.328, -138.827, 0.33", "-64.4113, 91.8589, -142.064, 0.67", "-68.9388, 92.8076, -147.591, 0.33", "-73.7174, 94.1968, -153.583, 0.33", "-74.4143, 94.4854, -154.496, 1.33", "-77.8512, 96.5273, -159.254, 0.33", "-80.0316, 98.0927, -162.083, 0.33", "-81.2712, 99.1772, -163.453, 1.33", "-83.4575, 101.182, -165.153, 0.33", "-84.5954, 102.114, -165.802, 1.33", "-87.7892, 104.484, -167.482, 0.67", "-89.6905, 105.772, -168.369, 0.67", "-91.0051, 106.688, -169.144, 1.33", "-94.582, 109.009, -171.43, 0.67", "-96.6647, 110.184, -172.787, 1.33", "-98.4643, 111.162, -173.948, 0.33", "-100.079, 111.998, -174.886, 1.33", "-102.624, 113.484, -176.435, 0.33", "-104.26, 114.526, -177.311, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "12.3078, 10.9493, -12.3817, 2.0", "15.4545, 10.8899, -9.08297, 0.67", "17.1618, 10.7144, -7.62328, 0.67", "21.2972, 10.5773, -4.0416, 0.67", "23.3084, 10.6652, -1.88837, 0.67", "26.7439, 10.6635, 1.90751, 0.67", "29.2456, 10.5989, 4.62447, 0.67", "31.1103, 10.7667, 6.4916, 0.67", "35.6568, 11.3046, 10.4455, 0.67", "43.4506, 12.0231, 15.9498, 0.67", "45.1826, 12.2374, 17.1924, 0.67", "46.4412, 12.3574, 18.0104, 0.67", "53.0744, 13.1323, 22.4943, 0.67", "54.7058, 13.3858, 23.5841, 1.33", "58.4324, 13.9131, 25.9077, 0.67", "63.9207, 14.7597, 29.2169, 0.67", "71.2204, 16.0528, 34.2287, 0.67", "73.8606, 16.4927, 36.222, 0.67", "77.5084, 16.9777, 39.4095, 0.67", "79.6783, 17.3644, 41.386, 0.67", "81.1783, 17.7235, 42.785, 0.67", "84.3946, 18.4427, 45.4753, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.3078, 10.9493, -12.3817, 2.0", "16.5415, 9.92074, -12.4163, 0.67", "24.8127, 7.91124, -12.4839, 0.67", "29.6004, 6.74804, -12.523, 0.67", "39.6677, 4.30216, -12.6052, 0.67", "45.2801, 2.93861, -12.651, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "84.3946, 18.4427, 45.4753, 0.67", "89.0198, 18.5999, 48.3335, 0.67", "91.149, 18.6723, 49.6492, 0.67", "98.8007, 18.9323, 54.3775, 0.33", "108.549, 18.2069, 58.5198, 0.33", "118.125, 17.3864, 63.0297, 0.33", "126.773, 18.2874, 69.0933, 0.33" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "84.3946, 18.4427, 45.4753, 0.67", "86.0205, 19.0345, 46.6035, 0.67", "87.2463, 19.4656, 47.2342, 0.67", "88.8802, 19.8875, 48.0583, 0.67", "91.5011, 20.4354, 49.3307, 0.67", "92.6204, 20.5828, 49.829, 0.67", "93.9393, 20.7181, 50.3759, 0.67", "96.0942, 21.0304, 51.2378, 0.67", "98.1156, 21.171, 51.9178, 0.67", "98.8198, 21.1726, 52.0739, 0.67", "100.609, 21.2107, 52.2752, 0.67", "102.903, 21.4245, 52.4823, 0.67", "104.927, 21.7504, 52.4697, 0.67", "107.175, 22.2547, 52.2901, 0.67", "108.637, 22.7141, 52.0645, 0.67", "111.497, 23.7904, 51.4382, 0.67", "113.536, 24.7274, 50.8471, 0.67", "115.455, 25.7403, 50.1263, 0.33", "116.43, 26.3446, 49.7127, 0.33", "117.113, 26.8983, 49.4194, 0.33", "118.182, 27.973, 49.0172, 0.33", "118.472, 28.3484, 48.9048, 0.67", "118.888, 28.988, 48.9089, 0.33", "119.371, 29.7579, 49.0934, 0.67", "120.086, 30.9058, 49.4907, 0.33", "121.149, 32.4666, 50.1233, 0.33", "121.526, 33.0004, 50.4249, 0.67", "123.488, 35.6075, 52.1413, 0.67", "123.997, 36.2211, 52.5921, 0.67", "124.566, 36.8553, 53.0937, 0.67", "125.303, 37.6403, 53.7903, 0.67", "126.847, 39.0495, 55.2464, 0.33", "127.259, 39.4023, 55.6158, 0.67", "128.36, 40.2675, 56.2951, 0.33", "128.939, 40.7408, 56.7098, 0.33", "133.748, 42.6408, 58.3816, 0.33" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "45.2801, 2.93861, -12.651, 0.67", "51.9759, 3.03896, -21.0793, 0.67", "56.0156, 2.98424, -26.0249, 0.67", "58.3938, 2.93469, -28.6331, 0.67", "60.8876, 2.84231, -31.2238, 1.33", "63.6822, 2.65357, -34.2437, 0.67", "64.7231, 2.54895, -35.3392, 0.67", "67.7948, 2.16856, -38.4426, 0.67", "70.0779, 1.91344, -40.9446, 1.33", "71.6324, 1.76823, -42.7779, 0.67", "74.8755, 1.80034, -46.7546, 0.67", "77.3996, 1.81071, -49.7993, 1.33", "82.1082, 1.57832, -55.8123, 0.67", "82.6847, 1.53159, -56.6452, 0.67", "85.0912, 1.47035, -60.4366, 0.67", "89.0441, 1.57151, -66.7117, 1.33", "90.988, 1.78785, -69.8297, 0.67", "93.908, 2.36351, -74.7294, 1.33", "98.3145, 3.58309, -81.8882, 0.33", "100.301, 4.4526, -85.285, 0.33", "100.709, 4.70658, -86.0089, 1.33", "103.084, 6.43376, -90.0807, 0.33", "103.976, 7.17351, -91.5837, 1.33", "106.0, 8.86244, -94.8743, 0.33", "107.819, 10.1635, -97.7594, 0.67", "109.062, 10.8252, -100.21, 0.33", "109.604, 10.9917, -101.574, 1.33", "110.635, 10.4778, -105.322, 0.33", "111.05, 9.53757, -107.679, 0.33", "111.093, 8.74278, -108.752, 1.33", "111.023, 5.37524, -112.003, 0.33", "110.962, 4.72693, -112.536, 0.67", "110.696, 2.58427, -114.161, 0.33", "110.362, -0.200112, -116.054, 1.33", "110.184, -2.04368, -117.316, 0.33", "110.143, -2.74304, -117.76, 0.67", "110.015, -6.61471, -119.886, 0.33", "109.998, -6.9346, -120.073, 0.67", "109.704, -10.4162, -122.377, 0.33", "109.677, -10.749, -122.654, 0.67" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "45.2801, 2.93861, -12.651, 0.67", "51.9659, 0.858192, -14.1677, 0.67", "58.8924, -1.36303, -15.8607, 0.67", "64.4412, -2.97957, -17.1738, 0.67", "67.5958, -3.94918, -17.8364, 0.67", "75.9207, -6.45879, -19.5848, 0.67", "83.1785, -8.64098, -21.3211, 0.67", "92.5684, -11.5658, -23.4003, 0.67", "98.8729, -13.4512, -24.4559, 0.67", "107.126, -16.3398, -25.5752, 0.67", "109.881, -17.4878, -25.9065, 0.67", "114.076, -19.4856, -26.3319, 0.67", "123.753, -24.2802, -27.1153, 0.67", "128.576, -26.8447, -27.4114, 0.67", "135.682, -30.3808, -27.4006, 0.67", "141.466, -32.908, -27.1416, 0.67", "143.786, -33.8289, -26.957, 0.67", "147.343, -34.9875, -26.6021, 0.67", "158.471, -37.5253, -25.8765, 0.67", "168.494, -39.348, -25.072, 0.67", "170.847, -39.5979, -24.8607, 0.67", "173.704, -39.7175, -24.6654, 0.67", "179.21, -39.97, -24.3862, 0.67", "184.693, -40.3296, -24.3232, 0.67", "187.023, -40.4505, -24.4039, 0.67", "190.732, -40.6628, -24.9711, 0.67", "196.115, -41.1354, -25.6437, 0.67", "199.839, -41.5175, -26.0307, 0.33", "203.998, -42.0372, -26.3965, 0.67", "206.601, -42.3781, -26.6334, 0.67", "211.482, -42.9451, -27.0897, 0.67", "221.407, -44.1731, -28.184, 0.67", "224.29, -44.6412, -28.6022, 0.67", "226.107, -44.9331, -28.8904, 1.33", "230.696, -45.8771, -29.8023, 0.67", "233.824, -46.623, -30.5314, 0.33", "239.104, -47.9957, -31.8169, 0.67", "243.418, -49.0641, -33.0692, 0.33", "245.38, -49.616, -33.516, 0.33", "248.786, -50.5082, -33.9883, 0.67", "251.341, -51.1473, -34.0635, 0.33", "257.499, -52.6375, -33.8922, 0.67", "258.949, -52.9109, -33.7625, 0.67", "263.428, -53.5721, -33.0651, 0.33", "267.628, -54.2611, -32.3971, 0.33", "270.681, -54.7301, -31.841, 0.67", "274.556, -55.376, -31.1387, 0.33", "278.471, -55.9201, -30.4257, 0.67", "283.069, -56.4634, -29.663, 0.33", "285.793, -56.8282, -29.436, 0.33", "298.821, -61.2802, -32.0746, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "axon_0", "apic_4", "apic_1", "axon_1", "apic_3", "apic_2" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_21", "dend_16", "dend_15", "dend_0", "apic_4", "apic_1", "dend_25", "dend_22", "dend_18", "dend_17", "dend_12", "dend_1", "apic_3", "apic_2", "dend_24", "dend_23", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_2", "dend_11", "dend_10", "dend_6", "dend_3", "dend_8", "dend_7", "dend_5", "dend_4" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_4", "apic_1", "apic_3", "apic_2" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "apic_4", "apic_1", "apic_3", "apic_2" ]
  }, {
    "name" : "ModelViewParmSubset_7",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_21", "dend_16", "dend_15", "dend_0", "apic_4", "apic_1", "dend_25", "dend_22", "dend_18", "dend_17", "dend_12", "dend_1", "apic_3", "apic_2", "dend_24", "dend_23", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_2", "dend_11", "dend_10", "dend_6", "dend_3", "dend_8", "dend_7", "dend_5", "dend_4" ]
  }, {
    "name" : "ModelViewParmSubset_8",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_21", "dend_16", "dend_15", "dend_0", "dend_25", "dend_22", "dend_18", "dend_17", "dend_12", "dend_1", "dend_24", "dend_23", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_2", "dend_11", "dend_10", "dend_6", "dend_3", "dend_8", "dend_7", "dend_5", "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "axon_0", "axon_0", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_1", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "axon_1", "axon_1", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "2.0"
  }, {
    "group" : "apical",
    "value" : "2.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "all_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "3.0000001E-5",
    "erev" : "-75.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "basal",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.022874",
    "erev" : "50.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.039967",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "9.999999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999904",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.071165994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "5.5999997E-5",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.097243994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.42883396",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004779",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.283745",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0029709998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.999812",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "somatic",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "8.6000003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.001612",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.7899998E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0068679997",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cADpyr230_L4_SS_08eefff078_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_4, id: apic_4, parent: apic_0
create apic_4
public apic_4
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_4, apic_1, axon_1, apic_3, apic_2]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_21, dend_16, dend_15, dend_0, apic_4, apic_1, dend_25, dend_22, dend_18, dend_17, dend_12, dend_1, apic_3, apic_2, dend_24, dend_23, dend_20, dend_19, dend_14, dend_13, dend_9, dend_2, dend_11, dend_10, dend_6, dend_3, dend_8, dend_7, dend_5, dend_4]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_4, apic_1, apic_3, apic_2]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_4, apic_1, apic_3, apic_2]}
objref ModelViewParmSubset_6
// Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_21, dend_16, dend_15, dend_0, apic_4, apic_1, dend_25, dend_22, dend_18, dend_17, dend_12, dend_1, apic_3, apic_2, dend_24, dend_23, dend_20, dend_19, dend_14, dend_13, dend_9, dend_2, dend_11, dend_10, dend_6, dend_3, dend_8, dend_7, dend_5, dend_4]}
objref ModelViewParmSubset_7
// Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_21, dend_16, dend_15, dend_0, dend_25, dend_22, dend_18, dend_17, dend_12, dend_1, dend_24, dend_23, dend_20, dend_19, dend_14, dend_13, dend_9, dend_2, dend_11, dend_10, dend_6, dend_3, dend_8, dend_7, dend_5, dend_4]}
objref ModelViewParmSubset_8
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, axon_0, axon_0, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, axon_1, axon_1, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.49999992695277334)
    connect dend_21(0), soma_0(0.49999992695277334)
    connect dend_16(0), soma_0(0.49999992695277334)
    connect dend_15(0), soma_0(0.49999992695277334)
    connect dend_0(0), soma_0(0.49999992695277334)
    connect axon_0(0), soma_0(1.0)
    connect apic_4(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.22921, 8.43818, 0.170204, 3.86713 ) }
    soma_0 { pt3dadd( -2.03503, 7.55772, 0.189792, 6.97619 ) }
    soma_0 { pt3dadd( -1.84085, 6.67725, 0.20938, 9.05853 ) }
    soma_0 { pt3dadd( -1.64667, 5.79679, 0.228967, 10.4448 ) }
    soma_0 { pt3dadd( -1.4525, 4.91633, 0.248555, 11.547 ) }
    soma_0 { pt3dadd( -1.25832, 4.03586, 0.268143, 11.8847 ) }
    soma_0 { pt3dadd( -1.06414, 3.1554, 0.287731, 11.8052 ) }
    soma_0 { pt3dadd( -0.869961, 2.27493, 0.307319, 11.7257 ) }
    soma_0 { pt3dadd( -0.675783, 1.39447, 0.326907, 11.6462 ) }
    soma_0 { pt3dadd( -0.481605, 0.514006, 0.346495, 11.6622 ) }
    soma_0 { pt3dadd( -0.287427, -0.366458, 0.366082, 11.8066 ) }
    soma_0 { pt3dadd( -0.0932491, -1.24692, 0.38567, 11.8931 ) }
    soma_0 { pt3dadd( 0.100929, -2.12739, 0.405258, 11.7494 ) }
    soma_0 { pt3dadd( 0.295107, -3.00785, 0.424846, 11.5995 ) }
    soma_0 { pt3dadd( 0.489285, -3.88831, 0.444434, 11.4362 ) }
    soma_0 { pt3dadd( 0.683463, -4.76878, 0.464022, 11.0379 ) }
    soma_0 { pt3dadd( 0.877641, -5.64924, 0.48361, 10.4513 ) }
    soma_0 { pt3dadd( 1.07182, -6.5297, 0.503198, 9.62464 ) }
    soma_0 { pt3dadd( 1.266, -7.41017, 0.522785, 7.94147 ) }
    soma_0 { pt3dadd( 1.46018, -8.29063, 0.542373, 5.00417 ) }
    soma_0 { pt3dadd( 1.65435, -9.1711, 0.561961, 2.93148 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 1.40694, 8.80997, 2.61396, 2.66 ) }
    apic_0 { pt3dadd( 1.73523, 10.7354, 3.2027, 2.66 ) }
    apic_0 { pt3dadd( 1.73596, 25.3489, 1.37827, 2.0 ) }
    apic_0 { pt3dadd( 1.73641, 34.2515, 0.266807, 2.0 ) }
    apic_0 { pt3dadd( 1.73668, 39.7402, -0.418444, 2.0 ) }
    apic_0 { pt3dadd( 1.73728, 51.703, -1.91194, 2.0 ) }
    apic_0 { pt3dadd( 1.73802, 66.5292, -3.76294, 2.0 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 28/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -5.01111, 6.09531, -4.4687, 1.33 ) }
    dend_21 { pt3dadd( -4.9566, 6.03096, -4.41962, 1.33 ) }
    dend_21 { pt3dadd( -8.45038, 6.37103, -7.52754, 1.33 ) }
    dend_21 { pt3dadd( -11.637, 6.6812, -10.3622, 1.33 ) }
    dend_21 { pt3dadd( -13.4675, 6.85937, -11.9905, 1.33 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 33/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -4.22832, -6.88919, -3.4678, 1.33 ) }
    dend_16 { pt3dadd( -3.82607, -6.20193, -3.13418, 1.33 ) }
    dend_16 { pt3dadd( -6.32578, -9.52136, 0.106975, 1.33 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 36/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 0.0471281, -5.79206, -6.52533, 1.33 ) }
    dend_15 { pt3dadd( 0.0754971, -6.76968, -7.6674, 1.33 ) }
    dend_15 { pt3dadd( 18.4468, -9.69837, 0.855211, 0.67 ) }
    dend_15 { pt3dadd( 27.3093, -10.8249, 4.48227, 0.67 ) }
    dend_15 { pt3dadd( 34.1175, -11.2501, 6.92746, 0.67 ) }
    dend_15 { pt3dadd( 38.5773, -11.3596, 8.32437, 0.67 ) }
    dend_15 { pt3dadd( 44.7683, -11.3477, 10.0531, 0.67 ) }
    dend_15 { pt3dadd( 51.3569, -10.8805, 11.2591, 0.67 ) }
    dend_15 { pt3dadd( 59.0648, -9.64763, 11.5295, 0.67 ) }
    dend_15 { pt3dadd( 65.9994, -8.28108, 11.3189, 0.67 ) }
    dend_15 { pt3dadd( 70.3067, -7.18518, 10.9543, 0.67 ) }
    dend_15 { pt3dadd( 72.5441, -6.52005, 10.7009, 1.33 ) }
    dend_15 { pt3dadd( 77.3474, -5.07311, 9.95309, 0.67 ) }
    dend_15 { pt3dadd( 82.4343, -3.56367, 8.88749, 0.67 ) }
    dend_15 { pt3dadd( 92.7285, -0.780946, 6.33126, 0.67 ) }
    dend_15 { pt3dadd( 99.9983, 0.68397, 4.61057, 0.67 ) }
    dend_15 { pt3dadd( 103.62, 1.29449, 3.78359, 0.67 ) }
    dend_15 { pt3dadd( 105.285, 1.5258, 3.50534, 0.67 ) }
    dend_15 { pt3dadd( 109.251, 1.88879, 3.08605, 0.67 ) }
    dend_15 { pt3dadd( 113.962, 1.99515, 2.79693, 0.67 ) }
    dend_15 { pt3dadd( 116.795, 2.08943, 2.71375, 0.67 ) }
    dend_15 { pt3dadd( 119.162, 2.06528, 2.54561, 0.67 ) }
    dend_15 { pt3dadd( 126.662, 2.02906, 1.97127, 0.67 ) }
    dend_15 { pt3dadd( 130.865, 2.0862, 1.60515, 0.67 ) }
    dend_15 { pt3dadd( 140.913, 2.19435, 0.63254, 0.67 ) }
    dend_15 { pt3dadd( 148.926, 2.22511, 0.0175563, 0.67 ) }
    dend_15 { pt3dadd( 153.367, 1.94619, -0.234233, 0.67 ) }
    dend_15 { pt3dadd( 156.657, 1.56692, -0.414405, 0.67 ) }
    dend_15 { pt3dadd( 160.882, 0.85183, -0.829913, 0.67 ) }
    dend_15 { pt3dadd( 163.855, 0.238082, -1.11483, 0.67 ) }
    dend_15 { pt3dadd( 171.07, -1.36227, -1.79124, 0.67 ) }
    dend_15 { pt3dadd( 180.665, -3.20501, -2.75602, 0.67 ) }
    dend_15 { pt3dadd( 187.863, -3.89527, -3.69509, 0.67 ) }
    dend_15 { pt3dadd( 192.933, -3.96316, -4.53574, 0.67 ) }
    dend_15 { pt3dadd( 195.217, -3.77509, -5.0917, 0.33 ) }
    dend_15 { pt3dadd( 200.286, -2.56241, -6.83275, 0.67 ) }
    dend_15 { pt3dadd( 203.178, -1.33289, -8.20732, 0.67 ) }
    dend_15 { pt3dadd( 206.798, 1.09262, -10.2203, 0.67 ) }
    dend_15 { pt3dadd( 208.25, 2.25104, -11.0049, 0.67 ) }
    dend_15 { pt3dadd( 211.563, 5.16237, -12.6306, 0.67 ) }
    dend_15 { pt3dadd( 214.37, 7.71735, -14.0438, 0.33 ) }
    dend_15 { pt3dadd( 215.836, 9.05058, -14.8041, 0.67 ) }
    dend_15 { pt3dadd( 218.723, 11.7183, -16.2682, 0.33 ) }
    dend_15 { pt3dadd( 221.579, 14.7303, -17.6654, 0.67 ) }
    dend_15 { pt3dadd( 223.083, 16.5209, -18.3327, 0.33 ) }
    dend_15 { pt3dadd( 225.497, 20.0105, -19.2132, 0.33 ) }
    dend_15 { pt3dadd( 226.282, 21.1905, -19.4771, 0.67 ) }
    dend_15 { pt3dadd( 227.494, 22.9552, -19.6444, 0.33 ) }
    dend_15 { pt3dadd( 228.982, 24.8288, -19.621, 0.67 ) }
    dend_15 { pt3dadd( 231.009, 27.1051, -19.4743, 0.67 ) }
    dend_15 { pt3dadd( 234.433, 30.8307, -19.1646, 0.67 ) }
    dend_15 { pt3dadd( 237.155, 33.8901, -18.7837, 0.33 ) }
    dend_15 { pt3dadd( 241.385, 38.322, -18.093, 0.67 ) }
    dend_15 { pt3dadd( 244.243, 41.1485, -17.4831, 0.33 ) }
    dend_15 { pt3dadd( 245.507, 42.2484, -17.1381, 0.33 ) }
    dend_15 { pt3dadd( 259.352, 45.1414, -16.9269, 0.33 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.19789, 7.79738, -4.33335, 2.66 ) }
    dend_0 { pt3dadd( 1.82103, 6.53301, -3.60895, 2.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 94/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.65435, -9.1711, 0.561961, 0.67 ) }
    axon_0 { pt3dadd( 4.88483, -23.8191, 0.561961, 0.67 ) }
    axon_0 { pt3dadd( 8.1153, -38.4671, 0.561961, 0.67 ) }
    // Section: apic_4, id: apic_4, parent: apic_0 (entry count 97/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 1.73802, 66.5292, -3.76294, 2.0 ) }
    apic_4 { pt3dadd( -2.62021, 68.999, -8.55928, 0.67 ) }
    apic_4 { pt3dadd( -4.46386, 70.1788, -10.3671, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    apic_4 { pt3dadd( -6.52405, 71.2674, -12.205, 0.67 ) }
    apic_4 { pt3dadd( -8.1299, 72.1751, -13.5476, 0.67 ) }
    apic_4 { pt3dadd( -9.74945, 73.0768, -14.8265, 0.67 ) }
    apic_4 { pt3dadd( -11.7809, 74.2105, -16.372, 0.67 ) }
    apic_4 { pt3dadd( -14.648, 75.8841, -18.2214, 0.67 ) }
    apic_4 { pt3dadd( -17.6593, 77.7468, -20.1198, 0.67 ) }
    apic_4 { pt3dadd( -20.8886, 79.8585, -22.1612, 0.67 ) }
    apic_4 { pt3dadd( -23.4942, 81.4345, -23.8214, 0.67 ) }
    apic_4 { pt3dadd( -24.9357, 82.2482, -24.7525, 0.67 ) }
    apic_4 { pt3dadd( -27.8842, 83.8716, -26.6815, 0.67 ) }
    apic_4 { pt3dadd( -30.259, 85.182, -28.3734, 0.67 ) }
    apic_4 { pt3dadd( -33.1862, 87.0092, -31.0754, 0.67 ) }
    apic_4 { pt3dadd( -35.0444, 88.0543, -33.1788, 0.67 ) }
    apic_4 { pt3dadd( -35.7934, 88.5285, -34.189, 0.67 ) }
    apic_4 { pt3dadd( -36.7819, 89.1375, -35.6114, 0.67 ) }
    apic_4 { pt3dadd( -39.21, 90.4675, -39.4388, 0.67 ) }
    apic_4 { pt3dadd( -41.9221, 91.8707, -44.2779, 0.67 ) }
    apic_4 { pt3dadd( -42.5696, 92.3231, -45.6394, 0.67 ) }
    apic_4 { pt3dadd( -43.5314, 93.0864, -47.7816, 0.67 ) }
    apic_4 { pt3dadd( -45.1129, 94.2546, -51.5591, 0.67 ) }
    apic_4 { pt3dadd( -45.8969, 94.819, -53.6588, 0.67 ) }
    apic_4 { pt3dadd( -47.0072, 95.8226, -56.8963, 0.67 ) }
    apic_4 { pt3dadd( -47.7773, 96.8182, -59.8474, 0.67 ) }
    apic_4 { pt3dadd( -48.022, 97.2853, -61.3533, 1.33 ) }
    apic_4 { pt3dadd( -48.2764, 98.0718, -63.9754, 0.67 ) }
    apic_4 { pt3dadd( -48.482, 99.0136, -66.5613, 0.33 ) }
    apic_4 { pt3dadd( -48.7923, 100.154, -69.1029, 2.0 ) }
    apic_4 { pt3dadd( -49.7274, 103.01, -75.0091, 0.33 ) }
    apic_4 { pt3dadd( -50.0707, 103.983, -76.8647, 0.67 ) }
    apic_4 { pt3dadd( -50.6417, 105.528, -79.5951, 0.33 ) }
    apic_4 { pt3dadd( -51.6048, 107.532, -82.8807, 1.33 ) }
    apic_4 { pt3dadd( -52.0767, 108.243, -84.0129, 0.33 ) }
    apic_4 { pt3dadd( -52.5577, 108.826, -84.871, 0.67 ) }
    apic_4 { pt3dadd( -53.5846, 109.843, -85.9057, 0.67 ) }
    apic_4 { pt3dadd( -54.5348, 110.76, -86.8362, 0.33 ) }
    apic_4 { pt3dadd( -55.2189, 111.323, -87.4121, 0.67 ) }
    apic_4 { pt3dadd( -56.4427, 112.324, -88.5254, 0.33 ) }
    apic_4 { pt3dadd( -58.0152, 113.482, -89.6341, 1.33 ) }
    apic_4 { pt3dadd( -59.643, 114.59, -90.5578, 1.33 ) }
    apic_4 { pt3dadd( -61.6512, 115.99, -91.5835, 0.33 ) }
    apic_4 { pt3dadd( -63.2802, 117.272, -92.3563, 1.33 ) }
    apic_4 { pt3dadd( -65.0651, 118.782, -93.1401, 0.33 ) }
    apic_4 { pt3dadd( -68.5741, 121.789, -94.5613, 2.0 ) }
    apic_4 { pt3dadd( -70.7913, 123.83, -95.3505, 0.33 ) }
    apic_4 { pt3dadd( -72.1975, 125.234, -95.7827, 0.33 ) }
    apic_4 { pt3dadd( -73.4596, 126.55, -96.1963, 0.67 ) }
    apic_4 { pt3dadd( -74.257, 127.363, -96.5541, 0.33 ) }
    apic_4 { pt3dadd( -75.1273, 128.279, -97.0497, 0.33 ) }
    apic_4 { pt3dadd( -75.8939, 129.183, -97.7084, 0.33 ) }
    apic_4 { pt3dadd( -76.5774, 129.95, -98.3111, 0.67 ) }
    apic_4 { pt3dadd( -78.1786, 131.66, -99.7174, 0.33 ) }
    apic_4 { pt3dadd( -79.4715, 132.966, -100.822, 0.67 ) }
    apic_4 { pt3dadd( -80.9472, 134.38, -102.039, 0.33 ) }
    apic_4 { pt3dadd( -81.8567, 135.282, -102.894, 1.33 ) }
    apic_4 { pt3dadd( -82.7361, 136.06, -103.827, 0.67 ) }
    apic_4 { pt3dadd( -83.737, 136.809, -104.822, 0.67 ) }
    apic_4 { pt3dadd( -84.8649, 137.506, -105.833, 0.67 ) }
    apic_4 { pt3dadd( -85.9945, 138.029, -106.821, 0.33 ) }
    apic_4 { pt3dadd( -88.5226, 138.762, -108.902, 1.33 ) }
    apic_4 { pt3dadd( -90.7665, 139.251, -110.632, 0.33 ) }
    apic_4 { pt3dadd( -93.0504, 139.608, -112.28, 0.33 ) }
    apic_4 { pt3dadd( -94.7208, 139.757, -113.548, 0.67 ) }
    apic_4 { pt3dadd( -96.2247, 139.79, -114.708, 0.33 ) }
    apic_4 { pt3dadd( -97.4919, 139.756, -115.666, 1.33 ) }
    apic_4 { pt3dadd( -98.5562, 139.651, -116.42, 0.33 ) }
    apic_4 { pt3dadd( -99.3648, 139.503, -117.061, 0.67 ) }
    apic_4 { pt3dadd( -101.377, 138.884, -119.634, 1.33 ) }
    apic_4 { pt3dadd( -102.27, 138.479, -121.202, 0.33 ) }
    apic_4 { pt3dadd( -102.623, 138.293, -121.878, 0.33 ) }
    apic_4 { pt3dadd( -103.104, 138.042, -122.806, 1.33 ) }
    apic_4 { pt3dadd( -104.295, 137.48, -124.734, 0.33 ) }
    apic_4 { pt3dadd( -107.257, 136.319, -129.1, 0.67 ) }
    apic_4 { pt3dadd( -108.332, 136.033, -130.454, 0.33 ) }
    apic_4 { pt3dadd( -109.987, 135.674, -132.433, 0.67 ) }
    apic_4 { pt3dadd( -111.153, 135.451, -133.604, 0.33 ) }
    apic_4 { pt3dadd( -113.529, 135.066, -135.693, 1.33 ) }
    apic_4 { pt3dadd( -116.153, 134.737, -137.297, 0.33 ) }
    apic_4 { pt3dadd( -116.939, 134.627, -137.531, 0.67 ) }
    apic_4 { pt3dadd( -118.177, 134.442, -137.906, 0.33 ) }
    apic_4 { pt3dadd( -119.617, 134.197, -138.721, 0.67 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 80/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 1.73802, 66.5292, -3.76294, 2.0 ) }
    apic_1 { pt3dadd( 0.031135, 75.8859, -5.60297, 2.0 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 82/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -13.4675, 6.85937, -11.9905, 1.33 ) }
    dend_25 { pt3dadd( -15.9387, 4.43199, -11.6361, 0.67 ) }
    dend_25 { pt3dadd( -18.9097, 1.56888, -12.0482, 0.67 ) }
    dend_25 { pt3dadd( -22.5604, -2.7383, -12.858, 1.33 ) }
    dend_25 { pt3dadd( -25.5422, -6.64458, -13.8459, 0.67 ) }
    dend_25 { pt3dadd( -27.0174, -8.64123, -14.3425, 1.33 ) }
    dend_25 { pt3dadd( -30.5397, -13.0947, -15.4348, 0.67 ) }
    dend_25 { pt3dadd( -31.694, -14.4361, -15.9953, 1.33 ) }
    dend_25 { pt3dadd( -33.6983, -17.0232, -17.3399, 0.67 ) }
    dend_25 { pt3dadd( -35.5289, -19.8626, -18.8788, 1.33 ) }
    dend_25 { pt3dadd( -37.7864, -23.6516, -20.5629, 0.67 ) }
    dend_25 { pt3dadd( -40.0605, -27.5231, -21.5826, 0.67 ) }
    dend_25 { pt3dadd( -42.9966, -32.7527, -22.2277, 0.67 ) }
    dend_25 { pt3dadd( -45.426, -37.0417, -22.346, 1.33 ) }
    dend_25 { pt3dadd( -46.852, -39.4201, -22.1951, 0.33 ) }
    dend_25 { pt3dadd( -50.9843, -46.512, -20.8942, 1.33 ) }
    dend_25 { pt3dadd( -56.0109, -55.2605, -17.9412, 0.67 ) }
    dend_25 { pt3dadd( -57.4756, -57.6545, -16.8278, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_25 { pt3dadd( -58.586, -59.3163, -15.8708, 0.67 ) }
    dend_25 { pt3dadd( -60.312, -61.6817, -14.3241, 1.33 ) }
    dend_25 { pt3dadd( -62.8976, -65.3739, -11.7637, 0.67 ) }
    dend_25 { pt3dadd( -65.4845, -69.4848, -8.63994, 0.67 ) }
    dend_25 { pt3dadd( -66.9441, -71.6851, -7.1239, 0.33 ) }
    dend_25 { pt3dadd( -67.5225, -72.6396, -6.44294, 0.33 ) }
    dend_25 { pt3dadd( -68.2718, -73.8377, -5.74264, 0.67 ) }
    dend_25 { pt3dadd( -69.4701, -75.4845, -4.98657, 0.33 ) }
    dend_25 { pt3dadd( -72.6793, -79.2046, -3.91422, 0.67 ) }
    dend_25 { pt3dadd( -74.2049, -81.3808, -3.63132, 1.33 ) }
    dend_25 { pt3dadd( -76.0152, -84.435, -3.36951, 0.67 ) }
    dend_25 { pt3dadd( -80.3652, -91.9315, -2.98851, 0.67 ) }
    dend_25 { pt3dadd( -81.9284, -94.6266, -2.94114, 0.67 ) }
    dend_25 { pt3dadd( -83.1003, -96.8293, -2.9466, 0.67 ) }
    dend_25 { pt3dadd( -86.769, -105.098, -2.91861, 0.67 ) }
    dend_25 { pt3dadd( -87.7506, -107.615, -2.88835, 0.67 ) }
    dend_25 { pt3dadd( -88.6638, -110.459, -2.77222, 0.33 ) }
    dend_25 { pt3dadd( -88.8128, -111.435, -2.69369, 0.67 ) }
    dend_25 { pt3dadd( -89.2952, -116.418, -2.14555, 0.33 ) }
    dend_25 { pt3dadd( -89.7378, -120.727, -1.38908, 0.67 ) }
    dend_25 { pt3dadd( -95.4518, -132.493, 0.759162, 0.67 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -13.4675, 6.85937, -11.9905, 1.33 ) }
    dend_22 { pt3dadd( -17.8482, 13.3169, -10.1676, 1.33 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -6.32578, -9.52136, 0.106975, 1.33 ) }
    dend_18 { pt3dadd( -9.55485, -10.0227, 1.42331, 0.67 ) }
    dend_18 { pt3dadd( -10.2341, -10.1564, 1.81817, 0.67 ) }
    dend_18 { pt3dadd( -12.4479, -10.501, 3.36437, 0.67 ) }
    dend_18 { pt3dadd( -13.4688, -10.6104, 4.19744, 0.67 ) }
    dend_18 { pt3dadd( -14.6804, -10.7402, 5.18613, 0.67 ) }
    dend_18 { pt3dadd( -16.0826, -10.8904, 6.33039, 0.67 ) }
    dend_18 { pt3dadd( -17.7047, -11.0025, 7.56703, 0.67 ) }
    dend_18 { pt3dadd( -21.0756, -11.3096, 10.397, 0.67 ) }
    dend_18 { pt3dadd( -24.0283, -11.8203, 13.2239, 0.67 ) }
    dend_18 { pt3dadd( -29.8912, -12.485, 16.2724, 0.67 ) }
    dend_18 { pt3dadd( -36.3221, -12.5508, 17.893, 0.67 ) }
    dend_18 { pt3dadd( -42.8973, -11.668, 17.6097, 0.67 ) }
    dend_18 { pt3dadd( -49.5152, -11.5032, 18.014, 0.67 ) }
    dend_18 { pt3dadd( -55.9659, -10.0122, 18.6086, 0.67 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 38/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -6.32578, -9.52136, 0.106975, 1.33 ) }
    dend_17 { pt3dadd( -9.27916, -21.7137, 0.693845, 0.67 ) }
    dend_17 { pt3dadd( -10.5743, -25.8805, 1.06281, 0.67 ) }
    dend_17 { pt3dadd( -11.8167, -29.859, 1.66252, 0.67 ) }
    dend_17 { pt3dadd( -14.2065, -37.1052, 3.00508, 0.67 ) }
    dend_17 { pt3dadd( -17.7931, -46.3942, 5.37234, 0.67 ) }
    dend_17 { pt3dadd( -19.1366, -49.5575, 6.31325, 0.67 ) }
    dend_17 { pt3dadd( -20.1157, -51.5934, 7.31105, 0.67 ) }
    dend_17 { pt3dadd( -22.1163, -55.744, 9.46115, 0.67 ) }
    dend_17 { pt3dadd( -22.9114, -57.5278, 10.408, 0.67 ) }
    dend_17 { pt3dadd( -24.9267, -62.4382, 12.8714, 0.67 ) }
    dend_17 { pt3dadd( -26.3569, -65.5852, 13.6928, 0.67 ) }
    dend_17 { pt3dadd( -28.7898, -70.8901, 14.3745, 0.67 ) }
    dend_17 { pt3dadd( -30.5466, -74.6797, 14.5097, 0.67 ) }
    dend_17 { pt3dadd( -31.7322, -77.0226, 14.4078, 0.67 ) }
    dend_17 { pt3dadd( -32.592, -79.0169, 14.2513, 0.67 ) }
    dend_17 { pt3dadd( -37.2853, -91.0862, 12.868, 0.67 ) }
    dend_17 { pt3dadd( -38.7575, -95.2391, 12.4346, 0.67 ) }
    dend_17 { pt3dadd( -39.8884, -98.4939, 12.1314, 0.67 ) }
    dend_17 { pt3dadd( -40.8765, -101.452, 11.89, 0.67 ) }
    dend_17 { pt3dadd( -43.1651, -108.323, 11.2956, 0.67 ) }
    dend_17 { pt3dadd( -44.3157, -111.649, 11.0081, 0.67 ) }
    dend_17 { pt3dadd( -47.3068, -120.011, 10.9015, 0.67 ) }
    dend_17 { pt3dadd( -49.2846, -124.468, 11.1298, 0.67 ) }
    dend_17 { pt3dadd( -51.5476, -128.193, 11.3048, 0.67 ) }
    dend_17 { pt3dadd( -54.5289, -131.693, 11.4389, 0.67 ) }
    dend_17 { pt3dadd( -55.9293, -132.68, 11.3863, 0.67 ) }
    dend_17 { pt3dadd( -63.1167, -135.717, 9.99909, 0.67 ) }
    dend_17 { pt3dadd( -66.7169, -136.424, 8.73652, 0.67 ) }
    dend_17 { pt3dadd( -72.4013, -136.818, 5.8918, 0.67 ) }
    dend_17 { pt3dadd( -75.371, -136.629, 3.9223, 0.67 ) }
    dend_17 { pt3dadd( -80.5536, -135.445, -0.817997, 0.67 ) }
    dend_17 { pt3dadd( -85.6021, -133.767, -6.39042, 0.67 ) }
    dend_17 { pt3dadd( -87.4462, -132.886, -8.79128, 0.67 ) }
    dend_17 { pt3dadd( -88.3546, -132.354, -10.1339, 0.67 ) }
    dend_17 { pt3dadd( -89.9467, -131.487, -12.3834, 0.67 ) }
    dend_17 { pt3dadd( -93.461, -129.411, -16.9593, 0.33 ) }
    dend_17 { pt3dadd( -95.4502, -128.435, -18.7314, 0.33 ) }
    dend_17 { pt3dadd( -97.435, -127.555, -19.7911, 0.33 ) }
    dend_17 { pt3dadd( -101.231, -125.922, -21.4313, 1.33 ) }
    dend_17 { pt3dadd( -106.298, -124.198, -22.9147, 0.33 ) }
    dend_17 { pt3dadd( -106.698, -124.051, -23.1067, 0.67 ) }
    dend_17 { pt3dadd( -108.613, -123.192, -24.3028, 0.33 ) }
    dend_17 { pt3dadd( -108.937, -123.014, -24.5907, 0.67 ) }
    dend_17 { pt3dadd( -110.221, -122.277, -25.8544, 0.33 ) }
    dend_17 { pt3dadd( -111.387, -121.476, -27.2834, 1.33 ) }
    dend_17 { pt3dadd( -117.136, -116.889, -35.743, 0.33 ) }
    dend_17 { pt3dadd( -118.038, -116.104, -37.2281, 0.67 ) }
    dend_17 { pt3dadd( -119.293, -114.862, -39.6853, 0.33 ) }
    dend_17 { pt3dadd( -120.226, -113.864, -41.7342, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 88/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 1.82103, 6.53301, -3.60895, 2.66 ) }
    dend_12 { pt3dadd( 9.69643, 10.7226, -18.7305, 0.67 ) }
    dend_12 { pt3dadd( 10.3808, 11.1377, -19.9802, 1.33 ) }
    dend_12 { pt3dadd( 11.5857, 12.0837, -22.454, 0.67 ) }
    dend_12 { pt3dadd( 14.1101, 14.4057, -27.8977, 0.67 ) }
    dend_12 { pt3dadd( 15.2968, 15.5558, -30.369, 1.33 ) }
    dend_12 { pt3dadd( 16.7106, 16.8459, -33.0995, 0.67 ) }
    dend_12 { pt3dadd( 19.0697, 19.9076, -37.3601, 2.0 ) }
    dend_12 { pt3dadd( 20.8201, 22.3086, -40.8759, 0.67 ) }
    dend_12 { pt3dadd( 21.34, 22.9005, -41.914, 0.67 ) }
    dend_12 { pt3dadd( 23.4081, 24.6462, -45.7299, 0.67 ) }
    dend_12 { pt3dadd( 24.865, 25.6469, -48.5511, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_12 { pt3dadd( 26.5602, 26.5939, -51.7243, 1.33 ) }
    dend_12 { pt3dadd( 29.499, 27.9554, -56.7656, 0.67 ) }
    dend_12 { pt3dadd( 31.8408, 28.8194, -60.5615, 0.67 ) }
    dend_12 { pt3dadd( 35.487, 30.0408, -66.8531, 1.33 ) }
    dend_12 { pt3dadd( 37.2907, 30.5992, -70.2529, 1.33 ) }
    dend_12 { pt3dadd( 39.5088, 31.2383, -74.5126, 1.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 6/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.82103, 6.53301, -3.60895, 2.66 ) }
    dend_1 { pt3dadd( 7.70817, 10.6636, -8.93822, 2.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 8.1153, -38.4671, 0.561961, 0.67 ) }
    axon_1 { pt3dadd( 11.3458, -53.1151, 0.561961, 0.67 ) }
    axon_1 { pt3dadd( 14.5763, -67.7631, 0.561961, 0.67 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 11/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 0.031135, 75.8859, -5.60297, 2.0 ) }
    apic_3 { pt3dadd( 2.97481, 78.488, -5.96291, 0.67 ) }
    apic_3 { pt3dadd( 8.01921, 82.9931, -5.96466, 0.67 ) }
    apic_3 { pt3dadd( 8.87326, 83.6999, -5.91556, 0.67 ) }
    apic_3 { pt3dadd( 17.9848, 90.3887, -5.11327, 0.67 ) }
    apic_3 { pt3dadd( 20.8016, 92.3127, -4.76035, 0.67 ) }
    apic_3 { pt3dadd( 24.7511, 94.965, -4.18145, 0.67 ) }
    apic_3 { pt3dadd( 28.7118, 97.5589, -3.25999, 0.67 ) }
    apic_3 { pt3dadd( 32.189, 99.8181, -1.99317, 0.67 ) }
    apic_3 { pt3dadd( 35.8452, 102.126, -0.460593, 0.67 ) }
    apic_3 { pt3dadd( 38.0632, 103.455, 0.642384, 0.67 ) }
    apic_3 { pt3dadd( 39.8381, 104.538, 1.44001, 0.67 ) }
    apic_3 { pt3dadd( 42.4598, 106.344, 2.6498, 0.67 ) }
    apic_3 { pt3dadd( 45.1451, 108.726, 3.90528, 0.67 ) }
    apic_3 { pt3dadd( 47.2473, 111.082, 5.03799, 0.67 ) }
    apic_3 { pt3dadd( 48.7686, 112.864, 5.89513, 0.67 ) }
    apic_3 { pt3dadd( 51.7004, 116.173, 7.40673, 0.67 ) }
    apic_3 { pt3dadd( 54.7382, 119.166, 8.80573, 0.67 ) }
    apic_3 { pt3dadd( 56.5449, 120.729, 9.47643, 0.67 ) }
    apic_3 { pt3dadd( 58.3851, 122.03, 10.0966, 0.67 ) }
    apic_3 { pt3dadd( 61.9748, 123.96, 11.4012, 0.67 ) }
    apic_3 { pt3dadd( 63.7669, 124.615, 12.1372, 0.67 ) }
    apic_3 { pt3dadd( 66.585, 125.4, 13.3519, 0.67 ) }
    apic_3 { pt3dadd( 69.4103, 126.112, 14.4743, 0.67 ) }
    apic_3 { pt3dadd( 72.8134, 126.865, 15.8439, 0.67 ) }
    apic_3 { pt3dadd( 76.5875, 127.74, 17.4532, 0.67 ) }
    apic_3 { pt3dadd( 80.582, 128.881, 19.1836, 0.67 ) }
    apic_3 { pt3dadd( 82.4669, 129.453, 20.0245, 0.33 ) }
    apic_3 { pt3dadd( 84.3925, 130.136, 20.9389, 0.67 ) }
    apic_3 { pt3dadd( 86.2026, 130.827, 21.8163, 0.67 ) }
    apic_3 { pt3dadd( 87.8447, 131.593, 22.5474, 0.33 ) }
    apic_3 { pt3dadd( 90.107, 132.549, 23.395, 0.33 ) }
    apic_3 { pt3dadd( 91.5439, 133.253, 23.7848, 0.67 ) }
    apic_3 { pt3dadd( 99.314, 138.154, 24.4057, 0.67 ) }
    apic_3 { pt3dadd( 106.166, 144.381, 23.7485, 0.67 ) }
    apic_3 { pt3dadd( 113.021, 150.564, 24.6817, 0.67 ) }
    apic_3 { pt3dadd( 119.273, 157.36, 25.9276, 0.67 ) }
    apic_3 { pt3dadd( 125.732, 163.952, 27.116, 0.67 ) }
    apic_3 { pt3dadd( 131.318, 171.365, 28.3361, 0.67 ) }
    apic_3 { pt3dadd( 136.124, 179.454, 28.6327, 0.67 ) }
    apic_3 { pt3dadd( 141.002, 187.392, 27.3574, 0.67 ) }
    apic_3 { pt3dadd( 146.583, 194.455, 24.8715, 0.67 ) }
    apic_3 { pt3dadd( 152.883, 200.168, 21.2257, 0.67 ) }
    apic_3 { pt3dadd( 157.715, 205.988, 15.8852, 0.67 ) }
    apic_3 { pt3dadd( 163.397, 212.593, 12.6103, 0.67 ) }
    apic_3 { pt3dadd( 169.548, 219.112, 10.1198, 0.67 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 57/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 0.031135, 75.8859, -5.60297, 2.0 ) }
    apic_2 { pt3dadd( -0.495126, 81.9008, -2.65262, 2.0 ) }
    apic_2 { pt3dadd( -1.27543, 89.7339, 0.327636, 1.33 ) }
    apic_2 { pt3dadd( -1.66914, 95.6605, 2.45753, 1.33 ) }
    apic_2 { pt3dadd( -1.96726, 102.079, 4.61977, 1.33 ) }
    apic_2 { pt3dadd( -2.3167, 107.097, 6.06189, 1.33 ) }
    apic_2 { pt3dadd( -3.01883, 115.692, 8.14606, 1.33 ) }
    apic_2 { pt3dadd( -3.2396, 120.764, 8.86244, 1.33 ) }
    apic_2 { pt3dadd( -3.36695, 124.421, 9.00956, 1.33 ) }
    apic_2 { pt3dadd( -3.42668, 127.111, 9.14322, 1.33 ) }
    apic_2 { pt3dadd( -3.28703, 133.156, 9.66886, 1.33 ) }
    apic_2 { pt3dadd( -3.17898, 135.979, 10.068, 1.33 ) }
    apic_2 { pt3dadd( -3.01585, 143.51, 11.3644, 1.33 ) }
    apic_2 { pt3dadd( -3.07916, 148.404, 12.2255, 1.33 ) }
    apic_2 { pt3dadd( -3.07583, 156.951, 13.6905, 1.33 ) }
    apic_2 { pt3dadd( -2.91385, 163.699, 14.9102, 1.33 ) }
    apic_2 { pt3dadd( -2.71338, 172.413, 16.6926, 1.33 ) }
    apic_2 { pt3dadd( -2.5764, 177.895, 17.6856, 1.33 ) }
    apic_2 { pt3dadd( -2.52188, 181.133, 18.1939, 1.33 ) }
    apic_2 { pt3dadd( -2.2171, 189.91, 19.4308, 1.33 ) }
    apic_2 { pt3dadd( -2.13178, 193.505, 19.8103, 1.33 ) }
    apic_2 { pt3dadd( -1.74643, 200.784, 20.6468, 1.33 ) }
    apic_2 { pt3dadd( -1.02331, 209.789, 22.0925, 1.33 ) }
    apic_2 { pt3dadd( -0.527284, 215.422, 23.1777, 1.33 ) }
    apic_2 { pt3dadd( 0.139632, 223.936, 24.9513, 0.67 ) }
    apic_2 { pt3dadd( 0.40351, 230.051, 26.2327, 0.67 ) }
    apic_2 { pt3dadd( 0.595298, 233.646, 27.0183, 0.67 ) }
    apic_2 { pt3dadd( 0.857223, 237.322, 27.8447, 0.67 ) }
    apic_2 { pt3dadd( 0.887426, 239.551, 28.4741, 0.67 ) }
    apic_2 { pt3dadd( 0.961102, 242.081, 29.1308, 0.67 ) }
    apic_2 { pt3dadd( 1.33429, 250.418, 30.8911, 0.67 ) }
    apic_2 { pt3dadd( 2.32455, 263.505, 34.036, 0.67 ) }
    apic_2 { pt3dadd( 5.39373, 276.47, 36.1198, 0.67 ) }
    apic_2 { pt3dadd( 9.11308, 288.981, 39.3413, 0.67 ) }
    apic_2 { pt3dadd( 10.8414, 301.403, 44.1618, 0.67 ) }
    apic_2 { pt3dadd( 11.4211, 312.91, 50.9254, 0.67 ) }
    apic_2 { pt3dadd( 12.6136, 324.681, 57.1768, 0.67 ) }
    apic_2 { pt3dadd( 14.9858, 335.052, 65.1132, 0.67 ) }
    apic_2 { pt3dadd( 17.929, 344.531, 73.8308, 0.67 ) }
    apic_2 { pt3dadd( 18.8085, 354.29, 82.7192, 0.67 ) }
    apic_2 { pt3dadd( 21.5139, 364.222, 91.0483, 0.67 ) }
    apic_2 { pt3dadd( 23.259, 375.463, 98.0133, 0.67 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 99/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -17.8482, 13.3169, -10.1676, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_24 { pt3dadd( -22.126, 16.4273, -9.12589, 0.67 ) }
    dend_24 { pt3dadd( -27.9065, 20.1478, -7.15579, 0.67 ) }
    dend_24 { pt3dadd( -30.3302, 21.4557, -6.35662, 0.67 ) }
    dend_24 { pt3dadd( -32.6609, 22.5127, -5.71293, 0.67 ) }
    dend_24 { pt3dadd( -35.522, 23.6633, -5.01517, 0.67 ) }
    dend_24 { pt3dadd( -36.6507, 24.113, -4.76278, 0.67 ) }
    dend_24 { pt3dadd( -46.211, 27.6132, -2.5078, 0.67 ) }
    dend_24 { pt3dadd( -49.4794, 28.7822, -1.52907, 0.67 ) }
    dend_24 { pt3dadd( -52.4287, 29.5364, -0.528112, 0.67 ) }
    dend_24 { pt3dadd( -53.5033, 29.7407, -0.138844, 0.67 ) }
    dend_24 { pt3dadd( -56.387, 30.2114, 1.09217, 0.67 ) }
    dend_24 { pt3dadd( -61.4837, 30.7595, 3.64304, 0.67 ) }
    dend_24 { pt3dadd( -62.8885, 30.9104, 4.40552, 0.67 ) }
    dend_24 { pt3dadd( -66.1434, 31.3316, 6.33625, 0.67 ) }
    dend_24 { pt3dadd( -68.2387, 31.5004, 7.61297, 0.67 ) }
    dend_24 { pt3dadd( -73.7866, 31.9204, 10.7017, 0.67 ) }
    dend_24 { pt3dadd( -77.3368, 32.0638, 12.3414, 0.67 ) }
    dend_24 { pt3dadd( -82.4322, 32.3508, 14.5157, 0.67 ) }
    dend_24 { pt3dadd( -88.6507, 32.9405, 17.3811, 0.67 ) }
    dend_24 { pt3dadd( -93.015, 33.5419, 19.5517, 0.67 ) }
    dend_24 { pt3dadd( -97.7845, 34.138, 22.3117, 0.67 ) }
    dend_24 { pt3dadd( -102.144, 34.5335, 25.058, 0.67 ) }
    dend_24 { pt3dadd( -106.793, 34.8458, 28.3639, 0.67 ) }
    dend_24 { pt3dadd( -109.16, 34.6656, 30.4397, 0.67 ) }
    dend_24 { pt3dadd( -110.776, 34.548, 32.1806, 0.67 ) }
    dend_24 { pt3dadd( -113.702, 34.2158, 36.514, 0.67 ) }
    dend_24 { pt3dadd( -114.847, 33.6032, 39.217, 0.67 ) }
    dend_24 { pt3dadd( -115.385, 33.0213, 41.4045, 0.33 ) }
    dend_24 { pt3dadd( -115.856, 31.2309, 43.6245, 0.67 ) }
    dend_24 { pt3dadd( -125.424, 31.3606, 50.374, 0.67 ) }
    dend_24 { pt3dadd( -133.917, 32.5627, 58.3568, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 31/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -17.8482, 13.3169, -10.1676, 1.33 ) }
    dend_23 { pt3dadd( -18.7376, 16.5055, -11.0773, 0.67 ) }
    dend_23 { pt3dadd( -19.2043, 17.7172, -11.3935, 0.67 ) }
    dend_23 { pt3dadd( -22.5658, 24.8179, -12.9908, 0.67 ) }
    dend_23 { pt3dadd( -25.4304, 30.3019, -14.1118, 0.67 ) }
    dend_23 { pt3dadd( -27.0458, 33.1002, -14.6492, 0.67 ) }
    dend_23 { pt3dadd( -29.806, 37.544, -15.3385, 0.67 ) }
    dend_23 { pt3dadd( -31.9742, 40.4705, -15.7021, 0.67 ) }
    dend_23 { pt3dadd( -35.5427, 44.7193, -15.9331, 0.67 ) }
    dend_23 { pt3dadd( -36.75, 45.9966, -15.9312, 0.67 ) }
    dend_23 { pt3dadd( -38.3306, 47.4829, -16.0136, 0.67 ) }
    dend_23 { pt3dadd( -41.8581, 50.5897, -16.2253, 0.67 ) }
    dend_23 { pt3dadd( -44.0922, 52.7448, -16.5421, 0.67 ) }
    dend_23 { pt3dadd( -46.0632, 54.9826, -17.2356, 0.67 ) }
    dend_23 { pt3dadd( -48.5046, 58.4915, -18.836, 0.67 ) }
    dend_23 { pt3dadd( -50.2409, 61.9694, -20.8958, 0.67 ) }
    dend_23 { pt3dadd( -50.6142, 62.9663, -21.623, 0.67 ) }
    dend_23 { pt3dadd( -51.8411, 66.8672, -25.1163, 0.67 ) }
    dend_23 { pt3dadd( -52.7134, 70.1186, -28.2465, 0.67 ) }
    dend_23 { pt3dadd( -53.356, 72.377, -30.7492, 2.0 ) }
    dend_23 { pt3dadd( -54.2745, 75.4751, -34.3214, 0.33 ) }
    dend_23 { pt3dadd( -54.8018, 77.0631, -36.2599, 0.67 ) }
    dend_23 { pt3dadd( -55.7489, 79.0704, -38.891, 0.33 ) }
    dend_23 { pt3dadd( -56.1426, 79.6957, -39.7219, 2.0 ) }
    dend_23 { pt3dadd( -58.0413, 82.3724, -43.3222, 0.33 ) }
    dend_23 { pt3dadd( -58.8179, 83.5018, -44.8028, 1.33 ) }
    dend_23 { pt3dadd( -60.1837, 85.8918, -47.6341, 0.33 ) }
    dend_23 { pt3dadd( -60.8282, 87.2536, -49.1087, 1.33 ) }
    dend_23 { pt3dadd( -61.5016, 89.041, -50.9352, 0.33 ) }
    dend_23 { pt3dadd( -62.1285, 91.0163, -52.9181, 1.33 ) }
    dend_23 { pt3dadd( -62.4875, 92.7633, -54.4726, 0.33 ) }
    dend_23 { pt3dadd( -62.7802, 95.0599, -56.6254, 0.67 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 63/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -55.9659, -10.0122, 18.6086, 0.67 ) }
    dend_20 { pt3dadd( -69.7597, -10.1864, 21.8358, 0.67 ) }
    dend_20 { pt3dadd( -82.1739, -12.0526, 28.4614, 0.67 ) }
    dend_20 { pt3dadd( -95.4192, -11.3294, 33.4342, 0.67 ) }
    dend_20 { pt3dadd( -108.374, -11.0256, 39.1616, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 68/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -55.9659, -10.0122, 18.6086, 0.67 ) }
    dend_19 { pt3dadd( -66.2163, -9.86617, 23.3767, 0.67 ) }
    dend_19 { pt3dadd( -76.6762, -12.5277, 26.8518, 0.67 ) }
    dend_19 { pt3dadd( -86.7116, -14.3604, 31.793, 0.67 ) }
    dend_19 { pt3dadd( -97.7974, -14.5881, 33.9854, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 73/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 39.5088, 31.2383, -74.5126, 1.33 ) }
    dend_14 { pt3dadd( 39.8234, 32.4429, -77.5877, 0.33 ) }
    dend_14 { pt3dadd( 40.1252, 35.1215, -84.6224, 1.33 ) }
    dend_14 { pt3dadd( 40.2554, 36.8693, -90.3538, 0.33 ) }
    dend_14 { pt3dadd( 40.4977, 37.7666, -94.9218, 1.33 ) }
    dend_14 { pt3dadd( 41.1118, 38.4784, -101.136, 1.33 ) }
    dend_14 { pt3dadd( 42.871, 39.0232, -112.409, 0.67 ) }
    dend_14 { pt3dadd( 44.9725, 38.2161, -122.911, 0.67 ) }
    dend_14 { pt3dadd( 46.3656, 37.4346, -128.088, 0.67 ) }
    dend_14 { pt3dadd( 48.0416, 36.5672, -134.225, 1.33 ) }
    dend_14 { pt3dadd( 49.4116, 36.0274, -138.991, 0.33 ) }
    dend_14 { pt3dadd( 51.0501, 35.3662, -144.519, 0.33 ) }
    dend_14 { pt3dadd( 52.0765, 34.9923, -148.035, 1.33 ) }
    dend_14 { pt3dadd( 54.9775, 34.41, -155.942, 0.67 ) }
    dend_14 { pt3dadd( 58.0819, 34.315, -164.796, 1.33 ) }
    dend_14 { pt3dadd( 58.9718, 34.5093, -167.705, 0.33 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 89/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 39.5088, 31.2383, -74.5126, 1.33 ) }
    dend_13 { pt3dadd( 41.7762, 32.4328, -76.4141, 0.33 ) }
    dend_13 { pt3dadd( 43.3808, 33.324, -77.8325, 0.67 ) }
    dend_13 { pt3dadd( 47.495, 35.368, -82.3147, 0.67 ) }
    dend_13 { pt3dadd( 50.3836, 36.4136, -86.6606, 0.67 ) }
    dend_13 { pt3dadd( 51.886, 36.7844, -89.4329, 0.67 ) }
    dend_13 { pt3dadd( 53.1539, 37.0249, -91.992, 0.67 ) }
    dend_13 { pt3dadd( 54.4076, 37.1541, -94.9094, 0.67 ) }
    dend_13 { pt3dadd( 57.5834, 37.1558, -102.902, 0.67 ) }
    dend_13 { pt3dadd( 60.8541, 36.7658, -112.06, 2.0 ) }
    dend_13 { pt3dadd( 62.9871, 36.3677, -118.758, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_13 { pt3dadd( 64.1676, 36.1021, -122.676, 2.0 ) }
    dend_13 { pt3dadd( 65.6683, 35.7489, -127.573, 0.33 ) }
    dend_13 { pt3dadd( 66.4409, 35.626, -129.84, 2.0 ) }
    dend_13 { pt3dadd( 68.2791, 35.5139, -134.982, 0.33 ) }
    dend_13 { pt3dadd( 68.6749, 35.5541, -135.933, 1.33 ) }
    dend_13 { pt3dadd( 70.338, 35.9871, -139.861, 0.33 ) }
    dend_13 { pt3dadd( 70.8207, 36.1859, -141.056, 0.67 ) }
    dend_13 { pt3dadd( 72.6569, 37.2027, -145.65, 0.33 ) }
    dend_13 { pt3dadd( 73.4057, 37.7203, -147.642, 0.33 ) }
    dend_13 { pt3dadd( 75.0145, 38.9006, -152.127, 0.67 ) }
    dend_13 { pt3dadd( 75.8286, 39.5343, -154.654, 0.33 ) }
    dend_13 { pt3dadd( 77.01, 40.694, -158.749, 1.33 ) }
    dend_13 { pt3dadd( 77.3972, 41.1181, -160.241, 0.67 ) }
    dend_13 { pt3dadd( 78.1045, 42.0304, -163.371, 0.67 ) }
    dend_13 { pt3dadd( 79.056, 43.1773, -167.758, 0.67 ) }
    dend_13 { pt3dadd( 80.0348, 44.3007, -172.354, 0.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 16/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 7.70817, 10.6636, -8.93822, 2.66 ) }
    dend_9 { pt3dadd( 7.19376, 16.2856, -8.24175, 1.33 ) }
    dend_9 { pt3dadd( 6.80764, 20.5053, -7.71898, 1.33 ) }
    dend_9 { pt3dadd( 6.45924, 24.313, -7.24728, 0.67 ) }
    dend_9 { pt3dadd( 6.21651, 26.9657, -6.91865, 1.33 ) }
    dend_9 { pt3dadd( 5.72908, 32.2928, -6.2587, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 22/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.70817, 10.6636, -8.93822, 2.66 ) }
    dend_2 { pt3dadd( 12.3078, 10.9493, -12.3817, 2.0 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 24/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.72908, 32.2928, -6.2587, 1.33 ) }
    dend_11 { pt3dadd( 7.56135, 36.0427, -6.42875, 0.67 ) }
    dend_11 { pt3dadd( 11.1015, 44.0396, -6.70689, 0.67 ) }
    dend_11 { pt3dadd( 12.4569, 47.0797, -6.79319, 0.67 ) }
    dend_11 { pt3dadd( 14.4118, 51.2211, -7.01044, 0.67 ) }
    dend_11 { pt3dadd( 16.7859, 56.082, -7.55481, 1.33 ) }
    dend_11 { pt3dadd( 17.8254, 58.2452, -7.86511, 0.67 ) }
    dend_11 { pt3dadd( 19.2952, 61.439, -8.35583, 0.67 ) }
    dend_11 { pt3dadd( 20.3039, 63.8357, -8.89654, 0.67 ) }
    dend_11 { pt3dadd( 21.1, 66.5847, -9.53517, 0.33 ) }
    dend_11 { pt3dadd( 22.0774, 70.8645, -10.4812, 1.33 ) }
    dend_11 { pt3dadd( 22.5923, 73.3175, -10.8587, 0.67 ) }
    dend_11 { pt3dadd( 23.319, 78.0646, -11.2262, 0.67 ) }
    dend_11 { pt3dadd( 23.5764, 84.3513, -11.1713, 0.33 ) }
    dend_11 { pt3dadd( 23.4369, 87.9126, -10.8434, 0.67 ) }
    dend_11 { pt3dadd( 23.181, 91.2861, -10.2535, 2.66 ) }
    dend_11 { pt3dadd( 22.5936, 97.6145, -8.7028, 0.67 ) }
    dend_11 { pt3dadd( 22.3803, 99.2712, -8.2865, 0.67 ) }
    dend_11 { pt3dadd( 21.9871, 102.131, -7.60208, 1.33 ) }
    dend_11 { pt3dadd( 21.6671, 104.167, -7.0776, 0.33 ) }
    dend_11 { pt3dadd( 21.3853, 105.614, -6.79236, 0.67 ) }
    dend_11 { pt3dadd( 20.6566, 108.446, -6.3988, 0.67 ) }
    dend_11 { pt3dadd( 18.9883, 114.567, -5.90896, 1.33 ) }
    dend_11 { pt3dadd( 17.9721, 119.48, -5.42526, 0.67 ) }
    dend_11 { pt3dadd( 17.131, 124.135, -4.7402, 0.67 ) }
    dend_11 { pt3dadd( 16.7386, 126.615, -4.34637, 0.33 ) }
    dend_11 { pt3dadd( 16.4724, 128.827, -3.97562, 0.67 ) }
    dend_11 { pt3dadd( 16.2667, 131.707, -3.46368, 0.67 ) }
    dend_11 { pt3dadd( 16.1827, 138.447, -2.18171, 0.67 ) }
    dend_11 { pt3dadd( 16.2974, 143.256, -1.21986, 0.67 ) }
    dend_11 { pt3dadd( 16.7362, 147.527, -0.222722, 0.33 ) }
    dend_11 { pt3dadd( 16.9558, 149.249, 0.170542, 0.67 ) }
    dend_11 { pt3dadd( 17.3359, 151.608, 0.66065, 0.33 ) }
    dend_11 { pt3dadd( 17.4592, 152.52, 0.825481, 0.33 ) }
    dend_11 { pt3dadd( 17.847, 155.437, 1.06072, 0.67 ) }
    dend_11 { pt3dadd( 18.5933, 160.748, 1.22763, 0.33 ) }
    dend_11 { pt3dadd( 18.9464, 164.03, 1.28745, 2.0 ) }
    dend_11 { pt3dadd( 19.2774, 167.065, 1.39173, 0.33 ) }
    dend_11 { pt3dadd( 19.7532, 170.408, 1.53975, 0.67 ) }
    dend_11 { pt3dadd( 20.6698, 175.795, 1.82178, 0.33 ) }
    dend_11 { pt3dadd( 21.2046, 178.521, 1.97293, 0.33 ) }
    dend_11 { pt3dadd( 21.572, 180.456, 2.03397, 0.67 ) }
    dend_11 { pt3dadd( 22.6512, 185.257, 2.46303, 0.33 ) }
    dend_11 { pt3dadd( 23.193, 187.254, 2.74954, 1.33 ) }
    dend_11 { pt3dadd( 24.3017, 190.143, 3.47035, 0.33 ) }
    dend_11 { pt3dadd( 25.08, 191.901, 4.26471, 0.67 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 70/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 5.72908, 32.2928, -6.2587, 1.33 ) }
    dend_10 { pt3dadd( 4.93725, 34.897, -14.4162, 0.67 ) }
    dend_10 { pt3dadd( 4.44472, 37.348, -20.608, 0.67 ) }
    dend_10 { pt3dadd( 3.60319, 41.0924, -29.494, 0.67 ) }
    dend_10 { pt3dadd( 3.25615, 42.3048, -32.1979, 1.33 ) }
    dend_10 { pt3dadd( 2.20694, 45.3839, -38.6766, 0.67 ) }
    dend_10 { pt3dadd( 1.25777, 48.0226, -43.8326, 0.67 ) }
    dend_10 { pt3dadd( -0.266193, 51.4355, -49.2454, 0.67 ) }
    dend_10 { pt3dadd( -1.07963, 53.2035, -51.6358, 0.33 ) }
    dend_10 { pt3dadd( -2.28128, 54.8801, -53.8545, 0.67 ) }
    dend_10 { pt3dadd( -3.28143, 55.9677, -55.3642, 0.33 ) }
    dend_10 { pt3dadd( -4.47794, 57.1611, -56.9658, 0.33 ) }
    dend_10 { pt3dadd( -5.36113, 57.885, -58.0186, 0.33 ) }
    dend_10 { pt3dadd( -7.48825, 59.3682, -60.8228, 0.67 ) }
    dend_10 { pt3dadd( -11.3872, 62.0156, -66.3763, 0.33 ) }
    dend_10 { pt3dadd( -14.4151, 64.1246, -71.0435, 1.33 ) }
    dend_10 { pt3dadd( -17.4032, 66.2727, -75.7954, 0.33 ) }
    dend_10 { pt3dadd( -18.404, 66.9813, -77.4872, 1.33 ) }
    dend_10 { pt3dadd( -22.9176, 70.2778, -85.1383, 0.33 ) }
    dend_10 { pt3dadd( -23.4688, 70.6596, -86.0819, 0.67 ) }
    dend_10 { pt3dadd( -24.797, 71.4221, -88.1073, 0.33 ) }
    dend_10 { pt3dadd( -25.9024, 71.9669, -89.7521, 1.33 ) }
    dend_10 { pt3dadd( -29.8688, 74.0031, -96.33, 0.67 ) }
    dend_10 { pt3dadd( -31.8541, 75.1242, -99.8127, 1.33 ) }
    dend_10 { pt3dadd( -35.4001, 77.4029, -106.211, 0.33 ) }
    dend_10 { pt3dadd( -36.353, 78.0448, -107.942, 0.33 ) }
    dend_10 { pt3dadd( -38.9644, 79.7087, -112.559, 1.33 ) }
    dend_10 { pt3dadd( -41.9277, 81.7014, -117.601, 0.33 ) }
    dend_10 { pt3dadd( -43.5506, 82.9673, -120.214, 1.33 ) }
    dend_10 { pt3dadd( -46.8704, 85.657, -125.395, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_10 { pt3dadd( -47.9721, 86.478, -126.785, 0.33 ) }
    dend_10 { pt3dadd( -51.8495, 88.8805, -130.839, 0.67 ) }
    dend_10 { pt3dadd( -53.7815, 89.7208, -132.234, 0.33 ) }
    dend_10 { pt3dadd( -56.3942, 90.4457, -133.94, 0.33 ) }
    dend_10 { pt3dadd( -57.9069, 90.7576, -135.203, 1.33 ) }
    dend_10 { pt3dadd( -60.6277, 91.1539, -137.649, 0.33 ) }
    dend_10 { pt3dadd( -61.6883, 91.328, -138.827, 0.33 ) }
    dend_10 { pt3dadd( -64.4113, 91.8589, -142.064, 0.67 ) }
    dend_10 { pt3dadd( -68.9388, 92.8076, -147.591, 0.33 ) }
    dend_10 { pt3dadd( -73.7174, 94.1968, -153.583, 0.33 ) }
    dend_10 { pt3dadd( -74.4143, 94.4854, -154.496, 1.33 ) }
    dend_10 { pt3dadd( -77.8512, 96.5273, -159.254, 0.33 ) }
    dend_10 { pt3dadd( -80.0316, 98.0927, -162.083, 0.33 ) }
    dend_10 { pt3dadd( -81.2712, 99.1772, -163.453, 1.33 ) }
    dend_10 { pt3dadd( -83.4575, 101.182, -165.153, 0.33 ) }
    dend_10 { pt3dadd( -84.5954, 102.114, -165.802, 1.33 ) }
    dend_10 { pt3dadd( -87.7892, 104.484, -167.482, 0.67 ) }
    dend_10 { pt3dadd( -89.6905, 105.772, -168.369, 0.67 ) }
    dend_10 { pt3dadd( -91.0051, 106.688, -169.144, 1.33 ) }
    dend_10 { pt3dadd( -94.582, 109.009, -171.43, 0.67 ) }
    dend_10 { pt3dadd( -96.6647, 110.184, -172.787, 1.33 ) }
    dend_10 { pt3dadd( -98.4643, 111.162, -173.948, 0.33 ) }
    dend_10 { pt3dadd( -100.079, 111.998, -174.886, 1.33 ) }
    dend_10 { pt3dadd( -102.624, 113.484, -176.435, 0.33 ) }
    dend_10 { pt3dadd( -104.26, 114.526, -177.311, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 25/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 12.3078, 10.9493, -12.3817, 2.0 ) }
    dend_6 { pt3dadd( 15.4545, 10.8899, -9.08297, 0.67 ) }
    dend_6 { pt3dadd( 17.1618, 10.7144, -7.62328, 0.67 ) }
    dend_6 { pt3dadd( 21.2972, 10.5773, -4.0416, 0.67 ) }
    dend_6 { pt3dadd( 23.3084, 10.6652, -1.88837, 0.67 ) }
    dend_6 { pt3dadd( 26.7439, 10.6635, 1.90751, 0.67 ) }
    dend_6 { pt3dadd( 29.2456, 10.5989, 4.62447, 0.67 ) }
    dend_6 { pt3dadd( 31.1103, 10.7667, 6.4916, 0.67 ) }
    dend_6 { pt3dadd( 35.6568, 11.3046, 10.4455, 0.67 ) }
    dend_6 { pt3dadd( 43.4506, 12.0231, 15.9498, 0.67 ) }
    dend_6 { pt3dadd( 45.1826, 12.2374, 17.1924, 0.67 ) }
    dend_6 { pt3dadd( 46.4412, 12.3574, 18.0104, 0.67 ) }
    dend_6 { pt3dadd( 53.0744, 13.1323, 22.4943, 0.67 ) }
    dend_6 { pt3dadd( 54.7058, 13.3858, 23.5841, 1.33 ) }
    dend_6 { pt3dadd( 58.4324, 13.9131, 25.9077, 0.67 ) }
    dend_6 { pt3dadd( 63.9207, 14.7597, 29.2169, 0.67 ) }
    dend_6 { pt3dadd( 71.2204, 16.0528, 34.2287, 0.67 ) }
    dend_6 { pt3dadd( 73.8606, 16.4927, 36.222, 0.67 ) }
    dend_6 { pt3dadd( 77.5084, 16.9777, 39.4095, 0.67 ) }
    dend_6 { pt3dadd( 79.6783, 17.3644, 41.386, 0.67 ) }
    dend_6 { pt3dadd( 81.1783, 17.7235, 42.785, 0.67 ) }
    dend_6 { pt3dadd( 84.3946, 18.4427, 45.4753, 0.67 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 47/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.3078, 10.9493, -12.3817, 2.0 ) }
    dend_3 { pt3dadd( 16.5415, 9.92074, -12.4163, 0.67 ) }
    dend_3 { pt3dadd( 24.8127, 7.91124, -12.4839, 0.67 ) }
    dend_3 { pt3dadd( 29.6004, 6.74804, -12.523, 0.67 ) }
    dend_3 { pt3dadd( 39.6677, 4.30216, -12.6052, 0.67 ) }
    dend_3 { pt3dadd( 45.2801, 2.93861, -12.651, 0.67 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 53/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 84.3946, 18.4427, 45.4753, 0.67 ) }
    dend_8 { pt3dadd( 89.0198, 18.5999, 48.3335, 0.67 ) }
    dend_8 { pt3dadd( 91.149, 18.6723, 49.6492, 0.67 ) }
    dend_8 { pt3dadd( 98.8007, 18.9323, 54.3775, 0.33 ) }
    dend_8 { pt3dadd( 108.549, 18.2069, 58.5198, 0.33 ) }
    dend_8 { pt3dadd( 118.125, 17.3864, 63.0297, 0.33 ) }
    dend_8 { pt3dadd( 126.773, 18.2874, 69.0933, 0.33 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 60/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 84.3946, 18.4427, 45.4753, 0.67 ) }
    dend_7 { pt3dadd( 86.0205, 19.0345, 46.6035, 0.67 ) }
    dend_7 { pt3dadd( 87.2463, 19.4656, 47.2342, 0.67 ) }
    dend_7 { pt3dadd( 88.8802, 19.8875, 48.0583, 0.67 ) }
    dend_7 { pt3dadd( 91.5011, 20.4354, 49.3307, 0.67 ) }
    dend_7 { pt3dadd( 92.6204, 20.5828, 49.829, 0.67 ) }
    dend_7 { pt3dadd( 93.9393, 20.7181, 50.3759, 0.67 ) }
    dend_7 { pt3dadd( 96.0942, 21.0304, 51.2378, 0.67 ) }
    dend_7 { pt3dadd( 98.1156, 21.171, 51.9178, 0.67 ) }
    dend_7 { pt3dadd( 98.8198, 21.1726, 52.0739, 0.67 ) }
    dend_7 { pt3dadd( 100.609, 21.2107, 52.2752, 0.67 ) }
    dend_7 { pt3dadd( 102.903, 21.4245, 52.4823, 0.67 ) }
    dend_7 { pt3dadd( 104.927, 21.7504, 52.4697, 0.67 ) }
    dend_7 { pt3dadd( 107.175, 22.2547, 52.2901, 0.67 ) }
    dend_7 { pt3dadd( 108.637, 22.7141, 52.0645, 0.67 ) }
    dend_7 { pt3dadd( 111.497, 23.7904, 51.4382, 0.67 ) }
    dend_7 { pt3dadd( 113.536, 24.7274, 50.8471, 0.67 ) }
    dend_7 { pt3dadd( 115.455, 25.7403, 50.1263, 0.33 ) }
    dend_7 { pt3dadd( 116.43, 26.3446, 49.7127, 0.33 ) }
    dend_7 { pt3dadd( 117.113, 26.8983, 49.4194, 0.33 ) }
    dend_7 { pt3dadd( 118.182, 27.973, 49.0172, 0.33 ) }
    dend_7 { pt3dadd( 118.472, 28.3484, 48.9048, 0.67 ) }
    dend_7 { pt3dadd( 118.888, 28.988, 48.9089, 0.33 ) }
    dend_7 { pt3dadd( 119.371, 29.7579, 49.0934, 0.67 ) }
    dend_7 { pt3dadd( 120.086, 30.9058, 49.4907, 0.33 ) }
    dend_7 { pt3dadd( 121.149, 32.4666, 50.1233, 0.33 ) }
    dend_7 { pt3dadd( 121.526, 33.0004, 50.4249, 0.67 ) }
    dend_7 { pt3dadd( 123.488, 35.6075, 52.1413, 0.67 ) }
    dend_7 { pt3dadd( 123.997, 36.2211, 52.5921, 0.67 ) }
    dend_7 { pt3dadd( 124.566, 36.8553, 53.0937, 0.67 ) }
    dend_7 { pt3dadd( 125.303, 37.6403, 53.7903, 0.67 ) }
    dend_7 { pt3dadd( 126.847, 39.0495, 55.2464, 0.33 ) }
    dend_7 { pt3dadd( 127.259, 39.4023, 55.6158, 0.67 ) }
    dend_7 { pt3dadd( 128.36, 40.2675, 56.2951, 0.33 ) }
    dend_7 { pt3dadd( 128.939, 40.7408, 56.7098, 0.33 ) }
    dend_7 { pt3dadd( 133.748, 42.6408, 58.3816, 0.33 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 96/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 45.2801, 2.93861, -12.651, 0.67 ) }
    dend_5 { pt3dadd( 51.9759, 3.03896, -21.0793, 0.67 ) }
    dend_5 { pt3dadd( 56.0156, 2.98424, -26.0249, 0.67 ) }
    dend_5 { pt3dadd( 58.3938, 2.93469, -28.6331, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_5 { pt3dadd( 60.8876, 2.84231, -31.2238, 1.33 ) }
    dend_5 { pt3dadd( 63.6822, 2.65357, -34.2437, 0.67 ) }
    dend_5 { pt3dadd( 64.7231, 2.54895, -35.3392, 0.67 ) }
    dend_5 { pt3dadd( 67.7948, 2.16856, -38.4426, 0.67 ) }
    dend_5 { pt3dadd( 70.0779, 1.91344, -40.9446, 1.33 ) }
    dend_5 { pt3dadd( 71.6324, 1.76823, -42.7779, 0.67 ) }
    dend_5 { pt3dadd( 74.8755, 1.80034, -46.7546, 0.67 ) }
    dend_5 { pt3dadd( 77.3996, 1.81071, -49.7993, 1.33 ) }
    dend_5 { pt3dadd( 82.1082, 1.57832, -55.8123, 0.67 ) }
    dend_5 { pt3dadd( 82.6847, 1.53159, -56.6452, 0.67 ) }
    dend_5 { pt3dadd( 85.0912, 1.47035, -60.4366, 0.67 ) }
    dend_5 { pt3dadd( 89.0441, 1.57151, -66.7117, 1.33 ) }
    dend_5 { pt3dadd( 90.988, 1.78785, -69.8297, 0.67 ) }
    dend_5 { pt3dadd( 93.908, 2.36351, -74.7294, 1.33 ) }
    dend_5 { pt3dadd( 98.3145, 3.58309, -81.8882, 0.33 ) }
    dend_5 { pt3dadd( 100.301, 4.4526, -85.285, 0.33 ) }
    dend_5 { pt3dadd( 100.709, 4.70658, -86.0089, 1.33 ) }
    dend_5 { pt3dadd( 103.084, 6.43376, -90.0807, 0.33 ) }
    dend_5 { pt3dadd( 103.976, 7.17351, -91.5837, 1.33 ) }
    dend_5 { pt3dadd( 106.0, 8.86244, -94.8743, 0.33 ) }
    dend_5 { pt3dadd( 107.819, 10.1635, -97.7594, 0.67 ) }
    dend_5 { pt3dadd( 109.062, 10.8252, -100.21, 0.33 ) }
    dend_5 { pt3dadd( 109.604, 10.9917, -101.574, 1.33 ) }
    dend_5 { pt3dadd( 110.635, 10.4778, -105.322, 0.33 ) }
    dend_5 { pt3dadd( 111.05, 9.53757, -107.679, 0.33 ) }
    dend_5 { pt3dadd( 111.093, 8.74278, -108.752, 1.33 ) }
    dend_5 { pt3dadd( 111.023, 5.37524, -112.003, 0.33 ) }
    dend_5 { pt3dadd( 110.962, 4.72693, -112.536, 0.67 ) }
    dend_5 { pt3dadd( 110.696, 2.58427, -114.161, 0.33 ) }
    dend_5 { pt3dadd( 110.362, -0.200112, -116.054, 1.33 ) }
    dend_5 { pt3dadd( 110.184, -2.04368, -117.316, 0.33 ) }
    dend_5 { pt3dadd( 110.143, -2.74304, -117.76, 0.67 ) }
    dend_5 { pt3dadd( 110.015, -6.61471, -119.886, 0.33 ) }
    dend_5 { pt3dadd( 109.998, -6.9346, -120.073, 0.67 ) }
    dend_5 { pt3dadd( 109.704, -10.4162, -122.377, 0.33 ) }
    dend_5 { pt3dadd( 109.677, -10.749, -122.654, 0.67 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 36/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 45.2801, 2.93861, -12.651, 0.67 ) }
    dend_4 { pt3dadd( 51.9659, 0.858192, -14.1677, 0.67 ) }
    dend_4 { pt3dadd( 58.8924, -1.36303, -15.8607, 0.67 ) }
    dend_4 { pt3dadd( 64.4412, -2.97957, -17.1738, 0.67 ) }
    dend_4 { pt3dadd( 67.5958, -3.94918, -17.8364, 0.67 ) }
    dend_4 { pt3dadd( 75.9207, -6.45879, -19.5848, 0.67 ) }
    dend_4 { pt3dadd( 83.1785, -8.64098, -21.3211, 0.67 ) }
    dend_4 { pt3dadd( 92.5684, -11.5658, -23.4003, 0.67 ) }
    dend_4 { pt3dadd( 98.8729, -13.4512, -24.4559, 0.67 ) }
    dend_4 { pt3dadd( 107.126, -16.3398, -25.5752, 0.67 ) }
    dend_4 { pt3dadd( 109.881, -17.4878, -25.9065, 0.67 ) }
    dend_4 { pt3dadd( 114.076, -19.4856, -26.3319, 0.67 ) }
    dend_4 { pt3dadd( 123.753, -24.2802, -27.1153, 0.67 ) }
    dend_4 { pt3dadd( 128.576, -26.8447, -27.4114, 0.67 ) }
    dend_4 { pt3dadd( 135.682, -30.3808, -27.4006, 0.67 ) }
    dend_4 { pt3dadd( 141.466, -32.908, -27.1416, 0.67 ) }
    dend_4 { pt3dadd( 143.786, -33.8289, -26.957, 0.67 ) }
    dend_4 { pt3dadd( 147.343, -34.9875, -26.6021, 0.67 ) }
    dend_4 { pt3dadd( 158.471, -37.5253, -25.8765, 0.67 ) }
    dend_4 { pt3dadd( 168.494, -39.348, -25.072, 0.67 ) }
    dend_4 { pt3dadd( 170.847, -39.5979, -24.8607, 0.67 ) }
    dend_4 { pt3dadd( 173.704, -39.7175, -24.6654, 0.67 ) }
    dend_4 { pt3dadd( 179.21, -39.97, -24.3862, 0.67 ) }
    dend_4 { pt3dadd( 184.693, -40.3296, -24.3232, 0.67 ) }
    dend_4 { pt3dadd( 187.023, -40.4505, -24.4039, 0.67 ) }
    dend_4 { pt3dadd( 190.732, -40.6628, -24.9711, 0.67 ) }
    dend_4 { pt3dadd( 196.115, -41.1354, -25.6437, 0.67 ) }
    dend_4 { pt3dadd( 199.839, -41.5175, -26.0307, 0.33 ) }
    dend_4 { pt3dadd( 203.998, -42.0372, -26.3965, 0.67 ) }
    dend_4 { pt3dadd( 206.601, -42.3781, -26.6334, 0.67 ) }
    dend_4 { pt3dadd( 211.482, -42.9451, -27.0897, 0.67 ) }
    dend_4 { pt3dadd( 221.407, -44.1731, -28.184, 0.67 ) }
    dend_4 { pt3dadd( 224.29, -44.6412, -28.6022, 0.67 ) }
    dend_4 { pt3dadd( 226.107, -44.9331, -28.8904, 1.33 ) }
    dend_4 { pt3dadd( 230.696, -45.8771, -29.8023, 0.67 ) }
    dend_4 { pt3dadd( 233.824, -46.623, -30.5314, 0.33 ) }
    dend_4 { pt3dadd( 239.104, -47.9957, -31.8169, 0.67 ) }
    dend_4 { pt3dadd( 243.418, -49.0641, -33.0692, 0.33 ) }
    dend_4 { pt3dadd( 245.38, -49.616, -33.516, 0.33 ) }
    dend_4 { pt3dadd( 248.786, -50.5082, -33.9883, 0.67 ) }
    dend_4 { pt3dadd( 251.341, -51.1473, -34.0635, 0.33 ) }
    dend_4 { pt3dadd( 257.499, -52.6375, -33.8922, 0.67 ) }
    dend_4 { pt3dadd( 258.949, -52.9109, -33.7625, 0.67 ) }
    dend_4 { pt3dadd( 263.428, -53.5721, -33.0651, 0.33 ) }
    dend_4 { pt3dadd( 267.628, -54.2611, -32.3971, 0.33 ) }
    dend_4 { pt3dadd( 270.681, -54.7301, -31.841, 0.67 ) }
    dend_4 { pt3dadd( 274.556, -55.376, -31.1387, 0.33 ) }
    dend_4 { pt3dadd( 278.471, -55.9201, -30.4257, 0.67 ) }
    dend_4 { pt3dadd( 283.069, -56.4634, -29.663, 0.33 ) }
    dend_4 { pt3dadd( 285.793, -56.8282, -29.436, 0.33 ) }
    dend_4 { pt3dadd( 298.821, -61.2802, -32.0746, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_4, apic_1, axon_1, apic_3, apic_2]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    apic_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    apic_4 ModelViewParmSubset_1.append()
    apic_1 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()
    apic_3 ModelViewParmSubset_1.append()
    apic_2 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_2 = new SectionList()
    soma_0 ModelViewParmSubset_2.append()
    axon_0 ModelViewParmSubset_2.append()
    axon_1 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_21, dend_16, dend_15, dend_0, apic_4, apic_1, dend_25, dend_22, dend_18, dend_17, dend_12, dend_1, apic_3, apic_2, dend_24, dend_23, dend_20, dend_19, dend_14, dend_13, dend_9, dend_2, dend_11, dend_10, dend_6, dend_3, dend_8, dend_7, dend_5, dend_4]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    apic_0 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    apic_4 ModelViewParmSubset_3.append()
    apic_1 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    apic_3 ModelViewParmSubset_3.append()
    apic_2 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_4, apic_1, apic_3, apic_2]}
    ModelViewParmSubset_4 = new SectionList()
    apic_0 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_5 = new SectionList()
    axon_0 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_4, apic_1, apic_3, apic_2]}
    ModelViewParmSubset_6 = new SectionList()
    soma_0 ModelViewParmSubset_6.append()
    apic_0 ModelViewParmSubset_6.append()
    apic_4 ModelViewParmSubset_6.append()
    apic_1 ModelViewParmSubset_6.append()
    apic_3 ModelViewParmSubset_6.append()
    apic_2 ModelViewParmSubset_6.append()

    // Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_21, dend_16, dend_15, dend_0, apic_4, apic_1, dend_25, dend_22, dend_18, dend_17, dend_12, dend_1, apic_3, apic_2, dend_24, dend_23, dend_20, dend_19, dend_14, dend_13, dend_9, dend_2, dend_11, dend_10, dend_6, dend_3, dend_8, dend_7, dend_5, dend_4]}
    ModelViewParmSubset_7 = new SectionList()
    apic_0 ModelViewParmSubset_7.append()
    dend_21 ModelViewParmSubset_7.append()
    dend_16 ModelViewParmSubset_7.append()
    dend_15 ModelViewParmSubset_7.append()
    dend_0 ModelViewParmSubset_7.append()
    apic_4 ModelViewParmSubset_7.append()
    apic_1 ModelViewParmSubset_7.append()
    dend_25 ModelViewParmSubset_7.append()
    dend_22 ModelViewParmSubset_7.append()
    dend_18 ModelViewParmSubset_7.append()
    dend_17 ModelViewParmSubset_7.append()
    dend_12 ModelViewParmSubset_7.append()
    dend_1 ModelViewParmSubset_7.append()
    apic_3 ModelViewParmSubset_7.append()
    apic_2 ModelViewParmSubset_7.append()
    dend_24 ModelViewParmSubset_7.append()
    dend_23 ModelViewParmSubset_7.append()
    dend_20 ModelViewParmSubset_7.append()
    dend_19 ModelViewParmSubset_7.append()
    dend_14 ModelViewParmSubset_7.append()
    dend_13 ModelViewParmSubset_7.append()
    dend_9 ModelViewParmSubset_7.append()
    dend_2 ModelViewParmSubset_7.append()
    dend_11 ModelViewParmSubset_7.append()
    dend_10 ModelViewParmSubset_7.append()
    dend_6 ModelViewParmSubset_7.append()
    dend_3 ModelViewParmSubset_7.append()
    dend_8 ModelViewParmSubset_7.append()
    dend_7 ModelViewParmSubset_7.append()
    dend_5 ModelViewParmSubset_7.append()
    dend_4 ModelViewParmSubset_7.append()

    // Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_21, dend_16, dend_15, dend_0, dend_25, dend_22, dend_18, dend_17, dend_12, dend_1, dend_24, dend_23, dend_20, dend_19, dend_14, dend_13, dend_9, dend_2, dend_11, dend_10, dend_6, dend_3, dend_8, dend_7, dend_5, dend_4]}
    ModelViewParmSubset_8 = new SectionList()
    soma_0 ModelViewParmSubset_8.append()
    dend_21 ModelViewParmSubset_8.append()
    dend_16 ModelViewParmSubset_8.append()
    dend_15 ModelViewParmSubset_8.append()
    dend_0 ModelViewParmSubset_8.append()
    dend_25 ModelViewParmSubset_8.append()
    dend_22 ModelViewParmSubset_8.append()
    dend_18 ModelViewParmSubset_8.append()
    dend_17 ModelViewParmSubset_8.append()
    dend_12 ModelViewParmSubset_8.append()
    dend_1 ModelViewParmSubset_8.append()
    dend_24 ModelViewParmSubset_8.append()
    dend_23 ModelViewParmSubset_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_20 ModelViewParmSubset_8.append()
    dend_19 ModelViewParmSubset_8.append()
    dend_14 ModelViewParmSubset_8.append()
    dend_13 ModelViewParmSubset_8.append()
    dend_9 ModelViewParmSubset_8.append()
    dend_2 ModelViewParmSubset_8.append()
    dend_11 ModelViewParmSubset_8.append()
    dend_10 ModelViewParmSubset_8.append()
    dend_6 ModelViewParmSubset_8.append()
    dend_3 ModelViewParmSubset_8.append()
    dend_8 ModelViewParmSubset_8.append()
    dend_7 ModelViewParmSubset_8.append()
    dend_5 ModelViewParmSubset_8.append()
    dend_4 ModelViewParmSubset_8.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_8 = new SectionList()
    apic_4 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_17 = new SectionList()
    apic_3 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_18 = new SectionList()
    apic_2 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, axon_0, axon_0, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, axon_1, axon_1, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_1 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 2.0  // units: uF/cm2
    forsec apical cm = 2.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert pas_nml2
        gmax_pas_nml2 = 3.0000001E-5  // units: S cm-2
        e_pas_nml2 = -75.0  // units: mV
    }
    forsec basal {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.022874  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.039967  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 9.999999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999904  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.071165994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 5.5999997E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.097243994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.42883396  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004779  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.283745  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.0029709998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.999812  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_HVA
        gmax_Ca_HVA = 8.6000003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001612  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_HVA
        gmax_Ca_HVA = 3.7899998E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0068679997  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cADpyr_230_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cADpyr_230_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    apic_0 nseg = 3
    dend_15 nseg = 15
    apic_4 nseg = 11
    dend_25 nseg = 9
    dend_18 nseg = 3
    dend_17 nseg = 11
    dend_12 nseg = 5
    apic_3 nseg = 11
    apic_2 nseg = 17
    dend_24 nseg = 7
    dend_23 nseg = 5
    dend_20 nseg = 3
    dend_19 nseg = 3
    dend_14 nseg = 5
    dend_13 nseg = 5
    dend_11 nseg = 9
    dend_10 nseg = 11
    dend_6 nseg = 5
    dend_8 nseg = 3
    dend_7 nseg = 3
    dend_5 nseg = 7
    dend_4 nseg = 13
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cADpyr230_L4_SS_08eefff078_0_0


