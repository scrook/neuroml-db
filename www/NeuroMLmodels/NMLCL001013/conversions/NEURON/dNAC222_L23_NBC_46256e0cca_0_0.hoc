// Cell: dNAC222_L23_NBC_46256e0cca_0_0
/*
{
  "id" : "dNAC222_L23_NBC_46256e0cca_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.75872, -10.4532, 0.754391, 3.47327", "-3.51208, -9.3518, 0.693156, 4.11268", "-3.26545, -8.25037, 0.631922, 5.19122", "-3.01882, -7.14893, 0.570687, 5.79177", "-2.77218, -6.04749, 0.509453, 6.43344", "-2.52555, -4.94606, 0.448218, 7.33547", "-2.27891, -3.84462, 0.386984, 7.89448", "-2.03228, -2.74319, 0.325749, 8.07665", "-1.78564, -1.64175, 0.264515, 8.19647", "-1.53901, -0.540314, 0.20328, 8.39724", "-1.29237, 0.561122, 0.142046, 8.72156", "-1.04574, 1.66256, 0.0808113, 9.67228", "-0.799104, 2.76399, 0.0195768, 10.9168", "-0.552469, 3.86543, -0.0416577, 10.7105", "-0.305834, 4.96687, -0.102892, 10.3432", "-0.0591998, 6.0683, -0.164127, 10.3014", "0.187435, 7.16974, -0.225361, 9.6708", "0.43407, 8.27117, -0.286596, 8.78455", "0.680704, 9.37261, -0.34783, 7.41865", "0.927339, 10.474, -0.409065, 4.25873", "1.17397, 11.5755, -0.470299, 2.57124" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-3.92645, -10.9996, 4.08428, 2.77", "-3.8972, -11.8083, 4.08428, 3.05", "-3.78682, -14.859, 4.08428, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-5.80645, -9.52959, 7.55429, 0.55", "-6.5407, -10.5316, 9.6372, 0.55", "-7.7108, -12.1285, 12.9566, 1.11", "-11.1423, -16.8114, 22.691, 0.55", "-12.3023, -18.3945, 25.9818, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.976448, 9.22041, -7.52571, 0.83", "-0.165314, 10.979, -9.14372, 0.83", "0.63264, 13.288, -11.8497, 0.55", "1.04197, 14.3439, -13.0621, 0.83", "1.40831, 15.3963, -14.3267, 0.55", "1.73685, 16.4521, -15.6703, 0.55", "2.22869, 18.1683, -17.7526, 0.83", "2.97232, 21.245, -21.6349, 0.55", "3.36204, 22.9682, -23.7195, 0.83", "4.3351, 26.767, -28.2961, 0.55", "4.92536, 28.7227, -30.6101, 0.55", "5.45449, 30.1652, -32.3188, 0.28", "6.41006, 32.4849, -34.8641, 0.83", "7.18554, 34.3325, -36.6121, 0.28", "8.08655, 36.6255, -38.5008, 0.83", "8.49677, 37.6864, -39.1829, 0.28", "9.54257, 40.4825, -40.6839, 0.55", "10.1187, 42.2791, -41.4911, 0.55", "10.8352, 45.0568, -42.3987, 0.55", "11.7433, 49.8057, -43.7698, 0.83", "12.0057, 51.9047, -44.4108, 0.55", "12.2306, 54.3008, -45.179, 0.83", "12.4724, 57.9703, -46.4345, 0.83", "12.6017, 60.4303, -47.4249, 0.28", "12.7573, 63.8624, -49.184, 0.83", "12.9562, 67.6877, -51.4123, 0.55", "13.0744, 69.5976, -52.5896, 0.55", "13.2746, 72.8235, -54.7511, 0.55", "13.6076, 76.3029, -57.2557, 0.55", "14.0296, 79.9651, -59.7912, 0.55", "14.3546, 82.2294, -61.2576, 0.28", "14.5502, 83.4962, -62.0408, 0.55", "15.2539, 88.1794, -64.9142, 0.28", "15.571, 90.2303, -66.151, 0.55", "15.8579, 92.1518, -67.2597, 0.28", "16.2998, 94.9092, -68.8522, 0.55", "16.9807, 98.8077, -71.2181, 0.28", "17.3813, 100.951, -72.4883, 0.55", "18.2833, 105.199, -74.9303, 0.28", "18.6348, 106.7, -75.7949, 0.55", "19.4787, 110.058, -77.8024, 0.28", "19.8545, 111.504, -78.6432, 0.28", "20.2332, 112.895, -79.4505, 0.55", "20.9628, 115.779, -81.2735, 0.28", "21.3082, 117.137, -82.1356, 0.55", "21.8178, 119.328, -83.5521, 0.55", "22.4624, 122.567, -85.5372, 0.28", "22.5647, 123.135, -85.8719, 0.55", "23.186, 126.525, -87.6482, 0.28", "23.3406, 127.482, -88.0778, 0.55", "23.6198, 129.188, -88.8159, 0.28", "23.8765, 130.577, -89.3491, 0.55", "24.7539, 134.613, -90.7419, 0.28", "25.5375, 137.718, -91.7409, 0.28", "25.9568, 139.222, -92.1573, 0.55", "26.7801, 141.981, -92.9063, 0.28", "27.06, 142.833, -93.1516, 0.55", "27.9496, 145.347, -93.886, 0.28", "28.7064, 147.384, -94.4708, 0.55", "29.5767, 149.564, -95.0796, 0.55", "31.3797, 153.793, -96.1418, 0.28", "32.0049, 155.238, -96.469, 0.55", "32.6646, 156.727, -96.7883, 0.28", "33.3963, 158.335, -97.1568, 0.55", "34.213, 159.94, -97.7163, 0.28", "34.6963, 160.8, -98.1045, 0.55", "36.0101, 162.938, -99.2063, 0.28", "37.0282, 164.606, -100.088, 0.28", "37.9618, 166.16, -100.939, 0.55", "40.0288, 169.665, -102.815, 0.28", "40.6731, 170.816, -103.504, 0.55", "41.1858, 171.699, -104.053, 0.28", "41.8686, 172.855, -104.743, 0.55", "42.5425, 173.976, -105.466, 0.28", "43.1594, 174.958, -106.085, 0.55", "46.0422, 179.415, -108.94, 0.28", "46.9813, 180.766, -109.847, 0.28", "47.6998, 181.706, -110.559, 0.55", "49.8669, 184.278, -112.68, 0.28", "50.4436, 184.9, -113.323, 0.55", "52.9833, 187.269, -116.088, 0.28", "54.4077, 188.432, -117.49, 0.55", "56.603, 190.13, -119.606, 0.28", "57.0439, 190.448, -119.992, 0.55", "61.7326, 193.708, -123.447, 0.28", "63.8683, 195.182, -125.101, 0.55", "65.2439, 196.08, -126.152, 0.28", "65.6492, 196.36, -126.534, 0.55", "66.7976, 197.225, -127.62, 0.28", "67.595, 197.878, -128.439, 0.55", "69.9146, 199.998, -131.141, 0.28", "70.4719, 200.528, -131.962, 0.55", "73.3538, 203.223, -136.549, 0.28", "74.2052, 204.028, -137.962, 0.55", "75.5154, 205.289, -140.142, 0.28", "76.2524, 205.968, -141.27, 0.55", "77.4595, 207.098, -142.814, 0.28", "78.0335, 207.652, -143.513, 0.55", "78.9335, 208.511, -144.405, 0.28", "80.0625, 209.569, -145.496, 0.55", "82.1033, 211.501, -147.235, 0.28", "83.1477, 212.494, -147.965, 0.55", "85.0552, 214.311, -149.111, 0.28", "86.2918, 215.525, -149.881, 0.55", "86.6719, 215.922, -150.105, 0.28", "87.4396, 216.786, -150.58, 0.55", "89.9977, 219.923, -152.313, 0.28", "90.7474, 220.865, -152.871, 0.55", "92.8578, 223.635, -154.472, 0.28", "94.5103, 225.807, -155.815, 0.28", "95.4474, 226.983, -156.585, 0.55", "96.9239, 228.806, -157.825, 0.28", "97.4702, 229.442, -158.235, 0.55", "98.693, 230.643, -159.021, 0.28", "99.3479, 231.171, -159.291, 0.55", "100.587, 232.065, -159.736, 0.28", "101.441, 232.666, -159.973, 0.55", "104.034, 234.408, -160.527, 0.28", "106.639, 236.144, -160.898, 0.55", "108.851, 237.665, -161.108, 0.28", "110.065, 238.568, -161.272, 0.55", "112.503, 240.487, -161.73, 0.28", "114.549, 242.152, -162.191, 0.55", "117.366, 244.546, -162.974, 0.28", "118.476, 245.516, -163.3, 0.28", "121.545, 248.12, -164.399, 0.55", "123.673, 249.92, -165.2, 0.28", "124.587, 250.676, -165.593, 0.55", "126.214, 251.947, -166.354, 0.28", "126.917, 252.466, -166.681, 0.55", "128.914, 253.824, -167.326, 0.28", "129.257, 254.06, -167.389, 0.55", "130.971, 255.302, -167.591, 0.28", "132.392, 256.374, -167.682, 0.55", "134.153, 257.782, -167.731, 0.28", "135.249, 258.843, -167.755, 0.55", "137.398, 261.291, -167.891, 0.28", "138.787, 263.05, -167.975, 0.28", "140.936, 266.001, -168.102, 0.28", "141.787, 267.238, -168.139, 0.55", "144.653, 271.45, -168.24, 0.28", "145.908, 273.298, -168.336, 0.55", "147.457, 275.62, -168.449, 0.28", "148.305, 276.823, -168.559, 0.55", "149.243, 277.967, -168.71, 0.28", "149.849, 278.523, -168.802, 0.55", "152.723, 280.161, -169.224, 0.28", "152.723, 280.161, -169.224, 0.55", "155.606, 280.837, -169.695, 0.28", "157.076, 281.032, -169.918, 0.28", "157.665, 281.059, -170.002, 0.55", "159.446, 280.978, -170.198, 0.28", "162.375, 280.575, -170.408, 0.55", "163.812, 280.272, -170.511, 0.28", "165.329, 279.804, -170.621, 0.28", "166.2, 279.476, -170.685, 0.55", "167.902, 278.676, -170.815, 0.28", "168.943, 278.063, -170.898, 0.55", "170.375, 277.127, -171.017, 0.28", "171.454, 276.374, -171.109, 0.28", "172.527, 275.604, -171.2, 0.28", "173.877, 274.626, -171.315, 0.55", "175.071, 273.779, -171.417, 0.28", "176.303, 272.913, -171.522, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.17354, 4.86041, -1.63572, 0.55", "6.11618, 5.10955, -2.03419, 0.55", "7.60203, 5.50228, -2.66232, 0.55", "9.49942, 6.00379, -3.46441, 0.55", "10.8893, 6.37114, -4.05194, 0.83", "13.6741, 7.10721, -5.22918, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "0.743549, 10.8604, 3.65428, 0.55", "1.23664, 14.4027, 5.50808, 0.55", "1.59745, 17.0456, 6.86224, 1.11", "2.18595, 20.9391, 8.75597, 0.55", "2.64401, 23.4191, 9.86388, 0.83", "3.32773, 26.6338, 11.1693, 0.55", "3.68614, 28.2418, 11.7516, 0.55", "4.17188, 30.1681, 12.3532, 0.55", "4.66194, 31.9547, 12.7222, 0.55", "5.52264, 34.593, 12.934, 0.83", "6.55512, 37.5436, 12.9881, 0.55", "7.52833, 40.3247, 12.8435, 0.83", "8.95949, 44.2857, 12.5496, 0.83", "9.81497, 46.6702, 12.3324, 1.11", "11.2625, 50.8, 12.0623, 0.55", "12.3716, 54.05, 11.9246, 1.11", "13.5747, 57.6565, 11.8548, 0.55", "14.2534, 59.7345, 11.9296, 0.55", "15.1713, 62.7848, 12.2121, 0.55", "16.1351, 66.3133, 12.7397, 0.28", "16.7302, 68.8899, 13.194, 0.83", "17.2772, 71.7161, 13.7265, 0.83", "17.9732, 76.347, 14.6666, 0.55", "18.3587, 80.6203, 15.4148, 0.83", "18.5632, 83.6847, 15.9066, 0.55", "18.6779, 86.1518, 16.2226, 0.83", "18.7564, 89.8286, 16.6956, 0.83", "18.7058, 93.3818, 17.1192, 0.55", "18.3065, 98.0067, 17.4941, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.84645, 9.66043, 4.00428, 0.83", "-5.36869, 12.8577, 4.05429, 0.83", "-7.19528, 16.6943, 4.11427, 1.11", "-9.10375, 20.7028, 4.17696, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.17397, 11.5755, -0.470299, 0.55", "4.45162, 26.213, -0.470299, 0.55", "7.72927, 40.8505, -0.470299, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-3.78682, -14.859, 4.08428, 1.38", "-4.14552, -16.9511, 2.65533, 1.38" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.78682, -14.859, 4.08428, 0.83", "-3.11352, -15.9326, 4.21995, 0.83", "-1.98486, -17.7308, 4.44627, 0.83", "-0.878164, -19.4209, 4.6321, 0.83", "-0.00159402, -20.7596, 4.77929, 1.11", "1.1669, -22.5441, 4.9755, 0.83", "1.85383, -23.5932, 5.09086, 0.55", "2.76755, -24.999, 5.23399, 0.83", "3.85777, -26.7127, 5.38589, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-12.3023, -18.3945, 25.9818, 0.28", "-13.9612, -17.497, 25.9196, 0.28", "-14.5464, -17.2045, 25.9055, 0.55", "-16.092, -16.4034, 25.67, 0.28", "-18.1104, -15.3269, 25.2804, 0.55", "-20.9821, -13.8294, 24.7875, 0.28", "-21.5809, -13.5142, 24.676, 0.28", "-23.0787, -12.7379, 24.3474, 0.55", "-26.0973, -11.2011, 23.7492, 0.28", "-26.7875, -10.8639, 23.6283, 0.55", "-28.6896, -9.84393, 23.4386, 0.28", "-30.4497, -8.93802, 23.4313, 0.55", "-31.4744, -8.39553, 23.47, 0.55", "-33.1206, -7.51976, 23.6701, 0.28", "-34.1303, -7.01681, 23.9646, 0.55", "-36.2704, -5.93421, 24.6023, 0.28", "-37.9631, -4.98826, 25.219, 0.55", "-44.8375, -0.413443, 25.2657, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-12.3023, -18.3945, 25.9818, 0.55", "-13.7807, -19.7281, 26.6308, 0.55", "-15.3433, -21.1359, 27.6133, 0.55", "-17.4476, -22.703, 28.7781, 0.55", "-19.7028, -24.0935, 29.9332, 0.55", "-22.0141, -25.2881, 31.0421, 0.55", "-24.3637, -26.2419, 32.1748, 0.28", "-26.3249, -26.6586, 33.1221, 0.55", "-29.61, -27.0734, 34.6831, 0.28", "-30.9262, -27.1805, 35.256, 0.28", "-32.8266, -27.4046, 35.9206, 0.55", "-35.5101, -27.9635, 36.5849, 0.28", "-37.3699, -28.6587, 36.9277, 0.55", "-39.409, -29.8003, 37.2526, 0.55", "-40.7404, -30.8017, 37.4283, 0.83", "-42.9067, -32.7161, 37.4752, 0.55", "-45.1268, -34.9719, 37.2821, 0.55", "-46.3304, -36.3509, 37.0835, 0.55", "-47.9176, -38.2225, 36.7233, 0.55", "-49.2391, -39.8024, 36.3569, 0.55", "-51.0011, -42.0663, 35.8215, 0.28", "-51.6706, -42.9795, 35.6067, 0.28", "-52.2096, -43.6766, 35.4582, 0.83", "-54.0085, -46.1173, 35.0504, 0.55", "-55.3109, -47.9961, 34.8437, 0.55", "-56.6936, -50.1546, 34.8, 0.28", "-57.8085, -51.9274, 34.83, 0.55", "-58.8387, -53.55, 34.8777, 0.55", "-59.6777, -54.9087, 34.9403, 0.28", "-60.398, -56.1705, 35.106, 0.55", "-61.2151, -57.4321, 35.3117, 0.28", "-69.9317, -62.8565, 36.8367, 0.28" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "13.6741, 7.10721, -5.22918, 0.55", "16.4563, 9.58083, -6.54612, 0.55", "18.3908, 11.2533, -7.49082, 0.83", "19.8649, 12.5775, -8.22813, 0.55", "21.4968, 14.0435, -9.0444, 0.55", "23.2442, 15.6134, -9.91846, 0.55", "24.9894, 17.1812, -10.7914, 0.55", "28.1575, 19.9068, -12.2695, 0.83", "29.5162, 21.1643, -13.0212, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "13.6741, 7.10721, -5.22918, 0.55", "14.2831, 5.95639, -5.75928, 0.55", "14.9057, 4.69396, -6.33476, 0.83", "15.3783, 3.67553, -6.78991, 0.55", "15.732, 2.84922, -7.25086, 0.83", "16.3722, 1.2607, -8.22017, 0.28", "16.7421, 0.376979, -8.82886, 0.55", "17.2381, -0.804429, -9.74301, 0.28", "17.3665, -1.12731, -10.0394, 0.55", "17.9524, -2.87496, -11.7753, 0.28", "18.0825, -3.36844, -12.2712, 0.83", "18.5126, -5.32528, -14.2148, 0.28", "18.7147, -6.34082, -15.1994, 0.83", "19.0612, -8.00918, -16.7504, 0.28", "19.3113, -9.43954, -18.059, 0.28", "19.4041, -10.1453, -18.6506, 0.83", "19.4382, -10.8982, -19.3488, 0.55", "19.4047, -12.0925, -20.4711, 0.28", "19.3843, -12.6111, -20.969, 0.83", "19.2901, -15.323, -23.519, 0.55", "19.2521, -16.2718, -24.4839, 0.83", "19.0697, -18.9946, -27.4605, 0.28", "18.9917, -19.5741, -28.1383, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "18.3065, 98.0067, 17.4941, 0.55", "19.6545, 100.465, 17.4217, 0.55", "20.2356, 101.556, 17.396, 0.83", "20.8537, 102.922, 17.3567, 0.55", "21.5384, 104.653, 17.2161, 0.28", "22.019, 105.937, 17.089, 0.55", "22.4011, 106.989, 16.9485, 0.55", "23.0237, 108.893, 16.6671, 0.55", "23.7027, 110.847, 16.4043, 0.55", "24.4363, 112.929, 16.1758, 0.28", "24.9115, 114.163, 16.0689, 0.55", "25.7672, 116.163, 15.9694, 0.28", "26.8435, 118.448, 15.9007, 0.55", "27.3165, 119.355, 15.9287, 0.55", "27.9805, 120.534, 16.0441, 0.55", "29.1255, 122.666, 16.3739, 0.55", "29.8002, 124.18, 16.6085, 0.28", "30.1083, 125.079, 16.7274, 0.55", "30.588, 127.044, 16.8663, 0.28", "30.8209, 128.38, 16.9352, 0.55", "31.0859, 130.412, 16.964, 0.83", "31.2549, 132.568, 16.9475, 0.55", "31.376, 134.372, 16.9116, 0.28", "31.4329, 135.27, 16.9192, 0.55", "31.6283, 137.642, 16.9887, 0.28", "31.856, 139.585, 17.1334, 0.55", "32.0622, 140.846, 17.2979, 0.55", "32.3773, 142.283, 17.5763, 0.28", "32.726, 143.713, 17.918, 0.55", "33.2624, 145.792, 18.4589, 0.55", "33.6537, 147.332, 18.8721, 0.55", "33.8788, 148.196, 19.1055, 0.83", "34.43, 150.274, 19.6571, 0.55", "34.8153, 151.777, 20.0344, 0.55", "35.8475, 155.958, 21.0127, 0.28", "36.0383, 156.844, 21.2137, 0.55", "36.5991, 159.731, 21.8459, 0.28", "36.8148, 161.048, 22.1388, 0.83", "37.2633, 164.15, 22.8651, 0.28", "37.3808, 165.023, 23.0857, 0.28", "37.5315, 166.327, 23.4203, 0.55", "37.8706, 169.39, 24.2278, 0.28", "37.9973, 170.91, 24.6246, 0.55", "38.1866, 173.238, 25.2177, 0.28", "38.2665, 174.112, 25.488, 0.55", "39.3134, 182.216, 25.2329, 0.55", "40.8241, 190.089, 23.6304, 0.55", "43.8868, 197.669, 23.5926, 0.55", "48.5617, 204.179, 25.2066, 0.55", "51.5124, 211.668, 26.6355, 0.55", "53.1629, 219.273, 29.1406, 0.55", "54.2928, 226.941, 31.7388, 0.55", "56.172, 234.183, 35.0355, 0.55", "57.2541, 241.757, 37.9166, 0.55", "59.4777, 249.489, 39.3641, 0.55", "61.8943, 256.896, 41.8414, 0.55", "64.8498, 263.657, 45.3608, 0.55", "68.6479, 270.42, 47.9443, 0.55", "73.6655, 275.837, 51.4529, 0.55", "78.3717, 281.99, 54.0661, 0.55", "83.1974, 288.298, 56.0028, 0.55", "88.5151, 293.918, 58.6441, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "18.3065, 98.0067, 17.4941, 0.55", "14.3729, 100.953, 17.524, 0.55", "10.0487, 104.531, 17.7689, 0.55", "8.24462, 106.027, 17.9123, 0.28", "7.38169, 106.76, 18.0487, 0.83", "4.20555, 109.568, 18.6459, 0.55", "2.43086, 111.152, 19.1309, 0.83", "0.579357, 112.998, 19.9601, 0.55", "-0.820484, 114.533, 20.7922, 0.55", "-2.74435, 116.898, 21.9982, 0.28", "-3.50778, 117.908, 22.4394, 0.55", "-6.12544, 121.361, 23.8941, 0.28", "-7.23425, 122.842, 24.5526, 0.55", "-8.72434, 124.968, 25.4414, 0.28", "-10.0544, 127.089, 26.1859, 0.28", "-11.6829, 129.676, 26.7406, 0.83", "-19.3299, 139.386, 30.7997, 0.83", "-26.6517, 148.536, 36.4463, 0.83", "-34.2077, 156.498, 43.428, 0.83", "-43.4867, 163.0, 49.8191, 0.83", "-53.1158, 169.839, 55.2709, 0.83", "-63.04, 177.56, 58.6063, 0.83", "-73.8576, 183.901, 62.0697, 0.83", "-84.1582, 191.25, 65.089, 0.83", "-93.7631, 198.99, 69.2191, 0.83", "-102.895, 205.554, 75.7569, 0.83", "-111.941, 211.275, 83.1507, 0.83", "-120.735, 217.939, 90.0409, 0.83", "-130.697, 223.386, 96.39, 0.83", "-140.089, 227.802, 104.233, 0.83", "-150.838, 231.442, 110.591, 0.83", "-162.153, 236.346, 114.734, 0.83", "-172.242, 242.599, 120.055, 0.83", "-182.22, 247.308, 126.947, 0.83", "-190.187, 253.47, 135.18, 0.83", "-198.538, 260.386, 142.366, 0.83", "-204.428, 268.333, 150.814, 0.83", "-210.706, 275.546, 159.634, 0.83", "-216.74, 281.965, 169.205, 0.83", "-223.792, 286.553, 179.127, 0.83", "-230.043, 289.397, 190.175, 0.83", "-234.849, 293.842, 201.417, 0.83", "-240.301, 296.728, 212.87, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-9.10375, 20.7028, 4.17696, 0.83", "-7.37079, 25.0329, 4.26371, 0.83", "-4.66276, 31.948, 4.63496, 0.83", "-3.3808, 35.2413, 4.84297, 0.83", "-1.89524, 39.1629, 5.10789, 0.83", "-0.753057, 42.2256, 5.31175, 0.55", "0.083039, 44.6759, 5.46566, 0.83", "1.10091, 48.0352, 5.74574, 0.55", "1.71918, 50.2829, 5.9515, 0.83", "2.11837, 51.7925, 6.04759, 0.55", "2.59843, 53.83, 6.2267, 0.83", "3.41927, 57.5998, 6.57681, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-9.10375, 20.7028, 4.17696, 0.55", "-10.8562, 22.3906, 4.6503, 0.55", "-11.8332, 23.3316, 4.91421, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "7.72927, 40.8505, -0.470299, 0.28", "11.0069, 55.4881, -0.470299, 0.28", "14.2846, 70.1256, -0.470299, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-4.14552, -16.9511, 2.65533, 0.55", "-4.96703, -19.3149, 3.42604, 0.55", "-6.01421, -22.2563, 4.54574, 0.28", "-6.4693, -23.5694, 5.05788, 0.83", "-6.98112, -25.1481, 5.67591, 0.28", "-7.38172, -26.3436, 6.12372, 0.55", "-8.31462, -28.9385, 7.23908, 0.55", "-8.84921, -30.4435, 7.9213, 0.28", "-9.26933, -31.5277, 8.37275, 0.83", "-9.82273, -32.8067, 8.91163, 0.55", "-10.3217, -33.9338, 9.40895, 0.55", "-11.6513, -36.8134, 10.6604, 0.83", "-12.4553, -38.6207, 11.3235, 0.55", "-13.4451, -40.6671, 12.0451, 0.55", "-14.6725, -43.032, 12.9128, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-4.14552, -16.9511, 2.65533, 1.38", "-4.98184, -19.0963, 0.83634, 1.38", "-5.87473, -21.3865, -1.10571, 1.94", "-7.38926, -25.2712, -4.39981, 1.66" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "3.85777, -26.7127, 5.38589, 0.83", "3.84457, -27.4898, 5.31088, 0.83", "3.80643, -29.7371, 5.09398, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "3.85777, -26.7127, 5.38589, 0.55", "5.39307, -27.2478, 5.26558, 0.55", "7.56617, -27.8636, 4.64429, 0.55", "9.38389, -28.3359, 4.07959, 0.55", "11.7159, -28.854, 3.42475, 0.55", "15.782, -29.688, 2.38394, 0.28", "19.8798, -30.4708, 1.44852, 0.55", "24.6058, -31.2578, 0.354457, 0.55", "25.9845, -31.4593, 0.0567624, 0.83", "28.9555, -31.8525, -0.450123, 0.28", "29.8058, -31.9513, -0.570642, 0.55", "31.4667, -32.1264, -0.573864, 0.28", "33.0923, -32.3195, -0.342523, 0.55", "35.2989, -32.5922, 0.398929, 0.28", "36.9082, -32.8505, 0.986383, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-44.8375, -0.413443, 25.2657, 0.28", "-56.2943, 3.72577, 23.7356, 0.28", "-68.0322, 7.32265, 23.6041, 0.28", "-79.7191, 10.7185, 21.9867, 0.28" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-44.8375, -0.413443, 25.2657, 0.28", "-52.8362, 3.13876, 24.534, 0.28", "-60.5524, 7.13013, 23.2445, 0.28", "-68.3078, 10.77, 21.311, 0.28" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "29.5162, 21.1643, -13.0212, 0.28", "31.1917, 22.3297, -12.9167, 0.28", "32.2275, 23.0437, -12.846, 0.55", "33.594, 23.9638, -12.7437, 0.28", "35.1791, 24.989, -12.5472, 0.55", "36.8889, 26.0665, -12.4139, 0.28", "38.0689, 26.8118, -12.3462, 0.55", "39.568, 27.7792, -12.2464, 0.28", "40.1296, 28.1433, -12.205, 0.55", "41.6352, 29.0825, -12.0899, 0.28", "43.4087, 30.1627, -11.7264, 0.55", "44.8909, 31.0905, -11.3269, 0.28", "45.7708, 31.6301, -11.0417, 0.55", "47.3095, 32.5574, -10.6116, 0.28", "47.9534, 32.9019, -10.3973, 0.55", "50.3173, 33.9758, -9.40929, 0.28", "51.5838, 34.5105, -8.78973, 0.28", "52.4696, 34.8309, -8.35865, 0.28", "54.477, 35.461, -7.41779, 0.28", "57.4743, 36.2156, -5.86482, 0.28", "58.6823, 36.4234, -5.23564, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "29.5162, 21.1643, -13.0212, 0.55", "32.815, 22.7449, -16.8396, 0.55", "38.4926, 25.1602, -22.2226, 0.55", "39.6271, 25.6422, -23.1635, 0.83", "41.3337, 26.3215, -24.3949, 0.28", "42.3035, 26.6645, -24.9976, 0.55", "44.2679, 27.3429, -26.1385, 0.28", "46.2812, 27.9211, -27.1478, 0.55", "48.3562, 28.2846, -27.8846, 0.28", "49.8688, 28.4831, -28.5099, 0.55", "52.2122, 28.7711, -29.575, 0.55", "54.4172, 29.0227, -30.6621, 0.55", "57.6693, 29.3618, -32.3836, 0.28", "59.3877, 29.5594, -33.4273, 0.55", "61.857, 29.9078, -35.0277, 0.55", "63.4674, 30.3134, -36.1781, 0.28", "64.387, 30.6147, -36.8498, 0.28", "65.1941, 30.924, -37.4306, 0.55", "67.8998, 32.18, -39.3716, 0.28", "68.6624, 32.5464, -39.9688, 0.55", "71.877, 33.9983, -42.5228, 0.28", "72.9785, 34.4195, -43.4114, 0.55", "75.1592, 35.0677, -45.1724, 0.28", "75.8215, 35.2088, -45.7081, 0.55", "78.4575, 35.5549, -47.6749, 0.28", "79.6352, 35.6187, -48.5406, 0.55", "81.2434, 35.6108, -49.7561, 0.28", "82.6908, 35.6044, -50.874, 0.28", "83.9433, 35.5953, -51.8845, 0.55", "85.5493, 35.6261, -53.2177, 0.28", "86.519, 35.6723, -54.0323, 0.55", "89.6913, 35.9403, -56.7116, 0.28", "90.1497, 36.0194, -57.1539, 0.55", "92.4598, 36.5945, -59.4397, 0.28", "93.3578, 36.8505, -60.2636, 0.55", "94.1702, 37.1216, -60.9891, 0.28", "95.4484, 37.6164, -62.0953, 0.55", "99.9943, 39.4042, -65.4504, 0.28", "101.296, 39.9259, -66.2621, 0.55", "104.289, 41.3249, -68.0237, 0.28", "105.024, 41.7176, -68.4529, 0.55", "106.701, 42.6998, -69.372, 0.28", "108.451, 43.8441, -70.1946, 0.55", "110.273, 45.1319, -70.7899, 0.28", "113.431, 47.937, -72.2719, 0.55", "114.571, 49.1063, -72.9059, 0.28", "115.574, 50.1801, -73.4278, 0.55", "116.885, 51.5923, -74.1294, 0.28", "117.683, 52.4752, -74.5766, 0.55", "120.962, 56.0091, -76.4009, 0.28", "122.137, 57.1112, -76.8919, 0.55", "124.114, 58.9733, -77.8493, 0.28", "125.724, 60.4569, -78.6248, 0.55", "126.813, 61.4605, -79.1966, 0.28", "128.219, 62.7561, -79.8249, 0.55", "130.022, 64.3453, -80.4291, 0.28", "132.525, 66.698, -81.3467, 0.55", "134.946, 69.0224, -82.332, 0.28", "136.818, 70.8497, -83.1962, 0.55", "139.623, 73.4586, -84.6432, 0.28", "140.983, 74.6578, -85.3948, 0.55", "143.98, 77.21, -87.3458, 0.28", "145.074, 78.0534, -88.2288, 0.55", "148.103, 80.0924, -91.523, 0.28", "148.824, 80.4769, -92.8424, 0.55", "149.376, 80.6752, -94.2416, 0.28", "149.942, 80.8238, -95.9776, 0.55", "151.204, 80.8746, -100.822, 0.28", "151.605, 80.8305, -102.773, 0.55", "152.901, 80.1855, -112.403, 0.28", "153.141, 80.0598, -114.734, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "18.9917, -19.5741, -28.1383, 0.28", "18.8415, -20.6603, -29.5614, 0.28", "18.7525, -21.3094, -30.3717, 0.55", "18.4246, -23.4446, -32.8905, 0.28", "18.3505, -23.8953, -33.408, 0.55", "17.7363, -27.2848, -37.1564, 0.28", "17.3519, -29.2733, -39.1213, 0.55", "17.0363, -30.7976, -40.6317, 0.28", "16.8594, -31.6347, -41.3296, 0.55", "16.4299, -33.7743, -42.7219, 0.28", "16.3194, -34.4714, -43.1785, 0.55", "15.9521, -37.4638, -44.993, 0.28", "15.7142, -39.7454, -46.2206, 0.55", "15.4252, -43.4813, -48.229, 0.28", "15.3595, -44.5789, -48.8235, 0.55", "15.0105, -52.5294, -53.1174, 0.28", "14.9868, -53.481, -53.6685, 0.55", "14.9653, -56.8417, -55.8195, 0.28", "14.9597, -57.7613, -56.4228, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "18.9917, -19.5741, -28.1383, 0.55", "19.6847, -19.4652, -30.3276, 0.55", "21.3586, -18.7205, -36.6532, 0.55", "22.9241, -17.7942, -42.9638, 0.28", "23.1624, -17.5001, -44.2061, 0.55", "24.1021, -15.8845, -49.7578, 0.28", "24.3989, -15.1041, -51.7086, 0.55", "25.016, -11.6615, -57.8211, 0.28", "25.0843, -10.7542, -59.1244, 0.55", "25.1081, -5.54269, -65.0093, 0.28", "25.0795, -4.70005, -65.8257, 0.55", "24.6431, 0.899429, -70.0734, 0.28", "24.4809, 2.56225, -71.1834, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "3.41927, 57.5998, 6.57681, 0.28", "2.96071, 59.1679, 6.30649, 0.28", "2.76315, 60.0278, 6.09146, 0.55", "2.31025, 62.3373, 5.62599, 0.28", "2.19002, 62.988, 5.5262, 0.55", "1.99437, 64.0135, 5.36793, 0.28", "1.62532, 65.4778, 5.16361, 0.55", "0.721821, 68.0436, 4.9434, 0.28", "0.112434, 69.4036, 4.83453, 0.55", "-0.646229, 70.7919, 4.7887, 0.28", "-1.35864, 72.0553, 4.80755, 0.83", "-2.36526, 73.9515, 4.89266, 0.55", "-3.61658, 76.4522, 4.98593, 0.55", "-4.34037, 78.179, 5.10253, 0.83", "-4.73125, 79.4472, 5.19386, 0.55", "-5.05725, 81.1315, 5.496, 1.11", "-5.26796, 83.5696, 6.12896, 0.55", "-5.22582, 85.5759, 6.73412, 1.11", "-5.0246, 87.8344, 7.52895, 0.55", "-4.86572, 89.6677, 8.00109, 0.83", "-4.71229, 93.1056, 8.26595, 0.28", "-4.73413, 93.7084, 8.21291, 0.55", "-4.88171, 94.7799, 7.98187, 0.28", "-5.13086, 95.9167, 7.61327, 0.83", "-7.14257, 102.726, 4.89514, 0.55", "-7.81852, 104.659, 4.0963, 0.55", "-8.59729, 106.734, 3.25745, 0.83", "-9.24051, 108.398, 2.8022, 0.28", "-9.82576, 109.918, 2.5885, 0.55", "-10.4367, 111.561, 2.62531, 0.28", "-10.9137, 112.814, 2.92658, 0.55", "-11.3922, 113.998, 3.2209, 0.28", "-12.1456, 115.813, 3.63412, 0.55", "-12.5963, 116.834, 3.841, 0.28", "-13.6333, 118.867, 4.26407, 0.55", "-14.5804, 120.423, 4.57738, 0.28", "-15.7448, 122.102, 4.89394, 0.28", "-16.5899, 123.159, 5.10994, 0.55", "-17.9654, 124.548, 5.44661, 0.55", "-18.9723, 125.337, 5.67991, 0.55", "-20.2447, 126.189, 5.95448, 0.28", "-20.7647, 126.493, 6.04492, 0.55", "-21.8721, 126.966, 6.24362, 0.28", "-23.7222, 127.543, 6.61462, 0.55", "-26.0118, 128.02, 7.15759, 0.55", "-29.8351, 134.715, 8.20627, 0.55", "-33.9021, 141.173, 9.71527, 0.55", "-37.4214, 147.866, 11.5448, 0.55", "-40.7437, 154.895, 11.8568, 0.55", "-44.5745, 161.612, 12.7164, 0.55", "-50.0001, 167.177, 12.3778, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "3.41927, 57.5998, 6.57681, 0.55", "5.59062, 59.4812, 7.42063, 0.55", "7.72811, 61.3706, 8.30729, 0.83", "9.47139, 63.0092, 9.15307, 0.55", "11.0105, 64.5404, 9.95826, 0.83", "13.2708, 66.7769, 11.1636, 0.55", "15.0606, 68.5425, 12.1415, 0.28", "15.9186, 69.4898, 12.67, 0.28", "16.9343, 70.7506, 13.3193, 0.55", "17.6207, 71.627, 13.7664, 0.28", "18.5295, 72.8284, 14.3665, 0.55", "20.0417, 74.8884, 15.2029, 0.28", "20.6529, 75.7693, 15.5605, 0.55", "21.834, 77.6463, 16.2678, 0.28", "22.7252, 79.1646, 16.8402, 0.55", "23.3503, 80.3853, 17.3278, 0.28", "23.9702, 81.7921, 17.8954, 0.55", "25.5175, 85.341, 19.3947, 0.28", "26.2775, 86.8757, 20.1829, 0.28", "26.9749, 88.117, 20.8642, 0.55", "28.092, 89.813, 21.8052, 0.55", "29.4794, 91.7594, 22.9523, 0.28", "29.9267, 92.3689, 23.3235, 0.55", "31.9112, 94.8838, 24.6674, 0.55", "32.8691, 95.9174, 25.3153, 0.28", "33.96, 96.9357, 25.9413, 0.55", "38.0295, 104.634, 30.3213, 0.55", "43.2242, 111.996, 34.0409, 0.55", "48.9351, 119.433, 36.7062, 0.55", "53.8637, 126.979, 40.4184, 0.55", "58.8496, 134.946, 43.0062, 0.55", "64.9688, 142.368, 44.5806, 0.55", "71.8744, 149.242, 44.8565, 0.55", "79.1706, 155.692, 45.2942, 0.55", "86.4861, 161.893, 47.0389, 0.55", "93.4235, 168.175, 49.7632, 0.55", "100.827, 173.048, 53.819, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-11.8332, 23.3316, 4.91421, 0.55", "-12.4478, 25.353, 4.23636, 0.55", "-13.0309, 27.2708, 3.59327, 0.55", "-13.6357, 29.2598, 2.92631, 0.83", "-14.0317, 30.5623, 2.48955, 0.55", "-15.2001, 34.4049, 1.20102, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-11.8332, 23.3316, 4.91421, 0.55", "-15.7763, 18.774, 5.96208, 0.55", "-18.616, 15.418, 6.81509, 0.83", "-19.9265, 13.8474, 7.27358, 0.55", "-22.774, 10.3811, 8.33113, 0.83", "-25.059, 7.59486, 9.33179, 0.55", "-26.4356, 5.96779, 9.97527, 0.83", "-28.5286, 3.33344, 11.2417, 0.55", "-29.5593, 2.10194, 12.0233, 0.83", "-30.6804, 0.824129, 13.0412, 0.55", "-32.4015, -0.944784, 14.8333, 0.83", "-34.163, -2.52115, 17.253, 0.55", "-35.8728, -3.88631, 20.2022, 0.28", "-36.7618, -4.621, 22.5005, 0.55", "-37.6039, -5.38279, 25.4199, 0.28", "-37.9593, -5.87062, 27.9769, 0.83", "-38.3947, -7.02459, 34.8104, 0.55", "-38.4161, -7.27024, 36.2262, 0.55", "-38.2448, -8.17818, 40.8521, 0.55", "-38.1515, -8.64373, 42.7861, 0.55", "-37.7296, -10.7301, 49.8189, 0.28", "-37.5646, -11.4133, 52.0329, 0.28", "-37.4338, -12.2985, 54.355, 0.55", "-37.3208, -14.456, 59.7322, 0.55", "-37.329, -14.9911, 61.0577, 0.55", "-37.3527, -15.9475, 63.3966, 0.55", "-37.6102, -18.4242, 68.8471, 0.55", "-37.6544, -19.2648, 70.8616, 0.28", "-37.8584, -20.9137, 75.3262, 0.28", "-42.388, -24.4568, 86.4336, 0.28", "-45.3465, -27.3592, 98.2348, 0.28", "-48.3896, -31.7896, 109.528, 0.28", "-50.1273, -35.5051, 121.345, 0.28", "-50.5815, -38.964, 133.356, 0.28", "-53.7139, -45.238, 143.713, 0.28", "-56.8479, -49.7337, 154.956, 0.28", "-60.45, -56.4252, 164.891, 0.28", "-63.1116, -65.8794, 172.635, 0.28", "-66.2802, -76.3153, 178.759, 0.28", "-67.6374, -87.6614, 183.845, 0.28", "-67.2327, -99.3243, 188.346, 0.28", "-64.8592, -110.254, 193.945, 0.28", "-61.9626, -121.822, 197.718, 0.28", "-61.2903, -133.92, 200.822, 0.28", "-60.4057, -146.345, 201.952, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-14.6725, -43.032, 12.9128, 0.28", "-20.4309, -43.5345, 14.9857, 0.28", "-22.3894, -43.6852, 15.6957, 0.55", "-24.9657, -43.8935, 16.6355, 0.28", "-25.6977, -43.9469, 16.8491, 0.55", "-28.7306, -44.0849, 17.5686, 0.28", "-30.6915, -44.16, 17.8191, 0.55", "-33.3808, -44.1849, 17.601, 0.28", "-34.6432, -44.1627, 17.2206, 0.55", "-37.6405, -44.1304, 15.9478, 0.28", "-39.6103, -44.1856, 14.8077, 0.55", "-42.9514, -44.3721, 12.409, 0.55", "-45.3715, -44.5309, 10.3911, 0.28", "-48.9427, -44.7639, 6.99074, 0.55", "-51.4424, -44.9718, 4.47822, 0.28", "-53.5364, -45.2975, 2.42525, 0.55", "-65.4054, -45.0597, -1.08819, 0.55", "-77.3918, -44.622, -4.15559, 0.55", "-89.1303, -42.4062, -7.40697, 0.55", "-100.856, -40.0004, -10.5702, 0.55", "-113.07, -38.7, -12.119, 0.55", "-124.576, -35.7391, -15.6006, 0.55", "-135.428, -31.7498, -20.0272, 0.55", "-146.659, -27.5749, -23.1411, 0.55", "-158.057, -25.3034, -27.407, 0.55", "-168.665, -21.4602, -32.5044, 0.55", "-178.498, -17.7917, -39.071, 0.55", "-186.863, -13.0087, -46.8449, 0.55", "-194.923, -9.06687, -55.3749, 0.55", "-202.206, -5.48082, -64.7225, 0.55", "-210.252, -3.13115, -73.834, 0.55", "-218.34, -1.58014, -83.0779, 0.55", "-226.253, 1.49267, -92.0898, 0.55", "-234.28, 4.07059, -101.157, 0.55", "-242.286, 8.31327, -109.593, 0.55", "-249.961, 12.0237, -118.571, 0.55", "-255.704, 16.479, -128.593, 0.55", "-261.632, 20.7338, -138.594, 0.55", "-265.582, 24.859, -149.579, 0.55", "-270.643, 27.3087, -160.609, 0.55", "-273.964, 28.4527, -172.48, 0.55", "-275.262, 30.3537, -184.645, 0.55", "-274.283, 30.7802, -196.979, 0.55", "-271.949, 32.5378, -209.01, 0.55", "-271.305, 33.8198, -221.307, 0.55", "-271.061, 36.845, -233.309, 0.55", "-272.166, 41.6165, -244.68, 0.55", "-274.192, 47.5264, -255.368, 0.55", "-275.015, 54.464, -265.589, 0.55", "-274.046, 62.1497, -275.246, 0.55", "-273.014, 70.951, -283.892, 0.55", "-270.418, 79.5284, -292.434, 0.55", "-267.828, 87.9568, -301.124, 0.55", "-263.739, 96.5198, -309.076, 0.55", "-259.342, 105.644, -316.195, 0.55", "-254.188, 114.039, -323.695, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 27
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-14.6725, -43.032, 12.9128, 0.28", "-15.9191, -44.8286, 14.9339, 0.28", "-16.6433, -45.761, 15.9284, 0.55", "-19.4069, -49.2951, 19.447, 0.28", "-19.9307, -49.965, 20.1139, 0.55", "-21.4838, -51.9511, 22.0913, 0.55", "-24.5796, -55.91, 26.0329, 0.28", "-25.7897, -57.2102, 27.361, 0.28", "-26.515, -57.936, 28.1114, 0.55", "-31.3681, -63.9519, 36.0758, 0.55", "-36.0308, -71.0676, 43.2034, 0.55", "-41.3237, -77.9322, 50.1343, 0.55", "-46.4224, -85.605, 56.3235, 0.55", "-51.055, -92.4312, 63.7476, 0.55", "-55.2854, -99.4349, 71.2461, 0.55", "-60.4073, -107.017, 77.5277, 0.55", "-65.9766, -114.787, 83.166, 0.55", "-70.6098, -122.854, 89.2175, 0.55", "-74.4365, -128.953, 97.6636, 0.55", "-78.782, -135.68, 105.347, 0.55", "-81.7195, -141.475, 114.345, 0.55", "-86.0065, -146.952, 122.994, 0.55", "-88.7403, -152.382, 132.279, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-7.38926, -25.2712, -4.39981, 0.83", "-6.09196, -28.643, -10.1718, 0.83", "-5.40949, -30.6581, -13.7172, 0.83", "-4.79614, -32.6402, -17.4505, 0.83", "-3.9631, -34.5308, -21.8563, 0.83", "-3.0285, -35.847, -26.5489, 0.83", "-2.95946, -35.9113, -27.0135, 0.55", "-2.78781, -35.9314, -28.6479, 0.55", "-2.72036, -35.778, -30.7632, 0.55", "-2.58214, -34.185, -36.189, 0.55", "-2.27543, -31.8741, -40.6661, 0.55", "-1.73038, -29.0594, -44.9537, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-7.38926, -25.2712, -4.39981, 1.38", "-8.90884, -27.2152, -4.34359, 1.38", "-11.9672, -30.2831, -4.97214, 1.66", "-14.4252, -32.7488, -5.47732, 0.83", "-16.077, -34.4058, -5.81681, 0.83", "-18.0509, -36.3859, -6.22251, 0.83", "-21.4271, -39.7726, -6.9164, 0.83", "-27.1726, -44.6057, -8.40097, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "3.80643, -29.7371, 5.09398, 0.55", "4.0211, -31.0445, 4.53525, 0.55", "4.16085, -31.8956, 4.17153, 0.28", "4.37439, -33.1959, 3.61578, 0.83", "4.58612, -34.4853, 3.06474, 0.55", "5.0178, -37.1141, 1.94128, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "3.80643, -29.7371, 5.09398, 0.55", "5.35831, -30.9009, 6.12331, 0.55", "6.8471, -32.0368, 7.12847, 0.55", "9.21021, -33.889, 8.75821, 0.28", "11.1704, -35.5288, 10.1461, 0.55", "14.0191, -38.0268, 12.1909, 0.55", "15.9307, -39.7777, 13.5227, 0.55", "17.2777, -41.1281, 14.5237, 0.55", "18.1541, -42.0956, 15.2016, 0.55", "19.2828, -43.5526, 16.1488, 0.28", "19.9261, -44.6096, 16.8064, 0.55", "20.7262, -46.1964, 17.7153, 0.28", "21.5499, -47.8298, 18.5109, 0.55", "22.6739, -49.9404, 19.6491, 0.28", "23.9978, -52.1709, 20.8461, 0.55", "25.1423, -53.9284, 21.7719, 0.55", "26.5985, -55.9325, 22.9583, 0.55", "28.24, -57.9651, 24.3264, 0.55", "30.1005, -60.004, 25.7498, 0.28", "31.3081, -61.1892, 26.6325, 0.55", "32.4959, -62.1888, 27.4134, 0.55", "34.6262, -63.8289, 28.9436, 0.55", "35.519, -64.4986, 29.6477, 0.28", "36.0514, -64.8755, 30.0759, 0.55", "37.2853, -65.7302, 30.9983, 0.28", "39.1424, -66.994, 32.5126, 0.28", "39.3346, -67.1141, 32.6563, 0.55", "41.1962, -68.313, 33.7397, 0.28", "41.9679, -68.7697, 34.1678, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-15.2001, 34.4049, 1.20102, 0.55", "-15.5626, 36.5139, 1.34437, 0.55", "-15.8971, 38.9463, 1.24274, 0.83", "-16.1175, 41.525, 0.895205, 0.55", "-16.2559, 44.0283, 0.335182, 0.83", "-16.342, 46.4303, -0.283441, 0.83", "-16.431, 48.865, -0.870925, 0.55", "-16.4985, 52.2802, -1.85257, 0.83", "-16.4688, 55.901, -3.05361, 0.83", "-16.3755, 58.6588, -4.06943, 0.83", "-16.3003, 61.8609, -5.31125, 0.55", "-16.1875, 64.7258, -6.4304, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-15.2001, 34.4049, 1.20102, 0.28", "-16.7214, 34.1494, 1.85581, 0.28", "-18.7744, 33.6541, 2.88706, 0.55", "-19.4704, 33.4857, 3.26828, 0.55", "-22.6755, 32.738, 5.01765, 0.28", "-23.0218, 32.6655, 5.22308, 0.55", "-25.5143, 32.1028, 6.86925, 0.55", "-26.9321, 31.7258, 7.95595, 0.55", "-29.0907, 31.0857, 9.82376, 0.55", "-29.9246, 30.826, 10.5671, 0.55", "-32.8078, 30.0472, 13.2972, 0.55", "-34.456, 29.7293, 14.831, 0.28", "-35.3748, 29.6166, 15.6625, 0.55", "-36.7626, 29.6025, 17.0069, 0.28", "-37.6135, 29.6949, 17.8441, 0.55", "-39.4615, 30.0828, 19.6623, 0.28", "-40.4761, 30.385, 20.6147, 0.55", "-42.2146, 31.06, 22.1578, 0.55", "-43.7688, 31.767, 23.5416, 0.28", "-44.7583, 32.2622, 24.4507, 0.55", "-46.0213, 32.8711, 25.6899, 0.28", "-47.1614, 33.3018, 26.7484, 0.55", "-56.0033, 31.5871, 31.7984, 0.55", "-64.2287, 29.2164, 37.573, 0.55", "-72.5919, 25.6521, 42.4693, 0.55", "-81.8274, 23.3523, 46.4742, 0.55", "-91.2543, 20.9582, 49.9418, 0.55", "-99.9934, 17.9473, 54.5444, 0.55", "-108.579, 13.5581, 58.2389, 0.55", "-115.887, 8.73439, 63.7107, 0.55", "-122.492, 3.1808, 69.3811, 0.55", "-127.806, -2.59773, 76.0889, 0.55", "-132.676, -8.90982, 82.6511, 0.55", "-136.567, -14.3569, 90.5133, 0.55", "-141.639, -19.0862, 98.164, 0.55", "-148.512, -23.7158, 104.323, 0.55", "-156.279, -29.0937, 108.493, 0.55", "-164.541, -32.1569, 113.875, 0.55", "-172.46, -36.0171, 119.262, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-1.73038, -29.0594, -44.9537, 0.55", "-1.34479, -27.2872, -45.367, 0.55", "-1.22004, -26.7393, -45.5713, 0.28", "-0.829807, -25.1227, -46.2533, 0.55", "-0.271574, -22.8439, -47.5923, 0.55", "0.149544, -21.1274, -48.71, 0.28", "0.470017, -19.4354, -50.3415, 0.83", "0.834719, -17.2406, -52.971, 0.28", "0.914155, -16.7487, -53.6543, 0.55", "1.29824, -14.3419, -57.4375, 0.28", "1.38961, -13.717, -58.605, 0.83", "2.16157, -9.44928, -67.2317, 0.28", "2.26889, -8.98681, -68.1853, 0.55", "2.66606, -7.51678, -71.1008, 0.28", "2.87526, -6.84408, -72.3897, 0.83", "4.06733, -3.5573, -78.4997, 0.28", "4.5868, -2.29314, -80.7534, 0.28", "4.98997, -1.43789, -82.1374, 0.55", "6.12655, 1.0058, -85.9978, 0.28", "6.71495, 2.28557, -87.8598, 0.83", "7.5639, 4.32495, -90.5635, 0.55", "7.88079, 5.25401, -91.6714, 0.83", "8.27507, 6.67223, -93.3292, 0.28", "8.55235, 7.78302, -94.5475, 0.83", "9.59748, 12.182, -99.0077, 0.28", "9.99002, 14.1633, -100.903, 0.83", "10.7024, 18.3243, -104.633, 0.28", "10.8339, 19.1408, -105.386, 0.55", "10.9877, 20.1273, -106.271, 0.28", "11.2018, 21.4762, -107.535, 0.55", "11.5428, 23.1198, -109.083, 0.28", "11.7221, 23.5517, -109.548, 0.55", "12.8641, 25.2722, -111.557, 0.28", "13.5648, 26.0899, -112.572, 0.55", "14.7935, 27.1999, -113.999, 0.28", "15.8534, 28.0288, -114.984, 0.55", "17.9435, 29.4649, -116.631, 0.28", "19.0573, 30.2705, -117.427, 0.55", "20.2957, 31.2453, -118.294, 0.28", "21.2998, 32.0783, -119.037, 0.55", "22.0491, 32.8063, -119.652, 0.55", "23.5728, 34.4061, -121.029, 0.28", "24.6089, 35.5391, -122.11, 0.55", "26.7347, 37.7916, -124.587, 0.28", "27.2885, 38.327, -125.276, 0.83", "29.3192, 40.0752, -127.791, 0.28", "30.5618, 40.9185, -129.249, 0.83", "32.3477, 41.8088, -130.993, 0.28", "33.378, 42.0309, -131.733, 0.83", "35.5796, 42.1674, -132.928, 0.28", "36.7214, 42.1257, -133.448, 0.83", "39.6184, 41.8104, -134.525, 0.28", "43.1669, 41.3139, -135.646, 0.55", "50.1808, 39.4366, -137.372, 0.28", "51.6423, 38.8978, -137.685, 0.55", "52.9374, 38.211, -137.931, 0.55", "54.6466, 37.0342, -138.258, 0.28", "55.2967, 36.4437, -138.377, 0.55", "60.8792, 29.9702, -139.557, 0.28", "61.4201, 29.2172, -139.649, 0.55", "64.4279, 24.6785, -140.164, 0.28", "65.0429, 23.6716, -140.274, 0.55", "66.5902, 20.8136, -140.577, 0.28", "67.1134, 19.7565, -140.694, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.73038, -29.0594, -44.9537, 0.55", "-2.47769, -29.7261, -46.4069, 0.55", "-6.13505, -32.7648, -52.8651, 0.28", "-7.16666, -33.6926, -54.6333, 0.28", "-8.08336, -34.6498, -56.2946, 0.55", "-12.3617, -39.6525, -64.3854, 0.28", "-13.2456, -40.7677, -65.984, 0.55", "-13.9063, -41.6362, -66.9529, 0.28", "-15.2562, -43.1261, -68.2781, 0.55", "-17.8728, -45.759, -70.4358, 0.28", "-21.6119, -49.5375, -73.4088, 0.55", "-23.7831, -51.7018, -75.1338, 0.55", "-27.4511, -55.2772, -78.5245, 0.55", "-31.999, -59.5124, -83.2753, 0.55", "-33.9644, -61.263, -85.4535, 0.28", "-36.0388, -63.1262, -87.9878, 0.55", "-40.0184, -66.9277, -94.552, 0.28", "-41.0274, -68.0948, -96.8775, 0.55", "-42.2584, -69.8472, -100.544, 0.28", "-42.8476, -70.971, -102.719, 0.55", "-43.4856, -72.3026, -105.107, 0.55", "-46.53, -78.1795, -114.82, 0.28", "-47.8667, -80.6816, -118.608, 0.28", "-49.6634, -83.4873, -122.706, 0.83", "-50.5658, -84.7807, -124.493, 0.28", "-51.5655, -85.9304, -126.135, 0.83", "-56.8282, -90.2691, -132.748, 0.28", "-57.5199, -90.7044, -133.51, 0.55", "-60.5513, -92.3573, -136.881, 0.28", "-63.1597, -93.7125, -139.991, 0.83", "-67.5293, -95.6593, -145.177, 0.83", "-71.5465, -97.2233, -149.748, 0.28", "-75.1879, -98.493, -153.763, 0.83" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-27.1726, -44.6057, -8.40097, 0.83", "-29.7501, -43.7477, -6.91385, 0.83", "-32.675, -42.7238, -5.44358, 0.83", "-35.0309, -41.7949, -4.42527, 0.83", "-37.5905, -40.6574, -3.49662, 0.83", "-41.1523, -38.927, -2.52743, 0.83", "-44.0169, -37.4215, -2.10996, 0.28", "-45.808, -36.2395, -2.26923, 0.55", "-47.4373, -35.009, -2.76844, 0.55", "-48.7679, -33.8919, -3.45527, 0.55", "-50.9229, -31.8265, -4.929, 0.55", "-53.2003, -29.4232, -7.01603, 0.55", "-54.9015, -27.464, -8.79064, 0.55", "-55.4177, -26.842, -9.30726, 0.83", "-56.5814, -25.3931, -10.4062, 0.55", "-57.1938, -24.5689, -10.9199, 0.83", "-59.0851, -21.7267, -12.2804, 0.55", "-59.3026, -21.382, -12.3872, 0.83", "-60.6075, -19.262, -12.8643, 0.55", "-61.9214, -17.1186, -13.1382, 0.83", "-63.1678, -15.0437, -13.4153, 0.28", "-63.7025, -14.1355, -13.522, 0.55", "-64.9202, -11.9519, -13.7637, 0.28", "-65.655, -10.5688, -13.981, 0.55", "-67.0963, -7.47781, -14.5965, 0.28", "-68.6006, -3.80402, -15.4665, 0.83", "-69.5551, -1.15936, -16.1156, 0.28", "-70.3697, 1.38488, -16.7046, 0.28", "-70.5724, 2.05318, -16.8467, 0.83", "-71.1208, 3.91598, -17.2292, 0.55", "-71.785, 6.13877, -17.6736, 0.83", "-72.5813, 8.45047, -17.9877, 0.55", "-73.0936, 9.85313, -18.1892, 0.83", "-74.2443, 12.7999, -18.6206, 0.83", "-75.3962, 15.5747, -19.0866, 0.55", "-76.2733, 17.5204, -19.535, 0.83", "-77.1811, 19.4743, -20.1316, 0.28", "-77.6596, 20.499, -20.5561, 0.55", "-79.1629, 23.7162, -22.1789, 0.28", "-79.9584, 25.3766, -23.1267, 0.83", "-81.4829, 28.1704, -24.9318, 0.28", "-82.1702, 29.2851, -25.7226, 0.83", "-83.7171, 31.4572, -27.699, 0.55", "-84.7557, 32.7577, -28.9409, 0.55", "-85.9835, 34.1714, -30.3057, 0.83", "-88.1058, 36.6098, -32.4683, 0.55", "-89.2125, 37.8805, -33.444, 0.83", "-92.6026, 41.8879, -36.2185, 0.28", "-94.5822, 44.3058, -37.6437, 0.55", "-95.5777, 45.6012, -38.3785, 0.28", "-97.199, 47.898, -39.4909, 0.28", "-97.9623, 49.0773, -39.9501, 0.28", "-99.6312, 51.7226, -40.8537, 0.55", "-100.856, 53.6797, -41.3401, 0.28", "-102.212, 55.8095, -41.9675, 0.83", "-103.744, 58.6756, -42.6283, 0.28", "-104.377, 60.0642, -42.939, 0.55", "-105.543, 63.1208, -43.6012, 0.28", "-106.121, 64.8991, -43.9535, 0.55", "-106.352, 65.7195, -44.1844, 0.55", "-107.726, 71.6937, -46.3155, 0.28", "-108.127, 74.1581, -47.5188, 0.83", "-108.323, 76.0246, -48.6688, 0.28", "-108.391, 77.2416, -49.5538, 0.55", "-108.534, 80.2154, -51.9627, 0.28", "-108.66, 83.0473, -54.3729, 0.55", "-108.754, 84.9556, -56.1521, 0.55", "-108.82, 87.4822, -58.4447, 0.28", "-108.843, 88.5934, -59.4624, 0.28", "-108.869, 89.8916, -60.6141, 0.55", "-108.983, 93.2199, -63.0868, 0.28", "-109.146, 95.0479, -64.3351, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-27.1726, -44.6057, -8.40097, 0.83", "-29.31, -44.0163, -10.5703, 0.83", "-32.3481, -42.964, -13.3741, 0.55", "-32.956, -42.711, -13.8255, 0.55", "-33.6292, -42.4452, -14.3091, 0.55", "-35.3804, -41.781, -15.4263, 0.55", "-38.4935, -40.6999, -17.3656, 0.28", "-39.8132, -40.286, -18.3731, 0.55", "-41.8812, -39.8215, -19.9915, 0.28", "-43.6199, -39.5759, -21.5738, 0.55", "-45.2496, -39.4849, -23.1396, 0.55", "-47.6827, -39.6487, -25.3969, 0.28", "-52.5976, -40.4007, -29.8434, 0.83", "-53.8976, -40.6855, -31.0267, 0.83", "-56.9886, -41.5132, -33.8613, 0.28", "-58.2578, -41.859, -34.9151, 0.83", "-61.6271, -42.7986, -37.502, 0.28", "-62.5164, -43.0403, -38.083, 0.55", "-65.1648, -43.7304, -39.433, 0.28", "-66.1653, -43.9679, -39.9709, 0.83", "-68.2176, -44.4485, -41.0225, 0.28", "-70.8033, -44.9559, -42.6917, 0.55", "-72.9247, -45.305, -44.2339, 0.28", "-73.9837, -45.4783, -45.2576, 0.83", "-76.4844, -46.0339, -48.0951, 0.28", "-77.2918, -46.2596, -49.13, 0.55", "-79.8337, -47.1767, -52.8949, 0.28", "-80.3063, -47.3868, -53.6762, 0.55", "-84.167, -49.4278, -60.869, 0.28", "-85.0379, -49.955, -62.6251, 0.28", "-85.6564, -50.4253, -63.9167, 0.55", "-87.4146, -51.9536, -67.6876, 0.28", "-88.226, -52.773, -69.325, 0.28", "-89.3852, -53.9377, -71.4562, 0.28", "-89.848, -54.3173, -72.0696, 0.55", "-91.9257, -55.5435, -74.2601, 0.28", "-93.0703, -56.125, -75.2642, 0.55", "-94.8222, -56.8134, -76.3534, 0.28", "-95.8293, -57.1084, -76.8267, 0.55", "-99.4698, -57.836, -78.1181, 0.28", "-101.254, -58.0555, -78.7432, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "5.0178, -37.1141, 1.94128, 0.55", "4.26295, -39.7546, 2.57066, 0.55", "4.04913, -40.8834, 2.69193, 0.83", "3.86388, -42.3093, 2.78594, 0.28", "3.77329, -43.1763, 2.8245, 0.55", "3.68699, -44.2688, 2.86527, 0.55", "3.58697, -45.5732, 2.91368, 0.55", "3.54677, -47.1436, 2.87855, 0.55", "3.47471, -48.7438, 2.89152, 0.55", "3.43714, -49.6343, 2.89962, 0.28", "3.43864, -50.3144, 2.87622, 0.55", "3.50393, -51.3276, 2.76697, 0.28", "3.62715, -52.1957, 2.66039, 0.55", "3.88619, -53.7262, 2.5167, 0.55", "4.26104, -55.4494, 2.30107, 0.55", "4.84171, -57.9328, 2.10118, 0.55", "5.43297, -60.2248, 1.94079, 0.55", "6.18677, -62.9199, 1.85186, 0.28", "6.65566, -64.5341, 1.88046, 0.83", "7.58605, -67.7735, 2.17762, 0.28", "8.20156, -70.0346, 2.5721, 0.83", "8.52639, -71.5303, 2.97847, 0.28", "8.7492, -72.9533, 3.36729, 0.55", "8.92542, -74.5248, 3.70695, 0.28", "9.07117, -76.0037, 3.92839, 0.55", "9.16335, -77.3301, 4.11005, 0.28", "9.24203, -78.4776, 4.19097, 0.55", "9.48137, -82.2561, 4.36632, 0.28", "9.56351, -83.3465, 4.34599, 0.83", "9.7084, -85.2946, 4.26631, 0.83", "9.87261, -87.2367, 4.17306, 0.28", "9.93791, -87.9945, 4.16279, 0.55", "10.1054, -89.5056, 4.17682, 0.28", "10.2034, -90.2983, 4.19794, 0.55", "10.3179, -91.6703, 4.29553, 0.28", "10.3109, -92.3514, 4.35877, 0.55", "10.1569, -93.8439, 4.49539, 0.28", "9.99051, -94.7091, 4.5998, 0.83", "9.57831, -96.1065, 4.90599, 0.28", "8.8196, -98.0998, 5.60739, 0.55", "8.31007, -99.2838, 6.09347, 0.28", "8.13216, -99.7068, 6.25828, 0.55", "7.78221, -100.55, 6.56365, 0.55", "6.61172, -103.558, 7.51517, 0.28", "5.9615, -105.291, 8.09867, 0.28", "5.80974, -105.745, 8.22779, 0.55", "5.01664, -108.082, 8.93151, 0.28", "4.68994, -109.079, 9.19206, 0.55", "4.192, -110.718, 9.52283, 0.28", "3.44246, -113.43, 9.85423, 0.28", "3.06879, -114.945, 10.0201, 1.11", "2.4337, -117.485, 10.3574, 0.28", "2.11857, -118.758, 10.5605, 0.55", "1.91447, -119.783, 10.6954, 0.28", "1.82928, -120.421, 10.7264, 0.55", "1.61388, -122.755, 10.5999, 0.28", "1.52916, -123.824, 10.5235, 0.55", "1.41685, -125.21, 10.4464, 0.28", "1.27031, -126.491, 10.42, 0.28", "1.06868, -128.054, 10.3814, 0.83", "0.793079, -130.254, 10.3449, 0.83", "0.426579, -133.475, 10.3301, 0.28", "0.259976, -134.789, 10.4156, 0.55", "0.036811, -136.617, 10.6398, 0.28", "-0.099836, -137.679, 10.8374, 0.55", "-0.39595, -140.707, 11.5312, 0.28", "-0.496936, -142.724, 12.0137, 0.83", "-0.494209, -145.488, 12.6808, 0.28", "-0.420887, -147.469, 13.1426, 0.28", "-0.359455, -148.428, 13.3605, 0.55", "-0.035295, -152.287, 14.1221, 0.28", "0.258544, -154.83, 14.4336, 0.28", "0.473502, -156.334, 14.5139, 0.55", "0.80531, -158.386, 14.5022, 0.28", "0.970245, -159.442, 14.4681, 0.55", "1.3137, -161.835, 14.3926, 0.28", "1.53052, -163.502, 14.3297, 0.55", "2.12424, -168.22, 14.1002, 0.28", "2.29892, -169.714, 14.0134, 0.55", "2.63375, -172.093, 13.8937, 0.28", "2.876, -173.76, 13.879, 0.55", "2.24979, -181.474, 14.4721, 0.55", "1.00829, -189.134, 14.2389, 0.55", "0.825254, -196.868, 14.8734, 0.55", "0.093876, -204.56, 14.1256, 0.55", "-0.594442, -212.281, 13.7114, 0.55", "-0.779311, -219.97, 12.6622, 0.55", "-1.80602, -227.663, 12.8085, 0.55", "-2.80977, -235.161, 14.5518, 0.55", "-4.30699, -242.394, 16.9385, 0.55", "-4.13867, -249.838, 19.1349, 0.55", "-4.79736, -256.995, 22.0685, 0.55", "-5.97163, -264.357, 24.2324, 0.55", "-7.42345, -271.152, 27.6933, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "5.0178, -37.1141, 1.94128, 0.55", "6.36957, -38.0718, 1.1472, 0.55", "7.47247, -38.9232, 0.515406, 0.55", "10.172, -41.0963, -0.829165, 0.55", "11.977, -42.542, -1.59859, 0.28", "12.9117, -43.2632, -1.95658, 0.55", "14.7967, -44.6904, -2.60543, 0.28", "15.8476, -45.5617, -2.95429, 0.28", "17.0863, -46.5177, -3.25977, 0.55", "17.88, -47.1223, -3.34565, 0.55", "19.5295, -48.2636, -3.47855, 0.28", "20.1122, -48.6529, -3.53221, 0.55", "22.9613, -50.3913, -3.81962, 0.55", "24.5672, -51.3286, -4.09945, 0.55", "25.4314, -51.8399, -4.31482, 0.55", "27.1533, -52.8482, -4.84693, 0.55", "29.329, -54.0259, -5.61314, 0.55", "31.5213, -55.1682, -6.41817, 0.55", "33.313, -56.0759, -7.08775, 0.28", "34.608, -56.7897, -7.6099, 0.55", "36.6576, -57.8974, -8.509, 0.55", "38.8919, -59.1253, -9.53093, 0.55", "40.5678, -60.0916, -10.3168, 0.28", "40.9991, -60.3527, -10.5106, 0.55", "42.6007, -61.2274, -11.1895, 0.28", "44.6489, -62.2918, -12.0086, 0.28", "45.8187, -62.8986, -12.4859, 0.55", "46.8165, -63.4072, -12.9506, 0.55", "47.7483, -63.8169, -13.4266, 0.28", "49.6624, -64.65, -14.5665, 0.55", "50.7678, -65.1338, -15.2521, 0.28", "51.9005, -65.6304, -16.0662, 0.55", "53.6538, -66.4354, -17.4265, 0.28", "55.136, -67.1785, -18.7882, 0.55", "57.0684, -68.275, -20.7065, 0.28", "57.8448, -68.7518, -21.5222, 0.55", "60.2555, -70.1561, -24.19, 0.28", "61.3299, -70.7812, -25.4432, 0.55", "64.8175, -72.8217, -29.9096, 0.28", "65.2891, -73.1163, -30.5801, 0.28", "65.7849, -73.4242, -31.2955, 0.55", "67.8257, -74.7095, -34.2731, 0.28", "68.2244, -74.9676, -34.8693, 0.55", "70.0394, -76.0774, -37.6421, 0.28", "70.7925, -76.5651, -38.8384, 0.55", "71.9016, -77.2732, -40.69, 0.28", "72.5657, -77.7168, -41.8213, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "41.9679, -68.7697, 34.1678, 0.28", "42.0884, -73.136, 34.0191, 0.28", "42.1143, -74.8801, 34.0285, 0.55", "42.3411, -79.232, 34.4725, 0.28", "42.5386, -81.076, 34.6869, 0.55", "42.8177, -84.7417, 35.2857, 0.28", "42.9522, -86.5082, 35.5743, 0.28", "43.1194, -88.9243, 35.9071, 0.28", "43.4271, -93.1046, 36.7942, 0.28", "43.6757, -96.4551, 37.8749, 0.28", "44.1451, -100.275, 39.295, 0.55", "45.9739, -110.472, 42.3707, 0.55", "46.2904, -120.57, 46.2018, 0.55", "46.7286, -130.463, 50.5265, 0.55", "46.9594, -139.234, 56.8345, 0.55", "47.8953, -148.071, 62.9809, 0.55", "47.5627, -156.782, 69.3661, 0.55", "47.1879, -166.676, 73.696, 0.55", "45.4466, -175.941, 78.976, 0.55", "42.7201, -184.926, 84.325, 0.55", "41.8921, -193.66, 90.6332, 0.55", "41.1471, -202.212, 97.1959, 0.55", "39.455, -210.297, 104.161, 0.55", "35.4677, -217.168, 111.487, 0.55", "30.406, -222.618, 119.325, 0.55", "24.615, -229.169, 125.674, 0.55", "17.7144, -233.289, 132.897, 0.55", "12.2318, -238.341, 140.719, 0.55", "7.79281, -243.18, 149.301, 0.55", "2.28804, -247.264, 157.654, 0.55", "-1.90763, -251.062, 166.859, 0.55", "-5.36593, -255.069, 176.28, 0.55", "-9.10211, -257.187, 186.195, 0.55", "-14.2188, -257.692, 195.7, 0.55", "-18.6056, -256.227, 205.465, 0.55", "-21.388, -254.981, 215.832, 0.55", "-24.487, -252.535, 225.891, 0.55", "-27.477, -251.344, 236.206, 0.55", "-28.7495, -251.446, 246.936, 0.55", "-30.2962, -251.094, 257.625, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "41.9679, -68.7697, 34.1678, 0.28", "44.8949, -68.9511, 35.6071, 0.28", "46.6614, -69.1797, 36.4444, 0.55", "49.1811, -69.634, 37.5293, 0.28", "50.9209, -70.0939, 38.1853, 0.55", "51.5859, -70.2973, 38.4002, 0.55", "54.4083, -71.2506, 39.2443, 0.28", "55.6245, -71.7599, 39.5347, 0.28", "56.7121, -72.296, 39.7633, 0.55", "58.6838, -73.423, 40.0951, 0.28", "61.8362, -75.2224, 40.5439, 0.28", "62.4735, -75.5804, 40.6133, 0.55", "73.2805, -79.7629, 42.772, 0.55", "84.174, -84.22, 43.4125, 0.55", "93.989, -90.7376, 43.7742, 0.55", "105.065, -94.4858, 45.2633, 0.55", "116.153, -98.4319, 45.9124, 0.55", "127.191, -102.498, 45.1581, 0.55", "137.725, -107.686, 46.1914, 0.55", "147.262, -113.78, 49.4872, 0.55", "156.456, -120.89, 51.4519, 0.55", "165.791, -126.754, 55.6258, 0.55", "175.158, -133.564, 57.824, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-16.1875, 64.7258, -6.4304, 0.55", "-16.1886, 65.9495, -6.66722, 0.55", "-16.1988, 67.4077, -6.97414, 0.55", "-16.2634, 68.7662, -7.39176, 0.55", "-16.2695, 68.8542, -7.42193, 0.55", "-16.3606, 69.806, -7.80932, 0.83", "-16.4762, 70.8805, -8.25953, 0.55", "-16.5662, 71.4492, -8.56529, 0.83", "-16.7593, 72.666, -9.31492, 0.55", "-16.8176, 73.0307, -9.54811, 0.83", "-16.9915, 74.1256, -10.2053, 0.55", "-17.0715, 74.8185, -10.5867, 0.83", "-17.173, 76.3264, -11.2896, 0.55", "-17.2096, 77.4974, -11.7392, 0.55", "-17.2184, 78.4925, -12.0245, 0.55", "-17.2316, 79.1309, -12.1989, 0.83", "-17.2697, 80.7311, -12.5287, 0.28", "-17.3052, 81.353, -12.6709, 0.55", "-17.4072, 82.3869, -12.923, 0.28", "-17.5014, 83.0383, -13.1464, 0.55", "-17.7572, 84.3522, -13.7178, 0.28", "-17.9309, 85.0684, -14.0846, 0.55", "-18.4181, 86.5243, -14.9468, 0.28", "-18.7158, 87.3583, -15.4668, 0.55", "-19.0759, 88.3049, -16.069, 0.28", "-19.309, 88.8838, -16.4212, 0.55", "-19.4556, 89.2444, -16.6102, 0.28", "-19.7667, 90.0258, -17.0095, 0.55", "-20.1464, 91.0864, -17.408, 0.28", "-20.3075, 91.5816, -17.5633, 0.55", "-20.4196, 91.9892, -17.6696, 0.28", "-20.5271, 92.4926, -17.7954, 0.83", "-20.7875, 94.0542, -18.024, 0.28", "-20.8607, 94.6262, -18.044, 0.55", "-20.9196, 95.177, -18.0302, 0.28", "-21.0035, 96.2005, -17.9929, 0.55", "-21.0388, 96.6007, -17.9559, 0.83", "-21.1712, 97.9809, -17.9038, 0.28", "-21.2654, 98.8657, -17.8806, 0.55", "-21.339, 99.5892, -17.8999, 0.28", "-21.4098, 100.475, -17.9529, 0.55", "-21.4884, 102.29, -18.1034, 0.28", "-21.4704, 104.188, -18.2617, 0.55", "-21.368, 105.964, -18.4225, 0.28", "-21.2472, 107.14, -18.4938, 0.55", "-21.1441, 107.945, -18.498, 0.55", "-21.0201, 108.745, -18.4869, 0.55", "-20.7913, 109.978, -18.4549, 0.28", "-20.6903, 110.498, -18.4443, 0.55", "-20.5226, 111.29, -18.4871, 0.28", "-20.3796, 112.059, -18.5971, 0.55", "-20.2023, 113.253, -18.8368, 0.28", "-20.0786, 114.376, -19.1677, 0.55", "-19.8953, 116.521, -19.9139, 0.28", "-19.865, 116.91, -20.0508, 0.83", "-19.7539, 118.565, -20.6343, 0.28", "-19.6991, 119.441, -20.9554, 0.83", "-19.5884, 121.483, -21.6707, 0.28", "-19.5412, 122.468, -21.9847, 0.55", "-19.5161, 123.343, -22.2364, 0.28", "-19.5009, 123.852, -22.3815, 0.55", "-19.4691, 124.595, -22.5622, 0.28", "-19.4135, 125.467, -22.7688, 0.55", "-19.2863, 127.492, -23.17, 0.55", "-19.212, 128.797, -23.4345, 0.28", "-19.1551, 129.704, -23.6287, 0.55", "-19.0764, 130.618, -23.8076, 0.28", "-18.9624, 131.704, -23.9833, 0.55", "-18.7881, 133.091, -24.2164, 0.55", "-18.6838, 133.714, -24.317, 0.28", "-18.5382, 134.467, -24.4177, 0.55", "-18.3546, 135.414, -24.5452, 0.28", "-18.1795, 136.296, -24.6666, 0.55", "-17.9993, 137.204, -24.8046, 0.28", "-17.6869, 138.846, -25.0537, 0.55", "-17.2091, 141.673, -25.4514, 0.28", "-17.0945, 142.435, -25.5624, 0.55", "-16.9209, 143.627, -25.7479, 0.28", "-16.7833, 144.604, -25.8988, 0.55", "-16.6031, 145.894, -26.0511, 0.28", "-16.519, 146.59, -26.1299, 0.55", "-16.3697, 147.588, -26.2489, 0.28", "-16.2318, 148.405, -26.3311, 0.55", "-16.1201, 149.043, -26.4048, 0.55", "-15.7186, 150.86, -26.5858, 0.28", "-15.4813, 151.83, -26.7316, 0.55", "-15.1156, 153.27, -26.9478, 0.55", "-14.8593, 154.365, -27.1418, 0.55", "-14.4009, 156.369, -27.5451, 0.28", "-13.9816, 158.124, -27.9371, 0.55", "-13.5262, 159.959, -28.3719, 0.28", "-13.1557, 161.386, -28.6851, 0.55", "-12.8155, 162.772, -28.9708, 0.28", "-12.659, 163.395, -29.097, 0.55", "-12.3182, 164.722, -29.2794, 0.28", "-12.0873, 165.68, -29.3231, 0.55", "-11.9659, 166.065, -29.2911, 0.28", "-11.6468, 166.911, -29.226, 0.55", "-11.2939, 167.739, -29.1554, 0.28", "-11.0545, 168.291, -29.0706, 0.55", "-10.4381, 169.629, -28.7254, 0.55", "-9.92077, 170.755, -28.4069, 0.55", "-9.41964, 171.856, -28.0838, 0.28", "-9.02494, 172.752, -27.8218, 0.55", "-8.14324, 174.95, -27.1887, 0.28", "-7.82354, 175.833, -26.9606, 0.55", "-7.4512, 176.921, -26.8054, 0.28", "-7.1878, 177.811, -26.7532, 0.55", "-6.8931, 178.8, -26.756, 0.28", "-6.67021, 179.537, -26.8309, 0.28", "-6.36995, 180.526, -27.0486, 0.55", "-5.70422, 182.625, -27.5519, 0.28", "-5.29981, 183.821, -27.7971, 0.55", "-4.90036, 184.969, -28.0115, 0.28", "-4.52007, 186.07, -28.2147, 0.55", "-4.24097, 186.935, -28.3451, 0.28", "-3.92797, 188.031, -28.4585, 0.55", "-3.6226, 189.415, -28.5117, 0.28", "-3.57951, 189.67, -28.5228, 0.55", "-3.31968, 192.005, -28.6234, 0.28", "-3.1967, 193.942, -28.6795, 0.28", "-3.17996, 194.966, -28.7068, 0.55", "-3.22472, 196.469, -28.7537, 0.28", "-3.25677, 197.023, -28.7659, 0.55", "-3.34445, 198.173, -28.787, 0.28", "-3.42151, 198.866, -28.7528, 0.55", "-3.53922, 199.838, -28.6854, 0.28", "-3.63287, 200.803, -28.5817, 0.55", "-3.71152, 201.997, -28.445, 0.28", "-3.76978, 203.191, -28.2859, 0.55", "-3.8334, 204.561, -28.0768, 0.28", "-3.86505, 205.453, -27.9168, 0.55", "-3.90913, 206.488, -27.674, 0.28", "-3.97552, 207.351, -27.4837, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-16.1875, 64.7258, -6.4304, 0.28", "-17.2532, 66.6869, -6.2367, 0.28", "-18.2909, 68.5965, -6.04809, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-18.2909, 68.5965, -6.04809, 0.28", "-18.4763, 70.8412, -6.41409, 0.28", "-18.6018, 72.094, -6.58279, 0.83", "-18.7899, 74.1568, -6.84969, 0.28", "-18.8944, 75.2105, -6.97214, 0.83", "-19.1385, 77.3935, -7.20619, 0.28", "-19.335, 78.9063, -7.23361, 0.83", "-19.574, 80.6196, -7.21253, 0.28", "-19.7374, 81.5856, -7.11618, 0.83", "-20.0146, 83.074, -6.81877, 0.83", "-20.3221, 84.7649, -6.39356, 0.83", "-20.9464, 87.8217, -5.20303, 0.28", "-21.0285, 88.2535, -5.01247, 0.83", "-21.2698, 89.6114, -4.41157, 0.28", "-21.5182, 90.9727, -3.81681, 0.55", "-21.9343, 93.2737, -2.82138, 0.55", "-22.5699, 96.6459, -1.40062, 0.28", "-22.8484, 98.1996, -0.861371, 0.55", "-23.0757, 99.7052, -0.610908, 0.28", "-23.2825, 101.318, -0.668165, 0.28", "-23.4075, 102.377, -0.906506, 0.55", "-23.6086, 103.949, -1.5132, 0.28", "-23.803, 105.368, -2.20845, 0.28", "-24.8694, 111.006, -4.92183, 0.28", "-25.0872, 111.966, -5.37907, 0.55", "-25.5248, 113.693, -6.21776, 0.28", "-25.8698, 115.019, -6.82654, 0.83", "-26.468, 117.207, -7.68568, 0.28", "-27.0004, 119.222, -8.34985, 0.55", "-27.5802, 121.611, -8.94115, 0.55", "-28.1568, 124.517, -9.73401, 0.28", "-28.4604, 126.375, -10.2513, 0.28", "-28.8307, 129.769, -11.2092, 0.55", "-29.0786, 133.07, -12.1133, 0.28", "-29.1203, 134.528, -12.5165, 0.55", "-29.1188, 136.347, -12.9702, 0.28", "-29.061, 138.509, -13.5098, 0.55", "-28.9242, 142.248, -14.4682, 0.28", "-28.8602, 143.332, -14.7303, 0.55", "-28.7403, 145.206, -15.109, 0.28", "-28.6275, 146.91, -15.4275, 0.83", "-28.3233, 150.484, -16.0105, 0.28", "-28.106, 152.32, -16.3712, 0.55", "-27.8932, 154.285, -16.7193, 0.28", "-27.7544, 155.611, -16.9573, 0.55", "-27.5902, 157.332, -17.232, 0.55", "-27.3029, 160.465, -17.7198, 0.55", "-27.109, 164.126, -18.1515, 0.28", "-27.0174, 165.805, -18.392, 0.55", "-26.9862, 166.899, -18.5531, 0.28", "-26.9232, 168.616, -18.8935, 0.83", "-26.8278, 170.409, -19.2503, 0.28", "-26.7636, 172.249, -19.6304, 0.55", "-26.7118, 174.416, -20.0388, 0.55", "-26.6171, 176.355, -20.5808, 0.55", "-26.4906, 179.523, -21.5725, 0.28", "-26.4655, 180.793, -21.9884, 0.55", "-26.4504, 183.408, -22.8188, 0.28", "-26.5025, 185.04, -23.2817, 0.55", "-26.8599, 188.525, -24.163, 0.28", "-27.0427, 189.866, -24.5136, 0.55", "-27.5071, 192.124, -25.0495, 0.55", "-27.743, 193.137, -25.3576, 0.55", "-28.2019, 195.022, -25.9786, 0.55", "-28.7249, 197.003, -26.686, 0.28", "-29.1273, 198.395, -27.192, 0.55", "-29.5692, 199.957, -27.852, 0.28", "-30.4015, 202.728, -29.1835, 0.55", "-30.8591, 204.296, -30.0093, 0.28", "-31.0496, 205.034, -30.405, 0.55", "-31.4595, 206.512, -31.0212, 0.28", "-31.6226, 207.154, -31.2385, 0.55", "-31.8952, 208.534, -31.6291, 0.28", "-32.3191, 211.096, -32.1453, 0.55", "-32.5222, 213.275, -32.59, 0.28", "-32.6726, 216.069, -33.0843, 0.55", "-32.7455, 218.38, -33.3814, 0.55", "-32.7516, 220.796, -33.4957, 0.28", "-32.7338, 221.644, -33.468, 0.55", "-32.6897, 225.481, -33.0302, 0.28", "-32.6618, 226.843, -32.9132, 0.28", "-32.6481, 228.543, -32.7428, 0.55", "-32.7672, 232.267, -32.053, 0.28", "-32.8211, 233.722, -31.7622, 0.83", "-32.9028, 236.128, -31.2517, 0.55", "-33.0656, 240.312, -30.2658, 0.55", "-33.1523, 243.716, -29.5386, 0.28", "-33.1852, 245.995, -29.0317, 0.55", "-33.202, 248.6, -28.4486, 0.55", "-33.208, 250.106, -27.9914, 0.28", "-33.2104, 251.357, -27.4815, 0.55", "-33.234, 252.562, -26.8177, 0.55", "-33.2599, 254.032, -26.0426, 0.28", "-33.3542, 255.564, -25.2996, 0.55", "-33.624, 258.266, -23.9746, 0.28", "-33.7754, 259.658, -23.3184, 0.55", "-34.0067, 261.491, -22.4475, 0.28", "-34.1979, 262.979, -21.6862, 0.55", "-34.6401, 266.41, -19.9644, 0.28", "-34.7854, 267.588, -19.378, 0.55", "-35.1483, 270.725, -17.9019, 0.28", "-35.3697, 272.687, -17.0077, 0.55", "-35.8287, 276.903, -15.0106, 0.28", "-35.985, 278.428, -14.2455, 0.28", "-36.1208, 279.985, -13.4874, 0.55", "-36.2622, 282.051, -12.6045, 0.28", "-36.3298, 283.256, -12.1609, 0.55", "-36.4347, 286.051, -11.2856, 0.28", "-36.493, 287.296, -10.9655, 0.55", "-36.5905, 289.415, -10.3373, 0.28", "-36.6307, 291.149, -9.82862, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-18.2909, 68.5965, -6.04809, 0.28", "-21.8411, 70.3195, -5.79772, 0.28", "-24.251, 71.4892, -5.62776, 0.28", "-26.4668, 72.5646, -5.47149, 0.55", "-27.5415, 73.0862, -5.39569, 0.55", "-30.9754, 74.7528, -5.15351, 0.28", "-33.5325, 75.9938, -4.97318, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_24", "dend_23", "dend_16", "dend_13", "dend_0", "dend_39", "dend_30", "dend_26", "dend_25", "dend_20", "dend_17", "dend_15", "dend_14", "dend_10", "dend_1", "dend_47", "dend_40", "dend_32", "dend_31", "dend_28", "dend_27", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_11", "dend_3", "dend_2", "dend_49", "dend_48", "dend_44", "dend_41", "dend_36", "dend_33", "dend_5", "dend_4", "dend_46", "dend_45", "dend_43", "dend_42", "dend_38", "dend_37", "dend_35", "dend_34", "dend_9", "dend_6", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_24", "dend_23", "dend_16", "dend_13", "dend_0", "dend_39", "dend_30", "dend_26", "dend_25", "dend_20", "dend_17", "dend_15", "dend_14", "dend_10", "dend_1", "dend_47", "dend_40", "dend_32", "dend_31", "dend_28", "dend_27", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_11", "dend_3", "dend_2", "dend_49", "dend_48", "dend_44", "dend_41", "dend_36", "dend_33", "dend_5", "dend_4", "dend_46", "dend_45", "dend_43", "dend_42", "dend_38", "dend_37", "dend_35", "dend_34", "dend_9", "dend_6", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_39", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "axon_1", "axon_1", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_NBC_46256e0cca_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_29
create dend_39
public dend_39
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_47, id: dend_47, parent: dend_39
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_24, dend_23, dend_16, dend_13, dend_0, dend_39, dend_30, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_10, dend_1, dend_47, dend_40, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_12, dend_11, dend_3, dend_2, dend_49, dend_48, dend_44, dend_41, dend_36, dend_33, dend_5, dend_4, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_35, dend_34, dend_9, dend_6, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_29, dend_24, dend_23, dend_16, dend_13, dend_0, dend_39, dend_30, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_10, dend_1, dend_47, dend_40, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_12, dend_11, dend_3, dend_2, dend_49, dend_48, dend_44, dend_41, dend_36, dend_33, dend_5, dend_4, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_35, dend_34, dend_9, dend_6, dend_8, dend_7]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_24
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, axon_1, axon_1, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.49999884142687223)
    connect dend_24(0), soma_0(0.49999884142687223)
    connect dend_23(0), soma_0(0.49999884142687223)
    connect dend_16(0), soma_0(0.49999884142687223)
    connect dend_13(0), soma_0(0.49999884142687223)
    connect dend_0(0), soma_0(0.49999884142687223)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_47(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.75872, -10.4532, 0.754391, 3.47327 ) }
    soma_0 { pt3dadd( -3.51208, -9.3518, 0.693156, 4.11268 ) }
    soma_0 { pt3dadd( -3.26545, -8.25037, 0.631922, 5.19122 ) }
    soma_0 { pt3dadd( -3.01882, -7.14893, 0.570687, 5.79177 ) }
    soma_0 { pt3dadd( -2.77218, -6.04749, 0.509453, 6.43344 ) }
    soma_0 { pt3dadd( -2.52555, -4.94606, 0.448218, 7.33547 ) }
    soma_0 { pt3dadd( -2.27891, -3.84462, 0.386984, 7.89448 ) }
    soma_0 { pt3dadd( -2.03228, -2.74319, 0.325749, 8.07665 ) }
    soma_0 { pt3dadd( -1.78564, -1.64175, 0.264515, 8.19647 ) }
    soma_0 { pt3dadd( -1.53901, -0.540314, 0.20328, 8.39724 ) }
    soma_0 { pt3dadd( -1.29237, 0.561122, 0.142046, 8.72156 ) }
    soma_0 { pt3dadd( -1.04574, 1.66256, 0.0808113, 9.67228 ) }
    soma_0 { pt3dadd( -0.799104, 2.76399, 0.0195768, 10.9168 ) }
    soma_0 { pt3dadd( -0.552469, 3.86543, -0.0416577, 10.7105 ) }
    soma_0 { pt3dadd( -0.305834, 4.96687, -0.102892, 10.3432 ) }
    soma_0 { pt3dadd( -0.0591998, 6.0683, -0.164127, 10.3014 ) }
    soma_0 { pt3dadd( 0.187435, 7.16974, -0.225361, 9.6708 ) }
    soma_0 { pt3dadd( 0.43407, 8.27117, -0.286596, 8.78455 ) }
    soma_0 { pt3dadd( 0.680704, 9.37261, -0.34783, 7.41865 ) }
    soma_0 { pt3dadd( 0.927339, 10.474, -0.409065, 4.25873 ) }
    soma_0 { pt3dadd( 1.17397, 11.5755, -0.470299, 2.57124 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -3.92645, -10.9996, 4.08428, 2.77 ) }
    dend_29 { pt3dadd( -3.8972, -11.8083, 4.08428, 3.05 ) }
    dend_29 { pt3dadd( -3.78682, -14.859, 4.08428, 3.05 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 24/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -5.80645, -9.52959, 7.55429, 0.55 ) }
    dend_24 { pt3dadd( -6.5407, -10.5316, 9.6372, 0.55 ) }
    dend_24 { pt3dadd( -7.7108, -12.1285, 12.9566, 1.11 ) }
    dend_24 { pt3dadd( -11.1423, -16.8114, 22.691, 0.55 ) }
    dend_24 { pt3dadd( -12.3023, -18.3945, 25.9818, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 29/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.976448, 9.22041, -7.52571, 0.83 ) }
    dend_23 { pt3dadd( -0.165314, 10.979, -9.14372, 0.83 ) }
    dend_23 { pt3dadd( 0.63264, 13.288, -11.8497, 0.55 ) }
    dend_23 { pt3dadd( 1.04197, 14.3439, -13.0621, 0.83 ) }
    dend_23 { pt3dadd( 1.40831, 15.3963, -14.3267, 0.55 ) }
    dend_23 { pt3dadd( 1.73685, 16.4521, -15.6703, 0.55 ) }
    dend_23 { pt3dadd( 2.22869, 18.1683, -17.7526, 0.83 ) }
    dend_23 { pt3dadd( 2.97232, 21.245, -21.6349, 0.55 ) }
    dend_23 { pt3dadd( 3.36204, 22.9682, -23.7195, 0.83 ) }
    dend_23 { pt3dadd( 4.3351, 26.767, -28.2961, 0.55 ) }
    dend_23 { pt3dadd( 4.92536, 28.7227, -30.6101, 0.55 ) }
    dend_23 { pt3dadd( 5.45449, 30.1652, -32.3188, 0.28 ) }
    dend_23 { pt3dadd( 6.41006, 32.4849, -34.8641, 0.83 ) }
    dend_23 { pt3dadd( 7.18554, 34.3325, -36.6121, 0.28 ) }
    dend_23 { pt3dadd( 8.08655, 36.6255, -38.5008, 0.83 ) }
    dend_23 { pt3dadd( 8.49677, 37.6864, -39.1829, 0.28 ) }
    dend_23 { pt3dadd( 9.54257, 40.4825, -40.6839, 0.55 ) }
    dend_23 { pt3dadd( 10.1187, 42.2791, -41.4911, 0.55 ) }
    dend_23 { pt3dadd( 10.8352, 45.0568, -42.3987, 0.55 ) }
    dend_23 { pt3dadd( 11.7433, 49.8057, -43.7698, 0.83 ) }
    dend_23 { pt3dadd( 12.0057, 51.9047, -44.4108, 0.55 ) }
    dend_23 { pt3dadd( 12.2306, 54.3008, -45.179, 0.83 ) }
    dend_23 { pt3dadd( 12.4724, 57.9703, -46.4345, 0.83 ) }
    dend_23 { pt3dadd( 12.6017, 60.4303, -47.4249, 0.28 ) }
    dend_23 { pt3dadd( 12.7573, 63.8624, -49.184, 0.83 ) }
    dend_23 { pt3dadd( 12.9562, 67.6877, -51.4123, 0.55 ) }
    dend_23 { pt3dadd( 13.0744, 69.5976, -52.5896, 0.55 ) }
    dend_23 { pt3dadd( 13.2746, 72.8235, -54.7511, 0.55 ) }
    dend_23 { pt3dadd( 13.6076, 76.3029, -57.2557, 0.55 ) }
    dend_23 { pt3dadd( 14.0296, 79.9651, -59.7912, 0.55 ) }
    dend_23 { pt3dadd( 14.3546, 82.2294, -61.2576, 0.28 ) }
    dend_23 { pt3dadd( 14.5502, 83.4962, -62.0408, 0.55 ) }
    dend_23 { pt3dadd( 15.2539, 88.1794, -64.9142, 0.28 ) }
    dend_23 { pt3dadd( 15.571, 90.2303, -66.151, 0.55 ) }
    dend_23 { pt3dadd( 15.8579, 92.1518, -67.2597, 0.28 ) }
    dend_23 { pt3dadd( 16.2998, 94.9092, -68.8522, 0.55 ) }
    dend_23 { pt3dadd( 16.9807, 98.8077, -71.2181, 0.28 ) }
    dend_23 { pt3dadd( 17.3813, 100.951, -72.4883, 0.55 ) }
    dend_23 { pt3dadd( 18.2833, 105.199, -74.9303, 0.28 ) }
    dend_23 { pt3dadd( 18.6348, 106.7, -75.7949, 0.55 ) }
    dend_23 { pt3dadd( 19.4787, 110.058, -77.8024, 0.28 ) }
    dend_23 { pt3dadd( 19.8545, 111.504, -78.6432, 0.28 ) }
    dend_23 { pt3dadd( 20.2332, 112.895, -79.4505, 0.55 ) }
    dend_23 { pt3dadd( 20.9628, 115.779, -81.2735, 0.28 ) }
    dend_23 { pt3dadd( 21.3082, 117.137, -82.1356, 0.55 ) }
    dend_23 { pt3dadd( 21.8178, 119.328, -83.5521, 0.55 ) }
    dend_23 { pt3dadd( 22.4624, 122.567, -85.5372, 0.28 ) }
    dend_23 { pt3dadd( 22.5647, 123.135, -85.8719, 0.55 ) }
    dend_23 { pt3dadd( 23.186, 126.525, -87.6482, 0.28 ) }
    dend_23 { pt3dadd( 23.3406, 127.482, -88.0778, 0.55 ) }
    dend_23 { pt3dadd( 23.6198, 129.188, -88.8159, 0.28 ) }
    dend_23 { pt3dadd( 23.8765, 130.577, -89.3491, 0.55 ) }
    dend_23 { pt3dadd( 24.7539, 134.613, -90.7419, 0.28 ) }
    dend_23 { pt3dadd( 25.5375, 137.718, -91.7409, 0.28 ) }
    dend_23 { pt3dadd( 25.9568, 139.222, -92.1573, 0.55 ) }
    dend_23 { pt3dadd( 26.7801, 141.981, -92.9063, 0.28 ) }
    dend_23 { pt3dadd( 27.06, 142.833, -93.1516, 0.55 ) }
    dend_23 { pt3dadd( 27.9496, 145.347, -93.886, 0.28 ) }
    dend_23 { pt3dadd( 28.7064, 147.384, -94.4708, 0.55 ) }
    dend_23 { pt3dadd( 29.5767, 149.564, -95.0796, 0.55 ) }
    dend_23 { pt3dadd( 31.3797, 153.793, -96.1418, 0.28 ) }
    dend_23 { pt3dadd( 32.0049, 155.238, -96.469, 0.55 ) }
    dend_23 { pt3dadd( 32.6646, 156.727, -96.7883, 0.28 ) }
    dend_23 { pt3dadd( 33.3963, 158.335, -97.1568, 0.55 ) }
    dend_23 { pt3dadd( 34.213, 159.94, -97.7163, 0.28 ) }
    dend_23 { pt3dadd( 34.6963, 160.8, -98.1045, 0.55 ) }
    dend_23 { pt3dadd( 36.0101, 162.938, -99.2063, 0.28 ) }
    dend_23 { pt3dadd( 37.0282, 164.606, -100.088, 0.28 ) }
    dend_23 { pt3dadd( 37.9618, 166.16, -100.939, 0.55 ) }
    dend_23 { pt3dadd( 40.0288, 169.665, -102.815, 0.28 ) }
    dend_23 { pt3dadd( 40.6731, 170.816, -103.504, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( 41.1858, 171.699, -104.053, 0.28 ) }
    dend_23 { pt3dadd( 41.8686, 172.855, -104.743, 0.55 ) }
    dend_23 { pt3dadd( 42.5425, 173.976, -105.466, 0.28 ) }
    dend_23 { pt3dadd( 43.1594, 174.958, -106.085, 0.55 ) }
    dend_23 { pt3dadd( 46.0422, 179.415, -108.94, 0.28 ) }
    dend_23 { pt3dadd( 46.9813, 180.766, -109.847, 0.28 ) }
    dend_23 { pt3dadd( 47.6998, 181.706, -110.559, 0.55 ) }
    dend_23 { pt3dadd( 49.8669, 184.278, -112.68, 0.28 ) }
    dend_23 { pt3dadd( 50.4436, 184.9, -113.323, 0.55 ) }
    dend_23 { pt3dadd( 52.9833, 187.269, -116.088, 0.28 ) }
    dend_23 { pt3dadd( 54.4077, 188.432, -117.49, 0.55 ) }
    dend_23 { pt3dadd( 56.603, 190.13, -119.606, 0.28 ) }
    dend_23 { pt3dadd( 57.0439, 190.448, -119.992, 0.55 ) }
    dend_23 { pt3dadd( 61.7326, 193.708, -123.447, 0.28 ) }
    dend_23 { pt3dadd( 63.8683, 195.182, -125.101, 0.55 ) }
    dend_23 { pt3dadd( 65.2439, 196.08, -126.152, 0.28 ) }
    dend_23 { pt3dadd( 65.6492, 196.36, -126.534, 0.55 ) }
    dend_23 { pt3dadd( 66.7976, 197.225, -127.62, 0.28 ) }
    dend_23 { pt3dadd( 67.595, 197.878, -128.439, 0.55 ) }
    dend_23 { pt3dadd( 69.9146, 199.998, -131.141, 0.28 ) }
    dend_23 { pt3dadd( 70.4719, 200.528, -131.962, 0.55 ) }
    dend_23 { pt3dadd( 73.3538, 203.223, -136.549, 0.28 ) }
    dend_23 { pt3dadd( 74.2052, 204.028, -137.962, 0.55 ) }
    dend_23 { pt3dadd( 75.5154, 205.289, -140.142, 0.28 ) }
    dend_23 { pt3dadd( 76.2524, 205.968, -141.27, 0.55 ) }
    dend_23 { pt3dadd( 77.4595, 207.098, -142.814, 0.28 ) }
    dend_23 { pt3dadd( 78.0335, 207.652, -143.513, 0.55 ) }
    dend_23 { pt3dadd( 78.9335, 208.511, -144.405, 0.28 ) }
    dend_23 { pt3dadd( 80.0625, 209.569, -145.496, 0.55 ) }
    dend_23 { pt3dadd( 82.1033, 211.501, -147.235, 0.28 ) }
    dend_23 { pt3dadd( 83.1477, 212.494, -147.965, 0.55 ) }
    dend_23 { pt3dadd( 85.0552, 214.311, -149.111, 0.28 ) }
    dend_23 { pt3dadd( 86.2918, 215.525, -149.881, 0.55 ) }
    dend_23 { pt3dadd( 86.6719, 215.922, -150.105, 0.28 ) }
    dend_23 { pt3dadd( 87.4396, 216.786, -150.58, 0.55 ) }
    dend_23 { pt3dadd( 89.9977, 219.923, -152.313, 0.28 ) }
    dend_23 { pt3dadd( 90.7474, 220.865, -152.871, 0.55 ) }
    dend_23 { pt3dadd( 92.8578, 223.635, -154.472, 0.28 ) }
    dend_23 { pt3dadd( 94.5103, 225.807, -155.815, 0.28 ) }
    dend_23 { pt3dadd( 95.4474, 226.983, -156.585, 0.55 ) }
    dend_23 { pt3dadd( 96.9239, 228.806, -157.825, 0.28 ) }
    dend_23 { pt3dadd( 97.4702, 229.442, -158.235, 0.55 ) }
    dend_23 { pt3dadd( 98.693, 230.643, -159.021, 0.28 ) }
    dend_23 { pt3dadd( 99.3479, 231.171, -159.291, 0.55 ) }
    dend_23 { pt3dadd( 100.587, 232.065, -159.736, 0.28 ) }
    dend_23 { pt3dadd( 101.441, 232.666, -159.973, 0.55 ) }
    dend_23 { pt3dadd( 104.034, 234.408, -160.527, 0.28 ) }
    dend_23 { pt3dadd( 106.639, 236.144, -160.898, 0.55 ) }
    dend_23 { pt3dadd( 108.851, 237.665, -161.108, 0.28 ) }
    dend_23 { pt3dadd( 110.065, 238.568, -161.272, 0.55 ) }
    dend_23 { pt3dadd( 112.503, 240.487, -161.73, 0.28 ) }
    dend_23 { pt3dadd( 114.549, 242.152, -162.191, 0.55 ) }
    dend_23 { pt3dadd( 117.366, 244.546, -162.974, 0.28 ) }
    dend_23 { pt3dadd( 118.476, 245.516, -163.3, 0.28 ) }
    dend_23 { pt3dadd( 121.545, 248.12, -164.399, 0.55 ) }
    dend_23 { pt3dadd( 123.673, 249.92, -165.2, 0.28 ) }
    dend_23 { pt3dadd( 124.587, 250.676, -165.593, 0.55 ) }
    dend_23 { pt3dadd( 126.214, 251.947, -166.354, 0.28 ) }
    dend_23 { pt3dadd( 126.917, 252.466, -166.681, 0.55 ) }
    dend_23 { pt3dadd( 128.914, 253.824, -167.326, 0.28 ) }
    dend_23 { pt3dadd( 129.257, 254.06, -167.389, 0.55 ) }
    dend_23 { pt3dadd( 130.971, 255.302, -167.591, 0.28 ) }
    dend_23 { pt3dadd( 132.392, 256.374, -167.682, 0.55 ) }
    dend_23 { pt3dadd( 134.153, 257.782, -167.731, 0.28 ) }
    dend_23 { pt3dadd( 135.249, 258.843, -167.755, 0.55 ) }
    dend_23 { pt3dadd( 137.398, 261.291, -167.891, 0.28 ) }
    dend_23 { pt3dadd( 138.787, 263.05, -167.975, 0.28 ) }
    dend_23 { pt3dadd( 140.936, 266.001, -168.102, 0.28 ) }
    dend_23 { pt3dadd( 141.787, 267.238, -168.139, 0.55 ) }
    dend_23 { pt3dadd( 144.653, 271.45, -168.24, 0.28 ) }
    dend_23 { pt3dadd( 145.908, 273.298, -168.336, 0.55 ) }
    dend_23 { pt3dadd( 147.457, 275.62, -168.449, 0.28 ) }
    dend_23 { pt3dadd( 148.305, 276.823, -168.559, 0.55 ) }
    dend_23 { pt3dadd( 149.243, 277.967, -168.71, 0.28 ) }
    dend_23 { pt3dadd( 149.849, 278.523, -168.802, 0.55 ) }
    dend_23 { pt3dadd( 152.723, 280.161, -169.224, 0.28 ) }
    dend_23 { pt3dadd( 152.723, 280.161, -169.224, 0.55 ) }
    dend_23 { pt3dadd( 155.606, 280.837, -169.695, 0.28 ) }
    dend_23 { pt3dadd( 157.076, 281.032, -169.918, 0.28 ) }
    dend_23 { pt3dadd( 157.665, 281.059, -170.002, 0.55 ) }
    dend_23 { pt3dadd( 159.446, 280.978, -170.198, 0.28 ) }
    dend_23 { pt3dadd( 162.375, 280.575, -170.408, 0.55 ) }
    dend_23 { pt3dadd( 163.812, 280.272, -170.511, 0.28 ) }
    dend_23 { pt3dadd( 165.329, 279.804, -170.621, 0.28 ) }
    dend_23 { pt3dadd( 166.2, 279.476, -170.685, 0.55 ) }
    dend_23 { pt3dadd( 167.902, 278.676, -170.815, 0.28 ) }
    dend_23 { pt3dadd( 168.943, 278.063, -170.898, 0.55 ) }
    dend_23 { pt3dadd( 170.375, 277.127, -171.017, 0.28 ) }
    dend_23 { pt3dadd( 171.454, 276.374, -171.109, 0.28 ) }
    dend_23 { pt3dadd( 172.527, 275.604, -171.2, 0.28 ) }
    dend_23 { pt3dadd( 173.877, 274.626, -171.315, 0.55 ) }
    dend_23 { pt3dadd( 175.071, 273.779, -171.417, 0.28 ) }
    dend_23 { pt3dadd( 176.303, 272.913, -171.522, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 93/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.17354, 4.86041, -1.63572, 0.55 ) }
    dend_16 { pt3dadd( 6.11618, 5.10955, -2.03419, 0.55 ) }
    dend_16 { pt3dadd( 7.60203, 5.50228, -2.66232, 0.55 ) }
    dend_16 { pt3dadd( 9.49942, 6.00379, -3.46441, 0.55 ) }
    dend_16 { pt3dadd( 10.8893, 6.37114, -4.05194, 0.83 ) }
    dend_16 { pt3dadd( 13.6741, 7.10721, -5.22918, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 99/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 0.743549, 10.8604, 3.65428, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_13 { pt3dadd( 1.23664, 14.4027, 5.50808, 0.55 ) }
    dend_13 { pt3dadd( 1.59745, 17.0456, 6.86224, 1.11 ) }
    dend_13 { pt3dadd( 2.18595, 20.9391, 8.75597, 0.55 ) }
    dend_13 { pt3dadd( 2.64401, 23.4191, 9.86388, 0.83 ) }
    dend_13 { pt3dadd( 3.32773, 26.6338, 11.1693, 0.55 ) }
    dend_13 { pt3dadd( 3.68614, 28.2418, 11.7516, 0.55 ) }
    dend_13 { pt3dadd( 4.17188, 30.1681, 12.3532, 0.55 ) }
    dend_13 { pt3dadd( 4.66194, 31.9547, 12.7222, 0.55 ) }
    dend_13 { pt3dadd( 5.52264, 34.593, 12.934, 0.83 ) }
    dend_13 { pt3dadd( 6.55512, 37.5436, 12.9881, 0.55 ) }
    dend_13 { pt3dadd( 7.52833, 40.3247, 12.8435, 0.83 ) }
    dend_13 { pt3dadd( 8.95949, 44.2857, 12.5496, 0.83 ) }
    dend_13 { pt3dadd( 9.81497, 46.6702, 12.3324, 1.11 ) }
    dend_13 { pt3dadd( 11.2625, 50.8, 12.0623, 0.55 ) }
    dend_13 { pt3dadd( 12.3716, 54.05, 11.9246, 1.11 ) }
    dend_13 { pt3dadd( 13.5747, 57.6565, 11.8548, 0.55 ) }
    dend_13 { pt3dadd( 14.2534, 59.7345, 11.9296, 0.55 ) }
    dend_13 { pt3dadd( 15.1713, 62.7848, 12.2121, 0.55 ) }
    dend_13 { pt3dadd( 16.1351, 66.3133, 12.7397, 0.28 ) }
    dend_13 { pt3dadd( 16.7302, 68.8899, 13.194, 0.83 ) }
    dend_13 { pt3dadd( 17.2772, 71.7161, 13.7265, 0.83 ) }
    dend_13 { pt3dadd( 17.9732, 76.347, 14.6666, 0.55 ) }
    dend_13 { pt3dadd( 18.3587, 80.6203, 15.4148, 0.83 ) }
    dend_13 { pt3dadd( 18.5632, 83.6847, 15.9066, 0.55 ) }
    dend_13 { pt3dadd( 18.6779, 86.1518, 16.2226, 0.83 ) }
    dend_13 { pt3dadd( 18.7564, 89.8286, 16.6956, 0.83 ) }
    dend_13 { pt3dadd( 18.7058, 93.3818, 17.1192, 0.55 ) }
    dend_13 { pt3dadd( 18.3065, 98.0067, 17.4941, 0.55 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.84645, 9.66043, 4.00428, 0.83 ) }
    dend_0 { pt3dadd( -5.36869, 12.8577, 4.05429, 0.83 ) }
    dend_0 { pt3dadd( -7.19528, 16.6943, 4.11427, 1.11 ) }
    dend_0 { pt3dadd( -9.10375, 20.7028, 4.17696, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 32/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.17397, 11.5755, -0.470299, 0.55 ) }
    axon_0 { pt3dadd( 4.45162, 26.213, -0.470299, 0.55 ) }
    axon_0 { pt3dadd( 7.72927, 40.8505, -0.470299, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_29 (entry count 35/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -3.78682, -14.859, 4.08428, 1.38 ) }
    dend_39 { pt3dadd( -4.14552, -16.9511, 2.65533, 1.38 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 37/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.78682, -14.859, 4.08428, 0.83 ) }
    dend_30 { pt3dadd( -3.11352, -15.9326, 4.21995, 0.83 ) }
    dend_30 { pt3dadd( -1.98486, -17.7308, 4.44627, 0.83 ) }
    dend_30 { pt3dadd( -0.878164, -19.4209, 4.6321, 0.83 ) }
    dend_30 { pt3dadd( -0.00159402, -20.7596, 4.77929, 1.11 ) }
    dend_30 { pt3dadd( 1.1669, -22.5441, 4.9755, 0.83 ) }
    dend_30 { pt3dadd( 1.85383, -23.5932, 5.09086, 0.55 ) }
    dend_30 { pt3dadd( 2.76755, -24.999, 5.23399, 0.83 ) }
    dend_30 { pt3dadd( 3.85777, -26.7127, 5.38589, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 46/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -12.3023, -18.3945, 25.9818, 0.28 ) }
    dend_26 { pt3dadd( -13.9612, -17.497, 25.9196, 0.28 ) }
    dend_26 { pt3dadd( -14.5464, -17.2045, 25.9055, 0.55 ) }
    dend_26 { pt3dadd( -16.092, -16.4034, 25.67, 0.28 ) }
    dend_26 { pt3dadd( -18.1104, -15.3269, 25.2804, 0.55 ) }
    dend_26 { pt3dadd( -20.9821, -13.8294, 24.7875, 0.28 ) }
    dend_26 { pt3dadd( -21.5809, -13.5142, 24.676, 0.28 ) }
    dend_26 { pt3dadd( -23.0787, -12.7379, 24.3474, 0.55 ) }
    dend_26 { pt3dadd( -26.0973, -11.2011, 23.7492, 0.28 ) }
    dend_26 { pt3dadd( -26.7875, -10.8639, 23.6283, 0.55 ) }
    dend_26 { pt3dadd( -28.6896, -9.84393, 23.4386, 0.28 ) }
    dend_26 { pt3dadd( -30.4497, -8.93802, 23.4313, 0.55 ) }
    dend_26 { pt3dadd( -31.4744, -8.39553, 23.47, 0.55 ) }
    dend_26 { pt3dadd( -33.1206, -7.51976, 23.6701, 0.28 ) }
    dend_26 { pt3dadd( -34.1303, -7.01681, 23.9646, 0.55 ) }
    dend_26 { pt3dadd( -36.2704, -5.93421, 24.6023, 0.28 ) }
    dend_26 { pt3dadd( -37.9631, -4.98826, 25.219, 0.55 ) }
    dend_26 { pt3dadd( -44.8375, -0.413443, 25.2657, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 64/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -12.3023, -18.3945, 25.9818, 0.55 ) }
    dend_25 { pt3dadd( -13.7807, -19.7281, 26.6308, 0.55 ) }
    dend_25 { pt3dadd( -15.3433, -21.1359, 27.6133, 0.55 ) }
    dend_25 { pt3dadd( -17.4476, -22.703, 28.7781, 0.55 ) }
    dend_25 { pt3dadd( -19.7028, -24.0935, 29.9332, 0.55 ) }
    dend_25 { pt3dadd( -22.0141, -25.2881, 31.0421, 0.55 ) }
    dend_25 { pt3dadd( -24.3637, -26.2419, 32.1748, 0.28 ) }
    dend_25 { pt3dadd( -26.3249, -26.6586, 33.1221, 0.55 ) }
    dend_25 { pt3dadd( -29.61, -27.0734, 34.6831, 0.28 ) }
    dend_25 { pt3dadd( -30.9262, -27.1805, 35.256, 0.28 ) }
    dend_25 { pt3dadd( -32.8266, -27.4046, 35.9206, 0.55 ) }
    dend_25 { pt3dadd( -35.5101, -27.9635, 36.5849, 0.28 ) }
    dend_25 { pt3dadd( -37.3699, -28.6587, 36.9277, 0.55 ) }
    dend_25 { pt3dadd( -39.409, -29.8003, 37.2526, 0.55 ) }
    dend_25 { pt3dadd( -40.7404, -30.8017, 37.4283, 0.83 ) }
    dend_25 { pt3dadd( -42.9067, -32.7161, 37.4752, 0.55 ) }
    dend_25 { pt3dadd( -45.1268, -34.9719, 37.2821, 0.55 ) }
    dend_25 { pt3dadd( -46.3304, -36.3509, 37.0835, 0.55 ) }
    dend_25 { pt3dadd( -47.9176, -38.2225, 36.7233, 0.55 ) }
    dend_25 { pt3dadd( -49.2391, -39.8024, 36.3569, 0.55 ) }
    dend_25 { pt3dadd( -51.0011, -42.0663, 35.8215, 0.28 ) }
    dend_25 { pt3dadd( -51.6706, -42.9795, 35.6067, 0.28 ) }
    dend_25 { pt3dadd( -52.2096, -43.6766, 35.4582, 0.83 ) }
    dend_25 { pt3dadd( -54.0085, -46.1173, 35.0504, 0.55 ) }
    dend_25 { pt3dadd( -55.3109, -47.9961, 34.8437, 0.55 ) }
    dend_25 { pt3dadd( -56.6936, -50.1546, 34.8, 0.28 ) }
    dend_25 { pt3dadd( -57.8085, -51.9274, 34.83, 0.55 ) }
    dend_25 { pt3dadd( -58.8387, -53.55, 34.8777, 0.55 ) }
    dend_25 { pt3dadd( -59.6777, -54.9087, 34.9403, 0.28 ) }
    dend_25 { pt3dadd( -60.398, -56.1705, 35.106, 0.55 ) }
    dend_25 { pt3dadd( -61.2151, -57.4321, 35.3117, 0.28 ) }
    dend_25 { pt3dadd( -69.9317, -62.8565, 36.8367, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 96/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 13.6741, 7.10721, -5.22918, 0.55 ) }
    dend_20 { pt3dadd( 16.4563, 9.58083, -6.54612, 0.55 ) }
    dend_20 { pt3dadd( 18.3908, 11.2533, -7.49082, 0.83 ) }
    dend_20 { pt3dadd( 19.8649, 12.5775, -8.22813, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( 21.4968, 14.0435, -9.0444, 0.55 ) }
    dend_20 { pt3dadd( 23.2442, 15.6134, -9.91846, 0.55 ) }
    dend_20 { pt3dadd( 24.9894, 17.1812, -10.7914, 0.55 ) }
    dend_20 { pt3dadd( 28.1575, 19.9068, -12.2695, 0.83 ) }
    dend_20 { pt3dadd( 29.5162, 21.1643, -13.0212, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 5/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 13.6741, 7.10721, -5.22918, 0.55 ) }
    dend_17 { pt3dadd( 14.2831, 5.95639, -5.75928, 0.55 ) }
    dend_17 { pt3dadd( 14.9057, 4.69396, -6.33476, 0.83 ) }
    dend_17 { pt3dadd( 15.3783, 3.67553, -6.78991, 0.55 ) }
    dend_17 { pt3dadd( 15.732, 2.84922, -7.25086, 0.83 ) }
    dend_17 { pt3dadd( 16.3722, 1.2607, -8.22017, 0.28 ) }
    dend_17 { pt3dadd( 16.7421, 0.376979, -8.82886, 0.55 ) }
    dend_17 { pt3dadd( 17.2381, -0.804429, -9.74301, 0.28 ) }
    dend_17 { pt3dadd( 17.3665, -1.12731, -10.0394, 0.55 ) }
    dend_17 { pt3dadd( 17.9524, -2.87496, -11.7753, 0.28 ) }
    dend_17 { pt3dadd( 18.0825, -3.36844, -12.2712, 0.83 ) }
    dend_17 { pt3dadd( 18.5126, -5.32528, -14.2148, 0.28 ) }
    dend_17 { pt3dadd( 18.7147, -6.34082, -15.1994, 0.83 ) }
    dend_17 { pt3dadd( 19.0612, -8.00918, -16.7504, 0.28 ) }
    dend_17 { pt3dadd( 19.3113, -9.43954, -18.059, 0.28 ) }
    dend_17 { pt3dadd( 19.4041, -10.1453, -18.6506, 0.83 ) }
    dend_17 { pt3dadd( 19.4382, -10.8982, -19.3488, 0.55 ) }
    dend_17 { pt3dadd( 19.4047, -12.0925, -20.4711, 0.28 ) }
    dend_17 { pt3dadd( 19.3843, -12.6111, -20.969, 0.83 ) }
    dend_17 { pt3dadd( 19.2901, -15.323, -23.519, 0.55 ) }
    dend_17 { pt3dadd( 19.2521, -16.2718, -24.4839, 0.83 ) }
    dend_17 { pt3dadd( 19.0697, -18.9946, -27.4605, 0.28 ) }
    dend_17 { pt3dadd( 18.9917, -19.5741, -28.1383, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 28/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 18.3065, 98.0067, 17.4941, 0.55 ) }
    dend_15 { pt3dadd( 19.6545, 100.465, 17.4217, 0.55 ) }
    dend_15 { pt3dadd( 20.2356, 101.556, 17.396, 0.83 ) }
    dend_15 { pt3dadd( 20.8537, 102.922, 17.3567, 0.55 ) }
    dend_15 { pt3dadd( 21.5384, 104.653, 17.2161, 0.28 ) }
    dend_15 { pt3dadd( 22.019, 105.937, 17.089, 0.55 ) }
    dend_15 { pt3dadd( 22.4011, 106.989, 16.9485, 0.55 ) }
    dend_15 { pt3dadd( 23.0237, 108.893, 16.6671, 0.55 ) }
    dend_15 { pt3dadd( 23.7027, 110.847, 16.4043, 0.55 ) }
    dend_15 { pt3dadd( 24.4363, 112.929, 16.1758, 0.28 ) }
    dend_15 { pt3dadd( 24.9115, 114.163, 16.0689, 0.55 ) }
    dend_15 { pt3dadd( 25.7672, 116.163, 15.9694, 0.28 ) }
    dend_15 { pt3dadd( 26.8435, 118.448, 15.9007, 0.55 ) }
    dend_15 { pt3dadd( 27.3165, 119.355, 15.9287, 0.55 ) }
    dend_15 { pt3dadd( 27.9805, 120.534, 16.0441, 0.55 ) }
    dend_15 { pt3dadd( 29.1255, 122.666, 16.3739, 0.55 ) }
    dend_15 { pt3dadd( 29.8002, 124.18, 16.6085, 0.28 ) }
    dend_15 { pt3dadd( 30.1083, 125.079, 16.7274, 0.55 ) }
    dend_15 { pt3dadd( 30.588, 127.044, 16.8663, 0.28 ) }
    dend_15 { pt3dadd( 30.8209, 128.38, 16.9352, 0.55 ) }
    dend_15 { pt3dadd( 31.0859, 130.412, 16.964, 0.83 ) }
    dend_15 { pt3dadd( 31.2549, 132.568, 16.9475, 0.55 ) }
    dend_15 { pt3dadd( 31.376, 134.372, 16.9116, 0.28 ) }
    dend_15 { pt3dadd( 31.4329, 135.27, 16.9192, 0.55 ) }
    dend_15 { pt3dadd( 31.6283, 137.642, 16.9887, 0.28 ) }
    dend_15 { pt3dadd( 31.856, 139.585, 17.1334, 0.55 ) }
    dend_15 { pt3dadd( 32.0622, 140.846, 17.2979, 0.55 ) }
    dend_15 { pt3dadd( 32.3773, 142.283, 17.5763, 0.28 ) }
    dend_15 { pt3dadd( 32.726, 143.713, 17.918, 0.55 ) }
    dend_15 { pt3dadd( 33.2624, 145.792, 18.4589, 0.55 ) }
    dend_15 { pt3dadd( 33.6537, 147.332, 18.8721, 0.55 ) }
    dend_15 { pt3dadd( 33.8788, 148.196, 19.1055, 0.83 ) }
    dend_15 { pt3dadd( 34.43, 150.274, 19.6571, 0.55 ) }
    dend_15 { pt3dadd( 34.8153, 151.777, 20.0344, 0.55 ) }
    dend_15 { pt3dadd( 35.8475, 155.958, 21.0127, 0.28 ) }
    dend_15 { pt3dadd( 36.0383, 156.844, 21.2137, 0.55 ) }
    dend_15 { pt3dadd( 36.5991, 159.731, 21.8459, 0.28 ) }
    dend_15 { pt3dadd( 36.8148, 161.048, 22.1388, 0.83 ) }
    dend_15 { pt3dadd( 37.2633, 164.15, 22.8651, 0.28 ) }
    dend_15 { pt3dadd( 37.3808, 165.023, 23.0857, 0.28 ) }
    dend_15 { pt3dadd( 37.5315, 166.327, 23.4203, 0.55 ) }
    dend_15 { pt3dadd( 37.8706, 169.39, 24.2278, 0.28 ) }
    dend_15 { pt3dadd( 37.9973, 170.91, 24.6246, 0.55 ) }
    dend_15 { pt3dadd( 38.1866, 173.238, 25.2177, 0.28 ) }
    dend_15 { pt3dadd( 38.2665, 174.112, 25.488, 0.55 ) }
    dend_15 { pt3dadd( 39.3134, 182.216, 25.2329, 0.55 ) }
    dend_15 { pt3dadd( 40.8241, 190.089, 23.6304, 0.55 ) }
    dend_15 { pt3dadd( 43.8868, 197.669, 23.5926, 0.55 ) }
    dend_15 { pt3dadd( 48.5617, 204.179, 25.2066, 0.55 ) }
    dend_15 { pt3dadd( 51.5124, 211.668, 26.6355, 0.55 ) }
    dend_15 { pt3dadd( 53.1629, 219.273, 29.1406, 0.55 ) }
    dend_15 { pt3dadd( 54.2928, 226.941, 31.7388, 0.55 ) }
    dend_15 { pt3dadd( 56.172, 234.183, 35.0355, 0.55 ) }
    dend_15 { pt3dadd( 57.2541, 241.757, 37.9166, 0.55 ) }
    dend_15 { pt3dadd( 59.4777, 249.489, 39.3641, 0.55 ) }
    dend_15 { pt3dadd( 61.8943, 256.896, 41.8414, 0.55 ) }
    dend_15 { pt3dadd( 64.8498, 263.657, 45.3608, 0.55 ) }
    dend_15 { pt3dadd( 68.6479, 270.42, 47.9443, 0.55 ) }
    dend_15 { pt3dadd( 73.6655, 275.837, 51.4529, 0.55 ) }
    dend_15 { pt3dadd( 78.3717, 281.99, 54.0661, 0.55 ) }
    dend_15 { pt3dadd( 83.1974, 288.298, 56.0028, 0.55 ) }
    dend_15 { pt3dadd( 88.5151, 293.918, 58.6441, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 90/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 18.3065, 98.0067, 17.4941, 0.55 ) }
    dend_14 { pt3dadd( 14.3729, 100.953, 17.524, 0.55 ) }
    dend_14 { pt3dadd( 10.0487, 104.531, 17.7689, 0.55 ) }
    dend_14 { pt3dadd( 8.24462, 106.027, 17.9123, 0.28 ) }
    dend_14 { pt3dadd( 7.38169, 106.76, 18.0487, 0.83 ) }
    dend_14 { pt3dadd( 4.20555, 109.568, 18.6459, 0.55 ) }
    dend_14 { pt3dadd( 2.43086, 111.152, 19.1309, 0.83 ) }
    dend_14 { pt3dadd( 0.579357, 112.998, 19.9601, 0.55 ) }
    dend_14 { pt3dadd( -0.820484, 114.533, 20.7922, 0.55 ) }
    dend_14 { pt3dadd( -2.74435, 116.898, 21.9982, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_14 { pt3dadd( -3.50778, 117.908, 22.4394, 0.55 ) }
    dend_14 { pt3dadd( -6.12544, 121.361, 23.8941, 0.28 ) }
    dend_14 { pt3dadd( -7.23425, 122.842, 24.5526, 0.55 ) }
    dend_14 { pt3dadd( -8.72434, 124.968, 25.4414, 0.28 ) }
    dend_14 { pt3dadd( -10.0544, 127.089, 26.1859, 0.28 ) }
    dend_14 { pt3dadd( -11.6829, 129.676, 26.7406, 0.83 ) }
    dend_14 { pt3dadd( -19.3299, 139.386, 30.7997, 0.83 ) }
    dend_14 { pt3dadd( -26.6517, 148.536, 36.4463, 0.83 ) }
    dend_14 { pt3dadd( -34.2077, 156.498, 43.428, 0.83 ) }
    dend_14 { pt3dadd( -43.4867, 163.0, 49.8191, 0.83 ) }
    dend_14 { pt3dadd( -53.1158, 169.839, 55.2709, 0.83 ) }
    dend_14 { pt3dadd( -63.04, 177.56, 58.6063, 0.83 ) }
    dend_14 { pt3dadd( -73.8576, 183.901, 62.0697, 0.83 ) }
    dend_14 { pt3dadd( -84.1582, 191.25, 65.089, 0.83 ) }
    dend_14 { pt3dadd( -93.7631, 198.99, 69.2191, 0.83 ) }
    dend_14 { pt3dadd( -102.895, 205.554, 75.7569, 0.83 ) }
    dend_14 { pt3dadd( -111.941, 211.275, 83.1507, 0.83 ) }
    dend_14 { pt3dadd( -120.735, 217.939, 90.0409, 0.83 ) }
    dend_14 { pt3dadd( -130.697, 223.386, 96.39, 0.83 ) }
    dend_14 { pt3dadd( -140.089, 227.802, 104.233, 0.83 ) }
    dend_14 { pt3dadd( -150.838, 231.442, 110.591, 0.83 ) }
    dend_14 { pt3dadd( -162.153, 236.346, 114.734, 0.83 ) }
    dend_14 { pt3dadd( -172.242, 242.599, 120.055, 0.83 ) }
    dend_14 { pt3dadd( -182.22, 247.308, 126.947, 0.83 ) }
    dend_14 { pt3dadd( -190.187, 253.47, 135.18, 0.83 ) }
    dend_14 { pt3dadd( -198.538, 260.386, 142.366, 0.83 ) }
    dend_14 { pt3dadd( -204.428, 268.333, 150.814, 0.83 ) }
    dend_14 { pt3dadd( -210.706, 275.546, 159.634, 0.83 ) }
    dend_14 { pt3dadd( -216.74, 281.965, 169.205, 0.83 ) }
    dend_14 { pt3dadd( -223.792, 286.553, 179.127, 0.83 ) }
    dend_14 { pt3dadd( -230.043, 289.397, 190.175, 0.83 ) }
    dend_14 { pt3dadd( -234.849, 293.842, 201.417, 0.83 ) }
    dend_14 { pt3dadd( -240.301, 296.728, 212.87, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 33/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -9.10375, 20.7028, 4.17696, 0.83 ) }
    dend_10 { pt3dadd( -7.37079, 25.0329, 4.26371, 0.83 ) }
    dend_10 { pt3dadd( -4.66276, 31.948, 4.63496, 0.83 ) }
    dend_10 { pt3dadd( -3.3808, 35.2413, 4.84297, 0.83 ) }
    dend_10 { pt3dadd( -1.89524, 39.1629, 5.10789, 0.83 ) }
    dend_10 { pt3dadd( -0.753057, 42.2256, 5.31175, 0.55 ) }
    dend_10 { pt3dadd( 0.083039, 44.6759, 5.46566, 0.83 ) }
    dend_10 { pt3dadd( 1.10091, 48.0352, 5.74574, 0.55 ) }
    dend_10 { pt3dadd( 1.71918, 50.2829, 5.9515, 0.83 ) }
    dend_10 { pt3dadd( 2.11837, 51.7925, 6.04759, 0.55 ) }
    dend_10 { pt3dadd( 2.59843, 53.83, 6.2267, 0.83 ) }
    dend_10 { pt3dadd( 3.41927, 57.5998, 6.57681, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 45/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -9.10375, 20.7028, 4.17696, 0.55 ) }
    dend_1 { pt3dadd( -10.8562, 22.3906, 4.6503, 0.55 ) }
    dend_1 { pt3dadd( -11.8332, 23.3316, 4.91421, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 48/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 7.72927, 40.8505, -0.470299, 0.28 ) }
    axon_1 { pt3dadd( 11.0069, 55.4881, -0.470299, 0.28 ) }
    axon_1 { pt3dadd( 14.2846, 70.1256, -0.470299, 0.28 ) }
    // Section: dend_47, id: dend_47, parent: dend_39 (entry count 51/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -4.14552, -16.9511, 2.65533, 0.55 ) }
    dend_47 { pt3dadd( -4.96703, -19.3149, 3.42604, 0.55 ) }
    dend_47 { pt3dadd( -6.01421, -22.2563, 4.54574, 0.28 ) }
    dend_47 { pt3dadd( -6.4693, -23.5694, 5.05788, 0.83 ) }
    dend_47 { pt3dadd( -6.98112, -25.1481, 5.67591, 0.28 ) }
    dend_47 { pt3dadd( -7.38172, -26.3436, 6.12372, 0.55 ) }
    dend_47 { pt3dadd( -8.31462, -28.9385, 7.23908, 0.55 ) }
    dend_47 { pt3dadd( -8.84921, -30.4435, 7.9213, 0.28 ) }
    dend_47 { pt3dadd( -9.26933, -31.5277, 8.37275, 0.83 ) }
    dend_47 { pt3dadd( -9.82273, -32.8067, 8.91163, 0.55 ) }
    dend_47 { pt3dadd( -10.3217, -33.9338, 9.40895, 0.55 ) }
    dend_47 { pt3dadd( -11.6513, -36.8134, 10.6604, 0.83 ) }
    dend_47 { pt3dadd( -12.4553, -38.6207, 11.3235, 0.55 ) }
    dend_47 { pt3dadd( -13.4451, -40.6671, 12.0451, 0.55 ) }
    dend_47 { pt3dadd( -14.6725, -43.032, 12.9128, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 66/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -4.14552, -16.9511, 2.65533, 1.38 ) }
    dend_40 { pt3dadd( -4.98184, -19.0963, 0.83634, 1.38 ) }
    dend_40 { pt3dadd( -5.87473, -21.3865, -1.10571, 1.94 ) }
    dend_40 { pt3dadd( -7.38926, -25.2712, -4.39981, 1.66 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 70/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 3.85777, -26.7127, 5.38589, 0.83 ) }
    dend_32 { pt3dadd( 3.84457, -27.4898, 5.31088, 0.83 ) }
    dend_32 { pt3dadd( 3.80643, -29.7371, 5.09398, 0.83 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 73/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 3.85777, -26.7127, 5.38589, 0.55 ) }
    dend_31 { pt3dadd( 5.39307, -27.2478, 5.26558, 0.55 ) }
    dend_31 { pt3dadd( 7.56617, -27.8636, 4.64429, 0.55 ) }
    dend_31 { pt3dadd( 9.38389, -28.3359, 4.07959, 0.55 ) }
    dend_31 { pt3dadd( 11.7159, -28.854, 3.42475, 0.55 ) }
    dend_31 { pt3dadd( 15.782, -29.688, 2.38394, 0.28 ) }
    dend_31 { pt3dadd( 19.8798, -30.4708, 1.44852, 0.55 ) }
    dend_31 { pt3dadd( 24.6058, -31.2578, 0.354457, 0.55 ) }
    dend_31 { pt3dadd( 25.9845, -31.4593, 0.0567624, 0.83 ) }
    dend_31 { pt3dadd( 28.9555, -31.8525, -0.450123, 0.28 ) }
    dend_31 { pt3dadd( 29.8058, -31.9513, -0.570642, 0.55 ) }
    dend_31 { pt3dadd( 31.4667, -32.1264, -0.573864, 0.28 ) }
    dend_31 { pt3dadd( 33.0923, -32.3195, -0.342523, 0.55 ) }
    dend_31 { pt3dadd( 35.2989, -32.5922, 0.398929, 0.28 ) }
    dend_31 { pt3dadd( 36.9082, -32.8505, 0.986383, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 88/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -44.8375, -0.413443, 25.2657, 0.28 ) }
    dend_28 { pt3dadd( -56.2943, 3.72577, 23.7356, 0.28 ) }
    dend_28 { pt3dadd( -68.0322, 7.32265, 23.6041, 0.28 ) }
    dend_28 { pt3dadd( -79.7191, 10.7185, 21.9867, 0.28 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -44.8375, -0.413443, 25.2657, 0.28 ) }
    dend_27 { pt3dadd( -52.8362, 3.13876, 24.534, 0.28 ) }
    dend_27 { pt3dadd( -60.5524, 7.13013, 23.2445, 0.28 ) }
    dend_27 { pt3dadd( -68.3078, 10.77, 21.311, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 96/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 29.5162, 21.1643, -13.0212, 0.28 ) }
    dend_22 { pt3dadd( 31.1917, 22.3297, -12.9167, 0.28 ) }
    dend_22 { pt3dadd( 32.2275, 23.0437, -12.846, 0.55 ) }
    dend_22 { pt3dadd( 33.594, 23.9638, -12.7437, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 35.1791, 24.989, -12.5472, 0.55 ) }
    dend_22 { pt3dadd( 36.8889, 26.0665, -12.4139, 0.28 ) }
    dend_22 { pt3dadd( 38.0689, 26.8118, -12.3462, 0.55 ) }
    dend_22 { pt3dadd( 39.568, 27.7792, -12.2464, 0.28 ) }
    dend_22 { pt3dadd( 40.1296, 28.1433, -12.205, 0.55 ) }
    dend_22 { pt3dadd( 41.6352, 29.0825, -12.0899, 0.28 ) }
    dend_22 { pt3dadd( 43.4087, 30.1627, -11.7264, 0.55 ) }
    dend_22 { pt3dadd( 44.8909, 31.0905, -11.3269, 0.28 ) }
    dend_22 { pt3dadd( 45.7708, 31.6301, -11.0417, 0.55 ) }
    dend_22 { pt3dadd( 47.3095, 32.5574, -10.6116, 0.28 ) }
    dend_22 { pt3dadd( 47.9534, 32.9019, -10.3973, 0.55 ) }
    dend_22 { pt3dadd( 50.3173, 33.9758, -9.40929, 0.28 ) }
    dend_22 { pt3dadd( 51.5838, 34.5105, -8.78973, 0.28 ) }
    dend_22 { pt3dadd( 52.4696, 34.8309, -8.35865, 0.28 ) }
    dend_22 { pt3dadd( 54.477, 35.461, -7.41779, 0.28 ) }
    dend_22 { pt3dadd( 57.4743, 36.2156, -5.86482, 0.28 ) }
    dend_22 { pt3dadd( 58.6823, 36.4234, -5.23564, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 17/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 29.5162, 21.1643, -13.0212, 0.55 ) }
    dend_21 { pt3dadd( 32.815, 22.7449, -16.8396, 0.55 ) }
    dend_21 { pt3dadd( 38.4926, 25.1602, -22.2226, 0.55 ) }
    dend_21 { pt3dadd( 39.6271, 25.6422, -23.1635, 0.83 ) }
    dend_21 { pt3dadd( 41.3337, 26.3215, -24.3949, 0.28 ) }
    dend_21 { pt3dadd( 42.3035, 26.6645, -24.9976, 0.55 ) }
    dend_21 { pt3dadd( 44.2679, 27.3429, -26.1385, 0.28 ) }
    dend_21 { pt3dadd( 46.2812, 27.9211, -27.1478, 0.55 ) }
    dend_21 { pt3dadd( 48.3562, 28.2846, -27.8846, 0.28 ) }
    dend_21 { pt3dadd( 49.8688, 28.4831, -28.5099, 0.55 ) }
    dend_21 { pt3dadd( 52.2122, 28.7711, -29.575, 0.55 ) }
    dend_21 { pt3dadd( 54.4172, 29.0227, -30.6621, 0.55 ) }
    dend_21 { pt3dadd( 57.6693, 29.3618, -32.3836, 0.28 ) }
    dend_21 { pt3dadd( 59.3877, 29.5594, -33.4273, 0.55 ) }
    dend_21 { pt3dadd( 61.857, 29.9078, -35.0277, 0.55 ) }
    dend_21 { pt3dadd( 63.4674, 30.3134, -36.1781, 0.28 ) }
    dend_21 { pt3dadd( 64.387, 30.6147, -36.8498, 0.28 ) }
    dend_21 { pt3dadd( 65.1941, 30.924, -37.4306, 0.55 ) }
    dend_21 { pt3dadd( 67.8998, 32.18, -39.3716, 0.28 ) }
    dend_21 { pt3dadd( 68.6624, 32.5464, -39.9688, 0.55 ) }
    dend_21 { pt3dadd( 71.877, 33.9983, -42.5228, 0.28 ) }
    dend_21 { pt3dadd( 72.9785, 34.4195, -43.4114, 0.55 ) }
    dend_21 { pt3dadd( 75.1592, 35.0677, -45.1724, 0.28 ) }
    dend_21 { pt3dadd( 75.8215, 35.2088, -45.7081, 0.55 ) }
    dend_21 { pt3dadd( 78.4575, 35.5549, -47.6749, 0.28 ) }
    dend_21 { pt3dadd( 79.6352, 35.6187, -48.5406, 0.55 ) }
    dend_21 { pt3dadd( 81.2434, 35.6108, -49.7561, 0.28 ) }
    dend_21 { pt3dadd( 82.6908, 35.6044, -50.874, 0.28 ) }
    dend_21 { pt3dadd( 83.9433, 35.5953, -51.8845, 0.55 ) }
    dend_21 { pt3dadd( 85.5493, 35.6261, -53.2177, 0.28 ) }
    dend_21 { pt3dadd( 86.519, 35.6723, -54.0323, 0.55 ) }
    dend_21 { pt3dadd( 89.6913, 35.9403, -56.7116, 0.28 ) }
    dend_21 { pt3dadd( 90.1497, 36.0194, -57.1539, 0.55 ) }
    dend_21 { pt3dadd( 92.4598, 36.5945, -59.4397, 0.28 ) }
    dend_21 { pt3dadd( 93.3578, 36.8505, -60.2636, 0.55 ) }
    dend_21 { pt3dadd( 94.1702, 37.1216, -60.9891, 0.28 ) }
    dend_21 { pt3dadd( 95.4484, 37.6164, -62.0953, 0.55 ) }
    dend_21 { pt3dadd( 99.9943, 39.4042, -65.4504, 0.28 ) }
    dend_21 { pt3dadd( 101.296, 39.9259, -66.2621, 0.55 ) }
    dend_21 { pt3dadd( 104.289, 41.3249, -68.0237, 0.28 ) }
    dend_21 { pt3dadd( 105.024, 41.7176, -68.4529, 0.55 ) }
    dend_21 { pt3dadd( 106.701, 42.6998, -69.372, 0.28 ) }
    dend_21 { pt3dadd( 108.451, 43.8441, -70.1946, 0.55 ) }
    dend_21 { pt3dadd( 110.273, 45.1319, -70.7899, 0.28 ) }
    dend_21 { pt3dadd( 113.431, 47.937, -72.2719, 0.55 ) }
    dend_21 { pt3dadd( 114.571, 49.1063, -72.9059, 0.28 ) }
    dend_21 { pt3dadd( 115.574, 50.1801, -73.4278, 0.55 ) }
    dend_21 { pt3dadd( 116.885, 51.5923, -74.1294, 0.28 ) }
    dend_21 { pt3dadd( 117.683, 52.4752, -74.5766, 0.55 ) }
    dend_21 { pt3dadd( 120.962, 56.0091, -76.4009, 0.28 ) }
    dend_21 { pt3dadd( 122.137, 57.1112, -76.8919, 0.55 ) }
    dend_21 { pt3dadd( 124.114, 58.9733, -77.8493, 0.28 ) }
    dend_21 { pt3dadd( 125.724, 60.4569, -78.6248, 0.55 ) }
    dend_21 { pt3dadd( 126.813, 61.4605, -79.1966, 0.28 ) }
    dend_21 { pt3dadd( 128.219, 62.7561, -79.8249, 0.55 ) }
    dend_21 { pt3dadd( 130.022, 64.3453, -80.4291, 0.28 ) }
    dend_21 { pt3dadd( 132.525, 66.698, -81.3467, 0.55 ) }
    dend_21 { pt3dadd( 134.946, 69.0224, -82.332, 0.28 ) }
    dend_21 { pt3dadd( 136.818, 70.8497, -83.1962, 0.55 ) }
    dend_21 { pt3dadd( 139.623, 73.4586, -84.6432, 0.28 ) }
    dend_21 { pt3dadd( 140.983, 74.6578, -85.3948, 0.55 ) }
    dend_21 { pt3dadd( 143.98, 77.21, -87.3458, 0.28 ) }
    dend_21 { pt3dadd( 145.074, 78.0534, -88.2288, 0.55 ) }
    dend_21 { pt3dadd( 148.103, 80.0924, -91.523, 0.28 ) }
    dend_21 { pt3dadd( 148.824, 80.4769, -92.8424, 0.55 ) }
    dend_21 { pt3dadd( 149.376, 80.6752, -94.2416, 0.28 ) }
    dend_21 { pt3dadd( 149.942, 80.8238, -95.9776, 0.55 ) }
    dend_21 { pt3dadd( 151.204, 80.8746, -100.822, 0.28 ) }
    dend_21 { pt3dadd( 151.605, 80.8305, -102.773, 0.55 ) }
    dend_21 { pt3dadd( 152.901, 80.1855, -112.403, 0.28 ) }
    dend_21 { pt3dadd( 153.141, 80.0598, -114.734, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 88/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 18.9917, -19.5741, -28.1383, 0.28 ) }
    dend_19 { pt3dadd( 18.8415, -20.6603, -29.5614, 0.28 ) }
    dend_19 { pt3dadd( 18.7525, -21.3094, -30.3717, 0.55 ) }
    dend_19 { pt3dadd( 18.4246, -23.4446, -32.8905, 0.28 ) }
    dend_19 { pt3dadd( 18.3505, -23.8953, -33.408, 0.55 ) }
    dend_19 { pt3dadd( 17.7363, -27.2848, -37.1564, 0.28 ) }
    dend_19 { pt3dadd( 17.3519, -29.2733, -39.1213, 0.55 ) }
    dend_19 { pt3dadd( 17.0363, -30.7976, -40.6317, 0.28 ) }
    dend_19 { pt3dadd( 16.8594, -31.6347, -41.3296, 0.55 ) }
    dend_19 { pt3dadd( 16.4299, -33.7743, -42.7219, 0.28 ) }
    dend_19 { pt3dadd( 16.3194, -34.4714, -43.1785, 0.55 ) }
    dend_19 { pt3dadd( 15.9521, -37.4638, -44.993, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_19 { pt3dadd( 15.7142, -39.7454, -46.2206, 0.55 ) }
    dend_19 { pt3dadd( 15.4252, -43.4813, -48.229, 0.28 ) }
    dend_19 { pt3dadd( 15.3595, -44.5789, -48.8235, 0.55 ) }
    dend_19 { pt3dadd( 15.0105, -52.5294, -53.1174, 0.28 ) }
    dend_19 { pt3dadd( 14.9868, -53.481, -53.6685, 0.55 ) }
    dend_19 { pt3dadd( 14.9653, -56.8417, -55.8195, 0.28 ) }
    dend_19 { pt3dadd( 14.9597, -57.7613, -56.4228, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 7/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 18.9917, -19.5741, -28.1383, 0.55 ) }
    dend_18 { pt3dadd( 19.6847, -19.4652, -30.3276, 0.55 ) }
    dend_18 { pt3dadd( 21.3586, -18.7205, -36.6532, 0.55 ) }
    dend_18 { pt3dadd( 22.9241, -17.7942, -42.9638, 0.28 ) }
    dend_18 { pt3dadd( 23.1624, -17.5001, -44.2061, 0.55 ) }
    dend_18 { pt3dadd( 24.1021, -15.8845, -49.7578, 0.28 ) }
    dend_18 { pt3dadd( 24.3989, -15.1041, -51.7086, 0.55 ) }
    dend_18 { pt3dadd( 25.016, -11.6615, -57.8211, 0.28 ) }
    dend_18 { pt3dadd( 25.0843, -10.7542, -59.1244, 0.55 ) }
    dend_18 { pt3dadd( 25.1081, -5.54269, -65.0093, 0.28 ) }
    dend_18 { pt3dadd( 25.0795, -4.70005, -65.8257, 0.55 ) }
    dend_18 { pt3dadd( 24.6431, 0.899429, -70.0734, 0.28 ) }
    dend_18 { pt3dadd( 24.4809, 2.56225, -71.1834, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 20/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 3.41927, 57.5998, 6.57681, 0.28 ) }
    dend_12 { pt3dadd( 2.96071, 59.1679, 6.30649, 0.28 ) }
    dend_12 { pt3dadd( 2.76315, 60.0278, 6.09146, 0.55 ) }
    dend_12 { pt3dadd( 2.31025, 62.3373, 5.62599, 0.28 ) }
    dend_12 { pt3dadd( 2.19002, 62.988, 5.5262, 0.55 ) }
    dend_12 { pt3dadd( 1.99437, 64.0135, 5.36793, 0.28 ) }
    dend_12 { pt3dadd( 1.62532, 65.4778, 5.16361, 0.55 ) }
    dend_12 { pt3dadd( 0.721821, 68.0436, 4.9434, 0.28 ) }
    dend_12 { pt3dadd( 0.112434, 69.4036, 4.83453, 0.55 ) }
    dend_12 { pt3dadd( -0.646229, 70.7919, 4.7887, 0.28 ) }
    dend_12 { pt3dadd( -1.35864, 72.0553, 4.80755, 0.83 ) }
    dend_12 { pt3dadd( -2.36526, 73.9515, 4.89266, 0.55 ) }
    dend_12 { pt3dadd( -3.61658, 76.4522, 4.98593, 0.55 ) }
    dend_12 { pt3dadd( -4.34037, 78.179, 5.10253, 0.83 ) }
    dend_12 { pt3dadd( -4.73125, 79.4472, 5.19386, 0.55 ) }
    dend_12 { pt3dadd( -5.05725, 81.1315, 5.496, 1.11 ) }
    dend_12 { pt3dadd( -5.26796, 83.5696, 6.12896, 0.55 ) }
    dend_12 { pt3dadd( -5.22582, 85.5759, 6.73412, 1.11 ) }
    dend_12 { pt3dadd( -5.0246, 87.8344, 7.52895, 0.55 ) }
    dend_12 { pt3dadd( -4.86572, 89.6677, 8.00109, 0.83 ) }
    dend_12 { pt3dadd( -4.71229, 93.1056, 8.26595, 0.28 ) }
    dend_12 { pt3dadd( -4.73413, 93.7084, 8.21291, 0.55 ) }
    dend_12 { pt3dadd( -4.88171, 94.7799, 7.98187, 0.28 ) }
    dend_12 { pt3dadd( -5.13086, 95.9167, 7.61327, 0.83 ) }
    dend_12 { pt3dadd( -7.14257, 102.726, 4.89514, 0.55 ) }
    dend_12 { pt3dadd( -7.81852, 104.659, 4.0963, 0.55 ) }
    dend_12 { pt3dadd( -8.59729, 106.734, 3.25745, 0.83 ) }
    dend_12 { pt3dadd( -9.24051, 108.398, 2.8022, 0.28 ) }
    dend_12 { pt3dadd( -9.82576, 109.918, 2.5885, 0.55 ) }
    dend_12 { pt3dadd( -10.4367, 111.561, 2.62531, 0.28 ) }
    dend_12 { pt3dadd( -10.9137, 112.814, 2.92658, 0.55 ) }
    dend_12 { pt3dadd( -11.3922, 113.998, 3.2209, 0.28 ) }
    dend_12 { pt3dadd( -12.1456, 115.813, 3.63412, 0.55 ) }
    dend_12 { pt3dadd( -12.5963, 116.834, 3.841, 0.28 ) }
    dend_12 { pt3dadd( -13.6333, 118.867, 4.26407, 0.55 ) }
    dend_12 { pt3dadd( -14.5804, 120.423, 4.57738, 0.28 ) }
    dend_12 { pt3dadd( -15.7448, 122.102, 4.89394, 0.28 ) }
    dend_12 { pt3dadd( -16.5899, 123.159, 5.10994, 0.55 ) }
    dend_12 { pt3dadd( -17.9654, 124.548, 5.44661, 0.55 ) }
    dend_12 { pt3dadd( -18.9723, 125.337, 5.67991, 0.55 ) }
    dend_12 { pt3dadd( -20.2447, 126.189, 5.95448, 0.28 ) }
    dend_12 { pt3dadd( -20.7647, 126.493, 6.04492, 0.55 ) }
    dend_12 { pt3dadd( -21.8721, 126.966, 6.24362, 0.28 ) }
    dend_12 { pt3dadd( -23.7222, 127.543, 6.61462, 0.55 ) }
    dend_12 { pt3dadd( -26.0118, 128.02, 7.15759, 0.55 ) }
    dend_12 { pt3dadd( -29.8351, 134.715, 8.20627, 0.55 ) }
    dend_12 { pt3dadd( -33.9021, 141.173, 9.71527, 0.55 ) }
    dend_12 { pt3dadd( -37.4214, 147.866, 11.5448, 0.55 ) }
    dend_12 { pt3dadd( -40.7437, 154.895, 11.8568, 0.55 ) }
    dend_12 { pt3dadd( -44.5745, 161.612, 12.7164, 0.55 ) }
    dend_12 { pt3dadd( -50.0001, 167.177, 12.3778, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 71/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 3.41927, 57.5998, 6.57681, 0.55 ) }
    dend_11 { pt3dadd( 5.59062, 59.4812, 7.42063, 0.55 ) }
    dend_11 { pt3dadd( 7.72811, 61.3706, 8.30729, 0.83 ) }
    dend_11 { pt3dadd( 9.47139, 63.0092, 9.15307, 0.55 ) }
    dend_11 { pt3dadd( 11.0105, 64.5404, 9.95826, 0.83 ) }
    dend_11 { pt3dadd( 13.2708, 66.7769, 11.1636, 0.55 ) }
    dend_11 { pt3dadd( 15.0606, 68.5425, 12.1415, 0.28 ) }
    dend_11 { pt3dadd( 15.9186, 69.4898, 12.67, 0.28 ) }
    dend_11 { pt3dadd( 16.9343, 70.7506, 13.3193, 0.55 ) }
    dend_11 { pt3dadd( 17.6207, 71.627, 13.7664, 0.28 ) }
    dend_11 { pt3dadd( 18.5295, 72.8284, 14.3665, 0.55 ) }
    dend_11 { pt3dadd( 20.0417, 74.8884, 15.2029, 0.28 ) }
    dend_11 { pt3dadd( 20.6529, 75.7693, 15.5605, 0.55 ) }
    dend_11 { pt3dadd( 21.834, 77.6463, 16.2678, 0.28 ) }
    dend_11 { pt3dadd( 22.7252, 79.1646, 16.8402, 0.55 ) }
    dend_11 { pt3dadd( 23.3503, 80.3853, 17.3278, 0.28 ) }
    dend_11 { pt3dadd( 23.9702, 81.7921, 17.8954, 0.55 ) }
    dend_11 { pt3dadd( 25.5175, 85.341, 19.3947, 0.28 ) }
    dend_11 { pt3dadd( 26.2775, 86.8757, 20.1829, 0.28 ) }
    dend_11 { pt3dadd( 26.9749, 88.117, 20.8642, 0.55 ) }
    dend_11 { pt3dadd( 28.092, 89.813, 21.8052, 0.55 ) }
    dend_11 { pt3dadd( 29.4794, 91.7594, 22.9523, 0.28 ) }
    dend_11 { pt3dadd( 29.9267, 92.3689, 23.3235, 0.55 ) }
    dend_11 { pt3dadd( 31.9112, 94.8838, 24.6674, 0.55 ) }
    dend_11 { pt3dadd( 32.8691, 95.9174, 25.3153, 0.28 ) }
    dend_11 { pt3dadd( 33.96, 96.9357, 25.9413, 0.55 ) }
    dend_11 { pt3dadd( 38.0295, 104.634, 30.3213, 0.55 ) }
    dend_11 { pt3dadd( 43.2242, 111.996, 34.0409, 0.55 ) }
    dend_11 { pt3dadd( 48.9351, 119.433, 36.7062, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_11 { pt3dadd( 53.8637, 126.979, 40.4184, 0.55 ) }
    dend_11 { pt3dadd( 58.8496, 134.946, 43.0062, 0.55 ) }
    dend_11 { pt3dadd( 64.9688, 142.368, 44.5806, 0.55 ) }
    dend_11 { pt3dadd( 71.8744, 149.242, 44.8565, 0.55 ) }
    dend_11 { pt3dadd( 79.1706, 155.692, 45.2942, 0.55 ) }
    dend_11 { pt3dadd( 86.4861, 161.893, 47.0389, 0.55 ) }
    dend_11 { pt3dadd( 93.4235, 168.175, 49.7632, 0.55 ) }
    dend_11 { pt3dadd( 100.827, 173.048, 53.819, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 8/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -11.8332, 23.3316, 4.91421, 0.55 ) }
    dend_3 { pt3dadd( -12.4478, 25.353, 4.23636, 0.55 ) }
    dend_3 { pt3dadd( -13.0309, 27.2708, 3.59327, 0.55 ) }
    dend_3 { pt3dadd( -13.6357, 29.2598, 2.92631, 0.83 ) }
    dend_3 { pt3dadd( -14.0317, 30.5623, 2.48955, 0.55 ) }
    dend_3 { pt3dadd( -15.2001, 34.4049, 1.20102, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 14/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -11.8332, 23.3316, 4.91421, 0.55 ) }
    dend_2 { pt3dadd( -15.7763, 18.774, 5.96208, 0.55 ) }
    dend_2 { pt3dadd( -18.616, 15.418, 6.81509, 0.83 ) }
    dend_2 { pt3dadd( -19.9265, 13.8474, 7.27358, 0.55 ) }
    dend_2 { pt3dadd( -22.774, 10.3811, 8.33113, 0.83 ) }
    dend_2 { pt3dadd( -25.059, 7.59486, 9.33179, 0.55 ) }
    dend_2 { pt3dadd( -26.4356, 5.96779, 9.97527, 0.83 ) }
    dend_2 { pt3dadd( -28.5286, 3.33344, 11.2417, 0.55 ) }
    dend_2 { pt3dadd( -29.5593, 2.10194, 12.0233, 0.83 ) }
    dend_2 { pt3dadd( -30.6804, 0.824129, 13.0412, 0.55 ) }
    dend_2 { pt3dadd( -32.4015, -0.944784, 14.8333, 0.83 ) }
    dend_2 { pt3dadd( -34.163, -2.52115, 17.253, 0.55 ) }
    dend_2 { pt3dadd( -35.8728, -3.88631, 20.2022, 0.28 ) }
    dend_2 { pt3dadd( -36.7618, -4.621, 22.5005, 0.55 ) }
    dend_2 { pt3dadd( -37.6039, -5.38279, 25.4199, 0.28 ) }
    dend_2 { pt3dadd( -37.9593, -5.87062, 27.9769, 0.83 ) }
    dend_2 { pt3dadd( -38.3947, -7.02459, 34.8104, 0.55 ) }
    dend_2 { pt3dadd( -38.4161, -7.27024, 36.2262, 0.55 ) }
    dend_2 { pt3dadd( -38.2448, -8.17818, 40.8521, 0.55 ) }
    dend_2 { pt3dadd( -38.1515, -8.64373, 42.7861, 0.55 ) }
    dend_2 { pt3dadd( -37.7296, -10.7301, 49.8189, 0.28 ) }
    dend_2 { pt3dadd( -37.5646, -11.4133, 52.0329, 0.28 ) }
    dend_2 { pt3dadd( -37.4338, -12.2985, 54.355, 0.55 ) }
    dend_2 { pt3dadd( -37.3208, -14.456, 59.7322, 0.55 ) }
    dend_2 { pt3dadd( -37.329, -14.9911, 61.0577, 0.55 ) }
    dend_2 { pt3dadd( -37.3527, -15.9475, 63.3966, 0.55 ) }
    dend_2 { pt3dadd( -37.6102, -18.4242, 68.8471, 0.55 ) }
    dend_2 { pt3dadd( -37.6544, -19.2648, 70.8616, 0.28 ) }
    dend_2 { pt3dadd( -37.8584, -20.9137, 75.3262, 0.28 ) }
    dend_2 { pt3dadd( -42.388, -24.4568, 86.4336, 0.28 ) }
    dend_2 { pt3dadd( -45.3465, -27.3592, 98.2348, 0.28 ) }
    dend_2 { pt3dadd( -48.3896, -31.7896, 109.528, 0.28 ) }
    dend_2 { pt3dadd( -50.1273, -35.5051, 121.345, 0.28 ) }
    dend_2 { pt3dadd( -50.5815, -38.964, 133.356, 0.28 ) }
    dend_2 { pt3dadd( -53.7139, -45.238, 143.713, 0.28 ) }
    dend_2 { pt3dadd( -56.8479, -49.7337, 154.956, 0.28 ) }
    dend_2 { pt3dadd( -60.45, -56.4252, 164.891, 0.28 ) }
    dend_2 { pt3dadd( -63.1116, -65.8794, 172.635, 0.28 ) }
    dend_2 { pt3dadd( -66.2802, -76.3153, 178.759, 0.28 ) }
    dend_2 { pt3dadd( -67.6374, -87.6614, 183.845, 0.28 ) }
    dend_2 { pt3dadd( -67.2327, -99.3243, 188.346, 0.28 ) }
    dend_2 { pt3dadd( -64.8592, -110.254, 193.945, 0.28 ) }
    dend_2 { pt3dadd( -61.9626, -121.822, 197.718, 0.28 ) }
    dend_2 { pt3dadd( -61.2903, -133.92, 200.822, 0.28 ) }
    dend_2 { pt3dadd( -60.4057, -146.345, 201.952, 0.28 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 59/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -14.6725, -43.032, 12.9128, 0.28 ) }
    dend_49 { pt3dadd( -20.4309, -43.5345, 14.9857, 0.28 ) }
    dend_49 { pt3dadd( -22.3894, -43.6852, 15.6957, 0.55 ) }
    dend_49 { pt3dadd( -24.9657, -43.8935, 16.6355, 0.28 ) }
    dend_49 { pt3dadd( -25.6977, -43.9469, 16.8491, 0.55 ) }
    dend_49 { pt3dadd( -28.7306, -44.0849, 17.5686, 0.28 ) }
    dend_49 { pt3dadd( -30.6915, -44.16, 17.8191, 0.55 ) }
    dend_49 { pt3dadd( -33.3808, -44.1849, 17.601, 0.28 ) }
    dend_49 { pt3dadd( -34.6432, -44.1627, 17.2206, 0.55 ) }
    dend_49 { pt3dadd( -37.6405, -44.1304, 15.9478, 0.28 ) }
    dend_49 { pt3dadd( -39.6103, -44.1856, 14.8077, 0.55 ) }
    dend_49 { pt3dadd( -42.9514, -44.3721, 12.409, 0.55 ) }
    dend_49 { pt3dadd( -45.3715, -44.5309, 10.3911, 0.28 ) }
    dend_49 { pt3dadd( -48.9427, -44.7639, 6.99074, 0.55 ) }
    dend_49 { pt3dadd( -51.4424, -44.9718, 4.47822, 0.28 ) }
    dend_49 { pt3dadd( -53.5364, -45.2975, 2.42525, 0.55 ) }
    dend_49 { pt3dadd( -65.4054, -45.0597, -1.08819, 0.55 ) }
    dend_49 { pt3dadd( -77.3918, -44.622, -4.15559, 0.55 ) }
    dend_49 { pt3dadd( -89.1303, -42.4062, -7.40697, 0.55 ) }
    dend_49 { pt3dadd( -100.856, -40.0004, -10.5702, 0.55 ) }
    dend_49 { pt3dadd( -113.07, -38.7, -12.119, 0.55 ) }
    dend_49 { pt3dadd( -124.576, -35.7391, -15.6006, 0.55 ) }
    dend_49 { pt3dadd( -135.428, -31.7498, -20.0272, 0.55 ) }
    dend_49 { pt3dadd( -146.659, -27.5749, -23.1411, 0.55 ) }
    dend_49 { pt3dadd( -158.057, -25.3034, -27.407, 0.55 ) }
    dend_49 { pt3dadd( -168.665, -21.4602, -32.5044, 0.55 ) }
    dend_49 { pt3dadd( -178.498, -17.7917, -39.071, 0.55 ) }
    dend_49 { pt3dadd( -186.863, -13.0087, -46.8449, 0.55 ) }
    dend_49 { pt3dadd( -194.923, -9.06687, -55.3749, 0.55 ) }
    dend_49 { pt3dadd( -202.206, -5.48082, -64.7225, 0.55 ) }
    dend_49 { pt3dadd( -210.252, -3.13115, -73.834, 0.55 ) }
    dend_49 { pt3dadd( -218.34, -1.58014, -83.0779, 0.55 ) }
    dend_49 { pt3dadd( -226.253, 1.49267, -92.0898, 0.55 ) }
    dend_49 { pt3dadd( -234.28, 4.07059, -101.157, 0.55 ) }
    dend_49 { pt3dadd( -242.286, 8.31327, -109.593, 0.55 ) }
    dend_49 { pt3dadd( -249.961, 12.0237, -118.571, 0.55 ) }
    dend_49 { pt3dadd( -255.704, 16.479, -128.593, 0.55 ) }
    dend_49 { pt3dadd( -261.632, 20.7338, -138.594, 0.55 ) }
    dend_49 { pt3dadd( -265.582, 24.859, -149.579, 0.55 ) }
    dend_49 { pt3dadd( -270.643, 27.3087, -160.609, 0.55 ) }
    dend_49 { pt3dadd( -273.964, 28.4527, -172.48, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_49 { pt3dadd( -275.262, 30.3537, -184.645, 0.55 ) }
    dend_49 { pt3dadd( -274.283, 30.7802, -196.979, 0.55 ) }
    dend_49 { pt3dadd( -271.949, 32.5378, -209.01, 0.55 ) }
    dend_49 { pt3dadd( -271.305, 33.8198, -221.307, 0.55 ) }
    dend_49 { pt3dadd( -271.061, 36.845, -233.309, 0.55 ) }
    dend_49 { pt3dadd( -272.166, 41.6165, -244.68, 0.55 ) }
    dend_49 { pt3dadd( -274.192, 47.5264, -255.368, 0.55 ) }
    dend_49 { pt3dadd( -275.015, 54.464, -265.589, 0.55 ) }
    dend_49 { pt3dadd( -274.046, 62.1497, -275.246, 0.55 ) }
    dend_49 { pt3dadd( -273.014, 70.951, -283.892, 0.55 ) }
    dend_49 { pt3dadd( -270.418, 79.5284, -292.434, 0.55 ) }
    dend_49 { pt3dadd( -267.828, 87.9568, -301.124, 0.55 ) }
    dend_49 { pt3dadd( -263.739, 96.5198, -309.076, 0.55 ) }
    dend_49 { pt3dadd( -259.342, 105.644, -316.195, 0.55 ) }
    dend_49 { pt3dadd( -254.188, 114.039, -323.695, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 15/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -14.6725, -43.032, 12.9128, 0.28 ) }
    dend_48 { pt3dadd( -15.9191, -44.8286, 14.9339, 0.28 ) }
    dend_48 { pt3dadd( -16.6433, -45.761, 15.9284, 0.55 ) }
    dend_48 { pt3dadd( -19.4069, -49.2951, 19.447, 0.28 ) }
    dend_48 { pt3dadd( -19.9307, -49.965, 20.1139, 0.55 ) }
    dend_48 { pt3dadd( -21.4838, -51.9511, 22.0913, 0.55 ) }
    dend_48 { pt3dadd( -24.5796, -55.91, 26.0329, 0.28 ) }
    dend_48 { pt3dadd( -25.7897, -57.2102, 27.361, 0.28 ) }
    dend_48 { pt3dadd( -26.515, -57.936, 28.1114, 0.55 ) }
    dend_48 { pt3dadd( -31.3681, -63.9519, 36.0758, 0.55 ) }
    dend_48 { pt3dadd( -36.0308, -71.0676, 43.2034, 0.55 ) }
    dend_48 { pt3dadd( -41.3237, -77.9322, 50.1343, 0.55 ) }
    dend_48 { pt3dadd( -46.4224, -85.605, 56.3235, 0.55 ) }
    dend_48 { pt3dadd( -51.055, -92.4312, 63.7476, 0.55 ) }
    dend_48 { pt3dadd( -55.2854, -99.4349, 71.2461, 0.55 ) }
    dend_48 { pt3dadd( -60.4073, -107.017, 77.5277, 0.55 ) }
    dend_48 { pt3dadd( -65.9766, -114.787, 83.166, 0.55 ) }
    dend_48 { pt3dadd( -70.6098, -122.854, 89.2175, 0.55 ) }
    dend_48 { pt3dadd( -74.4365, -128.953, 97.6636, 0.55 ) }
    dend_48 { pt3dadd( -78.782, -135.68, 105.347, 0.55 ) }
    dend_48 { pt3dadd( -81.7195, -141.475, 114.345, 0.55 ) }
    dend_48 { pt3dadd( -86.0065, -146.952, 122.994, 0.55 ) }
    dend_48 { pt3dadd( -88.7403, -152.382, 132.279, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 38/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -7.38926, -25.2712, -4.39981, 0.83 ) }
    dend_44 { pt3dadd( -6.09196, -28.643, -10.1718, 0.83 ) }
    dend_44 { pt3dadd( -5.40949, -30.6581, -13.7172, 0.83 ) }
    dend_44 { pt3dadd( -4.79614, -32.6402, -17.4505, 0.83 ) }
    dend_44 { pt3dadd( -3.9631, -34.5308, -21.8563, 0.83 ) }
    dend_44 { pt3dadd( -3.0285, -35.847, -26.5489, 0.83 ) }
    dend_44 { pt3dadd( -2.95946, -35.9113, -27.0135, 0.55 ) }
    dend_44 { pt3dadd( -2.78781, -35.9314, -28.6479, 0.55 ) }
    dend_44 { pt3dadd( -2.72036, -35.778, -30.7632, 0.55 ) }
    dend_44 { pt3dadd( -2.58214, -34.185, -36.189, 0.55 ) }
    dend_44 { pt3dadd( -2.27543, -31.8741, -40.6661, 0.55 ) }
    dend_44 { pt3dadd( -1.73038, -29.0594, -44.9537, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 50/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -7.38926, -25.2712, -4.39981, 1.38 ) }
    dend_41 { pt3dadd( -8.90884, -27.2152, -4.34359, 1.38 ) }
    dend_41 { pt3dadd( -11.9672, -30.2831, -4.97214, 1.66 ) }
    dend_41 { pt3dadd( -14.4252, -32.7488, -5.47732, 0.83 ) }
    dend_41 { pt3dadd( -16.077, -34.4058, -5.81681, 0.83 ) }
    dend_41 { pt3dadd( -18.0509, -36.3859, -6.22251, 0.83 ) }
    dend_41 { pt3dadd( -21.4271, -39.7726, -6.9164, 0.83 ) }
    dend_41 { pt3dadd( -27.1726, -44.6057, -8.40097, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 58/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 3.80643, -29.7371, 5.09398, 0.55 ) }
    dend_36 { pt3dadd( 4.0211, -31.0445, 4.53525, 0.55 ) }
    dend_36 { pt3dadd( 4.16085, -31.8956, 4.17153, 0.28 ) }
    dend_36 { pt3dadd( 4.37439, -33.1959, 3.61578, 0.83 ) }
    dend_36 { pt3dadd( 4.58612, -34.4853, 3.06474, 0.55 ) }
    dend_36 { pt3dadd( 5.0178, -37.1141, 1.94128, 0.83 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 64/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 3.80643, -29.7371, 5.09398, 0.55 ) }
    dend_33 { pt3dadd( 5.35831, -30.9009, 6.12331, 0.55 ) }
    dend_33 { pt3dadd( 6.8471, -32.0368, 7.12847, 0.55 ) }
    dend_33 { pt3dadd( 9.21021, -33.889, 8.75821, 0.28 ) }
    dend_33 { pt3dadd( 11.1704, -35.5288, 10.1461, 0.55 ) }
    dend_33 { pt3dadd( 14.0191, -38.0268, 12.1909, 0.55 ) }
    dend_33 { pt3dadd( 15.9307, -39.7777, 13.5227, 0.55 ) }
    dend_33 { pt3dadd( 17.2777, -41.1281, 14.5237, 0.55 ) }
    dend_33 { pt3dadd( 18.1541, -42.0956, 15.2016, 0.55 ) }
    dend_33 { pt3dadd( 19.2828, -43.5526, 16.1488, 0.28 ) }
    dend_33 { pt3dadd( 19.9261, -44.6096, 16.8064, 0.55 ) }
    dend_33 { pt3dadd( 20.7262, -46.1964, 17.7153, 0.28 ) }
    dend_33 { pt3dadd( 21.5499, -47.8298, 18.5109, 0.55 ) }
    dend_33 { pt3dadd( 22.6739, -49.9404, 19.6491, 0.28 ) }
    dend_33 { pt3dadd( 23.9978, -52.1709, 20.8461, 0.55 ) }
    dend_33 { pt3dadd( 25.1423, -53.9284, 21.7719, 0.55 ) }
    dend_33 { pt3dadd( 26.5985, -55.9325, 22.9583, 0.55 ) }
    dend_33 { pt3dadd( 28.24, -57.9651, 24.3264, 0.55 ) }
    dend_33 { pt3dadd( 30.1005, -60.004, 25.7498, 0.28 ) }
    dend_33 { pt3dadd( 31.3081, -61.1892, 26.6325, 0.55 ) }
    dend_33 { pt3dadd( 32.4959, -62.1888, 27.4134, 0.55 ) }
    dend_33 { pt3dadd( 34.6262, -63.8289, 28.9436, 0.55 ) }
    dend_33 { pt3dadd( 35.519, -64.4986, 29.6477, 0.28 ) }
    dend_33 { pt3dadd( 36.0514, -64.8755, 30.0759, 0.55 ) }
    dend_33 { pt3dadd( 37.2853, -65.7302, 30.9983, 0.28 ) }
    dend_33 { pt3dadd( 39.1424, -66.994, 32.5126, 0.28 ) }
    dend_33 { pt3dadd( 39.3346, -67.1141, 32.6563, 0.55 ) }
    dend_33 { pt3dadd( 41.1962, -68.313, 33.7397, 0.28 ) }
    dend_33 { pt3dadd( 41.9679, -68.7697, 34.1678, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 93/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -15.2001, 34.4049, 1.20102, 0.55 ) }
    dend_5 { pt3dadd( -15.5626, 36.5139, 1.34437, 0.55 ) }
    dend_5 { pt3dadd( -15.8971, 38.9463, 1.24274, 0.83 ) }
    dend_5 { pt3dadd( -16.1175, 41.525, 0.895205, 0.55 ) }
    dend_5 { pt3dadd( -16.2559, 44.0283, 0.335182, 0.83 ) }
    dend_5 { pt3dadd( -16.342, 46.4303, -0.283441, 0.83 ) }
    dend_5 { pt3dadd( -16.431, 48.865, -0.870925, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_5 { pt3dadd( -16.4985, 52.2802, -1.85257, 0.83 ) }
    dend_5 { pt3dadd( -16.4688, 55.901, -3.05361, 0.83 ) }
    dend_5 { pt3dadd( -16.3755, 58.6588, -4.06943, 0.83 ) }
    dend_5 { pt3dadd( -16.3003, 61.8609, -5.31125, 0.55 ) }
    dend_5 { pt3dadd( -16.1875, 64.7258, -6.4304, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 5/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -15.2001, 34.4049, 1.20102, 0.28 ) }
    dend_4 { pt3dadd( -16.7214, 34.1494, 1.85581, 0.28 ) }
    dend_4 { pt3dadd( -18.7744, 33.6541, 2.88706, 0.55 ) }
    dend_4 { pt3dadd( -19.4704, 33.4857, 3.26828, 0.55 ) }
    dend_4 { pt3dadd( -22.6755, 32.738, 5.01765, 0.28 ) }
    dend_4 { pt3dadd( -23.0218, 32.6655, 5.22308, 0.55 ) }
    dend_4 { pt3dadd( -25.5143, 32.1028, 6.86925, 0.55 ) }
    dend_4 { pt3dadd( -26.9321, 31.7258, 7.95595, 0.55 ) }
    dend_4 { pt3dadd( -29.0907, 31.0857, 9.82376, 0.55 ) }
    dend_4 { pt3dadd( -29.9246, 30.826, 10.5671, 0.55 ) }
    dend_4 { pt3dadd( -32.8078, 30.0472, 13.2972, 0.55 ) }
    dend_4 { pt3dadd( -34.456, 29.7293, 14.831, 0.28 ) }
    dend_4 { pt3dadd( -35.3748, 29.6166, 15.6625, 0.55 ) }
    dend_4 { pt3dadd( -36.7626, 29.6025, 17.0069, 0.28 ) }
    dend_4 { pt3dadd( -37.6135, 29.6949, 17.8441, 0.55 ) }
    dend_4 { pt3dadd( -39.4615, 30.0828, 19.6623, 0.28 ) }
    dend_4 { pt3dadd( -40.4761, 30.385, 20.6147, 0.55 ) }
    dend_4 { pt3dadd( -42.2146, 31.06, 22.1578, 0.55 ) }
    dend_4 { pt3dadd( -43.7688, 31.767, 23.5416, 0.28 ) }
    dend_4 { pt3dadd( -44.7583, 32.2622, 24.4507, 0.55 ) }
    dend_4 { pt3dadd( -46.0213, 32.8711, 25.6899, 0.28 ) }
    dend_4 { pt3dadd( -47.1614, 33.3018, 26.7484, 0.55 ) }
    dend_4 { pt3dadd( -56.0033, 31.5871, 31.7984, 0.55 ) }
    dend_4 { pt3dadd( -64.2287, 29.2164, 37.573, 0.55 ) }
    dend_4 { pt3dadd( -72.5919, 25.6521, 42.4693, 0.55 ) }
    dend_4 { pt3dadd( -81.8274, 23.3523, 46.4742, 0.55 ) }
    dend_4 { pt3dadd( -91.2543, 20.9582, 49.9418, 0.55 ) }
    dend_4 { pt3dadd( -99.9934, 17.9473, 54.5444, 0.55 ) }
    dend_4 { pt3dadd( -108.579, 13.5581, 58.2389, 0.55 ) }
    dend_4 { pt3dadd( -115.887, 8.73439, 63.7107, 0.55 ) }
    dend_4 { pt3dadd( -122.492, 3.1808, 69.3811, 0.55 ) }
    dend_4 { pt3dadd( -127.806, -2.59773, 76.0889, 0.55 ) }
    dend_4 { pt3dadd( -132.676, -8.90982, 82.6511, 0.55 ) }
    dend_4 { pt3dadd( -136.567, -14.3569, 90.5133, 0.55 ) }
    dend_4 { pt3dadd( -141.639, -19.0862, 98.164, 0.55 ) }
    dend_4 { pt3dadd( -148.512, -23.7158, 104.323, 0.55 ) }
    dend_4 { pt3dadd( -156.279, -29.0937, 108.493, 0.55 ) }
    dend_4 { pt3dadd( -164.541, -32.1569, 113.875, 0.55 ) }
    dend_4 { pt3dadd( -172.46, -36.0171, 119.262, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 44/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -1.73038, -29.0594, -44.9537, 0.55 ) }
    dend_46 { pt3dadd( -1.34479, -27.2872, -45.367, 0.55 ) }
    dend_46 { pt3dadd( -1.22004, -26.7393, -45.5713, 0.28 ) }
    dend_46 { pt3dadd( -0.829807, -25.1227, -46.2533, 0.55 ) }
    dend_46 { pt3dadd( -0.271574, -22.8439, -47.5923, 0.55 ) }
    dend_46 { pt3dadd( 0.149544, -21.1274, -48.71, 0.28 ) }
    dend_46 { pt3dadd( 0.470017, -19.4354, -50.3415, 0.83 ) }
    dend_46 { pt3dadd( 0.834719, -17.2406, -52.971, 0.28 ) }
    dend_46 { pt3dadd( 0.914155, -16.7487, -53.6543, 0.55 ) }
    dend_46 { pt3dadd( 1.29824, -14.3419, -57.4375, 0.28 ) }
    dend_46 { pt3dadd( 1.38961, -13.717, -58.605, 0.83 ) }
    dend_46 { pt3dadd( 2.16157, -9.44928, -67.2317, 0.28 ) }
    dend_46 { pt3dadd( 2.26889, -8.98681, -68.1853, 0.55 ) }
    dend_46 { pt3dadd( 2.66606, -7.51678, -71.1008, 0.28 ) }
    dend_46 { pt3dadd( 2.87526, -6.84408, -72.3897, 0.83 ) }
    dend_46 { pt3dadd( 4.06733, -3.5573, -78.4997, 0.28 ) }
    dend_46 { pt3dadd( 4.5868, -2.29314, -80.7534, 0.28 ) }
    dend_46 { pt3dadd( 4.98997, -1.43789, -82.1374, 0.55 ) }
    dend_46 { pt3dadd( 6.12655, 1.0058, -85.9978, 0.28 ) }
    dend_46 { pt3dadd( 6.71495, 2.28557, -87.8598, 0.83 ) }
    dend_46 { pt3dadd( 7.5639, 4.32495, -90.5635, 0.55 ) }
    dend_46 { pt3dadd( 7.88079, 5.25401, -91.6714, 0.83 ) }
    dend_46 { pt3dadd( 8.27507, 6.67223, -93.3292, 0.28 ) }
    dend_46 { pt3dadd( 8.55235, 7.78302, -94.5475, 0.83 ) }
    dend_46 { pt3dadd( 9.59748, 12.182, -99.0077, 0.28 ) }
    dend_46 { pt3dadd( 9.99002, 14.1633, -100.903, 0.83 ) }
    dend_46 { pt3dadd( 10.7024, 18.3243, -104.633, 0.28 ) }
    dend_46 { pt3dadd( 10.8339, 19.1408, -105.386, 0.55 ) }
    dend_46 { pt3dadd( 10.9877, 20.1273, -106.271, 0.28 ) }
    dend_46 { pt3dadd( 11.2018, 21.4762, -107.535, 0.55 ) }
    dend_46 { pt3dadd( 11.5428, 23.1198, -109.083, 0.28 ) }
    dend_46 { pt3dadd( 11.7221, 23.5517, -109.548, 0.55 ) }
    dend_46 { pt3dadd( 12.8641, 25.2722, -111.557, 0.28 ) }
    dend_46 { pt3dadd( 13.5648, 26.0899, -112.572, 0.55 ) }
    dend_46 { pt3dadd( 14.7935, 27.1999, -113.999, 0.28 ) }
    dend_46 { pt3dadd( 15.8534, 28.0288, -114.984, 0.55 ) }
    dend_46 { pt3dadd( 17.9435, 29.4649, -116.631, 0.28 ) }
    dend_46 { pt3dadd( 19.0573, 30.2705, -117.427, 0.55 ) }
    dend_46 { pt3dadd( 20.2957, 31.2453, -118.294, 0.28 ) }
    dend_46 { pt3dadd( 21.2998, 32.0783, -119.037, 0.55 ) }
    dend_46 { pt3dadd( 22.0491, 32.8063, -119.652, 0.55 ) }
    dend_46 { pt3dadd( 23.5728, 34.4061, -121.029, 0.28 ) }
    dend_46 { pt3dadd( 24.6089, 35.5391, -122.11, 0.55 ) }
    dend_46 { pt3dadd( 26.7347, 37.7916, -124.587, 0.28 ) }
    dend_46 { pt3dadd( 27.2885, 38.327, -125.276, 0.83 ) }
    dend_46 { pt3dadd( 29.3192, 40.0752, -127.791, 0.28 ) }
    dend_46 { pt3dadd( 30.5618, 40.9185, -129.249, 0.83 ) }
    dend_46 { pt3dadd( 32.3477, 41.8088, -130.993, 0.28 ) }
    dend_46 { pt3dadd( 33.378, 42.0309, -131.733, 0.83 ) }
    dend_46 { pt3dadd( 35.5796, 42.1674, -132.928, 0.28 ) }
    dend_46 { pt3dadd( 36.7214, 42.1257, -133.448, 0.83 ) }
    dend_46 { pt3dadd( 39.6184, 41.8104, -134.525, 0.28 ) }
    dend_46 { pt3dadd( 43.1669, 41.3139, -135.646, 0.55 ) }
    dend_46 { pt3dadd( 50.1808, 39.4366, -137.372, 0.28 ) }
    dend_46 { pt3dadd( 51.6423, 38.8978, -137.685, 0.55 ) }
    dend_46 { pt3dadd( 52.9374, 38.211, -137.931, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_46 { pt3dadd( 54.6466, 37.0342, -138.258, 0.28 ) }
    dend_46 { pt3dadd( 55.2967, 36.4437, -138.377, 0.55 ) }
    dend_46 { pt3dadd( 60.8792, 29.9702, -139.557, 0.28 ) }
    dend_46 { pt3dadd( 61.4201, 29.2172, -139.649, 0.55 ) }
    dend_46 { pt3dadd( 64.4279, 24.6785, -140.164, 0.28 ) }
    dend_46 { pt3dadd( 65.0429, 23.6716, -140.274, 0.55 ) }
    dend_46 { pt3dadd( 66.5902, 20.8136, -140.577, 0.28 ) }
    dend_46 { pt3dadd( 67.1134, 19.7565, -140.694, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 8/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.73038, -29.0594, -44.9537, 0.55 ) }
    dend_45 { pt3dadd( -2.47769, -29.7261, -46.4069, 0.55 ) }
    dend_45 { pt3dadd( -6.13505, -32.7648, -52.8651, 0.28 ) }
    dend_45 { pt3dadd( -7.16666, -33.6926, -54.6333, 0.28 ) }
    dend_45 { pt3dadd( -8.08336, -34.6498, -56.2946, 0.55 ) }
    dend_45 { pt3dadd( -12.3617, -39.6525, -64.3854, 0.28 ) }
    dend_45 { pt3dadd( -13.2456, -40.7677, -65.984, 0.55 ) }
    dend_45 { pt3dadd( -13.9063, -41.6362, -66.9529, 0.28 ) }
    dend_45 { pt3dadd( -15.2562, -43.1261, -68.2781, 0.55 ) }
    dend_45 { pt3dadd( -17.8728, -45.759, -70.4358, 0.28 ) }
    dend_45 { pt3dadd( -21.6119, -49.5375, -73.4088, 0.55 ) }
    dend_45 { pt3dadd( -23.7831, -51.7018, -75.1338, 0.55 ) }
    dend_45 { pt3dadd( -27.4511, -55.2772, -78.5245, 0.55 ) }
    dend_45 { pt3dadd( -31.999, -59.5124, -83.2753, 0.55 ) }
    dend_45 { pt3dadd( -33.9644, -61.263, -85.4535, 0.28 ) }
    dend_45 { pt3dadd( -36.0388, -63.1262, -87.9878, 0.55 ) }
    dend_45 { pt3dadd( -40.0184, -66.9277, -94.552, 0.28 ) }
    dend_45 { pt3dadd( -41.0274, -68.0948, -96.8775, 0.55 ) }
    dend_45 { pt3dadd( -42.2584, -69.8472, -100.544, 0.28 ) }
    dend_45 { pt3dadd( -42.8476, -70.971, -102.719, 0.55 ) }
    dend_45 { pt3dadd( -43.4856, -72.3026, -105.107, 0.55 ) }
    dend_45 { pt3dadd( -46.53, -78.1795, -114.82, 0.28 ) }
    dend_45 { pt3dadd( -47.8667, -80.6816, -118.608, 0.28 ) }
    dend_45 { pt3dadd( -49.6634, -83.4873, -122.706, 0.83 ) }
    dend_45 { pt3dadd( -50.5658, -84.7807, -124.493, 0.28 ) }
    dend_45 { pt3dadd( -51.5655, -85.9304, -126.135, 0.83 ) }
    dend_45 { pt3dadd( -56.8282, -90.2691, -132.748, 0.28 ) }
    dend_45 { pt3dadd( -57.5199, -90.7044, -133.51, 0.55 ) }
    dend_45 { pt3dadd( -60.5513, -92.3573, -136.881, 0.28 ) }
    dend_45 { pt3dadd( -63.1597, -93.7125, -139.991, 0.83 ) }
    dend_45 { pt3dadd( -67.5293, -95.6593, -145.177, 0.83 ) }
    dend_45 { pt3dadd( -71.5465, -97.2233, -149.748, 0.28 ) }
    dend_45 { pt3dadd( -75.1879, -98.493, -153.763, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 41/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -27.1726, -44.6057, -8.40097, 0.83 ) }
    dend_43 { pt3dadd( -29.7501, -43.7477, -6.91385, 0.83 ) }
    dend_43 { pt3dadd( -32.675, -42.7238, -5.44358, 0.83 ) }
    dend_43 { pt3dadd( -35.0309, -41.7949, -4.42527, 0.83 ) }
    dend_43 { pt3dadd( -37.5905, -40.6574, -3.49662, 0.83 ) }
    dend_43 { pt3dadd( -41.1523, -38.927, -2.52743, 0.83 ) }
    dend_43 { pt3dadd( -44.0169, -37.4215, -2.10996, 0.28 ) }
    dend_43 { pt3dadd( -45.808, -36.2395, -2.26923, 0.55 ) }
    dend_43 { pt3dadd( -47.4373, -35.009, -2.76844, 0.55 ) }
    dend_43 { pt3dadd( -48.7679, -33.8919, -3.45527, 0.55 ) }
    dend_43 { pt3dadd( -50.9229, -31.8265, -4.929, 0.55 ) }
    dend_43 { pt3dadd( -53.2003, -29.4232, -7.01603, 0.55 ) }
    dend_43 { pt3dadd( -54.9015, -27.464, -8.79064, 0.55 ) }
    dend_43 { pt3dadd( -55.4177, -26.842, -9.30726, 0.83 ) }
    dend_43 { pt3dadd( -56.5814, -25.3931, -10.4062, 0.55 ) }
    dend_43 { pt3dadd( -57.1938, -24.5689, -10.9199, 0.83 ) }
    dend_43 { pt3dadd( -59.0851, -21.7267, -12.2804, 0.55 ) }
    dend_43 { pt3dadd( -59.3026, -21.382, -12.3872, 0.83 ) }
    dend_43 { pt3dadd( -60.6075, -19.262, -12.8643, 0.55 ) }
    dend_43 { pt3dadd( -61.9214, -17.1186, -13.1382, 0.83 ) }
    dend_43 { pt3dadd( -63.1678, -15.0437, -13.4153, 0.28 ) }
    dend_43 { pt3dadd( -63.7025, -14.1355, -13.522, 0.55 ) }
    dend_43 { pt3dadd( -64.9202, -11.9519, -13.7637, 0.28 ) }
    dend_43 { pt3dadd( -65.655, -10.5688, -13.981, 0.55 ) }
    dend_43 { pt3dadd( -67.0963, -7.47781, -14.5965, 0.28 ) }
    dend_43 { pt3dadd( -68.6006, -3.80402, -15.4665, 0.83 ) }
    dend_43 { pt3dadd( -69.5551, -1.15936, -16.1156, 0.28 ) }
    dend_43 { pt3dadd( -70.3697, 1.38488, -16.7046, 0.28 ) }
    dend_43 { pt3dadd( -70.5724, 2.05318, -16.8467, 0.83 ) }
    dend_43 { pt3dadd( -71.1208, 3.91598, -17.2292, 0.55 ) }
    dend_43 { pt3dadd( -71.785, 6.13877, -17.6736, 0.83 ) }
    dend_43 { pt3dadd( -72.5813, 8.45047, -17.9877, 0.55 ) }
    dend_43 { pt3dadd( -73.0936, 9.85313, -18.1892, 0.83 ) }
    dend_43 { pt3dadd( -74.2443, 12.7999, -18.6206, 0.83 ) }
    dend_43 { pt3dadd( -75.3962, 15.5747, -19.0866, 0.55 ) }
    dend_43 { pt3dadd( -76.2733, 17.5204, -19.535, 0.83 ) }
    dend_43 { pt3dadd( -77.1811, 19.4743, -20.1316, 0.28 ) }
    dend_43 { pt3dadd( -77.6596, 20.499, -20.5561, 0.55 ) }
    dend_43 { pt3dadd( -79.1629, 23.7162, -22.1789, 0.28 ) }
    dend_43 { pt3dadd( -79.9584, 25.3766, -23.1267, 0.83 ) }
    dend_43 { pt3dadd( -81.4829, 28.1704, -24.9318, 0.28 ) }
    dend_43 { pt3dadd( -82.1702, 29.2851, -25.7226, 0.83 ) }
    dend_43 { pt3dadd( -83.7171, 31.4572, -27.699, 0.55 ) }
    dend_43 { pt3dadd( -84.7557, 32.7577, -28.9409, 0.55 ) }
    dend_43 { pt3dadd( -85.9835, 34.1714, -30.3057, 0.83 ) }
    dend_43 { pt3dadd( -88.1058, 36.6098, -32.4683, 0.55 ) }
    dend_43 { pt3dadd( -89.2125, 37.8805, -33.444, 0.83 ) }
    dend_43 { pt3dadd( -92.6026, 41.8879, -36.2185, 0.28 ) }
    dend_43 { pt3dadd( -94.5822, 44.3058, -37.6437, 0.55 ) }
    dend_43 { pt3dadd( -95.5777, 45.6012, -38.3785, 0.28 ) }
    dend_43 { pt3dadd( -97.199, 47.898, -39.4909, 0.28 ) }
    dend_43 { pt3dadd( -97.9623, 49.0773, -39.9501, 0.28 ) }
    dend_43 { pt3dadd( -99.6312, 51.7226, -40.8537, 0.55 ) }
    dend_43 { pt3dadd( -100.856, 53.6797, -41.3401, 0.28 ) }
    dend_43 { pt3dadd( -102.212, 55.8095, -41.9675, 0.83 ) }
    dend_43 { pt3dadd( -103.744, 58.6756, -42.6283, 0.28 ) }
    dend_43 { pt3dadd( -104.377, 60.0642, -42.939, 0.55 ) }
    dend_43 { pt3dadd( -105.543, 63.1208, -43.6012, 0.28 ) }
    dend_43 { pt3dadd( -106.121, 64.8991, -43.9535, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_43 { pt3dadd( -106.352, 65.7195, -44.1844, 0.55 ) }
    dend_43 { pt3dadd( -107.726, 71.6937, -46.3155, 0.28 ) }
    dend_43 { pt3dadd( -108.127, 74.1581, -47.5188, 0.83 ) }
    dend_43 { pt3dadd( -108.323, 76.0246, -48.6688, 0.28 ) }
    dend_43 { pt3dadd( -108.391, 77.2416, -49.5538, 0.55 ) }
    dend_43 { pt3dadd( -108.534, 80.2154, -51.9627, 0.28 ) }
    dend_43 { pt3dadd( -108.66, 83.0473, -54.3729, 0.55 ) }
    dend_43 { pt3dadd( -108.754, 84.9556, -56.1521, 0.55 ) }
    dend_43 { pt3dadd( -108.82, 87.4822, -58.4447, 0.28 ) }
    dend_43 { pt3dadd( -108.843, 88.5934, -59.4624, 0.28 ) }
    dend_43 { pt3dadd( -108.869, 89.8916, -60.6141, 0.55 ) }
    dend_43 { pt3dadd( -108.983, 93.2199, -63.0868, 0.28 ) }
    dend_43 { pt3dadd( -109.146, 95.0479, -64.3351, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 13/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -27.1726, -44.6057, -8.40097, 0.83 ) }
    dend_42 { pt3dadd( -29.31, -44.0163, -10.5703, 0.83 ) }
    dend_42 { pt3dadd( -32.3481, -42.964, -13.3741, 0.55 ) }
    dend_42 { pt3dadd( -32.956, -42.711, -13.8255, 0.55 ) }
    dend_42 { pt3dadd( -33.6292, -42.4452, -14.3091, 0.55 ) }
    dend_42 { pt3dadd( -35.3804, -41.781, -15.4263, 0.55 ) }
    dend_42 { pt3dadd( -38.4935, -40.6999, -17.3656, 0.28 ) }
    dend_42 { pt3dadd( -39.8132, -40.286, -18.3731, 0.55 ) }
    dend_42 { pt3dadd( -41.8812, -39.8215, -19.9915, 0.28 ) }
    dend_42 { pt3dadd( -43.6199, -39.5759, -21.5738, 0.55 ) }
    dend_42 { pt3dadd( -45.2496, -39.4849, -23.1396, 0.55 ) }
    dend_42 { pt3dadd( -47.6827, -39.6487, -25.3969, 0.28 ) }
    dend_42 { pt3dadd( -52.5976, -40.4007, -29.8434, 0.83 ) }
    dend_42 { pt3dadd( -53.8976, -40.6855, -31.0267, 0.83 ) }
    dend_42 { pt3dadd( -56.9886, -41.5132, -33.8613, 0.28 ) }
    dend_42 { pt3dadd( -58.2578, -41.859, -34.9151, 0.83 ) }
    dend_42 { pt3dadd( -61.6271, -42.7986, -37.502, 0.28 ) }
    dend_42 { pt3dadd( -62.5164, -43.0403, -38.083, 0.55 ) }
    dend_42 { pt3dadd( -65.1648, -43.7304, -39.433, 0.28 ) }
    dend_42 { pt3dadd( -66.1653, -43.9679, -39.9709, 0.83 ) }
    dend_42 { pt3dadd( -68.2176, -44.4485, -41.0225, 0.28 ) }
    dend_42 { pt3dadd( -70.8033, -44.9559, -42.6917, 0.55 ) }
    dend_42 { pt3dadd( -72.9247, -45.305, -44.2339, 0.28 ) }
    dend_42 { pt3dadd( -73.9837, -45.4783, -45.2576, 0.83 ) }
    dend_42 { pt3dadd( -76.4844, -46.0339, -48.0951, 0.28 ) }
    dend_42 { pt3dadd( -77.2918, -46.2596, -49.13, 0.55 ) }
    dend_42 { pt3dadd( -79.8337, -47.1767, -52.8949, 0.28 ) }
    dend_42 { pt3dadd( -80.3063, -47.3868, -53.6762, 0.55 ) }
    dend_42 { pt3dadd( -84.167, -49.4278, -60.869, 0.28 ) }
    dend_42 { pt3dadd( -85.0379, -49.955, -62.6251, 0.28 ) }
    dend_42 { pt3dadd( -85.6564, -50.4253, -63.9167, 0.55 ) }
    dend_42 { pt3dadd( -87.4146, -51.9536, -67.6876, 0.28 ) }
    dend_42 { pt3dadd( -88.226, -52.773, -69.325, 0.28 ) }
    dend_42 { pt3dadd( -89.3852, -53.9377, -71.4562, 0.28 ) }
    dend_42 { pt3dadd( -89.848, -54.3173, -72.0696, 0.55 ) }
    dend_42 { pt3dadd( -91.9257, -55.5435, -74.2601, 0.28 ) }
    dend_42 { pt3dadd( -93.0703, -56.125, -75.2642, 0.55 ) }
    dend_42 { pt3dadd( -94.8222, -56.8134, -76.3534, 0.28 ) }
    dend_42 { pt3dadd( -95.8293, -57.1084, -76.8267, 0.55 ) }
    dend_42 { pt3dadd( -99.4698, -57.836, -78.1181, 0.28 ) }
    dend_42 { pt3dadd( -101.254, -58.0555, -78.7432, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 54/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 5.0178, -37.1141, 1.94128, 0.55 ) }
    dend_38 { pt3dadd( 4.26295, -39.7546, 2.57066, 0.55 ) }
    dend_38 { pt3dadd( 4.04913, -40.8834, 2.69193, 0.83 ) }
    dend_38 { pt3dadd( 3.86388, -42.3093, 2.78594, 0.28 ) }
    dend_38 { pt3dadd( 3.77329, -43.1763, 2.8245, 0.55 ) }
    dend_38 { pt3dadd( 3.68699, -44.2688, 2.86527, 0.55 ) }
    dend_38 { pt3dadd( 3.58697, -45.5732, 2.91368, 0.55 ) }
    dend_38 { pt3dadd( 3.54677, -47.1436, 2.87855, 0.55 ) }
    dend_38 { pt3dadd( 3.47471, -48.7438, 2.89152, 0.55 ) }
    dend_38 { pt3dadd( 3.43714, -49.6343, 2.89962, 0.28 ) }
    dend_38 { pt3dadd( 3.43864, -50.3144, 2.87622, 0.55 ) }
    dend_38 { pt3dadd( 3.50393, -51.3276, 2.76697, 0.28 ) }
    dend_38 { pt3dadd( 3.62715, -52.1957, 2.66039, 0.55 ) }
    dend_38 { pt3dadd( 3.88619, -53.7262, 2.5167, 0.55 ) }
    dend_38 { pt3dadd( 4.26104, -55.4494, 2.30107, 0.55 ) }
    dend_38 { pt3dadd( 4.84171, -57.9328, 2.10118, 0.55 ) }
    dend_38 { pt3dadd( 5.43297, -60.2248, 1.94079, 0.55 ) }
    dend_38 { pt3dadd( 6.18677, -62.9199, 1.85186, 0.28 ) }
    dend_38 { pt3dadd( 6.65566, -64.5341, 1.88046, 0.83 ) }
    dend_38 { pt3dadd( 7.58605, -67.7735, 2.17762, 0.28 ) }
    dend_38 { pt3dadd( 8.20156, -70.0346, 2.5721, 0.83 ) }
    dend_38 { pt3dadd( 8.52639, -71.5303, 2.97847, 0.28 ) }
    dend_38 { pt3dadd( 8.7492, -72.9533, 3.36729, 0.55 ) }
    dend_38 { pt3dadd( 8.92542, -74.5248, 3.70695, 0.28 ) }
    dend_38 { pt3dadd( 9.07117, -76.0037, 3.92839, 0.55 ) }
    dend_38 { pt3dadd( 9.16335, -77.3301, 4.11005, 0.28 ) }
    dend_38 { pt3dadd( 9.24203, -78.4776, 4.19097, 0.55 ) }
    dend_38 { pt3dadd( 9.48137, -82.2561, 4.36632, 0.28 ) }
    dend_38 { pt3dadd( 9.56351, -83.3465, 4.34599, 0.83 ) }
    dend_38 { pt3dadd( 9.7084, -85.2946, 4.26631, 0.83 ) }
    dend_38 { pt3dadd( 9.87261, -87.2367, 4.17306, 0.28 ) }
    dend_38 { pt3dadd( 9.93791, -87.9945, 4.16279, 0.55 ) }
    dend_38 { pt3dadd( 10.1054, -89.5056, 4.17682, 0.28 ) }
    dend_38 { pt3dadd( 10.2034, -90.2983, 4.19794, 0.55 ) }
    dend_38 { pt3dadd( 10.3179, -91.6703, 4.29553, 0.28 ) }
    dend_38 { pt3dadd( 10.3109, -92.3514, 4.35877, 0.55 ) }
    dend_38 { pt3dadd( 10.1569, -93.8439, 4.49539, 0.28 ) }
    dend_38 { pt3dadd( 9.99051, -94.7091, 4.5998, 0.83 ) }
    dend_38 { pt3dadd( 9.57831, -96.1065, 4.90599, 0.28 ) }
    dend_38 { pt3dadd( 8.8196, -98.0998, 5.60739, 0.55 ) }
    dend_38 { pt3dadd( 8.31007, -99.2838, 6.09347, 0.28 ) }
    dend_38 { pt3dadd( 8.13216, -99.7068, 6.25828, 0.55 ) }
    dend_38 { pt3dadd( 7.78221, -100.55, 6.56365, 0.55 ) }
    dend_38 { pt3dadd( 6.61172, -103.558, 7.51517, 0.28 ) }
    dend_38 { pt3dadd( 5.9615, -105.291, 8.09867, 0.28 ) }
    dend_38 { pt3dadd( 5.80974, -105.745, 8.22779, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_38 { pt3dadd( 5.01664, -108.082, 8.93151, 0.28 ) }
    dend_38 { pt3dadd( 4.68994, -109.079, 9.19206, 0.55 ) }
    dend_38 { pt3dadd( 4.192, -110.718, 9.52283, 0.28 ) }
    dend_38 { pt3dadd( 3.44246, -113.43, 9.85423, 0.28 ) }
    dend_38 { pt3dadd( 3.06879, -114.945, 10.0201, 1.11 ) }
    dend_38 { pt3dadd( 2.4337, -117.485, 10.3574, 0.28 ) }
    dend_38 { pt3dadd( 2.11857, -118.758, 10.5605, 0.55 ) }
    dend_38 { pt3dadd( 1.91447, -119.783, 10.6954, 0.28 ) }
    dend_38 { pt3dadd( 1.82928, -120.421, 10.7264, 0.55 ) }
    dend_38 { pt3dadd( 1.61388, -122.755, 10.5999, 0.28 ) }
    dend_38 { pt3dadd( 1.52916, -123.824, 10.5235, 0.55 ) }
    dend_38 { pt3dadd( 1.41685, -125.21, 10.4464, 0.28 ) }
    dend_38 { pt3dadd( 1.27031, -126.491, 10.42, 0.28 ) }
    dend_38 { pt3dadd( 1.06868, -128.054, 10.3814, 0.83 ) }
    dend_38 { pt3dadd( 0.793079, -130.254, 10.3449, 0.83 ) }
    dend_38 { pt3dadd( 0.426579, -133.475, 10.3301, 0.28 ) }
    dend_38 { pt3dadd( 0.259976, -134.789, 10.4156, 0.55 ) }
    dend_38 { pt3dadd( 0.036811, -136.617, 10.6398, 0.28 ) }
    dend_38 { pt3dadd( -0.099836, -137.679, 10.8374, 0.55 ) }
    dend_38 { pt3dadd( -0.39595, -140.707, 11.5312, 0.28 ) }
    dend_38 { pt3dadd( -0.496936, -142.724, 12.0137, 0.83 ) }
    dend_38 { pt3dadd( -0.494209, -145.488, 12.6808, 0.28 ) }
    dend_38 { pt3dadd( -0.420887, -147.469, 13.1426, 0.28 ) }
    dend_38 { pt3dadd( -0.359455, -148.428, 13.3605, 0.55 ) }
    dend_38 { pt3dadd( -0.035295, -152.287, 14.1221, 0.28 ) }
    dend_38 { pt3dadd( 0.258544, -154.83, 14.4336, 0.28 ) }
    dend_38 { pt3dadd( 0.473502, -156.334, 14.5139, 0.55 ) }
    dend_38 { pt3dadd( 0.80531, -158.386, 14.5022, 0.28 ) }
    dend_38 { pt3dadd( 0.970245, -159.442, 14.4681, 0.55 ) }
    dend_38 { pt3dadd( 1.3137, -161.835, 14.3926, 0.28 ) }
    dend_38 { pt3dadd( 1.53052, -163.502, 14.3297, 0.55 ) }
    dend_38 { pt3dadd( 2.12424, -168.22, 14.1002, 0.28 ) }
    dend_38 { pt3dadd( 2.29892, -169.714, 14.0134, 0.55 ) }
    dend_38 { pt3dadd( 2.63375, -172.093, 13.8937, 0.28 ) }
    dend_38 { pt3dadd( 2.876, -173.76, 13.879, 0.55 ) }
    dend_38 { pt3dadd( 2.24979, -181.474, 14.4721, 0.55 ) }
    dend_38 { pt3dadd( 1.00829, -189.134, 14.2389, 0.55 ) }
    dend_38 { pt3dadd( 0.825254, -196.868, 14.8734, 0.55 ) }
    dend_38 { pt3dadd( 0.093876, -204.56, 14.1256, 0.55 ) }
    dend_38 { pt3dadd( -0.594442, -212.281, 13.7114, 0.55 ) }
    dend_38 { pt3dadd( -0.779311, -219.97, 12.6622, 0.55 ) }
    dend_38 { pt3dadd( -1.80602, -227.663, 12.8085, 0.55 ) }
    dend_38 { pt3dadd( -2.80977, -235.161, 14.5518, 0.55 ) }
    dend_38 { pt3dadd( -4.30699, -242.394, 16.9385, 0.55 ) }
    dend_38 { pt3dadd( -4.13867, -249.838, 19.1349, 0.55 ) }
    dend_38 { pt3dadd( -4.79736, -256.995, 22.0685, 0.55 ) }
    dend_38 { pt3dadd( -5.97163, -264.357, 24.2324, 0.55 ) }
    dend_38 { pt3dadd( -7.42345, -271.152, 27.6933, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 48/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 5.0178, -37.1141, 1.94128, 0.55 ) }
    dend_37 { pt3dadd( 6.36957, -38.0718, 1.1472, 0.55 ) }
    dend_37 { pt3dadd( 7.47247, -38.9232, 0.515406, 0.55 ) }
    dend_37 { pt3dadd( 10.172, -41.0963, -0.829165, 0.55 ) }
    dend_37 { pt3dadd( 11.977, -42.542, -1.59859, 0.28 ) }
    dend_37 { pt3dadd( 12.9117, -43.2632, -1.95658, 0.55 ) }
    dend_37 { pt3dadd( 14.7967, -44.6904, -2.60543, 0.28 ) }
    dend_37 { pt3dadd( 15.8476, -45.5617, -2.95429, 0.28 ) }
    dend_37 { pt3dadd( 17.0863, -46.5177, -3.25977, 0.55 ) }
    dend_37 { pt3dadd( 17.88, -47.1223, -3.34565, 0.55 ) }
    dend_37 { pt3dadd( 19.5295, -48.2636, -3.47855, 0.28 ) }
    dend_37 { pt3dadd( 20.1122, -48.6529, -3.53221, 0.55 ) }
    dend_37 { pt3dadd( 22.9613, -50.3913, -3.81962, 0.55 ) }
    dend_37 { pt3dadd( 24.5672, -51.3286, -4.09945, 0.55 ) }
    dend_37 { pt3dadd( 25.4314, -51.8399, -4.31482, 0.55 ) }
    dend_37 { pt3dadd( 27.1533, -52.8482, -4.84693, 0.55 ) }
    dend_37 { pt3dadd( 29.329, -54.0259, -5.61314, 0.55 ) }
    dend_37 { pt3dadd( 31.5213, -55.1682, -6.41817, 0.55 ) }
    dend_37 { pt3dadd( 33.313, -56.0759, -7.08775, 0.28 ) }
    dend_37 { pt3dadd( 34.608, -56.7897, -7.6099, 0.55 ) }
    dend_37 { pt3dadd( 36.6576, -57.8974, -8.509, 0.55 ) }
    dend_37 { pt3dadd( 38.8919, -59.1253, -9.53093, 0.55 ) }
    dend_37 { pt3dadd( 40.5678, -60.0916, -10.3168, 0.28 ) }
    dend_37 { pt3dadd( 40.9991, -60.3527, -10.5106, 0.55 ) }
    dend_37 { pt3dadd( 42.6007, -61.2274, -11.1895, 0.28 ) }
    dend_37 { pt3dadd( 44.6489, -62.2918, -12.0086, 0.28 ) }
    dend_37 { pt3dadd( 45.8187, -62.8986, -12.4859, 0.55 ) }
    dend_37 { pt3dadd( 46.8165, -63.4072, -12.9506, 0.55 ) }
    dend_37 { pt3dadd( 47.7483, -63.8169, -13.4266, 0.28 ) }
    dend_37 { pt3dadd( 49.6624, -64.65, -14.5665, 0.55 ) }
    dend_37 { pt3dadd( 50.7678, -65.1338, -15.2521, 0.28 ) }
    dend_37 { pt3dadd( 51.9005, -65.6304, -16.0662, 0.55 ) }
    dend_37 { pt3dadd( 53.6538, -66.4354, -17.4265, 0.28 ) }
    dend_37 { pt3dadd( 55.136, -67.1785, -18.7882, 0.55 ) }
    dend_37 { pt3dadd( 57.0684, -68.275, -20.7065, 0.28 ) }
    dend_37 { pt3dadd( 57.8448, -68.7518, -21.5222, 0.55 ) }
    dend_37 { pt3dadd( 60.2555, -70.1561, -24.19, 0.28 ) }
    dend_37 { pt3dadd( 61.3299, -70.7812, -25.4432, 0.55 ) }
    dend_37 { pt3dadd( 64.8175, -72.8217, -29.9096, 0.28 ) }
    dend_37 { pt3dadd( 65.2891, -73.1163, -30.5801, 0.28 ) }
    dend_37 { pt3dadd( 65.7849, -73.4242, -31.2955, 0.55 ) }
    dend_37 { pt3dadd( 67.8257, -74.7095, -34.2731, 0.28 ) }
    dend_37 { pt3dadd( 68.2244, -74.9676, -34.8693, 0.55 ) }
    dend_37 { pt3dadd( 70.0394, -76.0774, -37.6421, 0.28 ) }
    dend_37 { pt3dadd( 70.7925, -76.5651, -38.8384, 0.55 ) }
    dend_37 { pt3dadd( 71.9016, -77.2732, -40.69, 0.28 ) }
    dend_37 { pt3dadd( 72.5657, -77.7168, -41.8213, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 95/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 41.9679, -68.7697, 34.1678, 0.28 ) }
    dend_35 { pt3dadd( 42.0884, -73.136, 34.0191, 0.28 ) }
    dend_35 { pt3dadd( 42.1143, -74.8801, 34.0285, 0.55 ) }
    dend_35 { pt3dadd( 42.3411, -79.232, 34.4725, 0.28 ) }
    dend_35 { pt3dadd( 42.5386, -81.076, 34.6869, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_35 { pt3dadd( 42.8177, -84.7417, 35.2857, 0.28 ) }
    dend_35 { pt3dadd( 42.9522, -86.5082, 35.5743, 0.28 ) }
    dend_35 { pt3dadd( 43.1194, -88.9243, 35.9071, 0.28 ) }
    dend_35 { pt3dadd( 43.4271, -93.1046, 36.7942, 0.28 ) }
    dend_35 { pt3dadd( 43.6757, -96.4551, 37.8749, 0.28 ) }
    dend_35 { pt3dadd( 44.1451, -100.275, 39.295, 0.55 ) }
    dend_35 { pt3dadd( 45.9739, -110.472, 42.3707, 0.55 ) }
    dend_35 { pt3dadd( 46.2904, -120.57, 46.2018, 0.55 ) }
    dend_35 { pt3dadd( 46.7286, -130.463, 50.5265, 0.55 ) }
    dend_35 { pt3dadd( 46.9594, -139.234, 56.8345, 0.55 ) }
    dend_35 { pt3dadd( 47.8953, -148.071, 62.9809, 0.55 ) }
    dend_35 { pt3dadd( 47.5627, -156.782, 69.3661, 0.55 ) }
    dend_35 { pt3dadd( 47.1879, -166.676, 73.696, 0.55 ) }
    dend_35 { pt3dadd( 45.4466, -175.941, 78.976, 0.55 ) }
    dend_35 { pt3dadd( 42.7201, -184.926, 84.325, 0.55 ) }
    dend_35 { pt3dadd( 41.8921, -193.66, 90.6332, 0.55 ) }
    dend_35 { pt3dadd( 41.1471, -202.212, 97.1959, 0.55 ) }
    dend_35 { pt3dadd( 39.455, -210.297, 104.161, 0.55 ) }
    dend_35 { pt3dadd( 35.4677, -217.168, 111.487, 0.55 ) }
    dend_35 { pt3dadd( 30.406, -222.618, 119.325, 0.55 ) }
    dend_35 { pt3dadd( 24.615, -229.169, 125.674, 0.55 ) }
    dend_35 { pt3dadd( 17.7144, -233.289, 132.897, 0.55 ) }
    dend_35 { pt3dadd( 12.2318, -238.341, 140.719, 0.55 ) }
    dend_35 { pt3dadd( 7.79281, -243.18, 149.301, 0.55 ) }
    dend_35 { pt3dadd( 2.28804, -247.264, 157.654, 0.55 ) }
    dend_35 { pt3dadd( -1.90763, -251.062, 166.859, 0.55 ) }
    dend_35 { pt3dadd( -5.36593, -255.069, 176.28, 0.55 ) }
    dend_35 { pt3dadd( -9.10211, -257.187, 186.195, 0.55 ) }
    dend_35 { pt3dadd( -14.2188, -257.692, 195.7, 0.55 ) }
    dend_35 { pt3dadd( -18.6056, -256.227, 205.465, 0.55 ) }
    dend_35 { pt3dadd( -21.388, -254.981, 215.832, 0.55 ) }
    dend_35 { pt3dadd( -24.487, -252.535, 225.891, 0.55 ) }
    dend_35 { pt3dadd( -27.477, -251.344, 236.206, 0.55 ) }
    dend_35 { pt3dadd( -28.7495, -251.446, 246.936, 0.55 ) }
    dend_35 { pt3dadd( -30.2962, -251.094, 257.625, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 35/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 41.9679, -68.7697, 34.1678, 0.28 ) }
    dend_34 { pt3dadd( 44.8949, -68.9511, 35.6071, 0.28 ) }
    dend_34 { pt3dadd( 46.6614, -69.1797, 36.4444, 0.55 ) }
    dend_34 { pt3dadd( 49.1811, -69.634, 37.5293, 0.28 ) }
    dend_34 { pt3dadd( 50.9209, -70.0939, 38.1853, 0.55 ) }
    dend_34 { pt3dadd( 51.5859, -70.2973, 38.4002, 0.55 ) }
    dend_34 { pt3dadd( 54.4083, -71.2506, 39.2443, 0.28 ) }
    dend_34 { pt3dadd( 55.6245, -71.7599, 39.5347, 0.28 ) }
    dend_34 { pt3dadd( 56.7121, -72.296, 39.7633, 0.55 ) }
    dend_34 { pt3dadd( 58.6838, -73.423, 40.0951, 0.28 ) }
    dend_34 { pt3dadd( 61.8362, -75.2224, 40.5439, 0.28 ) }
    dend_34 { pt3dadd( 62.4735, -75.5804, 40.6133, 0.55 ) }
    dend_34 { pt3dadd( 73.2805, -79.7629, 42.772, 0.55 ) }
    dend_34 { pt3dadd( 84.174, -84.22, 43.4125, 0.55 ) }
    dend_34 { pt3dadd( 93.989, -90.7376, 43.7742, 0.55 ) }
    dend_34 { pt3dadd( 105.065, -94.4858, 45.2633, 0.55 ) }
    dend_34 { pt3dadd( 116.153, -98.4319, 45.9124, 0.55 ) }
    dend_34 { pt3dadd( 127.191, -102.498, 45.1581, 0.55 ) }
    dend_34 { pt3dadd( 137.725, -107.686, 46.1914, 0.55 ) }
    dend_34 { pt3dadd( 147.262, -113.78, 49.4872, 0.55 ) }
    dend_34 { pt3dadd( 156.456, -120.89, 51.4519, 0.55 ) }
    dend_34 { pt3dadd( 165.791, -126.754, 55.6258, 0.55 ) }
    dend_34 { pt3dadd( 175.158, -133.564, 57.824, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 58/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -16.1875, 64.7258, -6.4304, 0.55 ) }
    dend_9 { pt3dadd( -16.1886, 65.9495, -6.66722, 0.55 ) }
    dend_9 { pt3dadd( -16.1988, 67.4077, -6.97414, 0.55 ) }
    dend_9 { pt3dadd( -16.2634, 68.7662, -7.39176, 0.55 ) }
    dend_9 { pt3dadd( -16.2695, 68.8542, -7.42193, 0.55 ) }
    dend_9 { pt3dadd( -16.3606, 69.806, -7.80932, 0.83 ) }
    dend_9 { pt3dadd( -16.4762, 70.8805, -8.25953, 0.55 ) }
    dend_9 { pt3dadd( -16.5662, 71.4492, -8.56529, 0.83 ) }
    dend_9 { pt3dadd( -16.7593, 72.666, -9.31492, 0.55 ) }
    dend_9 { pt3dadd( -16.8176, 73.0307, -9.54811, 0.83 ) }
    dend_9 { pt3dadd( -16.9915, 74.1256, -10.2053, 0.55 ) }
    dend_9 { pt3dadd( -17.0715, 74.8185, -10.5867, 0.83 ) }
    dend_9 { pt3dadd( -17.173, 76.3264, -11.2896, 0.55 ) }
    dend_9 { pt3dadd( -17.2096, 77.4974, -11.7392, 0.55 ) }
    dend_9 { pt3dadd( -17.2184, 78.4925, -12.0245, 0.55 ) }
    dend_9 { pt3dadd( -17.2316, 79.1309, -12.1989, 0.83 ) }
    dend_9 { pt3dadd( -17.2697, 80.7311, -12.5287, 0.28 ) }
    dend_9 { pt3dadd( -17.3052, 81.353, -12.6709, 0.55 ) }
    dend_9 { pt3dadd( -17.4072, 82.3869, -12.923, 0.28 ) }
    dend_9 { pt3dadd( -17.5014, 83.0383, -13.1464, 0.55 ) }
    dend_9 { pt3dadd( -17.7572, 84.3522, -13.7178, 0.28 ) }
    dend_9 { pt3dadd( -17.9309, 85.0684, -14.0846, 0.55 ) }
    dend_9 { pt3dadd( -18.4181, 86.5243, -14.9468, 0.28 ) }
    dend_9 { pt3dadd( -18.7158, 87.3583, -15.4668, 0.55 ) }
    dend_9 { pt3dadd( -19.0759, 88.3049, -16.069, 0.28 ) }
    dend_9 { pt3dadd( -19.309, 88.8838, -16.4212, 0.55 ) }
    dend_9 { pt3dadd( -19.4556, 89.2444, -16.6102, 0.28 ) }
    dend_9 { pt3dadd( -19.7667, 90.0258, -17.0095, 0.55 ) }
    dend_9 { pt3dadd( -20.1464, 91.0864, -17.408, 0.28 ) }
    dend_9 { pt3dadd( -20.3075, 91.5816, -17.5633, 0.55 ) }
    dend_9 { pt3dadd( -20.4196, 91.9892, -17.6696, 0.28 ) }
    dend_9 { pt3dadd( -20.5271, 92.4926, -17.7954, 0.83 ) }
    dend_9 { pt3dadd( -20.7875, 94.0542, -18.024, 0.28 ) }
    dend_9 { pt3dadd( -20.8607, 94.6262, -18.044, 0.55 ) }
    dend_9 { pt3dadd( -20.9196, 95.177, -18.0302, 0.28 ) }
    dend_9 { pt3dadd( -21.0035, 96.2005, -17.9929, 0.55 ) }
    dend_9 { pt3dadd( -21.0388, 96.6007, -17.9559, 0.83 ) }
    dend_9 { pt3dadd( -21.1712, 97.9809, -17.9038, 0.28 ) }
    dend_9 { pt3dadd( -21.2654, 98.8657, -17.8806, 0.55 ) }
    dend_9 { pt3dadd( -21.339, 99.5892, -17.8999, 0.28 ) }
    dend_9 { pt3dadd( -21.4098, 100.475, -17.9529, 0.55 ) }
    dend_9 { pt3dadd( -21.4884, 102.29, -18.1034, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_9 { pt3dadd( -21.4704, 104.188, -18.2617, 0.55 ) }
    dend_9 { pt3dadd( -21.368, 105.964, -18.4225, 0.28 ) }
    dend_9 { pt3dadd( -21.2472, 107.14, -18.4938, 0.55 ) }
    dend_9 { pt3dadd( -21.1441, 107.945, -18.498, 0.55 ) }
    dend_9 { pt3dadd( -21.0201, 108.745, -18.4869, 0.55 ) }
    dend_9 { pt3dadd( -20.7913, 109.978, -18.4549, 0.28 ) }
    dend_9 { pt3dadd( -20.6903, 110.498, -18.4443, 0.55 ) }
    dend_9 { pt3dadd( -20.5226, 111.29, -18.4871, 0.28 ) }
    dend_9 { pt3dadd( -20.3796, 112.059, -18.5971, 0.55 ) }
    dend_9 { pt3dadd( -20.2023, 113.253, -18.8368, 0.28 ) }
    dend_9 { pt3dadd( -20.0786, 114.376, -19.1677, 0.55 ) }
    dend_9 { pt3dadd( -19.8953, 116.521, -19.9139, 0.28 ) }
    dend_9 { pt3dadd( -19.865, 116.91, -20.0508, 0.83 ) }
    dend_9 { pt3dadd( -19.7539, 118.565, -20.6343, 0.28 ) }
    dend_9 { pt3dadd( -19.6991, 119.441, -20.9554, 0.83 ) }
    dend_9 { pt3dadd( -19.5884, 121.483, -21.6707, 0.28 ) }
    dend_9 { pt3dadd( -19.5412, 122.468, -21.9847, 0.55 ) }
    dend_9 { pt3dadd( -19.5161, 123.343, -22.2364, 0.28 ) }
    dend_9 { pt3dadd( -19.5009, 123.852, -22.3815, 0.55 ) }
    dend_9 { pt3dadd( -19.4691, 124.595, -22.5622, 0.28 ) }
    dend_9 { pt3dadd( -19.4135, 125.467, -22.7688, 0.55 ) }
    dend_9 { pt3dadd( -19.2863, 127.492, -23.17, 0.55 ) }
    dend_9 { pt3dadd( -19.212, 128.797, -23.4345, 0.28 ) }
    dend_9 { pt3dadd( -19.1551, 129.704, -23.6287, 0.55 ) }
    dend_9 { pt3dadd( -19.0764, 130.618, -23.8076, 0.28 ) }
    dend_9 { pt3dadd( -18.9624, 131.704, -23.9833, 0.55 ) }
    dend_9 { pt3dadd( -18.7881, 133.091, -24.2164, 0.55 ) }
    dend_9 { pt3dadd( -18.6838, 133.714, -24.317, 0.28 ) }
    dend_9 { pt3dadd( -18.5382, 134.467, -24.4177, 0.55 ) }
    dend_9 { pt3dadd( -18.3546, 135.414, -24.5452, 0.28 ) }
    dend_9 { pt3dadd( -18.1795, 136.296, -24.6666, 0.55 ) }
    dend_9 { pt3dadd( -17.9993, 137.204, -24.8046, 0.28 ) }
    dend_9 { pt3dadd( -17.6869, 138.846, -25.0537, 0.55 ) }
    dend_9 { pt3dadd( -17.2091, 141.673, -25.4514, 0.28 ) }
    dend_9 { pt3dadd( -17.0945, 142.435, -25.5624, 0.55 ) }
    dend_9 { pt3dadd( -16.9209, 143.627, -25.7479, 0.28 ) }
    dend_9 { pt3dadd( -16.7833, 144.604, -25.8988, 0.55 ) }
    dend_9 { pt3dadd( -16.6031, 145.894, -26.0511, 0.28 ) }
    dend_9 { pt3dadd( -16.519, 146.59, -26.1299, 0.55 ) }
    dend_9 { pt3dadd( -16.3697, 147.588, -26.2489, 0.28 ) }
    dend_9 { pt3dadd( -16.2318, 148.405, -26.3311, 0.55 ) }
    dend_9 { pt3dadd( -16.1201, 149.043, -26.4048, 0.55 ) }
    dend_9 { pt3dadd( -15.7186, 150.86, -26.5858, 0.28 ) }
    dend_9 { pt3dadd( -15.4813, 151.83, -26.7316, 0.55 ) }
    dend_9 { pt3dadd( -15.1156, 153.27, -26.9478, 0.55 ) }
    dend_9 { pt3dadd( -14.8593, 154.365, -27.1418, 0.55 ) }
    dend_9 { pt3dadd( -14.4009, 156.369, -27.5451, 0.28 ) }
    dend_9 { pt3dadd( -13.9816, 158.124, -27.9371, 0.55 ) }
    dend_9 { pt3dadd( -13.5262, 159.959, -28.3719, 0.28 ) }
    dend_9 { pt3dadd( -13.1557, 161.386, -28.6851, 0.55 ) }
    dend_9 { pt3dadd( -12.8155, 162.772, -28.9708, 0.28 ) }
    dend_9 { pt3dadd( -12.659, 163.395, -29.097, 0.55 ) }
    dend_9 { pt3dadd( -12.3182, 164.722, -29.2794, 0.28 ) }
    dend_9 { pt3dadd( -12.0873, 165.68, -29.3231, 0.55 ) }
    dend_9 { pt3dadd( -11.9659, 166.065, -29.2911, 0.28 ) }
    dend_9 { pt3dadd( -11.6468, 166.911, -29.226, 0.55 ) }
    dend_9 { pt3dadd( -11.2939, 167.739, -29.1554, 0.28 ) }
    dend_9 { pt3dadd( -11.0545, 168.291, -29.0706, 0.55 ) }
    dend_9 { pt3dadd( -10.4381, 169.629, -28.7254, 0.55 ) }
    dend_9 { pt3dadd( -9.92077, 170.755, -28.4069, 0.55 ) }
    dend_9 { pt3dadd( -9.41964, 171.856, -28.0838, 0.28 ) }
    dend_9 { pt3dadd( -9.02494, 172.752, -27.8218, 0.55 ) }
    dend_9 { pt3dadd( -8.14324, 174.95, -27.1887, 0.28 ) }
    dend_9 { pt3dadd( -7.82354, 175.833, -26.9606, 0.55 ) }
    dend_9 { pt3dadd( -7.4512, 176.921, -26.8054, 0.28 ) }
    dend_9 { pt3dadd( -7.1878, 177.811, -26.7532, 0.55 ) }
    dend_9 { pt3dadd( -6.8931, 178.8, -26.756, 0.28 ) }
    dend_9 { pt3dadd( -6.67021, 179.537, -26.8309, 0.28 ) }
    dend_9 { pt3dadd( -6.36995, 180.526, -27.0486, 0.55 ) }
    dend_9 { pt3dadd( -5.70422, 182.625, -27.5519, 0.28 ) }
    dend_9 { pt3dadd( -5.29981, 183.821, -27.7971, 0.55 ) }
    dend_9 { pt3dadd( -4.90036, 184.969, -28.0115, 0.28 ) }
    dend_9 { pt3dadd( -4.52007, 186.07, -28.2147, 0.55 ) }
    dend_9 { pt3dadd( -4.24097, 186.935, -28.3451, 0.28 ) }
    dend_9 { pt3dadd( -3.92797, 188.031, -28.4585, 0.55 ) }
    dend_9 { pt3dadd( -3.6226, 189.415, -28.5117, 0.28 ) }
    dend_9 { pt3dadd( -3.57951, 189.67, -28.5228, 0.55 ) }
    dend_9 { pt3dadd( -3.31968, 192.005, -28.6234, 0.28 ) }
    dend_9 { pt3dadd( -3.1967, 193.942, -28.6795, 0.28 ) }
    dend_9 { pt3dadd( -3.17996, 194.966, -28.7068, 0.55 ) }
    dend_9 { pt3dadd( -3.22472, 196.469, -28.7537, 0.28 ) }
    dend_9 { pt3dadd( -3.25677, 197.023, -28.7659, 0.55 ) }
    dend_9 { pt3dadd( -3.34445, 198.173, -28.787, 0.28 ) }
    dend_9 { pt3dadd( -3.42151, 198.866, -28.7528, 0.55 ) }
    dend_9 { pt3dadd( -3.53922, 199.838, -28.6854, 0.28 ) }
    dend_9 { pt3dadd( -3.63287, 200.803, -28.5817, 0.55 ) }
    dend_9 { pt3dadd( -3.71152, 201.997, -28.445, 0.28 ) }
    dend_9 { pt3dadd( -3.76978, 203.191, -28.2859, 0.55 ) }
    dend_9 { pt3dadd( -3.8334, 204.561, -28.0768, 0.28 ) }
    dend_9 { pt3dadd( -3.86505, 205.453, -27.9168, 0.55 ) }
    dend_9 { pt3dadd( -3.90913, 206.488, -27.674, 0.28 ) }
    dend_9 { pt3dadd( -3.97552, 207.351, -27.4837, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 92/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -16.1875, 64.7258, -6.4304, 0.28 ) }
    dend_6 { pt3dadd( -17.2532, 66.6869, -6.2367, 0.28 ) }
    dend_6 { pt3dadd( -18.2909, 68.5965, -6.04809, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 95/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -18.2909, 68.5965, -6.04809, 0.28 ) }
    dend_8 { pt3dadd( -18.4763, 70.8412, -6.41409, 0.28 ) }
    dend_8 { pt3dadd( -18.6018, 72.094, -6.58279, 0.83 ) }
    dend_8 { pt3dadd( -18.7899, 74.1568, -6.84969, 0.28 ) }
    dend_8 { pt3dadd( -18.8944, 75.2105, -6.97214, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_8 { pt3dadd( -19.1385, 77.3935, -7.20619, 0.28 ) }
    dend_8 { pt3dadd( -19.335, 78.9063, -7.23361, 0.83 ) }
    dend_8 { pt3dadd( -19.574, 80.6196, -7.21253, 0.28 ) }
    dend_8 { pt3dadd( -19.7374, 81.5856, -7.11618, 0.83 ) }
    dend_8 { pt3dadd( -20.0146, 83.074, -6.81877, 0.83 ) }
    dend_8 { pt3dadd( -20.3221, 84.7649, -6.39356, 0.83 ) }
    dend_8 { pt3dadd( -20.9464, 87.8217, -5.20303, 0.28 ) }
    dend_8 { pt3dadd( -21.0285, 88.2535, -5.01247, 0.83 ) }
    dend_8 { pt3dadd( -21.2698, 89.6114, -4.41157, 0.28 ) }
    dend_8 { pt3dadd( -21.5182, 90.9727, -3.81681, 0.55 ) }
    dend_8 { pt3dadd( -21.9343, 93.2737, -2.82138, 0.55 ) }
    dend_8 { pt3dadd( -22.5699, 96.6459, -1.40062, 0.28 ) }
    dend_8 { pt3dadd( -22.8484, 98.1996, -0.861371, 0.55 ) }
    dend_8 { pt3dadd( -23.0757, 99.7052, -0.610908, 0.28 ) }
    dend_8 { pt3dadd( -23.2825, 101.318, -0.668165, 0.28 ) }
    dend_8 { pt3dadd( -23.4075, 102.377, -0.906506, 0.55 ) }
    dend_8 { pt3dadd( -23.6086, 103.949, -1.5132, 0.28 ) }
    dend_8 { pt3dadd( -23.803, 105.368, -2.20845, 0.28 ) }
    dend_8 { pt3dadd( -24.8694, 111.006, -4.92183, 0.28 ) }
    dend_8 { pt3dadd( -25.0872, 111.966, -5.37907, 0.55 ) }
    dend_8 { pt3dadd( -25.5248, 113.693, -6.21776, 0.28 ) }
    dend_8 { pt3dadd( -25.8698, 115.019, -6.82654, 0.83 ) }
    dend_8 { pt3dadd( -26.468, 117.207, -7.68568, 0.28 ) }
    dend_8 { pt3dadd( -27.0004, 119.222, -8.34985, 0.55 ) }
    dend_8 { pt3dadd( -27.5802, 121.611, -8.94115, 0.55 ) }
    dend_8 { pt3dadd( -28.1568, 124.517, -9.73401, 0.28 ) }
    dend_8 { pt3dadd( -28.4604, 126.375, -10.2513, 0.28 ) }
    dend_8 { pt3dadd( -28.8307, 129.769, -11.2092, 0.55 ) }
    dend_8 { pt3dadd( -29.0786, 133.07, -12.1133, 0.28 ) }
    dend_8 { pt3dadd( -29.1203, 134.528, -12.5165, 0.55 ) }
    dend_8 { pt3dadd( -29.1188, 136.347, -12.9702, 0.28 ) }
    dend_8 { pt3dadd( -29.061, 138.509, -13.5098, 0.55 ) }
    dend_8 { pt3dadd( -28.9242, 142.248, -14.4682, 0.28 ) }
    dend_8 { pt3dadd( -28.8602, 143.332, -14.7303, 0.55 ) }
    dend_8 { pt3dadd( -28.7403, 145.206, -15.109, 0.28 ) }
    dend_8 { pt3dadd( -28.6275, 146.91, -15.4275, 0.83 ) }
    dend_8 { pt3dadd( -28.3233, 150.484, -16.0105, 0.28 ) }
    dend_8 { pt3dadd( -28.106, 152.32, -16.3712, 0.55 ) }
    dend_8 { pt3dadd( -27.8932, 154.285, -16.7193, 0.28 ) }
    dend_8 { pt3dadd( -27.7544, 155.611, -16.9573, 0.55 ) }
    dend_8 { pt3dadd( -27.5902, 157.332, -17.232, 0.55 ) }
    dend_8 { pt3dadd( -27.3029, 160.465, -17.7198, 0.55 ) }
    dend_8 { pt3dadd( -27.109, 164.126, -18.1515, 0.28 ) }
    dend_8 { pt3dadd( -27.0174, 165.805, -18.392, 0.55 ) }
    dend_8 { pt3dadd( -26.9862, 166.899, -18.5531, 0.28 ) }
    dend_8 { pt3dadd( -26.9232, 168.616, -18.8935, 0.83 ) }
    dend_8 { pt3dadd( -26.8278, 170.409, -19.2503, 0.28 ) }
    dend_8 { pt3dadd( -26.7636, 172.249, -19.6304, 0.55 ) }
    dend_8 { pt3dadd( -26.7118, 174.416, -20.0388, 0.55 ) }
    dend_8 { pt3dadd( -26.6171, 176.355, -20.5808, 0.55 ) }
    dend_8 { pt3dadd( -26.4906, 179.523, -21.5725, 0.28 ) }
    dend_8 { pt3dadd( -26.4655, 180.793, -21.9884, 0.55 ) }
    dend_8 { pt3dadd( -26.4504, 183.408, -22.8188, 0.28 ) }
    dend_8 { pt3dadd( -26.5025, 185.04, -23.2817, 0.55 ) }
    dend_8 { pt3dadd( -26.8599, 188.525, -24.163, 0.28 ) }
    dend_8 { pt3dadd( -27.0427, 189.866, -24.5136, 0.55 ) }
    dend_8 { pt3dadd( -27.5071, 192.124, -25.0495, 0.55 ) }
    dend_8 { pt3dadd( -27.743, 193.137, -25.3576, 0.55 ) }
    dend_8 { pt3dadd( -28.2019, 195.022, -25.9786, 0.55 ) }
    dend_8 { pt3dadd( -28.7249, 197.003, -26.686, 0.28 ) }
    dend_8 { pt3dadd( -29.1273, 198.395, -27.192, 0.55 ) }
    dend_8 { pt3dadd( -29.5692, 199.957, -27.852, 0.28 ) }
    dend_8 { pt3dadd( -30.4015, 202.728, -29.1835, 0.55 ) }
    dend_8 { pt3dadd( -30.8591, 204.296, -30.0093, 0.28 ) }
    dend_8 { pt3dadd( -31.0496, 205.034, -30.405, 0.55 ) }
    dend_8 { pt3dadd( -31.4595, 206.512, -31.0212, 0.28 ) }
    dend_8 { pt3dadd( -31.6226, 207.154, -31.2385, 0.55 ) }
    dend_8 { pt3dadd( -31.8952, 208.534, -31.6291, 0.28 ) }
    dend_8 { pt3dadd( -32.3191, 211.096, -32.1453, 0.55 ) }
    dend_8 { pt3dadd( -32.5222, 213.275, -32.59, 0.28 ) }
    dend_8 { pt3dadd( -32.6726, 216.069, -33.0843, 0.55 ) }
    dend_8 { pt3dadd( -32.7455, 218.38, -33.3814, 0.55 ) }
    dend_8 { pt3dadd( -32.7516, 220.796, -33.4957, 0.28 ) }
    dend_8 { pt3dadd( -32.7338, 221.644, -33.468, 0.55 ) }
    dend_8 { pt3dadd( -32.6897, 225.481, -33.0302, 0.28 ) }
    dend_8 { pt3dadd( -32.6618, 226.843, -32.9132, 0.28 ) }
    dend_8 { pt3dadd( -32.6481, 228.543, -32.7428, 0.55 ) }
    dend_8 { pt3dadd( -32.7672, 232.267, -32.053, 0.28 ) }
    dend_8 { pt3dadd( -32.8211, 233.722, -31.7622, 0.83 ) }
    dend_8 { pt3dadd( -32.9028, 236.128, -31.2517, 0.55 ) }
    dend_8 { pt3dadd( -33.0656, 240.312, -30.2658, 0.55 ) }
    dend_8 { pt3dadd( -33.1523, 243.716, -29.5386, 0.28 ) }
    dend_8 { pt3dadd( -33.1852, 245.995, -29.0317, 0.55 ) }
    dend_8 { pt3dadd( -33.202, 248.6, -28.4486, 0.55 ) }
    dend_8 { pt3dadd( -33.208, 250.106, -27.9914, 0.28 ) }
    dend_8 { pt3dadd( -33.2104, 251.357, -27.4815, 0.55 ) }
    dend_8 { pt3dadd( -33.234, 252.562, -26.8177, 0.55 ) }
    dend_8 { pt3dadd( -33.2599, 254.032, -26.0426, 0.28 ) }
    dend_8 { pt3dadd( -33.3542, 255.564, -25.2996, 0.55 ) }
    dend_8 { pt3dadd( -33.624, 258.266, -23.9746, 0.28 ) }
    dend_8 { pt3dadd( -33.7754, 259.658, -23.3184, 0.55 ) }
    dend_8 { pt3dadd( -34.0067, 261.491, -22.4475, 0.28 ) }
    dend_8 { pt3dadd( -34.1979, 262.979, -21.6862, 0.55 ) }
    dend_8 { pt3dadd( -34.6401, 266.41, -19.9644, 0.28 ) }
    dend_8 { pt3dadd( -34.7854, 267.588, -19.378, 0.55 ) }
    dend_8 { pt3dadd( -35.1483, 270.725, -17.9019, 0.28 ) }
    dend_8 { pt3dadd( -35.3697, 272.687, -17.0077, 0.55 ) }
    dend_8 { pt3dadd( -35.8287, 276.903, -15.0106, 0.28 ) }
    dend_8 { pt3dadd( -35.985, 278.428, -14.2455, 0.28 ) }
    dend_8 { pt3dadd( -36.1208, 279.985, -13.4874, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_8 { pt3dadd( -36.2622, 282.051, -12.6045, 0.28 ) }
    dend_8 { pt3dadd( -36.3298, 283.256, -12.1609, 0.55 ) }
    dend_8 { pt3dadd( -36.4347, 286.051, -11.2856, 0.28 ) }
    dend_8 { pt3dadd( -36.493, 287.296, -10.9655, 0.55 ) }
    dend_8 { pt3dadd( -36.5905, 289.415, -10.3373, 0.28 ) }
    dend_8 { pt3dadd( -36.6307, 291.149, -9.82862, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 6/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -18.2909, 68.5965, -6.04809, 0.28 ) }
    dend_7 { pt3dadd( -21.8411, 70.3195, -5.79772, 0.28 ) }
    dend_7 { pt3dadd( -24.251, 71.4892, -5.62776, 0.28 ) }
    dend_7 { pt3dadd( -26.4668, 72.5646, -5.47149, 0.55 ) }
    dend_7 { pt3dadd( -27.5415, 73.0862, -5.39569, 0.55 ) }
    dend_7 { pt3dadd( -30.9754, 74.7528, -5.15351, 0.28 ) }
    dend_7 { pt3dadd( -33.5325, 75.9938, -4.97318, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_24, dend_23, dend_16, dend_13, dend_0, dend_39, dend_30, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_10, dend_1, dend_47, dend_40, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_12, dend_11, dend_3, dend_2, dend_49, dend_48, dend_44, dend_41, dend_36, dend_33, dend_5, dend_4, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_35, dend_34, dend_9, dend_6, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_29, dend_24, dend_23, dend_16, dend_13, dend_0, dend_39, dend_30, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_10, dend_1, dend_47, dend_40, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_12, dend_11, dend_3, dend_2, dend_49, dend_48, dend_44, dend_41, dend_36, dend_33, dend_5, dend_4, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_35, dend_34, dend_9, dend_6, dend_8, dend_7]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_9 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_23 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_13 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_25 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_15 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_14 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_21 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_12 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_2 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_49 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_48 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_44 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_33 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_4 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_46 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_45 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_42 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_38 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_37 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_35 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_34 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_9 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_8 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_39 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_16 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_40 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_30 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_32 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_24 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_36 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_20 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_47 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_17 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_41 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_10 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_26 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_5 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_6 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_22 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_7 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_27 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_28 OneSecGrp_SectionRef_24.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, axon_1, axon_1, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 21
    dend_13 nseg = 5
    dend_25 nseg = 3
    dend_15 nseg = 11
    dend_14 nseg = 19
    dend_21 nseg = 9
    dend_19 nseg = 3
    dend_18 nseg = 3
    dend_12 nseg = 7
    dend_11 nseg = 9
    dend_2 nseg = 15
    dend_49 nseg = 27
    dend_48 nseg = 9
    dend_44 nseg = 3
    dend_33 nseg = 3
    dend_4 nseg = 11
    dend_46 nseg = 9
    dend_45 nseg = 7
    dend_43 nseg = 9
    dend_42 nseg = 5
    dend_38 nseg = 13
    dend_37 nseg = 5
    dend_35 nseg = 17
    dend_34 nseg = 7
    dend_9 nseg = 7
    dend_8 nseg = 11
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_NBC_46256e0cca_0_0


