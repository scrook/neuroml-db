// Cell: cNAC187_L5_DBC_d900bc4e97_0_0
/*
{
  "id" : "cNAC187_L5_DBC_d900bc4e97_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.28115, -11.0873, 1.6054, 2.71903", "-3.90555, -10.0189, 1.46271, 4.54351", "-3.52995, -8.95054, 1.32001, 6.06676", "-3.15435, -7.88215, 1.17732, 7.70089", "-2.77875, -6.81375, 1.03462, 9.50221", "-2.40315, -5.74536, 0.891931, 11.4189", "-2.02755, -4.67696, 0.749237, 12.8756", "-1.65195, -3.60857, 0.606544, 14.0093", "-1.27635, -2.54017, 0.46385, 14.551", "-0.900746, -1.47178, 0.321156, 14.6039", "-0.525145, -0.403386, 0.178462, 14.3615", "-0.149545, 0.665008, 0.0357687, 13.9828", "0.226055, 1.7334, -0.106925, 13.3923", "0.601655, 2.8018, -0.249619, 12.9274", "0.977256, 3.87019, -0.392313, 12.1033", "1.35286, 4.93859, -0.535006, 10.4725", "1.72846, 6.00698, -0.6777, 8.96565", "2.10406, 7.07537, -0.820394, 7.72714", "2.47966, 8.14377, -0.963088, 6.28127", "2.85526, 9.21216, -1.10578, 4.62664", "3.23086, 10.2806, -1.24848, 2.72659" ]
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-6.8285, -4.03579, -7.44048, 0.74", "-6.8285, -4.03579, -7.44048, 0.74", "-7.56361, -5.10871, -7.49126, 0.74", "-7.62241, -5.16513, -7.4963, 0.74", "-8.77205, -5.88216, -7.6006, 0.66", "-9.8884, -6.33413, -7.70107, 0.44", "-11.1828, -6.6798, -7.81279, 0.44", "-12.3823, -6.8194, -8.05386, 0.44", "-13.1499, -6.83971, -8.26369, 1.03", "-14.103, -6.85828, -8.62152, 1.33", "-14.9468, -6.84463, -9.01747, 1.47", "-15.7823, -6.86464, -9.51638, 0.66", "-17.3959, -7.32447, -10.9487, 0.37", "-17.7561, -7.63859, -11.5008, 0.37", "-18.259, -8.41523, -12.6052, 1.11", "-18.2826, -8.47167, -12.6761, 1.11", "-18.4287, -8.98263, -13.2467, 0.88", "-18.6572, -10.1289, -14.384, 0.59", "-18.9209, -11.6415, -15.6945, 1.03", "-18.9657, -11.9041, -15.9346, 1.25", "-18.9852, -11.9943, -16.0157, 1.25", "-19.0863, -12.3888, -16.3749, 1.25", "-19.1242, -12.4945, -16.4777, 1.25", "-19.6507, -13.5139, -17.4654, 0.52", "-20.228, -14.2577, -18.2176, 0.22", "-20.5906, -14.5163, -18.5895, 0.22", "-20.8434, -14.6165, -18.7997, 0.22", "-21.4587, -14.7527, -19.2333, 0.88", "-21.8819, -14.8307, -19.4793, 1.25", "-22.5421, -14.9602, -19.8093, 1.25", "-23.9274, -15.3716, -20.579, 0.29", "-24.3237, -15.5628, -20.8431, 0.29", "-24.9179, -15.9951, -21.2939, 0.29", "-25.5801, -16.639, -21.8355, 0.29", "-26.2376, -17.3955, -22.4147, 0.29", "-26.8661, -18.2184, -22.9846, 0.52", "-27.1146, -18.5856, -23.2088, 0.52", "-27.3314, -18.8724, -23.3918, 0.29", "-27.6573, -19.2694, -23.754, 0.29", "-28.0548, -19.7025, -24.2684, 1.25", "-28.3377, -19.9754, -24.6321, 1.47", "-28.3816, -20.0172, -24.6913, 1.47", "-28.5922, -20.2321, -25.0071, 1.47", "-29.8026, -21.6089, -27.1041, 0.22", "-29.9922, -21.8627, -27.4794, 0.81", "-30.2247, -22.1871, -27.9424, 0.81", "-30.2561, -22.2283, -28.0052, 0.81", "-30.5773, -22.5846, -28.5858, 0.96", "-31.2986, -23.3016, -29.8677, 0.29", "-31.3456, -23.3397, -29.9425, 0.29", "-31.6231, -23.6138, -30.4281, 0.29", "-32.4198, -24.6631, -31.9132, 1.92", "-32.841, -25.3428, -32.7288, 2.58", "-33.255, -26.1222, -33.5576, 2.58", "-33.2851, -26.1778, -33.6096, 2.58", "-34.1386, -27.6984, -34.8933, 0.66", "-34.8021, -28.7117, -35.6938, 0.22", "-34.941, -28.8832, -35.8104, 0.81", "-35.7569, -29.7276, -36.3991, 0.22", "-36.7338, -30.6244, -37.0224, 2.58", "-37.1953, -31.0067, -37.3104, 3.32", "-38.9396, -32.3096, -38.3689, 0.44", "-39.8494, -32.9925, -38.9351, 1.33", "-40.5568, -33.5805, -39.3796, 1.47", "-41.334, -34.3911, -39.9278, 0.22", "-41.4153, -34.4965, -39.9976, 0.22", "-41.9076, -35.1839, -40.4402, 0.22", "-42.3979, -35.9537, -40.8824, 1.69", "-42.5842, -36.2277, -41.0425, 2.06", "-43.9017, -37.8806, -42.2239, 0.22", "-43.948, -37.9308, -42.2678, 0.22", "-44.5177, -38.5511, -42.8651, 0.22", "-44.8039, -38.8655, -43.1906, 0.88", "-45.0799, -39.234, -43.601, 1.11", "-46.2263, -40.9369, -45.4852, 0.22", "-46.2594, -40.9951, -45.5505, 0.22", "-46.6524, -41.7793, -46.4363, 1.84", "-46.824, -42.1847, -46.8838, 1.99", "-47.57, -44.0998, -48.8941, 0.29", "-47.7954, -44.6555, -49.4276, 0.29", "-48.5584, -46.1688, -50.7586, 0.29", "-48.6459, -46.3191, -50.8931, 0.29", "-49.217, -47.1244, -51.6314, 1.11", "-49.5243, -47.5016, -52.0131, 1.47", "-50.3202, -48.3539, -52.926, 0.29", "-51.3813, -49.3837, -54.1174, 2.43", "-52.2355, -50.1004, -55.0023, 2.43", "-53.5446, -51.0824, -56.347, 0.52", "-54.5152, -51.7289, -57.3486, 0.66", "-55.2935, -52.2018, -58.1569, 0.22", "-55.6937, -52.4161, -58.5557, 0.59", "-56.0733, -52.6035, -58.8957, 0.59", "-56.9849, -53.0688, -59.6119, 0.22", "-57.6396, -53.479, -60.0916, 1.18", "-57.9384, -53.7108, -60.2874, 1.33", "-59.1526, -54.8528, -61.1474, 0.37", "-59.8764, -55.6329, -61.6875, 0.22", "-60.4702, -56.3317, -62.1298, 0.22", "-61.1621, -57.2169, -62.6277, 1.55", "-61.6149, -57.8378, -62.9461, 2.06", "-62.7958, -59.5853, -63.7757, 0.22", "-63.0379, -59.9595, -63.9333, 0.52", "-63.2843, -60.295, -64.0798, 0.52", "-64.0456, -61.2244, -64.495, 0.22", "-64.4751, -61.7238, -64.7124, 0.22", "-64.945, -62.2697, -64.9755, 1.11", "-65.3463, -62.7232, -65.1947, 1.33", "-66.5356, -64.0163, -65.9021, 0.22", "-66.9534, -64.4443, -66.1583, 1.03", "-67.1852, -64.6597, -66.3029, 1.03", "-68.4296, -65.7663, -67.0662, 0.22", "-68.8846, -66.1718, -67.3344, 0.22", "-69.2775, -66.5244, -67.5568, 1.18", "-69.6433, -66.839, -67.7532, 1.4", "-71.0798, -68.0479, -68.6085, 0.22", "-71.5502, -68.4311, -68.8854, 1.11", "-71.9021, -68.71, -69.0858, 1.33", "-72.2061, -68.9674, -69.2767, 1.18", "-73.3885, -70.0331, -70.0445, 0.15", "-74.4006, -70.9857, -70.7083, 0.15", "-74.7919, -71.3617, -70.9571, 0.81", "-75.0298, -71.6033, -71.1398, 0.81", "-76.0106, -72.6357, -71.9439, 0.22", "-76.8172, -73.5155, -72.619, 0.22", "-77.5552, -74.3468, -73.2431, 1.47", "-77.8728, -74.6962, -73.526, 1.84", "-79.5647, -76.5619, -75.2813, 0.15", "-79.9719, -76.9912, -75.7373, 0.15", "-80.2168, -77.2414, -76.0425, 0.74", "-80.332, -77.3541, -76.1937, 0.74", "-81.2397, -78.1777, -77.3933, 0.29", "-82.0473, -78.8584, -78.4287, 1.25", "-82.3616, -79.1023, -78.7966, 1.33", "-83.3638, -79.9482, -80.1927, 0.15", "-83.6694, -80.2213, -80.6569, 0.74", "-84.313, -80.8151, -81.6625, 0.22", "-84.3472, -80.847, -81.7145, 0.22", "-84.6196, -81.0951, -82.1114, 0.88", "-86.1641, -82.4958, -84.3373, 0.22", "-86.2151, -82.5408, -84.4051, 0.22", "-86.3662, -82.6607, -84.5727, 0.22", "-87.0461, -83.1377, -85.1636, 1.47", "-87.3647, -83.3367, -85.382, 1.84", "-87.6489, -83.5011, -85.5278, 1.84", "-87.9855, -83.682, -85.6382, 1.84", "-89.4454, -84.6161, -86.4411, 0.15", "-89.5371, -84.6756, -86.5035, 0.15", "-90.2693, -85.115, -87.0677, 0.15", "-90.8953, -85.4947, -87.5721, 0.96", "-91.2797, -85.7439, -87.8901, 0.96", "-93.296, -87.1495, -89.611, 0.22", "-93.8207, -87.5644, -90.0802, 0.22", "-94.4779, -88.111, -90.6558, 0.22", "-95.2258, -88.7515, -91.2737, 1.11", "-95.7279, -89.1989, -91.6644, 1.69", "-95.8945, -89.3613, -91.7812, 1.69", "-97.372, -90.9898, -92.7037, 0.22", "-97.9001, -91.6399, -93.0505, 0.37", "-98.3984, -92.2766, -93.3889, 0.22", "-99.0802, -93.1123, -93.8393, 1.47", "-99.5584, -93.6707, -94.1841, 1.69", "-100.776, -95.0477, -95.0683, 0.22", "-101.809, -96.2442, -95.818, 0.22", "-102.324, -96.8487, -96.2159, 1.4", "-102.813, -97.4251, -96.6085, 1.84", "-104.396, -99.2309, -97.8946, 0.15", "-104.949, -99.8359, -98.3563, 0.15", "-105.47, -100.38, -98.7996, 1.18", "-105.753, -100.677, -99.0506, 1.18", "-105.794, -100.721, -99.0864, 1.18", "-107.081, -102.193, -100.204, 0.22", "-107.694, -102.951, -100.679, 1.25", "-108.568, -104.048, -101.383, 0.15", "-108.917, -104.448, -101.667, 0.88", "-109.098, -104.643, -101.808, 1.03", "-109.66, -105.225, -102.221, 0.15", "-110.303, -105.855, -102.646, 0.15", "-110.814, -106.315, -103.004, 0.74", "-111.775, -107.109, -103.683, 0.22", "-112.603, -107.796, -104.266, 0.22", "-113.346, -108.415, -104.787, 1.99", "-113.683, -108.703, -105.02, 2.28", "-115.57, -110.422, -106.28, 0.22", "-115.834, -110.694, -106.453, 0.52", "-116.714, -111.657, -106.981, 0.15", "-116.766, -111.713, -107.012, 0.15", "-117.172, -112.124, -107.223, 0.81", "-117.22, -112.17, -107.243, 0.81", "-118.557, -113.445, -107.611, 0.22", "-119.536, -114.397, -107.943, 0.22", "-119.602, -114.459, -107.967, 0.22", "-120.537, -115.373, -108.312, 0.22", "-121.189, -116.027, -108.593, 0.81", "-121.249, -116.092, -108.62, 0.81", "-122.258, -117.279, -109.15, 0.22", "-122.845, -117.982, -109.481, 1.47", "-123.057, -118.231, -109.597, 1.77", "-124.668, -120.076, -110.465, 0.22", "-125.14, -120.582, -110.712, 0.52", "-126.212, -121.659, -111.229, 0.22", "-127.521, -122.879, -111.802, 0.22", "-128.191, -123.483, -112.099, 1.18", "-128.395, -123.664, -112.187, 1.4", "-129.973, -125.121, -112.961, 0.15", "-130.331, -125.465, -113.159, 0.66", "-132.093, -127.241, -114.226, 0.15", "-132.936, -128.137, -114.815, 1.69", "-133.196, -128.418, -115.007, 1.84", "-135.087, -130.561, -116.474, 0.22", "-135.439, -130.989, -116.775, 0.66", "-135.488, -131.055, -116.824, 0.66", "-135.965, -131.753, -117.396, 0.15", "-136.172, -132.036, -117.638, 0.59", "-136.238, -132.122, -117.713, 0.59", "-137.032, -133.113, -118.564, 0.22", "-137.749, -133.994, -119.371, 1.33", "-138.501, -134.941, -120.246, 0.15", "-138.842, -135.405, -120.675, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "4.2915, 5.40221, -8.94048, 1.18", "4.32476, 6.28733, -8.65076, 1.18", "4.36796, 7.52679, -8.27128, 1.47", "4.3937, 8.49131, -8.08156, 1.92", "4.40791, 9.7964, -7.96887, 0.81", "4.40357, 10.8803, -7.97061, 0.81", "4.39321, 11.5728, -8.02378, 0.74", "4.38773, 11.686, -8.05754, 0.74", "4.26829, 12.9794, -8.72887, 0.74", "4.19071, 13.6911, -9.25847, 1.11", "4.14809, 14.1175, -9.67509, 1.11", "4.10456, 14.7378, -10.3544, 1.11", "4.08836, 15.881, -11.5659, 1.25", "4.08956, 15.9229, -11.6085, 1.25", "4.19084, 16.9491, -12.5976, 1.03", "4.37065, 18.0864, -13.6336, 0.52", "4.62533, 19.2541, -14.6119, 0.52", "4.84732, 20.0384, -15.1954, 0.81", "4.86471, 20.0879, -15.2234, 0.81", "5.10129, 20.682, -15.5003, 1.18", "5.22846, 20.9257, -15.5607, 1.18", "5.42619, 21.2328, -15.5622, 1.18", "5.4667, 21.2898, -15.5569, 1.18", "5.61225, 21.5067, -15.542, 1.4", "5.69012, 21.6497, -15.5312, 1.4", "5.91796, 22.1829, -15.488, 1.4", "6.09954, 22.7388, -15.4366, 0.88", "6.27575, 23.6137, -15.348, 0.52", "6.31255, 24.4219, -15.3409, 0.37", "6.23989, 25.2775, -15.4407, 0.37", "6.16935, 25.6586, -15.5234, 0.29", "5.97825, 26.3359, -15.7394, 0.29", "5.84561, 26.7321, -15.9295, 0.29", "5.43737, 27.9976, -16.8819, 1.33", "5.21556, 28.7033, -17.5029, 1.92", "5.17299, 28.8787, -17.6746, 2.21", "5.15363, 29.0133, -17.811, 2.21", "5.12936, 29.7504, -18.5744, 2.5", "5.16953, 30.7139, -19.6398, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "1.6115, 9.73122, -2.50048, 3.68", "1.6115, 9.73122, -2.50048, 3.68", "1.01923, 11.5556, -2.79374, 2.8", "0.97915, 11.6761, -2.81907, 2.8", "0.732949, 12.4099, -2.98375, 2.8", "0.622069, 12.7254, -3.05766, 2.8", "0.366826, 13.4355, -3.22948, 2.8", "-0.017979, 14.45, -3.49854, 3.02", "-0.556767, 15.7563, -3.90337, 3.02", "-0.577555, 15.8036, -3.92034, 3.02", "-1.03266, 16.7732, -4.29712, 3.02", "-1.05477, 16.8195, -4.31541, 3.02", "-1.56858, 17.8758, -4.7461, 2.87", "-2.04602, 18.9019, -5.11536, 2.87", "-2.06763, 18.9501, -5.12811, 2.87", "-2.51554, 19.998, -5.34163, 2.73", "-2.98276, 21.1221, -5.5107, 2.58", "-3.00703, 21.1801, -5.51786, 2.58", "-3.67521, 22.7679, -5.66116, 2.36", "-4.34525, 24.3181, -5.77236, 2.06", "-4.9581, 25.6673, -5.86339, 2.06", "-5.3571, 26.5296, -5.92011, 2.65", "-6.06905, 28.0255, -6.00925, 2.73", "-6.65215, 29.2216, -6.08377, 2.95", "-7.19486, 30.2731, -6.16324, 3.17", "-7.69139, 31.1905, -6.24578, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.5085, -10.4416, 0.999524, 4.05", "-3.5085, -10.4416, 0.999524, 4.05", "-4.24332, -12.2326, 0.999524, 3.68", "-4.9459, -13.9452, 0.999524, 3.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.23086, 10.2806, -1.24848, 0.532211", "8.20573, 24.4316, -1.24848, 0.532211", "13.1806, 38.5826, -1.24848, 0.532211" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "5.16953, 30.7139, -19.6398, 1.25", "4.85273, 31.6091, -20.6326, 1.25", "4.59985, 32.4986, -21.5775, 1.77", "4.54708, 32.7157, -21.8049, 1.84", "4.45269, 33.8959, -23.1902, 0.22", "4.54243, 34.7238, -24.2846, 1.33", "4.55532, 34.7661, -24.3505, 1.33", "4.67199, 34.9685, -24.7149, 1.77", "4.71701, 35.0257, -24.824, 1.77", "5.57725, 35.9158, -26.6418, 1.18", "6.25872, 36.4936, -27.9193, 1.4", "7.26248, 37.2208, -29.8516, 0.29", "7.2906, 37.2405, -29.9077, 0.29", "8.11615, 37.8211, -31.59, 1.55", "8.21435, 37.8987, -31.8033, 1.84", "8.24253, 37.9269, -31.8688, 1.84", "9.44014, 39.4785, -34.8693, 0.52", "9.46486, 39.5221, -34.9309, 0.52", "9.59242, 39.8042, -35.257, 0.74", "10.3598, 41.8807, -37.3007, 1.47", "10.6756, 42.9003, -38.1266, 0.29", "10.9334, 43.9086, -38.7738, 1.69", "11.382, 46.2416, -40.0086, 0.15", "11.4915, 46.9488, -40.3843, 0.66", "11.4993, 47.0149, -40.4197, 0.66", "11.6156, 48.2856, -41.1337, 0.15", "11.6845, 49.1855, -41.7112, 1.69", "11.8161, 51.8163, -43.5152, 0.22", "11.8344, 52.4639, -44.0065, 0.59", "11.877, 53.8546, -45.134, 1.92", "11.9433, 56.0164, -46.9662, 0.15", "11.9467, 56.1306, -47.068, 0.15", "11.9783, 56.6492, -47.5456, 0.37", "12.053, 57.4481, -48.3162, 0.22", "12.1752, 58.293, -49.2394, 1.11", "12.1828, 58.3436, -49.2997, 1.11", "12.2317, 58.6896, -49.7305, 1.25", "12.4336, 60.097, -51.5524, 0.22", "12.5623, 61.0504, -52.8044, 0.96", "12.6619, 62.107, -54.1308, 0.15", "12.7267, 62.9961, -55.1787, 1.18", "12.7327, 63.1696, -55.3684, 1.47", "12.7206, 64.4455, -56.5937, 0.22", "12.6876, 64.8201, -56.8793, 0.44", "12.5872, 65.56, -57.3229, 0.15", "12.3893, 66.5697, -57.8282, 1.11", "12.2894, 67.0026, -58.0222, 1.47", "11.87, 68.8421, -58.7296, 0.22", "11.7009, 69.5738, -58.9669, 0.74", "11.45, 70.6947, -59.3176, 0.15", "11.2674, 71.5664, -59.5791, 1.11", "11.1894, 71.9397, -59.684, 1.55", "10.5155, 75.2636, -60.5733, 0.15", "10.363, 76.0308, -60.7594, 0.66", "10.2965, 76.4055, -60.85, 0.66", "9.95232, 78.6009, -61.3735, 0.15", "9.84991, 79.2971, -61.5304, 0.37", "9.83602, 79.3896, -61.5516, 0.37", "9.76252, 79.7763, -61.6408, 0.37" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "5.16953, 30.7139, -19.6398, 0.37", "5.62643, 32.0654, -19.7543, 0.37", "5.95117, 33.2763, -19.8619, 0.37", "6.16949, 34.3477, -19.9592, 0.37", "6.17857, 34.4207, -19.966, 0.37", "6.19456, 34.9387, -20.014, 0.37", "6.19272, 35.0023, -20.0226, 0.37", "6.01725, 35.7515, -20.1889, 0.66", "5.90757, 36.0149, -20.2626, 0.81", "5.73014, 36.4531, -20.3916, 0.81", "5.57798, 36.9283, -20.5212, 0.37", "5.40519, 37.6827, -20.6948, 0.29", "5.39586, 37.7457, -20.7073, 0.29", "5.33138, 38.5212, -20.8424, 0.29", "5.27987, 39.7755, -21.025, 1.84", "5.2779, 40.2547, -21.0793, 2.36", "5.30472, 41.3413, -21.1682, 1.55", "5.34846, 42.5914, -21.2294, 1.92", "5.37793, 43.078, -21.249, 2.5", "5.4563, 43.8525, -21.2824, 1.99", "5.60888, 44.9672, -21.3274, 0.22", "5.70652, 45.6867, -21.367, 0.22", "5.76916, 46.1912, -21.3976, 0.88", "5.8097, 46.6177, -21.4293, 0.59", "5.86048, 47.4005, -21.4968, 0.29", "5.89257, 48.2732, -21.5793, 0.29", "5.9122, 49.2912, -21.6784, 0.29", "5.92371, 50.1851, -21.7696, 0.29", "5.93708, 51.1436, -21.8634, 1.18", "5.95198, 51.7172, -21.908, 1.84", "5.9829, 52.2925, -21.942, 1.4", "6.0465, 52.9182, -21.9755, 0.88", "6.19397, 54.0135, -22.031, 0.29", "6.33502, 54.9655, -22.0733, 0.29", "6.58244, 56.5185, -22.1222, 2.14", "6.68186, 57.1482, -22.1415, 3.09", "6.77285, 57.7419, -22.1578, 3.46" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.69139, 31.1905, -6.24578, 1.62", "-8.17823, 33.4772, -6.73144, 1.62", "-8.18602, 33.5603, -6.74439, 1.62", "-8.29573, 34.731, -6.92683, 1.62", "-8.31927, 34.9823, -6.96599, 1.62", "-8.42569, 36.1179, -7.14297, 1.62", "-8.43266, 36.1922, -7.15455, 1.62", "-8.30107, 38.0223, -7.21466, 1.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-7.69139, 31.1905, -6.24578, 0.66", "-6.66893, 32.6762, -5.87671, 0.66", "-6.32139, 33.1588, -5.8853, 0.59", "-5.99675, 33.5977, -5.94268, 1.03", "-5.93649, 33.6821, -5.9592, 1.03", "-5.80421, 33.8851, -6.00505, 1.18", "-5.34972, 34.6992, -6.20853, 0.81", "-5.08247, 35.2509, -6.44527, 0.66", "-5.06423, 35.297, -6.46524, 0.66", "-4.89825, 35.829, -6.64408, 0.66", "-4.74506, 36.4453, -6.79289, 0.88", "-4.59545, 37.292, -6.91889, 1.4", "-4.57072, 37.5094, -6.93111, 1.77", "-4.53397, 37.9879, -6.93054, 2.14", "-4.45962, 38.9174, -6.83186, 1.77", "-4.37224, 39.5241, -6.66618, 1.25", "-4.26891, 40.0128, -6.46097, 1.03", "-4.1356, 40.4156, -6.22206, 0.81", "-3.91709, 40.9229, -5.85753, 0.81", "-3.47668, 41.6764, -5.19287, 0.59", "-2.91388, 42.3774, -4.44949, 0.59", "-2.88545, 42.4053, -4.41282, 0.59", "-2.4593, 42.731, -3.88295, 1.77", "-2.43471, 42.7449, -3.85399, 1.77", "-2.1704, 42.8352, -3.5791, 1.92", "-2.13385, 42.8382, -3.5492, 1.92" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-4.9459, -13.9452, 0.999524, 0.37", "-6.30796, -14.5872, 0.736157, 0.37", "-7.11218, -15.1539, 0.738266, 0.37", "-8.06915, -16.1889, 1.06572, 0.37", "-8.3727, -16.8005, 1.44022, 0.66", "-8.50271, -17.1909, 1.73897, 0.96", "-8.51792, -17.2386, 1.78761, 0.96", "-8.71158, -18.6035, 3.55668, 0.59", "-8.71383, -18.6341, 3.60566, 0.59", "-8.76789, -18.9884, 4.35098, 1.25", "-8.81095, -19.0752, 4.57232, 1.25", "-9.24835, -19.5437, 5.82196, 0.59", "-9.48773, -19.7429, 6.27965, 0.96", "-9.53216, -19.7724, 6.33639, 0.96", "-9.91074, -20.1504, 6.91473, 0.96", "-10.1858, -20.5836, 7.42931, 0.59", "-10.3413, -21.1055, 7.92191, 0.29", "-10.374, -21.7467, 8.43027, 0.29", "-10.3722, -22.3254, 8.91054, 1.11", "-10.3667, -23.4484, 9.88588, 0.22", "-10.3691, -23.7249, 10.1348, 1.25", "-10.4282, -24.1621, 10.5655, 1.55", "-10.4606, -24.2433, 10.6545, 1.55", "-11.1322, -24.9503, 11.5481, 0.59", "-11.3983, -25.1493, 11.7917, 0.74", "-11.8608, -25.4343, 12.1252, 0.74", "-12.5124, -25.8334, 12.5775, 0.59", "-12.6071, -25.906, 12.6465, 0.59", "-13.159, -26.6256, 13.1413, 0.59", "-13.2737, -27.1051, 13.3975, 1.11", "-13.2979, -27.4841, 13.6179, 1.18", "-13.2981, -27.5676, 13.6692, 1.18", "-13.3297, -28.4772, 14.2955, 0.59", "-13.4302, -29.2045, 14.8627, 0.59", "-13.7068, -29.926, 15.543, 0.44", "-14.0471, -30.2955, 16.0504, 0.74", "-14.407, -30.4715, 16.4298, 0.88", "-15.2244, -30.6685, 17.1315, 0.44", "-15.6871, -30.702, 17.4424, 0.44", "-16.2657, -30.7138, 17.7655, 0.44", "-16.3193, -30.7162, 17.7879, 0.44", "-17.0106, -30.8127, 18.0191, 0.88", "-17.0847, -30.831, 18.0424, 0.88", "-17.9149, -31.0951, 18.2534, 1.18", "-18.3151, -31.2469, 18.3433, 1.11", "-18.9382, -31.4998, 18.4618, 0.59", "-19.5266, -31.7518, 18.5519, 0.44", "-19.5793, -31.7753, 18.5574, 0.44", "-20.3752, -32.1992, 18.6366, 0.66", "-20.9045, -32.5724, 18.6879, 0.37", "-21.2187, -32.8921, 18.7225, 1.03", "-21.3804, -33.1688, 18.7438, 1.03", "-21.4174, -33.2861, 18.7497, 1.03", "-21.6536, -34.3571, 18.7971, 0.37", "-21.7054, -34.982, 18.8238, 0.44", "-21.7024, -35.4726, 18.8465, 0.74", "-21.6748, -35.8753, 18.867, 0.88", "-21.6043, -36.6121, 18.9143, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-4.9459, -13.9452, 0.999524, 3.09", "-4.95881, -13.9962, 0.998094, 3.09", "-5.32101, -15.4657, 0.990564, 2.8", "-5.80153, -17.4318, 0.987484, 2.43", "-6.18869, -19.0158, 0.985014, 2.43", "-6.20621, -19.0875, 0.984904, 2.43", "-6.76046, -21.3552, 0.981354, 2.43", "-7.0576, -22.5865, 0.989784, 2.87", "-7.29874, -23.5944, 1.01831, 3.02" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "13.1806, 38.5826, -1.24848, 0.15", "18.1555, 52.7336, -1.24848, 0.15", "23.1303, 66.8846, -1.24848, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "6.77285, 57.7419, -22.1578, 0.29", "7.57602, 59.2595, -22.4798, 0.29", "7.94418, 59.8261, -22.6476, 0.29", "8.33468, 60.4123, -22.846, 0.37", "8.37192, 60.468, -22.8662, 0.37", "8.64513, 60.9056, -23.0257, 0.37", "8.67053, 60.9481, -23.0416, 0.37", "9.00285, 61.6053, -23.3419, 0.22", "9.17059, 61.983, -23.5468, 0.44", "9.18361, 62.0353, -23.5796, 0.44", "9.26039, 62.4738, -23.8557, 0.66", "9.26871, 62.5183, -23.8812, 0.66", "9.40327, 63.0514, -24.1928, 0.96", "9.42136, 63.1101, -24.2443, 0.96", "9.66824, 63.8625, -24.9776, 0.22", "9.68418, 63.912, -25.0272, 0.22", "9.91858, 64.6139, -25.7232, 1.92", "10.1697, 65.2631, -26.3671, 2.36", "11.0692, 67.3159, -28.3998, 0.44", "11.2115, 67.6223, -28.6999, 0.44", "11.3177, 67.8384, -28.9075, 0.44", "11.5455, 68.3099, -29.3334, 0.22", "11.8316, 68.9154, -29.8322, 0.22", "12.1701, 69.5964, -30.311, 0.74", "12.2012, 69.6512, -30.345, 0.74", "12.2929, 69.8091, -30.4581, 0.74", "12.7627, 70.6203, -31.1154, 0.22", "13.1341, 71.3244, -31.7188, 1.33", "13.4195, 71.9319, -32.2363, 1.77", "13.9322, 73.0986, -33.2187, 0.22", "14.1496, 73.5935, -33.6232, 0.22", "14.4434, 74.2558, -34.1431, 0.22", "14.7838, 75.0042, -34.7075, 1.92", "14.9166, 75.3022, -34.9138, 2.28", "15.7513, 77.1115, -36.017, 0.22", "16.0821, 77.7876, -36.3823, 0.22", "16.3235, 78.2338, -36.6069, 0.88", "16.3893, 78.3392, -36.6536, 0.88", "16.4662, 78.4418, -36.6954, 0.88", "17.2793, 79.3878, -37.081, 0.22", "17.8602, 79.9885, -37.3305, 0.22", "17.9328, 80.0677, -37.3662, 0.22", "18.5442, 80.7535, -37.6919, 1.33", "18.793, 81.0446, -37.8296, 2.06", "19.1773, 81.517, -38.0685, 2.06", "20.0795, 82.7004, -38.6819, 0.15", "20.3185, 83.0208, -38.8529, 0.74", "20.3526, 83.0661, -38.8766, 0.74", "20.5217, 83.3013, -38.9976, 0.74", "21.0628, 84.0676, -39.3594, 0.22", "21.3494, 84.4735, -39.5247, 0.59", "21.3836, 84.5213, -39.5423, 0.59", "21.9798, 85.3299, -39.909, 0.15", "22.4536, 86.003, -40.2296, 1.55", "22.5724, 86.1791, -40.3158, 1.92", "22.6052, 86.2282, -40.3384, 1.92", "22.7634, 86.4853, -40.4608, 1.92", "23.5963, 87.8799, -41.1138, 0.22", "23.8232, 88.2127, -41.2783, 0.52", "23.8579, 88.2581, -41.301, 0.52", "24.3898, 88.8371, -41.591, 0.22", "24.8568, 89.2981, -41.8414, 1.55", "25.206, 89.5509, -42.0133, 1.55", "26.4796, 90.3124, -42.5932, 0.15", "26.5244, 90.3373, -42.6145, 0.15", "27.4098, 90.8011, -43.0401, 0.15", "28.7243, 91.437, -43.6759, 2.21", "30.683, 92.3215, -44.587, 0.22", "30.9019, 92.4209, -44.6879, 0.37", "31.801, 92.8533, -45.0741, 0.22", "32.1218, 93.0202, -45.2027, 0.59", "32.3371, 93.1426, -45.2805, 0.59", "33.062, 93.6017, -45.5162, 0.22", "33.3388, 93.8155, -45.6211, 0.66", "34.1013, 94.3947, -45.9449, 0.15", "34.6536, 94.8217, -46.1968, 1.77", "34.7896, 94.9288, -46.2671, 1.77", "36.0697, 95.9092, -46.9762, 0.22", "36.5632, 96.2411, -47.3263, 0.74", "37.1002, 96.5575, -47.7725, 0.15", "37.415, 96.7252, -48.0819, 0.74", "37.9308, 97.0076, -48.6336, 0.15", "38.397, 97.2765, -49.1555, 2.14", "39.8752, 98.2418, -50.9444, 0.37", "40.4715, 98.7186, -51.7156, 1.55", "41.5649, 99.7367, -53.2179, 0.15", "42.0273, 100.246, -53.8952, 0.15", "42.2446, 100.528, -54.2353, 1.4", "42.9321, 101.558, -55.4448, 0.22", "43.2725, 102.087, -56.0726, 1.33", "43.3335, 102.165, -56.1779, 1.62", "44.2547, 103.003, -57.5371, 0.15", "44.8814, 103.425, -58.3742, 1.18", "45.9647, 103.993, -59.6984, 0.88", "46.9951, 104.395, -60.8102, 0.44", "47.9595, 104.717, -61.7466, 1.77", "48.9875, 105.026, -62.5959, 0.22", "49.0475, 105.041, -62.6338, 0.22", "49.4322, 105.147, -62.8021, 0.66", "50.2907, 105.432, -63.0019, 0.15", "50.8921, 105.714, -63.0605, 1.11", "51.2592, 105.951, -63.083, 1.11", "51.3154, 105.993, -63.0855, 1.11", "51.9471, 106.48, -63.1197, 0.22", "52.2388, 106.698, -63.1404, 0.59", "52.9829, 107.247, -63.2019, 0.22", "53.6325, 107.717, -63.2755, 1.4", "53.6896, 107.758, -63.2819, 1.4", "53.7848, 107.824, -63.292, 1.55", "55.0009, 108.628, -63.41, 0.22", "55.0532, 108.661, -63.4161, 0.22", "55.2539, 108.781, -63.4414, 0.22", "55.6779, 109.023, -63.5148, 0.81", "55.7306, 109.053, -63.5259, 0.81", "55.9896, 109.216, -63.5972, 0.81", "57.2272, 110.019, -63.985, 0.22", "57.6509, 110.291, -64.122, 0.22", "58.5827, 110.875, -64.4287, 1.55", "58.632, 110.907, -64.4472, 1.55", "59.848, 111.733, -64.9301, 0.22", "60.3109, 112.052, -65.1252, 0.22", "61.1193, 112.615, -65.4739, 1.62", "61.2728, 112.722, -65.5375, 1.99", "62.8609, 113.843, -66.1622, 0.22", "62.9161, 113.882, -66.1835, 0.22", "63.5139, 114.297, -66.4089, 0.74", "63.877, 114.553, -66.5484, 0.74", "65.6796, 115.826, -67.2251, 0.15", "66.3484, 116.288, -67.4615, 1.55", "66.4005, 116.322, -67.4765, 1.55", "66.6959, 116.517, -67.5627, 1.55" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "6.77285, 57.7419, -22.1578, 0.29", "6.46505, 60.1967, -22.226, 0.29", "6.39776, 60.7877, -22.2485, 0.44", "6.25877, 61.9889, -22.2821, 0.22", "6.07975, 63.5761, -22.3198, 1.55", "6.02568, 64.0898, -22.3281, 2.21", "5.95077, 64.8386, -22.3346, 1.84", "5.89044, 65.7832, -22.3441, 0.96", "5.85532, 66.3927, -22.3328, 0.44", "5.85001, 66.4849, -22.327, 0.44", "5.80487, 67.6722, -22.2489, 0.29", "5.80677, 67.8397, -22.2401, 0.29", "5.85299, 68.6899, -22.208, 0.29", "5.91767, 69.5279, -22.1849, 0.81", "5.95209, 69.9448, -22.1929, 1.11", "6.0011, 70.7904, -22.2409, 0.88", "6.10396, 72.5184, -22.3912, 0.22", "6.15246, 73.3636, -22.4926, 0.81", "6.18896, 74.0342, -22.5957, 0.81", "6.28362, 76.047, -22.9407, 0.22", "6.3355, 77.5273, -23.2096, 1.84", "6.3484, 78.3022, -23.3553, 2.21", "6.34544, 78.9797, -23.4834, 2.21", "6.36707, 81.5708, -23.9391, 0.22", "6.39275, 82.4708, -24.0834, 0.81", "6.41483, 82.8951, -24.1395, 0.88", "6.44073, 83.3242, -24.185, 0.66", "6.50181, 84.6009, -24.2909, 0.22", "6.58781, 86.3829, -24.3932, 1.84", "6.62795, 86.9258, -24.4182, 2.21", "6.68084, 87.4674, -24.4422, 2.21", "6.95755, 89.8092, -24.5416, 0.22", "7.06864, 90.6418, -24.5793, 0.88", "7.10435, 90.8954, -24.5902, 0.88", "7.34841, 92.613, -24.6683, 0.22", "7.56162, 94.1309, -24.7815, 0.22", "7.68326, 94.9275, -24.8604, 1.33", "7.79436, 95.5537, -24.9391, 1.62", "7.83604, 95.7954, -24.9732, 1.62", "7.85193, 95.9325, -24.9966, 1.62", "7.99129, 98.1812, -25.4101, 0.22", "8.05139, 99.8368, -25.7277, 0.22", "8.07032, 100.977, -25.9423, 1.4", "8.07959, 101.576, -26.0503, 1.69", "8.11294, 104.112, -26.497, 0.22", "8.12034, 104.967, -26.6208, 0.96", "8.12034, 105.048, -26.6279, 0.96", "8.11343, 105.398, -26.6461, 0.81", "8.07603, 107.022, -26.6509, 0.22", "8.07601, 107.214, -26.6433, 0.22", "8.1078, 108.336, -26.5672, 0.22", "8.14132, 109.666, -26.4913, 1.69", "8.15162, 110.102, -26.4707, 2.43", "8.16996, 111.023, -26.4333, 2.36", "8.24969, 113.985, -26.3398, 0.22", "8.30477, 115.117, -26.3463, 0.22", "8.31673, 115.292, -26.3543, 0.22", "8.445, 116.729, -26.4502, 0.22", "8.55806, 117.815, -26.5424, 1.11", "8.6433, 118.466, -26.6127, 1.4", "8.93864, 120.315, -26.8583, 0.22", "8.95097, 120.386, -26.8681, 0.22", "9.05013, 120.874, -26.9285, 0.22", "9.26961, 121.89, -27.0258, 1.55", "9.38027, 122.414, -27.0556, 1.77", "9.39744, 122.493, -27.0576, 1.77", "9.48159, 122.85, -27.0565, 1.77", "9.85189, 124.385, -27.0573, 0.22", "10.0914, 125.447, -27.0528, 0.66", "10.2073, 126.021, -27.0456, 0.66", "10.5322, 127.917, -27.0171, 0.22", "10.5574, 128.09, -27.0129, 0.22", "10.7866, 129.926, -26.9487, 0.22", "10.9047, 131.183, -26.8678, 1.11", "10.9577, 131.937, -26.7902, 1.99", "10.9778, 132.585, -26.6969, 1.55", "10.9485, 134.181, -26.3845, 0.22", "10.9401, 134.393, -26.3375, 0.22", "10.847, 135.699, -25.9962, 0.22", "10.8118, 136.446, -25.7861, 0.88", "10.8046, 136.679, -25.7213, 1.18", "10.8079, 136.756, -25.6954, 1.18", "10.8926, 137.474, -25.454, 0.66", "10.9502, 137.875, -25.3252, 0.37", "11.0826, 138.927, -24.999, 0.22", "11.1529, 139.706, -24.7546, 0.59", "11.2224, 141.109, -24.4132, 0.52", "11.2408, 141.896, -24.2497, 0.66", "11.249, 142.495, -24.1423, 0.22", "11.2448, 143.408, -24.0064, 1.47", "11.2341, 143.848, -23.9597, 2.14", "11.1636, 146.519, -23.7647, 0.22", "11.1618, 146.591, -23.7625, 0.22", "11.1847, 147.423, -23.735, 1.11", "11.2001, 147.598, -23.7332, 1.47", "11.216, 147.721, -23.7332, 1.47", "11.3114, 148.478, -23.7425, 0.81", "11.3788, 149.105, -23.7648, 0.29", "11.5645, 150.969, -23.8689, 0.22", "11.638, 151.832, -23.9319, 0.96", "11.6525, 151.995, -23.9448, 0.96", "11.6694, 152.169, -23.957, 0.96", "11.8286, 153.514, -24.0402, 0.22", "11.8401, 153.593, -24.0442, 0.22", "11.9836, 154.41, -24.074, 0.81", "12.0587, 154.824, -24.0855, 0.81", "12.4072, 156.755, -24.1119, 0.15", "12.6194, 158.067, -24.1294, 1.18", "12.6743, 158.435, -24.1328, 1.47", "12.6837, 158.504, -24.1384, 1.47", "12.725, 158.837, -24.1924, 1.47", "12.9162, 160.655, -24.5942, 0.22", "13.0144, 161.676, -24.8849, 1.11", "13.0527, 162.108, -25.0242, 1.47", "13.2698, 164.484, -25.9257, 0.15", "13.3617, 165.411, -26.3159, 0.81", "13.3699, 165.484, -26.3502, 0.81", "13.4235, 165.906, -26.5683, 0.81", "13.4328, 165.967, -26.5988, 0.81", "13.6166, 167.431, -27.2326, 0.22", "13.6687, 167.921, -27.3964, 0.37", "13.7373, 168.676, -27.615, 0.22", "13.809, 169.612, -27.8555, 1.18", "13.8416, 170.171, -27.9828, 1.47", "13.9441, 172.295, -28.4143, 0.22", "13.9829, 173.233, -28.5714, 1.03", "13.9952, 173.557, -28.6248, 1.03", "14.0827, 175.635, -28.9921, 0.22", "14.12, 176.384, -29.1248, 0.22", "14.1247, 176.463, -29.1387, 0.22", "14.2178, 177.405, -29.2677, 0.81", "14.2879, 177.984, -29.3343, 0.81", "14.5101, 179.701, -29.479, 0.22", "14.6789, 180.872, -29.4971, 1.11", "14.7158, 181.124, -29.4903, 1.11", "15.0212, 183.227, -29.328, 0.22", "15.1525, 184.155, -29.2176, 0.59", "15.355, 185.652, -28.9808, 0.22", "15.5115, 186.921, -28.7213, 1.18", "15.5697, 187.41, -28.6161, 1.62", "15.7752, 189.267, -28.1815, 0.22", "15.8271, 189.844, -28.0348, 0.22", "15.879, 190.485, -27.8592, 0.59", "15.9044, 190.81, -27.7679, 0.59", "15.9101, 190.901, -27.7444, 0.59", "15.9704, 191.921, -27.4629, 0.22", "16.0109, 192.478, -27.2891, 0.52", "16.0289, 192.644, -27.2341, 0.52", "16.0404, 192.72, -27.2081, 0.52", "16.3059, 194.071, -26.8387, 0.22", "16.5331, 195.11, -26.6119, 1.11", "16.6676, 195.598, -26.5472, 1.47", "16.7184, 195.754, -26.5308, 1.47", "16.9091, 196.296, -26.4876, 1.47", "17.5441, 197.979, -26.3977, 0.22", "17.57, 198.043, -26.3971, 0.22", "18.0655, 199.295, -26.4019, 0.22", "18.4606, 200.369, -26.4129, 1.11", "18.6354, 200.861, -26.4055, 1.55", "18.8024, 201.34, -26.3909, 1.55", "19.4044, 202.998, -26.3149, 0.22", "19.6346, 203.622, -26.281, 0.74", "19.7237, 203.865, -26.262, 0.74", "20.5112, 205.953, -26.0801, 0.22", "20.7422, 206.551, -26.0196, 0.74", "21.4515, 208.331, -25.7448, 0.22", "21.5302, 208.519, -25.7068, 0.22", "21.9761, 209.547, -25.4856, 0.74", "22.0282, 209.667, -25.4572, 0.74", "22.3005, 210.305, -25.2925, 1.03", "23.2062, 212.482, -24.7332, 0.15", "23.2355, 212.558, -24.7148, 0.15", "23.7321, 213.905, -24.4446, 0.15", "23.9667, 214.563, -24.3347, 1.03", "24.0863, 214.923, -24.2924, 1.03", "24.395, 216.011, -24.2227, 0.15", "24.5985, 216.905, -24.2314, 1.11", "24.6833, 217.344, -24.2393, 1.4", "24.6934, 217.413, -24.2413, 1.4", "24.8715, 219.059, -24.3207, 0.22", "24.9275, 219.914, -24.3546, 0.59", "24.9291, 219.987, -24.3567, 0.59", "24.9262, 220.241, -24.3581, 0.59", "24.8955, 221.273, -24.3573, 0.22", "24.8626, 222.023, -24.3536, 1.18", "24.8039, 222.779, -24.3438, 1.84", "24.761, 223.209, -24.3408, 1.47", "24.4622, 225.374, -24.3133, 0.22", "24.3167, 226.194, -24.2999, 0.22", "24.3008, 226.261, -24.2982, 0.22", "24.0617, 227.049, -24.2883, 0.81", "23.8672, 227.631, -24.2902, 1.62", "23.6128, 228.333, -24.299, 2.28", "23.5159, 228.598, -24.3049, 2.5", "23.2537, 229.385, -24.3195, 2.14", "22.6231, 231.548, -24.3695, 0.22", "22.4465, 232.274, -24.3943, 0.59", "22.4307, 232.368, -24.3981, 0.59", "22.3344, 233.273, -24.4341, 0.22", "22.3033, 233.951, -24.4469, 0.81", "22.3041, 234.059, -24.4466, 0.81", "22.322, 234.484, -24.4275, 0.81", "22.3524, 235.793, -24.3461, 0.22", "22.3658, 236.549, -24.2949, 0.44", "22.3789, 238.377, -24.1528, 0.15", "22.3864, 239.052, -24.0957, 0.15", "22.3883, 239.605, -24.0451, 0.59", "22.3866, 239.952, -24.0091, 0.59" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-8.30107, 38.0223, -7.21466, 1.55", "-7.76015, 40.2323, -9.21524, 1.55", "-7.73289, 40.3408, -9.3019, 1.55", "-7.35121, 41.8038, -10.2743, 1.47", "-7.3325, 41.874, -10.3127, 1.47", "-7.06656, 42.8565, -10.7957, 1.25", "-6.6326, 44.4825, -11.4743, 1.25", "-6.5832, 44.6758, -11.5186, 1.25", "-6.26047, 45.8801, -11.734, 0.81", "-5.89883, 47.2418, -11.9, 1.18", "-5.8657, 47.3733, -11.9131, 1.18", "-5.49747, 48.9656, -12.038, 1.84", "-5.25591, 50.1662, -12.1121, 2.14", "-5.04524, 51.3742, -12.1885, 2.14", "-4.86961, 52.7603, -12.2944, 2.14", "-4.86524, 52.83, -12.3, 2.14", "-4.86131, 53.6392, -12.3801, 1.77", "-4.94145, 55.1393, -12.5561, 1.77", "-5.0766, 56.1625, -12.6838, 1.47", "-5.35871, 57.4515, -12.8385, 1.25", "-5.75599, 58.767, -13.0174, 1.62", "-6.10496, 59.7149, -13.16, 1.84", "-6.13892, 59.7921, -13.173, 1.84", "-6.72248, 60.9021, -13.409, 1.99", "-7.39422, 62.1425, -13.6959, 1.69", "-7.97495, 63.3186, -13.9649, 1.47", "-8.29198, 64.1644, -14.1992, 1.33", "-8.30907, 64.2296, -14.219, 1.33", "-8.43698, 65.3854, -14.6094, 1.11", "-8.33537, 66.574, -15.0745, 0.88", "-8.05513, 67.5443, -15.4845, 0.96", "-7.46138, 69.0047, -16.0675, 0.81", "-7.41461, 69.1158, -16.1073, 0.81", "-7.14756, 69.811, -16.331, 0.66", "-7.08151, 70.0037, -16.3856, 0.66", "-6.92231, 71.1336, -16.6565, 0.66", "-6.98158, 72.0576, -16.8137, 0.96", "-7.22711, 73.0591, -16.9137, 1.69", "-7.37701, 73.5133, -16.9551, 1.99", "-7.57461, 73.9766, -17.003, 1.99", "-8.06755, 75.0125, -17.1247, 1.84", "-8.10655, 75.0851, -17.1343, 1.84", "-8.79651, 76.3397, -17.3344, 2.06", "-9.02973, 76.789, -17.4129, 2.21", "-9.40185, 77.5853, -17.549, 2.14", "-9.90921, 78.773, -17.7422, 1.18", "-10.4488, 80.1715, -17.9517, 1.03", "-10.8247, 81.2272, -18.0881, 1.03", "-11.1452, 82.2098, -18.1951, 1.33", "-11.4861, 83.3599, -18.2972, 2.14", "-11.6968, 84.2012, -18.3466, 2.65", "-11.8873, 85.1184, -18.3953, 2.65", "-12.0659, 86.222, -18.4591, 2.65", "-12.0854, 86.3764, -18.4672, 2.65", "-12.1621, 87.1433, -18.5077, 2.36", "-12.1991, 88.0314, -18.5643, 2.06", "-12.2079, 89.1699, -18.6436, 1.4", "-12.1802, 90.3983, -18.7308, 0.81", "-12.0608, 92.3865, -18.8643, 0.66", "-11.8985, 94.0485, -18.9579, 0.66", "-11.6556, 95.8429, -19.0397, 1.11", "-11.6413, 95.9266, -19.0433, 1.11", "-11.4095, 97.0246, -19.0797, 1.55", "-11.0932, 98.2943, -19.1167, 1.84", "-10.6957, 99.7358, -19.1623, 2.28", "-10.5094, 100.405, -19.1827, 2.58", "-10.2848, 101.265, -19.2288, 2.58", "-10.1388, 101.891, -19.2789, 2.58", "-9.95951, 102.904, -19.4047, 2.36", "-9.86013, 103.779, -19.5553, 1.92", "-9.8547, 103.873, -19.5741, 1.92", "-9.80734, 105.266, -19.8494, 0.88", "-9.79116, 106.624, -20.1008, 0.66", "-9.78956, 108.033, -20.3707, 0.66", "-9.78871, 108.944, -20.5599, 0.81", "-9.76779, 109.942, -20.7781, 0.74", "-9.72915, 110.951, -21.0032, 0.59", "-9.68532, 111.962, -21.2169, 1.25", "-9.61352, 112.925, -21.4349, 1.84", "-9.45776, 114.277, -21.7385, 2.5", "-9.33996, 115.089, -21.9314, 2.65", "-9.31597, 115.222, -21.9705, 2.65" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-8.30107, 38.0223, -7.21466, 0.52", "-8.00864, 39.3122, -7.08436, 0.52", "-7.99862, 39.3756, -7.07683, 0.52", "-7.98148, 39.9972, -7.00124, 0.52", "-8.10734, 41.1534, -6.87141, 0.52", "-8.119, 41.216, -6.86491, 0.52", "-8.19778, 41.4984, -6.83959, 0.66", "-8.24933, 41.5813, -6.82327, 0.66", "-8.60472, 42.0326, -6.74561, 0.52", "-8.91789, 42.3575, -6.69353, 0.66", "-8.97239, 42.4098, -6.68329, 0.66", "-9.309, 42.7369, -6.59806, 0.59", "-9.82802, 43.2484, -6.4412, 0.29", "-10.2626, 43.696, -6.27707, 0.29", "-10.3409, 43.7794, -6.24061, 0.29", "-10.8524, 44.3481, -5.96557, 0.59", "-11.1964, 44.7341, -5.78786, 0.81", "-11.2401, 44.7812, -5.76825, 0.81", "-11.549, 45.0841, -5.66917, 0.81", "-11.5916, 45.1185, -5.65992, 0.81", "-12.0206, 45.4142, -5.59971, 0.81", "-12.7686, 45.9221, -5.52181, 0.37", "-13.2844, 46.3045, -5.42736, 0.37", "-13.7002, 46.6386, -5.31611, 0.59", "-14.0477, 46.9464, -5.18764, 0.81", "-14.6082, 47.4799, -4.91929, 0.29", "-15.1514, 48.0297, -4.60823, 0.52", "-15.7403, 48.6757, -4.20401, 1.33", "-16.0003, 48.9798, -4.00405, 1.55", "-16.7565, 49.9037, -3.37597, 0.29", "-17.3533, 50.6369, -2.87664, 1.55", "-17.4972, 50.8031, -2.7759, 1.84", "-17.5746, 50.88, -2.7417, 1.84", "-17.7983, 51.0835, -2.70789, 1.84", "-17.839, 51.1211, -2.71078, 1.84", "-18.1448, 51.4101, -2.80568, 1.62", "-18.7553, 51.9863, -3.07865, 0.37", "-19.2555, 52.4821, -3.34713, 0.29", "-19.6254, 52.8939, -3.59329, 0.59", "-19.8576, 53.1732, -3.78196, 0.59", "-20.0186, 53.3752, -3.92537, 0.59", "-20.2279, 53.6561, -4.13329, 0.52", "-20.6114, 54.2596, -4.54037, 0.29", "-20.8617, 54.7165, -4.83994, 0.74", "-21.1586, 55.2605, -5.16915, 0.66", "-21.3262, 55.5572, -5.33342, 0.88", "-21.6292, 56.075, -5.5925, 0.66", "-22.4766, 57.4313, -6.19366, 2.14", "-22.8133, 57.9236, -6.38569, 2.14", "-23.5293, 58.9058, -6.72974, 0.22", "-23.9201, 59.421, -6.8861, 0.22", "-24.341, 59.9626, -7.03027, 0.22", "-24.7668, 60.4713, -7.1191, 0.88", "-24.9966, 60.7207, -7.13593, 1.03", "-25.2879, 61.0181, -7.12833, 0.74", "-25.9989, 61.7371, -7.06497, 0.22", "-26.4316, 62.1655, -7.00259, 0.22", "-27.0099, 62.7446, -6.91914, 0.22", "-27.0872, 62.8233, -6.90838, 0.22", "-27.634, 63.4068, -6.83554, 0.22", "-28.4414, 64.2632, -6.74793, 1.69", "-28.7107, 64.5798, -6.73078, 2.21", "-29.1451, 65.1249, -6.72613, 2.21", "-29.1765, 65.1703, -6.72581, 2.21", "-29.7978, 66.1959, -6.69149, 0.22", "-30.1565, 66.8773, -6.65145, 0.22", "-30.7267, 68.0238, -6.51678, 0.22", "-30.7692, 68.1105, -6.50373, 0.22", "-31.1803, 68.9236, -6.34508, 1.11", "-31.4817, 69.5218, -6.23372, 1.11", "-31.7503, 70.0564, -6.11955, 0.59", "-32.264, 71.0644, -5.8867, 1.69", "-32.4041, 71.3238, -5.82543, 1.77", "-33.3166, 72.9895, -5.46815, 0.22", "-34.0689, 74.3263, -5.17353, 0.22", "-34.3549, 74.8331, -5.04794, 1.03", "-34.5702, 75.2161, -4.94642, 1.03", "-34.7632, 75.5578, -4.85254, 0.81", "-35.3353, 76.4581, -4.54307, 0.22", "-36.0439, 77.438, -4.14121, 1.11", "-36.1877, 77.6145, -4.06447, 1.62", "-36.3942, 77.8535, -3.94376, 1.62", "-36.4284, 77.891, -3.92136, 1.62", "-37.6973, 79.2283, -3.00421, 0.22", "-38.1708, 79.7126, -2.64672, 0.81", "-38.3832, 79.9269, -2.4886, 0.81", "-39.4043, 80.9607, -1.70761, 0.22", "-39.4435, 81.0014, -1.67578, 0.22", "-40.0903, 81.6983, -1.11068, 1.18", "-40.3691, 82.0447, -0.784796, 1.55", "-44.9533, 89.992, -0.520876, 1.55", "-49.6586, 97.8317, 0.325474, 1.55", "-55.6025, 104.817, 1.23764, 1.55", "-61.5043, 111.602, 3.29343, 1.55", "-68.0968, 117.042, 6.88197, 1.55", "-74.4039, 122.979, 10.1401, 1.55", "-78.8715, 129.847, 14.3691, 1.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.13385, 42.8382, -3.5492, 0.88", "-3.12347, 43.366, -1.99592, 0.88", "-3.1851, 43.3883, -1.90063, 0.88", "-3.93051, 43.5348, -0.819622, 0.88", "-3.96136, 43.5386, -0.776194, 0.88", "-5.27619, 43.7273, 1.75437, 0.59", "-5.30297, 43.7324, 1.81039, 0.59", "-5.66648, 43.8024, 2.64511, 1.18", "-6.14125, 43.918, 3.78923, 1.18", "-6.15982, 43.9241, 3.83893, 1.18", "-7.51887, 44.7921, 8.04357, 0.22", "-7.64133, 44.9545, 8.53305, 0.29", "-7.84697, 45.3345, 9.4706, 1.11", "-7.85735, 45.3632, 9.52747, 1.11", "-7.94065, 45.7133, 10.1457, 1.11", "-8.0835, 46.4402, 11.2682, 0.22", "-8.12861, 47.0228, 11.7854, 0.59", "-8.12824, 47.061, 11.8217, 0.59", "-8.10156, 47.2949, 12.0394, 1.11", "-11.9241, 49.7966, 19.663, 1.11", "-17.5684, 52.4485, 25.9933, 1.11", "-21.4767, 55.9934, 33.125, 1.11", "-26.1138, 59.7528, 39.6823, 1.11", "-30.553, 63.9395, 46.1038, 1.11", "-34.6423, 68.5689, 52.4383, 1.11", "-39.0543, 73.4932, 58.3061, 1.11", "-43.242, 77.676, 64.8968, 1.11", "-46.5302, 81.7999, 72.0149, 1.11", "-50.0707, 85.8197, 79.0742, 1.11", "-52.8481, 90.85, 85.7866, 1.11", "-55.7345, 96.2588, 92.1342, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-2.13385, 42.8382, -3.5492, 0.52", "-1.99371, 43.9126, -2.9337, 0.52", "-1.9459, 44.8453, -2.46907, 0.52", "-1.94876, 44.8914, -2.45112, 0.44", "-2.05058, 45.6712, -2.22288, 0.44", "-2.0602, 45.7355, -2.20951, 0.44", "-2.14508, 46.3418, -2.11933, 0.66", "-2.15803, 46.3984, -2.11539, 0.66", "-2.30475, 46.9797, -2.06819, 0.66", "-2.42196, 47.455, -1.99484, 0.44", "-2.58867, 48.1527, -1.79869, 0.44", "-2.72862, 48.7758, -1.56787, 0.96", "-2.87103, 49.6645, -1.17183, 0.81", "-2.88482, 49.7975, -1.10654, 0.81", "-2.89046, 50.709, -0.609706, 0.66", "-2.81692, 51.548, -0.0749736, 0.44", "-2.79541, 51.6504, -0.00307466, 0.44", "-2.58198, 52.2831, 0.45928, 0.29", "-2.42438, 52.6015, 0.703888, 0.29", "-2.14531, 53.0936, 1.08837, 1.11", "-1.72298, 53.7306, 1.60618, 1.47", "-1.48829, 54.0942, 1.91079, 1.47", "-1.46847, 54.1284, 1.94145, 1.47", "-1.05915, 54.9086, 2.7031, 0.88", "-0.779223, 55.4952, 3.29666, 0.52", "-0.764477, 55.5288, 3.33057, 0.52", "-0.545049, 56.0244, 3.80453, 0.74", "-0.529297, 56.0585, 3.83756, 0.74", "-0.351572, 56.3856, 4.13266, 0.74", "-0.32829, 56.4198, 4.1606, 0.74", "-0.104691, 56.7026, 4.3673, 0.74", "0.430981, 57.3889, 4.78143, 0.37", "0.718039, 57.781, 4.96872, 0.37", "1.07309, 58.3361, 5.17851, 0.52", "1.32555, 58.8235, 5.33404, 0.37", "1.65808, 59.6324, 5.54948, 0.74", "1.82628, 60.247, 5.67109, 1.11", "1.91747, 60.8384, 5.74824, 0.96", "1.93539, 61.5842, 5.81904, 0.44", "1.8571, 62.4617, 5.87985, 0.44", "1.79041, 62.8861, 5.90777, 0.29", "1.67182, 63.5257, 5.95024, 0.29", "1.6628, 63.583, 5.95421, 0.29", "1.60046, 64.1911, 6.00029, 0.37", "1.57987, 64.9435, 6.05506, 0.52", "1.62804, 65.6356, 6.09681, 1.11", "1.69624, 66.1129, 6.13601, 1.69", "1.75593, 66.458, 6.16474, 1.77", "1.80997, 66.8609, 6.1903, 1.69", "1.85134, 67.2673, 6.20871, 1.47", "1.85691, 67.5404, 6.21044, 1.47", "1.85046, 67.5998, 6.20705, 1.47", "1.63117, 68.6452, 6.11679, 0.29", "1.50205, 69.1157, 6.06645, 0.66", "1.48528, 69.1714, 6.06232, 0.66", "1.40912, 69.4343, 6.05474, 0.37", "1.27213, 69.9943, 6.07354, 0.29", "1.14612, 70.6658, 6.12977, 0.29", "1.13993, 70.7232, 6.13754, 0.29", "1.12055, 71.4411, 6.24707, 1.03", "1.13651, 72.0444, 6.34051, 1.69", "1.19456, 72.6853, 6.43486, 2.14", "1.22763, 72.9772, 6.47342, 2.28", "1.26564, 73.4439, 6.50348, 1.77", "1.29314, 73.984, 6.5019, 1.18", "1.3003, 74.5469, 6.45445, 0.52", "1.28579, 75.0899, 6.38472, 0.37", "1.26424, 75.4654, 6.30418, 0.37", "1.21586, 76.2477, 6.11309, 0.74", "1.20522, 76.5332, 6.03771, 1.25", "1.1955, 77.001, 5.90345, 1.4", "1.20137, 77.6441, 5.71571, 0.81", "1.25644, 78.9395, 5.35314, 0.37", "1.32019, 79.6474, 5.16744, 0.37", "1.45935, 80.7916, 4.89329, 0.29", "1.58631, 81.6636, 4.69595, 1.84", "1.64557, 81.9894, 4.62951, 2.28", "1.75643, 82.4801, 4.54519, 2.14", "2.02864, 83.5334, 4.43039, 0.52", "2.19115, 84.127, 4.3826, 0.74", "2.30113, 84.5403, 4.36701, 0.74", "2.44385, 85.1209, 4.36296, 0.22", "2.51024, 85.4845, 4.35927, 0.22", "2.58058, 86.2198, 4.32499, 0.74", "2.57753, 86.4093, 4.30363, 0.74", "2.53369, 87.0322, 4.20119, 0.22", "2.48588, 87.497, 4.1097, 0.74", "2.44082, 87.8836, 4.0246, 0.96", "2.35897, 88.785, 3.82326, 0.37", "2.31298, 89.8797, 3.58121, 1.25", "2.32249, 90.2625, 3.50739, 1.55", "2.34628, 90.5639, 3.46622, 1.77", "2.39444, 91.0707, 3.42877, 1.77", "2.46021, 91.7437, 3.41426, 0.88", "2.50137, 92.1867, 3.42842, 0.52", "2.5508, 92.8828, 3.47782, 0.44", "2.60314, 93.7722, 3.51814, 0.29", "2.64036, 94.8624, 3.54129, 1.25", "2.64555, 95.3395, 3.54252, 2.21", "2.6428, 95.6651, 3.53641, 2.5", "2.63281, 96.3424, 3.50964, 2.28", "2.5988, 97.4847, 3.39025, 0.66", "2.585, 98.0986, 3.29394, 0.52", "2.57626, 98.7603, 3.17336, 0.66", "2.57361, 99.2376, 3.08262, 0.96", "2.57537, 99.842, 2.95951, 0.96", "2.5949, 101.297, 2.64354, 0.22", "2.61709, 101.902, 2.52489, 1.18", "2.64705, 102.237, 2.45842, 0.88", "2.71228, 102.686, 2.36924, 0.74", "2.83328, 103.265, 2.26453, 0.29", "2.84984, 103.321, 2.25688, 0.29", "3.06325, 103.799, 2.23756, 0.81", "3.08581, 103.853, 2.23217, 0.81", "3.19175, 104.189, 2.18399, 1.03", "3.23264, 104.36, 2.15507, 1.03", "3.26215, 104.592, 2.11011, 1.03", "3.26852, 105.644, 1.82463, 0.29", "3.19559, 106.414, 1.56677, 0.29", "3.13121, 106.896, 1.39524, 0.59", "3.11225, 107.012, 1.35283, 0.59", "3.0479, 107.453, 1.19778, 0.37", "2.97478, 108.228, 0.958895, 0.29", "2.95131, 109.073, 0.755624, 1.11", "2.97228, 109.418, 0.694778, 1.69", "3.017, 109.794, 0.644235, 1.84", "3.10471, 110.391, 0.583709, 1.62", "3.25868, 111.237, 0.533412, 0.74", "3.42362, 112.04, 0.526975, 0.52", "3.43623, 112.098, 0.527369, 0.52", "3.60608, 112.977, 0.52857, 0.37", "3.61662, 113.042, 0.527281, 0.37", "3.66775, 113.595, 0.499541, 1.25", "3.68033, 113.982, 0.438289, 0.96", "3.68097, 114.038, 0.425599, 0.96", "3.68288, 114.562, 0.297014, 0.74", "3.68776, 115.099, 0.140748, 0.59", "3.68903, 115.543, 0.00733484, 0.74", "3.66798, 116.716, -0.354705, 0.37", "3.64508, 117.437, -0.578666, 0.74", "3.62197, 118.059, -0.768774, 0.52", "3.57216, 118.858, -1.02753, 0.29", "3.51003, 119.48, -1.24852, 0.81", "3.4486, 119.894, -1.41414, 1.18", "3.43758, 119.941, -1.4349, 1.18", "3.37814, 120.167, -1.5471, 1.18", "3.22389, 120.865, -1.86822, 1.18", "3.12158, 121.463, -2.10778, 0.44", "3.04976, 122.124, -2.34328, 0.29", "3.04237, 122.255, -2.38308, 0.29", "3.03884, 123.169, -2.60516, 0.29", "3.10675, 124.428, -2.82082, 1.62", "3.14624, 124.862, -2.86504, 2.65", "3.18691, 125.296, -2.89162, 2.87", "3.23346, 125.779, -2.90989, 2.36", "3.29223, 126.453, -2.93049, 1.69", "3.37303, 127.514, -2.96843, 0.52", "3.43836, 128.347, -2.99763, 0.52", "3.46633, 128.764, -3.01793, 0.81", "3.50163, 129.362, -3.05697, 0.44", "3.55148, 130.213, -3.12506, 0.44", "3.58451, 130.845, -3.18587, 0.37", "3.58866, 130.902, -3.19193, 0.37", "3.67873, 131.628, -3.27061, 0.37", "3.69685, 131.733, -3.28115, 0.37", "3.84812, 132.487, -3.35388, 1.62", "3.95567, 132.976, -3.39332, 2.36", "4.04194, 133.353, -3.417, 2.36", "4.32927, 134.57, -3.48149, 0.29", "4.474, 135.156, -3.50699, 0.29", "4.62336, 135.757, -3.52402, 0.37", "4.82122, 136.53, -3.53512, 0.37", "4.90001, 136.838, -3.5492, 0.59", "4.97703, 137.157, -3.58141, 0.59", "4.98771, 137.204, -3.58958, 0.59", "5.21549, 138.392, -3.86703, 0.29", "5.47726, 139.853, -4.27824, 0.29", "5.59639, 140.555, -4.51362, 0.96", "5.69483, 141.179, -4.7503, 1.18", "5.75488, 141.662, -4.94978, 0.66", "5.79569, 142.138, -5.15849, 0.44", "5.79638, 142.19, -5.18472, 0.44", "5.7682, 142.768, -5.45839, 0.22", "5.75854, 142.895, -5.50402, 0.22", "5.69451, 143.833, -5.74793, 1.47", "5.67017, 144.244, -5.82888, 2.28", "5.65436, 144.612, -5.88554, 2.58", "5.61614, 145.659, -6.01, 0.29", "5.59489, 146.235, -6.05612, 0.22", "5.5799, 146.824, -6.08709, 0.22", "5.57111, 147.318, -6.10476, 0.22", "5.54742, 148.136, -6.13092, 1.33", "5.53733, 148.356, -6.13662, 1.62", "5.51725, 148.65, -6.15476, 1.62", "5.45112, 149.31, -6.23945, 0.37", "5.36563, 149.918, -6.34959, 0.22", "5.31568, 150.227, -6.40969, 0.22", "5.25979, 150.538, -6.47276, 0.52", "5.14657, 151.22, -6.60687, 0.29", "4.98469, 152.395, -6.82237, 0.29", "4.91645, 153.044, -6.92951, 1.03", "4.89836, 153.46, -6.98349, 1.33", "4.90222, 153.643, -7.00097, 1.33", "4.93196, 154.023, -7.02292, 1.18", "5.0011, 154.572, -7.02904, 0.96", "5.07501, 154.985, -7.02678, 0.37", "5.22172, 155.71, -7.01675, 0.22", "5.35564, 156.363, -7.00607, 0.22", "5.4875, 157.044, -6.99604, 1.11", "5.55776, 157.422, -7.00199, 1.92", "5.61566, 157.734, -7.02309, 2.5", "5.62571, 157.79, -7.02988, 2.5", "5.68123, 158.141, -7.09561, 2.5", "5.74504, 158.626, -7.21309, 2.36", "5.87933, 159.768, -7.53796, 0.29", "5.94077, 160.373, -7.72323, 0.29", "5.9478, 160.467, -7.75222, 0.29", "5.98546, 161.095, -7.95746, 1.33", "6.00363, 161.46, -8.07699, 1.55", "6.00535, 161.51, -8.09256, 1.55", "6.01353, 161.868, -8.18902, 1.25", "6.06134, 162.449, -8.30614, 0.66", "6.17991, 163.537, -8.47259, 0.29", "6.26524, 164.163, -8.54296, 0.88", "6.31535, 164.486, -8.57137, 1.11", "6.39376, 165.043, -8.61239, 0.96", "6.49626, 166.159, -8.64729, 0.29", "6.5477, 167.362, -8.64744, 0.29", "6.54205, 168.144, -8.62963, 1.33", "6.5232, 168.76, -8.61992, 1.92", "6.48434, 169.439, -8.60843, 2.21", "6.32488, 171.314, -8.57719, 0.37", "6.20026, 172.387, -8.56127, 0.37", "6.07247, 173.409, -8.54727, 0.37", "5.97563, 174.157, -8.54209, 0.22", "5.87579, 174.98, -8.54193, 1.33", "5.84397, 175.28, -8.54524, 2.06", "5.80772, 175.577, -8.55858, 2.21", "5.69752, 176.289, -8.59487, 1.69", "5.48643, 177.418, -8.66095, 0.22", "5.36272, 178.007, -8.70015, 0.81", "5.29335, 178.359, -8.72875, 0.81", "5.15846, 179.263, -8.80546, 0.22", "5.10261, 179.861, -8.85957, 0.81", "5.09864, 179.996, -8.87182, 0.81", "5.11522, 180.423, -8.91059, 0.81", "5.14852, 180.787, -8.93962, 0.74", "5.2709, 181.69, -8.99911, 0.22", "5.38365, 182.364, -9.04558, 0.81", "5.43269, 182.682, -9.0698, 1.03", "5.4965, 183.162, -9.10917, 0.44", "5.59182, 184.06, -9.18733, 0.29", "5.65602, 184.817, -9.25963, 0.29", "5.70685, 185.754, -9.35215, 1.55", "5.72524, 186.045, -9.38163, 1.92", "5.73019, 186.113, -9.38854, 1.92", "5.75087, 186.41, -9.41912, 1.92", "5.85627, 188.229, -9.61411, 0.22", "5.8847, 189.076, -9.70686, 0.66", "5.88518, 189.411, -9.74277, 1.03", "5.86738, 189.914, -9.80294, 1.03", "5.82171, 190.478, -9.87617, 0.81", "5.74168, 191.072, -9.96018, 0.37", "5.69182, 191.328, -9.99753, 0.37", "5.60182, 191.789, -10.0655, 0.37", "5.47928, 192.44, -10.1607, 0.29", "5.35516, 193.202, -10.267, 0.29", "5.34887, 193.259, -10.2746, 0.29", "5.27259, 194.282, -10.3974, 0.22", "5.27017, 194.348, -10.4051, 0.22", "5.26864, 194.942, -10.4721, 0.22", "5.27253, 195.009, -10.4811, 0.22", "5.35573, 195.731, -10.5873, 1.47", "5.40735, 196.087, -10.6473, 1.84", "5.41493, 196.135, -10.6562, 1.84", "5.47167, 196.485, -10.7205, 1.84", "5.65169, 197.547, -10.9146, 0.22", "5.81171, 198.563, -11.0945, 0.22", "5.88099, 199.037, -11.1655, 0.88", "5.9199, 199.391, -11.2119, 1.18", "5.94288, 199.758, -11.2509, 0.96", "5.94248, 199.817, -11.2555, 0.96", "5.86999, 200.349, -11.2752, 0.37", "5.78101, 200.792, -11.2867, 0.37", "5.69778, 201.267, -11.2893, 0.37", "5.66602, 201.515, -11.2907, 0.29", "5.62576, 202.049, -11.2947, 0.22", "5.61386, 202.38, -11.2987, 0.52", "5.62288, 203.064, -11.3115, 0.22", "5.65579, 203.596, -11.3279, 0.22", "5.71805, 204.077, -11.3565, 1.11", "5.78871, 204.523, -11.4139, 1.47", "5.79792, 204.587, -11.4263, 1.47", "5.83444, 204.892, -11.5018, 1.33", "5.83952, 204.977, -11.5277, 1.33", "5.83997, 205.725, -11.7724, 0.74", "5.83771, 206.59, -12.0624, 0.29", "5.8381, 207.077, -12.219, 0.37", "5.83956, 207.127, -12.2335, 0.37", "5.86031, 207.541, -12.3359, 0.37", "5.9038, 208.143, -12.4631, 0.22", "5.97856, 208.857, -12.5855, 1.11", "6.04189, 209.286, -12.6523, 1.4", "6.113, 209.687, -12.7171, 1.18", "6.21474, 210.229, -12.8113, 0.44", "6.3954, 211.08, -12.982, 0.22", "6.54088, 211.646, -13.0942, 0.74", "6.63298, 211.992, -13.1552, 1.33", "6.64604, 212.039, -13.1632, 1.33", "6.80682, 212.634, -13.2523, 1.62", "6.89242, 212.958, -13.2926, 1.62", "7.24079, 214.29, -13.4171, 0.29", "7.45494, 215.175, -13.4837, 0.29", "7.4668, 215.232, -13.4881, 0.29", "7.62064, 216.213, -13.5625, 0.29", "7.66214, 216.695, -13.596, 1.03", "7.66341, 216.763, -13.6007, 1.03", "7.63441, 217.311, -13.6498, 1.18", "7.54952, 218.289, -13.7446, 0.29", "7.47812, 219.068, -13.8174, 0.29", "7.40426, 219.786, -13.8839, 1.18", "7.37647, 220.097, -13.9097, 1.47", "7.33924, 220.563, -13.9442, 1.25", "7.31858, 220.945, -13.9664, 1.33", "7.30106, 221.97, -14.0024, 0.22", "7.3071, 222.095, -14.0056, 0.22", "7.42943, 223.018, -13.9958, 0.22", "7.44142, 223.084, -13.9932, 0.22", "7.57853, 223.72, -13.9529, 0.74", "7.64839, 224.024, -13.9288, 1.18", "7.71479, 224.39, -13.902, 1.18", "7.85382, 225.477, -13.8406, 0.22", "7.85935, 225.535, -13.8378, 0.22", "7.90509, 226.128, -13.8158, 0.66", "7.9323, 226.436, -13.8234, 0.66", "8.05485, 227.511, -13.8965, 0.22", "8.13127, 228.106, -13.956, 1.25", "8.20579, 228.629, -14.0229, 1.55", "8.30303, 229.208, -14.0989, 1.69", "8.53156, 230.378, -14.2594, 0.29", "8.76826, 231.525, -14.4181, 0.22", "8.87552, 232.017, -14.4873, 0.66", "8.95569, 232.373, -14.5323, 0.81", "8.96738, 232.43, -14.5386, 0.81", "9.1916, 233.651, -14.6427, 0.22", "9.30862, 234.369, -14.673, 1.03", "9.33614, 234.552, -14.6842, 1.33", "9.49413, 235.655, -14.7578, 0.22", "9.56039, 236.136, -14.79, 0.81", "9.61173, 236.551, -14.8174, 1.03", "9.64876, 236.892, -14.8393, 0.74", "9.76595, 238.185, -14.9283, 0.22", "9.80242, 238.801, -14.9739, 0.44", "9.81019, 239.547, -15.0357, 0.22", "9.80957, 240.211, -15.0893, 1.11", "9.80375, 240.569, -15.117, 1.33", "9.7926, 241.121, -15.1575, 0.37", "9.77903, 241.838, -15.2017, 0.15", "9.78258, 242.378, -15.2372, 0.74", "9.78866, 242.437, -15.2408, 0.74", "9.8271, 242.677, -15.254, 0.74", "10.0143, 243.614, -15.3022, 0.22", "10.1319, 244.137, -15.3272, 1.18", "10.2215, 244.51, -15.346, 1.62", "10.6158, 246.19, -15.4397, 0.22", "10.7345, 246.722, -15.4716, 0.29", "10.7464, 246.78, -15.4754, 0.29", "10.8753, 247.491, -15.5223, 0.29", "10.9905, 248.181, -15.5729, 0.59", "11.0511, 248.654, -15.6221, 1.11", "11.0588, 248.736, -15.6319, 1.11", "11.1117, 249.208, -15.6868, 1.55", "11.169, 249.724, -15.7458, 1.55", "11.1742, 249.772, -15.7512, 1.55", "11.3223, 251.383, -15.9189, 0.22", "11.4294, 252.549, -16.029, 0.22", "11.5361, 253.358, -16.09, 1.4", "11.5658, 253.543, -16.1008, 1.77", "11.6591, 254.079, -16.1252, 1.4", "11.7938, 254.725, -16.1398, 0.74", "12.0068, 255.571, -16.1349, 0.29", "12.4439, 257.083, -16.114, 0.22", "12.6317, 257.684, -16.1025, 0.66", "12.7285, 257.971, -16.096, 0.66", "13.0008, 258.7, -16.0729, 0.22", "13.022, 258.756, -16.0694, 0.22", "13.1853, 259.238, -16.0253, 0.52", "13.202, 259.302, -16.0176, 0.52", "13.2756, 259.596, -15.9776, 0.52", "13.3819, 260.007, -15.8888, 0.22", "13.5932, 260.769, -15.6736, 1.03", "13.7244, 261.166, -15.5345, 1.62", "13.8442, 261.514, -15.4025, 1.47", "14.0127, 262.016, -15.1988, 1.33", "14.3944, 263.223, -14.6622, 0.22", "14.6377, 264.005, -14.2948, 1.18", "14.9564, 264.983, -13.818, 0.22", "15.0907, 265.395, -13.6089, 0.22", "15.2728, 265.952, -13.3192, 0.81", "15.6669, 267.139, -12.7012, 0.22", "15.682, 267.19, -12.6762, 0.22", "15.7804, 267.569, -12.4919, 0.81", "15.7925, 267.621, -12.4678, 0.81", "15.8622, 267.847, -12.3557, 1.11", "16.0139, 268.196, -12.211, 0.88" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-21.6043, -36.6121, 18.9143, 0.29", "-22.222, -36.6466, 19.3837, 0.29", "-22.9049, -36.6955, 20.043, 0.29", "-23.2422, -36.7534, 20.3473, 0.59", "-23.7952, -36.9204, 20.7858, 0.59", "-23.8522, -36.9426, 20.8225, 0.59", "-24.8068, -37.3591, 21.3585, 0.59", "-24.8386, -37.3756, 21.3795, 0.59", "-25.2637, -37.6514, 21.7356, 0.37", "-25.6062, -37.9149, 22.0333, 0.29", "-25.9124, -38.1669, 22.2859, 0.29", "-25.9351, -38.1865, 22.3048, 0.29", "-26.4967, -38.7288, 22.7868, 0.74", "-26.6296, -38.8748, 22.9384, 1.03", "-26.9208, -39.2722, 23.391, 0.29", "-26.9513, -39.3197, 23.443, 0.29", "-27.1333, -39.6274, 23.7448, 0.37", "-27.2733, -39.857, 23.9349, 0.52", "-27.3954, -40.0509, 24.0493, 0.52", "-27.6955, -40.3718, 24.2144, 0.29", "-28.0972, -40.6219, 24.3392, 0.29", "-28.3423, -40.7174, 24.3994, 0.59", "-28.5182, -40.761, 24.4358, 0.88", "-28.6965, -40.7978, 24.4691, 1.03", "-29.5258, -40.9682, 24.661, 0.29", "-30.0274, -41.0701, 24.8045, 0.44", "-30.3156, -41.1521, 24.9102, 0.74", "-30.3679, -41.175, 24.9321, 0.74", "-30.671, -41.3324, 25.0716, 0.66", "-31.1681, -41.6496, 25.3359, 0.66", "-31.1953, -41.6743, 25.3548, 0.66", "-31.4052, -41.8938, 25.5039, 0.29", "-31.8276, -42.3795, 25.8295, 0.22", "-35.6505, -45.1556, 29.4127, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-21.6043, -36.6121, 18.9143, 0.74", "-21.9083, -36.0987, 20.2495, 0.74", "-22.3593, -35.4206, 21.8017, 0.66", "-22.388, -35.3776, 21.9003, 0.66", "-22.5215, -35.1768, 22.3599, 0.66", "-22.5374, -35.153, 22.4144, 0.66", "-22.6394, -34.9996, 22.7656, 0.52", "-22.7461, -34.7883, 23.0001, 0.52", "-25.5943, -31.8378, 30.4116, 0.52", "-27.7299, -28.2104, 37.7441, 0.52", "-29.4045, -26.1226, 45.7951, 0.52", "-29.4454, -23.3304, 53.7924, 0.52" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-7.29874, -23.5944, 1.01831, 0.96", "-7.76474, -24.6877, 1.04835, 0.96", "-8.1767, -25.7776, 1.07326, 0.96", "-8.21409, -25.9019, 1.0754, 0.96", "-8.3699, -26.5415, 1.06312, 0.96", "-8.60666, -27.6399, 1.02344, 1.11", "-8.85428, -28.9538, 0.922047, 1.11", "-8.86122, -29.0169, 0.915829, 1.11", "-8.95313, -30.3269, 0.763624, 1.03", "-9.00549, -31.2724, 0.639593, 1.99", "-9.00715, -31.3353, 0.629324, 1.99", "-9.00606, -32.2017, 0.433088, 2.87" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-7.29874, -23.5944, 1.01831, 1.92", "-7.09691, -24.6316, 1.12559, 1.92", "-6.90844, -25.5652, 1.21729, 1.92", "-6.73343, -26.4144, 1.29657, 1.92", "-6.57567, -27.2013, 1.36578, 2.14", "-6.42137, -27.9396, 1.4277, 1.62", "-6.25408, -28.6798, 1.48573, 1.99", "-6.12494, -29.1771, 1.51297, 2.73", "-5.9584, -29.7299, 1.54475, 2.36", "-5.74839, -30.3429, 1.60081, 1.99", "-5.4439, -31.1412, 1.69969, 1.92", "-5.24178, -31.6159, 1.7736, 2.28", "-5.03034, -32.0914, 1.87069, 2.5", "-4.82929, -32.5453, 1.9873, 2.58", "-4.51869, -33.2814, 2.23173, 1.69", "-4.50794, -33.3088, 2.2423, 1.69", "-4.30431, -33.9626, 2.5067, 1.47", "-4.09919, -34.8813, 2.87647, 1.25", "-4.02882, -35.3972, 3.07458, 1.62", "-3.99969, -35.944, 3.26469, 1.62", "-4.01444, -36.5317, 3.43855, 1.25", "-4.08308, -37.2047, 3.61497, 1.25", "-4.22741, -37.8585, 3.75433, 1.77", "-4.35147, -38.2227, 3.80323, 1.92", "-4.51838, -38.6341, 3.83242, 1.92", "-4.70087, -39.0324, 3.84268, 2.06", "-4.94418, -39.5108, 3.84802, 1.92", "-5.26295, -40.1137, 3.84654, 1.77", "-5.60351, -40.7607, 3.83645, 1.55", "-6.00848, -41.5484, 3.82503, 1.4", "-6.32127, -42.1781, 3.83279, 1.4", "-6.57092, -42.7227, 3.85304, 1.84", "-6.73719, -43.1497, 3.89132, 1.77", "-6.90897, -43.7311, 3.97487, 1.25", "-6.91641, -43.7716, 3.98271, 1.25", "-6.98305, -44.5291, 4.16426, 0.88", "-6.97441, -44.8964, 4.2602, 1.62", "-6.90015, -45.5589, 4.43137, 1.92", "-6.80474, -46.1387, 4.56878, 1.92", "-6.70815, -46.6858, 4.68019, 1.77", "-6.70238, -46.7216, 4.68586, 1.77", "-6.59, -47.4722, 4.76809, 1.62", "-6.51765, -48.0776, 4.80054, 1.33", "-6.4619, -48.6467, 4.80154, 1.18", "-6.41889, -49.19, 4.79225, 1.18", "-6.37991, -49.8061, 4.77171, 1.55", "-6.35825, -50.5643, 4.72708, 1.62", "-6.37138, -51.2244, 4.67247, 2.14", "-6.40042, -51.7244, 4.626, 2.36", "-6.43878, -52.1979, 4.58011, 2.58", "-6.46967, -52.5498, 4.54881, 3.02", "-6.54395, -53.3918, 4.49867, 2.21", "-6.59743, -54.1349, 4.4775, 1.77", "-6.6324, -54.8069, 4.47995, 1.77", "-6.64831, -55.5526, 4.51098, 1.84", "-6.62875, -56.4263, 4.60479, 1.84", "-6.56914, -57.309, 4.75639, 1.18", "-6.45338, -58.223, 4.97643, 0.96", "-6.44736, -58.2583, 4.98875, 0.96", "-6.31892, -58.861, 5.29232, 1.33", "-6.16777, -59.4604, 5.67386, 1.84", "-6.0525, -59.9236, 6.00639, 1.84", "-5.9504, -60.3771, 6.33018, 1.77", "-5.79521, -61.2142, 6.87355, 1.69", "-5.67756, -62.0197, 7.29278, 0.74", "-5.63268, -62.4895, 7.46857, 0.74", "-5.5954, -63.0804, 7.62084, 1.18", "-5.57417, -63.6417, 7.70373, 1.47", "-5.57219, -64.1944, 7.69774, 1.62", "-5.58586, -64.6082, 7.61799, 1.92", "-5.61095, -64.938, 7.52993, 1.92", "-5.614, -64.9681, 7.52228, 1.92", "-5.66016, -65.3655, 7.43622, 1.92", "-5.73962, -65.9403, 7.34652, 1.33", "-5.83876, -66.5074, 7.27275, 1.47", "-5.94483, -67.0828, 7.20649, 1.92", "-6.01624, -67.5066, 7.16277, 1.92", "-6.10104, -68.0763, 7.11435, 1.99", "-6.17663, -68.7856, 7.07064, 1.99", "-6.22259, -69.604, 7.03497, 1.99", "-6.22304, -69.7985, 7.03168, 2.36", "-6.20828, -70.2625, 7.02479, 1.62", "-6.17852, -70.7532, 7.02016, 1.25", "-6.12633, -71.3629, 7.01663, 1.11", "-6.08668, -71.8783, 7.01451, 0.81", "-6.05036, -72.5497, 7.01961, 0.66", "-6.05213, -73.1305, 7.02508, 1.55", "-6.05398, -73.1682, 7.02555, 1.55", "-6.0812, -73.4776, 7.05344, 2.21", "-6.13351, -73.9108, 7.11906, 1.92", "-6.20345, -74.4808, 7.23048, 1.62", "-6.26693, -75.0086, 7.35353, 1.4", "-6.32458, -75.5916, 7.53958, 1.4", "-6.40654, -76.5085, 7.8796, 1.33", "-6.43265, -76.9594, 8.06456, 0.96", "-6.43935, -77.6386, 8.36181, 0.74", "-6.43765, -77.6794, 8.38163, 0.74", "-6.33414, -78.6068, 8.86382, 0.66", "-6.32606, -78.6374, 8.88222, 0.66", "-6.08145, -79.2498, 9.25989, 1.69", "-5.92969, -79.5899, 9.47632, 2.21", "-5.69693, -80.1225, 9.80352, 3.02", "-5.56165, -80.4719, 9.99682, 3.02", "-5.19769, -81.5944, 10.5254, 0.52", "-5.10819, -82.0175, 10.6837, 0.52", "-5.05807, -82.5475, 10.8301, 2.36", "-5.0584, -83.0503, 10.9163, 3.09", "-5.07892, -83.2929, 10.9324, 3.24", "-5.15095, -83.7866, 10.9357, 3.02", "-5.36761, -84.8791, 10.8753, 1.11", "-5.47084, -85.4509, 10.8456, 0.96", "-5.53225, -85.8719, 10.8252, 1.25", "-5.59018, -86.4494, 10.8149, 1.18", "-5.6134, -86.885, 10.8233, 0.52", "-5.61301, -86.9227, 10.826, 0.52", "-5.55882, -87.3271, 10.893, 1.4", "-5.55079, -87.3567, 10.8987, 1.4", "-5.34724, -87.8523, 10.995, 2.14", "-5.1855, -88.1969, 11.0554, 2.14", "-5.07148, -88.4474, 11.0901, 2.36", "-4.87633, -88.9184, 11.1435, 1.33", "-4.66594, -89.4903, 11.1838, 0.81", "-4.44082, -90.2146, 11.1986, 0.81", "-4.26855, -90.9186, 11.1805, 0.81", "-4.12212, -91.6677, 11.1584, 1.62", "-4.05669, -92.0696, 11.1468, 1.92", "-3.97185, -92.6885, 11.1542, 1.25", "-3.90027, -93.2819, 11.1826, 0.96", "-3.80911, -94.0839, 11.2481, 0.96", "-3.70996, -94.7773, 11.3324, 0.88", "-3.58774, -95.4846, 11.4537, 1.62", "-3.41727, -96.2946, 11.6228, 1.84", "-3.31944, -96.7307, 11.7543, 1.92", "-3.31089, -96.7692, 11.7689, 1.92", "-3.18758, -97.3418, 12.0118, 1.62", "-3.0513, -98.0512, 12.3197, 0.59", "-2.95625, -98.6048, 12.5562, 0.59", "-2.81597, -99.4381, 12.8734, 0.52", "-2.72519, -99.9897, 13.0942, 1.69", "-2.66953, -100.347, 13.2411, 2.5", "-2.62946, -100.661, 13.3783, 2.5", "-2.58049, -101.038, 13.5434, 2.5", "-2.50229, -101.608, 13.7634, 1.77" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-9.31597, 115.222, -21.9705, 0.59", "-10.2042, 116.08, -22.3878, 0.59", "-10.8875, 116.86, -22.8072, 0.44", "-10.9518, 116.983, -23.4443, 0.74", "-11.041, 117.189, -24.443, 0.74", "-11.0598, 117.221, -24.5939, 0.74", "-11.186, 117.401, -25.3527, 0.88", "-11.1967, 117.416, -25.4203, 0.88", "-12.1151, 118.643, -30.8132, 1.62", "-12.4343, 118.989, -32.3291, 1.4", "-12.8431, 119.331, -33.8861, 0.37", "-13.1063, 119.515, -34.7215, 0.74", "-13.762, 119.917, -36.4413, 0.29", "-14.0563, 120.101, -37.0499, 1.4", "-14.3966, 120.316, -37.5295, 1.84", "-15.5918, 121.024, -39.3308, 0.44", "-15.7832, 121.15, -39.6415, 0.29", "-16.0954, 121.351, -40.1627, 0.29", "-16.3975, 121.546, -40.6478, 0.59", "-17.44, 122.261, -42.3881, 0.44", "-17.7932, 122.542, -42.949, 0.22", "-18.0675, 122.794, -43.3373, 0.74", "-18.5244, 123.247, -44.0459, 0.15", "-18.5964, 123.32, -44.159, 0.15", "-18.7669, 123.501, -44.4125, 0.15", "-19.3985, 124.227, -45.2318, 1.47", "-19.7247, 124.604, -45.6357, 1.62", "-20.9524, 125.975, -47.2029, 0.22", "-20.9886, 126.016, -47.2505, 0.22", "-21.4401, 126.491, -47.8343, 0.22", "-22.0381, 127.082, -48.5939, 1.25", "-22.3204, 127.364, -48.9952, 1.4", "-23.1783, 128.256, -50.2716, 0.22", "-23.2316, 128.317, -50.3593, 0.22", "-23.9078, 129.173, -51.619, 1.47", "-24.1011, 129.442, -52.0054, 1.99", "-25.0557, 130.968, -54.0384, 0.37", "-25.2818, 131.378, -54.5375, 0.29", "-25.6354, 132.093, -55.3194, 1.18", "-26.0166, 132.922, -56.1585, 0.52", "-26.3301, 133.72, -56.8745, 1.55", "-26.4327, 134.009, -57.1045, 1.84", "-26.9877, 135.753, -58.2114, 0.22", "-27.0026, 135.81, -58.2468, 0.22", "-27.0984, 136.328, -58.5304, 0.22", "-27.1252, 136.95, -58.8414, 1.4", "-27.122, 137.021, -58.8761, 1.4", "-27.0881, 137.424, -59.0538, 1.4", "-26.8712, 138.944, -59.7063, 0.15", "-26.7784, 139.584, -60.0047, 0.74", "-26.5509, 141.064, -60.744, 0.15", "-26.465, 141.581, -61.014, 0.74", "-26.4135, 141.839, -61.1497, 0.88", "-26.0887, 143.127, -61.8173, 0.15", "-26.0722, 143.176, -61.8459, 0.15", "-25.9246, 143.548, -62.0973, 0.37", "-25.8736, 143.63, -62.2018, 0.37", "-25.5432, 143.983, -62.9209, 0.22", "-25.2621, 144.24, -63.5401, 0.59", "-24.5055, 144.783, -65.2321, 1.69", "-24.424, 144.835, -65.4231, 1.69", "-23.1814, 145.432, -68.5684, 0.22", "-22.9522, 145.501, -69.1898, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-9.31597, 115.222, -21.9705, 2.65", "-9.22988, 116.067, -21.4791, 2.65", "-9.19664, 117.029, -21.0326, 2.06", "-9.21274, 118.738, -20.3634, 1.92", "-9.2148, 118.792, -20.3444, 1.92", "-9.28853, 119.775, -20.0367, 0.74", "-9.422, 121.203, -19.6229, 0.52", "-9.60082, 122.331, -19.3396, 0.52", "-9.70538, 122.869, -19.2497, 0.52", "-9.74853, 123.095, -19.2417, 0.52", "-9.86246, 123.806, -19.2305, 0.52", "-9.87517, 123.916, -19.2312, 0.52", "-9.91389, 124.732, -19.2557, 0.44", "-9.91832, 125.38, -19.2473, 0.44", "-9.8812, 126.615, -19.2187, 1.84", "-9.83731, 127.626, -19.1605, 2.73", "-9.81032, 128.165, -19.1144, 3.54", "-9.78118, 128.874, -19.0389, 3.9", "-9.76612, 129.441, -18.9655, 4.05", "-9.76726, 129.975, -18.8992, 3.9", "-9.80913, 130.961, -18.789, 3.61", "-9.87608, 131.651, -18.7128, 2.8", "-9.97881, 132.425, -18.6356, 1.69", "-10.1125, 133.334, -18.5471, 1.11", "-10.2776, 134.356, -18.4559, 0.81", "-10.3764, 134.913, -18.4161, 0.66", "-10.5917, 136.089, -18.3757, 0.52", "-10.8012, 137.117, -18.3374, 0.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-35.6505, -45.1556, 29.4127, 0.37", "-41.8224, -49.0403, 34.519, 0.37", "-46.6872, -54.5804, 39.4345, 0.37", "-51.9727, -58.8605, 45.1703, 0.37", "-55.7273, -63.2434, 51.9456, 0.37", "-61.2256, -67.4133, 57.5642, 0.37", "-66.6361, -71.1774, 63.5576, 0.37", "-71.7909, -76.6133, 68.2939, 0.37", "-78.581, -80.6589, 72.3746, 0.37", "-86.7723, -82.8454, 75.1659, 0.37", "-95.1594, -85.1561, 77.1474, 0.37", "-103.429, -86.079, 80.4148, 0.37", "-111.756, -86.7426, 83.606, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-35.6505, -45.1556, 29.4127, 0.29", "-41.883, -48.9709, 34.2008, 0.37", "-47.2534, -53.2919, 39.5513, 0.37", "-52.9222, -58.449, 43.6711, 0.37", "-58.7908, -64.0709, 46.7313, 0.37", "-64.7685, -69.82, 49.2874, 0.37", "-70.1077, -75.5628, 53.0134, 0.37", "-74.9291, -82.059, 56.0852, 0.37", "-79.5143, -89.172, 57.7523, 0.37", "-85.6507, -95.2431, 58.4862, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-29.4454, -23.3304, 53.7924, 0.37", "-29.8782, -20.5673, 64.1525, 0.37", "-31.149, -17.4818, 74.3518, 0.37", "-33.0463, -12.7905, 83.7845, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-29.4454, -23.3304, 53.7924, 0.29", "-29.2159, -21.7043, 61.9009, 0.37", "-28.5494, -19.7336, 69.9008, 0.37", "-26.7829, -19.3512, 77.9873, 0.37", "-24.7725, -19.9558, 86.0104, 0.37", "-23.4791, -21.3431, 94.0859, 0.37", "-22.9867, -22.1059, 102.331, 0.37", "-23.0431, -22.6685, 110.606, 0.37", "-22.9097, -23.0823, 118.889, 0.37", "-23.1352, -22.273, 127.131, 0.37", "-23.5458, -21.384, 135.358, 0.37", "-23.4086, -20.6087, 143.605, 0.37", "-22.7131, -20.9864, 151.86, 0.37", "-22.1298, -20.8066, 160.128, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-9.00606, -32.2017, 0.433088, 0.59", "-9.40138, -32.6175, 0.143046, 0.59", "-10.0989, -33.1459, -0.276318, 0.44", "-10.8883, -33.5381, -0.743419, 0.29", "-11.3232, -33.6972, -0.970913, 0.22", "-11.8638, -33.8798, -1.23356, 0.29", "-12.5157, -34.0981, -1.53227, 0.29", "-13.3441, -34.336, -1.85712, 0.29", "-14.2892, -34.5967, -2.21742, 0.29", "-15.017, -34.8257, -2.50004, 0.29", "-15.9586, -35.1966, -2.8924, 1.25", "-16.2398, -35.3452, -3.01959, 1.77", "-16.6638, -35.6439, -3.22974, 1.77", "-17.8328, -36.6443, -3.83476, 1.11", "-18.4693, -37.2908, -4.19138, 0.52", "-18.9022, -37.7933, -4.49116, 0.37", "-19.4439, -38.4949, -4.95574, 0.37", "-19.8163, -39.0233, -5.32521, 0.37", "-19.8774, -39.1133, -5.39034, 0.37", "-20.3791, -39.8591, -5.925, 1.25", "-20.7172, -40.3047, -6.29401, 1.18", "-21.3621, -40.9888, -6.92309, 0.29", "-21.6843, -41.2368, -7.1658, 0.22", "-22.1421, -41.5363, -7.42893, 0.22", "-22.5067, -41.7687, -7.5889, 0.44", "-22.8863, -41.9965, -7.70187, 0.44", "-23.2802, -42.2338, -7.7723, 0.29", "-23.6883, -42.4699, -7.83413, 0.29", "-24.294, -42.8207, -8.00545, 0.37", "-24.7681, -43.1056, -8.17916, 0.37", "-25.3112, -43.4075, -8.40887, 0.29", "-26.2989, -43.8941, -8.87933, 1.18", "-27.0288, -44.2328, -9.23627, 1.99", "-27.7459, -44.5377, -9.58765, 2.28", "-28.1904, -44.7182, -9.79777, 1.99", "-29.3091, -45.2082, -10.3119, 0.59", "-30.0454, -45.6045, -10.6395, 0.37", "-30.5855, -46.001, -10.8898, 0.37", "-31.1661, -46.4869, -11.1568, 1.11", "-31.5673, -46.8384, -11.3295, 1.69", "-31.9969, -47.2338, -11.5197, 1.84", "-32.5663, -47.7764, -11.7564, 1.4", "-33.5328, -48.6328, -12.112, 0.44", "-34.05, -49.0453, -12.2955, 0.44", "-34.6995, -49.5239, -12.5055, 0.37", "-35.2753, -49.906, -12.6817, 1.18", "-35.7761, -50.2274, -12.8277, 1.62", "-36.2958, -50.5902, -12.9713, 1.03", "-36.3469, -50.6339, -12.988, 1.03", "-36.6054, -50.9167, -13.1043, 0.88", "-37.0283, -51.4418, -13.3531, 0.44", "-37.4669, -52.0028, -13.6385, 0.29", "-37.8568, -52.5193, -13.9145, 0.29", "-38.5614, -53.4625, -14.4319, 1.92", "-39.0411, -54.1116, -14.7841, 2.73", "-39.5261, -54.7753, -15.1513, 2.65", "-40.4728, -56.0218, -15.85, 0.66", "-40.5181, -56.0774, -15.8823, 0.66", "-41.219, -56.8931, -16.3622, 0.29", "-41.53, -57.2466, -16.5556, 0.29", "-41.9154, -57.676, -16.7965, 0.29", "-42.3645, -58.1887, -17.1252, 0.29", "-42.7808, -58.6605, -17.4695, 1.11", "-42.8258, -58.7128, -17.5076, 1.11", "-43.1967, -59.1492, -17.8187, 1.25", "-43.6718, -59.7106, -18.2042, 0.96", "-44.4793, -60.7792, -18.8103, 0.37", "-44.5139, -60.8318, -18.8381, 0.37", "-44.8899, -61.425, -19.1278, 0.22", "-45.1423, -61.8288, -19.3069, 0.22", "-45.2173, -61.9424, -19.3596, 0.66", "-45.7435, -62.7188, -19.6945, 0.52", "-46.608, -63.972, -20.2152, 1.77", "-47.2293, -64.862, -20.5859, 2.58", "-47.7603, -65.6044, -20.8988, 2.58", "-48.7893, -67.0219, -21.4867, 0.44", "-49.3352, -67.7535, -21.773, 0.29", "-49.3831, -67.8144, -21.7943, 0.29", "-49.7475, -68.2728, -21.9105, 0.29", "-50.2997, -68.9868, -22.0584, 1.47", "-50.5949, -69.388, -22.1203, 1.84", "-50.9476, -69.9471, -22.1641, 1.47", "-51.7943, -71.4238, -22.2752, 0.29", "-52.0878, -71.987, -22.3131, 1.11", "-52.284, -72.3905, -22.3356, 1.25", "-52.556, -72.9969, -22.3586, 1.03", "-52.9267, -73.8566, -22.3835, 0.22", "-53.1688, -74.4127, -22.3894, 0.22", "-53.3205, -74.7565, -22.3827, 0.59", "-53.5572, -75.2298, -22.3731, 0.74", "-53.7217, -75.5112, -22.3762, 0.37", "-54.0591, -76.0288, -22.3925, 0.22", "-54.5591, -76.7271, -22.4221, 1.55", "-55.0244, -77.3735, -22.4548, 2.21", "-55.2889, -77.7399, -22.4731, 1.84", "-56.1228, -78.8893, -22.5267, 0.22", "-56.5523, -79.4701, -22.5506, 0.22", "-57.0497, -80.1046, -22.5709, 1.11", "-57.3444, -80.461, -22.5775, 1.62", "-57.7128, -80.8809, -22.5752, 1.84", "-58.2722, -81.5022, -22.5575, 1.11", "-58.5886, -81.8501, -22.5404, 0.66", "-59.4215, -82.7648, -22.5026, 0.29", "-59.8718, -83.2636, -22.4857, 0.59", "-60.9268, -84.5029, -22.4356, 0.29", "-60.9712, -84.558, -22.433, 0.29", "-61.6808, -85.4814, -22.3847, 1.18", "-61.951, -85.8477, -22.3628, 1.55", "-62.201, -86.2184, -22.3374, 1.55", "-62.8681, -87.267, -22.3162, 0.52", "-63.4373, -88.2253, -22.3577, 0.37", "-63.4716, -88.2867, -22.3642, 0.37", "-63.8749, -89.0739, -22.4824, 0.37", "-64.2022, -89.7404, -22.6026, 0.29", "-64.8111, -91.024, -22.8725, 1.99", "-65.0802, -91.6122, -23.0141, 2.28", "-65.6915, -93.0289, -23.346, 0.22", "-66.0566, -93.8543, -23.5191, 0.22", "-66.2218, -94.2328, -23.572, 0.74", "-66.2496, -94.2974, -23.5762, 0.74", "-66.4889, -94.8814, -23.5671, 0.74", "-66.8003, -95.6779, -23.5287, 0.22", "-67.1637, -96.5793, -23.4751, 0.22", "-67.7675, -98.0224, -23.3888, 2.14", "-67.9045, -98.3492, -23.3705, 2.36", "-68.4219, -99.533, -23.3045, 0.29", "-68.6619, -100.051, -23.2685, 0.22", "-68.996, -100.708, -23.2158, 0.22", "-69.4117, -101.476, -23.1462, 1.4", "-69.6439, -101.89, -23.1098, 1.77", "-69.9682, -102.486, -23.0455, 1.33", "-70.5003, -103.589, -22.9078, 0.37", "-70.8442, -104.383, -22.8147, 0.22", "-71.0459, -104.927, -22.7584, 0.22", "-71.2813, -105.635, -22.7034, 0.81", "-71.4102, -106.049, -22.6786, 0.81", "-71.6931, -106.933, -22.6611, 0.22", "-71.8891, -107.438, -22.6817, 0.22", "-72.1471, -107.986, -22.7176, 1.25", "-72.3757, -108.384, -22.7491, 1.77", "-72.6487, -108.812, -22.7858, 1.77", "-73.2517, -109.743, -22.8739, 0.44", "-73.8087, -110.586, -22.9548, 0.29", "-74.2797, -111.313, -23.0334, 1.4", "-74.5577, -111.741, -23.0804, 1.77", "-74.7882, -112.109, -23.122, 1.77", "-75.4143, -113.152, -23.2369, 0.37", "-75.858, -113.949, -23.315, 0.29", "-76.3247, -114.785, -23.411, 0.22", "-76.7411, -115.466, -23.5064, 0.22", "-77.2651, -116.251, -23.6256, 1.11", "-77.4665, -116.531, -23.67, 1.4", "-77.8797, -117.096, -23.7611, 0.59", "-78.3409, -117.751, -23.8686, 0.22", "-78.7918, -118.421, -23.9758, 0.22", "-79.2523, -119.088, -24.0892, 1.11", "-79.4618, -119.373, -24.1365, 1.55", "-79.7718, -119.781, -24.2034, 1.33", "-80.2992, -120.458, -24.308, 0.59", "-80.7053, -121.011, -24.3735, 0.22", "-80.9559, -121.361, -24.3987, 0.66", "-81.0865, -121.535, -24.4032, 0.66", "-81.2207, -121.706, -24.3992, 0.66", "-81.6296, -122.225, -24.3788, 0.22", "-82.0827, -122.788, -24.3015, 0.22", "-82.6479, -123.487, -24.1607, 1.33", "-82.8969, -123.791, -24.0884, 1.62", "-83.1641, -124.112, -24.0055, 1.33", "-84.0127, -125.112, -23.7305, 0.29", "-84.5557, -125.712, -23.5621, 0.29", "-85.0198, -126.154, -23.444, 0.29", "-85.473, -126.53, -23.357, 0.88", "-85.7904, -126.775, -23.3025, 0.88", "-86.1625, -127.041, -23.2468, 0.66", "-86.8225, -127.498, -23.1701, 0.15", "-87.4007, -127.943, -23.164, 0.15", "-87.943, -128.385, -23.1802, 0.15", "-88.2159, -128.603, -23.1986, 0.59", "-88.2738, -128.644, -23.1964, 0.59", "-88.5743, -128.862, -23.1629, 0.59", "-89.0692, -129.248, -23.0775, 0.22", "-89.1311, -129.306, -23.0652, 0.22", "-89.819, -129.951, -22.9271, 0.22", "-90.8552, -130.958, -22.7188, 1.77", "-91.2207, -131.321, -22.645, 2.14", "-91.6899, -131.788, -22.5597, 1.47", "-92.5622, -132.724, -22.4435, 0.37", "-93.2743, -133.556, -22.3894, 0.22", "-93.644, -134.063, -22.3941, 0.81", "-93.8423, -134.363, -22.4238, 0.96", "-94.1569, -134.849, -22.4945, 0.96", "-94.6922, -135.726, -22.6617, 0.22", "-94.7262, -135.784, -22.675, 0.22", "-95.057, -136.401, -22.8321, 0.22", "-95.4138, -137.1, -23.0046, 0.22", "-95.6347, -137.583, -23.1387, 0.96", "-95.8253, -138.01, -23.2559, 1.33", "-96.0816, -138.544, -23.4022, 1.11", "-96.5026, -139.322, -23.6653, 0.22", "-96.7186, -139.675, -23.7991, 0.59", "-97.3287, -140.635, -24.1485, 0.22", "-97.7885, -141.337, -24.3891, 1.18", "-98.1022, -141.788, -24.552, 1.4", "-98.8761, -142.831, -24.9218, 0.22", "-99.3317, -143.394, -25.1054, 0.22", "-99.8509, -144.016, -25.2826, 1.99", "-100.253, -144.479, -25.3897, 2.5", "-100.674, -144.969, -25.4955, 2.43", "-101.763, -146.251, -25.7143, 0.22", "-102.167, -146.743, -25.7656, 0.29", "-102.729, -147.43, -25.8298, 0.22", "-103.048, -147.833, -25.8605, 0.74", "-103.196, -148.038, -25.8587, 0.74", "-103.69, -148.822, -25.7882, 0.15", "-104.009, -149.47, -25.719, 0.15", "-104.093, -149.673, -25.7059, 0.81", "-104.35, -150.336, -25.6989, 1.33", "-104.598, -151.001, -25.7169, 1.33", "-104.621, -151.064, -25.7205, 1.33", "-104.994, -152.041, -25.8671, 0.22", "-105.396, -153.112, -26.0932, 0.22", "-105.7, -153.956, -26.3121, 1.62", "-105.904, -154.504, -26.4742, 1.92", "-106.078, -154.966, -26.6223, 1.92", "-106.527, -156.205, -27.0077, 0.22", "-106.776, -156.915, -27.221, 0.22", "-107.045, -157.771, -27.4968, 0.22", "-107.267, -158.513, -27.7458, 1.25", "-107.392, -158.87, -27.867, 1.62", "-107.578, -159.317, -28.003, 1.62", "-107.642, -159.447, -28.0379, 1.62", "-108.452, -160.85, -28.4625, 0.22", "-108.524, -160.972, -28.5073, 0.22", "-108.92, -161.705, -28.8025, 0.22", "-109.342, -162.52, -29.1435, 0.22", "-109.668, -163.133, -29.3977, 1.03", "-109.832, -163.435, -29.5208, 1.03", "-110.348, -164.373, -29.8884, 0.22", "-110.577, -164.803, -30.058, 0.59", "-110.89, -165.458, -30.3126, 0.22", "-111.114, -165.942, -30.4803, 0.22", "-111.39, -166.586, -30.6583, 1.25", "-111.545, -166.959, -30.7478, 1.62", "-111.591, -167.074, -30.7713, 1.62", "-112.071, -168.25, -31.0272, 0.15", "-112.367, -169.034, -31.2007, 1.25", "-112.476, -169.356, -31.2726, 1.25", "-112.839, -170.379, -31.5151, 0.22", "-112.867, -170.439, -31.5315, 0.22", "-113.147, -170.955, -31.6827, 0.74", "-113.181, -171.004, -31.6996, 0.74", "-113.353, -171.234, -31.7693, 0.74", "-114.014, -172.12, -31.9787, 0.15", "-114.531, -172.843, -32.0999, 1.11", "-114.62, -172.973, -32.1215, 1.11", "-114.664, -173.039, -32.1318, 1.11", "-115.805, -174.694, -32.3929, 0.22", "-116.159, -175.193, -32.4747, 1.03", "-116.446, -175.589, -32.5384, 1.11", "-117.336, -176.758, -32.7474, 0.22", "-117.481, -176.94, -32.7839, 0.59", "-118.179, -177.76, -32.9447, 0.22", "-118.531, -178.14, -33.0198, 1.33", "-118.831, -178.451, -33.0652, 1.55", "-119.304, -178.909, -33.0993, 0.88", "-120.267, -179.841, -33.1082, 0.22", "-120.696, -180.264, -33.1041, 0.66", "-120.901, -180.458, -33.125, 0.66", "-121.685, -181.171, -33.2613, 0.22", "-122.439, -181.842, -33.4439, 1.62", "-123.007, -182.338, -33.6278, 2.06", "-123.502, -182.749, -33.819, 2.06", "-125.234, -184.193, -34.5422, 0.22", "-125.234, -184.193, -34.5422, 0.59", "-125.347, -184.28, -34.5865, 0.59", "-126.066, -184.798, -34.8247, 0.22", "-126.781, -185.26, -34.9991, 0.22", "-127.554, -185.725, -35.1025, 1.77", "-127.985, -185.973, -35.0977, 2.06", "-129.644, -186.92, -34.9768, 0.15", "-129.976, -187.1, -34.9351, 0.74", "-130.347, -187.281, -34.8462, 0.74", "-131.142, -187.648, -34.5695, 0.22", "-131.82, -187.941, -34.2735, 0.22", "-132.558, -188.248, -33.8913, 1.18", "-132.91, -188.396, -33.6659, 1.55", "-134.026, -188.865, -32.9052, 0.29", "-134.847, -189.204, -32.3231, 0.22", "-135.211, -189.331, -32.0769, 0.74", "-135.513, -189.413, -31.8934, 1.03", "-136.505, -189.606, -31.3715, 0.15", "-136.822, -189.647, -31.246, 0.37", "-136.892, -189.652, -31.2286, 0.37", "-138.014, -189.658, -31.0409, 0.22", "-138.805, -189.644, -30.9464, 1.18", "-139.37, -189.634, -30.9052, 1.55", "-140.75, -189.619, -30.8658, 0.22", "-141.404, -189.621, -30.8284, 0.22", "-142.207, -189.64, -30.7578, 0.96", "-142.487, -189.651, -30.7154, 1.33", "-143.857, -189.697, -30.442, 0.22", "-144.419, -189.724, -30.2953, 0.22", "-145.435, -189.775, -29.976, 0.96", "-145.7, -189.79, -29.8778, 1.25", "-147.416, -189.902, -29.1835, 0.22", "-148.101, -189.955, -28.903, 0.22", "-149.404, -190.068, -28.3538, 1.84", "-149.674, -190.1, -28.2436, 2.36", "-151.445, -190.386, -27.5669, 0.22", "-151.917, -190.476, -27.3864, 0.66", "-152.636, -190.653, -27.1354, 0.22", "-152.691, -190.667, -27.1181, 0.22", "-153.438, -190.864, -26.948, 0.96", "-153.794, -190.954, -26.8892, 0.96", "-153.86, -190.971, -26.885, 0.96", "-154.879, -191.229, -26.8234, 0.22", "-154.947, -191.245, -26.8193, 0.22", "-156.003, -191.499, -26.7614, 0.22", "-156.08, -191.518, -26.7576, 0.22", "-157.159, -191.826, -26.6798, 0.22", "-157.235, -191.849, -26.6731, 0.22", "-157.711, -192.002, -26.6211, 1.11", "-158.197, -192.161, -26.5669, 1.4", "-158.395, -192.227, -26.544, 1.69", "-160.287, -192.85, -26.3192, 0.22", "-160.768, -193.003, -26.2592, 0.66", "-160.992, -193.076, -26.2307, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-9.00606, -32.2017, 0.433088, 2.58", "-8.7971, -32.9572, 0.0494609, 2.58", "-8.68335, -33.8133, -0.374374, 1.11", "-8.61753, -34.5449, -0.714067, 0.66", "-8.57614, -35.1142, -0.974974, 0.59", "-8.51384, -36.0252, -1.40435, 1.25", "-8.48368, -36.4074, -1.58998, 1.62", "-8.40961, -37.6047, -2.15839, 1.11", "-8.3565, -38.3151, -2.51366, 1.33", "-8.29107, -38.9533, -2.86582, 1.92", "-8.18964, -39.6268, -3.26964, 1.99", "-8.05549, -40.3168, -3.72737, 1.33", "-7.9089, -41.0515, -4.23875, 0.96", "-7.7396, -41.8547, -4.81591, 0.96", "-7.73523, -41.8835, -4.83776, 0.96", "-7.71001, -42.3766, -5.22608, 0.74", "-7.80597, -43.1027, -5.8688, 0.52", "-7.97356, -43.5913, -6.35213, 0.52", "-7.98777, -43.6186, -6.3816, 0.52", "-8.21823, -43.9975, -6.80598, 0.88", "-8.51057, -44.482, -7.33575, 1.18", "-8.98556, -45.2734, -8.17261, 0.59", "-9.25535, -45.7519, -8.62921, 0.59", "-9.26831, -45.7774, -8.65188, 0.59", "-9.45646, -46.2156, -8.99508, 0.59", "-9.70909, -46.9695, -9.47512, 1.55", "-9.84909, -47.5374, -9.73724, 2.14", "-9.92278, -47.8697, -9.84976, 2.36", "-9.93185, -47.9037, -9.85996, 2.36", "-10.0645, -48.2651, -9.96833, 2.36", "-10.2791, -48.6697, -10.1033, 2.06", "-10.6731, -49.2455, -10.307, 1.77", "-11.1172, -49.8321, -10.5268, 0.74", "-11.3459, -50.1123, -10.6412, 0.52", "-11.7591, -50.5796, -10.8454, 0.44", "-12.301, -51.109, -11.1086, 0.44", "-12.8734, -51.5888, -11.3876, 2.06" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-2.50229, -101.608, 13.7634, 0.88", "-2.50251, -102.737, 13.6321, 0.88", "-2.43969, -103.813, 13.4518, 0.88", "-2.36102, -104.56, 13.3225, 1.18", "-2.29869, -105.045, 13.2276, 1.18", "-2.11985, -106.357, 12.9679, 0.52", "-2.03878, -106.952, 12.8502, 0.52", "-1.84031, -108.118, 12.5978, 1.99", "-1.61159, -109.236, 12.3231, 3.09", "-1.4471, -109.938, 12.1347, 3.61", "-1.24898, -110.764, 11.9103, 3.61" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-2.50229, -101.608, 13.7634, 0.74", "-1.77578, -102.474, 13.535, 0.74", "-0.98294, -103.561, 13.2912, 0.66", "-0.5878, -104.103, 13.1697, 1.11", "-0.333765, -104.452, 13.0915, 1.25", "0.828173, -106.045, 12.7342, 0.29", "1.32202, -106.723, 12.5823, 0.29", "1.91569, -107.63, 12.3447, 0.29", "7.0182, -114.895, 11.3969, 0.29", "12.6464, -121.821, 11.9358, 0.29", "18.8789, -128.253, 12.1601, 0.29", "24.2057, -135.333, 13.3058, 0.29", "29.1036, -142.718, 14.3313, 0.29" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-22.9522, 145.501, -69.1898, 0.22", "-24.0444, 144.993, -69.98, 0.22", "-24.4861, 144.825, -70.3315, 1.18", "-24.6348, 144.773, -70.444, 1.18", "-26.6212, 144.123, -71.9009, 0.22", "-27.0495, 143.989, -72.2123, 0.22", "-28.4502, 143.551, -73.2309, 0.74", "-30.2465, 143.106, -74.5479, 0.22", "-30.8217, 142.983, -74.9747, 1.03", "-31.0487, 142.936, -75.1424, 1.25", "-31.2248, 142.907, -75.2622, 1.25" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-22.9522, 145.501, -69.1898, 0.52", "-23.4136, 146.518, -70.8164, 0.52", "-23.6929, 147.154, -71.7743, 0.22", "-24.0707, 148.176, -73.1037, 0.88", "-24.1271, 148.354, -73.3093, 1.03", "-24.5942, 149.951, -74.996, 0.15", "-24.705, 150.35, -75.396, 0.52", "-24.7451, 150.511, -75.5225, 0.52", "-24.9862, 151.702, -76.3262, 0.15", "-25.0661, 152.247, -76.6473, 0.81", "-25.1624, 152.971, -77.0461, 1.11", "-25.1682, 153.032, -77.0736, 1.11", "-25.3085, 154.446, -77.7232, 0.22", "-25.3822, 155.068, -78.0272, 0.96", "-25.447, 155.461, -78.2437, 1.11" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-10.8012, 137.117, -18.3374, 0.96", "-11.067, 138.012, -19.5577, 0.96", "-11.3362, 138.917, -20.7772, 1.03", "-11.3855, 139.129, -21.0598, 1.03", "-11.5364, 139.872, -22.0298, 0.29", "-11.6258, 140.453, -22.7094, 1.25", "-11.674, 140.856, -23.1369, 1.47", "-11.6831, 140.995, -23.2564, 1.47", "-11.7656, 142.279, -24.1542, 0.29", "-11.7703, 142.395, -24.2323, 0.29", "-11.7849, 143.381, -24.8245, 0.29", "-11.7753, 143.751, -25.0574, 0.59", "-11.736, 144.579, -25.5796, 0.44", "-11.677, 145.627, -26.2378, 2.28", "-11.6412, 146.256, -26.6261, 2.65", "-11.6222, 146.556, -26.8186, 2.65", "-11.502, 148.517, -28.1348, 0.37", "-11.4622, 149.139, -28.528, 0.29", "-11.456, 149.218, -28.5729, 0.29", "-11.4207, 149.666, -28.7879, 0.44", "-11.4078, 149.932, -28.8876, 0.44", "-11.3932, 150.726, -29.1199, 0.15", "-11.4167, 151.418, -29.2314, 0.74", "-11.4184, 151.485, -29.2442, 0.74", "-11.4309, 151.891, -29.3598, 0.74", "-11.4439, 152.23, -29.4711, 0.52", "-11.5001, 153.019, -29.7496, 0.29", "-11.5945, 153.995, -30.1046, 1.18", "-11.6489, 154.454, -30.2758, 1.69", "-11.8472, 156.083, -30.9614, 0.29", "-11.9308, 156.715, -31.2412, 0.29", "-12.1123, 157.909, -31.7841, 1.77", "-12.1717, 158.224, -31.9364, 2.73", "-12.2284, 158.471, -32.0627, 2.73", "-12.7555, 160.514, -33.1405, 0.29", "-12.9288, 161.11, -33.4588, 0.29", "-13.0003, 161.326, -33.5837, 0.59", "-13.2698, 162.04, -34.0303, 0.22", "-13.4804, 162.53, -34.3508, 0.74", "-13.576, 162.699, -34.4659, 1.03", "-13.6165, 162.744, -34.499, 1.03", "-13.8785, 163.011, -34.7227, 0.81", "-13.9518, 163.092, -34.786, 0.81", "-14.6381, 163.924, -35.341, 0.22", "-14.9565, 164.34, -35.5939, 0.59", "-15.4822, 165.038, -35.996, 0.22", "-15.5651, 165.149, -36.0551, 0.22", "-15.919, 165.633, -36.2822, 0.22", "-16.336, 166.223, -36.521, 0.22", "-16.9148, 167.088, -36.8293, 1.62", "-17.3177, 167.716, -37.0383, 2.14", "-17.665, 168.262, -37.2103, 2.14", "-18.5639, 169.631, -37.6487, 0.29", "-18.853, 170.06, -37.7876, 0.44", "-19.1757, 170.548, -37.945, 0.22", "-19.6712, 171.329, -38.1898, 0.22", "-20.1182, 172.083, -38.4224, 1.25", "-20.2999, 172.407, -38.5241, 1.62", "-20.3912, 172.593, -38.5862, 1.84", "-20.9854, 174.005, -39.089, 0.29", "-21.3941, 175.141, -39.501, 0.29", "-21.6114, 175.928, -39.8061, 0.74", "-21.6824, 176.244, -39.9457, 0.74", "-21.8912, 177.343, -40.4709, 0.22", "-22.0427, 178.317, -40.9589, 1.62", "-22.0482, 178.368, -40.9847, 1.62", "-22.11, 179.075, -41.3342, 1.99", "-22.2391, 180.776, -42.1425, 0.22", "-22.2433, 180.829, -42.1664, 0.22", "-22.3285, 181.622, -42.4938, 0.22", "-22.4287, 182.49, -42.8195, 0.96", "-22.4721, 182.822, -42.9388, 1.25", "-22.6788, 184.34, -43.4018, 0.22", "-22.6858, 184.396, -43.4159, 0.22", "-22.7929, 185.16, -43.611, 0.74", "-22.8251, 185.366, -43.6627, 0.88", "-22.9203, 185.909, -43.8004, 0.29", "-23.1188, 186.961, -44.0439, 0.22", "-23.2519, 187.642, -44.1724, 0.22", "-23.4004, 188.605, -44.2987, 1.33", "-23.4405, 188.963, -44.3254, 1.92", "-23.4463, 189.02, -44.3274, 1.92", "-23.4857, 189.449, -44.3295, 1.77", "-23.5293, 189.895, -44.3278, 1.69", "-23.6782, 191.421, -44.3104, 0.22", "-23.8374, 192.678, -44.2762, 0.22", "-24.0164, 193.856, -44.2413, 1.47", "-24.1072, 194.362, -44.2266, 1.99", "-24.1808, 194.698, -44.2192, 1.92", "-24.3076, 195.17, -44.2143, 1.47", "-24.8411, 196.808, -44.2296, 0.22", "-25.0845, 197.467, -44.2366, 0.44", "-25.197, 197.775, -44.2449, 0.44", "-25.5082, 198.644, -44.2793, 0.22", "-25.8467, 199.652, -44.3346, 1.18", "-25.9957, 200.135, -44.3674, 2.14", "-26.1546, 200.694, -44.42, 1.62", "-26.6354, 202.474, -44.5971, 0.22", "-26.652, 202.539, -44.6037, 0.22", "-26.9791, 203.97, -44.732, 0.22", "-27.2412, 205.198, -44.8274, 0.22", "-27.4059, 206.003, -44.8653, 1.03", "-27.4619, 206.279, -44.8705, 1.62", "-27.5214, 206.556, -44.8657, 1.11", "-27.7639, 207.885, -44.7679, 0.22", "-27.7723, 207.941, -44.7604, 0.22", "-27.8969, 209.013, -44.5687, 1.47", "-27.9319, 209.361, -44.4969, 2.06", "-27.9395, 209.437, -44.4815, 2.06", "-28.1153, 211.062, -44.1982, 0.22", "-28.2214, 211.965, -44.0683, 0.52", "-28.3881, 213.166, -43.9335, 0.22", "-28.5135, 213.964, -43.8674, 1.33", "-28.5847, 214.375, -43.8501, 1.33", "-28.8526, 215.775, -43.8518, 0.22", "-28.9658, 216.311, -43.8849, 0.22", "-29.1115, 217.044, -43.9521, 0.66", "-29.1652, 217.33, -43.9868, 0.66", "-29.3807, 218.685, -44.1609, 0.22", "-29.3868, 218.754, -44.1698, 0.22", "-29.4155, 219.675, -44.2852, 0.22", "-29.4039, 220.548, -44.4095, 0.96", "-29.3807, 221.031, -44.4826, 1.62", "-29.3522, 221.533, -44.561, 1.4", "-29.3014, 223.129, -44.8346, 0.22", "-29.3005, 223.544, -44.9154, 0.22", "-29.3287, 224.534, -45.1274, 1.11", "-29.3372, 224.677, -45.1588, 1.33", "-29.3705, 225.084, -45.2609, 1.18", "-29.5499, 226.884, -45.7253, 0.22", "-29.6512, 227.721, -45.9547, 1.03", "-29.7103, 228.189, -46.0852, 1.18", "-29.7507, 228.524, -46.1926, 1.03", "-29.8773, 229.671, -46.6001, 0.15", "-29.9683, 230.633, -46.9657, 0.15", "-30.0441, 231.534, -47.3145, 1.33", "-30.0898, 232.034, -47.5051, 1.55", "-30.2551, 233.801, -48.1939, 0.15", "-30.262, 233.866, -48.2185, 0.15", "-30.3645, 234.677, -48.498, 0.15", "-30.4919, 235.606, -48.8072, 1.11", "-30.5345, 235.925, -48.8991, 1.55", "-30.71, 237.311, -49.2359, 0.15", "-30.8138, 238.055, -49.3679, 0.74", "-30.9791, 239.158, -49.5488, 0.15", "-30.9905, 239.223, -49.5587, 0.15", "-31.1087, 239.849, -49.644, 0.15", "-31.2567, 240.601, -49.7222, 0.96", "-31.3252, 240.944, -49.7463, 0.96", "-31.6166, 242.471, -49.8643, 0.15", "-31.7304, 243.12, -49.9147, 0.44", "-31.7432, 243.195, -49.9228, 0.44", "-31.8942, 244.171, -50.0581, 0.15", "-32.0245, 245.111, -50.2077, 1.03", "-32.0737, 245.522, -50.2772, 1.33", "-32.1269, 246.166, -50.3972, 0.59", "-32.1889, 247.246, -50.6122, 0.15", "-32.2324, 248.059, -50.7797, 0.88", "-32.2545, 248.528, -50.878, 1.03", "-32.2768, 249.017, -50.9767, 0.66", "-32.2892, 250.138, -51.2576, 0.15", "-32.2777, 251.316, -51.5883, 0.15", "-32.2649, 252.073, -51.7755, 0.96", "-32.2634, 252.508, -51.875, 1.25", "-32.2657, 252.798, -51.9361, 1.25", "-32.3207, 254.605, -52.2824, 0.15", "-32.3546, 255.086, -52.3566, 0.44", "-32.4621, 256.135, -52.4836, 0.15", "-32.5229, 256.627, -52.5201, 0.74", "-32.5907, 257.12, -52.537, 0.74", "-32.7121, 258.05, -52.5259, 0.15", "-32.8235, 258.822, -52.4815, 0.88", "-32.8821, 259.306, -52.4671, 0.96", "-32.998, 260.513, -52.4689, 0.15", "-33.06, 261.151, -52.4635, 0.29", "-33.1791, 262.321, -52.444, 0.15", "-33.2446, 262.959, -52.4266, 0.96", "-33.2943, 263.513, -52.4107, 1.18", "-33.4642, 265.402, -52.3375, 0.22", "-33.5394, 266.253, -52.2979, 0.22", "-33.5582, 266.465, -52.2855, 0.22", "-33.5707, 266.613, -52.2749, 0.22", "-33.6189, 267.607, -52.2405, 0.15", "-33.6454, 268.443, -52.2462, 1.11", "-33.6515, 268.903, -52.2664, 1.77", "-33.651, 269.262, -52.2909, 1.77", "-33.6512, 269.341, -52.2979, 1.77", "-33.6664, 271.451, -52.4817, 0.22", "-33.6881, 272.143, -52.5422, 0.15", "-33.6901, 272.2, -52.5469, 0.15", "-33.7243, 272.866, -52.5867, 0.52", "-33.7486, 273.154, -52.6002, 0.59", "-33.9456, 274.744, -52.6514, 0.15", "-34.0647, 275.578, -52.6525, 1.03", "-34.1258, 276.018, -52.6555, 1.77", "-34.1854, 276.442, -52.6619, 1.55", "-34.4801, 278.262, -52.7145, 0.15", "-34.5574, 278.696, -52.7374, 0.29", "-34.6993, 279.437, -52.7972, 0.15", "-34.863, 280.261, -52.8723, 0.15", "-34.8923, 280.404, -52.8856, 0.15", "-35.1921, 281.861, -53.0377, 0.15", "-35.41, 282.908, -53.1524, 1.11", "-35.4241, 282.974, -53.16, 1.11", "-35.5587, 283.558, -53.2304, 1.4", "-35.6897, 284.218, -53.3146, 0.59", "-35.8732, 285.276, -53.4496, 0.22", "-35.9892, 286.111, -53.5503, 0.22", "-36.1025, 287.005, -53.651, 1.03", "-36.16, 287.556, -53.7141, 1.55", "-36.3638, 289.99, -53.9751, 0.15", "-36.3694, 290.06, -53.982, 0.15", "-36.42, 290.649, -54.0247, 0.44", "-36.4498, 291.009, -54.0415, 0.44", "-36.5789, 292.485, -54.0882, 0.15", "-36.6597, 293.337, -54.1088, 1.03", "-36.7171, 293.906, -54.1153, 1.62", "-36.9005, 295.726, -54.2305, 0.15", "-37.1474, 298.07, -54.4621, 0.15", "-37.2503, 299.022, -54.582, 0.15", "-37.3232, 299.671, -54.6814, 1.11", "-37.3954, 300.374, -54.8111, 1.4", "-37.5921, 302.708, -55.2977, 0.15", "-37.6426, 303.39, -55.459, 0.15", "-37.7018, 304.216, -55.6547, 0.74", "-37.718, 304.583, -55.7247, 0.74", "-37.7193, 304.65, -55.7342, 0.74", "-37.7214, 306.519, -55.919, 0.15", "-37.7047, 307.639, -55.9612, 1.55", "-37.6783, 308.335, -55.9861, 1.92", "-37.5829, 310.385, -56.0534, 0.15", "-37.5496, 311.06, -56.0734, 0.88", "-37.5412, 311.204, -56.0773, 0.88", "-37.505, 311.693, -56.0901, 0.88", "-37.3792, 313.173, -56.1335, 0.15", "-37.3397, 313.739, -56.1428, 0.15", "-37.3054, 314.341, -56.1402, 0.74", "-37.2345, 315.733, -56.1199, 0.15", "-37.2327, 315.8, -56.1176, 0.15", "-37.2303, 316.141, -56.0992, 0.37", "-37.2535, 316.928, -56.0392, 0.22", "-37.2798, 317.435, -55.9881, 0.88", "-37.2847, 317.492, -55.9812, 0.88", "-37.431, 319.031, -55.8627, 0.15", "-37.4904, 319.685, -55.8336, 0.15", "-37.4965, 319.762, -55.8325, 0.15", "-37.5771, 320.844, -55.8538, 1.25", "-37.5947, 321.115, -55.8713, 1.25", "-37.7251, 322.916, -56.0521, 0.15", "-37.7305, 322.985, -56.0616, 0.15", "-37.7823, 323.641, -56.1779, 1.18", "-37.8013, 323.843, -56.2168, 1.18", "-37.9402, 325.313, -56.5709, 0.15", "-38.0735, 326.39, -56.8915, 0.15", "-38.116, 326.656, -56.981, 0.44", "-38.433, 328.486, -57.6355, 0.15", "-38.6784, 329.795, -58.1373, 1.77", "-38.83, 330.571, -58.4565, 1.55", "-39.0852, 331.801, -58.9991, 0.22", "-39.1969, 332.313, -59.2506, 0.37", "-39.3939, 333.127, -59.6699, 0.15", "-39.4088, 333.177, -59.6967, 0.15", "-39.5865, 333.732, -60.0129, 0.74", "-39.6886, 334.035, -60.1702, 0.74", "-39.9145, 334.747, -60.5097, 0.15", "-40.0646, 335.179, -60.7165, 0.66", "-40.1852, 335.501, -60.8645, 1.25", "-40.7416, 336.898, -61.5136, 0.15", "-40.7696, 336.965, -61.5447, 0.15", "-41.1176, 337.814, -61.9209, 0.15", "-41.4324, 338.615, -62.2461, 0.96", "-41.5739, 338.982, -62.3957, 1.55", "-42.2808, 340.898, -63.1455, 0.15", "-42.2985, 340.95, -63.1636, 0.15", "-42.604, 341.913, -63.4838, 1.18", "-42.7735, 342.498, -63.669, 0.52", "-43.0401, 343.533, -63.9639, 0.15", "-43.1835, 344.136, -64.1144, 0.52", "-43.5949, 345.895, -64.469, 0.15", "-43.7556, 346.491, -64.577, 0.15", "-44.0318, 347.364, -64.7202, 0.66", "-44.225, 347.892, -64.7935, 0.96", "-44.3888, 348.279, -64.8327, 0.96", "-45.1139, 349.659, -64.9113, 0.15", "-45.6762, 350.545, -64.9294, 0.52", "-45.934, 350.923, -64.9303, 0.52", "-46.3642, 351.517, -64.9222, 0.15", "-46.8887, 352.214, -64.9059, 1.11", "-48.2112, 353.916, -64.8401, 0.15", "-48.6881, 354.513, -64.7988, 1.18", "-49.0425, 354.961, -64.7722, 0.59" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-10.8012, 137.117, -18.3374, 0.59", "-10.6538, 138.362, -18.3144, 0.59", "-10.5641, 139.476, -18.3215, 1.18", "-10.5107, 140.552, -18.3628, 1.84", "-10.4943, 141.188, -18.3948, 2.06", "-10.4957, 141.802, -18.4281, 2.06", "-10.5177, 142.584, -18.4705, 1.84", "-10.5829, 143.443, -18.5212, 1.55", "-10.7576, 144.978, -18.6209, 0.37", "-10.8979, 145.959, -18.6856, 0.37", "-11.0917, 147.158, -18.7837, 0.96", "-11.3024, 148.351, -18.8905, 1.47", "-11.4154, 148.942, -18.9433, 1.69", "-11.5839, 149.819, -19.0128, 1.55", "-11.7387, 150.615, -19.0745, 1.33", "-11.8965, 151.648, -19.146, 0.66", "-12.0234, 152.954, -19.2456, 0.37", "-12.0928, 154.444, -19.3591, 0.29", "-12.0997, 155.718, -19.452, 0.29", "-12.0956, 155.818, -19.4585, 0.29", "-11.9049, 157.99, -19.5613, 0.29", "-11.7792, 159.031, -19.5865, 0.81", "-11.6721, 159.798, -19.6033, 0.96", "-11.6604, 159.893, -19.6047, 0.96", "-11.6107, 160.504, -19.6133, 0.96", "-11.5566, 162.045, -19.6271, 0.29", "-11.5749, 162.954, -19.6342, 0.29", "-11.6363, 164.189, -19.6317, 1.47", "-11.7122, 165.378, -19.6612, 2.06", "-11.7342, 165.815, -19.6786, 2.5", "-11.7664, 166.514, -19.7147, 2.43", "-11.7932, 167.267, -19.758, 2.14", "-11.8164, 168.128, -19.8117, 1.77", "-11.845, 169.296, -19.8848, 0.66", "-11.8957, 171.069, -19.9888, 0.44", "-11.9515, 172.479, -20.0606, 0.37", "-12.025, 173.796, -20.12, 0.37", "-12.1391, 175.115, -20.1703, 1.33", "-12.2789, 176.294, -20.2097, 1.77", "-12.4473, 177.402, -20.2349, 2.28", "-12.5789, 178.088, -20.2615, 2.65", "-12.6976, 178.677, -20.2893, 2.8", "-12.8676, 179.495, -20.3308, 2.5", "-12.9991, 180.183, -20.3618, 1.99", "-13.1007, 180.764, -20.3881, 1.77", "-13.2396, 181.713, -20.4265, 0.81", "-13.3725, 183.004, -20.4587, 0.44", "-13.4652, 184.316, -20.4808, 0.37", "-13.4988, 185.474, -20.4828, 0.74", "-13.5049, 186.061, -20.4769, 0.74", "-13.5153, 186.922, -20.4596, 0.74", "-13.5602, 188.653, -20.4308, 0.52", "-13.5634, 188.736, -20.4303, 0.44", "-13.6332, 190.041, -20.432, 0.44", "-13.7097, 191.132, -20.4409, 0.44", "-13.8695, 193.039, -20.4662, 0.44", "-14.1147, 195.348, -20.511, 1.55", "-14.2509, 196.458, -20.5382, 2.43", "-14.3487, 197.264, -20.5556, 2.65", "-14.4323, 197.96, -20.5801, 2.87", "-14.5521, 198.974, -20.6234, 2.36", "-14.6775, 200.056, -20.6949, 1.47", "-14.7618, 200.78, -20.7414, 0.96", "-14.9418, 202.209, -20.8393, 0.37", "-15.1104, 203.483, -20.9253, 0.37", "-15.3218, 205.057, -21.0257, 0.29", "-15.4712, 206.274, -21.1071, 1.69", "-15.6055, 207.482, -21.2247, 2.28", "-15.6704, 208.019, -21.2936, 2.73", "-15.7407, 208.524, -21.3713, 2.8", "-15.8764, 209.438, -21.5223, 1.99", "-16.0706, 210.722, -21.768, 0.88", "-16.345, 212.223, -22.0815, 0.29", "-16.5681, 213.233, -22.3251, 0.37", "-16.7439, 213.948, -22.4982, 0.44", "-16.8531, 214.332, -22.5823, 0.59", "-16.9113, 214.522, -22.6135, 0.59", "-17.1004, 215.138, -22.6682, 0.44", "-17.3555, 216.13, -22.6889, 0.37", "-17.3749, 216.225, -22.6889, 0.37", "-17.6016, 217.721, -22.6803, 0.52", "-17.7496, 219.032, -22.663, 0.81", "-17.7932, 219.654, -22.656, 0.81", "-17.8131, 220.297, -22.6511, 0.66", "-17.8131, 220.379, -22.6531, 0.66", "-17.8196, 221.142, -22.7034, 0.44", "-17.8257, 222.568, -22.8515, 0.37", "-17.8271, 223.903, -23.0097, 0.37", "-17.8261, 223.985, -23.023, 0.37", "-17.7886, 225.298, -23.3094, 1.62", "-17.7498, 226.415, -23.5983, 2.65", "-17.7245, 227.06, -23.7851, 2.65", "-17.6602, 228.404, -24.2153, 1.92", "-17.58, 230.034, -24.7524, 0.74", "-17.5306, 231.505, -25.2195, 0.37", "-17.5294, 232.805, -25.5722, 0.37", "-17.5328, 232.886, -25.5899, 0.37", "-17.6224, 233.719, -25.7308, 0.37", "-17.6594, 233.926, -25.751, 0.37", "-17.9552, 235.108, -25.7473, 0.37", "-18.3689, 236.531, -25.6593, 1.03", "-18.7113, 237.682, -25.5684, 1.77", "-18.9024, 238.355, -25.5168, 2.06", "-19.0873, 239.029, -25.4633, 1.92", "-19.3378, 240.024, -25.3949, 1.33", "-19.4937, 240.725, -25.359, 0.59", "-19.7221, 241.907, -25.338, 0.37", "-19.8276, 242.631, -25.3213, 0.59", "-19.8684, 243.133, -25.3072, 0.66", "-19.8787, 243.44, -25.2983, 0.66", "-19.8913, 244.153, -25.2813, 0.37", "-19.908, 244.869, -25.2674, 0.37", "-19.9759, 246.207, -25.2478, 0.37", "-20.0698, 247.51, -25.2334, 0.37", "-20.1745, 248.723, -25.223, 0.59", "-20.3447, 250.528, -25.21, 0.52", "-20.4549, 251.628, -25.2032, 1.33", "-20.5627, 252.667, -25.2122, 2.14", "-20.6764, 253.691, -25.2553, 2.36", "-20.7563, 254.595, -25.3207, 2.58", "-20.7821, 255.351, -25.3888, 2.36", "-20.7713, 256.487, -25.4987, 1.62", "-20.7351, 257.603, -25.614, 0.81", "-20.67, 259.008, -25.7576, 0.52", "-20.6027, 260.511, -25.8931, 0.52", "-20.5593, 261.584, -25.9777, 0.44", "-20.5051, 263.593, -26.109, 0.44", "-20.4874, 265.586, -26.2026, 1.11", "-20.5103, 266.698, -26.2238, 1.84", "-20.5753, 267.79, -26.2243, 2.36", "-20.6206, 268.178, -26.2241, 2.5", "-20.7778, 269.076, -26.2274, 2.21", "-20.9684, 269.951, -26.2292, 1.55", "-21.1665, 270.744, -26.2279, 0.96", "-21.3612, 271.499, -26.23, 0.66", "-21.6362, 272.684, -26.2349, 0.37", "-21.8405, 273.745, -26.2291, 0.66", "-21.9722, 274.56, -26.216, 0.88", "-22.134, 275.871, -26.1817, 0.37", "-22.2046, 276.682, -26.1538, 0.37", "-22.2789, 277.999, -26.0953, 0.37", "-22.306, 279.622, -26.0123, 1.11", "-22.3041, 279.704, -26.0077, 1.11", "-22.2252, 280.83, -25.9586, 1.99", "-22.1347, 281.665, -25.9323, 2.21", "-22.0565, 282.265, -25.9219, 2.36", "-21.872, 283.658, -25.9119, 1.33", "-21.7436, 284.623, -25.9122, 0.52", "-21.58, 286.068, -25.9216, 0.29", "-21.5263, 286.67, -25.9271, 0.59", "-21.4921, 287.176, -25.9315, 0.59", "-21.4413, 288.182, -25.9364, 0.44", "-21.411, 289.104, -25.9353, 0.37", "-21.3852, 290.12, -25.9229, 0.37", "-21.3575, 291.26, -25.9093, 1.18", "-21.3192, 292.098, -25.9092, 1.77", "-21.2573, 293.006, -25.9161, 2.06", "-21.1887, 293.82, -25.9282, 1.92", "-21.1147, 294.615, -25.9459, 1.55", "-21.0298, 295.856, -25.9824, 0.37", "-20.9733, 297.21, -26.031, 0.37", "-20.9735, 297.31, -26.0372, 0.37", "-21.0199, 298.323, -26.1171, 0.37", "-21.0273, 298.422, -26.1257, 0.37", "-21.1962, 300.325, -26.2827, 0.37", "-21.2071, 300.424, -26.29, 0.37", "-21.4166, 302.196, -26.4424, 1.18", "-21.546, 303.291, -26.5398, 1.62", "-21.6079, 303.89, -26.5913, 1.84", "-21.6848, 304.915, -26.6663, 1.55", "-21.7165, 305.92, -26.7407, 1.11", "-21.7293, 306.913, -26.8095, 0.52", "-21.7187, 308.42, -26.9009, 0.44", "-21.6946, 309.59, -26.9765, 0.37", "-21.6516, 311.072, -27.0699, 0.37", "-21.5642, 313.05, -27.2013, 1.33", "-21.5334, 313.649, -27.2392, 1.84", "-21.5225, 313.862, -27.2506, 1.84", "-21.4898, 314.465, -27.2823, 1.84", "-21.4505, 315.81, -27.3435, 1.25", "-21.4379, 316.615, -27.3857, 0.74", "-21.442, 317.928, -27.4502, 0.37", "-21.4453, 318.881, -27.5016, 0.44", "-21.4489, 319.929, -27.5723, 0.44", "-21.4601, 321.433, -27.6879, 0.44", "-21.4775, 322.681, -27.794, 1.03", "-21.5068, 323.797, -27.8901, 1.18", "-21.5279, 324.75, -27.9906, 0.74", "-21.549, 325.456, -28.0726, 0.74", "-21.5925, 326.552, -28.2029, 0.59", "-21.5973, 326.652, -28.214, 0.59", "-21.6466, 327.459, -28.2842, 0.59", "-21.7336, 329.064, -28.4429, 1.47", "-21.7785, 330.066, -28.5381, 2.21", "-21.8072, 330.874, -28.608, 2.5", "-21.815, 331.572, -28.6648, 2.65", "-21.794, 332.903, -28.7522, 1.55", "-21.7292, 334.256, -28.8153, 0.74", "-21.6057, 335.833, -28.8768, 0.52", "-21.594, 335.942, -28.8825, 0.52", "-21.4243, 337.224, -28.9577, 0.52", "-21.1537, 338.926, -29.0733, 1.33", "-20.9416, 340.122, -29.1591, 1.4", "-20.7027, 341.386, -29.2503, 1.18", "-20.5289, 342.363, -29.3428, 0.52", "-20.4998, 342.556, -29.3658, 0.52", "-20.3596, 343.698, -29.5262, 0.52", "-20.2678, 344.64, -29.6678, 0.52", "-20.1433, 346.354, -29.9138, 0.74", "-20.0713, 347.858, -30.0961, 0.96", "-20.0211, 349.432, -30.2742, 1.99", "-20.01, 349.952, -30.3284, 2.58", "-19.9916, 350.681, -30.3913, 2.36", "-19.9612, 351.504, -30.449, 2.14", "-19.8908, 352.711, -30.5031, 1.03", "-19.7721, 354.004, -30.538, 0.52", "-19.6087, 355.484, -30.5725, 0.52", "-19.4404, 357.042, -30.5956, 0.52", "-19.3546, 357.877, -30.6017, 0.88", "-19.2753, 358.677, -30.6007, 0.52", "-19.1585, 359.984, -30.5862, 0.52", "-19.0869, 361.031, -30.5609, 0.52", "-19.0216, 362.719, -30.5207, 1.4", "-19.0084, 363.654, -30.5, 1.77", "-19.0103, 364.275, -30.4839, 1.92", "-19.0177, 364.876, -30.4658, 1.62", "-19.0368, 365.906, -30.4296, 1.11", "-19.0558, 367.128, -30.3886, 0.74", "-19.0766, 368.908, -30.3506, 0.59", "-19.1119, 371.04, -30.3061, 0.59", "-19.145, 372.711, -30.2713, 0.44", "-19.1571, 373.423, -30.2559, 0.66", "-19.1585, 373.522, -30.2536, 0.66", "-19.1779, 375.143, -30.2146, 1.33", "-19.1951, 376.458, -30.1817, 2.21", "-19.2067, 377.474, -30.1386, 2.73", "-19.2343, 378.429, -30.0939, 2.87", "-19.25, 378.871, -30.0771, 3.09", "-19.2971, 379.805, -30.0565, 2.36", "-19.373, 380.915, -30.0477, 1.25", "-19.4435, 381.711, -30.0556, 0.66", "-19.6241, 383.332, -30.1214, 0.37", "-19.7931, 384.569, -30.2022, 0.66", "-19.9234, 385.481, -30.2762, 0.52", "-19.992, 385.985, -30.3241, 0.66", "-20.1122, 386.982, -30.4272, 0.74", "-20.2194, 388.126, -30.5699, 0.81", "-20.2911, 389.333, -30.7424, 1.25", "-20.3085, 390.098, -30.8571, 1.69", "-20.3002, 390.666, -30.9461, 1.69", "-20.2521, 391.779, -31.1214, 1.4", "-20.1714, 392.998, -31.3145, 1.11", "-20.0863, 393.988, -31.4528, 0.74", "-19.9596, 395.46, -31.6439, 0.59", "-19.9517, 395.569, -31.6574, 0.59", "-19.8936, 396.689, -31.7769, 0.59", "-19.8898, 396.786, -31.7843, 0.59", "-19.8662, 398.701, -31.8488, 0.59", "-19.8936, 399.908, -31.8587, 1.11", "-19.8996, 400.004, -31.8603, 1.11", "-19.9772, 400.895, -31.8768, 1.77", "-20.0674, 401.73, -31.8996, 2.06", "-20.1522, 402.425, -31.927, 2.06", "-20.2822, 403.323, -31.971, 1.77", "-20.3695, 403.939, -32.0003, 1.4", "-20.4632, 404.647, -32.0329, 0.81", "-20.6749, 406.252, -32.1125, 0.59", "-20.878, 407.872, -32.1929, 0.59", "-20.9856, 408.873, -32.2511, 0.96", "-21.0616, 409.57, -32.2955, 0.96", "-21.0855, 409.785, -32.3091, 0.96", "-21.145, 410.33, -32.3463, 0.81", "-21.2433, 411.281, -32.4101, 0.81", "-21.3862, 412.824, -32.5099, 0.37", "-21.5126, 414.337, -32.6059, 0.37", "-21.6206, 415.749, -32.6639, 0.37", "-21.6916, 416.734, -32.6845, 1.25", "-21.7494, 417.749, -32.6707, 1.77", "-21.7912, 418.587, -32.6295, 2.28", "-21.8127, 419.383, -32.557, 2.58", "-21.8162, 420.392, -32.4438, 2.36", "-21.8193, 421.282, -32.3334, 1.92", "-21.8231, 422.378, -32.1952, 0.96", "-21.8255, 423.402, -32.0761, 0.37", "-21.8397, 424.856, -31.9326, 0.37", "-21.8573, 425.885, -31.8683, 0.74", "-21.8736, 426.489, -31.855, 0.74", "-21.9073, 427.369, -31.8567, 0.74", "-21.9487, 428.28, -31.9058, 0.37", "-21.9921, 429.281, -32.0151, 0.29", "-22.023, 430.051, -32.1407, 0.29", "-22.026, 430.147, -32.1601, 0.29", "-22.0619, 432.033, -32.6175, 0.29", "-22.0555, 433.012, -32.8861, 0.74", "-22.0122, 434.502, -33.3067, 1.84", "-21.9895, 435.055, -33.4554, 2.28", "-21.9868, 435.135, -33.4743, 2.28", "-21.9641, 436.024, -33.6604, 2.06", "-21.9455, 437.247, -33.8763, 1.25", "-21.9607, 438.673, -34.0464, 0.15", "-21.9814, 439.486, -34.1054, 0.15", "-22.0317, 440.714, -34.1603, 0.74", "-22.0591, 441.209, -34.1708, 1.03", "-22.1032, 441.826, -34.1707, 1.03", "-22.1629, 442.513, -34.1649, 0.74", "-22.2351, 443.481, -34.2, 0.22", "-22.3061, 444.682, -34.2783, 0.22", "-22.3975, 446.708, -34.442, 0.88", "-22.4285, 447.517, -34.5098, 1.47", "-22.4505, 448.215, -34.5741, 1.69", "-22.4864, 449.725, -34.7187, 1.03", "-22.52, 451.262, -34.8688, 0.37", "-22.5356, 453.315, -35.0592, 0.37", "-22.5192, 455.135, -35.2298, 0.29", "-22.496, 457.003, -35.387, 1.4", "-22.4897, 457.732, -35.438, 1.84", "-22.4891, 458.544, -35.4764, 1.69", "-22.4868, 459.656, -35.5378, 0.81", "-22.4828, 461.523, -35.6454, 0.29", "-22.4767, 463.224, -35.7382, 0.29", "-22.4735, 464.121, -35.774, 0.96", "-22.4733, 464.946, -35.8, 1.33", "-22.4711, 465.719, -35.8127, 1.33", "-22.4659, 466.404, -35.821, 1.03", "-22.4638, 466.491, -35.8209, 1.03", "-22.3898, 468.06, -35.827, 0.29", "-22.3062, 469.487, -35.8366, 0.29", "-22.2007, 471.278, -35.8854, 0.88", "-22.1382, 472.582, -35.9389, 1.69", "-22.111, 473.326, -35.9746, 2.36", "-22.1055, 473.738, -35.9964, 2.58", "-22.1117, 474.786, -36.0594, 2.06", "-22.147, 476.892, -36.1762, 0.37", "-22.1889, 478.289, -36.245, 0.37", "-22.2545, 479.814, -36.3, 0.37", "-22.3086, 481.017, -36.3348, 0.37", "-22.3126, 481.117, -36.3366, 0.37", "-22.3693, 483.441, -36.3392, 0.37", "-22.3685, 483.541, -36.3397, 0.37", "-22.3131, 484.852, -36.3693, 0.37", "-22.2455, 485.886, -36.4081, 0.96", "-22.1548, 487.063, -36.4638, 1.25", "-22.0566, 488.26, -36.5283, 0.88", "-21.8803, 490.201, -36.648, 0.29", "-21.8654, 490.349, -36.6568, 0.29", "-21.723, 491.561, -36.754, 0.88", "-21.5909, 492.676, -36.8502, 1.62", "-21.5139, 493.344, -36.9049, 1.99", "-21.4339, 494.021, -36.9495, 1.99", "-21.3512, 494.64, -36.9711, 1.69", "-21.1424, 495.978, -37.0412, 0.59", "-20.8454, 497.654, -37.1397, 0.29", "-20.6654, 498.672, -37.2202, 0.81", "-20.5132, 499.561, -37.2976, 0.81", "-20.3115, 500.806, -37.4095, 0.29", "-20.1155, 502.137, -37.525, 0.29", "-19.8375, 504.155, -37.7474, 0.29", "-19.5869, 506.151, -38.0359, 1.25", "-19.4999, 506.908, -38.1553, 1.69", "-19.4353, 507.512, -38.2533, 1.92", "-19.3293, 508.585, -38.4241, 1.47", "-19.1303, 510.467, -38.6895, 0.29", "-18.9852, 511.589, -38.8441, 0.29", "-18.7509, 513.086, -39.0201, 0.88", "-18.6238, 513.804, -39.0944, 1.18", "-18.4816, 514.519, -39.1544, 0.96", "-18.2661, 515.52, -39.2057, 0.44", "-17.9998, 516.814, -39.2017, 0.29", "-17.9719, 516.953, -39.2065, 0.29", "-17.7891, 518.123, -39.2902, 0.29", "-17.7781, 518.222, -39.2989, 0.29", "-17.7167, 518.934, -39.3748, 0.81", "-17.6771, 519.533, -39.4409, 0.81", "-17.5957, 520.609, -39.5519, 0.66", "-17.4564, 522.122, -39.698, 0.29", "-17.3112, 523.362, -39.7981, 0.29", "-17.1485, 524.581, -39.8957, 1.11", "-17.002, 525.66, -39.9743, 1.69", "-16.912, 526.417, -40.0286, 1.92", "-16.8472, 527.083, -40.0702, 1.92", "-16.7264, 528.761, -40.1911, 0.74", "-16.6707, 530.086, -40.2914, 0.37", "-16.6534, 531.583, -40.4009, 0.37", "-16.6721, 533.334, -40.5423, 0.29", "-16.6991, 534.36, -40.6346, 0.29", "-16.7223, 535.266, -40.7243, 0.88", "-16.7335, 535.855, -40.7827, 0.88", "-16.7268, 536.599, -40.8415, 0.52", "-16.6893, 537.464, -40.9057, 0.29", "-16.6322, 538.375, -40.9646, 0.29", "-16.5733, 539.57, -41.0412, 0.29", "-16.5407, 540.698, -41.1069, 1.55", "-16.5079, 542.03, -41.1663, 2.58", "-16.4935, 542.665, -41.1814, 2.65", "-16.4595, 543.673, -41.1804, 2.21", "-16.3897, 544.987, -41.1706, 1.11", "-16.3051, 546.187, -41.1622, 0.52", "-16.1815, 547.642, -41.1585, 0.52", "-16.0197, 549.124, -41.1569, 0.74", "-15.8354, 550.525, -41.1554, 0.88", "-15.608, 551.88, -41.1506, 1.33", "-15.5902, 551.96, -41.1512, 1.33", "-15.3838, 552.736, -41.1646, 1.62", "-15.2212, 553.278, -41.177, 1.62", "-15.1851, 553.383, -41.1784, 1.62", "-15.0932, 553.643, -41.177, 1.62", "-14.5379, 555.18, -41.1351, 0.52", "-14.1227, 556.361, -41.0998, 0.29", "-13.7484, 557.425, -41.0688, 0.29", "-13.4101, 558.504, -40.9894, 0.96", "-13.2238, 559.22, -40.8981, 1.4", "-13.2068, 559.314, -40.8819, 1.4", "-13.1497, 559.918, -40.7577, 1.4", "-13.146, 560.033, -40.7305, 1.4", "-13.1607, 561.509, -40.3665, 1.03", "-13.2032, 562.856, -40.0371, 0.44", "-13.2552, 564.543, -39.6432, 0.29", "-13.2999, 565.73, -39.3465, 0.29", "-13.356, 567.199, -38.9839, 1.33", "-13.3872, 567.976, -38.7998, 1.84", "-13.4202, 568.77, -38.6299, 1.84", "-13.4613, 569.664, -38.4426, 1.25", "-13.5539, 571.346, -38.11, 0.37", "-13.6785, 573.207, -37.8076, 0.29", "-13.6866, 573.302, -37.7949, 0.29", "-13.7976, 574.402, -37.661, 0.44", "-13.9568, 575.811, -37.5119, 0.52", "-14.1346, 577.192, -37.3967, 0.44", "-14.365, 578.993, -37.3227, 0.44", "-14.6208, 580.943, -37.2628, 1.11", "-14.7616, 582.054, -37.2374, 1.69", "-14.8496, 582.779, -37.2275, 1.84", "-14.933, 583.559, -37.2239, 1.84", "-15.0763, 585.07, -37.2334, 0.66", "-15.21, 586.676, -37.2658, 0.37", "-15.2242, 586.872, -37.2728, 0.37", "-15.3547, 588.797, -37.3308, 0.37", "-15.4328, 590.334, -37.3604, 0.96", "-15.4367, 590.534, -37.3625, 0.96", "-15.422, 591.555, -37.3603, 1.55", "-15.3574, 592.474, -37.3604, 1.84", "-15.347, 592.571, -37.3606, 1.84", "-15.2331, 593.414, -37.3648, 1.69", "-15.0618, 594.626, -37.3736, 0.74", "-14.8988, 595.917, -37.3419, 0.29", "-14.7496, 597.358, -37.27, 0.29", "-14.7431, 597.457, -37.2632, 0.29", "-14.7005, 598.865, -37.1456, 0.29", "-14.702, 598.962, -37.1357, 0.29", "-14.7731, 600.376, -36.9508, 0.81", "-14.8422, 601.26, -36.8266, 1.47", "-14.9081, 601.966, -36.7342, 1.77", "-14.923, 602.121, -36.7197, 1.77", "-14.9882, 602.916, -36.6714, 1.55", "-15.0034, 603.112, -36.6652, 1.55", "-15.0721, 604.044, -36.6666, 0.96", "-15.1222, 605.073, -36.6638, 0.59", "-15.1892, 606.978, -36.6174, 0.29", "-15.2227, 608.238, -36.5685, 0.29", "-15.2246, 608.338, -36.5634, 0.29", "-15.2405, 609.862, -36.4705, 0.59", "-15.2399, 610.867, -36.3967, 0.81", "-15.2105, 612.158, -36.2886, 1.25", "-15.1814, 612.79, -36.2307, 1.62", "-15.162, 613.29, -36.191, 1.69", "-15.1521, 613.506, -36.1769, 1.69", "-15.12, 614.236, -36.1407, 1.25", "-15.0841, 615.419, -36.0837, 0.66", "-15.0497, 616.64, -36.0298, 0.66", "-15.0132, 618.067, -35.9576, 0.66", "-14.976, 619.792, -35.863, 0.37", "-14.9657, 621.013, -35.7944, 0.37", "-14.9549, 622.481, -35.7074, 1.62", "-14.9425, 623.292, -35.6566, 2.06", "-14.9267, 623.841, -35.6215, 2.06", "-14.8848, 625.061, -35.5462, 1.47", "-14.8365, 626.263, -35.4776, 0.81", "-14.7542, 627.617, -35.4139, 0.37", "-14.6219, 629.236, -35.3625, 0.88", "-14.6118, 629.332, -35.3594, 0.88", "-14.5288, 630.025, -35.3367, 0.88", "-14.5169, 630.111, -35.3339, 0.88", "-14.4082, 630.96, -35.3167, 1.11", "-14.3806, 631.202, -35.3161, 1.11", "-14.3398, 631.692, -35.2893, 1.11", "-14.3323, 631.791, -35.2809, 1.11", "-14.2741, 632.596, -35.1938, 0.81", "-14.1957, 633.811, -35.0432, 0.66", "-14.125, 634.945, -34.8889, 0.44", "-14.0226, 636.502, -34.6686, 0.29", "-14.0113, 636.653, -34.6466, 0.29", "-13.9323, 637.458, -34.5257, 0.29", "-13.9144, 637.604, -34.5041, 0.29", "-13.7869, 638.771, -34.37, 0.81", "-13.7761, 638.897, -34.3605, 0.81", "-13.7217, 639.667, -34.3016, 0.81", "-13.7059, 639.962, -34.2732, 0.81", "-13.627, 641.507, -34.1054, 0.59", "-13.5472, 643.406, -33.8878, 0.88", "-13.5418, 643.602, -33.8657, 0.88", "-13.5285, 645.304, -33.6133, 1.62", "-13.5366, 646.038, -33.4883, 1.77", "-13.5568, 647.163, -33.2811, 1.4", "-13.583, 648.269, -33.0629, 0.88", "-13.6418, 650.17, -32.6853, 0.52", "-13.7158, 651.797, -32.3947, 0.74", "-13.7903, 652.805, -32.2484, 1.33", "-13.9084, 653.864, -32.102, 1.84", "-13.9824, 654.443, -32.0296, 1.99", "-14.0835, 655.257, -31.9422, 1.99", "-14.2035, 656.327, -31.8523, 1.18", "-14.3456, 657.751, -31.7741, 0.52", "-14.5322, 659.881, -31.6489, 0.44", "-14.6595, 661.48, -31.5541, 1.03", "-14.7325, 662.714, -31.4813, 1.25", "-14.7438, 663.567, -31.4313, 1.55", "-14.7414, 663.667, -31.4257, 1.55", "-14.6905, 664.621, -31.3792, 1.55", "-14.6194, 665.835, -31.3385, 1.25", "-14.5666, 667.167, -31.2981, 0.74", "-14.4912, 669.645, -31.227, 0.29", "-14.4892, 669.741, -31.2244, 0.29", "-14.4576, 671.98, -31.1664, 0.29", "-14.4615, 673.808, -31.1242, 0.29", "-14.5018, 675.53, -31.0908, 1.47", "-14.5509, 676.593, -31.0743, 2.06", "-14.6045, 677.293, -31.0672, 2.36", "-14.7058, 678.525, -31.0557, 2.06", "-14.8867, 680.617, -31.0379, 0.81", "-15.0804, 682.535, -30.9838, 0.81", "-15.2174, 683.765, -30.9273, 0.52", "-15.3909, 685.25, -30.8345, 0.81", "-15.5539, 686.679, -30.7205, 1.03", "-15.564, 686.776, -30.7106, 1.03", "-15.6616, 688.074, -30.5443, 1.03", "-15.6715, 688.313, -30.5028, 1.03", "-15.6919, 689.644, -30.2512, 0.88", "-15.6888, 689.798, -30.2215, 0.88", "-15.6315, 691.207, -29.9651, 0.74", "-15.5258, 692.778, -29.7119, 0.37", "-15.3433, 694.792, -29.4403, 1.18", "-15.2257, 696.144, -29.2725, 1.92", "-15.1626, 696.954, -29.1826, 1.92", "-15.0971, 697.89, -29.0911, 1.62", "-15.0099, 699.365, -28.9743, 0.96", "-14.9383, 700.804, -28.8892, 0.74", "-14.8656, 702.534, -28.8461, 0.74", "-14.8349, 704.06, -28.8215, 0.74", "-14.8334, 704.257, -28.8195, 0.74", "-14.842, 705.757, -28.812, 0.74", "-14.845, 705.991, -28.8136, 0.74", "-14.8572, 707.652, -28.8392, 0.74", "-14.8586, 709.485, -28.8769, 0.96", "-14.8559, 709.9, -28.8865, 0.96", "-14.8412, 711.622, -28.921, 0.96", "-14.8377, 712.687, -28.9376, 1.47", "-14.8397, 712.994, -28.9404, 1.47", "-14.8625, 714.45, -28.9405, 1.69", "-14.8659, 714.588, -28.9399, 1.69", "-14.8874, 715.512, -28.9511, 1.69", "-14.8861, 717.136, -28.9767, 1.11", "-14.8702, 717.865, -29.0001, 1.03", "-14.847, 718.562, -29.0312, 1.03", "-14.7834, 720.169, -29.1165, 0.59", "-14.6817, 722.455, -29.2452, 0.44", "-14.5549, 724.906, -29.3953, 0.44", "-14.4541, 726.399, -29.4832, 1.11", "-14.3287, 727.794, -29.5718, 1.69", "-14.2061, 728.802, -29.6294, 1.99", "-14.0529, 729.854, -29.6822, 1.62", "-14.0369, 729.953, -29.6855, 1.62", "-13.7735, 731.506, -29.7212, 0.88", "-13.4203, 733.58, -29.7664, 0.74", "-12.9671, 736.175, -29.8425, 0.74", "-12.9504, 736.27, -29.8454, 0.74", "-12.6707, 737.883, -29.9041, 0.74", "-12.3314, 739.921, -29.9163, 0.88", "-12.0131, 742.058, -29.867, 0.66", "-11.9984, 742.17, -29.8606, 0.66", "-11.7786, 744.039, -29.7232, 0.66", "-11.6141, 745.511, -29.5915, 0.66", "-11.4382, 747.538, -29.3719, 1.25", "-11.3953, 748.445, -29.2569, 1.99", "-11.397, 749.044, -29.1742, 1.99", "-11.4419, 750.066, -29.0545, 1.55", "-11.4625, 750.272, -29.0352, 1.55", "-11.6412, 751.562, -28.9586, 1.33", "-11.8319, 752.964, -28.9695, 1.18", "-11.9581, 754.181, -28.986, 0.96", "-12.0227, 755.209, -28.9607, 0.96", "-12.0248, 755.419, -28.9489, 0.96", "-11.989, 756.615, -28.8553, 0.66", "-11.8749, 758.033, -28.7128, 0.52", "-11.7317, 759.308, -28.5646, 0.52", "-11.486, 761.155, -28.3275, 0.81", "-11.2462, 762.698, -28.1161, 1.33", "-11.2108, 762.904, -28.0852, 1.33", "-10.9846, 764.073, -27.9259, 1.77", "-10.837, 764.798, -27.8405, 2.28", "-10.8172, 764.893, -27.838, 2.28", "-10.6496, 765.824, -27.9259, 2.28", "-10.5541, 766.431, -28.007, 2.28", "-10.3771, 767.696, -28.1937, 1.92", "-10.365, 767.791, -28.2092, 1.92", "-10.1285, 769.827, -28.5428, 0.81", "-9.93896, 771.874, -28.7484, 0.81", "-9.92384, 772.087, -28.7599, 0.81", "-9.86105, 773.327, -28.7639, 0.66", "-9.85783, 773.44, -28.7566, 0.66", "-9.85025, 774.904, -28.6025, 0.66", "-9.89716, 776.828, -28.2705, 0.66", "-9.90754, 777.018, -28.2315, 0.66", "-10.0153, 778.117, -27.9677, 1.18", "-10.0403, 778.293, -27.9237, 1.18", "-10.1901, 779.281, -27.7056, 1.4", "-10.2365, 779.569, -27.6531, 1.4", "-10.3496, 780.285, -27.5545, 1.4", "-10.5581, 781.7, -27.3636, 1.11", "-10.8493, 783.965, -27.0777, 0.88", "-11.0498, 785.69, -26.8925, 1.03", "-11.2215, 787.395, -26.7453, 1.33", "-11.2391, 787.589, -26.7332, 1.33", "-11.2969, 788.223, -26.6993, 1.33", "-11.4698, 790.083, -26.6394, 0.88", "-11.5682, 791.085, -26.5942, 0.88", "-11.724, 792.71, -26.4967, 0.74", "-11.8184, 793.905, -26.4082, 0.74", "-11.901, 795.213, -26.3006, 1.33", "-11.9064, 795.323, -26.2908, 1.33", "-11.9347, 796.466, -26.2283, 1.92", "-11.9448, 797.359, -26.2186, 2.21", "-11.9613, 798.031, -26.265, 2.21", "-12.0165, 799.07, -26.4056, 1.77", "-12.1063, 800.368, -26.6363, 1.18", "-12.2275, 801.733, -26.8954, 0.81", "-12.4449, 803.793, -27.3151, 0.74", "-12.6911, 806.046, -27.7634, 0.66", "-12.8838, 807.97, -28.109, 0.66", "-12.8925, 808.069, -28.1249, 0.66", "-12.9711, 809.489, -28.2983, 0.66", "-12.9705, 809.648, -28.3074, 0.66", "-12.833, 811.73, -28.3481, 0.66", "-12.6112, 813.592, -28.3023, 0.66", "-12.5897, 813.732, -28.296, 0.66", "-12.3108, 815.472, -28.2119, 0.66", "-11.8573, 818.078, -28.0725, 0.66", "-11.8305, 818.224, -28.0645, 0.66", "-11.6842, 818.98, -28.0215, 1.25", "-11.663, 819.089, -28.0153, 1.25", "-11.3579, 820.732, -27.9241, 1.25", "-11.3337, 820.879, -27.9165, 1.25", "-11.1015, 822.304, -27.8175, 1.25", "-10.9107, 823.524, -27.7127, 0.96", "-10.7352, 824.738, -27.577, 0.96", "-10.7243, 824.823, -27.5663, 0.96", "-10.5891, 826.058, -27.3983, 1.11", "-10.3889, 828.174, -27.0983, 0.52", "-10.2688, 829.568, -26.8973, 1.18", "-10.1241, 831.057, -26.6875, 1.92", "-10.0151, 832.052, -26.5713, 2.43", "-9.90503, 832.952, -26.4863, 2.43", "-9.76141, 834.036, -26.4071, 2.43", "-9.50701, 835.855, -26.3249, 1.25", "-9.22639, 837.598, -26.2936, 0.59", "-8.90554, 839.461, -26.3635, 0.74", "-8.6926, 840.637, -26.454, 1.03", "-8.64462, 840.923, -26.4897, 1.03", "-8.53488, 841.691, -26.6251, 1.03", "-8.41676, 842.766, -26.8606, 0.59", "-8.3086, 844.377, -27.2544, 0.59", "-8.30249, 844.538, -27.2915, 0.59", "-8.20998, 846.035, -27.6066, 0.59", "-8.16222, 846.455, -27.6659, 1.03", "-7.99919, 847.524, -27.7527, 0.66", "-7.87188, 848.215, -27.7661, 0.66", "-7.6228, 849.442, -27.6836, 0.66", "-7.29037, 851.121, -27.5114, 0.59", "-6.91274, 853.105, -27.2606, 1.03", "-6.77883, 853.848, -27.158, 1.84", "-6.66204, 854.563, -27.0551, 1.84", "-6.39923, 856.446, -26.7874, 1.18", "-6.23196, 857.95, -26.5786, 0.66", "-6.1489, 859.38, -26.3998, 0.66", "-6.14507, 859.63, -26.3769, 0.66", "-6.15989, 861.615, -26.2395, 0.66", "-6.20234, 863.168, -26.171, 1.18", "-6.25172, 864.231, -26.1569, 1.18", "-6.3511, 865.934, -26.1393, 0.66", "-6.45089, 867.332, -26.13, 0.66", "-6.56797, 868.654, -26.1277, 1.25", "-6.69111, 869.738, -26.1285, 1.99", "-6.79513, 870.544, -26.1275, 2.21", "-7.04277, 872.301, -26.129, 2.06" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 37
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-12.8734, -51.5888, -11.3876, 0.44", "-13.4252, -52.0988, -11.1514, 0.44", "-13.4742, -52.1457, -11.1296, 0.44", "-14.1912, -52.8693, -10.8012, 1.03", "-14.8819, -53.5499, -10.4853, 1.18", "-15.3695, -54.0202, -10.2648, 0.59", "-15.4178, -54.0664, -10.2432, 0.59", "-15.8841, -54.5376, -10.0417, 0.22", "-16.3477, -54.998, -9.83434, 0.22", "-16.8202, -55.4498, -9.61683, 0.59", "-17.1349, -55.7571, -9.468, 0.59", "-17.2037, -55.8349, -9.43087, 0.59", "-17.6687, -56.4166, -9.16177, 0.22", "-18.0243, -56.9129, -8.94719, 1.18", "-18.3585, -57.4841, -8.74077, 1.25", "-18.3897, -57.5476, -8.72111, 1.25", "-18.8849, -58.7624, -8.33683, 0.22", "-19.0189, -59.138, -8.22202, 0.37", "-19.0864, -59.3968, -8.14259, 0.37", "-19.3634, -60.8416, -7.68528, 0.22", "-19.4369, -61.3392, -7.52587, 0.22", "-19.5795, -62.4575, -7.16073, 1.47", "-19.6757, -63.3498, -6.9064, 2.21", "-19.7617, -64.254, -6.66773, 2.21", "-19.7679, -64.3206, -6.64905, 2.21", "-19.8296, -65.5898, -6.31621, 0.74", "-19.8309, -65.6575, -6.3011, 0.74", "-19.8411, -67.0273, -6.06909, 0.22", "-19.8416, -67.3198, -6.02441, 0.59", "-19.8722, -68.7383, -5.83212, 0.22", "-19.8853, -69.6463, -5.71543, 0.22", "-19.8798, -70.4571, -5.6091, 0.22", "-19.8787, -71.1449, -5.51635, 0.52", "-19.8824, -71.4578, -5.47802, 0.52", "-19.911, -72.7585, -5.35988, 0.22", "-19.9281, -73.5882, -5.31904, 0.22", "-19.955, -74.7733, -5.27102, 1.55", "-19.9421, -75.4513, -5.25139, 1.69", "-19.7919, -77.3082, -5.18942, 0.22", "-19.6525, -78.2506, -5.15717, 0.22", "-19.5048, -78.8899, -5.14022, 0.52", "-19.3038, -79.5426, -5.1518, 0.52", "-18.9337, -80.5349, -5.22516, 0.22", "-18.6089, -81.3108, -5.31269, 1.4", "-18.3129, -81.9545, -5.41164, 1.69", "-18.0804, -82.472, -5.49625, 1.77", "-17.3505, -84.1821, -5.77606, 0.15", "-16.8769, -85.3535, -5.98036, 0.22", "-16.5859, -86.1351, -6.13379, 0.74", "-16.3614, -86.818, -6.26766, 0.74", "-16.107, -87.6784, -6.41616, 0.22", "-16.0429, -87.9227, -6.4469, 0.59", "-15.9416, -88.3469, -6.47325, 0.59", "-15.9227, -88.426, -6.47994, 0.59", "-15.6299, -89.661, -6.59414, 0.22", "-15.4755, -90.4046, -6.68683, 0.74", "-15.2949, -91.232, -6.82115, 0.96", "-15.164, -91.7996, -6.9205, 0.66", "-14.7274, -93.6164, -7.27694, 0.29", "-14.4719, -94.6192, -7.48964, 0.22", "-14.1785, -95.694, -7.73252, 0.22", "-13.8246, -97.0265, -8.04099, 1.55", "-13.7202, -97.4253, -8.13817, 1.92", "-13.4651, -98.4223, -8.39225, 0.96", "-13.3308, -98.9936, -8.55209, 0.44" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-12.8734, -51.5888, -11.3876, 2.43", "-13.5061, -53.1153, -12.1607, 2.43", "-14.0377, -54.5503, -12.7883, 0.96", "-14.4156, -55.6495, -13.1942, 0.52", "-14.7466, -56.6656, -13.5343, 0.52", "-15.1429, -57.9399, -13.938, 0.52", "-15.5134, -59.1862, -14.3203, 0.52", "-15.7928, -60.3325, -14.5956, 0.52", "-16.0491, -61.5358, -14.8345, 0.52", "-16.2807, -62.7365, -15.0578, 2.58", "-16.5579, -64.1724, -15.3617, 3.68", "-16.6347, -64.5312, -15.4443, 3.68", "-16.8468, -65.3968, -15.645, 3.24" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-1.24898, -110.764, 11.9103, 0.59", "-1.5756, -112.666, 11.6363, 0.59", "-1.76582, -113.577, 11.5176, 0.37", "-2.02316, -114.479, 11.4255, 0.37", "-2.26409, -115.083, 11.3771, 0.74", "-2.58178, -115.749, 11.3333, 0.74", "-2.87639, -116.286, 11.306, 0.96", "-2.91662, -116.342, 11.309, 0.96", "-3.41034, -116.939, 11.3447, 1.25", "-3.94516, -117.575, 11.4442, 0.81", "-3.9833, -117.632, 11.4566, 0.81", "-4.42244, -118.417, 11.6562, 0.59", "-4.85418, -119.377, 11.8848, 0.59", "-4.87471, -119.431, 11.8963, 0.59", "-5.23309, -120.534, 12.1076, 0.44", "-5.60886, -121.749, 12.3251, 0.44", "-5.62898, -121.813, 12.3367, 0.44", "-5.99285, -122.929, 12.5358, 2.14", "-6.2235, -123.553, 12.6337, 3.09", "-6.43581, -124.124, 12.6998, 3.61", "-6.68442, -124.787, 12.697, 3.61", "-9.86874, -133.994, 11.8669, 3.61", "-13.9681, -142.62, 9.63697, 3.61", "-18.5983, -150.577, 6.16744, 3.61" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-1.24898, -110.764, 11.9103, 0.59", "-0.154465, -111.989, 12.0341, 0.59", "0.877808, -113.111, 12.2262, 0.37", "1.6309, -113.852, 12.6901, 0.37", "2.52336, -114.642, 13.635, 0.37", "2.57885, -114.687, 13.7131, 0.37", "3.31908, -115.289, 14.876, 0.74", "3.34912, -115.318, 14.9607, 0.74", "4.05152, -116.146, 17.7287, 0.74", "4.06552, -116.167, 17.7926, 0.74", "4.27123, -116.511, 18.6762, 0.74", "4.46428, -116.884, 19.3643, 0.29", "4.81034, -117.594, 20.2387, 0.29", "5.13666, -118.225, 20.8252, 0.29", "5.49747, -118.867, 21.1933, 0.29", "5.83176, -119.44, 21.5066, 0.81", "5.87081, -119.503, 21.5375, 0.81", "6.2605, -119.994, 21.7658, 1.25", "6.63781, -120.33, 21.9025, 1.25", "7.19957, -120.72, 22.0872, 0.59", "13.7586, -127.422, 28.4981, 0.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-7.04277, 872.301, -26.129, 0.44", "-7.87988, 873.595, -27.8749, 0.44", "-8.19774, 874.155, -28.5542, 0.44", "-8.39469, 874.531, -28.9812, 0.74", "-8.4056, 874.556, -29.0076, 0.74", "-8.54104, 874.978, -29.3915, 0.74", "-8.54835, 875.007, -29.4147, 0.74", "-8.58558, 875.519, -29.6336, 0.44", "-8.58104, 875.559, -29.6532, 0.44", "-8.49685, 876.035, -29.9138, 0.88", "-8.42852, 876.525, -30.1791, 0.96", "-8.40155, 876.805, -30.3286, 1.25", "-8.39901, 876.837, -30.3475, 1.25", "-8.38918, 877.503, -30.7531, 0.66", "-8.42533, 878.024, -31.0822, 0.37", "-8.48466, 878.381, -31.312, 0.74", "-8.55691, 878.724, -31.5407, 0.74", "-8.65533, 879.116, -31.8007, 0.74", "-8.82548, 879.705, -32.1797, 0.29", "-9.05991, 880.375, -32.5843, 0.29", "-9.22945, 880.83, -32.8564, 0.29", "-9.47005, 881.492, -33.2539, 1.47", "-9.55974, 881.743, -33.395, 1.69", "-9.57441, 881.781, -33.4141, 1.69", "-9.72738, 882.151, -33.6266, 1.47", "-9.7432, 882.187, -33.6474, 1.47", "-10.1529, 883.174, -34.3004, 0.22", "-10.2902, 883.53, -34.5469, 0.22", "-10.4916, 884.126, -34.9682, 0.22", "-10.6887, 884.885, -35.4847, 1.03", "-10.7503, 885.19, -35.7029, 1.4", "-10.9125, 886.145, -36.4034, 0.22", "-10.953, 886.412, -36.605, 0.59", "-10.9923, 886.715, -36.8365, 0.74", "-11.1008, 887.696, -37.558, 0.29", "-11.2148, 888.401, -38.0431, 0.29", "-11.2238, 888.437, -38.0693, 0.29", "-11.3662, 888.82, -38.3518, 0.44", "-11.3793, 888.856, -38.384, 0.44", "-11.4798, 889.152, -38.6596, 0.44", "-11.6253, 889.601, -39.0812, 0.22", "-11.8174, 890.293, -39.6925, 1.92", "-11.8494, 890.431, -39.8236, 2.5", "-12.0707, 891.839, -41.1821, 0.15", "-12.094, 892.04, -41.3771, 0.15", "-12.1309, 892.57, -41.8972, 1.4", "-12.1375, 892.691, -42.0147, 1.69", "-12.2081, 893.845, -43.1175, 0.15", "-12.2439, 894.235, -43.4741, 0.15", "-12.2611, 894.338, -43.5558, 0.15", "-12.2797, 894.43, -43.6191, 0.15", "-12.3853, 894.876, -43.8677, 0.96", "-12.4636, 895.184, -44.0143, 1.47", "-12.5288, 895.405, -44.0947, 1.62", "-12.6829, 895.9, -44.2785, 0.88", "-12.9677, 896.885, -44.6448, 0.22", "-13.055, 897.26, -44.7957, 0.22", "-13.123, 897.648, -44.9672, 0.74", "-13.1283, 897.69, -44.9851, 0.74", "-13.1654, 898.031, -45.1165, 0.74", "-13.1842, 898.209, -45.1726, 0.74", "-13.2831, 899.138, -45.4073, 0.29", "-13.2886, 899.182, -45.4172, 0.29", "-13.4085, 900.016, -45.5819, 0.29", "-13.5401, 900.861, -45.7368, 0.29", "-13.6526, 901.521, -45.8422, 0.29", "-13.7453, 902.012, -45.9038, 1.47", "-13.802, 902.286, -45.9323, 2.06", "-13.8109, 902.328, -45.9372, 2.06", "-13.91, 902.814, -46.0095, 1.18", "-14.1725, 904.091, -46.2582, 0.22", "-14.3538, 905.01, -46.4576, 0.22", "-14.4791, 905.739, -46.6516, 1.47", "-14.519, 906.003, -46.7316, 1.18", "-14.6485, 907.069, -47.0909, 0.22", "-14.7153, 907.781, -47.3574, 1.11", "-14.7363, 908.159, -47.5119, 1.33", "-14.7685, 909.545, -48.1045, 0.22", "-14.7685, 909.586, -48.1213, 0.22", "-14.7552, 910.559, -48.5115, 0.22", "-14.754, 910.6, -48.5266, 0.22", "-14.715, 911.651, -48.8834, 0.22", "-14.7144, 911.692, -48.8969, 0.22", "-14.7298, 912.272, -49.0435, 1.55", "-14.7381, 912.365, -49.0644, 2.14", "-14.7913, 912.682, -49.1259, 2.36", "-14.7993, 912.718, -49.1322, 2.36", "-15.0078, 913.35, -49.2524, 1.11", "-15.338, 914.183, -49.4219, 0.22", "-15.652, 914.89, -49.5703, 0.22", "-15.8839, 915.381, -49.6752, 1.4", "-16.0119, 915.633, -49.7298, 1.4", "-16.6484, 916.819, -50.0057, 0.22", "-16.8975, 917.249, -50.113, 0.88", "-17.039, 917.483, -50.1766, 0.59", "-17.0641, 917.526, -50.1883, 0.59", "-17.1239, 917.634, -50.2151, 0.59", "-17.5249, 918.454, -50.3762, 0.22", "-17.748, 918.966, -50.449, 0.22", "-17.9566, 919.494, -50.5136, 1.03", "-18.0532, 919.749, -50.5416, 1.4", "-18.1686, 920.074, -50.5552, 1.4", "-18.4443, 920.939, -50.5411, 0.22", "-18.4568, 920.983, -50.538, 0.22", "-18.7139, 921.953, -50.4509, 0.22", "-18.7341, 922.039, -50.4427, 0.22", "-18.9646, 923.147, -50.3364, 0.22", "-19.0866, 923.778, -50.2686, 1.33", "-19.1253, 923.99, -50.2432, 1.62", "-19.1964, 924.393, -50.1943, 0.81", "-19.3714, 925.467, -50.0603, 0.22", "-19.4747, 926.158, -49.9954, 1.25" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-7.04277, 872.301, -26.129, 0.59", "-7.08852, 872.904, -26.0685, 0.59", "-7.13559, 873.54, -25.9608, 0.59", "-7.17265, 874.14, -25.8427, 0.81", "-7.19861, 874.611, -25.7488, 1.25", "-7.20102, 874.655, -25.7401, 1.25", "-7.21767, 874.929, -25.6876, 1.11", "-7.25861, 875.499, -25.5728, 0.88", "-7.28778, 875.909, -25.4985, 0.44", "-7.32867, 876.51, -25.4087, 0.37", "-7.33945, 876.67, -25.3879, 0.37", "-7.37187, 877.107, -25.3414, 0.37", "-7.42824, 877.766, -25.2932, 1.47", "-7.47472, 878.163, -25.2763, 1.84", "-7.49555, 878.32, -25.2693, 1.84", "-7.53397, 878.637, -25.2554, 1.84", "-7.59136, 879.164, -25.2333, 1.25", "-7.67564, 880.044, -25.1985, 0.66", "-7.74722, 880.842, -25.1683, 0.66", "-7.7515, 880.898, -25.1663, 0.66", "-7.78888, 881.473, -25.1485, 0.66", "-7.79294, 881.558, -25.1467, 0.66", "-7.81376, 882.083, -25.1373, 0.66", "-7.81483, 882.128, -25.1368, 0.66", "-7.82172, 882.607, -25.1329, 0.66", "-7.82728, 882.751, -25.1315, 0.66", "-7.84945, 883.206, -25.1266, 0.66", "-7.86391, 883.566, -25.123, 0.66", "-7.86456, 883.606, -25.1227, 0.66", "-7.86144, 884.18, -25.1186, 0.66", "-7.86023, 884.215, -25.1184, 0.66", "-7.83066, 884.776, -25.1189, 1.18", "-7.82609, 884.815, -25.1156, 1.18", "-7.74261, 885.317, -25.041, 1.33", "-7.73355, 885.363, -25.0318, 1.33", "-7.70018, 885.503, -24.9934, 1.33", "-7.68556, 885.565, -24.9754, 1.33", "-7.49422, 886.346, -24.7179, 0.81", "-7.48697, 886.379, -24.7087, 0.81", "-7.40881, 886.69, -24.6412, 0.81", "-7.39987, 886.727, -24.6344, 0.81", "-7.29406, 887.161, -24.5727, 0.96", "-7.27777, 887.225, -24.566, 0.96", "-7.10216, 887.912, -24.5345, 0.37", "-6.95638, 888.492, -24.5141, 0.37", "-6.84819, 888.95, -24.4849, 1.33", "-6.74719, 889.369, -24.4408, 2.06", "-6.70218, 889.556, -24.4053, 2.36", "-6.63071, 889.853, -24.3338, 2.36", "-6.521, 890.325, -24.1888, 1.62", "-6.36317, 891.052, -23.9442, 0.52", "-6.18082, 891.87, -23.6517, 0.37", "-6.02455, 892.593, -23.3666, 1.55", "-5.94634, 892.954, -23.2119, 2.21", "-5.86068, 893.33, -23.0318, 2.5" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-16.8468, -65.3968, -15.645, 0.44", "-16.2128, -66.3494, -16.2278, 0.44", "-15.5479, -67.2688, -16.7958, 0.22", "-15.5099, -67.3133, -16.8253, 0.22", "-14.8352, -67.9571, -17.2417, 0.22", "-13.8647, -68.8481, -17.8557, 1.47", "-13.5845, -69.1108, -18.047, 1.99", "-13.4838, -69.1985, -18.1114, 1.99", "-12.7487, -69.8188, -18.6173, 1.77", "-11.6209, -70.7843, -19.4499, 0.52", "-10.7901, -71.5044, -20.0988, 0.29", "-10.2016, -72.0511, -20.6129, 0.29", "-10.1631, -72.0886, -20.6473, 0.29", "-9.59809, -72.6673, -21.1737, 1.03", "-9.07423, -73.2877, -21.7083, 1.03", "-8.39759, -74.2293, -22.4856, 0.22", "-8.37217, -74.2678, -22.5136, 0.22", "-8.13528, -74.6626, -22.7853, 0.44", "-8.11101, -74.7027, -22.812, 0.44", "-7.77043, -75.2321, -23.164, 0.44", "-7.53911, -75.6323, -23.4239, 0.29", "-7.15663, -76.3108, -23.8617, 1.55", "-7.04972, -76.4893, -23.9786, 2.21", "-6.51163, -77.2981, -24.5462, 2.21", "-6.01028, -78.0019, -25.0727, 0.44", "-5.41891, -78.7341, -25.6917, 0.29", "-5.16367, -79.0231, -25.9594, 0.52", "-5.12364, -79.0663, -26.0021, 0.52", "-4.87436, -79.3373, -26.3184, 0.22", "-4.84565, -79.3644, -26.3713, 0.22", "-4.66702, -79.4614, -26.7274, 0.22", "-4.46999, -79.5382, -27.0686, 0.74", "-4.43217, -79.5563, -27.1309, 0.74", "-4.14624, -79.7315, -27.5911, 0.74", "-3.62595, -80.1292, -28.4259, 0.29", "-3.26628, -80.4405, -28.9486, 0.29", "-2.85572, -80.8576, -29.5098, 1.33", "-2.61468, -81.1273, -29.8385, 1.92", "-2.49112, -81.2746, -30.0113, 1.99", "-2.22913, -81.6073, -30.3825, 1.55", "-1.78256, -82.2309, -31.0874, 0.66", "-1.5286, -82.6294, -31.5625, 0.29", "-1.21028, -83.2644, -32.3583, 0.22", "-1.04568, -83.6847, -32.8721, 1.03", "-0.94403, -84.0246, -33.2743, 1.55", "-0.824473, -84.6044, -33.9403, 0.88", "-0.770236, -85.1324, -34.52, 0.29", "-0.738288, -85.7297, -35.1318, 0.29", "-0.733262, -86.4602, -35.8123, 0.22", "-0.733565, -86.802, -36.1167, 0.52", "-0.730888, -86.8499, -36.1582, 0.52", "-0.652616, -87.3042, -36.5338, 0.52", "-0.509397, -87.7843, -36.9352, 0.44", "-0.448705, -87.9245, -37.0472, 0.66", "-0.269678, -88.2951, -37.3278, 0.37", "0.00267593, -88.8516, -37.7073, 0.29", "0.318057, -89.5423, -38.1149, 0.29", "0.33803, -89.5878, -38.1356, 0.29", "0.630285, -90.3118, -38.4125, 1.25", "0.755457, -90.6604, -38.5311, 1.84", "0.852687, -90.9876, -38.6276, 1.84", "1.01846, -91.746, -38.8431, 0.81", "1.17629, -92.6334, -39.0955, 0.29", "1.26837, -93.2659, -39.284, 0.22", "1.27769, -93.3518, -39.3104, 0.22", "1.31246, -94.0864, -39.5353, 0.22", "1.28162, -95.0975, -39.8313, 1.33", "1.23264, -95.5791, -39.9642, 1.99", "1.17888, -95.8965, -40.0428, 2.28", "1.09365, -96.384, -40.1405, 2.28", "0.875845, -97.6455, -40.363, 0.66", "0.738276, -98.4028, -40.4759, 0.22", "0.727194, -98.4667, -40.4838, 0.22", "0.661399, -98.9673, -40.5513, 0.22", "0.615796, -99.4812, -40.6226, 0.74", "0.606789, -99.834, -40.6721, 1.03", "0.621509, -100.097, -40.7037, 1.11", "0.663312, -100.62, -40.7715, 0.44", "0.712776, -101.48, -40.8888, 0.22", "0.714747, -101.543, -40.8977, 0.22", "0.712694, -102.016, -40.9605, 0.44", "0.721345, -102.707, -41.0799, 0.29", "0.721869, -102.77, -41.0901, 0.29", "0.719536, -103.541, -41.1262, 0.29", "0.718347, -104.037, -41.1112, 0.22", "0.719215, -104.102, -41.1084, 0.22", "0.784615, -104.98, -41.0726, 0.22", "0.8877, -105.5, -41.062, 0.22", "1.29451, -106.936, -41.1055, 2.14", "1.3117, -106.987, -41.1094, 2.14", "1.51491, -107.53, -41.1829, 1.99", "1.8332, -108.31, -41.3368, 1.69", "2.33895, -109.452, -41.6221, 0.59", "2.83677, -110.477, -41.9881, 0.22", "3.077, -110.967, -42.2227, 0.37", "3.28389, -111.477, -42.5008, 0.37", "3.45996, -112.058, -42.8574, 0.74", "3.469, -112.109, -42.8934, 0.74", "3.4843, -112.493, -43.1828, 1.11", "3.4576, -113.254, -43.7653, 0.59", "3.40565, -114.107, -44.4209, 0.29", "3.36698, -114.681, -44.8711, 0.29", "3.36175, -114.76, -44.9361, 0.29", "3.34412, -115.297, -45.3913, 0.29", "3.34988, -115.435, -45.5141, 0.29", "3.44345, -115.971, -46.0212, 0.29", "3.56666, -116.409, -46.446, 1.18", "3.64184, -116.662, -46.7011, 1.47", "3.65538, -116.706, -46.7453, 1.47", "3.87416, -117.424, -47.4431, 0.44", "4.035, -118.037, -47.9541, 0.37", "4.13245, -118.529, -48.2699, 0.81", "4.18404, -118.872, -48.4565, 0.81", "4.25113, -119.416, -48.718, 0.59", "4.28754, -119.799, -48.886, 0.29", "4.35033, -120.661, -49.2301, 0.22", "4.39133, -121.586, -49.6042, 0.22", "4.40897, -122.123, -49.8367, 0.44", "4.41476, -122.304, -49.9222, 0.44", "4.43077, -122.649, -50.1094, 0.44", "4.4752, -123.286, -50.5051, 0.29", "4.5368, -123.946, -50.9504, 1.4", "4.5875, -124.431, -51.2863, 1.69", "4.63392, -124.863, -51.5721, 1.92", "4.6895, -125.471, -51.9674, 0.74", "4.72865, -126.228, -52.4042, 0.22", "4.74429, -126.99, -52.7936, 0.22", "4.74898, -127.547, -53.0444, 0.88", "4.73929, -127.98, -53.2142, 0.88", "4.70716, -128.692, -53.4565, 0.22", "4.65037, -129.596, -53.7186, 0.22", "4.64585, -129.666, -53.7369, 0.22", "4.60264, -130.319, -53.886, 0.22", "4.57772, -131.195, -54.0568, 1.03", "4.57682, -131.584, -54.1197, 1.33", "4.58464, -131.847, -54.1562, 1.33", "4.61362, -133.014, -54.3331, 0.22", "4.58524, -133.862, -54.4689, 0.22", "4.53057, -134.384, -54.5515, 0.88", "4.47207, -134.748, -54.6108, 1.11", "4.41314, -135.036, -54.659, 0.88", "4.14596, -136.156, -54.8704, 0.22", "3.89477, -137.069, -55.0376, 0.22", "3.74402, -137.581, -55.1334, 1.55", "3.61428, -138.033, -55.217, 1.77", "3.48596, -138.531, -55.3059, 1.25", "3.27519, -139.521, -55.4859, 0.22", "3.13783, -140.52, -55.6743, 0.22", "3.1335, -140.572, -55.6861, 0.22", "3.0902, -141.425, -55.9415, 0.22", "3.08539, -141.494, -55.9675, 0.22", "3.0327, -142.232, -56.3087, 0.96", "2.99523, -142.697, -56.5338, 1.47", "2.93688, -143.195, -56.7937, 0.88", "2.86449, -143.655, -57.0254, 0.66", "2.65864, -144.708, -57.556, 0.29", "2.57012, -145.124, -57.7571, 0.59", "2.40179, -145.83, -58.0899, 0.59", "2.22543, -146.559, -58.4348, 0.29", "2.20989, -146.632, -58.4715, 0.29", "2.05352, -147.522, -58.9576, 0.29", "2.04701, -147.575, -58.9903, 0.29", "2.00093, -148.003, -59.28, 0.74", "1.95301, -148.492, -59.6098, 0.88", "1.87285, -149.288, -60.0965, 0.22", "1.80029, -149.947, -60.4584, 0.22", "1.69031, -150.701, -60.8066, 1.99", "1.58965, -151.257, -61.0326, 2.43", "1.32738, -152.513, -61.4636, 0.22", "1.16393, -153.202, -61.6591, 0.44", "0.939697, -154.061, -61.8692, 0.37", "0.697112, -154.964, -62.0646, 0.22", "0.541455, -155.567, -62.1774, 1.03", "0.442999, -155.919, -62.2527, 1.25", "0.29577, -156.411, -62.3853, 0.96", "-0.0331341, -157.508, -62.7462, 0.15", "-0.194757, -158.071, -62.9634, 0.74", "-0.300038, -158.479, -63.1413, 0.96", "-0.598372, -159.735, -63.7223, 0.22", "-0.624448, -159.853, -63.7807, 0.22", "-0.728219, -160.357, -64.0744, 0.22", "-0.840305, -161.018, -64.4959, 0.22", "-0.846836, -161.064, -64.5272, 0.22", "-0.94858, -161.888, -65.1042, 2.5", "-0.97844, -162.207, -65.3328, 2.73", "-1.12822, -163.728, -66.4901, 0.22", "-1.17393, -164.174, -66.8678, 0.52", "-1.21132, -164.58, -67.2472, 0.52", "-1.26462, -165.404, -68.0515, 0.22", "-1.26691, -165.447, -68.0983, 0.22", "-1.28346, -165.788, -68.4893, 0.22", "-1.28174, -166.349, -69.1628, 1.18", "-1.27741, -166.572, -69.4352, 1.69", "-1.25325, -167.036, -69.9902, 1.33", "-1.17322, -167.682, -70.732, 0.22", "-1.13454, -167.974, -71.0367, 0.22", "-1.08274, -168.435, -71.4543, 1.47", "-1.04375, -168.792, -71.7397, 1.69", "-1.01375, -169.165, -72.0163, 1.69", "-0.935945, -170.267, -72.7798, 0.29", "-0.897451, -170.806, -73.1258, 0.29", "-0.865047, -171.394, -73.5054, 1.03", "-0.860923, -171.514, -73.5756, 1.33", "-0.829908, -172.568, -74.1295, 0.22", "-0.820971, -172.982, -74.3193, 0.22", "-0.812919, -173.287, -74.4314, 1.03", "-0.785542, -173.666, -74.5574, 1.03", "-0.659335, -174.885, -74.9072, 0.22", "-0.580019, -175.607, -75.0704, 1.33", "-0.54731, -175.893, -75.115, 1.47", "-0.512003, -176.463, -75.1962, 1.55", "-0.479688, -177.734, -75.3647, 0.22", "-0.488456, -178.156, -75.4141, 0.22", "-0.533564, -178.861, -75.4917, 0.96", "-0.580841, -179.383, -75.547, 1.25", "-0.745221, -180.694, -75.7051, 0.22", "-0.755999, -180.765, -75.7148, 0.22", "-0.94763, -182.066, -75.9194, 0.22", "-0.9853, -182.357, -75.969, 0.74", "-1.01581, -182.612, -76.0146, 0.74", "-1.14766, -183.894, -76.2462, 0.22", "-1.2246, -185.002, -76.4418, 0.22", "-1.31989, -186.44, -76.7221, 0.22", "-1.34883, -186.902, -76.8267, 0.81" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-16.8468, -65.3968, -15.645, 0.66", "-17.0695, -66.7924, -15.4543, 0.66", "-17.1454, -67.3072, -15.3586, 0.52", "-17.2345, -67.8472, -15.2323, 0.88", "-17.284, -68.1906, -15.1413, 1.03", "-17.3401, -68.6595, -15.0081, 0.96", "-17.4141, -69.3866, -14.7939, 0.37", "-17.4397, -70.1047, -14.5443, 0.29", "-17.438, -70.4721, -14.426, 0.29", "-17.3727, -71.2492, -14.2043, 0.29", "-17.3371, -71.4978, -14.147, 0.74", "-17.3256, -71.566, -14.1364, 0.74", "-17.2844, -71.8312, -14.1194, 0.74", "-17.2058, -72.3347, -14.1184, 0.59", "-17.0924, -73.1683, -14.1396, 0.29", "-17.0104, -74.0252, -14.175, 0.29", "-16.9541, -74.8336, -14.2143, 0.29", "-16.9042, -75.7467, -14.262, 0.29", "-16.8826, -76.4745, -14.3285, 1.33", "-16.8825, -76.5359, -14.3367, 1.33", "-16.8991, -77.158, -14.4514, 1.99", "-16.8997, -77.5391, -14.5429, 2.21", "-16.8976, -77.8662, -14.6325, 2.21", "-16.8849, -78.9527, -14.9577, 0.29", "-16.8652, -79.8484, -15.2348, 0.29", "-16.8463, -80.3687, -15.3973, 0.29", "-16.8248, -80.7314, -15.5146, 0.96", "-16.7963, -81.1653, -15.6458, 1.47", "-16.7756, -81.4315, -15.7196, 1.84", "-16.7099, -81.9686, -15.8524, 0.88", "-16.7026, -82.0182, -15.8684, 0.88", "-16.6298, -82.5311, -16.0696, 0.29", "-16.5687, -83.0294, -16.2853, 0.29", "-16.5621, -83.0839, -16.3111, 0.29", "-16.4821, -83.7724, -16.6537, 0.52", "-16.3954, -84.5454, -17.0514, 0.52", "-16.3208, -85.201, -17.383, 0.22", "-16.2613, -85.7475, -17.651, 1.47", "-16.2131, -86.2072, -17.863, 2.06", "-16.1934, -86.4558, -17.9622, 2.36", "-16.1697, -86.9955, -18.1313, 1.69", "-16.1591, -87.8531, -18.3251, 0.74", "-16.1719, -88.638, -18.454, 0.44", "-16.2177, -89.4689, -18.5632, 0.44", "-16.2634, -89.9727, -18.6158, 0.44", "-16.369, -90.9487, -18.7093, 0.29", "-16.4232, -91.4449, -18.7637, 0.59", "-16.4779, -91.9618, -18.8296, 0.59", "-16.523, -92.5022, -18.9165, 0.29", "-16.5263, -92.5614, -18.9294, 0.29", "-16.5628, -93.3162, -19.1244, 0.29", "-16.5968, -94.1576, -19.3824, 0.29", "-16.6033, -94.2592, -19.413, 0.29", "-16.6547, -94.637, -19.5034, 0.29", "-16.669, -94.6872, -19.511, 0.29", "-16.8989, -95.1646, -19.5912, 0.29", "-16.9249, -95.2099, -19.6005, 0.29", "-17.2377, -95.7139, -19.7292, 0.29", "-17.7033, -96.4704, -19.9525, 2.28", "-18.2954, -97.4224, -20.2384, 2.65", "-19.1213, -98.7669, -20.6515, 0.29", "-19.5338, -99.4553, -20.8586, 0.29", "-19.8236, -99.9337, -20.9899, 0.59", "-19.9679, -100.166, -21.0507, 0.22", "-20.3116, -100.681, -21.1616, 0.22", "-20.599, -101.044, -21.219, 0.22", "-21.1311, -101.64, -21.2811, 1.03", "-21.6348, -102.159, -21.3302, 1.92", "-22.0689, -102.604, -21.383, 2.06", "-22.5091, -103.062, -21.4726, 1.92", "-23.785, -104.481, -21.8788, 0.29", "-24.1804, -104.963, -22.0449, 0.52", "-24.2065, -104.999, -22.0585, 0.52", "-24.4345, -105.373, -22.1987, 0.52", "-24.7468, -106.026, -22.4116, 0.37", "-24.9261, -106.593, -22.5687, 0.29", "-25.0388, -107.236, -22.7221, 0.29", "-25.1221, -107.751, -22.8318, 0.88", "-25.1724, -108.09, -22.9042, 0.88", "-25.2716, -108.956, -23.1051, 0.22", "-25.3184, -109.669, -23.2855, 1.55", "-25.3271, -110.103, -23.4166, 1.84", "-25.3144, -110.488, -23.551, 1.62", "-25.2663, -111.405, -23.9225, 0.22", "-25.2244, -112.036, -24.1977, 0.22", "-25.1933, -112.434, -24.3744, 0.22", "-25.1724, -112.848, -24.5363, 0.74", "-25.1633, -113.219, -24.659, 0.74", "-25.1658, -114.047, -24.8867, 0.29", "-25.1831, -114.536, -24.9806, 0.29", "-25.2221, -115.337, -25.076, 0.29", "-25.2551, -116.116, -25.1361, 1.77", "-25.2697, -116.58, -25.1588, 2.21", "-25.2789, -117.023, -25.168, 2.21", "-25.2849, -117.797, -25.1581, 0.74", "-25.3119, -118.523, -25.1473, 0.22", "-25.3715, -119.41, -25.1369, 0.22", "-25.4135, -119.874, -25.1392, 0.88", "-25.4568, -120.31, -25.1517, 1.03", "-25.4692, -120.424, -25.1586, 1.03", "-25.5703, -121.241, -25.2409, 0.22", "-25.6484, -121.781, -25.3061, 0.22", "-25.6639, -121.885, -25.3176, 0.22", "-25.7519, -122.488, -25.3855, 0.22", "-25.8096, -122.89, -25.4212, 0.22", "-25.9106, -123.558, -25.4668, 1.33", "-25.9703, -123.944, -25.4826, 1.77", "-26.0562, -124.532, -25.4916, 1.77", "-26.1171, -125.001, -25.4957, 0.88", "-26.232, -125.939, -25.4954, 0.29", "-26.2585, -126.29, -25.5086, 0.74", "-26.2902, -126.668, -25.5325, 0.74", "-26.3692, -127.554, -25.6148, 0.22", "-26.4045, -127.943, -25.6595, 0.22", "-26.4116, -128.012, -25.6683, 0.22", "-26.5024, -128.715, -25.7722, 0.96", "-26.6571, -129.737, -25.9135, 1.18", "-26.7118, -130.029, -25.9508, 1.47", "-26.7273, -130.097, -25.9584, 1.47", "-26.8076, -130.452, -25.9868, 1.47", "-27.0017, -131.441, -26.0573, 0.22", "-27.0589, -131.766, -26.0833, 0.22", "-27.1067, -132.205, -26.1356, 0.74", "-27.1361, -132.418, -26.1577, 0.96", "-27.1544, -132.531, -26.1675, 0.96", "-27.2063, -132.8, -26.1884, 0.96", "-27.3653, -133.551, -26.2538, 0.22", "-27.4583, -134.005, -26.3, 0.29", "-27.5888, -134.541, -26.3956, 0.29", "-27.7102, -134.905, -26.4896, 0.29", "-27.9593, -135.551, -26.6877, 1.25", "-28.1247, -135.941, -26.823, 1.69", "-28.2639, -136.238, -26.9423, 1.69", "-28.7123, -137.1, -27.3397, 1.03", "-29.2013, -137.99, -27.7519, 0.22", "-29.4005, -138.35, -27.9092, 0.22", "-29.8947, -139.252, -28.2745, 1.99", "-30.2008, -139.826, -28.4817, 2.5", "-30.7877, -141.041, -28.8609, 0.29", "-31.0276, -141.603, -28.9986, 0.22", "-31.2473, -142.203, -29.1163, 0.52", "-31.3351, -142.465, -29.1564, 0.59", "-31.5808, -143.346, -29.2468, 0.22", "-31.7318, -144.08, -29.2949, 0.22", "-31.7966, -144.528, -29.3102, 0.22", "-31.9153, -145.439, -29.3403, 1.33", "-31.9798, -145.868, -29.3461, 1.69", "-32.0519, -146.3, -29.3412, 1.47", "-32.177, -146.895, -29.3174, 0.52", "-32.2953, -147.359, -29.2925, 0.29", "-32.6404, -148.533, -29.206, 0.29", "-32.9108, -149.307, -29.1311, 1.11", "-33.0781, -149.745, -29.0904, 1.47", "-33.545, -150.879, -28.9774, 0.22", "-33.7284, -151.315, -28.9403, 1.77", "-33.9835, -151.913, -28.8994, 2.14", "-34.1398, -152.279, -28.8829, 1.69", "-34.4885, -153.185, -28.8749, 0.22", "-34.5059, -153.237, -28.877, 0.22", "-34.637, -153.694, -28.9159, 0.22", "-34.7773, -154.173, -28.9785, 0.52", "-34.8197, -154.318, -29.0035, 0.52", "-35.0242, -155.034, -29.1437, 0.22", "-35.1518, -155.472, -29.2391, 0.22", "-35.3272, -156.095, -29.3977, 1.99", "-35.4857, -156.665, -29.5641, 2.5", "-35.6992, -157.438, -29.8659, 0.81", "-35.8412, -157.941, -30.0814, 0.22", "-35.8527, -157.981, -30.0986, 0.22", "-35.9319, -158.255, -30.2081, 0.52", "-35.9438, -158.296, -30.223, 0.52", "-36.2293, -159.122, -30.4488, 0.22", "-36.5231, -159.899, -30.6044, 0.22", "-36.7854, -160.558, -30.7035, 0.22", "-37.0351, -161.146, -30.7578, 1.33", "-37.1494, -161.4, -30.7665, 1.33", "-37.6102, -162.384, -30.755, 0.22", "-37.945, -163.017, -30.6686, 0.22", "-37.9696, -163.057, -30.6596, 0.22", "-38.6039, -163.991, -30.364, 2.28", "-38.7947, -164.244, -30.2555, 2.73", "-38.9824, -164.474, -30.1388, 2.73", "-39.8991, -165.473, -29.5142, 0.22", "-40.089, -165.643, -29.387, 0.74", "-40.2883, -165.804, -29.2555, 0.96", "-40.9739, -166.257, -28.8302, 0.22", "-41.306, -166.443, -28.6422, 1.03", "-41.5507, -166.557, -28.5596, 1.03", "-42.6663, -166.996, -28.405, 0.22", "-42.7176, -167.014, -28.4045, 0.22", "-43.4525, -167.269, -28.4392, 1.4", "-43.6588, -167.338, -28.4584, 1.4", "-45.6948, -168.045, -28.6788, 0.59", "-46.1634, -168.218, -28.7339, 1.03", "-47.5608, -168.806, -28.8782, 0.22", "-48.2097, -169.109, -28.9094, 0.22", "-48.2504, -169.131, -28.9094, 0.22", "-48.7253, -169.404, -28.8771, 1.11", "-49.0476, -169.606, -28.8168, 1.25", "-50.1582, -170.351, -28.5706, 0.22", "-50.5114, -170.604, -28.4804, 0.66", "-51.4957, -171.309, -28.2482, 0.22", "-51.5401, -171.341, -28.2371, 0.22", "-51.8366, -171.555, -28.1584, 0.96", "-52.1072, -171.747, -28.0732, 1.4", "-52.5093, -172.033, -27.9194, 0.96", "-53.2022, -172.552, -27.6127, 0.22", "-53.5691, -172.852, -27.425, 1.62", "-53.8646, -173.103, -27.2711, 1.99", "-54.776, -173.942, -26.7723, 0.22", "-55.0336, -174.202, -26.6304, 0.37", "-55.1601, -174.346, -26.5544, 0.37", "-55.479, -174.73, -26.3549, 0.22", "-55.7424, -175.063, -26.2011, 0.22", "-56.1259, -175.556, -25.9879, 0.52", "-56.5759, -176.136, -25.7531, 0.22", "-56.8352, -176.449, -25.6267, 0.96", "-57.1122, -176.743, -25.5176, 0.96", "-57.8335, -177.475, -25.2867, 0.22", "-58.4351, -178.018, -25.1741, 1.18", "-58.745, -178.257, -25.1678, 1.55", "-58.7825, -178.284, -25.1701, 1.55", "-59.8993, -179.044, -25.301, 0.29", "-60.4494, -179.403, -25.3802, 0.29", "-61.5689, -180.09, -25.5483, 1.55", "-63.2877, -181.103, -25.8003, 0.29", "-63.3409, -181.134, -25.8071, 0.29", "-63.8063, -181.408, -25.8583, 1.18", "-64.6171, -181.888, -25.9332, 0.22", "-65.2659, -182.275, -25.9799, 1.25", "-66.2482, -182.925, -26.0352, 0.22", "-66.3965, -183.029, -26.038, 0.74", "-67.034, -183.502, -26.0545, 0.22", "-67.0695, -183.531, -26.0562, 0.22", "-67.5946, -184.012, -26.0974, 1.11", "-67.9563, -184.38, -26.13, 1.47", "-68.7081, -185.233, -26.1854, 0.22", "-68.9037, -185.463, -26.1971, 0.59", "-69.339, -186.0, -26.2108, 1.18", "-69.3737, -186.043, -26.2118, 1.18", "-69.784, -186.583, -26.2199, 1.18", "-70.5135, -187.568, -26.2177, 0.22", "-70.8828, -188.106, -26.2233, 1.25", "-71.0288, -188.319, -26.2226, 1.25", "-71.5657, -189.05, -26.1986, 0.29", "-71.8785, -189.453, -26.1795, 0.96", "-72.6187, -190.483, -26.0997, 0.29", "-73.0971, -191.194, -26.0089, 0.44", "-73.5882, -191.958, -25.8701, 0.22", "-74.0325, -192.666, -25.6967, 1.18", "-74.3049, -193.124, -25.5255, 1.77", "-74.8973, -194.165, -24.9897, 0.29", "-75.0962, -194.553, -24.7178, 0.29", "-75.2185, -194.81, -24.4754, 0.29", "-75.319, -195.015, -24.2282, 0.88", "-75.623, -195.605, -23.4309, 0.22", "-75.8498, -195.936, -22.9222, 1.03", "-75.9904, -196.091, -22.6579, 1.03", "-76.2738, -196.375, -22.1168, 0.22", "-77.042, -197.041, -20.6817, 0.22", "-77.0669, -197.059, -20.6367, 0.22", "-77.6006, -197.317, -19.7297, 0.81", "-77.7099, -197.35, -19.5571, 1.03", "-78.0241, -197.396, -19.0309, 0.22", "-78.4062, -197.389, -18.3742, 0.22", "-78.4301, -197.385, -18.3255, 0.22", "-78.8406, -197.317, -17.488, 1.33", "-79.0303, -197.298, -17.1265, 1.55", "-79.7304, -197.306, -15.9588, 0.22", "-79.9444, -197.326, -15.6394, 0.59", "-80.3115, -197.382, -15.1749, 0.59", "-80.7363, -197.463, -14.7126, 0.44", "-81.4643, -197.631, -14.0408, 0.22", "-81.9448, -197.74, -13.6393, 1.03", "-82.1256, -197.786, -13.5018, 1.03", "-82.8748, -197.974, -12.9071, 0.22", "-83.1902, -198.038, -12.6392, 0.22", "-83.2223, -198.042, -12.6063, 0.22", "-83.8112, -198.061, -11.9541, 0.22", "-84.3373, -198.04, -11.3463, 0.22", "-84.3672, -198.037, -11.3113, 0.22", "-84.9521, -197.961, -10.6923, 1.11", "-85.2036, -197.932, -10.4866, 1.55", "-85.9554, -197.857, -9.97536, 0.22", "-86.565, -197.826, -9.6521, 0.22", "-86.8877, -197.813, -9.5038, 0.66", "-87.8456, -197.804, -9.10414, 0.22", "-88.7076, -197.817, -8.76856, 1.25", "-89.0481, -197.828, -8.65707, 1.47", "-90.1405, -197.937, -8.31522, 0.22", "-90.1912, -197.946, -8.29923, 0.22", "-90.5796, -198.047, -8.17037, 1.03", "-91.1467, -198.25, -7.9583, 1.33", "-92.5736, -198.825, -7.40775, 0.22", "-93.6476, -199.286, -7.00189, 0.22", "-94.4528, -199.665, -6.68979, 0.22", "-94.7462, -199.814, -6.57615, 1.03", "-95.1089, -200.026, -6.43389, 1.25" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-19.4747, 926.158, -49.9954, 0.88", "-19.8167, 927.058, -49.9476, 0.88", "-20.337, 928.442, -49.8958, 0.15", "-20.6228, 929.34, -49.9301, 0.15", "-20.6521, 929.432, -49.9369, 0.15", "-20.805, 929.914, -49.9721, 1.03", "-20.8739, 930.131, -49.988, 1.4", "-20.9333, 930.334, -50.0186, 1.4", "-21.453, 932.128, -50.3133, 0.22", "-21.8126, 933.466, -50.5353, 0.22" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-19.4747, 926.158, -49.9954, 0.22", "-18.9443, 927.587, -49.4617, 0.22", "-18.7123, 928.241, -49.1899, 0.81", "-18.6412, 928.446, -49.0997, 1.03", "-18.529, 928.797, -48.9462, 0.81", "-18.053, 930.354, -48.2675, 0.22", "-17.9824, 930.599, -48.1704, 0.44", "-17.8645, 931.144, -47.9688, 0.15", "-17.8568, 931.184, -47.9563, 0.15", "-17.7644, 931.783, -47.7888, 1.03", "-17.7561, 931.857, -47.7715, 1.03", "-17.6415, 932.907, -47.5925, 0.15", "-17.6143, 933.161, -47.5519, 0.29", "-17.4861, 934.334, -47.3747, 0.15", "-17.4379, 934.744, -47.3085, 0.66", "-17.4317, 934.799, -47.2971, 0.66", "-17.3341, 935.786, -47.0555, 0.15", "-17.2732, 936.475, -46.8501, 0.66", "-17.2175, 937.071, -46.6646, 0.22", "-17.2108, 937.125, -46.6464, 0.22", "-17.1333, 937.723, -46.4315, 0.74", "-17.1187, 937.87, -46.375, 0.74", "-17.1235, 937.997, -46.3133, 0.74" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-5.86068, 893.33, -23.0318, 0.37", "-7.56416, 894.312, -22.9396, 0.37", "-8.30249, 894.744, -22.9056, 0.37", "-8.37632, 894.791, -22.8949, 0.37", "-8.99094, 895.194, -22.77, 0.37", "-9.76984, 895.736, -22.5638, 0.88", "-10.2019, 896.049, -22.43, 0.88", "-10.2665, 896.103, -22.3987, 0.88", "-11.1622, 896.959, -21.8305, 0.88", "-11.201, 897.002, -21.8008, 0.88", "-11.497, 897.404, -21.5197, 1.03", "-11.5541, 897.483, -21.4684, 1.03", "-11.8505, 897.837, -21.2442, 1.03", "-11.9411, 897.937, -21.1842, 1.03", "-12.4914, 898.492, -20.873, 0.74", "-13.2239, 899.189, -20.4766, 0.29", "-13.961, 899.862, -20.069, 0.29", "-14.7102, 900.571, -19.6282, 0.29", "-14.7993, 900.663, -19.5684, 0.29", "-15.2278, 901.158, -19.2323, 0.22", "-15.2777, 901.228, -19.1808, 0.22", "-15.5745, 901.802, -18.7232, 0.52", "-15.6836, 902.502, -18.1492, 1.18", "-15.6763, 903.078, -17.6938, 1.18", "-15.6708, 903.137, -17.6477, 1.18", "-15.5935, 903.451, -17.4069, 1.18", "-15.5764, 903.501, -17.3685, 1.18", "-15.1144, 904.273, -16.7746, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-5.86068, 893.33, -23.0318, 0.52", "-4.75541, 894.988, -23.3141, 0.52", "-3.76532, 896.47, -23.5218, 0.37", "-3.71377, 896.547, -23.5318, 0.37", "-3.03245, 897.588, -23.643, 0.37", "-2.54542, 898.335, -23.7151, 0.74", "-1.81163, 899.495, -23.8086, 0.44", "-0.936183, 901.063, -23.8465, 0.37", "-0.897351, 901.133, -23.8466, 0.37", "-0.610138, 901.651, -23.844, 0.37", "-0.563674, 901.736, -23.8422, 0.37", "0.146554, 903.132, -23.8094, 0.88", "0.554219, 904.15, -23.8297, 1.11" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-21.8126, 933.466, -50.5353, 0.22", "-23.0748, 932.328, -51.7963, 0.22", "-23.4114, 932.019, -52.1569, 1.25", "-24.6404, 930.885, -53.5214, 0.22", "-25.0791, 930.489, -54.0093, 0.96", "-26.3432, 929.381, -55.3897, 0.22", "-26.3953, 929.334, -55.4492, 0.22", "-27.2589, 928.536, -56.5187, 0.22", "-27.2925, 928.502, -56.5651, 0.22", "-27.6073, 928.149, -57.0613, 0.74", "-27.7462, 927.988, -57.2946, 0.88", "-28.7001, 926.943, -58.7108, 0.22", "-28.7347, 926.908, -58.7554, 0.22", "-29.4492, 926.13, -59.6909, 0.22", "-29.8873, 925.628, -60.2812, 0.22", "-29.9176, 925.589, -60.3257, 0.22", "-30.4861, 924.817, -61.1788, 1.11", "-31.0652, 924.257, -61.6048, 1.4" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-21.8126, 933.466, -50.5353, 0.96", "-21.9843, 934.038, -50.6857, 0.96", "-22.0032, 934.1, -50.6999, 0.96", "-22.1012, 934.416, -50.7686, 1.18", "-22.2942, 935.045, -50.8997, 0.88", "-23.1227, 937.788, -51.4571, 0.15", "-23.1416, 937.851, -51.4697, 0.15", "-23.5879, 939.397, -51.7792, 0.15", "-23.8625, 940.427, -52.0093, 0.96", "-23.9706, 940.877, -52.1178, 1.33", "-23.9849, 940.948, -52.1358, 1.33", "-24.0113, 941.147, -52.1866, 1.33", "-24.0233, 941.263, -52.2185, 1.33", "-24.1438, 942.98, -52.7058, 0.15", "-24.1708, 943.383, -52.8112, 0.44", "-24.199, 943.778, -52.9098, 0.44", "-24.3295, 945.19, -53.2377, 0.22", "-24.3463, 945.328, -53.2672, 0.22", "-24.5414, 946.374, -53.465, 0.81", "-24.7707, 947.304, -53.6155, 0.22", "-24.8037, 947.418, -53.635, 0.22", "-25.0428, 948.129, -53.761, 1.18", "-25.179, 948.488, -53.8236, 1.33", "-25.9829, 950.287, -54.2152, 0.22", "-26.0432, 950.4, -54.2442, 0.22", "-26.303, 950.842, -54.3661, 0.22", "-26.6802, 951.415, -54.5362, 1.03", "-26.9927, 951.846, -54.6775, 1.33", "-27.9137, 953.027, -55.1118, 0.15", "-28.4286, 953.59, -55.3573, 0.15", "-28.4717, 953.635, -55.3781, 0.15", "-29.1682, 954.334, -55.7203, 0.15", "-29.2141, 954.376, -55.7428, 0.15", "-29.8877, 954.941, -56.0667, 1.03", "-30.3025, 955.271, -56.2429, 1.4" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-15.1144, 904.273, -16.7746, 0.52", "-15.3815, 905.761, -17.5805, 0.52", "-15.4352, 906.085, -17.7267, 0.52", "-15.4425, 906.14, -17.7506, 0.52", "-15.531, 906.904, -18.0814, 0.37", "-15.5355, 906.959, -18.1053, 0.37", "-15.556, 907.747, -18.4642, 0.37", "-15.5138, 908.418, -18.7232, 1.03", "-15.4574, 908.977, -18.9454, 0.88", "-15.4498, 909.039, -18.971, 0.88", "-15.3658, 909.671, -19.2297, 0.59", "-15.2335, 911.107, -19.8697, 0.22", "-15.1797, 912.041, -20.2905, 0.22", "-15.1781, 912.093, -20.3163, 0.22", "-15.179, 912.849, -20.7009, 0.88", "-15.1843, 913.336, -20.9445, 1.11", "-15.2069, 914.882, -21.6779, 0.29", "-15.2072, 915.385, -21.9069, 0.22", "-15.1607, 916.228, -22.3318, 0.22", "-15.1549, 916.281, -22.3592, 0.22", "-14.9679, 917.44, -22.9274, 0.22", "-14.8149, 918.212, -23.2788, 1.33", "-14.7255, 918.577, -23.4312, 1.33", "-14.3399, 920.161, -24.1112, 0.22", "-14.3273, 920.214, -24.1341, 0.22", "-14.1149, 921.189, -24.5656, 0.22", "-13.9858, 921.861, -24.8916, 0.81", "-13.7345, 923.268, -25.5644, 0.22", "-13.6105, 923.94, -25.8628, 0.81", "-13.5978, 923.995, -25.8838, 0.81", "-13.5346, 924.242, -25.9839, 0.81", "-13.2223, 925.263, -26.4377, 0.22", "-12.9674, 925.992, -26.7596, 1.4", "-12.792, 926.451, -26.9356, 1.77", "-12.5014, 927.109, -27.1837, 1.18" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-15.1144, 904.273, -16.7746, 0.52", "-15.8846, 905.653, -16.1608, 0.52", "-15.9608, 905.797, -16.1087, 0.52", "-16.3023, 906.475, -15.9092, 0.81", "-16.3489, 906.57, -15.8858, 0.81", "-16.5543, 907.015, -15.7905, 0.59", "-17.407, 908.967, -15.375, 0.29", "-17.4812, 909.15, -15.3449, 0.29", "-17.8334, 910.049, -15.1516, 1.03", "-18.1622, 910.943, -14.9014, 0.96", "-18.4963, 911.881, -14.5803, 0.59", "-18.8008, 912.811, -14.179, 0.59", "-18.8438, 912.955, -14.0967, 0.59", "-19.0682, 913.915, -13.4908, 0.59", "-19.137, 914.778, -12.8992, 0.29", "-19.1343, 914.842, -12.853, 0.29", "-19.0698, 915.44, -12.4408, 0.29", "-19.0525, 915.574, -12.3577, 0.29", "-18.9797, 916.475, -11.8614, 0.59", "-18.9502, 918.013, -11.162, 0.22", "-18.9552, 918.098, -11.1264, 0.22", "-19.1703, 919.04, -10.7592, 0.22", "-19.2781, 919.322, -10.6583, 0.22", "-19.7432, 919.975, -10.4397, 0.22", "-20.4331, 920.309, -10.3451, 0.66", "-20.6283, 920.347, -10.3456, 0.66", "-21.7423, 920.465, -10.4113, 0.88" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.554219, 904.15, -23.8297, 0.29", "1.09195, 905.336, -23.5006, 0.29", "1.15225, 905.485, -23.4679, 0.29", "1.48694, 906.352, -23.3068, 0.88", "1.76447, 907.109, -23.1829, 1.25", "1.9832, 907.724, -23.0892, 1.25", "2.31566, 908.653, -22.9577, 0.44", "2.67027, 909.699, -22.8433, 0.29", "2.90898, 910.4, -22.7786, 0.88", "3.06593, 910.869, -22.7515, 1.25", "3.09021, 910.94, -22.7503, 1.25", "3.28739, 911.514, -22.7491, 0.96", "3.34368, 911.673, -22.7476, 0.96", "3.58076, 912.32, -22.7436, 0.74", "4.0498, 913.592, -22.7386, 0.29", "4.39229, 914.514, -22.7365, 0.52", "4.47147, 914.734, -22.7362, 0.52" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.554219, 904.15, -23.8297, 0.22", "0.100894, 904.82, -23.2663, 0.22", "0.0732748, 904.856, -23.2349, 0.22", "-0.249289, 905.259, -22.8843, 0.22", "-0.274914, 905.29, -22.8565, 0.22", "-0.757477, 905.892, -22.3319, 0.22", "-0.78613, 905.928, -22.3007, 0.22", "-1.23656, 906.523, -21.8736, 0.22", "-1.43394, 906.77, -21.6869, 0.22" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-21.7423, 920.465, -10.4113, 0.22", "-21.469, 922.052, -10.6154, 0.22", "-21.4538, 922.247, -10.5138, 0.22", "-21.521, 923.089, -9.85979, 0.22", "-21.6443, 923.531, -9.37714, 0.37", "-21.9296, 924.294, -8.4048, 0.37", "-21.9557, 924.354, -8.29707, 0.37", "-22.4443, 925.497, -5.78832, 1.18", "-22.6411, 925.804, -4.92599, 1.18", "-23.0042, 926.206, -3.47809, 0.96", "-23.1047, 926.275, -3.14985, 0.96", "-24.2109, 926.812, -0.0681057, 0.52", "-24.2695, 926.836, 0.0805006, 0.52", "-24.6561, 926.992, 0.992465, 0.52", "-24.7439, 927.028, 1.21535, 0.52", "-25.2772, 927.231, 2.48027, 0.74", "-25.7293, 927.391, 3.39002, 0.88", "-25.789, 927.407, 3.46615, 0.88", "-26.7073, 927.721, 4.67898, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-21.7423, 920.465, -10.4113, 0.22", "-22.4906, 919.939, -10.2598, 0.22", "-22.5619, 919.889, -10.2454, 0.22", "-23.4599, 919.257, -10.0635, 0.22", "-23.5168, 919.217, -10.052, 0.22", "-24.0854, 918.817, -9.93681, 0.66", "-24.3614, 918.623, -9.88091, 0.66" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "4.47147, 914.734, -22.7362, 0.15", "5.56347, 914.63, -22.7881, 0.15", "6.21638, 914.419, -22.8604, 0.44", "6.27239, 914.395, -22.8696, 0.44", "6.8461, 914.11, -23.0076, 0.15", "7.28577, 913.889, -23.1242, 0.96", "7.76647, 913.654, -23.2503, 0.96", "8.6849, 913.15, -23.523, 0.22", "8.82471, 913.074, -23.5671, 0.22", "9.57153, 912.694, -23.8064, 0.52", "10.0948, 912.443, -23.9756, 0.52", "10.7388, 912.184, -24.178, 0.59", "10.9104, 912.133, -24.2371, 0.59", "11.7011, 911.997, -24.5065, 0.15", "11.7591, 911.989, -24.5264, 0.15", "12.0712, 911.945, -24.6979, 0.15", "12.191, 911.925, -24.7851, 0.15", "12.9018, 911.828, -25.382, 0.88", "13.2204, 911.79, -25.6663, 1.18", "13.6095, 911.763, -26.0511, 1.18", "14.8775, 911.72, -27.3574, 0.22", "14.9269, 911.718, -27.4077, 0.22", "15.1848, 911.699, -27.6567, 0.37", "15.238, 911.695, -27.7052, 0.37", "16.0144, 911.663, -28.4179, 0.22", "16.0553, 911.659, -28.4518, 0.22", "16.6306, 911.647, -28.8246, 0.22", "16.9353, 911.632, -29.0226, 0.74", "17.2607, 911.604, -29.2334, 1.03", "17.3293, 911.597, -29.2761, 1.03", "18.6511, 911.425, -30.0204, 0.37", "19.382, 911.347, -30.4613, 1.62" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "4.47147, 914.734, -22.7362, 0.29", "4.91766, 916.313, -22.7714, 0.29", "5.23822, 917.288, -22.7943, 0.29", "5.26839, 917.37, -22.7962, 0.29", "5.67125, 918.468, -22.8212, 0.15", "6.09276, 919.618, -22.8474, 1.18", "6.33117, 920.268, -22.8623, 1.77", "6.72519, 921.167, -22.8916, 1.18", "7.02043, 921.774, -22.9147, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-26.7073, 927.721, 4.67898, 0.59", "-26.807, 928.47, 4.89686, 0.59", "-26.8155, 928.533, 4.91107, 0.59", "-26.8713, 929.0, 4.98818, 0.59", "-26.8757, 929.075, 4.99786, 0.59", "-26.8632, 929.38, 5.02228, 0.59", "-26.8453, 929.558, 5.11676, 0.59", "-26.8323, 929.722, 5.38654, 0.29", "-26.834, 929.925, 5.75249, 0.22", "-26.8724, 930.193, 6.24167, 0.22", "-26.9435, 930.45, 6.70128, 0.74", "-27.3874, 931.653, 8.86527, 0.74", "-27.9731, 932.947, 11.173, 0.88", "-28.231, 933.423, 12.0251, 0.22", "-28.502, 933.879, 12.8196, 0.22", "-28.7242, 934.232, 13.3628, 0.22", "-28.7538, 934.278, 13.4187, 0.22", "-28.9393, 934.599, 13.5837, 0.22", "-28.9716, 934.666, 13.597, 0.22", "-29.2159, 935.321, 13.7814, 0.22", "-29.4987, 936.228, 14.0741, 0.81", "-29.5181, 936.279, 14.0897, 0.81", "-29.8064, 936.854, 14.2312, 0.96", "-29.8553, 936.941, 14.2483, 0.96", "-30.1003, 937.366, 14.3092, 0.96", "-30.47, 938.007, 14.3677, 0.44", "-30.7376, 938.535, 14.3954, 0.44", "-31.1177, 939.375, 14.4346, 0.22", "-31.4539, 940.22, 14.4796, 0.37", "-31.7583, 941.052, 14.5406, 0.37", "-31.9979, 941.77, 14.6239, 0.37", "-32.2655, 942.62, 14.7844, 0.22", "-32.2839, 942.682, 14.8007, 0.22", "-32.4473, 943.089, 14.999, 0.22", "-32.4974, 943.169, 15.0772, 0.22", "-32.9504, 943.678, 15.9142, 0.15", "-33.1871, 943.952, 16.4267, 0.44", "-33.2077, 943.978, 16.4732, 0.44", "-33.7381, 944.801, 17.6594, 0.88", "-34.0864, 945.461, 18.425, 0.88", "-34.1646, 945.67, 18.6241, 0.88", "-34.4181, 946.684, 19.4296, 0.37", "-34.4998, 947.3, 19.8109, 0.22", "-34.544, 947.992, 20.1644, 0.22", "-34.5166, 948.38, 20.3213, 0.59", "-34.3783, 949.423, 20.7339, 0.44", "-34.3593, 949.499, 20.7719, 0.44", "-34.0452, 950.174, 21.2866, 0.29", "-33.9925, 950.23, 21.3452, 0.29", "-33.25, 950.589, 21.8655, 0.29", "-33.2031, 950.603, 21.8953, 0.29", "-32.4894, 950.872, 22.3867, 0.81", "-32.4152, 950.913, 22.4451, 0.81", "-32.0062, 951.27, 22.8414, 0.81", "-31.4504, 952.005, 23.4899, 0.29", "-30.9377, 952.959, 24.2104, 0.29", "-30.358, 954.305, 25.0702, 0.52", "-30.078, 955.151, 25.5266, 1.33", "-29.7815, 956.236, 26.0769, 0.22", "-29.6728, 956.814, 26.3409, 0.74", "-29.6576, 956.957, 26.3956, 0.74", "-29.5695, 957.783, 26.5959, 0.37", "-29.4819, 958.262, 26.6626, 1.03" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-26.7073, 927.721, 4.67898, 0.22", "-27.6908, 928.291, 5.0603, 0.22", "-28.3258, 928.65, 5.30089, 0.15", "-29.1648, 929.104, 5.59193, 0.15", "-30.1739, 929.65, 5.94203, 0.52", "-30.6149, 929.889, 6.09504, 0.52", "-31.231, 930.223, 6.30877, 0.52", "-31.4107, 930.317, 6.37359, 0.52", "-32.4378, 930.837, 6.75601, 0.22" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "7.02043, 921.774, -22.9147, 0.22", "8.38811, 919.964, -23.9749, 0.22", "8.78473, 919.365, -24.28, 0.29", "9.49643, 918.123, -24.8354, 0.22", "10.0777, 917.108, -25.2891, 0.44", "10.639, 916.128, -25.7271, 0.22", "10.6794, 916.057, -25.7587, 0.22", "10.8627, 915.583, -25.84, 0.44", "10.9908, 915.08, -25.9005, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "7.02043, 921.774, -22.9147, 0.29", "7.10076, 922.245, -22.8411, 0.29", "7.31935, 923.327, -22.5693, 0.29", "7.56502, 924.434, -22.2372, 0.29", "7.59063, 924.535, -22.2043, 0.29", "7.90386, 925.535, -21.8443, 0.29", "7.97109, 925.722, -21.7723, 0.81", "8.35064, 926.633, -21.3969, 0.66", "8.37131, 926.675, -21.3791, 0.66", "8.64291, 927.178, -21.1564, 0.52", "9.35591, 928.487, -20.6154, 0.29", "9.80078, 929.332, -20.2434, 0.29", "10.0227, 929.795, -20.0537, 1.33", "10.278, 930.372, -19.8397, 1.55", "10.3032, 930.434, -19.8171, 1.55", "10.5619, 931.156, -19.5232, 1.25", "11.0526, 932.661, -18.8966, 0.37", "11.3241, 933.556, -18.5108, 0.29", "11.3416, 933.617, -18.4831, 0.29", "11.6074, 934.584, -18.0212, 0.29", "12.0769, 936.306, -17.1842, 1.84" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-29.4819, 958.262, 26.6626, 0.44", "-29.1726, 956.977, 26.5858, 0.44", "-28.8975, 955.835, 26.5174, 0.37", "-28.7064, 955.041, 26.47, 0.22", "-28.6899, 954.973, 26.4659, 0.22", "-28.3807, 953.689, 26.3891, 0.22", "-28.3642, 953.62, 26.385, 0.22", "-27.0592, 943.804, 27.4126, 0.22" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-29.4819, 958.262, 26.6626, 0.74", "-29.7504, 959.074, 26.6342, 0.74", "-29.9796, 960.199, 26.6041, 0.22", "-29.9978, 960.289, 26.6, 0.22", "-30.1777, 961.24, 26.5868, 0.22", "-30.2322, 961.535, 26.5879, 0.22", "-30.3972, 962.483, 26.6139, 0.22", "-30.605, 963.737, 26.6866, 1.4", "-30.8208, 965.412, 26.8746, 0.29", "-30.9385, 966.504, 27.0698, 0.29", "-30.9495, 966.631, 27.1002, 0.29", "-31.0689, 967.846, 27.4559, 0.29", "-31.0783, 967.931, 27.4872, 0.29", "-31.2515, 969.319, 28.1365, 0.81", "-31.332, 970.138, 28.5987, 1.11", "-31.3391, 970.217, 28.6437, 1.11", "-31.4478, 971.236, 29.1873, 1.11", "-31.4662, 971.374, 29.2583, 1.11", "-31.5969, 972.049, 29.5481, 1.11", "-31.6154, 972.119, 29.5775, 1.11", "-31.8588, 973.012, 29.9267, 0.22", "-32.1248, 973.947, 30.298, 0.29", "-32.1499, 974.03, 30.3311, 0.29", "-32.4322, 974.91, 30.6623, 0.22", "-32.9649, 976.406, 31.1916, 0.81", "-36.4071, 988.637, 34.0329, 0.81" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "12.0769, 936.306, -17.1842, 1.84", "13.2583, 937.17, -17.7319, 1.84" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "12.0769, 936.306, -17.1842, 0.22", "12.0923, 938.419, -17.5741, 0.22", "12.1124, 939.558, -17.7447, 0.22", "12.1137, 939.625, -17.7534, 0.22", "12.1364, 940.977, -17.9014, 0.59", "12.1624, 942.36, -18.0357, 0.22", "12.1878, 943.403, -18.1227, 0.66", "12.1945, 943.483, -18.1149, 0.66", "12.2265, 943.726, -18.0747, 0.66", "12.3722, 944.68, -17.8659, 0.15", "12.3848, 944.754, -17.8442, 0.15", "12.5022, 945.404, -17.6116, 1.18", "12.8506, 946.92, -16.9715, 0.29", "12.9689, 947.389, -16.7581, 0.52", "12.9886, 947.457, -16.7233, 0.52", "13.0855, 947.736, -16.5512, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "13.2583, 937.17, -17.7319, 0.15", "13.7754, 938.965, -17.232, 0.15", "14.017, 939.853, -17.0111, 0.15", "14.1822, 940.459, -16.8602, 0.29", "14.2406, 940.673, -16.8068, 0.29", "14.388, 941.215, -16.672, 0.15", "14.5037, 941.64, -16.5663, 0.29", "14.5185, 941.75, -16.5648, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "13.2583, 937.17, -17.7319, 0.29", "13.8918, 935.701, -16.8738, 0.29", "14.0814, 935.209, -16.5769, 0.29", "14.3757, 934.376, -16.0823, 0.22", "14.4859, 934.093, -15.9122, 0.52", "14.9351, 932.966, -15.232, 0.22", "14.9538, 932.915, -15.2008, 0.22", "15.0676, 932.524, -14.9721, 0.88", "15.1409, 932.28, -14.7999, 1.03", "15.4517, 930.991, -13.7812, 0.22", "15.4616, 930.923, -13.7292, 0.22", "15.5809, 929.682, -12.776, 0.22", "15.584, 929.632, -12.7369, 0.22", "15.6893, 928.526, -11.8359, 0.22", "15.7635, 927.811, -11.2374, 0.22", "15.8573, 926.981, -10.4616, 0.22", "16.0724, 925.972, -9.44077, 0.29", "16.1011, 925.903, -9.36577, 0.29", "16.7827, 924.843, -8.25624, 0.15", "16.8158, 924.805, -8.21756, 0.15", "17.8784, 923.896, -7.29949, 0.96", "18.2151, 923.655, -7.0572, 0.96", "19.4145, 922.819, -6.29175, 0.22", "20.3996, 922.148, -5.69297, 0.22", "20.4485, 922.116, -5.66562, 0.22", "21.4171, 921.499, -5.18428, 0.22", "22.9556, 920.553, -4.59271, 0.22", "23.6207, 920.127, -4.32213, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "14.5185, 941.75, -16.5648, 0.37", "14.6534, 943.114, -16.2084, 0.37", "14.662, 943.191, -16.1925, 0.37", "14.7073, 943.659, -16.118, 0.22", "14.8004, 944.693, -16.0178, 0.22", "14.8379, 945.242, -15.985, 0.66", "14.844, 945.332, -15.9796, 0.66", "14.9205, 946.283, -15.994, 0.52", "14.9785, 947.103, -16.0126, 0.52", "15.0263, 948.086, -16.0497, 1.33", "15.0465, 948.906, -16.0984, 1.47" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "14.5185, 941.75, -16.5648, 0.29", "15.2237, 941.78, -16.1697, 0.29", "15.262, 941.785, -16.1496, 0.29", "16.3786, 941.988, -15.5767, 0.66", "17.0988, 942.138, -15.2065, 0.15", "17.4731, 942.218, -15.0175, 0.88", "17.8808, 942.297, -14.832, 0.88", "18.5034, 942.423, -14.5583, 0.22", "18.5437, 942.431, -14.5439, 0.22", "19.0722, 942.527, -14.4257, 0.81", "19.2983, 942.593, -14.3841, 0.81", "20.036, 942.846, -14.2586, 0.22", "20.2383, 942.911, -14.2291, 0.96", "20.2865, 942.928, -14.2237, 0.96", "20.6865, 943.077, -14.1979, 0.52", "21.3589, 943.317, -14.1291, 0.22", "21.4272, 943.341, -14.1171, 0.22", "21.6376, 943.406, -14.0617, 0.22", "21.7018, 943.421, -14.0436, 0.22", "22.3119, 943.537, -13.8642, 0.66", "23.1901, 943.671, -13.6002, 0.15", "23.2316, 943.676, -13.5877, 0.15", "23.8014, 943.727, -13.4428, 0.15", "24.2144, 943.759, -13.3319, 0.74", "24.3334, 943.769, -13.2998, 0.74", "24.6824, 943.805, -13.206, 0.74", "24.7318, 943.81, -13.1948, 0.74", "25.4936, 943.87, -13.0215, 0.22", "26.5739, 943.918, -12.7641, 0.66", "26.8403, 943.923, -12.696, 0.66", "26.8969, 943.923, -12.6809, 0.66", "27.3521, 943.909, -12.5487, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "15.0465, 948.906, -16.0984, 0.44", "14.7789, 950.009, -15.6205, 0.44", "14.6508, 950.779, -15.2308, 0.29", "14.5558, 951.537, -14.825, 0.29", "14.4564, 952.731, -14.1791, 0.81", "14.4386, 953.153, -13.9517, 1.18", "14.4354, 953.354, -13.8444, 1.18", "14.5532, 954.479, -13.2329, 0.15", "14.5795, 954.599, -13.1622, 0.15", "14.7026, 954.956, -12.9497, 0.66", "14.8387, 955.278, -12.8003, 0.96", "14.8571, 955.334, -12.7755, 0.96", "14.8895, 955.525, -12.687, 0.96", "14.9446, 956.179, -12.3076, 0.29", "14.952, 956.294, -12.2312, 0.29", "14.9818, 956.784, -11.8753, 0.29", "15.033, 957.653, -11.2203, 0.37", "15.07, 958.344, -10.695, 0.52", "15.1173, 959.394, -9.88232, 0.96", "15.1213, 959.452, -9.83785, 0.96", "15.1911, 960.036, -9.41427, 1.18", "15.2259, 960.218, -9.29526, 1.18", "15.3111, 960.534, -9.16052, 1.18", "15.3372, 960.624, -9.13609, 1.18", "15.545, 961.448, -8.98838, 1.33", "15.5625, 961.518, -8.97717, 1.33", "15.6925, 962.044, -8.90522, 1.25", "16.0518, 963.488, -8.72007, 0.22", "16.2534, 964.365, -8.62119, 0.22", "16.342, 964.828, -8.57625, 0.59", "16.3597, 964.929, -8.56717, 0.59", "16.405, 965.197, -8.54422, 0.59", "16.521, 965.989, -8.48594, 0.22", "16.5566, 966.596, -8.46941, 0.96", "16.5541, 967.33, -8.45935, 1.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "15.0465, 948.906, -16.0984, 0.15", "15.5647, 950.827, -16.517, 0.15", "15.5791, 950.904, -16.5301, 0.15", "15.6547, 951.298, -16.5895, 0.15", "15.6648, 951.361, -16.5977, 0.15", "15.7163, 951.784, -16.6537, 0.59", "15.7437, 952.059, -16.6879, 0.59", "15.8385, 953.773, -16.8564, 0.22", "15.8607, 954.453, -16.9203, 1.25", "15.8769, 954.934, -16.9564, 0.88", "15.915, 956.185, -17.0281, 0.15", "15.9246, 956.713, -17.0477, 0.15", "15.9222, 957.296, -17.0579, 0.74", "15.9112, 957.69, -17.0537, 1.11", "15.8662, 958.582, -17.0396, 0.15", "15.8444, 959.049, -17.0292, 0.96", "15.8087, 959.614, -17.0071, 1.18", "15.6786, 961.211, -16.9568, 0.15", "15.6714, 961.283, -16.9547, 0.15", "15.5796, 962.024, -16.9442, 0.15", "15.5714, 962.077, -16.9444, 0.15", "15.5135, 962.532, -16.9441, 0.52", "15.5012, 962.64, -16.942, 0.52", "15.4769, 962.873, -16.9384, 0.52", "15.4732, 962.919, -16.9383, 0.52", "15.4281, 963.689, -16.9411, 0.22", "15.3973, 964.248, -16.9456, 1.11", "15.3747, 964.77, -16.9347, 0.81", "15.3227, 966.145, -16.8807, 0.15", "15.274, 967.605, -16.7987, 0.15", "15.266, 968.096, -16.7562, 1.03", "15.2655, 968.643, -16.6836, 0.81", "15.2885, 969.822, -16.4646, 0.22", "15.2902, 969.867, -16.4535, 0.22", "15.3383, 970.616, -16.195, 0.52", "15.3915, 971.32, -15.9002, 0.22", "15.4395, 971.951, -15.6272, 0.74", "15.4675, 972.308, -15.471, 0.74", "15.4711, 972.359, -15.4495, 0.74", "15.55, 973.398, -15.0274, 0.22", "15.5537, 973.441, -15.0108, 0.22", "15.6299, 974.261, -14.7642, 0.66", "15.6629, 974.544, -14.6947, 0.66", "15.6694, 974.59, -14.6856, 0.66", "15.7689, 975.102, -14.6122, 0.22", "16.0158, 975.931, -14.4925, 1.4", "16.3586, 976.899, -14.3517, 0.15", "16.4025, 977.009, -14.3363, 0.15", "16.642, 977.565, -14.2512, 0.15", "17.0169, 978.413, -14.1179, 0.15", "17.6989, 979.902, -13.8755, 0.15", "18.0862, 980.682, -13.7308, 1.33", "18.2514, 980.998, -13.6492, 1.47", "18.8592, 982.195, -13.3674, 0.22", "18.926, 982.332, -13.3374, 0.44", "18.9442, 982.375, -13.3315, 0.44", "19.1699, 983.09, -13.4105, 0.22", "19.4581, 984.005, -13.3964, 0.88", "19.8566, 985.426, -13.1999, 0.59", "19.94, 985.689, -13.1314, 0.37", "20.1918, 986.39, -12.891, 0.15", "20.5789, 987.393, -12.4904, 1.62", "21.5435, 989.651, -11.4876, 0.88", "21.7648, 990.115, -11.2502, 1.25", "22.2, 990.94, -10.7453, 0.15", "22.3569, 991.219, -10.5671, 0.66", "22.3865, 991.268, -10.5371, 0.66", "22.9102, 992.118, -10.1168, 0.22", "23.1524, 992.57, -10.0198, 0.88", "23.2443, 992.755, -9.98553, 0.88", "23.2725, 992.819, -9.97412, 0.88", "23.779, 994.081, -9.74765, 0.22", "23.9527, 994.534, -9.66917, 0.66", "24.3583, 995.7, -9.4762, 0.15", "24.5495, 996.282, -9.38387, 0.15", "24.5634, 996.328, -9.37676, 0.15", "24.6597, 996.714, -9.32029, 0.44", "24.7413, 997.22, -9.25543, 0.22", "24.7726, 997.666, -9.20991, 0.52", "24.7624, 997.729, -9.20617, 0.52", "24.6979, 997.958, -9.1863, 0.52", "24.6036, 998.228, -9.15867, 0.37", "24.5733, 998.284, -9.15046, 0.37", "24.3663, 998.523, -9.09745, 0.22", "23.9836, 998.882, -9.00124, 0.44" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "16.5541, 967.33, -8.45935, 0.22", "16.5345, 968.376, -8.06431, 0.22", "16.5183, 968.907, -7.85571, 0.52", "16.4689, 970.24, -7.31981, 0.29", "16.4425, 970.861, -7.06527, 0.88", "16.4354, 971.328, -6.87979, 1.18", "16.4364, 971.662, -6.75616, 1.18", "16.4438, 971.833, -6.69949, 1.18", "16.4438, 971.833, -6.69949, 1.18", "16.4486, 971.876, -6.68961, 1.18", "16.5485, 972.729, -6.51347, 0.22", "16.6307, 973.248, -6.36255, 0.44", "16.7591, 973.999, -6.09763, 0.59", "16.837, 974.354, -5.94697, 1.11", "16.9295, 974.713, -5.77516, 1.11", "16.9407, 974.751, -5.75443, 1.11", "17.3712, 975.932, -4.97705, 0.22", "17.3908, 975.971, -4.94725, 0.22", "17.6938, 976.478, -4.54623, 0.22", "17.8559, 976.755, -4.3214, 0.74", "17.8782, 976.794, -4.29009, 0.74", "18.0515, 977.129, -4.03564, 0.52", "18.3022, 977.716, -3.64322, 0.22", "18.4423, 978.217, -3.3106, 0.74", "18.5716, 979.112, -2.71618, 1.25", "18.5748, 979.171, -2.67851, 1.25", "18.5691, 979.385, -2.55099, 1.11", "18.5166, 979.848, -2.25048, 0.52", "18.4239, 980.535, -1.75633, 0.15", "18.4194, 980.576, -1.72129, 0.15", "18.4404, 980.9, -1.34167, 0.15", "18.4526, 980.947, -1.26499, 0.15", "18.6025, 981.419, -0.265807, 0.44", "18.6667, 981.582, 0.141902, 0.66", "18.6768, 981.599, 0.191342, 0.66", "18.9288, 981.98, 1.40514, 0.22", "18.9395, 981.994, 1.45611, 0.22", "19.1927, 982.347, 2.73279, 1.33", "19.2153, 982.395, 2.89613, 1.62" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "16.5541, 967.33, -8.45935, 0.15", "18.5166, 969.005, -7.99793, 0.15", "19.2038, 969.569, -7.80911, 0.15", "19.3627, 969.693, -7.76149, 0.15", "20.1222, 970.266, -7.52507, 0.44", "20.2898, 970.387, -7.47031, 0.44", "21.388, 971.164, -7.10797, 0.22", "21.9458, 971.548, -6.90253, 0.44", "22.7053, 971.998, -6.63156, 0.15", "22.786, 972.042, -6.60346, 0.15", "23.5922, 972.444, -6.32974, 0.66", "23.6749, 972.483, -6.30249, 0.66", "24.7799, 972.952, -5.95426, 0.22", "25.6848, 973.341, -5.68871, 0.88", "25.7827, 973.382, -5.66068, 0.88", "26.046, 973.489, -5.58681, 1.11", "26.2209, 973.554, -5.54017, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "19.2153, 982.395, 2.89613, 0.29", "18.6486, 984.293, 4.42648, 0.29", "18.6373, 984.371, 4.4881, 0.29", "18.5786, 985.47, 5.36175, 0.29", "18.5875, 985.594, 5.46315, 0.29", "18.692, 986.439, 6.12426, 0.74", "18.7025, 986.508, 6.17645, 0.74", "18.8069, 987.356, 6.82325, 0.74", "18.809, 987.507, 6.95265, 0.74", "18.7858, 988.48, 7.84192, 0.15", "18.7784, 988.932, 8.26472, 0.15", "18.7752, 988.993, 8.32061, 0.15", "18.637, 991.054, 10.1748, 0.15", "18.5667, 991.74, 10.7507, 1.11", "18.4908, 992.422, 11.2634, 1.25", "18.3142, 994.02, 12.3929, 0.22", "18.2387, 994.969, 13.0347, 0.22", "18.2351, 995.039, 13.0769, 0.22", "18.2821, 996.073, 13.5376, 0.29", "18.334, 997.113, 13.9345, 0.74", "18.3668, 997.846, 14.2144, 1.11", "18.3748, 997.937, 14.2513, 1.11", "18.5501, 998.933, 14.7126, 0.66", "18.8267, 1000.16, 15.3154, 0.22", "19.0606, 1000.88, 15.72, 0.15", "19.4129, 1001.74, 16.2489, 1.11", "19.7703, 1002.54, 16.7321, 1.69", "19.8018, 1002.61, 16.7754, 1.69" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "19.2153, 982.395, 2.89613, 0.29", "18.5499, 983.247, 2.35307, 0.29", "18.3761, 983.471, 2.20276, 0.29", "17.8814, 984.083, 1.78224, 0.15", "17.7747, 984.211, 1.69255, 0.15", "17.4291, 984.636, 1.4077, 0.29", "16.8959, 985.302, 0.969816, 0.15", "16.8343, 985.387, 0.913251, 0.15", "16.3496, 986.159, 0.445451, 0.15", "16.3109, 986.243, 0.401414, 0.15", "16.0915, 986.815, 0.128416, 0.15", "16.0479, 986.982, 0.0598888, 0.15", "15.8454, 988.098, -0.369277, 0.15", "15.8338, 988.185, -0.400749, 0.15", "15.8036, 989.233, -0.75214, 0.15", "15.8041, 989.299, -0.773736, 0.15", "15.8442, 989.844, -0.949977, 0.37" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "19.8018, 1002.61, 16.7754, 0.52", "19.1612, 1003.5, 17.3177, 0.52", "18.5394, 1004.36, 17.7461, 0.29", "18.3402, 1004.67, 17.8534, 0.96", "18.1048, 1005.05, 17.9634, 1.11", "18.0639, 1005.11, 17.9805, 1.11", "17.7109, 1005.64, 18.1194, 0.81", "17.3438, 1006.22, 18.2195, 1.11", "16.8853, 1007.03, 18.3485, 0.37", "16.8673, 1007.07, 18.3553, 0.37", "16.5152, 1007.83, 18.5469, 0.29", "16.499, 1007.87, 18.5608, 0.29", "16.3138, 1008.37, 18.8622, 0.81", "16.2227, 1008.62, 19.0807, 1.03", "16.2113, 1008.65, 19.1121, 1.03", "16.1165, 1008.93, 19.3957, 0.96", "15.8987, 1009.62, 20.121, 0.66", "15.6939, 1010.31, 20.8221, 0.52", "15.528, 1010.87, 21.3644, 0.44", "15.4409, 1011.17, 21.6274, 0.44", "15.3494, 1011.44, 21.8742, 0.37", "15.3224, 1011.51, 21.9485, 0.37", "15.1552, 1011.98, 22.4931, 0.37", "14.9946, 1012.44, 23.018, 0.22", "14.7783, 1013.05, 23.7494, 1.4", "14.4367, 1013.89, 24.839, 0.29", "14.3186, 1014.13, 25.1892, 0.96", "14.2139, 1014.3, 25.4782, 0.96", "12.698, 1018.56, 30.1005, 0.96" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "19.8018, 1002.61, 16.7754, 0.22", "19.0295, 1004.31, 16.3385, 0.22", "18.3447, 1005.83, 15.951, 0.22", "18.275, 1005.98, 15.9116, 0.22", "17.6748, 1007.31, 15.572, 0.22", "13.2497, 1017.73, 14.8761, 0.22" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_75", "dend_70", "dend_21", "dend_0", "dend_74", "dend_71", "dend_25", "dend_22", "dend_14", "dend_1", "dend_73", "dend_72", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_15", "dend_7", "dend_2", "dend_67", "dend_28", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_8", "dend_4", "dend_3", "dend_69", "dend_68", "dend_66", "dend_29", "dend_12", "dend_9", "dend_6", "dend_5", "dend_61", "dend_30", "dend_11", "dend_10", "dend_63", "dend_62", "dend_52", "dend_31", "dend_65", "dend_64", "dend_60", "dend_53", "dend_33", "dend_32", "dend_55", "dend_54", "dend_51", "dend_34", "dend_57", "dend_56", "dend_50", "dend_35", "dend_59", "dend_58", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_43", "dend_42", "dend_45", "dend_44", "dend_47", "dend_46", "dend_49", "dend_48" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_75", "dend_70", "dend_21", "dend_0", "dend_74", "dend_71", "dend_25", "dend_22", "dend_14", "dend_1", "dend_73", "dend_72", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_15", "dend_7", "dend_2", "dend_67", "dend_28", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_8", "dend_4", "dend_3", "dend_69", "dend_68", "dend_66", "dend_29", "dend_12", "dend_9", "dend_6", "dend_5", "dend_61", "dend_30", "dend_11", "dend_10", "dend_63", "dend_62", "dend_52", "dend_31", "dend_65", "dend_64", "dend_60", "dend_53", "dend_33", "dend_32", "dend_55", "dend_54", "dend_51", "dend_34", "dend_57", "dend_56", "dend_50", "dend_35", "dend_59", "dend_58", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_43", "dend_42", "dend_45", "dend_44", "dend_47", "dend_46", "dend_49", "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_DBC_d900bc4e97_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_75, id: dend_75, parent: soma_0
create dend_75
public dend_75
// Section: dend_70, id: dend_70, parent: soma_0
create dend_70
public dend_70
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_67, id: dend_67, parent: dend_27
create dend_67
public dend_67
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_7
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_28
create dend_66
public dend_66
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_61, id: dend_61, parent: dend_29
create dend_61
public dend_61
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_52, id: dend_52, parent: dend_30
create dend_52
public dend_52
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_52
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_33
create dend_51
public dend_51
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_50, id: dend_50, parent: dend_34
create dend_50
public dend_50
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_78
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_75(0), soma_0(0.4999985130312626)
    connect dend_70(0), soma_0(0.4999985130312626)
    connect dend_21(0), soma_0(0.4999985130312626)
    connect dend_0(0), soma_0(0.4999985130312626)
    connect axon_0(0), soma_0(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_67(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_61(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_52(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_51(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_50(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.28115, -11.0873, 1.6054, 2.71903 ) }
    soma_0 { pt3dadd( -3.90555, -10.0189, 1.46271, 4.54351 ) }
    soma_0 { pt3dadd( -3.52995, -8.95054, 1.32001, 6.06676 ) }
    soma_0 { pt3dadd( -3.15435, -7.88215, 1.17732, 7.70089 ) }
    soma_0 { pt3dadd( -2.77875, -6.81375, 1.03462, 9.50221 ) }
    soma_0 { pt3dadd( -2.40315, -5.74536, 0.891931, 11.4189 ) }
    soma_0 { pt3dadd( -2.02755, -4.67696, 0.749237, 12.8756 ) }
    soma_0 { pt3dadd( -1.65195, -3.60857, 0.606544, 14.0093 ) }
    soma_0 { pt3dadd( -1.27635, -2.54017, 0.46385, 14.551 ) }
    soma_0 { pt3dadd( -0.900746, -1.47178, 0.321156, 14.6039 ) }
    soma_0 { pt3dadd( -0.525145, -0.403386, 0.178462, 14.3615 ) }
    soma_0 { pt3dadd( -0.149545, 0.665008, 0.0357687, 13.9828 ) }
    soma_0 { pt3dadd( 0.226055, 1.7334, -0.106925, 13.3923 ) }
    soma_0 { pt3dadd( 0.601655, 2.8018, -0.249619, 12.9274 ) }
    soma_0 { pt3dadd( 0.977256, 3.87019, -0.392313, 12.1033 ) }
    soma_0 { pt3dadd( 1.35286, 4.93859, -0.535006, 10.4725 ) }
    soma_0 { pt3dadd( 1.72846, 6.00698, -0.6777, 8.96565 ) }
    soma_0 { pt3dadd( 2.10406, 7.07537, -0.820394, 7.72714 ) }
    soma_0 { pt3dadd( 2.47966, 8.14377, -0.963088, 6.28127 ) }
    soma_0 { pt3dadd( 2.85526, 9.21216, -1.10578, 4.62664 ) }
    soma_0 { pt3dadd( 3.23086, 10.2806, -1.24848, 2.72659 ) }
    // Section: dend_75, id: dend_75, parent: soma_0 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -6.8285, -4.03579, -7.44048, 0.74 ) }
    dend_75 { pt3dadd( -6.8285, -4.03579, -7.44048, 0.74 ) }
    dend_75 { pt3dadd( -7.56361, -5.10871, -7.49126, 0.74 ) }
    dend_75 { pt3dadd( -7.62241, -5.16513, -7.4963, 0.74 ) }
    dend_75 { pt3dadd( -8.77205, -5.88216, -7.6006, 0.66 ) }
    dend_75 { pt3dadd( -9.8884, -6.33413, -7.70107, 0.44 ) }
    dend_75 { pt3dadd( -11.1828, -6.6798, -7.81279, 0.44 ) }
    dend_75 { pt3dadd( -12.3823, -6.8194, -8.05386, 0.44 ) }
    dend_75 { pt3dadd( -13.1499, -6.83971, -8.26369, 1.03 ) }
    dend_75 { pt3dadd( -14.103, -6.85828, -8.62152, 1.33 ) }
    dend_75 { pt3dadd( -14.9468, -6.84463, -9.01747, 1.47 ) }
    dend_75 { pt3dadd( -15.7823, -6.86464, -9.51638, 0.66 ) }
    dend_75 { pt3dadd( -17.3959, -7.32447, -10.9487, 0.37 ) }
    dend_75 { pt3dadd( -17.7561, -7.63859, -11.5008, 0.37 ) }
    dend_75 { pt3dadd( -18.259, -8.41523, -12.6052, 1.11 ) }
    dend_75 { pt3dadd( -18.2826, -8.47167, -12.6761, 1.11 ) }
    dend_75 { pt3dadd( -18.4287, -8.98263, -13.2467, 0.88 ) }
    dend_75 { pt3dadd( -18.6572, -10.1289, -14.384, 0.59 ) }
    dend_75 { pt3dadd( -18.9209, -11.6415, -15.6945, 1.03 ) }
    dend_75 { pt3dadd( -18.9657, -11.9041, -15.9346, 1.25 ) }
    dend_75 { pt3dadd( -18.9852, -11.9943, -16.0157, 1.25 ) }
    dend_75 { pt3dadd( -19.0863, -12.3888, -16.3749, 1.25 ) }
    dend_75 { pt3dadd( -19.1242, -12.4945, -16.4777, 1.25 ) }
    dend_75 { pt3dadd( -19.6507, -13.5139, -17.4654, 0.52 ) }
    dend_75 { pt3dadd( -20.228, -14.2577, -18.2176, 0.22 ) }
    dend_75 { pt3dadd( -20.5906, -14.5163, -18.5895, 0.22 ) }
    dend_75 { pt3dadd( -20.8434, -14.6165, -18.7997, 0.22 ) }
    dend_75 { pt3dadd( -21.4587, -14.7527, -19.2333, 0.88 ) }
    dend_75 { pt3dadd( -21.8819, -14.8307, -19.4793, 1.25 ) }
    dend_75 { pt3dadd( -22.5421, -14.9602, -19.8093, 1.25 ) }
    dend_75 { pt3dadd( -23.9274, -15.3716, -20.579, 0.29 ) }
    dend_75 { pt3dadd( -24.3237, -15.5628, -20.8431, 0.29 ) }
    dend_75 { pt3dadd( -24.9179, -15.9951, -21.2939, 0.29 ) }
    dend_75 { pt3dadd( -25.5801, -16.639, -21.8355, 0.29 ) }
    dend_75 { pt3dadd( -26.2376, -17.3955, -22.4147, 0.29 ) }
    dend_75 { pt3dadd( -26.8661, -18.2184, -22.9846, 0.52 ) }
    dend_75 { pt3dadd( -27.1146, -18.5856, -23.2088, 0.52 ) }
    dend_75 { pt3dadd( -27.3314, -18.8724, -23.3918, 0.29 ) }
    dend_75 { pt3dadd( -27.6573, -19.2694, -23.754, 0.29 ) }
    dend_75 { pt3dadd( -28.0548, -19.7025, -24.2684, 1.25 ) }
    dend_75 { pt3dadd( -28.3377, -19.9754, -24.6321, 1.47 ) }
    dend_75 { pt3dadd( -28.3816, -20.0172, -24.6913, 1.47 ) }
    dend_75 { pt3dadd( -28.5922, -20.2321, -25.0071, 1.47 ) }
    dend_75 { pt3dadd( -29.8026, -21.6089, -27.1041, 0.22 ) }
    dend_75 { pt3dadd( -29.9922, -21.8627, -27.4794, 0.81 ) }
    dend_75 { pt3dadd( -30.2247, -22.1871, -27.9424, 0.81 ) }
    dend_75 { pt3dadd( -30.2561, -22.2283, -28.0052, 0.81 ) }
    dend_75 { pt3dadd( -30.5773, -22.5846, -28.5858, 0.96 ) }
    dend_75 { pt3dadd( -31.2986, -23.3016, -29.8677, 0.29 ) }
    dend_75 { pt3dadd( -31.3456, -23.3397, -29.9425, 0.29 ) }
    dend_75 { pt3dadd( -31.6231, -23.6138, -30.4281, 0.29 ) }
    dend_75 { pt3dadd( -32.4198, -24.6631, -31.9132, 1.92 ) }
    dend_75 { pt3dadd( -32.841, -25.3428, -32.7288, 2.58 ) }
    dend_75 { pt3dadd( -33.255, -26.1222, -33.5576, 2.58 ) }
    dend_75 { pt3dadd( -33.2851, -26.1778, -33.6096, 2.58 ) }
    dend_75 { pt3dadd( -34.1386, -27.6984, -34.8933, 0.66 ) }
    dend_75 { pt3dadd( -34.8021, -28.7117, -35.6938, 0.22 ) }
    dend_75 { pt3dadd( -34.941, -28.8832, -35.8104, 0.81 ) }
    dend_75 { pt3dadd( -35.7569, -29.7276, -36.3991, 0.22 ) }
    dend_75 { pt3dadd( -36.7338, -30.6244, -37.0224, 2.58 ) }
    dend_75 { pt3dadd( -37.1953, -31.0067, -37.3104, 3.32 ) }
    dend_75 { pt3dadd( -38.9396, -32.3096, -38.3689, 0.44 ) }
    dend_75 { pt3dadd( -39.8494, -32.9925, -38.9351, 1.33 ) }
    dend_75 { pt3dadd( -40.5568, -33.5805, -39.3796, 1.47 ) }
    dend_75 { pt3dadd( -41.334, -34.3911, -39.9278, 0.22 ) }
    dend_75 { pt3dadd( -41.4153, -34.4965, -39.9976, 0.22 ) }
    dend_75 { pt3dadd( -41.9076, -35.1839, -40.4402, 0.22 ) }
    dend_75 { pt3dadd( -42.3979, -35.9537, -40.8824, 1.69 ) }
    dend_75 { pt3dadd( -42.5842, -36.2277, -41.0425, 2.06 ) }
    dend_75 { pt3dadd( -43.9017, -37.8806, -42.2239, 0.22 ) }
    dend_75 { pt3dadd( -43.948, -37.9308, -42.2678, 0.22 ) }
    dend_75 { pt3dadd( -44.5177, -38.5511, -42.8651, 0.22 ) }
    dend_75 { pt3dadd( -44.8039, -38.8655, -43.1906, 0.88 ) }
    dend_75 { pt3dadd( -45.0799, -39.234, -43.601, 1.11 ) }
    dend_75 { pt3dadd( -46.2263, -40.9369, -45.4852, 0.22 ) }
    dend_75 { pt3dadd( -46.2594, -40.9951, -45.5505, 0.22 ) }
    dend_75 { pt3dadd( -46.6524, -41.7793, -46.4363, 1.84 ) }
    dend_75 { pt3dadd( -46.824, -42.1847, -46.8838, 1.99 ) }
    dend_75 { pt3dadd( -47.57, -44.0998, -48.8941, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_75 { pt3dadd( -47.7954, -44.6555, -49.4276, 0.29 ) }
    dend_75 { pt3dadd( -48.5584, -46.1688, -50.7586, 0.29 ) }
    dend_75 { pt3dadd( -48.6459, -46.3191, -50.8931, 0.29 ) }
    dend_75 { pt3dadd( -49.217, -47.1244, -51.6314, 1.11 ) }
    dend_75 { pt3dadd( -49.5243, -47.5016, -52.0131, 1.47 ) }
    dend_75 { pt3dadd( -50.3202, -48.3539, -52.926, 0.29 ) }
    dend_75 { pt3dadd( -51.3813, -49.3837, -54.1174, 2.43 ) }
    dend_75 { pt3dadd( -52.2355, -50.1004, -55.0023, 2.43 ) }
    dend_75 { pt3dadd( -53.5446, -51.0824, -56.347, 0.52 ) }
    dend_75 { pt3dadd( -54.5152, -51.7289, -57.3486, 0.66 ) }
    dend_75 { pt3dadd( -55.2935, -52.2018, -58.1569, 0.22 ) }
    dend_75 { pt3dadd( -55.6937, -52.4161, -58.5557, 0.59 ) }
    dend_75 { pt3dadd( -56.0733, -52.6035, -58.8957, 0.59 ) }
    dend_75 { pt3dadd( -56.9849, -53.0688, -59.6119, 0.22 ) }
    dend_75 { pt3dadd( -57.6396, -53.479, -60.0916, 1.18 ) }
    dend_75 { pt3dadd( -57.9384, -53.7108, -60.2874, 1.33 ) }
    dend_75 { pt3dadd( -59.1526, -54.8528, -61.1474, 0.37 ) }
    dend_75 { pt3dadd( -59.8764, -55.6329, -61.6875, 0.22 ) }
    dend_75 { pt3dadd( -60.4702, -56.3317, -62.1298, 0.22 ) }
    dend_75 { pt3dadd( -61.1621, -57.2169, -62.6277, 1.55 ) }
    dend_75 { pt3dadd( -61.6149, -57.8378, -62.9461, 2.06 ) }
    dend_75 { pt3dadd( -62.7958, -59.5853, -63.7757, 0.22 ) }
    dend_75 { pt3dadd( -63.0379, -59.9595, -63.9333, 0.52 ) }
    dend_75 { pt3dadd( -63.2843, -60.295, -64.0798, 0.52 ) }
    dend_75 { pt3dadd( -64.0456, -61.2244, -64.495, 0.22 ) }
    dend_75 { pt3dadd( -64.4751, -61.7238, -64.7124, 0.22 ) }
    dend_75 { pt3dadd( -64.945, -62.2697, -64.9755, 1.11 ) }
    dend_75 { pt3dadd( -65.3463, -62.7232, -65.1947, 1.33 ) }
    dend_75 { pt3dadd( -66.5356, -64.0163, -65.9021, 0.22 ) }
    dend_75 { pt3dadd( -66.9534, -64.4443, -66.1583, 1.03 ) }
    dend_75 { pt3dadd( -67.1852, -64.6597, -66.3029, 1.03 ) }
    dend_75 { pt3dadd( -68.4296, -65.7663, -67.0662, 0.22 ) }
    dend_75 { pt3dadd( -68.8846, -66.1718, -67.3344, 0.22 ) }
    dend_75 { pt3dadd( -69.2775, -66.5244, -67.5568, 1.18 ) }
    dend_75 { pt3dadd( -69.6433, -66.839, -67.7532, 1.4 ) }
    dend_75 { pt3dadd( -71.0798, -68.0479, -68.6085, 0.22 ) }
    dend_75 { pt3dadd( -71.5502, -68.4311, -68.8854, 1.11 ) }
    dend_75 { pt3dadd( -71.9021, -68.71, -69.0858, 1.33 ) }
    dend_75 { pt3dadd( -72.2061, -68.9674, -69.2767, 1.18 ) }
    dend_75 { pt3dadd( -73.3885, -70.0331, -70.0445, 0.15 ) }
    dend_75 { pt3dadd( -74.4006, -70.9857, -70.7083, 0.15 ) }
    dend_75 { pt3dadd( -74.7919, -71.3617, -70.9571, 0.81 ) }
    dend_75 { pt3dadd( -75.0298, -71.6033, -71.1398, 0.81 ) }
    dend_75 { pt3dadd( -76.0106, -72.6357, -71.9439, 0.22 ) }
    dend_75 { pt3dadd( -76.8172, -73.5155, -72.619, 0.22 ) }
    dend_75 { pt3dadd( -77.5552, -74.3468, -73.2431, 1.47 ) }
    dend_75 { pt3dadd( -77.8728, -74.6962, -73.526, 1.84 ) }
    dend_75 { pt3dadd( -79.5647, -76.5619, -75.2813, 0.15 ) }
    dend_75 { pt3dadd( -79.9719, -76.9912, -75.7373, 0.15 ) }
    dend_75 { pt3dadd( -80.2168, -77.2414, -76.0425, 0.74 ) }
    dend_75 { pt3dadd( -80.332, -77.3541, -76.1937, 0.74 ) }
    dend_75 { pt3dadd( -81.2397, -78.1777, -77.3933, 0.29 ) }
    dend_75 { pt3dadd( -82.0473, -78.8584, -78.4287, 1.25 ) }
    dend_75 { pt3dadd( -82.3616, -79.1023, -78.7966, 1.33 ) }
    dend_75 { pt3dadd( -83.3638, -79.9482, -80.1927, 0.15 ) }
    dend_75 { pt3dadd( -83.6694, -80.2213, -80.6569, 0.74 ) }
    dend_75 { pt3dadd( -84.313, -80.8151, -81.6625, 0.22 ) }
    dend_75 { pt3dadd( -84.3472, -80.847, -81.7145, 0.22 ) }
    dend_75 { pt3dadd( -84.6196, -81.0951, -82.1114, 0.88 ) }
    dend_75 { pt3dadd( -86.1641, -82.4958, -84.3373, 0.22 ) }
    dend_75 { pt3dadd( -86.2151, -82.5408, -84.4051, 0.22 ) }
    dend_75 { pt3dadd( -86.3662, -82.6607, -84.5727, 0.22 ) }
    dend_75 { pt3dadd( -87.0461, -83.1377, -85.1636, 1.47 ) }
    dend_75 { pt3dadd( -87.3647, -83.3367, -85.382, 1.84 ) }
    dend_75 { pt3dadd( -87.6489, -83.5011, -85.5278, 1.84 ) }
    dend_75 { pt3dadd( -87.9855, -83.682, -85.6382, 1.84 ) }
    dend_75 { pt3dadd( -89.4454, -84.6161, -86.4411, 0.15 ) }
    dend_75 { pt3dadd( -89.5371, -84.6756, -86.5035, 0.15 ) }
    dend_75 { pt3dadd( -90.2693, -85.115, -87.0677, 0.15 ) }
    dend_75 { pt3dadd( -90.8953, -85.4947, -87.5721, 0.96 ) }
    dend_75 { pt3dadd( -91.2797, -85.7439, -87.8901, 0.96 ) }
    dend_75 { pt3dadd( -93.296, -87.1495, -89.611, 0.22 ) }
    dend_75 { pt3dadd( -93.8207, -87.5644, -90.0802, 0.22 ) }
    dend_75 { pt3dadd( -94.4779, -88.111, -90.6558, 0.22 ) }
    dend_75 { pt3dadd( -95.2258, -88.7515, -91.2737, 1.11 ) }
    dend_75 { pt3dadd( -95.7279, -89.1989, -91.6644, 1.69 ) }
    dend_75 { pt3dadd( -95.8945, -89.3613, -91.7812, 1.69 ) }
    dend_75 { pt3dadd( -97.372, -90.9898, -92.7037, 0.22 ) }
    dend_75 { pt3dadd( -97.9001, -91.6399, -93.0505, 0.37 ) }
    dend_75 { pt3dadd( -98.3984, -92.2766, -93.3889, 0.22 ) }
    dend_75 { pt3dadd( -99.0802, -93.1123, -93.8393, 1.47 ) }
    dend_75 { pt3dadd( -99.5584, -93.6707, -94.1841, 1.69 ) }
    dend_75 { pt3dadd( -100.776, -95.0477, -95.0683, 0.22 ) }
    dend_75 { pt3dadd( -101.809, -96.2442, -95.818, 0.22 ) }
    dend_75 { pt3dadd( -102.324, -96.8487, -96.2159, 1.4 ) }
    dend_75 { pt3dadd( -102.813, -97.4251, -96.6085, 1.84 ) }
    dend_75 { pt3dadd( -104.396, -99.2309, -97.8946, 0.15 ) }
    dend_75 { pt3dadd( -104.949, -99.8359, -98.3563, 0.15 ) }
    dend_75 { pt3dadd( -105.47, -100.38, -98.7996, 1.18 ) }
    dend_75 { pt3dadd( -105.753, -100.677, -99.0506, 1.18 ) }
    dend_75 { pt3dadd( -105.794, -100.721, -99.0864, 1.18 ) }
    dend_75 { pt3dadd( -107.081, -102.193, -100.204, 0.22 ) }
    dend_75 { pt3dadd( -107.694, -102.951, -100.679, 1.25 ) }
    dend_75 { pt3dadd( -108.568, -104.048, -101.383, 0.15 ) }
    dend_75 { pt3dadd( -108.917, -104.448, -101.667, 0.88 ) }
    dend_75 { pt3dadd( -109.098, -104.643, -101.808, 1.03 ) }
    dend_75 { pt3dadd( -109.66, -105.225, -102.221, 0.15 ) }
    dend_75 { pt3dadd( -110.303, -105.855, -102.646, 0.15 ) }
    dend_75 { pt3dadd( -110.814, -106.315, -103.004, 0.74 ) }
    dend_75 { pt3dadd( -111.775, -107.109, -103.683, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_75 { pt3dadd( -112.603, -107.796, -104.266, 0.22 ) }
    dend_75 { pt3dadd( -113.346, -108.415, -104.787, 1.99 ) }
    dend_75 { pt3dadd( -113.683, -108.703, -105.02, 2.28 ) }
    dend_75 { pt3dadd( -115.57, -110.422, -106.28, 0.22 ) }
    dend_75 { pt3dadd( -115.834, -110.694, -106.453, 0.52 ) }
    dend_75 { pt3dadd( -116.714, -111.657, -106.981, 0.15 ) }
    dend_75 { pt3dadd( -116.766, -111.713, -107.012, 0.15 ) }
    dend_75 { pt3dadd( -117.172, -112.124, -107.223, 0.81 ) }
    dend_75 { pt3dadd( -117.22, -112.17, -107.243, 0.81 ) }
    dend_75 { pt3dadd( -118.557, -113.445, -107.611, 0.22 ) }
    dend_75 { pt3dadd( -119.536, -114.397, -107.943, 0.22 ) }
    dend_75 { pt3dadd( -119.602, -114.459, -107.967, 0.22 ) }
    dend_75 { pt3dadd( -120.537, -115.373, -108.312, 0.22 ) }
    dend_75 { pt3dadd( -121.189, -116.027, -108.593, 0.81 ) }
    dend_75 { pt3dadd( -121.249, -116.092, -108.62, 0.81 ) }
    dend_75 { pt3dadd( -122.258, -117.279, -109.15, 0.22 ) }
    dend_75 { pt3dadd( -122.845, -117.982, -109.481, 1.47 ) }
    dend_75 { pt3dadd( -123.057, -118.231, -109.597, 1.77 ) }
    dend_75 { pt3dadd( -124.668, -120.076, -110.465, 0.22 ) }
    dend_75 { pt3dadd( -125.14, -120.582, -110.712, 0.52 ) }
    dend_75 { pt3dadd( -126.212, -121.659, -111.229, 0.22 ) }
    dend_75 { pt3dadd( -127.521, -122.879, -111.802, 0.22 ) }
    dend_75 { pt3dadd( -128.191, -123.483, -112.099, 1.18 ) }
    dend_75 { pt3dadd( -128.395, -123.664, -112.187, 1.4 ) }
    dend_75 { pt3dadd( -129.973, -125.121, -112.961, 0.15 ) }
    dend_75 { pt3dadd( -130.331, -125.465, -113.159, 0.66 ) }
    dend_75 { pt3dadd( -132.093, -127.241, -114.226, 0.15 ) }
    dend_75 { pt3dadd( -132.936, -128.137, -114.815, 1.69 ) }
    dend_75 { pt3dadd( -133.196, -128.418, -115.007, 1.84 ) }
    dend_75 { pt3dadd( -135.087, -130.561, -116.474, 0.22 ) }
    dend_75 { pt3dadd( -135.439, -130.989, -116.775, 0.66 ) }
    dend_75 { pt3dadd( -135.488, -131.055, -116.824, 0.66 ) }
    dend_75 { pt3dadd( -135.965, -131.753, -117.396, 0.15 ) }
    dend_75 { pt3dadd( -136.172, -132.036, -117.638, 0.59 ) }
    dend_75 { pt3dadd( -136.238, -132.122, -117.713, 0.59 ) }
    dend_75 { pt3dadd( -137.032, -133.113, -118.564, 0.22 ) }
    dend_75 { pt3dadd( -137.749, -133.994, -119.371, 1.33 ) }
    dend_75 { pt3dadd( -138.501, -134.941, -120.246, 0.15 ) }
    dend_75 { pt3dadd( -138.842, -135.405, -120.675, 0.88 ) }
    // Section: dend_70, id: dend_70, parent: soma_0 (entry count 39/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 4.2915, 5.40221, -8.94048, 1.18 ) }
    dend_70 { pt3dadd( 4.32476, 6.28733, -8.65076, 1.18 ) }
    dend_70 { pt3dadd( 4.36796, 7.52679, -8.27128, 1.47 ) }
    dend_70 { pt3dadd( 4.3937, 8.49131, -8.08156, 1.92 ) }
    dend_70 { pt3dadd( 4.40791, 9.7964, -7.96887, 0.81 ) }
    dend_70 { pt3dadd( 4.40357, 10.8803, -7.97061, 0.81 ) }
    dend_70 { pt3dadd( 4.39321, 11.5728, -8.02378, 0.74 ) }
    dend_70 { pt3dadd( 4.38773, 11.686, -8.05754, 0.74 ) }
    dend_70 { pt3dadd( 4.26829, 12.9794, -8.72887, 0.74 ) }
    dend_70 { pt3dadd( 4.19071, 13.6911, -9.25847, 1.11 ) }
    dend_70 { pt3dadd( 4.14809, 14.1175, -9.67509, 1.11 ) }
    dend_70 { pt3dadd( 4.10456, 14.7378, -10.3544, 1.11 ) }
    dend_70 { pt3dadd( 4.08836, 15.881, -11.5659, 1.25 ) }
    dend_70 { pt3dadd( 4.08956, 15.9229, -11.6085, 1.25 ) }
    dend_70 { pt3dadd( 4.19084, 16.9491, -12.5976, 1.03 ) }
    dend_70 { pt3dadd( 4.37065, 18.0864, -13.6336, 0.52 ) }
    dend_70 { pt3dadd( 4.62533, 19.2541, -14.6119, 0.52 ) }
    dend_70 { pt3dadd( 4.84732, 20.0384, -15.1954, 0.81 ) }
    dend_70 { pt3dadd( 4.86471, 20.0879, -15.2234, 0.81 ) }
    dend_70 { pt3dadd( 5.10129, 20.682, -15.5003, 1.18 ) }
    dend_70 { pt3dadd( 5.22846, 20.9257, -15.5607, 1.18 ) }
    dend_70 { pt3dadd( 5.42619, 21.2328, -15.5622, 1.18 ) }
    dend_70 { pt3dadd( 5.4667, 21.2898, -15.5569, 1.18 ) }
    dend_70 { pt3dadd( 5.61225, 21.5067, -15.542, 1.4 ) }
    dend_70 { pt3dadd( 5.69012, 21.6497, -15.5312, 1.4 ) }
    dend_70 { pt3dadd( 5.91796, 22.1829, -15.488, 1.4 ) }
    dend_70 { pt3dadd( 6.09954, 22.7388, -15.4366, 0.88 ) }
    dend_70 { pt3dadd( 6.27575, 23.6137, -15.348, 0.52 ) }
    dend_70 { pt3dadd( 6.31255, 24.4219, -15.3409, 0.37 ) }
    dend_70 { pt3dadd( 6.23989, 25.2775, -15.4407, 0.37 ) }
    dend_70 { pt3dadd( 6.16935, 25.6586, -15.5234, 0.29 ) }
    dend_70 { pt3dadd( 5.97825, 26.3359, -15.7394, 0.29 ) }
    dend_70 { pt3dadd( 5.84561, 26.7321, -15.9295, 0.29 ) }
    dend_70 { pt3dadd( 5.43737, 27.9976, -16.8819, 1.33 ) }
    dend_70 { pt3dadd( 5.21556, 28.7033, -17.5029, 1.92 ) }
    dend_70 { pt3dadd( 5.17299, 28.8787, -17.6746, 2.21 ) }
    dend_70 { pt3dadd( 5.15363, 29.0133, -17.811, 2.21 ) }
    dend_70 { pt3dadd( 5.12936, 29.7504, -18.5744, 2.5 ) }
    dend_70 { pt3dadd( 5.16953, 30.7139, -19.6398, 2.14 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 78/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 1.6115, 9.73122, -2.50048, 3.68 ) }
    dend_21 { pt3dadd( 1.6115, 9.73122, -2.50048, 3.68 ) }
    dend_21 { pt3dadd( 1.01923, 11.5556, -2.79374, 2.8 ) }
    dend_21 { pt3dadd( 0.97915, 11.6761, -2.81907, 2.8 ) }
    dend_21 { pt3dadd( 0.732949, 12.4099, -2.98375, 2.8 ) }
    dend_21 { pt3dadd( 0.622069, 12.7254, -3.05766, 2.8 ) }
    dend_21 { pt3dadd( 0.366826, 13.4355, -3.22948, 2.8 ) }
    dend_21 { pt3dadd( -0.017979, 14.45, -3.49854, 3.02 ) }
    dend_21 { pt3dadd( -0.556767, 15.7563, -3.90337, 3.02 ) }
    dend_21 { pt3dadd( -0.577555, 15.8036, -3.92034, 3.02 ) }
    dend_21 { pt3dadd( -1.03266, 16.7732, -4.29712, 3.02 ) }
    dend_21 { pt3dadd( -1.05477, 16.8195, -4.31541, 3.02 ) }
    dend_21 { pt3dadd( -1.56858, 17.8758, -4.7461, 2.87 ) }
    dend_21 { pt3dadd( -2.04602, 18.9019, -5.11536, 2.87 ) }
    dend_21 { pt3dadd( -2.06763, 18.9501, -5.12811, 2.87 ) }
    dend_21 { pt3dadd( -2.51554, 19.998, -5.34163, 2.73 ) }
    dend_21 { pt3dadd( -2.98276, 21.1221, -5.5107, 2.58 ) }
    dend_21 { pt3dadd( -3.00703, 21.1801, -5.51786, 2.58 ) }
    dend_21 { pt3dadd( -3.67521, 22.7679, -5.66116, 2.36 ) }
    dend_21 { pt3dadd( -4.34525, 24.3181, -5.77236, 2.06 ) }
    dend_21 { pt3dadd( -4.9581, 25.6673, -5.86339, 2.06 ) }
    dend_21 { pt3dadd( -5.3571, 26.5296, -5.92011, 2.65 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( -6.06905, 28.0255, -6.00925, 2.73 ) }
    dend_21 { pt3dadd( -6.65215, 29.2216, -6.08377, 2.95 ) }
    dend_21 { pt3dadd( -7.19486, 30.2731, -6.16324, 3.17 ) }
    dend_21 { pt3dadd( -7.69139, 31.1905, -6.24578, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 4/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.5085, -10.4416, 0.999524, 4.05 ) }
    dend_0 { pt3dadd( -3.5085, -10.4416, 0.999524, 4.05 ) }
    dend_0 { pt3dadd( -4.24332, -12.2326, 0.999524, 3.68 ) }
    dend_0 { pt3dadd( -4.9459, -13.9452, 0.999524, 3.5 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 8/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.23086, 10.2806, -1.24848, 0.532211 ) }
    axon_0 { pt3dadd( 8.20573, 24.4316, -1.24848, 0.532211 ) }
    axon_0 { pt3dadd( 13.1806, 38.5826, -1.24848, 0.532211 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 11/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 5.16953, 30.7139, -19.6398, 1.25 ) }
    dend_74 { pt3dadd( 4.85273, 31.6091, -20.6326, 1.25 ) }
    dend_74 { pt3dadd( 4.59985, 32.4986, -21.5775, 1.77 ) }
    dend_74 { pt3dadd( 4.54708, 32.7157, -21.8049, 1.84 ) }
    dend_74 { pt3dadd( 4.45269, 33.8959, -23.1902, 0.22 ) }
    dend_74 { pt3dadd( 4.54243, 34.7238, -24.2846, 1.33 ) }
    dend_74 { pt3dadd( 4.55532, 34.7661, -24.3505, 1.33 ) }
    dend_74 { pt3dadd( 4.67199, 34.9685, -24.7149, 1.77 ) }
    dend_74 { pt3dadd( 4.71701, 35.0257, -24.824, 1.77 ) }
    dend_74 { pt3dadd( 5.57725, 35.9158, -26.6418, 1.18 ) }
    dend_74 { pt3dadd( 6.25872, 36.4936, -27.9193, 1.4 ) }
    dend_74 { pt3dadd( 7.26248, 37.2208, -29.8516, 0.29 ) }
    dend_74 { pt3dadd( 7.2906, 37.2405, -29.9077, 0.29 ) }
    dend_74 { pt3dadd( 8.11615, 37.8211, -31.59, 1.55 ) }
    dend_74 { pt3dadd( 8.21435, 37.8987, -31.8033, 1.84 ) }
    dend_74 { pt3dadd( 8.24253, 37.9269, -31.8688, 1.84 ) }
    dend_74 { pt3dadd( 9.44014, 39.4785, -34.8693, 0.52 ) }
    dend_74 { pt3dadd( 9.46486, 39.5221, -34.9309, 0.52 ) }
    dend_74 { pt3dadd( 9.59242, 39.8042, -35.257, 0.74 ) }
    dend_74 { pt3dadd( 10.3598, 41.8807, -37.3007, 1.47 ) }
    dend_74 { pt3dadd( 10.6756, 42.9003, -38.1266, 0.29 ) }
    dend_74 { pt3dadd( 10.9334, 43.9086, -38.7738, 1.69 ) }
    dend_74 { pt3dadd( 11.382, 46.2416, -40.0086, 0.15 ) }
    dend_74 { pt3dadd( 11.4915, 46.9488, -40.3843, 0.66 ) }
    dend_74 { pt3dadd( 11.4993, 47.0149, -40.4197, 0.66 ) }
    dend_74 { pt3dadd( 11.6156, 48.2856, -41.1337, 0.15 ) }
    dend_74 { pt3dadd( 11.6845, 49.1855, -41.7112, 1.69 ) }
    dend_74 { pt3dadd( 11.8161, 51.8163, -43.5152, 0.22 ) }
    dend_74 { pt3dadd( 11.8344, 52.4639, -44.0065, 0.59 ) }
    dend_74 { pt3dadd( 11.877, 53.8546, -45.134, 1.92 ) }
    dend_74 { pt3dadd( 11.9433, 56.0164, -46.9662, 0.15 ) }
    dend_74 { pt3dadd( 11.9467, 56.1306, -47.068, 0.15 ) }
    dend_74 { pt3dadd( 11.9783, 56.6492, -47.5456, 0.37 ) }
    dend_74 { pt3dadd( 12.053, 57.4481, -48.3162, 0.22 ) }
    dend_74 { pt3dadd( 12.1752, 58.293, -49.2394, 1.11 ) }
    dend_74 { pt3dadd( 12.1828, 58.3436, -49.2997, 1.11 ) }
    dend_74 { pt3dadd( 12.2317, 58.6896, -49.7305, 1.25 ) }
    dend_74 { pt3dadd( 12.4336, 60.097, -51.5524, 0.22 ) }
    dend_74 { pt3dadd( 12.5623, 61.0504, -52.8044, 0.96 ) }
    dend_74 { pt3dadd( 12.6619, 62.107, -54.1308, 0.15 ) }
    dend_74 { pt3dadd( 12.7267, 62.9961, -55.1787, 1.18 ) }
    dend_74 { pt3dadd( 12.7327, 63.1696, -55.3684, 1.47 ) }
    dend_74 { pt3dadd( 12.7206, 64.4455, -56.5937, 0.22 ) }
    dend_74 { pt3dadd( 12.6876, 64.8201, -56.8793, 0.44 ) }
    dend_74 { pt3dadd( 12.5872, 65.56, -57.3229, 0.15 ) }
    dend_74 { pt3dadd( 12.3893, 66.5697, -57.8282, 1.11 ) }
    dend_74 { pt3dadd( 12.2894, 67.0026, -58.0222, 1.47 ) }
    dend_74 { pt3dadd( 11.87, 68.8421, -58.7296, 0.22 ) }
    dend_74 { pt3dadd( 11.7009, 69.5738, -58.9669, 0.74 ) }
    dend_74 { pt3dadd( 11.45, 70.6947, -59.3176, 0.15 ) }
    dend_74 { pt3dadd( 11.2674, 71.5664, -59.5791, 1.11 ) }
    dend_74 { pt3dadd( 11.1894, 71.9397, -59.684, 1.55 ) }
    dend_74 { pt3dadd( 10.5155, 75.2636, -60.5733, 0.15 ) }
    dend_74 { pt3dadd( 10.363, 76.0308, -60.7594, 0.66 ) }
    dend_74 { pt3dadd( 10.2965, 76.4055, -60.85, 0.66 ) }
    dend_74 { pt3dadd( 9.95232, 78.6009, -61.3735, 0.15 ) }
    dend_74 { pt3dadd( 9.84991, 79.2971, -61.5304, 0.37 ) }
    dend_74 { pt3dadd( 9.83602, 79.3896, -61.5516, 0.37 ) }
    dend_74 { pt3dadd( 9.76252, 79.7763, -61.6408, 0.37 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 70/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 5.16953, 30.7139, -19.6398, 0.37 ) }
    dend_71 { pt3dadd( 5.62643, 32.0654, -19.7543, 0.37 ) }
    dend_71 { pt3dadd( 5.95117, 33.2763, -19.8619, 0.37 ) }
    dend_71 { pt3dadd( 6.16949, 34.3477, -19.9592, 0.37 ) }
    dend_71 { pt3dadd( 6.17857, 34.4207, -19.966, 0.37 ) }
    dend_71 { pt3dadd( 6.19456, 34.9387, -20.014, 0.37 ) }
    dend_71 { pt3dadd( 6.19272, 35.0023, -20.0226, 0.37 ) }
    dend_71 { pt3dadd( 6.01725, 35.7515, -20.1889, 0.66 ) }
    dend_71 { pt3dadd( 5.90757, 36.0149, -20.2626, 0.81 ) }
    dend_71 { pt3dadd( 5.73014, 36.4531, -20.3916, 0.81 ) }
    dend_71 { pt3dadd( 5.57798, 36.9283, -20.5212, 0.37 ) }
    dend_71 { pt3dadd( 5.40519, 37.6827, -20.6948, 0.29 ) }
    dend_71 { pt3dadd( 5.39586, 37.7457, -20.7073, 0.29 ) }
    dend_71 { pt3dadd( 5.33138, 38.5212, -20.8424, 0.29 ) }
    dend_71 { pt3dadd( 5.27987, 39.7755, -21.025, 1.84 ) }
    dend_71 { pt3dadd( 5.2779, 40.2547, -21.0793, 2.36 ) }
    dend_71 { pt3dadd( 5.30472, 41.3413, -21.1682, 1.55 ) }
    dend_71 { pt3dadd( 5.34846, 42.5914, -21.2294, 1.92 ) }
    dend_71 { pt3dadd( 5.37793, 43.078, -21.249, 2.5 ) }
    dend_71 { pt3dadd( 5.4563, 43.8525, -21.2824, 1.99 ) }
    dend_71 { pt3dadd( 5.60888, 44.9672, -21.3274, 0.22 ) }
    dend_71 { pt3dadd( 5.70652, 45.6867, -21.367, 0.22 ) }
    dend_71 { pt3dadd( 5.76916, 46.1912, -21.3976, 0.88 ) }
    dend_71 { pt3dadd( 5.8097, 46.6177, -21.4293, 0.59 ) }
    dend_71 { pt3dadd( 5.86048, 47.4005, -21.4968, 0.29 ) }
    dend_71 { pt3dadd( 5.89257, 48.2732, -21.5793, 0.29 ) }
    dend_71 { pt3dadd( 5.9122, 49.2912, -21.6784, 0.29 ) }
    dend_71 { pt3dadd( 5.92371, 50.1851, -21.7696, 0.29 ) }
    dend_71 { pt3dadd( 5.93708, 51.1436, -21.8634, 1.18 ) }
    dend_71 { pt3dadd( 5.95198, 51.7172, -21.908, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_71 { pt3dadd( 5.9829, 52.2925, -21.942, 1.4 ) }
    dend_71 { pt3dadd( 6.0465, 52.9182, -21.9755, 0.88 ) }
    dend_71 { pt3dadd( 6.19397, 54.0135, -22.031, 0.29 ) }
    dend_71 { pt3dadd( 6.33502, 54.9655, -22.0733, 0.29 ) }
    dend_71 { pt3dadd( 6.58244, 56.5185, -22.1222, 2.14 ) }
    dend_71 { pt3dadd( 6.68186, 57.1482, -22.1415, 3.09 ) }
    dend_71 { pt3dadd( 6.77285, 57.7419, -22.1578, 3.46 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 7/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.69139, 31.1905, -6.24578, 1.62 ) }
    dend_25 { pt3dadd( -8.17823, 33.4772, -6.73144, 1.62 ) }
    dend_25 { pt3dadd( -8.18602, 33.5603, -6.74439, 1.62 ) }
    dend_25 { pt3dadd( -8.29573, 34.731, -6.92683, 1.62 ) }
    dend_25 { pt3dadd( -8.31927, 34.9823, -6.96599, 1.62 ) }
    dend_25 { pt3dadd( -8.42569, 36.1179, -7.14297, 1.62 ) }
    dend_25 { pt3dadd( -8.43266, 36.1922, -7.15455, 1.62 ) }
    dend_25 { pt3dadd( -8.30107, 38.0223, -7.21466, 1.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 15/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -7.69139, 31.1905, -6.24578, 0.66 ) }
    dend_22 { pt3dadd( -6.66893, 32.6762, -5.87671, 0.66 ) }
    dend_22 { pt3dadd( -6.32139, 33.1588, -5.8853, 0.59 ) }
    dend_22 { pt3dadd( -5.99675, 33.5977, -5.94268, 1.03 ) }
    dend_22 { pt3dadd( -5.93649, 33.6821, -5.9592, 1.03 ) }
    dend_22 { pt3dadd( -5.80421, 33.8851, -6.00505, 1.18 ) }
    dend_22 { pt3dadd( -5.34972, 34.6992, -6.20853, 0.81 ) }
    dend_22 { pt3dadd( -5.08247, 35.2509, -6.44527, 0.66 ) }
    dend_22 { pt3dadd( -5.06423, 35.297, -6.46524, 0.66 ) }
    dend_22 { pt3dadd( -4.89825, 35.829, -6.64408, 0.66 ) }
    dend_22 { pt3dadd( -4.74506, 36.4453, -6.79289, 0.88 ) }
    dend_22 { pt3dadd( -4.59545, 37.292, -6.91889, 1.4 ) }
    dend_22 { pt3dadd( -4.57072, 37.5094, -6.93111, 1.77 ) }
    dend_22 { pt3dadd( -4.53397, 37.9879, -6.93054, 2.14 ) }
    dend_22 { pt3dadd( -4.45962, 38.9174, -6.83186, 1.77 ) }
    dend_22 { pt3dadd( -4.37224, 39.5241, -6.66618, 1.25 ) }
    dend_22 { pt3dadd( -4.26891, 40.0128, -6.46097, 1.03 ) }
    dend_22 { pt3dadd( -4.1356, 40.4156, -6.22206, 0.81 ) }
    dend_22 { pt3dadd( -3.91709, 40.9229, -5.85753, 0.81 ) }
    dend_22 { pt3dadd( -3.47668, 41.6764, -5.19287, 0.59 ) }
    dend_22 { pt3dadd( -2.91388, 42.3774, -4.44949, 0.59 ) }
    dend_22 { pt3dadd( -2.88545, 42.4053, -4.41282, 0.59 ) }
    dend_22 { pt3dadd( -2.4593, 42.731, -3.88295, 1.77 ) }
    dend_22 { pt3dadd( -2.43471, 42.7449, -3.85399, 1.77 ) }
    dend_22 { pt3dadd( -2.1704, 42.8352, -3.5791, 1.92 ) }
    dend_22 { pt3dadd( -2.13385, 42.8382, -3.5492, 1.92 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -4.9459, -13.9452, 0.999524, 0.37 ) }
    dend_14 { pt3dadd( -6.30796, -14.5872, 0.736157, 0.37 ) }
    dend_14 { pt3dadd( -7.11218, -15.1539, 0.738266, 0.37 ) }
    dend_14 { pt3dadd( -8.06915, -16.1889, 1.06572, 0.37 ) }
    dend_14 { pt3dadd( -8.3727, -16.8005, 1.44022, 0.66 ) }
    dend_14 { pt3dadd( -8.50271, -17.1909, 1.73897, 0.96 ) }
    dend_14 { pt3dadd( -8.51792, -17.2386, 1.78761, 0.96 ) }
    dend_14 { pt3dadd( -8.71158, -18.6035, 3.55668, 0.59 ) }
    dend_14 { pt3dadd( -8.71383, -18.6341, 3.60566, 0.59 ) }
    dend_14 { pt3dadd( -8.76789, -18.9884, 4.35098, 1.25 ) }
    dend_14 { pt3dadd( -8.81095, -19.0752, 4.57232, 1.25 ) }
    dend_14 { pt3dadd( -9.24835, -19.5437, 5.82196, 0.59 ) }
    dend_14 { pt3dadd( -9.48773, -19.7429, 6.27965, 0.96 ) }
    dend_14 { pt3dadd( -9.53216, -19.7724, 6.33639, 0.96 ) }
    dend_14 { pt3dadd( -9.91074, -20.1504, 6.91473, 0.96 ) }
    dend_14 { pt3dadd( -10.1858, -20.5836, 7.42931, 0.59 ) }
    dend_14 { pt3dadd( -10.3413, -21.1055, 7.92191, 0.29 ) }
    dend_14 { pt3dadd( -10.374, -21.7467, 8.43027, 0.29 ) }
    dend_14 { pt3dadd( -10.3722, -22.3254, 8.91054, 1.11 ) }
    dend_14 { pt3dadd( -10.3667, -23.4484, 9.88588, 0.22 ) }
    dend_14 { pt3dadd( -10.3691, -23.7249, 10.1348, 1.25 ) }
    dend_14 { pt3dadd( -10.4282, -24.1621, 10.5655, 1.55 ) }
    dend_14 { pt3dadd( -10.4606, -24.2433, 10.6545, 1.55 ) }
    dend_14 { pt3dadd( -11.1322, -24.9503, 11.5481, 0.59 ) }
    dend_14 { pt3dadd( -11.3983, -25.1493, 11.7917, 0.74 ) }
    dend_14 { pt3dadd( -11.8608, -25.4343, 12.1252, 0.74 ) }
    dend_14 { pt3dadd( -12.5124, -25.8334, 12.5775, 0.59 ) }
    dend_14 { pt3dadd( -12.6071, -25.906, 12.6465, 0.59 ) }
    dend_14 { pt3dadd( -13.159, -26.6256, 13.1413, 0.59 ) }
    dend_14 { pt3dadd( -13.2737, -27.1051, 13.3975, 1.11 ) }
    dend_14 { pt3dadd( -13.2979, -27.4841, 13.6179, 1.18 ) }
    dend_14 { pt3dadd( -13.2981, -27.5676, 13.6692, 1.18 ) }
    dend_14 { pt3dadd( -13.3297, -28.4772, 14.2955, 0.59 ) }
    dend_14 { pt3dadd( -13.4302, -29.2045, 14.8627, 0.59 ) }
    dend_14 { pt3dadd( -13.7068, -29.926, 15.543, 0.44 ) }
    dend_14 { pt3dadd( -14.0471, -30.2955, 16.0504, 0.74 ) }
    dend_14 { pt3dadd( -14.407, -30.4715, 16.4298, 0.88 ) }
    dend_14 { pt3dadd( -15.2244, -30.6685, 17.1315, 0.44 ) }
    dend_14 { pt3dadd( -15.6871, -30.702, 17.4424, 0.44 ) }
    dend_14 { pt3dadd( -16.2657, -30.7138, 17.7655, 0.44 ) }
    dend_14 { pt3dadd( -16.3193, -30.7162, 17.7879, 0.44 ) }
    dend_14 { pt3dadd( -17.0106, -30.8127, 18.0191, 0.88 ) }
    dend_14 { pt3dadd( -17.0847, -30.831, 18.0424, 0.88 ) }
    dend_14 { pt3dadd( -17.9149, -31.0951, 18.2534, 1.18 ) }
    dend_14 { pt3dadd( -18.3151, -31.2469, 18.3433, 1.11 ) }
    dend_14 { pt3dadd( -18.9382, -31.4998, 18.4618, 0.59 ) }
    dend_14 { pt3dadd( -19.5266, -31.7518, 18.5519, 0.44 ) }
    dend_14 { pt3dadd( -19.5793, -31.7753, 18.5574, 0.44 ) }
    dend_14 { pt3dadd( -20.3752, -32.1992, 18.6366, 0.66 ) }
    dend_14 { pt3dadd( -20.9045, -32.5724, 18.6879, 0.37 ) }
    dend_14 { pt3dadd( -21.2187, -32.8921, 18.7225, 1.03 ) }
    dend_14 { pt3dadd( -21.3804, -33.1688, 18.7438, 1.03 ) }
    dend_14 { pt3dadd( -21.4174, -33.2861, 18.7497, 1.03 ) }
    dend_14 { pt3dadd( -21.6536, -34.3571, 18.7971, 0.37 ) }
    dend_14 { pt3dadd( -21.7054, -34.982, 18.8238, 0.44 ) }
    dend_14 { pt3dadd( -21.7024, -35.4726, 18.8465, 0.74 ) }
    dend_14 { pt3dadd( -21.6748, -35.8753, 18.867, 0.88 ) }
    dend_14 { pt3dadd( -21.6043, -36.6121, 18.9143, 0.88 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -4.9459, -13.9452, 0.999524, 3.09 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -4.95881, -13.9962, 0.998094, 3.09 ) }
    dend_1 { pt3dadd( -5.32101, -15.4657, 0.990564, 2.8 ) }
    dend_1 { pt3dadd( -5.80153, -17.4318, 0.987484, 2.43 ) }
    dend_1 { pt3dadd( -6.18869, -19.0158, 0.985014, 2.43 ) }
    dend_1 { pt3dadd( -6.20621, -19.0875, 0.984904, 2.43 ) }
    dend_1 { pt3dadd( -6.76046, -21.3552, 0.981354, 2.43 ) }
    dend_1 { pt3dadd( -7.0576, -22.5865, 0.989784, 2.87 ) }
    dend_1 { pt3dadd( -7.29874, -23.5944, 1.01831, 3.02 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 13.1806, 38.5826, -1.24848, 0.15 ) }
    axon_1 { pt3dadd( 18.1555, 52.7336, -1.24848, 0.15 ) }
    axon_1 { pt3dadd( 23.1303, 66.8846, -1.24848, 0.15 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 11/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 6.77285, 57.7419, -22.1578, 0.29 ) }
    dend_73 { pt3dadd( 7.57602, 59.2595, -22.4798, 0.29 ) }
    dend_73 { pt3dadd( 7.94418, 59.8261, -22.6476, 0.29 ) }
    dend_73 { pt3dadd( 8.33468, 60.4123, -22.846, 0.37 ) }
    dend_73 { pt3dadd( 8.37192, 60.468, -22.8662, 0.37 ) }
    dend_73 { pt3dadd( 8.64513, 60.9056, -23.0257, 0.37 ) }
    dend_73 { pt3dadd( 8.67053, 60.9481, -23.0416, 0.37 ) }
    dend_73 { pt3dadd( 9.00285, 61.6053, -23.3419, 0.22 ) }
    dend_73 { pt3dadd( 9.17059, 61.983, -23.5468, 0.44 ) }
    dend_73 { pt3dadd( 9.18361, 62.0353, -23.5796, 0.44 ) }
    dend_73 { pt3dadd( 9.26039, 62.4738, -23.8557, 0.66 ) }
    dend_73 { pt3dadd( 9.26871, 62.5183, -23.8812, 0.66 ) }
    dend_73 { pt3dadd( 9.40327, 63.0514, -24.1928, 0.96 ) }
    dend_73 { pt3dadd( 9.42136, 63.1101, -24.2443, 0.96 ) }
    dend_73 { pt3dadd( 9.66824, 63.8625, -24.9776, 0.22 ) }
    dend_73 { pt3dadd( 9.68418, 63.912, -25.0272, 0.22 ) }
    dend_73 { pt3dadd( 9.91858, 64.6139, -25.7232, 1.92 ) }
    dend_73 { pt3dadd( 10.1697, 65.2631, -26.3671, 2.36 ) }
    dend_73 { pt3dadd( 11.0692, 67.3159, -28.3998, 0.44 ) }
    dend_73 { pt3dadd( 11.2115, 67.6223, -28.6999, 0.44 ) }
    dend_73 { pt3dadd( 11.3177, 67.8384, -28.9075, 0.44 ) }
    dend_73 { pt3dadd( 11.5455, 68.3099, -29.3334, 0.22 ) }
    dend_73 { pt3dadd( 11.8316, 68.9154, -29.8322, 0.22 ) }
    dend_73 { pt3dadd( 12.1701, 69.5964, -30.311, 0.74 ) }
    dend_73 { pt3dadd( 12.2012, 69.6512, -30.345, 0.74 ) }
    dend_73 { pt3dadd( 12.2929, 69.8091, -30.4581, 0.74 ) }
    dend_73 { pt3dadd( 12.7627, 70.6203, -31.1154, 0.22 ) }
    dend_73 { pt3dadd( 13.1341, 71.3244, -31.7188, 1.33 ) }
    dend_73 { pt3dadd( 13.4195, 71.9319, -32.2363, 1.77 ) }
    dend_73 { pt3dadd( 13.9322, 73.0986, -33.2187, 0.22 ) }
    dend_73 { pt3dadd( 14.1496, 73.5935, -33.6232, 0.22 ) }
    dend_73 { pt3dadd( 14.4434, 74.2558, -34.1431, 0.22 ) }
    dend_73 { pt3dadd( 14.7838, 75.0042, -34.7075, 1.92 ) }
    dend_73 { pt3dadd( 14.9166, 75.3022, -34.9138, 2.28 ) }
    dend_73 { pt3dadd( 15.7513, 77.1115, -36.017, 0.22 ) }
    dend_73 { pt3dadd( 16.0821, 77.7876, -36.3823, 0.22 ) }
    dend_73 { pt3dadd( 16.3235, 78.2338, -36.6069, 0.88 ) }
    dend_73 { pt3dadd( 16.3893, 78.3392, -36.6536, 0.88 ) }
    dend_73 { pt3dadd( 16.4662, 78.4418, -36.6954, 0.88 ) }
    dend_73 { pt3dadd( 17.2793, 79.3878, -37.081, 0.22 ) }
    dend_73 { pt3dadd( 17.8602, 79.9885, -37.3305, 0.22 ) }
    dend_73 { pt3dadd( 17.9328, 80.0677, -37.3662, 0.22 ) }
    dend_73 { pt3dadd( 18.5442, 80.7535, -37.6919, 1.33 ) }
    dend_73 { pt3dadd( 18.793, 81.0446, -37.8296, 2.06 ) }
    dend_73 { pt3dadd( 19.1773, 81.517, -38.0685, 2.06 ) }
    dend_73 { pt3dadd( 20.0795, 82.7004, -38.6819, 0.15 ) }
    dend_73 { pt3dadd( 20.3185, 83.0208, -38.8529, 0.74 ) }
    dend_73 { pt3dadd( 20.3526, 83.0661, -38.8766, 0.74 ) }
    dend_73 { pt3dadd( 20.5217, 83.3013, -38.9976, 0.74 ) }
    dend_73 { pt3dadd( 21.0628, 84.0676, -39.3594, 0.22 ) }
    dend_73 { pt3dadd( 21.3494, 84.4735, -39.5247, 0.59 ) }
    dend_73 { pt3dadd( 21.3836, 84.5213, -39.5423, 0.59 ) }
    dend_73 { pt3dadd( 21.9798, 85.3299, -39.909, 0.15 ) }
    dend_73 { pt3dadd( 22.4536, 86.003, -40.2296, 1.55 ) }
    dend_73 { pt3dadd( 22.5724, 86.1791, -40.3158, 1.92 ) }
    dend_73 { pt3dadd( 22.6052, 86.2282, -40.3384, 1.92 ) }
    dend_73 { pt3dadd( 22.7634, 86.4853, -40.4608, 1.92 ) }
    dend_73 { pt3dadd( 23.5963, 87.8799, -41.1138, 0.22 ) }
    dend_73 { pt3dadd( 23.8232, 88.2127, -41.2783, 0.52 ) }
    dend_73 { pt3dadd( 23.8579, 88.2581, -41.301, 0.52 ) }
    dend_73 { pt3dadd( 24.3898, 88.8371, -41.591, 0.22 ) }
    dend_73 { pt3dadd( 24.8568, 89.2981, -41.8414, 1.55 ) }
    dend_73 { pt3dadd( 25.206, 89.5509, -42.0133, 1.55 ) }
    dend_73 { pt3dadd( 26.4796, 90.3124, -42.5932, 0.15 ) }
    dend_73 { pt3dadd( 26.5244, 90.3373, -42.6145, 0.15 ) }
    dend_73 { pt3dadd( 27.4098, 90.8011, -43.0401, 0.15 ) }
    dend_73 { pt3dadd( 28.7243, 91.437, -43.6759, 2.21 ) }
    dend_73 { pt3dadd( 30.683, 92.3215, -44.587, 0.22 ) }
    dend_73 { pt3dadd( 30.9019, 92.4209, -44.6879, 0.37 ) }
    dend_73 { pt3dadd( 31.801, 92.8533, -45.0741, 0.22 ) }
    dend_73 { pt3dadd( 32.1218, 93.0202, -45.2027, 0.59 ) }
    dend_73 { pt3dadd( 32.3371, 93.1426, -45.2805, 0.59 ) }
    dend_73 { pt3dadd( 33.062, 93.6017, -45.5162, 0.22 ) }
    dend_73 { pt3dadd( 33.3388, 93.8155, -45.6211, 0.66 ) }
    dend_73 { pt3dadd( 34.1013, 94.3947, -45.9449, 0.15 ) }
    dend_73 { pt3dadd( 34.6536, 94.8217, -46.1968, 1.77 ) }
    dend_73 { pt3dadd( 34.7896, 94.9288, -46.2671, 1.77 ) }
    dend_73 { pt3dadd( 36.0697, 95.9092, -46.9762, 0.22 ) }
    dend_73 { pt3dadd( 36.5632, 96.2411, -47.3263, 0.74 ) }
    dend_73 { pt3dadd( 37.1002, 96.5575, -47.7725, 0.15 ) }
    dend_73 { pt3dadd( 37.415, 96.7252, -48.0819, 0.74 ) }
    dend_73 { pt3dadd( 37.9308, 97.0076, -48.6336, 0.15 ) }
    dend_73 { pt3dadd( 38.397, 97.2765, -49.1555, 2.14 ) }
    dend_73 { pt3dadd( 39.8752, 98.2418, -50.9444, 0.37 ) }
    dend_73 { pt3dadd( 40.4715, 98.7186, -51.7156, 1.55 ) }
    dend_73 { pt3dadd( 41.5649, 99.7367, -53.2179, 0.15 ) }
    dend_73 { pt3dadd( 42.0273, 100.246, -53.8952, 0.15 ) }
    dend_73 { pt3dadd( 42.2446, 100.528, -54.2353, 1.4 ) }
    dend_73 { pt3dadd( 42.9321, 101.558, -55.4448, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_73 { pt3dadd( 43.2725, 102.087, -56.0726, 1.33 ) }
    dend_73 { pt3dadd( 43.3335, 102.165, -56.1779, 1.62 ) }
    dend_73 { pt3dadd( 44.2547, 103.003, -57.5371, 0.15 ) }
    dend_73 { pt3dadd( 44.8814, 103.425, -58.3742, 1.18 ) }
    dend_73 { pt3dadd( 45.9647, 103.993, -59.6984, 0.88 ) }
    dend_73 { pt3dadd( 46.9951, 104.395, -60.8102, 0.44 ) }
    dend_73 { pt3dadd( 47.9595, 104.717, -61.7466, 1.77 ) }
    dend_73 { pt3dadd( 48.9875, 105.026, -62.5959, 0.22 ) }
    dend_73 { pt3dadd( 49.0475, 105.041, -62.6338, 0.22 ) }
    dend_73 { pt3dadd( 49.4322, 105.147, -62.8021, 0.66 ) }
    dend_73 { pt3dadd( 50.2907, 105.432, -63.0019, 0.15 ) }
    dend_73 { pt3dadd( 50.8921, 105.714, -63.0605, 1.11 ) }
    dend_73 { pt3dadd( 51.2592, 105.951, -63.083, 1.11 ) }
    dend_73 { pt3dadd( 51.3154, 105.993, -63.0855, 1.11 ) }
    dend_73 { pt3dadd( 51.9471, 106.48, -63.1197, 0.22 ) }
    dend_73 { pt3dadd( 52.2388, 106.698, -63.1404, 0.59 ) }
    dend_73 { pt3dadd( 52.9829, 107.247, -63.2019, 0.22 ) }
    dend_73 { pt3dadd( 53.6325, 107.717, -63.2755, 1.4 ) }
    dend_73 { pt3dadd( 53.6896, 107.758, -63.2819, 1.4 ) }
    dend_73 { pt3dadd( 53.7848, 107.824, -63.292, 1.55 ) }
    dend_73 { pt3dadd( 55.0009, 108.628, -63.41, 0.22 ) }
    dend_73 { pt3dadd( 55.0532, 108.661, -63.4161, 0.22 ) }
    dend_73 { pt3dadd( 55.2539, 108.781, -63.4414, 0.22 ) }
    dend_73 { pt3dadd( 55.6779, 109.023, -63.5148, 0.81 ) }
    dend_73 { pt3dadd( 55.7306, 109.053, -63.5259, 0.81 ) }
    dend_73 { pt3dadd( 55.9896, 109.216, -63.5972, 0.81 ) }
    dend_73 { pt3dadd( 57.2272, 110.019, -63.985, 0.22 ) }
    dend_73 { pt3dadd( 57.6509, 110.291, -64.122, 0.22 ) }
    dend_73 { pt3dadd( 58.5827, 110.875, -64.4287, 1.55 ) }
    dend_73 { pt3dadd( 58.632, 110.907, -64.4472, 1.55 ) }
    dend_73 { pt3dadd( 59.848, 111.733, -64.9301, 0.22 ) }
    dend_73 { pt3dadd( 60.3109, 112.052, -65.1252, 0.22 ) }
    dend_73 { pt3dadd( 61.1193, 112.615, -65.4739, 1.62 ) }
    dend_73 { pt3dadd( 61.2728, 112.722, -65.5375, 1.99 ) }
    dend_73 { pt3dadd( 62.8609, 113.843, -66.1622, 0.22 ) }
    dend_73 { pt3dadd( 62.9161, 113.882, -66.1835, 0.22 ) }
    dend_73 { pt3dadd( 63.5139, 114.297, -66.4089, 0.74 ) }
    dend_73 { pt3dadd( 63.877, 114.553, -66.5484, 0.74 ) }
    dend_73 { pt3dadd( 65.6796, 115.826, -67.2251, 0.15 ) }
    dend_73 { pt3dadd( 66.3484, 116.288, -67.4615, 1.55 ) }
    dend_73 { pt3dadd( 66.4005, 116.322, -67.4765, 1.55 ) }
    dend_73 { pt3dadd( 66.6959, 116.517, -67.5627, 1.55 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 42/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 6.77285, 57.7419, -22.1578, 0.29 ) }
    dend_72 { pt3dadd( 6.46505, 60.1967, -22.226, 0.29 ) }
    dend_72 { pt3dadd( 6.39776, 60.7877, -22.2485, 0.44 ) }
    dend_72 { pt3dadd( 6.25877, 61.9889, -22.2821, 0.22 ) }
    dend_72 { pt3dadd( 6.07975, 63.5761, -22.3198, 1.55 ) }
    dend_72 { pt3dadd( 6.02568, 64.0898, -22.3281, 2.21 ) }
    dend_72 { pt3dadd( 5.95077, 64.8386, -22.3346, 1.84 ) }
    dend_72 { pt3dadd( 5.89044, 65.7832, -22.3441, 0.96 ) }
    dend_72 { pt3dadd( 5.85532, 66.3927, -22.3328, 0.44 ) }
    dend_72 { pt3dadd( 5.85001, 66.4849, -22.327, 0.44 ) }
    dend_72 { pt3dadd( 5.80487, 67.6722, -22.2489, 0.29 ) }
    dend_72 { pt3dadd( 5.80677, 67.8397, -22.2401, 0.29 ) }
    dend_72 { pt3dadd( 5.85299, 68.6899, -22.208, 0.29 ) }
    dend_72 { pt3dadd( 5.91767, 69.5279, -22.1849, 0.81 ) }
    dend_72 { pt3dadd( 5.95209, 69.9448, -22.1929, 1.11 ) }
    dend_72 { pt3dadd( 6.0011, 70.7904, -22.2409, 0.88 ) }
    dend_72 { pt3dadd( 6.10396, 72.5184, -22.3912, 0.22 ) }
    dend_72 { pt3dadd( 6.15246, 73.3636, -22.4926, 0.81 ) }
    dend_72 { pt3dadd( 6.18896, 74.0342, -22.5957, 0.81 ) }
    dend_72 { pt3dadd( 6.28362, 76.047, -22.9407, 0.22 ) }
    dend_72 { pt3dadd( 6.3355, 77.5273, -23.2096, 1.84 ) }
    dend_72 { pt3dadd( 6.3484, 78.3022, -23.3553, 2.21 ) }
    dend_72 { pt3dadd( 6.34544, 78.9797, -23.4834, 2.21 ) }
    dend_72 { pt3dadd( 6.36707, 81.5708, -23.9391, 0.22 ) }
    dend_72 { pt3dadd( 6.39275, 82.4708, -24.0834, 0.81 ) }
    dend_72 { pt3dadd( 6.41483, 82.8951, -24.1395, 0.88 ) }
    dend_72 { pt3dadd( 6.44073, 83.3242, -24.185, 0.66 ) }
    dend_72 { pt3dadd( 6.50181, 84.6009, -24.2909, 0.22 ) }
    dend_72 { pt3dadd( 6.58781, 86.3829, -24.3932, 1.84 ) }
    dend_72 { pt3dadd( 6.62795, 86.9258, -24.4182, 2.21 ) }
    dend_72 { pt3dadd( 6.68084, 87.4674, -24.4422, 2.21 ) }
    dend_72 { pt3dadd( 6.95755, 89.8092, -24.5416, 0.22 ) }
    dend_72 { pt3dadd( 7.06864, 90.6418, -24.5793, 0.88 ) }
    dend_72 { pt3dadd( 7.10435, 90.8954, -24.5902, 0.88 ) }
    dend_72 { pt3dadd( 7.34841, 92.613, -24.6683, 0.22 ) }
    dend_72 { pt3dadd( 7.56162, 94.1309, -24.7815, 0.22 ) }
    dend_72 { pt3dadd( 7.68326, 94.9275, -24.8604, 1.33 ) }
    dend_72 { pt3dadd( 7.79436, 95.5537, -24.9391, 1.62 ) }
    dend_72 { pt3dadd( 7.83604, 95.7954, -24.9732, 1.62 ) }
    dend_72 { pt3dadd( 7.85193, 95.9325, -24.9966, 1.62 ) }
    dend_72 { pt3dadd( 7.99129, 98.1812, -25.4101, 0.22 ) }
    dend_72 { pt3dadd( 8.05139, 99.8368, -25.7277, 0.22 ) }
    dend_72 { pt3dadd( 8.07032, 100.977, -25.9423, 1.4 ) }
    dend_72 { pt3dadd( 8.07959, 101.576, -26.0503, 1.69 ) }
    dend_72 { pt3dadd( 8.11294, 104.112, -26.497, 0.22 ) }
    dend_72 { pt3dadd( 8.12034, 104.967, -26.6208, 0.96 ) }
    dend_72 { pt3dadd( 8.12034, 105.048, -26.6279, 0.96 ) }
    dend_72 { pt3dadd( 8.11343, 105.398, -26.6461, 0.81 ) }
    dend_72 { pt3dadd( 8.07603, 107.022, -26.6509, 0.22 ) }
    dend_72 { pt3dadd( 8.07601, 107.214, -26.6433, 0.22 ) }
    dend_72 { pt3dadd( 8.1078, 108.336, -26.5672, 0.22 ) }
    dend_72 { pt3dadd( 8.14132, 109.666, -26.4913, 1.69 ) }
    dend_72 { pt3dadd( 8.15162, 110.102, -26.4707, 2.43 ) }
    dend_72 { pt3dadd( 8.16996, 111.023, -26.4333, 2.36 ) }
    dend_72 { pt3dadd( 8.24969, 113.985, -26.3398, 0.22 ) }
    dend_72 { pt3dadd( 8.30477, 115.117, -26.3463, 0.22 ) }
    dend_72 { pt3dadd( 8.31673, 115.292, -26.3543, 0.22 ) }
    dend_72 { pt3dadd( 8.445, 116.729, -26.4502, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_72 { pt3dadd( 8.55806, 117.815, -26.5424, 1.11 ) }
    dend_72 { pt3dadd( 8.6433, 118.466, -26.6127, 1.4 ) }
    dend_72 { pt3dadd( 8.93864, 120.315, -26.8583, 0.22 ) }
    dend_72 { pt3dadd( 8.95097, 120.386, -26.8681, 0.22 ) }
    dend_72 { pt3dadd( 9.05013, 120.874, -26.9285, 0.22 ) }
    dend_72 { pt3dadd( 9.26961, 121.89, -27.0258, 1.55 ) }
    dend_72 { pt3dadd( 9.38027, 122.414, -27.0556, 1.77 ) }
    dend_72 { pt3dadd( 9.39744, 122.493, -27.0576, 1.77 ) }
    dend_72 { pt3dadd( 9.48159, 122.85, -27.0565, 1.77 ) }
    dend_72 { pt3dadd( 9.85189, 124.385, -27.0573, 0.22 ) }
    dend_72 { pt3dadd( 10.0914, 125.447, -27.0528, 0.66 ) }
    dend_72 { pt3dadd( 10.2073, 126.021, -27.0456, 0.66 ) }
    dend_72 { pt3dadd( 10.5322, 127.917, -27.0171, 0.22 ) }
    dend_72 { pt3dadd( 10.5574, 128.09, -27.0129, 0.22 ) }
    dend_72 { pt3dadd( 10.7866, 129.926, -26.9487, 0.22 ) }
    dend_72 { pt3dadd( 10.9047, 131.183, -26.8678, 1.11 ) }
    dend_72 { pt3dadd( 10.9577, 131.937, -26.7902, 1.99 ) }
    dend_72 { pt3dadd( 10.9778, 132.585, -26.6969, 1.55 ) }
    dend_72 { pt3dadd( 10.9485, 134.181, -26.3845, 0.22 ) }
    dend_72 { pt3dadd( 10.9401, 134.393, -26.3375, 0.22 ) }
    dend_72 { pt3dadd( 10.847, 135.699, -25.9962, 0.22 ) }
    dend_72 { pt3dadd( 10.8118, 136.446, -25.7861, 0.88 ) }
    dend_72 { pt3dadd( 10.8046, 136.679, -25.7213, 1.18 ) }
    dend_72 { pt3dadd( 10.8079, 136.756, -25.6954, 1.18 ) }
    dend_72 { pt3dadd( 10.8926, 137.474, -25.454, 0.66 ) }
    dend_72 { pt3dadd( 10.9502, 137.875, -25.3252, 0.37 ) }
    dend_72 { pt3dadd( 11.0826, 138.927, -24.999, 0.22 ) }
    dend_72 { pt3dadd( 11.1529, 139.706, -24.7546, 0.59 ) }
    dend_72 { pt3dadd( 11.2224, 141.109, -24.4132, 0.52 ) }
    dend_72 { pt3dadd( 11.2408, 141.896, -24.2497, 0.66 ) }
    dend_72 { pt3dadd( 11.249, 142.495, -24.1423, 0.22 ) }
    dend_72 { pt3dadd( 11.2448, 143.408, -24.0064, 1.47 ) }
    dend_72 { pt3dadd( 11.2341, 143.848, -23.9597, 2.14 ) }
    dend_72 { pt3dadd( 11.1636, 146.519, -23.7647, 0.22 ) }
    dend_72 { pt3dadd( 11.1618, 146.591, -23.7625, 0.22 ) }
    dend_72 { pt3dadd( 11.1847, 147.423, -23.735, 1.11 ) }
    dend_72 { pt3dadd( 11.2001, 147.598, -23.7332, 1.47 ) }
    dend_72 { pt3dadd( 11.216, 147.721, -23.7332, 1.47 ) }
    dend_72 { pt3dadd( 11.3114, 148.478, -23.7425, 0.81 ) }
    dend_72 { pt3dadd( 11.3788, 149.105, -23.7648, 0.29 ) }
    dend_72 { pt3dadd( 11.5645, 150.969, -23.8689, 0.22 ) }
    dend_72 { pt3dadd( 11.638, 151.832, -23.9319, 0.96 ) }
    dend_72 { pt3dadd( 11.6525, 151.995, -23.9448, 0.96 ) }
    dend_72 { pt3dadd( 11.6694, 152.169, -23.957, 0.96 ) }
    dend_72 { pt3dadd( 11.8286, 153.514, -24.0402, 0.22 ) }
    dend_72 { pt3dadd( 11.8401, 153.593, -24.0442, 0.22 ) }
    dend_72 { pt3dadd( 11.9836, 154.41, -24.074, 0.81 ) }
    dend_72 { pt3dadd( 12.0587, 154.824, -24.0855, 0.81 ) }
    dend_72 { pt3dadd( 12.4072, 156.755, -24.1119, 0.15 ) }
    dend_72 { pt3dadd( 12.6194, 158.067, -24.1294, 1.18 ) }
    dend_72 { pt3dadd( 12.6743, 158.435, -24.1328, 1.47 ) }
    dend_72 { pt3dadd( 12.6837, 158.504, -24.1384, 1.47 ) }
    dend_72 { pt3dadd( 12.725, 158.837, -24.1924, 1.47 ) }
    dend_72 { pt3dadd( 12.9162, 160.655, -24.5942, 0.22 ) }
    dend_72 { pt3dadd( 13.0144, 161.676, -24.8849, 1.11 ) }
    dend_72 { pt3dadd( 13.0527, 162.108, -25.0242, 1.47 ) }
    dend_72 { pt3dadd( 13.2698, 164.484, -25.9257, 0.15 ) }
    dend_72 { pt3dadd( 13.3617, 165.411, -26.3159, 0.81 ) }
    dend_72 { pt3dadd( 13.3699, 165.484, -26.3502, 0.81 ) }
    dend_72 { pt3dadd( 13.4235, 165.906, -26.5683, 0.81 ) }
    dend_72 { pt3dadd( 13.4328, 165.967, -26.5988, 0.81 ) }
    dend_72 { pt3dadd( 13.6166, 167.431, -27.2326, 0.22 ) }
    dend_72 { pt3dadd( 13.6687, 167.921, -27.3964, 0.37 ) }
    dend_72 { pt3dadd( 13.7373, 168.676, -27.615, 0.22 ) }
    dend_72 { pt3dadd( 13.809, 169.612, -27.8555, 1.18 ) }
    dend_72 { pt3dadd( 13.8416, 170.171, -27.9828, 1.47 ) }
    dend_72 { pt3dadd( 13.9441, 172.295, -28.4143, 0.22 ) }
    dend_72 { pt3dadd( 13.9829, 173.233, -28.5714, 1.03 ) }
    dend_72 { pt3dadd( 13.9952, 173.557, -28.6248, 1.03 ) }
    dend_72 { pt3dadd( 14.0827, 175.635, -28.9921, 0.22 ) }
    dend_72 { pt3dadd( 14.12, 176.384, -29.1248, 0.22 ) }
    dend_72 { pt3dadd( 14.1247, 176.463, -29.1387, 0.22 ) }
    dend_72 { pt3dadd( 14.2178, 177.405, -29.2677, 0.81 ) }
    dend_72 { pt3dadd( 14.2879, 177.984, -29.3343, 0.81 ) }
    dend_72 { pt3dadd( 14.5101, 179.701, -29.479, 0.22 ) }
    dend_72 { pt3dadd( 14.6789, 180.872, -29.4971, 1.11 ) }
    dend_72 { pt3dadd( 14.7158, 181.124, -29.4903, 1.11 ) }
    dend_72 { pt3dadd( 15.0212, 183.227, -29.328, 0.22 ) }
    dend_72 { pt3dadd( 15.1525, 184.155, -29.2176, 0.59 ) }
    dend_72 { pt3dadd( 15.355, 185.652, -28.9808, 0.22 ) }
    dend_72 { pt3dadd( 15.5115, 186.921, -28.7213, 1.18 ) }
    dend_72 { pt3dadd( 15.5697, 187.41, -28.6161, 1.62 ) }
    dend_72 { pt3dadd( 15.7752, 189.267, -28.1815, 0.22 ) }
    dend_72 { pt3dadd( 15.8271, 189.844, -28.0348, 0.22 ) }
    dend_72 { pt3dadd( 15.879, 190.485, -27.8592, 0.59 ) }
    dend_72 { pt3dadd( 15.9044, 190.81, -27.7679, 0.59 ) }
    dend_72 { pt3dadd( 15.9101, 190.901, -27.7444, 0.59 ) }
    dend_72 { pt3dadd( 15.9704, 191.921, -27.4629, 0.22 ) }
    dend_72 { pt3dadd( 16.0109, 192.478, -27.2891, 0.52 ) }
    dend_72 { pt3dadd( 16.0289, 192.644, -27.2341, 0.52 ) }
    dend_72 { pt3dadd( 16.0404, 192.72, -27.2081, 0.52 ) }
    dend_72 { pt3dadd( 16.3059, 194.071, -26.8387, 0.22 ) }
    dend_72 { pt3dadd( 16.5331, 195.11, -26.6119, 1.11 ) }
    dend_72 { pt3dadd( 16.6676, 195.598, -26.5472, 1.47 ) }
    dend_72 { pt3dadd( 16.7184, 195.754, -26.5308, 1.47 ) }
    dend_72 { pt3dadd( 16.9091, 196.296, -26.4876, 1.47 ) }
    dend_72 { pt3dadd( 17.5441, 197.979, -26.3977, 0.22 ) }
    dend_72 { pt3dadd( 17.57, 198.043, -26.3971, 0.22 ) }
    dend_72 { pt3dadd( 18.0655, 199.295, -26.4019, 0.22 ) }
    dend_72 { pt3dadd( 18.4606, 200.369, -26.4129, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_72 { pt3dadd( 18.6354, 200.861, -26.4055, 1.55 ) }
    dend_72 { pt3dadd( 18.8024, 201.34, -26.3909, 1.55 ) }
    dend_72 { pt3dadd( 19.4044, 202.998, -26.3149, 0.22 ) }
    dend_72 { pt3dadd( 19.6346, 203.622, -26.281, 0.74 ) }
    dend_72 { pt3dadd( 19.7237, 203.865, -26.262, 0.74 ) }
    dend_72 { pt3dadd( 20.5112, 205.953, -26.0801, 0.22 ) }
    dend_72 { pt3dadd( 20.7422, 206.551, -26.0196, 0.74 ) }
    dend_72 { pt3dadd( 21.4515, 208.331, -25.7448, 0.22 ) }
    dend_72 { pt3dadd( 21.5302, 208.519, -25.7068, 0.22 ) }
    dend_72 { pt3dadd( 21.9761, 209.547, -25.4856, 0.74 ) }
    dend_72 { pt3dadd( 22.0282, 209.667, -25.4572, 0.74 ) }
    dend_72 { pt3dadd( 22.3005, 210.305, -25.2925, 1.03 ) }
    dend_72 { pt3dadd( 23.2062, 212.482, -24.7332, 0.15 ) }
    dend_72 { pt3dadd( 23.2355, 212.558, -24.7148, 0.15 ) }
    dend_72 { pt3dadd( 23.7321, 213.905, -24.4446, 0.15 ) }
    dend_72 { pt3dadd( 23.9667, 214.563, -24.3347, 1.03 ) }
    dend_72 { pt3dadd( 24.0863, 214.923, -24.2924, 1.03 ) }
    dend_72 { pt3dadd( 24.395, 216.011, -24.2227, 0.15 ) }
    dend_72 { pt3dadd( 24.5985, 216.905, -24.2314, 1.11 ) }
    dend_72 { pt3dadd( 24.6833, 217.344, -24.2393, 1.4 ) }
    dend_72 { pt3dadd( 24.6934, 217.413, -24.2413, 1.4 ) }
    dend_72 { pt3dadd( 24.8715, 219.059, -24.3207, 0.22 ) }
    dend_72 { pt3dadd( 24.9275, 219.914, -24.3546, 0.59 ) }
    dend_72 { pt3dadd( 24.9291, 219.987, -24.3567, 0.59 ) }
    dend_72 { pt3dadd( 24.9262, 220.241, -24.3581, 0.59 ) }
    dend_72 { pt3dadd( 24.8955, 221.273, -24.3573, 0.22 ) }
    dend_72 { pt3dadd( 24.8626, 222.023, -24.3536, 1.18 ) }
    dend_72 { pt3dadd( 24.8039, 222.779, -24.3438, 1.84 ) }
    dend_72 { pt3dadd( 24.761, 223.209, -24.3408, 1.47 ) }
    dend_72 { pt3dadd( 24.4622, 225.374, -24.3133, 0.22 ) }
    dend_72 { pt3dadd( 24.3167, 226.194, -24.2999, 0.22 ) }
    dend_72 { pt3dadd( 24.3008, 226.261, -24.2982, 0.22 ) }
    dend_72 { pt3dadd( 24.0617, 227.049, -24.2883, 0.81 ) }
    dend_72 { pt3dadd( 23.8672, 227.631, -24.2902, 1.62 ) }
    dend_72 { pt3dadd( 23.6128, 228.333, -24.299, 2.28 ) }
    dend_72 { pt3dadd( 23.5159, 228.598, -24.3049, 2.5 ) }
    dend_72 { pt3dadd( 23.2537, 229.385, -24.3195, 2.14 ) }
    dend_72 { pt3dadd( 22.6231, 231.548, -24.3695, 0.22 ) }
    dend_72 { pt3dadd( 22.4465, 232.274, -24.3943, 0.59 ) }
    dend_72 { pt3dadd( 22.4307, 232.368, -24.3981, 0.59 ) }
    dend_72 { pt3dadd( 22.3344, 233.273, -24.4341, 0.22 ) }
    dend_72 { pt3dadd( 22.3033, 233.951, -24.4469, 0.81 ) }
    dend_72 { pt3dadd( 22.3041, 234.059, -24.4466, 0.81 ) }
    dend_72 { pt3dadd( 22.322, 234.484, -24.4275, 0.81 ) }
    dend_72 { pt3dadd( 22.3524, 235.793, -24.3461, 0.22 ) }
    dend_72 { pt3dadd( 22.3658, 236.549, -24.2949, 0.44 ) }
    dend_72 { pt3dadd( 22.3789, 238.377, -24.1528, 0.15 ) }
    dend_72 { pt3dadd( 22.3864, 239.052, -24.0957, 0.15 ) }
    dend_72 { pt3dadd( 22.3883, 239.605, -24.0451, 0.59 ) }
    dend_72 { pt3dadd( 22.3866, 239.952, -24.0091, 0.59 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 50/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -8.30107, 38.0223, -7.21466, 1.55 ) }
    dend_27 { pt3dadd( -7.76015, 40.2323, -9.21524, 1.55 ) }
    dend_27 { pt3dadd( -7.73289, 40.3408, -9.3019, 1.55 ) }
    dend_27 { pt3dadd( -7.35121, 41.8038, -10.2743, 1.47 ) }
    dend_27 { pt3dadd( -7.3325, 41.874, -10.3127, 1.47 ) }
    dend_27 { pt3dadd( -7.06656, 42.8565, -10.7957, 1.25 ) }
    dend_27 { pt3dadd( -6.6326, 44.4825, -11.4743, 1.25 ) }
    dend_27 { pt3dadd( -6.5832, 44.6758, -11.5186, 1.25 ) }
    dend_27 { pt3dadd( -6.26047, 45.8801, -11.734, 0.81 ) }
    dend_27 { pt3dadd( -5.89883, 47.2418, -11.9, 1.18 ) }
    dend_27 { pt3dadd( -5.8657, 47.3733, -11.9131, 1.18 ) }
    dend_27 { pt3dadd( -5.49747, 48.9656, -12.038, 1.84 ) }
    dend_27 { pt3dadd( -5.25591, 50.1662, -12.1121, 2.14 ) }
    dend_27 { pt3dadd( -5.04524, 51.3742, -12.1885, 2.14 ) }
    dend_27 { pt3dadd( -4.86961, 52.7603, -12.2944, 2.14 ) }
    dend_27 { pt3dadd( -4.86524, 52.83, -12.3, 2.14 ) }
    dend_27 { pt3dadd( -4.86131, 53.6392, -12.3801, 1.77 ) }
    dend_27 { pt3dadd( -4.94145, 55.1393, -12.5561, 1.77 ) }
    dend_27 { pt3dadd( -5.0766, 56.1625, -12.6838, 1.47 ) }
    dend_27 { pt3dadd( -5.35871, 57.4515, -12.8385, 1.25 ) }
    dend_27 { pt3dadd( -5.75599, 58.767, -13.0174, 1.62 ) }
    dend_27 { pt3dadd( -6.10496, 59.7149, -13.16, 1.84 ) }
    dend_27 { pt3dadd( -6.13892, 59.7921, -13.173, 1.84 ) }
    dend_27 { pt3dadd( -6.72248, 60.9021, -13.409, 1.99 ) }
    dend_27 { pt3dadd( -7.39422, 62.1425, -13.6959, 1.69 ) }
    dend_27 { pt3dadd( -7.97495, 63.3186, -13.9649, 1.47 ) }
    dend_27 { pt3dadd( -8.29198, 64.1644, -14.1992, 1.33 ) }
    dend_27 { pt3dadd( -8.30907, 64.2296, -14.219, 1.33 ) }
    dend_27 { pt3dadd( -8.43698, 65.3854, -14.6094, 1.11 ) }
    dend_27 { pt3dadd( -8.33537, 66.574, -15.0745, 0.88 ) }
    dend_27 { pt3dadd( -8.05513, 67.5443, -15.4845, 0.96 ) }
    dend_27 { pt3dadd( -7.46138, 69.0047, -16.0675, 0.81 ) }
    dend_27 { pt3dadd( -7.41461, 69.1158, -16.1073, 0.81 ) }
    dend_27 { pt3dadd( -7.14756, 69.811, -16.331, 0.66 ) }
    dend_27 { pt3dadd( -7.08151, 70.0037, -16.3856, 0.66 ) }
    dend_27 { pt3dadd( -6.92231, 71.1336, -16.6565, 0.66 ) }
    dend_27 { pt3dadd( -6.98158, 72.0576, -16.8137, 0.96 ) }
    dend_27 { pt3dadd( -7.22711, 73.0591, -16.9137, 1.69 ) }
    dend_27 { pt3dadd( -7.37701, 73.5133, -16.9551, 1.99 ) }
    dend_27 { pt3dadd( -7.57461, 73.9766, -17.003, 1.99 ) }
    dend_27 { pt3dadd( -8.06755, 75.0125, -17.1247, 1.84 ) }
    dend_27 { pt3dadd( -8.10655, 75.0851, -17.1343, 1.84 ) }
    dend_27 { pt3dadd( -8.79651, 76.3397, -17.3344, 2.06 ) }
    dend_27 { pt3dadd( -9.02973, 76.789, -17.4129, 2.21 ) }
    dend_27 { pt3dadd( -9.40185, 77.5853, -17.549, 2.14 ) }
    dend_27 { pt3dadd( -9.90921, 78.773, -17.7422, 1.18 ) }
    dend_27 { pt3dadd( -10.4488, 80.1715, -17.9517, 1.03 ) }
    dend_27 { pt3dadd( -10.8247, 81.2272, -18.0881, 1.03 ) }
    dend_27 { pt3dadd( -11.1452, 82.2098, -18.1951, 1.33 ) }
    dend_27 { pt3dadd( -11.4861, 83.3599, -18.2972, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_27 { pt3dadd( -11.6968, 84.2012, -18.3466, 2.65 ) }
    dend_27 { pt3dadd( -11.8873, 85.1184, -18.3953, 2.65 ) }
    dend_27 { pt3dadd( -12.0659, 86.222, -18.4591, 2.65 ) }
    dend_27 { pt3dadd( -12.0854, 86.3764, -18.4672, 2.65 ) }
    dend_27 { pt3dadd( -12.1621, 87.1433, -18.5077, 2.36 ) }
    dend_27 { pt3dadd( -12.1991, 88.0314, -18.5643, 2.06 ) }
    dend_27 { pt3dadd( -12.2079, 89.1699, -18.6436, 1.4 ) }
    dend_27 { pt3dadd( -12.1802, 90.3983, -18.7308, 0.81 ) }
    dend_27 { pt3dadd( -12.0608, 92.3865, -18.8643, 0.66 ) }
    dend_27 { pt3dadd( -11.8985, 94.0485, -18.9579, 0.66 ) }
    dend_27 { pt3dadd( -11.6556, 95.8429, -19.0397, 1.11 ) }
    dend_27 { pt3dadd( -11.6413, 95.9266, -19.0433, 1.11 ) }
    dend_27 { pt3dadd( -11.4095, 97.0246, -19.0797, 1.55 ) }
    dend_27 { pt3dadd( -11.0932, 98.2943, -19.1167, 1.84 ) }
    dend_27 { pt3dadd( -10.6957, 99.7358, -19.1623, 2.28 ) }
    dend_27 { pt3dadd( -10.5094, 100.405, -19.1827, 2.58 ) }
    dend_27 { pt3dadd( -10.2848, 101.265, -19.2288, 2.58 ) }
    dend_27 { pt3dadd( -10.1388, 101.891, -19.2789, 2.58 ) }
    dend_27 { pt3dadd( -9.95951, 102.904, -19.4047, 2.36 ) }
    dend_27 { pt3dadd( -9.86013, 103.779, -19.5553, 1.92 ) }
    dend_27 { pt3dadd( -9.8547, 103.873, -19.5741, 1.92 ) }
    dend_27 { pt3dadd( -9.80734, 105.266, -19.8494, 0.88 ) }
    dend_27 { pt3dadd( -9.79116, 106.624, -20.1008, 0.66 ) }
    dend_27 { pt3dadd( -9.78956, 108.033, -20.3707, 0.66 ) }
    dend_27 { pt3dadd( -9.78871, 108.944, -20.5599, 0.81 ) }
    dend_27 { pt3dadd( -9.76779, 109.942, -20.7781, 0.74 ) }
    dend_27 { pt3dadd( -9.72915, 110.951, -21.0032, 0.59 ) }
    dend_27 { pt3dadd( -9.68532, 111.962, -21.2169, 1.25 ) }
    dend_27 { pt3dadd( -9.61352, 112.925, -21.4349, 1.84 ) }
    dend_27 { pt3dadd( -9.45776, 114.277, -21.7385, 2.5 ) }
    dend_27 { pt3dadd( -9.33996, 115.089, -21.9314, 2.65 ) }
    dend_27 { pt3dadd( -9.31597, 115.222, -21.9705, 2.65 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 32/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -8.30107, 38.0223, -7.21466, 0.52 ) }
    dend_26 { pt3dadd( -8.00864, 39.3122, -7.08436, 0.52 ) }
    dend_26 { pt3dadd( -7.99862, 39.3756, -7.07683, 0.52 ) }
    dend_26 { pt3dadd( -7.98148, 39.9972, -7.00124, 0.52 ) }
    dend_26 { pt3dadd( -8.10734, 41.1534, -6.87141, 0.52 ) }
    dend_26 { pt3dadd( -8.119, 41.216, -6.86491, 0.52 ) }
    dend_26 { pt3dadd( -8.19778, 41.4984, -6.83959, 0.66 ) }
    dend_26 { pt3dadd( -8.24933, 41.5813, -6.82327, 0.66 ) }
    dend_26 { pt3dadd( -8.60472, 42.0326, -6.74561, 0.52 ) }
    dend_26 { pt3dadd( -8.91789, 42.3575, -6.69353, 0.66 ) }
    dend_26 { pt3dadd( -8.97239, 42.4098, -6.68329, 0.66 ) }
    dend_26 { pt3dadd( -9.309, 42.7369, -6.59806, 0.59 ) }
    dend_26 { pt3dadd( -9.82802, 43.2484, -6.4412, 0.29 ) }
    dend_26 { pt3dadd( -10.2626, 43.696, -6.27707, 0.29 ) }
    dend_26 { pt3dadd( -10.3409, 43.7794, -6.24061, 0.29 ) }
    dend_26 { pt3dadd( -10.8524, 44.3481, -5.96557, 0.59 ) }
    dend_26 { pt3dadd( -11.1964, 44.7341, -5.78786, 0.81 ) }
    dend_26 { pt3dadd( -11.2401, 44.7812, -5.76825, 0.81 ) }
    dend_26 { pt3dadd( -11.549, 45.0841, -5.66917, 0.81 ) }
    dend_26 { pt3dadd( -11.5916, 45.1185, -5.65992, 0.81 ) }
    dend_26 { pt3dadd( -12.0206, 45.4142, -5.59971, 0.81 ) }
    dend_26 { pt3dadd( -12.7686, 45.9221, -5.52181, 0.37 ) }
    dend_26 { pt3dadd( -13.2844, 46.3045, -5.42736, 0.37 ) }
    dend_26 { pt3dadd( -13.7002, 46.6386, -5.31611, 0.59 ) }
    dend_26 { pt3dadd( -14.0477, 46.9464, -5.18764, 0.81 ) }
    dend_26 { pt3dadd( -14.6082, 47.4799, -4.91929, 0.29 ) }
    dend_26 { pt3dadd( -15.1514, 48.0297, -4.60823, 0.52 ) }
    dend_26 { pt3dadd( -15.7403, 48.6757, -4.20401, 1.33 ) }
    dend_26 { pt3dadd( -16.0003, 48.9798, -4.00405, 1.55 ) }
    dend_26 { pt3dadd( -16.7565, 49.9037, -3.37597, 0.29 ) }
    dend_26 { pt3dadd( -17.3533, 50.6369, -2.87664, 1.55 ) }
    dend_26 { pt3dadd( -17.4972, 50.8031, -2.7759, 1.84 ) }
    dend_26 { pt3dadd( -17.5746, 50.88, -2.7417, 1.84 ) }
    dend_26 { pt3dadd( -17.7983, 51.0835, -2.70789, 1.84 ) }
    dend_26 { pt3dadd( -17.839, 51.1211, -2.71078, 1.84 ) }
    dend_26 { pt3dadd( -18.1448, 51.4101, -2.80568, 1.62 ) }
    dend_26 { pt3dadd( -18.7553, 51.9863, -3.07865, 0.37 ) }
    dend_26 { pt3dadd( -19.2555, 52.4821, -3.34713, 0.29 ) }
    dend_26 { pt3dadd( -19.6254, 52.8939, -3.59329, 0.59 ) }
    dend_26 { pt3dadd( -19.8576, 53.1732, -3.78196, 0.59 ) }
    dend_26 { pt3dadd( -20.0186, 53.3752, -3.92537, 0.59 ) }
    dend_26 { pt3dadd( -20.2279, 53.6561, -4.13329, 0.52 ) }
    dend_26 { pt3dadd( -20.6114, 54.2596, -4.54037, 0.29 ) }
    dend_26 { pt3dadd( -20.8617, 54.7165, -4.83994, 0.74 ) }
    dend_26 { pt3dadd( -21.1586, 55.2605, -5.16915, 0.66 ) }
    dend_26 { pt3dadd( -21.3262, 55.5572, -5.33342, 0.88 ) }
    dend_26 { pt3dadd( -21.6292, 56.075, -5.5925, 0.66 ) }
    dend_26 { pt3dadd( -22.4766, 57.4313, -6.19366, 2.14 ) }
    dend_26 { pt3dadd( -22.8133, 57.9236, -6.38569, 2.14 ) }
    dend_26 { pt3dadd( -23.5293, 58.9058, -6.72974, 0.22 ) }
    dend_26 { pt3dadd( -23.9201, 59.421, -6.8861, 0.22 ) }
    dend_26 { pt3dadd( -24.341, 59.9626, -7.03027, 0.22 ) }
    dend_26 { pt3dadd( -24.7668, 60.4713, -7.1191, 0.88 ) }
    dend_26 { pt3dadd( -24.9966, 60.7207, -7.13593, 1.03 ) }
    dend_26 { pt3dadd( -25.2879, 61.0181, -7.12833, 0.74 ) }
    dend_26 { pt3dadd( -25.9989, 61.7371, -7.06497, 0.22 ) }
    dend_26 { pt3dadd( -26.4316, 62.1655, -7.00259, 0.22 ) }
    dend_26 { pt3dadd( -27.0099, 62.7446, -6.91914, 0.22 ) }
    dend_26 { pt3dadd( -27.0872, 62.8233, -6.90838, 0.22 ) }
    dend_26 { pt3dadd( -27.634, 63.4068, -6.83554, 0.22 ) }
    dend_26 { pt3dadd( -28.4414, 64.2632, -6.74793, 1.69 ) }
    dend_26 { pt3dadd( -28.7107, 64.5798, -6.73078, 2.21 ) }
    dend_26 { pt3dadd( -29.1451, 65.1249, -6.72613, 2.21 ) }
    dend_26 { pt3dadd( -29.1765, 65.1703, -6.72581, 2.21 ) }
    dend_26 { pt3dadd( -29.7978, 66.1959, -6.69149, 0.22 ) }
    dend_26 { pt3dadd( -30.1565, 66.8773, -6.65145, 0.22 ) }
    dend_26 { pt3dadd( -30.7267, 68.0238, -6.51678, 0.22 ) }
    dend_26 { pt3dadd( -30.7692, 68.1105, -6.50373, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_26 { pt3dadd( -31.1803, 68.9236, -6.34508, 1.11 ) }
    dend_26 { pt3dadd( -31.4817, 69.5218, -6.23372, 1.11 ) }
    dend_26 { pt3dadd( -31.7503, 70.0564, -6.11955, 0.59 ) }
    dend_26 { pt3dadd( -32.264, 71.0644, -5.8867, 1.69 ) }
    dend_26 { pt3dadd( -32.4041, 71.3238, -5.82543, 1.77 ) }
    dend_26 { pt3dadd( -33.3166, 72.9895, -5.46815, 0.22 ) }
    dend_26 { pt3dadd( -34.0689, 74.3263, -5.17353, 0.22 ) }
    dend_26 { pt3dadd( -34.3549, 74.8331, -5.04794, 1.03 ) }
    dend_26 { pt3dadd( -34.5702, 75.2161, -4.94642, 1.03 ) }
    dend_26 { pt3dadd( -34.7632, 75.5578, -4.85254, 0.81 ) }
    dend_26 { pt3dadd( -35.3353, 76.4581, -4.54307, 0.22 ) }
    dend_26 { pt3dadd( -36.0439, 77.438, -4.14121, 1.11 ) }
    dend_26 { pt3dadd( -36.1877, 77.6145, -4.06447, 1.62 ) }
    dend_26 { pt3dadd( -36.3942, 77.8535, -3.94376, 1.62 ) }
    dend_26 { pt3dadd( -36.4284, 77.891, -3.92136, 1.62 ) }
    dend_26 { pt3dadd( -37.6973, 79.2283, -3.00421, 0.22 ) }
    dend_26 { pt3dadd( -38.1708, 79.7126, -2.64672, 0.81 ) }
    dend_26 { pt3dadd( -38.3832, 79.9269, -2.4886, 0.81 ) }
    dend_26 { pt3dadd( -39.4043, 80.9607, -1.70761, 0.22 ) }
    dend_26 { pt3dadd( -39.4435, 81.0014, -1.67578, 0.22 ) }
    dend_26 { pt3dadd( -40.0903, 81.6983, -1.11068, 1.18 ) }
    dend_26 { pt3dadd( -40.3691, 82.0447, -0.784796, 1.55 ) }
    dend_26 { pt3dadd( -44.9533, 89.992, -0.520876, 1.55 ) }
    dend_26 { pt3dadd( -49.6586, 97.8317, 0.325474, 1.55 ) }
    dend_26 { pt3dadd( -55.6025, 104.817, 1.23764, 1.55 ) }
    dend_26 { pt3dadd( -61.5043, 111.602, 3.29343, 1.55 ) }
    dend_26 { pt3dadd( -68.0968, 117.042, 6.88197, 1.55 ) }
    dend_26 { pt3dadd( -74.4039, 122.979, 10.1401, 1.55 ) }
    dend_26 { pt3dadd( -78.8715, 129.847, 14.3691, 1.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 29/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.13385, 42.8382, -3.5492, 0.88 ) }
    dend_24 { pt3dadd( -3.12347, 43.366, -1.99592, 0.88 ) }
    dend_24 { pt3dadd( -3.1851, 43.3883, -1.90063, 0.88 ) }
    dend_24 { pt3dadd( -3.93051, 43.5348, -0.819622, 0.88 ) }
    dend_24 { pt3dadd( -3.96136, 43.5386, -0.776194, 0.88 ) }
    dend_24 { pt3dadd( -5.27619, 43.7273, 1.75437, 0.59 ) }
    dend_24 { pt3dadd( -5.30297, 43.7324, 1.81039, 0.59 ) }
    dend_24 { pt3dadd( -5.66648, 43.8024, 2.64511, 1.18 ) }
    dend_24 { pt3dadd( -6.14125, 43.918, 3.78923, 1.18 ) }
    dend_24 { pt3dadd( -6.15982, 43.9241, 3.83893, 1.18 ) }
    dend_24 { pt3dadd( -7.51887, 44.7921, 8.04357, 0.22 ) }
    dend_24 { pt3dadd( -7.64133, 44.9545, 8.53305, 0.29 ) }
    dend_24 { pt3dadd( -7.84697, 45.3345, 9.4706, 1.11 ) }
    dend_24 { pt3dadd( -7.85735, 45.3632, 9.52747, 1.11 ) }
    dend_24 { pt3dadd( -7.94065, 45.7133, 10.1457, 1.11 ) }
    dend_24 { pt3dadd( -8.0835, 46.4402, 11.2682, 0.22 ) }
    dend_24 { pt3dadd( -8.12861, 47.0228, 11.7854, 0.59 ) }
    dend_24 { pt3dadd( -8.12824, 47.061, 11.8217, 0.59 ) }
    dend_24 { pt3dadd( -8.10156, 47.2949, 12.0394, 1.11 ) }
    dend_24 { pt3dadd( -11.9241, 49.7966, 19.663, 1.11 ) }
    dend_24 { pt3dadd( -17.5684, 52.4485, 25.9933, 1.11 ) }
    dend_24 { pt3dadd( -21.4767, 55.9934, 33.125, 1.11 ) }
    dend_24 { pt3dadd( -26.1138, 59.7528, 39.6823, 1.11 ) }
    dend_24 { pt3dadd( -30.553, 63.9395, 46.1038, 1.11 ) }
    dend_24 { pt3dadd( -34.6423, 68.5689, 52.4383, 1.11 ) }
    dend_24 { pt3dadd( -39.0543, 73.4932, 58.3061, 1.11 ) }
    dend_24 { pt3dadd( -43.242, 77.676, 64.8968, 1.11 ) }
    dend_24 { pt3dadd( -46.5302, 81.7999, 72.0149, 1.11 ) }
    dend_24 { pt3dadd( -50.0707, 85.8197, 79.0742, 1.11 ) }
    dend_24 { pt3dadd( -52.8481, 90.85, 85.7866, 1.11 ) }
    dend_24 { pt3dadd( -55.7345, 96.2588, 92.1342, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 60/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -2.13385, 42.8382, -3.5492, 0.52 ) }
    dend_23 { pt3dadd( -1.99371, 43.9126, -2.9337, 0.52 ) }
    dend_23 { pt3dadd( -1.9459, 44.8453, -2.46907, 0.52 ) }
    dend_23 { pt3dadd( -1.94876, 44.8914, -2.45112, 0.44 ) }
    dend_23 { pt3dadd( -2.05058, 45.6712, -2.22288, 0.44 ) }
    dend_23 { pt3dadd( -2.0602, 45.7355, -2.20951, 0.44 ) }
    dend_23 { pt3dadd( -2.14508, 46.3418, -2.11933, 0.66 ) }
    dend_23 { pt3dadd( -2.15803, 46.3984, -2.11539, 0.66 ) }
    dend_23 { pt3dadd( -2.30475, 46.9797, -2.06819, 0.66 ) }
    dend_23 { pt3dadd( -2.42196, 47.455, -1.99484, 0.44 ) }
    dend_23 { pt3dadd( -2.58867, 48.1527, -1.79869, 0.44 ) }
    dend_23 { pt3dadd( -2.72862, 48.7758, -1.56787, 0.96 ) }
    dend_23 { pt3dadd( -2.87103, 49.6645, -1.17183, 0.81 ) }
    dend_23 { pt3dadd( -2.88482, 49.7975, -1.10654, 0.81 ) }
    dend_23 { pt3dadd( -2.89046, 50.709, -0.609706, 0.66 ) }
    dend_23 { pt3dadd( -2.81692, 51.548, -0.0749736, 0.44 ) }
    dend_23 { pt3dadd( -2.79541, 51.6504, -0.00307466, 0.44 ) }
    dend_23 { pt3dadd( -2.58198, 52.2831, 0.45928, 0.29 ) }
    dend_23 { pt3dadd( -2.42438, 52.6015, 0.703888, 0.29 ) }
    dend_23 { pt3dadd( -2.14531, 53.0936, 1.08837, 1.11 ) }
    dend_23 { pt3dadd( -1.72298, 53.7306, 1.60618, 1.47 ) }
    dend_23 { pt3dadd( -1.48829, 54.0942, 1.91079, 1.47 ) }
    dend_23 { pt3dadd( -1.46847, 54.1284, 1.94145, 1.47 ) }
    dend_23 { pt3dadd( -1.05915, 54.9086, 2.7031, 0.88 ) }
    dend_23 { pt3dadd( -0.779223, 55.4952, 3.29666, 0.52 ) }
    dend_23 { pt3dadd( -0.764477, 55.5288, 3.33057, 0.52 ) }
    dend_23 { pt3dadd( -0.545049, 56.0244, 3.80453, 0.74 ) }
    dend_23 { pt3dadd( -0.529297, 56.0585, 3.83756, 0.74 ) }
    dend_23 { pt3dadd( -0.351572, 56.3856, 4.13266, 0.74 ) }
    dend_23 { pt3dadd( -0.32829, 56.4198, 4.1606, 0.74 ) }
    dend_23 { pt3dadd( -0.104691, 56.7026, 4.3673, 0.74 ) }
    dend_23 { pt3dadd( 0.430981, 57.3889, 4.78143, 0.37 ) }
    dend_23 { pt3dadd( 0.718039, 57.781, 4.96872, 0.37 ) }
    dend_23 { pt3dadd( 1.07309, 58.3361, 5.17851, 0.52 ) }
    dend_23 { pt3dadd( 1.32555, 58.8235, 5.33404, 0.37 ) }
    dend_23 { pt3dadd( 1.65808, 59.6324, 5.54948, 0.74 ) }
    dend_23 { pt3dadd( 1.82628, 60.247, 5.67109, 1.11 ) }
    dend_23 { pt3dadd( 1.91747, 60.8384, 5.74824, 0.96 ) }
    dend_23 { pt3dadd( 1.93539, 61.5842, 5.81904, 0.44 ) }
    dend_23 { pt3dadd( 1.8571, 62.4617, 5.87985, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_23 { pt3dadd( 1.79041, 62.8861, 5.90777, 0.29 ) }
    dend_23 { pt3dadd( 1.67182, 63.5257, 5.95024, 0.29 ) }
    dend_23 { pt3dadd( 1.6628, 63.583, 5.95421, 0.29 ) }
    dend_23 { pt3dadd( 1.60046, 64.1911, 6.00029, 0.37 ) }
    dend_23 { pt3dadd( 1.57987, 64.9435, 6.05506, 0.52 ) }
    dend_23 { pt3dadd( 1.62804, 65.6356, 6.09681, 1.11 ) }
    dend_23 { pt3dadd( 1.69624, 66.1129, 6.13601, 1.69 ) }
    dend_23 { pt3dadd( 1.75593, 66.458, 6.16474, 1.77 ) }
    dend_23 { pt3dadd( 1.80997, 66.8609, 6.1903, 1.69 ) }
    dend_23 { pt3dadd( 1.85134, 67.2673, 6.20871, 1.47 ) }
    dend_23 { pt3dadd( 1.85691, 67.5404, 6.21044, 1.47 ) }
    dend_23 { pt3dadd( 1.85046, 67.5998, 6.20705, 1.47 ) }
    dend_23 { pt3dadd( 1.63117, 68.6452, 6.11679, 0.29 ) }
    dend_23 { pt3dadd( 1.50205, 69.1157, 6.06645, 0.66 ) }
    dend_23 { pt3dadd( 1.48528, 69.1714, 6.06232, 0.66 ) }
    dend_23 { pt3dadd( 1.40912, 69.4343, 6.05474, 0.37 ) }
    dend_23 { pt3dadd( 1.27213, 69.9943, 6.07354, 0.29 ) }
    dend_23 { pt3dadd( 1.14612, 70.6658, 6.12977, 0.29 ) }
    dend_23 { pt3dadd( 1.13993, 70.7232, 6.13754, 0.29 ) }
    dend_23 { pt3dadd( 1.12055, 71.4411, 6.24707, 1.03 ) }
    dend_23 { pt3dadd( 1.13651, 72.0444, 6.34051, 1.69 ) }
    dend_23 { pt3dadd( 1.19456, 72.6853, 6.43486, 2.14 ) }
    dend_23 { pt3dadd( 1.22763, 72.9772, 6.47342, 2.28 ) }
    dend_23 { pt3dadd( 1.26564, 73.4439, 6.50348, 1.77 ) }
    dend_23 { pt3dadd( 1.29314, 73.984, 6.5019, 1.18 ) }
    dend_23 { pt3dadd( 1.3003, 74.5469, 6.45445, 0.52 ) }
    dend_23 { pt3dadd( 1.28579, 75.0899, 6.38472, 0.37 ) }
    dend_23 { pt3dadd( 1.26424, 75.4654, 6.30418, 0.37 ) }
    dend_23 { pt3dadd( 1.21586, 76.2477, 6.11309, 0.74 ) }
    dend_23 { pt3dadd( 1.20522, 76.5332, 6.03771, 1.25 ) }
    dend_23 { pt3dadd( 1.1955, 77.001, 5.90345, 1.4 ) }
    dend_23 { pt3dadd( 1.20137, 77.6441, 5.71571, 0.81 ) }
    dend_23 { pt3dadd( 1.25644, 78.9395, 5.35314, 0.37 ) }
    dend_23 { pt3dadd( 1.32019, 79.6474, 5.16744, 0.37 ) }
    dend_23 { pt3dadd( 1.45935, 80.7916, 4.89329, 0.29 ) }
    dend_23 { pt3dadd( 1.58631, 81.6636, 4.69595, 1.84 ) }
    dend_23 { pt3dadd( 1.64557, 81.9894, 4.62951, 2.28 ) }
    dend_23 { pt3dadd( 1.75643, 82.4801, 4.54519, 2.14 ) }
    dend_23 { pt3dadd( 2.02864, 83.5334, 4.43039, 0.52 ) }
    dend_23 { pt3dadd( 2.19115, 84.127, 4.3826, 0.74 ) }
    dend_23 { pt3dadd( 2.30113, 84.5403, 4.36701, 0.74 ) }
    dend_23 { pt3dadd( 2.44385, 85.1209, 4.36296, 0.22 ) }
    dend_23 { pt3dadd( 2.51024, 85.4845, 4.35927, 0.22 ) }
    dend_23 { pt3dadd( 2.58058, 86.2198, 4.32499, 0.74 ) }
    dend_23 { pt3dadd( 2.57753, 86.4093, 4.30363, 0.74 ) }
    dend_23 { pt3dadd( 2.53369, 87.0322, 4.20119, 0.22 ) }
    dend_23 { pt3dadd( 2.48588, 87.497, 4.1097, 0.74 ) }
    dend_23 { pt3dadd( 2.44082, 87.8836, 4.0246, 0.96 ) }
    dend_23 { pt3dadd( 2.35897, 88.785, 3.82326, 0.37 ) }
    dend_23 { pt3dadd( 2.31298, 89.8797, 3.58121, 1.25 ) }
    dend_23 { pt3dadd( 2.32249, 90.2625, 3.50739, 1.55 ) }
    dend_23 { pt3dadd( 2.34628, 90.5639, 3.46622, 1.77 ) }
    dend_23 { pt3dadd( 2.39444, 91.0707, 3.42877, 1.77 ) }
    dend_23 { pt3dadd( 2.46021, 91.7437, 3.41426, 0.88 ) }
    dend_23 { pt3dadd( 2.50137, 92.1867, 3.42842, 0.52 ) }
    dend_23 { pt3dadd( 2.5508, 92.8828, 3.47782, 0.44 ) }
    dend_23 { pt3dadd( 2.60314, 93.7722, 3.51814, 0.29 ) }
    dend_23 { pt3dadd( 2.64036, 94.8624, 3.54129, 1.25 ) }
    dend_23 { pt3dadd( 2.64555, 95.3395, 3.54252, 2.21 ) }
    dend_23 { pt3dadd( 2.6428, 95.6651, 3.53641, 2.5 ) }
    dend_23 { pt3dadd( 2.63281, 96.3424, 3.50964, 2.28 ) }
    dend_23 { pt3dadd( 2.5988, 97.4847, 3.39025, 0.66 ) }
    dend_23 { pt3dadd( 2.585, 98.0986, 3.29394, 0.52 ) }
    dend_23 { pt3dadd( 2.57626, 98.7603, 3.17336, 0.66 ) }
    dend_23 { pt3dadd( 2.57361, 99.2376, 3.08262, 0.96 ) }
    dend_23 { pt3dadd( 2.57537, 99.842, 2.95951, 0.96 ) }
    dend_23 { pt3dadd( 2.5949, 101.297, 2.64354, 0.22 ) }
    dend_23 { pt3dadd( 2.61709, 101.902, 2.52489, 1.18 ) }
    dend_23 { pt3dadd( 2.64705, 102.237, 2.45842, 0.88 ) }
    dend_23 { pt3dadd( 2.71228, 102.686, 2.36924, 0.74 ) }
    dend_23 { pt3dadd( 2.83328, 103.265, 2.26453, 0.29 ) }
    dend_23 { pt3dadd( 2.84984, 103.321, 2.25688, 0.29 ) }
    dend_23 { pt3dadd( 3.06325, 103.799, 2.23756, 0.81 ) }
    dend_23 { pt3dadd( 3.08581, 103.853, 2.23217, 0.81 ) }
    dend_23 { pt3dadd( 3.19175, 104.189, 2.18399, 1.03 ) }
    dend_23 { pt3dadd( 3.23264, 104.36, 2.15507, 1.03 ) }
    dend_23 { pt3dadd( 3.26215, 104.592, 2.11011, 1.03 ) }
    dend_23 { pt3dadd( 3.26852, 105.644, 1.82463, 0.29 ) }
    dend_23 { pt3dadd( 3.19559, 106.414, 1.56677, 0.29 ) }
    dend_23 { pt3dadd( 3.13121, 106.896, 1.39524, 0.59 ) }
    dend_23 { pt3dadd( 3.11225, 107.012, 1.35283, 0.59 ) }
    dend_23 { pt3dadd( 3.0479, 107.453, 1.19778, 0.37 ) }
    dend_23 { pt3dadd( 2.97478, 108.228, 0.958895, 0.29 ) }
    dend_23 { pt3dadd( 2.95131, 109.073, 0.755624, 1.11 ) }
    dend_23 { pt3dadd( 2.97228, 109.418, 0.694778, 1.69 ) }
    dend_23 { pt3dadd( 3.017, 109.794, 0.644235, 1.84 ) }
    dend_23 { pt3dadd( 3.10471, 110.391, 0.583709, 1.62 ) }
    dend_23 { pt3dadd( 3.25868, 111.237, 0.533412, 0.74 ) }
    dend_23 { pt3dadd( 3.42362, 112.04, 0.526975, 0.52 ) }
    dend_23 { pt3dadd( 3.43623, 112.098, 0.527369, 0.52 ) }
    dend_23 { pt3dadd( 3.60608, 112.977, 0.52857, 0.37 ) }
    dend_23 { pt3dadd( 3.61662, 113.042, 0.527281, 0.37 ) }
    dend_23 { pt3dadd( 3.66775, 113.595, 0.499541, 1.25 ) }
    dend_23 { pt3dadd( 3.68033, 113.982, 0.438289, 0.96 ) }
    dend_23 { pt3dadd( 3.68097, 114.038, 0.425599, 0.96 ) }
    dend_23 { pt3dadd( 3.68288, 114.562, 0.297014, 0.74 ) }
    dend_23 { pt3dadd( 3.68776, 115.099, 0.140748, 0.59 ) }
    dend_23 { pt3dadd( 3.68903, 115.543, 0.00733484, 0.74 ) }
    dend_23 { pt3dadd( 3.66798, 116.716, -0.354705, 0.37 ) }
    dend_23 { pt3dadd( 3.64508, 117.437, -0.578666, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_23 { pt3dadd( 3.62197, 118.059, -0.768774, 0.52 ) }
    dend_23 { pt3dadd( 3.57216, 118.858, -1.02753, 0.29 ) }
    dend_23 { pt3dadd( 3.51003, 119.48, -1.24852, 0.81 ) }
    dend_23 { pt3dadd( 3.4486, 119.894, -1.41414, 1.18 ) }
    dend_23 { pt3dadd( 3.43758, 119.941, -1.4349, 1.18 ) }
    dend_23 { pt3dadd( 3.37814, 120.167, -1.5471, 1.18 ) }
    dend_23 { pt3dadd( 3.22389, 120.865, -1.86822, 1.18 ) }
    dend_23 { pt3dadd( 3.12158, 121.463, -2.10778, 0.44 ) }
    dend_23 { pt3dadd( 3.04976, 122.124, -2.34328, 0.29 ) }
    dend_23 { pt3dadd( 3.04237, 122.255, -2.38308, 0.29 ) }
    dend_23 { pt3dadd( 3.03884, 123.169, -2.60516, 0.29 ) }
    dend_23 { pt3dadd( 3.10675, 124.428, -2.82082, 1.62 ) }
    dend_23 { pt3dadd( 3.14624, 124.862, -2.86504, 2.65 ) }
    dend_23 { pt3dadd( 3.18691, 125.296, -2.89162, 2.87 ) }
    dend_23 { pt3dadd( 3.23346, 125.779, -2.90989, 2.36 ) }
    dend_23 { pt3dadd( 3.29223, 126.453, -2.93049, 1.69 ) }
    dend_23 { pt3dadd( 3.37303, 127.514, -2.96843, 0.52 ) }
    dend_23 { pt3dadd( 3.43836, 128.347, -2.99763, 0.52 ) }
    dend_23 { pt3dadd( 3.46633, 128.764, -3.01793, 0.81 ) }
    dend_23 { pt3dadd( 3.50163, 129.362, -3.05697, 0.44 ) }
    dend_23 { pt3dadd( 3.55148, 130.213, -3.12506, 0.44 ) }
    dend_23 { pt3dadd( 3.58451, 130.845, -3.18587, 0.37 ) }
    dend_23 { pt3dadd( 3.58866, 130.902, -3.19193, 0.37 ) }
    dend_23 { pt3dadd( 3.67873, 131.628, -3.27061, 0.37 ) }
    dend_23 { pt3dadd( 3.69685, 131.733, -3.28115, 0.37 ) }
    dend_23 { pt3dadd( 3.84812, 132.487, -3.35388, 1.62 ) }
    dend_23 { pt3dadd( 3.95567, 132.976, -3.39332, 2.36 ) }
    dend_23 { pt3dadd( 4.04194, 133.353, -3.417, 2.36 ) }
    dend_23 { pt3dadd( 4.32927, 134.57, -3.48149, 0.29 ) }
    dend_23 { pt3dadd( 4.474, 135.156, -3.50699, 0.29 ) }
    dend_23 { pt3dadd( 4.62336, 135.757, -3.52402, 0.37 ) }
    dend_23 { pt3dadd( 4.82122, 136.53, -3.53512, 0.37 ) }
    dend_23 { pt3dadd( 4.90001, 136.838, -3.5492, 0.59 ) }
    dend_23 { pt3dadd( 4.97703, 137.157, -3.58141, 0.59 ) }
    dend_23 { pt3dadd( 4.98771, 137.204, -3.58958, 0.59 ) }
    dend_23 { pt3dadd( 5.21549, 138.392, -3.86703, 0.29 ) }
    dend_23 { pt3dadd( 5.47726, 139.853, -4.27824, 0.29 ) }
    dend_23 { pt3dadd( 5.59639, 140.555, -4.51362, 0.96 ) }
    dend_23 { pt3dadd( 5.69483, 141.179, -4.7503, 1.18 ) }
    dend_23 { pt3dadd( 5.75488, 141.662, -4.94978, 0.66 ) }
    dend_23 { pt3dadd( 5.79569, 142.138, -5.15849, 0.44 ) }
    dend_23 { pt3dadd( 5.79638, 142.19, -5.18472, 0.44 ) }
    dend_23 { pt3dadd( 5.7682, 142.768, -5.45839, 0.22 ) }
    dend_23 { pt3dadd( 5.75854, 142.895, -5.50402, 0.22 ) }
    dend_23 { pt3dadd( 5.69451, 143.833, -5.74793, 1.47 ) }
    dend_23 { pt3dadd( 5.67017, 144.244, -5.82888, 2.28 ) }
    dend_23 { pt3dadd( 5.65436, 144.612, -5.88554, 2.58 ) }
    dend_23 { pt3dadd( 5.61614, 145.659, -6.01, 0.29 ) }
    dend_23 { pt3dadd( 5.59489, 146.235, -6.05612, 0.22 ) }
    dend_23 { pt3dadd( 5.5799, 146.824, -6.08709, 0.22 ) }
    dend_23 { pt3dadd( 5.57111, 147.318, -6.10476, 0.22 ) }
    dend_23 { pt3dadd( 5.54742, 148.136, -6.13092, 1.33 ) }
    dend_23 { pt3dadd( 5.53733, 148.356, -6.13662, 1.62 ) }
    dend_23 { pt3dadd( 5.51725, 148.65, -6.15476, 1.62 ) }
    dend_23 { pt3dadd( 5.45112, 149.31, -6.23945, 0.37 ) }
    dend_23 { pt3dadd( 5.36563, 149.918, -6.34959, 0.22 ) }
    dend_23 { pt3dadd( 5.31568, 150.227, -6.40969, 0.22 ) }
    dend_23 { pt3dadd( 5.25979, 150.538, -6.47276, 0.52 ) }
    dend_23 { pt3dadd( 5.14657, 151.22, -6.60687, 0.29 ) }
    dend_23 { pt3dadd( 4.98469, 152.395, -6.82237, 0.29 ) }
    dend_23 { pt3dadd( 4.91645, 153.044, -6.92951, 1.03 ) }
    dend_23 { pt3dadd( 4.89836, 153.46, -6.98349, 1.33 ) }
    dend_23 { pt3dadd( 4.90222, 153.643, -7.00097, 1.33 ) }
    dend_23 { pt3dadd( 4.93196, 154.023, -7.02292, 1.18 ) }
    dend_23 { pt3dadd( 5.0011, 154.572, -7.02904, 0.96 ) }
    dend_23 { pt3dadd( 5.07501, 154.985, -7.02678, 0.37 ) }
    dend_23 { pt3dadd( 5.22172, 155.71, -7.01675, 0.22 ) }
    dend_23 { pt3dadd( 5.35564, 156.363, -7.00607, 0.22 ) }
    dend_23 { pt3dadd( 5.4875, 157.044, -6.99604, 1.11 ) }
    dend_23 { pt3dadd( 5.55776, 157.422, -7.00199, 1.92 ) }
    dend_23 { pt3dadd( 5.61566, 157.734, -7.02309, 2.5 ) }
    dend_23 { pt3dadd( 5.62571, 157.79, -7.02988, 2.5 ) }
    dend_23 { pt3dadd( 5.68123, 158.141, -7.09561, 2.5 ) }
    dend_23 { pt3dadd( 5.74504, 158.626, -7.21309, 2.36 ) }
    dend_23 { pt3dadd( 5.87933, 159.768, -7.53796, 0.29 ) }
    dend_23 { pt3dadd( 5.94077, 160.373, -7.72323, 0.29 ) }
    dend_23 { pt3dadd( 5.9478, 160.467, -7.75222, 0.29 ) }
    dend_23 { pt3dadd( 5.98546, 161.095, -7.95746, 1.33 ) }
    dend_23 { pt3dadd( 6.00363, 161.46, -8.07699, 1.55 ) }
    dend_23 { pt3dadd( 6.00535, 161.51, -8.09256, 1.55 ) }
    dend_23 { pt3dadd( 6.01353, 161.868, -8.18902, 1.25 ) }
    dend_23 { pt3dadd( 6.06134, 162.449, -8.30614, 0.66 ) }
    dend_23 { pt3dadd( 6.17991, 163.537, -8.47259, 0.29 ) }
    dend_23 { pt3dadd( 6.26524, 164.163, -8.54296, 0.88 ) }
    dend_23 { pt3dadd( 6.31535, 164.486, -8.57137, 1.11 ) }
    dend_23 { pt3dadd( 6.39376, 165.043, -8.61239, 0.96 ) }
    dend_23 { pt3dadd( 6.49626, 166.159, -8.64729, 0.29 ) }
    dend_23 { pt3dadd( 6.5477, 167.362, -8.64744, 0.29 ) }
    dend_23 { pt3dadd( 6.54205, 168.144, -8.62963, 1.33 ) }
    dend_23 { pt3dadd( 6.5232, 168.76, -8.61992, 1.92 ) }
    dend_23 { pt3dadd( 6.48434, 169.439, -8.60843, 2.21 ) }
    dend_23 { pt3dadd( 6.32488, 171.314, -8.57719, 0.37 ) }
    dend_23 { pt3dadd( 6.20026, 172.387, -8.56127, 0.37 ) }
    dend_23 { pt3dadd( 6.07247, 173.409, -8.54727, 0.37 ) }
    dend_23 { pt3dadd( 5.97563, 174.157, -8.54209, 0.22 ) }
    dend_23 { pt3dadd( 5.87579, 174.98, -8.54193, 1.33 ) }
    dend_23 { pt3dadd( 5.84397, 175.28, -8.54524, 2.06 ) }
    dend_23 { pt3dadd( 5.80772, 175.577, -8.55858, 2.21 ) }
    dend_23 { pt3dadd( 5.69752, 176.289, -8.59487, 1.69 ) }
    dend_23 { pt3dadd( 5.48643, 177.418, -8.66095, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_23 { pt3dadd( 5.36272, 178.007, -8.70015, 0.81 ) }
    dend_23 { pt3dadd( 5.29335, 178.359, -8.72875, 0.81 ) }
    dend_23 { pt3dadd( 5.15846, 179.263, -8.80546, 0.22 ) }
    dend_23 { pt3dadd( 5.10261, 179.861, -8.85957, 0.81 ) }
    dend_23 { pt3dadd( 5.09864, 179.996, -8.87182, 0.81 ) }
    dend_23 { pt3dadd( 5.11522, 180.423, -8.91059, 0.81 ) }
    dend_23 { pt3dadd( 5.14852, 180.787, -8.93962, 0.74 ) }
    dend_23 { pt3dadd( 5.2709, 181.69, -8.99911, 0.22 ) }
    dend_23 { pt3dadd( 5.38365, 182.364, -9.04558, 0.81 ) }
    dend_23 { pt3dadd( 5.43269, 182.682, -9.0698, 1.03 ) }
    dend_23 { pt3dadd( 5.4965, 183.162, -9.10917, 0.44 ) }
    dend_23 { pt3dadd( 5.59182, 184.06, -9.18733, 0.29 ) }
    dend_23 { pt3dadd( 5.65602, 184.817, -9.25963, 0.29 ) }
    dend_23 { pt3dadd( 5.70685, 185.754, -9.35215, 1.55 ) }
    dend_23 { pt3dadd( 5.72524, 186.045, -9.38163, 1.92 ) }
    dend_23 { pt3dadd( 5.73019, 186.113, -9.38854, 1.92 ) }
    dend_23 { pt3dadd( 5.75087, 186.41, -9.41912, 1.92 ) }
    dend_23 { pt3dadd( 5.85627, 188.229, -9.61411, 0.22 ) }
    dend_23 { pt3dadd( 5.8847, 189.076, -9.70686, 0.66 ) }
    dend_23 { pt3dadd( 5.88518, 189.411, -9.74277, 1.03 ) }
    dend_23 { pt3dadd( 5.86738, 189.914, -9.80294, 1.03 ) }
    dend_23 { pt3dadd( 5.82171, 190.478, -9.87617, 0.81 ) }
    dend_23 { pt3dadd( 5.74168, 191.072, -9.96018, 0.37 ) }
    dend_23 { pt3dadd( 5.69182, 191.328, -9.99753, 0.37 ) }
    dend_23 { pt3dadd( 5.60182, 191.789, -10.0655, 0.37 ) }
    dend_23 { pt3dadd( 5.47928, 192.44, -10.1607, 0.29 ) }
    dend_23 { pt3dadd( 5.35516, 193.202, -10.267, 0.29 ) }
    dend_23 { pt3dadd( 5.34887, 193.259, -10.2746, 0.29 ) }
    dend_23 { pt3dadd( 5.27259, 194.282, -10.3974, 0.22 ) }
    dend_23 { pt3dadd( 5.27017, 194.348, -10.4051, 0.22 ) }
    dend_23 { pt3dadd( 5.26864, 194.942, -10.4721, 0.22 ) }
    dend_23 { pt3dadd( 5.27253, 195.009, -10.4811, 0.22 ) }
    dend_23 { pt3dadd( 5.35573, 195.731, -10.5873, 1.47 ) }
    dend_23 { pt3dadd( 5.40735, 196.087, -10.6473, 1.84 ) }
    dend_23 { pt3dadd( 5.41493, 196.135, -10.6562, 1.84 ) }
    dend_23 { pt3dadd( 5.47167, 196.485, -10.7205, 1.84 ) }
    dend_23 { pt3dadd( 5.65169, 197.547, -10.9146, 0.22 ) }
    dend_23 { pt3dadd( 5.81171, 198.563, -11.0945, 0.22 ) }
    dend_23 { pt3dadd( 5.88099, 199.037, -11.1655, 0.88 ) }
    dend_23 { pt3dadd( 5.9199, 199.391, -11.2119, 1.18 ) }
    dend_23 { pt3dadd( 5.94288, 199.758, -11.2509, 0.96 ) }
    dend_23 { pt3dadd( 5.94248, 199.817, -11.2555, 0.96 ) }
    dend_23 { pt3dadd( 5.86999, 200.349, -11.2752, 0.37 ) }
    dend_23 { pt3dadd( 5.78101, 200.792, -11.2867, 0.37 ) }
    dend_23 { pt3dadd( 5.69778, 201.267, -11.2893, 0.37 ) }
    dend_23 { pt3dadd( 5.66602, 201.515, -11.2907, 0.29 ) }
    dend_23 { pt3dadd( 5.62576, 202.049, -11.2947, 0.22 ) }
    dend_23 { pt3dadd( 5.61386, 202.38, -11.2987, 0.52 ) }
    dend_23 { pt3dadd( 5.62288, 203.064, -11.3115, 0.22 ) }
    dend_23 { pt3dadd( 5.65579, 203.596, -11.3279, 0.22 ) }
    dend_23 { pt3dadd( 5.71805, 204.077, -11.3565, 1.11 ) }
    dend_23 { pt3dadd( 5.78871, 204.523, -11.4139, 1.47 ) }
    dend_23 { pt3dadd( 5.79792, 204.587, -11.4263, 1.47 ) }
    dend_23 { pt3dadd( 5.83444, 204.892, -11.5018, 1.33 ) }
    dend_23 { pt3dadd( 5.83952, 204.977, -11.5277, 1.33 ) }
    dend_23 { pt3dadd( 5.83997, 205.725, -11.7724, 0.74 ) }
    dend_23 { pt3dadd( 5.83771, 206.59, -12.0624, 0.29 ) }
    dend_23 { pt3dadd( 5.8381, 207.077, -12.219, 0.37 ) }
    dend_23 { pt3dadd( 5.83956, 207.127, -12.2335, 0.37 ) }
    dend_23 { pt3dadd( 5.86031, 207.541, -12.3359, 0.37 ) }
    dend_23 { pt3dadd( 5.9038, 208.143, -12.4631, 0.22 ) }
    dend_23 { pt3dadd( 5.97856, 208.857, -12.5855, 1.11 ) }
    dend_23 { pt3dadd( 6.04189, 209.286, -12.6523, 1.4 ) }
    dend_23 { pt3dadd( 6.113, 209.687, -12.7171, 1.18 ) }
    dend_23 { pt3dadd( 6.21474, 210.229, -12.8113, 0.44 ) }
    dend_23 { pt3dadd( 6.3954, 211.08, -12.982, 0.22 ) }
    dend_23 { pt3dadd( 6.54088, 211.646, -13.0942, 0.74 ) }
    dend_23 { pt3dadd( 6.63298, 211.992, -13.1552, 1.33 ) }
    dend_23 { pt3dadd( 6.64604, 212.039, -13.1632, 1.33 ) }
    dend_23 { pt3dadd( 6.80682, 212.634, -13.2523, 1.62 ) }
    dend_23 { pt3dadd( 6.89242, 212.958, -13.2926, 1.62 ) }
    dend_23 { pt3dadd( 7.24079, 214.29, -13.4171, 0.29 ) }
    dend_23 { pt3dadd( 7.45494, 215.175, -13.4837, 0.29 ) }
    dend_23 { pt3dadd( 7.4668, 215.232, -13.4881, 0.29 ) }
    dend_23 { pt3dadd( 7.62064, 216.213, -13.5625, 0.29 ) }
    dend_23 { pt3dadd( 7.66214, 216.695, -13.596, 1.03 ) }
    dend_23 { pt3dadd( 7.66341, 216.763, -13.6007, 1.03 ) }
    dend_23 { pt3dadd( 7.63441, 217.311, -13.6498, 1.18 ) }
    dend_23 { pt3dadd( 7.54952, 218.289, -13.7446, 0.29 ) }
    dend_23 { pt3dadd( 7.47812, 219.068, -13.8174, 0.29 ) }
    dend_23 { pt3dadd( 7.40426, 219.786, -13.8839, 1.18 ) }
    dend_23 { pt3dadd( 7.37647, 220.097, -13.9097, 1.47 ) }
    dend_23 { pt3dadd( 7.33924, 220.563, -13.9442, 1.25 ) }
    dend_23 { pt3dadd( 7.31858, 220.945, -13.9664, 1.33 ) }
    dend_23 { pt3dadd( 7.30106, 221.97, -14.0024, 0.22 ) }
    dend_23 { pt3dadd( 7.3071, 222.095, -14.0056, 0.22 ) }
    dend_23 { pt3dadd( 7.42943, 223.018, -13.9958, 0.22 ) }
    dend_23 { pt3dadd( 7.44142, 223.084, -13.9932, 0.22 ) }
    dend_23 { pt3dadd( 7.57853, 223.72, -13.9529, 0.74 ) }
    dend_23 { pt3dadd( 7.64839, 224.024, -13.9288, 1.18 ) }
    dend_23 { pt3dadd( 7.71479, 224.39, -13.902, 1.18 ) }
    dend_23 { pt3dadd( 7.85382, 225.477, -13.8406, 0.22 ) }
    dend_23 { pt3dadd( 7.85935, 225.535, -13.8378, 0.22 ) }
    dend_23 { pt3dadd( 7.90509, 226.128, -13.8158, 0.66 ) }
    dend_23 { pt3dadd( 7.9323, 226.436, -13.8234, 0.66 ) }
    dend_23 { pt3dadd( 8.05485, 227.511, -13.8965, 0.22 ) }
    dend_23 { pt3dadd( 8.13127, 228.106, -13.956, 1.25 ) }
    dend_23 { pt3dadd( 8.20579, 228.629, -14.0229, 1.55 ) }
    dend_23 { pt3dadd( 8.30303, 229.208, -14.0989, 1.69 ) }
    dend_23 { pt3dadd( 8.53156, 230.378, -14.2594, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_23 { pt3dadd( 8.76826, 231.525, -14.4181, 0.22 ) }
    dend_23 { pt3dadd( 8.87552, 232.017, -14.4873, 0.66 ) }
    dend_23 { pt3dadd( 8.95569, 232.373, -14.5323, 0.81 ) }
    dend_23 { pt3dadd( 8.96738, 232.43, -14.5386, 0.81 ) }
    dend_23 { pt3dadd( 9.1916, 233.651, -14.6427, 0.22 ) }
    dend_23 { pt3dadd( 9.30862, 234.369, -14.673, 1.03 ) }
    dend_23 { pt3dadd( 9.33614, 234.552, -14.6842, 1.33 ) }
    dend_23 { pt3dadd( 9.49413, 235.655, -14.7578, 0.22 ) }
    dend_23 { pt3dadd( 9.56039, 236.136, -14.79, 0.81 ) }
    dend_23 { pt3dadd( 9.61173, 236.551, -14.8174, 1.03 ) }
    dend_23 { pt3dadd( 9.64876, 236.892, -14.8393, 0.74 ) }
    dend_23 { pt3dadd( 9.76595, 238.185, -14.9283, 0.22 ) }
    dend_23 { pt3dadd( 9.80242, 238.801, -14.9739, 0.44 ) }
    dend_23 { pt3dadd( 9.81019, 239.547, -15.0357, 0.22 ) }
    dend_23 { pt3dadd( 9.80957, 240.211, -15.0893, 1.11 ) }
    dend_23 { pt3dadd( 9.80375, 240.569, -15.117, 1.33 ) }
    dend_23 { pt3dadd( 9.7926, 241.121, -15.1575, 0.37 ) }
    dend_23 { pt3dadd( 9.77903, 241.838, -15.2017, 0.15 ) }
    dend_23 { pt3dadd( 9.78258, 242.378, -15.2372, 0.74 ) }
    dend_23 { pt3dadd( 9.78866, 242.437, -15.2408, 0.74 ) }
    dend_23 { pt3dadd( 9.8271, 242.677, -15.254, 0.74 ) }
    dend_23 { pt3dadd( 10.0143, 243.614, -15.3022, 0.22 ) }
    dend_23 { pt3dadd( 10.1319, 244.137, -15.3272, 1.18 ) }
    dend_23 { pt3dadd( 10.2215, 244.51, -15.346, 1.62 ) }
    dend_23 { pt3dadd( 10.6158, 246.19, -15.4397, 0.22 ) }
    dend_23 { pt3dadd( 10.7345, 246.722, -15.4716, 0.29 ) }
    dend_23 { pt3dadd( 10.7464, 246.78, -15.4754, 0.29 ) }
    dend_23 { pt3dadd( 10.8753, 247.491, -15.5223, 0.29 ) }
    dend_23 { pt3dadd( 10.9905, 248.181, -15.5729, 0.59 ) }
    dend_23 { pt3dadd( 11.0511, 248.654, -15.6221, 1.11 ) }
    dend_23 { pt3dadd( 11.0588, 248.736, -15.6319, 1.11 ) }
    dend_23 { pt3dadd( 11.1117, 249.208, -15.6868, 1.55 ) }
    dend_23 { pt3dadd( 11.169, 249.724, -15.7458, 1.55 ) }
    dend_23 { pt3dadd( 11.1742, 249.772, -15.7512, 1.55 ) }
    dend_23 { pt3dadd( 11.3223, 251.383, -15.9189, 0.22 ) }
    dend_23 { pt3dadd( 11.4294, 252.549, -16.029, 0.22 ) }
    dend_23 { pt3dadd( 11.5361, 253.358, -16.09, 1.4 ) }
    dend_23 { pt3dadd( 11.5658, 253.543, -16.1008, 1.77 ) }
    dend_23 { pt3dadd( 11.6591, 254.079, -16.1252, 1.4 ) }
    dend_23 { pt3dadd( 11.7938, 254.725, -16.1398, 0.74 ) }
    dend_23 { pt3dadd( 12.0068, 255.571, -16.1349, 0.29 ) }
    dend_23 { pt3dadd( 12.4439, 257.083, -16.114, 0.22 ) }
    dend_23 { pt3dadd( 12.6317, 257.684, -16.1025, 0.66 ) }
    dend_23 { pt3dadd( 12.7285, 257.971, -16.096, 0.66 ) }
    dend_23 { pt3dadd( 13.0008, 258.7, -16.0729, 0.22 ) }
    dend_23 { pt3dadd( 13.022, 258.756, -16.0694, 0.22 ) }
    dend_23 { pt3dadd( 13.1853, 259.238, -16.0253, 0.52 ) }
    dend_23 { pt3dadd( 13.202, 259.302, -16.0176, 0.52 ) }
    dend_23 { pt3dadd( 13.2756, 259.596, -15.9776, 0.52 ) }
    dend_23 { pt3dadd( 13.3819, 260.007, -15.8888, 0.22 ) }
    dend_23 { pt3dadd( 13.5932, 260.769, -15.6736, 1.03 ) }
    dend_23 { pt3dadd( 13.7244, 261.166, -15.5345, 1.62 ) }
    dend_23 { pt3dadd( 13.8442, 261.514, -15.4025, 1.47 ) }
    dend_23 { pt3dadd( 14.0127, 262.016, -15.1988, 1.33 ) }
    dend_23 { pt3dadd( 14.3944, 263.223, -14.6622, 0.22 ) }
    dend_23 { pt3dadd( 14.6377, 264.005, -14.2948, 1.18 ) }
    dend_23 { pt3dadd( 14.9564, 264.983, -13.818, 0.22 ) }
    dend_23 { pt3dadd( 15.0907, 265.395, -13.6089, 0.22 ) }
    dend_23 { pt3dadd( 15.2728, 265.952, -13.3192, 0.81 ) }
    dend_23 { pt3dadd( 15.6669, 267.139, -12.7012, 0.22 ) }
    dend_23 { pt3dadd( 15.682, 267.19, -12.6762, 0.22 ) }
    dend_23 { pt3dadd( 15.7804, 267.569, -12.4919, 0.81 ) }
    dend_23 { pt3dadd( 15.7925, 267.621, -12.4678, 0.81 ) }
    dend_23 { pt3dadd( 15.8622, 267.847, -12.3557, 1.11 ) }
    dend_23 { pt3dadd( 16.0139, 268.196, -12.211, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 65/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -21.6043, -36.6121, 18.9143, 0.29 ) }
    dend_18 { pt3dadd( -22.222, -36.6466, 19.3837, 0.29 ) }
    dend_18 { pt3dadd( -22.9049, -36.6955, 20.043, 0.29 ) }
    dend_18 { pt3dadd( -23.2422, -36.7534, 20.3473, 0.59 ) }
    dend_18 { pt3dadd( -23.7952, -36.9204, 20.7858, 0.59 ) }
    dend_18 { pt3dadd( -23.8522, -36.9426, 20.8225, 0.59 ) }
    dend_18 { pt3dadd( -24.8068, -37.3591, 21.3585, 0.59 ) }
    dend_18 { pt3dadd( -24.8386, -37.3756, 21.3795, 0.59 ) }
    dend_18 { pt3dadd( -25.2637, -37.6514, 21.7356, 0.37 ) }
    dend_18 { pt3dadd( -25.6062, -37.9149, 22.0333, 0.29 ) }
    dend_18 { pt3dadd( -25.9124, -38.1669, 22.2859, 0.29 ) }
    dend_18 { pt3dadd( -25.9351, -38.1865, 22.3048, 0.29 ) }
    dend_18 { pt3dadd( -26.4967, -38.7288, 22.7868, 0.74 ) }
    dend_18 { pt3dadd( -26.6296, -38.8748, 22.9384, 1.03 ) }
    dend_18 { pt3dadd( -26.9208, -39.2722, 23.391, 0.29 ) }
    dend_18 { pt3dadd( -26.9513, -39.3197, 23.443, 0.29 ) }
    dend_18 { pt3dadd( -27.1333, -39.6274, 23.7448, 0.37 ) }
    dend_18 { pt3dadd( -27.2733, -39.857, 23.9349, 0.52 ) }
    dend_18 { pt3dadd( -27.3954, -40.0509, 24.0493, 0.52 ) }
    dend_18 { pt3dadd( -27.6955, -40.3718, 24.2144, 0.29 ) }
    dend_18 { pt3dadd( -28.0972, -40.6219, 24.3392, 0.29 ) }
    dend_18 { pt3dadd( -28.3423, -40.7174, 24.3994, 0.59 ) }
    dend_18 { pt3dadd( -28.5182, -40.761, 24.4358, 0.88 ) }
    dend_18 { pt3dadd( -28.6965, -40.7978, 24.4691, 1.03 ) }
    dend_18 { pt3dadd( -29.5258, -40.9682, 24.661, 0.29 ) }
    dend_18 { pt3dadd( -30.0274, -41.0701, 24.8045, 0.44 ) }
    dend_18 { pt3dadd( -30.3156, -41.1521, 24.9102, 0.74 ) }
    dend_18 { pt3dadd( -30.3679, -41.175, 24.9321, 0.74 ) }
    dend_18 { pt3dadd( -30.671, -41.3324, 25.0716, 0.66 ) }
    dend_18 { pt3dadd( -31.1681, -41.6496, 25.3359, 0.66 ) }
    dend_18 { pt3dadd( -31.1953, -41.6743, 25.3548, 0.66 ) }
    dend_18 { pt3dadd( -31.4052, -41.8938, 25.5039, 0.29 ) }
    dend_18 { pt3dadd( -31.8276, -42.3795, 25.8295, 0.22 ) }
    dend_18 { pt3dadd( -35.6505, -45.1556, 29.4127, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -21.6043, -36.6121, 18.9143, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( -21.9083, -36.0987, 20.2495, 0.74 ) }
    dend_15 { pt3dadd( -22.3593, -35.4206, 21.8017, 0.66 ) }
    dend_15 { pt3dadd( -22.388, -35.3776, 21.9003, 0.66 ) }
    dend_15 { pt3dadd( -22.5215, -35.1768, 22.3599, 0.66 ) }
    dend_15 { pt3dadd( -22.5374, -35.153, 22.4144, 0.66 ) }
    dend_15 { pt3dadd( -22.6394, -34.9996, 22.7656, 0.52 ) }
    dend_15 { pt3dadd( -22.7461, -34.7883, 23.0001, 0.52 ) }
    dend_15 { pt3dadd( -25.5943, -31.8378, 30.4116, 0.52 ) }
    dend_15 { pt3dadd( -27.7299, -28.2104, 37.7441, 0.52 ) }
    dend_15 { pt3dadd( -29.4045, -26.1226, 45.7951, 0.52 ) }
    dend_15 { pt3dadd( -29.4454, -23.3304, 53.7924, 0.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 11/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -7.29874, -23.5944, 1.01831, 0.96 ) }
    dend_7 { pt3dadd( -7.76474, -24.6877, 1.04835, 0.96 ) }
    dend_7 { pt3dadd( -8.1767, -25.7776, 1.07326, 0.96 ) }
    dend_7 { pt3dadd( -8.21409, -25.9019, 1.0754, 0.96 ) }
    dend_7 { pt3dadd( -8.3699, -26.5415, 1.06312, 0.96 ) }
    dend_7 { pt3dadd( -8.60666, -27.6399, 1.02344, 1.11 ) }
    dend_7 { pt3dadd( -8.85428, -28.9538, 0.922047, 1.11 ) }
    dend_7 { pt3dadd( -8.86122, -29.0169, 0.915829, 1.11 ) }
    dend_7 { pt3dadd( -8.95313, -30.3269, 0.763624, 1.03 ) }
    dend_7 { pt3dadd( -9.00549, -31.2724, 0.639593, 1.99 ) }
    dend_7 { pt3dadd( -9.00715, -31.3353, 0.629324, 1.99 ) }
    dend_7 { pt3dadd( -9.00606, -32.2017, 0.433088, 2.87 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 23/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -7.29874, -23.5944, 1.01831, 1.92 ) }
    dend_2 { pt3dadd( -7.09691, -24.6316, 1.12559, 1.92 ) }
    dend_2 { pt3dadd( -6.90844, -25.5652, 1.21729, 1.92 ) }
    dend_2 { pt3dadd( -6.73343, -26.4144, 1.29657, 1.92 ) }
    dend_2 { pt3dadd( -6.57567, -27.2013, 1.36578, 2.14 ) }
    dend_2 { pt3dadd( -6.42137, -27.9396, 1.4277, 1.62 ) }
    dend_2 { pt3dadd( -6.25408, -28.6798, 1.48573, 1.99 ) }
    dend_2 { pt3dadd( -6.12494, -29.1771, 1.51297, 2.73 ) }
    dend_2 { pt3dadd( -5.9584, -29.7299, 1.54475, 2.36 ) }
    dend_2 { pt3dadd( -5.74839, -30.3429, 1.60081, 1.99 ) }
    dend_2 { pt3dadd( -5.4439, -31.1412, 1.69969, 1.92 ) }
    dend_2 { pt3dadd( -5.24178, -31.6159, 1.7736, 2.28 ) }
    dend_2 { pt3dadd( -5.03034, -32.0914, 1.87069, 2.5 ) }
    dend_2 { pt3dadd( -4.82929, -32.5453, 1.9873, 2.58 ) }
    dend_2 { pt3dadd( -4.51869, -33.2814, 2.23173, 1.69 ) }
    dend_2 { pt3dadd( -4.50794, -33.3088, 2.2423, 1.69 ) }
    dend_2 { pt3dadd( -4.30431, -33.9626, 2.5067, 1.47 ) }
    dend_2 { pt3dadd( -4.09919, -34.8813, 2.87647, 1.25 ) }
    dend_2 { pt3dadd( -4.02882, -35.3972, 3.07458, 1.62 ) }
    dend_2 { pt3dadd( -3.99969, -35.944, 3.26469, 1.62 ) }
    dend_2 { pt3dadd( -4.01444, -36.5317, 3.43855, 1.25 ) }
    dend_2 { pt3dadd( -4.08308, -37.2047, 3.61497, 1.25 ) }
    dend_2 { pt3dadd( -4.22741, -37.8585, 3.75433, 1.77 ) }
    dend_2 { pt3dadd( -4.35147, -38.2227, 3.80323, 1.92 ) }
    dend_2 { pt3dadd( -4.51838, -38.6341, 3.83242, 1.92 ) }
    dend_2 { pt3dadd( -4.70087, -39.0324, 3.84268, 2.06 ) }
    dend_2 { pt3dadd( -4.94418, -39.5108, 3.84802, 1.92 ) }
    dend_2 { pt3dadd( -5.26295, -40.1137, 3.84654, 1.77 ) }
    dend_2 { pt3dadd( -5.60351, -40.7607, 3.83645, 1.55 ) }
    dend_2 { pt3dadd( -6.00848, -41.5484, 3.82503, 1.4 ) }
    dend_2 { pt3dadd( -6.32127, -42.1781, 3.83279, 1.4 ) }
    dend_2 { pt3dadd( -6.57092, -42.7227, 3.85304, 1.84 ) }
    dend_2 { pt3dadd( -6.73719, -43.1497, 3.89132, 1.77 ) }
    dend_2 { pt3dadd( -6.90897, -43.7311, 3.97487, 1.25 ) }
    dend_2 { pt3dadd( -6.91641, -43.7716, 3.98271, 1.25 ) }
    dend_2 { pt3dadd( -6.98305, -44.5291, 4.16426, 0.88 ) }
    dend_2 { pt3dadd( -6.97441, -44.8964, 4.2602, 1.62 ) }
    dend_2 { pt3dadd( -6.90015, -45.5589, 4.43137, 1.92 ) }
    dend_2 { pt3dadd( -6.80474, -46.1387, 4.56878, 1.92 ) }
    dend_2 { pt3dadd( -6.70815, -46.6858, 4.68019, 1.77 ) }
    dend_2 { pt3dadd( -6.70238, -46.7216, 4.68586, 1.77 ) }
    dend_2 { pt3dadd( -6.59, -47.4722, 4.76809, 1.62 ) }
    dend_2 { pt3dadd( -6.51765, -48.0776, 4.80054, 1.33 ) }
    dend_2 { pt3dadd( -6.4619, -48.6467, 4.80154, 1.18 ) }
    dend_2 { pt3dadd( -6.41889, -49.19, 4.79225, 1.18 ) }
    dend_2 { pt3dadd( -6.37991, -49.8061, 4.77171, 1.55 ) }
    dend_2 { pt3dadd( -6.35825, -50.5643, 4.72708, 1.62 ) }
    dend_2 { pt3dadd( -6.37138, -51.2244, 4.67247, 2.14 ) }
    dend_2 { pt3dadd( -6.40042, -51.7244, 4.626, 2.36 ) }
    dend_2 { pt3dadd( -6.43878, -52.1979, 4.58011, 2.58 ) }
    dend_2 { pt3dadd( -6.46967, -52.5498, 4.54881, 3.02 ) }
    dend_2 { pt3dadd( -6.54395, -53.3918, 4.49867, 2.21 ) }
    dend_2 { pt3dadd( -6.59743, -54.1349, 4.4775, 1.77 ) }
    dend_2 { pt3dadd( -6.6324, -54.8069, 4.47995, 1.77 ) }
    dend_2 { pt3dadd( -6.64831, -55.5526, 4.51098, 1.84 ) }
    dend_2 { pt3dadd( -6.62875, -56.4263, 4.60479, 1.84 ) }
    dend_2 { pt3dadd( -6.56914, -57.309, 4.75639, 1.18 ) }
    dend_2 { pt3dadd( -6.45338, -58.223, 4.97643, 0.96 ) }
    dend_2 { pt3dadd( -6.44736, -58.2583, 4.98875, 0.96 ) }
    dend_2 { pt3dadd( -6.31892, -58.861, 5.29232, 1.33 ) }
    dend_2 { pt3dadd( -6.16777, -59.4604, 5.67386, 1.84 ) }
    dend_2 { pt3dadd( -6.0525, -59.9236, 6.00639, 1.84 ) }
    dend_2 { pt3dadd( -5.9504, -60.3771, 6.33018, 1.77 ) }
    dend_2 { pt3dadd( -5.79521, -61.2142, 6.87355, 1.69 ) }
    dend_2 { pt3dadd( -5.67756, -62.0197, 7.29278, 0.74 ) }
    dend_2 { pt3dadd( -5.63268, -62.4895, 7.46857, 0.74 ) }
    dend_2 { pt3dadd( -5.5954, -63.0804, 7.62084, 1.18 ) }
    dend_2 { pt3dadd( -5.57417, -63.6417, 7.70373, 1.47 ) }
    dend_2 { pt3dadd( -5.57219, -64.1944, 7.69774, 1.62 ) }
    dend_2 { pt3dadd( -5.58586, -64.6082, 7.61799, 1.92 ) }
    dend_2 { pt3dadd( -5.61095, -64.938, 7.52993, 1.92 ) }
    dend_2 { pt3dadd( -5.614, -64.9681, 7.52228, 1.92 ) }
    dend_2 { pt3dadd( -5.66016, -65.3655, 7.43622, 1.92 ) }
    dend_2 { pt3dadd( -5.73962, -65.9403, 7.34652, 1.33 ) }
    dend_2 { pt3dadd( -5.83876, -66.5074, 7.27275, 1.47 ) }
    dend_2 { pt3dadd( -5.94483, -67.0828, 7.20649, 1.92 ) }
    dend_2 { pt3dadd( -6.01624, -67.5066, 7.16277, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( -6.10104, -68.0763, 7.11435, 1.99 ) }
    dend_2 { pt3dadd( -6.17663, -68.7856, 7.07064, 1.99 ) }
    dend_2 { pt3dadd( -6.22259, -69.604, 7.03497, 1.99 ) }
    dend_2 { pt3dadd( -6.22304, -69.7985, 7.03168, 2.36 ) }
    dend_2 { pt3dadd( -6.20828, -70.2625, 7.02479, 1.62 ) }
    dend_2 { pt3dadd( -6.17852, -70.7532, 7.02016, 1.25 ) }
    dend_2 { pt3dadd( -6.12633, -71.3629, 7.01663, 1.11 ) }
    dend_2 { pt3dadd( -6.08668, -71.8783, 7.01451, 0.81 ) }
    dend_2 { pt3dadd( -6.05036, -72.5497, 7.01961, 0.66 ) }
    dend_2 { pt3dadd( -6.05213, -73.1305, 7.02508, 1.55 ) }
    dend_2 { pt3dadd( -6.05398, -73.1682, 7.02555, 1.55 ) }
    dend_2 { pt3dadd( -6.0812, -73.4776, 7.05344, 2.21 ) }
    dend_2 { pt3dadd( -6.13351, -73.9108, 7.11906, 1.92 ) }
    dend_2 { pt3dadd( -6.20345, -74.4808, 7.23048, 1.62 ) }
    dend_2 { pt3dadd( -6.26693, -75.0086, 7.35353, 1.4 ) }
    dend_2 { pt3dadd( -6.32458, -75.5916, 7.53958, 1.4 ) }
    dend_2 { pt3dadd( -6.40654, -76.5085, 7.8796, 1.33 ) }
    dend_2 { pt3dadd( -6.43265, -76.9594, 8.06456, 0.96 ) }
    dend_2 { pt3dadd( -6.43935, -77.6386, 8.36181, 0.74 ) }
    dend_2 { pt3dadd( -6.43765, -77.6794, 8.38163, 0.74 ) }
    dend_2 { pt3dadd( -6.33414, -78.6068, 8.86382, 0.66 ) }
    dend_2 { pt3dadd( -6.32606, -78.6374, 8.88222, 0.66 ) }
    dend_2 { pt3dadd( -6.08145, -79.2498, 9.25989, 1.69 ) }
    dend_2 { pt3dadd( -5.92969, -79.5899, 9.47632, 2.21 ) }
    dend_2 { pt3dadd( -5.69693, -80.1225, 9.80352, 3.02 ) }
    dend_2 { pt3dadd( -5.56165, -80.4719, 9.99682, 3.02 ) }
    dend_2 { pt3dadd( -5.19769, -81.5944, 10.5254, 0.52 ) }
    dend_2 { pt3dadd( -5.10819, -82.0175, 10.6837, 0.52 ) }
    dend_2 { pt3dadd( -5.05807, -82.5475, 10.8301, 2.36 ) }
    dend_2 { pt3dadd( -5.0584, -83.0503, 10.9163, 3.09 ) }
    dend_2 { pt3dadd( -5.07892, -83.2929, 10.9324, 3.24 ) }
    dend_2 { pt3dadd( -5.15095, -83.7866, 10.9357, 3.02 ) }
    dend_2 { pt3dadd( -5.36761, -84.8791, 10.8753, 1.11 ) }
    dend_2 { pt3dadd( -5.47084, -85.4509, 10.8456, 0.96 ) }
    dend_2 { pt3dadd( -5.53225, -85.8719, 10.8252, 1.25 ) }
    dend_2 { pt3dadd( -5.59018, -86.4494, 10.8149, 1.18 ) }
    dend_2 { pt3dadd( -5.6134, -86.885, 10.8233, 0.52 ) }
    dend_2 { pt3dadd( -5.61301, -86.9227, 10.826, 0.52 ) }
    dend_2 { pt3dadd( -5.55882, -87.3271, 10.893, 1.4 ) }
    dend_2 { pt3dadd( -5.55079, -87.3567, 10.8987, 1.4 ) }
    dend_2 { pt3dadd( -5.34724, -87.8523, 10.995, 2.14 ) }
    dend_2 { pt3dadd( -5.1855, -88.1969, 11.0554, 2.14 ) }
    dend_2 { pt3dadd( -5.07148, -88.4474, 11.0901, 2.36 ) }
    dend_2 { pt3dadd( -4.87633, -88.9184, 11.1435, 1.33 ) }
    dend_2 { pt3dadd( -4.66594, -89.4903, 11.1838, 0.81 ) }
    dend_2 { pt3dadd( -4.44082, -90.2146, 11.1986, 0.81 ) }
    dend_2 { pt3dadd( -4.26855, -90.9186, 11.1805, 0.81 ) }
    dend_2 { pt3dadd( -4.12212, -91.6677, 11.1584, 1.62 ) }
    dend_2 { pt3dadd( -4.05669, -92.0696, 11.1468, 1.92 ) }
    dend_2 { pt3dadd( -3.97185, -92.6885, 11.1542, 1.25 ) }
    dend_2 { pt3dadd( -3.90027, -93.2819, 11.1826, 0.96 ) }
    dend_2 { pt3dadd( -3.80911, -94.0839, 11.2481, 0.96 ) }
    dend_2 { pt3dadd( -3.70996, -94.7773, 11.3324, 0.88 ) }
    dend_2 { pt3dadd( -3.58774, -95.4846, 11.4537, 1.62 ) }
    dend_2 { pt3dadd( -3.41727, -96.2946, 11.6228, 1.84 ) }
    dend_2 { pt3dadd( -3.31944, -96.7307, 11.7543, 1.92 ) }
    dend_2 { pt3dadd( -3.31089, -96.7692, 11.7689, 1.92 ) }
    dend_2 { pt3dadd( -3.18758, -97.3418, 12.0118, 1.62 ) }
    dend_2 { pt3dadd( -3.0513, -98.0512, 12.3197, 0.59 ) }
    dend_2 { pt3dadd( -2.95625, -98.6048, 12.5562, 0.59 ) }
    dend_2 { pt3dadd( -2.81597, -99.4381, 12.8734, 0.52 ) }
    dend_2 { pt3dadd( -2.72519, -99.9897, 13.0942, 1.69 ) }
    dend_2 { pt3dadd( -2.66953, -100.347, 13.2411, 2.5 ) }
    dend_2 { pt3dadd( -2.62946, -100.661, 13.3783, 2.5 ) }
    dend_2 { pt3dadd( -2.58049, -101.038, 13.5434, 2.5 ) }
    dend_2 { pt3dadd( -2.50229, -101.608, 13.7634, 1.77 ) }
    // Section: dend_67, id: dend_67, parent: dend_27 (entry count 66/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -9.31597, 115.222, -21.9705, 0.59 ) }
    dend_67 { pt3dadd( -10.2042, 116.08, -22.3878, 0.59 ) }
    dend_67 { pt3dadd( -10.8875, 116.86, -22.8072, 0.44 ) }
    dend_67 { pt3dadd( -10.9518, 116.983, -23.4443, 0.74 ) }
    dend_67 { pt3dadd( -11.041, 117.189, -24.443, 0.74 ) }
    dend_67 { pt3dadd( -11.0598, 117.221, -24.5939, 0.74 ) }
    dend_67 { pt3dadd( -11.186, 117.401, -25.3527, 0.88 ) }
    dend_67 { pt3dadd( -11.1967, 117.416, -25.4203, 0.88 ) }
    dend_67 { pt3dadd( -12.1151, 118.643, -30.8132, 1.62 ) }
    dend_67 { pt3dadd( -12.4343, 118.989, -32.3291, 1.4 ) }
    dend_67 { pt3dadd( -12.8431, 119.331, -33.8861, 0.37 ) }
    dend_67 { pt3dadd( -13.1063, 119.515, -34.7215, 0.74 ) }
    dend_67 { pt3dadd( -13.762, 119.917, -36.4413, 0.29 ) }
    dend_67 { pt3dadd( -14.0563, 120.101, -37.0499, 1.4 ) }
    dend_67 { pt3dadd( -14.3966, 120.316, -37.5295, 1.84 ) }
    dend_67 { pt3dadd( -15.5918, 121.024, -39.3308, 0.44 ) }
    dend_67 { pt3dadd( -15.7832, 121.15, -39.6415, 0.29 ) }
    dend_67 { pt3dadd( -16.0954, 121.351, -40.1627, 0.29 ) }
    dend_67 { pt3dadd( -16.3975, 121.546, -40.6478, 0.59 ) }
    dend_67 { pt3dadd( -17.44, 122.261, -42.3881, 0.44 ) }
    dend_67 { pt3dadd( -17.7932, 122.542, -42.949, 0.22 ) }
    dend_67 { pt3dadd( -18.0675, 122.794, -43.3373, 0.74 ) }
    dend_67 { pt3dadd( -18.5244, 123.247, -44.0459, 0.15 ) }
    dend_67 { pt3dadd( -18.5964, 123.32, -44.159, 0.15 ) }
    dend_67 { pt3dadd( -18.7669, 123.501, -44.4125, 0.15 ) }
    dend_67 { pt3dadd( -19.3985, 124.227, -45.2318, 1.47 ) }
    dend_67 { pt3dadd( -19.7247, 124.604, -45.6357, 1.62 ) }
    dend_67 { pt3dadd( -20.9524, 125.975, -47.2029, 0.22 ) }
    dend_67 { pt3dadd( -20.9886, 126.016, -47.2505, 0.22 ) }
    dend_67 { pt3dadd( -21.4401, 126.491, -47.8343, 0.22 ) }
    dend_67 { pt3dadd( -22.0381, 127.082, -48.5939, 1.25 ) }
    dend_67 { pt3dadd( -22.3204, 127.364, -48.9952, 1.4 ) }
    dend_67 { pt3dadd( -23.1783, 128.256, -50.2716, 0.22 ) }
    dend_67 { pt3dadd( -23.2316, 128.317, -50.3593, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_67 { pt3dadd( -23.9078, 129.173, -51.619, 1.47 ) }
    dend_67 { pt3dadd( -24.1011, 129.442, -52.0054, 1.99 ) }
    dend_67 { pt3dadd( -25.0557, 130.968, -54.0384, 0.37 ) }
    dend_67 { pt3dadd( -25.2818, 131.378, -54.5375, 0.29 ) }
    dend_67 { pt3dadd( -25.6354, 132.093, -55.3194, 1.18 ) }
    dend_67 { pt3dadd( -26.0166, 132.922, -56.1585, 0.52 ) }
    dend_67 { pt3dadd( -26.3301, 133.72, -56.8745, 1.55 ) }
    dend_67 { pt3dadd( -26.4327, 134.009, -57.1045, 1.84 ) }
    dend_67 { pt3dadd( -26.9877, 135.753, -58.2114, 0.22 ) }
    dend_67 { pt3dadd( -27.0026, 135.81, -58.2468, 0.22 ) }
    dend_67 { pt3dadd( -27.0984, 136.328, -58.5304, 0.22 ) }
    dend_67 { pt3dadd( -27.1252, 136.95, -58.8414, 1.4 ) }
    dend_67 { pt3dadd( -27.122, 137.021, -58.8761, 1.4 ) }
    dend_67 { pt3dadd( -27.0881, 137.424, -59.0538, 1.4 ) }
    dend_67 { pt3dadd( -26.8712, 138.944, -59.7063, 0.15 ) }
    dend_67 { pt3dadd( -26.7784, 139.584, -60.0047, 0.74 ) }
    dend_67 { pt3dadd( -26.5509, 141.064, -60.744, 0.15 ) }
    dend_67 { pt3dadd( -26.465, 141.581, -61.014, 0.74 ) }
    dend_67 { pt3dadd( -26.4135, 141.839, -61.1497, 0.88 ) }
    dend_67 { pt3dadd( -26.0887, 143.127, -61.8173, 0.15 ) }
    dend_67 { pt3dadd( -26.0722, 143.176, -61.8459, 0.15 ) }
    dend_67 { pt3dadd( -25.9246, 143.548, -62.0973, 0.37 ) }
    dend_67 { pt3dadd( -25.8736, 143.63, -62.2018, 0.37 ) }
    dend_67 { pt3dadd( -25.5432, 143.983, -62.9209, 0.22 ) }
    dend_67 { pt3dadd( -25.2621, 144.24, -63.5401, 0.59 ) }
    dend_67 { pt3dadd( -24.5055, 144.783, -65.2321, 1.69 ) }
    dend_67 { pt3dadd( -24.424, 144.835, -65.4231, 1.69 ) }
    dend_67 { pt3dadd( -23.1814, 145.432, -68.5684, 0.22 ) }
    dend_67 { pt3dadd( -22.9522, 145.501, -69.1898, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -9.31597, 115.222, -21.9705, 2.65 ) }
    dend_28 { pt3dadd( -9.22988, 116.067, -21.4791, 2.65 ) }
    dend_28 { pt3dadd( -9.19664, 117.029, -21.0326, 2.06 ) }
    dend_28 { pt3dadd( -9.21274, 118.738, -20.3634, 1.92 ) }
    dend_28 { pt3dadd( -9.2148, 118.792, -20.3444, 1.92 ) }
    dend_28 { pt3dadd( -9.28853, 119.775, -20.0367, 0.74 ) }
    dend_28 { pt3dadd( -9.422, 121.203, -19.6229, 0.52 ) }
    dend_28 { pt3dadd( -9.60082, 122.331, -19.3396, 0.52 ) }
    dend_28 { pt3dadd( -9.70538, 122.869, -19.2497, 0.52 ) }
    dend_28 { pt3dadd( -9.74853, 123.095, -19.2417, 0.52 ) }
    dend_28 { pt3dadd( -9.86246, 123.806, -19.2305, 0.52 ) }
    dend_28 { pt3dadd( -9.87517, 123.916, -19.2312, 0.52 ) }
    dend_28 { pt3dadd( -9.91389, 124.732, -19.2557, 0.44 ) }
    dend_28 { pt3dadd( -9.91832, 125.38, -19.2473, 0.44 ) }
    dend_28 { pt3dadd( -9.8812, 126.615, -19.2187, 1.84 ) }
    dend_28 { pt3dadd( -9.83731, 127.626, -19.1605, 2.73 ) }
    dend_28 { pt3dadd( -9.81032, 128.165, -19.1144, 3.54 ) }
    dend_28 { pt3dadd( -9.78118, 128.874, -19.0389, 3.9 ) }
    dend_28 { pt3dadd( -9.76612, 129.441, -18.9655, 4.05 ) }
    dend_28 { pt3dadd( -9.76726, 129.975, -18.8992, 3.9 ) }
    dend_28 { pt3dadd( -9.80913, 130.961, -18.789, 3.61 ) }
    dend_28 { pt3dadd( -9.87608, 131.651, -18.7128, 2.8 ) }
    dend_28 { pt3dadd( -9.97881, 132.425, -18.6356, 1.69 ) }
    dend_28 { pt3dadd( -10.1125, 133.334, -18.5471, 1.11 ) }
    dend_28 { pt3dadd( -10.2776, 134.356, -18.4559, 0.81 ) }
    dend_28 { pt3dadd( -10.3764, 134.913, -18.4161, 0.66 ) }
    dend_28 { pt3dadd( -10.5917, 136.089, -18.3757, 0.52 ) }
    dend_28 { pt3dadd( -10.8012, 137.117, -18.3374, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 57/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -35.6505, -45.1556, 29.4127, 0.37 ) }
    dend_20 { pt3dadd( -41.8224, -49.0403, 34.519, 0.37 ) }
    dend_20 { pt3dadd( -46.6872, -54.5804, 39.4345, 0.37 ) }
    dend_20 { pt3dadd( -51.9727, -58.8605, 45.1703, 0.37 ) }
    dend_20 { pt3dadd( -55.7273, -63.2434, 51.9456, 0.37 ) }
    dend_20 { pt3dadd( -61.2256, -67.4133, 57.5642, 0.37 ) }
    dend_20 { pt3dadd( -66.6361, -71.1774, 63.5576, 0.37 ) }
    dend_20 { pt3dadd( -71.7909, -76.6133, 68.2939, 0.37 ) }
    dend_20 { pt3dadd( -78.581, -80.6589, 72.3746, 0.37 ) }
    dend_20 { pt3dadd( -86.7723, -82.8454, 75.1659, 0.37 ) }
    dend_20 { pt3dadd( -95.1594, -85.1561, 77.1474, 0.37 ) }
    dend_20 { pt3dadd( -103.429, -86.079, 80.4148, 0.37 ) }
    dend_20 { pt3dadd( -111.756, -86.7426, 83.606, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 70/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -35.6505, -45.1556, 29.4127, 0.29 ) }
    dend_19 { pt3dadd( -41.883, -48.9709, 34.2008, 0.37 ) }
    dend_19 { pt3dadd( -47.2534, -53.2919, 39.5513, 0.37 ) }
    dend_19 { pt3dadd( -52.9222, -58.449, 43.6711, 0.37 ) }
    dend_19 { pt3dadd( -58.7908, -64.0709, 46.7313, 0.37 ) }
    dend_19 { pt3dadd( -64.7685, -69.82, 49.2874, 0.37 ) }
    dend_19 { pt3dadd( -70.1077, -75.5628, 53.0134, 0.37 ) }
    dend_19 { pt3dadd( -74.9291, -82.059, 56.0852, 0.37 ) }
    dend_19 { pt3dadd( -79.5143, -89.172, 57.7523, 0.37 ) }
    dend_19 { pt3dadd( -85.6507, -95.2431, 58.4862, 0.37 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 80/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -29.4454, -23.3304, 53.7924, 0.37 ) }
    dend_17 { pt3dadd( -29.8782, -20.5673, 64.1525, 0.37 ) }
    dend_17 { pt3dadd( -31.149, -17.4818, 74.3518, 0.37 ) }
    dend_17 { pt3dadd( -33.0463, -12.7905, 83.7845, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 84/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -29.4454, -23.3304, 53.7924, 0.29 ) }
    dend_16 { pt3dadd( -29.2159, -21.7043, 61.9009, 0.37 ) }
    dend_16 { pt3dadd( -28.5494, -19.7336, 69.9008, 0.37 ) }
    dend_16 { pt3dadd( -26.7829, -19.3512, 77.9873, 0.37 ) }
    dend_16 { pt3dadd( -24.7725, -19.9558, 86.0104, 0.37 ) }
    dend_16 { pt3dadd( -23.4791, -21.3431, 94.0859, 0.37 ) }
    dend_16 { pt3dadd( -22.9867, -22.1059, 102.331, 0.37 ) }
    dend_16 { pt3dadd( -23.0431, -22.6685, 110.606, 0.37 ) }
    dend_16 { pt3dadd( -22.9097, -23.0823, 118.889, 0.37 ) }
    dend_16 { pt3dadd( -23.1352, -22.273, 127.131, 0.37 ) }
    dend_16 { pt3dadd( -23.5458, -21.384, 135.358, 0.37 ) }
    dend_16 { pt3dadd( -23.4086, -20.6087, 143.605, 0.37 ) }
    dend_16 { pt3dadd( -22.7131, -20.9864, 151.86, 0.37 ) }
    dend_16 { pt3dadd( -22.1298, -20.8066, 160.128, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_7 (entry count 98/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -9.00606, -32.2017, 0.433088, 0.59 ) }
    dend_13 { pt3dadd( -9.40138, -32.6175, 0.143046, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_13 { pt3dadd( -10.0989, -33.1459, -0.276318, 0.44 ) }
    dend_13 { pt3dadd( -10.8883, -33.5381, -0.743419, 0.29 ) }
    dend_13 { pt3dadd( -11.3232, -33.6972, -0.970913, 0.22 ) }
    dend_13 { pt3dadd( -11.8638, -33.8798, -1.23356, 0.29 ) }
    dend_13 { pt3dadd( -12.5157, -34.0981, -1.53227, 0.29 ) }
    dend_13 { pt3dadd( -13.3441, -34.336, -1.85712, 0.29 ) }
    dend_13 { pt3dadd( -14.2892, -34.5967, -2.21742, 0.29 ) }
    dend_13 { pt3dadd( -15.017, -34.8257, -2.50004, 0.29 ) }
    dend_13 { pt3dadd( -15.9586, -35.1966, -2.8924, 1.25 ) }
    dend_13 { pt3dadd( -16.2398, -35.3452, -3.01959, 1.77 ) }
    dend_13 { pt3dadd( -16.6638, -35.6439, -3.22974, 1.77 ) }
    dend_13 { pt3dadd( -17.8328, -36.6443, -3.83476, 1.11 ) }
    dend_13 { pt3dadd( -18.4693, -37.2908, -4.19138, 0.52 ) }
    dend_13 { pt3dadd( -18.9022, -37.7933, -4.49116, 0.37 ) }
    dend_13 { pt3dadd( -19.4439, -38.4949, -4.95574, 0.37 ) }
    dend_13 { pt3dadd( -19.8163, -39.0233, -5.32521, 0.37 ) }
    dend_13 { pt3dadd( -19.8774, -39.1133, -5.39034, 0.37 ) }
    dend_13 { pt3dadd( -20.3791, -39.8591, -5.925, 1.25 ) }
    dend_13 { pt3dadd( -20.7172, -40.3047, -6.29401, 1.18 ) }
    dend_13 { pt3dadd( -21.3621, -40.9888, -6.92309, 0.29 ) }
    dend_13 { pt3dadd( -21.6843, -41.2368, -7.1658, 0.22 ) }
    dend_13 { pt3dadd( -22.1421, -41.5363, -7.42893, 0.22 ) }
    dend_13 { pt3dadd( -22.5067, -41.7687, -7.5889, 0.44 ) }
    dend_13 { pt3dadd( -22.8863, -41.9965, -7.70187, 0.44 ) }
    dend_13 { pt3dadd( -23.2802, -42.2338, -7.7723, 0.29 ) }
    dend_13 { pt3dadd( -23.6883, -42.4699, -7.83413, 0.29 ) }
    dend_13 { pt3dadd( -24.294, -42.8207, -8.00545, 0.37 ) }
    dend_13 { pt3dadd( -24.7681, -43.1056, -8.17916, 0.37 ) }
    dend_13 { pt3dadd( -25.3112, -43.4075, -8.40887, 0.29 ) }
    dend_13 { pt3dadd( -26.2989, -43.8941, -8.87933, 1.18 ) }
    dend_13 { pt3dadd( -27.0288, -44.2328, -9.23627, 1.99 ) }
    dend_13 { pt3dadd( -27.7459, -44.5377, -9.58765, 2.28 ) }
    dend_13 { pt3dadd( -28.1904, -44.7182, -9.79777, 1.99 ) }
    dend_13 { pt3dadd( -29.3091, -45.2082, -10.3119, 0.59 ) }
    dend_13 { pt3dadd( -30.0454, -45.6045, -10.6395, 0.37 ) }
    dend_13 { pt3dadd( -30.5855, -46.001, -10.8898, 0.37 ) }
    dend_13 { pt3dadd( -31.1661, -46.4869, -11.1568, 1.11 ) }
    dend_13 { pt3dadd( -31.5673, -46.8384, -11.3295, 1.69 ) }
    dend_13 { pt3dadd( -31.9969, -47.2338, -11.5197, 1.84 ) }
    dend_13 { pt3dadd( -32.5663, -47.7764, -11.7564, 1.4 ) }
    dend_13 { pt3dadd( -33.5328, -48.6328, -12.112, 0.44 ) }
    dend_13 { pt3dadd( -34.05, -49.0453, -12.2955, 0.44 ) }
    dend_13 { pt3dadd( -34.6995, -49.5239, -12.5055, 0.37 ) }
    dend_13 { pt3dadd( -35.2753, -49.906, -12.6817, 1.18 ) }
    dend_13 { pt3dadd( -35.7761, -50.2274, -12.8277, 1.62 ) }
    dend_13 { pt3dadd( -36.2958, -50.5902, -12.9713, 1.03 ) }
    dend_13 { pt3dadd( -36.3469, -50.6339, -12.988, 1.03 ) }
    dend_13 { pt3dadd( -36.6054, -50.9167, -13.1043, 0.88 ) }
    dend_13 { pt3dadd( -37.0283, -51.4418, -13.3531, 0.44 ) }
    dend_13 { pt3dadd( -37.4669, -52.0028, -13.6385, 0.29 ) }
    dend_13 { pt3dadd( -37.8568, -52.5193, -13.9145, 0.29 ) }
    dend_13 { pt3dadd( -38.5614, -53.4625, -14.4319, 1.92 ) }
    dend_13 { pt3dadd( -39.0411, -54.1116, -14.7841, 2.73 ) }
    dend_13 { pt3dadd( -39.5261, -54.7753, -15.1513, 2.65 ) }
    dend_13 { pt3dadd( -40.4728, -56.0218, -15.85, 0.66 ) }
    dend_13 { pt3dadd( -40.5181, -56.0774, -15.8823, 0.66 ) }
    dend_13 { pt3dadd( -41.219, -56.8931, -16.3622, 0.29 ) }
    dend_13 { pt3dadd( -41.53, -57.2466, -16.5556, 0.29 ) }
    dend_13 { pt3dadd( -41.9154, -57.676, -16.7965, 0.29 ) }
    dend_13 { pt3dadd( -42.3645, -58.1887, -17.1252, 0.29 ) }
    dend_13 { pt3dadd( -42.7808, -58.6605, -17.4695, 1.11 ) }
    dend_13 { pt3dadd( -42.8258, -58.7128, -17.5076, 1.11 ) }
    dend_13 { pt3dadd( -43.1967, -59.1492, -17.8187, 1.25 ) }
    dend_13 { pt3dadd( -43.6718, -59.7106, -18.2042, 0.96 ) }
    dend_13 { pt3dadd( -44.4793, -60.7792, -18.8103, 0.37 ) }
    dend_13 { pt3dadd( -44.5139, -60.8318, -18.8381, 0.37 ) }
    dend_13 { pt3dadd( -44.8899, -61.425, -19.1278, 0.22 ) }
    dend_13 { pt3dadd( -45.1423, -61.8288, -19.3069, 0.22 ) }
    dend_13 { pt3dadd( -45.2173, -61.9424, -19.3596, 0.66 ) }
    dend_13 { pt3dadd( -45.7435, -62.7188, -19.6945, 0.52 ) }
    dend_13 { pt3dadd( -46.608, -63.972, -20.2152, 1.77 ) }
    dend_13 { pt3dadd( -47.2293, -64.862, -20.5859, 2.58 ) }
    dend_13 { pt3dadd( -47.7603, -65.6044, -20.8988, 2.58 ) }
    dend_13 { pt3dadd( -48.7893, -67.0219, -21.4867, 0.44 ) }
    dend_13 { pt3dadd( -49.3352, -67.7535, -21.773, 0.29 ) }
    dend_13 { pt3dadd( -49.3831, -67.8144, -21.7943, 0.29 ) }
    dend_13 { pt3dadd( -49.7475, -68.2728, -21.9105, 0.29 ) }
    dend_13 { pt3dadd( -50.2997, -68.9868, -22.0584, 1.47 ) }
    dend_13 { pt3dadd( -50.5949, -69.388, -22.1203, 1.84 ) }
    dend_13 { pt3dadd( -50.9476, -69.9471, -22.1641, 1.47 ) }
    dend_13 { pt3dadd( -51.7943, -71.4238, -22.2752, 0.29 ) }
    dend_13 { pt3dadd( -52.0878, -71.987, -22.3131, 1.11 ) }
    dend_13 { pt3dadd( -52.284, -72.3905, -22.3356, 1.25 ) }
    dend_13 { pt3dadd( -52.556, -72.9969, -22.3586, 1.03 ) }
    dend_13 { pt3dadd( -52.9267, -73.8566, -22.3835, 0.22 ) }
    dend_13 { pt3dadd( -53.1688, -74.4127, -22.3894, 0.22 ) }
    dend_13 { pt3dadd( -53.3205, -74.7565, -22.3827, 0.59 ) }
    dend_13 { pt3dadd( -53.5572, -75.2298, -22.3731, 0.74 ) }
    dend_13 { pt3dadd( -53.7217, -75.5112, -22.3762, 0.37 ) }
    dend_13 { pt3dadd( -54.0591, -76.0288, -22.3925, 0.22 ) }
    dend_13 { pt3dadd( -54.5591, -76.7271, -22.4221, 1.55 ) }
    dend_13 { pt3dadd( -55.0244, -77.3735, -22.4548, 2.21 ) }
    dend_13 { pt3dadd( -55.2889, -77.7399, -22.4731, 1.84 ) }
    dend_13 { pt3dadd( -56.1228, -78.8893, -22.5267, 0.22 ) }
    dend_13 { pt3dadd( -56.5523, -79.4701, -22.5506, 0.22 ) }
    dend_13 { pt3dadd( -57.0497, -80.1046, -22.5709, 1.11 ) }
    dend_13 { pt3dadd( -57.3444, -80.461, -22.5775, 1.62 ) }
    dend_13 { pt3dadd( -57.7128, -80.8809, -22.5752, 1.84 ) }
    dend_13 { pt3dadd( -58.2722, -81.5022, -22.5575, 1.11 ) }
    dend_13 { pt3dadd( -58.5886, -81.8501, -22.5404, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_13 { pt3dadd( -59.4215, -82.7648, -22.5026, 0.29 ) }
    dend_13 { pt3dadd( -59.8718, -83.2636, -22.4857, 0.59 ) }
    dend_13 { pt3dadd( -60.9268, -84.5029, -22.4356, 0.29 ) }
    dend_13 { pt3dadd( -60.9712, -84.558, -22.433, 0.29 ) }
    dend_13 { pt3dadd( -61.6808, -85.4814, -22.3847, 1.18 ) }
    dend_13 { pt3dadd( -61.951, -85.8477, -22.3628, 1.55 ) }
    dend_13 { pt3dadd( -62.201, -86.2184, -22.3374, 1.55 ) }
    dend_13 { pt3dadd( -62.8681, -87.267, -22.3162, 0.52 ) }
    dend_13 { pt3dadd( -63.4373, -88.2253, -22.3577, 0.37 ) }
    dend_13 { pt3dadd( -63.4716, -88.2867, -22.3642, 0.37 ) }
    dend_13 { pt3dadd( -63.8749, -89.0739, -22.4824, 0.37 ) }
    dend_13 { pt3dadd( -64.2022, -89.7404, -22.6026, 0.29 ) }
    dend_13 { pt3dadd( -64.8111, -91.024, -22.8725, 1.99 ) }
    dend_13 { pt3dadd( -65.0802, -91.6122, -23.0141, 2.28 ) }
    dend_13 { pt3dadd( -65.6915, -93.0289, -23.346, 0.22 ) }
    dend_13 { pt3dadd( -66.0566, -93.8543, -23.5191, 0.22 ) }
    dend_13 { pt3dadd( -66.2218, -94.2328, -23.572, 0.74 ) }
    dend_13 { pt3dadd( -66.2496, -94.2974, -23.5762, 0.74 ) }
    dend_13 { pt3dadd( -66.4889, -94.8814, -23.5671, 0.74 ) }
    dend_13 { pt3dadd( -66.8003, -95.6779, -23.5287, 0.22 ) }
    dend_13 { pt3dadd( -67.1637, -96.5793, -23.4751, 0.22 ) }
    dend_13 { pt3dadd( -67.7675, -98.0224, -23.3888, 2.14 ) }
    dend_13 { pt3dadd( -67.9045, -98.3492, -23.3705, 2.36 ) }
    dend_13 { pt3dadd( -68.4219, -99.533, -23.3045, 0.29 ) }
    dend_13 { pt3dadd( -68.6619, -100.051, -23.2685, 0.22 ) }
    dend_13 { pt3dadd( -68.996, -100.708, -23.2158, 0.22 ) }
    dend_13 { pt3dadd( -69.4117, -101.476, -23.1462, 1.4 ) }
    dend_13 { pt3dadd( -69.6439, -101.89, -23.1098, 1.77 ) }
    dend_13 { pt3dadd( -69.9682, -102.486, -23.0455, 1.33 ) }
    dend_13 { pt3dadd( -70.5003, -103.589, -22.9078, 0.37 ) }
    dend_13 { pt3dadd( -70.8442, -104.383, -22.8147, 0.22 ) }
    dend_13 { pt3dadd( -71.0459, -104.927, -22.7584, 0.22 ) }
    dend_13 { pt3dadd( -71.2813, -105.635, -22.7034, 0.81 ) }
    dend_13 { pt3dadd( -71.4102, -106.049, -22.6786, 0.81 ) }
    dend_13 { pt3dadd( -71.6931, -106.933, -22.6611, 0.22 ) }
    dend_13 { pt3dadd( -71.8891, -107.438, -22.6817, 0.22 ) }
    dend_13 { pt3dadd( -72.1471, -107.986, -22.7176, 1.25 ) }
    dend_13 { pt3dadd( -72.3757, -108.384, -22.7491, 1.77 ) }
    dend_13 { pt3dadd( -72.6487, -108.812, -22.7858, 1.77 ) }
    dend_13 { pt3dadd( -73.2517, -109.743, -22.8739, 0.44 ) }
    dend_13 { pt3dadd( -73.8087, -110.586, -22.9548, 0.29 ) }
    dend_13 { pt3dadd( -74.2797, -111.313, -23.0334, 1.4 ) }
    dend_13 { pt3dadd( -74.5577, -111.741, -23.0804, 1.77 ) }
    dend_13 { pt3dadd( -74.7882, -112.109, -23.122, 1.77 ) }
    dend_13 { pt3dadd( -75.4143, -113.152, -23.2369, 0.37 ) }
    dend_13 { pt3dadd( -75.858, -113.949, -23.315, 0.29 ) }
    dend_13 { pt3dadd( -76.3247, -114.785, -23.411, 0.22 ) }
    dend_13 { pt3dadd( -76.7411, -115.466, -23.5064, 0.22 ) }
    dend_13 { pt3dadd( -77.2651, -116.251, -23.6256, 1.11 ) }
    dend_13 { pt3dadd( -77.4665, -116.531, -23.67, 1.4 ) }
    dend_13 { pt3dadd( -77.8797, -117.096, -23.7611, 0.59 ) }
    dend_13 { pt3dadd( -78.3409, -117.751, -23.8686, 0.22 ) }
    dend_13 { pt3dadd( -78.7918, -118.421, -23.9758, 0.22 ) }
    dend_13 { pt3dadd( -79.2523, -119.088, -24.0892, 1.11 ) }
    dend_13 { pt3dadd( -79.4618, -119.373, -24.1365, 1.55 ) }
    dend_13 { pt3dadd( -79.7718, -119.781, -24.2034, 1.33 ) }
    dend_13 { pt3dadd( -80.2992, -120.458, -24.308, 0.59 ) }
    dend_13 { pt3dadd( -80.7053, -121.011, -24.3735, 0.22 ) }
    dend_13 { pt3dadd( -80.9559, -121.361, -24.3987, 0.66 ) }
    dend_13 { pt3dadd( -81.0865, -121.535, -24.4032, 0.66 ) }
    dend_13 { pt3dadd( -81.2207, -121.706, -24.3992, 0.66 ) }
    dend_13 { pt3dadd( -81.6296, -122.225, -24.3788, 0.22 ) }
    dend_13 { pt3dadd( -82.0827, -122.788, -24.3015, 0.22 ) }
    dend_13 { pt3dadd( -82.6479, -123.487, -24.1607, 1.33 ) }
    dend_13 { pt3dadd( -82.8969, -123.791, -24.0884, 1.62 ) }
    dend_13 { pt3dadd( -83.1641, -124.112, -24.0055, 1.33 ) }
    dend_13 { pt3dadd( -84.0127, -125.112, -23.7305, 0.29 ) }
    dend_13 { pt3dadd( -84.5557, -125.712, -23.5621, 0.29 ) }
    dend_13 { pt3dadd( -85.0198, -126.154, -23.444, 0.29 ) }
    dend_13 { pt3dadd( -85.473, -126.53, -23.357, 0.88 ) }
    dend_13 { pt3dadd( -85.7904, -126.775, -23.3025, 0.88 ) }
    dend_13 { pt3dadd( -86.1625, -127.041, -23.2468, 0.66 ) }
    dend_13 { pt3dadd( -86.8225, -127.498, -23.1701, 0.15 ) }
    dend_13 { pt3dadd( -87.4007, -127.943, -23.164, 0.15 ) }
    dend_13 { pt3dadd( -87.943, -128.385, -23.1802, 0.15 ) }
    dend_13 { pt3dadd( -88.2159, -128.603, -23.1986, 0.59 ) }
    dend_13 { pt3dadd( -88.2738, -128.644, -23.1964, 0.59 ) }
    dend_13 { pt3dadd( -88.5743, -128.862, -23.1629, 0.59 ) }
    dend_13 { pt3dadd( -89.0692, -129.248, -23.0775, 0.22 ) }
    dend_13 { pt3dadd( -89.1311, -129.306, -23.0652, 0.22 ) }
    dend_13 { pt3dadd( -89.819, -129.951, -22.9271, 0.22 ) }
    dend_13 { pt3dadd( -90.8552, -130.958, -22.7188, 1.77 ) }
    dend_13 { pt3dadd( -91.2207, -131.321, -22.645, 2.14 ) }
    dend_13 { pt3dadd( -91.6899, -131.788, -22.5597, 1.47 ) }
    dend_13 { pt3dadd( -92.5622, -132.724, -22.4435, 0.37 ) }
    dend_13 { pt3dadd( -93.2743, -133.556, -22.3894, 0.22 ) }
    dend_13 { pt3dadd( -93.644, -134.063, -22.3941, 0.81 ) }
    dend_13 { pt3dadd( -93.8423, -134.363, -22.4238, 0.96 ) }
    dend_13 { pt3dadd( -94.1569, -134.849, -22.4945, 0.96 ) }
    dend_13 { pt3dadd( -94.6922, -135.726, -22.6617, 0.22 ) }
    dend_13 { pt3dadd( -94.7262, -135.784, -22.675, 0.22 ) }
    dend_13 { pt3dadd( -95.057, -136.401, -22.8321, 0.22 ) }
    dend_13 { pt3dadd( -95.4138, -137.1, -23.0046, 0.22 ) }
    dend_13 { pt3dadd( -95.6347, -137.583, -23.1387, 0.96 ) }
    dend_13 { pt3dadd( -95.8253, -138.01, -23.2559, 1.33 ) }
    dend_13 { pt3dadd( -96.0816, -138.544, -23.4022, 1.11 ) }
    dend_13 { pt3dadd( -96.5026, -139.322, -23.6653, 0.22 ) }
    dend_13 { pt3dadd( -96.7186, -139.675, -23.7991, 0.59 ) }
    dend_13 { pt3dadd( -97.3287, -140.635, -24.1485, 0.22 ) }
    dend_13 { pt3dadd( -97.7885, -141.337, -24.3891, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( -98.1022, -141.788, -24.552, 1.4 ) }
    dend_13 { pt3dadd( -98.8761, -142.831, -24.9218, 0.22 ) }
    dend_13 { pt3dadd( -99.3317, -143.394, -25.1054, 0.22 ) }
    dend_13 { pt3dadd( -99.8509, -144.016, -25.2826, 1.99 ) }
    dend_13 { pt3dadd( -100.253, -144.479, -25.3897, 2.5 ) }
    dend_13 { pt3dadd( -100.674, -144.969, -25.4955, 2.43 ) }
    dend_13 { pt3dadd( -101.763, -146.251, -25.7143, 0.22 ) }
    dend_13 { pt3dadd( -102.167, -146.743, -25.7656, 0.29 ) }
    dend_13 { pt3dadd( -102.729, -147.43, -25.8298, 0.22 ) }
    dend_13 { pt3dadd( -103.048, -147.833, -25.8605, 0.74 ) }
    dend_13 { pt3dadd( -103.196, -148.038, -25.8587, 0.74 ) }
    dend_13 { pt3dadd( -103.69, -148.822, -25.7882, 0.15 ) }
    dend_13 { pt3dadd( -104.009, -149.47, -25.719, 0.15 ) }
    dend_13 { pt3dadd( -104.093, -149.673, -25.7059, 0.81 ) }
    dend_13 { pt3dadd( -104.35, -150.336, -25.6989, 1.33 ) }
    dend_13 { pt3dadd( -104.598, -151.001, -25.7169, 1.33 ) }
    dend_13 { pt3dadd( -104.621, -151.064, -25.7205, 1.33 ) }
    dend_13 { pt3dadd( -104.994, -152.041, -25.8671, 0.22 ) }
    dend_13 { pt3dadd( -105.396, -153.112, -26.0932, 0.22 ) }
    dend_13 { pt3dadd( -105.7, -153.956, -26.3121, 1.62 ) }
    dend_13 { pt3dadd( -105.904, -154.504, -26.4742, 1.92 ) }
    dend_13 { pt3dadd( -106.078, -154.966, -26.6223, 1.92 ) }
    dend_13 { pt3dadd( -106.527, -156.205, -27.0077, 0.22 ) }
    dend_13 { pt3dadd( -106.776, -156.915, -27.221, 0.22 ) }
    dend_13 { pt3dadd( -107.045, -157.771, -27.4968, 0.22 ) }
    dend_13 { pt3dadd( -107.267, -158.513, -27.7458, 1.25 ) }
    dend_13 { pt3dadd( -107.392, -158.87, -27.867, 1.62 ) }
    dend_13 { pt3dadd( -107.578, -159.317, -28.003, 1.62 ) }
    dend_13 { pt3dadd( -107.642, -159.447, -28.0379, 1.62 ) }
    dend_13 { pt3dadd( -108.452, -160.85, -28.4625, 0.22 ) }
    dend_13 { pt3dadd( -108.524, -160.972, -28.5073, 0.22 ) }
    dend_13 { pt3dadd( -108.92, -161.705, -28.8025, 0.22 ) }
    dend_13 { pt3dadd( -109.342, -162.52, -29.1435, 0.22 ) }
    dend_13 { pt3dadd( -109.668, -163.133, -29.3977, 1.03 ) }
    dend_13 { pt3dadd( -109.832, -163.435, -29.5208, 1.03 ) }
    dend_13 { pt3dadd( -110.348, -164.373, -29.8884, 0.22 ) }
    dend_13 { pt3dadd( -110.577, -164.803, -30.058, 0.59 ) }
    dend_13 { pt3dadd( -110.89, -165.458, -30.3126, 0.22 ) }
    dend_13 { pt3dadd( -111.114, -165.942, -30.4803, 0.22 ) }
    dend_13 { pt3dadd( -111.39, -166.586, -30.6583, 1.25 ) }
    dend_13 { pt3dadd( -111.545, -166.959, -30.7478, 1.62 ) }
    dend_13 { pt3dadd( -111.591, -167.074, -30.7713, 1.62 ) }
    dend_13 { pt3dadd( -112.071, -168.25, -31.0272, 0.15 ) }
    dend_13 { pt3dadd( -112.367, -169.034, -31.2007, 1.25 ) }
    dend_13 { pt3dadd( -112.476, -169.356, -31.2726, 1.25 ) }
    dend_13 { pt3dadd( -112.839, -170.379, -31.5151, 0.22 ) }
    dend_13 { pt3dadd( -112.867, -170.439, -31.5315, 0.22 ) }
    dend_13 { pt3dadd( -113.147, -170.955, -31.6827, 0.74 ) }
    dend_13 { pt3dadd( -113.181, -171.004, -31.6996, 0.74 ) }
    dend_13 { pt3dadd( -113.353, -171.234, -31.7693, 0.74 ) }
    dend_13 { pt3dadd( -114.014, -172.12, -31.9787, 0.15 ) }
    dend_13 { pt3dadd( -114.531, -172.843, -32.0999, 1.11 ) }
    dend_13 { pt3dadd( -114.62, -172.973, -32.1215, 1.11 ) }
    dend_13 { pt3dadd( -114.664, -173.039, -32.1318, 1.11 ) }
    dend_13 { pt3dadd( -115.805, -174.694, -32.3929, 0.22 ) }
    dend_13 { pt3dadd( -116.159, -175.193, -32.4747, 1.03 ) }
    dend_13 { pt3dadd( -116.446, -175.589, -32.5384, 1.11 ) }
    dend_13 { pt3dadd( -117.336, -176.758, -32.7474, 0.22 ) }
    dend_13 { pt3dadd( -117.481, -176.94, -32.7839, 0.59 ) }
    dend_13 { pt3dadd( -118.179, -177.76, -32.9447, 0.22 ) }
    dend_13 { pt3dadd( -118.531, -178.14, -33.0198, 1.33 ) }
    dend_13 { pt3dadd( -118.831, -178.451, -33.0652, 1.55 ) }
    dend_13 { pt3dadd( -119.304, -178.909, -33.0993, 0.88 ) }
    dend_13 { pt3dadd( -120.267, -179.841, -33.1082, 0.22 ) }
    dend_13 { pt3dadd( -120.696, -180.264, -33.1041, 0.66 ) }
    dend_13 { pt3dadd( -120.901, -180.458, -33.125, 0.66 ) }
    dend_13 { pt3dadd( -121.685, -181.171, -33.2613, 0.22 ) }
    dend_13 { pt3dadd( -122.439, -181.842, -33.4439, 1.62 ) }
    dend_13 { pt3dadd( -123.007, -182.338, -33.6278, 2.06 ) }
    dend_13 { pt3dadd( -123.502, -182.749, -33.819, 2.06 ) }
    dend_13 { pt3dadd( -125.234, -184.193, -34.5422, 0.22 ) }
    dend_13 { pt3dadd( -125.234, -184.193, -34.5422, 0.59 ) }
    dend_13 { pt3dadd( -125.347, -184.28, -34.5865, 0.59 ) }
    dend_13 { pt3dadd( -126.066, -184.798, -34.8247, 0.22 ) }
    dend_13 { pt3dadd( -126.781, -185.26, -34.9991, 0.22 ) }
    dend_13 { pt3dadd( -127.554, -185.725, -35.1025, 1.77 ) }
    dend_13 { pt3dadd( -127.985, -185.973, -35.0977, 2.06 ) }
    dend_13 { pt3dadd( -129.644, -186.92, -34.9768, 0.15 ) }
    dend_13 { pt3dadd( -129.976, -187.1, -34.9351, 0.74 ) }
    dend_13 { pt3dadd( -130.347, -187.281, -34.8462, 0.74 ) }
    dend_13 { pt3dadd( -131.142, -187.648, -34.5695, 0.22 ) }
    dend_13 { pt3dadd( -131.82, -187.941, -34.2735, 0.22 ) }
    dend_13 { pt3dadd( -132.558, -188.248, -33.8913, 1.18 ) }
    dend_13 { pt3dadd( -132.91, -188.396, -33.6659, 1.55 ) }
    dend_13 { pt3dadd( -134.026, -188.865, -32.9052, 0.29 ) }
    dend_13 { pt3dadd( -134.847, -189.204, -32.3231, 0.22 ) }
    dend_13 { pt3dadd( -135.211, -189.331, -32.0769, 0.74 ) }
    dend_13 { pt3dadd( -135.513, -189.413, -31.8934, 1.03 ) }
    dend_13 { pt3dadd( -136.505, -189.606, -31.3715, 0.15 ) }
    dend_13 { pt3dadd( -136.822, -189.647, -31.246, 0.37 ) }
    dend_13 { pt3dadd( -136.892, -189.652, -31.2286, 0.37 ) }
    dend_13 { pt3dadd( -138.014, -189.658, -31.0409, 0.22 ) }
    dend_13 { pt3dadd( -138.805, -189.644, -30.9464, 1.18 ) }
    dend_13 { pt3dadd( -139.37, -189.634, -30.9052, 1.55 ) }
    dend_13 { pt3dadd( -140.75, -189.619, -30.8658, 0.22 ) }
    dend_13 { pt3dadd( -141.404, -189.621, -30.8284, 0.22 ) }
    dend_13 { pt3dadd( -142.207, -189.64, -30.7578, 0.96 ) }
    dend_13 { pt3dadd( -142.487, -189.651, -30.7154, 1.33 ) }
    dend_13 { pt3dadd( -143.857, -189.697, -30.442, 0.22 ) }
    dend_13 { pt3dadd( -144.419, -189.724, -30.2953, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_13 { pt3dadd( -145.435, -189.775, -29.976, 0.96 ) }
    dend_13 { pt3dadd( -145.7, -189.79, -29.8778, 1.25 ) }
    dend_13 { pt3dadd( -147.416, -189.902, -29.1835, 0.22 ) }
    dend_13 { pt3dadd( -148.101, -189.955, -28.903, 0.22 ) }
    dend_13 { pt3dadd( -149.404, -190.068, -28.3538, 1.84 ) }
    dend_13 { pt3dadd( -149.674, -190.1, -28.2436, 2.36 ) }
    dend_13 { pt3dadd( -151.445, -190.386, -27.5669, 0.22 ) }
    dend_13 { pt3dadd( -151.917, -190.476, -27.3864, 0.66 ) }
    dend_13 { pt3dadd( -152.636, -190.653, -27.1354, 0.22 ) }
    dend_13 { pt3dadd( -152.691, -190.667, -27.1181, 0.22 ) }
    dend_13 { pt3dadd( -153.438, -190.864, -26.948, 0.96 ) }
    dend_13 { pt3dadd( -153.794, -190.954, -26.8892, 0.96 ) }
    dend_13 { pt3dadd( -153.86, -190.971, -26.885, 0.96 ) }
    dend_13 { pt3dadd( -154.879, -191.229, -26.8234, 0.22 ) }
    dend_13 { pt3dadd( -154.947, -191.245, -26.8193, 0.22 ) }
    dend_13 { pt3dadd( -156.003, -191.499, -26.7614, 0.22 ) }
    dend_13 { pt3dadd( -156.08, -191.518, -26.7576, 0.22 ) }
    dend_13 { pt3dadd( -157.159, -191.826, -26.6798, 0.22 ) }
    dend_13 { pt3dadd( -157.235, -191.849, -26.6731, 0.22 ) }
    dend_13 { pt3dadd( -157.711, -192.002, -26.6211, 1.11 ) }
    dend_13 { pt3dadd( -158.197, -192.161, -26.5669, 1.4 ) }
    dend_13 { pt3dadd( -158.395, -192.227, -26.544, 1.69 ) }
    dend_13 { pt3dadd( -160.287, -192.85, -26.3192, 0.22 ) }
    dend_13 { pt3dadd( -160.768, -193.003, -26.2592, 0.66 ) }
    dend_13 { pt3dadd( -160.992, -193.076, -26.2307, 0.88 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 25/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -9.00606, -32.2017, 0.433088, 2.58 ) }
    dend_8 { pt3dadd( -8.7971, -32.9572, 0.0494609, 2.58 ) }
    dend_8 { pt3dadd( -8.68335, -33.8133, -0.374374, 1.11 ) }
    dend_8 { pt3dadd( -8.61753, -34.5449, -0.714067, 0.66 ) }
    dend_8 { pt3dadd( -8.57614, -35.1142, -0.974974, 0.59 ) }
    dend_8 { pt3dadd( -8.51384, -36.0252, -1.40435, 1.25 ) }
    dend_8 { pt3dadd( -8.48368, -36.4074, -1.58998, 1.62 ) }
    dend_8 { pt3dadd( -8.40961, -37.6047, -2.15839, 1.11 ) }
    dend_8 { pt3dadd( -8.3565, -38.3151, -2.51366, 1.33 ) }
    dend_8 { pt3dadd( -8.29107, -38.9533, -2.86582, 1.92 ) }
    dend_8 { pt3dadd( -8.18964, -39.6268, -3.26964, 1.99 ) }
    dend_8 { pt3dadd( -8.05549, -40.3168, -3.72737, 1.33 ) }
    dend_8 { pt3dadd( -7.9089, -41.0515, -4.23875, 0.96 ) }
    dend_8 { pt3dadd( -7.7396, -41.8547, -4.81591, 0.96 ) }
    dend_8 { pt3dadd( -7.73523, -41.8835, -4.83776, 0.96 ) }
    dend_8 { pt3dadd( -7.71001, -42.3766, -5.22608, 0.74 ) }
    dend_8 { pt3dadd( -7.80597, -43.1027, -5.8688, 0.52 ) }
    dend_8 { pt3dadd( -7.97356, -43.5913, -6.35213, 0.52 ) }
    dend_8 { pt3dadd( -7.98777, -43.6186, -6.3816, 0.52 ) }
    dend_8 { pt3dadd( -8.21823, -43.9975, -6.80598, 0.88 ) }
    dend_8 { pt3dadd( -8.51057, -44.482, -7.33575, 1.18 ) }
    dend_8 { pt3dadd( -8.98556, -45.2734, -8.17261, 0.59 ) }
    dend_8 { pt3dadd( -9.25535, -45.7519, -8.62921, 0.59 ) }
    dend_8 { pt3dadd( -9.26831, -45.7774, -8.65188, 0.59 ) }
    dend_8 { pt3dadd( -9.45646, -46.2156, -8.99508, 0.59 ) }
    dend_8 { pt3dadd( -9.70909, -46.9695, -9.47512, 1.55 ) }
    dend_8 { pt3dadd( -9.84909, -47.5374, -9.73724, 2.14 ) }
    dend_8 { pt3dadd( -9.92278, -47.8697, -9.84976, 2.36 ) }
    dend_8 { pt3dadd( -9.93185, -47.9037, -9.85996, 2.36 ) }
    dend_8 { pt3dadd( -10.0645, -48.2651, -9.96833, 2.36 ) }
    dend_8 { pt3dadd( -10.2791, -48.6697, -10.1033, 2.06 ) }
    dend_8 { pt3dadd( -10.6731, -49.2455, -10.307, 1.77 ) }
    dend_8 { pt3dadd( -11.1172, -49.8321, -10.5268, 0.74 ) }
    dend_8 { pt3dadd( -11.3459, -50.1123, -10.6412, 0.52 ) }
    dend_8 { pt3dadd( -11.7591, -50.5796, -10.8454, 0.44 ) }
    dend_8 { pt3dadd( -12.301, -51.109, -11.1086, 0.44 ) }
    dend_8 { pt3dadd( -12.8734, -51.5888, -11.3876, 2.06 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 62/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -2.50229, -101.608, 13.7634, 0.88 ) }
    dend_4 { pt3dadd( -2.50251, -102.737, 13.6321, 0.88 ) }
    dend_4 { pt3dadd( -2.43969, -103.813, 13.4518, 0.88 ) }
    dend_4 { pt3dadd( -2.36102, -104.56, 13.3225, 1.18 ) }
    dend_4 { pt3dadd( -2.29869, -105.045, 13.2276, 1.18 ) }
    dend_4 { pt3dadd( -2.11985, -106.357, 12.9679, 0.52 ) }
    dend_4 { pt3dadd( -2.03878, -106.952, 12.8502, 0.52 ) }
    dend_4 { pt3dadd( -1.84031, -108.118, 12.5978, 1.99 ) }
    dend_4 { pt3dadd( -1.61159, -109.236, 12.3231, 3.09 ) }
    dend_4 { pt3dadd( -1.4471, -109.938, 12.1347, 3.61 ) }
    dend_4 { pt3dadd( -1.24898, -110.764, 11.9103, 3.61 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 73/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -2.50229, -101.608, 13.7634, 0.74 ) }
    dend_3 { pt3dadd( -1.77578, -102.474, 13.535, 0.74 ) }
    dend_3 { pt3dadd( -0.98294, -103.561, 13.2912, 0.66 ) }
    dend_3 { pt3dadd( -0.5878, -104.103, 13.1697, 1.11 ) }
    dend_3 { pt3dadd( -0.333765, -104.452, 13.0915, 1.25 ) }
    dend_3 { pt3dadd( 0.828173, -106.045, 12.7342, 0.29 ) }
    dend_3 { pt3dadd( 1.32202, -106.723, 12.5823, 0.29 ) }
    dend_3 { pt3dadd( 1.91569, -107.63, 12.3447, 0.29 ) }
    dend_3 { pt3dadd( 7.0182, -114.895, 11.3969, 0.29 ) }
    dend_3 { pt3dadd( 12.6464, -121.821, 11.9358, 0.29 ) }
    dend_3 { pt3dadd( 18.8789, -128.253, 12.1601, 0.29 ) }
    dend_3 { pt3dadd( 24.2057, -135.333, 13.3058, 0.29 ) }
    dend_3 { pt3dadd( 29.1036, -142.718, 14.3313, 0.29 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 86/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -22.9522, 145.501, -69.1898, 0.22 ) }
    dend_69 { pt3dadd( -24.0444, 144.993, -69.98, 0.22 ) }
    dend_69 { pt3dadd( -24.4861, 144.825, -70.3315, 1.18 ) }
    dend_69 { pt3dadd( -24.6348, 144.773, -70.444, 1.18 ) }
    dend_69 { pt3dadd( -26.6212, 144.123, -71.9009, 0.22 ) }
    dend_69 { pt3dadd( -27.0495, 143.989, -72.2123, 0.22 ) }
    dend_69 { pt3dadd( -28.4502, 143.551, -73.2309, 0.74 ) }
    dend_69 { pt3dadd( -30.2465, 143.106, -74.5479, 0.22 ) }
    dend_69 { pt3dadd( -30.8217, 142.983, -74.9747, 1.03 ) }
    dend_69 { pt3dadd( -31.0487, 142.936, -75.1424, 1.25 ) }
    dend_69 { pt3dadd( -31.2248, 142.907, -75.2622, 1.25 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 97/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -22.9522, 145.501, -69.1898, 0.52 ) }
    dend_68 { pt3dadd( -23.4136, 146.518, -70.8164, 0.52 ) }
    dend_68 { pt3dadd( -23.6929, 147.154, -71.7743, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_68 { pt3dadd( -24.0707, 148.176, -73.1037, 0.88 ) }
    dend_68 { pt3dadd( -24.1271, 148.354, -73.3093, 1.03 ) }
    dend_68 { pt3dadd( -24.5942, 149.951, -74.996, 0.15 ) }
    dend_68 { pt3dadd( -24.705, 150.35, -75.396, 0.52 ) }
    dend_68 { pt3dadd( -24.7451, 150.511, -75.5225, 0.52 ) }
    dend_68 { pt3dadd( -24.9862, 151.702, -76.3262, 0.15 ) }
    dend_68 { pt3dadd( -25.0661, 152.247, -76.6473, 0.81 ) }
    dend_68 { pt3dadd( -25.1624, 152.971, -77.0461, 1.11 ) }
    dend_68 { pt3dadd( -25.1682, 153.032, -77.0736, 1.11 ) }
    dend_68 { pt3dadd( -25.3085, 154.446, -77.7232, 0.22 ) }
    dend_68 { pt3dadd( -25.3822, 155.068, -78.0272, 0.96 ) }
    dend_68 { pt3dadd( -25.447, 155.461, -78.2437, 1.11 ) }
    // Section: dend_66, id: dend_66, parent: dend_28 (entry count 12/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -10.8012, 137.117, -18.3374, 0.96 ) }
    dend_66 { pt3dadd( -11.067, 138.012, -19.5577, 0.96 ) }
    dend_66 { pt3dadd( -11.3362, 138.917, -20.7772, 1.03 ) }
    dend_66 { pt3dadd( -11.3855, 139.129, -21.0598, 1.03 ) }
    dend_66 { pt3dadd( -11.5364, 139.872, -22.0298, 0.29 ) }
    dend_66 { pt3dadd( -11.6258, 140.453, -22.7094, 1.25 ) }
    dend_66 { pt3dadd( -11.674, 140.856, -23.1369, 1.47 ) }
    dend_66 { pt3dadd( -11.6831, 140.995, -23.2564, 1.47 ) }
    dend_66 { pt3dadd( -11.7656, 142.279, -24.1542, 0.29 ) }
    dend_66 { pt3dadd( -11.7703, 142.395, -24.2323, 0.29 ) }
    dend_66 { pt3dadd( -11.7849, 143.381, -24.8245, 0.29 ) }
    dend_66 { pt3dadd( -11.7753, 143.751, -25.0574, 0.59 ) }
    dend_66 { pt3dadd( -11.736, 144.579, -25.5796, 0.44 ) }
    dend_66 { pt3dadd( -11.677, 145.627, -26.2378, 2.28 ) }
    dend_66 { pt3dadd( -11.6412, 146.256, -26.6261, 2.65 ) }
    dend_66 { pt3dadd( -11.6222, 146.556, -26.8186, 2.65 ) }
    dend_66 { pt3dadd( -11.502, 148.517, -28.1348, 0.37 ) }
    dend_66 { pt3dadd( -11.4622, 149.139, -28.528, 0.29 ) }
    dend_66 { pt3dadd( -11.456, 149.218, -28.5729, 0.29 ) }
    dend_66 { pt3dadd( -11.4207, 149.666, -28.7879, 0.44 ) }
    dend_66 { pt3dadd( -11.4078, 149.932, -28.8876, 0.44 ) }
    dend_66 { pt3dadd( -11.3932, 150.726, -29.1199, 0.15 ) }
    dend_66 { pt3dadd( -11.4167, 151.418, -29.2314, 0.74 ) }
    dend_66 { pt3dadd( -11.4184, 151.485, -29.2442, 0.74 ) }
    dend_66 { pt3dadd( -11.4309, 151.891, -29.3598, 0.74 ) }
    dend_66 { pt3dadd( -11.4439, 152.23, -29.4711, 0.52 ) }
    dend_66 { pt3dadd( -11.5001, 153.019, -29.7496, 0.29 ) }
    dend_66 { pt3dadd( -11.5945, 153.995, -30.1046, 1.18 ) }
    dend_66 { pt3dadd( -11.6489, 154.454, -30.2758, 1.69 ) }
    dend_66 { pt3dadd( -11.8472, 156.083, -30.9614, 0.29 ) }
    dend_66 { pt3dadd( -11.9308, 156.715, -31.2412, 0.29 ) }
    dend_66 { pt3dadd( -12.1123, 157.909, -31.7841, 1.77 ) }
    dend_66 { pt3dadd( -12.1717, 158.224, -31.9364, 2.73 ) }
    dend_66 { pt3dadd( -12.2284, 158.471, -32.0627, 2.73 ) }
    dend_66 { pt3dadd( -12.7555, 160.514, -33.1405, 0.29 ) }
    dend_66 { pt3dadd( -12.9288, 161.11, -33.4588, 0.29 ) }
    dend_66 { pt3dadd( -13.0003, 161.326, -33.5837, 0.59 ) }
    dend_66 { pt3dadd( -13.2698, 162.04, -34.0303, 0.22 ) }
    dend_66 { pt3dadd( -13.4804, 162.53, -34.3508, 0.74 ) }
    dend_66 { pt3dadd( -13.576, 162.699, -34.4659, 1.03 ) }
    dend_66 { pt3dadd( -13.6165, 162.744, -34.499, 1.03 ) }
    dend_66 { pt3dadd( -13.8785, 163.011, -34.7227, 0.81 ) }
    dend_66 { pt3dadd( -13.9518, 163.092, -34.786, 0.81 ) }
    dend_66 { pt3dadd( -14.6381, 163.924, -35.341, 0.22 ) }
    dend_66 { pt3dadd( -14.9565, 164.34, -35.5939, 0.59 ) }
    dend_66 { pt3dadd( -15.4822, 165.038, -35.996, 0.22 ) }
    dend_66 { pt3dadd( -15.5651, 165.149, -36.0551, 0.22 ) }
    dend_66 { pt3dadd( -15.919, 165.633, -36.2822, 0.22 ) }
    dend_66 { pt3dadd( -16.336, 166.223, -36.521, 0.22 ) }
    dend_66 { pt3dadd( -16.9148, 167.088, -36.8293, 1.62 ) }
    dend_66 { pt3dadd( -17.3177, 167.716, -37.0383, 2.14 ) }
    dend_66 { pt3dadd( -17.665, 168.262, -37.2103, 2.14 ) }
    dend_66 { pt3dadd( -18.5639, 169.631, -37.6487, 0.29 ) }
    dend_66 { pt3dadd( -18.853, 170.06, -37.7876, 0.44 ) }
    dend_66 { pt3dadd( -19.1757, 170.548, -37.945, 0.22 ) }
    dend_66 { pt3dadd( -19.6712, 171.329, -38.1898, 0.22 ) }
    dend_66 { pt3dadd( -20.1182, 172.083, -38.4224, 1.25 ) }
    dend_66 { pt3dadd( -20.2999, 172.407, -38.5241, 1.62 ) }
    dend_66 { pt3dadd( -20.3912, 172.593, -38.5862, 1.84 ) }
    dend_66 { pt3dadd( -20.9854, 174.005, -39.089, 0.29 ) }
    dend_66 { pt3dadd( -21.3941, 175.141, -39.501, 0.29 ) }
    dend_66 { pt3dadd( -21.6114, 175.928, -39.8061, 0.74 ) }
    dend_66 { pt3dadd( -21.6824, 176.244, -39.9457, 0.74 ) }
    dend_66 { pt3dadd( -21.8912, 177.343, -40.4709, 0.22 ) }
    dend_66 { pt3dadd( -22.0427, 178.317, -40.9589, 1.62 ) }
    dend_66 { pt3dadd( -22.0482, 178.368, -40.9847, 1.62 ) }
    dend_66 { pt3dadd( -22.11, 179.075, -41.3342, 1.99 ) }
    dend_66 { pt3dadd( -22.2391, 180.776, -42.1425, 0.22 ) }
    dend_66 { pt3dadd( -22.2433, 180.829, -42.1664, 0.22 ) }
    dend_66 { pt3dadd( -22.3285, 181.622, -42.4938, 0.22 ) }
    dend_66 { pt3dadd( -22.4287, 182.49, -42.8195, 0.96 ) }
    dend_66 { pt3dadd( -22.4721, 182.822, -42.9388, 1.25 ) }
    dend_66 { pt3dadd( -22.6788, 184.34, -43.4018, 0.22 ) }
    dend_66 { pt3dadd( -22.6858, 184.396, -43.4159, 0.22 ) }
    dend_66 { pt3dadd( -22.7929, 185.16, -43.611, 0.74 ) }
    dend_66 { pt3dadd( -22.8251, 185.366, -43.6627, 0.88 ) }
    dend_66 { pt3dadd( -22.9203, 185.909, -43.8004, 0.29 ) }
    dend_66 { pt3dadd( -23.1188, 186.961, -44.0439, 0.22 ) }
    dend_66 { pt3dadd( -23.2519, 187.642, -44.1724, 0.22 ) }
    dend_66 { pt3dadd( -23.4004, 188.605, -44.2987, 1.33 ) }
    dend_66 { pt3dadd( -23.4405, 188.963, -44.3254, 1.92 ) }
    dend_66 { pt3dadd( -23.4463, 189.02, -44.3274, 1.92 ) }
    dend_66 { pt3dadd( -23.4857, 189.449, -44.3295, 1.77 ) }
    dend_66 { pt3dadd( -23.5293, 189.895, -44.3278, 1.69 ) }
    dend_66 { pt3dadd( -23.6782, 191.421, -44.3104, 0.22 ) }
    dend_66 { pt3dadd( -23.8374, 192.678, -44.2762, 0.22 ) }
    dend_66 { pt3dadd( -24.0164, 193.856, -44.2413, 1.47 ) }
    dend_66 { pt3dadd( -24.1072, 194.362, -44.2266, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_66 { pt3dadd( -24.1808, 194.698, -44.2192, 1.92 ) }
    dend_66 { pt3dadd( -24.3076, 195.17, -44.2143, 1.47 ) }
    dend_66 { pt3dadd( -24.8411, 196.808, -44.2296, 0.22 ) }
    dend_66 { pt3dadd( -25.0845, 197.467, -44.2366, 0.44 ) }
    dend_66 { pt3dadd( -25.197, 197.775, -44.2449, 0.44 ) }
    dend_66 { pt3dadd( -25.5082, 198.644, -44.2793, 0.22 ) }
    dend_66 { pt3dadd( -25.8467, 199.652, -44.3346, 1.18 ) }
    dend_66 { pt3dadd( -25.9957, 200.135, -44.3674, 2.14 ) }
    dend_66 { pt3dadd( -26.1546, 200.694, -44.42, 1.62 ) }
    dend_66 { pt3dadd( -26.6354, 202.474, -44.5971, 0.22 ) }
    dend_66 { pt3dadd( -26.652, 202.539, -44.6037, 0.22 ) }
    dend_66 { pt3dadd( -26.9791, 203.97, -44.732, 0.22 ) }
    dend_66 { pt3dadd( -27.2412, 205.198, -44.8274, 0.22 ) }
    dend_66 { pt3dadd( -27.4059, 206.003, -44.8653, 1.03 ) }
    dend_66 { pt3dadd( -27.4619, 206.279, -44.8705, 1.62 ) }
    dend_66 { pt3dadd( -27.5214, 206.556, -44.8657, 1.11 ) }
    dend_66 { pt3dadd( -27.7639, 207.885, -44.7679, 0.22 ) }
    dend_66 { pt3dadd( -27.7723, 207.941, -44.7604, 0.22 ) }
    dend_66 { pt3dadd( -27.8969, 209.013, -44.5687, 1.47 ) }
    dend_66 { pt3dadd( -27.9319, 209.361, -44.4969, 2.06 ) }
    dend_66 { pt3dadd( -27.9395, 209.437, -44.4815, 2.06 ) }
    dend_66 { pt3dadd( -28.1153, 211.062, -44.1982, 0.22 ) }
    dend_66 { pt3dadd( -28.2214, 211.965, -44.0683, 0.52 ) }
    dend_66 { pt3dadd( -28.3881, 213.166, -43.9335, 0.22 ) }
    dend_66 { pt3dadd( -28.5135, 213.964, -43.8674, 1.33 ) }
    dend_66 { pt3dadd( -28.5847, 214.375, -43.8501, 1.33 ) }
    dend_66 { pt3dadd( -28.8526, 215.775, -43.8518, 0.22 ) }
    dend_66 { pt3dadd( -28.9658, 216.311, -43.8849, 0.22 ) }
    dend_66 { pt3dadd( -29.1115, 217.044, -43.9521, 0.66 ) }
    dend_66 { pt3dadd( -29.1652, 217.33, -43.9868, 0.66 ) }
    dend_66 { pt3dadd( -29.3807, 218.685, -44.1609, 0.22 ) }
    dend_66 { pt3dadd( -29.3868, 218.754, -44.1698, 0.22 ) }
    dend_66 { pt3dadd( -29.4155, 219.675, -44.2852, 0.22 ) }
    dend_66 { pt3dadd( -29.4039, 220.548, -44.4095, 0.96 ) }
    dend_66 { pt3dadd( -29.3807, 221.031, -44.4826, 1.62 ) }
    dend_66 { pt3dadd( -29.3522, 221.533, -44.561, 1.4 ) }
    dend_66 { pt3dadd( -29.3014, 223.129, -44.8346, 0.22 ) }
    dend_66 { pt3dadd( -29.3005, 223.544, -44.9154, 0.22 ) }
    dend_66 { pt3dadd( -29.3287, 224.534, -45.1274, 1.11 ) }
    dend_66 { pt3dadd( -29.3372, 224.677, -45.1588, 1.33 ) }
    dend_66 { pt3dadd( -29.3705, 225.084, -45.2609, 1.18 ) }
    dend_66 { pt3dadd( -29.5499, 226.884, -45.7253, 0.22 ) }
    dend_66 { pt3dadd( -29.6512, 227.721, -45.9547, 1.03 ) }
    dend_66 { pt3dadd( -29.7103, 228.189, -46.0852, 1.18 ) }
    dend_66 { pt3dadd( -29.7507, 228.524, -46.1926, 1.03 ) }
    dend_66 { pt3dadd( -29.8773, 229.671, -46.6001, 0.15 ) }
    dend_66 { pt3dadd( -29.9683, 230.633, -46.9657, 0.15 ) }
    dend_66 { pt3dadd( -30.0441, 231.534, -47.3145, 1.33 ) }
    dend_66 { pt3dadd( -30.0898, 232.034, -47.5051, 1.55 ) }
    dend_66 { pt3dadd( -30.2551, 233.801, -48.1939, 0.15 ) }
    dend_66 { pt3dadd( -30.262, 233.866, -48.2185, 0.15 ) }
    dend_66 { pt3dadd( -30.3645, 234.677, -48.498, 0.15 ) }
    dend_66 { pt3dadd( -30.4919, 235.606, -48.8072, 1.11 ) }
    dend_66 { pt3dadd( -30.5345, 235.925, -48.8991, 1.55 ) }
    dend_66 { pt3dadd( -30.71, 237.311, -49.2359, 0.15 ) }
    dend_66 { pt3dadd( -30.8138, 238.055, -49.3679, 0.74 ) }
    dend_66 { pt3dadd( -30.9791, 239.158, -49.5488, 0.15 ) }
    dend_66 { pt3dadd( -30.9905, 239.223, -49.5587, 0.15 ) }
    dend_66 { pt3dadd( -31.1087, 239.849, -49.644, 0.15 ) }
    dend_66 { pt3dadd( -31.2567, 240.601, -49.7222, 0.96 ) }
    dend_66 { pt3dadd( -31.3252, 240.944, -49.7463, 0.96 ) }
    dend_66 { pt3dadd( -31.6166, 242.471, -49.8643, 0.15 ) }
    dend_66 { pt3dadd( -31.7304, 243.12, -49.9147, 0.44 ) }
    dend_66 { pt3dadd( -31.7432, 243.195, -49.9228, 0.44 ) }
    dend_66 { pt3dadd( -31.8942, 244.171, -50.0581, 0.15 ) }
    dend_66 { pt3dadd( -32.0245, 245.111, -50.2077, 1.03 ) }
    dend_66 { pt3dadd( -32.0737, 245.522, -50.2772, 1.33 ) }
    dend_66 { pt3dadd( -32.1269, 246.166, -50.3972, 0.59 ) }
    dend_66 { pt3dadd( -32.1889, 247.246, -50.6122, 0.15 ) }
    dend_66 { pt3dadd( -32.2324, 248.059, -50.7797, 0.88 ) }
    dend_66 { pt3dadd( -32.2545, 248.528, -50.878, 1.03 ) }
    dend_66 { pt3dadd( -32.2768, 249.017, -50.9767, 0.66 ) }
    dend_66 { pt3dadd( -32.2892, 250.138, -51.2576, 0.15 ) }
    dend_66 { pt3dadd( -32.2777, 251.316, -51.5883, 0.15 ) }
    dend_66 { pt3dadd( -32.2649, 252.073, -51.7755, 0.96 ) }
    dend_66 { pt3dadd( -32.2634, 252.508, -51.875, 1.25 ) }
    dend_66 { pt3dadd( -32.2657, 252.798, -51.9361, 1.25 ) }
    dend_66 { pt3dadd( -32.3207, 254.605, -52.2824, 0.15 ) }
    dend_66 { pt3dadd( -32.3546, 255.086, -52.3566, 0.44 ) }
    dend_66 { pt3dadd( -32.4621, 256.135, -52.4836, 0.15 ) }
    dend_66 { pt3dadd( -32.5229, 256.627, -52.5201, 0.74 ) }
    dend_66 { pt3dadd( -32.5907, 257.12, -52.537, 0.74 ) }
    dend_66 { pt3dadd( -32.7121, 258.05, -52.5259, 0.15 ) }
    dend_66 { pt3dadd( -32.8235, 258.822, -52.4815, 0.88 ) }
    dend_66 { pt3dadd( -32.8821, 259.306, -52.4671, 0.96 ) }
    dend_66 { pt3dadd( -32.998, 260.513, -52.4689, 0.15 ) }
    dend_66 { pt3dadd( -33.06, 261.151, -52.4635, 0.29 ) }
    dend_66 { pt3dadd( -33.1791, 262.321, -52.444, 0.15 ) }
    dend_66 { pt3dadd( -33.2446, 262.959, -52.4266, 0.96 ) }
    dend_66 { pt3dadd( -33.2943, 263.513, -52.4107, 1.18 ) }
    dend_66 { pt3dadd( -33.4642, 265.402, -52.3375, 0.22 ) }
    dend_66 { pt3dadd( -33.5394, 266.253, -52.2979, 0.22 ) }
    dend_66 { pt3dadd( -33.5582, 266.465, -52.2855, 0.22 ) }
    dend_66 { pt3dadd( -33.5707, 266.613, -52.2749, 0.22 ) }
    dend_66 { pt3dadd( -33.6189, 267.607, -52.2405, 0.15 ) }
    dend_66 { pt3dadd( -33.6454, 268.443, -52.2462, 1.11 ) }
    dend_66 { pt3dadd( -33.6515, 268.903, -52.2664, 1.77 ) }
    dend_66 { pt3dadd( -33.651, 269.262, -52.2909, 1.77 ) }
    dend_66 { pt3dadd( -33.6512, 269.341, -52.2979, 1.77 ) }
    dend_66 { pt3dadd( -33.6664, 271.451, -52.4817, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_66 { pt3dadd( -33.6881, 272.143, -52.5422, 0.15 ) }
    dend_66 { pt3dadd( -33.6901, 272.2, -52.5469, 0.15 ) }
    dend_66 { pt3dadd( -33.7243, 272.866, -52.5867, 0.52 ) }
    dend_66 { pt3dadd( -33.7486, 273.154, -52.6002, 0.59 ) }
    dend_66 { pt3dadd( -33.9456, 274.744, -52.6514, 0.15 ) }
    dend_66 { pt3dadd( -34.0647, 275.578, -52.6525, 1.03 ) }
    dend_66 { pt3dadd( -34.1258, 276.018, -52.6555, 1.77 ) }
    dend_66 { pt3dadd( -34.1854, 276.442, -52.6619, 1.55 ) }
    dend_66 { pt3dadd( -34.4801, 278.262, -52.7145, 0.15 ) }
    dend_66 { pt3dadd( -34.5574, 278.696, -52.7374, 0.29 ) }
    dend_66 { pt3dadd( -34.6993, 279.437, -52.7972, 0.15 ) }
    dend_66 { pt3dadd( -34.863, 280.261, -52.8723, 0.15 ) }
    dend_66 { pt3dadd( -34.8923, 280.404, -52.8856, 0.15 ) }
    dend_66 { pt3dadd( -35.1921, 281.861, -53.0377, 0.15 ) }
    dend_66 { pt3dadd( -35.41, 282.908, -53.1524, 1.11 ) }
    dend_66 { pt3dadd( -35.4241, 282.974, -53.16, 1.11 ) }
    dend_66 { pt3dadd( -35.5587, 283.558, -53.2304, 1.4 ) }
    dend_66 { pt3dadd( -35.6897, 284.218, -53.3146, 0.59 ) }
    dend_66 { pt3dadd( -35.8732, 285.276, -53.4496, 0.22 ) }
    dend_66 { pt3dadd( -35.9892, 286.111, -53.5503, 0.22 ) }
    dend_66 { pt3dadd( -36.1025, 287.005, -53.651, 1.03 ) }
    dend_66 { pt3dadd( -36.16, 287.556, -53.7141, 1.55 ) }
    dend_66 { pt3dadd( -36.3638, 289.99, -53.9751, 0.15 ) }
    dend_66 { pt3dadd( -36.3694, 290.06, -53.982, 0.15 ) }
    dend_66 { pt3dadd( -36.42, 290.649, -54.0247, 0.44 ) }
    dend_66 { pt3dadd( -36.4498, 291.009, -54.0415, 0.44 ) }
    dend_66 { pt3dadd( -36.5789, 292.485, -54.0882, 0.15 ) }
    dend_66 { pt3dadd( -36.6597, 293.337, -54.1088, 1.03 ) }
    dend_66 { pt3dadd( -36.7171, 293.906, -54.1153, 1.62 ) }
    dend_66 { pt3dadd( -36.9005, 295.726, -54.2305, 0.15 ) }
    dend_66 { pt3dadd( -37.1474, 298.07, -54.4621, 0.15 ) }
    dend_66 { pt3dadd( -37.2503, 299.022, -54.582, 0.15 ) }
    dend_66 { pt3dadd( -37.3232, 299.671, -54.6814, 1.11 ) }
    dend_66 { pt3dadd( -37.3954, 300.374, -54.8111, 1.4 ) }
    dend_66 { pt3dadd( -37.5921, 302.708, -55.2977, 0.15 ) }
    dend_66 { pt3dadd( -37.6426, 303.39, -55.459, 0.15 ) }
    dend_66 { pt3dadd( -37.7018, 304.216, -55.6547, 0.74 ) }
    dend_66 { pt3dadd( -37.718, 304.583, -55.7247, 0.74 ) }
    dend_66 { pt3dadd( -37.7193, 304.65, -55.7342, 0.74 ) }
    dend_66 { pt3dadd( -37.7214, 306.519, -55.919, 0.15 ) }
    dend_66 { pt3dadd( -37.7047, 307.639, -55.9612, 1.55 ) }
    dend_66 { pt3dadd( -37.6783, 308.335, -55.9861, 1.92 ) }
    dend_66 { pt3dadd( -37.5829, 310.385, -56.0534, 0.15 ) }
    dend_66 { pt3dadd( -37.5496, 311.06, -56.0734, 0.88 ) }
    dend_66 { pt3dadd( -37.5412, 311.204, -56.0773, 0.88 ) }
    dend_66 { pt3dadd( -37.505, 311.693, -56.0901, 0.88 ) }
    dend_66 { pt3dadd( -37.3792, 313.173, -56.1335, 0.15 ) }
    dend_66 { pt3dadd( -37.3397, 313.739, -56.1428, 0.15 ) }
    dend_66 { pt3dadd( -37.3054, 314.341, -56.1402, 0.74 ) }
    dend_66 { pt3dadd( -37.2345, 315.733, -56.1199, 0.15 ) }
    dend_66 { pt3dadd( -37.2327, 315.8, -56.1176, 0.15 ) }
    dend_66 { pt3dadd( -37.2303, 316.141, -56.0992, 0.37 ) }
    dend_66 { pt3dadd( -37.2535, 316.928, -56.0392, 0.22 ) }
    dend_66 { pt3dadd( -37.2798, 317.435, -55.9881, 0.88 ) }
    dend_66 { pt3dadd( -37.2847, 317.492, -55.9812, 0.88 ) }
    dend_66 { pt3dadd( -37.431, 319.031, -55.8627, 0.15 ) }
    dend_66 { pt3dadd( -37.4904, 319.685, -55.8336, 0.15 ) }
    dend_66 { pt3dadd( -37.4965, 319.762, -55.8325, 0.15 ) }
    dend_66 { pt3dadd( -37.5771, 320.844, -55.8538, 1.25 ) }
    dend_66 { pt3dadd( -37.5947, 321.115, -55.8713, 1.25 ) }
    dend_66 { pt3dadd( -37.7251, 322.916, -56.0521, 0.15 ) }
    dend_66 { pt3dadd( -37.7305, 322.985, -56.0616, 0.15 ) }
    dend_66 { pt3dadd( -37.7823, 323.641, -56.1779, 1.18 ) }
    dend_66 { pt3dadd( -37.8013, 323.843, -56.2168, 1.18 ) }
    dend_66 { pt3dadd( -37.9402, 325.313, -56.5709, 0.15 ) }
    dend_66 { pt3dadd( -38.0735, 326.39, -56.8915, 0.15 ) }
    dend_66 { pt3dadd( -38.116, 326.656, -56.981, 0.44 ) }
    dend_66 { pt3dadd( -38.433, 328.486, -57.6355, 0.15 ) }
    dend_66 { pt3dadd( -38.6784, 329.795, -58.1373, 1.77 ) }
    dend_66 { pt3dadd( -38.83, 330.571, -58.4565, 1.55 ) }
    dend_66 { pt3dadd( -39.0852, 331.801, -58.9991, 0.22 ) }
    dend_66 { pt3dadd( -39.1969, 332.313, -59.2506, 0.37 ) }
    dend_66 { pt3dadd( -39.3939, 333.127, -59.6699, 0.15 ) }
    dend_66 { pt3dadd( -39.4088, 333.177, -59.6967, 0.15 ) }
    dend_66 { pt3dadd( -39.5865, 333.732, -60.0129, 0.74 ) }
    dend_66 { pt3dadd( -39.6886, 334.035, -60.1702, 0.74 ) }
    dend_66 { pt3dadd( -39.9145, 334.747, -60.5097, 0.15 ) }
    dend_66 { pt3dadd( -40.0646, 335.179, -60.7165, 0.66 ) }
    dend_66 { pt3dadd( -40.1852, 335.501, -60.8645, 1.25 ) }
    dend_66 { pt3dadd( -40.7416, 336.898, -61.5136, 0.15 ) }
    dend_66 { pt3dadd( -40.7696, 336.965, -61.5447, 0.15 ) }
    dend_66 { pt3dadd( -41.1176, 337.814, -61.9209, 0.15 ) }
    dend_66 { pt3dadd( -41.4324, 338.615, -62.2461, 0.96 ) }
    dend_66 { pt3dadd( -41.5739, 338.982, -62.3957, 1.55 ) }
    dend_66 { pt3dadd( -42.2808, 340.898, -63.1455, 0.15 ) }
    dend_66 { pt3dadd( -42.2985, 340.95, -63.1636, 0.15 ) }
    dend_66 { pt3dadd( -42.604, 341.913, -63.4838, 1.18 ) }
    dend_66 { pt3dadd( -42.7735, 342.498, -63.669, 0.52 ) }
    dend_66 { pt3dadd( -43.0401, 343.533, -63.9639, 0.15 ) }
    dend_66 { pt3dadd( -43.1835, 344.136, -64.1144, 0.52 ) }
    dend_66 { pt3dadd( -43.5949, 345.895, -64.469, 0.15 ) }
    dend_66 { pt3dadd( -43.7556, 346.491, -64.577, 0.15 ) }
    dend_66 { pt3dadd( -44.0318, 347.364, -64.7202, 0.66 ) }
    dend_66 { pt3dadd( -44.225, 347.892, -64.7935, 0.96 ) }
    dend_66 { pt3dadd( -44.3888, 348.279, -64.8327, 0.96 ) }
    dend_66 { pt3dadd( -45.1139, 349.659, -64.9113, 0.15 ) }
    dend_66 { pt3dadd( -45.6762, 350.545, -64.9294, 0.52 ) }
    dend_66 { pt3dadd( -45.934, 350.923, -64.9303, 0.52 ) }
    dend_66 { pt3dadd( -46.3642, 351.517, -64.9222, 0.15 ) }
    dend_66 { pt3dadd( -46.8887, 352.214, -64.9059, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_66 { pt3dadd( -48.2112, 353.916, -64.8401, 0.15 ) }
    dend_66 { pt3dadd( -48.6881, 354.513, -64.7988, 1.18 ) }
    dend_66 { pt3dadd( -49.0425, 354.961, -64.7722, 0.59 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 3/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -10.8012, 137.117, -18.3374, 0.59 ) }
    dend_29 { pt3dadd( -10.6538, 138.362, -18.3144, 0.59 ) }
    dend_29 { pt3dadd( -10.5641, 139.476, -18.3215, 1.18 ) }
    dend_29 { pt3dadd( -10.5107, 140.552, -18.3628, 1.84 ) }
    dend_29 { pt3dadd( -10.4943, 141.188, -18.3948, 2.06 ) }
    dend_29 { pt3dadd( -10.4957, 141.802, -18.4281, 2.06 ) }
    dend_29 { pt3dadd( -10.5177, 142.584, -18.4705, 1.84 ) }
    dend_29 { pt3dadd( -10.5829, 143.443, -18.5212, 1.55 ) }
    dend_29 { pt3dadd( -10.7576, 144.978, -18.6209, 0.37 ) }
    dend_29 { pt3dadd( -10.8979, 145.959, -18.6856, 0.37 ) }
    dend_29 { pt3dadd( -11.0917, 147.158, -18.7837, 0.96 ) }
    dend_29 { pt3dadd( -11.3024, 148.351, -18.8905, 1.47 ) }
    dend_29 { pt3dadd( -11.4154, 148.942, -18.9433, 1.69 ) }
    dend_29 { pt3dadd( -11.5839, 149.819, -19.0128, 1.55 ) }
    dend_29 { pt3dadd( -11.7387, 150.615, -19.0745, 1.33 ) }
    dend_29 { pt3dadd( -11.8965, 151.648, -19.146, 0.66 ) }
    dend_29 { pt3dadd( -12.0234, 152.954, -19.2456, 0.37 ) }
    dend_29 { pt3dadd( -12.0928, 154.444, -19.3591, 0.29 ) }
    dend_29 { pt3dadd( -12.0997, 155.718, -19.452, 0.29 ) }
    dend_29 { pt3dadd( -12.0956, 155.818, -19.4585, 0.29 ) }
    dend_29 { pt3dadd( -11.9049, 157.99, -19.5613, 0.29 ) }
    dend_29 { pt3dadd( -11.7792, 159.031, -19.5865, 0.81 ) }
    dend_29 { pt3dadd( -11.6721, 159.798, -19.6033, 0.96 ) }
    dend_29 { pt3dadd( -11.6604, 159.893, -19.6047, 0.96 ) }
    dend_29 { pt3dadd( -11.6107, 160.504, -19.6133, 0.96 ) }
    dend_29 { pt3dadd( -11.5566, 162.045, -19.6271, 0.29 ) }
    dend_29 { pt3dadd( -11.5749, 162.954, -19.6342, 0.29 ) }
    dend_29 { pt3dadd( -11.6363, 164.189, -19.6317, 1.47 ) }
    dend_29 { pt3dadd( -11.7122, 165.378, -19.6612, 2.06 ) }
    dend_29 { pt3dadd( -11.7342, 165.815, -19.6786, 2.5 ) }
    dend_29 { pt3dadd( -11.7664, 166.514, -19.7147, 2.43 ) }
    dend_29 { pt3dadd( -11.7932, 167.267, -19.758, 2.14 ) }
    dend_29 { pt3dadd( -11.8164, 168.128, -19.8117, 1.77 ) }
    dend_29 { pt3dadd( -11.845, 169.296, -19.8848, 0.66 ) }
    dend_29 { pt3dadd( -11.8957, 171.069, -19.9888, 0.44 ) }
    dend_29 { pt3dadd( -11.9515, 172.479, -20.0606, 0.37 ) }
    dend_29 { pt3dadd( -12.025, 173.796, -20.12, 0.37 ) }
    dend_29 { pt3dadd( -12.1391, 175.115, -20.1703, 1.33 ) }
    dend_29 { pt3dadd( -12.2789, 176.294, -20.2097, 1.77 ) }
    dend_29 { pt3dadd( -12.4473, 177.402, -20.2349, 2.28 ) }
    dend_29 { pt3dadd( -12.5789, 178.088, -20.2615, 2.65 ) }
    dend_29 { pt3dadd( -12.6976, 178.677, -20.2893, 2.8 ) }
    dend_29 { pt3dadd( -12.8676, 179.495, -20.3308, 2.5 ) }
    dend_29 { pt3dadd( -12.9991, 180.183, -20.3618, 1.99 ) }
    dend_29 { pt3dadd( -13.1007, 180.764, -20.3881, 1.77 ) }
    dend_29 { pt3dadd( -13.2396, 181.713, -20.4265, 0.81 ) }
    dend_29 { pt3dadd( -13.3725, 183.004, -20.4587, 0.44 ) }
    dend_29 { pt3dadd( -13.4652, 184.316, -20.4808, 0.37 ) }
    dend_29 { pt3dadd( -13.4988, 185.474, -20.4828, 0.74 ) }
    dend_29 { pt3dadd( -13.5049, 186.061, -20.4769, 0.74 ) }
    dend_29 { pt3dadd( -13.5153, 186.922, -20.4596, 0.74 ) }
    dend_29 { pt3dadd( -13.5602, 188.653, -20.4308, 0.52 ) }
    dend_29 { pt3dadd( -13.5634, 188.736, -20.4303, 0.44 ) }
    dend_29 { pt3dadd( -13.6332, 190.041, -20.432, 0.44 ) }
    dend_29 { pt3dadd( -13.7097, 191.132, -20.4409, 0.44 ) }
    dend_29 { pt3dadd( -13.8695, 193.039, -20.4662, 0.44 ) }
    dend_29 { pt3dadd( -14.1147, 195.348, -20.511, 1.55 ) }
    dend_29 { pt3dadd( -14.2509, 196.458, -20.5382, 2.43 ) }
    dend_29 { pt3dadd( -14.3487, 197.264, -20.5556, 2.65 ) }
    dend_29 { pt3dadd( -14.4323, 197.96, -20.5801, 2.87 ) }
    dend_29 { pt3dadd( -14.5521, 198.974, -20.6234, 2.36 ) }
    dend_29 { pt3dadd( -14.6775, 200.056, -20.6949, 1.47 ) }
    dend_29 { pt3dadd( -14.7618, 200.78, -20.7414, 0.96 ) }
    dend_29 { pt3dadd( -14.9418, 202.209, -20.8393, 0.37 ) }
    dend_29 { pt3dadd( -15.1104, 203.483, -20.9253, 0.37 ) }
    dend_29 { pt3dadd( -15.3218, 205.057, -21.0257, 0.29 ) }
    dend_29 { pt3dadd( -15.4712, 206.274, -21.1071, 1.69 ) }
    dend_29 { pt3dadd( -15.6055, 207.482, -21.2247, 2.28 ) }
    dend_29 { pt3dadd( -15.6704, 208.019, -21.2936, 2.73 ) }
    dend_29 { pt3dadd( -15.7407, 208.524, -21.3713, 2.8 ) }
    dend_29 { pt3dadd( -15.8764, 209.438, -21.5223, 1.99 ) }
    dend_29 { pt3dadd( -16.0706, 210.722, -21.768, 0.88 ) }
    dend_29 { pt3dadd( -16.345, 212.223, -22.0815, 0.29 ) }
    dend_29 { pt3dadd( -16.5681, 213.233, -22.3251, 0.37 ) }
    dend_29 { pt3dadd( -16.7439, 213.948, -22.4982, 0.44 ) }
    dend_29 { pt3dadd( -16.8531, 214.332, -22.5823, 0.59 ) }
    dend_29 { pt3dadd( -16.9113, 214.522, -22.6135, 0.59 ) }
    dend_29 { pt3dadd( -17.1004, 215.138, -22.6682, 0.44 ) }
    dend_29 { pt3dadd( -17.3555, 216.13, -22.6889, 0.37 ) }
    dend_29 { pt3dadd( -17.3749, 216.225, -22.6889, 0.37 ) }
    dend_29 { pt3dadd( -17.6016, 217.721, -22.6803, 0.52 ) }
    dend_29 { pt3dadd( -17.7496, 219.032, -22.663, 0.81 ) }
    dend_29 { pt3dadd( -17.7932, 219.654, -22.656, 0.81 ) }
    dend_29 { pt3dadd( -17.8131, 220.297, -22.6511, 0.66 ) }
    dend_29 { pt3dadd( -17.8131, 220.379, -22.6531, 0.66 ) }
    dend_29 { pt3dadd( -17.8196, 221.142, -22.7034, 0.44 ) }
    dend_29 { pt3dadd( -17.8257, 222.568, -22.8515, 0.37 ) }
    dend_29 { pt3dadd( -17.8271, 223.903, -23.0097, 0.37 ) }
    dend_29 { pt3dadd( -17.8261, 223.985, -23.023, 0.37 ) }
    dend_29 { pt3dadd( -17.7886, 225.298, -23.3094, 1.62 ) }
    dend_29 { pt3dadd( -17.7498, 226.415, -23.5983, 2.65 ) }
    dend_29 { pt3dadd( -17.7245, 227.06, -23.7851, 2.65 ) }
    dend_29 { pt3dadd( -17.6602, 228.404, -24.2153, 1.92 ) }
    dend_29 { pt3dadd( -17.58, 230.034, -24.7524, 0.74 ) }
    dend_29 { pt3dadd( -17.5306, 231.505, -25.2195, 0.37 ) }
    dend_29 { pt3dadd( -17.5294, 232.805, -25.5722, 0.37 ) }
    dend_29 { pt3dadd( -17.5328, 232.886, -25.5899, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_29 { pt3dadd( -17.6224, 233.719, -25.7308, 0.37 ) }
    dend_29 { pt3dadd( -17.6594, 233.926, -25.751, 0.37 ) }
    dend_29 { pt3dadd( -17.9552, 235.108, -25.7473, 0.37 ) }
    dend_29 { pt3dadd( -18.3689, 236.531, -25.6593, 1.03 ) }
    dend_29 { pt3dadd( -18.7113, 237.682, -25.5684, 1.77 ) }
    dend_29 { pt3dadd( -18.9024, 238.355, -25.5168, 2.06 ) }
    dend_29 { pt3dadd( -19.0873, 239.029, -25.4633, 1.92 ) }
    dend_29 { pt3dadd( -19.3378, 240.024, -25.3949, 1.33 ) }
    dend_29 { pt3dadd( -19.4937, 240.725, -25.359, 0.59 ) }
    dend_29 { pt3dadd( -19.7221, 241.907, -25.338, 0.37 ) }
    dend_29 { pt3dadd( -19.8276, 242.631, -25.3213, 0.59 ) }
    dend_29 { pt3dadd( -19.8684, 243.133, -25.3072, 0.66 ) }
    dend_29 { pt3dadd( -19.8787, 243.44, -25.2983, 0.66 ) }
    dend_29 { pt3dadd( -19.8913, 244.153, -25.2813, 0.37 ) }
    dend_29 { pt3dadd( -19.908, 244.869, -25.2674, 0.37 ) }
    dend_29 { pt3dadd( -19.9759, 246.207, -25.2478, 0.37 ) }
    dend_29 { pt3dadd( -20.0698, 247.51, -25.2334, 0.37 ) }
    dend_29 { pt3dadd( -20.1745, 248.723, -25.223, 0.59 ) }
    dend_29 { pt3dadd( -20.3447, 250.528, -25.21, 0.52 ) }
    dend_29 { pt3dadd( -20.4549, 251.628, -25.2032, 1.33 ) }
    dend_29 { pt3dadd( -20.5627, 252.667, -25.2122, 2.14 ) }
    dend_29 { pt3dadd( -20.6764, 253.691, -25.2553, 2.36 ) }
    dend_29 { pt3dadd( -20.7563, 254.595, -25.3207, 2.58 ) }
    dend_29 { pt3dadd( -20.7821, 255.351, -25.3888, 2.36 ) }
    dend_29 { pt3dadd( -20.7713, 256.487, -25.4987, 1.62 ) }
    dend_29 { pt3dadd( -20.7351, 257.603, -25.614, 0.81 ) }
    dend_29 { pt3dadd( -20.67, 259.008, -25.7576, 0.52 ) }
    dend_29 { pt3dadd( -20.6027, 260.511, -25.8931, 0.52 ) }
    dend_29 { pt3dadd( -20.5593, 261.584, -25.9777, 0.44 ) }
    dend_29 { pt3dadd( -20.5051, 263.593, -26.109, 0.44 ) }
    dend_29 { pt3dadd( -20.4874, 265.586, -26.2026, 1.11 ) }
    dend_29 { pt3dadd( -20.5103, 266.698, -26.2238, 1.84 ) }
    dend_29 { pt3dadd( -20.5753, 267.79, -26.2243, 2.36 ) }
    dend_29 { pt3dadd( -20.6206, 268.178, -26.2241, 2.5 ) }
    dend_29 { pt3dadd( -20.7778, 269.076, -26.2274, 2.21 ) }
    dend_29 { pt3dadd( -20.9684, 269.951, -26.2292, 1.55 ) }
    dend_29 { pt3dadd( -21.1665, 270.744, -26.2279, 0.96 ) }
    dend_29 { pt3dadd( -21.3612, 271.499, -26.23, 0.66 ) }
    dend_29 { pt3dadd( -21.6362, 272.684, -26.2349, 0.37 ) }
    dend_29 { pt3dadd( -21.8405, 273.745, -26.2291, 0.66 ) }
    dend_29 { pt3dadd( -21.9722, 274.56, -26.216, 0.88 ) }
    dend_29 { pt3dadd( -22.134, 275.871, -26.1817, 0.37 ) }
    dend_29 { pt3dadd( -22.2046, 276.682, -26.1538, 0.37 ) }
    dend_29 { pt3dadd( -22.2789, 277.999, -26.0953, 0.37 ) }
    dend_29 { pt3dadd( -22.306, 279.622, -26.0123, 1.11 ) }
    dend_29 { pt3dadd( -22.3041, 279.704, -26.0077, 1.11 ) }
    dend_29 { pt3dadd( -22.2252, 280.83, -25.9586, 1.99 ) }
    dend_29 { pt3dadd( -22.1347, 281.665, -25.9323, 2.21 ) }
    dend_29 { pt3dadd( -22.0565, 282.265, -25.9219, 2.36 ) }
    dend_29 { pt3dadd( -21.872, 283.658, -25.9119, 1.33 ) }
    dend_29 { pt3dadd( -21.7436, 284.623, -25.9122, 0.52 ) }
    dend_29 { pt3dadd( -21.58, 286.068, -25.9216, 0.29 ) }
    dend_29 { pt3dadd( -21.5263, 286.67, -25.9271, 0.59 ) }
    dend_29 { pt3dadd( -21.4921, 287.176, -25.9315, 0.59 ) }
    dend_29 { pt3dadd( -21.4413, 288.182, -25.9364, 0.44 ) }
    dend_29 { pt3dadd( -21.411, 289.104, -25.9353, 0.37 ) }
    dend_29 { pt3dadd( -21.3852, 290.12, -25.9229, 0.37 ) }
    dend_29 { pt3dadd( -21.3575, 291.26, -25.9093, 1.18 ) }
    dend_29 { pt3dadd( -21.3192, 292.098, -25.9092, 1.77 ) }
    dend_29 { pt3dadd( -21.2573, 293.006, -25.9161, 2.06 ) }
    dend_29 { pt3dadd( -21.1887, 293.82, -25.9282, 1.92 ) }
    dend_29 { pt3dadd( -21.1147, 294.615, -25.9459, 1.55 ) }
    dend_29 { pt3dadd( -21.0298, 295.856, -25.9824, 0.37 ) }
    dend_29 { pt3dadd( -20.9733, 297.21, -26.031, 0.37 ) }
    dend_29 { pt3dadd( -20.9735, 297.31, -26.0372, 0.37 ) }
    dend_29 { pt3dadd( -21.0199, 298.323, -26.1171, 0.37 ) }
    dend_29 { pt3dadd( -21.0273, 298.422, -26.1257, 0.37 ) }
    dend_29 { pt3dadd( -21.1962, 300.325, -26.2827, 0.37 ) }
    dend_29 { pt3dadd( -21.2071, 300.424, -26.29, 0.37 ) }
    dend_29 { pt3dadd( -21.4166, 302.196, -26.4424, 1.18 ) }
    dend_29 { pt3dadd( -21.546, 303.291, -26.5398, 1.62 ) }
    dend_29 { pt3dadd( -21.6079, 303.89, -26.5913, 1.84 ) }
    dend_29 { pt3dadd( -21.6848, 304.915, -26.6663, 1.55 ) }
    dend_29 { pt3dadd( -21.7165, 305.92, -26.7407, 1.11 ) }
    dend_29 { pt3dadd( -21.7293, 306.913, -26.8095, 0.52 ) }
    dend_29 { pt3dadd( -21.7187, 308.42, -26.9009, 0.44 ) }
    dend_29 { pt3dadd( -21.6946, 309.59, -26.9765, 0.37 ) }
    dend_29 { pt3dadd( -21.6516, 311.072, -27.0699, 0.37 ) }
    dend_29 { pt3dadd( -21.5642, 313.05, -27.2013, 1.33 ) }
    dend_29 { pt3dadd( -21.5334, 313.649, -27.2392, 1.84 ) }
    dend_29 { pt3dadd( -21.5225, 313.862, -27.2506, 1.84 ) }
    dend_29 { pt3dadd( -21.4898, 314.465, -27.2823, 1.84 ) }
    dend_29 { pt3dadd( -21.4505, 315.81, -27.3435, 1.25 ) }
    dend_29 { pt3dadd( -21.4379, 316.615, -27.3857, 0.74 ) }
    dend_29 { pt3dadd( -21.442, 317.928, -27.4502, 0.37 ) }
    dend_29 { pt3dadd( -21.4453, 318.881, -27.5016, 0.44 ) }
    dend_29 { pt3dadd( -21.4489, 319.929, -27.5723, 0.44 ) }
    dend_29 { pt3dadd( -21.4601, 321.433, -27.6879, 0.44 ) }
    dend_29 { pt3dadd( -21.4775, 322.681, -27.794, 1.03 ) }
    dend_29 { pt3dadd( -21.5068, 323.797, -27.8901, 1.18 ) }
    dend_29 { pt3dadd( -21.5279, 324.75, -27.9906, 0.74 ) }
    dend_29 { pt3dadd( -21.549, 325.456, -28.0726, 0.74 ) }
    dend_29 { pt3dadd( -21.5925, 326.552, -28.2029, 0.59 ) }
    dend_29 { pt3dadd( -21.5973, 326.652, -28.214, 0.59 ) }
    dend_29 { pt3dadd( -21.6466, 327.459, -28.2842, 0.59 ) }
    dend_29 { pt3dadd( -21.7336, 329.064, -28.4429, 1.47 ) }
    dend_29 { pt3dadd( -21.7785, 330.066, -28.5381, 2.21 ) }
    dend_29 { pt3dadd( -21.8072, 330.874, -28.608, 2.5 ) }
    dend_29 { pt3dadd( -21.815, 331.572, -28.6648, 2.65 ) }
    dend_29 { pt3dadd( -21.794, 332.903, -28.7522, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_29 { pt3dadd( -21.7292, 334.256, -28.8153, 0.74 ) }
    dend_29 { pt3dadd( -21.6057, 335.833, -28.8768, 0.52 ) }
    dend_29 { pt3dadd( -21.594, 335.942, -28.8825, 0.52 ) }
    dend_29 { pt3dadd( -21.4243, 337.224, -28.9577, 0.52 ) }
    dend_29 { pt3dadd( -21.1537, 338.926, -29.0733, 1.33 ) }
    dend_29 { pt3dadd( -20.9416, 340.122, -29.1591, 1.4 ) }
    dend_29 { pt3dadd( -20.7027, 341.386, -29.2503, 1.18 ) }
    dend_29 { pt3dadd( -20.5289, 342.363, -29.3428, 0.52 ) }
    dend_29 { pt3dadd( -20.4998, 342.556, -29.3658, 0.52 ) }
    dend_29 { pt3dadd( -20.3596, 343.698, -29.5262, 0.52 ) }
    dend_29 { pt3dadd( -20.2678, 344.64, -29.6678, 0.52 ) }
    dend_29 { pt3dadd( -20.1433, 346.354, -29.9138, 0.74 ) }
    dend_29 { pt3dadd( -20.0713, 347.858, -30.0961, 0.96 ) }
    dend_29 { pt3dadd( -20.0211, 349.432, -30.2742, 1.99 ) }
    dend_29 { pt3dadd( -20.01, 349.952, -30.3284, 2.58 ) }
    dend_29 { pt3dadd( -19.9916, 350.681, -30.3913, 2.36 ) }
    dend_29 { pt3dadd( -19.9612, 351.504, -30.449, 2.14 ) }
    dend_29 { pt3dadd( -19.8908, 352.711, -30.5031, 1.03 ) }
    dend_29 { pt3dadd( -19.7721, 354.004, -30.538, 0.52 ) }
    dend_29 { pt3dadd( -19.6087, 355.484, -30.5725, 0.52 ) }
    dend_29 { pt3dadd( -19.4404, 357.042, -30.5956, 0.52 ) }
    dend_29 { pt3dadd( -19.3546, 357.877, -30.6017, 0.88 ) }
    dend_29 { pt3dadd( -19.2753, 358.677, -30.6007, 0.52 ) }
    dend_29 { pt3dadd( -19.1585, 359.984, -30.5862, 0.52 ) }
    dend_29 { pt3dadd( -19.0869, 361.031, -30.5609, 0.52 ) }
    dend_29 { pt3dadd( -19.0216, 362.719, -30.5207, 1.4 ) }
    dend_29 { pt3dadd( -19.0084, 363.654, -30.5, 1.77 ) }
    dend_29 { pt3dadd( -19.0103, 364.275, -30.4839, 1.92 ) }
    dend_29 { pt3dadd( -19.0177, 364.876, -30.4658, 1.62 ) }
    dend_29 { pt3dadd( -19.0368, 365.906, -30.4296, 1.11 ) }
    dend_29 { pt3dadd( -19.0558, 367.128, -30.3886, 0.74 ) }
    dend_29 { pt3dadd( -19.0766, 368.908, -30.3506, 0.59 ) }
    dend_29 { pt3dadd( -19.1119, 371.04, -30.3061, 0.59 ) }
    dend_29 { pt3dadd( -19.145, 372.711, -30.2713, 0.44 ) }
    dend_29 { pt3dadd( -19.1571, 373.423, -30.2559, 0.66 ) }
    dend_29 { pt3dadd( -19.1585, 373.522, -30.2536, 0.66 ) }
    dend_29 { pt3dadd( -19.1779, 375.143, -30.2146, 1.33 ) }
    dend_29 { pt3dadd( -19.1951, 376.458, -30.1817, 2.21 ) }
    dend_29 { pt3dadd( -19.2067, 377.474, -30.1386, 2.73 ) }
    dend_29 { pt3dadd( -19.2343, 378.429, -30.0939, 2.87 ) }
    dend_29 { pt3dadd( -19.25, 378.871, -30.0771, 3.09 ) }
    dend_29 { pt3dadd( -19.2971, 379.805, -30.0565, 2.36 ) }
    dend_29 { pt3dadd( -19.373, 380.915, -30.0477, 1.25 ) }
    dend_29 { pt3dadd( -19.4435, 381.711, -30.0556, 0.66 ) }
    dend_29 { pt3dadd( -19.6241, 383.332, -30.1214, 0.37 ) }
    dend_29 { pt3dadd( -19.7931, 384.569, -30.2022, 0.66 ) }
    dend_29 { pt3dadd( -19.9234, 385.481, -30.2762, 0.52 ) }
    dend_29 { pt3dadd( -19.992, 385.985, -30.3241, 0.66 ) }
    dend_29 { pt3dadd( -20.1122, 386.982, -30.4272, 0.74 ) }
    dend_29 { pt3dadd( -20.2194, 388.126, -30.5699, 0.81 ) }
    dend_29 { pt3dadd( -20.2911, 389.333, -30.7424, 1.25 ) }
    dend_29 { pt3dadd( -20.3085, 390.098, -30.8571, 1.69 ) }
    dend_29 { pt3dadd( -20.3002, 390.666, -30.9461, 1.69 ) }
    dend_29 { pt3dadd( -20.2521, 391.779, -31.1214, 1.4 ) }
    dend_29 { pt3dadd( -20.1714, 392.998, -31.3145, 1.11 ) }
    dend_29 { pt3dadd( -20.0863, 393.988, -31.4528, 0.74 ) }
    dend_29 { pt3dadd( -19.9596, 395.46, -31.6439, 0.59 ) }
    dend_29 { pt3dadd( -19.9517, 395.569, -31.6574, 0.59 ) }
    dend_29 { pt3dadd( -19.8936, 396.689, -31.7769, 0.59 ) }
    dend_29 { pt3dadd( -19.8898, 396.786, -31.7843, 0.59 ) }
    dend_29 { pt3dadd( -19.8662, 398.701, -31.8488, 0.59 ) }
    dend_29 { pt3dadd( -19.8936, 399.908, -31.8587, 1.11 ) }
    dend_29 { pt3dadd( -19.8996, 400.004, -31.8603, 1.11 ) }
    dend_29 { pt3dadd( -19.9772, 400.895, -31.8768, 1.77 ) }
    dend_29 { pt3dadd( -20.0674, 401.73, -31.8996, 2.06 ) }
    dend_29 { pt3dadd( -20.1522, 402.425, -31.927, 2.06 ) }
    dend_29 { pt3dadd( -20.2822, 403.323, -31.971, 1.77 ) }
    dend_29 { pt3dadd( -20.3695, 403.939, -32.0003, 1.4 ) }
    dend_29 { pt3dadd( -20.4632, 404.647, -32.0329, 0.81 ) }
    dend_29 { pt3dadd( -20.6749, 406.252, -32.1125, 0.59 ) }
    dend_29 { pt3dadd( -20.878, 407.872, -32.1929, 0.59 ) }
    dend_29 { pt3dadd( -20.9856, 408.873, -32.2511, 0.96 ) }
    dend_29 { pt3dadd( -21.0616, 409.57, -32.2955, 0.96 ) }
    dend_29 { pt3dadd( -21.0855, 409.785, -32.3091, 0.96 ) }
    dend_29 { pt3dadd( -21.145, 410.33, -32.3463, 0.81 ) }
    dend_29 { pt3dadd( -21.2433, 411.281, -32.4101, 0.81 ) }
    dend_29 { pt3dadd( -21.3862, 412.824, -32.5099, 0.37 ) }
    dend_29 { pt3dadd( -21.5126, 414.337, -32.6059, 0.37 ) }
    dend_29 { pt3dadd( -21.6206, 415.749, -32.6639, 0.37 ) }
    dend_29 { pt3dadd( -21.6916, 416.734, -32.6845, 1.25 ) }
    dend_29 { pt3dadd( -21.7494, 417.749, -32.6707, 1.77 ) }
    dend_29 { pt3dadd( -21.7912, 418.587, -32.6295, 2.28 ) }
    dend_29 { pt3dadd( -21.8127, 419.383, -32.557, 2.58 ) }
    dend_29 { pt3dadd( -21.8162, 420.392, -32.4438, 2.36 ) }
    dend_29 { pt3dadd( -21.8193, 421.282, -32.3334, 1.92 ) }
    dend_29 { pt3dadd( -21.8231, 422.378, -32.1952, 0.96 ) }
    dend_29 { pt3dadd( -21.8255, 423.402, -32.0761, 0.37 ) }
    dend_29 { pt3dadd( -21.8397, 424.856, -31.9326, 0.37 ) }
    dend_29 { pt3dadd( -21.8573, 425.885, -31.8683, 0.74 ) }
    dend_29 { pt3dadd( -21.8736, 426.489, -31.855, 0.74 ) }
    dend_29 { pt3dadd( -21.9073, 427.369, -31.8567, 0.74 ) }
    dend_29 { pt3dadd( -21.9487, 428.28, -31.9058, 0.37 ) }
    dend_29 { pt3dadd( -21.9921, 429.281, -32.0151, 0.29 ) }
    dend_29 { pt3dadd( -22.023, 430.051, -32.1407, 0.29 ) }
    dend_29 { pt3dadd( -22.026, 430.147, -32.1601, 0.29 ) }
    dend_29 { pt3dadd( -22.0619, 432.033, -32.6175, 0.29 ) }
    dend_29 { pt3dadd( -22.0555, 433.012, -32.8861, 0.74 ) }
    dend_29 { pt3dadd( -22.0122, 434.502, -33.3067, 1.84 ) }
    dend_29 { pt3dadd( -21.9895, 435.055, -33.4554, 2.28 ) }
    dend_29 { pt3dadd( -21.9868, 435.135, -33.4743, 2.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_29 { pt3dadd( -21.9641, 436.024, -33.6604, 2.06 ) }
    dend_29 { pt3dadd( -21.9455, 437.247, -33.8763, 1.25 ) }
    dend_29 { pt3dadd( -21.9607, 438.673, -34.0464, 0.15 ) }
    dend_29 { pt3dadd( -21.9814, 439.486, -34.1054, 0.15 ) }
    dend_29 { pt3dadd( -22.0317, 440.714, -34.1603, 0.74 ) }
    dend_29 { pt3dadd( -22.0591, 441.209, -34.1708, 1.03 ) }
    dend_29 { pt3dadd( -22.1032, 441.826, -34.1707, 1.03 ) }
    dend_29 { pt3dadd( -22.1629, 442.513, -34.1649, 0.74 ) }
    dend_29 { pt3dadd( -22.2351, 443.481, -34.2, 0.22 ) }
    dend_29 { pt3dadd( -22.3061, 444.682, -34.2783, 0.22 ) }
    dend_29 { pt3dadd( -22.3975, 446.708, -34.442, 0.88 ) }
    dend_29 { pt3dadd( -22.4285, 447.517, -34.5098, 1.47 ) }
    dend_29 { pt3dadd( -22.4505, 448.215, -34.5741, 1.69 ) }
    dend_29 { pt3dadd( -22.4864, 449.725, -34.7187, 1.03 ) }
    dend_29 { pt3dadd( -22.52, 451.262, -34.8688, 0.37 ) }
    dend_29 { pt3dadd( -22.5356, 453.315, -35.0592, 0.37 ) }
    dend_29 { pt3dadd( -22.5192, 455.135, -35.2298, 0.29 ) }
    dend_29 { pt3dadd( -22.496, 457.003, -35.387, 1.4 ) }
    dend_29 { pt3dadd( -22.4897, 457.732, -35.438, 1.84 ) }
    dend_29 { pt3dadd( -22.4891, 458.544, -35.4764, 1.69 ) }
    dend_29 { pt3dadd( -22.4868, 459.656, -35.5378, 0.81 ) }
    dend_29 { pt3dadd( -22.4828, 461.523, -35.6454, 0.29 ) }
    dend_29 { pt3dadd( -22.4767, 463.224, -35.7382, 0.29 ) }
    dend_29 { pt3dadd( -22.4735, 464.121, -35.774, 0.96 ) }
    dend_29 { pt3dadd( -22.4733, 464.946, -35.8, 1.33 ) }
    dend_29 { pt3dadd( -22.4711, 465.719, -35.8127, 1.33 ) }
    dend_29 { pt3dadd( -22.4659, 466.404, -35.821, 1.03 ) }
    dend_29 { pt3dadd( -22.4638, 466.491, -35.8209, 1.03 ) }
    dend_29 { pt3dadd( -22.3898, 468.06, -35.827, 0.29 ) }
    dend_29 { pt3dadd( -22.3062, 469.487, -35.8366, 0.29 ) }
    dend_29 { pt3dadd( -22.2007, 471.278, -35.8854, 0.88 ) }
    dend_29 { pt3dadd( -22.1382, 472.582, -35.9389, 1.69 ) }
    dend_29 { pt3dadd( -22.111, 473.326, -35.9746, 2.36 ) }
    dend_29 { pt3dadd( -22.1055, 473.738, -35.9964, 2.58 ) }
    dend_29 { pt3dadd( -22.1117, 474.786, -36.0594, 2.06 ) }
    dend_29 { pt3dadd( -22.147, 476.892, -36.1762, 0.37 ) }
    dend_29 { pt3dadd( -22.1889, 478.289, -36.245, 0.37 ) }
    dend_29 { pt3dadd( -22.2545, 479.814, -36.3, 0.37 ) }
    dend_29 { pt3dadd( -22.3086, 481.017, -36.3348, 0.37 ) }
    dend_29 { pt3dadd( -22.3126, 481.117, -36.3366, 0.37 ) }
    dend_29 { pt3dadd( -22.3693, 483.441, -36.3392, 0.37 ) }
    dend_29 { pt3dadd( -22.3685, 483.541, -36.3397, 0.37 ) }
    dend_29 { pt3dadd( -22.3131, 484.852, -36.3693, 0.37 ) }
    dend_29 { pt3dadd( -22.2455, 485.886, -36.4081, 0.96 ) }
    dend_29 { pt3dadd( -22.1548, 487.063, -36.4638, 1.25 ) }
    dend_29 { pt3dadd( -22.0566, 488.26, -36.5283, 0.88 ) }
    dend_29 { pt3dadd( -21.8803, 490.201, -36.648, 0.29 ) }
    dend_29 { pt3dadd( -21.8654, 490.349, -36.6568, 0.29 ) }
    dend_29 { pt3dadd( -21.723, 491.561, -36.754, 0.88 ) }
    dend_29 { pt3dadd( -21.5909, 492.676, -36.8502, 1.62 ) }
    dend_29 { pt3dadd( -21.5139, 493.344, -36.9049, 1.99 ) }
    dend_29 { pt3dadd( -21.4339, 494.021, -36.9495, 1.99 ) }
    dend_29 { pt3dadd( -21.3512, 494.64, -36.9711, 1.69 ) }
    dend_29 { pt3dadd( -21.1424, 495.978, -37.0412, 0.59 ) }
    dend_29 { pt3dadd( -20.8454, 497.654, -37.1397, 0.29 ) }
    dend_29 { pt3dadd( -20.6654, 498.672, -37.2202, 0.81 ) }
    dend_29 { pt3dadd( -20.5132, 499.561, -37.2976, 0.81 ) }
    dend_29 { pt3dadd( -20.3115, 500.806, -37.4095, 0.29 ) }
    dend_29 { pt3dadd( -20.1155, 502.137, -37.525, 0.29 ) }
    dend_29 { pt3dadd( -19.8375, 504.155, -37.7474, 0.29 ) }
    dend_29 { pt3dadd( -19.5869, 506.151, -38.0359, 1.25 ) }
    dend_29 { pt3dadd( -19.4999, 506.908, -38.1553, 1.69 ) }
    dend_29 { pt3dadd( -19.4353, 507.512, -38.2533, 1.92 ) }
    dend_29 { pt3dadd( -19.3293, 508.585, -38.4241, 1.47 ) }
    dend_29 { pt3dadd( -19.1303, 510.467, -38.6895, 0.29 ) }
    dend_29 { pt3dadd( -18.9852, 511.589, -38.8441, 0.29 ) }
    dend_29 { pt3dadd( -18.7509, 513.086, -39.0201, 0.88 ) }
    dend_29 { pt3dadd( -18.6238, 513.804, -39.0944, 1.18 ) }
    dend_29 { pt3dadd( -18.4816, 514.519, -39.1544, 0.96 ) }
    dend_29 { pt3dadd( -18.2661, 515.52, -39.2057, 0.44 ) }
    dend_29 { pt3dadd( -17.9998, 516.814, -39.2017, 0.29 ) }
    dend_29 { pt3dadd( -17.9719, 516.953, -39.2065, 0.29 ) }
    dend_29 { pt3dadd( -17.7891, 518.123, -39.2902, 0.29 ) }
    dend_29 { pt3dadd( -17.7781, 518.222, -39.2989, 0.29 ) }
    dend_29 { pt3dadd( -17.7167, 518.934, -39.3748, 0.81 ) }
    dend_29 { pt3dadd( -17.6771, 519.533, -39.4409, 0.81 ) }
    dend_29 { pt3dadd( -17.5957, 520.609, -39.5519, 0.66 ) }
    dend_29 { pt3dadd( -17.4564, 522.122, -39.698, 0.29 ) }
    dend_29 { pt3dadd( -17.3112, 523.362, -39.7981, 0.29 ) }
    dend_29 { pt3dadd( -17.1485, 524.581, -39.8957, 1.11 ) }
    dend_29 { pt3dadd( -17.002, 525.66, -39.9743, 1.69 ) }
    dend_29 { pt3dadd( -16.912, 526.417, -40.0286, 1.92 ) }
    dend_29 { pt3dadd( -16.8472, 527.083, -40.0702, 1.92 ) }
    dend_29 { pt3dadd( -16.7264, 528.761, -40.1911, 0.74 ) }
    dend_29 { pt3dadd( -16.6707, 530.086, -40.2914, 0.37 ) }
    dend_29 { pt3dadd( -16.6534, 531.583, -40.4009, 0.37 ) }
    dend_29 { pt3dadd( -16.6721, 533.334, -40.5423, 0.29 ) }
    dend_29 { pt3dadd( -16.6991, 534.36, -40.6346, 0.29 ) }
    dend_29 { pt3dadd( -16.7223, 535.266, -40.7243, 0.88 ) }
    dend_29 { pt3dadd( -16.7335, 535.855, -40.7827, 0.88 ) }
    dend_29 { pt3dadd( -16.7268, 536.599, -40.8415, 0.52 ) }
    dend_29 { pt3dadd( -16.6893, 537.464, -40.9057, 0.29 ) }
    dend_29 { pt3dadd( -16.6322, 538.375, -40.9646, 0.29 ) }
    dend_29 { pt3dadd( -16.5733, 539.57, -41.0412, 0.29 ) }
    dend_29 { pt3dadd( -16.5407, 540.698, -41.1069, 1.55 ) }
    dend_29 { pt3dadd( -16.5079, 542.03, -41.1663, 2.58 ) }
    dend_29 { pt3dadd( -16.4935, 542.665, -41.1814, 2.65 ) }
    dend_29 { pt3dadd( -16.4595, 543.673, -41.1804, 2.21 ) }
    dend_29 { pt3dadd( -16.3897, 544.987, -41.1706, 1.11 ) }
    dend_29 { pt3dadd( -16.3051, 546.187, -41.1622, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_29 { pt3dadd( -16.1815, 547.642, -41.1585, 0.52 ) }
    dend_29 { pt3dadd( -16.0197, 549.124, -41.1569, 0.74 ) }
    dend_29 { pt3dadd( -15.8354, 550.525, -41.1554, 0.88 ) }
    dend_29 { pt3dadd( -15.608, 551.88, -41.1506, 1.33 ) }
    dend_29 { pt3dadd( -15.5902, 551.96, -41.1512, 1.33 ) }
    dend_29 { pt3dadd( -15.3838, 552.736, -41.1646, 1.62 ) }
    dend_29 { pt3dadd( -15.2212, 553.278, -41.177, 1.62 ) }
    dend_29 { pt3dadd( -15.1851, 553.383, -41.1784, 1.62 ) }
    dend_29 { pt3dadd( -15.0932, 553.643, -41.177, 1.62 ) }
    dend_29 { pt3dadd( -14.5379, 555.18, -41.1351, 0.52 ) }
    dend_29 { pt3dadd( -14.1227, 556.361, -41.0998, 0.29 ) }
    dend_29 { pt3dadd( -13.7484, 557.425, -41.0688, 0.29 ) }
    dend_29 { pt3dadd( -13.4101, 558.504, -40.9894, 0.96 ) }
    dend_29 { pt3dadd( -13.2238, 559.22, -40.8981, 1.4 ) }
    dend_29 { pt3dadd( -13.2068, 559.314, -40.8819, 1.4 ) }
    dend_29 { pt3dadd( -13.1497, 559.918, -40.7577, 1.4 ) }
    dend_29 { pt3dadd( -13.146, 560.033, -40.7305, 1.4 ) }
    dend_29 { pt3dadd( -13.1607, 561.509, -40.3665, 1.03 ) }
    dend_29 { pt3dadd( -13.2032, 562.856, -40.0371, 0.44 ) }
    dend_29 { pt3dadd( -13.2552, 564.543, -39.6432, 0.29 ) }
    dend_29 { pt3dadd( -13.2999, 565.73, -39.3465, 0.29 ) }
    dend_29 { pt3dadd( -13.356, 567.199, -38.9839, 1.33 ) }
    dend_29 { pt3dadd( -13.3872, 567.976, -38.7998, 1.84 ) }
    dend_29 { pt3dadd( -13.4202, 568.77, -38.6299, 1.84 ) }
    dend_29 { pt3dadd( -13.4613, 569.664, -38.4426, 1.25 ) }
    dend_29 { pt3dadd( -13.5539, 571.346, -38.11, 0.37 ) }
    dend_29 { pt3dadd( -13.6785, 573.207, -37.8076, 0.29 ) }
    dend_29 { pt3dadd( -13.6866, 573.302, -37.7949, 0.29 ) }
    dend_29 { pt3dadd( -13.7976, 574.402, -37.661, 0.44 ) }
    dend_29 { pt3dadd( -13.9568, 575.811, -37.5119, 0.52 ) }
    dend_29 { pt3dadd( -14.1346, 577.192, -37.3967, 0.44 ) }
    dend_29 { pt3dadd( -14.365, 578.993, -37.3227, 0.44 ) }
    dend_29 { pt3dadd( -14.6208, 580.943, -37.2628, 1.11 ) }
    dend_29 { pt3dadd( -14.7616, 582.054, -37.2374, 1.69 ) }
    dend_29 { pt3dadd( -14.8496, 582.779, -37.2275, 1.84 ) }
    dend_29 { pt3dadd( -14.933, 583.559, -37.2239, 1.84 ) }
    dend_29 { pt3dadd( -15.0763, 585.07, -37.2334, 0.66 ) }
    dend_29 { pt3dadd( -15.21, 586.676, -37.2658, 0.37 ) }
    dend_29 { pt3dadd( -15.2242, 586.872, -37.2728, 0.37 ) }
    dend_29 { pt3dadd( -15.3547, 588.797, -37.3308, 0.37 ) }
    dend_29 { pt3dadd( -15.4328, 590.334, -37.3604, 0.96 ) }
    dend_29 { pt3dadd( -15.4367, 590.534, -37.3625, 0.96 ) }
    dend_29 { pt3dadd( -15.422, 591.555, -37.3603, 1.55 ) }
    dend_29 { pt3dadd( -15.3574, 592.474, -37.3604, 1.84 ) }
    dend_29 { pt3dadd( -15.347, 592.571, -37.3606, 1.84 ) }
    dend_29 { pt3dadd( -15.2331, 593.414, -37.3648, 1.69 ) }
    dend_29 { pt3dadd( -15.0618, 594.626, -37.3736, 0.74 ) }
    dend_29 { pt3dadd( -14.8988, 595.917, -37.3419, 0.29 ) }
    dend_29 { pt3dadd( -14.7496, 597.358, -37.27, 0.29 ) }
    dend_29 { pt3dadd( -14.7431, 597.457, -37.2632, 0.29 ) }
    dend_29 { pt3dadd( -14.7005, 598.865, -37.1456, 0.29 ) }
    dend_29 { pt3dadd( -14.702, 598.962, -37.1357, 0.29 ) }
    dend_29 { pt3dadd( -14.7731, 600.376, -36.9508, 0.81 ) }
    dend_29 { pt3dadd( -14.8422, 601.26, -36.8266, 1.47 ) }
    dend_29 { pt3dadd( -14.9081, 601.966, -36.7342, 1.77 ) }
    dend_29 { pt3dadd( -14.923, 602.121, -36.7197, 1.77 ) }
    dend_29 { pt3dadd( -14.9882, 602.916, -36.6714, 1.55 ) }
    dend_29 { pt3dadd( -15.0034, 603.112, -36.6652, 1.55 ) }
    dend_29 { pt3dadd( -15.0721, 604.044, -36.6666, 0.96 ) }
    dend_29 { pt3dadd( -15.1222, 605.073, -36.6638, 0.59 ) }
    dend_29 { pt3dadd( -15.1892, 606.978, -36.6174, 0.29 ) }
    dend_29 { pt3dadd( -15.2227, 608.238, -36.5685, 0.29 ) }
    dend_29 { pt3dadd( -15.2246, 608.338, -36.5634, 0.29 ) }
    dend_29 { pt3dadd( -15.2405, 609.862, -36.4705, 0.59 ) }
    dend_29 { pt3dadd( -15.2399, 610.867, -36.3967, 0.81 ) }
    dend_29 { pt3dadd( -15.2105, 612.158, -36.2886, 1.25 ) }
    dend_29 { pt3dadd( -15.1814, 612.79, -36.2307, 1.62 ) }
    dend_29 { pt3dadd( -15.162, 613.29, -36.191, 1.69 ) }
    dend_29 { pt3dadd( -15.1521, 613.506, -36.1769, 1.69 ) }
    dend_29 { pt3dadd( -15.12, 614.236, -36.1407, 1.25 ) }
    dend_29 { pt3dadd( -15.0841, 615.419, -36.0837, 0.66 ) }
    dend_29 { pt3dadd( -15.0497, 616.64, -36.0298, 0.66 ) }
    dend_29 { pt3dadd( -15.0132, 618.067, -35.9576, 0.66 ) }
    dend_29 { pt3dadd( -14.976, 619.792, -35.863, 0.37 ) }
    dend_29 { pt3dadd( -14.9657, 621.013, -35.7944, 0.37 ) }
    dend_29 { pt3dadd( -14.9549, 622.481, -35.7074, 1.62 ) }
    dend_29 { pt3dadd( -14.9425, 623.292, -35.6566, 2.06 ) }
    dend_29 { pt3dadd( -14.9267, 623.841, -35.6215, 2.06 ) }
    dend_29 { pt3dadd( -14.8848, 625.061, -35.5462, 1.47 ) }
    dend_29 { pt3dadd( -14.8365, 626.263, -35.4776, 0.81 ) }
    dend_29 { pt3dadd( -14.7542, 627.617, -35.4139, 0.37 ) }
    dend_29 { pt3dadd( -14.6219, 629.236, -35.3625, 0.88 ) }
    dend_29 { pt3dadd( -14.6118, 629.332, -35.3594, 0.88 ) }
    dend_29 { pt3dadd( -14.5288, 630.025, -35.3367, 0.88 ) }
    dend_29 { pt3dadd( -14.5169, 630.111, -35.3339, 0.88 ) }
    dend_29 { pt3dadd( -14.4082, 630.96, -35.3167, 1.11 ) }
    dend_29 { pt3dadd( -14.3806, 631.202, -35.3161, 1.11 ) }
    dend_29 { pt3dadd( -14.3398, 631.692, -35.2893, 1.11 ) }
    dend_29 { pt3dadd( -14.3323, 631.791, -35.2809, 1.11 ) }
    dend_29 { pt3dadd( -14.2741, 632.596, -35.1938, 0.81 ) }
    dend_29 { pt3dadd( -14.1957, 633.811, -35.0432, 0.66 ) }
    dend_29 { pt3dadd( -14.125, 634.945, -34.8889, 0.44 ) }
    dend_29 { pt3dadd( -14.0226, 636.502, -34.6686, 0.29 ) }
    dend_29 { pt3dadd( -14.0113, 636.653, -34.6466, 0.29 ) }
    dend_29 { pt3dadd( -13.9323, 637.458, -34.5257, 0.29 ) }
    dend_29 { pt3dadd( -13.9144, 637.604, -34.5041, 0.29 ) }
    dend_29 { pt3dadd( -13.7869, 638.771, -34.37, 0.81 ) }
    dend_29 { pt3dadd( -13.7761, 638.897, -34.3605, 0.81 ) }
    dend_29 { pt3dadd( -13.7217, 639.667, -34.3016, 0.81 ) }
    dend_29 { pt3dadd( -13.7059, 639.962, -34.2732, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_29 { pt3dadd( -13.627, 641.507, -34.1054, 0.59 ) }
    dend_29 { pt3dadd( -13.5472, 643.406, -33.8878, 0.88 ) }
    dend_29 { pt3dadd( -13.5418, 643.602, -33.8657, 0.88 ) }
    dend_29 { pt3dadd( -13.5285, 645.304, -33.6133, 1.62 ) }
    dend_29 { pt3dadd( -13.5366, 646.038, -33.4883, 1.77 ) }
    dend_29 { pt3dadd( -13.5568, 647.163, -33.2811, 1.4 ) }
    dend_29 { pt3dadd( -13.583, 648.269, -33.0629, 0.88 ) }
    dend_29 { pt3dadd( -13.6418, 650.17, -32.6853, 0.52 ) }
    dend_29 { pt3dadd( -13.7158, 651.797, -32.3947, 0.74 ) }
    dend_29 { pt3dadd( -13.7903, 652.805, -32.2484, 1.33 ) }
    dend_29 { pt3dadd( -13.9084, 653.864, -32.102, 1.84 ) }
    dend_29 { pt3dadd( -13.9824, 654.443, -32.0296, 1.99 ) }
    dend_29 { pt3dadd( -14.0835, 655.257, -31.9422, 1.99 ) }
    dend_29 { pt3dadd( -14.2035, 656.327, -31.8523, 1.18 ) }
    dend_29 { pt3dadd( -14.3456, 657.751, -31.7741, 0.52 ) }
    dend_29 { pt3dadd( -14.5322, 659.881, -31.6489, 0.44 ) }
    dend_29 { pt3dadd( -14.6595, 661.48, -31.5541, 1.03 ) }
    dend_29 { pt3dadd( -14.7325, 662.714, -31.4813, 1.25 ) }
    dend_29 { pt3dadd( -14.7438, 663.567, -31.4313, 1.55 ) }
    dend_29 { pt3dadd( -14.7414, 663.667, -31.4257, 1.55 ) }
    dend_29 { pt3dadd( -14.6905, 664.621, -31.3792, 1.55 ) }
    dend_29 { pt3dadd( -14.6194, 665.835, -31.3385, 1.25 ) }
    dend_29 { pt3dadd( -14.5666, 667.167, -31.2981, 0.74 ) }
    dend_29 { pt3dadd( -14.4912, 669.645, -31.227, 0.29 ) }
    dend_29 { pt3dadd( -14.4892, 669.741, -31.2244, 0.29 ) }
    dend_29 { pt3dadd( -14.4576, 671.98, -31.1664, 0.29 ) }
    dend_29 { pt3dadd( -14.4615, 673.808, -31.1242, 0.29 ) }
    dend_29 { pt3dadd( -14.5018, 675.53, -31.0908, 1.47 ) }
    dend_29 { pt3dadd( -14.5509, 676.593, -31.0743, 2.06 ) }
    dend_29 { pt3dadd( -14.6045, 677.293, -31.0672, 2.36 ) }
    dend_29 { pt3dadd( -14.7058, 678.525, -31.0557, 2.06 ) }
    dend_29 { pt3dadd( -14.8867, 680.617, -31.0379, 0.81 ) }
    dend_29 { pt3dadd( -15.0804, 682.535, -30.9838, 0.81 ) }
    dend_29 { pt3dadd( -15.2174, 683.765, -30.9273, 0.52 ) }
    dend_29 { pt3dadd( -15.3909, 685.25, -30.8345, 0.81 ) }
    dend_29 { pt3dadd( -15.5539, 686.679, -30.7205, 1.03 ) }
    dend_29 { pt3dadd( -15.564, 686.776, -30.7106, 1.03 ) }
    dend_29 { pt3dadd( -15.6616, 688.074, -30.5443, 1.03 ) }
    dend_29 { pt3dadd( -15.6715, 688.313, -30.5028, 1.03 ) }
    dend_29 { pt3dadd( -15.6919, 689.644, -30.2512, 0.88 ) }
    dend_29 { pt3dadd( -15.6888, 689.798, -30.2215, 0.88 ) }
    dend_29 { pt3dadd( -15.6315, 691.207, -29.9651, 0.74 ) }
    dend_29 { pt3dadd( -15.5258, 692.778, -29.7119, 0.37 ) }
    dend_29 { pt3dadd( -15.3433, 694.792, -29.4403, 1.18 ) }
    dend_29 { pt3dadd( -15.2257, 696.144, -29.2725, 1.92 ) }
    dend_29 { pt3dadd( -15.1626, 696.954, -29.1826, 1.92 ) }
    dend_29 { pt3dadd( -15.0971, 697.89, -29.0911, 1.62 ) }
    dend_29 { pt3dadd( -15.0099, 699.365, -28.9743, 0.96 ) }
    dend_29 { pt3dadd( -14.9383, 700.804, -28.8892, 0.74 ) }
    dend_29 { pt3dadd( -14.8656, 702.534, -28.8461, 0.74 ) }
    dend_29 { pt3dadd( -14.8349, 704.06, -28.8215, 0.74 ) }
    dend_29 { pt3dadd( -14.8334, 704.257, -28.8195, 0.74 ) }
    dend_29 { pt3dadd( -14.842, 705.757, -28.812, 0.74 ) }
    dend_29 { pt3dadd( -14.845, 705.991, -28.8136, 0.74 ) }
    dend_29 { pt3dadd( -14.8572, 707.652, -28.8392, 0.74 ) }
    dend_29 { pt3dadd( -14.8586, 709.485, -28.8769, 0.96 ) }
    dend_29 { pt3dadd( -14.8559, 709.9, -28.8865, 0.96 ) }
    dend_29 { pt3dadd( -14.8412, 711.622, -28.921, 0.96 ) }
    dend_29 { pt3dadd( -14.8377, 712.687, -28.9376, 1.47 ) }
    dend_29 { pt3dadd( -14.8397, 712.994, -28.9404, 1.47 ) }
    dend_29 { pt3dadd( -14.8625, 714.45, -28.9405, 1.69 ) }
    dend_29 { pt3dadd( -14.8659, 714.588, -28.9399, 1.69 ) }
    dend_29 { pt3dadd( -14.8874, 715.512, -28.9511, 1.69 ) }
    dend_29 { pt3dadd( -14.8861, 717.136, -28.9767, 1.11 ) }
    dend_29 { pt3dadd( -14.8702, 717.865, -29.0001, 1.03 ) }
    dend_29 { pt3dadd( -14.847, 718.562, -29.0312, 1.03 ) }
    dend_29 { pt3dadd( -14.7834, 720.169, -29.1165, 0.59 ) }
    dend_29 { pt3dadd( -14.6817, 722.455, -29.2452, 0.44 ) }
    dend_29 { pt3dadd( -14.5549, 724.906, -29.3953, 0.44 ) }
    dend_29 { pt3dadd( -14.4541, 726.399, -29.4832, 1.11 ) }
    dend_29 { pt3dadd( -14.3287, 727.794, -29.5718, 1.69 ) }
    dend_29 { pt3dadd( -14.2061, 728.802, -29.6294, 1.99 ) }
    dend_29 { pt3dadd( -14.0529, 729.854, -29.6822, 1.62 ) }
    dend_29 { pt3dadd( -14.0369, 729.953, -29.6855, 1.62 ) }
    dend_29 { pt3dadd( -13.7735, 731.506, -29.7212, 0.88 ) }
    dend_29 { pt3dadd( -13.4203, 733.58, -29.7664, 0.74 ) }
    dend_29 { pt3dadd( -12.9671, 736.175, -29.8425, 0.74 ) }
    dend_29 { pt3dadd( -12.9504, 736.27, -29.8454, 0.74 ) }
    dend_29 { pt3dadd( -12.6707, 737.883, -29.9041, 0.74 ) }
    dend_29 { pt3dadd( -12.3314, 739.921, -29.9163, 0.88 ) }
    dend_29 { pt3dadd( -12.0131, 742.058, -29.867, 0.66 ) }
    dend_29 { pt3dadd( -11.9984, 742.17, -29.8606, 0.66 ) }
    dend_29 { pt3dadd( -11.7786, 744.039, -29.7232, 0.66 ) }
    dend_29 { pt3dadd( -11.6141, 745.511, -29.5915, 0.66 ) }
    dend_29 { pt3dadd( -11.4382, 747.538, -29.3719, 1.25 ) }
    dend_29 { pt3dadd( -11.3953, 748.445, -29.2569, 1.99 ) }
    dend_29 { pt3dadd( -11.397, 749.044, -29.1742, 1.99 ) }
    dend_29 { pt3dadd( -11.4419, 750.066, -29.0545, 1.55 ) }
    dend_29 { pt3dadd( -11.4625, 750.272, -29.0352, 1.55 ) }
    dend_29 { pt3dadd( -11.6412, 751.562, -28.9586, 1.33 ) }
    dend_29 { pt3dadd( -11.8319, 752.964, -28.9695, 1.18 ) }
    dend_29 { pt3dadd( -11.9581, 754.181, -28.986, 0.96 ) }
    dend_29 { pt3dadd( -12.0227, 755.209, -28.9607, 0.96 ) }
    dend_29 { pt3dadd( -12.0248, 755.419, -28.9489, 0.96 ) }
    dend_29 { pt3dadd( -11.989, 756.615, -28.8553, 0.66 ) }
    dend_29 { pt3dadd( -11.8749, 758.033, -28.7128, 0.52 ) }
    dend_29 { pt3dadd( -11.7317, 759.308, -28.5646, 0.52 ) }
    dend_29 { pt3dadd( -11.486, 761.155, -28.3275, 0.81 ) }
    dend_29 { pt3dadd( -11.2462, 762.698, -28.1161, 1.33 ) }
    dend_29 { pt3dadd( -11.2108, 762.904, -28.0852, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_29 { pt3dadd( -10.9846, 764.073, -27.9259, 1.77 ) }
    dend_29 { pt3dadd( -10.837, 764.798, -27.8405, 2.28 ) }
    dend_29 { pt3dadd( -10.8172, 764.893, -27.838, 2.28 ) }
    dend_29 { pt3dadd( -10.6496, 765.824, -27.9259, 2.28 ) }
    dend_29 { pt3dadd( -10.5541, 766.431, -28.007, 2.28 ) }
    dend_29 { pt3dadd( -10.3771, 767.696, -28.1937, 1.92 ) }
    dend_29 { pt3dadd( -10.365, 767.791, -28.2092, 1.92 ) }
    dend_29 { pt3dadd( -10.1285, 769.827, -28.5428, 0.81 ) }
    dend_29 { pt3dadd( -9.93896, 771.874, -28.7484, 0.81 ) }
    dend_29 { pt3dadd( -9.92384, 772.087, -28.7599, 0.81 ) }
    dend_29 { pt3dadd( -9.86105, 773.327, -28.7639, 0.66 ) }
    dend_29 { pt3dadd( -9.85783, 773.44, -28.7566, 0.66 ) }
    dend_29 { pt3dadd( -9.85025, 774.904, -28.6025, 0.66 ) }
    dend_29 { pt3dadd( -9.89716, 776.828, -28.2705, 0.66 ) }
    dend_29 { pt3dadd( -9.90754, 777.018, -28.2315, 0.66 ) }
    dend_29 { pt3dadd( -10.0153, 778.117, -27.9677, 1.18 ) }
    dend_29 { pt3dadd( -10.0403, 778.293, -27.9237, 1.18 ) }
    dend_29 { pt3dadd( -10.1901, 779.281, -27.7056, 1.4 ) }
    dend_29 { pt3dadd( -10.2365, 779.569, -27.6531, 1.4 ) }
    dend_29 { pt3dadd( -10.3496, 780.285, -27.5545, 1.4 ) }
    dend_29 { pt3dadd( -10.5581, 781.7, -27.3636, 1.11 ) }
    dend_29 { pt3dadd( -10.8493, 783.965, -27.0777, 0.88 ) }
    dend_29 { pt3dadd( -11.0498, 785.69, -26.8925, 1.03 ) }
    dend_29 { pt3dadd( -11.2215, 787.395, -26.7453, 1.33 ) }
    dend_29 { pt3dadd( -11.2391, 787.589, -26.7332, 1.33 ) }
    dend_29 { pt3dadd( -11.2969, 788.223, -26.6993, 1.33 ) }
    dend_29 { pt3dadd( -11.4698, 790.083, -26.6394, 0.88 ) }
    dend_29 { pt3dadd( -11.5682, 791.085, -26.5942, 0.88 ) }
    dend_29 { pt3dadd( -11.724, 792.71, -26.4967, 0.74 ) }
    dend_29 { pt3dadd( -11.8184, 793.905, -26.4082, 0.74 ) }
    dend_29 { pt3dadd( -11.901, 795.213, -26.3006, 1.33 ) }
    dend_29 { pt3dadd( -11.9064, 795.323, -26.2908, 1.33 ) }
    dend_29 { pt3dadd( -11.9347, 796.466, -26.2283, 1.92 ) }
    dend_29 { pt3dadd( -11.9448, 797.359, -26.2186, 2.21 ) }
    dend_29 { pt3dadd( -11.9613, 798.031, -26.265, 2.21 ) }
    dend_29 { pt3dadd( -12.0165, 799.07, -26.4056, 1.77 ) }
    dend_29 { pt3dadd( -12.1063, 800.368, -26.6363, 1.18 ) }
    dend_29 { pt3dadd( -12.2275, 801.733, -26.8954, 0.81 ) }
    dend_29 { pt3dadd( -12.4449, 803.793, -27.3151, 0.74 ) }
    dend_29 { pt3dadd( -12.6911, 806.046, -27.7634, 0.66 ) }
    dend_29 { pt3dadd( -12.8838, 807.97, -28.109, 0.66 ) }
    dend_29 { pt3dadd( -12.8925, 808.069, -28.1249, 0.66 ) }
    dend_29 { pt3dadd( -12.9711, 809.489, -28.2983, 0.66 ) }
    dend_29 { pt3dadd( -12.9705, 809.648, -28.3074, 0.66 ) }
    dend_29 { pt3dadd( -12.833, 811.73, -28.3481, 0.66 ) }
    dend_29 { pt3dadd( -12.6112, 813.592, -28.3023, 0.66 ) }
    dend_29 { pt3dadd( -12.5897, 813.732, -28.296, 0.66 ) }
    dend_29 { pt3dadd( -12.3108, 815.472, -28.2119, 0.66 ) }
    dend_29 { pt3dadd( -11.8573, 818.078, -28.0725, 0.66 ) }
    dend_29 { pt3dadd( -11.8305, 818.224, -28.0645, 0.66 ) }
    dend_29 { pt3dadd( -11.6842, 818.98, -28.0215, 1.25 ) }
    dend_29 { pt3dadd( -11.663, 819.089, -28.0153, 1.25 ) }
    dend_29 { pt3dadd( -11.3579, 820.732, -27.9241, 1.25 ) }
    dend_29 { pt3dadd( -11.3337, 820.879, -27.9165, 1.25 ) }
    dend_29 { pt3dadd( -11.1015, 822.304, -27.8175, 1.25 ) }
    dend_29 { pt3dadd( -10.9107, 823.524, -27.7127, 0.96 ) }
    dend_29 { pt3dadd( -10.7352, 824.738, -27.577, 0.96 ) }
    dend_29 { pt3dadd( -10.7243, 824.823, -27.5663, 0.96 ) }
    dend_29 { pt3dadd( -10.5891, 826.058, -27.3983, 1.11 ) }
    dend_29 { pt3dadd( -10.3889, 828.174, -27.0983, 0.52 ) }
    dend_29 { pt3dadd( -10.2688, 829.568, -26.8973, 1.18 ) }
    dend_29 { pt3dadd( -10.1241, 831.057, -26.6875, 1.92 ) }
    dend_29 { pt3dadd( -10.0151, 832.052, -26.5713, 2.43 ) }
    dend_29 { pt3dadd( -9.90503, 832.952, -26.4863, 2.43 ) }
    dend_29 { pt3dadd( -9.76141, 834.036, -26.4071, 2.43 ) }
    dend_29 { pt3dadd( -9.50701, 835.855, -26.3249, 1.25 ) }
    dend_29 { pt3dadd( -9.22639, 837.598, -26.2936, 0.59 ) }
    dend_29 { pt3dadd( -8.90554, 839.461, -26.3635, 0.74 ) }
    dend_29 { pt3dadd( -8.6926, 840.637, -26.454, 1.03 ) }
    dend_29 { pt3dadd( -8.64462, 840.923, -26.4897, 1.03 ) }
    dend_29 { pt3dadd( -8.53488, 841.691, -26.6251, 1.03 ) }
    dend_29 { pt3dadd( -8.41676, 842.766, -26.8606, 0.59 ) }
    dend_29 { pt3dadd( -8.3086, 844.377, -27.2544, 0.59 ) }
    dend_29 { pt3dadd( -8.30249, 844.538, -27.2915, 0.59 ) }
    dend_29 { pt3dadd( -8.20998, 846.035, -27.6066, 0.59 ) }
    dend_29 { pt3dadd( -8.16222, 846.455, -27.6659, 1.03 ) }
    dend_29 { pt3dadd( -7.99919, 847.524, -27.7527, 0.66 ) }
    dend_29 { pt3dadd( -7.87188, 848.215, -27.7661, 0.66 ) }
    dend_29 { pt3dadd( -7.6228, 849.442, -27.6836, 0.66 ) }
    dend_29 { pt3dadd( -7.29037, 851.121, -27.5114, 0.59 ) }
    dend_29 { pt3dadd( -6.91274, 853.105, -27.2606, 1.03 ) }
    dend_29 { pt3dadd( -6.77883, 853.848, -27.158, 1.84 ) }
    dend_29 { pt3dadd( -6.66204, 854.563, -27.0551, 1.84 ) }
    dend_29 { pt3dadd( -6.39923, 856.446, -26.7874, 1.18 ) }
    dend_29 { pt3dadd( -6.23196, 857.95, -26.5786, 0.66 ) }
    dend_29 { pt3dadd( -6.1489, 859.38, -26.3998, 0.66 ) }
    dend_29 { pt3dadd( -6.14507, 859.63, -26.3769, 0.66 ) }
    dend_29 { pt3dadd( -6.15989, 861.615, -26.2395, 0.66 ) }
    dend_29 { pt3dadd( -6.20234, 863.168, -26.171, 1.18 ) }
    dend_29 { pt3dadd( -6.25172, 864.231, -26.1569, 1.18 ) }
    dend_29 { pt3dadd( -6.3511, 865.934, -26.1393, 0.66 ) }
    dend_29 { pt3dadd( -6.45089, 867.332, -26.13, 0.66 ) }
    dend_29 { pt3dadd( -6.56797, 868.654, -26.1277, 1.25 ) }
    dend_29 { pt3dadd( -6.69111, 869.738, -26.1285, 1.99 ) }
    dend_29 { pt3dadd( -6.79513, 870.544, -26.1275, 2.21 ) }
    dend_29 { pt3dadd( -7.04277, 872.301, -26.129, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 96/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -12.8734, -51.5888, -11.3876, 0.44 ) }
    dend_12 { pt3dadd( -13.4252, -52.0988, -11.1514, 0.44 ) }
    dend_12 { pt3dadd( -13.4742, -52.1457, -11.1296, 0.44 ) }
    dend_12 { pt3dadd( -14.1912, -52.8693, -10.8012, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_12 { pt3dadd( -14.8819, -53.5499, -10.4853, 1.18 ) }
    dend_12 { pt3dadd( -15.3695, -54.0202, -10.2648, 0.59 ) }
    dend_12 { pt3dadd( -15.4178, -54.0664, -10.2432, 0.59 ) }
    dend_12 { pt3dadd( -15.8841, -54.5376, -10.0417, 0.22 ) }
    dend_12 { pt3dadd( -16.3477, -54.998, -9.83434, 0.22 ) }
    dend_12 { pt3dadd( -16.8202, -55.4498, -9.61683, 0.59 ) }
    dend_12 { pt3dadd( -17.1349, -55.7571, -9.468, 0.59 ) }
    dend_12 { pt3dadd( -17.2037, -55.8349, -9.43087, 0.59 ) }
    dend_12 { pt3dadd( -17.6687, -56.4166, -9.16177, 0.22 ) }
    dend_12 { pt3dadd( -18.0243, -56.9129, -8.94719, 1.18 ) }
    dend_12 { pt3dadd( -18.3585, -57.4841, -8.74077, 1.25 ) }
    dend_12 { pt3dadd( -18.3897, -57.5476, -8.72111, 1.25 ) }
    dend_12 { pt3dadd( -18.8849, -58.7624, -8.33683, 0.22 ) }
    dend_12 { pt3dadd( -19.0189, -59.138, -8.22202, 0.37 ) }
    dend_12 { pt3dadd( -19.0864, -59.3968, -8.14259, 0.37 ) }
    dend_12 { pt3dadd( -19.3634, -60.8416, -7.68528, 0.22 ) }
    dend_12 { pt3dadd( -19.4369, -61.3392, -7.52587, 0.22 ) }
    dend_12 { pt3dadd( -19.5795, -62.4575, -7.16073, 1.47 ) }
    dend_12 { pt3dadd( -19.6757, -63.3498, -6.9064, 2.21 ) }
    dend_12 { pt3dadd( -19.7617, -64.254, -6.66773, 2.21 ) }
    dend_12 { pt3dadd( -19.7679, -64.3206, -6.64905, 2.21 ) }
    dend_12 { pt3dadd( -19.8296, -65.5898, -6.31621, 0.74 ) }
    dend_12 { pt3dadd( -19.8309, -65.6575, -6.3011, 0.74 ) }
    dend_12 { pt3dadd( -19.8411, -67.0273, -6.06909, 0.22 ) }
    dend_12 { pt3dadd( -19.8416, -67.3198, -6.02441, 0.59 ) }
    dend_12 { pt3dadd( -19.8722, -68.7383, -5.83212, 0.22 ) }
    dend_12 { pt3dadd( -19.8853, -69.6463, -5.71543, 0.22 ) }
    dend_12 { pt3dadd( -19.8798, -70.4571, -5.6091, 0.22 ) }
    dend_12 { pt3dadd( -19.8787, -71.1449, -5.51635, 0.52 ) }
    dend_12 { pt3dadd( -19.8824, -71.4578, -5.47802, 0.52 ) }
    dend_12 { pt3dadd( -19.911, -72.7585, -5.35988, 0.22 ) }
    dend_12 { pt3dadd( -19.9281, -73.5882, -5.31904, 0.22 ) }
    dend_12 { pt3dadd( -19.955, -74.7733, -5.27102, 1.55 ) }
    dend_12 { pt3dadd( -19.9421, -75.4513, -5.25139, 1.69 ) }
    dend_12 { pt3dadd( -19.7919, -77.3082, -5.18942, 0.22 ) }
    dend_12 { pt3dadd( -19.6525, -78.2506, -5.15717, 0.22 ) }
    dend_12 { pt3dadd( -19.5048, -78.8899, -5.14022, 0.52 ) }
    dend_12 { pt3dadd( -19.3038, -79.5426, -5.1518, 0.52 ) }
    dend_12 { pt3dadd( -18.9337, -80.5349, -5.22516, 0.22 ) }
    dend_12 { pt3dadd( -18.6089, -81.3108, -5.31269, 1.4 ) }
    dend_12 { pt3dadd( -18.3129, -81.9545, -5.41164, 1.69 ) }
    dend_12 { pt3dadd( -18.0804, -82.472, -5.49625, 1.77 ) }
    dend_12 { pt3dadd( -17.3505, -84.1821, -5.77606, 0.15 ) }
    dend_12 { pt3dadd( -16.8769, -85.3535, -5.98036, 0.22 ) }
    dend_12 { pt3dadd( -16.5859, -86.1351, -6.13379, 0.74 ) }
    dend_12 { pt3dadd( -16.3614, -86.818, -6.26766, 0.74 ) }
    dend_12 { pt3dadd( -16.107, -87.6784, -6.41616, 0.22 ) }
    dend_12 { pt3dadd( -16.0429, -87.9227, -6.4469, 0.59 ) }
    dend_12 { pt3dadd( -15.9416, -88.3469, -6.47325, 0.59 ) }
    dend_12 { pt3dadd( -15.9227, -88.426, -6.47994, 0.59 ) }
    dend_12 { pt3dadd( -15.6299, -89.661, -6.59414, 0.22 ) }
    dend_12 { pt3dadd( -15.4755, -90.4046, -6.68683, 0.74 ) }
    dend_12 { pt3dadd( -15.2949, -91.232, -6.82115, 0.96 ) }
    dend_12 { pt3dadd( -15.164, -91.7996, -6.9205, 0.66 ) }
    dend_12 { pt3dadd( -14.7274, -93.6164, -7.27694, 0.29 ) }
    dend_12 { pt3dadd( -14.4719, -94.6192, -7.48964, 0.22 ) }
    dend_12 { pt3dadd( -14.1785, -95.694, -7.73252, 0.22 ) }
    dend_12 { pt3dadd( -13.8246, -97.0265, -8.04099, 1.55 ) }
    dend_12 { pt3dadd( -13.7202, -97.4253, -8.13817, 1.92 ) }
    dend_12 { pt3dadd( -13.4651, -98.4223, -8.39225, 0.96 ) }
    dend_12 { pt3dadd( -13.3308, -98.9936, -8.55209, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 61/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -12.8734, -51.5888, -11.3876, 2.43 ) }
    dend_9 { pt3dadd( -13.5061, -53.1153, -12.1607, 2.43 ) }
    dend_9 { pt3dadd( -14.0377, -54.5503, -12.7883, 0.96 ) }
    dend_9 { pt3dadd( -14.4156, -55.6495, -13.1942, 0.52 ) }
    dend_9 { pt3dadd( -14.7466, -56.6656, -13.5343, 0.52 ) }
    dend_9 { pt3dadd( -15.1429, -57.9399, -13.938, 0.52 ) }
    dend_9 { pt3dadd( -15.5134, -59.1862, -14.3203, 0.52 ) }
    dend_9 { pt3dadd( -15.7928, -60.3325, -14.5956, 0.52 ) }
    dend_9 { pt3dadd( -16.0491, -61.5358, -14.8345, 0.52 ) }
    dend_9 { pt3dadd( -16.2807, -62.7365, -15.0578, 2.58 ) }
    dend_9 { pt3dadd( -16.5579, -64.1724, -15.3617, 3.68 ) }
    dend_9 { pt3dadd( -16.6347, -64.5312, -15.4443, 3.68 ) }
    dend_9 { pt3dadd( -16.8468, -65.3968, -15.645, 3.24 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -1.24898, -110.764, 11.9103, 0.59 ) }
    dend_6 { pt3dadd( -1.5756, -112.666, 11.6363, 0.59 ) }
    dend_6 { pt3dadd( -1.76582, -113.577, 11.5176, 0.37 ) }
    dend_6 { pt3dadd( -2.02316, -114.479, 11.4255, 0.37 ) }
    dend_6 { pt3dadd( -2.26409, -115.083, 11.3771, 0.74 ) }
    dend_6 { pt3dadd( -2.58178, -115.749, 11.3333, 0.74 ) }
    dend_6 { pt3dadd( -2.87639, -116.286, 11.306, 0.96 ) }
    dend_6 { pt3dadd( -2.91662, -116.342, 11.309, 0.96 ) }
    dend_6 { pt3dadd( -3.41034, -116.939, 11.3447, 1.25 ) }
    dend_6 { pt3dadd( -3.94516, -117.575, 11.4442, 0.81 ) }
    dend_6 { pt3dadd( -3.9833, -117.632, 11.4566, 0.81 ) }
    dend_6 { pt3dadd( -4.42244, -118.417, 11.6562, 0.59 ) }
    dend_6 { pt3dadd( -4.85418, -119.377, 11.8848, 0.59 ) }
    dend_6 { pt3dadd( -4.87471, -119.431, 11.8963, 0.59 ) }
    dend_6 { pt3dadd( -5.23309, -120.534, 12.1076, 0.44 ) }
    dend_6 { pt3dadd( -5.60886, -121.749, 12.3251, 0.44 ) }
    dend_6 { pt3dadd( -5.62898, -121.813, 12.3367, 0.44 ) }
    dend_6 { pt3dadd( -5.99285, -122.929, 12.5358, 2.14 ) }
    dend_6 { pt3dadd( -6.2235, -123.553, 12.6337, 3.09 ) }
    dend_6 { pt3dadd( -6.43581, -124.124, 12.6998, 3.61 ) }
    dend_6 { pt3dadd( -6.68442, -124.787, 12.697, 3.61 ) }
    dend_6 { pt3dadd( -9.86874, -133.994, 11.8669, 3.61 ) }
    dend_6 { pt3dadd( -13.9681, -142.62, 9.63697, 3.61 ) }
    dend_6 { pt3dadd( -18.5983, -150.577, 6.16744, 3.61 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -1.24898, -110.764, 11.9103, 0.59 ) }
    dend_5 { pt3dadd( -0.154465, -111.989, 12.0341, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_5 { pt3dadd( 0.877808, -113.111, 12.2262, 0.37 ) }
    dend_5 { pt3dadd( 1.6309, -113.852, 12.6901, 0.37 ) }
    dend_5 { pt3dadd( 2.52336, -114.642, 13.635, 0.37 ) }
    dend_5 { pt3dadd( 2.57885, -114.687, 13.7131, 0.37 ) }
    dend_5 { pt3dadd( 3.31908, -115.289, 14.876, 0.74 ) }
    dend_5 { pt3dadd( 3.34912, -115.318, 14.9607, 0.74 ) }
    dend_5 { pt3dadd( 4.05152, -116.146, 17.7287, 0.74 ) }
    dend_5 { pt3dadd( 4.06552, -116.167, 17.7926, 0.74 ) }
    dend_5 { pt3dadd( 4.27123, -116.511, 18.6762, 0.74 ) }
    dend_5 { pt3dadd( 4.46428, -116.884, 19.3643, 0.29 ) }
    dend_5 { pt3dadd( 4.81034, -117.594, 20.2387, 0.29 ) }
    dend_5 { pt3dadd( 5.13666, -118.225, 20.8252, 0.29 ) }
    dend_5 { pt3dadd( 5.49747, -118.867, 21.1933, 0.29 ) }
    dend_5 { pt3dadd( 5.83176, -119.44, 21.5066, 0.81 ) }
    dend_5 { pt3dadd( 5.87081, -119.503, 21.5375, 0.81 ) }
    dend_5 { pt3dadd( 6.2605, -119.994, 21.7658, 1.25 ) }
    dend_5 { pt3dadd( 6.63781, -120.33, 21.9025, 1.25 ) }
    dend_5 { pt3dadd( 7.19957, -120.72, 22.0872, 0.59 ) }
    dend_5 { pt3dadd( 13.7586, -127.422, 28.4981, 0.59 ) }
    // Section: dend_61, id: dend_61, parent: dend_29 (entry count 19/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -7.04277, 872.301, -26.129, 0.44 ) }
    dend_61 { pt3dadd( -7.87988, 873.595, -27.8749, 0.44 ) }
    dend_61 { pt3dadd( -8.19774, 874.155, -28.5542, 0.44 ) }
    dend_61 { pt3dadd( -8.39469, 874.531, -28.9812, 0.74 ) }
    dend_61 { pt3dadd( -8.4056, 874.556, -29.0076, 0.74 ) }
    dend_61 { pt3dadd( -8.54104, 874.978, -29.3915, 0.74 ) }
    dend_61 { pt3dadd( -8.54835, 875.007, -29.4147, 0.74 ) }
    dend_61 { pt3dadd( -8.58558, 875.519, -29.6336, 0.44 ) }
    dend_61 { pt3dadd( -8.58104, 875.559, -29.6532, 0.44 ) }
    dend_61 { pt3dadd( -8.49685, 876.035, -29.9138, 0.88 ) }
    dend_61 { pt3dadd( -8.42852, 876.525, -30.1791, 0.96 ) }
    dend_61 { pt3dadd( -8.40155, 876.805, -30.3286, 1.25 ) }
    dend_61 { pt3dadd( -8.39901, 876.837, -30.3475, 1.25 ) }
    dend_61 { pt3dadd( -8.38918, 877.503, -30.7531, 0.66 ) }
    dend_61 { pt3dadd( -8.42533, 878.024, -31.0822, 0.37 ) }
    dend_61 { pt3dadd( -8.48466, 878.381, -31.312, 0.74 ) }
    dend_61 { pt3dadd( -8.55691, 878.724, -31.5407, 0.74 ) }
    dend_61 { pt3dadd( -8.65533, 879.116, -31.8007, 0.74 ) }
    dend_61 { pt3dadd( -8.82548, 879.705, -32.1797, 0.29 ) }
    dend_61 { pt3dadd( -9.05991, 880.375, -32.5843, 0.29 ) }
    dend_61 { pt3dadd( -9.22945, 880.83, -32.8564, 0.29 ) }
    dend_61 { pt3dadd( -9.47005, 881.492, -33.2539, 1.47 ) }
    dend_61 { pt3dadd( -9.55974, 881.743, -33.395, 1.69 ) }
    dend_61 { pt3dadd( -9.57441, 881.781, -33.4141, 1.69 ) }
    dend_61 { pt3dadd( -9.72738, 882.151, -33.6266, 1.47 ) }
    dend_61 { pt3dadd( -9.7432, 882.187, -33.6474, 1.47 ) }
    dend_61 { pt3dadd( -10.1529, 883.174, -34.3004, 0.22 ) }
    dend_61 { pt3dadd( -10.2902, 883.53, -34.5469, 0.22 ) }
    dend_61 { pt3dadd( -10.4916, 884.126, -34.9682, 0.22 ) }
    dend_61 { pt3dadd( -10.6887, 884.885, -35.4847, 1.03 ) }
    dend_61 { pt3dadd( -10.7503, 885.19, -35.7029, 1.4 ) }
    dend_61 { pt3dadd( -10.9125, 886.145, -36.4034, 0.22 ) }
    dend_61 { pt3dadd( -10.953, 886.412, -36.605, 0.59 ) }
    dend_61 { pt3dadd( -10.9923, 886.715, -36.8365, 0.74 ) }
    dend_61 { pt3dadd( -11.1008, 887.696, -37.558, 0.29 ) }
    dend_61 { pt3dadd( -11.2148, 888.401, -38.0431, 0.29 ) }
    dend_61 { pt3dadd( -11.2238, 888.437, -38.0693, 0.29 ) }
    dend_61 { pt3dadd( -11.3662, 888.82, -38.3518, 0.44 ) }
    dend_61 { pt3dadd( -11.3793, 888.856, -38.384, 0.44 ) }
    dend_61 { pt3dadd( -11.4798, 889.152, -38.6596, 0.44 ) }
    dend_61 { pt3dadd( -11.6253, 889.601, -39.0812, 0.22 ) }
    dend_61 { pt3dadd( -11.8174, 890.293, -39.6925, 1.92 ) }
    dend_61 { pt3dadd( -11.8494, 890.431, -39.8236, 2.5 ) }
    dend_61 { pt3dadd( -12.0707, 891.839, -41.1821, 0.15 ) }
    dend_61 { pt3dadd( -12.094, 892.04, -41.3771, 0.15 ) }
    dend_61 { pt3dadd( -12.1309, 892.57, -41.8972, 1.4 ) }
    dend_61 { pt3dadd( -12.1375, 892.691, -42.0147, 1.69 ) }
    dend_61 { pt3dadd( -12.2081, 893.845, -43.1175, 0.15 ) }
    dend_61 { pt3dadd( -12.2439, 894.235, -43.4741, 0.15 ) }
    dend_61 { pt3dadd( -12.2611, 894.338, -43.5558, 0.15 ) }
    dend_61 { pt3dadd( -12.2797, 894.43, -43.6191, 0.15 ) }
    dend_61 { pt3dadd( -12.3853, 894.876, -43.8677, 0.96 ) }
    dend_61 { pt3dadd( -12.4636, 895.184, -44.0143, 1.47 ) }
    dend_61 { pt3dadd( -12.5288, 895.405, -44.0947, 1.62 ) }
    dend_61 { pt3dadd( -12.6829, 895.9, -44.2785, 0.88 ) }
    dend_61 { pt3dadd( -12.9677, 896.885, -44.6448, 0.22 ) }
    dend_61 { pt3dadd( -13.055, 897.26, -44.7957, 0.22 ) }
    dend_61 { pt3dadd( -13.123, 897.648, -44.9672, 0.74 ) }
    dend_61 { pt3dadd( -13.1283, 897.69, -44.9851, 0.74 ) }
    dend_61 { pt3dadd( -13.1654, 898.031, -45.1165, 0.74 ) }
    dend_61 { pt3dadd( -13.1842, 898.209, -45.1726, 0.74 ) }
    dend_61 { pt3dadd( -13.2831, 899.138, -45.4073, 0.29 ) }
    dend_61 { pt3dadd( -13.2886, 899.182, -45.4172, 0.29 ) }
    dend_61 { pt3dadd( -13.4085, 900.016, -45.5819, 0.29 ) }
    dend_61 { pt3dadd( -13.5401, 900.861, -45.7368, 0.29 ) }
    dend_61 { pt3dadd( -13.6526, 901.521, -45.8422, 0.29 ) }
    dend_61 { pt3dadd( -13.7453, 902.012, -45.9038, 1.47 ) }
    dend_61 { pt3dadd( -13.802, 902.286, -45.9323, 2.06 ) }
    dend_61 { pt3dadd( -13.8109, 902.328, -45.9372, 2.06 ) }
    dend_61 { pt3dadd( -13.91, 902.814, -46.0095, 1.18 ) }
    dend_61 { pt3dadd( -14.1725, 904.091, -46.2582, 0.22 ) }
    dend_61 { pt3dadd( -14.3538, 905.01, -46.4576, 0.22 ) }
    dend_61 { pt3dadd( -14.4791, 905.739, -46.6516, 1.47 ) }
    dend_61 { pt3dadd( -14.519, 906.003, -46.7316, 1.18 ) }
    dend_61 { pt3dadd( -14.6485, 907.069, -47.0909, 0.22 ) }
    dend_61 { pt3dadd( -14.7153, 907.781, -47.3574, 1.11 ) }
    dend_61 { pt3dadd( -14.7363, 908.159, -47.5119, 1.33 ) }
    dend_61 { pt3dadd( -14.7685, 909.545, -48.1045, 0.22 ) }
    dend_61 { pt3dadd( -14.7685, 909.586, -48.1213, 0.22 ) }
    dend_61 { pt3dadd( -14.7552, 910.559, -48.5115, 0.22 ) }
    dend_61 { pt3dadd( -14.754, 910.6, -48.5266, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_61 { pt3dadd( -14.715, 911.651, -48.8834, 0.22 ) }
    dend_61 { pt3dadd( -14.7144, 911.692, -48.8969, 0.22 ) }
    dend_61 { pt3dadd( -14.7298, 912.272, -49.0435, 1.55 ) }
    dend_61 { pt3dadd( -14.7381, 912.365, -49.0644, 2.14 ) }
    dend_61 { pt3dadd( -14.7913, 912.682, -49.1259, 2.36 ) }
    dend_61 { pt3dadd( -14.7993, 912.718, -49.1322, 2.36 ) }
    dend_61 { pt3dadd( -15.0078, 913.35, -49.2524, 1.11 ) }
    dend_61 { pt3dadd( -15.338, 914.183, -49.4219, 0.22 ) }
    dend_61 { pt3dadd( -15.652, 914.89, -49.5703, 0.22 ) }
    dend_61 { pt3dadd( -15.8839, 915.381, -49.6752, 1.4 ) }
    dend_61 { pt3dadd( -16.0119, 915.633, -49.7298, 1.4 ) }
    dend_61 { pt3dadd( -16.6484, 916.819, -50.0057, 0.22 ) }
    dend_61 { pt3dadd( -16.8975, 917.249, -50.113, 0.88 ) }
    dend_61 { pt3dadd( -17.039, 917.483, -50.1766, 0.59 ) }
    dend_61 { pt3dadd( -17.0641, 917.526, -50.1883, 0.59 ) }
    dend_61 { pt3dadd( -17.1239, 917.634, -50.2151, 0.59 ) }
    dend_61 { pt3dadd( -17.5249, 918.454, -50.3762, 0.22 ) }
    dend_61 { pt3dadd( -17.748, 918.966, -50.449, 0.22 ) }
    dend_61 { pt3dadd( -17.9566, 919.494, -50.5136, 1.03 ) }
    dend_61 { pt3dadd( -18.0532, 919.749, -50.5416, 1.4 ) }
    dend_61 { pt3dadd( -18.1686, 920.074, -50.5552, 1.4 ) }
    dend_61 { pt3dadd( -18.4443, 920.939, -50.5411, 0.22 ) }
    dend_61 { pt3dadd( -18.4568, 920.983, -50.538, 0.22 ) }
    dend_61 { pt3dadd( -18.7139, 921.953, -50.4509, 0.22 ) }
    dend_61 { pt3dadd( -18.7341, 922.039, -50.4427, 0.22 ) }
    dend_61 { pt3dadd( -18.9646, 923.147, -50.3364, 0.22 ) }
    dend_61 { pt3dadd( -19.0866, 923.778, -50.2686, 1.33 ) }
    dend_61 { pt3dadd( -19.1253, 923.99, -50.2432, 1.62 ) }
    dend_61 { pt3dadd( -19.1964, 924.393, -50.1943, 0.81 ) }
    dend_61 { pt3dadd( -19.3714, 925.467, -50.0603, 0.22 ) }
    dend_61 { pt3dadd( -19.4747, 926.158, -49.9954, 1.25 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 31/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -7.04277, 872.301, -26.129, 0.59 ) }
    dend_30 { pt3dadd( -7.08852, 872.904, -26.0685, 0.59 ) }
    dend_30 { pt3dadd( -7.13559, 873.54, -25.9608, 0.59 ) }
    dend_30 { pt3dadd( -7.17265, 874.14, -25.8427, 0.81 ) }
    dend_30 { pt3dadd( -7.19861, 874.611, -25.7488, 1.25 ) }
    dend_30 { pt3dadd( -7.20102, 874.655, -25.7401, 1.25 ) }
    dend_30 { pt3dadd( -7.21767, 874.929, -25.6876, 1.11 ) }
    dend_30 { pt3dadd( -7.25861, 875.499, -25.5728, 0.88 ) }
    dend_30 { pt3dadd( -7.28778, 875.909, -25.4985, 0.44 ) }
    dend_30 { pt3dadd( -7.32867, 876.51, -25.4087, 0.37 ) }
    dend_30 { pt3dadd( -7.33945, 876.67, -25.3879, 0.37 ) }
    dend_30 { pt3dadd( -7.37187, 877.107, -25.3414, 0.37 ) }
    dend_30 { pt3dadd( -7.42824, 877.766, -25.2932, 1.47 ) }
    dend_30 { pt3dadd( -7.47472, 878.163, -25.2763, 1.84 ) }
    dend_30 { pt3dadd( -7.49555, 878.32, -25.2693, 1.84 ) }
    dend_30 { pt3dadd( -7.53397, 878.637, -25.2554, 1.84 ) }
    dend_30 { pt3dadd( -7.59136, 879.164, -25.2333, 1.25 ) }
    dend_30 { pt3dadd( -7.67564, 880.044, -25.1985, 0.66 ) }
    dend_30 { pt3dadd( -7.74722, 880.842, -25.1683, 0.66 ) }
    dend_30 { pt3dadd( -7.7515, 880.898, -25.1663, 0.66 ) }
    dend_30 { pt3dadd( -7.78888, 881.473, -25.1485, 0.66 ) }
    dend_30 { pt3dadd( -7.79294, 881.558, -25.1467, 0.66 ) }
    dend_30 { pt3dadd( -7.81376, 882.083, -25.1373, 0.66 ) }
    dend_30 { pt3dadd( -7.81483, 882.128, -25.1368, 0.66 ) }
    dend_30 { pt3dadd( -7.82172, 882.607, -25.1329, 0.66 ) }
    dend_30 { pt3dadd( -7.82728, 882.751, -25.1315, 0.66 ) }
    dend_30 { pt3dadd( -7.84945, 883.206, -25.1266, 0.66 ) }
    dend_30 { pt3dadd( -7.86391, 883.566, -25.123, 0.66 ) }
    dend_30 { pt3dadd( -7.86456, 883.606, -25.1227, 0.66 ) }
    dend_30 { pt3dadd( -7.86144, 884.18, -25.1186, 0.66 ) }
    dend_30 { pt3dadd( -7.86023, 884.215, -25.1184, 0.66 ) }
    dend_30 { pt3dadd( -7.83066, 884.776, -25.1189, 1.18 ) }
    dend_30 { pt3dadd( -7.82609, 884.815, -25.1156, 1.18 ) }
    dend_30 { pt3dadd( -7.74261, 885.317, -25.041, 1.33 ) }
    dend_30 { pt3dadd( -7.73355, 885.363, -25.0318, 1.33 ) }
    dend_30 { pt3dadd( -7.70018, 885.503, -24.9934, 1.33 ) }
    dend_30 { pt3dadd( -7.68556, 885.565, -24.9754, 1.33 ) }
    dend_30 { pt3dadd( -7.49422, 886.346, -24.7179, 0.81 ) }
    dend_30 { pt3dadd( -7.48697, 886.379, -24.7087, 0.81 ) }
    dend_30 { pt3dadd( -7.40881, 886.69, -24.6412, 0.81 ) }
    dend_30 { pt3dadd( -7.39987, 886.727, -24.6344, 0.81 ) }
    dend_30 { pt3dadd( -7.29406, 887.161, -24.5727, 0.96 ) }
    dend_30 { pt3dadd( -7.27777, 887.225, -24.566, 0.96 ) }
    dend_30 { pt3dadd( -7.10216, 887.912, -24.5345, 0.37 ) }
    dend_30 { pt3dadd( -6.95638, 888.492, -24.5141, 0.37 ) }
    dend_30 { pt3dadd( -6.84819, 888.95, -24.4849, 1.33 ) }
    dend_30 { pt3dadd( -6.74719, 889.369, -24.4408, 2.06 ) }
    dend_30 { pt3dadd( -6.70218, 889.556, -24.4053, 2.36 ) }
    dend_30 { pt3dadd( -6.63071, 889.853, -24.3338, 2.36 ) }
    dend_30 { pt3dadd( -6.521, 890.325, -24.1888, 1.62 ) }
    dend_30 { pt3dadd( -6.36317, 891.052, -23.9442, 0.52 ) }
    dend_30 { pt3dadd( -6.18082, 891.87, -23.6517, 0.37 ) }
    dend_30 { pt3dadd( -6.02455, 892.593, -23.3666, 1.55 ) }
    dend_30 { pt3dadd( -5.94634, 892.954, -23.2119, 2.21 ) }
    dend_30 { pt3dadd( -5.86068, 893.33, -23.0318, 2.5 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 86/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -16.8468, -65.3968, -15.645, 0.44 ) }
    dend_11 { pt3dadd( -16.2128, -66.3494, -16.2278, 0.44 ) }
    dend_11 { pt3dadd( -15.5479, -67.2688, -16.7958, 0.22 ) }
    dend_11 { pt3dadd( -15.5099, -67.3133, -16.8253, 0.22 ) }
    dend_11 { pt3dadd( -14.8352, -67.9571, -17.2417, 0.22 ) }
    dend_11 { pt3dadd( -13.8647, -68.8481, -17.8557, 1.47 ) }
    dend_11 { pt3dadd( -13.5845, -69.1108, -18.047, 1.99 ) }
    dend_11 { pt3dadd( -13.4838, -69.1985, -18.1114, 1.99 ) }
    dend_11 { pt3dadd( -12.7487, -69.8188, -18.6173, 1.77 ) }
    dend_11 { pt3dadd( -11.6209, -70.7843, -19.4499, 0.52 ) }
    dend_11 { pt3dadd( -10.7901, -71.5044, -20.0988, 0.29 ) }
    dend_11 { pt3dadd( -10.2016, -72.0511, -20.6129, 0.29 ) }
    dend_11 { pt3dadd( -10.1631, -72.0886, -20.6473, 0.29 ) }
    dend_11 { pt3dadd( -9.59809, -72.6673, -21.1737, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_11 { pt3dadd( -9.07423, -73.2877, -21.7083, 1.03 ) }
    dend_11 { pt3dadd( -8.39759, -74.2293, -22.4856, 0.22 ) }
    dend_11 { pt3dadd( -8.37217, -74.2678, -22.5136, 0.22 ) }
    dend_11 { pt3dadd( -8.13528, -74.6626, -22.7853, 0.44 ) }
    dend_11 { pt3dadd( -8.11101, -74.7027, -22.812, 0.44 ) }
    dend_11 { pt3dadd( -7.77043, -75.2321, -23.164, 0.44 ) }
    dend_11 { pt3dadd( -7.53911, -75.6323, -23.4239, 0.29 ) }
    dend_11 { pt3dadd( -7.15663, -76.3108, -23.8617, 1.55 ) }
    dend_11 { pt3dadd( -7.04972, -76.4893, -23.9786, 2.21 ) }
    dend_11 { pt3dadd( -6.51163, -77.2981, -24.5462, 2.21 ) }
    dend_11 { pt3dadd( -6.01028, -78.0019, -25.0727, 0.44 ) }
    dend_11 { pt3dadd( -5.41891, -78.7341, -25.6917, 0.29 ) }
    dend_11 { pt3dadd( -5.16367, -79.0231, -25.9594, 0.52 ) }
    dend_11 { pt3dadd( -5.12364, -79.0663, -26.0021, 0.52 ) }
    dend_11 { pt3dadd( -4.87436, -79.3373, -26.3184, 0.22 ) }
    dend_11 { pt3dadd( -4.84565, -79.3644, -26.3713, 0.22 ) }
    dend_11 { pt3dadd( -4.66702, -79.4614, -26.7274, 0.22 ) }
    dend_11 { pt3dadd( -4.46999, -79.5382, -27.0686, 0.74 ) }
    dend_11 { pt3dadd( -4.43217, -79.5563, -27.1309, 0.74 ) }
    dend_11 { pt3dadd( -4.14624, -79.7315, -27.5911, 0.74 ) }
    dend_11 { pt3dadd( -3.62595, -80.1292, -28.4259, 0.29 ) }
    dend_11 { pt3dadd( -3.26628, -80.4405, -28.9486, 0.29 ) }
    dend_11 { pt3dadd( -2.85572, -80.8576, -29.5098, 1.33 ) }
    dend_11 { pt3dadd( -2.61468, -81.1273, -29.8385, 1.92 ) }
    dend_11 { pt3dadd( -2.49112, -81.2746, -30.0113, 1.99 ) }
    dend_11 { pt3dadd( -2.22913, -81.6073, -30.3825, 1.55 ) }
    dend_11 { pt3dadd( -1.78256, -82.2309, -31.0874, 0.66 ) }
    dend_11 { pt3dadd( -1.5286, -82.6294, -31.5625, 0.29 ) }
    dend_11 { pt3dadd( -1.21028, -83.2644, -32.3583, 0.22 ) }
    dend_11 { pt3dadd( -1.04568, -83.6847, -32.8721, 1.03 ) }
    dend_11 { pt3dadd( -0.94403, -84.0246, -33.2743, 1.55 ) }
    dend_11 { pt3dadd( -0.824473, -84.6044, -33.9403, 0.88 ) }
    dend_11 { pt3dadd( -0.770236, -85.1324, -34.52, 0.29 ) }
    dend_11 { pt3dadd( -0.738288, -85.7297, -35.1318, 0.29 ) }
    dend_11 { pt3dadd( -0.733262, -86.4602, -35.8123, 0.22 ) }
    dend_11 { pt3dadd( -0.733565, -86.802, -36.1167, 0.52 ) }
    dend_11 { pt3dadd( -0.730888, -86.8499, -36.1582, 0.52 ) }
    dend_11 { pt3dadd( -0.652616, -87.3042, -36.5338, 0.52 ) }
    dend_11 { pt3dadd( -0.509397, -87.7843, -36.9352, 0.44 ) }
    dend_11 { pt3dadd( -0.448705, -87.9245, -37.0472, 0.66 ) }
    dend_11 { pt3dadd( -0.269678, -88.2951, -37.3278, 0.37 ) }
    dend_11 { pt3dadd( 0.00267593, -88.8516, -37.7073, 0.29 ) }
    dend_11 { pt3dadd( 0.318057, -89.5423, -38.1149, 0.29 ) }
    dend_11 { pt3dadd( 0.33803, -89.5878, -38.1356, 0.29 ) }
    dend_11 { pt3dadd( 0.630285, -90.3118, -38.4125, 1.25 ) }
    dend_11 { pt3dadd( 0.755457, -90.6604, -38.5311, 1.84 ) }
    dend_11 { pt3dadd( 0.852687, -90.9876, -38.6276, 1.84 ) }
    dend_11 { pt3dadd( 1.01846, -91.746, -38.8431, 0.81 ) }
    dend_11 { pt3dadd( 1.17629, -92.6334, -39.0955, 0.29 ) }
    dend_11 { pt3dadd( 1.26837, -93.2659, -39.284, 0.22 ) }
    dend_11 { pt3dadd( 1.27769, -93.3518, -39.3104, 0.22 ) }
    dend_11 { pt3dadd( 1.31246, -94.0864, -39.5353, 0.22 ) }
    dend_11 { pt3dadd( 1.28162, -95.0975, -39.8313, 1.33 ) }
    dend_11 { pt3dadd( 1.23264, -95.5791, -39.9642, 1.99 ) }
    dend_11 { pt3dadd( 1.17888, -95.8965, -40.0428, 2.28 ) }
    dend_11 { pt3dadd( 1.09365, -96.384, -40.1405, 2.28 ) }
    dend_11 { pt3dadd( 0.875845, -97.6455, -40.363, 0.66 ) }
    dend_11 { pt3dadd( 0.738276, -98.4028, -40.4759, 0.22 ) }
    dend_11 { pt3dadd( 0.727194, -98.4667, -40.4838, 0.22 ) }
    dend_11 { pt3dadd( 0.661399, -98.9673, -40.5513, 0.22 ) }
    dend_11 { pt3dadd( 0.615796, -99.4812, -40.6226, 0.74 ) }
    dend_11 { pt3dadd( 0.606789, -99.834, -40.6721, 1.03 ) }
    dend_11 { pt3dadd( 0.621509, -100.097, -40.7037, 1.11 ) }
    dend_11 { pt3dadd( 0.663312, -100.62, -40.7715, 0.44 ) }
    dend_11 { pt3dadd( 0.712776, -101.48, -40.8888, 0.22 ) }
    dend_11 { pt3dadd( 0.714747, -101.543, -40.8977, 0.22 ) }
    dend_11 { pt3dadd( 0.712694, -102.016, -40.9605, 0.44 ) }
    dend_11 { pt3dadd( 0.721345, -102.707, -41.0799, 0.29 ) }
    dend_11 { pt3dadd( 0.721869, -102.77, -41.0901, 0.29 ) }
    dend_11 { pt3dadd( 0.719536, -103.541, -41.1262, 0.29 ) }
    dend_11 { pt3dadd( 0.718347, -104.037, -41.1112, 0.22 ) }
    dend_11 { pt3dadd( 0.719215, -104.102, -41.1084, 0.22 ) }
    dend_11 { pt3dadd( 0.784615, -104.98, -41.0726, 0.22 ) }
    dend_11 { pt3dadd( 0.8877, -105.5, -41.062, 0.22 ) }
    dend_11 { pt3dadd( 1.29451, -106.936, -41.1055, 2.14 ) }
    dend_11 { pt3dadd( 1.3117, -106.987, -41.1094, 2.14 ) }
    dend_11 { pt3dadd( 1.51491, -107.53, -41.1829, 1.99 ) }
    dend_11 { pt3dadd( 1.8332, -108.31, -41.3368, 1.69 ) }
    dend_11 { pt3dadd( 2.33895, -109.452, -41.6221, 0.59 ) }
    dend_11 { pt3dadd( 2.83677, -110.477, -41.9881, 0.22 ) }
    dend_11 { pt3dadd( 3.077, -110.967, -42.2227, 0.37 ) }
    dend_11 { pt3dadd( 3.28389, -111.477, -42.5008, 0.37 ) }
    dend_11 { pt3dadd( 3.45996, -112.058, -42.8574, 0.74 ) }
    dend_11 { pt3dadd( 3.469, -112.109, -42.8934, 0.74 ) }
    dend_11 { pt3dadd( 3.4843, -112.493, -43.1828, 1.11 ) }
    dend_11 { pt3dadd( 3.4576, -113.254, -43.7653, 0.59 ) }
    dend_11 { pt3dadd( 3.40565, -114.107, -44.4209, 0.29 ) }
    dend_11 { pt3dadd( 3.36698, -114.681, -44.8711, 0.29 ) }
    dend_11 { pt3dadd( 3.36175, -114.76, -44.9361, 0.29 ) }
    dend_11 { pt3dadd( 3.34412, -115.297, -45.3913, 0.29 ) }
    dend_11 { pt3dadd( 3.34988, -115.435, -45.5141, 0.29 ) }
    dend_11 { pt3dadd( 3.44345, -115.971, -46.0212, 0.29 ) }
    dend_11 { pt3dadd( 3.56666, -116.409, -46.446, 1.18 ) }
    dend_11 { pt3dadd( 3.64184, -116.662, -46.7011, 1.47 ) }
    dend_11 { pt3dadd( 3.65538, -116.706, -46.7453, 1.47 ) }
    dend_11 { pt3dadd( 3.87416, -117.424, -47.4431, 0.44 ) }
    dend_11 { pt3dadd( 4.035, -118.037, -47.9541, 0.37 ) }
    dend_11 { pt3dadd( 4.13245, -118.529, -48.2699, 0.81 ) }
    dend_11 { pt3dadd( 4.18404, -118.872, -48.4565, 0.81 ) }
    dend_11 { pt3dadd( 4.25113, -119.416, -48.718, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_11 { pt3dadd( 4.28754, -119.799, -48.886, 0.29 ) }
    dend_11 { pt3dadd( 4.35033, -120.661, -49.2301, 0.22 ) }
    dend_11 { pt3dadd( 4.39133, -121.586, -49.6042, 0.22 ) }
    dend_11 { pt3dadd( 4.40897, -122.123, -49.8367, 0.44 ) }
    dend_11 { pt3dadd( 4.41476, -122.304, -49.9222, 0.44 ) }
    dend_11 { pt3dadd( 4.43077, -122.649, -50.1094, 0.44 ) }
    dend_11 { pt3dadd( 4.4752, -123.286, -50.5051, 0.29 ) }
    dend_11 { pt3dadd( 4.5368, -123.946, -50.9504, 1.4 ) }
    dend_11 { pt3dadd( 4.5875, -124.431, -51.2863, 1.69 ) }
    dend_11 { pt3dadd( 4.63392, -124.863, -51.5721, 1.92 ) }
    dend_11 { pt3dadd( 4.6895, -125.471, -51.9674, 0.74 ) }
    dend_11 { pt3dadd( 4.72865, -126.228, -52.4042, 0.22 ) }
    dend_11 { pt3dadd( 4.74429, -126.99, -52.7936, 0.22 ) }
    dend_11 { pt3dadd( 4.74898, -127.547, -53.0444, 0.88 ) }
    dend_11 { pt3dadd( 4.73929, -127.98, -53.2142, 0.88 ) }
    dend_11 { pt3dadd( 4.70716, -128.692, -53.4565, 0.22 ) }
    dend_11 { pt3dadd( 4.65037, -129.596, -53.7186, 0.22 ) }
    dend_11 { pt3dadd( 4.64585, -129.666, -53.7369, 0.22 ) }
    dend_11 { pt3dadd( 4.60264, -130.319, -53.886, 0.22 ) }
    dend_11 { pt3dadd( 4.57772, -131.195, -54.0568, 1.03 ) }
    dend_11 { pt3dadd( 4.57682, -131.584, -54.1197, 1.33 ) }
    dend_11 { pt3dadd( 4.58464, -131.847, -54.1562, 1.33 ) }
    dend_11 { pt3dadd( 4.61362, -133.014, -54.3331, 0.22 ) }
    dend_11 { pt3dadd( 4.58524, -133.862, -54.4689, 0.22 ) }
    dend_11 { pt3dadd( 4.53057, -134.384, -54.5515, 0.88 ) }
    dend_11 { pt3dadd( 4.47207, -134.748, -54.6108, 1.11 ) }
    dend_11 { pt3dadd( 4.41314, -135.036, -54.659, 0.88 ) }
    dend_11 { pt3dadd( 4.14596, -136.156, -54.8704, 0.22 ) }
    dend_11 { pt3dadd( 3.89477, -137.069, -55.0376, 0.22 ) }
    dend_11 { pt3dadd( 3.74402, -137.581, -55.1334, 1.55 ) }
    dend_11 { pt3dadd( 3.61428, -138.033, -55.217, 1.77 ) }
    dend_11 { pt3dadd( 3.48596, -138.531, -55.3059, 1.25 ) }
    dend_11 { pt3dadd( 3.27519, -139.521, -55.4859, 0.22 ) }
    dend_11 { pt3dadd( 3.13783, -140.52, -55.6743, 0.22 ) }
    dend_11 { pt3dadd( 3.1335, -140.572, -55.6861, 0.22 ) }
    dend_11 { pt3dadd( 3.0902, -141.425, -55.9415, 0.22 ) }
    dend_11 { pt3dadd( 3.08539, -141.494, -55.9675, 0.22 ) }
    dend_11 { pt3dadd( 3.0327, -142.232, -56.3087, 0.96 ) }
    dend_11 { pt3dadd( 2.99523, -142.697, -56.5338, 1.47 ) }
    dend_11 { pt3dadd( 2.93688, -143.195, -56.7937, 0.88 ) }
    dend_11 { pt3dadd( 2.86449, -143.655, -57.0254, 0.66 ) }
    dend_11 { pt3dadd( 2.65864, -144.708, -57.556, 0.29 ) }
    dend_11 { pt3dadd( 2.57012, -145.124, -57.7571, 0.59 ) }
    dend_11 { pt3dadd( 2.40179, -145.83, -58.0899, 0.59 ) }
    dend_11 { pt3dadd( 2.22543, -146.559, -58.4348, 0.29 ) }
    dend_11 { pt3dadd( 2.20989, -146.632, -58.4715, 0.29 ) }
    dend_11 { pt3dadd( 2.05352, -147.522, -58.9576, 0.29 ) }
    dend_11 { pt3dadd( 2.04701, -147.575, -58.9903, 0.29 ) }
    dend_11 { pt3dadd( 2.00093, -148.003, -59.28, 0.74 ) }
    dend_11 { pt3dadd( 1.95301, -148.492, -59.6098, 0.88 ) }
    dend_11 { pt3dadd( 1.87285, -149.288, -60.0965, 0.22 ) }
    dend_11 { pt3dadd( 1.80029, -149.947, -60.4584, 0.22 ) }
    dend_11 { pt3dadd( 1.69031, -150.701, -60.8066, 1.99 ) }
    dend_11 { pt3dadd( 1.58965, -151.257, -61.0326, 2.43 ) }
    dend_11 { pt3dadd( 1.32738, -152.513, -61.4636, 0.22 ) }
    dend_11 { pt3dadd( 1.16393, -153.202, -61.6591, 0.44 ) }
    dend_11 { pt3dadd( 0.939697, -154.061, -61.8692, 0.37 ) }
    dend_11 { pt3dadd( 0.697112, -154.964, -62.0646, 0.22 ) }
    dend_11 { pt3dadd( 0.541455, -155.567, -62.1774, 1.03 ) }
    dend_11 { pt3dadd( 0.442999, -155.919, -62.2527, 1.25 ) }
    dend_11 { pt3dadd( 0.29577, -156.411, -62.3853, 0.96 ) }
    dend_11 { pt3dadd( -0.0331341, -157.508, -62.7462, 0.15 ) }
    dend_11 { pt3dadd( -0.194757, -158.071, -62.9634, 0.74 ) }
    dend_11 { pt3dadd( -0.300038, -158.479, -63.1413, 0.96 ) }
    dend_11 { pt3dadd( -0.598372, -159.735, -63.7223, 0.22 ) }
    dend_11 { pt3dadd( -0.624448, -159.853, -63.7807, 0.22 ) }
    dend_11 { pt3dadd( -0.728219, -160.357, -64.0744, 0.22 ) }
    dend_11 { pt3dadd( -0.840305, -161.018, -64.4959, 0.22 ) }
    dend_11 { pt3dadd( -0.846836, -161.064, -64.5272, 0.22 ) }
    dend_11 { pt3dadd( -0.94858, -161.888, -65.1042, 2.5 ) }
    dend_11 { pt3dadd( -0.97844, -162.207, -65.3328, 2.73 ) }
    dend_11 { pt3dadd( -1.12822, -163.728, -66.4901, 0.22 ) }
    dend_11 { pt3dadd( -1.17393, -164.174, -66.8678, 0.52 ) }
    dend_11 { pt3dadd( -1.21132, -164.58, -67.2472, 0.52 ) }
    dend_11 { pt3dadd( -1.26462, -165.404, -68.0515, 0.22 ) }
    dend_11 { pt3dadd( -1.26691, -165.447, -68.0983, 0.22 ) }
    dend_11 { pt3dadd( -1.28346, -165.788, -68.4893, 0.22 ) }
    dend_11 { pt3dadd( -1.28174, -166.349, -69.1628, 1.18 ) }
    dend_11 { pt3dadd( -1.27741, -166.572, -69.4352, 1.69 ) }
    dend_11 { pt3dadd( -1.25325, -167.036, -69.9902, 1.33 ) }
    dend_11 { pt3dadd( -1.17322, -167.682, -70.732, 0.22 ) }
    dend_11 { pt3dadd( -1.13454, -167.974, -71.0367, 0.22 ) }
    dend_11 { pt3dadd( -1.08274, -168.435, -71.4543, 1.47 ) }
    dend_11 { pt3dadd( -1.04375, -168.792, -71.7397, 1.69 ) }
    dend_11 { pt3dadd( -1.01375, -169.165, -72.0163, 1.69 ) }
    dend_11 { pt3dadd( -0.935945, -170.267, -72.7798, 0.29 ) }
    dend_11 { pt3dadd( -0.897451, -170.806, -73.1258, 0.29 ) }
    dend_11 { pt3dadd( -0.865047, -171.394, -73.5054, 1.03 ) }
    dend_11 { pt3dadd( -0.860923, -171.514, -73.5756, 1.33 ) }
    dend_11 { pt3dadd( -0.829908, -172.568, -74.1295, 0.22 ) }
    dend_11 { pt3dadd( -0.820971, -172.982, -74.3193, 0.22 ) }
    dend_11 { pt3dadd( -0.812919, -173.287, -74.4314, 1.03 ) }
    dend_11 { pt3dadd( -0.785542, -173.666, -74.5574, 1.03 ) }
    dend_11 { pt3dadd( -0.659335, -174.885, -74.9072, 0.22 ) }
    dend_11 { pt3dadd( -0.580019, -175.607, -75.0704, 1.33 ) }
    dend_11 { pt3dadd( -0.54731, -175.893, -75.115, 1.47 ) }
    dend_11 { pt3dadd( -0.512003, -176.463, -75.1962, 1.55 ) }
    dend_11 { pt3dadd( -0.479688, -177.734, -75.3647, 0.22 ) }
    dend_11 { pt3dadd( -0.488456, -178.156, -75.4141, 0.22 ) }
    dend_11 { pt3dadd( -0.533564, -178.861, -75.4917, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_11 { pt3dadd( -0.580841, -179.383, -75.547, 1.25 ) }
    dend_11 { pt3dadd( -0.745221, -180.694, -75.7051, 0.22 ) }
    dend_11 { pt3dadd( -0.755999, -180.765, -75.7148, 0.22 ) }
    dend_11 { pt3dadd( -0.94763, -182.066, -75.9194, 0.22 ) }
    dend_11 { pt3dadd( -0.9853, -182.357, -75.969, 0.74 ) }
    dend_11 { pt3dadd( -1.01581, -182.612, -76.0146, 0.74 ) }
    dend_11 { pt3dadd( -1.14766, -183.894, -76.2462, 0.22 ) }
    dend_11 { pt3dadd( -1.2246, -185.002, -76.4418, 0.22 ) }
    dend_11 { pt3dadd( -1.31989, -186.44, -76.7221, 0.22 ) }
    dend_11 { pt3dadd( -1.34883, -186.902, -76.8267, 0.81 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 10/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -16.8468, -65.3968, -15.645, 0.66 ) }
    dend_10 { pt3dadd( -17.0695, -66.7924, -15.4543, 0.66 ) }
    dend_10 { pt3dadd( -17.1454, -67.3072, -15.3586, 0.52 ) }
    dend_10 { pt3dadd( -17.2345, -67.8472, -15.2323, 0.88 ) }
    dend_10 { pt3dadd( -17.284, -68.1906, -15.1413, 1.03 ) }
    dend_10 { pt3dadd( -17.3401, -68.6595, -15.0081, 0.96 ) }
    dend_10 { pt3dadd( -17.4141, -69.3866, -14.7939, 0.37 ) }
    dend_10 { pt3dadd( -17.4397, -70.1047, -14.5443, 0.29 ) }
    dend_10 { pt3dadd( -17.438, -70.4721, -14.426, 0.29 ) }
    dend_10 { pt3dadd( -17.3727, -71.2492, -14.2043, 0.29 ) }
    dend_10 { pt3dadd( -17.3371, -71.4978, -14.147, 0.74 ) }
    dend_10 { pt3dadd( -17.3256, -71.566, -14.1364, 0.74 ) }
    dend_10 { pt3dadd( -17.2844, -71.8312, -14.1194, 0.74 ) }
    dend_10 { pt3dadd( -17.2058, -72.3347, -14.1184, 0.59 ) }
    dend_10 { pt3dadd( -17.0924, -73.1683, -14.1396, 0.29 ) }
    dend_10 { pt3dadd( -17.0104, -74.0252, -14.175, 0.29 ) }
    dend_10 { pt3dadd( -16.9541, -74.8336, -14.2143, 0.29 ) }
    dend_10 { pt3dadd( -16.9042, -75.7467, -14.262, 0.29 ) }
    dend_10 { pt3dadd( -16.8826, -76.4745, -14.3285, 1.33 ) }
    dend_10 { pt3dadd( -16.8825, -76.5359, -14.3367, 1.33 ) }
    dend_10 { pt3dadd( -16.8991, -77.158, -14.4514, 1.99 ) }
    dend_10 { pt3dadd( -16.8997, -77.5391, -14.5429, 2.21 ) }
    dend_10 { pt3dadd( -16.8976, -77.8662, -14.6325, 2.21 ) }
    dend_10 { pt3dadd( -16.8849, -78.9527, -14.9577, 0.29 ) }
    dend_10 { pt3dadd( -16.8652, -79.8484, -15.2348, 0.29 ) }
    dend_10 { pt3dadd( -16.8463, -80.3687, -15.3973, 0.29 ) }
    dend_10 { pt3dadd( -16.8248, -80.7314, -15.5146, 0.96 ) }
    dend_10 { pt3dadd( -16.7963, -81.1653, -15.6458, 1.47 ) }
    dend_10 { pt3dadd( -16.7756, -81.4315, -15.7196, 1.84 ) }
    dend_10 { pt3dadd( -16.7099, -81.9686, -15.8524, 0.88 ) }
    dend_10 { pt3dadd( -16.7026, -82.0182, -15.8684, 0.88 ) }
    dend_10 { pt3dadd( -16.6298, -82.5311, -16.0696, 0.29 ) }
    dend_10 { pt3dadd( -16.5687, -83.0294, -16.2853, 0.29 ) }
    dend_10 { pt3dadd( -16.5621, -83.0839, -16.3111, 0.29 ) }
    dend_10 { pt3dadd( -16.4821, -83.7724, -16.6537, 0.52 ) }
    dend_10 { pt3dadd( -16.3954, -84.5454, -17.0514, 0.52 ) }
    dend_10 { pt3dadd( -16.3208, -85.201, -17.383, 0.22 ) }
    dend_10 { pt3dadd( -16.2613, -85.7475, -17.651, 1.47 ) }
    dend_10 { pt3dadd( -16.2131, -86.2072, -17.863, 2.06 ) }
    dend_10 { pt3dadd( -16.1934, -86.4558, -17.9622, 2.36 ) }
    dend_10 { pt3dadd( -16.1697, -86.9955, -18.1313, 1.69 ) }
    dend_10 { pt3dadd( -16.1591, -87.8531, -18.3251, 0.74 ) }
    dend_10 { pt3dadd( -16.1719, -88.638, -18.454, 0.44 ) }
    dend_10 { pt3dadd( -16.2177, -89.4689, -18.5632, 0.44 ) }
    dend_10 { pt3dadd( -16.2634, -89.9727, -18.6158, 0.44 ) }
    dend_10 { pt3dadd( -16.369, -90.9487, -18.7093, 0.29 ) }
    dend_10 { pt3dadd( -16.4232, -91.4449, -18.7637, 0.59 ) }
    dend_10 { pt3dadd( -16.4779, -91.9618, -18.8296, 0.59 ) }
    dend_10 { pt3dadd( -16.523, -92.5022, -18.9165, 0.29 ) }
    dend_10 { pt3dadd( -16.5263, -92.5614, -18.9294, 0.29 ) }
    dend_10 { pt3dadd( -16.5628, -93.3162, -19.1244, 0.29 ) }
    dend_10 { pt3dadd( -16.5968, -94.1576, -19.3824, 0.29 ) }
    dend_10 { pt3dadd( -16.6033, -94.2592, -19.413, 0.29 ) }
    dend_10 { pt3dadd( -16.6547, -94.637, -19.5034, 0.29 ) }
    dend_10 { pt3dadd( -16.669, -94.6872, -19.511, 0.29 ) }
    dend_10 { pt3dadd( -16.8989, -95.1646, -19.5912, 0.29 ) }
    dend_10 { pt3dadd( -16.9249, -95.2099, -19.6005, 0.29 ) }
    dend_10 { pt3dadd( -17.2377, -95.7139, -19.7292, 0.29 ) }
    dend_10 { pt3dadd( -17.7033, -96.4704, -19.9525, 2.28 ) }
    dend_10 { pt3dadd( -18.2954, -97.4224, -20.2384, 2.65 ) }
    dend_10 { pt3dadd( -19.1213, -98.7669, -20.6515, 0.29 ) }
    dend_10 { pt3dadd( -19.5338, -99.4553, -20.8586, 0.29 ) }
    dend_10 { pt3dadd( -19.8236, -99.9337, -20.9899, 0.59 ) }
    dend_10 { pt3dadd( -19.9679, -100.166, -21.0507, 0.22 ) }
    dend_10 { pt3dadd( -20.3116, -100.681, -21.1616, 0.22 ) }
    dend_10 { pt3dadd( -20.599, -101.044, -21.219, 0.22 ) }
    dend_10 { pt3dadd( -21.1311, -101.64, -21.2811, 1.03 ) }
    dend_10 { pt3dadd( -21.6348, -102.159, -21.3302, 1.92 ) }
    dend_10 { pt3dadd( -22.0689, -102.604, -21.383, 2.06 ) }
    dend_10 { pt3dadd( -22.5091, -103.062, -21.4726, 1.92 ) }
    dend_10 { pt3dadd( -23.785, -104.481, -21.8788, 0.29 ) }
    dend_10 { pt3dadd( -24.1804, -104.963, -22.0449, 0.52 ) }
    dend_10 { pt3dadd( -24.2065, -104.999, -22.0585, 0.52 ) }
    dend_10 { pt3dadd( -24.4345, -105.373, -22.1987, 0.52 ) }
    dend_10 { pt3dadd( -24.7468, -106.026, -22.4116, 0.37 ) }
    dend_10 { pt3dadd( -24.9261, -106.593, -22.5687, 0.29 ) }
    dend_10 { pt3dadd( -25.0388, -107.236, -22.7221, 0.29 ) }
    dend_10 { pt3dadd( -25.1221, -107.751, -22.8318, 0.88 ) }
    dend_10 { pt3dadd( -25.1724, -108.09, -22.9042, 0.88 ) }
    dend_10 { pt3dadd( -25.2716, -108.956, -23.1051, 0.22 ) }
    dend_10 { pt3dadd( -25.3184, -109.669, -23.2855, 1.55 ) }
    dend_10 { pt3dadd( -25.3271, -110.103, -23.4166, 1.84 ) }
    dend_10 { pt3dadd( -25.3144, -110.488, -23.551, 1.62 ) }
    dend_10 { pt3dadd( -25.2663, -111.405, -23.9225, 0.22 ) }
    dend_10 { pt3dadd( -25.2244, -112.036, -24.1977, 0.22 ) }
    dend_10 { pt3dadd( -25.1933, -112.434, -24.3744, 0.22 ) }
    dend_10 { pt3dadd( -25.1724, -112.848, -24.5363, 0.74 ) }
    dend_10 { pt3dadd( -25.1633, -113.219, -24.659, 0.74 ) }
    dend_10 { pt3dadd( -25.1658, -114.047, -24.8867, 0.29 ) }
    dend_10 { pt3dadd( -25.1831, -114.536, -24.9806, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_10 { pt3dadd( -25.2221, -115.337, -25.076, 0.29 ) }
    dend_10 { pt3dadd( -25.2551, -116.116, -25.1361, 1.77 ) }
    dend_10 { pt3dadd( -25.2697, -116.58, -25.1588, 2.21 ) }
    dend_10 { pt3dadd( -25.2789, -117.023, -25.168, 2.21 ) }
    dend_10 { pt3dadd( -25.2849, -117.797, -25.1581, 0.74 ) }
    dend_10 { pt3dadd( -25.3119, -118.523, -25.1473, 0.22 ) }
    dend_10 { pt3dadd( -25.3715, -119.41, -25.1369, 0.22 ) }
    dend_10 { pt3dadd( -25.4135, -119.874, -25.1392, 0.88 ) }
    dend_10 { pt3dadd( -25.4568, -120.31, -25.1517, 1.03 ) }
    dend_10 { pt3dadd( -25.4692, -120.424, -25.1586, 1.03 ) }
    dend_10 { pt3dadd( -25.5703, -121.241, -25.2409, 0.22 ) }
    dend_10 { pt3dadd( -25.6484, -121.781, -25.3061, 0.22 ) }
    dend_10 { pt3dadd( -25.6639, -121.885, -25.3176, 0.22 ) }
    dend_10 { pt3dadd( -25.7519, -122.488, -25.3855, 0.22 ) }
    dend_10 { pt3dadd( -25.8096, -122.89, -25.4212, 0.22 ) }
    dend_10 { pt3dadd( -25.9106, -123.558, -25.4668, 1.33 ) }
    dend_10 { pt3dadd( -25.9703, -123.944, -25.4826, 1.77 ) }
    dend_10 { pt3dadd( -26.0562, -124.532, -25.4916, 1.77 ) }
    dend_10 { pt3dadd( -26.1171, -125.001, -25.4957, 0.88 ) }
    dend_10 { pt3dadd( -26.232, -125.939, -25.4954, 0.29 ) }
    dend_10 { pt3dadd( -26.2585, -126.29, -25.5086, 0.74 ) }
    dend_10 { pt3dadd( -26.2902, -126.668, -25.5325, 0.74 ) }
    dend_10 { pt3dadd( -26.3692, -127.554, -25.6148, 0.22 ) }
    dend_10 { pt3dadd( -26.4045, -127.943, -25.6595, 0.22 ) }
    dend_10 { pt3dadd( -26.4116, -128.012, -25.6683, 0.22 ) }
    dend_10 { pt3dadd( -26.5024, -128.715, -25.7722, 0.96 ) }
    dend_10 { pt3dadd( -26.6571, -129.737, -25.9135, 1.18 ) }
    dend_10 { pt3dadd( -26.7118, -130.029, -25.9508, 1.47 ) }
    dend_10 { pt3dadd( -26.7273, -130.097, -25.9584, 1.47 ) }
    dend_10 { pt3dadd( -26.8076, -130.452, -25.9868, 1.47 ) }
    dend_10 { pt3dadd( -27.0017, -131.441, -26.0573, 0.22 ) }
    dend_10 { pt3dadd( -27.0589, -131.766, -26.0833, 0.22 ) }
    dend_10 { pt3dadd( -27.1067, -132.205, -26.1356, 0.74 ) }
    dend_10 { pt3dadd( -27.1361, -132.418, -26.1577, 0.96 ) }
    dend_10 { pt3dadd( -27.1544, -132.531, -26.1675, 0.96 ) }
    dend_10 { pt3dadd( -27.2063, -132.8, -26.1884, 0.96 ) }
    dend_10 { pt3dadd( -27.3653, -133.551, -26.2538, 0.22 ) }
    dend_10 { pt3dadd( -27.4583, -134.005, -26.3, 0.29 ) }
    dend_10 { pt3dadd( -27.5888, -134.541, -26.3956, 0.29 ) }
    dend_10 { pt3dadd( -27.7102, -134.905, -26.4896, 0.29 ) }
    dend_10 { pt3dadd( -27.9593, -135.551, -26.6877, 1.25 ) }
    dend_10 { pt3dadd( -28.1247, -135.941, -26.823, 1.69 ) }
    dend_10 { pt3dadd( -28.2639, -136.238, -26.9423, 1.69 ) }
    dend_10 { pt3dadd( -28.7123, -137.1, -27.3397, 1.03 ) }
    dend_10 { pt3dadd( -29.2013, -137.99, -27.7519, 0.22 ) }
    dend_10 { pt3dadd( -29.4005, -138.35, -27.9092, 0.22 ) }
    dend_10 { pt3dadd( -29.8947, -139.252, -28.2745, 1.99 ) }
    dend_10 { pt3dadd( -30.2008, -139.826, -28.4817, 2.5 ) }
    dend_10 { pt3dadd( -30.7877, -141.041, -28.8609, 0.29 ) }
    dend_10 { pt3dadd( -31.0276, -141.603, -28.9986, 0.22 ) }
    dend_10 { pt3dadd( -31.2473, -142.203, -29.1163, 0.52 ) }
    dend_10 { pt3dadd( -31.3351, -142.465, -29.1564, 0.59 ) }
    dend_10 { pt3dadd( -31.5808, -143.346, -29.2468, 0.22 ) }
    dend_10 { pt3dadd( -31.7318, -144.08, -29.2949, 0.22 ) }
    dend_10 { pt3dadd( -31.7966, -144.528, -29.3102, 0.22 ) }
    dend_10 { pt3dadd( -31.9153, -145.439, -29.3403, 1.33 ) }
    dend_10 { pt3dadd( -31.9798, -145.868, -29.3461, 1.69 ) }
    dend_10 { pt3dadd( -32.0519, -146.3, -29.3412, 1.47 ) }
    dend_10 { pt3dadd( -32.177, -146.895, -29.3174, 0.52 ) }
    dend_10 { pt3dadd( -32.2953, -147.359, -29.2925, 0.29 ) }
    dend_10 { pt3dadd( -32.6404, -148.533, -29.206, 0.29 ) }
    dend_10 { pt3dadd( -32.9108, -149.307, -29.1311, 1.11 ) }
    dend_10 { pt3dadd( -33.0781, -149.745, -29.0904, 1.47 ) }
    dend_10 { pt3dadd( -33.545, -150.879, -28.9774, 0.22 ) }
    dend_10 { pt3dadd( -33.7284, -151.315, -28.9403, 1.77 ) }
    dend_10 { pt3dadd( -33.9835, -151.913, -28.8994, 2.14 ) }
    dend_10 { pt3dadd( -34.1398, -152.279, -28.8829, 1.69 ) }
    dend_10 { pt3dadd( -34.4885, -153.185, -28.8749, 0.22 ) }
    dend_10 { pt3dadd( -34.5059, -153.237, -28.877, 0.22 ) }
    dend_10 { pt3dadd( -34.637, -153.694, -28.9159, 0.22 ) }
    dend_10 { pt3dadd( -34.7773, -154.173, -28.9785, 0.52 ) }
    dend_10 { pt3dadd( -34.8197, -154.318, -29.0035, 0.52 ) }
    dend_10 { pt3dadd( -35.0242, -155.034, -29.1437, 0.22 ) }
    dend_10 { pt3dadd( -35.1518, -155.472, -29.2391, 0.22 ) }
    dend_10 { pt3dadd( -35.3272, -156.095, -29.3977, 1.99 ) }
    dend_10 { pt3dadd( -35.4857, -156.665, -29.5641, 2.5 ) }
    dend_10 { pt3dadd( -35.6992, -157.438, -29.8659, 0.81 ) }
    dend_10 { pt3dadd( -35.8412, -157.941, -30.0814, 0.22 ) }
    dend_10 { pt3dadd( -35.8527, -157.981, -30.0986, 0.22 ) }
    dend_10 { pt3dadd( -35.9319, -158.255, -30.2081, 0.52 ) }
    dend_10 { pt3dadd( -35.9438, -158.296, -30.223, 0.52 ) }
    dend_10 { pt3dadd( -36.2293, -159.122, -30.4488, 0.22 ) }
    dend_10 { pt3dadd( -36.5231, -159.899, -30.6044, 0.22 ) }
    dend_10 { pt3dadd( -36.7854, -160.558, -30.7035, 0.22 ) }
    dend_10 { pt3dadd( -37.0351, -161.146, -30.7578, 1.33 ) }
    dend_10 { pt3dadd( -37.1494, -161.4, -30.7665, 1.33 ) }
    dend_10 { pt3dadd( -37.6102, -162.384, -30.755, 0.22 ) }
    dend_10 { pt3dadd( -37.945, -163.017, -30.6686, 0.22 ) }
    dend_10 { pt3dadd( -37.9696, -163.057, -30.6596, 0.22 ) }
    dend_10 { pt3dadd( -38.6039, -163.991, -30.364, 2.28 ) }
    dend_10 { pt3dadd( -38.7947, -164.244, -30.2555, 2.73 ) }
    dend_10 { pt3dadd( -38.9824, -164.474, -30.1388, 2.73 ) }
    dend_10 { pt3dadd( -39.8991, -165.473, -29.5142, 0.22 ) }
    dend_10 { pt3dadd( -40.089, -165.643, -29.387, 0.74 ) }
    dend_10 { pt3dadd( -40.2883, -165.804, -29.2555, 0.96 ) }
    dend_10 { pt3dadd( -40.9739, -166.257, -28.8302, 0.22 ) }
    dend_10 { pt3dadd( -41.306, -166.443, -28.6422, 1.03 ) }
    dend_10 { pt3dadd( -41.5507, -166.557, -28.5596, 1.03 ) }
    dend_10 { pt3dadd( -42.6663, -166.996, -28.405, 0.22 ) }
    dend_10 { pt3dadd( -42.7176, -167.014, -28.4045, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_10 { pt3dadd( -43.4525, -167.269, -28.4392, 1.4 ) }
    dend_10 { pt3dadd( -43.6588, -167.338, -28.4584, 1.4 ) }
    dend_10 { pt3dadd( -45.6948, -168.045, -28.6788, 0.59 ) }
    dend_10 { pt3dadd( -46.1634, -168.218, -28.7339, 1.03 ) }
    dend_10 { pt3dadd( -47.5608, -168.806, -28.8782, 0.22 ) }
    dend_10 { pt3dadd( -48.2097, -169.109, -28.9094, 0.22 ) }
    dend_10 { pt3dadd( -48.2504, -169.131, -28.9094, 0.22 ) }
    dend_10 { pt3dadd( -48.7253, -169.404, -28.8771, 1.11 ) }
    dend_10 { pt3dadd( -49.0476, -169.606, -28.8168, 1.25 ) }
    dend_10 { pt3dadd( -50.1582, -170.351, -28.5706, 0.22 ) }
    dend_10 { pt3dadd( -50.5114, -170.604, -28.4804, 0.66 ) }
    dend_10 { pt3dadd( -51.4957, -171.309, -28.2482, 0.22 ) }
    dend_10 { pt3dadd( -51.5401, -171.341, -28.2371, 0.22 ) }
    dend_10 { pt3dadd( -51.8366, -171.555, -28.1584, 0.96 ) }
    dend_10 { pt3dadd( -52.1072, -171.747, -28.0732, 1.4 ) }
    dend_10 { pt3dadd( -52.5093, -172.033, -27.9194, 0.96 ) }
    dend_10 { pt3dadd( -53.2022, -172.552, -27.6127, 0.22 ) }
    dend_10 { pt3dadd( -53.5691, -172.852, -27.425, 1.62 ) }
    dend_10 { pt3dadd( -53.8646, -173.103, -27.2711, 1.99 ) }
    dend_10 { pt3dadd( -54.776, -173.942, -26.7723, 0.22 ) }
    dend_10 { pt3dadd( -55.0336, -174.202, -26.6304, 0.37 ) }
    dend_10 { pt3dadd( -55.1601, -174.346, -26.5544, 0.37 ) }
    dend_10 { pt3dadd( -55.479, -174.73, -26.3549, 0.22 ) }
    dend_10 { pt3dadd( -55.7424, -175.063, -26.2011, 0.22 ) }
    dend_10 { pt3dadd( -56.1259, -175.556, -25.9879, 0.52 ) }
    dend_10 { pt3dadd( -56.5759, -176.136, -25.7531, 0.22 ) }
    dend_10 { pt3dadd( -56.8352, -176.449, -25.6267, 0.96 ) }
    dend_10 { pt3dadd( -57.1122, -176.743, -25.5176, 0.96 ) }
    dend_10 { pt3dadd( -57.8335, -177.475, -25.2867, 0.22 ) }
    dend_10 { pt3dadd( -58.4351, -178.018, -25.1741, 1.18 ) }
    dend_10 { pt3dadd( -58.745, -178.257, -25.1678, 1.55 ) }
    dend_10 { pt3dadd( -58.7825, -178.284, -25.1701, 1.55 ) }
    dend_10 { pt3dadd( -59.8993, -179.044, -25.301, 0.29 ) }
    dend_10 { pt3dadd( -60.4494, -179.403, -25.3802, 0.29 ) }
    dend_10 { pt3dadd( -61.5689, -180.09, -25.5483, 1.55 ) }
    dend_10 { pt3dadd( -63.2877, -181.103, -25.8003, 0.29 ) }
    dend_10 { pt3dadd( -63.3409, -181.134, -25.8071, 0.29 ) }
    dend_10 { pt3dadd( -63.8063, -181.408, -25.8583, 1.18 ) }
    dend_10 { pt3dadd( -64.6171, -181.888, -25.9332, 0.22 ) }
    dend_10 { pt3dadd( -65.2659, -182.275, -25.9799, 1.25 ) }
    dend_10 { pt3dadd( -66.2482, -182.925, -26.0352, 0.22 ) }
    dend_10 { pt3dadd( -66.3965, -183.029, -26.038, 0.74 ) }
    dend_10 { pt3dadd( -67.034, -183.502, -26.0545, 0.22 ) }
    dend_10 { pt3dadd( -67.0695, -183.531, -26.0562, 0.22 ) }
    dend_10 { pt3dadd( -67.5946, -184.012, -26.0974, 1.11 ) }
    dend_10 { pt3dadd( -67.9563, -184.38, -26.13, 1.47 ) }
    dend_10 { pt3dadd( -68.7081, -185.233, -26.1854, 0.22 ) }
    dend_10 { pt3dadd( -68.9037, -185.463, -26.1971, 0.59 ) }
    dend_10 { pt3dadd( -69.339, -186.0, -26.2108, 1.18 ) }
    dend_10 { pt3dadd( -69.3737, -186.043, -26.2118, 1.18 ) }
    dend_10 { pt3dadd( -69.784, -186.583, -26.2199, 1.18 ) }
    dend_10 { pt3dadd( -70.5135, -187.568, -26.2177, 0.22 ) }
    dend_10 { pt3dadd( -70.8828, -188.106, -26.2233, 1.25 ) }
    dend_10 { pt3dadd( -71.0288, -188.319, -26.2226, 1.25 ) }
    dend_10 { pt3dadd( -71.5657, -189.05, -26.1986, 0.29 ) }
    dend_10 { pt3dadd( -71.8785, -189.453, -26.1795, 0.96 ) }
    dend_10 { pt3dadd( -72.6187, -190.483, -26.0997, 0.29 ) }
    dend_10 { pt3dadd( -73.0971, -191.194, -26.0089, 0.44 ) }
    dend_10 { pt3dadd( -73.5882, -191.958, -25.8701, 0.22 ) }
    dend_10 { pt3dadd( -74.0325, -192.666, -25.6967, 1.18 ) }
    dend_10 { pt3dadd( -74.3049, -193.124, -25.5255, 1.77 ) }
    dend_10 { pt3dadd( -74.8973, -194.165, -24.9897, 0.29 ) }
    dend_10 { pt3dadd( -75.0962, -194.553, -24.7178, 0.29 ) }
    dend_10 { pt3dadd( -75.2185, -194.81, -24.4754, 0.29 ) }
    dend_10 { pt3dadd( -75.319, -195.015, -24.2282, 0.88 ) }
    dend_10 { pt3dadd( -75.623, -195.605, -23.4309, 0.22 ) }
    dend_10 { pt3dadd( -75.8498, -195.936, -22.9222, 1.03 ) }
    dend_10 { pt3dadd( -75.9904, -196.091, -22.6579, 1.03 ) }
    dend_10 { pt3dadd( -76.2738, -196.375, -22.1168, 0.22 ) }
    dend_10 { pt3dadd( -77.042, -197.041, -20.6817, 0.22 ) }
    dend_10 { pt3dadd( -77.0669, -197.059, -20.6367, 0.22 ) }
    dend_10 { pt3dadd( -77.6006, -197.317, -19.7297, 0.81 ) }
    dend_10 { pt3dadd( -77.7099, -197.35, -19.5571, 1.03 ) }
    dend_10 { pt3dadd( -78.0241, -197.396, -19.0309, 0.22 ) }
    dend_10 { pt3dadd( -78.4062, -197.389, -18.3742, 0.22 ) }
    dend_10 { pt3dadd( -78.4301, -197.385, -18.3255, 0.22 ) }
    dend_10 { pt3dadd( -78.8406, -197.317, -17.488, 1.33 ) }
    dend_10 { pt3dadd( -79.0303, -197.298, -17.1265, 1.55 ) }
    dend_10 { pt3dadd( -79.7304, -197.306, -15.9588, 0.22 ) }
    dend_10 { pt3dadd( -79.9444, -197.326, -15.6394, 0.59 ) }
    dend_10 { pt3dadd( -80.3115, -197.382, -15.1749, 0.59 ) }
    dend_10 { pt3dadd( -80.7363, -197.463, -14.7126, 0.44 ) }
    dend_10 { pt3dadd( -81.4643, -197.631, -14.0408, 0.22 ) }
    dend_10 { pt3dadd( -81.9448, -197.74, -13.6393, 1.03 ) }
    dend_10 { pt3dadd( -82.1256, -197.786, -13.5018, 1.03 ) }
    dend_10 { pt3dadd( -82.8748, -197.974, -12.9071, 0.22 ) }
    dend_10 { pt3dadd( -83.1902, -198.038, -12.6392, 0.22 ) }
    dend_10 { pt3dadd( -83.2223, -198.042, -12.6063, 0.22 ) }
    dend_10 { pt3dadd( -83.8112, -198.061, -11.9541, 0.22 ) }
    dend_10 { pt3dadd( -84.3373, -198.04, -11.3463, 0.22 ) }
    dend_10 { pt3dadd( -84.3672, -198.037, -11.3113, 0.22 ) }
    dend_10 { pt3dadd( -84.9521, -197.961, -10.6923, 1.11 ) }
    dend_10 { pt3dadd( -85.2036, -197.932, -10.4866, 1.55 ) }
    dend_10 { pt3dadd( -85.9554, -197.857, -9.97536, 0.22 ) }
    dend_10 { pt3dadd( -86.565, -197.826, -9.6521, 0.22 ) }
    dend_10 { pt3dadd( -86.8877, -197.813, -9.5038, 0.66 ) }
    dend_10 { pt3dadd( -87.8456, -197.804, -9.10414, 0.22 ) }
    dend_10 { pt3dadd( -88.7076, -197.817, -8.76856, 1.25 ) }
    dend_10 { pt3dadd( -89.0481, -197.828, -8.65707, 1.47 ) }
    dend_10 { pt3dadd( -90.1405, -197.937, -8.31522, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_10 { pt3dadd( -90.1912, -197.946, -8.29923, 0.22 ) }
    dend_10 { pt3dadd( -90.5796, -198.047, -8.17037, 1.03 ) }
    dend_10 { pt3dadd( -91.1467, -198.25, -7.9583, 1.33 ) }
    dend_10 { pt3dadd( -92.5736, -198.825, -7.40775, 0.22 ) }
    dend_10 { pt3dadd( -93.6476, -199.286, -7.00189, 0.22 ) }
    dend_10 { pt3dadd( -94.4528, -199.665, -6.68979, 0.22 ) }
    dend_10 { pt3dadd( -94.7462, -199.814, -6.57615, 1.03 ) }
    dend_10 { pt3dadd( -95.1089, -200.026, -6.43389, 1.25 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 8/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -19.4747, 926.158, -49.9954, 0.88 ) }
    dend_63 { pt3dadd( -19.8167, 927.058, -49.9476, 0.88 ) }
    dend_63 { pt3dadd( -20.337, 928.442, -49.8958, 0.15 ) }
    dend_63 { pt3dadd( -20.6228, 929.34, -49.9301, 0.15 ) }
    dend_63 { pt3dadd( -20.6521, 929.432, -49.9369, 0.15 ) }
    dend_63 { pt3dadd( -20.805, 929.914, -49.9721, 1.03 ) }
    dend_63 { pt3dadd( -20.8739, 930.131, -49.988, 1.4 ) }
    dend_63 { pt3dadd( -20.9333, 930.334, -50.0186, 1.4 ) }
    dend_63 { pt3dadd( -21.453, 932.128, -50.3133, 0.22 ) }
    dend_63 { pt3dadd( -21.8126, 933.466, -50.5353, 0.22 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 18/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -19.4747, 926.158, -49.9954, 0.22 ) }
    dend_62 { pt3dadd( -18.9443, 927.587, -49.4617, 0.22 ) }
    dend_62 { pt3dadd( -18.7123, 928.241, -49.1899, 0.81 ) }
    dend_62 { pt3dadd( -18.6412, 928.446, -49.0997, 1.03 ) }
    dend_62 { pt3dadd( -18.529, 928.797, -48.9462, 0.81 ) }
    dend_62 { pt3dadd( -18.053, 930.354, -48.2675, 0.22 ) }
    dend_62 { pt3dadd( -17.9824, 930.599, -48.1704, 0.44 ) }
    dend_62 { pt3dadd( -17.8645, 931.144, -47.9688, 0.15 ) }
    dend_62 { pt3dadd( -17.8568, 931.184, -47.9563, 0.15 ) }
    dend_62 { pt3dadd( -17.7644, 931.783, -47.7888, 1.03 ) }
    dend_62 { pt3dadd( -17.7561, 931.857, -47.7715, 1.03 ) }
    dend_62 { pt3dadd( -17.6415, 932.907, -47.5925, 0.15 ) }
    dend_62 { pt3dadd( -17.6143, 933.161, -47.5519, 0.29 ) }
    dend_62 { pt3dadd( -17.4861, 934.334, -47.3747, 0.15 ) }
    dend_62 { pt3dadd( -17.4379, 934.744, -47.3085, 0.66 ) }
    dend_62 { pt3dadd( -17.4317, 934.799, -47.2971, 0.66 ) }
    dend_62 { pt3dadd( -17.3341, 935.786, -47.0555, 0.15 ) }
    dend_62 { pt3dadd( -17.2732, 936.475, -46.8501, 0.66 ) }
    dend_62 { pt3dadd( -17.2175, 937.071, -46.6646, 0.22 ) }
    dend_62 { pt3dadd( -17.2108, 937.125, -46.6464, 0.22 ) }
    dend_62 { pt3dadd( -17.1333, 937.723, -46.4315, 0.74 ) }
    dend_62 { pt3dadd( -17.1187, 937.87, -46.375, 0.74 ) }
    dend_62 { pt3dadd( -17.1235, 937.997, -46.3133, 0.74 ) }
    // Section: dend_52, id: dend_52, parent: dend_30 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -5.86068, 893.33, -23.0318, 0.37 ) }
    dend_52 { pt3dadd( -7.56416, 894.312, -22.9396, 0.37 ) }
    dend_52 { pt3dadd( -8.30249, 894.744, -22.9056, 0.37 ) }
    dend_52 { pt3dadd( -8.37632, 894.791, -22.8949, 0.37 ) }
    dend_52 { pt3dadd( -8.99094, 895.194, -22.77, 0.37 ) }
    dend_52 { pt3dadd( -9.76984, 895.736, -22.5638, 0.88 ) }
    dend_52 { pt3dadd( -10.2019, 896.049, -22.43, 0.88 ) }
    dend_52 { pt3dadd( -10.2665, 896.103, -22.3987, 0.88 ) }
    dend_52 { pt3dadd( -11.1622, 896.959, -21.8305, 0.88 ) }
    dend_52 { pt3dadd( -11.201, 897.002, -21.8008, 0.88 ) }
    dend_52 { pt3dadd( -11.497, 897.404, -21.5197, 1.03 ) }
    dend_52 { pt3dadd( -11.5541, 897.483, -21.4684, 1.03 ) }
    dend_52 { pt3dadd( -11.8505, 897.837, -21.2442, 1.03 ) }
    dend_52 { pt3dadd( -11.9411, 897.937, -21.1842, 1.03 ) }
    dend_52 { pt3dadd( -12.4914, 898.492, -20.873, 0.74 ) }
    dend_52 { pt3dadd( -13.2239, 899.189, -20.4766, 0.29 ) }
    dend_52 { pt3dadd( -13.961, 899.862, -20.069, 0.29 ) }
    dend_52 { pt3dadd( -14.7102, 900.571, -19.6282, 0.29 ) }
    dend_52 { pt3dadd( -14.7993, 900.663, -19.5684, 0.29 ) }
    dend_52 { pt3dadd( -15.2278, 901.158, -19.2323, 0.22 ) }
    dend_52 { pt3dadd( -15.2777, 901.228, -19.1808, 0.22 ) }
    dend_52 { pt3dadd( -15.5745, 901.802, -18.7232, 0.52 ) }
    dend_52 { pt3dadd( -15.6836, 902.502, -18.1492, 1.18 ) }
    dend_52 { pt3dadd( -15.6763, 903.078, -17.6938, 1.18 ) }
    dend_52 { pt3dadd( -15.6708, 903.137, -17.6477, 1.18 ) }
    dend_52 { pt3dadd( -15.5935, 903.451, -17.4069, 1.18 ) }
    dend_52 { pt3dadd( -15.5764, 903.501, -17.3685, 1.18 ) }
    dend_52 { pt3dadd( -15.1144, 904.273, -16.7746, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 69/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -5.86068, 893.33, -23.0318, 0.52 ) }
    dend_31 { pt3dadd( -4.75541, 894.988, -23.3141, 0.52 ) }
    dend_31 { pt3dadd( -3.76532, 896.47, -23.5218, 0.37 ) }
    dend_31 { pt3dadd( -3.71377, 896.547, -23.5318, 0.37 ) }
    dend_31 { pt3dadd( -3.03245, 897.588, -23.643, 0.37 ) }
    dend_31 { pt3dadd( -2.54542, 898.335, -23.7151, 0.74 ) }
    dend_31 { pt3dadd( -1.81163, 899.495, -23.8086, 0.44 ) }
    dend_31 { pt3dadd( -0.936183, 901.063, -23.8465, 0.37 ) }
    dend_31 { pt3dadd( -0.897351, 901.133, -23.8466, 0.37 ) }
    dend_31 { pt3dadd( -0.610138, 901.651, -23.844, 0.37 ) }
    dend_31 { pt3dadd( -0.563674, 901.736, -23.8422, 0.37 ) }
    dend_31 { pt3dadd( 0.146554, 903.132, -23.8094, 0.88 ) }
    dend_31 { pt3dadd( 0.554219, 904.15, -23.8297, 1.11 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 82/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -21.8126, 933.466, -50.5353, 0.22 ) }
    dend_65 { pt3dadd( -23.0748, 932.328, -51.7963, 0.22 ) }
    dend_65 { pt3dadd( -23.4114, 932.019, -52.1569, 1.25 ) }
    dend_65 { pt3dadd( -24.6404, 930.885, -53.5214, 0.22 ) }
    dend_65 { pt3dadd( -25.0791, 930.489, -54.0093, 0.96 ) }
    dend_65 { pt3dadd( -26.3432, 929.381, -55.3897, 0.22 ) }
    dend_65 { pt3dadd( -26.3953, 929.334, -55.4492, 0.22 ) }
    dend_65 { pt3dadd( -27.2589, 928.536, -56.5187, 0.22 ) }
    dend_65 { pt3dadd( -27.2925, 928.502, -56.5651, 0.22 ) }
    dend_65 { pt3dadd( -27.6073, 928.149, -57.0613, 0.74 ) }
    dend_65 { pt3dadd( -27.7462, 927.988, -57.2946, 0.88 ) }
    dend_65 { pt3dadd( -28.7001, 926.943, -58.7108, 0.22 ) }
    dend_65 { pt3dadd( -28.7347, 926.908, -58.7554, 0.22 ) }
    dend_65 { pt3dadd( -29.4492, 926.13, -59.6909, 0.22 ) }
    dend_65 { pt3dadd( -29.8873, 925.628, -60.2812, 0.22 ) }
    dend_65 { pt3dadd( -29.9176, 925.589, -60.3257, 0.22 ) }
    dend_65 { pt3dadd( -30.4861, 924.817, -61.1788, 1.11 ) }
    dend_65 { pt3dadd( -31.0652, 924.257, -61.6048, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 0/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -21.8126, 933.466, -50.5353, 0.96 ) }
    dend_64 { pt3dadd( -21.9843, 934.038, -50.6857, 0.96 ) }
    dend_64 { pt3dadd( -22.0032, 934.1, -50.6999, 0.96 ) }
    dend_64 { pt3dadd( -22.1012, 934.416, -50.7686, 1.18 ) }
    dend_64 { pt3dadd( -22.2942, 935.045, -50.8997, 0.88 ) }
    dend_64 { pt3dadd( -23.1227, 937.788, -51.4571, 0.15 ) }
    dend_64 { pt3dadd( -23.1416, 937.851, -51.4697, 0.15 ) }
    dend_64 { pt3dadd( -23.5879, 939.397, -51.7792, 0.15 ) }
    dend_64 { pt3dadd( -23.8625, 940.427, -52.0093, 0.96 ) }
    dend_64 { pt3dadd( -23.9706, 940.877, -52.1178, 1.33 ) }
    dend_64 { pt3dadd( -23.9849, 940.948, -52.1358, 1.33 ) }
    dend_64 { pt3dadd( -24.0113, 941.147, -52.1866, 1.33 ) }
    dend_64 { pt3dadd( -24.0233, 941.263, -52.2185, 1.33 ) }
    dend_64 { pt3dadd( -24.1438, 942.98, -52.7058, 0.15 ) }
    dend_64 { pt3dadd( -24.1708, 943.383, -52.8112, 0.44 ) }
    dend_64 { pt3dadd( -24.199, 943.778, -52.9098, 0.44 ) }
    dend_64 { pt3dadd( -24.3295, 945.19, -53.2377, 0.22 ) }
    dend_64 { pt3dadd( -24.3463, 945.328, -53.2672, 0.22 ) }
    dend_64 { pt3dadd( -24.5414, 946.374, -53.465, 0.81 ) }
    dend_64 { pt3dadd( -24.7707, 947.304, -53.6155, 0.22 ) }
    dend_64 { pt3dadd( -24.8037, 947.418, -53.635, 0.22 ) }
    dend_64 { pt3dadd( -25.0428, 948.129, -53.761, 1.18 ) }
    dend_64 { pt3dadd( -25.179, 948.488, -53.8236, 1.33 ) }
    dend_64 { pt3dadd( -25.9829, 950.287, -54.2152, 0.22 ) }
    dend_64 { pt3dadd( -26.0432, 950.4, -54.2442, 0.22 ) }
    dend_64 { pt3dadd( -26.303, 950.842, -54.3661, 0.22 ) }
    dend_64 { pt3dadd( -26.6802, 951.415, -54.5362, 1.03 ) }
    dend_64 { pt3dadd( -26.9927, 951.846, -54.6775, 1.33 ) }
    dend_64 { pt3dadd( -27.9137, 953.027, -55.1118, 0.15 ) }
    dend_64 { pt3dadd( -28.4286, 953.59, -55.3573, 0.15 ) }
    dend_64 { pt3dadd( -28.4717, 953.635, -55.3781, 0.15 ) }
    dend_64 { pt3dadd( -29.1682, 954.334, -55.7203, 0.15 ) }
    dend_64 { pt3dadd( -29.2141, 954.376, -55.7428, 0.15 ) }
    dend_64 { pt3dadd( -29.8877, 954.941, -56.0667, 1.03 ) }
    dend_64 { pt3dadd( -30.3025, 955.271, -56.2429, 1.4 ) }
    // Section: dend_60, id: dend_60, parent: dend_52 (entry count 35/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -15.1144, 904.273, -16.7746, 0.52 ) }
    dend_60 { pt3dadd( -15.3815, 905.761, -17.5805, 0.52 ) }
    dend_60 { pt3dadd( -15.4352, 906.085, -17.7267, 0.52 ) }
    dend_60 { pt3dadd( -15.4425, 906.14, -17.7506, 0.52 ) }
    dend_60 { pt3dadd( -15.531, 906.904, -18.0814, 0.37 ) }
    dend_60 { pt3dadd( -15.5355, 906.959, -18.1053, 0.37 ) }
    dend_60 { pt3dadd( -15.556, 907.747, -18.4642, 0.37 ) }
    dend_60 { pt3dadd( -15.5138, 908.418, -18.7232, 1.03 ) }
    dend_60 { pt3dadd( -15.4574, 908.977, -18.9454, 0.88 ) }
    dend_60 { pt3dadd( -15.4498, 909.039, -18.971, 0.88 ) }
    dend_60 { pt3dadd( -15.3658, 909.671, -19.2297, 0.59 ) }
    dend_60 { pt3dadd( -15.2335, 911.107, -19.8697, 0.22 ) }
    dend_60 { pt3dadd( -15.1797, 912.041, -20.2905, 0.22 ) }
    dend_60 { pt3dadd( -15.1781, 912.093, -20.3163, 0.22 ) }
    dend_60 { pt3dadd( -15.179, 912.849, -20.7009, 0.88 ) }
    dend_60 { pt3dadd( -15.1843, 913.336, -20.9445, 1.11 ) }
    dend_60 { pt3dadd( -15.2069, 914.882, -21.6779, 0.29 ) }
    dend_60 { pt3dadd( -15.2072, 915.385, -21.9069, 0.22 ) }
    dend_60 { pt3dadd( -15.1607, 916.228, -22.3318, 0.22 ) }
    dend_60 { pt3dadd( -15.1549, 916.281, -22.3592, 0.22 ) }
    dend_60 { pt3dadd( -14.9679, 917.44, -22.9274, 0.22 ) }
    dend_60 { pt3dadd( -14.8149, 918.212, -23.2788, 1.33 ) }
    dend_60 { pt3dadd( -14.7255, 918.577, -23.4312, 1.33 ) }
    dend_60 { pt3dadd( -14.3399, 920.161, -24.1112, 0.22 ) }
    dend_60 { pt3dadd( -14.3273, 920.214, -24.1341, 0.22 ) }
    dend_60 { pt3dadd( -14.1149, 921.189, -24.5656, 0.22 ) }
    dend_60 { pt3dadd( -13.9858, 921.861, -24.8916, 0.81 ) }
    dend_60 { pt3dadd( -13.7345, 923.268, -25.5644, 0.22 ) }
    dend_60 { pt3dadd( -13.6105, 923.94, -25.8628, 0.81 ) }
    dend_60 { pt3dadd( -13.5978, 923.995, -25.8838, 0.81 ) }
    dend_60 { pt3dadd( -13.5346, 924.242, -25.9839, 0.81 ) }
    dend_60 { pt3dadd( -13.2223, 925.263, -26.4377, 0.22 ) }
    dend_60 { pt3dadd( -12.9674, 925.992, -26.7596, 1.4 ) }
    dend_60 { pt3dadd( -12.792, 926.451, -26.9356, 1.77 ) }
    dend_60 { pt3dadd( -12.5014, 927.109, -27.1837, 1.18 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 70/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -15.1144, 904.273, -16.7746, 0.52 ) }
    dend_53 { pt3dadd( -15.8846, 905.653, -16.1608, 0.52 ) }
    dend_53 { pt3dadd( -15.9608, 905.797, -16.1087, 0.52 ) }
    dend_53 { pt3dadd( -16.3023, 906.475, -15.9092, 0.81 ) }
    dend_53 { pt3dadd( -16.3489, 906.57, -15.8858, 0.81 ) }
    dend_53 { pt3dadd( -16.5543, 907.015, -15.7905, 0.59 ) }
    dend_53 { pt3dadd( -17.407, 908.967, -15.375, 0.29 ) }
    dend_53 { pt3dadd( -17.4812, 909.15, -15.3449, 0.29 ) }
    dend_53 { pt3dadd( -17.8334, 910.049, -15.1516, 1.03 ) }
    dend_53 { pt3dadd( -18.1622, 910.943, -14.9014, 0.96 ) }
    dend_53 { pt3dadd( -18.4963, 911.881, -14.5803, 0.59 ) }
    dend_53 { pt3dadd( -18.8008, 912.811, -14.179, 0.59 ) }
    dend_53 { pt3dadd( -18.8438, 912.955, -14.0967, 0.59 ) }
    dend_53 { pt3dadd( -19.0682, 913.915, -13.4908, 0.59 ) }
    dend_53 { pt3dadd( -19.137, 914.778, -12.8992, 0.29 ) }
    dend_53 { pt3dadd( -19.1343, 914.842, -12.853, 0.29 ) }
    dend_53 { pt3dadd( -19.0698, 915.44, -12.4408, 0.29 ) }
    dend_53 { pt3dadd( -19.0525, 915.574, -12.3577, 0.29 ) }
    dend_53 { pt3dadd( -18.9797, 916.475, -11.8614, 0.59 ) }
    dend_53 { pt3dadd( -18.9502, 918.013, -11.162, 0.22 ) }
    dend_53 { pt3dadd( -18.9552, 918.098, -11.1264, 0.22 ) }
    dend_53 { pt3dadd( -19.1703, 919.04, -10.7592, 0.22 ) }
    dend_53 { pt3dadd( -19.2781, 919.322, -10.6583, 0.22 ) }
    dend_53 { pt3dadd( -19.7432, 919.975, -10.4397, 0.22 ) }
    dend_53 { pt3dadd( -20.4331, 920.309, -10.3451, 0.66 ) }
    dend_53 { pt3dadd( -20.6283, 920.347, -10.3456, 0.66 ) }
    dend_53 { pt3dadd( -21.7423, 920.465, -10.4113, 0.88 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 97/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.554219, 904.15, -23.8297, 0.29 ) }
    dend_33 { pt3dadd( 1.09195, 905.336, -23.5006, 0.29 ) }
    dend_33 { pt3dadd( 1.15225, 905.485, -23.4679, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_33 { pt3dadd( 1.48694, 906.352, -23.3068, 0.88 ) }
    dend_33 { pt3dadd( 1.76447, 907.109, -23.1829, 1.25 ) }
    dend_33 { pt3dadd( 1.9832, 907.724, -23.0892, 1.25 ) }
    dend_33 { pt3dadd( 2.31566, 908.653, -22.9577, 0.44 ) }
    dend_33 { pt3dadd( 2.67027, 909.699, -22.8433, 0.29 ) }
    dend_33 { pt3dadd( 2.90898, 910.4, -22.7786, 0.88 ) }
    dend_33 { pt3dadd( 3.06593, 910.869, -22.7515, 1.25 ) }
    dend_33 { pt3dadd( 3.09021, 910.94, -22.7503, 1.25 ) }
    dend_33 { pt3dadd( 3.28739, 911.514, -22.7491, 0.96 ) }
    dend_33 { pt3dadd( 3.34368, 911.673, -22.7476, 0.96 ) }
    dend_33 { pt3dadd( 3.58076, 912.32, -22.7436, 0.74 ) }
    dend_33 { pt3dadd( 4.0498, 913.592, -22.7386, 0.29 ) }
    dend_33 { pt3dadd( 4.39229, 914.514, -22.7365, 0.52 ) }
    dend_33 { pt3dadd( 4.47147, 914.734, -22.7362, 0.52 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 14/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.554219, 904.15, -23.8297, 0.22 ) }
    dend_32 { pt3dadd( 0.100894, 904.82, -23.2663, 0.22 ) }
    dend_32 { pt3dadd( 0.0732748, 904.856, -23.2349, 0.22 ) }
    dend_32 { pt3dadd( -0.249289, 905.259, -22.8843, 0.22 ) }
    dend_32 { pt3dadd( -0.274914, 905.29, -22.8565, 0.22 ) }
    dend_32 { pt3dadd( -0.757477, 905.892, -22.3319, 0.22 ) }
    dend_32 { pt3dadd( -0.78613, 905.928, -22.3007, 0.22 ) }
    dend_32 { pt3dadd( -1.23656, 906.523, -21.8736, 0.22 ) }
    dend_32 { pt3dadd( -1.43394, 906.77, -21.6869, 0.22 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 23/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -21.7423, 920.465, -10.4113, 0.22 ) }
    dend_55 { pt3dadd( -21.469, 922.052, -10.6154, 0.22 ) }
    dend_55 { pt3dadd( -21.4538, 922.247, -10.5138, 0.22 ) }
    dend_55 { pt3dadd( -21.521, 923.089, -9.85979, 0.22 ) }
    dend_55 { pt3dadd( -21.6443, 923.531, -9.37714, 0.37 ) }
    dend_55 { pt3dadd( -21.9296, 924.294, -8.4048, 0.37 ) }
    dend_55 { pt3dadd( -21.9557, 924.354, -8.29707, 0.37 ) }
    dend_55 { pt3dadd( -22.4443, 925.497, -5.78832, 1.18 ) }
    dend_55 { pt3dadd( -22.6411, 925.804, -4.92599, 1.18 ) }
    dend_55 { pt3dadd( -23.0042, 926.206, -3.47809, 0.96 ) }
    dend_55 { pt3dadd( -23.1047, 926.275, -3.14985, 0.96 ) }
    dend_55 { pt3dadd( -24.2109, 926.812, -0.0681057, 0.52 ) }
    dend_55 { pt3dadd( -24.2695, 926.836, 0.0805006, 0.52 ) }
    dend_55 { pt3dadd( -24.6561, 926.992, 0.992465, 0.52 ) }
    dend_55 { pt3dadd( -24.7439, 927.028, 1.21535, 0.52 ) }
    dend_55 { pt3dadd( -25.2772, 927.231, 2.48027, 0.74 ) }
    dend_55 { pt3dadd( -25.7293, 927.391, 3.39002, 0.88 ) }
    dend_55 { pt3dadd( -25.789, 927.407, 3.46615, 0.88 ) }
    dend_55 { pt3dadd( -26.7073, 927.721, 4.67898, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 42/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -21.7423, 920.465, -10.4113, 0.22 ) }
    dend_54 { pt3dadd( -22.4906, 919.939, -10.2598, 0.22 ) }
    dend_54 { pt3dadd( -22.5619, 919.889, -10.2454, 0.22 ) }
    dend_54 { pt3dadd( -23.4599, 919.257, -10.0635, 0.22 ) }
    dend_54 { pt3dadd( -23.5168, 919.217, -10.052, 0.22 ) }
    dend_54 { pt3dadd( -24.0854, 918.817, -9.93681, 0.66 ) }
    dend_54 { pt3dadd( -24.3614, 918.623, -9.88091, 0.66 ) }
    // Section: dend_51, id: dend_51, parent: dend_33 (entry count 49/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 4.47147, 914.734, -22.7362, 0.15 ) }
    dend_51 { pt3dadd( 5.56347, 914.63, -22.7881, 0.15 ) }
    dend_51 { pt3dadd( 6.21638, 914.419, -22.8604, 0.44 ) }
    dend_51 { pt3dadd( 6.27239, 914.395, -22.8696, 0.44 ) }
    dend_51 { pt3dadd( 6.8461, 914.11, -23.0076, 0.15 ) }
    dend_51 { pt3dadd( 7.28577, 913.889, -23.1242, 0.96 ) }
    dend_51 { pt3dadd( 7.76647, 913.654, -23.2503, 0.96 ) }
    dend_51 { pt3dadd( 8.6849, 913.15, -23.523, 0.22 ) }
    dend_51 { pt3dadd( 8.82471, 913.074, -23.5671, 0.22 ) }
    dend_51 { pt3dadd( 9.57153, 912.694, -23.8064, 0.52 ) }
    dend_51 { pt3dadd( 10.0948, 912.443, -23.9756, 0.52 ) }
    dend_51 { pt3dadd( 10.7388, 912.184, -24.178, 0.59 ) }
    dend_51 { pt3dadd( 10.9104, 912.133, -24.2371, 0.59 ) }
    dend_51 { pt3dadd( 11.7011, 911.997, -24.5065, 0.15 ) }
    dend_51 { pt3dadd( 11.7591, 911.989, -24.5264, 0.15 ) }
    dend_51 { pt3dadd( 12.0712, 911.945, -24.6979, 0.15 ) }
    dend_51 { pt3dadd( 12.191, 911.925, -24.7851, 0.15 ) }
    dend_51 { pt3dadd( 12.9018, 911.828, -25.382, 0.88 ) }
    dend_51 { pt3dadd( 13.2204, 911.79, -25.6663, 1.18 ) }
    dend_51 { pt3dadd( 13.6095, 911.763, -26.0511, 1.18 ) }
    dend_51 { pt3dadd( 14.8775, 911.72, -27.3574, 0.22 ) }
    dend_51 { pt3dadd( 14.9269, 911.718, -27.4077, 0.22 ) }
    dend_51 { pt3dadd( 15.1848, 911.699, -27.6567, 0.37 ) }
    dend_51 { pt3dadd( 15.238, 911.695, -27.7052, 0.37 ) }
    dend_51 { pt3dadd( 16.0144, 911.663, -28.4179, 0.22 ) }
    dend_51 { pt3dadd( 16.0553, 911.659, -28.4518, 0.22 ) }
    dend_51 { pt3dadd( 16.6306, 911.647, -28.8246, 0.22 ) }
    dend_51 { pt3dadd( 16.9353, 911.632, -29.0226, 0.74 ) }
    dend_51 { pt3dadd( 17.2607, 911.604, -29.2334, 1.03 ) }
    dend_51 { pt3dadd( 17.3293, 911.597, -29.2761, 1.03 ) }
    dend_51 { pt3dadd( 18.6511, 911.425, -30.0204, 0.37 ) }
    dend_51 { pt3dadd( 19.382, 911.347, -30.4613, 1.62 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 81/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 4.47147, 914.734, -22.7362, 0.29 ) }
    dend_34 { pt3dadd( 4.91766, 916.313, -22.7714, 0.29 ) }
    dend_34 { pt3dadd( 5.23822, 917.288, -22.7943, 0.29 ) }
    dend_34 { pt3dadd( 5.26839, 917.37, -22.7962, 0.29 ) }
    dend_34 { pt3dadd( 5.67125, 918.468, -22.8212, 0.15 ) }
    dend_34 { pt3dadd( 6.09276, 919.618, -22.8474, 1.18 ) }
    dend_34 { pt3dadd( 6.33117, 920.268, -22.8623, 1.77 ) }
    dend_34 { pt3dadd( 6.72519, 921.167, -22.8916, 1.18 ) }
    dend_34 { pt3dadd( 7.02043, 921.774, -22.9147, 1.18 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 90/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -26.7073, 927.721, 4.67898, 0.59 ) }
    dend_57 { pt3dadd( -26.807, 928.47, 4.89686, 0.59 ) }
    dend_57 { pt3dadd( -26.8155, 928.533, 4.91107, 0.59 ) }
    dend_57 { pt3dadd( -26.8713, 929.0, 4.98818, 0.59 ) }
    dend_57 { pt3dadd( -26.8757, 929.075, 4.99786, 0.59 ) }
    dend_57 { pt3dadd( -26.8632, 929.38, 5.02228, 0.59 ) }
    dend_57 { pt3dadd( -26.8453, 929.558, 5.11676, 0.59 ) }
    dend_57 { pt3dadd( -26.8323, 929.722, 5.38654, 0.29 ) }
    dend_57 { pt3dadd( -26.834, 929.925, 5.75249, 0.22 ) }
    dend_57 { pt3dadd( -26.8724, 930.193, 6.24167, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_57 { pt3dadd( -26.9435, 930.45, 6.70128, 0.74 ) }
    dend_57 { pt3dadd( -27.3874, 931.653, 8.86527, 0.74 ) }
    dend_57 { pt3dadd( -27.9731, 932.947, 11.173, 0.88 ) }
    dend_57 { pt3dadd( -28.231, 933.423, 12.0251, 0.22 ) }
    dend_57 { pt3dadd( -28.502, 933.879, 12.8196, 0.22 ) }
    dend_57 { pt3dadd( -28.7242, 934.232, 13.3628, 0.22 ) }
    dend_57 { pt3dadd( -28.7538, 934.278, 13.4187, 0.22 ) }
    dend_57 { pt3dadd( -28.9393, 934.599, 13.5837, 0.22 ) }
    dend_57 { pt3dadd( -28.9716, 934.666, 13.597, 0.22 ) }
    dend_57 { pt3dadd( -29.2159, 935.321, 13.7814, 0.22 ) }
    dend_57 { pt3dadd( -29.4987, 936.228, 14.0741, 0.81 ) }
    dend_57 { pt3dadd( -29.5181, 936.279, 14.0897, 0.81 ) }
    dend_57 { pt3dadd( -29.8064, 936.854, 14.2312, 0.96 ) }
    dend_57 { pt3dadd( -29.8553, 936.941, 14.2483, 0.96 ) }
    dend_57 { pt3dadd( -30.1003, 937.366, 14.3092, 0.96 ) }
    dend_57 { pt3dadd( -30.47, 938.007, 14.3677, 0.44 ) }
    dend_57 { pt3dadd( -30.7376, 938.535, 14.3954, 0.44 ) }
    dend_57 { pt3dadd( -31.1177, 939.375, 14.4346, 0.22 ) }
    dend_57 { pt3dadd( -31.4539, 940.22, 14.4796, 0.37 ) }
    dend_57 { pt3dadd( -31.7583, 941.052, 14.5406, 0.37 ) }
    dend_57 { pt3dadd( -31.9979, 941.77, 14.6239, 0.37 ) }
    dend_57 { pt3dadd( -32.2655, 942.62, 14.7844, 0.22 ) }
    dend_57 { pt3dadd( -32.2839, 942.682, 14.8007, 0.22 ) }
    dend_57 { pt3dadd( -32.4473, 943.089, 14.999, 0.22 ) }
    dend_57 { pt3dadd( -32.4974, 943.169, 15.0772, 0.22 ) }
    dend_57 { pt3dadd( -32.9504, 943.678, 15.9142, 0.15 ) }
    dend_57 { pt3dadd( -33.1871, 943.952, 16.4267, 0.44 ) }
    dend_57 { pt3dadd( -33.2077, 943.978, 16.4732, 0.44 ) }
    dend_57 { pt3dadd( -33.7381, 944.801, 17.6594, 0.88 ) }
    dend_57 { pt3dadd( -34.0864, 945.461, 18.425, 0.88 ) }
    dend_57 { pt3dadd( -34.1646, 945.67, 18.6241, 0.88 ) }
    dend_57 { pt3dadd( -34.4181, 946.684, 19.4296, 0.37 ) }
    dend_57 { pt3dadd( -34.4998, 947.3, 19.8109, 0.22 ) }
    dend_57 { pt3dadd( -34.544, 947.992, 20.1644, 0.22 ) }
    dend_57 { pt3dadd( -34.5166, 948.38, 20.3213, 0.59 ) }
    dend_57 { pt3dadd( -34.3783, 949.423, 20.7339, 0.44 ) }
    dend_57 { pt3dadd( -34.3593, 949.499, 20.7719, 0.44 ) }
    dend_57 { pt3dadd( -34.0452, 950.174, 21.2866, 0.29 ) }
    dend_57 { pt3dadd( -33.9925, 950.23, 21.3452, 0.29 ) }
    dend_57 { pt3dadd( -33.25, 950.589, 21.8655, 0.29 ) }
    dend_57 { pt3dadd( -33.2031, 950.603, 21.8953, 0.29 ) }
    dend_57 { pt3dadd( -32.4894, 950.872, 22.3867, 0.81 ) }
    dend_57 { pt3dadd( -32.4152, 950.913, 22.4451, 0.81 ) }
    dend_57 { pt3dadd( -32.0062, 951.27, 22.8414, 0.81 ) }
    dend_57 { pt3dadd( -31.4504, 952.005, 23.4899, 0.29 ) }
    dend_57 { pt3dadd( -30.9377, 952.959, 24.2104, 0.29 ) }
    dend_57 { pt3dadd( -30.358, 954.305, 25.0702, 0.52 ) }
    dend_57 { pt3dadd( -30.078, 955.151, 25.5266, 1.33 ) }
    dend_57 { pt3dadd( -29.7815, 956.236, 26.0769, 0.22 ) }
    dend_57 { pt3dadd( -29.6728, 956.814, 26.3409, 0.74 ) }
    dend_57 { pt3dadd( -29.6576, 956.957, 26.3956, 0.74 ) }
    dend_57 { pt3dadd( -29.5695, 957.783, 26.5959, 0.37 ) }
    dend_57 { pt3dadd( -29.4819, 958.262, 26.6626, 1.03 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 53/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -26.7073, 927.721, 4.67898, 0.22 ) }
    dend_56 { pt3dadd( -27.6908, 928.291, 5.0603, 0.22 ) }
    dend_56 { pt3dadd( -28.3258, 928.65, 5.30089, 0.15 ) }
    dend_56 { pt3dadd( -29.1648, 929.104, 5.59193, 0.15 ) }
    dend_56 { pt3dadd( -30.1739, 929.65, 5.94203, 0.52 ) }
    dend_56 { pt3dadd( -30.6149, 929.889, 6.09504, 0.52 ) }
    dend_56 { pt3dadd( -31.231, 930.223, 6.30877, 0.52 ) }
    dend_56 { pt3dadd( -31.4107, 930.317, 6.37359, 0.52 ) }
    dend_56 { pt3dadd( -32.4378, 930.837, 6.75601, 0.22 ) }
    // Section: dend_50, id: dend_50, parent: dend_34 (entry count 62/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 7.02043, 921.774, -22.9147, 0.22 ) }
    dend_50 { pt3dadd( 8.38811, 919.964, -23.9749, 0.22 ) }
    dend_50 { pt3dadd( 8.78473, 919.365, -24.28, 0.29 ) }
    dend_50 { pt3dadd( 9.49643, 918.123, -24.8354, 0.22 ) }
    dend_50 { pt3dadd( 10.0777, 917.108, -25.2891, 0.44 ) }
    dend_50 { pt3dadd( 10.639, 916.128, -25.7271, 0.22 ) }
    dend_50 { pt3dadd( 10.6794, 916.057, -25.7587, 0.22 ) }
    dend_50 { pt3dadd( 10.8627, 915.583, -25.84, 0.44 ) }
    dend_50 { pt3dadd( 10.9908, 915.08, -25.9005, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 7.02043, 921.774, -22.9147, 0.29 ) }
    dend_35 { pt3dadd( 7.10076, 922.245, -22.8411, 0.29 ) }
    dend_35 { pt3dadd( 7.31935, 923.327, -22.5693, 0.29 ) }
    dend_35 { pt3dadd( 7.56502, 924.434, -22.2372, 0.29 ) }
    dend_35 { pt3dadd( 7.59063, 924.535, -22.2043, 0.29 ) }
    dend_35 { pt3dadd( 7.90386, 925.535, -21.8443, 0.29 ) }
    dend_35 { pt3dadd( 7.97109, 925.722, -21.7723, 0.81 ) }
    dend_35 { pt3dadd( 8.35064, 926.633, -21.3969, 0.66 ) }
    dend_35 { pt3dadd( 8.37131, 926.675, -21.3791, 0.66 ) }
    dend_35 { pt3dadd( 8.64291, 927.178, -21.1564, 0.52 ) }
    dend_35 { pt3dadd( 9.35591, 928.487, -20.6154, 0.29 ) }
    dend_35 { pt3dadd( 9.80078, 929.332, -20.2434, 0.29 ) }
    dend_35 { pt3dadd( 10.0227, 929.795, -20.0537, 1.33 ) }
    dend_35 { pt3dadd( 10.278, 930.372, -19.8397, 1.55 ) }
    dend_35 { pt3dadd( 10.3032, 930.434, -19.8171, 1.55 ) }
    dend_35 { pt3dadd( 10.5619, 931.156, -19.5232, 1.25 ) }
    dend_35 { pt3dadd( 11.0526, 932.661, -18.8966, 0.37 ) }
    dend_35 { pt3dadd( 11.3241, 933.556, -18.5108, 0.29 ) }
    dend_35 { pt3dadd( 11.3416, 933.617, -18.4831, 0.29 ) }
    dend_35 { pt3dadd( 11.6074, 934.584, -18.0212, 0.29 ) }
    dend_35 { pt3dadd( 12.0769, 936.306, -17.1842, 1.84 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 92/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -29.4819, 958.262, 26.6626, 0.44 ) }
    dend_59 { pt3dadd( -29.1726, 956.977, 26.5858, 0.44 ) }
    dend_59 { pt3dadd( -28.8975, 955.835, 26.5174, 0.37 ) }
    dend_59 { pt3dadd( -28.7064, 955.041, 26.47, 0.22 ) }
    dend_59 { pt3dadd( -28.6899, 954.973, 26.4659, 0.22 ) }
    dend_59 { pt3dadd( -28.3807, 953.689, 26.3891, 0.22 ) }
    dend_59 { pt3dadd( -28.3642, 953.62, 26.385, 0.22 ) }
    dend_59 { pt3dadd( -27.0592, 943.804, 27.4126, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 0/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -29.4819, 958.262, 26.6626, 0.74 ) }
    dend_58 { pt3dadd( -29.7504, 959.074, 26.6342, 0.74 ) }
    dend_58 { pt3dadd( -29.9796, 960.199, 26.6041, 0.22 ) }
    dend_58 { pt3dadd( -29.9978, 960.289, 26.6, 0.22 ) }
    dend_58 { pt3dadd( -30.1777, 961.24, 26.5868, 0.22 ) }
    dend_58 { pt3dadd( -30.2322, 961.535, 26.5879, 0.22 ) }
    dend_58 { pt3dadd( -30.3972, 962.483, 26.6139, 0.22 ) }
    dend_58 { pt3dadd( -30.605, 963.737, 26.6866, 1.4 ) }
    dend_58 { pt3dadd( -30.8208, 965.412, 26.8746, 0.29 ) }
    dend_58 { pt3dadd( -30.9385, 966.504, 27.0698, 0.29 ) }
    dend_58 { pt3dadd( -30.9495, 966.631, 27.1002, 0.29 ) }
    dend_58 { pt3dadd( -31.0689, 967.846, 27.4559, 0.29 ) }
    dend_58 { pt3dadd( -31.0783, 967.931, 27.4872, 0.29 ) }
    dend_58 { pt3dadd( -31.2515, 969.319, 28.1365, 0.81 ) }
    dend_58 { pt3dadd( -31.332, 970.138, 28.5987, 1.11 ) }
    dend_58 { pt3dadd( -31.3391, 970.217, 28.6437, 1.11 ) }
    dend_58 { pt3dadd( -31.4478, 971.236, 29.1873, 1.11 ) }
    dend_58 { pt3dadd( -31.4662, 971.374, 29.2583, 1.11 ) }
    dend_58 { pt3dadd( -31.5969, 972.049, 29.5481, 1.11 ) }
    dend_58 { pt3dadd( -31.6154, 972.119, 29.5775, 1.11 ) }
    dend_58 { pt3dadd( -31.8588, 973.012, 29.9267, 0.22 ) }
    dend_58 { pt3dadd( -32.1248, 973.947, 30.298, 0.29 ) }
    dend_58 { pt3dadd( -32.1499, 974.03, 30.3311, 0.29 ) }
    dend_58 { pt3dadd( -32.4322, 974.91, 30.6623, 0.22 ) }
    dend_58 { pt3dadd( -32.9649, 976.406, 31.1916, 0.81 ) }
    dend_58 { pt3dadd( -36.4071, 988.637, 34.0329, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 26/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 12.0769, 936.306, -17.1842, 1.84 ) }
    dend_37 { pt3dadd( 13.2583, 937.17, -17.7319, 1.84 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 12.0769, 936.306, -17.1842, 0.22 ) }
    dend_36 { pt3dadd( 12.0923, 938.419, -17.5741, 0.22 ) }
    dend_36 { pt3dadd( 12.1124, 939.558, -17.7447, 0.22 ) }
    dend_36 { pt3dadd( 12.1137, 939.625, -17.7534, 0.22 ) }
    dend_36 { pt3dadd( 12.1364, 940.977, -17.9014, 0.59 ) }
    dend_36 { pt3dadd( 12.1624, 942.36, -18.0357, 0.22 ) }
    dend_36 { pt3dadd( 12.1878, 943.403, -18.1227, 0.66 ) }
    dend_36 { pt3dadd( 12.1945, 943.483, -18.1149, 0.66 ) }
    dend_36 { pt3dadd( 12.2265, 943.726, -18.0747, 0.66 ) }
    dend_36 { pt3dadd( 12.3722, 944.68, -17.8659, 0.15 ) }
    dend_36 { pt3dadd( 12.3848, 944.754, -17.8442, 0.15 ) }
    dend_36 { pt3dadd( 12.5022, 945.404, -17.6116, 1.18 ) }
    dend_36 { pt3dadd( 12.8506, 946.92, -16.9715, 0.29 ) }
    dend_36 { pt3dadd( 12.9689, 947.389, -16.7581, 0.52 ) }
    dend_36 { pt3dadd( 12.9886, 947.457, -16.7233, 0.52 ) }
    dend_36 { pt3dadd( 13.0855, 947.736, -16.5512, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 13.2583, 937.17, -17.7319, 0.15 ) }
    dend_39 { pt3dadd( 13.7754, 938.965, -17.232, 0.15 ) }
    dend_39 { pt3dadd( 14.017, 939.853, -17.0111, 0.15 ) }
    dend_39 { pt3dadd( 14.1822, 940.459, -16.8602, 0.29 ) }
    dend_39 { pt3dadd( 14.2406, 940.673, -16.8068, 0.29 ) }
    dend_39 { pt3dadd( 14.388, 941.215, -16.672, 0.15 ) }
    dend_39 { pt3dadd( 14.5037, 941.64, -16.5663, 0.29 ) }
    dend_39 { pt3dadd( 14.5185, 941.75, -16.5648, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 52/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 13.2583, 937.17, -17.7319, 0.29 ) }
    dend_38 { pt3dadd( 13.8918, 935.701, -16.8738, 0.29 ) }
    dend_38 { pt3dadd( 14.0814, 935.209, -16.5769, 0.29 ) }
    dend_38 { pt3dadd( 14.3757, 934.376, -16.0823, 0.22 ) }
    dend_38 { pt3dadd( 14.4859, 934.093, -15.9122, 0.52 ) }
    dend_38 { pt3dadd( 14.9351, 932.966, -15.232, 0.22 ) }
    dend_38 { pt3dadd( 14.9538, 932.915, -15.2008, 0.22 ) }
    dend_38 { pt3dadd( 15.0676, 932.524, -14.9721, 0.88 ) }
    dend_38 { pt3dadd( 15.1409, 932.28, -14.7999, 1.03 ) }
    dend_38 { pt3dadd( 15.4517, 930.991, -13.7812, 0.22 ) }
    dend_38 { pt3dadd( 15.4616, 930.923, -13.7292, 0.22 ) }
    dend_38 { pt3dadd( 15.5809, 929.682, -12.776, 0.22 ) }
    dend_38 { pt3dadd( 15.584, 929.632, -12.7369, 0.22 ) }
    dend_38 { pt3dadd( 15.6893, 928.526, -11.8359, 0.22 ) }
    dend_38 { pt3dadd( 15.7635, 927.811, -11.2374, 0.22 ) }
    dend_38 { pt3dadd( 15.8573, 926.981, -10.4616, 0.22 ) }
    dend_38 { pt3dadd( 16.0724, 925.972, -9.44077, 0.29 ) }
    dend_38 { pt3dadd( 16.1011, 925.903, -9.36577, 0.29 ) }
    dend_38 { pt3dadd( 16.7827, 924.843, -8.25624, 0.15 ) }
    dend_38 { pt3dadd( 16.8158, 924.805, -8.21756, 0.15 ) }
    dend_38 { pt3dadd( 17.8784, 923.896, -7.29949, 0.96 ) }
    dend_38 { pt3dadd( 18.2151, 923.655, -7.0572, 0.96 ) }
    dend_38 { pt3dadd( 19.4145, 922.819, -6.29175, 0.22 ) }
    dend_38 { pt3dadd( 20.3996, 922.148, -5.69297, 0.22 ) }
    dend_38 { pt3dadd( 20.4485, 922.116, -5.66562, 0.22 ) }
    dend_38 { pt3dadd( 21.4171, 921.499, -5.18428, 0.22 ) }
    dend_38 { pt3dadd( 22.9556, 920.553, -4.59271, 0.22 ) }
    dend_38 { pt3dadd( 23.6207, 920.127, -4.32213, 0.74 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 80/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 14.5185, 941.75, -16.5648, 0.37 ) }
    dend_41 { pt3dadd( 14.6534, 943.114, -16.2084, 0.37 ) }
    dend_41 { pt3dadd( 14.662, 943.191, -16.1925, 0.37 ) }
    dend_41 { pt3dadd( 14.7073, 943.659, -16.118, 0.22 ) }
    dend_41 { pt3dadd( 14.8004, 944.693, -16.0178, 0.22 ) }
    dend_41 { pt3dadd( 14.8379, 945.242, -15.985, 0.66 ) }
    dend_41 { pt3dadd( 14.844, 945.332, -15.9796, 0.66 ) }
    dend_41 { pt3dadd( 14.9205, 946.283, -15.994, 0.52 ) }
    dend_41 { pt3dadd( 14.9785, 947.103, -16.0126, 0.52 ) }
    dend_41 { pt3dadd( 15.0263, 948.086, -16.0497, 1.33 ) }
    dend_41 { pt3dadd( 15.0465, 948.906, -16.0984, 1.47 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 91/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 14.5185, 941.75, -16.5648, 0.29 ) }
    dend_40 { pt3dadd( 15.2237, 941.78, -16.1697, 0.29 ) }
    dend_40 { pt3dadd( 15.262, 941.785, -16.1496, 0.29 ) }
    dend_40 { pt3dadd( 16.3786, 941.988, -15.5767, 0.66 ) }
    dend_40 { pt3dadd( 17.0988, 942.138, -15.2065, 0.15 ) }
    dend_40 { pt3dadd( 17.4731, 942.218, -15.0175, 0.88 ) }
    dend_40 { pt3dadd( 17.8808, 942.297, -14.832, 0.88 ) }
    dend_40 { pt3dadd( 18.5034, 942.423, -14.5583, 0.22 ) }
    dend_40 { pt3dadd( 18.5437, 942.431, -14.5439, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_40 { pt3dadd( 19.0722, 942.527, -14.4257, 0.81 ) }
    dend_40 { pt3dadd( 19.2983, 942.593, -14.3841, 0.81 ) }
    dend_40 { pt3dadd( 20.036, 942.846, -14.2586, 0.22 ) }
    dend_40 { pt3dadd( 20.2383, 942.911, -14.2291, 0.96 ) }
    dend_40 { pt3dadd( 20.2865, 942.928, -14.2237, 0.96 ) }
    dend_40 { pt3dadd( 20.6865, 943.077, -14.1979, 0.52 ) }
    dend_40 { pt3dadd( 21.3589, 943.317, -14.1291, 0.22 ) }
    dend_40 { pt3dadd( 21.4272, 943.341, -14.1171, 0.22 ) }
    dend_40 { pt3dadd( 21.6376, 943.406, -14.0617, 0.22 ) }
    dend_40 { pt3dadd( 21.7018, 943.421, -14.0436, 0.22 ) }
    dend_40 { pt3dadd( 22.3119, 943.537, -13.8642, 0.66 ) }
    dend_40 { pt3dadd( 23.1901, 943.671, -13.6002, 0.15 ) }
    dend_40 { pt3dadd( 23.2316, 943.676, -13.5877, 0.15 ) }
    dend_40 { pt3dadd( 23.8014, 943.727, -13.4428, 0.15 ) }
    dend_40 { pt3dadd( 24.2144, 943.759, -13.3319, 0.74 ) }
    dend_40 { pt3dadd( 24.3334, 943.769, -13.2998, 0.74 ) }
    dend_40 { pt3dadd( 24.6824, 943.805, -13.206, 0.74 ) }
    dend_40 { pt3dadd( 24.7318, 943.81, -13.1948, 0.74 ) }
    dend_40 { pt3dadd( 25.4936, 943.87, -13.0215, 0.22 ) }
    dend_40 { pt3dadd( 26.5739, 943.918, -12.7641, 0.66 ) }
    dend_40 { pt3dadd( 26.8403, 943.923, -12.696, 0.66 ) }
    dend_40 { pt3dadd( 26.8969, 943.923, -12.6809, 0.66 ) }
    dend_40 { pt3dadd( 27.3521, 943.909, -12.5487, 0.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 23/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 15.0465, 948.906, -16.0984, 0.44 ) }
    dend_43 { pt3dadd( 14.7789, 950.009, -15.6205, 0.44 ) }
    dend_43 { pt3dadd( 14.6508, 950.779, -15.2308, 0.29 ) }
    dend_43 { pt3dadd( 14.5558, 951.537, -14.825, 0.29 ) }
    dend_43 { pt3dadd( 14.4564, 952.731, -14.1791, 0.81 ) }
    dend_43 { pt3dadd( 14.4386, 953.153, -13.9517, 1.18 ) }
    dend_43 { pt3dadd( 14.4354, 953.354, -13.8444, 1.18 ) }
    dend_43 { pt3dadd( 14.5532, 954.479, -13.2329, 0.15 ) }
    dend_43 { pt3dadd( 14.5795, 954.599, -13.1622, 0.15 ) }
    dend_43 { pt3dadd( 14.7026, 954.956, -12.9497, 0.66 ) }
    dend_43 { pt3dadd( 14.8387, 955.278, -12.8003, 0.96 ) }
    dend_43 { pt3dadd( 14.8571, 955.334, -12.7755, 0.96 ) }
    dend_43 { pt3dadd( 14.8895, 955.525, -12.687, 0.96 ) }
    dend_43 { pt3dadd( 14.9446, 956.179, -12.3076, 0.29 ) }
    dend_43 { pt3dadd( 14.952, 956.294, -12.2312, 0.29 ) }
    dend_43 { pt3dadd( 14.9818, 956.784, -11.8753, 0.29 ) }
    dend_43 { pt3dadd( 15.033, 957.653, -11.2203, 0.37 ) }
    dend_43 { pt3dadd( 15.07, 958.344, -10.695, 0.52 ) }
    dend_43 { pt3dadd( 15.1173, 959.394, -9.88232, 0.96 ) }
    dend_43 { pt3dadd( 15.1213, 959.452, -9.83785, 0.96 ) }
    dend_43 { pt3dadd( 15.1911, 960.036, -9.41427, 1.18 ) }
    dend_43 { pt3dadd( 15.2259, 960.218, -9.29526, 1.18 ) }
    dend_43 { pt3dadd( 15.3111, 960.534, -9.16052, 1.18 ) }
    dend_43 { pt3dadd( 15.3372, 960.624, -9.13609, 1.18 ) }
    dend_43 { pt3dadd( 15.545, 961.448, -8.98838, 1.33 ) }
    dend_43 { pt3dadd( 15.5625, 961.518, -8.97717, 1.33 ) }
    dend_43 { pt3dadd( 15.6925, 962.044, -8.90522, 1.25 ) }
    dend_43 { pt3dadd( 16.0518, 963.488, -8.72007, 0.22 ) }
    dend_43 { pt3dadd( 16.2534, 964.365, -8.62119, 0.22 ) }
    dend_43 { pt3dadd( 16.342, 964.828, -8.57625, 0.59 ) }
    dend_43 { pt3dadd( 16.3597, 964.929, -8.56717, 0.59 ) }
    dend_43 { pt3dadd( 16.405, 965.197, -8.54422, 0.59 ) }
    dend_43 { pt3dadd( 16.521, 965.989, -8.48594, 0.22 ) }
    dend_43 { pt3dadd( 16.5566, 966.596, -8.46941, 0.96 ) }
    dend_43 { pt3dadd( 16.5541, 967.33, -8.45935, 1.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 58/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 15.0465, 948.906, -16.0984, 0.15 ) }
    dend_42 { pt3dadd( 15.5647, 950.827, -16.517, 0.15 ) }
    dend_42 { pt3dadd( 15.5791, 950.904, -16.5301, 0.15 ) }
    dend_42 { pt3dadd( 15.6547, 951.298, -16.5895, 0.15 ) }
    dend_42 { pt3dadd( 15.6648, 951.361, -16.5977, 0.15 ) }
    dend_42 { pt3dadd( 15.7163, 951.784, -16.6537, 0.59 ) }
    dend_42 { pt3dadd( 15.7437, 952.059, -16.6879, 0.59 ) }
    dend_42 { pt3dadd( 15.8385, 953.773, -16.8564, 0.22 ) }
    dend_42 { pt3dadd( 15.8607, 954.453, -16.9203, 1.25 ) }
    dend_42 { pt3dadd( 15.8769, 954.934, -16.9564, 0.88 ) }
    dend_42 { pt3dadd( 15.915, 956.185, -17.0281, 0.15 ) }
    dend_42 { pt3dadd( 15.9246, 956.713, -17.0477, 0.15 ) }
    dend_42 { pt3dadd( 15.9222, 957.296, -17.0579, 0.74 ) }
    dend_42 { pt3dadd( 15.9112, 957.69, -17.0537, 1.11 ) }
    dend_42 { pt3dadd( 15.8662, 958.582, -17.0396, 0.15 ) }
    dend_42 { pt3dadd( 15.8444, 959.049, -17.0292, 0.96 ) }
    dend_42 { pt3dadd( 15.8087, 959.614, -17.0071, 1.18 ) }
    dend_42 { pt3dadd( 15.6786, 961.211, -16.9568, 0.15 ) }
    dend_42 { pt3dadd( 15.6714, 961.283, -16.9547, 0.15 ) }
    dend_42 { pt3dadd( 15.5796, 962.024, -16.9442, 0.15 ) }
    dend_42 { pt3dadd( 15.5714, 962.077, -16.9444, 0.15 ) }
    dend_42 { pt3dadd( 15.5135, 962.532, -16.9441, 0.52 ) }
    dend_42 { pt3dadd( 15.5012, 962.64, -16.942, 0.52 ) }
    dend_42 { pt3dadd( 15.4769, 962.873, -16.9384, 0.52 ) }
    dend_42 { pt3dadd( 15.4732, 962.919, -16.9383, 0.52 ) }
    dend_42 { pt3dadd( 15.4281, 963.689, -16.9411, 0.22 ) }
    dend_42 { pt3dadd( 15.3973, 964.248, -16.9456, 1.11 ) }
    dend_42 { pt3dadd( 15.3747, 964.77, -16.9347, 0.81 ) }
    dend_42 { pt3dadd( 15.3227, 966.145, -16.8807, 0.15 ) }
    dend_42 { pt3dadd( 15.274, 967.605, -16.7987, 0.15 ) }
    dend_42 { pt3dadd( 15.266, 968.096, -16.7562, 1.03 ) }
    dend_42 { pt3dadd( 15.2655, 968.643, -16.6836, 0.81 ) }
    dend_42 { pt3dadd( 15.2885, 969.822, -16.4646, 0.22 ) }
    dend_42 { pt3dadd( 15.2902, 969.867, -16.4535, 0.22 ) }
    dend_42 { pt3dadd( 15.3383, 970.616, -16.195, 0.52 ) }
    dend_42 { pt3dadd( 15.3915, 971.32, -15.9002, 0.22 ) }
    dend_42 { pt3dadd( 15.4395, 971.951, -15.6272, 0.74 ) }
    dend_42 { pt3dadd( 15.4675, 972.308, -15.471, 0.74 ) }
    dend_42 { pt3dadd( 15.4711, 972.359, -15.4495, 0.74 ) }
    dend_42 { pt3dadd( 15.55, 973.398, -15.0274, 0.22 ) }
    dend_42 { pt3dadd( 15.5537, 973.441, -15.0108, 0.22 ) }
    dend_42 { pt3dadd( 15.6299, 974.261, -14.7642, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_42 { pt3dadd( 15.6629, 974.544, -14.6947, 0.66 ) }
    dend_42 { pt3dadd( 15.6694, 974.59, -14.6856, 0.66 ) }
    dend_42 { pt3dadd( 15.7689, 975.102, -14.6122, 0.22 ) }
    dend_42 { pt3dadd( 16.0158, 975.931, -14.4925, 1.4 ) }
    dend_42 { pt3dadd( 16.3586, 976.899, -14.3517, 0.15 ) }
    dend_42 { pt3dadd( 16.4025, 977.009, -14.3363, 0.15 ) }
    dend_42 { pt3dadd( 16.642, 977.565, -14.2512, 0.15 ) }
    dend_42 { pt3dadd( 17.0169, 978.413, -14.1179, 0.15 ) }
    dend_42 { pt3dadd( 17.6989, 979.902, -13.8755, 0.15 ) }
    dend_42 { pt3dadd( 18.0862, 980.682, -13.7308, 1.33 ) }
    dend_42 { pt3dadd( 18.2514, 980.998, -13.6492, 1.47 ) }
    dend_42 { pt3dadd( 18.8592, 982.195, -13.3674, 0.22 ) }
    dend_42 { pt3dadd( 18.926, 982.332, -13.3374, 0.44 ) }
    dend_42 { pt3dadd( 18.9442, 982.375, -13.3315, 0.44 ) }
    dend_42 { pt3dadd( 19.1699, 983.09, -13.4105, 0.22 ) }
    dend_42 { pt3dadd( 19.4581, 984.005, -13.3964, 0.88 ) }
    dend_42 { pt3dadd( 19.8566, 985.426, -13.1999, 0.59 ) }
    dend_42 { pt3dadd( 19.94, 985.689, -13.1314, 0.37 ) }
    dend_42 { pt3dadd( 20.1918, 986.39, -12.891, 0.15 ) }
    dend_42 { pt3dadd( 20.5789, 987.393, -12.4904, 1.62 ) }
    dend_42 { pt3dadd( 21.5435, 989.651, -11.4876, 0.88 ) }
    dend_42 { pt3dadd( 21.7648, 990.115, -11.2502, 1.25 ) }
    dend_42 { pt3dadd( 22.2, 990.94, -10.7453, 0.15 ) }
    dend_42 { pt3dadd( 22.3569, 991.219, -10.5671, 0.66 ) }
    dend_42 { pt3dadd( 22.3865, 991.268, -10.5371, 0.66 ) }
    dend_42 { pt3dadd( 22.9102, 992.118, -10.1168, 0.22 ) }
    dend_42 { pt3dadd( 23.1524, 992.57, -10.0198, 0.88 ) }
    dend_42 { pt3dadd( 23.2443, 992.755, -9.98553, 0.88 ) }
    dend_42 { pt3dadd( 23.2725, 992.819, -9.97412, 0.88 ) }
    dend_42 { pt3dadd( 23.779, 994.081, -9.74765, 0.22 ) }
    dend_42 { pt3dadd( 23.9527, 994.534, -9.66917, 0.66 ) }
    dend_42 { pt3dadd( 24.3583, 995.7, -9.4762, 0.15 ) }
    dend_42 { pt3dadd( 24.5495, 996.282, -9.38387, 0.15 ) }
    dend_42 { pt3dadd( 24.5634, 996.328, -9.37676, 0.15 ) }
    dend_42 { pt3dadd( 24.6597, 996.714, -9.32029, 0.44 ) }
    dend_42 { pt3dadd( 24.7413, 997.22, -9.25543, 0.22 ) }
    dend_42 { pt3dadd( 24.7726, 997.666, -9.20991, 0.52 ) }
    dend_42 { pt3dadd( 24.7624, 997.729, -9.20617, 0.52 ) }
    dend_42 { pt3dadd( 24.6979, 997.958, -9.1863, 0.52 ) }
    dend_42 { pt3dadd( 24.6036, 998.228, -9.15867, 0.37 ) }
    dend_42 { pt3dadd( 24.5733, 998.284, -9.15046, 0.37 ) }
    dend_42 { pt3dadd( 24.3663, 998.523, -9.09745, 0.22 ) }
    dend_42 { pt3dadd( 23.9836, 998.882, -9.00124, 0.44 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 43/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 16.5541, 967.33, -8.45935, 0.22 ) }
    dend_45 { pt3dadd( 16.5345, 968.376, -8.06431, 0.22 ) }
    dend_45 { pt3dadd( 16.5183, 968.907, -7.85571, 0.52 ) }
    dend_45 { pt3dadd( 16.4689, 970.24, -7.31981, 0.29 ) }
    dend_45 { pt3dadd( 16.4425, 970.861, -7.06527, 0.88 ) }
    dend_45 { pt3dadd( 16.4354, 971.328, -6.87979, 1.18 ) }
    dend_45 { pt3dadd( 16.4364, 971.662, -6.75616, 1.18 ) }
    dend_45 { pt3dadd( 16.4438, 971.833, -6.69949, 1.18 ) }
    dend_45 { pt3dadd( 16.4438, 971.833, -6.69949, 1.18 ) }
    dend_45 { pt3dadd( 16.4486, 971.876, -6.68961, 1.18 ) }
    dend_45 { pt3dadd( 16.5485, 972.729, -6.51347, 0.22 ) }
    dend_45 { pt3dadd( 16.6307, 973.248, -6.36255, 0.44 ) }
    dend_45 { pt3dadd( 16.7591, 973.999, -6.09763, 0.59 ) }
    dend_45 { pt3dadd( 16.837, 974.354, -5.94697, 1.11 ) }
    dend_45 { pt3dadd( 16.9295, 974.713, -5.77516, 1.11 ) }
    dend_45 { pt3dadd( 16.9407, 974.751, -5.75443, 1.11 ) }
    dend_45 { pt3dadd( 17.3712, 975.932, -4.97705, 0.22 ) }
    dend_45 { pt3dadd( 17.3908, 975.971, -4.94725, 0.22 ) }
    dend_45 { pt3dadd( 17.6938, 976.478, -4.54623, 0.22 ) }
    dend_45 { pt3dadd( 17.8559, 976.755, -4.3214, 0.74 ) }
    dend_45 { pt3dadd( 17.8782, 976.794, -4.29009, 0.74 ) }
    dend_45 { pt3dadd( 18.0515, 977.129, -4.03564, 0.52 ) }
    dend_45 { pt3dadd( 18.3022, 977.716, -3.64322, 0.22 ) }
    dend_45 { pt3dadd( 18.4423, 978.217, -3.3106, 0.74 ) }
    dend_45 { pt3dadd( 18.5716, 979.112, -2.71618, 1.25 ) }
    dend_45 { pt3dadd( 18.5748, 979.171, -2.67851, 1.25 ) }
    dend_45 { pt3dadd( 18.5691, 979.385, -2.55099, 1.11 ) }
    dend_45 { pt3dadd( 18.5166, 979.848, -2.25048, 0.52 ) }
    dend_45 { pt3dadd( 18.4239, 980.535, -1.75633, 0.15 ) }
    dend_45 { pt3dadd( 18.4194, 980.576, -1.72129, 0.15 ) }
    dend_45 { pt3dadd( 18.4404, 980.9, -1.34167, 0.15 ) }
    dend_45 { pt3dadd( 18.4526, 980.947, -1.26499, 0.15 ) }
    dend_45 { pt3dadd( 18.6025, 981.419, -0.265807, 0.44 ) }
    dend_45 { pt3dadd( 18.6667, 981.582, 0.141902, 0.66 ) }
    dend_45 { pt3dadd( 18.6768, 981.599, 0.191342, 0.66 ) }
    dend_45 { pt3dadd( 18.9288, 981.98, 1.40514, 0.22 ) }
    dend_45 { pt3dadd( 18.9395, 981.994, 1.45611, 0.22 ) }
    dend_45 { pt3dadd( 19.1927, 982.347, 2.73279, 1.33 ) }
    dend_45 { pt3dadd( 19.2153, 982.395, 2.89613, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 82/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 16.5541, 967.33, -8.45935, 0.15 ) }
    dend_44 { pt3dadd( 18.5166, 969.005, -7.99793, 0.15 ) }
    dend_44 { pt3dadd( 19.2038, 969.569, -7.80911, 0.15 ) }
    dend_44 { pt3dadd( 19.3627, 969.693, -7.76149, 0.15 ) }
    dend_44 { pt3dadd( 20.1222, 970.266, -7.52507, 0.44 ) }
    dend_44 { pt3dadd( 20.2898, 970.387, -7.47031, 0.44 ) }
    dend_44 { pt3dadd( 21.388, 971.164, -7.10797, 0.22 ) }
    dend_44 { pt3dadd( 21.9458, 971.548, -6.90253, 0.44 ) }
    dend_44 { pt3dadd( 22.7053, 971.998, -6.63156, 0.15 ) }
    dend_44 { pt3dadd( 22.786, 972.042, -6.60346, 0.15 ) }
    dend_44 { pt3dadd( 23.5922, 972.444, -6.32974, 0.66 ) }
    dend_44 { pt3dadd( 23.6749, 972.483, -6.30249, 0.66 ) }
    dend_44 { pt3dadd( 24.7799, 972.952, -5.95426, 0.22 ) }
    dend_44 { pt3dadd( 25.6848, 973.341, -5.68871, 0.88 ) }
    dend_44 { pt3dadd( 25.7827, 973.382, -5.66068, 0.88 ) }
    dend_44 { pt3dadd( 26.046, 973.489, -5.58681, 1.11 ) }
    dend_44 { pt3dadd( 26.2209, 973.554, -5.54017, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 99/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 19.2153, 982.395, 2.89613, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_47 { pt3dadd( 18.6486, 984.293, 4.42648, 0.29 ) }
    dend_47 { pt3dadd( 18.6373, 984.371, 4.4881, 0.29 ) }
    dend_47 { pt3dadd( 18.5786, 985.47, 5.36175, 0.29 ) }
    dend_47 { pt3dadd( 18.5875, 985.594, 5.46315, 0.29 ) }
    dend_47 { pt3dadd( 18.692, 986.439, 6.12426, 0.74 ) }
    dend_47 { pt3dadd( 18.7025, 986.508, 6.17645, 0.74 ) }
    dend_47 { pt3dadd( 18.8069, 987.356, 6.82325, 0.74 ) }
    dend_47 { pt3dadd( 18.809, 987.507, 6.95265, 0.74 ) }
    dend_47 { pt3dadd( 18.7858, 988.48, 7.84192, 0.15 ) }
    dend_47 { pt3dadd( 18.7784, 988.932, 8.26472, 0.15 ) }
    dend_47 { pt3dadd( 18.7752, 988.993, 8.32061, 0.15 ) }
    dend_47 { pt3dadd( 18.637, 991.054, 10.1748, 0.15 ) }
    dend_47 { pt3dadd( 18.5667, 991.74, 10.7507, 1.11 ) }
    dend_47 { pt3dadd( 18.4908, 992.422, 11.2634, 1.25 ) }
    dend_47 { pt3dadd( 18.3142, 994.02, 12.3929, 0.22 ) }
    dend_47 { pt3dadd( 18.2387, 994.969, 13.0347, 0.22 ) }
    dend_47 { pt3dadd( 18.2351, 995.039, 13.0769, 0.22 ) }
    dend_47 { pt3dadd( 18.2821, 996.073, 13.5376, 0.29 ) }
    dend_47 { pt3dadd( 18.334, 997.113, 13.9345, 0.74 ) }
    dend_47 { pt3dadd( 18.3668, 997.846, 14.2144, 1.11 ) }
    dend_47 { pt3dadd( 18.3748, 997.937, 14.2513, 1.11 ) }
    dend_47 { pt3dadd( 18.5501, 998.933, 14.7126, 0.66 ) }
    dend_47 { pt3dadd( 18.8267, 1000.16, 15.3154, 0.22 ) }
    dend_47 { pt3dadd( 19.0606, 1000.88, 15.72, 0.15 ) }
    dend_47 { pt3dadd( 19.4129, 1001.74, 16.2489, 1.11 ) }
    dend_47 { pt3dadd( 19.7703, 1002.54, 16.7321, 1.69 ) }
    dend_47 { pt3dadd( 19.8018, 1002.61, 16.7754, 1.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 27/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 19.2153, 982.395, 2.89613, 0.29 ) }
    dend_46 { pt3dadd( 18.5499, 983.247, 2.35307, 0.29 ) }
    dend_46 { pt3dadd( 18.3761, 983.471, 2.20276, 0.29 ) }
    dend_46 { pt3dadd( 17.8814, 984.083, 1.78224, 0.15 ) }
    dend_46 { pt3dadd( 17.7747, 984.211, 1.69255, 0.15 ) }
    dend_46 { pt3dadd( 17.4291, 984.636, 1.4077, 0.29 ) }
    dend_46 { pt3dadd( 16.8959, 985.302, 0.969816, 0.15 ) }
    dend_46 { pt3dadd( 16.8343, 985.387, 0.913251, 0.15 ) }
    dend_46 { pt3dadd( 16.3496, 986.159, 0.445451, 0.15 ) }
    dend_46 { pt3dadd( 16.3109, 986.243, 0.401414, 0.15 ) }
    dend_46 { pt3dadd( 16.0915, 986.815, 0.128416, 0.15 ) }
    dend_46 { pt3dadd( 16.0479, 986.982, 0.0598888, 0.15 ) }
    dend_46 { pt3dadd( 15.8454, 988.098, -0.369277, 0.15 ) }
    dend_46 { pt3dadd( 15.8338, 988.185, -0.400749, 0.15 ) }
    dend_46 { pt3dadd( 15.8036, 989.233, -0.75214, 0.15 ) }
    dend_46 { pt3dadd( 15.8041, 989.299, -0.773736, 0.15 ) }
    dend_46 { pt3dadd( 15.8442, 989.844, -0.949977, 0.37 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 44/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 19.8018, 1002.61, 16.7754, 0.52 ) }
    dend_49 { pt3dadd( 19.1612, 1003.5, 17.3177, 0.52 ) }
    dend_49 { pt3dadd( 18.5394, 1004.36, 17.7461, 0.29 ) }
    dend_49 { pt3dadd( 18.3402, 1004.67, 17.8534, 0.96 ) }
    dend_49 { pt3dadd( 18.1048, 1005.05, 17.9634, 1.11 ) }
    dend_49 { pt3dadd( 18.0639, 1005.11, 17.9805, 1.11 ) }
    dend_49 { pt3dadd( 17.7109, 1005.64, 18.1194, 0.81 ) }
    dend_49 { pt3dadd( 17.3438, 1006.22, 18.2195, 1.11 ) }
    dend_49 { pt3dadd( 16.8853, 1007.03, 18.3485, 0.37 ) }
    dend_49 { pt3dadd( 16.8673, 1007.07, 18.3553, 0.37 ) }
    dend_49 { pt3dadd( 16.5152, 1007.83, 18.5469, 0.29 ) }
    dend_49 { pt3dadd( 16.499, 1007.87, 18.5608, 0.29 ) }
    dend_49 { pt3dadd( 16.3138, 1008.37, 18.8622, 0.81 ) }
    dend_49 { pt3dadd( 16.2227, 1008.62, 19.0807, 1.03 ) }
    dend_49 { pt3dadd( 16.2113, 1008.65, 19.1121, 1.03 ) }
    dend_49 { pt3dadd( 16.1165, 1008.93, 19.3957, 0.96 ) }
    dend_49 { pt3dadd( 15.8987, 1009.62, 20.121, 0.66 ) }
    dend_49 { pt3dadd( 15.6939, 1010.31, 20.8221, 0.52 ) }
    dend_49 { pt3dadd( 15.528, 1010.87, 21.3644, 0.44 ) }
    dend_49 { pt3dadd( 15.4409, 1011.17, 21.6274, 0.44 ) }
    dend_49 { pt3dadd( 15.3494, 1011.44, 21.8742, 0.37 ) }
    dend_49 { pt3dadd( 15.3224, 1011.51, 21.9485, 0.37 ) }
    dend_49 { pt3dadd( 15.1552, 1011.98, 22.4931, 0.37 ) }
    dend_49 { pt3dadd( 14.9946, 1012.44, 23.018, 0.22 ) }
    dend_49 { pt3dadd( 14.7783, 1013.05, 23.7494, 1.4 ) }
    dend_49 { pt3dadd( 14.4367, 1013.89, 24.839, 0.29 ) }
    dend_49 { pt3dadd( 14.3186, 1014.13, 25.1892, 0.96 ) }
    dend_49 { pt3dadd( 14.2139, 1014.3, 25.4782, 0.96 ) }
    dend_49 { pt3dadd( 12.698, 1018.56, 30.1005, 0.96 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 73/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 19.8018, 1002.61, 16.7754, 0.22 ) }
    dend_48 { pt3dadd( 19.0295, 1004.31, 16.3385, 0.22 ) }
    dend_48 { pt3dadd( 18.3447, 1005.83, 15.951, 0.22 ) }
    dend_48 { pt3dadd( 18.275, 1005.98, 15.9116, 0.22 ) }
    dend_48 { pt3dadd( 17.6748, 1007.31, 15.572, 0.22 ) }
    dend_48 { pt3dadd( 13.2497, 1017.73, 14.8761, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
    ModelViewParmSubset_2 = new SectionList()
    dend_75 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_75 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_74 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_73 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_72 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_27 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_26 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_24 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_23 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_67 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_19 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_13 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_66 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_61 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_11 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_10 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_57 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_42 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_7 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_21 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_70 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_25 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_22 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_14 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_71 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_9 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_18 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_15 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_69 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_68 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_30 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_31 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_32 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_33 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_34 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_53 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_50 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_54 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_51 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_60 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_35 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_63 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_37 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_62 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_39 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_55 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_36 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_41 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_56 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_65 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_40 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_64 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_38 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_43 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_44 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_45 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_46 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_59 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_47 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_58 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_48 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_49 OneSecGrp_SectionRef_78.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_75 nseg = 11
    dend_74 nseg = 3
    dend_73 nseg = 5
    dend_72 nseg = 9
    dend_27 nseg = 5
    dend_26 nseg = 7
    dend_24 nseg = 7
    dend_23 nseg = 11
    dend_2 nseg = 5
    dend_67 nseg = 3
    dend_20 nseg = 5
    dend_19 nseg = 3
    dend_16 nseg = 5
    dend_13 nseg = 13
    dend_3 nseg = 3
    dend_66 nseg = 11
    dend_29 nseg = 37
    dend_12 nseg = 3
    dend_6 nseg = 3
    dend_61 nseg = 3
    dend_11 nseg = 7
    dend_10 nseg = 9
    dend_57 nseg = 3
    dend_42 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_DBC_d900bc4e97_0_0


