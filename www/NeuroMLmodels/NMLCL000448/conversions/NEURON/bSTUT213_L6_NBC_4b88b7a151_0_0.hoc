// Cell: bSTUT213_L6_NBC_4b88b7a151_0_0
/*
{
  "id" : "bSTUT213_L6_NBC_4b88b7a151_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.18133, 10.1802, -0.0136132, 4.51632", "-3.71511, 9.17715, -0.012728, 5.89932", "-3.24888, 8.1741, -0.0118428, 6.73586", "-2.78266, 7.17105, -0.0109576, 7.77662", "-2.31644, 6.16799, -0.0100724, 8.83653", "-1.85022, 5.16494, -0.00918717, 9.98865", "-1.384, 4.16189, -0.00830196, 11.1793", "-0.917776, 3.15884, -0.00741676, 12.3766", "-0.451555, 2.15579, -0.00653155, 13.3418", "0.0146667, 1.15274, -0.00564635, 14.1684", "0.480888, 0.149684, -0.00476114, 14.5557", "0.94711, -0.853367, -0.00387593, 14.9116", "1.41333, -1.85642, -0.00299073, 14.9294", "1.87955, -2.85947, -0.00210552, 14.4593", "2.34577, -3.86252, -0.00122032, 13.9684", "2.812, -4.86557, -3.35112E-4, 13.2352", "3.27822, -5.86863, 5.50094E-4, 12.4898", "3.74444, -6.87168, 0.0014353, 11.1742", "4.21066, -7.87473, 0.0023205, 8.60206", "4.67688, -8.87778, 0.00320571, 5.94918", "5.1431, -9.88083, 0.00409092, 3.45007" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-4.86983, -2.82075, 10.4413, 1.08", "-6.55994, -3.55671, 10.4555, 1.08", "-7.91029, -4.21823, 10.4653, 0.96", "-8.59956, -4.5936, 10.4696, 0.96", "-10.1997, -5.51293, 10.5936, 0.84", "-11.6831, -6.44785, 10.8108, 0.84", "-13.4027, -7.64944, 11.0927, 0.84", "-14.9146, -8.69892, 11.3751, 0.84", "-16.1686, -9.6083, 11.6443, 0.84", "-17.8647, -10.9744, 12.0705, 0.84", "-19.0098, -12.0745, 12.4355, 0.84", "-20.6104, -13.8819, 13.1027, 0.84", "-27.1593, -17.5964, 14.5002, 0.84", "-32.7257, -22.9832, 14.7254, 0.84", "-37.732, -28.9129, 14.093, 0.84", "-42.2244, -35.2485, 13.2176, 0.84", "-46.6455, -41.6997, 13.4636, 0.84", "-50.2695, -48.672, 13.8216, 0.84", "-54.6101, -55.1797, 14.14, 0.84", "-58.7221, -61.833, 13.5952, 0.84", "-62.5362, -68.6749, 14.1852, 0.84", "-66.3504, -75.5405, 14.4184, 0.84", "-70.0854, -82.4285, 15.0274, 0.84", "-73.6714, -89.3473, 16.065, 0.84", "-77.9075, -95.5741, 18.1249, 0.84", "-81.945, -101.878, 20.3624, 0.84", "-85.8564, -108.588, 21.4674, 0.84", "-89.3414, -115.633, 21.0343, 0.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "4.44017, -9.4252, -1.30865, 2.77", "5.04898, -11.3055, -1.28349, 2.77", "5.67597, -13.242, -1.25758, 1.69", "6.38457, -15.4305, -1.22831, 1.69", "6.97534, -17.255, -1.2039, 2.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "8.18017, -1.43475, -14.5587, 2.65", "9.61736, -2.51919, -15.546, 2.05", "12.8909, -4.98912, -17.7946, 2.41" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.00983, 12.4043, 0.0313539, 4.22", "-5.82395, 16.4496, 0.0313539, 4.22", "-6.30601, 17.5245, 0.0313539, 4.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "5.1431, -9.88083, 0.00409092, 1.16337", "11.4656, -23.4833, 0.00409092, 1.16337", "17.788, -37.0857, 0.00409092, 1.16337" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-89.3414, -115.633, 21.0343, 0.24", "-99.9738, -116.735, 17.4429, 0.24", "-110.887, -117.586, 14.749, 0.24", "-121.945, -117.741, 12.595, 0.24", "-132.858, -115.798, 10.5392, 0.24", "-143.635, -114.263, 7.62236, 0.24", "-154.15, -111.964, 4.2575, 0.24", "-164.183, -110.257, -0.581131, 0.24", "-173.578, -107.886, -6.34914, 0.24", "-182.193, -103.666, -12.3483, 0.24", "-190.988, -98.9275, -17.697, 0.24", "-199.781, -95.7317, -24.0143, 0.24", "-208.321, -90.8016, -29.61, 0.24", "-215.721, -83.5474, -34.4668, 0.24", "-223.171, -77.5189, -40.6034, 0.24", "-231.431, -72.3826, -46.4422, 0.24", "-238.735, -65.8224, -52.2468, 0.24", "-247.466, -61.1158, -57.7242, 0.24", "-254.952, -58.0312, -65.5855, 0.24", "-261.1, -54.6274, -74.4215, 0.24", "-265.99, -52.5804, -84.3665, 0.24", "-269.367, -49.6022, -94.7103, 0.24", "-272.481, -45.2777, -104.688, 0.24", "-277.538, -39.1989, -112.868, 0.24", "-283.795, -34.6648, -121.14, 0.24", "-290.623, -29.7141, -128.711, 0.24" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-89.3414, -115.633, 21.0343, 0.24", "-91.9525, -125.961, 23.6418, 0.24", "-93.2343, -135.785, 28.1894, 0.24", "-94.4299, -145.127, 33.5884, 0.24", "-93.9388, -155.388, 37.3478, 0.24" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "6.97534, -17.255, -1.2039, 0.84", "4.4995, -26.4732, -2.5746, 0.84", "3.71734, -29.6631, -3.12416, 0.84", "2.96419, -33.0165, -3.73497, 0.84", "2.64126, -35.5532, -4.58813, 0.84", "2.60621, -38.1105, -5.69122, 0.72", "2.83329, -41.386, -7.2516, 0.72", "3.37751, -43.1316, -8.56992, 0.72", "3.86074, -44.1999, -9.50047, 0.72", "7.60972, -50.9733, -16.0713, 0.72", "9.05506, -53.4061, -18.6223, 0.72", "9.73046, -54.5162, -19.8637, 0.72", "11.7712, -58.031, -23.9071, 0.6", "13.1468, -60.6923, -26.8782, 0.6", "14.289, -63.2323, -29.5398, 0.6", "15.1284, -65.5031, -31.5248, 0.6", "15.7836, -66.8875, -32.8085, 0.6", "16.5498, -68.138, -34.0726, 0.6", "17.1525, -69.0112, -34.9578, 0.6", "19.5175, -72.1569, -38.2863, 0.6", "21.1434, -74.1635, -40.4436, 0.6", "24.1474, -77.6492, -44.4406, 0.6", "26.8986, -80.9376, -48.4429, 0.6", "28.0143, -82.4209, -50.275, 0.6", "28.5882, -83.2694, -51.4175, 0.48", "29.1462, -84.2585, -52.7473, 0.48", "30.4886, -87.4196, -56.979, 0.48", "30.9229, -88.7792, -58.6505, 0.48", "31.5152, -90.8358, -60.9428, 0.48", "32.9773, -96.0355, -66.5264, 0.24", "33.4299, -97.5648, -68.0424, 0.24", "34.2787, -100.504, -70.7128, 0.24", "34.8467, -102.506, -72.3281, 0.24", "35.5696, -105.085, -74.1327, 0.24", "36.0894, -106.635, -75.2576, 0.36", "38.3645, -112.32, -79.4751, 0.36", "38.5178, -112.637, -79.7332, 0.36", "39.2235, -113.833, -80.8385, 0.96", "41.5096, -117.381, -84.3082, 0.36", "46.2834, -124.038, -91.35, 1.81", "48.8106, -127.363, -94.9803, 0.6", "50.9445, -130.065, -98.0565, 0.6", "54.0863, -134.042, -102.509, 0.36", "55.6965, -135.572, -104.739, 0.96", "58.3013, -137.705, -108.206, 0.36", "59.9258, -138.972, -110.322, 0.96", "64.6346, -142.406, -116.431, 0.36", "66.5292, -143.687, -118.895, 1.57", "80.3524, -152.52, -136.886, 0.72", "82.5537, -153.801, -139.824, 0.72", "82.812, -153.939, -140.173, 1.45" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "6.97534, -17.255, -1.2039, 1.45", "8.76404, -18.0595, -0.970236, 1.45", "10.2984, -18.7495, -0.76981, 1.45", "11.8033, -19.4263, -0.573229, 1.45", "12.9696, -19.9509, -0.420874, 1.45" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "12.8909, -4.98912, -17.7946, 1.33", "14.5822, -4.84047, -17.9871, 1.33", "17.4562, -4.58786, -18.3141, 1.33", "20.4125, -4.32801, -18.6505, 1.81" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "12.8909, -4.98912, -17.7946, 0.72", "13.9263, -7.31678, -18.6793, 0.72", "14.7708, -9.652, -19.4323, 0.72", "15.6495, -11.7875, -20.0816, 0.72", "16.4697, -13.5346, -20.5949, 0.6", "17.5894, -15.929, -21.3192, 0.6", "18.6576, -18.1614, -22.0143, 0.6", "19.5425, -19.9063, -22.5404, 0.36", "20.9248, -22.6174, -23.3766, 0.48", "21.7882, -24.3155, -23.8875, 0.36", "23.5463, -27.8239, -25.1387, 0.36", "25.131, -30.9532, -26.6161, 0.36", "26.2569, -33.3897, -27.763, 0.36", "27.3061, -35.7474, -28.9226, 0.36", "29.3667, -40.8118, -31.4864, 0.36", "31.2987, -45.8083, -34.1141, 0.36", "33.1705, -50.7352, -36.8528, 0.24", "34.5732, -54.9233, -39.3487, 0.24" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-6.30601, 17.5245, 0.0313539, 1.81", "-9.80837, 18.1619, 4.49496, 1.81" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.30601, 17.5245, 0.0313539, 2.65", "-5.87502, 21.3418, -0.0867619, 2.65", "-5.68045, 23.0651, -0.140084, 2.65" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "17.788, -37.0857, 0.00409092, 0.36", "24.1105, -50.6882, 0.00409092, 0.36", "30.4329, -64.2906, 0.00409092, 0.36" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-93.9388, -155.388, 37.3478, 0.24", "-94.9633, -163.508, 40.7721, 0.24", "-97.6926, -171.558, 43.3193, 0.24", "-99.4555, -179.518, 46.7862, 0.24", "-100.896, -188.132, 48.6213, 0.24", "-101.273, -196.669, 51.1536, 0.24", "-102.464, -205.203, 53.4373, 0.24", "-104.964, -213.717, 54.3785, 0.24", "-108.311, -221.964, 53.9846, 0.24", "-113.254, -229.139, 55.315, 0.24", "-117.173, -237.092, 55.7989, 0.24", "-122.045, -244.441, 56.3014, 0.24" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-93.9388, -155.388, 37.3478, 0.24", "-95.9767, -162.713, 42.4118, 0.24", "-97.9749, -169.49, 48.1454, 0.24", "-101.56, -175.144, 54.191, 0.24", "-103.517, -181.992, 59.8617, 0.24", "-106.607, -189.125, 64.6232, 0.24", "-111.337, -195.996, 68.2216, 0.24", "-116.805, -202.272, 71.7495, 0.24", "-123.355, -208.235, 73.398, 0.24", "-129.786, -214.494, 74.3349, 0.24", "-135.464, -221.569, 74.5916, 0.24", "-141.939, -227.77, 75.5815, 0.24" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "12.9696, -19.9509, -0.420874, 0.36", "14.9771, -22.2032, -1.25584, 0.36", "18.1384, -25.7501, -2.57066, 0.36", "21.1708, -29.1523, -3.83187, 0.36", "23.4719, -31.7339, -4.7889, 0.6", "28.2567, -37.1022, -6.77896, 0.6", "30.7728, -39.9251, -7.82541, 1.08" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "12.9696, -19.9509, -0.420874, 0.84", "14.0516, -20.9125, 0.915586, 0.84", "15.2762, -22.0299, 2.36141, 0.84", "16.1646, -22.8388, 3.32582, 0.72", "17.6477, -24.1703, 4.8193, 0.72", "20.5565, -26.8275, 7.54082, 0.72", "21.9365, -28.1478, 8.7416, 0.6", "22.9858, -29.2519, 9.62486, 0.6", "23.9307, -30.3325, 10.3063, 0.6", "24.4978, -31.061, 10.6414, 0.6", "25.5401, -32.4418, 11.0179, 0.36", "26.6736, -33.8328, 11.1516, 0.36", "27.5625, -34.9041, 11.3233, 0.36", "28.48, -36.0953, 11.669, 0.36", "29.1734, -36.9502, 12.0555, 0.36", "30.0657, -37.9272, 12.6866, 0.36", "30.6187, -38.4313, 13.1417, 0.36", "32.5815, -39.849, 14.8834, 0.36", "33.8834, -40.6697, 16.0252, 0.36", "35.1231, -41.4028, 17.1893, 0.36", "35.9217, -41.8808, 17.9777, 0.36", "36.3546, -42.1593, 18.4092, 0.36", "37.0534, -42.6165, 19.0085, 0.36", "38.3237, -43.185, 19.5963, 0.36", "43.4397, -48.3809, 24.9517, 0.36", "47.5604, -53.3392, 31.2759, 0.36", "51.3362, -57.9321, 38.051, 0.36", "54.0428, -63.5779, 44.6005, 0.36", "55.7356, -70.1173, 50.7145, 0.36", "58.2604, -75.6011, 57.4589, 0.36", "60.8469, -81.6393, 63.731, 0.36", "64.1386, -88.544, 68.7375, 0.36", "66.4521, -95.8337, 73.7899, 0.36", "68.1053, -103.919, 77.9253, 0.36", "69.734, -111.988, 82.0974, 0.36", "70.8054, -119.925, 86.6564, 0.36" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "20.4125, -4.32801, -18.6505, 1.32", "22.7736, -1.99703, -20.9082, 1.32", "24.6094, -0.387226, -22.6935, 1.32", "26.6885, 1.17347, -24.707, 1.2", "29.4742, 2.95751, -27.5478, 1.08", "32.5153, 4.97595, -31.2039, 0.96", "35.4848, 7.07623, -35.0744, 0.96", "36.2956, 7.67524, -36.3156, 0.96", "37.3954, 8.57183, -38.185, 0.96", "38.6438, 9.8395, -40.6331, 0.96", "41.3414, 13.5083, -46.7317, 0.96", "42.1016, 14.8517, -48.6738, 0.96", "43.0837, 16.7766, -51.1512, 0.96", "43.6909, 17.7985, -52.428, 0.84", "45.3466, 19.9814, -55.1419, 0.72", "46.1067, 20.7231, -56.0842, 0.72", "49.0868, 22.8221, -59.0245, 0.84", "50.8809, 23.9866, -60.6716, 1.08", "53.9193, 25.882, -63.2099, 1.08", "57.5017, 28.0015, -65.9384, 1.08", "58.934, 28.7785, -66.9774, 0.96", "61.5039, 30.1728, -69.0566, 0.84", "62.8726, 30.988, -70.3562, 0.84", "64.28, 31.8797, -71.8686, 0.84", "65.0555, 32.3701, -72.7811, 0.84", "68.207, 34.2069, -76.4741, 0.84", "71.4877, 36.0673, -80.5287, 0.84", "74.5499, 37.7908, -84.4461, 2.16", "75.4027, 38.2887, -85.5462, 2.16", "78.4839, 40.2411, -89.3877, 0.72", "79.635, 41.0613, -90.6858, 0.72", "82.2192, 43.1665, -93.19, 0.72", "84.4626, 45.0467, -95.0442, 0.72", "85.423, 45.8576, -95.7796, 0.72", "88.9077, 48.7886, -98.6007, 2.16", "90.801, 50.3841, -100.129, 1.44", "93.3029, 52.5403, -101.944, 0.48", "94.7063, 53.8633, -103.113, 0.48", "97.0804, 56.3386, -105.33, 1.32", "99.2664, 58.9911, -108.639, 1.32", "99.412, 59.1885, -108.913, 1.32", "101.68, 62.3835, -113.551, 0.72", "106.474, 69.1689, -123.181, 0.6", "107.572, 70.7222, -125.282, 0.6", "114.445, 79.9284, -136.988, 0.12", "115.631, 81.4195, -138.8, 0.96", "116.656, 82.626, -140.219, 0.48", "118.888, 85.0886, -143.004, 0.36", "121.853, 88.1214, -145.587, 0.24", "124.131, 90.4294, -147.282, 0.24", "127.796, 94.0948, -149.099, 1.2", "129.188, 95.5332, -149.91, 0.72", "132.209, 98.8369, -151.845, 0.24", "133.377, 100.207, -152.624, 0.24", "135.478, 102.888, -153.968, 1.08", "136.187, 103.874, -154.416, 0.6", "139.192, 108.244, -156.02, 0.48", "140.265, 109.827, -156.578, 0.48", "141.44, 111.486, -157.093, 1.2", "142.609, 113.034, -157.598, 0.6", "145.762, 116.737, -158.825, 0.24", "147.16, 118.219, -159.463, 0.24", "148.996, 119.967, -160.327, 1.32", "150.539, 121.312, -161.036, 0.72", "153.839, 124.089, -162.614, 0.48", "156.815, 126.591, -164.176, 0.48", "159.917, 129.21, -165.841, 1.08", "161.175, 130.307, -166.529, 0.36", "164.088, 132.975, -168.061, 0.12", "167.795, 136.619, -169.951, 0.12", "170.61, 139.522, -171.345, 0.12", "171.409, 140.38, -171.719, 0.48", "172.1, 141.135, -172.044, 0.12", "173.363, 142.557, -172.801, 0.12", "173.972, 143.272, -173.215, 0.48", "175.759, 145.569, -174.404, 0.48", "176.783, 147.102, -175.073, 0.24", "178.294, 149.626, -176.016, 0.6", "179.477, 151.783, -176.677, 1.08", "180.595, 153.946, -177.209, 0.48", "182.664, 157.884, -178.085, 0.36", "183.991, 160.285, -178.707, 0.36", "185.808, 163.323, -179.721, 0.36", "186.897, 164.981, -180.348, 0.96", "187.643, 166.028, -180.799, 0.24", "190.47, 169.604, -182.458, 0.12", "193.909, 173.476, -184.236, 0.24", "195.943, 175.623, -185.374, 0.24", "197.229, 176.967, -186.12, 0.24", "198.647, 178.446, -186.85, 0.24", "200.881, 180.796, -187.742, 0.24", "202.012, 181.989, -188.027, 0.24", "205.903, 185.992, -188.871, 1.44", "206.841, 186.955, -189.132, 1.08", "208.599, 188.719, -189.726, 0.12", "209.639, 189.77, -190.259, 0.12", "211.671, 191.804, -191.569, 0.12", "214.055, 194.028, -193.119, 0.6", "215.216, 194.999, -193.795, 0.6", "216.379, 195.919, -194.636, 0.24", "219.957, 198.693, -197.463, 0.72", "220.8, 199.358, -198.2, 0.12", "222.409, 200.644, -199.585, 0.24", "223.876, 201.862, -200.793, 0.24", "229.257, 206.567, -205.209, 0.24", "230.543, 207.799, -206.238, 0.12", "234.164, 211.507, -208.887, 0.24", "235.73, 213.278, -210.029, 0.24", "237.905, 216.018, -211.526, 0.24", "239.017, 217.623, -212.34, 0.72", "240.559, 220.114, -213.344, 0.36", "241.33, 221.408, -213.866, 0.36", "242.377, 223.228, -214.546, 1.08", "243.577, 225.335, -215.427, 0.36", "246.561, 230.692, -217.734, 0.36", "247.22, 231.915, -218.342, 0.36", "248.254, 233.951, -219.601, 1.2", "248.556, 234.558, -220.005, 0.72", "249.186, 235.792, -220.892, 0.36", "249.695, 236.806, -221.648, 0.36", "251.485, 240.457, -223.804, 0.36", "252.768, 243.926, -226.321, 0.84" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "20.4125, -4.32801, -18.6505, 0.84", "22.6266, -5.71282, -18.2609, 0.84", "24.2427, -6.84745, -18.0631, 0.84", "26.8298, -8.7702, -17.933, 0.6", "28.6404, -10.1662, -17.9158, 0.6", "31.1581, -12.2137, -18.0147, 0.6", "32.8012, -13.5931, -18.1265, 0.48", "34.5546, -15.1152, -18.371, 0.48", "36.2436, -16.6468, -18.6482, 0.48", "38.0773, -18.3909, -18.95, 0.84", "39.5698, -19.7687, -19.1796, 0.72", "41.2449, -21.2475, -19.362, 0.72", "43.795, -23.3398, -19.4597, 0.72", "44.6709, -24.0512, -19.4095, 0.6", "45.9269, -25.0769, -19.262, 0.6", "48.6266, -27.3289, -18.8968, 0.84", "50.2789, -28.7501, -18.6468, 0.48", "52.3527, -30.6066, -18.4626, 0.48", "55.2729, -33.3232, -18.3634, 0.48", "56.7007, -34.6364, -18.3627, 0.48", "58.8773, -36.6105, -18.4224, 0.84", "60.9526, -38.4647, -18.5026, 0.84", "64.4147, -41.5061, -18.6922, 0.84", "67.2019, -43.9155, -18.8439, 0.72", "69.7233, -46.0405, -18.9737, 0.6", "72.7608, -48.557, -19.0642, 0.6", "74.6638, -50.0875, -19.0616, 0.6", "76.1995, -51.3129, -19.0268, 0.48", "78.2917, -52.9901, -18.9012, 0.48", "79.6193, -54.0353, -18.8439, 0.48", "81.3884, -55.4366, -18.8027, 0.48", "83.5165, -57.1123, -18.7698, 0.48", "85.1878, -58.3532, -18.7545, 0.36", "86.7486, -59.41, -18.7451, 0.36", "88.414, -60.4093, -18.6446, 0.36", "89.9611, -61.2206, -18.484, 0.36", "90.3906, -61.4162, -18.4119, 0.36", "92.2291, -62.1846, -18.0006, 0.36", "94.8701, -63.2162, -17.3093, 0.24", "98.0384, -64.5155, -16.4272, 0.24", "99.5566, -65.1951, -15.9897, 0.24", "100.918, -65.8622, -15.6004, 0.72", "102.739, -66.8789, -15.0957, 0.36", "104.308, -67.9534, -14.6808, 0.36", "106.011, -69.3916, -14.2902, 0.72", "106.99, -70.4033, -14.1381, 0.48", "108.057, -71.6286, -13.9964, 0.84", "108.87, -72.6127, -13.92, 0.48", "110.075, -74.1136, -13.8046, 0.84", "110.73, -74.9072, -13.7442, 0.48", "111.935, -76.2606, -13.5998, 0.96", "113.073, -77.4354, -13.4441, 0.36", "114.491, -78.8442, -13.2574, 0.36", "115.446, -79.7403, -13.1225, 0.36", "117.567, -81.649, -12.8013, 0.84", "118.671, -82.588, -12.6545, 0.48", "120.68, -84.2598, -12.3823, 0.48", "123.267, -86.4027, -12.0235, 0.48", "124.658, -87.5379, -11.8339, 0.48", "124.797, -87.6513, -11.8161, 0.48", "129.103, -91.2826, -11.3532, 0.72" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.80837, 18.1619, 4.49496, 0.6", "-10.6608, 19.272, 5.98279, 0.6", "-11.359, 20.0747, 7.0395, 0.6", "-12.2379, 21.122, 8.28674, 0.6", "-12.7924, 21.7646, 8.96069, 0.48", "-13.2399, 22.259, 9.43269, 0.48", "-13.9462, 23.0393, 10.1775, 0.48", "-15.267, 24.3649, 11.3168, 0.24", "-15.9145, 24.9834, 11.7622, 0.24", "-16.788, 25.8251, 12.2372, 0.12", "-17.3512, 26.3406, 12.5345, 0.12", "-21.4296, 29.9797, 15.6729, 0.12", "-26.2922, 33.5698, 17.467, 0.12", "-31.2673, 36.577, 19.8287, 0.12", "-35.6719, 39.6718, 23.0553, 0.12", "-39.6803, 43.5589, 26.0094, 0.12", "-43.9242, 46.8301, 29.2924, 0.12", "-48.0581, 50.3413, 32.4895, 0.12", "-51.4798, 54.4288, 35.8961, 0.12", "-55.7183, 57.0675, 39.665, 0.12", "-59.601, 60.1723, 43.493, 0.12", "-64.59, 61.714, 46.8773, 0.12", "-69.6046, 64.2843, 49.5942, 0.12", "-74.0299, 67.677, 52.5071, 0.12", "-78.5121, 71.0958, 55.3038, 0.12", "-82.046, 74.9031, 58.8859, 0.12" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-9.80837, 18.1619, 4.49496, 0.72", "-11.611, 15.6095, 6.15907, 0.72", "-12.3006, 14.6632, 6.65744, 0.72", "-13.0728, 13.6277, 7.18954, 0.6", "-13.4889, 13.0696, 7.47628, 0.6", "-15.2297, 10.7351, 8.67585, 0.6", "-16.0613, 9.61986, 9.24891, 0.6", "-17.8466, 7.38183, 10.3437, 0.6", "-18.5429, 6.62629, 10.7618, 0.6" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.68045, 23.0651, -0.140084, 0.72", "-4.3763, 25.8622, 0.450112, 0.72", "-2.54621, 29.9683, 1.23347, 0.6", "-0.655428, 34.5263, 2.02236, 0.6", "0.467641, 37.3378, 2.44669, 0.6", "2.08474, 41.5382, 3.04196, 0.6", "3.24567, 44.7554, 3.45842, 0.6", "4.35403, 48.2555, 3.8403, 0.6", "4.97619, 50.4683, 4.03884, 0.6", "6.04245, 54.2684, 4.51141, 0.6", "7.14941, 58.1664, 5.22326, 0.6", "8.18747, 61.8109, 5.98706, 0.48", "8.95978, 64.5238, 6.65832, 0.48", "10.2705, 69.1229, 7.91655, 0.48", "11.8365, 74.5156, 9.4493, 0.48", "14.0167, 81.9453, 11.6096, 0.48", "15.008, 85.2581, 12.5978, 0.48", "15.7415, 87.5942, 13.3048, 0.48", "16.5573, 90.2066, 14.0913, 0.48", "17.5108, 93.2725, 14.9259, 0.48", "18.0549, 95.224, 15.307, 0.48", "18.9239, 97.9066, 15.6174, 0.48", "19.5066, 99.518, 15.8367, 0.48" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.68045, 23.0651, -0.140084, 2.17", "-6.06412, 29.1136, -1.9686, 2.17", "-6.19976, 31.2519, -2.61503, 1.81", "-6.30476, 32.9071, -3.11543, 1.81", "-6.47575, 35.6027, -3.93034, 2.65" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "30.7728, -39.9251, -7.82541, 0.72", "31.6945, -43.2344, -11.1317, 0.72", "32.5343, -45.2308, -13.3059, 0.72", "33.4108, -47.0087, -15.3524, 0.72", "34.2202, -48.6889, -17.2133, 0.72", "35.0659, -50.576, -19.2711, 0.72", "36.1492, -53.3292, -22.0993, 0.72", "36.8177, -55.1602, -23.7682, 1.08", "37.4416, -56.9109, -25.2965, 1.08", "37.8964, -58.7688, -26.7858, 0.48", "38.0406, -59.9351, -27.5991, 0.48", "38.1256, -62.2397, -28.9579, 0.48", "38.1836, -63.4045, -29.7222, 0.48", "38.2774, -65.0302, -31.0339, 0.96", "38.4389, -67.0648, -32.8754, 0.6", "38.7558, -68.8516, -34.8319, 0.48", "39.0392, -70.0762, -36.309, 0.48", "40.395, -75.1227, -43.1009, 0.48", "40.8448, -76.5502, -45.2693, 0.36", "41.1265, -77.4225, -46.7558, 0.36", "41.7662, -79.6759, -50.8413, 0.36", "41.9878, -80.7576, -52.8256, 0.36", "42.2031, -82.8972, -56.7579, 0.36", "42.4056, -84.6653, -60.0058, 0.36", "42.7848, -86.3607, -62.9634, 0.36", "43.1284, -87.3393, -64.682, 0.36", "43.4751, -88.1072, -65.9389, 0.36", "43.9245, -88.9204, -67.2209, 0.36", "48.1172, -96.0742, -77.2585, 0.36", "49.3567, -98.1785, -80.0122, 0.36", "50.8709, -100.717, -83.3151, 0.36", "52.4107, -103.325, -86.9792, 0.36", "52.77, -104.357, -88.2869, 0.36", "52.9957, -107.03, -91.1957, 0.36", "52.4157, -110.371, -94.6469, 0.36", "51.9187, -112.458, -96.9209, 0.36", "51.0754, -115.884, -100.532, 0.36", "49.2495, -124.669, -109.329, 0.36", "48.9403, -127.075, -111.605, 0.36", "48.6482, -135.118, -119.024, 0.36", "48.8301, -138.544, -122.023, 0.36", "49.2396, -141.412, -124.453, 0.36", "49.9105, -144.417, -126.907, 0.36", "50.6876, -146.878, -129.038, 0.36", "52.3087, -152.516, -133.666, 0.36", "53.2359, -156.993, -136.751, 0.36", "53.7601, -160.754, -139.288, 0.36", "53.9653, -163.796, -141.456, 0.36", "53.9011, -165.983, -143.217, 0.36", "53.7023, -167.46, -144.471, 0.36", "52.9408, -170.93, -147.557, 0.36", "52.3895, -172.875, -149.451, 0.36", "50.9926, -176.961, -153.991, 0.36", "49.3466, -181.274, -159.322, 0.36", "48.3668, -183.788, -162.587, 0.36", "47.6896, -185.71, -165.346, 0.36", "47.3435, -186.834, -167.145, 0.36", "47.0214, -188.611, -170.074, 0.36", "47.0296, -189.686, -171.708, 0.36", "47.2285, -191.287, -174.026, 0.36", "48.0322, -195.141, -179.926, 0.36", "48.3678, -196.373, -181.851, 0.36", "49.3593, -199.283, -186.44, 0.36", "50.3333, -201.677, -190.041, 0.36" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "30.7728, -39.9251, -7.82541, 0.6", "33.482, -42.0237, -7.97545, 0.6", "36.4044, -44.6065, -8.32058, 0.6", "38.5169, -46.6028, -8.65738, 0.48", "41.5346, -49.4577, -9.16487, 0.84", "43.5336, -51.3261, -9.49347, 0.84", "45.3375, -53.0246, -9.77792, 0.72", "48.1786, -55.8742, -10.1842, 0.72", "49.8972, -57.6606, -10.3451, 0.72", "51.278, -59.0892, -10.4321, 1.2", "53.0493, -60.8036, -10.477, 0.84", "54.9295, -62.5086, -10.5773, 0.84", "56.7654, -64.1298, -10.6963, 0.6", "59.1401, -66.1284, -10.8264, 0.6", "60.2821, -67.0707, -10.9107, 0.6", "62.7564, -69.1496, -11.1565, 0.96", "65.8029, -71.7026, -11.5019, 0.72", "67.6521, -73.248, -11.738, 0.48", "69.2837, -74.6271, -11.9685, 1.33", "71.4754, -76.5481, -12.1788, 0.72", "73.8903, -78.7443, -12.2444, 0.6", "75.5052, -80.265, -12.275, 0.48", "76.4883, -81.1872, -12.2788, 0.48", "77.4003, -82.0003, -12.29, 0.36", "79.258, -83.6362, -12.326, 0.24", "81.2997, -85.368, -12.3127, 0.96", "86.2204, -89.3369, -12.1456, 0.24", "88.5322, -91.1729, -11.9172, 1.57", "92.7439, -94.5629, -11.2687, 0.36", "93.9926, -95.6019, -11.0202, 0.36", "96.5747, -97.7833, -10.3769, 0.36", "98.7221, -99.671, -9.64825, 1.08", "101.33, -102.147, -8.3733, 0.6", "102.321, -103.196, -7.84362, 0.48", "103.557, -104.701, -7.36375, 0.96", "105.059, -106.714, -7.07504, 0.36", "106.167, -108.351, -7.07934, 0.84", "107.067, -109.713, -7.18263, 0.36", "107.909, -110.991, -7.39674, 0.96", "111.872, -116.96, -8.63172, 0.24", "113.8, -119.984, -9.38335, 0.24", "114.624, -121.376, -9.80611, 1.69" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "70.8054, -119.925, 86.6564, 0.24", "74.0702, -126.378, 92.0213, 0.24", "76.94, -132.824, 97.6152, 0.24", "79.1491, -139.153, 103.616, 0.24", "80.8324, -145.229, 110.015, 0.24", "82.377, -150.636, 116.972, 0.24", "84.4144, -157.391, 122.6, 0.24", "87.3786, -163.556, 128.429, 0.24", "89.9251, -170.329, 133.824, 0.24", "93.944, -176.7, 138.75, 0.24" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "70.8054, -119.925, 86.6564, 0.24", "75.0451, -126.347, 92.7234, 0.24", "79.4572, -132.032, 99.3178, 0.24", "83.1582, -137.224, 106.668, 0.24", "87.2474, -141.443, 114.383, 0.24", "90.4409, -147.064, 121.676, 0.24" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "129.103, -91.2826, -11.3532, 0.24", "133.261, -92.2152, -16.3391, 0.24", "134.612, -92.5656, -17.8276, 0.24", "138.793, -93.7294, -22.2408, 0.24", "140.828, -94.3634, -24.3206, 0.24", "143.008, -95.0989, -26.3879, 0.24", "145.108, -95.8395, -28.2961, 0.24", "146.578, -96.416, -29.4285, 0.24", "147.629, -96.8672, -30.1941, 0.24", "149.09, -97.557, -31.0891, 0.24", "151.538, -98.7752, -32.5375, 0.24", "154.267, -100.239, -34.0947, 0.24", "156.034, -101.225, -35.1326, 0.24", "157.215, -101.85, -35.7926, 0.24" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "129.103, -91.2826, -11.3532, 0.24", "131.159, -93.9379, -10.9254, 0.24", "133.853, -97.4594, -10.2591, 0.24", "135.742, -100.09, -10.0758, 0.24", "138.502, -104.617, -10.8773, 0.24", "139.843, -107.24, -11.7648, 0.24", "140.579, -108.866, -12.4268, 0.24", "141.566, -111.513, -13.8668, 0.24", "143.153, -116.944, -17.4488, 0.24", "145.0, -124.696, -23.2746, 0.24", "145.616, -127.749, -25.7556, 0.24", "145.843, -128.836, -26.6603, 0.24", "146.5, -131.686, -28.9986, 0.24", "146.96, -133.345, -30.3122, 0.24", "148.563, -137.795, -33.1932, 0.24", "149.306, -139.298, -33.963, 0.24", "151.168, -142.296, -35.5912, 0.24", "152.331, -143.851, -36.4607, 0.24", "153.279, -144.937, -37.0587, 0.24", "155.287, -146.949, -38.193, 0.24", "157.058, -148.605, -39.1169, 0.24", "161.358, -152.528, -41.3592, 0.24", "164.312, -155.117, -42.8423, 0.24", "166.985, -157.374, -44.1803, 0.24", "168.993, -159.008, -45.1662, 0.24", "171.741, -161.121, -46.4941, 0.24" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-82.046, 74.9031, 58.8859, 0.12", "-87.0019, 80.2578, 65.6121, 0.12", "-90.7816, 86.6649, 72.26, 0.12", "-94.0951, 93.4714, 78.7928, 0.12", "-97.152, 98.7716, 86.5931, 0.12", "-99.3644, 105.079, 93.9832, 0.12", "-101.357, 109.582, 102.544, 0.12", "-103.162, 114.541, 110.913, 0.12", "-106.588, 119.724, 118.632, 0.12" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-82.046, 74.9031, 58.8859, 0.12", "-86.8281, 78.0904, 61.5024, 0.12", "-90.9399, 81.6291, 64.7546, 0.12", "-93.89, 85.4952, 68.8085, 0.12", "-96.2885, 89.8198, 72.7983, 0.12", "-98.0436, 94.0194, 77.2124, 0.12", "-100.012, 98.5468, 81.2277, 0.12", "-101.168, 103.305, 85.3059, 0.12", "-102.278, 108.454, 88.9422, 0.12" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-18.5429, 6.62629, 10.7618, 0.24", "-20.1048, 5.04279, 10.6926, 0.24", "-21.2375, 3.95513, 10.6793, 0.24", "-22.9555, 2.30542, 10.6592, 0.24", "-23.9757, 1.32583, 10.6473, 0.24", "-24.596, 0.730156, 10.6401, 0.24", "-25.4265, -0.0673312, 10.6304, 0.24", "-26.1824, -0.673135, 10.7639, 0.24", "-31.2861, -7.27952, 11.38, 0.24", "-36.4065, -13.5262, 13.4764, 0.24", "-42.485, -18.6845, 15.6958, 0.24", "-48.1477, -23.3032, 19.5155, 0.24", "-53.4455, -28.9533, 22.5123, 0.24" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-18.5429, 6.62629, 10.7618, 0.6", "-20.8162, 6.02245, 11.2209, 0.6", "-23.5138, 5.56793, 11.964, 0.6", "-24.944, 5.43659, 12.3802, 0.6", "-25.9621, 5.39803, 12.6689, 0.6", "-28.1163, 5.38969, 13.227, 0.48", "-31.8429, 5.37528, 14.1926, 0.48", "-33.9445, 5.44358, 14.8074, 0.48", "-36.2355, 5.63415, 15.5038, 0.48", "-37.9827, 5.8714, 16.0612, 0.48", "-40.3958, 6.35596, 16.8293, 0.48" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "19.5066, 99.518, 15.8367, 0.36", "21.5154, 104.324, 10.8758, 0.36", "22.2942, 106.187, 8.95255, 0.36", "24.4103, 111.249, 3.72662, 0.36", "30.7978, 119.96, -5.84031, 0.36", "37.9049, 128.81, -14.7621, 0.36", "45.6928, 137.461, -23.2886, 0.36", "55.0106, 146.386, -29.7948, 0.36", "62.6078, 155.977, -37.5365, 0.36", "68.1703, 165.846, -46.5717, 0.36", "71.3321, 175.839, -56.5881, 0.36", "76.3315, 183.575, -67.6369, 0.36", "82.4761, 190.161, -78.7997, 0.36", "90.8383, 196.802, -88.3821, 0.36", "100.536, 203.111, -96.8533, 0.36", "110.107, 207.704, -106.431, 0.36", "121.779, 209.229, -114.507, 0.36", "134.103, 208.79, -121.729, 0.36", "144.691, 207.935, -131.303, 0.36", "153.902, 204.716, -141.843, 0.36", "164.994, 204.549, -150.849, 0.36", "176.905, 203.597, -158.704, 0.36", "187.115, 203.176, -168.7, 0.36", "198.845, 205.115, -176.6, 0.36", "210.938, 208.367, -183.468, 0.36", "222.938, 209.585, -191.105, 0.36" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "19.5066, 99.518, 15.8367, 0.36", "20.3059, 102.676, 16.7193, 0.36", "21.0071, 105.447, 17.4935, 0.36", "24.659, 115.427, 18.8412, 0.36", "28.3408, 125.399, 20.1577, 0.36", "33.6091, 134.348, 22.4157, 0.36", "39.5693, 142.543, 25.4316, 0.36", "44.2166, 150.942, 29.9204, 0.36", "49.7027, 159.348, 33.2963, 0.36", "53.9023, 168.707, 36.2157, 0.36", "57.4084, 178.345, 39.2381, 0.36", "61.4096, 186.985, 43.9355, 0.36" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-6.47575, 35.6027, -3.93034, 1.45", "-6.29412, 39.2214, -4.35919, 1.45", "-6.37856, 42.7677, -4.74016, 1.45", "-6.50507, 45.2903, -4.95465, 1.45", "-6.64939, 47.7184, -5.12163, 1.45", "-6.87848, 51.51, -5.33991, 1.08", "-7.04121, 53.8628, -5.58733, 1.08", "-7.5238, 58.5873, -6.24685, 0.96", "-7.92636, 62.611, -6.8935, 0.96", "-8.19947, 65.8271, -7.44957, 0.96", "-8.38891, 69.1578, -8.04454, 0.96", "-8.52, 74.7305, -9.0281, 0.96", "-8.49648, 79.0197, -9.80089, 0.96", "-8.42185, 82.8225, -10.5752, 0.96", "-8.41365, 86.5759, -11.5289, 0.96", "-8.52869, 90.9375, -12.8043, 0.96", "-8.70905, 94.2167, -13.8416, 0.96", "-8.97966, 97.4026, -14.9383, 0.96", "-9.49849, 101.747, -16.6673, 0.96", "-10.3081, 107.142, -19.1724, 0.96", "-11.0792, 111.752, -21.3685, 0.96", "-11.732, 115.165, -22.9813, 0.96", "-12.3332, 118.237, -24.3422, 0.96", "-12.8837, 121.453, -25.6137, 0.96", "-13.3996, 125.298, -26.8305, 0.96", "-13.8199, 129.899, -28.0161, 0.96", "-14.0367, 133.124, -28.8391, 0.96", "-14.2885, 137.566, -29.8827, 0.96", "-14.4999, 142.029, -30.8312, 0.96", "-14.6073, 144.411, -31.3279, 0.96", "-14.8618, 150.743, -32.5446, 0.96", "-14.9728, 154.78, -33.4406, 0.96", "-15.0078, 157.948, -34.1013, 0.96", "-15.0258, 161.141, -34.7875, 0.96", "-15.0386, 164.22, -35.4757, 0.96", "-15.0187, 168.221, -36.381, 0.96", "-14.9696, 173.944, -37.6016, 0.96", "-14.924, 176.454, -38.1692, 0.96", "-14.8456, 180.839, -39.3154, 0.96", "-14.8321, 182.65, -39.8303, 0.96", "-14.8239, 188.435, -41.5571, 1.2", "-14.8402, 191.694, -42.5474, 1.08", "-14.8669, 194.27, -43.2903, 1.33", "-14.8873, 199.117, -44.6383, 1.08", "-14.8929, 202.455, -45.4817, 1.08", "-14.893, 205.494, -46.2507, 0.96", "-14.8884, 206.202, -46.4302, 0.96", "-14.8458, 209.169, -47.0949, 0.96", "-14.8108, 211.731, -47.5569, 0.96", "-14.7073, 215.666, -48.1818, 0.72", "-14.605, 218.73, -48.6175, 0.72", "-14.4839, 223.294, -49.2397, 0.72", "-14.4311, 226.001, -49.6062, 0.96", "-14.4126, 228.416, -49.9253, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.47575, 35.6027, -3.93034, 0.72", "-10.7975, 37.4877, -6.78803, 0.72", "-12.2935, 38.1913, -7.859, 0.72", "-13.9083, 38.93, -8.94233, 0.72", "-15.2198, 39.535, -9.76061, 0.72", "-16.9698, 40.4756, -10.874, 0.6", "-19.831, 42.3152, -12.748, 0.6", "-21.6569, 43.7324, -13.9167, 0.6", "-23.4261, 45.4175, -15.1693, 0.6", "-24.3869, 46.4041, -15.9039, 0.36", "-26.7172, 48.8579, -17.6903, 0.6", "-28.3761, 50.6481, -18.896, 0.6", "-29.8772, 52.1818, -19.8909, 0.6", "-30.6982, 52.9692, -20.4343, 0.48", "-34.547, 56.6031, -23.1128, 1.08", "-35.3343, 57.2571, -23.6467, 0.72", "-36.1795, 57.7853, -24.1505, 0.48", "-38.4068, 58.8513, -25.404, 0.84", "-40.3685, 59.6293, -26.4572, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "90.4409, -147.064, 121.676, 0.24", "92.3618, -152.924, 128.885, 0.24", "93.8448, -157.806, 136.83, 0.24", "93.8555, -162.606, 144.953, 0.24", "94.486, -168.014, 152.689, 0.24", "94.9694, -174.187, 159.889, 0.24" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "90.4409, -147.064, 121.676, 0.24", "96.2036, -151.327, 127.723, 0.24", "102.175, -156.609, 132.758, 0.24", "108.297, -162.314, 137.164, 0.24", "113.445, -169.613, 140.56, 0.24", "119.966, -175.924, 143.406, 0.24" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "157.215, -101.85, -35.7926, 0.24", "159.101, -103.198, -36.8478, 0.24", "160.32, -104.122, -37.6538, 0.24", "162.611, -105.91, -39.2196, 0.24", "163.113, -106.295, -39.5536, 0.24", "163.917, -106.891, -40.1045, 0.24", "166.097, -108.524, -41.597, 0.24", "168.188, -110.114, -43.0721, 0.24", "169.007, -110.729, -43.6451, 0.24", "170.609, -111.911, -44.7492, 0.24", "172.479, -113.233, -46.1039, 0.24", "173.688, -114.027, -47.0009, 0.24", "175.141, -114.95, -48.1044, 0.24", "176.651, -115.909, -49.2424, 0.24", "178.283, -116.972, -50.5829, 0.24", "180.148, -118.189, -52.0776, 0.24", "181.293, -118.953, -53.0486, 0.24", "182.496, -119.702, -54.12, 0.24", "183.765, -120.503, -55.2828, 0.24", "186.207, -122.051, -57.556, 0.24", "187.763, -123.05, -58.9621, 0.24", "191.077, -125.213, -61.9041, 0.24", "193.375, -126.659, -63.9992, 0.24" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "157.215, -101.85, -35.7926, 0.24", "158.559, -105.172, -34.0449, 0.24", "159.569, -107.668, -32.7315, 0.24", "160.717, -110.505, -31.2385, 0.24" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-40.3958, 6.35596, 16.8293, 0.24", "-42.4578, 5.70706, 15.9224, 0.24", "-44.7025, 5.15933, 14.9914, 0.24", "-45.8869, 4.87033, 14.5001, 0.24", "-48.2335, 4.29773, 13.5268, 0.24", "-50.6068, 3.71864, 12.5425, 0.24", "-52.6263, 3.22586, 11.7049, 0.24", "-53.749, 2.95496, 11.2993, 0.24" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-40.3958, 6.35596, 16.8293, 0.48", "-41.442, 5.10111, 16.8264, 0.48", "-42.2219, 4.16564, 16.8242, 0.48", "-43.2643, 2.91547, 16.8213, 0.24", "-44.8011, 1.07213, 16.817, 0.24", "-47.5968, -2.28103, 16.8092, 0.24", "-53.9069, -10.0639, 15.7872, 0.24", "-61.5935, -16.129, 13.9233, 0.24", "-70.5198, -20.3475, 13.0978, 0.24" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "61.4096, 186.985, 43.9355, 0.24", "67.9344, 189.73, 53.7659, 0.24", "74.0199, 190.358, 64.1681, 0.24", "81.545, 189.558, 73.5464, 0.24", "86.5096, 191.06, 84.4664, 0.24", "90.837, 190.826, 95.7208, 0.24", "96.5208, 191.28, 106.355, 0.24" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "61.4096, 186.985, 43.9355, 0.24", "63.568, 196.409, 43.0688, 0.24", "66.5634, 205.562, 42.1172, 0.24", "69.5346, 214.443, 39.8672, 0.24" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-14.4126, 228.416, -49.9253, 0.84", "-14.1079, 232.677, -50.9485, 0.84", "-13.9445, 235.473, -51.5381, 0.84", "-13.7146, 239.551, -52.3192, 0.72", "-13.5571, 242.321, -52.859, 0.6", "-13.195, 249.442, -54.2116, 0.84", "-13.0391, 252.922, -54.8463, 0.84", "-12.9514, 256.344, -55.3936, 0.6", "-12.9192, 259.086, -55.8443, 0.6", "-12.9336, 261.708, -56.2735, 0.6", "-13.0364, 265.583, -56.9678, 0.6", "-13.2683, 270.845, -58.0261, 0.6", "-13.5572, 275.873, -59.0436, 0.6", "-13.7334, 278.559, -59.5565, 0.6", "-14.0078, 282.301, -60.2044, 0.6", "-14.4403, 287.823, -61.0727, 0.6", "-14.7597, 291.935, -61.6834, 0.6", "-15.1106, 296.634, -62.354, 0.6", "-15.3371, 300.098, -62.8539, 0.48", "-15.6064, 303.86, -63.4166, 0.48", "-15.8593, 306.895, -63.8616, 0.48", "-16.1323, 309.598, -64.2344, 0.36", "-16.7715, 314.459, -65.0506, 0.36", "-17.4107, 318.668, -65.8371, 0.36", "-18.0287, 322.373, -66.6481, 0.36", "-18.6073, 325.734, -67.4023, 0.36", "-19.2941, 330.002, -68.3586, 0.36", "-20.2375, 336.144, -69.7122, 0.36", "-20.7146, 339.607, -70.439, 0.36", "-21.2365, 344.228, -71.3577, 0.36", "-21.5853, 348.604, -72.2122, 0.36", "-21.8702, 353.99, -73.1963, 0.36", "-22.0101, 358.02, -73.9313, 0.36", "-22.074, 360.093, -74.2842, 0.36", "-22.2291, 365.62, -75.215, 0.36", "-22.343, 368.769, -75.923, 0.36", "-22.5887, 373.019, -77.0663, 0.36", "-22.9982, 377.699, -78.501, 0.36", "-23.3975, 380.982, -79.7369, 0.36", "-23.9905, 384.625, -81.2424, 0.36", "-25.386, 391.536, -84.3625, 0.36", "-26.2954, 395.51, -86.1316, 0.36", "-27.1419, 399.147, -87.6209, 0.36", "-28.4669, 405.014, -89.7161, 0.36", "-29.393, 409.496, -91.0728, 0.36", "-30.2078, 413.825, -92.1145, 0.12", "-30.9548, 418.985, -92.9818, 0.12", "-31.5412, 424.727, -93.8274, 0.12", "-31.817, 429.145, -94.3634, 0.12", "-32.0168, 436.137, -95.0956, 0.12", "-32.017, 440.63, -95.6463, 0.12", "-31.9051, 448.661, -96.7974, 0.12", "-31.6939, 455.85, -98.0709, 0.12", "-31.4156, 462.066, -99.4282, 0.12", "-31.2267, 464.86, -100.126, 0.12", "-30.5662, 472.124, -102.216, 0.12", "-30.0236, 476.548, -103.632, 0.12", "-29.3797, 480.533, -105.1, 0.12", "-28.0477, 486.476, -107.51, 0.12", "-26.5482, 491.419, -109.658, 0.12", "-24.7273, 496.189, -111.956, 0.12", "-23.3649, 499.079, -113.477, 0.12", "-21.5063, 502.566, -115.49, 0.12", "-19.7176, 505.879, -117.519, 0.12", "-18.0303, 508.933, -119.616, 0.12", "-16.3695, 512.164, -122.038, 0.12", "-15.6439, 514.094, -123.405, 0.12", "-14.9492, 516.939, -125.03, 0.12", "-14.2974, 521.653, -126.914, 0.12", "-14.1344, 526.09, -128.431, 0.12", "-14.2062, 528.19, -129.03, 0.12", "-14.5721, 535.344, -130.809, 0.12", "-14.954, 541.608, -132.238, 0.12", "-15.4173, 548.167, -133.464, 0.12", "-15.9967, 554.391, -134.436, 0.12", "-16.6746, 559.967, -135.003, 0.12" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-14.4126, 228.416, -49.9253, 0.36", "-14.7889, 231.942, -50.977, 0.36", "-15.0767, 235.412, -51.944, 0.36", "-15.2899, 239.917, -53.1041, 0.36", "-15.3893, 244.915, -54.297, 0.36", "-15.4206, 250.563, -55.6076, 0.36", "-15.3745, 253.37, -56.2397, 0.36", "-15.108, 258.57, -57.5017, 0.36", "-14.7314, 264.085, -58.8834, 0.36", "-14.3529, 268.906, -60.058, 0.36", "-13.9405, 273.726, -61.1606, 0.36", "-13.4209, 279.898, -62.4947, 0.36", "-12.8762, 288.737, -64.3732, 0.36", "-12.6811, 294.89, -65.5926, 0.24", "-12.671, 299.175, -66.4261, 0.24", "-12.7437, 304.839, -67.4823, 0.24", "-12.8053, 306.9, -67.8318, 0.24", "-13.0845, 311.814, -68.6107, 0.24", "-13.7271, 320.162, -69.7378, 0.24", "-13.9726, 322.529, -70.0682, 0.24", "-14.4053, 326.583, -70.6337, 0.24", "-14.7733, 330.612, -71.1839, 0.24", "-15.1379, 335.706, -71.8756, 0.24", "-15.4394, 341.771, -72.6641, 0.24", "-15.6911, 347.689, -73.4122, 0.24", "-15.8959, 353.767, -74.2298, 0.24", "-16.0233, 359.061, -75.0218, 0.24", "-16.0404, 361.244, -75.3621, 0.24", "-15.9718, 365.784, -76.1074, 0.24", "-15.7881, 369.755, -76.8858, 0.24", "-15.3733, 375.329, -78.189, 0.24", "-15.0716, 379.719, -79.3558, 0.24" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-40.3685, 59.6293, -26.4572, 0.48", "-40.5244, 60.8145, -27.3877, 0.48", "-40.9237, 62.9886, -28.7638, 0.48", "-41.4586, 65.1529, -29.8889, 0.48", "-41.7964, 66.4178, -30.5713, 0.48", "-42.1988, 67.6754, -31.3053, 0.48", "-42.7408, 69.2713, -32.1703, 0.36", "-43.4147, 71.0789, -33.1405, 0.6", "-44.0651, 72.6889, -33.9619, 0.36", "-44.962, 75.2086, -35.2281, 0.36", "-45.6296, 77.4321, -36.3417, 0.36", "-46.1597, 79.535, -37.5239, 0.84", "-46.6619, 81.9335, -38.9283, 0.48", "-46.7989, 82.7984, -39.4932, 0.48", "-46.9335, 84.0491, -40.3355, 0.36", "-47.1213, 85.6205, -41.4145, 1.08", "-47.5084, 88.6613, -43.7247, 0.6", "-47.6357, 89.4634, -44.3656, 0.6", "-48.177, 92.3893, -46.7096, 0.36", "-48.5772, 94.3005, -48.2428, 0.72", "-49.0663, 96.5629, -49.9698, 0.72", "-49.5476, 98.8685, -51.6321, 0.36", "-49.9477, 100.708, -52.887, 0.84", "-50.6173, 103.401, -54.6695, 0.36", "-50.9236, 104.619, -55.4359, 0.96", "-52.0952, 109.28, -58.2818, 0.24", "-52.5653, 111.289, -59.4355, 0.72", "-53.3681, 114.484, -61.2011, 0.36", "-53.8376, 116.162, -62.1743, 1.69" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-40.3685, 59.6293, -26.4572, 0.36", "-41.5585, 60.2707, -26.9756, 0.36", "-43.3698, 61.4445, -27.8976, 0.36", "-44.9325, 62.4923, -28.9324, 0.36", "-47.7268, 64.6103, -30.7163, 0.36", "-49.9948, 66.39, -32.1905, 0.24", "-51.4449, 67.529, -33.1131, 0.12", "-53.4139, 69.164, -34.3764, 0.12", "-57.5825, 72.7558, -37.0568, 0.12", "-60.5673, 74.9534, -38.6098, 0.12", "-62.9666, 76.5307, -39.7443, 0.12", "-64.2801, 77.3965, -40.2765, 0.12", "-65.6636, 78.2962, -40.8031, 0.12", "-66.292, 78.6981, -41.0283, 0.12", "-77.4211, 85.7597, -44.8438, 0.12", "-81.6955, 88.3997, -46.4093, 0.12", "-86.7442, 91.6094, -48.2176, 0.12", "-92.3394, 95.2412, -50.3204, 0.12" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-53.749, 2.95496, 11.2993, 0.24", "-57.4446, 2.70057, 11.7864, 0.24", "-59.4922, 2.61562, 12.049, 0.24", "-62.8318, 2.54711, 12.3365, 0.36", "-65.123, 2.55882, 12.4508, 0.36", "-67.6008, 2.74472, 12.681, 0.36", "-68.9591, 2.88193, 12.8325, 0.36", "-71.5694, 3.24206, 13.0724, 0.36", "-75.246, 3.76606, 13.45, 0.36", "-77.8752, 4.11941, 13.7206, 0.36", "-83.5496, 4.77894, 14.2586, 0.36", "-85.12, 4.96069, 14.4075, 0.36", "-88.6553, 5.32529, 14.7463, 0.36", "-90.9904, 5.54555, 14.9832, 0.36", "-94.3105, 5.76873, 15.3792, 0.36", "-96.6715, 5.76391, 15.5771, 0.36", "-109.256, 4.68456, 14.9376, 0.36", "-121.668, 2.351, 13.9473, 0.36", "-133.913, 1.53481, 10.8944, 0.36", "-145.776, 3.6323, 7.05782, 0.36", "-156.583, 8.01828, 2.08608, 0.36", "-168.853, 9.11905, -0.735317, 0.36", "-181.048, 8.4544, -4.01416, 0.36", "-193.116, 6.85285, -7.48243, 0.36", "-204.676, 6.51865, -12.5947, 0.36", "-216.744, 4.68248, -15.9622, 0.36" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-53.749, 2.95496, 11.2993, 0.24", "-53.0565, 6.26209, 8.16057, 0.24", "-52.937, 7.2271, 7.31654, 0.24", "-52.6337, 9.27479, 5.62019, 0.24", "-52.4757, 10.2422, 4.86225, 0.24", "-51.4382, 15.664, 0.730685, 0.24", "-50.8548, 18.3034, -1.22908, 0.24", "-50.2016, 21.1525, -3.2248, 0.24", "-49.1001, 25.4818, -6.1715, 0.24", "-48.3083, 28.2608, -7.97763, 0.24", "-47.4747, 31.0189, -9.79403, 0.24", "-46.9359, 32.7238, -10.8888, 0.24", "-46.5658, 33.8664, -11.645, 0.24", "-45.9946, 35.5171, -12.8474, 0.24", "-45.0038, 38.3748, -14.9648, 0.24", "-42.9912, 43.8626, -19.0568, 0.24", "-41.7422, 47.1632, -21.4323, 0.24", "-40.4525, 50.3259, -23.742, 0.24", "-38.4499, 55.0681, -27.2171, 0.24", "-36.2536, 60.1003, -30.8974, 0.24", "-35.2388, 62.2512, -32.4331, 0.24", "-33.6066, 65.2515, -34.4145, 0.24", "-31.1171, 69.5108, -37.3109, 0.24" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-15.0716, 379.719, -79.3558, 0.24", "-14.5783, 384.451, -80.1442, 0.24", "-14.2696, 387.701, -80.6289, 0.24", "-13.9706, 391.088, -81.0852, 0.24", "-13.4629, 396.877, -81.8103, 0.24", "-12.9719, 402.381, -82.4647, 0.24", "-12.6855, 405.389, -82.8091, 0.24", "-12.2745, 409.274, -83.1081, 0.24", "-11.7041, 413.925, -83.3963, 0.24", "-11.2291, 417.744, -83.5694, 0.24", "-10.8871, 420.801, -83.6748, 0.24", "-10.605, 424.848, -83.7654, 0.24", "-10.5572, 428.557, -83.8448, 0.24", "-10.7306, 431.974, -83.9173, 0.24", "-11.0513, 434.617, -83.9741, 0.24", "-11.7229, 438.223, -84.1722, 0.24", "-12.8168, 442.882, -84.5503, 0.24", "-14.1846, 448.378, -84.8623, 0.24", "-15.1299, 452.374, -85.0378, 0.24", "-16.4262, 458.995, -84.8952, 0.24", "-17.0481, 463.015, -84.6086, 0.24", "-17.4442, 467.253, -84.2994, 0.24", "-17.7397, 475.186, -83.4469, 0.24", "-17.6891, 480.233, -82.8035, 0.24", "-17.448, 486.127, -82.121, 0.24", "-17.302, 488.472, -81.8872, 0.24", "-16.7804, 496.363, -81.0104, 0.24", "-16.433, 501.573, -80.629, 0.24", "-16.2767, 505.165, -80.6688, 0.24", "-16.2036, 510.224, -80.9525, 0.24", "-16.289, 513.798, -81.4241, 0.24", "-16.4252, 518.111, -81.8946, 0.24" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-15.0716, 379.719, -79.3558, 0.24", "-16.253, 385.95, -80.5981, 0.24", "-17.1308, 390.58, -81.5211, 0.24", "-18.1161, 395.777, -82.5572, 0.24", "-19.4388, 402.753, -83.9481, 0.24", "-21.3051, 412.596, -85.9105, 0.24", "-22.2584, 417.624, -86.913, 0.24" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-53.8376, 116.162, -62.1743, 0.48", "-61.1715, 121.371, -69.2788, 0.48", "-73.2965, 129.454, -79.0989, 0.12", "-82.9733, 135.582, -85.9683, 0.24", "-89.0764, 139.317, -89.6188, 0.24", "-92.9845, 141.751, -91.5392, 0.24", "-97.9442, 144.901, -93.8374, 0.24", "-102.659, 147.903, -95.2304, 0.24", "-105.509, 149.564, -95.9358, 0.24", "-112.244, 153.413, -98.7678, 0.24", "-120.207, 158.219, -103.106, 0.24", "-124.391, 161.058, -105.914, 0.24", "-127.863, 163.851, -108.781, 0.24", "-136.087, 171.285, -117.036, 0.24", "-142.57, 177.206, -124.32, 0.24", "-144.39, 178.785, -126.452, 0.24", "-147.482, 181.254, -130.012, 0.24", "-151.748, 184.516, -134.336, 0.24", "-155.13, 187.042, -137.423, 0.24", "-163.286, 192.621, -143.43, 0.24", "-167.908, 195.347, -146.548, 0.24", "-173.09, 198.076, -149.987, 0.24", "-176.903, 199.808, -152.421, 0.24", "-181.762, 201.815, -155.275, 0.24", "-186.528, 203.999, -158.02, 0.24", "-191.744, 207.106, -161.268, 0.24" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-53.8376, 116.162, -62.1743, 0.48", "-53.8145, 120.005, -67.9149, 0.48", "-53.7093, 125.342, -76.0264, 0.24", "-53.6267, 130.096, -82.9842, 0.24", "-53.6574, 135.151, -90.1947, 0.24", "-53.7467, 138.046, -94.2148, 0.24", "-53.849, 141.362, -98.8191, 0.24", "-54.0151, 145.353, -104.234, 0.24", "-54.0593, 147.228, -106.787, 0.24", "-54.0913, 150.672, -111.413, 0.24", "-54.5889, 155.2, -117.027, 0.24" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-216.744, 4.68248, -15.9622, 0.24", "-230.176, 3.2872, -17.6202, 0.24", "-243.286, -0.059251, -19.3381, 0.24", "-256.253, -2.88181, -22.4064, 0.24" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-216.744, 4.68248, -15.9622, 0.24", "-225.269, 5.89725, -17.6716, 0.24", "-233.806, 7.95387, -18.054, 0.24", "-241.826, 11.4229, -16.837, 0.24", "-248.771, 16.6722, -15.0037, 0.24" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-22.2584, 417.624, -86.913, 0.24", "-22.1802, 424.244, -86.8434, 0.24", "-22.1205, 429.3, -86.7902, 0.24", "-22.0763, 433.039, -86.7508, 0.24", "-22.0404, 436.072, -86.7189, 0.24", "-21.9766, 441.477, -86.6621, 0.24" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-22.2584, 417.624, -86.913, 0.24", "-22.1665, 423.538, -86.7725, 0.24", "-22.801, 429.2, -86.405, 0.24", "-23.8563, 434.153, -86.2032, 0.24", "-24.8718, 438.116, -85.9395, 0.24", "-25.8841, 441.606, -85.8577, 0.24", "-27.001, 445.456, -85.8889, 0.24", "-29.4034, 453.103, -85.8677, 0.24", "-31.5595, 459.245, -86.0476, 0.24", "-33.3761, 464.331, -86.4053, 0.24", "-35.2376, 470.361, -87.3011, 0.24", "-36.0944, 474.056, -88.0211, 0.24", "-36.4351, 475.761, -88.3085, 0.24", "-37.0892, 479.414, -88.8278, 0.24", "-37.6135, 482.474, -89.1615, 0.24", "-39.4297, 492.719, -90.035, 0.24", "-40.1701, 496.863, -90.229, 0.24", "-43.4628, 514.374, -90.9095, 0.24", "-44.3169, 519.218, -91.0992, 0.24", "-45.1994, 524.704, -91.3774, 0.24", "-45.9427, 529.917, -91.7761, 0.24", "-46.3457, 533.474, -92.1209, 0.24", "-46.6832, 539.243, -92.9734, 0.24", "-46.596, 544.354, -93.9943, 0.24", "-46.4138, 550.881, -95.4159, 0.24", "-46.1175, 559.339, -97.3976, 0.24", "-45.7328, 568.06, -99.5635, 0.24", "-45.2669, 578.24, -102.126, 0.24", "-44.8839, 586.347, -104.101, 0.24" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-248.771, 16.6722, -15.0037, 0.24", "-258.193, 20.2066, -15.3566, 0.24", "-267.244, 24.6821, -15.2808, 0.24", "-276.272, 29.1795, -14.8448, 0.24", "-285.077, 34.0701, -15.835, 0.24", "-293.08, 40.3441, -16.4025, 0.24", "-301.854, 45.2418, -17.6295, 0.24" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-248.771, 16.6722, -15.0037, 0.24", "-257.677, 19.8747, -14.1985, 0.24", "-266.53, 23.3166, -14.4917, 0.24", "-275.162, 27.2139, -15.4232, 0.24", "-284.412, 29.1548, -15.9965, 0.24", "-293.611, 31.0693, -14.8108, 0.24", "-302.641, 33.9801, -15.0068, 0.24", "-311.05, 38.4821, -15.2323, 0.24", "-318.997, 43.8154, -15.6042, 0.24", "-326.958, 49.0643, -14.6975, 0.24", "-334.753, 54.577, -13.7654, 0.24", "-342.837, 59.4745, -12.3015, 0.24" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_44", "dend_35", "dend_0", "dend_59", "dend_56", "dend_54", "dend_45", "dend_37", "dend_36", "dend_20", "dend_1", "dend_58", "dend_57", "dend_51", "dend_46", "dend_43", "dend_38", "dend_32", "dend_21", "dend_15", "dend_2", "dend_53", "dend_52", "dend_50", "dend_47", "dend_40", "dend_39", "dend_34", "dend_33", "dend_31", "dend_22", "dend_19", "dend_16", "dend_8", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_24", "dend_23", "dend_18", "dend_17", "dend_14", "dend_9", "dend_5", "dend_4", "dend_26", "dend_25", "dend_13", "dend_10", "dend_7", "dend_6", "dend_30", "dend_27", "dend_12", "dend_11", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_44", "dend_35", "dend_0", "dend_59", "dend_56", "dend_54", "dend_45", "dend_37", "dend_36", "dend_20", "dend_1", "dend_58", "dend_57", "dend_51", "dend_46", "dend_43", "dend_38", "dend_32", "dend_21", "dend_15", "dend_2", "dend_53", "dend_52", "dend_50", "dend_47", "dend_40", "dend_39", "dend_34", "dend_33", "dend_31", "dend_22", "dend_19", "dend_16", "dend_8", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_24", "dend_23", "dend_18", "dend_17", "dend_14", "dend_9", "dend_5", "dend_4", "dend_26", "dend_25", "dend_13", "dend_10", "dend_7", "dend_6", "dend_30", "dend_27", "dend_12", "dend_11", "dend_29", "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_0", "dend_0", "axon_0", "axon_0", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_45", "dend_45", "dend_45", "dend_45", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_20", "dend_1", "dend_1", "axon_1", "axon_1", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_2", "dend_2", "dend_2", "dend_2", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L6_NBC_4b88b7a151_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_44
create dend_54
public dend_54
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_20, id: dend_20, parent: dend_0
create dend_20
public dend_20
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_32, id: dend_32, parent: dend_20
create dend_32
public dend_32
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_1
create dend_15
public dend_15
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_21
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_8
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_0, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_1, dend_1, axon_1, axon_1, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.4499999174985625)
    connect dend_44(0), soma_0(0.4499999174985625)
    connect dend_35(0), soma_0(0.4499999174985625)
    connect dend_0(0), soma_0(0.4499999174985625)
    connect axon_0(0), soma_0(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_20(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_32(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_14(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.18133, 10.1802, -0.0136132, 4.51632 ) }
    soma_0 { pt3dadd( -3.71511, 9.17715, -0.012728, 5.89932 ) }
    soma_0 { pt3dadd( -3.24888, 8.1741, -0.0118428, 6.73586 ) }
    soma_0 { pt3dadd( -2.78266, 7.17105, -0.0109576, 7.77662 ) }
    soma_0 { pt3dadd( -2.31644, 6.16799, -0.0100724, 8.83653 ) }
    soma_0 { pt3dadd( -1.85022, 5.16494, -0.00918717, 9.98865 ) }
    soma_0 { pt3dadd( -1.384, 4.16189, -0.00830196, 11.1793 ) }
    soma_0 { pt3dadd( -0.917776, 3.15884, -0.00741676, 12.3766 ) }
    soma_0 { pt3dadd( -0.451555, 2.15579, -0.00653155, 13.3418 ) }
    soma_0 { pt3dadd( 0.0146667, 1.15274, -0.00564635, 14.1684 ) }
    soma_0 { pt3dadd( 0.480888, 0.149684, -0.00476114, 14.5557 ) }
    soma_0 { pt3dadd( 0.94711, -0.853367, -0.00387593, 14.9116 ) }
    soma_0 { pt3dadd( 1.41333, -1.85642, -0.00299073, 14.9294 ) }
    soma_0 { pt3dadd( 1.87955, -2.85947, -0.00210552, 14.4593 ) }
    soma_0 { pt3dadd( 2.34577, -3.86252, -0.00122032, 13.9684 ) }
    soma_0 { pt3dadd( 2.812, -4.86557, -3.35112E-4, 13.2352 ) }
    soma_0 { pt3dadd( 3.27822, -5.86863, 5.50094E-4, 12.4898 ) }
    soma_0 { pt3dadd( 3.74444, -6.87168, 0.0014353, 11.1742 ) }
    soma_0 { pt3dadd( 4.21066, -7.87473, 0.0023205, 8.60206 ) }
    soma_0 { pt3dadd( 4.67688, -8.87778, 0.00320571, 5.94918 ) }
    soma_0 { pt3dadd( 5.1431, -9.88083, 0.00409092, 3.45007 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -4.86983, -2.82075, 10.4413, 1.08 ) }
    dend_55 { pt3dadd( -6.55994, -3.55671, 10.4555, 1.08 ) }
    dend_55 { pt3dadd( -7.91029, -4.21823, 10.4653, 0.96 ) }
    dend_55 { pt3dadd( -8.59956, -4.5936, 10.4696, 0.96 ) }
    dend_55 { pt3dadd( -10.1997, -5.51293, 10.5936, 0.84 ) }
    dend_55 { pt3dadd( -11.6831, -6.44785, 10.8108, 0.84 ) }
    dend_55 { pt3dadd( -13.4027, -7.64944, 11.0927, 0.84 ) }
    dend_55 { pt3dadd( -14.9146, -8.69892, 11.3751, 0.84 ) }
    dend_55 { pt3dadd( -16.1686, -9.6083, 11.6443, 0.84 ) }
    dend_55 { pt3dadd( -17.8647, -10.9744, 12.0705, 0.84 ) }
    dend_55 { pt3dadd( -19.0098, -12.0745, 12.4355, 0.84 ) }
    dend_55 { pt3dadd( -20.6104, -13.8819, 13.1027, 0.84 ) }
    dend_55 { pt3dadd( -27.1593, -17.5964, 14.5002, 0.84 ) }
    dend_55 { pt3dadd( -32.7257, -22.9832, 14.7254, 0.84 ) }
    dend_55 { pt3dadd( -37.732, -28.9129, 14.093, 0.84 ) }
    dend_55 { pt3dadd( -42.2244, -35.2485, 13.2176, 0.84 ) }
    dend_55 { pt3dadd( -46.6455, -41.6997, 13.4636, 0.84 ) }
    dend_55 { pt3dadd( -50.2695, -48.672, 13.8216, 0.84 ) }
    dend_55 { pt3dadd( -54.6101, -55.1797, 14.14, 0.84 ) }
    dend_55 { pt3dadd( -58.7221, -61.833, 13.5952, 0.84 ) }
    dend_55 { pt3dadd( -62.5362, -68.6749, 14.1852, 0.84 ) }
    dend_55 { pt3dadd( -66.3504, -75.5405, 14.4184, 0.84 ) }
    dend_55 { pt3dadd( -70.0854, -82.4285, 15.0274, 0.84 ) }
    dend_55 { pt3dadd( -73.6714, -89.3473, 16.065, 0.84 ) }
    dend_55 { pt3dadd( -77.9075, -95.5741, 18.1249, 0.84 ) }
    dend_55 { pt3dadd( -81.945, -101.878, 20.3624, 0.84 ) }
    dend_55 { pt3dadd( -85.8564, -108.588, 21.4674, 0.84 ) }
    dend_55 { pt3dadd( -89.3414, -115.633, 21.0343, 0.84 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 49/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 4.44017, -9.4252, -1.30865, 2.77 ) }
    dend_44 { pt3dadd( 5.04898, -11.3055, -1.28349, 2.77 ) }
    dend_44 { pt3dadd( 5.67597, -13.242, -1.25758, 1.69 ) }
    dend_44 { pt3dadd( 6.38457, -15.4305, -1.22831, 1.69 ) }
    dend_44 { pt3dadd( 6.97534, -17.255, -1.2039, 2.29 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 54/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 8.18017, -1.43475, -14.5587, 2.65 ) }
    dend_35 { pt3dadd( 9.61736, -2.51919, -15.546, 2.05 ) }
    dend_35 { pt3dadd( 12.8909, -4.98912, -17.7946, 2.41 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 57/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.00983, 12.4043, 0.0313539, 4.22 ) }
    dend_0 { pt3dadd( -5.82395, 16.4496, 0.0313539, 4.22 ) }
    dend_0 { pt3dadd( -6.30601, 17.5245, 0.0313539, 4.22 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 60/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 5.1431, -9.88083, 0.00409092, 1.16337 ) }
    axon_0 { pt3dadd( 11.4656, -23.4833, 0.00409092, 1.16337 ) }
    axon_0 { pt3dadd( 17.788, -37.0857, 0.00409092, 1.16337 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 63/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -89.3414, -115.633, 21.0343, 0.24 ) }
    dend_59 { pt3dadd( -99.9738, -116.735, 17.4429, 0.24 ) }
    dend_59 { pt3dadd( -110.887, -117.586, 14.749, 0.24 ) }
    dend_59 { pt3dadd( -121.945, -117.741, 12.595, 0.24 ) }
    dend_59 { pt3dadd( -132.858, -115.798, 10.5392, 0.24 ) }
    dend_59 { pt3dadd( -143.635, -114.263, 7.62236, 0.24 ) }
    dend_59 { pt3dadd( -154.15, -111.964, 4.2575, 0.24 ) }
    dend_59 { pt3dadd( -164.183, -110.257, -0.581131, 0.24 ) }
    dend_59 { pt3dadd( -173.578, -107.886, -6.34914, 0.24 ) }
    dend_59 { pt3dadd( -182.193, -103.666, -12.3483, 0.24 ) }
    dend_59 { pt3dadd( -190.988, -98.9275, -17.697, 0.24 ) }
    dend_59 { pt3dadd( -199.781, -95.7317, -24.0143, 0.24 ) }
    dend_59 { pt3dadd( -208.321, -90.8016, -29.61, 0.24 ) }
    dend_59 { pt3dadd( -215.721, -83.5474, -34.4668, 0.24 ) }
    dend_59 { pt3dadd( -223.171, -77.5189, -40.6034, 0.24 ) }
    dend_59 { pt3dadd( -231.431, -72.3826, -46.4422, 0.24 ) }
    dend_59 { pt3dadd( -238.735, -65.8224, -52.2468, 0.24 ) }
    dend_59 { pt3dadd( -247.466, -61.1158, -57.7242, 0.24 ) }
    dend_59 { pt3dadd( -254.952, -58.0312, -65.5855, 0.24 ) }
    dend_59 { pt3dadd( -261.1, -54.6274, -74.4215, 0.24 ) }
    dend_59 { pt3dadd( -265.99, -52.5804, -84.3665, 0.24 ) }
    dend_59 { pt3dadd( -269.367, -49.6022, -94.7103, 0.24 ) }
    dend_59 { pt3dadd( -272.481, -45.2777, -104.688, 0.24 ) }
    dend_59 { pt3dadd( -277.538, -39.1989, -112.868, 0.24 ) }
    dend_59 { pt3dadd( -283.795, -34.6648, -121.14, 0.24 ) }
    dend_59 { pt3dadd( -290.623, -29.7141, -128.711, 0.24 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 89/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -89.3414, -115.633, 21.0343, 0.24 ) }
    dend_56 { pt3dadd( -91.9525, -125.961, 23.6418, 0.24 ) }
    dend_56 { pt3dadd( -93.2343, -135.785, 28.1894, 0.24 ) }
    dend_56 { pt3dadd( -94.4299, -145.127, 33.5884, 0.24 ) }
    dend_56 { pt3dadd( -93.9388, -155.388, 37.3478, 0.24 ) }
    // Section: dend_54, id: dend_54, parent: dend_44 (entry count 94/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 6.97534, -17.255, -1.2039, 0.84 ) }
    dend_54 { pt3dadd( 4.4995, -26.4732, -2.5746, 0.84 ) }
    dend_54 { pt3dadd( 3.71734, -29.6631, -3.12416, 0.84 ) }
    dend_54 { pt3dadd( 2.96419, -33.0165, -3.73497, 0.84 ) }
    dend_54 { pt3dadd( 2.64126, -35.5532, -4.58813, 0.84 ) }
    dend_54 { pt3dadd( 2.60621, -38.1105, -5.69122, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_54 { pt3dadd( 2.83329, -41.386, -7.2516, 0.72 ) }
    dend_54 { pt3dadd( 3.37751, -43.1316, -8.56992, 0.72 ) }
    dend_54 { pt3dadd( 3.86074, -44.1999, -9.50047, 0.72 ) }
    dend_54 { pt3dadd( 7.60972, -50.9733, -16.0713, 0.72 ) }
    dend_54 { pt3dadd( 9.05506, -53.4061, -18.6223, 0.72 ) }
    dend_54 { pt3dadd( 9.73046, -54.5162, -19.8637, 0.72 ) }
    dend_54 { pt3dadd( 11.7712, -58.031, -23.9071, 0.6 ) }
    dend_54 { pt3dadd( 13.1468, -60.6923, -26.8782, 0.6 ) }
    dend_54 { pt3dadd( 14.289, -63.2323, -29.5398, 0.6 ) }
    dend_54 { pt3dadd( 15.1284, -65.5031, -31.5248, 0.6 ) }
    dend_54 { pt3dadd( 15.7836, -66.8875, -32.8085, 0.6 ) }
    dend_54 { pt3dadd( 16.5498, -68.138, -34.0726, 0.6 ) }
    dend_54 { pt3dadd( 17.1525, -69.0112, -34.9578, 0.6 ) }
    dend_54 { pt3dadd( 19.5175, -72.1569, -38.2863, 0.6 ) }
    dend_54 { pt3dadd( 21.1434, -74.1635, -40.4436, 0.6 ) }
    dend_54 { pt3dadd( 24.1474, -77.6492, -44.4406, 0.6 ) }
    dend_54 { pt3dadd( 26.8986, -80.9376, -48.4429, 0.6 ) }
    dend_54 { pt3dadd( 28.0143, -82.4209, -50.275, 0.6 ) }
    dend_54 { pt3dadd( 28.5882, -83.2694, -51.4175, 0.48 ) }
    dend_54 { pt3dadd( 29.1462, -84.2585, -52.7473, 0.48 ) }
    dend_54 { pt3dadd( 30.4886, -87.4196, -56.979, 0.48 ) }
    dend_54 { pt3dadd( 30.9229, -88.7792, -58.6505, 0.48 ) }
    dend_54 { pt3dadd( 31.5152, -90.8358, -60.9428, 0.48 ) }
    dend_54 { pt3dadd( 32.9773, -96.0355, -66.5264, 0.24 ) }
    dend_54 { pt3dadd( 33.4299, -97.5648, -68.0424, 0.24 ) }
    dend_54 { pt3dadd( 34.2787, -100.504, -70.7128, 0.24 ) }
    dend_54 { pt3dadd( 34.8467, -102.506, -72.3281, 0.24 ) }
    dend_54 { pt3dadd( 35.5696, -105.085, -74.1327, 0.24 ) }
    dend_54 { pt3dadd( 36.0894, -106.635, -75.2576, 0.36 ) }
    dend_54 { pt3dadd( 38.3645, -112.32, -79.4751, 0.36 ) }
    dend_54 { pt3dadd( 38.5178, -112.637, -79.7332, 0.36 ) }
    dend_54 { pt3dadd( 39.2235, -113.833, -80.8385, 0.96 ) }
    dend_54 { pt3dadd( 41.5096, -117.381, -84.3082, 0.36 ) }
    dend_54 { pt3dadd( 46.2834, -124.038, -91.35, 1.81 ) }
    dend_54 { pt3dadd( 48.8106, -127.363, -94.9803, 0.6 ) }
    dend_54 { pt3dadd( 50.9445, -130.065, -98.0565, 0.6 ) }
    dend_54 { pt3dadd( 54.0863, -134.042, -102.509, 0.36 ) }
    dend_54 { pt3dadd( 55.6965, -135.572, -104.739, 0.96 ) }
    dend_54 { pt3dadd( 58.3013, -137.705, -108.206, 0.36 ) }
    dend_54 { pt3dadd( 59.9258, -138.972, -110.322, 0.96 ) }
    dend_54 { pt3dadd( 64.6346, -142.406, -116.431, 0.36 ) }
    dend_54 { pt3dadd( 66.5292, -143.687, -118.895, 1.57 ) }
    dend_54 { pt3dadd( 80.3524, -152.52, -136.886, 0.72 ) }
    dend_54 { pt3dadd( 82.5537, -153.801, -139.824, 0.72 ) }
    dend_54 { pt3dadd( 82.812, -153.939, -140.173, 1.45 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 45/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 6.97534, -17.255, -1.2039, 1.45 ) }
    dend_45 { pt3dadd( 8.76404, -18.0595, -0.970236, 1.45 ) }
    dend_45 { pt3dadd( 10.2984, -18.7495, -0.76981, 1.45 ) }
    dend_45 { pt3dadd( 11.8033, -19.4263, -0.573229, 1.45 ) }
    dend_45 { pt3dadd( 12.9696, -19.9509, -0.420874, 1.45 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 50/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 12.8909, -4.98912, -17.7946, 1.33 ) }
    dend_37 { pt3dadd( 14.5822, -4.84047, -17.9871, 1.33 ) }
    dend_37 { pt3dadd( 17.4562, -4.58786, -18.3141, 1.33 ) }
    dend_37 { pt3dadd( 20.4125, -4.32801, -18.6505, 1.81 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 54/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 12.8909, -4.98912, -17.7946, 0.72 ) }
    dend_36 { pt3dadd( 13.9263, -7.31678, -18.6793, 0.72 ) }
    dend_36 { pt3dadd( 14.7708, -9.652, -19.4323, 0.72 ) }
    dend_36 { pt3dadd( 15.6495, -11.7875, -20.0816, 0.72 ) }
    dend_36 { pt3dadd( 16.4697, -13.5346, -20.5949, 0.6 ) }
    dend_36 { pt3dadd( 17.5894, -15.929, -21.3192, 0.6 ) }
    dend_36 { pt3dadd( 18.6576, -18.1614, -22.0143, 0.6 ) }
    dend_36 { pt3dadd( 19.5425, -19.9063, -22.5404, 0.36 ) }
    dend_36 { pt3dadd( 20.9248, -22.6174, -23.3766, 0.48 ) }
    dend_36 { pt3dadd( 21.7882, -24.3155, -23.8875, 0.36 ) }
    dend_36 { pt3dadd( 23.5463, -27.8239, -25.1387, 0.36 ) }
    dend_36 { pt3dadd( 25.131, -30.9532, -26.6161, 0.36 ) }
    dend_36 { pt3dadd( 26.2569, -33.3897, -27.763, 0.36 ) }
    dend_36 { pt3dadd( 27.3061, -35.7474, -28.9226, 0.36 ) }
    dend_36 { pt3dadd( 29.3667, -40.8118, -31.4864, 0.36 ) }
    dend_36 { pt3dadd( 31.2987, -45.8083, -34.1141, 0.36 ) }
    dend_36 { pt3dadd( 33.1705, -50.7352, -36.8528, 0.24 ) }
    dend_36 { pt3dadd( 34.5732, -54.9233, -39.3487, 0.24 ) }
    // Section: dend_20, id: dend_20, parent: dend_0 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -6.30601, 17.5245, 0.0313539, 1.81 ) }
    dend_20 { pt3dadd( -9.80837, 18.1619, 4.49496, 1.81 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 74/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.30601, 17.5245, 0.0313539, 2.65 ) }
    dend_1 { pt3dadd( -5.87502, 21.3418, -0.0867619, 2.65 ) }
    dend_1 { pt3dadd( -5.68045, 23.0651, -0.140084, 2.65 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 77/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 17.788, -37.0857, 0.00409092, 0.36 ) }
    axon_1 { pt3dadd( 24.1105, -50.6882, 0.00409092, 0.36 ) }
    axon_1 { pt3dadd( 30.4329, -64.2906, 0.00409092, 0.36 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 80/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -93.9388, -155.388, 37.3478, 0.24 ) }
    dend_58 { pt3dadd( -94.9633, -163.508, 40.7721, 0.24 ) }
    dend_58 { pt3dadd( -97.6926, -171.558, 43.3193, 0.24 ) }
    dend_58 { pt3dadd( -99.4555, -179.518, 46.7862, 0.24 ) }
    dend_58 { pt3dadd( -100.896, -188.132, 48.6213, 0.24 ) }
    dend_58 { pt3dadd( -101.273, -196.669, 51.1536, 0.24 ) }
    dend_58 { pt3dadd( -102.464, -205.203, 53.4373, 0.24 ) }
    dend_58 { pt3dadd( -104.964, -213.717, 54.3785, 0.24 ) }
    dend_58 { pt3dadd( -108.311, -221.964, 53.9846, 0.24 ) }
    dend_58 { pt3dadd( -113.254, -229.139, 55.315, 0.24 ) }
    dend_58 { pt3dadd( -117.173, -237.092, 55.7989, 0.24 ) }
    dend_58 { pt3dadd( -122.045, -244.441, 56.3014, 0.24 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 92/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -93.9388, -155.388, 37.3478, 0.24 ) }
    dend_57 { pt3dadd( -95.9767, -162.713, 42.4118, 0.24 ) }
    dend_57 { pt3dadd( -97.9749, -169.49, 48.1454, 0.24 ) }
    dend_57 { pt3dadd( -101.56, -175.144, 54.191, 0.24 ) }
    dend_57 { pt3dadd( -103.517, -181.992, 59.8617, 0.24 ) }
    dend_57 { pt3dadd( -106.607, -189.125, 64.6232, 0.24 ) }
    dend_57 { pt3dadd( -111.337, -195.996, 68.2216, 0.24 ) }
    dend_57 { pt3dadd( -116.805, -202.272, 71.7495, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_57 { pt3dadd( -123.355, -208.235, 73.398, 0.24 ) }
    dend_57 { pt3dadd( -129.786, -214.494, 74.3349, 0.24 ) }
    dend_57 { pt3dadd( -135.464, -221.569, 74.5916, 0.24 ) }
    dend_57 { pt3dadd( -141.939, -227.77, 75.5815, 0.24 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 4/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 12.9696, -19.9509, -0.420874, 0.36 ) }
    dend_51 { pt3dadd( 14.9771, -22.2032, -1.25584, 0.36 ) }
    dend_51 { pt3dadd( 18.1384, -25.7501, -2.57066, 0.36 ) }
    dend_51 { pt3dadd( 21.1708, -29.1523, -3.83187, 0.36 ) }
    dend_51 { pt3dadd( 23.4719, -31.7339, -4.7889, 0.6 ) }
    dend_51 { pt3dadd( 28.2567, -37.1022, -6.77896, 0.6 ) }
    dend_51 { pt3dadd( 30.7728, -39.9251, -7.82541, 1.08 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 11/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 12.9696, -19.9509, -0.420874, 0.84 ) }
    dend_46 { pt3dadd( 14.0516, -20.9125, 0.915586, 0.84 ) }
    dend_46 { pt3dadd( 15.2762, -22.0299, 2.36141, 0.84 ) }
    dend_46 { pt3dadd( 16.1646, -22.8388, 3.32582, 0.72 ) }
    dend_46 { pt3dadd( 17.6477, -24.1703, 4.8193, 0.72 ) }
    dend_46 { pt3dadd( 20.5565, -26.8275, 7.54082, 0.72 ) }
    dend_46 { pt3dadd( 21.9365, -28.1478, 8.7416, 0.6 ) }
    dend_46 { pt3dadd( 22.9858, -29.2519, 9.62486, 0.6 ) }
    dend_46 { pt3dadd( 23.9307, -30.3325, 10.3063, 0.6 ) }
    dend_46 { pt3dadd( 24.4978, -31.061, 10.6414, 0.6 ) }
    dend_46 { pt3dadd( 25.5401, -32.4418, 11.0179, 0.36 ) }
    dend_46 { pt3dadd( 26.6736, -33.8328, 11.1516, 0.36 ) }
    dend_46 { pt3dadd( 27.5625, -34.9041, 11.3233, 0.36 ) }
    dend_46 { pt3dadd( 28.48, -36.0953, 11.669, 0.36 ) }
    dend_46 { pt3dadd( 29.1734, -36.9502, 12.0555, 0.36 ) }
    dend_46 { pt3dadd( 30.0657, -37.9272, 12.6866, 0.36 ) }
    dend_46 { pt3dadd( 30.6187, -38.4313, 13.1417, 0.36 ) }
    dend_46 { pt3dadd( 32.5815, -39.849, 14.8834, 0.36 ) }
    dend_46 { pt3dadd( 33.8834, -40.6697, 16.0252, 0.36 ) }
    dend_46 { pt3dadd( 35.1231, -41.4028, 17.1893, 0.36 ) }
    dend_46 { pt3dadd( 35.9217, -41.8808, 17.9777, 0.36 ) }
    dend_46 { pt3dadd( 36.3546, -42.1593, 18.4092, 0.36 ) }
    dend_46 { pt3dadd( 37.0534, -42.6165, 19.0085, 0.36 ) }
    dend_46 { pt3dadd( 38.3237, -43.185, 19.5963, 0.36 ) }
    dend_46 { pt3dadd( 43.4397, -48.3809, 24.9517, 0.36 ) }
    dend_46 { pt3dadd( 47.5604, -53.3392, 31.2759, 0.36 ) }
    dend_46 { pt3dadd( 51.3362, -57.9321, 38.051, 0.36 ) }
    dend_46 { pt3dadd( 54.0428, -63.5779, 44.6005, 0.36 ) }
    dend_46 { pt3dadd( 55.7356, -70.1173, 50.7145, 0.36 ) }
    dend_46 { pt3dadd( 58.2604, -75.6011, 57.4589, 0.36 ) }
    dend_46 { pt3dadd( 60.8469, -81.6393, 63.731, 0.36 ) }
    dend_46 { pt3dadd( 64.1386, -88.544, 68.7375, 0.36 ) }
    dend_46 { pt3dadd( 66.4521, -95.8337, 73.7899, 0.36 ) }
    dend_46 { pt3dadd( 68.1053, -103.919, 77.9253, 0.36 ) }
    dend_46 { pt3dadd( 69.734, -111.988, 82.0974, 0.36 ) }
    dend_46 { pt3dadd( 70.8054, -119.925, 86.6564, 0.36 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 47/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 20.4125, -4.32801, -18.6505, 1.32 ) }
    dend_43 { pt3dadd( 22.7736, -1.99703, -20.9082, 1.32 ) }
    dend_43 { pt3dadd( 24.6094, -0.387226, -22.6935, 1.32 ) }
    dend_43 { pt3dadd( 26.6885, 1.17347, -24.707, 1.2 ) }
    dend_43 { pt3dadd( 29.4742, 2.95751, -27.5478, 1.08 ) }
    dend_43 { pt3dadd( 32.5153, 4.97595, -31.2039, 0.96 ) }
    dend_43 { pt3dadd( 35.4848, 7.07623, -35.0744, 0.96 ) }
    dend_43 { pt3dadd( 36.2956, 7.67524, -36.3156, 0.96 ) }
    dend_43 { pt3dadd( 37.3954, 8.57183, -38.185, 0.96 ) }
    dend_43 { pt3dadd( 38.6438, 9.8395, -40.6331, 0.96 ) }
    dend_43 { pt3dadd( 41.3414, 13.5083, -46.7317, 0.96 ) }
    dend_43 { pt3dadd( 42.1016, 14.8517, -48.6738, 0.96 ) }
    dend_43 { pt3dadd( 43.0837, 16.7766, -51.1512, 0.96 ) }
    dend_43 { pt3dadd( 43.6909, 17.7985, -52.428, 0.84 ) }
    dend_43 { pt3dadd( 45.3466, 19.9814, -55.1419, 0.72 ) }
    dend_43 { pt3dadd( 46.1067, 20.7231, -56.0842, 0.72 ) }
    dend_43 { pt3dadd( 49.0868, 22.8221, -59.0245, 0.84 ) }
    dend_43 { pt3dadd( 50.8809, 23.9866, -60.6716, 1.08 ) }
    dend_43 { pt3dadd( 53.9193, 25.882, -63.2099, 1.08 ) }
    dend_43 { pt3dadd( 57.5017, 28.0015, -65.9384, 1.08 ) }
    dend_43 { pt3dadd( 58.934, 28.7785, -66.9774, 0.96 ) }
    dend_43 { pt3dadd( 61.5039, 30.1728, -69.0566, 0.84 ) }
    dend_43 { pt3dadd( 62.8726, 30.988, -70.3562, 0.84 ) }
    dend_43 { pt3dadd( 64.28, 31.8797, -71.8686, 0.84 ) }
    dend_43 { pt3dadd( 65.0555, 32.3701, -72.7811, 0.84 ) }
    dend_43 { pt3dadd( 68.207, 34.2069, -76.4741, 0.84 ) }
    dend_43 { pt3dadd( 71.4877, 36.0673, -80.5287, 0.84 ) }
    dend_43 { pt3dadd( 74.5499, 37.7908, -84.4461, 2.16 ) }
    dend_43 { pt3dadd( 75.4027, 38.2887, -85.5462, 2.16 ) }
    dend_43 { pt3dadd( 78.4839, 40.2411, -89.3877, 0.72 ) }
    dend_43 { pt3dadd( 79.635, 41.0613, -90.6858, 0.72 ) }
    dend_43 { pt3dadd( 82.2192, 43.1665, -93.19, 0.72 ) }
    dend_43 { pt3dadd( 84.4626, 45.0467, -95.0442, 0.72 ) }
    dend_43 { pt3dadd( 85.423, 45.8576, -95.7796, 0.72 ) }
    dend_43 { pt3dadd( 88.9077, 48.7886, -98.6007, 2.16 ) }
    dend_43 { pt3dadd( 90.801, 50.3841, -100.129, 1.44 ) }
    dend_43 { pt3dadd( 93.3029, 52.5403, -101.944, 0.48 ) }
    dend_43 { pt3dadd( 94.7063, 53.8633, -103.113, 0.48 ) }
    dend_43 { pt3dadd( 97.0804, 56.3386, -105.33, 1.32 ) }
    dend_43 { pt3dadd( 99.2664, 58.9911, -108.639, 1.32 ) }
    dend_43 { pt3dadd( 99.412, 59.1885, -108.913, 1.32 ) }
    dend_43 { pt3dadd( 101.68, 62.3835, -113.551, 0.72 ) }
    dend_43 { pt3dadd( 106.474, 69.1689, -123.181, 0.6 ) }
    dend_43 { pt3dadd( 107.572, 70.7222, -125.282, 0.6 ) }
    dend_43 { pt3dadd( 114.445, 79.9284, -136.988, 0.12 ) }
    dend_43 { pt3dadd( 115.631, 81.4195, -138.8, 0.96 ) }
    dend_43 { pt3dadd( 116.656, 82.626, -140.219, 0.48 ) }
    dend_43 { pt3dadd( 118.888, 85.0886, -143.004, 0.36 ) }
    dend_43 { pt3dadd( 121.853, 88.1214, -145.587, 0.24 ) }
    dend_43 { pt3dadd( 124.131, 90.4294, -147.282, 0.24 ) }
    dend_43 { pt3dadd( 127.796, 94.0948, -149.099, 1.2 ) }
    dend_43 { pt3dadd( 129.188, 95.5332, -149.91, 0.72 ) }
    dend_43 { pt3dadd( 132.209, 98.8369, -151.845, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_43 { pt3dadd( 133.377, 100.207, -152.624, 0.24 ) }
    dend_43 { pt3dadd( 135.478, 102.888, -153.968, 1.08 ) }
    dend_43 { pt3dadd( 136.187, 103.874, -154.416, 0.6 ) }
    dend_43 { pt3dadd( 139.192, 108.244, -156.02, 0.48 ) }
    dend_43 { pt3dadd( 140.265, 109.827, -156.578, 0.48 ) }
    dend_43 { pt3dadd( 141.44, 111.486, -157.093, 1.2 ) }
    dend_43 { pt3dadd( 142.609, 113.034, -157.598, 0.6 ) }
    dend_43 { pt3dadd( 145.762, 116.737, -158.825, 0.24 ) }
    dend_43 { pt3dadd( 147.16, 118.219, -159.463, 0.24 ) }
    dend_43 { pt3dadd( 148.996, 119.967, -160.327, 1.32 ) }
    dend_43 { pt3dadd( 150.539, 121.312, -161.036, 0.72 ) }
    dend_43 { pt3dadd( 153.839, 124.089, -162.614, 0.48 ) }
    dend_43 { pt3dadd( 156.815, 126.591, -164.176, 0.48 ) }
    dend_43 { pt3dadd( 159.917, 129.21, -165.841, 1.08 ) }
    dend_43 { pt3dadd( 161.175, 130.307, -166.529, 0.36 ) }
    dend_43 { pt3dadd( 164.088, 132.975, -168.061, 0.12 ) }
    dend_43 { pt3dadd( 167.795, 136.619, -169.951, 0.12 ) }
    dend_43 { pt3dadd( 170.61, 139.522, -171.345, 0.12 ) }
    dend_43 { pt3dadd( 171.409, 140.38, -171.719, 0.48 ) }
    dend_43 { pt3dadd( 172.1, 141.135, -172.044, 0.12 ) }
    dend_43 { pt3dadd( 173.363, 142.557, -172.801, 0.12 ) }
    dend_43 { pt3dadd( 173.972, 143.272, -173.215, 0.48 ) }
    dend_43 { pt3dadd( 175.759, 145.569, -174.404, 0.48 ) }
    dend_43 { pt3dadd( 176.783, 147.102, -175.073, 0.24 ) }
    dend_43 { pt3dadd( 178.294, 149.626, -176.016, 0.6 ) }
    dend_43 { pt3dadd( 179.477, 151.783, -176.677, 1.08 ) }
    dend_43 { pt3dadd( 180.595, 153.946, -177.209, 0.48 ) }
    dend_43 { pt3dadd( 182.664, 157.884, -178.085, 0.36 ) }
    dend_43 { pt3dadd( 183.991, 160.285, -178.707, 0.36 ) }
    dend_43 { pt3dadd( 185.808, 163.323, -179.721, 0.36 ) }
    dend_43 { pt3dadd( 186.897, 164.981, -180.348, 0.96 ) }
    dend_43 { pt3dadd( 187.643, 166.028, -180.799, 0.24 ) }
    dend_43 { pt3dadd( 190.47, 169.604, -182.458, 0.12 ) }
    dend_43 { pt3dadd( 193.909, 173.476, -184.236, 0.24 ) }
    dend_43 { pt3dadd( 195.943, 175.623, -185.374, 0.24 ) }
    dend_43 { pt3dadd( 197.229, 176.967, -186.12, 0.24 ) }
    dend_43 { pt3dadd( 198.647, 178.446, -186.85, 0.24 ) }
    dend_43 { pt3dadd( 200.881, 180.796, -187.742, 0.24 ) }
    dend_43 { pt3dadd( 202.012, 181.989, -188.027, 0.24 ) }
    dend_43 { pt3dadd( 205.903, 185.992, -188.871, 1.44 ) }
    dend_43 { pt3dadd( 206.841, 186.955, -189.132, 1.08 ) }
    dend_43 { pt3dadd( 208.599, 188.719, -189.726, 0.12 ) }
    dend_43 { pt3dadd( 209.639, 189.77, -190.259, 0.12 ) }
    dend_43 { pt3dadd( 211.671, 191.804, -191.569, 0.12 ) }
    dend_43 { pt3dadd( 214.055, 194.028, -193.119, 0.6 ) }
    dend_43 { pt3dadd( 215.216, 194.999, -193.795, 0.6 ) }
    dend_43 { pt3dadd( 216.379, 195.919, -194.636, 0.24 ) }
    dend_43 { pt3dadd( 219.957, 198.693, -197.463, 0.72 ) }
    dend_43 { pt3dadd( 220.8, 199.358, -198.2, 0.12 ) }
    dend_43 { pt3dadd( 222.409, 200.644, -199.585, 0.24 ) }
    dend_43 { pt3dadd( 223.876, 201.862, -200.793, 0.24 ) }
    dend_43 { pt3dadd( 229.257, 206.567, -205.209, 0.24 ) }
    dend_43 { pt3dadd( 230.543, 207.799, -206.238, 0.12 ) }
    dend_43 { pt3dadd( 234.164, 211.507, -208.887, 0.24 ) }
    dend_43 { pt3dadd( 235.73, 213.278, -210.029, 0.24 ) }
    dend_43 { pt3dadd( 237.905, 216.018, -211.526, 0.24 ) }
    dend_43 { pt3dadd( 239.017, 217.623, -212.34, 0.72 ) }
    dend_43 { pt3dadd( 240.559, 220.114, -213.344, 0.36 ) }
    dend_43 { pt3dadd( 241.33, 221.408, -213.866, 0.36 ) }
    dend_43 { pt3dadd( 242.377, 223.228, -214.546, 1.08 ) }
    dend_43 { pt3dadd( 243.577, 225.335, -215.427, 0.36 ) }
    dend_43 { pt3dadd( 246.561, 230.692, -217.734, 0.36 ) }
    dend_43 { pt3dadd( 247.22, 231.915, -218.342, 0.36 ) }
    dend_43 { pt3dadd( 248.254, 233.951, -219.601, 1.2 ) }
    dend_43 { pt3dadd( 248.556, 234.558, -220.005, 0.72 ) }
    dend_43 { pt3dadd( 249.186, 235.792, -220.892, 0.36 ) }
    dend_43 { pt3dadd( 249.695, 236.806, -221.648, 0.36 ) }
    dend_43 { pt3dadd( 251.485, 240.457, -223.804, 0.36 ) }
    dend_43 { pt3dadd( 252.768, 243.926, -226.321, 0.84 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 69/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 20.4125, -4.32801, -18.6505, 0.84 ) }
    dend_38 { pt3dadd( 22.6266, -5.71282, -18.2609, 0.84 ) }
    dend_38 { pt3dadd( 24.2427, -6.84745, -18.0631, 0.84 ) }
    dend_38 { pt3dadd( 26.8298, -8.7702, -17.933, 0.6 ) }
    dend_38 { pt3dadd( 28.6404, -10.1662, -17.9158, 0.6 ) }
    dend_38 { pt3dadd( 31.1581, -12.2137, -18.0147, 0.6 ) }
    dend_38 { pt3dadd( 32.8012, -13.5931, -18.1265, 0.48 ) }
    dend_38 { pt3dadd( 34.5546, -15.1152, -18.371, 0.48 ) }
    dend_38 { pt3dadd( 36.2436, -16.6468, -18.6482, 0.48 ) }
    dend_38 { pt3dadd( 38.0773, -18.3909, -18.95, 0.84 ) }
    dend_38 { pt3dadd( 39.5698, -19.7687, -19.1796, 0.72 ) }
    dend_38 { pt3dadd( 41.2449, -21.2475, -19.362, 0.72 ) }
    dend_38 { pt3dadd( 43.795, -23.3398, -19.4597, 0.72 ) }
    dend_38 { pt3dadd( 44.6709, -24.0512, -19.4095, 0.6 ) }
    dend_38 { pt3dadd( 45.9269, -25.0769, -19.262, 0.6 ) }
    dend_38 { pt3dadd( 48.6266, -27.3289, -18.8968, 0.84 ) }
    dend_38 { pt3dadd( 50.2789, -28.7501, -18.6468, 0.48 ) }
    dend_38 { pt3dadd( 52.3527, -30.6066, -18.4626, 0.48 ) }
    dend_38 { pt3dadd( 55.2729, -33.3232, -18.3634, 0.48 ) }
    dend_38 { pt3dadd( 56.7007, -34.6364, -18.3627, 0.48 ) }
    dend_38 { pt3dadd( 58.8773, -36.6105, -18.4224, 0.84 ) }
    dend_38 { pt3dadd( 60.9526, -38.4647, -18.5026, 0.84 ) }
    dend_38 { pt3dadd( 64.4147, -41.5061, -18.6922, 0.84 ) }
    dend_38 { pt3dadd( 67.2019, -43.9155, -18.8439, 0.72 ) }
    dend_38 { pt3dadd( 69.7233, -46.0405, -18.9737, 0.6 ) }
    dend_38 { pt3dadd( 72.7608, -48.557, -19.0642, 0.6 ) }
    dend_38 { pt3dadd( 74.6638, -50.0875, -19.0616, 0.6 ) }
    dend_38 { pt3dadd( 76.1995, -51.3129, -19.0268, 0.48 ) }
    dend_38 { pt3dadd( 78.2917, -52.9901, -18.9012, 0.48 ) }
    dend_38 { pt3dadd( 79.6193, -54.0353, -18.8439, 0.48 ) }
    dend_38 { pt3dadd( 81.3884, -55.4366, -18.8027, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_38 { pt3dadd( 83.5165, -57.1123, -18.7698, 0.48 ) }
    dend_38 { pt3dadd( 85.1878, -58.3532, -18.7545, 0.36 ) }
    dend_38 { pt3dadd( 86.7486, -59.41, -18.7451, 0.36 ) }
    dend_38 { pt3dadd( 88.414, -60.4093, -18.6446, 0.36 ) }
    dend_38 { pt3dadd( 89.9611, -61.2206, -18.484, 0.36 ) }
    dend_38 { pt3dadd( 90.3906, -61.4162, -18.4119, 0.36 ) }
    dend_38 { pt3dadd( 92.2291, -62.1846, -18.0006, 0.36 ) }
    dend_38 { pt3dadd( 94.8701, -63.2162, -17.3093, 0.24 ) }
    dend_38 { pt3dadd( 98.0384, -64.5155, -16.4272, 0.24 ) }
    dend_38 { pt3dadd( 99.5566, -65.1951, -15.9897, 0.24 ) }
    dend_38 { pt3dadd( 100.918, -65.8622, -15.6004, 0.72 ) }
    dend_38 { pt3dadd( 102.739, -66.8789, -15.0957, 0.36 ) }
    dend_38 { pt3dadd( 104.308, -67.9534, -14.6808, 0.36 ) }
    dend_38 { pt3dadd( 106.011, -69.3916, -14.2902, 0.72 ) }
    dend_38 { pt3dadd( 106.99, -70.4033, -14.1381, 0.48 ) }
    dend_38 { pt3dadd( 108.057, -71.6286, -13.9964, 0.84 ) }
    dend_38 { pt3dadd( 108.87, -72.6127, -13.92, 0.48 ) }
    dend_38 { pt3dadd( 110.075, -74.1136, -13.8046, 0.84 ) }
    dend_38 { pt3dadd( 110.73, -74.9072, -13.7442, 0.48 ) }
    dend_38 { pt3dadd( 111.935, -76.2606, -13.5998, 0.96 ) }
    dend_38 { pt3dadd( 113.073, -77.4354, -13.4441, 0.36 ) }
    dend_38 { pt3dadd( 114.491, -78.8442, -13.2574, 0.36 ) }
    dend_38 { pt3dadd( 115.446, -79.7403, -13.1225, 0.36 ) }
    dend_38 { pt3dadd( 117.567, -81.649, -12.8013, 0.84 ) }
    dend_38 { pt3dadd( 118.671, -82.588, -12.6545, 0.48 ) }
    dend_38 { pt3dadd( 120.68, -84.2598, -12.3823, 0.48 ) }
    dend_38 { pt3dadd( 123.267, -86.4027, -12.0235, 0.48 ) }
    dend_38 { pt3dadd( 124.658, -87.5379, -11.8339, 0.48 ) }
    dend_38 { pt3dadd( 124.797, -87.6513, -11.8161, 0.48 ) }
    dend_38 { pt3dadd( 129.103, -91.2826, -11.3532, 0.72 ) }
    // Section: dend_32, id: dend_32, parent: dend_20 (entry count 30/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.80837, 18.1619, 4.49496, 0.6 ) }
    dend_32 { pt3dadd( -10.6608, 19.272, 5.98279, 0.6 ) }
    dend_32 { pt3dadd( -11.359, 20.0747, 7.0395, 0.6 ) }
    dend_32 { pt3dadd( -12.2379, 21.122, 8.28674, 0.6 ) }
    dend_32 { pt3dadd( -12.7924, 21.7646, 8.96069, 0.48 ) }
    dend_32 { pt3dadd( -13.2399, 22.259, 9.43269, 0.48 ) }
    dend_32 { pt3dadd( -13.9462, 23.0393, 10.1775, 0.48 ) }
    dend_32 { pt3dadd( -15.267, 24.3649, 11.3168, 0.24 ) }
    dend_32 { pt3dadd( -15.9145, 24.9834, 11.7622, 0.24 ) }
    dend_32 { pt3dadd( -16.788, 25.8251, 12.2372, 0.12 ) }
    dend_32 { pt3dadd( -17.3512, 26.3406, 12.5345, 0.12 ) }
    dend_32 { pt3dadd( -21.4296, 29.9797, 15.6729, 0.12 ) }
    dend_32 { pt3dadd( -26.2922, 33.5698, 17.467, 0.12 ) }
    dend_32 { pt3dadd( -31.2673, 36.577, 19.8287, 0.12 ) }
    dend_32 { pt3dadd( -35.6719, 39.6718, 23.0553, 0.12 ) }
    dend_32 { pt3dadd( -39.6803, 43.5589, 26.0094, 0.12 ) }
    dend_32 { pt3dadd( -43.9242, 46.8301, 29.2924, 0.12 ) }
    dend_32 { pt3dadd( -48.0581, 50.3413, 32.4895, 0.12 ) }
    dend_32 { pt3dadd( -51.4798, 54.4288, 35.8961, 0.12 ) }
    dend_32 { pt3dadd( -55.7183, 57.0675, 39.665, 0.12 ) }
    dend_32 { pt3dadd( -59.601, 60.1723, 43.493, 0.12 ) }
    dend_32 { pt3dadd( -64.59, 61.714, 46.8773, 0.12 ) }
    dend_32 { pt3dadd( -69.6046, 64.2843, 49.5942, 0.12 ) }
    dend_32 { pt3dadd( -74.0299, 67.677, 52.5071, 0.12 ) }
    dend_32 { pt3dadd( -78.5121, 71.0958, 55.3038, 0.12 ) }
    dend_32 { pt3dadd( -82.046, 74.9031, 58.8859, 0.12 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -9.80837, 18.1619, 4.49496, 0.72 ) }
    dend_21 { pt3dadd( -11.611, 15.6095, 6.15907, 0.72 ) }
    dend_21 { pt3dadd( -12.3006, 14.6632, 6.65744, 0.72 ) }
    dend_21 { pt3dadd( -13.0728, 13.6277, 7.18954, 0.6 ) }
    dend_21 { pt3dadd( -13.4889, 13.0696, 7.47628, 0.6 ) }
    dend_21 { pt3dadd( -15.2297, 10.7351, 8.67585, 0.6 ) }
    dend_21 { pt3dadd( -16.0613, 9.61986, 9.24891, 0.6 ) }
    dend_21 { pt3dadd( -17.8466, 7.38183, 10.3437, 0.6 ) }
    dend_21 { pt3dadd( -18.5429, 6.62629, 10.7618, 0.6 ) }
    // Section: dend_15, id: dend_15, parent: dend_1 (entry count 65/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.68045, 23.0651, -0.140084, 0.72 ) }
    dend_15 { pt3dadd( -4.3763, 25.8622, 0.450112, 0.72 ) }
    dend_15 { pt3dadd( -2.54621, 29.9683, 1.23347, 0.6 ) }
    dend_15 { pt3dadd( -0.655428, 34.5263, 2.02236, 0.6 ) }
    dend_15 { pt3dadd( 0.467641, 37.3378, 2.44669, 0.6 ) }
    dend_15 { pt3dadd( 2.08474, 41.5382, 3.04196, 0.6 ) }
    dend_15 { pt3dadd( 3.24567, 44.7554, 3.45842, 0.6 ) }
    dend_15 { pt3dadd( 4.35403, 48.2555, 3.8403, 0.6 ) }
    dend_15 { pt3dadd( 4.97619, 50.4683, 4.03884, 0.6 ) }
    dend_15 { pt3dadd( 6.04245, 54.2684, 4.51141, 0.6 ) }
    dend_15 { pt3dadd( 7.14941, 58.1664, 5.22326, 0.6 ) }
    dend_15 { pt3dadd( 8.18747, 61.8109, 5.98706, 0.48 ) }
    dend_15 { pt3dadd( 8.95978, 64.5238, 6.65832, 0.48 ) }
    dend_15 { pt3dadd( 10.2705, 69.1229, 7.91655, 0.48 ) }
    dend_15 { pt3dadd( 11.8365, 74.5156, 9.4493, 0.48 ) }
    dend_15 { pt3dadd( 14.0167, 81.9453, 11.6096, 0.48 ) }
    dend_15 { pt3dadd( 15.008, 85.2581, 12.5978, 0.48 ) }
    dend_15 { pt3dadd( 15.7415, 87.5942, 13.3048, 0.48 ) }
    dend_15 { pt3dadd( 16.5573, 90.2066, 14.0913, 0.48 ) }
    dend_15 { pt3dadd( 17.5108, 93.2725, 14.9259, 0.48 ) }
    dend_15 { pt3dadd( 18.0549, 95.224, 15.307, 0.48 ) }
    dend_15 { pt3dadd( 18.9239, 97.9066, 15.6174, 0.48 ) }
    dend_15 { pt3dadd( 19.5066, 99.518, 15.8367, 0.48 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 88/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.68045, 23.0651, -0.140084, 2.17 ) }
    dend_2 { pt3dadd( -6.06412, 29.1136, -1.9686, 2.17 ) }
    dend_2 { pt3dadd( -6.19976, 31.2519, -2.61503, 1.81 ) }
    dend_2 { pt3dadd( -6.30476, 32.9071, -3.11543, 1.81 ) }
    dend_2 { pt3dadd( -6.47575, 35.6027, -3.93034, 2.65 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 93/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 30.7728, -39.9251, -7.82541, 0.72 ) }
    dend_53 { pt3dadd( 31.6945, -43.2344, -11.1317, 0.72 ) }
    dend_53 { pt3dadd( 32.5343, -45.2308, -13.3059, 0.72 ) }
    dend_53 { pt3dadd( 33.4108, -47.0087, -15.3524, 0.72 ) }
    dend_53 { pt3dadd( 34.2202, -48.6889, -17.2133, 0.72 ) }
    dend_53 { pt3dadd( 35.0659, -50.576, -19.2711, 0.72 ) }
    dend_53 { pt3dadd( 36.1492, -53.3292, -22.0993, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_53 { pt3dadd( 36.8177, -55.1602, -23.7682, 1.08 ) }
    dend_53 { pt3dadd( 37.4416, -56.9109, -25.2965, 1.08 ) }
    dend_53 { pt3dadd( 37.8964, -58.7688, -26.7858, 0.48 ) }
    dend_53 { pt3dadd( 38.0406, -59.9351, -27.5991, 0.48 ) }
    dend_53 { pt3dadd( 38.1256, -62.2397, -28.9579, 0.48 ) }
    dend_53 { pt3dadd( 38.1836, -63.4045, -29.7222, 0.48 ) }
    dend_53 { pt3dadd( 38.2774, -65.0302, -31.0339, 0.96 ) }
    dend_53 { pt3dadd( 38.4389, -67.0648, -32.8754, 0.6 ) }
    dend_53 { pt3dadd( 38.7558, -68.8516, -34.8319, 0.48 ) }
    dend_53 { pt3dadd( 39.0392, -70.0762, -36.309, 0.48 ) }
    dend_53 { pt3dadd( 40.395, -75.1227, -43.1009, 0.48 ) }
    dend_53 { pt3dadd( 40.8448, -76.5502, -45.2693, 0.36 ) }
    dend_53 { pt3dadd( 41.1265, -77.4225, -46.7558, 0.36 ) }
    dend_53 { pt3dadd( 41.7662, -79.6759, -50.8413, 0.36 ) }
    dend_53 { pt3dadd( 41.9878, -80.7576, -52.8256, 0.36 ) }
    dend_53 { pt3dadd( 42.2031, -82.8972, -56.7579, 0.36 ) }
    dend_53 { pt3dadd( 42.4056, -84.6653, -60.0058, 0.36 ) }
    dend_53 { pt3dadd( 42.7848, -86.3607, -62.9634, 0.36 ) }
    dend_53 { pt3dadd( 43.1284, -87.3393, -64.682, 0.36 ) }
    dend_53 { pt3dadd( 43.4751, -88.1072, -65.9389, 0.36 ) }
    dend_53 { pt3dadd( 43.9245, -88.9204, -67.2209, 0.36 ) }
    dend_53 { pt3dadd( 48.1172, -96.0742, -77.2585, 0.36 ) }
    dend_53 { pt3dadd( 49.3567, -98.1785, -80.0122, 0.36 ) }
    dend_53 { pt3dadd( 50.8709, -100.717, -83.3151, 0.36 ) }
    dend_53 { pt3dadd( 52.4107, -103.325, -86.9792, 0.36 ) }
    dend_53 { pt3dadd( 52.77, -104.357, -88.2869, 0.36 ) }
    dend_53 { pt3dadd( 52.9957, -107.03, -91.1957, 0.36 ) }
    dend_53 { pt3dadd( 52.4157, -110.371, -94.6469, 0.36 ) }
    dend_53 { pt3dadd( 51.9187, -112.458, -96.9209, 0.36 ) }
    dend_53 { pt3dadd( 51.0754, -115.884, -100.532, 0.36 ) }
    dend_53 { pt3dadd( 49.2495, -124.669, -109.329, 0.36 ) }
    dend_53 { pt3dadd( 48.9403, -127.075, -111.605, 0.36 ) }
    dend_53 { pt3dadd( 48.6482, -135.118, -119.024, 0.36 ) }
    dend_53 { pt3dadd( 48.8301, -138.544, -122.023, 0.36 ) }
    dend_53 { pt3dadd( 49.2396, -141.412, -124.453, 0.36 ) }
    dend_53 { pt3dadd( 49.9105, -144.417, -126.907, 0.36 ) }
    dend_53 { pt3dadd( 50.6876, -146.878, -129.038, 0.36 ) }
    dend_53 { pt3dadd( 52.3087, -152.516, -133.666, 0.36 ) }
    dend_53 { pt3dadd( 53.2359, -156.993, -136.751, 0.36 ) }
    dend_53 { pt3dadd( 53.7601, -160.754, -139.288, 0.36 ) }
    dend_53 { pt3dadd( 53.9653, -163.796, -141.456, 0.36 ) }
    dend_53 { pt3dadd( 53.9011, -165.983, -143.217, 0.36 ) }
    dend_53 { pt3dadd( 53.7023, -167.46, -144.471, 0.36 ) }
    dend_53 { pt3dadd( 52.9408, -170.93, -147.557, 0.36 ) }
    dend_53 { pt3dadd( 52.3895, -172.875, -149.451, 0.36 ) }
    dend_53 { pt3dadd( 50.9926, -176.961, -153.991, 0.36 ) }
    dend_53 { pt3dadd( 49.3466, -181.274, -159.322, 0.36 ) }
    dend_53 { pt3dadd( 48.3668, -183.788, -162.587, 0.36 ) }
    dend_53 { pt3dadd( 47.6896, -185.71, -165.346, 0.36 ) }
    dend_53 { pt3dadd( 47.3435, -186.834, -167.145, 0.36 ) }
    dend_53 { pt3dadd( 47.0214, -188.611, -170.074, 0.36 ) }
    dend_53 { pt3dadd( 47.0296, -189.686, -171.708, 0.36 ) }
    dend_53 { pt3dadd( 47.2285, -191.287, -174.026, 0.36 ) }
    dend_53 { pt3dadd( 48.0322, -195.141, -179.926, 0.36 ) }
    dend_53 { pt3dadd( 48.3678, -196.373, -181.851, 0.36 ) }
    dend_53 { pt3dadd( 49.3593, -199.283, -186.44, 0.36 ) }
    dend_53 { pt3dadd( 50.3333, -201.677, -190.041, 0.36 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 57/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 30.7728, -39.9251, -7.82541, 0.6 ) }
    dend_52 { pt3dadd( 33.482, -42.0237, -7.97545, 0.6 ) }
    dend_52 { pt3dadd( 36.4044, -44.6065, -8.32058, 0.6 ) }
    dend_52 { pt3dadd( 38.5169, -46.6028, -8.65738, 0.48 ) }
    dend_52 { pt3dadd( 41.5346, -49.4577, -9.16487, 0.84 ) }
    dend_52 { pt3dadd( 43.5336, -51.3261, -9.49347, 0.84 ) }
    dend_52 { pt3dadd( 45.3375, -53.0246, -9.77792, 0.72 ) }
    dend_52 { pt3dadd( 48.1786, -55.8742, -10.1842, 0.72 ) }
    dend_52 { pt3dadd( 49.8972, -57.6606, -10.3451, 0.72 ) }
    dend_52 { pt3dadd( 51.278, -59.0892, -10.4321, 1.2 ) }
    dend_52 { pt3dadd( 53.0493, -60.8036, -10.477, 0.84 ) }
    dend_52 { pt3dadd( 54.9295, -62.5086, -10.5773, 0.84 ) }
    dend_52 { pt3dadd( 56.7654, -64.1298, -10.6963, 0.6 ) }
    dend_52 { pt3dadd( 59.1401, -66.1284, -10.8264, 0.6 ) }
    dend_52 { pt3dadd( 60.2821, -67.0707, -10.9107, 0.6 ) }
    dend_52 { pt3dadd( 62.7564, -69.1496, -11.1565, 0.96 ) }
    dend_52 { pt3dadd( 65.8029, -71.7026, -11.5019, 0.72 ) }
    dend_52 { pt3dadd( 67.6521, -73.248, -11.738, 0.48 ) }
    dend_52 { pt3dadd( 69.2837, -74.6271, -11.9685, 1.33 ) }
    dend_52 { pt3dadd( 71.4754, -76.5481, -12.1788, 0.72 ) }
    dend_52 { pt3dadd( 73.8903, -78.7443, -12.2444, 0.6 ) }
    dend_52 { pt3dadd( 75.5052, -80.265, -12.275, 0.48 ) }
    dend_52 { pt3dadd( 76.4883, -81.1872, -12.2788, 0.48 ) }
    dend_52 { pt3dadd( 77.4003, -82.0003, -12.29, 0.36 ) }
    dend_52 { pt3dadd( 79.258, -83.6362, -12.326, 0.24 ) }
    dend_52 { pt3dadd( 81.2997, -85.368, -12.3127, 0.96 ) }
    dend_52 { pt3dadd( 86.2204, -89.3369, -12.1456, 0.24 ) }
    dend_52 { pt3dadd( 88.5322, -91.1729, -11.9172, 1.57 ) }
    dend_52 { pt3dadd( 92.7439, -94.5629, -11.2687, 0.36 ) }
    dend_52 { pt3dadd( 93.9926, -95.6019, -11.0202, 0.36 ) }
    dend_52 { pt3dadd( 96.5747, -97.7833, -10.3769, 0.36 ) }
    dend_52 { pt3dadd( 98.7221, -99.671, -9.64825, 1.08 ) }
    dend_52 { pt3dadd( 101.33, -102.147, -8.3733, 0.6 ) }
    dend_52 { pt3dadd( 102.321, -103.196, -7.84362, 0.48 ) }
    dend_52 { pt3dadd( 103.557, -104.701, -7.36375, 0.96 ) }
    dend_52 { pt3dadd( 105.059, -106.714, -7.07504, 0.36 ) }
    dend_52 { pt3dadd( 106.167, -108.351, -7.07934, 0.84 ) }
    dend_52 { pt3dadd( 107.067, -109.713, -7.18263, 0.36 ) }
    dend_52 { pt3dadd( 107.909, -110.991, -7.39674, 0.96 ) }
    dend_52 { pt3dadd( 111.872, -116.96, -8.63172, 0.24 ) }
    dend_52 { pt3dadd( 113.8, -119.984, -9.38335, 0.24 ) }
    dend_52 { pt3dadd( 114.624, -121.376, -9.80611, 1.69 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 99/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 70.8054, -119.925, 86.6564, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_50 { pt3dadd( 74.0702, -126.378, 92.0213, 0.24 ) }
    dend_50 { pt3dadd( 76.94, -132.824, 97.6152, 0.24 ) }
    dend_50 { pt3dadd( 79.1491, -139.153, 103.616, 0.24 ) }
    dend_50 { pt3dadd( 80.8324, -145.229, 110.015, 0.24 ) }
    dend_50 { pt3dadd( 82.377, -150.636, 116.972, 0.24 ) }
    dend_50 { pt3dadd( 84.4144, -157.391, 122.6, 0.24 ) }
    dend_50 { pt3dadd( 87.3786, -163.556, 128.429, 0.24 ) }
    dend_50 { pt3dadd( 89.9251, -170.329, 133.824, 0.24 ) }
    dend_50 { pt3dadd( 93.944, -176.7, 138.75, 0.24 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 9/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 70.8054, -119.925, 86.6564, 0.24 ) }
    dend_47 { pt3dadd( 75.0451, -126.347, 92.7234, 0.24 ) }
    dend_47 { pt3dadd( 79.4572, -132.032, 99.3178, 0.24 ) }
    dend_47 { pt3dadd( 83.1582, -137.224, 106.668, 0.24 ) }
    dend_47 { pt3dadd( 87.2474, -141.443, 114.383, 0.24 ) }
    dend_47 { pt3dadd( 90.4409, -147.064, 121.676, 0.24 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 15/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 129.103, -91.2826, -11.3532, 0.24 ) }
    dend_40 { pt3dadd( 133.261, -92.2152, -16.3391, 0.24 ) }
    dend_40 { pt3dadd( 134.612, -92.5656, -17.8276, 0.24 ) }
    dend_40 { pt3dadd( 138.793, -93.7294, -22.2408, 0.24 ) }
    dend_40 { pt3dadd( 140.828, -94.3634, -24.3206, 0.24 ) }
    dend_40 { pt3dadd( 143.008, -95.0989, -26.3879, 0.24 ) }
    dend_40 { pt3dadd( 145.108, -95.8395, -28.2961, 0.24 ) }
    dend_40 { pt3dadd( 146.578, -96.416, -29.4285, 0.24 ) }
    dend_40 { pt3dadd( 147.629, -96.8672, -30.1941, 0.24 ) }
    dend_40 { pt3dadd( 149.09, -97.557, -31.0891, 0.24 ) }
    dend_40 { pt3dadd( 151.538, -98.7752, -32.5375, 0.24 ) }
    dend_40 { pt3dadd( 154.267, -100.239, -34.0947, 0.24 ) }
    dend_40 { pt3dadd( 156.034, -101.225, -35.1326, 0.24 ) }
    dend_40 { pt3dadd( 157.215, -101.85, -35.7926, 0.24 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 29/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 129.103, -91.2826, -11.3532, 0.24 ) }
    dend_39 { pt3dadd( 131.159, -93.9379, -10.9254, 0.24 ) }
    dend_39 { pt3dadd( 133.853, -97.4594, -10.2591, 0.24 ) }
    dend_39 { pt3dadd( 135.742, -100.09, -10.0758, 0.24 ) }
    dend_39 { pt3dadd( 138.502, -104.617, -10.8773, 0.24 ) }
    dend_39 { pt3dadd( 139.843, -107.24, -11.7648, 0.24 ) }
    dend_39 { pt3dadd( 140.579, -108.866, -12.4268, 0.24 ) }
    dend_39 { pt3dadd( 141.566, -111.513, -13.8668, 0.24 ) }
    dend_39 { pt3dadd( 143.153, -116.944, -17.4488, 0.24 ) }
    dend_39 { pt3dadd( 145.0, -124.696, -23.2746, 0.24 ) }
    dend_39 { pt3dadd( 145.616, -127.749, -25.7556, 0.24 ) }
    dend_39 { pt3dadd( 145.843, -128.836, -26.6603, 0.24 ) }
    dend_39 { pt3dadd( 146.5, -131.686, -28.9986, 0.24 ) }
    dend_39 { pt3dadd( 146.96, -133.345, -30.3122, 0.24 ) }
    dend_39 { pt3dadd( 148.563, -137.795, -33.1932, 0.24 ) }
    dend_39 { pt3dadd( 149.306, -139.298, -33.963, 0.24 ) }
    dend_39 { pt3dadd( 151.168, -142.296, -35.5912, 0.24 ) }
    dend_39 { pt3dadd( 152.331, -143.851, -36.4607, 0.24 ) }
    dend_39 { pt3dadd( 153.279, -144.937, -37.0587, 0.24 ) }
    dend_39 { pt3dadd( 155.287, -146.949, -38.193, 0.24 ) }
    dend_39 { pt3dadd( 157.058, -148.605, -39.1169, 0.24 ) }
    dend_39 { pt3dadd( 161.358, -152.528, -41.3592, 0.24 ) }
    dend_39 { pt3dadd( 164.312, -155.117, -42.8423, 0.24 ) }
    dend_39 { pt3dadd( 166.985, -157.374, -44.1803, 0.24 ) }
    dend_39 { pt3dadd( 168.993, -159.008, -45.1662, 0.24 ) }
    dend_39 { pt3dadd( 171.741, -161.121, -46.4941, 0.24 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 55/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -82.046, 74.9031, 58.8859, 0.12 ) }
    dend_34 { pt3dadd( -87.0019, 80.2578, 65.6121, 0.12 ) }
    dend_34 { pt3dadd( -90.7816, 86.6649, 72.26, 0.12 ) }
    dend_34 { pt3dadd( -94.0951, 93.4714, 78.7928, 0.12 ) }
    dend_34 { pt3dadd( -97.152, 98.7716, 86.5931, 0.12 ) }
    dend_34 { pt3dadd( -99.3644, 105.079, 93.9832, 0.12 ) }
    dend_34 { pt3dadd( -101.357, 109.582, 102.544, 0.12 ) }
    dend_34 { pt3dadd( -103.162, 114.541, 110.913, 0.12 ) }
    dend_34 { pt3dadd( -106.588, 119.724, 118.632, 0.12 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 64/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -82.046, 74.9031, 58.8859, 0.12 ) }
    dend_33 { pt3dadd( -86.8281, 78.0904, 61.5024, 0.12 ) }
    dend_33 { pt3dadd( -90.9399, 81.6291, 64.7546, 0.12 ) }
    dend_33 { pt3dadd( -93.89, 85.4952, 68.8085, 0.12 ) }
    dend_33 { pt3dadd( -96.2885, 89.8198, 72.7983, 0.12 ) }
    dend_33 { pt3dadd( -98.0436, 94.0194, 77.2124, 0.12 ) }
    dend_33 { pt3dadd( -100.012, 98.5468, 81.2277, 0.12 ) }
    dend_33 { pt3dadd( -101.168, 103.305, 85.3059, 0.12 ) }
    dend_33 { pt3dadd( -102.278, 108.454, 88.9422, 0.12 ) }
    // Section: dend_31, id: dend_31, parent: dend_21 (entry count 73/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -18.5429, 6.62629, 10.7618, 0.24 ) }
    dend_31 { pt3dadd( -20.1048, 5.04279, 10.6926, 0.24 ) }
    dend_31 { pt3dadd( -21.2375, 3.95513, 10.6793, 0.24 ) }
    dend_31 { pt3dadd( -22.9555, 2.30542, 10.6592, 0.24 ) }
    dend_31 { pt3dadd( -23.9757, 1.32583, 10.6473, 0.24 ) }
    dend_31 { pt3dadd( -24.596, 0.730156, 10.6401, 0.24 ) }
    dend_31 { pt3dadd( -25.4265, -0.0673312, 10.6304, 0.24 ) }
    dend_31 { pt3dadd( -26.1824, -0.673135, 10.7639, 0.24 ) }
    dend_31 { pt3dadd( -31.2861, -7.27952, 11.38, 0.24 ) }
    dend_31 { pt3dadd( -36.4065, -13.5262, 13.4764, 0.24 ) }
    dend_31 { pt3dadd( -42.485, -18.6845, 15.6958, 0.24 ) }
    dend_31 { pt3dadd( -48.1477, -23.3032, 19.5155, 0.24 ) }
    dend_31 { pt3dadd( -53.4455, -28.9533, 22.5123, 0.24 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 86/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -18.5429, 6.62629, 10.7618, 0.6 ) }
    dend_22 { pt3dadd( -20.8162, 6.02245, 11.2209, 0.6 ) }
    dend_22 { pt3dadd( -23.5138, 5.56793, 11.964, 0.6 ) }
    dend_22 { pt3dadd( -24.944, 5.43659, 12.3802, 0.6 ) }
    dend_22 { pt3dadd( -25.9621, 5.39803, 12.6689, 0.6 ) }
    dend_22 { pt3dadd( -28.1163, 5.38969, 13.227, 0.48 ) }
    dend_22 { pt3dadd( -31.8429, 5.37528, 14.1926, 0.48 ) }
    dend_22 { pt3dadd( -33.9445, 5.44358, 14.8074, 0.48 ) }
    dend_22 { pt3dadd( -36.2355, 5.63415, 15.5038, 0.48 ) }
    dend_22 { pt3dadd( -37.9827, 5.8714, 16.0612, 0.48 ) }
    dend_22 { pt3dadd( -40.3958, 6.35596, 16.8293, 0.48 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 97/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 19.5066, 99.518, 15.8367, 0.36 ) }
    dend_19 { pt3dadd( 21.5154, 104.324, 10.8758, 0.36 ) }
    dend_19 { pt3dadd( 22.2942, 106.187, 8.95255, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_19 { pt3dadd( 24.4103, 111.249, 3.72662, 0.36 ) }
    dend_19 { pt3dadd( 30.7978, 119.96, -5.84031, 0.36 ) }
    dend_19 { pt3dadd( 37.9049, 128.81, -14.7621, 0.36 ) }
    dend_19 { pt3dadd( 45.6928, 137.461, -23.2886, 0.36 ) }
    dend_19 { pt3dadd( 55.0106, 146.386, -29.7948, 0.36 ) }
    dend_19 { pt3dadd( 62.6078, 155.977, -37.5365, 0.36 ) }
    dend_19 { pt3dadd( 68.1703, 165.846, -46.5717, 0.36 ) }
    dend_19 { pt3dadd( 71.3321, 175.839, -56.5881, 0.36 ) }
    dend_19 { pt3dadd( 76.3315, 183.575, -67.6369, 0.36 ) }
    dend_19 { pt3dadd( 82.4761, 190.161, -78.7997, 0.36 ) }
    dend_19 { pt3dadd( 90.8383, 196.802, -88.3821, 0.36 ) }
    dend_19 { pt3dadd( 100.536, 203.111, -96.8533, 0.36 ) }
    dend_19 { pt3dadd( 110.107, 207.704, -106.431, 0.36 ) }
    dend_19 { pt3dadd( 121.779, 209.229, -114.507, 0.36 ) }
    dend_19 { pt3dadd( 134.103, 208.79, -121.729, 0.36 ) }
    dend_19 { pt3dadd( 144.691, 207.935, -131.303, 0.36 ) }
    dend_19 { pt3dadd( 153.902, 204.716, -141.843, 0.36 ) }
    dend_19 { pt3dadd( 164.994, 204.549, -150.849, 0.36 ) }
    dend_19 { pt3dadd( 176.905, 203.597, -158.704, 0.36 ) }
    dend_19 { pt3dadd( 187.115, 203.176, -168.7, 0.36 ) }
    dend_19 { pt3dadd( 198.845, 205.115, -176.6, 0.36 ) }
    dend_19 { pt3dadd( 210.938, 208.367, -183.468, 0.36 ) }
    dend_19 { pt3dadd( 222.938, 209.585, -191.105, 0.36 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 23/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 19.5066, 99.518, 15.8367, 0.36 ) }
    dend_16 { pt3dadd( 20.3059, 102.676, 16.7193, 0.36 ) }
    dend_16 { pt3dadd( 21.0071, 105.447, 17.4935, 0.36 ) }
    dend_16 { pt3dadd( 24.659, 115.427, 18.8412, 0.36 ) }
    dend_16 { pt3dadd( 28.3408, 125.399, 20.1577, 0.36 ) }
    dend_16 { pt3dadd( 33.6091, 134.348, 22.4157, 0.36 ) }
    dend_16 { pt3dadd( 39.5693, 142.543, 25.4316, 0.36 ) }
    dend_16 { pt3dadd( 44.2166, 150.942, 29.9204, 0.36 ) }
    dend_16 { pt3dadd( 49.7027, 159.348, 33.2963, 0.36 ) }
    dend_16 { pt3dadd( 53.9023, 168.707, 36.2157, 0.36 ) }
    dend_16 { pt3dadd( 57.4084, 178.345, 39.2381, 0.36 ) }
    dend_16 { pt3dadd( 61.4096, 186.985, 43.9355, 0.36 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 35/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -6.47575, 35.6027, -3.93034, 1.45 ) }
    dend_8 { pt3dadd( -6.29412, 39.2214, -4.35919, 1.45 ) }
    dend_8 { pt3dadd( -6.37856, 42.7677, -4.74016, 1.45 ) }
    dend_8 { pt3dadd( -6.50507, 45.2903, -4.95465, 1.45 ) }
    dend_8 { pt3dadd( -6.64939, 47.7184, -5.12163, 1.45 ) }
    dend_8 { pt3dadd( -6.87848, 51.51, -5.33991, 1.08 ) }
    dend_8 { pt3dadd( -7.04121, 53.8628, -5.58733, 1.08 ) }
    dend_8 { pt3dadd( -7.5238, 58.5873, -6.24685, 0.96 ) }
    dend_8 { pt3dadd( -7.92636, 62.611, -6.8935, 0.96 ) }
    dend_8 { pt3dadd( -8.19947, 65.8271, -7.44957, 0.96 ) }
    dend_8 { pt3dadd( -8.38891, 69.1578, -8.04454, 0.96 ) }
    dend_8 { pt3dadd( -8.52, 74.7305, -9.0281, 0.96 ) }
    dend_8 { pt3dadd( -8.49648, 79.0197, -9.80089, 0.96 ) }
    dend_8 { pt3dadd( -8.42185, 82.8225, -10.5752, 0.96 ) }
    dend_8 { pt3dadd( -8.41365, 86.5759, -11.5289, 0.96 ) }
    dend_8 { pt3dadd( -8.52869, 90.9375, -12.8043, 0.96 ) }
    dend_8 { pt3dadd( -8.70905, 94.2167, -13.8416, 0.96 ) }
    dend_8 { pt3dadd( -8.97966, 97.4026, -14.9383, 0.96 ) }
    dend_8 { pt3dadd( -9.49849, 101.747, -16.6673, 0.96 ) }
    dend_8 { pt3dadd( -10.3081, 107.142, -19.1724, 0.96 ) }
    dend_8 { pt3dadd( -11.0792, 111.752, -21.3685, 0.96 ) }
    dend_8 { pt3dadd( -11.732, 115.165, -22.9813, 0.96 ) }
    dend_8 { pt3dadd( -12.3332, 118.237, -24.3422, 0.96 ) }
    dend_8 { pt3dadd( -12.8837, 121.453, -25.6137, 0.96 ) }
    dend_8 { pt3dadd( -13.3996, 125.298, -26.8305, 0.96 ) }
    dend_8 { pt3dadd( -13.8199, 129.899, -28.0161, 0.96 ) }
    dend_8 { pt3dadd( -14.0367, 133.124, -28.8391, 0.96 ) }
    dend_8 { pt3dadd( -14.2885, 137.566, -29.8827, 0.96 ) }
    dend_8 { pt3dadd( -14.4999, 142.029, -30.8312, 0.96 ) }
    dend_8 { pt3dadd( -14.6073, 144.411, -31.3279, 0.96 ) }
    dend_8 { pt3dadd( -14.8618, 150.743, -32.5446, 0.96 ) }
    dend_8 { pt3dadd( -14.9728, 154.78, -33.4406, 0.96 ) }
    dend_8 { pt3dadd( -15.0078, 157.948, -34.1013, 0.96 ) }
    dend_8 { pt3dadd( -15.0258, 161.141, -34.7875, 0.96 ) }
    dend_8 { pt3dadd( -15.0386, 164.22, -35.4757, 0.96 ) }
    dend_8 { pt3dadd( -15.0187, 168.221, -36.381, 0.96 ) }
    dend_8 { pt3dadd( -14.9696, 173.944, -37.6016, 0.96 ) }
    dend_8 { pt3dadd( -14.924, 176.454, -38.1692, 0.96 ) }
    dend_8 { pt3dadd( -14.8456, 180.839, -39.3154, 0.96 ) }
    dend_8 { pt3dadd( -14.8321, 182.65, -39.8303, 0.96 ) }
    dend_8 { pt3dadd( -14.8239, 188.435, -41.5571, 1.2 ) }
    dend_8 { pt3dadd( -14.8402, 191.694, -42.5474, 1.08 ) }
    dend_8 { pt3dadd( -14.8669, 194.27, -43.2903, 1.33 ) }
    dend_8 { pt3dadd( -14.8873, 199.117, -44.6383, 1.08 ) }
    dend_8 { pt3dadd( -14.8929, 202.455, -45.4817, 1.08 ) }
    dend_8 { pt3dadd( -14.893, 205.494, -46.2507, 0.96 ) }
    dend_8 { pt3dadd( -14.8884, 206.202, -46.4302, 0.96 ) }
    dend_8 { pt3dadd( -14.8458, 209.169, -47.0949, 0.96 ) }
    dend_8 { pt3dadd( -14.8108, 211.731, -47.5569, 0.96 ) }
    dend_8 { pt3dadd( -14.7073, 215.666, -48.1818, 0.72 ) }
    dend_8 { pt3dadd( -14.605, 218.73, -48.6175, 0.72 ) }
    dend_8 { pt3dadd( -14.4839, 223.294, -49.2397, 0.72 ) }
    dend_8 { pt3dadd( -14.4311, 226.001, -49.6062, 0.96 ) }
    dend_8 { pt3dadd( -14.4126, 228.416, -49.9253, 1.2 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 89/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.47575, 35.6027, -3.93034, 0.72 ) }
    dend_3 { pt3dadd( -10.7975, 37.4877, -6.78803, 0.72 ) }
    dend_3 { pt3dadd( -12.2935, 38.1913, -7.859, 0.72 ) }
    dend_3 { pt3dadd( -13.9083, 38.93, -8.94233, 0.72 ) }
    dend_3 { pt3dadd( -15.2198, 39.535, -9.76061, 0.72 ) }
    dend_3 { pt3dadd( -16.9698, 40.4756, -10.874, 0.6 ) }
    dend_3 { pt3dadd( -19.831, 42.3152, -12.748, 0.6 ) }
    dend_3 { pt3dadd( -21.6569, 43.7324, -13.9167, 0.6 ) }
    dend_3 { pt3dadd( -23.4261, 45.4175, -15.1693, 0.6 ) }
    dend_3 { pt3dadd( -24.3869, 46.4041, -15.9039, 0.36 ) }
    dend_3 { pt3dadd( -26.7172, 48.8579, -17.6903, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_3 { pt3dadd( -28.3761, 50.6481, -18.896, 0.6 ) }
    dend_3 { pt3dadd( -29.8772, 52.1818, -19.8909, 0.6 ) }
    dend_3 { pt3dadd( -30.6982, 52.9692, -20.4343, 0.48 ) }
    dend_3 { pt3dadd( -34.547, 56.6031, -23.1128, 1.08 ) }
    dend_3 { pt3dadd( -35.3343, 57.2571, -23.6467, 0.72 ) }
    dend_3 { pt3dadd( -36.1795, 57.7853, -24.1505, 0.48 ) }
    dend_3 { pt3dadd( -38.4068, 58.8513, -25.404, 0.84 ) }
    dend_3 { pt3dadd( -40.3685, 59.6293, -26.4572, 1.2 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 8/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 90.4409, -147.064, 121.676, 0.24 ) }
    dend_49 { pt3dadd( 92.3618, -152.924, 128.885, 0.24 ) }
    dend_49 { pt3dadd( 93.8448, -157.806, 136.83, 0.24 ) }
    dend_49 { pt3dadd( 93.8555, -162.606, 144.953, 0.24 ) }
    dend_49 { pt3dadd( 94.486, -168.014, 152.689, 0.24 ) }
    dend_49 { pt3dadd( 94.9694, -174.187, 159.889, 0.24 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 14/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 90.4409, -147.064, 121.676, 0.24 ) }
    dend_48 { pt3dadd( 96.2036, -151.327, 127.723, 0.24 ) }
    dend_48 { pt3dadd( 102.175, -156.609, 132.758, 0.24 ) }
    dend_48 { pt3dadd( 108.297, -162.314, 137.164, 0.24 ) }
    dend_48 { pt3dadd( 113.445, -169.613, 140.56, 0.24 ) }
    dend_48 { pt3dadd( 119.966, -175.924, 143.406, 0.24 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 20/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 157.215, -101.85, -35.7926, 0.24 ) }
    dend_42 { pt3dadd( 159.101, -103.198, -36.8478, 0.24 ) }
    dend_42 { pt3dadd( 160.32, -104.122, -37.6538, 0.24 ) }
    dend_42 { pt3dadd( 162.611, -105.91, -39.2196, 0.24 ) }
    dend_42 { pt3dadd( 163.113, -106.295, -39.5536, 0.24 ) }
    dend_42 { pt3dadd( 163.917, -106.891, -40.1045, 0.24 ) }
    dend_42 { pt3dadd( 166.097, -108.524, -41.597, 0.24 ) }
    dend_42 { pt3dadd( 168.188, -110.114, -43.0721, 0.24 ) }
    dend_42 { pt3dadd( 169.007, -110.729, -43.6451, 0.24 ) }
    dend_42 { pt3dadd( 170.609, -111.911, -44.7492, 0.24 ) }
    dend_42 { pt3dadd( 172.479, -113.233, -46.1039, 0.24 ) }
    dend_42 { pt3dadd( 173.688, -114.027, -47.0009, 0.24 ) }
    dend_42 { pt3dadd( 175.141, -114.95, -48.1044, 0.24 ) }
    dend_42 { pt3dadd( 176.651, -115.909, -49.2424, 0.24 ) }
    dend_42 { pt3dadd( 178.283, -116.972, -50.5829, 0.24 ) }
    dend_42 { pt3dadd( 180.148, -118.189, -52.0776, 0.24 ) }
    dend_42 { pt3dadd( 181.293, -118.953, -53.0486, 0.24 ) }
    dend_42 { pt3dadd( 182.496, -119.702, -54.12, 0.24 ) }
    dend_42 { pt3dadd( 183.765, -120.503, -55.2828, 0.24 ) }
    dend_42 { pt3dadd( 186.207, -122.051, -57.556, 0.24 ) }
    dend_42 { pt3dadd( 187.763, -123.05, -58.9621, 0.24 ) }
    dend_42 { pt3dadd( 191.077, -125.213, -61.9041, 0.24 ) }
    dend_42 { pt3dadd( 193.375, -126.659, -63.9992, 0.24 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 43/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 157.215, -101.85, -35.7926, 0.24 ) }
    dend_41 { pt3dadd( 158.559, -105.172, -34.0449, 0.24 ) }
    dend_41 { pt3dadd( 159.569, -107.668, -32.7315, 0.24 ) }
    dend_41 { pt3dadd( 160.717, -110.505, -31.2385, 0.24 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 47/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -40.3958, 6.35596, 16.8293, 0.24 ) }
    dend_24 { pt3dadd( -42.4578, 5.70706, 15.9224, 0.24 ) }
    dend_24 { pt3dadd( -44.7025, 5.15933, 14.9914, 0.24 ) }
    dend_24 { pt3dadd( -45.8869, 4.87033, 14.5001, 0.24 ) }
    dend_24 { pt3dadd( -48.2335, 4.29773, 13.5268, 0.24 ) }
    dend_24 { pt3dadd( -50.6068, 3.71864, 12.5425, 0.24 ) }
    dend_24 { pt3dadd( -52.6263, 3.22586, 11.7049, 0.24 ) }
    dend_24 { pt3dadd( -53.749, 2.95496, 11.2993, 0.24 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 55/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -40.3958, 6.35596, 16.8293, 0.48 ) }
    dend_23 { pt3dadd( -41.442, 5.10111, 16.8264, 0.48 ) }
    dend_23 { pt3dadd( -42.2219, 4.16564, 16.8242, 0.48 ) }
    dend_23 { pt3dadd( -43.2643, 2.91547, 16.8213, 0.24 ) }
    dend_23 { pt3dadd( -44.8011, 1.07213, 16.817, 0.24 ) }
    dend_23 { pt3dadd( -47.5968, -2.28103, 16.8092, 0.24 ) }
    dend_23 { pt3dadd( -53.9069, -10.0639, 15.7872, 0.24 ) }
    dend_23 { pt3dadd( -61.5935, -16.129, 13.9233, 0.24 ) }
    dend_23 { pt3dadd( -70.5198, -20.3475, 13.0978, 0.24 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 61.4096, 186.985, 43.9355, 0.24 ) }
    dend_18 { pt3dadd( 67.9344, 189.73, 53.7659, 0.24 ) }
    dend_18 { pt3dadd( 74.0199, 190.358, 64.1681, 0.24 ) }
    dend_18 { pt3dadd( 81.545, 189.558, 73.5464, 0.24 ) }
    dend_18 { pt3dadd( 86.5096, 191.06, 84.4664, 0.24 ) }
    dend_18 { pt3dadd( 90.837, 190.826, 95.7208, 0.24 ) }
    dend_18 { pt3dadd( 96.5208, 191.28, 106.355, 0.24 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 71/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 61.4096, 186.985, 43.9355, 0.24 ) }
    dend_17 { pt3dadd( 63.568, 196.409, 43.0688, 0.24 ) }
    dend_17 { pt3dadd( 66.5634, 205.562, 42.1172, 0.24 ) }
    dend_17 { pt3dadd( 69.5346, 214.443, 39.8672, 0.24 ) }
    // Section: dend_14, id: dend_14, parent: dend_8 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -14.4126, 228.416, -49.9253, 0.84 ) }
    dend_14 { pt3dadd( -14.1079, 232.677, -50.9485, 0.84 ) }
    dend_14 { pt3dadd( -13.9445, 235.473, -51.5381, 0.84 ) }
    dend_14 { pt3dadd( -13.7146, 239.551, -52.3192, 0.72 ) }
    dend_14 { pt3dadd( -13.5571, 242.321, -52.859, 0.6 ) }
    dend_14 { pt3dadd( -13.195, 249.442, -54.2116, 0.84 ) }
    dend_14 { pt3dadd( -13.0391, 252.922, -54.8463, 0.84 ) }
    dend_14 { pt3dadd( -12.9514, 256.344, -55.3936, 0.6 ) }
    dend_14 { pt3dadd( -12.9192, 259.086, -55.8443, 0.6 ) }
    dend_14 { pt3dadd( -12.9336, 261.708, -56.2735, 0.6 ) }
    dend_14 { pt3dadd( -13.0364, 265.583, -56.9678, 0.6 ) }
    dend_14 { pt3dadd( -13.2683, 270.845, -58.0261, 0.6 ) }
    dend_14 { pt3dadd( -13.5572, 275.873, -59.0436, 0.6 ) }
    dend_14 { pt3dadd( -13.7334, 278.559, -59.5565, 0.6 ) }
    dend_14 { pt3dadd( -14.0078, 282.301, -60.2044, 0.6 ) }
    dend_14 { pt3dadd( -14.4403, 287.823, -61.0727, 0.6 ) }
    dend_14 { pt3dadd( -14.7597, 291.935, -61.6834, 0.6 ) }
    dend_14 { pt3dadd( -15.1106, 296.634, -62.354, 0.6 ) }
    dend_14 { pt3dadd( -15.3371, 300.098, -62.8539, 0.48 ) }
    dend_14 { pt3dadd( -15.6064, 303.86, -63.4166, 0.48 ) }
    dend_14 { pt3dadd( -15.8593, 306.895, -63.8616, 0.48 ) }
    dend_14 { pt3dadd( -16.1323, 309.598, -64.2344, 0.36 ) }
    dend_14 { pt3dadd( -16.7715, 314.459, -65.0506, 0.36 ) }
    dend_14 { pt3dadd( -17.4107, 318.668, -65.8371, 0.36 ) }
    dend_14 { pt3dadd( -18.0287, 322.373, -66.6481, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -18.6073, 325.734, -67.4023, 0.36 ) }
    dend_14 { pt3dadd( -19.2941, 330.002, -68.3586, 0.36 ) }
    dend_14 { pt3dadd( -20.2375, 336.144, -69.7122, 0.36 ) }
    dend_14 { pt3dadd( -20.7146, 339.607, -70.439, 0.36 ) }
    dend_14 { pt3dadd( -21.2365, 344.228, -71.3577, 0.36 ) }
    dend_14 { pt3dadd( -21.5853, 348.604, -72.2122, 0.36 ) }
    dend_14 { pt3dadd( -21.8702, 353.99, -73.1963, 0.36 ) }
    dend_14 { pt3dadd( -22.0101, 358.02, -73.9313, 0.36 ) }
    dend_14 { pt3dadd( -22.074, 360.093, -74.2842, 0.36 ) }
    dend_14 { pt3dadd( -22.2291, 365.62, -75.215, 0.36 ) }
    dend_14 { pt3dadd( -22.343, 368.769, -75.923, 0.36 ) }
    dend_14 { pt3dadd( -22.5887, 373.019, -77.0663, 0.36 ) }
    dend_14 { pt3dadd( -22.9982, 377.699, -78.501, 0.36 ) }
    dend_14 { pt3dadd( -23.3975, 380.982, -79.7369, 0.36 ) }
    dend_14 { pt3dadd( -23.9905, 384.625, -81.2424, 0.36 ) }
    dend_14 { pt3dadd( -25.386, 391.536, -84.3625, 0.36 ) }
    dend_14 { pt3dadd( -26.2954, 395.51, -86.1316, 0.36 ) }
    dend_14 { pt3dadd( -27.1419, 399.147, -87.6209, 0.36 ) }
    dend_14 { pt3dadd( -28.4669, 405.014, -89.7161, 0.36 ) }
    dend_14 { pt3dadd( -29.393, 409.496, -91.0728, 0.36 ) }
    dend_14 { pt3dadd( -30.2078, 413.825, -92.1145, 0.12 ) }
    dend_14 { pt3dadd( -30.9548, 418.985, -92.9818, 0.12 ) }
    dend_14 { pt3dadd( -31.5412, 424.727, -93.8274, 0.12 ) }
    dend_14 { pt3dadd( -31.817, 429.145, -94.3634, 0.12 ) }
    dend_14 { pt3dadd( -32.0168, 436.137, -95.0956, 0.12 ) }
    dend_14 { pt3dadd( -32.017, 440.63, -95.6463, 0.12 ) }
    dend_14 { pt3dadd( -31.9051, 448.661, -96.7974, 0.12 ) }
    dend_14 { pt3dadd( -31.6939, 455.85, -98.0709, 0.12 ) }
    dend_14 { pt3dadd( -31.4156, 462.066, -99.4282, 0.12 ) }
    dend_14 { pt3dadd( -31.2267, 464.86, -100.126, 0.12 ) }
    dend_14 { pt3dadd( -30.5662, 472.124, -102.216, 0.12 ) }
    dend_14 { pt3dadd( -30.0236, 476.548, -103.632, 0.12 ) }
    dend_14 { pt3dadd( -29.3797, 480.533, -105.1, 0.12 ) }
    dend_14 { pt3dadd( -28.0477, 486.476, -107.51, 0.12 ) }
    dend_14 { pt3dadd( -26.5482, 491.419, -109.658, 0.12 ) }
    dend_14 { pt3dadd( -24.7273, 496.189, -111.956, 0.12 ) }
    dend_14 { pt3dadd( -23.3649, 499.079, -113.477, 0.12 ) }
    dend_14 { pt3dadd( -21.5063, 502.566, -115.49, 0.12 ) }
    dend_14 { pt3dadd( -19.7176, 505.879, -117.519, 0.12 ) }
    dend_14 { pt3dadd( -18.0303, 508.933, -119.616, 0.12 ) }
    dend_14 { pt3dadd( -16.3695, 512.164, -122.038, 0.12 ) }
    dend_14 { pt3dadd( -15.6439, 514.094, -123.405, 0.12 ) }
    dend_14 { pt3dadd( -14.9492, 516.939, -125.03, 0.12 ) }
    dend_14 { pt3dadd( -14.2974, 521.653, -126.914, 0.12 ) }
    dend_14 { pt3dadd( -14.1344, 526.09, -128.431, 0.12 ) }
    dend_14 { pt3dadd( -14.2062, 528.19, -129.03, 0.12 ) }
    dend_14 { pt3dadd( -14.5721, 535.344, -130.809, 0.12 ) }
    dend_14 { pt3dadd( -14.954, 541.608, -132.238, 0.12 ) }
    dend_14 { pt3dadd( -15.4173, 548.167, -133.464, 0.12 ) }
    dend_14 { pt3dadd( -15.9967, 554.391, -134.436, 0.12 ) }
    dend_14 { pt3dadd( -16.6746, 559.967, -135.003, 0.12 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 51/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -14.4126, 228.416, -49.9253, 0.36 ) }
    dend_9 { pt3dadd( -14.7889, 231.942, -50.977, 0.36 ) }
    dend_9 { pt3dadd( -15.0767, 235.412, -51.944, 0.36 ) }
    dend_9 { pt3dadd( -15.2899, 239.917, -53.1041, 0.36 ) }
    dend_9 { pt3dadd( -15.3893, 244.915, -54.297, 0.36 ) }
    dend_9 { pt3dadd( -15.4206, 250.563, -55.6076, 0.36 ) }
    dend_9 { pt3dadd( -15.3745, 253.37, -56.2397, 0.36 ) }
    dend_9 { pt3dadd( -15.108, 258.57, -57.5017, 0.36 ) }
    dend_9 { pt3dadd( -14.7314, 264.085, -58.8834, 0.36 ) }
    dend_9 { pt3dadd( -14.3529, 268.906, -60.058, 0.36 ) }
    dend_9 { pt3dadd( -13.9405, 273.726, -61.1606, 0.36 ) }
    dend_9 { pt3dadd( -13.4209, 279.898, -62.4947, 0.36 ) }
    dend_9 { pt3dadd( -12.8762, 288.737, -64.3732, 0.36 ) }
    dend_9 { pt3dadd( -12.6811, 294.89, -65.5926, 0.24 ) }
    dend_9 { pt3dadd( -12.671, 299.175, -66.4261, 0.24 ) }
    dend_9 { pt3dadd( -12.7437, 304.839, -67.4823, 0.24 ) }
    dend_9 { pt3dadd( -12.8053, 306.9, -67.8318, 0.24 ) }
    dend_9 { pt3dadd( -13.0845, 311.814, -68.6107, 0.24 ) }
    dend_9 { pt3dadd( -13.7271, 320.162, -69.7378, 0.24 ) }
    dend_9 { pt3dadd( -13.9726, 322.529, -70.0682, 0.24 ) }
    dend_9 { pt3dadd( -14.4053, 326.583, -70.6337, 0.24 ) }
    dend_9 { pt3dadd( -14.7733, 330.612, -71.1839, 0.24 ) }
    dend_9 { pt3dadd( -15.1379, 335.706, -71.8756, 0.24 ) }
    dend_9 { pt3dadd( -15.4394, 341.771, -72.6641, 0.24 ) }
    dend_9 { pt3dadd( -15.6911, 347.689, -73.4122, 0.24 ) }
    dend_9 { pt3dadd( -15.8959, 353.767, -74.2298, 0.24 ) }
    dend_9 { pt3dadd( -16.0233, 359.061, -75.0218, 0.24 ) }
    dend_9 { pt3dadd( -16.0404, 361.244, -75.3621, 0.24 ) }
    dend_9 { pt3dadd( -15.9718, 365.784, -76.1074, 0.24 ) }
    dend_9 { pt3dadd( -15.7881, 369.755, -76.8858, 0.24 ) }
    dend_9 { pt3dadd( -15.3733, 375.329, -78.189, 0.24 ) }
    dend_9 { pt3dadd( -15.0716, 379.719, -79.3558, 0.24 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 83/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -40.3685, 59.6293, -26.4572, 0.48 ) }
    dend_5 { pt3dadd( -40.5244, 60.8145, -27.3877, 0.48 ) }
    dend_5 { pt3dadd( -40.9237, 62.9886, -28.7638, 0.48 ) }
    dend_5 { pt3dadd( -41.4586, 65.1529, -29.8889, 0.48 ) }
    dend_5 { pt3dadd( -41.7964, 66.4178, -30.5713, 0.48 ) }
    dend_5 { pt3dadd( -42.1988, 67.6754, -31.3053, 0.48 ) }
    dend_5 { pt3dadd( -42.7408, 69.2713, -32.1703, 0.36 ) }
    dend_5 { pt3dadd( -43.4147, 71.0789, -33.1405, 0.6 ) }
    dend_5 { pt3dadd( -44.0651, 72.6889, -33.9619, 0.36 ) }
    dend_5 { pt3dadd( -44.962, 75.2086, -35.2281, 0.36 ) }
    dend_5 { pt3dadd( -45.6296, 77.4321, -36.3417, 0.36 ) }
    dend_5 { pt3dadd( -46.1597, 79.535, -37.5239, 0.84 ) }
    dend_5 { pt3dadd( -46.6619, 81.9335, -38.9283, 0.48 ) }
    dend_5 { pt3dadd( -46.7989, 82.7984, -39.4932, 0.48 ) }
    dend_5 { pt3dadd( -46.9335, 84.0491, -40.3355, 0.36 ) }
    dend_5 { pt3dadd( -47.1213, 85.6205, -41.4145, 1.08 ) }
    dend_5 { pt3dadd( -47.5084, 88.6613, -43.7247, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_5 { pt3dadd( -47.6357, 89.4634, -44.3656, 0.6 ) }
    dend_5 { pt3dadd( -48.177, 92.3893, -46.7096, 0.36 ) }
    dend_5 { pt3dadd( -48.5772, 94.3005, -48.2428, 0.72 ) }
    dend_5 { pt3dadd( -49.0663, 96.5629, -49.9698, 0.72 ) }
    dend_5 { pt3dadd( -49.5476, 98.8685, -51.6321, 0.36 ) }
    dend_5 { pt3dadd( -49.9477, 100.708, -52.887, 0.84 ) }
    dend_5 { pt3dadd( -50.6173, 103.401, -54.6695, 0.36 ) }
    dend_5 { pt3dadd( -50.9236, 104.619, -55.4359, 0.96 ) }
    dend_5 { pt3dadd( -52.0952, 109.28, -58.2818, 0.24 ) }
    dend_5 { pt3dadd( -52.5653, 111.289, -59.4355, 0.72 ) }
    dend_5 { pt3dadd( -53.3681, 114.484, -61.2011, 0.36 ) }
    dend_5 { pt3dadd( -53.8376, 116.162, -62.1743, 1.69 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 12/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -40.3685, 59.6293, -26.4572, 0.36 ) }
    dend_4 { pt3dadd( -41.5585, 60.2707, -26.9756, 0.36 ) }
    dend_4 { pt3dadd( -43.3698, 61.4445, -27.8976, 0.36 ) }
    dend_4 { pt3dadd( -44.9325, 62.4923, -28.9324, 0.36 ) }
    dend_4 { pt3dadd( -47.7268, 64.6103, -30.7163, 0.36 ) }
    dend_4 { pt3dadd( -49.9948, 66.39, -32.1905, 0.24 ) }
    dend_4 { pt3dadd( -51.4449, 67.529, -33.1131, 0.12 ) }
    dend_4 { pt3dadd( -53.4139, 69.164, -34.3764, 0.12 ) }
    dend_4 { pt3dadd( -57.5825, 72.7558, -37.0568, 0.12 ) }
    dend_4 { pt3dadd( -60.5673, 74.9534, -38.6098, 0.12 ) }
    dend_4 { pt3dadd( -62.9666, 76.5307, -39.7443, 0.12 ) }
    dend_4 { pt3dadd( -64.2801, 77.3965, -40.2765, 0.12 ) }
    dend_4 { pt3dadd( -65.6636, 78.2962, -40.8031, 0.12 ) }
    dend_4 { pt3dadd( -66.292, 78.6981, -41.0283, 0.12 ) }
    dend_4 { pt3dadd( -77.4211, 85.7597, -44.8438, 0.12 ) }
    dend_4 { pt3dadd( -81.6955, 88.3997, -46.4093, 0.12 ) }
    dend_4 { pt3dadd( -86.7442, 91.6094, -48.2176, 0.12 ) }
    dend_4 { pt3dadd( -92.3394, 95.2412, -50.3204, 0.12 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 30/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -53.749, 2.95496, 11.2993, 0.24 ) }
    dend_26 { pt3dadd( -57.4446, 2.70057, 11.7864, 0.24 ) }
    dend_26 { pt3dadd( -59.4922, 2.61562, 12.049, 0.24 ) }
    dend_26 { pt3dadd( -62.8318, 2.54711, 12.3365, 0.36 ) }
    dend_26 { pt3dadd( -65.123, 2.55882, 12.4508, 0.36 ) }
    dend_26 { pt3dadd( -67.6008, 2.74472, 12.681, 0.36 ) }
    dend_26 { pt3dadd( -68.9591, 2.88193, 12.8325, 0.36 ) }
    dend_26 { pt3dadd( -71.5694, 3.24206, 13.0724, 0.36 ) }
    dend_26 { pt3dadd( -75.246, 3.76606, 13.45, 0.36 ) }
    dend_26 { pt3dadd( -77.8752, 4.11941, 13.7206, 0.36 ) }
    dend_26 { pt3dadd( -83.5496, 4.77894, 14.2586, 0.36 ) }
    dend_26 { pt3dadd( -85.12, 4.96069, 14.4075, 0.36 ) }
    dend_26 { pt3dadd( -88.6553, 5.32529, 14.7463, 0.36 ) }
    dend_26 { pt3dadd( -90.9904, 5.54555, 14.9832, 0.36 ) }
    dend_26 { pt3dadd( -94.3105, 5.76873, 15.3792, 0.36 ) }
    dend_26 { pt3dadd( -96.6715, 5.76391, 15.5771, 0.36 ) }
    dend_26 { pt3dadd( -109.256, 4.68456, 14.9376, 0.36 ) }
    dend_26 { pt3dadd( -121.668, 2.351, 13.9473, 0.36 ) }
    dend_26 { pt3dadd( -133.913, 1.53481, 10.8944, 0.36 ) }
    dend_26 { pt3dadd( -145.776, 3.6323, 7.05782, 0.36 ) }
    dend_26 { pt3dadd( -156.583, 8.01828, 2.08608, 0.36 ) }
    dend_26 { pt3dadd( -168.853, 9.11905, -0.735317, 0.36 ) }
    dend_26 { pt3dadd( -181.048, 8.4544, -4.01416, 0.36 ) }
    dend_26 { pt3dadd( -193.116, 6.85285, -7.48243, 0.36 ) }
    dend_26 { pt3dadd( -204.676, 6.51865, -12.5947, 0.36 ) }
    dend_26 { pt3dadd( -216.744, 4.68248, -15.9622, 0.36 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 56/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -53.749, 2.95496, 11.2993, 0.24 ) }
    dend_25 { pt3dadd( -53.0565, 6.26209, 8.16057, 0.24 ) }
    dend_25 { pt3dadd( -52.937, 7.2271, 7.31654, 0.24 ) }
    dend_25 { pt3dadd( -52.6337, 9.27479, 5.62019, 0.24 ) }
    dend_25 { pt3dadd( -52.4757, 10.2422, 4.86225, 0.24 ) }
    dend_25 { pt3dadd( -51.4382, 15.664, 0.730685, 0.24 ) }
    dend_25 { pt3dadd( -50.8548, 18.3034, -1.22908, 0.24 ) }
    dend_25 { pt3dadd( -50.2016, 21.1525, -3.2248, 0.24 ) }
    dend_25 { pt3dadd( -49.1001, 25.4818, -6.1715, 0.24 ) }
    dend_25 { pt3dadd( -48.3083, 28.2608, -7.97763, 0.24 ) }
    dend_25 { pt3dadd( -47.4747, 31.0189, -9.79403, 0.24 ) }
    dend_25 { pt3dadd( -46.9359, 32.7238, -10.8888, 0.24 ) }
    dend_25 { pt3dadd( -46.5658, 33.8664, -11.645, 0.24 ) }
    dend_25 { pt3dadd( -45.9946, 35.5171, -12.8474, 0.24 ) }
    dend_25 { pt3dadd( -45.0038, 38.3748, -14.9648, 0.24 ) }
    dend_25 { pt3dadd( -42.9912, 43.8626, -19.0568, 0.24 ) }
    dend_25 { pt3dadd( -41.7422, 47.1632, -21.4323, 0.24 ) }
    dend_25 { pt3dadd( -40.4525, 50.3259, -23.742, 0.24 ) }
    dend_25 { pt3dadd( -38.4499, 55.0681, -27.2171, 0.24 ) }
    dend_25 { pt3dadd( -36.2536, 60.1003, -30.8974, 0.24 ) }
    dend_25 { pt3dadd( -35.2388, 62.2512, -32.4331, 0.24 ) }
    dend_25 { pt3dadd( -33.6066, 65.2515, -34.4145, 0.24 ) }
    dend_25 { pt3dadd( -31.1171, 69.5108, -37.3109, 0.24 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 79/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -15.0716, 379.719, -79.3558, 0.24 ) }
    dend_13 { pt3dadd( -14.5783, 384.451, -80.1442, 0.24 ) }
    dend_13 { pt3dadd( -14.2696, 387.701, -80.6289, 0.24 ) }
    dend_13 { pt3dadd( -13.9706, 391.088, -81.0852, 0.24 ) }
    dend_13 { pt3dadd( -13.4629, 396.877, -81.8103, 0.24 ) }
    dend_13 { pt3dadd( -12.9719, 402.381, -82.4647, 0.24 ) }
    dend_13 { pt3dadd( -12.6855, 405.389, -82.8091, 0.24 ) }
    dend_13 { pt3dadd( -12.2745, 409.274, -83.1081, 0.24 ) }
    dend_13 { pt3dadd( -11.7041, 413.925, -83.3963, 0.24 ) }
    dend_13 { pt3dadd( -11.2291, 417.744, -83.5694, 0.24 ) }
    dend_13 { pt3dadd( -10.8871, 420.801, -83.6748, 0.24 ) }
    dend_13 { pt3dadd( -10.605, 424.848, -83.7654, 0.24 ) }
    dend_13 { pt3dadd( -10.5572, 428.557, -83.8448, 0.24 ) }
    dend_13 { pt3dadd( -10.7306, 431.974, -83.9173, 0.24 ) }
    dend_13 { pt3dadd( -11.0513, 434.617, -83.9741, 0.24 ) }
    dend_13 { pt3dadd( -11.7229, 438.223, -84.1722, 0.24 ) }
    dend_13 { pt3dadd( -12.8168, 442.882, -84.5503, 0.24 ) }
    dend_13 { pt3dadd( -14.1846, 448.378, -84.8623, 0.24 ) }
    dend_13 { pt3dadd( -15.1299, 452.374, -85.0378, 0.24 ) }
    dend_13 { pt3dadd( -16.4262, 458.995, -84.8952, 0.24 ) }
    dend_13 { pt3dadd( -17.0481, 463.015, -84.6086, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( -17.4442, 467.253, -84.2994, 0.24 ) }
    dend_13 { pt3dadd( -17.7397, 475.186, -83.4469, 0.24 ) }
    dend_13 { pt3dadd( -17.6891, 480.233, -82.8035, 0.24 ) }
    dend_13 { pt3dadd( -17.448, 486.127, -82.121, 0.24 ) }
    dend_13 { pt3dadd( -17.302, 488.472, -81.8872, 0.24 ) }
    dend_13 { pt3dadd( -16.7804, 496.363, -81.0104, 0.24 ) }
    dend_13 { pt3dadd( -16.433, 501.573, -80.629, 0.24 ) }
    dend_13 { pt3dadd( -16.2767, 505.165, -80.6688, 0.24 ) }
    dend_13 { pt3dadd( -16.2036, 510.224, -80.9525, 0.24 ) }
    dend_13 { pt3dadd( -16.289, 513.798, -81.4241, 0.24 ) }
    dend_13 { pt3dadd( -16.4252, 518.111, -81.8946, 0.24 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 11/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -15.0716, 379.719, -79.3558, 0.24 ) }
    dend_10 { pt3dadd( -16.253, 385.95, -80.5981, 0.24 ) }
    dend_10 { pt3dadd( -17.1308, 390.58, -81.5211, 0.24 ) }
    dend_10 { pt3dadd( -18.1161, 395.777, -82.5572, 0.24 ) }
    dend_10 { pt3dadd( -19.4388, 402.753, -83.9481, 0.24 ) }
    dend_10 { pt3dadd( -21.3051, 412.596, -85.9105, 0.24 ) }
    dend_10 { pt3dadd( -22.2584, 417.624, -86.913, 0.24 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 18/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -53.8376, 116.162, -62.1743, 0.48 ) }
    dend_7 { pt3dadd( -61.1715, 121.371, -69.2788, 0.48 ) }
    dend_7 { pt3dadd( -73.2965, 129.454, -79.0989, 0.12 ) }
    dend_7 { pt3dadd( -82.9733, 135.582, -85.9683, 0.24 ) }
    dend_7 { pt3dadd( -89.0764, 139.317, -89.6188, 0.24 ) }
    dend_7 { pt3dadd( -92.9845, 141.751, -91.5392, 0.24 ) }
    dend_7 { pt3dadd( -97.9442, 144.901, -93.8374, 0.24 ) }
    dend_7 { pt3dadd( -102.659, 147.903, -95.2304, 0.24 ) }
    dend_7 { pt3dadd( -105.509, 149.564, -95.9358, 0.24 ) }
    dend_7 { pt3dadd( -112.244, 153.413, -98.7678, 0.24 ) }
    dend_7 { pt3dadd( -120.207, 158.219, -103.106, 0.24 ) }
    dend_7 { pt3dadd( -124.391, 161.058, -105.914, 0.24 ) }
    dend_7 { pt3dadd( -127.863, 163.851, -108.781, 0.24 ) }
    dend_7 { pt3dadd( -136.087, 171.285, -117.036, 0.24 ) }
    dend_7 { pt3dadd( -142.57, 177.206, -124.32, 0.24 ) }
    dend_7 { pt3dadd( -144.39, 178.785, -126.452, 0.24 ) }
    dend_7 { pt3dadd( -147.482, 181.254, -130.012, 0.24 ) }
    dend_7 { pt3dadd( -151.748, 184.516, -134.336, 0.24 ) }
    dend_7 { pt3dadd( -155.13, 187.042, -137.423, 0.24 ) }
    dend_7 { pt3dadd( -163.286, 192.621, -143.43, 0.24 ) }
    dend_7 { pt3dadd( -167.908, 195.347, -146.548, 0.24 ) }
    dend_7 { pt3dadd( -173.09, 198.076, -149.987, 0.24 ) }
    dend_7 { pt3dadd( -176.903, 199.808, -152.421, 0.24 ) }
    dend_7 { pt3dadd( -181.762, 201.815, -155.275, 0.24 ) }
    dend_7 { pt3dadd( -186.528, 203.999, -158.02, 0.24 ) }
    dend_7 { pt3dadd( -191.744, 207.106, -161.268, 0.24 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 44/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -53.8376, 116.162, -62.1743, 0.48 ) }
    dend_6 { pt3dadd( -53.8145, 120.005, -67.9149, 0.48 ) }
    dend_6 { pt3dadd( -53.7093, 125.342, -76.0264, 0.24 ) }
    dend_6 { pt3dadd( -53.6267, 130.096, -82.9842, 0.24 ) }
    dend_6 { pt3dadd( -53.6574, 135.151, -90.1947, 0.24 ) }
    dend_6 { pt3dadd( -53.7467, 138.046, -94.2148, 0.24 ) }
    dend_6 { pt3dadd( -53.849, 141.362, -98.8191, 0.24 ) }
    dend_6 { pt3dadd( -54.0151, 145.353, -104.234, 0.24 ) }
    dend_6 { pt3dadd( -54.0593, 147.228, -106.787, 0.24 ) }
    dend_6 { pt3dadd( -54.0913, 150.672, -111.413, 0.24 ) }
    dend_6 { pt3dadd( -54.5889, 155.2, -117.027, 0.24 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 55/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -216.744, 4.68248, -15.9622, 0.24 ) }
    dend_30 { pt3dadd( -230.176, 3.2872, -17.6202, 0.24 ) }
    dend_30 { pt3dadd( -243.286, -0.059251, -19.3381, 0.24 ) }
    dend_30 { pt3dadd( -256.253, -2.88181, -22.4064, 0.24 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 59/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -216.744, 4.68248, -15.9622, 0.24 ) }
    dend_27 { pt3dadd( -225.269, 5.89725, -17.6716, 0.24 ) }
    dend_27 { pt3dadd( -233.806, 7.95387, -18.054, 0.24 ) }
    dend_27 { pt3dadd( -241.826, 11.4229, -16.837, 0.24 ) }
    dend_27 { pt3dadd( -248.771, 16.6722, -15.0037, 0.24 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 64/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -22.2584, 417.624, -86.913, 0.24 ) }
    dend_12 { pt3dadd( -22.1802, 424.244, -86.8434, 0.24 ) }
    dend_12 { pt3dadd( -22.1205, 429.3, -86.7902, 0.24 ) }
    dend_12 { pt3dadd( -22.0763, 433.039, -86.7508, 0.24 ) }
    dend_12 { pt3dadd( -22.0404, 436.072, -86.7189, 0.24 ) }
    dend_12 { pt3dadd( -21.9766, 441.477, -86.6621, 0.24 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -22.2584, 417.624, -86.913, 0.24 ) }
    dend_11 { pt3dadd( -22.1665, 423.538, -86.7725, 0.24 ) }
    dend_11 { pt3dadd( -22.801, 429.2, -86.405, 0.24 ) }
    dend_11 { pt3dadd( -23.8563, 434.153, -86.2032, 0.24 ) }
    dend_11 { pt3dadd( -24.8718, 438.116, -85.9395, 0.24 ) }
    dend_11 { pt3dadd( -25.8841, 441.606, -85.8577, 0.24 ) }
    dend_11 { pt3dadd( -27.001, 445.456, -85.8889, 0.24 ) }
    dend_11 { pt3dadd( -29.4034, 453.103, -85.8677, 0.24 ) }
    dend_11 { pt3dadd( -31.5595, 459.245, -86.0476, 0.24 ) }
    dend_11 { pt3dadd( -33.3761, 464.331, -86.4053, 0.24 ) }
    dend_11 { pt3dadd( -35.2376, 470.361, -87.3011, 0.24 ) }
    dend_11 { pt3dadd( -36.0944, 474.056, -88.0211, 0.24 ) }
    dend_11 { pt3dadd( -36.4351, 475.761, -88.3085, 0.24 ) }
    dend_11 { pt3dadd( -37.0892, 479.414, -88.8278, 0.24 ) }
    dend_11 { pt3dadd( -37.6135, 482.474, -89.1615, 0.24 ) }
    dend_11 { pt3dadd( -39.4297, 492.719, -90.035, 0.24 ) }
    dend_11 { pt3dadd( -40.1701, 496.863, -90.229, 0.24 ) }
    dend_11 { pt3dadd( -43.4628, 514.374, -90.9095, 0.24 ) }
    dend_11 { pt3dadd( -44.3169, 519.218, -91.0992, 0.24 ) }
    dend_11 { pt3dadd( -45.1994, 524.704, -91.3774, 0.24 ) }
    dend_11 { pt3dadd( -45.9427, 529.917, -91.7761, 0.24 ) }
    dend_11 { pt3dadd( -46.3457, 533.474, -92.1209, 0.24 ) }
    dend_11 { pt3dadd( -46.6832, 539.243, -92.9734, 0.24 ) }
    dend_11 { pt3dadd( -46.596, 544.354, -93.9943, 0.24 ) }
    dend_11 { pt3dadd( -46.4138, 550.881, -95.4159, 0.24 ) }
    dend_11 { pt3dadd( -46.1175, 559.339, -97.3976, 0.24 ) }
    dend_11 { pt3dadd( -45.7328, 568.06, -99.5635, 0.24 ) }
    dend_11 { pt3dadd( -45.2669, 578.24, -102.126, 0.24 ) }
    dend_11 { pt3dadd( -44.8839, 586.347, -104.101, 0.24 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 99/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -248.771, 16.6722, -15.0037, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_29 { pt3dadd( -258.193, 20.2066, -15.3566, 0.24 ) }
    dend_29 { pt3dadd( -267.244, 24.6821, -15.2808, 0.24 ) }
    dend_29 { pt3dadd( -276.272, 29.1795, -14.8448, 0.24 ) }
    dend_29 { pt3dadd( -285.077, 34.0701, -15.835, 0.24 ) }
    dend_29 { pt3dadd( -293.08, 40.3441, -16.4025, 0.24 ) }
    dend_29 { pt3dadd( -301.854, 45.2418, -17.6295, 0.24 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 6/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -248.771, 16.6722, -15.0037, 0.24 ) }
    dend_28 { pt3dadd( -257.677, 19.8747, -14.1985, 0.24 ) }
    dend_28 { pt3dadd( -266.53, 23.3166, -14.4917, 0.24 ) }
    dend_28 { pt3dadd( -275.162, 27.2139, -15.4232, 0.24 ) }
    dend_28 { pt3dadd( -284.412, 29.1548, -15.9965, 0.24 ) }
    dend_28 { pt3dadd( -293.611, 31.0693, -14.8108, 0.24 ) }
    dend_28 { pt3dadd( -302.641, 33.9801, -15.0068, 0.24 ) }
    dend_28 { pt3dadd( -311.05, 38.4821, -15.2323, 0.24 ) }
    dend_28 { pt3dadd( -318.997, 43.8154, -15.6042, 0.24 ) }
    dend_28 { pt3dadd( -326.958, 49.0643, -14.6975, 0.24 ) }
    dend_28 { pt3dadd( -334.753, 54.577, -13.7654, 0.24 ) }
    dend_28 { pt3dadd( -342.837, 59.4745, -12.3015, 0.24 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_59 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_56 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_54 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_36 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_58 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_57 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_46 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_43 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_38 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_32 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_53 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_52 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_50 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_47 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_39 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_19 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_3 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_49 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_48 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_42 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_23 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_18 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_14 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_9 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_5 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_4 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_26 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_25 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_13 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_7 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_6 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_30 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_11 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_29 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_28 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_44 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_20 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_37 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_45 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_21 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_51 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_22 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_24 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_40 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_41 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_27 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_10 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_0, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_1, dend_1, axon_1, axon_1, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_20 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_55 nseg = 7
    dend_59 nseg = 15
    dend_56 nseg = 3
    dend_54 nseg = 11
    dend_36 nseg = 3
    dend_58 nseg = 5
    dend_57 nseg = 5
    dend_46 nseg = 7
    dend_43 nseg = 21
    dend_38 nseg = 7
    dend_32 nseg = 5
    dend_15 nseg = 5
    dend_53 nseg = 13
    dend_52 nseg = 5
    dend_50 nseg = 5
    dend_47 nseg = 3
    dend_39 nseg = 5
    dend_34 nseg = 3
    dend_33 nseg = 3
    dend_31 nseg = 3
    dend_19 nseg = 17
    dend_16 nseg = 5
    dend_8 nseg = 9
    dend_3 nseg = 3
    dend_49 nseg = 3
    dend_48 nseg = 3
    dend_42 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_14 nseg = 17
    dend_9 nseg = 7
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_26 nseg = 9
    dend_25 nseg = 5
    dend_13 nseg = 7
    dend_7 nseg = 9
    dend_6 nseg = 3
    dend_30 nseg = 3
    dend_11 nseg = 9
    dend_29 nseg = 3
    dend_28 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L6_NBC_4b88b7a151_0_0


