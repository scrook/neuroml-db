// Cell: bIR215_L4_DBC_5a91010028_0_0
/*
{
  "id" : "bIR215_L4_DBC_5a91010028_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.29752, -10.9202, 0.0, 2.7473", "-3.02947, -9.86122, 0.0, 4.90547", "-2.76143, -8.80223, 0.0, 7.1195", "-2.49339, -7.74324, 0.0, 9.06693", "-2.22534, -6.68425, 0.0, 10.5477", "-1.9573, -5.62526, 0.0, 11.7638", "-1.68926, -4.56627, 0.0, 12.6703", "-1.42121, -3.50728, 0.0, 13.5724", "-1.15317, -2.44829, 0.0, 13.9606", "-0.885125, -1.3893, 0.0, 14.249", "-0.617082, -0.330312, 0.0, 14.4914", "-0.349039, 0.728678, 0.0, 14.572", "-0.0809953, 1.78767, 0.0, 14.5168", "0.187048, 2.84666, 0.0, 14.1167", "0.455092, 3.90565, 0.0, 13.6161", "0.723135, 4.96464, 0.0, 12.8986", "0.991178, 6.02363, 0.0, 12.0703", "1.25922, 7.08262, 0.0, 10.8368", "1.52727, 8.14161, 0.0, 9.27498", "1.79531, 9.2006, 0.0, 7.02436", "2.06335, 10.2596, 0.0, 4.05122" ]
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.851454, 9.58985, 1.7, 1.62", "0.851454, 9.58985, 1.7, 1.62", "0.762019, 11.3767, 1.64197, 0.96", "0.685369, 12.9081, 1.59224, 1.25", "0.578428, 15.0446, 1.52286, 1.55", "0.478342, 17.0443, 1.45793, 1.84", "0.377472, 19.0596, 1.39248, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.23855, -8.97315, -9.03, 1.18", "-1.7379, -9.09262, -9.11797, 1.18", "-0.501733, -9.51624, -9.35485, 1.18", "1.57613, -10.4597, -9.81324, 1.03", "2.64141, -11.0256, -10.0715, 0.96", "3.56195, -11.4112, -10.2589, 0.81", "2.52169, -11.6604, -10.2769, 0.74", "1.76062, -12.1461, -10.4318, 0.74", "0.752138, -12.7838, -10.6995, 0.96", "-0.480311, -13.5011, -11.0689, 1.18", "-2.26107, -14.4333, -11.6577, 0.88", "-3.75708, -15.1427, -12.2207, 0.96", "-5.31855, -15.821, -12.8296, 1.25", "-6.40596, -16.274, -13.2869, 1.99", "-7.47199, -16.7214, -13.7899, 2.95", "-8.50745, -17.1994, -14.3831, 3.54", "-9.38151, -17.6652, -15.0237, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-1.90855, -11.1012, 1.23, 0.81", "-1.74129, -11.9816, 1.19254, 0.81", "-1.46657, -13.0598, 1.14685, 0.96", "-1.14415, -14.1364, 1.10335, 1.18", "-0.796497, -15.1789, 1.06374, 1.18", "-0.381976, -16.3344, 1.05937, 0.81", "-0.116351, -17.0404, 1.08369, 1.03", "0.288158, -18.0296, 1.19046, 1.47", "0.570135, -18.7381, 1.32809, 2.06", "0.790833, -19.377, 1.50504, 2.14", "1.08582, -20.5649, 1.92273, 1.33", "1.25875, -22.0861, 2.53932, 0.96", "1.20022, -23.4406, 3.12412, 0.96", "0.97669, -24.4084, 3.55298, 1.18", "0.705892, -25.1237, 3.87481, 1.99", "0.272913, -26.0067, 4.26586, 2.88", "-0.299779, -27.0096, 4.68263, 3.02", "-1.10238, -28.3573, 5.19676, 1.77", "-2.19903, -30.3436, 5.85452, 0.81", "-2.74036, -31.5012, 6.19351, 0.81", "-3.0331, -32.3246, 6.402, 0.81", "-3.26576, -33.3249, 6.62958, 0.81", "-3.40355, -34.4154, 6.8732, 0.81", "-3.43433, -35.3312, 7.07124, 1.03", "-3.41689, -36.2357, 7.25521, 1.25", "-3.3334, -37.9216, 7.5822, 0.81", "-3.26084, -39.2653, 7.85524, 1.03", "-3.22432, -40.3382, 8.0961, 1.62", "-3.2393, -41.2232, 8.32204, 2.73", "-3.33531, -42.471, 8.67731, 4.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.51145, 5.98935, 5.69, 0.59", "7.41132, 6.45634, 5.50202, 0.44", "8.28818, 6.9637, 5.58302, 0.44", "9.02141, 7.40992, 5.84928, 0.44", "9.80678, 7.88569, 6.28655, 0.37", "10.3931, 8.2236, 6.68048, 1.03", "11.3143, 8.7275, 7.3868, 1.33", "12.2872, 9.2378, 8.35631, 1.47", "12.9546, 9.55756, 9.16014, 1.25", "13.6812, 9.82022, 10.1521, 0.29", "14.1488, 9.89942, 10.8394, 0.22", "14.5091, 9.88962, 11.3411, 0.22", "14.7393, 9.81352, 11.6041, 0.22", "15.0137, 9.69282, 11.885, 0.22", "15.4416, 9.51405, 12.3023, 1.03", "16.35, 9.19932, 13.2148, 2.21", "16.8532, 9.12071, 13.728, 3.02", "18.4438, 9.26939, 15.3869, 0.29", "19.1755, 9.54284, 16.1931, 0.29", "19.5872, 9.80602, 16.6605, 0.44", "19.9878, 10.1655, 17.1355, 0.66", "20.6049, 10.8814, 17.8929, 1.11", "21.1709, 11.6262, 18.6183, 0.52", "21.6211, 12.2769, 19.1522, 0.22", "21.9095, 12.5662, 19.4475, 0.22", "22.1925, 12.6586, 19.7125, 0.22", "22.4684, 12.5572, 19.9488, 0.22", "23.1005, 12.1704, 20.4618, 0.66", "23.7394, 11.7442, 20.9526, 1.7", "24.3733, 11.3236, 21.4575, 2.21", "24.9715, 10.9712, 21.9807, 1.7", "25.7958, 10.6376, 22.8198, 0.29", "26.5537, 10.5353, 23.7736, 0.22", "26.8619, 10.6164, 24.2733, 0.22", "27.1696, 10.9081, 25.0562, 0.22", "27.3392, 11.3366, 25.9137, 0.96", "27.419, 12.1058, 27.2592, 0.74", "27.3758, 12.654, 28.1958, 0.74", "27.3135, 12.9573, 28.7531, 0.74", "27.2485, 13.3654, 29.669, 0.74", "27.2757, 13.5978, 30.2748, 0.74", "27.3397, 13.6552, 30.487, 0.74", "27.8015, 13.7757, 31.1748, 0.74", "28.2869, 13.868, 31.723, 1.18", "29.1406, 14.0106, 32.6044, 0.44", "29.9187, 14.1437, 33.325, 1.25", "30.9982, 14.354, 34.2636, 2.73", "32.1518, 14.6174, 35.2487, 3.54", "32.7979, 14.7885, 35.78, 2.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.64855, 6.56885, 5.52, 0.88", "-5.06662, 7.05641, 5.71854, 0.74", "-5.73902, 7.75706, 6.10303, 0.22", "-6.18883, 8.18296, 6.38436, 0.22", "-6.78707, 8.70112, 6.75131, 0.44", "-7.28729, 9.0914, 7.04276, 0.44", "-7.9458, 9.528, 7.40772, 0.22", "-8.65014, 9.87842, 7.79128, 0.22", "-9.01414, 10.016, 7.9772, 0.22", "-9.52675, 10.1709, 8.21756, 0.96", "-10.3332, 10.3647, 8.59413, 1.47", "-11.7926, 10.6608, 9.33596, 0.15", "-12.4436, 10.791, 9.65471, 0.15", "-12.9002, 10.9071, 9.84556, 0.15", "-13.5785, 11.097, 10.1055, 0.88", "-14.7786, 11.4577, 10.5512, 0.37", "-16.0619, 11.8722, 11.0216, 1.55", "-17.0884, 12.2355, 11.3958, 2.95", "-19.7079, 13.2156, 12.3377, 0.07", "-20.1968, 13.3976, 12.5088, 0.88", "-21.2078, 13.7753, 12.8314, 0.07", "-22.1462, 14.1323, 13.0609, 0.22", "-22.791, 14.3791, 13.1915, 0.22", "-24.2244, 14.9037, 13.4589, 0.15", "-24.67, 15.0494, 13.5337, 0.96", "-25.3076, 15.2481, 13.6071, 1.84", "-27.5755, 15.9084, 13.7294, 0.15", "-28.0791, 16.033, 13.7357, 0.66", "-28.8783, 16.2021, 13.7286, 1.18", "-30.8249, 16.5521, 13.6829, 0.15", "-31.5499, 16.6566, 13.6503, 1.33", "-32.5204, 16.762, 13.5932, 2.51", "-35.2621, 16.9571, 13.3929, 0.15", "-35.7042, 16.9794, 13.3412, 0.52", "-36.5085, 17.0029, 13.2074, 0.81", "-37.762, 17.0206, 12.9313, 0.15", "-38.3959, 17.0257, 12.7822, 0.15", "-38.8773, 17.033, 12.6551, 0.66", "-40.3421, 17.0806, 12.22, 1.84", "-41.7838, 17.171, 11.816, 0.22", "-42.5194, 17.237, 11.6336, 0.37", "-42.8385, 17.2737, 11.565, 0.88", "-44.0403, 17.4252, 11.3708, 0.15", "-44.7021, 17.5219, 11.2964, 0.15", "-45.4308, 17.6437, 11.2626, 0.74", "-47.6039, 18.0271, 11.3168, 0.07", "-48.0145, 18.1055, 11.3464, 0.52", "-49.4234, 18.4064, 11.5101, 0.15", "-50.0911, 18.5636, 11.6194, 0.96", "-50.9282, 18.7737, 11.7853, 1.92", "-52.73, 19.3087, 12.1948, 0.15", "-53.4771, 19.5729, 12.3788, 0.22", "-54.3604, 19.9169, 12.5795, 0.07", "-54.9377, 20.1812, 12.6955, 1.03", "-55.5328, 20.4776, 12.8048, 1.77", "-57.3193, 21.4346, 13.0888, 0.07", "-58.0439, 21.8546, 13.19, 0.07", "-58.5434, 22.1404, 13.2698, 0.74", "-59.902, 22.9234, 13.4997, 0.07", "-60.3217, 23.1619, 13.572, 0.52", "-61.4746, 23.7328, 13.7853, 0.07", "-62.1925, 24.0116, 13.9272, 0.22", "-62.9903, 24.234, 14.0772, 0.15", "-63.324, 24.2844, 14.1307, 0.96", "-64.1418, 24.3101, 14.2353, 1.92", "-65.8155, 24.2548, 14.4013, 0.07", "-66.633, 24.1803, 14.4456, 0.29", "-67.5248, 24.1084, 14.4512, 0.07", "-68.3876, 24.0894, 14.422, 0.07", "-68.7237, 24.1023, 14.4078, 0.07", "-69.0413, 24.1296, 14.3884, 0.44", "-69.7078, 24.2256, 14.3295, 0.74", "-71.3487, 24.4842, 14.1739, 0.07", "-72.6509, 24.6915, 14.0565, 0.15", "-73.5558, 24.8306, 13.9758, 0.96", "-74.6764, 24.9557, 13.8827, 0.07", "-75.582, 25.0172, 13.8089, 0.59", "-76.4561, 25.0244, 13.741, 0.15", "-76.8727, 24.9994, 13.7084, 0.74", "-77.504, 24.9316, 13.6561, 1.18", "-79.4721, 24.6836, 13.4192, 0.15", "-80.1213, 24.6052, 13.3254, 0.81", "-81.1002, 24.4928, 13.1559, 0.15", "-81.6734, 24.4303, 13.0435, 0.22", "-83.1498, 24.2733, 12.7253, 0.07", "-84.0638, 24.1768, 12.5128, 1.03", "-84.7021, 24.1205, 12.3524, 1.84", "-86.8211, 24.001, 11.8314, 0.07", "-87.2443, 23.9978, 11.7312, 0.22", "-89.2314, 24.0814, 11.3074, 0.07", "-89.4879, 24.1007, 11.2599, 0.66", "-90.0622, 24.1525, 11.1863, 1.25", "-91.031, 24.2589, 11.0815, 0.15", "-91.8119, 24.3788, 11.0168, 0.74", "-93.0968, 24.565, 10.9567, 0.07", "-93.9628, 24.6831, 10.9456, 0.07", "-94.8538, 24.7897, 10.9458, 0.07", "-95.0311, 24.8122, 10.9531, 0.07", "-95.758, 24.9241, 11.0123, 0.74", "-97.1565, 25.1638, 11.2149, 0.07", "-97.5462, 25.249, 11.2962, 1.11", "-98.372, 25.4486, 11.511, 1.62", "-99.8776, 25.7365, 11.9541, 0.07", "-100.665, 25.8546, 12.2007, 0.81", "-101.918, 25.9908, 12.6071, 0.15", "-102.94, 26.0495, 12.9602, 0.15", "-104.013, 26.0541, 13.3407, 1.11", "-106.435, 25.9291, 14.2001, 0.15", "-106.993, 25.8737, 14.3897, 1.03", "-108.014, 25.7471, 14.7246, 1.84", "-109.759, 25.4941, 15.2461, 0.22", "-110.073, 25.4409, 15.3392, 0.22", "-110.713, 25.3304, 15.5313, 0.07", "-111.182, 25.2522, 15.6805, 0.59", "-112.164, 25.08, 16.0168, 0.07", "-112.808, 24.9547, 16.2429, 0.29", "-113.456, 24.8011, 16.4668, 0.07", "-114.201, 24.5913, 16.7242, 0.37", "-115.262, 24.2518, 17.0882, 0.07", "-116.032, 23.9696, 17.3488, 0.66", "-116.887, 23.5615, 17.5982, 0.07", "-117.665, 23.1158, 17.7951, 0.96", "-118.998, 22.189, 18.0628, 0.07", "-119.718, 21.5511, 18.1492, 0.07", "-120.19, 21.0096, 18.1529, 1.03", "-121.442, 19.0424, 18.0145, 0.15", "-121.765, 18.3937, 17.9295, 0.15", "-122.103, 17.5467, 17.7817, 1.11", "-122.552, 16.1302, 17.4958, 0.15", "-122.888, 14.9164, 17.2319, 1.84", "-123.513, 12.5446, 16.7014, 0.15", "-123.646, 12.0222, 16.5866, 0.59", "-123.876, 11.2111, 16.4354, 1.03", "-124.462, 9.43692, 16.2031, 0.15", "-124.69, 8.85344, 16.1907, 0.52", "-125.177, 7.7474, 16.2673, 0.15", "-125.479, 7.09073, 16.3798, 0.66", "-125.921, 6.06841, 16.6487, 0.15", "-126.368, 4.89191, 17.0485, 1.62", "-126.88, 3.17334, 17.7408, 0.07", "-127.016, 2.53032, 18.0008, 0.29", "-127.166, 1.34762, 18.4367, 0.07", "-127.193, 0.703403, 18.6271, 0.96", "-127.181, -0.319042, 18.7803, 2.21", "-127.144, -1.20501, 18.805, 1.33", "-127.115, -2.44007, 18.7034, 0.07", "-127.133, -3.53488, 18.5406, 0.07", "-127.186, -4.36109, 18.3695, 1.03", "-127.349, -6.32161, 17.9107, 0.07", "-127.422, -6.94936, 17.7492, 0.88", "-127.64, -8.46342, 17.3405, 0.07", "-127.721, -9.01368, 17.1875, 0.66", "-127.777, -9.39, 17.0895, 1.25", "-127.965, -10.5643, 16.8092, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.06335, 10.2596, 0.0, 0.610609", "5.74396, 24.801, 0.0, 0.610609", "9.42458, 39.3425, 0.0, 0.610609" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.377472, 19.0596, 1.39248, 0.37", "1.01506, 19.6565, 1.65613, 0.37", "1.21713, 19.8236, 1.74466, 0.37", "1.59943, 20.1455, 1.94585, 0.37", "2.06553, 20.6205, 2.25697, 0.22", "2.18825, 20.7994, 2.38988, 0.22", "2.23311, 21.0086, 2.5909, 0.22", "2.18493, 21.1316, 2.76197, 0.22", "2.06696, 21.3268, 3.03221, 0.22", "1.85699, 21.6521, 3.49238, 0.22", "1.72758, 21.8615, 3.7933, 0.22", "1.53669, 22.2492, 4.31915, 0.66", "1.38723, 22.71, 4.90754, 1.03", "1.26854, 23.2943, 5.65934, 0.22", "1.23272, 23.6994, 6.21403, 0.22", "1.2508, 23.9847, 6.64392, 0.88", "1.31053, 24.2781, 7.1305, 1.47", "1.47973, 24.7381, 7.99079, 0.15", "1.65302, 25.106, 8.68726, 0.15", "1.83804, 25.4846, 9.36766, 0.15", "1.96045, 25.8519, 9.96865, 0.15", "2.02073, 26.2173, 10.5542, 0.15", "1.98867, 26.6508, 11.2411, 0.15", "1.74816, 27.3148, 12.2104, 0.96", "1.54353, 27.6886, 12.7157, 2.06", "1.10194, 28.2864, 13.4529, 0.22", "0.905584, 28.531, 13.727, 0.22", "0.705316, 28.7515, 13.9798, 0.22", "0.396921, 29.0512, 14.3831, 0.22", "0.068319, 29.3469, 14.9146, 0.22", "-0.133914, 29.5324, 15.2788, 1.33", "-0.383981, 29.9033, 15.9181, 2.95" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.377472, 19.0596, 1.39248, 1.25", "-0.120291, 20.1399, 1.33826, 1.25", "-0.71073, 21.5369, 1.36467, 0.81", "-1.12943, 22.7307, 1.49431, 0.81", "-1.44093, 23.8831, 1.69972, 1.11", "-1.63328, 24.9552, 1.95061, 1.4", "-1.6943, 25.8723, 2.20718, 0.59", "-1.57265, 26.7473, 2.58749, 0.59", "-1.18057, 27.7783, 3.17431, 0.52", "-0.819835, 28.3971, 3.5712, 0.59", "-0.391894, 29.0206, 3.99726, 0.59", "0.173525, 29.8403, 4.57522, 0.44", "0.469851, 30.3468, 4.9289, 0.44", "0.550002, 30.6351, 5.0994, 0.44", "0.512374, 31.1508, 5.38038, 0.52", "0.297932, 31.9305, 5.84646, 0.66", "0.053946, 32.5723, 6.25917, 0.29", "-0.141093, 33.0441, 6.59398, 0.29", "-0.34768, 33.6511, 7.02556, 0.37", "-0.56179, 34.4387, 7.56854, 0.88", "-0.759105, 35.253, 8.11954, 1.62", "-0.911958, 36.0055, 8.61307, 2.43", "-1.04747, 36.8588, 9.15696, 2.43", "-1.2129, 38.283, 10.0324, 0.22", "-1.26031, 38.9547, 10.4329, 0.52", "-1.28743, 39.6332, 10.7995, 0.22", "-1.29245, 39.9933, 10.9613, 0.22", "-1.28818, 40.4556, 11.1326, 0.22", "-1.279, 41.0184, 11.279, 0.22", "-1.2774, 41.3945, 11.3518, 0.22", "-1.28223, 41.6413, 11.3892, 0.22", "-1.34703, 42.5217, 11.464, 0.37", "-1.44339, 43.2705, 11.4843, 0.37", "-1.5663, 43.9854, 11.467, 0.52", "-1.69873, 44.7085, 11.4258, 0.96", "-1.84273, 45.5743, 11.339, 0.96", "-2.01644, 46.8975, 11.1239, 0.44", "-2.06119, 47.7599, 10.9239, 0.44", "-2.08118, 48.6549, 10.6753, 1.47", "-2.09181, 49.5888, 10.3851, 2.8", "-2.10225, 50.4513, 10.0876, 3.61", "-2.11786, 51.346, 9.74129, 3.02", "-2.15651, 53.4401, 8.83321, 0.22", "-2.17937, 54.0797, 8.53343, 0.29", "-2.19447, 54.4275, 8.36692, 0.29", "-2.23921, 55.1064, 8.02705, 0.22", "-2.31472, 55.9205, 7.61629, 0.52", "-2.39792, 56.5983, 7.27021, 1.33", "-2.53174, 57.4476, 6.7726, 2.43", "-2.57154, 58.2343, 6.29882, 2.43" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-9.38151, -17.6652, -15.0237, 0.44", "-11.3726, -18.943, -15.9866, 0.44", "-11.4766, -19.3197, -16.3482, 0.44", "-11.5473, -19.7101, -16.7525, 0.44", "-11.6625, -20.1318, -17.1925, 0.44", "-11.8617, -20.6221, -17.7185, 0.59", "-12.2221, -21.2881, -18.491, 0.74", "-12.4643, -21.7371, -19.09, 1.11", "-12.8119, -22.2283, -19.8383, 1.47", "-13.2381, -22.6649, -20.618, 1.47", "-13.9549, -23.1751, -21.7234, 0.59", "-14.5728, -23.4373, -22.5254, 0.52", "-15.0573, -23.5156, -23.0586, 0.52", "-15.6248, -23.5144, -23.5825, 0.44", "-16.2554, -23.4546, -24.0234, 0.44", "-16.5898, -23.4139, -24.2068, 0.44", "-17.4143, -23.3441, -24.5474, 0.96", "-18.1865, -23.3106, -24.8196, 0.96", "-19.0872, -23.3189, -25.1028, 1.4", "-20.2344, -23.3875, -25.4367, 2.36", "-21.1647, -23.4867, -25.6932, 3.32", "-22.2549, -23.6194, -26.0107, 3.61" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-9.38151, -17.6652, -15.0237, 0.29", "-9.11643, -19.1613, -15.6038, 0.29", "-8.99452, -19.6721, -15.8136, 0.29", "-8.83259, -20.3407, -16.1059, 0.29", "-8.7099, -20.8974, -16.3801, 0.81", "-8.59012, -21.4947, -16.7046, 1.11", "-8.44656, -22.3529, -17.2345, 0.22", "-8.31063, -22.9762, -17.7138, 0.22", "-8.27509, -23.3315, -18.0446, 0.22", "-8.28201, -23.8133, -18.5613, 0.22", "-8.27763, -24.0816, -18.7815, 0.37", "-8.2462, -24.5999, -19.1465, 0.37", "-8.19994, -25.0232, -19.3959, 0.81", "-8.10925, -25.6382, -19.6911, 1.7", "-7.98118, -26.5001, -20.077, 2.29", "-7.69184, -28.3796, -20.8516, 0.29", "-7.58645, -29.0196, -21.0837, 0.96", "-7.50747, -29.4492, -21.2179, 0.96", "-7.29236, -30.4469, -21.4961, 0.15", "-7.1217, -31.083, -21.6319, 0.15", "-6.99152, -31.5113, -21.7043, 0.59", "-6.68489, -32.334, -21.8028, 0.29", "-6.46407, -32.8594, -21.8345, 1.4", "-6.10931, -33.6455, -21.854, 2.73", "-5.23567, -35.4649, -21.8264, 0.15", "-5.0988, -35.743, -21.8166, 0.74", "-4.84743, -36.2472, -21.8114, 0.74", "-4.44041, -37.0203, -21.8258, 0.15", "-4.06518, -37.7175, -21.8503, 0.15", "-3.74795, -38.3247, -21.8832, 0.15", "-3.47328, -38.8665, -21.9441, 1.25", "-3.09886, -39.6792, -22.0866, 0.22", "-2.89633, -40.2358, -22.2279, 0.22", "-2.83374, -40.5235, -22.317, 0.22", "-2.8123, -40.939, -22.44, 0.22", "-2.84992, -41.6968, -22.6423, 0.44", "-2.92867, -42.4107, -22.8121, 1.62", "-3.02579, -43.1762, -22.9796, 3.02", "-3.1309, -44.1023, -23.171, 3.02", "-3.31426, -46.1755, -23.5993, 0.29", "-3.35873, -46.9374, -23.7486, 0.81", "-3.37643, -47.601, -23.8639, 1.03", "-3.3714, -48.2912, -23.9785, 0.37", "-3.35318, -48.8263, -24.0503, 1.18", "-3.27227, -49.9064, -24.172, 0.22", "-3.20985, -50.3187, -24.2056, 0.74", "-3.13429, -50.6571, -24.217, 0.74", "-3.02725, -51.0188, -24.2055, 0.15", "-2.71437, -51.9976, -24.1035, 0.44", "-2.61643, -52.2415, -24.0645, 0.44", "-2.26674, -52.9887, -23.9241, 0.22", "-2.05867, -53.4284, -23.856, 1.11", "-1.9068, -53.8008, -23.8123, 1.62", "-1.68594, -54.4228, -23.7584, 1.62", "-1.28906, -55.8514, -23.7185, 0.22", "-1.17256, -56.5741, -23.7085, 0.96", "-1.17662, -57.3212, -23.7084, 1.18", "-1.37811, -58.6396, -23.7446, 0.15", "-1.47723, -59.0811, -23.7643, 0.22", "-1.82813, -60.0965, -23.8421, 0.07", "-2.09155, -60.5403, -23.9033, 0.22", "-2.79225, -61.4086, -24.0552, 0.07", "-3.1088, -61.696, -24.1209, 0.15", "-2.72748, -69.6193, -26.1033, 0.15", "-3.60049, -77.553, -27.8596, 0.15", "-2.61775, -85.5308, -29.3303, 0.15", "-0.918711, -93.2893, -31.3542, 0.15", "0.82317, -100.787, -34.2476, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-3.33531, -42.471, 8.67731, 1.99", "-3.8235, -44.1596, 8.66334, 1.99", "-4.40314, -46.5006, 8.64986, 0.59", "-4.68455, -47.8375, 8.64392, 0.59", "-4.95477, -49.4419, 8.65544, 0.59", "-5.04949, -50.2286, 8.66703, 1.11", "-5.14938, -51.6614, 8.71575, 2.58", "-5.11602, -52.3664, 8.75088, 2.88", "-5.03372, -52.9766, 8.79757, 2.65", "-4.90642, -53.9118, 8.90713, 1.55", "-4.74024, -55.227, 9.11426, 0.74", "-4.63135, -56.4804, 9.33168, 0.44", "-4.59964, -57.5767, 9.53444, 0.29", "-4.629, -58.4247, 9.70365, 0.29", "-4.72702, -59.5056, 9.94376, 0.29", "-4.75755, -59.8478, 10.023, 0.29", "-4.82158, -60.4795, 10.1746, 0.44", "-4.89932, -61.1045, 10.3151, 1.11", "-4.98799, -61.811, 10.4839, 2.36", "-5.1367, -63.2811, 10.8304, 2.73", "-5.31029, -66.022, 11.4693, 0.44", "-5.3352, -66.5621, 11.6066, 0.44", "-5.37687, -67.6042, 11.8919, 0.59", "-5.40595, -68.607, 12.1843, 0.29", "-5.4191, -69.2345, 12.3714, 0.29", "-5.39343, -69.8199, 12.5362, 0.29", "-5.31542, -70.4278, 12.7318, 0.29", "-5.20419, -70.8982, 12.903, 0.88", "-4.98269, -71.5578, 13.1661, 1.84", "-4.72754, -72.1871, 13.4269, 2.14", "-3.95882, -73.9849, 14.2216, 0.44", "-3.62309, -74.7898, 14.5884, 0.66", "-3.22346, -75.7442, 15.0612, 0.29", "-3.07359, -76.0869, 15.2593, 0.29", "-2.92423, -76.442, 15.5095, 0.29", "-2.85112, -76.6685, 15.7113, 0.29", "-2.87684, -76.9079, 15.9434, 0.29", "-3.03992, -77.429, 16.2176, 0.29", "-3.16708, -77.8259, 16.346, 0.29", "-3.30023, -78.2985, 16.4663, 0.29", "-3.4988, -79.0536, 16.6298, 1.18", "-3.67746, -79.828, 16.8094, 2.43", "-3.84782, -80.7267, 17.0357, 2.88", "-4.04865, -82.1181, 17.4186, 1.55", "-4.2074, -83.8881, 17.981, 0.52", "-4.25349, -85.0093, 18.3985, 0.29", "-4.26503, -85.9048, 18.7792, 0.29", "-4.25102, -86.6343, 19.1211, 0.66", "-4.22302, -87.2266, 19.4148, 0.96", "-4.16366, -88.0059, 19.7665, 0.22", "-4.10746, -88.7419, 20.0, 0.22", "-4.06683, -89.5317, 20.1227, 0.29", "-4.03351, -90.2538, 20.1522, 0.59", "-3.99788, -91.4034, 20.1345, 1.33", "-3.97036, -92.6974, 20.074, 2.21", "-3.94611, -93.7288, 20.0072, 3.24", "-3.86866, -95.5416, 19.8771, 1.77", "-3.78267, -97.0563, 19.7819, 0.44", "-3.72026, -98.1272, 19.7272, 0.37", "-3.66156, -99.3387, 19.6849, 0.37", "-3.63064, -100.127, 19.6744, 0.88", "-3.6255, -100.486, 19.6728, 1.77", "-3.66085, -101.637, 19.6647, 3.1", "-3.84327, -103.417, 19.6486, 1.33", "-4.06815, -104.634, 19.6356, 0.74", "-4.4624, -106.055, 19.6184, 0.22", "-4.66933, -106.633, 19.6108, 0.22", "-4.84351, -107.049, 19.6063, 0.52", "-5.33797, -108.039, 19.5994, 0.81", "-5.95028, -109.107, 19.6374, 0.29", "-6.13597, -109.43, 19.6585, 0.37", "-6.5315, -110.196, 19.7207, 0.37", "-6.91301, -111.116, 19.875, 0.44", "-7.26239, -112.177, 20.1359, 0.81", "-7.56795, -113.441, 20.5311, 0.81", "-7.74259, -114.43, 20.8855, 0.81", "-7.95438, -115.695, 21.3758, 0.37", "-8.21313, -117.221, 22.0423, 0.37", "-8.33323, -117.992, 22.4267, 1.18", "-8.40833, -118.738, 22.8523, 2.8", "-8.42305, -119.373, 23.2544, 3.32" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-3.33531, -42.471, 8.67731, 0.66", "-2.19066, -43.3832, 9.40081, 0.66", "-1.45234, -44.0612, 9.86941, 0.44", "-0.945164, -44.6048, 10.1916, 0.88", "-0.607863, -45.0279, 10.407, 0.44", "-0.338406, -45.4231, 10.5729, 0.22", "-0.0854998, -45.8682, 10.7292, 0.22", "0.0548849, -46.3416, 10.8093, 0.22", "0.13597, -46.7827, 10.8625, 0.22", "0.168975, -47.181, 10.9142, 0.59", "0.186338, -47.7635, 11.0213, 1.7", "0.181839, -48.5306, 11.194, 1.47", "0.160435, -49.8568, 11.5428, 0.44", "0.167381, -50.5669, 11.7494, 0.29", "0.173816, -51.0186, 11.886, 0.22", "0.190331, -51.5273, 12.0327, 0.22", "0.209813, -51.8867, 12.1374, 0.96", "0.272236, -52.5804, 12.3224, 2.51", "0.376654, -53.3529, 12.5259, 3.39", "0.510475, -54.0833, 12.7024, 3.1", "0.749086, -55.0603, 12.9511, 1.03", "1.0119, -55.9952, 13.2009, 0.29", "1.2208, -56.6604, 13.4039, 0.22", "1.36645, -57.0909, 13.5519, 0.22", "1.44904, -57.3362, 13.6462, 0.22", "1.57454, -57.6938, 13.7933, 0.29", "1.70948, -58.092, 13.9485, 0.22", "1.84716, -58.575, 14.0604, 0.29", "1.91249, -58.829, 14.0957, 0.81", "2.09903, -59.5805, 14.1449, 1.55", "2.24958, -60.1958, 14.1579, 2.29", "2.38733, -60.7382, 14.1542, 2.06", "2.70994, -61.8773, 14.1514, 0.22", "2.83778, -62.256, 14.1678, 0.22", "2.9481, -62.5298, 14.201, 0.22", "3.00553, -62.6508, 14.2281, 0.22", "3.20067, -63.0228, 14.3542, 0.81", "3.50098, -63.5739, 14.581, 1.84", "3.78728, -64.1346, 14.8483, 2.8", "4.06635, -64.7891, 15.1829, 1.77", "4.26949, -65.3955, 15.4898, 0.81", "4.48617, -66.179, 15.8847, 0.22", "4.5975, -66.6322, 16.1064, 0.29", "4.68688, -67.0806, 16.3216, 0.29", "4.78005, -67.8768, 16.6987, 0.59", "4.80267, -68.608, 17.0561, 1.47", "4.78209, -68.9797, 17.251, 1.92" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "32.7979, 14.7885, 35.78, 0.22", "34.0383, 15.3591, 37.6328, 0.22", "34.875, 15.7439, 38.8826, 0.22", "36.0457, 16.2825, 40.6313, 1.47", "36.5024, 16.4925, 41.3134, 1.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "32.7979, 14.7885, 35.78, 0.29", "34.6908, 13.7051, 37.1007, 0.29", "35.8165, 12.9423, 37.8715, 0.15", "36.2778, 12.6294, 38.1595, 0.22", "37.2065, 12.0083, 38.6946, 0.22", "38.3099, 11.2451, 39.3277, 0.22", "39.1725, 10.6609, 39.7878, 0.22", "40.3562, 9.82772, 40.3667, 0.22", "41.5322, 8.99516, 40.8977, 0.22", "42.7609, 8.18043, 41.3964, 0.22", "44.2886, 7.28806, 41.9019, 0.15", "45.6914, 6.56892, 42.2602, 0.15", "46.3858, 6.25366, 42.4061, 0.15", "47.2305, 5.86845, 42.5574, 0.66", "48.0802, 5.46858, 42.6838, 1.25", "49.4769, 4.82421, 42.8376, 0.15", "50.185, 4.508, 42.8984, 0.15", "51.3543, 3.99329, 42.9774, 0.88", "52.9671, 3.29932, 43.0603, 0.15", "53.6404, 3.02107, 43.0832, 0.44", "54.5199, 2.66044, 43.1248, 1.18", "56.321, 1.92439, 43.2492, 0.07", "57.6482, 1.41682, 43.3614, 0.07", "58.6869, 1.0215, 43.4887, 1.47", "59.2876, 0.807113, 43.5887, 1.47", "61.2395, 0.08882, 43.9759, 0.15", "62.0809, -0.250434, 44.194, 1.11", "62.7661, -0.559355, 44.4139, 1.47", "64.8602, -1.60426, 45.2049, 0.07", "65.9664, -2.24193, 45.6707, 0.15", "66.7527, -2.75425, 46.0327, 0.22", "67.8294, -3.53791, 46.6063, 0.07", "68.4524, -4.01237, 46.9769, 1.18", "69.1775, -4.55908, 47.4333, 1.77", "70.8412, -5.79081, 48.4951, 0.07", "71.7898, -6.36736, 49.0261, 0.15", "73.5221, -7.14718, 49.8853, 0.74", "74.891, -7.54421, 50.4667, 0.15", "75.7598, -7.65612, 50.7887, 0.81", "76.654, -7.64603, 51.0787, 2.14", "79.8802, -7.16133, 51.9639, 0.15", "81.0039, -6.86851, 52.2548, 0.15", "81.8969, -6.55154, 52.4873, 0.37", "83.5156, -5.85967, 52.9974, 0.07", "84.1541, -5.54637, 53.2683, 0.88", "84.7181, -5.21548, 53.5785, 1.25", "86.1307, -4.16405, 54.7028, 0.07", "86.7992, -3.57834, 55.3923, 1.11", "87.3485, -3.01656, 56.1338, 1.55", "88.0537, -2.28078, 57.3219, 0.07", "88.3807, -1.95822, 57.9436, 0.74", "88.9683, -1.38803, 59.215, 0.15", "89.4277, -0.934623, 60.3327, 0.81", "89.9225, -0.467359, 61.5765, 1.25", "90.7324, 0.220056, 63.6116, 0.22", "91.086, 0.473651, 64.5005, 0.22", "91.2833, 0.570472, 64.9564, 0.22", "91.7617, 0.696703, 65.9148, 0.15", "92.2484, 0.748193, 66.8039, 0.81", "93.377, 0.699043, 68.5797, 0.22", "94.316, 0.598834, 69.8904, 0.22", "95.1608, 0.438959, 70.9124, 1.62", "96.1233, 0.192804, 71.9581, 0.15", "96.8436, -0.019647, 72.6627, 0.96", "98.6645, -0.546518, 74.1715, 0.07", "99.8615, -0.864364, 75.0445, 0.59", "101.465, -1.21618, 76.1669, 0.07", "102.621, -1.41844, 76.9862, 0.07", "103.351, -1.52358, 77.5072, 1.25", "105.607, -1.71943, 79.0803, 0.07", "106.779, -1.73574, 79.8457, 0.81", "108.639, -1.62823, 81.0255, 0.07", "109.211, -1.53741, 81.3952, 0.07", "109.911, -1.36305, 81.8615, 1.03", "111.38, -0.922155, 82.8717, 0.07", "112.726, -0.384941, 83.8364, 0.07", "114.173, 0.279923, 84.8327, 0.07", "115.066, 0.772473, 85.4209, 0.66", "115.687, 1.13522, 85.8442, 1.03" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.42458, 39.3425, 0.0, 0.181543", "13.1052, 53.8839, 0.0, 0.181543", "16.7858, 68.4253, 0.0, 0.181543" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-0.383981, 29.9033, 15.9181, 0.22", "-1.01035, 30.1561, 16.903, 0.22", "-1.24725, 30.3108, 17.2793, 0.22", "-1.41439, 30.5025, 17.6232, 0.15", "-1.53351, 30.7048, 17.9557, 0.15", "-1.61437, 30.8616, 18.1863, 0.15", "-1.73015, 31.1901, 18.6056, 0.66", "-1.81154, 31.4938, 18.958, 0.22", "-1.94493, 31.9615, 19.5172, 0.22", "-2.04845, 32.3251, 19.9616, 1.62", "-2.16401, 32.7666, 20.5221, 3.1", "-2.47147, 33.869, 22.0157, 0.29", "-2.60271, 34.2829, 22.6245, 0.22", "-2.6722, 34.4634, 22.8984, 0.22", "-2.69268, 34.512, 22.9699, 0.22", "-2.7807, 34.7219, 23.281, 0.22", "-2.8706, 34.9372, 23.6332, 0.22", "-3.03095, 35.1839, 24.1172, 0.22", "-3.18937, 35.475, 24.6238, 0.88", "-3.27893, 35.6453, 24.8904, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-0.383981, 29.9033, 15.9181, 0.22", "0.98385, 30.3758, 15.8406, 0.22", "1.61745, 30.5947, 15.8047, 0.37", "2.16789, 30.7849, 15.7735, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-2.57154, 58.2343, 6.29882, 0.15", "-3.33429, 60.011, 6.26208, 0.15", "-3.73306, 60.95, 6.29224, 0.81", "-4.04454, 61.6703, 6.28317, 1.18", "-4.69857, 63.1625, 6.23425, 0.22", "-5.03359, 63.9735, 6.19991, 0.81", "-5.23148, 64.4954, 6.19128, 0.81", "-5.57821, 65.639, 6.27004, 0.07", "-5.87538, 66.8639, 6.38069, 0.07", "-5.99727, 67.5108, 6.43676, 0.96", "-6.15185, 68.5208, 6.50554, 1.92", "-6.37287, 69.8809, 6.61696, 0.22", "-6.47424, 70.6079, 6.70455, 0.22", "-6.55157, 71.2662, 6.8089, 0.22", "-6.61782, 71.8852, 6.9416, 0.81", "-6.70929, 72.6275, 7.10488, 1.11", "-6.9753, 74.2454, 7.44425, 0.15", "-7.19873, 75.4413, 7.64997, 0.15", "-7.29766, 75.9511, 7.72669, 0.74", "-7.46426, 77.0044, 7.87094, 1.92", "-7.52046, 77.4966, 7.92839, 2.88", "-7.5984, 78.5731, 8.06141, 1.84", "-7.64793, 80.2581, 8.28701, 0.22", "-7.66376, 81.3543, 8.43785, 0.59", "-7.65443, 82.0981, 8.5365, 0.59", "-7.61787, 83.0551, 8.64144, 0.22", "-7.55014, 84.1208, 8.72516, 0.22", "-7.49123, 84.9047, 8.7466, 0.22", "-7.49187, 85.7191, 8.70278, 0.15", "-7.60039, 86.744, 8.55108, 0.15", "-7.76034, 87.5562, 8.35053, 0.88", "-8.02086, 88.594, 8.00371, 1.77", "-8.23817, 89.3661, 7.70641, 1.77", "-8.76143, 90.8828, 7.10482, 0.15", "-9.05217, 91.6212, 6.81992, 0.37", "-9.32716, 92.2947, 6.58814, 0.96", "-9.65159, 93.1115, 6.38029, 1.77", "-10.1411, 94.4437, 6.16313, 0.29", "-10.57, 95.8181, 6.04223, 0.15", "-10.6531, 96.1828, 6.03283, 0.52", "-10.8335, 96.9822, 6.03709, 1.18", "-11.1475, 98.308, 6.08403, 0.15", "-11.3388, 99.1151, 6.12855, 0.15", "-11.4789, 99.838, 6.18957, 1.03", "-11.6304, 101.23, 6.3643, 2.8" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-2.57154, 58.2343, 6.29882, 0.22", "-2.02435, 59.6554, 6.92661, 0.22", "-1.51161, 61.0178, 7.5601, 0.22", "-1.11288, 62.0643, 8.0395, 0.96", "-0.796896, 62.8299, 8.37785, 1.18", "-0.179652, 64.1883, 8.93541, 0.15", "0.242807, 65.0049, 9.25666, 0.15", "0.575069, 65.5677, 9.44348, 0.15", "0.94829, 66.2078, 9.59717, 0.15", "1.31303, 66.9438, 9.69864, 0.15", "1.68005, 67.8158, 9.73856, 1.33", "2.0924, 68.9476, 9.68485, 2.73", "2.39177, 69.9973, 9.59479, 3.1", "2.9378, 73.0146, 9.2719, 0.22", "3.07831, 74.3744, 9.11573, 0.15", "3.11701, 75.3118, 9.00732, 0.52", "3.12252, 76.1792, 8.90541, 0.74", "3.09358, 77.96, 8.68963, 0.22", "3.08248, 79.0015, 8.58131, 1.18", "3.0982, 79.944, 8.5168, 2.58", "3.22222, 82.2781, 8.47294, 0.22", "3.29136, 83.2504, 8.48447, 0.22", "3.36408, 84.2718, 8.51519, 0.81", "3.47527, 85.9352, 8.58861, 2.51", "3.61974, 88.7943, 8.75443, 0.22", "3.63324, 90.0145, 8.84282, 0.29", "3.5661, 91.3633, 8.96082, 0.15", "3.43729, 92.7307, 9.08675, 0.15", "3.27999, 93.8054, 9.18941, 1.03", "3.07741, 94.7276, 9.27933, 1.99", "2.74126, 95.7388, 9.38009, 1.99", "1.80139, 97.9849, 9.59839, 0.15", "1.34069, 98.9049, 9.68511, 0.15", "0.892483, 99.697, 9.7427, 0.15", "0.517903, 100.283, 9.77438, 0.44", "-0.590803, 101.777, 9.84326, 0.15", "-1.53799, 102.878, 9.88857, 1.47", "-2.4102, 103.727, 9.93161, 2.51", "-3.89451, 105.028, 10.0213, 0.37", "-4.73291, 105.71, 10.0681, 0.22", "-5.4968, 106.267, 10.1046, 0.07", "-6.22884, 106.727, 10.1559, 0.29", "-7.6084, 107.475, 10.3016, 0.07", "-8.77897, 108.073, 10.4556, 0.44", "-10.4058, 108.851, 10.6907, 0.07", "-11.7491, 109.484, 10.8652, 0.15", "-12.6598, 109.895, 10.9192, 0.74", "-13.8728, 110.417, 10.9726, 1.84", "-15.7992, 111.173, 11.0215, 0.15", "-16.851, 111.56, 11.032, 0.59", "-17.6914, 111.855, 11.0285, 0.29", "-19.5684, 112.54, 10.9184, 1.03" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-22.2549, -23.6194, -26.0107, 1.47", "-23.6067, -23.8678, -26.385, 1.47", "-24.9842, -24.2386, -26.9626, 0.52", "-25.6302, -24.4838, -27.306, 0.52", "-26.2506, -24.7192, -27.6358, 1.11", "-26.9372, -24.9798, -28.0008, 2.21", "-27.5689, -25.2195, -28.3365, 1.11", "-28.6088, -25.7816, -29.0765, 0.44", "-29.1967, -26.245, -29.612, 1.47", "-36.9309, -28.6391, -31.7761, 1.47" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-22.2549, -23.6194, -26.0107, 0.22", "-22.4327, -25.8532, -26.5939, 0.22", "-22.5078, -26.5906, -26.8004, 0.22", "-22.6035, -27.4798, -27.0406, 0.96", "-22.7288, -28.7696, -27.4167, 0.22", "-22.7922, -29.6565, -27.7068, 0.22", "-22.842, -30.3537, -27.9348, 0.81", "-22.8971, -31.0751, -28.195, 1.92", "-22.9578, -31.9417, -28.5045, 0.81", "-23.0085, -33.0456, -28.9527, 0.15", "-23.015, -33.8835, -29.3481, 0.66", "-22.9533, -42.9706, -33.959, 0.66", "-24.178, -52.5701, -36.8716, 0.66", "-25.5998, -61.8665, -40.672, 0.66", "-28.417, -71.2146, -43.2777, 0.66", "-32.1514, -80.2177, -46.0288, 0.66", "-34.0787, -90.0025, -47.3223, 0.66", "-35.0296, -99.9689, -46.7858, 0.66", "-36.735, -109.619, -44.6679, 0.66" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.42305, -119.373, 23.2544, 0.37", "-7.30303, -120.727, 23.8497, 0.37", "-6.74251, -121.622, 24.2326, 0.22", "-6.49284, -122.151, 24.4614, 0.22", "-6.25491, -122.805, 24.7479, 0.22", "-6.07803, -123.405, 25.0005, 0.29", "-5.91513, -124.164, 25.2857, 0.29", "-5.9166, -124.812, 25.4916, 0.22", "-5.97006, -125.438, 25.6749, 0.81", "-6.03476, -126.036, 25.849, 1.77", "-6.09773, -126.647, 26.0198, 2.43", "-6.17076, -127.864, 26.32, 0.96", "-6.21593, -129.572, 26.7196, 0.22", "-6.24427, -130.239, 26.8709, 1.18", "-6.30781, -130.995, 27.038, 1.7", "-6.34836, -131.317, 27.1089, 1.7", "-6.52899, -132.359, 27.367, 0.74", "-6.7375, -133.369, 27.6336, 0.29", "-6.95104, -134.325, 27.8761, 0.29", "-7.09419, -135.048, 28.0689, 0.29", "-7.22821, -135.639, 28.2289, 0.66", "-7.39185, -136.309, 28.4239, 1.47", "-7.54383, -136.906, 28.6166, 2.73", "-7.64084, -137.459, 28.7974, 2.88", "-7.64673, -138.883, 29.2858, 1.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-8.42305, -119.373, 23.2544, 0.22", "-10.5921, -120.281, 23.8401, 0.22", "-11.7407, -120.777, 24.1052, 0.22", "-12.2593, -121.044, 24.206, 0.22", "-12.6542, -121.274, 24.2747, 0.22", "-13.2683, -121.656, 24.3932, 0.29", "-13.7352, -121.949, 24.4861, 0.96", "-14.7266, -122.584, 24.6142, 1.84", "-16.1489, -123.503, 24.7163, 0.22", "-16.9965, -124.034, 24.7606, 0.22", "-17.9378, -124.554, 24.7975, 0.96", "-19.0862, -125.063, 24.8491, 0.22", "-20.2188, -125.366, 24.8938, 0.22", "-20.6622, -125.412, 24.9095, 0.22", "-21.608, -125.405, 24.9542, 0.22", "-22.7501, -125.38, 25.0235, 0.29", "-23.5445, -125.391, 25.0827, 1.25", "-24.9518, -125.49, 25.2415, 2.88", "-25.5412, -125.554, 25.3262, 2.73", "-27.9276, -125.968, 25.6624, 0.29", "-28.862, -126.212, 25.7906, 0.66", "-30.1089, -126.607, 25.9531, 0.29", "-30.8473, -126.853, 26.0274, 0.22", "-31.8259, -127.164, 26.1127, 0.22", "-32.8389, -127.441, 26.1726, 0.22", "-34.4146, -127.776, 26.2158, 0.22", "-35.1179, -127.859, 26.2049, 0.37", "-36.3301, -127.943, 26.1586, 0.37", "-37.4466, -127.981, 26.0896, 0.66", "-38.1859, -127.979, 26.0301, 1.62", "-39.0493, -127.884, 25.9376, 2.51", "-40.5412, -127.545, 25.7296, 2.73" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "4.78209, -68.9797, 17.251, 3.24", "5.04205, -70.5029, 17.3328, 3.24", "5.30081, -71.815, 17.4008, 3.24", "5.88854, -74.4909, 17.5372, 0.22", "6.29531, -76.1968, 17.6222, 0.29", "6.52526, -77.1061, 17.6666, 0.22", "6.82042, -78.2102, 17.7192, 0.22", "7.02917, -78.8978, 17.7378, 0.22", "7.19937, -79.4156, 17.7539, 0.22", "7.47781, -80.2457, 17.7815, 0.74", "7.64642, -80.8191, 17.7981, 0.74", "7.82586, -81.8072, 17.8415, 0.22", "7.90319, -82.681, 17.902, 0.22", "8.00309, -83.8956, 17.9807, 0.22", "8.0864, -84.6903, 17.9901, 0.22", "8.23794, -85.7985, 17.9628, 0.22", "8.46003, -86.9433, 17.9067, 1.33", "8.82083, -88.4196, 17.794, 3.02", "9.41815, -90.3056, 17.6082, 0.88", "10.0717, -92.1032, 17.4428, 0.22", "10.4217, -93.0122, 17.3705, 0.22", "10.9064, -94.2419, 17.2938, 0.22", "11.1885, -94.993, 17.2717, 1.18", "11.6962, -96.4882, 17.3327, 2.06", "12.2914, -98.5945, 17.6325, 0.22", "12.4828, -99.5947, 17.8745, 0.52", "12.5891, -100.455, 18.1264, 0.52", "12.7378, -102.088, 18.6722, 0.22", "12.7949, -102.803, 18.9374, 0.22", "12.902, -104.405, 19.5805, 1.99", "13.1336, -107.133, 20.6987, 0.29", "13.2022, -108.019, 21.0569, 0.22", "13.3139, -109.514, 21.6432, 0.22", "13.3815, -110.272, 21.917, 1.03", "13.4672, -111.167, 22.2133, 2.14", "13.561, -112.011, 22.4755, 2.06", "13.8074, -114.108, 23.1009, 0.22", "13.8857, -115.038, 23.3624, 0.66", "13.9931, -116.983, 23.8755, 0.22", "14.05, -118.238, 24.1809, 0.22", "14.0959, -119.06, 24.3466, 0.66", "14.1817, -120.294, 24.5562, 0.22", "14.2804, -121.403, 24.7141, 1.55", "14.3608, -122.319, 24.8278, 2.8", "14.4473, -123.242, 24.9196, 2.58", "14.8334, -126.341, 25.1184, 0.22", "14.9267, -127.305, 25.1798, 0.22", "14.9902, -128.136, 25.2188, 0.59", "15.0406, -128.883, 25.2592, 0.29", "15.0918, -129.85, 25.3149, 1.03", "15.1444, -131.009, 25.3693, 2.06", "15.1859, -133.347, 25.4307, 0.15", "15.2018, -133.936, 25.4306, 0.15", "15.268, -135.235, 25.3973, 0.29", "15.3246, -136.118, 25.367, 0.15", "15.3978, -137.125, 25.3249, 0.15", "15.4775, -137.976, 25.3052, 0.96", "15.5867, -138.864, 25.2849, 2.06", "15.7115, -140.082, 25.3035, 2.14", "15.9192, -142.962, 25.4322, 0.22", "15.943, -143.894, 25.5294, 0.22", "15.9362, -145.182, 25.7333, 0.22", "15.9268, -145.563, 25.8126, 0.59", "15.8779, -146.508, 26.046, 1.4", "15.8186, -147.499, 26.3164, 0.66", "15.7111, -149.534, 26.9209, 0.22", "15.6253, -150.528, 27.185, 0.22", "15.5463, -151.279, 27.3554, 0.22", "15.4703, -152.095, 27.5281, 1.03", "15.3992, -153.325, 27.7575, 2.21", "15.3454, -155.936, 28.2205, 0.15", "15.384, -157.504, 28.46, 0.15", "15.4095, -158.146, 28.5545, 0.81", "15.4508, -159.062, 28.6835, 1.33", "15.5105, -160.433, 28.8757, 0.22", "15.5673, -161.811, 29.0595, 0.22", "15.6092, -162.665, 29.1642, 0.88", "15.6475, -163.419, 29.2709, 0.66", "15.7259, -165.119, 29.5597, 0.15", "15.7915, -166.369, 29.7983, 0.15", "15.8281, -166.837, 29.8969, 0.74", "15.9343, -167.78, 30.0995, 1.18", "16.2144, -169.676, 30.5349, 0.22", "16.4371, -170.769, 30.8171, 0.22", "16.6315, -171.45, 30.9943, 0.22", "16.8665, -172.138, 31.179, 0.22", "17.1811, -172.994, 31.4018, 0.22", "17.5173, -173.943, 31.6311, 1.33", "17.8724, -175.044, 31.8742, 2.21", "18.4295, -177.009, 32.2625, 0.15", "18.6796, -177.812, 32.4342, 0.29", "18.8158, -178.201, 32.5225, 0.29", "19.3004, -179.432, 32.8276, 0.15", "19.4406, -179.793, 32.9179, 0.15", "19.7212, -180.597, 33.1006, 0.66", "20.1759, -182.022, 33.4501, 0.15", "20.3426, -182.585, 33.5767, 0.15", "20.4745, -182.994, 33.6834, 0.15", "20.806, -183.94, 33.9756, 0.15", "21.0058, -184.542, 34.1707, 0.37", "21.2662, -185.413, 34.4456, 1.03", "21.5277, -186.345, 34.7368, 0.22", "21.9226, -187.655, 35.1481, 0.22", "22.2911, -188.772, 35.4936, 1.4", "22.6362, -189.747, 35.7794, 2.14", "23.0013, -190.804, 36.0772, 1.4", "23.6266, -192.813, 36.5927, 0.22", "23.7966, -193.445, 36.737, 0.81", "23.9709, -194.246, 36.8945, 1.55", "24.2551, -195.803, 37.1785, 0.29", "24.4628, -197.174, 37.4266, 0.22", "24.5768, -198.106, 37.5845, 0.22", "24.6457, -199.057, 37.7114, 0.29", "24.6874, -200.141, 37.8583, 0.15", "24.7055, -200.97, 37.9682, 0.96", "24.715, -201.542, 38.0369, 1.47", "24.746, -202.397, 38.1159, 1.47", "24.8649, -203.897, 38.2464, 0.22", "25.0493, -205.367, 38.3801, 0.22", "25.1922, -206.19, 38.4476, 0.88", "25.434, -207.29, 38.537, 0.88", "25.8754, -209.003, 38.689, 0.15", "26.2417, -210.164, 38.8037, 0.15", "26.5484, -210.998, 38.889, 0.81", "27.0677, -212.33, 39.0708, 0.15", "27.4011, -213.19, 39.2245, 0.81", "27.7896, -214.224, 39.4439, 0.52", "28.1007, -215.155, 39.6634, 1.62", "28.3552, -216.124, 39.904, 1.62", "28.7486, -218.104, 40.3637, 0.22", "28.9176, -219.211, 40.5989, 0.22", "28.9968, -219.872, 40.7104, 0.74", "29.0672, -220.614, 40.8095, 0.29", "29.1393, -221.688, 40.9355, 1.47", "29.1947, -222.433, 41.0139, 1.47", "29.3183, -224.189, 41.1472, 0.15", "29.4119, -225.044, 41.2573, 0.52", "29.588, -226.235, 41.4547, 0.15", "29.7486, -227.132, 41.6265, 0.15", "29.8433, -227.629, 41.7296, 0.66", "30.021, -228.541, 41.9307, 1.47", "30.427, -230.564, 42.3891, 0.22", "30.6605, -231.669, 42.619, 0.15", "30.822, -232.391, 42.7349, 0.15", "31.0264, -233.311, 42.8648, 0.74", "31.3086, -234.699, 43.0362, 0.15", "31.4937, -235.617, 43.1359, 0.15", "31.7482, -237.103, 43.267, 0.22", "31.901, -238.087, 43.3684, 1.18", "32.0681, -239.238, 43.5034, 1.7", "32.4235, -241.636, 43.8262, 0.22", "32.5655, -242.568, 43.9612, 0.22", "32.7123, -243.441, 44.0984, 0.15", "32.9348, -244.692, 44.3203, 0.15", "33.038, -245.411, 44.4647, 0.44", "33.2691, -247.396, 44.8732, 0.15", "33.3161, -248.03, 45.0222, 0.88", "33.3469, -248.927, 45.2412, 1.7", "33.359, -249.926, 45.4829, 1.4", "33.3325, -252.25, 46.0068, 0.15", "33.3227, -252.72, 46.1056, 0.22", "33.2683, -254.367, 46.4264, 0.07", "33.2492, -255.206, 46.574, 1.33", "33.2385, -255.944, 46.6914, 1.33", "33.2718, -257.296, 46.8912, 0.07", "33.3646, -258.286, 47.0091, 0.15", "33.4557, -258.947, 47.0772, 0.15", "33.5769, -259.612, 47.1339, 0.22", "33.8207, -260.878, 47.2391, 0.07", "33.9046, -261.342, 47.2762, 0.66", "34.0245, -262.09, 47.329, 0.29", "34.2864, -263.85, 47.432, 0.15", "34.3627, -264.305, 47.4608, 0.22", "34.5193, -265.235, 47.5303, 0.07", "34.6568, -266.065, 47.6087, 0.74", "34.8448, -267.367, 47.7646, 0.15", "34.9221, -268.005, 47.8546, 0.59", "35.0801, -269.729, 48.1081, 0.15", "35.1385, -270.458, 48.234, 0.29", "35.1989, -271.373, 48.3879, 0.15", "35.2334, -272.11, 48.5081, 0.88", "35.2487, -272.751, 48.6059, 1.92", "35.2623, -275.538, 48.9949, 0.22", "35.256, -276.969, 49.1694, 1.7", "35.2488, -280.114, 49.5125, 0.15", "35.2347, -281.448, 49.6363, 0.15", "35.2159, -282.279, 49.7064, 0.81", "35.1548, -284.157, 49.8416, 0.22", "35.1214, -285.223, 49.9001, 1.25", "35.109, -285.803, 49.9248, 1.84", "35.0859, -288.432, 50.0709, 0.15", "35.0953, -289.111, 50.112, 0.29", "35.1544, -290.32, 50.2243, 0.07", "35.2036, -291.067, 50.3116, 0.15", "35.3372, -292.84, 50.5595, 0.15", "35.3812, -293.315, 50.6348, 0.52", "35.4578, -293.992, 50.7543, 1.4", "35.5992, -295.938, 51.1418, 0.07", "35.644, -297.327, 51.4388, 0.15", "35.6269, -297.969, 51.5932, 0.74", "35.5855, -298.615, 51.7587, 1.92", "35.5075, -299.601, 52.0448, 1.92", "35.2882, -302.17, 52.8697, 0.15", "35.2156, -303.07, 53.2125, 0.59", "35.1588, -304.542, 53.8848, 0.07", "35.1578, -304.884, 54.0613, 0.15", "35.202, -306.021, 54.6976, 0.15", "35.2661, -306.814, 55.1587, 0.37", "35.4059, -307.801, 55.7199, 0.96", "35.5992, -308.702, 56.1729, 1.47", "36.0341, -310.263, 56.8912, 0.15", "36.3026, -311.145, 57.2612, 0.15", "36.5185, -311.824, 57.5064, 1.11", "36.7432, -312.524, 57.7244, 1.7", "37.3863, -314.633, 58.2424, 0.15", "37.6054, -315.38, 58.3984, 0.81", "37.87, -316.262, 58.5551, 1.03", "38.5745, -318.37, 58.9211, 0.15", "38.8677, -319.16, 59.0659, 0.22", "39.2585, -320.209, 59.2469, 0.07", "39.5019, -320.911, 59.3537, 0.88", "39.7765, -321.74, 59.4803, 1.62", "40.4414, -323.693, 59.8138, 0.15", "40.8074, -324.649, 59.9863, 1.33", "41.5388, -326.455, 60.334, 0.07", "41.7483, -327.006, 60.4492, 0.22", "42.329, -328.766, 60.8483, 0.07", "42.5291, -329.454, 61.0281, 0.96", "42.9863, -331.285, 61.5482, 0.15", "43.1946, -332.108, 61.8031, 1.11", "43.8753, -334.619, 62.6369, 0.15", "44.1907, -335.717, 62.984, 1.11", "44.4813, -336.711, 63.2721, 1.47", "45.1274, -339.081, 63.8975, 0.15", "45.3571, -339.924, 64.0905, 0.88", "45.6558, -340.948, 64.2703, 1.33", "46.3393, -343.239, 64.4914, 0.15", "46.6722, -344.452, 64.5095, 0.96", "47.2025, -346.768, 64.3625, 0.15", "47.3425, -347.714, 64.2433, 0.15", "47.4122, -348.727, 64.1007, 0.74", "47.353, -350.271, 63.8708, 0.44", "47.2065, -351.325, 63.7077, 1.11", "47.0345, -352.124, 63.5899, 1.7", "46.274, -354.986, 63.2227, 0.15", "45.8268, -356.458, 63.076, 1.33", "45.3625, -357.863, 62.9862, 0.15", "45.1728, -358.415, 62.9762, 0.74", "44.9406, -359.088, 63.0016, 1.4", "44.6413, -359.972, 63.0681, 0.74" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "4.78209, -68.9797, 17.251, 1.03", "6.97395, -69.7966, 21.5961, 1.03", "7.46194, -69.9265, 22.4864, 1.03", "7.93924, -70.0216, 23.2906, 1.03", "8.41568, -70.1175, 24.0585, 1.03", "8.79258, -70.1948, 24.6147, 1.03", "9.33257, -70.3135, 25.3455, 1.03", "9.80126, -70.4002, 25.6858, 0.88", "10.2086, -70.4947, 25.9944, 0.88", "10.7113, -70.6993, 26.488, 0.44", "11.1357, -71.0661, 27.0656, 0.59", "11.3999, -71.3733, 27.5042, 0.22", "12.0334, -71.97, 28.553, 0.22", "12.5622, -72.3553, 29.4025, 0.44", "12.8986, -72.5153, 29.9081, 1.4", "13.5561, -72.6801, 30.804, 2.14", "14.6125, -72.7564, 32.0282, 0.59", "16.3877, -72.6739, 33.7034, 0.59", "17.0578, -72.5938, 34.1702, 0.44", "18.2997, -72.384, 34.8295, 0.81", "19.3584, -72.1536, 35.2884, 1.99", "20.9658, -71.7453, 35.7973, 0.22", "21.7326, -71.5532, 35.956, 1.03", "22.84, -71.3081, 36.088, 0.22", "24.0814, -71.0812, 36.219, 0.96", "24.8904, -70.952, 36.2972, 1.92", "26.7821, -70.6862, 36.6236, 0.22", "27.5695, -70.5641, 36.8274, 0.22", "28.0292, -70.486, 36.9677, 0.22", "28.8309, -70.3389, 37.2318, 1.11", "29.8534, -70.1391, 37.5667, 2.58", "31.8454, -69.6959, 38.2213, 1.11", "32.795, -69.4537, 38.5407, 0.44", "33.6473, -69.2487, 38.8395, 0.44", "34.1685, -69.1423, 39.0432, 0.22", "34.6276, -69.0797, 39.2305, 0.22", "35.0774, -69.0545, 39.4202, 0.22", "35.8304, -69.0737, 39.7708, 1.4", "37.1561, -69.2136, 40.5759, 0.37", "38.1573, -69.3823, 41.4246, 0.29", "38.8707, -69.5842, 42.2013, 0.29", "38.998, -69.6404, 42.3681, 0.29", "39.3674, -69.9271, 43.0058, 0.29", "39.6525, -70.2718, 43.6436, 0.29", "40.0263, -70.8933, 44.6205, 0.59", "40.2534, -71.3968, 45.3147, 1.84", "40.4259, -71.872, 45.9325, 2.06", "40.7665, -72.9729, 47.2799, 0.52", "40.9165, -73.6388, 48.0198, 0.22", "41.0056, -74.2546, 48.6586, 0.22", "41.0146, -74.6561, 49.0567, 0.22", "40.9688, -74.912, 49.3513, 0.52", "40.8277, -75.216, 49.7946, 0.81", "40.3245, -75.7474, 50.9362, 0.22", "39.9411, -75.9824, 51.7363, 1.47", "39.684, -76.0762, 52.2761, 1.92", "39.1286, -76.1749, 53.5069, 0.44", "38.874, -76.1684, 54.0978, 0.22", "38.5932, -76.068, 54.7841, 0.81", "38.1686, -75.7723, 55.8912, 0.22", "37.9567, -75.5954, 56.4632, 0.22", "37.8533, -75.5071, 56.7661, 0.22", "37.6652, -75.3752, 57.3476, 0.59", "37.2872, -75.1782, 58.5935, 0.37", "37.0637, -75.0946, 59.405, 0.37", "36.9257, -75.035, 60.115, 0.37", "36.8788, -75.0008, 60.6941, 0.37", "36.916, -75.0294, 61.4439, 0.37", "37.0199, -75.1425, 61.9998, 0.37", "37.145, -75.2977, 62.4825, 0.37", "37.3113, -75.4642, 63.1103, 0.37", "37.3449, -75.4934, 63.8122, 0.37", "37.115, -75.4736, 64.523, 0.37", "36.7077, -75.4199, 65.2033, 0.37", "36.2519, -75.3184, 65.7608, 0.37", "35.9871, -75.2421, 66.015, 0.37", "34.8851, -74.8029, 66.9444, 0.29", "33.7733, -74.1597, 67.8056, 0.22", "33.4224, -73.9207, 68.0643, 0.22", "32.7271, -73.4009, 68.6066, 0.15", "32.2533, -73.0404, 69.0206, 0.59", "31.8134, -72.7061, 69.4299, 0.29", "31.4273, -72.4304, 69.83, 0.88", "30.8166, -72.033, 70.5468, 0.96", "29.9241, -71.5855, 71.5749, 0.22", "29.3802, -71.3867, 72.1843, 1.33", "29.013, -71.2885, 72.5814, 1.4", "28.1012, -71.1399, 73.5031, 0.15", "27.8578, -71.1294, 73.7582, 0.15", "27.5354, -71.1421, 74.1148, 0.15", "27.2963, -71.1796, 74.3819, 0.15", "27.1402, -71.2061, 74.5643, 0.81", "26.9065, -71.2104, 74.8553, 0.81", "26.1418, -71.106, 75.8705, 0.22", "25.7153, -70.9789, 76.4274, 0.22", "25.3034, -70.8162, 76.9501, 1.11", "24.9021, -70.6172, 77.4386, 1.62", "23.9981, -70.075, 78.4615, 0.22", "23.4641, -69.6846, 79.0083, 1.11", "22.734, -69.0781, 79.6473, 0.22", "22.214, -68.6428, 80.0511, 0.22", "21.9537, -68.4209, 80.2348, 1.03", "21.4401, -67.9848, 80.5556, 1.03", "20.7283, -67.3839, 80.9389, 0.22", "20.0139, -66.7561, 81.2817, 0.52", "19.2334, -66.0188, 81.6414, 0.15", "18.9528, -65.7246, 81.7642, 0.15", "18.7564, -65.4862, 81.8659, 0.52", "18.4898, -65.1191, 82.0201, 1.18", "17.7478, -63.9612, 82.4904, 0.22", "17.4153, -63.3254, 82.6811, 1.03", "17.2316, -62.9028, 82.7657, 1.99", "16.5888, -61.198, 82.9827, 0.29", "16.4337, -60.7222, 82.9957, 0.96", "16.2329, -59.9977, 82.9406, 1.7", "15.9351, -58.5094, 82.645, 0.22", "15.8299, -57.8057, 82.4201, 0.22", "15.7737, -57.2295, 82.1608, 0.96", "15.7576, -56.2535, 81.579, 0.07", "15.7804, -55.6682, 81.1856, 0.74", "15.869, -54.9034, 80.6049, 0.22", "16.0411, -54.1567, 80.0017, 0.22", "16.3546, -53.5248, 79.4482, 0.66", "16.9582, -52.7613, 78.7282, 0.07", "17.428, -52.3516, 78.3144, 0.22", "18.1275, -51.886, 77.837, 0.07", "18.8589, -51.4796, 77.4055, 1.11", "20.9124, -50.5289, 76.4115, 0.07", "21.4011, -50.339, 76.2185, 0.07", "21.7615, -50.2234, 76.1057, 0.29", "22.7527, -49.9338, 75.8668, 0.07" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "36.5024, 16.4925, 41.3134, 0.22", "36.8478, 17.0274, 42.2574, 0.22", "37.2096, 17.4354, 43.1015, 0.22", "37.5412, 17.7317, 43.7878, 0.52", "38.0238, 18.1147, 44.6928, 1.7", "38.4866, 18.3972, 45.415, 2.06", "39.495, 18.8955, 46.8631, 0.52", "40.2596, 19.2202, 47.9038, 0.66", "40.9574, 19.4963, 48.7987, 2.14", "41.3706, 19.6614, 49.3159, 2.65", "42.8216, 20.2817, 51.1117, 0.29", "43.4684, 20.5543, 51.9655, 0.22", "44.1785, 20.8384, 52.9456, 0.22", "44.7298, 21.0298, 53.7432, 1.25", "45.5456, 21.275, 54.9713, 0.15", "46.3128, 21.4907, 56.1435, 0.81", "47.2423, 21.7762, 57.4609, 1.4", "47.9066, 21.9775, 58.267, 2.21", "49.6079, 22.4373, 60.0124, 0.22", "50.4302, 22.6384, 60.7276, 0.88", "51.192, 22.8163, 61.2856, 1.18", "52.7777, 23.2343, 62.2325, 0.22", "53.4939, 23.4658, 62.5694, 0.59", "54.1527, 23.7102, 62.8162, 1.11", "55.2208, 24.1256, 63.1324, 0.15", "55.6469, 24.2892, 63.2688, 0.15", "56.0369, 24.4546, 63.4381, 0.15", "56.3916, 24.6212, 63.6566, 0.37", "56.8864, 24.9009, 64.066, 0.66", "58.0094, 25.5999, 65.1536, 0.15", "58.7951, 26.1003, 66.021, 1.62", "59.5981, 26.5814, 66.9649, 0.29", "60.4482, 27.0473, 68.0207, 1.18", "61.6292, 27.6024, 69.5451, 0.22", "62.4314, 27.9094, 70.5964, 0.52", "63.4372, 28.2006, 71.8855, 1.25", "64.2356, 28.3658, 72.902, 2.14", "65.6018, 28.4966, 74.6092, 0.59", "66.4765, 28.503, 75.6879, 0.59", "67.3421, 28.4471, 76.7115, 0.22", "68.3461, 28.3693, 77.8961, 1.55", "68.8437, 28.3452, 78.4863, 1.55", "70.1458, 28.4007, 80.1084, 0.22", "70.5359, 28.4633, 80.6319, 0.22", "71.0641, 28.6376, 81.3166, 0.22", "71.5662, 28.8701, 81.9965, 0.96", "72.0969, 29.2144, 82.7476, 1.25", "73.0066, 29.9967, 84.0433, 0.22", "73.6867, 30.786, 85.0047, 0.22", "74.4323, 31.6757, 86.0458, 2.73" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "36.5024, 16.4925, 41.3134, 0.22", "36.9794, 15.2945, 41.8018, 0.22", "37.2148, 14.7704, 41.9765, 0.37", "37.6199, 13.9801, 42.2299, 0.66", "38.0847, 13.1016, 42.5786, 0.66", "38.5026, 12.3208, 42.956, 0.15", "38.8508, 11.6629, 43.3244, 1.47", "39.3016, 10.7826, 43.8035, 3.24", "39.5969, 10.2365, 44.1296, 3.24", "40.5597, 8.61543, 45.2315, 0.29", "40.9393, 7.99239, 45.7142, 0.44", "41.4242, 7.17336, 46.3969, 2.14" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-3.27893, 35.6453, 24.8904, 0.22", "-4.34435, 36.262, 25.4794, 0.22", "-4.85108, 36.5571, 25.7548, 1.55", "-5.58369, 36.9386, 26.0749, 3.1", "-6.96638, 37.5981, 26.5759, 0.15", "-7.46418, 37.8156, 26.7251, 0.66", "-8.30091, 38.1502, 26.9407, 0.15", "-8.96689, 38.3574, 27.0561, 1.18", "-10.2296, 38.6567, 27.2022, 0.07", "-10.9457, 38.7783, 27.2557, 0.07", "-11.5385, 38.8538, 27.2817, 0.07", "-12.1859, 38.9132, 27.3193, 0.96", "-13.432, 38.9944, 27.4215, 0.15", "-14.3893, 39.0618, 27.5392, 0.15", "-14.9469, 39.1116, 27.6569, 1.03", "-15.5146, 39.1617, 27.8083, 1.99", "-16.5722, 39.2514, 28.2005, 0.15", "-17.0134, 39.2811, 28.4013, 0.15", "-17.3173, 39.2917, 28.5653, 0.15", "-17.7932, 39.2935, 28.8559, 0.88", "-18.3739, 39.2613, 29.2144, 1.62", "-19.5853, 39.1354, 29.9828, 0.15", "-20.0507, 39.0651, 30.2823, 0.15", "-20.5738, 38.9674, 30.6105, 0.44", "-21.1616, 38.8249, 30.9616, 0.15", "-21.9561, 38.5956, 31.4629, 0.22", "-22.6949, 38.3439, 31.9596, 0.15", "-22.8649, 38.2726, 32.084, 0.74", "-23.4572, 37.9961, 32.5589, 1.25", "-24.3777, 37.5304, 33.3546, 0.22", "-25.1588, 37.0935, 34.0865, 1.11", "-25.5007, 36.8758, 34.4295, 1.84", "-26.1885, 36.2944, 35.2072, 0.15", "-26.3986, 36.0626, 35.4835, 0.15", "-26.6032, 35.8012, 35.7822, 0.15", "-26.7379, 35.6032, 35.997, 0.81", "-27.0962, 35.0002, 36.5471, 2.14", "-27.601, 33.8864, 37.4931, 0.22", "-27.7743, 33.2837, 37.9378, 1.47" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-3.27893, 35.6453, 24.8904, 0.22", "-3.61664, 37.0813, 26.6202, 0.22", "-3.90235, 38.1247, 27.8028, 0.22", "-4.37397, 39.6317, 29.472, 0.37", "-4.58807, 40.2233, 30.1523, 0.37", "-4.86945, 40.9376, 30.9954, 0.96", "-5.14157, 41.6243, 31.796, 0.15", "-5.27307, 41.9622, 32.1667, 0.15", "-5.36585, 42.1541, 32.3836, 0.22", "-5.75889, 42.7784, 33.0944, 0.15", "-6.08264, 43.2599, 33.6993, 1.03", "-6.47316, 43.9103, 34.5588, 1.99", "-6.92879, 44.968, 35.9268, 0.22", "-7.1269, 45.7122, 36.7502, 0.15", "-7.17185, 46.0408, 37.0714, 0.15", "-7.19609, 46.7301, 37.6664, 1.18", "-7.17057, 47.8067, 38.5288, 0.15", "-7.13112, 48.4539, 39.0339, 0.52", "-7.06797, 49.3432, 39.6841, 0.22", "-7.03413, 50.2112, 40.3223, 1.33", "-7.05809, 51.1703, 41.0883, 2.88", "-7.26536, 52.8516, 42.587, 0.22", "-7.44017, 53.4541, 43.1946, 0.22", "-7.7084, 54.0966, 43.9148, 0.74", "-8.05103, 54.7933, 44.7858, 0.15", "-8.33996, 55.346, 45.5141, 0.15", "-8.58704, 55.7935, 46.1763, 0.15", "-8.82557, 56.253, 47.0481, 0.74", "-8.95576, 56.6484, 47.9474, 0.74", "-8.95153, 56.8563, 48.6991, 0.74", "-8.87458, 56.9721, 49.4863, 0.74", "-8.84795, 56.9903, 49.7927, 0.74", "-8.76691, 57.007, 51.0546, 0.74", "-8.73102, 57.0004, 51.49, 0.74", "-8.62686, 56.9776, 52.6703, 0.74", "-8.52048, 57.0029, 53.4227, 0.74", "-8.20534, 57.1743, 54.8074, 0.96", "-7.88038, 57.4002, 55.7868, 0.96", "-7.59272, 57.639, 56.4554, 0.96", "-7.14351, 58.0185, 57.3631, 0.96", "-6.54822, 58.5546, 58.4596, 0.66", "-5.91951, 59.1375, 59.5636, 0.88", "-5.30441, 59.7863, 60.7607, 1.55", "-4.73507, 60.5485, 62.1684, 0.37", "-4.54868, 60.92, 62.8223, 0.37", "-4.31818, 61.6327, 63.9371, 1.4", "-4.23719, 62.0391, 64.5162, 1.62", "-4.09224, 63.084, 65.8275, 0.44", "-4.00214, 63.8171, 66.6412, 0.44", "-3.86704, 64.6135, 67.4047, 1.18", "-3.60143, 65.7509, 68.3591, 0.22", "-3.40931, 66.3437, 68.7944, 0.22", "-3.12067, 67.0553, 69.2585, 1.25", "-2.78464, 67.8066, 69.7171, 1.92", "-2.10126, 69.3936, 70.7746, 0.15", "-1.8616, 70.0086, 71.2487, 0.88", "-1.6251, 70.765, 71.9064, 1.92", "-1.27712, 72.2384, 73.3566, 0.22", "-1.13565, 73.006, 74.2336, 0.74", "-0.976714, 74.0223, 75.5309, 1.7", "-0.848755, 74.752, 76.5602, 0.07", "-0.748354, 75.1245, 77.1013, 0.96", "-0.414693, 76.0776, 78.5396, 0.07", "-0.132285, 76.678, 79.4619, 0.07", "0.154543, 77.1364, 80.145, 0.07", "0.709161, 77.8275, 81.2361, 0.37", "1.26236, 78.4048, 82.3438, 0.59", "1.55869, 78.6864, 82.9951, 0.59", "1.76929, 78.8793, 83.5654, 0.59", "1.85209, 78.9883, 83.9212, 0.59", "2.00151, 79.444, 85.2464, 0.15", "2.02844, 79.8436, 86.1331, 0.07", "2.06046, 80.1801, 86.6855, 0.07", "2.09169, 80.5055, 87.1323, 0.07", "2.10402, 81.0641, 87.8242, 0.88", "2.07946, 81.9599, 88.9389, 0.22", "2.04014, 82.6948, 89.9711, 0.22", "1.9738, 83.3286, 91.0296, 1.62", "1.84886, 83.8688, 92.2062, 2.21", "1.59495, 84.5562, 94.2812, 0.37", "1.43679, 84.8635, 95.7242, 0.37", "1.25549, 85.0596, 97.8883, 1.33", "1.24229, 85.0361, 98.5891, 1.77", "1.35253, 84.8135, 100.094, 0.29", "1.5633, 84.4671, 101.386, 0.29", "1.75045, 84.0849, 102.443, 0.59", "1.91142, 83.6648, 103.527, 1.18", "2.09955, 82.9963, 105.284, 0.37", "2.22607, 82.3084, 107.127, 1.03", "2.22618, 81.7609, 108.591, 1.4", "1.94828, 80.666, 111.471, 0.07", "1.68416, 80.1726, 112.775, 0.59", "1.24079, 79.7424, 114.019, 0.15", "0.834246, 79.509, 114.757, 0.15", "0.106782, 79.2054, 115.769, 0.15", "-0.273581, 79.0865, 116.22, 1.03", "-0.693623, 78.9728, 116.63, 1.4", "-2.25697, 78.5689, 118.04, 0.15", "-2.82683, 78.431, 118.56, 0.15", "-3.8038, 78.1907, 119.556, 0.15", "-4.27658, 78.0588, 120.109, 1.11", "-4.70414, 77.9272, 120.673, 1.62", "-5.6777, 77.6114, 122.12, 0.29", "-6.2503, 77.4313, 123.065, 0.07", "-6.80573, 77.3192, 123.95, 0.07", "-7.15598, 77.2757, 124.495, 0.88", "-7.96171, 77.2172, 125.806, 0.07", "-8.34021, 77.2201, 126.47, 0.22", "-8.96287, 77.3105, 127.657, 0.07", "-9.42395, 77.4328, 128.472, 1.77" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "2.16789, 30.7849, 15.7735, 0.52", "3.82459, 30.585, 12.8048, 0.52", "4.26078, 30.482, 12.1291, 2.21", "5.07811, 30.2087, 10.9658, 2.88", "6.49723, 29.6042, 9.04796, 0.96", "7.51587, 29.0609, 7.64696, 0.15", "8.05974, 28.7009, 6.82588, 0.59", "8.65225, 28.2079, 6.07283, 0.15", "9.04693, 27.8213, 5.56857, 0.22", "9.34247, 27.4364, 5.15895, 0.22", "9.80536, 26.5611, 4.32404, 0.22", "10.3132, 25.2795, 3.21035, 1.11", "10.5259, 24.5552, 2.62465, 2.29", "10.6251, 24.0899, 2.26227, 2.58", "10.8689, 22.5856, 1.13838, 0.15", "10.9786, 21.6706, 0.535779, 0.15", "11.0327, 20.8153, 0.0997963, 0.29", "11.0414, 20.1782, -0.155224, 1.03", "11.0265, 19.5131, -0.395829, 1.99", "11.0177, 19.0291, -0.550626, 2.29", "11.0334, 17.4278, -0.928134, 0.44", "11.1027, 16.2959, -1.15273, 0.29", "11.1672, 15.6875, -1.25298, 0.44", "11.2487, 15.1056, -1.33754, 0.52", "11.4346, 14.059, -1.44727, 0.22", "11.5969, 13.3647, -1.50166, 0.22", "11.811, 12.619, -1.52691, 1.33", "12.0456, 11.8943, -1.53321, 2.29", "12.2386, 11.2948, -1.51958, 2.29", "12.7923, 9.6284, -1.44586, 0.15", "13.0191, 8.92036, -1.40093, 0.15", "13.1964, 8.34882, -1.36774, 0.15", "13.3599, 7.79951, -1.33165, 0.66", "13.6018, 6.93439, -1.29252, 1.33", "13.7596, 6.25784, -1.31285, 1.03", "13.9939, 4.80758, -1.49158, 0.22", "14.0729, 4.10742, -1.62753, 0.22", "14.12, 3.42206, -1.80845, 0.66", "14.1699, 2.43317, -2.11347, 0.22", "14.178, 1.15557, -2.54432, 0.29", "14.1725, 0.341488, -2.81006, 0.59", "14.1598, -0.27896, -3.03399, 1.33", "14.1212, -1.17124, -3.36552, 2.14", "14.0367, -2.7057, -3.94524, 0.22", "13.98, -3.75798, -4.30634, 0.22", "13.9723, -4.64913, -4.50673, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "2.16789, 30.7849, 15.7735, 0.52", "2.4541, 31.5609, 17.2037, 0.52", "2.81632, 32.0137, 18.4773, 0.52", "3.37864, 32.3567, 20.084, 0.52", "3.70896, 32.4323, 20.925, 0.52", "4.5488, 32.5219, 22.8699, 0.81", "5.21326, 32.595, 24.287, 1.18", "6.21984, 32.5661, 26.0365, 0.96", "6.99197, 32.4901, 27.2468, 1.25", "7.86479, 32.3461, 28.5208, 0.37", "8.4168, 32.2775, 29.2411, 0.37", "9.10616, 32.2006, 30.0888, 0.15", "9.97852, 32.1601, 31.073, 0.15", "10.9915, 32.2841, 32.0997, 1.18", "11.5968, 32.4463, 32.7054, 2.43", "12.6606, 32.7894, 33.7042, 2.65" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-11.6304, 101.23, 6.3643, 0.59", "-11.8834, 102.341, 6.24039, 0.59", "-12.1644, 103.319, 6.10647, 0.29", "-12.4723, 104.239, 5.97077, 0.96", "-12.7293, 104.938, 5.87239, 0.07", "-13.0453, 105.688, 5.77369, 0.07", "-13.2332, 106.114, 5.72123, 0.22", "-13.5171, 106.628, 5.66608, 0.88", "-13.6848, 106.933, 5.64567, 1.47", "-14.1082, 107.8, 5.55815, 0.07", "-14.3242, 108.378, 5.46486, 0.07", "-14.4032, 108.683, 5.41813, 0.22", "-14.4563, 108.915, 5.38771, 0.22", "-14.5878, 109.554, 5.32141, 0.07", "-14.6728, 110.133, 5.26489, 0.07", "-14.7099, 110.513, 5.21593, 0.66", "-14.7475, 110.941, 5.14039, 0.66", "-14.8198, 111.634, 4.99341, 0.15", "-14.8754, 112.173, 4.86756, 1.03", "-14.9304, 112.739, 4.72728, 1.77", "-15.0001, 113.798, 4.47023, 0.15", "-15.0402, 114.511, 4.30716, 0.22", "-15.0585, 114.802, 4.23727, 0.66", "-15.0928, 115.142, 4.16798, 0.37", "-15.1964, 115.728, 4.09076, 1.11", "-15.3229, 116.187, 4.06891, 1.11", "-15.7117, 117.261, 4.12195, 0.22", "-15.9969, 117.89, 4.18642, 1.03", "-16.3839, 118.615, 4.27383, 1.62", "-16.7893, 119.283, 4.36997, 1.99", "-17.1963, 119.903, 4.41935, 0.52", "-17.7633, 120.721, 4.41165, 0.22", "-18.333, 121.534, 4.30964, 0.22", "-18.6133, 121.942, 4.2023, 0.88", "-19.0093, 122.546, 3.90885, 1.55", "-19.8043, 123.738, 3.12804, 0.15", "-20.1181, 124.226, 2.77066, 0.22", "-20.3787, 124.663, 2.44442, 0.07", "-20.772, 125.385, 1.91583, 1.33", "-21.3437, 126.473, 1.22095, 0.07", "-21.5244, 126.826, 1.00235, 0.37", "-21.8858, 127.545, 0.706095, 0.07", "-22.2833, 128.362, 0.515307, 0.22", "-22.6452, 129.127, 0.526426, 1.55", "-22.8978, 129.758, 0.77779, 1.55", "-24.5123, 136.525, -1.2738, 1.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-11.6304, 101.23, 6.3643, 0.22", "-12.8067, 102.671, 6.23378, 0.22", "-13.3442, 103.367, 6.16066, 0.07", "-13.9291, 104.176, 6.06194, 1.11", "-14.7831, 105.501, 5.89302, 0.07", "-15.138, 106.131, 5.81276, 0.07", "-15.3082, 106.468, 5.77152, 0.52", "-15.5414, 107.127, 5.68631, 1.47", "-15.7797, 107.97, 5.5843, 0.07", "-15.9534, 108.722, 5.49621, 0.15", "-16.0737, 109.457, 5.43024, 0.88", "-16.1639, 110.17, 5.38881, 1.4", "-16.2771, 111.293, 5.32875, 0.07", "-16.3239, 111.827, 5.30796, 0.74" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-36.735, -109.619, -44.6679, 0.15", "-38.3726, -117.514, -46.1904, 0.15", "-40.1277, -125.485, -46.7103, 0.15", "-40.9592, -133.458, -48.531, 0.15", "-40.0355, -141.546, -49.8056, 0.15", "-38.1241, -149.44, -51.4274, 0.15", "-36.1081, -157.361, -52.7419, 0.15", "-33.3693, -165.034, -54.4178, 0.15", "-30.9177, -172.919, -55.0215, 0.15", "-27.3502, -180.4, -55.9401, 0.15", "-23.4665, -187.758, -56.6636, 0.15", "-20.3063, -195.366, -55.6883, 0.15", "-17.5792, -203.101, -54.5926, 0.15", "-14.7319, -210.875, -54.2828, 0.15", "-12.3921, -218.783, -54.9836, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-36.735, -109.619, -44.6679, 1.03", "-37.6729, -118.23, -47.154, 0.15", "-39.563, -126.975, -48.0943, 0.15", "-42.3713, -135.527, -48.6186, 0.15", "-46.492, -143.531, -47.5225, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-7.64673, -138.883, 29.2858, 0.22", "-7.0013, -140.376, 29.4669, 0.22", "-6.65969, -141.317, 29.6117, 0.22", "-6.48125, -142.014, 29.7303, 0.88", "-6.29802, -143.031, 29.9106, 1.25", "-6.07767, -144.593, 30.2076, 0.15", "-5.95677, -145.774, 30.4316, 0.15", "-5.93577, -146.727, 30.6342, 0.66", "-5.98504, -148.143, 30.9284, 0.15", "-6.02673, -148.786, 31.0597, 0.44", "-6.06192, -149.253, 31.1432, 0.44", "-6.11751, -150.557, 31.3341, 0.15", "-6.12833, -151.503, 31.4476, 0.15", "-6.10386, -152.229, 31.5213, 1.18", "-6.03674, -152.955, 31.5801, 2.14", "-5.91828, -154.038, 31.6501, 1.03", "-5.80973, -155.084, 31.6993, 0.15", "-5.70799, -155.905, 31.7269, 0.15", "-5.63414, -156.557, 31.7393, 0.37", "-5.55618, -157.37, 31.7342, 0.22", "-5.53317, -157.805, 31.7125, 0.66", "-5.51911, -158.387, 31.6605, 0.81", "-5.49132, -159.623, 31.4994, 0.22", "-5.47653, -160.223, 31.4133, 1.03", "-5.47898, -161.299, 31.2471, 1.84", "-5.51671, -162.859, 31.0013, 0.22", "-5.53182, -163.368, 30.9275, 0.22", "-5.54794, -163.962, 30.8555, 0.22", "-5.55881, -164.545, 30.8031, 0.22", "-5.52185, -165.401, 30.751, 0.96", "-5.32503, -167.191, 30.6929, 0.15", "-5.21075, -167.825, 30.6877, 0.15", "-5.07376, -168.499, 30.6969, 0.96", "-4.91073, -169.274, 30.7245, 1.92", "-4.51069, -171.01, 30.8147, 0.22", "-4.35358, -171.621, 30.8569, 0.22", "-4.19965, -172.163, 30.8907, 0.15", "-3.91904, -173.135, 30.9443, 0.15", "-3.76594, -173.71, 30.9781, 0.81", "-3.63605, -174.293, 31.0376, 1.62", "-3.43307, -175.455, 31.2147, 0.15", "-3.28864, -176.359, 31.3644, 0.15", "-3.19526, -176.862, 31.4455, 0.15", "-3.03014, -177.653, 31.5693, 0.88", "-2.80566, -178.834, 31.7523, 0.15", "-2.70223, -179.438, 31.8409, 0.96", "-2.54463, -180.537, 31.9935, 2.21", "-2.28404, -182.596, 32.2623, 0.15", "-2.17472, -183.457, 32.358, 0.96", "-1.91227, -185.204, 32.5498, 0.22", "-1.7632, -186.041, 32.6355, 0.88", "-1.67767, -186.489, 32.687, 0.88", "-1.38097, -187.916, 32.8798, 0.07", "-1.30754, -188.218, 32.9265, 0.29", "-1.12497, -188.865, 33.0433, 0.29", "-0.929922, -189.497, 33.1682, 0.15", "-0.794408, -190.003, 33.285, 0.15", "-0.606088, -190.83, 33.4789, 0.15", "-0.502424, -191.408, 33.6012, 0.74", "-0.382175, -192.224, 33.7748, 1.77", "-0.325122, -192.739, 33.8922, 1.33", "-0.209479, -194.013, 34.2165, 0.07", "-0.182204, -194.434, 34.3315, 0.37", "-0.120802, -195.739, 34.7207, 0.07", "-0.0869062, -196.435, 34.9319, 0.59", "-0.00642864, -197.566, 35.2641, 0.15", "0.0454572, -198.15, 35.4239, 0.22", "0.134588, -199.043, 35.6513, 1.33", "0.258556, -200.352, 35.9764, 0.07", "0.29219, -200.857, 36.0978, 0.88", "0.415101, -202.322, 36.4179, 0.15", "0.486984, -202.995, 36.5521, 0.15", "0.560525, -203.577, 36.6655, 0.15", "0.655927, -204.222, 36.7974, 0.74", "0.781224, -205.142, 36.997, 2.14", "0.9597, -206.803, 37.3853, 0.15", "0.97493, -207.321, 37.5071, 0.44", "0.92772, -208.638, 37.8149, 0.07", "0.868024, -209.174, 37.9426, 0.15", "0.751166, -209.784, 38.0943, 0.07", "0.549381, -210.516, 38.2879, 1.11", "-0.0644076, -212.212, 38.7471, 0.15", "-0.348489, -212.929, 38.9445, 1.03", "-0.895947, -214.217, 39.2886, 0.15", "-1.12389, -214.799, 39.4222, 0.44", "-1.45669, -215.863, 39.62, 0.15", "-1.64951, -216.706, 39.7461, 1.62", "-1.70591, -217.147, 39.7918, 1.77", "-1.73396, -217.818, 39.8238, 1.03", "-1.68719, -219.526, 39.823, 0.15", "-1.56759, -221.154, 39.7772, 0.15", "-1.50327, -221.693, 39.7548, 0.88", "-1.3868, -222.418, 39.7413, 1.18", "-1.01052, -224.304, 39.734, 0.07", "-0.923098, -224.684, 39.7368, 0.15", "-0.626702, -225.875, 39.7723, 0.07", "-0.291792, -227.174, 39.8314, 0.15", "-0.0206026, -228.29, 39.8967, 1.33", "0.397235, -230.112, 40.023, 0.15", "0.553834, -230.864, 40.0909, 0.22", "0.739173, -232.078, 40.1929, 0.07", "0.773683, -232.452, 40.2208, 0.22", "0.82268, -234.223, 40.3193, 0.07", "0.817747, -234.569, 40.3348, 0.81", "0.751776, -235.821, 40.3896, 1.92", "0.645032, -237.346, 40.3954, 0.15", "0.578835, -238.145, 40.3531, 0.88", "0.433437, -239.891, 40.1805, 0.15", "0.392588, -240.357, 40.1114, 0.44", "0.264079, -241.804, 39.8606, 0.07", "0.182302, -243.002, 39.6287, 0.07", "0.139236, -243.787, 39.5053, 0.15", "0.111705, -244.397, 39.4364, 0.74", "0.0906091, -244.951, 39.409, 0.74", "0.134514, -246.197, 39.4929, 0.07", "0.262805, -247.057, 39.6577, 0.07", "0.443124, -247.899, 39.9199, 0.07", "0.614299, -248.595, 40.1751, 1.25", "0.755523, -249.154, 40.3891, 1.99", "1.21708, -251.064, 41.0914, 0.15", "1.44696, -252.106, 41.4544, 0.96", "1.71913, -253.601, 41.9316, 0.07", "1.89088, -254.776, 42.2637, 0.07", "1.97276, -255.635, 42.4702, 0.81", "2.08611, -257.922, 42.9011, 0.15", "2.07888, -258.498, 42.9798, 0.29", "2.02254, -259.625, 43.0846, 0.07", "1.96059, -260.569, 43.1257, 1.47", "1.79334, -262.682, 43.1512, 0.07", "1.71084, -263.6, 43.1718, 0.07", "1.6247, -264.277, 43.1791, 1.11", "1.35128, -266.025, 43.156, 0.07", "1.21337, -266.764, 43.1238, 0.74", "1.06493, -267.434, 43.0693, 1.92", "0.589977, -269.267, 42.8699, 0.15", "0.198256, -270.671, 42.7, 0.22", "-0.257952, -272.289, 42.5052, 0.22", "-0.470788, -272.998, 42.4125, 0.81", "-0.748336, -273.915, 42.2972, 1.84", "-1.29506, -275.888, 42.1278, 0.07", "-1.441, -276.471, 42.0971, 0.29", "-1.71333, -277.947, 42.2092, 0.07", "-1.86547, -278.888, 42.3456, 0.07", "-2.01326, -279.958, 42.5569, 1.55", "-2.17607, -281.603, 42.9858, 0.07", "-2.20876, -282.191, 43.1723, 0.07", "-2.23225, -283.729, 43.7097, 1.47" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-7.64673, -138.883, 29.2858, 0.22", "-8.37419, -140.084, 30.092, 0.22", "-8.92072, -141.244, 30.7585, 0.44", "-9.13303, -141.799, 31.046, 0.15", "-9.2914, -142.262, 31.2819, 0.15", "-9.37092, -142.477, 31.3934, 0.37", "-9.63851, -143.098, 31.7208, 0.44", "-9.89736, -143.626, 31.9891, 0.15", "-10.0173, -143.839, 32.1221, 0.22", "-10.2167, -144.187, 32.4084, 0.22", "-10.4804, -144.637, 32.8432, 0.22", "-10.7111, -145.048, 33.274, 0.81", "-11.0893, -145.796, 34.0735, 0.22", "-11.4615, -146.657, 34.9757, 0.96", "-11.7798, -147.516, 35.8254, 2.21", "-12.3005, -149.224, 37.389, 0.22", "-12.4779, -149.972, 38.0434, 0.22", "-12.5739, -150.494, 38.4743, 0.22", "-12.6358, -150.895, 38.7752, 0.22", "-12.7574, -151.526, 39.1878, 0.22", "-12.8956, -152.014, 39.4917, 0.22", "-13.0809, -152.491, 39.7931, 0.88", "-13.371, -153.07, 40.2034, 1.4", "-13.8542, -153.828, 40.8535, 2.14", "-14.752, -155.041, 42.0603, 0.52", "-15.4305, -155.862, 42.9779, 0.22", "-15.8192, -156.297, 43.4938, 0.22", "-16.3652, -156.851, 44.1854, 1.11", "-17.262, -157.638, 45.2977, 1.99", "-17.7417, -157.986, 45.8798, 1.99", "-17.9086, -158.079, 46.0909, 1.99" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-40.5412, -127.545, 25.7296, 0.22", "-41.3717, -128.261, 25.7222, 0.22", "-41.8148, -128.664, 25.7233, 0.22", "-42.2016, -129.01, 25.7207, 1.33", "-42.9127, -129.648, 25.7105, 0.15", "-43.1672, -129.883, 25.7065, 0.15", "-43.3513, -130.06, 25.7039, 0.37", "-43.6432, -130.378, 25.7219, 0.37", "-44.063, -130.892, 25.7498, 0.22", "-44.2505, -131.133, 25.7546, 0.15", "-44.3887, -131.318, 25.7513, 0.15", "-44.4874, -131.457, 25.7553, 0.15", "-44.7136, -131.792, 25.7727, 0.15", "-44.9379, -132.15, 25.7979, 0.74", "-45.3008, -132.743, 25.8408, 0.15", "-45.5503, -133.103, 25.8319, 0.15", "-45.932, -133.595, 25.7803, 0.15", "-46.0797, -133.772, 25.7434, 0.15", "-46.4107, -134.151, 25.6279, 1.33", "-46.7258, -134.482, 25.5274, 2.14", "-47.5878, -135.282, 25.2898, 0.15", "-48.0268, -135.634, 25.1904, 1.25", "-48.689, -136.111, 25.0583, 0.07", "-48.9464, -136.291, 25.0213, 0.22", "-49.7606, -136.839, 24.9389, 0.22", "-50.1728, -137.101, 24.9182, 1.25", "-50.4391, -137.261, 24.9211, 1.25", "-51.2877, -137.844, 24.9032, 0.07", "-51.8481, -138.295, 24.8678, 0.07", "-52.2162, -138.67, 24.798, 0.07", "-52.5176, -139.074, 24.657, 0.07", "-52.6669, -139.311, 24.5622, 1.18", "-53.1592, -140.211, 24.1686, 0.07", "-53.2562, -140.414, 24.0767, 0.88", "-53.4978, -140.978, 23.8219, 1.92", "-53.9011, -141.967, 23.3846, 0.15", "-54.0242, -142.284, 23.247, 0.22", "-54.2352, -142.778, 23.0334, 0.07", "-54.3527, -143.045, 22.9229, 0.07", "-54.5205, -143.472, 22.7673, 0.29", "-54.8197, -144.349, 22.5193, 0.07", "-55.058, -145.126, 22.3718, 0.22", "-55.2225, -145.665, 22.2949, 1.55", "-55.5332, -146.637, 22.2342, 0.22", "-55.7377, -147.232, 22.2387, 0.07", "-55.9195, -147.763, 22.2737, 0.07", "-56.0401, -148.118, 22.3423, 0.07", "-56.167, -148.438, 22.451, 0.15", "-56.3817, -148.909, 22.6867, 0.07", "-56.5396, -149.109, 22.8542, 0.88" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-40.5412, -127.545, 25.7296, 0.29", "-42.2147, -127.121, 25.6887, 0.29", "-43.0538, -126.886, 25.5871, 0.22", "-43.5893, -126.733, 25.4844, 0.74", "-44.2344, -126.543, 25.3375, 0.96", "-44.9993, -126.326, 25.1529, 0.29", "-45.7923, -126.102, 24.9518, 0.15", "-46.6541, -125.854, 24.6997, 0.15", "-47.3841, -125.665, 24.5139, 1.03", "-48.3004, -125.448, 24.3132, 0.29", "-49.5538, -125.168, 24.0829, 0.22", "-50.2427, -125.026, 23.9821, 1.11", "-51.3408, -124.821, 23.8734, 2.14", "-53.3966, -124.461, 23.7514, 0.22", "-53.9164, -124.375, 23.7327, 0.81", "-54.9573, -124.213, 23.7017, 1.7", "-56.3645, -123.987, 23.6736, 0.22", "-56.959, -123.893, 23.6511, 0.88", "-57.8618, -123.755, 23.592, 1.55", "-58.5357, -123.648, 23.5274, 0.59", "-59.8078, -123.453, 23.3835, 0.15", "-60.7473, -123.332, 23.2426, 0.88", "-61.6944, -123.215, 23.0592, 0.15", "-62.4535, -123.107, 22.8788, 0.22", "-63.1263, -123.001, 22.693, 0.81", "-64.1298, -122.845, 22.3951, 1.99", "-65.548, -122.665, 21.9216, 0.22", "-66.2424, -122.589, 21.6781, 0.22", "-66.9477, -122.505, 21.4212, 0.52", "-67.6804, -122.41, 21.1404, 1.18", "-68.8363, -122.242, 20.6881, 1.99", "-70.3262, -122.002, 20.0654, 0.15", "-70.8786, -121.907, 19.8318, 0.29", "-71.7789, -121.779, 19.4416, 0.07", "-72.3965, -121.714, 19.1402, 0.22", "-72.8683, -121.672, 18.8583, 0.22", "-73.2911, -121.656, 18.5131, 0.22", "-73.4538, -121.667, 18.3499, 0.22", "-73.852, -121.789, 17.8531, 0.22", "-74.2551, -122.059, 17.2614, 0.22", "-74.536, -122.302, 16.8157, 0.22", "-75.1876, -122.901, 15.8571, 1.84" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "74.4323, 31.6757, 86.0458, 0.22", "75.7364, 31.7553, 87.4105, 0.22", "76.0285, 31.7496, 87.7154, 0.22", "76.7226, 31.761, 88.4012, 0.59", "77.3774, 31.8092, 88.9935, 0.44", "77.743, 31.842, 89.292, 0.44", "78.2213, 31.8786, 89.6181, 0.15", "78.7236, 31.9353, 89.8636, 0.15", "79.3902, 31.9716, 90.1049, 0.15", "79.9376, 31.9723, 90.2341, 0.96", "80.6811, 31.9626, 90.3613, 1.55", "81.7215, 31.9958, 90.5341, 0.22", "82.4718, 32.0239, 90.6508, 0.37", "83.0585, 32.023, 90.7293, 0.22", "83.5464, 32.0016, 90.7946, 0.22", "84.0985, 31.9761, 90.874, 0.37", "85.1395, 31.9372, 91.0624, 0.22", "85.7162, 31.9307, 91.2033, 0.22", "86.4675, 31.9554, 91.4296, 0.22", "86.9499, 31.9857, 91.5942, 0.96", "87.7706, 32.0482, 91.9096, 1.99", "89.114, 32.1294, 92.4693, 0.22", "89.9559, 32.1423, 92.8502, 0.15", "90.772, 32.1477, 93.2667, 0.15", "91.0417, 32.1454, 93.4174, 0.15", "91.4205, 32.1237, 93.6324, 0.15", "91.7855, 32.0871, 93.8124, 0.15", "92.4741, 32.0002, 94.0757, 0.15", "92.9103, 31.9068, 94.2082, 0.81", "93.4292, 31.7536, 94.3536, 1.47", "93.8117, 31.6317, 94.4606, 1.47", "94.9602, 31.2593, 94.7572, 0.15", "95.2485, 31.1738, 94.8414, 0.22", "96.0105, 30.9277, 95.0813, 0.37", "96.7751, 30.6475, 95.3365, 1.03", "97.5142, 30.3642, 95.6678, 1.77", "97.9052, 30.2174, 95.8961, 1.77", "99.0571, 29.7998, 96.7174, 0.22", "99.485, 29.6825, 97.0549, 0.22", "100.153, 29.5759, 97.6022, 1.11", "101.501, 29.4612, 98.7597, 0.22", "102.052, 29.4236, 99.2749, 0.22", "102.58, 29.3857, 99.7983, 0.66", "103.319, 29.3313, 100.525, 0.88", "103.825, 29.3096, 101.013, 1.7", "104.895, 29.3098, 102.045, 0.44", "105.694, 29.3378, 102.78, 0.74", "106.286, 29.3915, 103.325, 1.25", "107.257, 29.5752, 104.254, 0.22", "107.594, 29.6694, 104.585, 0.22", "108.167, 29.9013, 105.166, 0.37", "108.561, 30.1057, 105.534, 0.37", "109.207, 30.4692, 106.068, 1.47", "110.0, 30.9054, 106.679, 0.29", "110.386, 31.1065, 106.954, 0.29", "110.599, 31.2097, 107.104, 0.29", "111.287, 31.5239, 107.631, 0.15", "111.714, 31.7318, 108.03, 0.22", "112.036, 31.9046, 108.397, 0.74", "112.386, 32.1357, 108.909, 1.25", "112.931, 32.5957, 109.914, 0.22", "113.329, 32.9921, 110.768, 0.96", "113.674, 33.3549, 111.574, 0.96", "113.961, 33.6126, 112.231, 0.29", "114.327, 33.8725, 113.061, 0.29", "114.645, 34.0358, 113.793, 0.29", "114.953, 34.1389, 114.504, 0.29", "115.214, 34.2137, 115.254, 0.29", "115.366, 34.2558, 115.964, 0.29", "115.428, 34.2724, 116.669, 0.29", "115.44, 34.2762, 117.118, 0.29", "115.44, 34.2931, 117.717, 0.29", "115.42, 34.3564, 118.868, 0.59", "115.405, 34.4259, 119.74, 0.59", "115.422, 34.5211, 120.826, 0.59", "115.477, 34.5768, 121.59, 0.59", "115.629, 34.6129, 122.535, 0.59", "115.802, 34.6074, 123.188, 0.59", "115.902, 34.5986, 123.437, 0.59", "116.265, 34.5547, 124.082, 0.59", "116.463, 34.5126, 124.338, 0.59", "116.985, 34.3664, 124.854, 0.22", "117.413, 34.2359, 125.17, 0.22", "118.005, 34.1019, 125.62, 0.22", "118.424, 34.055, 125.981, 0.22", "119.08, 34.0665, 126.565, 0.22", "119.543, 34.137, 127.025, 0.22", "120.024, 34.27, 127.589, 1.11", "120.884, 34.6003, 128.748, 0.22", "121.346, 34.8068, 129.446, 0.22", "121.885, 35.0839, 130.332, 0.22", "122.3, 35.2658, 131.008, 0.22", "122.644, 35.3093, 131.559, 0.22", "122.821, 35.2481, 131.815, 0.22", "123.196, 35.0048, 132.27, 0.59", "123.792, 34.5621, 132.915, 0.59", "124.494, 34.0511, 133.644, 0.15", "125.177, 33.5643, 134.329, 0.66", "125.902, 33.0762, 135.068, 0.15", "126.481, 32.7147, 135.688, 0.66", "126.959, 32.4629, 136.207, 1.03", "127.879, 32.0524, 137.159, 0.22", "128.657, 31.7565, 137.906, 0.15", "129.442, 31.5159, 138.61, 0.66", "129.929, 31.4183, 139.05, 1.25", "130.968, 31.2978, 139.979, 0.22", "131.733, 31.2485, 140.65, 0.15", "132.408, 31.2471, 141.191, 0.37", "132.817, 31.2748, 141.49, 0.59", "133.859, 31.3697, 142.205, 0.15", "134.493, 31.4143, 142.649, 0.88", "135.581, 31.4726, 143.449, 0.22", "136.01, 31.5073, 143.777, 0.96", "136.365, 31.5434, 144.057, 0.66", "137.112, 31.6262, 144.627, 0.15", "137.851, 31.7404, 145.219, 0.81", "138.339, 31.8678, 145.667, 1.25", "138.984, 32.1197, 146.297, 0.15", "139.77, 32.4707, 147.103, 0.15", "140.005, 32.5861, 147.357, 0.29", "140.575, 32.9164, 148.003, 0.15", "140.848, 33.091, 148.328, 0.96", "141.358, 33.3847, 148.964, 0.29", "142.05, 33.6867, 149.801, 0.74", "142.738, 33.9333, 150.575, 0.15", "143.207, 34.0841, 151.084, 0.37", "143.491, 34.1733, 151.363, 0.37", "143.984, 34.3447, 151.859, 0.22", "144.542, 34.558, 152.399, 0.22", "145.007, 34.7096, 152.784, 0.37", "145.56, 34.8724, 153.186, 0.37", "146.185, 35.0573, 153.586, 1.33", "147.394, 35.4654, 154.282, 0.22", "148.186, 35.799, 154.713, 1.03", "149.157, 36.2677, 155.208, 0.15", "149.487, 36.4534, 155.366, 0.15", "150.322, 37.0367, 155.751, 0.15", "150.894, 37.5473, 156.042, 1.03", "151.343, 38.0865, 156.295, 0.15", "151.636, 38.5206, 156.492, 0.15", "152.03, 39.186, 156.841, 0.15", "152.447, 39.85, 157.293, 0.88", "152.86, 40.4783, 157.814, 0.29", "153.17, 40.9255, 158.234, 0.81", "153.325, 41.133, 158.438, 0.81", "153.902, 42.0337, 159.261, 0.22", "154.261, 42.7209, 159.831, 0.07", "154.458, 43.2956, 160.239, 0.15", "154.513, 43.6055, 160.427, 0.66", "154.547, 44.2489, 160.776, 1.55", "154.526, 45.8725, 161.566, 0.15", "154.454, 46.6504, 161.869, 0.15", "154.327, 47.3642, 162.125, 0.66", "154.2, 47.8839, 162.32, 0.15", "154.107, 48.1892, 162.439, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "74.4323, 31.6757, 86.0458, 0.29", "73.5427, 32.5095, 87.7253, 0.29", "72.8406, 33.1742, 88.8783, 0.29", "72.0994, 33.9209, 90.0281, 0.81", "71.6765, 34.3258, 90.644, 1.4", "70.6193, 35.239, 92.092, 0.07", "70.049, 35.6946, 92.8274, 1.03", "68.9108, 36.4939, 94.0877, 0.15", "67.9442, 37.1985, 95.1073, 1.55", "67.0458, 37.9089, 96.0803, 0.22", "66.4586, 38.4284, 96.7647, 0.22", "65.851, 39.0451, 97.534, 0.81", "65.2395, 39.7468, 98.3572, 0.07", "64.761, 40.4519, 99.0984, 0.59", "64.4433, 41.1728, 99.7101, 0.07", "64.3348, 41.6348, 100.043, 0.52", "64.1871, 43.2119, 101.113, 0.07", "64.2067, 43.7402, 101.463, 0.96", "64.2859, 44.236, 101.8, 0.96", "64.6312, 45.5556, 102.751, 0.22", "65.0123, 46.4751, 103.434, 0.22", "65.4699, 47.2506, 104.06, 0.96", "66.0572, 48.0576, 104.754, 1.77", "66.8993, 49.1438, 105.772, 0.22", "67.4339, 49.7937, 106.413, 0.15", "67.8982, 50.3418, 106.93, 0.15", "68.1335, 50.6391, 107.202, 0.15", "68.8528, 51.6762, 108.116, 0.88", "69.4669, 52.881, 109.163, 0.22", "69.7105, 53.5582, 109.753, 0.81", "70.0393, 54.7091, 110.768, 0.15", "70.2496, 55.5372, 111.498, 0.66", "70.4631, 56.4524, 112.297, 1.84", "70.8924, 58.1583, 113.779, 0.15", "71.1256, 59.131, 114.598, 0.15", "71.3139, 59.923, 115.249, 0.15", "71.4947, 60.5655, 115.773, 0.66", "71.9308, 61.7911, 116.678, 0.15", "72.4429, 62.929, 117.448, 0.15", "72.7424, 63.5022, 117.795, 0.66", "73.0035, 64.0608, 118.099, 0.22", "73.3406, 64.9594, 118.576, 0.22", "73.5045, 65.4952, 118.85, 0.81", "73.5948, 65.9274, 119.055, 0.81", "73.6783, 67.1388, 119.634, 0.07", "73.6477, 67.8683, 120.002, 0.66", "73.3768, 69.3937, 120.832, 0.15", "73.0796, 70.41, 121.409, 1.4", "72.5444, 71.8128, 122.265, 0.15", "72.1071, 72.741, 122.869, 0.15", "71.6528, 73.5131, 123.405, 1.18", "70.7505, 74.6793, 124.335, 0.22", "69.9345, 75.4828, 125.054, 0.15", "69.416, 75.9364, 125.488, 0.15", "68.8941, 76.3737, 125.915, 0.74", "68.2618, 76.9168, 126.416, 1.25", "66.9776, 78.0672, 127.444, 0.22", "66.3015, 78.7052, 128.009, 1.11", "65.146, 79.849, 129.061, 0.22", "64.5194, 80.5179, 129.674, 1.47", "63.9213, 81.1953, 130.284, 0.96", "63.1308, 82.1615, 131.139, 0.22", "62.4595, 83.0477, 131.909, 0.74", "61.6498, 84.1439, 132.901, 0.15", "61.3007, 84.6068, 133.352, 0.15", "60.9314, 85.112, 133.865, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "41.4242, 7.17336, 46.3969, 0.15", "43.0541, 5.92352, 49.8327, 0.15", "43.6629, 5.5202, 50.6657, 0.22", "44.174, 5.2111, 51.2527, 0.88", "45.1176, 4.66829, 52.2249, 0.15", "45.7457, 4.3214, 52.8275, 1.18", "46.4454, 3.93951, 53.4855, 2.58", "48.1561, 3.06782, 54.7232, 0.29", "48.9491, 2.67238, 55.277, 0.96", "49.5422, 2.3821, 55.7022, 1.18", "51.2203, 1.60956, 57.0093, 0.07", "51.8414, 1.3612, 57.5543, 0.07", "52.1378, 1.24999, 57.8472, 0.07", "52.6599, 1.04767, 58.4714, 0.74", "53.0658, 0.869004, 59.0438, 1.03", "53.9487, 0.427717, 60.5004, 0.15", "54.6236, -8.70824E-5, 61.8303, 1.18", "54.8615, -0.197965, 62.383, 1.4", "55.2977, -0.673712, 63.6114, 0.15", "55.549, -1.08994, 64.5335, 0.15", "55.6594, -1.34773, 65.0446, 0.88", "55.7663, -1.68038, 65.6771, 0.29", "55.9278, -2.28301, 66.8471, 0.15", "56.0224, -2.67153, 67.7138, 0.81", "56.1021, -3.06119, 68.7159, 1.62", "56.1523, -3.7745, 70.7507, 0.15", "56.1321, -4.13034, 71.8568, 0.15", "56.0761, -4.43989, 72.8455, 0.22", "55.941, -4.81523, 74.0588, 0.22", "55.8191, -5.06218, 74.8303, 0.22", "55.7027, -5.29162, 75.5782, 1.18", "55.5702, -5.59535, 76.4842, 1.62", "55.493, -6.22156, 78.0701, 0.22", "55.5848, -6.55166, 78.8928, 0.22", "55.7114, -6.73332, 79.3736, 0.44", "56.1553, -7.11931, 80.5263, 0.15", "56.5425, -7.35532, 81.3112, 1.33", "57.3832, -7.79371, 82.8031, 0.15", "58.2991, -8.24155, 84.2582, 0.22", "58.7859, -8.52347, 84.9932, 0.22", "59.0347, -8.68818, 85.3602, 0.22", "59.4528, -9.03357, 85.9713, 0.74", "59.8906, -9.44612, 86.5663, 1.25", "60.2631, -9.82507, 86.9902, 1.25", "61.4322, -11.1814, 88.2022, 0.22", "61.9385, -11.7889, 88.7434, 0.22", "62.3574, -12.3024, 89.2146, 1.03", "62.8824, -12.9493, 89.811, 1.84", "64.2204, -14.588, 91.2991, 0.22", "64.793, -15.3232, 91.936, 1.11", "65.5771, -16.4342, 92.8659, 0.22", "66.0647, -17.1687, 93.5003, 0.15", "66.4113, -17.6874, 93.9792, 0.15", "66.9115, -18.4423, 94.7268, 1.03", "67.5917, -19.5269, 95.8711, 0.22", "67.9198, -20.009, 96.4748, 0.96", "68.5007, -20.8253, 97.615, 0.15", "68.882, -21.347, 98.4628, 0.15", "69.1413, -21.7163, 99.1774, 0.96", "69.4774, -22.1625, 100.264, 1.92", "70.3279, -23.0384, 103.101, 0.22", "70.6197, -23.2698, 104.029, 0.44", "71.0668, -23.5997, 105.535, 1.18", "71.5697, -23.9592, 107.462, 0.22", "72.0237, -24.2472, 109.534, 0.52", "72.3413, -24.3811, 111.412, 0.81", "72.4778, -24.3635, 112.704, 0.81", "72.623, -24.137, 114.872, 0.52", "72.6158, -23.8645, 116.049, 0.52", "72.4815, -23.3665, 117.137, 0.52", "72.1996, -22.6551, 118.014, 0.52", "71.8864, -21.9186, 118.586, 1.25", "71.6049, -21.1522, 118.997, 1.25", "71.3269, -20.1013, 119.432, 0.37", "71.067, -18.5675, 120.048, 0.66", "70.9879, -17.5333, 120.467, 0.37", "71.0378, -16.4821, 120.962, 0.66", "71.2371, -15.3407, 121.683, 0.15", "71.4529, -14.6511, 122.262, 0.15", "71.6336, -14.2831, 122.669, 0.15", "71.9705, -13.7306, 123.391, 1.62", "72.6211, -12.7063, 124.827, 0.22", "73.314, -11.5682, 126.5, 0.88", "73.8282, -10.641, 127.962, 1.4", "74.2324, -9.81311, 129.321, 1.4", "74.7005, -8.6576, 131.22, 0.66", "75.0168, -7.62278, 132.941, 0.29", "75.1148, -7.12073, 133.827, 0.29", "75.1602, -6.64801, 134.729, 0.29", "75.1309, -6.36392, 135.339, 0.29", "74.8944, -5.82626, 136.806, 0.29", "74.6088, -5.57272, 137.851, 0.29", "74.2253, -5.35527, 139.052, 0.29", "73.9281, -5.14239, 139.919, 0.29", "73.6851, -4.89764, 140.522, 0.29", "73.5101, -4.67834, 140.894, 0.29", "73.0931, -4.01855, 141.525, 0.88", "72.6814, -3.20979, 142.022, 1.25", "72.3202, -2.38164, 142.439, 0.59", "71.8461, -1.26036, 142.928, 1.25", "71.5318, -0.479601, 143.249, 1.4", "70.5651, 1.90513, 144.175, 0.15", "70.1835, 2.80503, 144.491, 0.74", "69.4663, 4.42685, 145.01, 0.22", "68.9593, 5.54729, 145.365, 1.03", "68.6027, 6.33566, 145.627, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "41.4242, 7.17336, 46.3969, 0.15", "40.1331, 6.17553, 47.0379, 0.15", "39.6112, 5.75854, 47.2801, 0.07", "38.9862, 5.25571, 47.5501, 1.03", "38.1159, 4.55671, 47.8926, 0.07", "37.2504, 3.87058, 48.2109, 0.07", "36.758, 3.49095, 48.3793, 0.66", "35.765, 2.71271, 48.5832, 0.07", "35.2565, 2.29961, 48.6545, 0.07", "34.5228, 1.68906, 48.7243, 0.07", "34.3057, 1.50364, 48.7233, 0.29", "33.8961, 1.13533, 48.6853, 0.81", "32.7764, 0.0937509, 48.5034, 0.07", "32.0162, -0.642449, 48.3305, 0.07", "31.4965, -1.16311, 48.1762, 0.15", "30.4585, -2.24231, 47.8137, 0.07", "29.8265, -2.93772, 47.5708, 0.07", "29.4698, -3.35647, 47.4235, 0.22", "29.2029, -3.68532, 47.3061, 0.22", "28.4047, -4.65595, 46.9424, 0.15", "27.9422, -5.22641, 46.7369, 0.15", "27.4071, -5.9225, 46.513, 0.07", "27.1231, -6.30734, 46.3906, 0.15", "26.4445, -7.22054, 46.1171, 0.07", "26.0433, -7.72807, 45.9638, 0.59", "25.3171, -8.52248, 45.6934, 0.07", "24.9137, -8.89649, 45.5161, 0.07", "24.6078, -9.13339, 45.3645, 0.22", "23.9552, -9.57694, 45.0312, 0.22", "23.1479, -10.0831, 44.6436, 0.07", "22.1792, -10.6619, 44.2148, 0.07", "21.7109, -10.9116, 44.027, 0.07", "21.1259, -11.172, 43.8296, 0.07", "20.1757, -11.5059, 43.5934, 0.29", "18.7319, -11.8744, 43.3892, 0.07", "18.0888, -11.9727, 43.3863, 0.29", "17.5159, -12.0279, 43.4482, 0.29", "16.4234, -12.1151, 43.6325, 0.07", "15.3742, -12.1589, 43.8509, 0.07", "14.935, -12.153, 43.9461, 0.22", "14.2793, -12.1103, 44.0715, 0.37", "13.3963, -12.0676, 44.1942, 0.29", "12.3059, -12.0689, 44.1955, 0.07", "11.9184, -12.0852, 44.1375, 0.37", "11.3509, -12.0983, 43.9991, 0.59", "10.2678, -12.0546, 43.6546, 0.07", "9.72909, -11.9989, 43.4466, 0.15", "8.41366, -11.785, 42.872, 0.07", "7.55938, -11.6179, 42.4675, 0.07", "6.81054, -11.4971, 42.1154, 0.15", "5.80533, -11.4016, 41.6764, 0.07", "5.27189, -11.4009, 41.4782, 0.07", "4.96169, -11.4227, 41.3876, 0.29", "4.58021, -11.4756, 41.3162, 0.29", "3.50516, -11.6986, 41.1696, 0.07", "2.49475, -11.9534, 41.073, 0.07", "1.59022, -12.2002, 41.0082, 0.07", "1.25157, -12.2902, 40.9744, 0.07", "1.07703, -12.3349, 40.9477, 0.15", "0.798992, -12.3961, 40.8806, 0.15", "0.273543, -12.46, 40.6752, 0.15", "-0.417765, -12.4593, 40.2924, 0.15", "-1.11686, -12.4075, 39.796, 0.15", "-1.52624, -12.3666, 39.4861, 0.15", "-1.96656, -12.3195, 39.1473, 0.15", "-2.40225, -12.271, 38.8032, 0.15", "-2.73262, -12.2342, 38.533, 0.15", "-3.11038, -12.1721, 38.2239, 0.15", "-3.83343, -12.0017, 37.615, 0.07", "-4.31082, -11.881, 37.2305, 0.07", "-4.99362, -11.7449, 36.7511, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-27.7743, 33.2837, 37.9378, 0.07", "-28.3157, 32.6031, 39.053, 0.07", "-28.5952, 32.1404, 39.7875, 0.88", "-28.8868, 31.4989, 40.7759, 0.22", "-29.092, 31.0625, 41.4532, 0.88", "-29.375, 30.4806, 42.3515, 1.84", "-29.9053, 29.3533, 44.0452, 0.22", "-30.0961, 28.8208, 44.7388, 0.22", "-30.2483, 28.3437, 45.2619, 0.22", "-30.5196, 27.4813, 46.0864, 0.15", "-30.7187, 26.8472, 46.6316, 0.15", "-30.9009, 26.344, 47.0058, 0.29", "-31.3371, 25.2915, 47.6616, 1.25", "-32.0469, 23.7032, 48.5647, 0.07", "-32.2916, 23.163, 48.8518, 0.88", "-32.4181, 22.8628, 49.0057, 1.18", "-32.9277, 21.7056, 49.6075, 0.07", "-33.1864, 21.1446, 49.9182, 0.74", "-33.628, 20.1466, 50.5725, 0.07", "-33.78, 19.7083, 50.9133, 0.29", "-33.9053, 19.0641, 51.4865, 0.07", "-33.9059, 18.5108, 52.063, 1.03", "-33.828, 18.1319, 52.5344, 1.47", "-33.5248, 17.2922, 53.7126, 0.22", "-33.2287, 16.7003, 54.6304, 0.22", "-32.9228, 16.1463, 55.5727, 0.22", "-32.7208, 15.7378, 56.326, 0.22", "-32.6298, 15.4936, 56.7733, 0.22", "-32.6006, 15.1196, 57.3395, 0.22", "-32.6476, 14.8043, 57.7396, 0.22", "-32.8212, 14.2922, 58.3227, 0.22", "-33.1311, 13.5198, 59.0636, 1.03", "-33.4268, 12.7516, 59.7097, 1.47", "-33.9416, 11.2478, 60.8582, 0.07", "-34.0795, 10.8493, 61.1534, 1.25", "-34.2917, 10.2757, 61.5784, 1.4", "-34.7522, 9.135, 62.4065, 0.29", "-35.0806, 8.42719, 62.9215, 0.15", "-35.3951, 7.87156, 63.3365, 0.81", "-36.1317, 6.74104, 64.1884, 0.15", "-36.6003, 6.13941, 64.6346, 0.15", "-36.9632, 5.72433, 64.9476, 0.37", "-37.6317, 5.09672, 65.3821, 0.15", "-38.0071, 4.78074, 65.5683, 0.88", "-38.3926, 4.47571, 65.7206, 1.55", "-39.9437, 3.30716, 66.2528, 0.22", "-40.3451, 3.01639, 66.3969, 0.22", "-41.3054, 2.35965, 66.7849, 0.81", "-42.5501, 1.55351, 67.3599, 0.07", "-43.022, 1.26565, 67.6271, 0.74", "-43.727, 0.856054, 68.1313, 0.22", "-44.4607, 0.428006, 68.8138, 0.37", "-44.9325, 0.143605, 69.3469, 0.22", "-45.6228, -0.321044, 70.3266, 1.03", "-46.2751, -0.868224, 71.4876, 0.07", "-46.7055, -1.33906, 72.4481, 0.88", "-47.0301, -1.78386, 73.2928, 1.25", "-47.609, -2.69032, 74.7836, 0.15", "-47.8945, -3.17196, 75.4671, 0.74", "-48.4689, -4.15738, 76.6525, 0.22", "-49.0648, -5.14018, 77.6404, 1.11", "-49.4645, -5.74044, 78.1692, 2.06", "-50.5398, -7.1942, 79.3368, 0.15", "-50.9669, -7.72001, 79.7347, 0.29", "-51.9528, -8.80588, 80.5602, 0.07", "-52.4464, -9.27149, 80.9509, 0.22", "-53.3788, -10.0534, 81.7323, 0.07", "-53.8769, -10.4278, 82.234, 1.4", "-54.9769, -11.1745, 83.5508, 0.07", "-55.5073, -11.512, 84.2354, 0.81", "-56.3646, -12.0161, 85.4788, 0.07", "-56.8753, -12.2967, 86.3004, 0.96", "-57.8113, -12.744, 87.8839, 0.07", "-58.1644, -12.8888, 88.4763, 0.07", "-58.6246, -13.0558, 89.2294, 1.25", "-59.698, -13.422, 90.8711, 0.22", "-60.4556, -13.6809, 91.9268, 0.88", "-60.9771, -13.8256, 92.561, 1.18", "-62.5568, -14.1863, 94.243, 0.15", "-63.0626, -14.2919, 94.7213, 0.81", "-63.8871, -14.4556, 95.4017, 0.15", "-64.7029, -14.6087, 95.9578, 1.18", "-66.0353, -14.7991, 96.7629, 0.07", "-66.6178, -14.8476, 97.0887, 0.07", "-67.4572, -14.8019, 97.4776, 0.07", "-67.9014, -14.7406, 97.6602, 0.88", "-68.5646, -14.6203, 97.9178, 1.33", "-70.3901, -14.1815, 98.5784, 0.07", "-71.2509, -13.9302, 98.8602, 1.33", "-73.3565, -13.1786, 99.5165, 0.07", "-73.7131, -13.0287, 99.6199, 0.15" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-27.7743, 33.2837, 37.9378, 0.15", "-27.4971, 32.3325, 37.6689, 0.15", "-27.3845, 31.9412, 37.525, 0.29", "-27.2092, 31.3574, 37.293, 0.15", "-27.1372, 31.133, 37.1947, 0.52", "-26.9868, 30.6833, 36.9905, 1.33", "-26.7062, 29.812, 36.6098, 0.07", "-26.5725, 29.3451, 36.3895, 0.07", "-26.4583, 28.9429, 36.2217, 0.37", "-26.2265, 28.2561, 36.0283, 0.07", "-26.1451, 28.0448, 35.9984, 0.15", "-25.7481, 27.0655, 35.9896, 0.15", "-25.6442, 26.8308, 36.018, 0.74", "-25.4136, 26.3017, 36.1253, 1.25", "-24.8744, 24.9919, 36.4873, 0.15", "-24.5706, 24.2117, 36.7497, 0.15", "-24.4379, 23.8593, 36.8742, 0.15", "-24.285, 23.4197, 37.0265, 0.15", "-24.1173, 22.8547, 37.195, 1.25", "-23.9077, 21.8665, 37.421, 0.07", "-23.8586, 21.4576, 37.4857, 0.96", "-23.8342, 21.0969, 37.5207, 1.25", "-23.7705, 19.8862, 37.5956, 0.15", "-23.7486, 19.3854, 37.6038, 0.96", "-23.6999, 18.4311, 37.5749, 0.07", "-23.6738, 17.9751, 37.5384, 0.29", "-23.6011, 16.6372, 37.3802, 0.07", "-23.5854, 16.3412, 37.337, 0.29", "-23.5318, 15.4182, 37.1722, 0.07", "-23.4943, 14.9955, 37.0868, 1.03", "-23.4411, 14.5854, 36.9995, 1.47", "-23.186, 13.1195, 36.69, 0.07", "-23.1079, 12.7811, 36.6217, 0.59", "-22.986, 12.308, 36.5356, 0.07", "-22.8648, 11.8596, 36.4768, 0.07", "-22.6968, 11.2529, 36.4221, 0.07", "-22.5572, 10.7099, 36.4022, 1.18", "-22.2148, 9.29733, 36.4135, 0.07", "-22.1374, 8.88832, 36.426, 0.74", "-21.9846, 7.79621, 36.476, 0.07", "-21.9585, 7.4842, 36.4927, 0.44", "-21.9174, 6.41861, 36.5735, 0.07", "-21.9207, 5.87237, 36.6297, 1.47", "-21.9755, 4.74852, 36.7697, 0.07", "-22.0042, 4.40088, 36.8115, 0.37", "-22.0862, 3.70677, 36.8855, 0.07", "-22.2093, 2.78007, 37.0045, 0.07", "-22.2947, 2.18197, 37.0895, 0.07", "-22.3311, 1.87015, 37.1404, 0.37", "-22.3954, 1.10069, 37.2791, 0.15", "-22.4227, 0.622773, 37.3814, 0.81", "-22.4445, -0.203367, 37.5823, 0.15", "-22.4389, -0.880111, 37.7674, 1.55", "-22.4006, -1.98654, 38.1137, 0.07", "-22.3786, -2.31692, 38.2372, 0.66", "-22.2633, -3.21249, 38.6267, 0.07", "-22.1914, -3.52655, 38.7704, 0.29", "-22.0391, -3.98894, 38.9883, 0.07", "-21.9339, -4.27523, 39.1374, 0.74", "-21.6373, -5.0065, 39.5449, 0.15", "-21.3435, -5.63446, 39.8901, 1.18", "-20.6273, -6.85572, 40.5273, 0.15", "-20.3652, -7.26185, 40.7306, 0.66" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-9.42395, 77.4328, 128.472, 0.07", "-11.1426, 75.9419, 128.388, 0.07", "-11.7418, 75.2975, 128.338, 0.07", "-12.3522, 74.6409, 128.286, 0.22", "-13.5046, 73.4016, 128.189, 0.07", "-13.9734, 72.8974, 128.149, 0.52", "-14.7632, 72.048, 128.082, 0.07", "-15.0357, 71.578, 128.059, 0.22" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-9.42395, 77.4328, 128.472, 0.29", "-9.43546, 77.468, 130.044, 0.29", "-9.48597, 77.4035, 131.186, 0.29", "-9.62574, 77.2821, 132.461, 0.59", "-9.8744, 77.1245, 134.153, 0.74", "-10.0163, 77.0702, 134.963, 1.03", "-10.1977, 77.0647, 135.916, 1.03", "-10.4545, 77.1195, 137.128, 0.15", "-10.667, 77.2649, 138.049, 0.44", "-10.9538, 77.5283, 139.189, 0.81", "-11.1625, 77.7852, 139.909, 1.03", "-11.5333, 78.3801, 141.205, 0.15", "-11.8353, 79.0332, 142.344, 0.74", "-12.0527, 79.8419, 143.496, 0.37" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "13.9723, -4.64913, -4.50673, 0.22", "13.1439, -6.62706, -6.91985, 0.22", "12.8984, -7.52005, -7.87502, 0.37", "12.8051, -8.06175, -8.43118, 0.59", "12.6324, -9.06323, -9.45937, 0.22", "12.4444, -10.1544, -10.5796, 1.47", "12.2526, -11.2667, -11.7216, 0.29", "12.2792, -12.3534, -12.5949, 0.15", "12.3917, -13.3744, -13.3524, 1.03", "9.75349, -21.8451, -21.6848, 1.03" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "13.9723, -4.64913, -4.50673, 0.22", "14.6627, -5.43281, -4.3519, 0.22", "15.2317, -6.20443, -4.24585, 1.4", "15.973, -7.53134, -4.11729, 2.65", "17.4766, -10.9894, -3.83029, 0.22", "17.7224, -11.6961, -3.78503, 0.22", "18.0336, -12.8019, -3.73098, 0.96", "18.2561, -14.1817, -3.68913, 2.06", "18.3717, -16.433, -3.6732, 0.22", "18.2564, -17.7234, -3.73055, 0.15", "18.0475, -18.723, -3.85543, 0.29", "17.7918, -19.7538, -3.98624, 0.15", "17.5373, -20.8369, -4.16041, 1.18", "17.4038, -21.4772, -4.28758, 1.7", "16.923, -24.2516, -4.92879, 0.22", "16.7798, -25.3687, -5.20768, 0.81", "16.7256, -26.0957, -5.39096, 1.4", "16.6802, -28.5707, -6.01461, 0.15", "16.7357, -29.2094, -6.17554, 0.15", "16.9986, -30.4725, -6.50424, 0.15", "17.2529, -31.284, -6.7098, 0.37", "17.5023, -32.0943, -6.89535, 1.33", "17.7503, -33.0569, -7.08567, 1.84", "18.1996, -36.2123, -7.49254, 0.22", "18.2669, -37.9391, -7.64478, 0.07", "18.277, -38.6719, -7.70131, 0.96", "18.2156, -40.2456, -7.77952, 0.22", "18.0605, -41.466, -7.80063, 1.33", "17.4659, -43.6052, -7.70872, 0.22", "16.7769, -44.7334, -7.50021, 1.18" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "12.6606, 32.7894, 33.7042, 0.44", "11.5474, 32.7101, 34.577, 0.44", "10.6445, 32.769, 35.1545, 0.44", "9.74119, 32.9159, 35.7222, 0.44", "9.34828, 32.9968, 35.9811, 0.44", "8.7164, 33.1322, 36.3967, 0.96", "8.31666, 33.2164, 36.6529, 1.18", "7.21653, 33.4273, 37.2382, 0.15", "6.68068, 33.5611, 37.5479, 0.15", "6.19673, 33.6895, 37.8809, 0.15", "5.477, 33.8413, 38.4253, 0.15", "5.07189, 33.8732, 38.7355, 1.33", "4.22261, 33.8428, 39.3631, 1.92", "2.70667, 33.6382, 40.431, 0.22", "1.70701, 33.4244, 41.0765, 0.59", "1.18047, 33.253, 41.4236, 1.03", "-0.0487933, 32.7007, 42.2944, 0.15", "-0.715726, 32.309, 42.8122, 0.15", "-1.02113, 32.0731, 43.0646, 0.88", "-1.60496, 31.4804, 43.5518, 1.92", "-2.78045, 30.0684, 44.5763, 0.22", "-3.07936, 29.687, 44.8652, 0.22", "-3.42964, 29.1783, 45.2091, 0.22", "-3.63163, 28.8889, 45.3993, 0.22", "-4.16518, 28.209, 45.848, 0.22", "-4.62002, 27.7118, 46.1816, 1.11", "-5.39818, 27.0169, 46.6469, 2.58", "-6.8663, 25.8605, 47.4566, 0.52", "-8.00597, 24.9917, 48.1062, 0.15", "-8.47984, 24.633, 48.4005, 0.15", "-9.13597, 24.1545, 48.849, 0.29", "-9.74949, 23.7278, 49.2933, 0.96", "-10.7234, 23.0495, 50.0252, 0.22", "-11.3634, 22.6407, 50.541, 0.22", "-11.9429, 22.2302, 51.003, 0.44", "-12.5422, 21.7485, 51.5217, 1.62", "-13.092, 21.2721, 52.0464, 1.99" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "12.6606, 32.7894, 33.7042, 1.47", "13.9453, 33.2353, 34.0692, 1.47" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-17.9086, -158.079, 46.0909, 0.22", "-17.6897, -157.315, 46.5903, 0.22", "-17.4434, -156.443, 47.1212, 0.22", "-17.2319, -155.75, 47.5011, 0.22", "-16.9788, -154.967, 47.8847, 0.66", "-16.7729, -154.381, 48.1672, 0.81", "-16.3368, -153.279, 48.6616, 0.15", "-16.0434, -152.617, 48.9006, 1.18", "-15.7366, -151.968, 49.0989, 1.4", "-15.0169, -150.552, 49.4759, 0.15", "-14.7399, -150.066, 49.5873, 0.15", "-14.1148, -149.117, 49.7844, 1.7", "-13.4714, -148.275, 49.9128, 0.22", "-12.94, -147.636, 49.9824, 0.88", "-12.5008, -147.131, 50.022, 0.22", "-12.03, -146.604, 50.0389, 0.07", "-11.4881, -145.95, 50.0542, 0.07", "-10.7812, -145.034, 50.0908, 0.66", "-10.0966, -144.067, 50.1425, 0.07", "-9.85513, -143.692, 50.1723, 0.37", "-9.56655, -143.19, 50.2204, 0.66", "-8.75352, -141.593, 50.4217, 0.07", "-8.42933, -140.896, 50.5312, 1.03", "-7.89272, -139.594, 50.7843, 0.15", "-7.68139, -139.015, 50.9192, 0.88", "-7.51926, -138.517, 51.0474, 1.18", "-7.08719, -136.903, 51.5191, 0.15", "-7.00137, -136.369, 51.6964, 0.15", "-6.98068, -135.775, 51.9072, 0.22", "-7.04714, -135.331, 52.075, 0.07", "-7.20674, -134.8, 52.2636, 0.29", "-7.41715, -134.306, 52.4279, 0.07", "-7.63296, -133.9, 52.541, 0.59", "-8.01743, -133.242, 52.7057, 0.15", "-8.53729, -132.393, 52.9021, 1.62", "-9.06598, -131.534, 53.0926, 0.15", "-9.43859, -130.929, 53.2342, 0.29", "-10.0347, -129.947, 53.4682, 0.07", "-10.4571, -129.151, 53.6778, 0.07", "-10.6654, -128.697, 53.8075, 0.66", "-11.0103, -127.886, 54.0519, 0.15", "-11.2623, -127.271, 54.2509, 1.03", "-11.5557, -126.559, 54.5131, 1.62", "-12.3427, -124.59, 55.3789, 0.07", "-12.6742, -123.713, 55.7986, 0.59", "-12.9077, -123.089, 56.1168, 0.15", "-13.1985, -122.289, 56.5378, 0.88", "-13.5729, -121.116, 57.1609, 0.15", "-13.9105, -120.052, 57.7613, 0.15", "-14.1771, -119.216, 58.2676, 1.33", "-14.4875, -118.155, 58.9278, 0.15", "-14.6909, -117.277, 59.4729, 0.15", "-14.7998, -116.515, 59.9108, 1.33" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-17.9086, -158.079, 46.0909, 0.15", "-18.51, -159.519, 46.4772, 0.15", "-18.9796, -160.342, 46.8933, 0.15", "-19.376, -160.897, 47.3128, 0.15", "-19.7442, -161.331, 47.6973, 0.74", "-20.3582, -162.009, 48.3249, 0.15", "-20.8237, -162.544, 48.8081, 1.4", "-21.5833, -163.39, 49.7315, 0.15", "-22.2986, -164.191, 50.6534, 0.66", "-22.7901, -164.889, 51.4942, 0.07", "-22.9544, -165.235, 51.9603, 0.07", "-23.1191, -165.68, 52.5583, 0.29", "-23.3076, -166.453, 53.603, 0.07", "-23.3498, -167.092, 54.4543, 1.25", "-23.2376, -168.325, 56.1403, 0.29", "-22.9508, -169.637, 58.1074, 1.62" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-75.1876, -122.901, 15.8571, 0.59", "-76.4878, -122.665, 15.2637, 0.59", "-76.8849, -122.577, 15.0492, 0.07", "-77.4231, -122.453, 14.6941, 0.07", "-77.7915, -122.365, 14.4216, 0.37", "-78.4037, -122.204, 13.9212, 0.07", "-78.8661, -122.067, 13.4896, 0.15", "-79.4804, -121.888, 12.7841, 1.62", "-80.1257, -121.62, 11.7113, 0.22", "-80.3252, -121.5, 11.1779, 0.22", "-80.4568, -121.399, 10.695, 0.59", "-80.5597, -121.256, 9.96922, 0.59", "-80.5663, -121.127, 9.18784, 0.59", "-80.3682, -121.017, 8.17433, 1.18", "-80.1455, -120.98, 7.65594, 1.18", "-83.7036, -119.375, 0.966273, 1.18" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-75.1876, -122.901, 15.8571, 0.22", "-76.1316, -123.565, 15.4193, 0.22", "-76.6523, -123.923, 15.1645, 0.15", "-77.4042, -124.401, 14.7249, 0.15", "-78.0539, -124.8, 14.2954, 1.25", "-78.7997, -125.228, 13.7938, 0.15", "-79.4426, -125.568, 13.3735, 0.15", "-80.3354, -125.99, 12.7854, 1.62", "-81.3376, -126.43, 12.1681, 0.22", "-81.9548, -126.712, 11.8003, 0.22", "-82.6804, -127.053, 11.3679, 1.33", "-83.3985, -127.38, 10.9544, 1.11", "-84.6216, -127.908, 10.2928, 0.15", "-85.059, -128.096, 10.0849, 0.15", "-86.0652, -128.541, 9.70938, 0.15", "-86.656, -128.799, 9.54908, 0.15", "-87.277, -129.057, 9.47118, 0.66", "-88.2028, -129.335, 9.56522, 0.07", "-88.7989, -129.411, 9.77529, 0.88", "-89.6319, -129.375, 10.1884, 0.15", "-90.4907, -129.216, 10.6747, 0.59", "-91.5602, -128.87, 11.3502, 1.4", "-92.9592, -128.221, 12.2367, 0.22", "-93.9428, -127.618, 12.8628, 1.25", "-95.1097, -126.744, 13.6093, 0.44", "-95.7209, -126.197, 13.9826, 0.52", "-96.4065, -125.467, 14.4039, 1.11", "-97.1482, -124.541, 14.8953, 0.37", "-97.9645, -123.415, 15.5149, 0.07", "-98.416, -122.789, 15.8968, 0.07", "-98.7273, -122.341, 16.2121, 0.22", "-99.1411, -121.724, 16.7207, 0.96", "-99.5075, -121.145, 17.252, 2.06", "-100.208, -119.878, 18.5786, 0.22", "-100.633, -119.031, 19.5978, 0.74", "-100.903, -118.515, 20.3507, 0.74", "-101.164, -118.052, 21.2107, 0.74", "-101.257, -117.895, 21.6073, 0.74", "-101.408, -117.617, 22.595, 0.74", "-101.441, -117.394, 23.6629, 0.74", "-101.437, -117.262, 24.2976, 0.74", "-101.434, -117.148, 24.6515, 0.74", "-101.405, -116.717, 25.4281, 0.74", "-101.299, -116.202, 26.029, 0.74", "-101.033, -115.224, 26.9198, 0.29", "-100.868, -114.666, 27.3518, 0.29", "-100.605, -113.882, 27.9019, 0.07", "-100.42, -113.405, 28.2219, 0.44", "-99.9077, -112.224, 28.9659, 0.07", "-99.5924, -111.588, 29.3696, 0.07", "-99.2695, -110.979, 29.7666, 0.07", "-99.0728, -110.633, 30.0062, 0.29", "-98.6992, -110.003, 30.4359, 0.07", "-98.4015, -109.476, 30.8225, 0.37", "-98.0648, -108.907, 31.2866, 0.22", "-97.9302, -108.695, 31.5031, 0.81", "-97.7083, -108.331, 31.9962, 0.37", "-97.4672, -107.845, 32.8931, 0.88", "-97.2497, -107.316, 34.0097, 0.88", "-97.1907, -107.122, 34.4823, 0.88", "-97.1353, -106.783, 35.4273, 0.88", "-97.1097, -106.528, 36.2775, 0.88", "-97.1046, -106.261, 37.5704, 0.88" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "16.7769, -44.7334, -7.50021, 0.29", "17.0236, -46.0633, -7.29168, 0.29", "17.165, -46.7278, -7.19285, 0.15", "17.3165, -47.3669, -7.10688, 1.03", "17.6103, -48.5627, -6.96161, 0.15", "17.8085, -49.3693, -6.86363, 1.4", "18.2598, -51.206, -6.64051, 0.07", "18.3257, -51.4844, -6.60536, 0.81", "18.5674, -52.4321, -6.51311, 0.07", "18.768, -53.1061, -6.45793, 1.62" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "16.7769, -44.7334, -7.50021, 1.92", "16.6694, -45.2339, -7.1299, 1.92", "16.5474, -45.7375, -6.74997, 2.06", "16.215, -46.8354, -5.8792, 0.22", "16.1006, -47.1861, -5.5864, 0.66", "15.901, -47.6407, -5.18114, 0.22", "15.7289, -47.9466, -4.89973, 0.96", "15.6182, -48.1234, -4.72911, 1.47", "15.1212, -48.7914, -4.04643, 0.52", "14.7911, -49.1196, -3.66487, 0.66", "14.0803, -49.7673, -2.92096, 0.15", "13.6779, -50.1347, -2.5211, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-13.092, 21.2721, 52.0464, 0.07", "-14.7304, 21.5302, 52.5416, 0.07", "-15.4911, 21.65, 52.7715, 0.96", "-16.5116, 21.8108, 53.0799, 0.07", "-17.0505, 21.8957, 53.2428, 0.29", "-17.9459, 22.0367, 53.5134, 0.07", "-18.9173, 22.1897, 53.8071, 0.07" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-13.092, 21.2721, 52.0464, 0.44", "-12.7072, 20.2994, 53.1691, 0.44", "-12.273, 19.5508, 54.1678, 0.96", "-11.9128, 19.0493, 54.9221, 0.66", "-11.5294, 18.5306, 55.7179, 0.15", "-11.3667, 18.2198, 56.1336, 0.15", "-11.1529, 17.7339, 56.7329, 0.29", "-10.8625, 17.0222, 57.552, 0.29", "-10.7132, 16.5473, 58.0224, 0.74", "-10.5031, 15.8991, 58.5895, 1.62", "-9.91747, 14.2609, 59.8738, 0.22", "-9.696, 13.6071, 60.3398, 1.18", "-9.59074, 13.2363, 60.5813, 1.55", "-9.31974, 12.2278, 61.1868, 0.29", "-9.04865, 11.3348, 61.7235, 0.22", "-8.66337, 10.3768, 62.3456, 0.22", "-8.30214, 9.75712, 62.812, 0.22", "-7.97318, 9.20618, 63.2848, 0.52", "-7.8291, 9.00495, 63.4981, 0.52", "-7.50992, 8.64137, 63.992, 0.52", "-7.28263, 8.38809, 64.3471, 0.52", "-6.99942, 8.07312, 64.731, 0.52", "-6.51131, 7.53741, 65.3299, 0.15", "-6.18769, 7.19042, 65.6908, 0.15", "-5.94069, 6.92049, 65.9507, 0.44", "-5.52809, 6.46795, 66.3632, 1.11", "-4.75546, 5.60727, 67.0411, 0.15", "-4.45501, 5.25674, 67.2817, 0.15", "-3.83231, 4.50043, 67.7721, 0.22", "-3.33302, 3.89869, 68.1435, 1.25", "-2.8238, 3.35049, 68.4957, 1.99", "-1.57134, 2.20384, 69.2763, 0.15", "-1.01217, 1.76424, 69.5589, 1.03", "-0.402683, 1.35678, 69.8203, 1.03", "0.860348, 0.765144, 70.2098, 0.15", "1.80753, 0.472805, 70.4138, 0.15", "2.66111, 0.315098, 70.523, 0.15", "3.64539, 0.244255, 70.5686, 0.81", "4.6413, 0.177725, 70.559, 1.33", "6.59107, -0.0372531, 70.4402, 0.15", "7.21485, -0.189102, 70.3894, 1.25", "8.32086, -0.648144, 70.2981, 0.29", "9.40687, -1.32156, 70.2136, 0.22", "10.1316, -1.93441, 70.1549, 0.15", "10.8389, -2.75103, 70.0613, 1.77", "12.0201, -4.55443, 69.8033, 0.07", "12.3359, -5.11635, 69.7119, 0.81", "12.8318, -6.15341, 69.5425, 0.07", "13.2077, -7.04775, 69.4006, 0.96", "13.5448, -7.88746, 69.2485, 2.06", "14.3576, -9.83332, 68.8584, 0.07", "14.7753, -10.7529, 68.6619, 0.22", "15.267, -11.8136, 68.486, 0.15", "15.675, -12.6844, 68.39, 1.47", "16.1016, -13.6532, 68.3218, 0.66", "16.4898, -14.6474, 68.2793, 0.66", "16.712, -15.2861, 68.2771, 1.77", "17.1659, -16.6566, 68.2862, 0.07", "17.2788, -17.0469, 68.2985, 0.22", "17.4905, -17.9153, 68.3496, 0.22", "17.6307, -18.6621, 68.4186, 1.55", "17.8195, -20.1842, 68.5705, 0.15", "17.8707, -20.8716, 68.622, 0.59", "17.919, -21.7288, 68.6474, 0.15", "17.96, -22.4393, 68.6507, 0.15", "17.9993, -23.0857, 68.6424, 0.74", "18.041, -23.8764, 68.6058, 1.25", "18.0533, -25.3329, 68.5394, 0.07", "18.0508, -26.1347, 68.5078, 0.15", "18.0515, -26.8256, 68.5112, 0.74", "18.0452, -27.4423, 68.5542, 1.4", "18.0275, -28.4754, 68.698, 0.15", "17.9927, -29.4334, 68.9486, 0.07", "17.9538, -29.8813, 69.1342, 0.29", "17.7513, -31.0156, 69.7162, 0.07", "17.628, -31.5792, 70.0393, 0.88", "17.5316, -31.941, 70.2649, 1.33", "17.1948, -32.9938, 70.9848, 0.22", "16.9688, -33.6823, 71.4643, 0.22", "16.7373, -34.3164, 71.9237, 1.33" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "13.9453, 33.2353, 34.0692, 0.15", "14.7083, 34.7862, 34.7446, 0.15", "14.9627, 35.3374, 35.0409, 0.22", "15.3459, 36.2346, 35.6211, 0.15", "15.5557, 36.7801, 35.9975, 0.96", "15.8179, 37.5305, 36.5244, 0.29", "16.0253, 38.109, 36.9277, 0.29", "16.2419, 38.7693, 37.4462, 0.29", "16.4734, 39.4112, 37.913, 0.29", "16.7178, 40.0213, 38.3185, 1.25", "16.8257, 40.2571, 38.466, 1.25", "17.5132, 41.5695, 39.2639, 0.15", "18.1088, 42.5251, 39.7988, 1.33", "19.0366, 43.8182, 40.4703, 0.07", "19.5971, 44.4809, 40.8049, 0.59", "20.4151, 45.3404, 41.244, 0.15", "21.1612, 46.0874, 41.627, 1.11", "21.7766, 46.7674, 41.9535, 2.14", "22.0837, 47.1616, 42.1274, 1.84", "22.8647, 48.6449, 42.7474, 0.15", "23.1149, 49.5553, 43.0864, 1.4", "23.1746, 50.3252, 43.3589, 0.96", "23.1011, 52.3458, 44.1296, 0.15", "23.0035, 53.1708, 44.4799, 0.96", "22.6992, 54.8284, 45.3137, 0.15", "22.5634, 55.373, 45.6385, 1.18", "22.3292, 56.3877, 46.3624, 0.15", "22.1923, 57.3547, 47.2082, 0.59", "22.1899, 57.6653, 47.5431, 0.88", "22.3031, 58.6997, 48.7852, 0.22", "22.4655, 59.3735, 49.653, 0.88", "22.6318, 59.9466, 50.4078, 1.77", "22.9974, 61.0338, 51.7873, 0.29", "23.2218, 61.5697, 52.4223, 0.81", "23.6969, 62.5441, 53.5145, 0.22", "24.088, 63.2523, 54.2569, 0.37", "24.3143, 63.6283, 54.63, 0.37", "24.9032, 64.5405, 55.4888, 1.55", "25.7345, 65.7401, 56.5245, 0.07", "26.4044, 66.6871, 57.2688, 0.22", "26.8614, 67.3276, 57.729, 0.22", "27.2649, 67.9007, 58.1207, 0.22", "27.7299, 68.5946, 58.5682, 0.07", "28.1175, 69.2287, 58.9476, 1.11", "28.327, 69.5972, 59.1402, 1.4", "29.063, 70.8588, 59.7199, 0.07", "29.5205, 71.6394, 60.0636, 0.74", "29.789, 72.1362, 60.2829, 0.74", "30.2126, 72.9741, 60.6578, 0.22", "30.7006, 73.9692, 61.0994, 0.22", "31.023, 74.6298, 61.384, 0.96", "31.2376, 75.0807, 61.5719, 0.96", "32.0027, 76.8046, 62.274, 0.15", "32.4042, 77.7634, 62.6682, 0.15", "32.5646, 78.1951, 62.842, 0.22", "32.9205, 79.4078, 63.2984, 0.07", "33.0765, 80.0386, 63.5362, 0.07", "33.2806, 81.0694, 63.9137, 0.96", "33.4117, 81.9164, 64.2122, 0.22", "33.5154, 82.8662, 64.5341, 1.25", "33.6855, 84.9481, 65.238, 0.15", "33.7476, 85.9715, 65.5764, 1.33", "33.8346, 87.6121, 66.1135, 0.15", "33.8561, 88.1245, 66.288, 0.22", "33.8832, 89.2507, 66.6775, 0.15", "33.8854, 90.0211, 66.9441, 0.81", "33.8826, 90.1623, 66.9909, 0.81" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "13.9453, 33.2353, 34.0692, 0.29", "14.8697, 33.8762, 34.98, 0.29", "15.714, 34.5624, 35.8714, 0.52", "16.1679, 34.9825, 36.3752, 1.25", "16.9759, 35.7893, 37.2852, 0.15", "17.3447, 36.1659, 37.6972, 0.15", "17.6199, 36.4563, 38.0135, 0.15", "18.028, 36.9778, 38.5124, 0.15", "18.3279, 37.3699, 38.8502, 0.81", "18.7438, 37.8769, 39.2901, 1.33", "19.4564, 38.6949, 40.0234, 0.22", "19.8604, 39.0889, 40.4095, 0.22", "20.3394, 39.4703, 40.8043, 1.11", "20.7463, 39.7461, 41.1074, 1.7", "21.5068, 40.2459, 41.6605, 0.22", "21.9012, 40.494, 41.9436, 0.88", "22.6653, 40.9258, 42.4482, 0.15", "23.1026, 41.1338, 42.7044, 0.29", "23.4978, 41.286, 42.9231, 0.29", "24.0138, 41.4742, 43.2187, 0.15", "24.596, 41.7024, 43.588, 0.15", "25.055, 41.9079, 43.9072, 0.96", "25.6104, 42.17, 44.3173, 0.66", "26.3918, 42.4199, 44.8751, 0.15", "26.9268, 42.5618, 45.258, 0.15", "27.6527, 42.7403, 45.8042, 0.81", "28.7254, 43.024, 46.665, 2.14", "29.2656, 43.181, 47.1262, 2.14", "30.8315, 43.7224, 48.5002, 0.15", "31.3892, 43.9263, 48.9773, 0.15", "32.2189, 44.2081, 49.6526, 0.29", "32.8064, 44.3899, 50.1107, 1.33", "33.3079, 44.5504, 50.5021, 1.62", "34.2737, 44.9205, 51.2685, 0.15", "34.5835, 45.0881, 51.5476, 0.15", "35.0646, 45.3463, 51.9981, 0.15", "35.3399, 45.494, 52.2714, 0.15", "35.696, 45.6606, 52.6428, 0.29", "36.2281, 45.8682, 53.2563, 0.66", "36.9372, 46.1317, 54.1984, 0.15", "37.3035, 46.3047, 54.7532, 0.15", "37.5686, 46.4717, 55.2038, 0.15", "37.8562, 46.7303, 55.7635, 0.66", "38.3459, 47.3247, 56.8828, 0.22", "38.6324, 47.7576, 57.5953, 0.22", "38.8824, 48.1635, 58.2129, 1.33", "39.1839, 48.6741, 58.9466, 1.92", "39.8242, 49.7755, 60.477, 0.37", "40.17, 50.3942, 61.3178, 0.22", "40.5412, 51.0761, 62.2286, 0.22", "40.7243, 51.4033, 62.7085, 0.22", "40.8553, 51.6615, 63.1709, 0.22", "40.9417, 51.8538, 63.6597, 0.22", "41.0143, 51.9798, 64.1316, 0.22", "41.0999, 52.133, 64.698, 0.52", "41.287, 52.5632, 66.0204, 1.18", "41.4898, 53.0318, 67.2892, 1.4", "41.8714, 53.85, 69.3126, 0.81", "42.1736, 54.3496, 70.4984, 0.81", "42.6122, 54.8897, 71.7927, 1.7", "43.6067, 55.8243, 74.0674, 0.29", "44.1905, 56.2815, 75.1599, 0.29", "44.5446, 56.5345, 75.7331, 1.03", "45.3285, 57.0905, 76.925, 0.22", "45.9661, 57.5386, 77.8813, 1.11", "46.7687, 58.0136, 79.0277, 0.29", "47.3152, 58.2667, 79.795, 0.29", "47.5998, 58.3856, 80.2336, 0.52", "48.0363, 58.5156, 81.0046, 0.52", "48.1833, 58.5554, 81.3052, 0.52", "48.4138, 58.5858, 81.7694, 0.52", "48.8902, 58.5471, 82.4965, 0.52", "49.3462, 58.5121, 82.9305, 0.52", "50.2624, 58.5107, 83.6153, 0.22", "51.1006, 58.5934, 84.1541, 0.15", "51.4226, 58.6854, 84.3814, 0.15", "51.9732, 58.9468, 84.793, 0.81", "52.9008, 59.5389, 85.527, 0.29", "53.5682, 60.0645, 86.0959, 0.81", "54.0837, 60.5789, 86.5694, 1.7", "55.2597, 61.9602, 87.7508, 0.22", "55.8209, 62.7515, 88.3524, 0.44", "56.0392, 63.2019, 88.6313, 0.15", "56.2497, 63.8335, 88.9394, 0.88", "56.5519, 65.1375, 89.4309, 0.22", "56.6775, 65.7704, 89.6244, 0.88", "56.7752, 66.2832, 89.7482, 1.47", "57.1674, 68.2712, 90.2331, 0.22", "57.2699, 68.7114, 90.3397, 0.22", "57.468, 69.3047, 90.4936, 0.37", "58.069, 70.5592, 90.8931, 0.22", "58.3703, 71.0666, 91.0942, 0.22", "58.7058, 71.539, 91.3442, 0.96", "59.0414, 71.9078, 91.5903, 1.55", "60.1429, 72.9768, 92.3899, 0.15", "60.952, 73.6589, 92.948, 1.25", "61.698, 74.2558, 93.4659, 1.25", "62.5724, 74.9015, 94.0554, 0.74", "63.6111, 75.5746, 94.7395, 0.15", "64.3106, 75.9786, 95.1921, 0.29", "64.7873, 76.2118, 95.4739, 0.29", "65.6048, 76.5541, 95.8359, 0.29", "66.4277, 76.878, 96.1108, 0.81", "67.5976, 77.3888, 96.4373, 0.15", "68.2384, 77.7175, 96.6209, 1.11", "68.564, 77.9079, 96.7161, 1.77", "70.277, 78.9544, 97.1993, 0.22", "70.8877, 79.3156, 97.3398, 0.22", "71.6445, 79.7929, 97.4843, 0.22", "72.3129, 80.2215, 97.5651, 0.22", "72.6651, 80.4615, 97.601, 0.44", "73.3577, 80.9661, 97.667, 0.44", "74.2476, 81.6385, 97.7499, 1.55", "75.2107, 82.3007, 97.8216, 0.66", "76.4847, 83.0209, 97.8986, 0.15", "76.9975, 83.2689, 97.9391, 0.15", "77.6425, 83.5467, 98.0175, 0.37", "78.6597, 83.9438, 98.1777, 0.15", "79.3421, 84.1921, 98.3184, 0.81", "80.619, 84.6105, 98.6282, 0.22", "81.2791, 84.8167, 98.7894, 0.22", "81.9765, 85.0255, 98.943, 1.25", "82.3104, 85.1332, 99.0103, 1.25", "83.5188, 85.5573, 99.1982, 0.07", "84.2996, 85.8585, 99.2832, 0.96", "85.8389, 86.4922, 99.3787, 0.22", "86.5962, 86.7907, 99.3998, 1.03", "87.3566, 87.0773, 99.4006, 1.77", "88.8843, 87.6762, 99.3817, 0.15", "89.7266, 88.0113, 99.3533, 0.22", "90.7212, 88.4186, 99.3181, 0.15", "91.4487, 88.7379, 99.3035, 1.03", "92.3701, 89.1529, 99.2986, 0.22", "93.4345, 89.6413, 99.3121, 0.22", "94.5463, 90.1989, 99.3501, 0.15", "95.3025, 90.5929, 99.3775, 0.15", "96.099, 91.0161, 99.4151, 0.81", "96.366, 91.1556, 99.4289, 1.77", "97.4838, 91.7075, 99.434, 0.07", "98.329, 92.1079, 99.3819, 0.59", "100.106, 92.9762, 99.1367, 0.22", "100.486, 93.1612, 99.0662, 0.59", "101.209, 93.498, 98.9055, 0.66", "102.654, 94.1634, 98.5455, 0.07", "103.231, 94.4202, 98.3664, 0.07", "103.582, 94.5606, 98.2288, 0.52" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-18.9173, 22.1897, 53.8071, 0.15", "-19.6761, 22.716, 54.1801, 0.15", "-20.2236, 23.1661, 54.2985, 0.15", "-20.8132, 23.7172, 54.2896, 0.07", "-21.0904, 23.9987, 54.2163, 0.07", "-21.7015, 24.6323, 53.9354, 0.07", "-22.1672, 25.1119, 53.6483, 0.07", "-22.3608, 25.3337, 53.4293, 0.07", "-22.5153, 25.5445, 53.1537, 0.29", "-22.6941, 25.8379, 52.6847, 0.29", "-22.787, 26.0032, 52.3861, 0.29", "-22.8683, 26.1522, 52.1007, 0.29", "-22.9667, 26.3344, 51.7264, 0.29", "-23.1715, 26.6495, 51.029, 0.22", "-23.3374, 26.8458, 50.5447, 0.22", "-23.643, 27.1471, 49.7626, 0.88", "-23.9223, 27.3897, 49.0937, 0.22", "-24.0589, 27.4927, 48.7954, 0.22", "-24.2927, 27.6469, 48.3256, 0.15", "-24.5816, 27.8222, 47.8097, 0.15", "-24.8741, 27.9988, 47.2867, 0.15", "-25.1242, 28.1602, 46.8171, 0.15", "-25.324, 28.3102, 46.4136, 0.74", "-25.4927, 28.4518, 46.0662, 0.74", "-25.7317, 28.6749, 45.5251, 0.15", "-26.0032, 28.9354, 44.8411, 0.22", "-26.1153, 29.0368, 44.5293, 0.22", "-26.2748, 29.1822, 43.9868, 0.22", "-26.332, 29.2352, 43.7422, 0.22", "-26.4255, 29.3126, 43.283, 0.22", "-26.4982, 29.3455, 42.8049, 0.22", "-26.5305, 29.3336, 42.4608, 0.22", "-26.5554, 29.2908, 42.0261, 0.22", "-26.5637, 29.2461, 41.638, 0.22", "-26.5989, 29.1856, 41.0511, 0.22", "-26.6851, 29.0907, 40.2508, 0.44", "-26.7621, 29.0156, 39.7612, 0.44", "-26.7947, 28.9812, 39.5859, 0.44", "-26.8854, 28.849, 39.0631, 0.44", "-26.9374, 28.6795, 38.5003, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-18.9173, 22.1897, 53.8071, 1.03", "-19.2974, 22.4134, 54.1936, 1.03", "-20.194, 23.0965, 55.2548, 0.07", "-20.495, 23.3671, 55.6509, 0.07", "-20.7238, 23.6328, 55.9659, 0.22", "-21.0855, 24.1281, 56.4838, 0.07", "-21.3523, 24.5178, 56.8656, 0.37", "-21.7753, 25.2257, 57.5138, 0.15", "-22.107, 25.8751, 58.0668, 1.33", "-22.8561, 27.3939, 59.3442, 0.07", "-23.2965, 28.3124, 60.1146, 0.07", "-23.5304, 28.8066, 60.5239, 0.66", "-23.7843, 29.3484, 60.9512, 0.66" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "16.7373, -34.3164, 71.9237, 0.07", "16.4756, -35.5893, 72.3288, 0.07", "16.3109, -36.3902, 72.5837, 0.37", "16.1251, -37.2932, 72.8711, 0.22", "15.9332, -38.2267, 73.1682, 0.88", "15.8056, -38.8467, 73.3656, 0.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "16.7373, -34.3164, 71.9237, 0.07", "15.9576, -33.4493, 71.7576, 0.07", "15.6433, -33.0999, 71.6906, 0.44", "15.2754, -32.6908, 71.6122, 0.15", "14.8699, -32.2399, 71.5258, 0.74", "14.3288, -31.6382, 71.4106, 0.07" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_25", "dend_10", "dend_1", "dend_0", "dend_38", "dend_33", "dend_27", "dend_26", "dend_14", "dend_11", "dend_3", "dend_2", "dend_56", "dend_39", "dend_35", "dend_34", "dend_31", "dend_28", "dend_20", "dend_15", "dend_13", "dend_12", "dend_7", "dend_4", "dend_60", "dend_57", "dend_51", "dend_40", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_21", "dend_19", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_52", "dend_44", "dend_41", "dend_23", "dend_22", "dend_18", "dend_17", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_50", "dend_49", "dend_47", "dend_46" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_25", "dend_10", "dend_1", "dend_0", "dend_38", "dend_33", "dend_27", "dend_26", "dend_14", "dend_11", "dend_3", "dend_2", "dend_56", "dend_39", "dend_35", "dend_34", "dend_31", "dend_28", "dend_20", "dend_15", "dend_13", "dend_12", "dend_7", "dend_4", "dend_60", "dend_57", "dend_51", "dend_40", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_21", "dend_19", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_52", "dend_44", "dend_41", "dend_23", "dend_22", "dend_18", "dend_17", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_50", "dend_49", "dend_47", "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L4_DBC_5a91010028_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_38
create dend_56
public dend_56
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_39
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_32(0), soma_0(0.49999950122992937)
    connect dend_25(0), soma_0(0.49999950122992937)
    connect dend_10(0), soma_0(0.49999950122992937)
    connect dend_1(0), soma_0(0.49999950122992937)
    connect dend_0(0), soma_0(0.49999950122992937)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.29752, -10.9202, 0.0, 2.7473 ) }
    soma_0 { pt3dadd( -3.02947, -9.86122, 0.0, 4.90547 ) }
    soma_0 { pt3dadd( -2.76143, -8.80223, 0.0, 7.1195 ) }
    soma_0 { pt3dadd( -2.49339, -7.74324, 0.0, 9.06693 ) }
    soma_0 { pt3dadd( -2.22534, -6.68425, 0.0, 10.5477 ) }
    soma_0 { pt3dadd( -1.9573, -5.62526, 0.0, 11.7638 ) }
    soma_0 { pt3dadd( -1.68926, -4.56627, 0.0, 12.6703 ) }
    soma_0 { pt3dadd( -1.42121, -3.50728, 0.0, 13.5724 ) }
    soma_0 { pt3dadd( -1.15317, -2.44829, 0.0, 13.9606 ) }
    soma_0 { pt3dadd( -0.885125, -1.3893, 0.0, 14.249 ) }
    soma_0 { pt3dadd( -0.617082, -0.330312, 0.0, 14.4914 ) }
    soma_0 { pt3dadd( -0.349039, 0.728678, 0.0, 14.572 ) }
    soma_0 { pt3dadd( -0.0809953, 1.78767, 0.0, 14.5168 ) }
    soma_0 { pt3dadd( 0.187048, 2.84666, 0.0, 14.1167 ) }
    soma_0 { pt3dadd( 0.455092, 3.90565, 0.0, 13.6161 ) }
    soma_0 { pt3dadd( 0.723135, 4.96464, 0.0, 12.8986 ) }
    soma_0 { pt3dadd( 0.991178, 6.02363, 0.0, 12.0703 ) }
    soma_0 { pt3dadd( 1.25922, 7.08262, 0.0, 10.8368 ) }
    soma_0 { pt3dadd( 1.52727, 8.14161, 0.0, 9.27498 ) }
    soma_0 { pt3dadd( 1.79531, 9.2006, 0.0, 7.02436 ) }
    soma_0 { pt3dadd( 2.06335, 10.2596, 0.0, 4.05122 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.851454, 9.58985, 1.7, 1.62 ) }
    dend_32 { pt3dadd( 0.851454, 9.58985, 1.7, 1.62 ) }
    dend_32 { pt3dadd( 0.762019, 11.3767, 1.64197, 0.96 ) }
    dend_32 { pt3dadd( 0.685369, 12.9081, 1.59224, 1.25 ) }
    dend_32 { pt3dadd( 0.578428, 15.0446, 1.52286, 1.55 ) }
    dend_32 { pt3dadd( 0.478342, 17.0443, 1.45793, 1.84 ) }
    dend_32 { pt3dadd( 0.377472, 19.0596, 1.39248, 2.14 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 28/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.23855, -8.97315, -9.03, 1.18 ) }
    dend_25 { pt3dadd( -1.7379, -9.09262, -9.11797, 1.18 ) }
    dend_25 { pt3dadd( -0.501733, -9.51624, -9.35485, 1.18 ) }
    dend_25 { pt3dadd( 1.57613, -10.4597, -9.81324, 1.03 ) }
    dend_25 { pt3dadd( 2.64141, -11.0256, -10.0715, 0.96 ) }
    dend_25 { pt3dadd( 3.56195, -11.4112, -10.2589, 0.81 ) }
    dend_25 { pt3dadd( 2.52169, -11.6604, -10.2769, 0.74 ) }
    dend_25 { pt3dadd( 1.76062, -12.1461, -10.4318, 0.74 ) }
    dend_25 { pt3dadd( 0.752138, -12.7838, -10.6995, 0.96 ) }
    dend_25 { pt3dadd( -0.480311, -13.5011, -11.0689, 1.18 ) }
    dend_25 { pt3dadd( -2.26107, -14.4333, -11.6577, 0.88 ) }
    dend_25 { pt3dadd( -3.75708, -15.1427, -12.2207, 0.96 ) }
    dend_25 { pt3dadd( -5.31855, -15.821, -12.8296, 1.25 ) }
    dend_25 { pt3dadd( -6.40596, -16.274, -13.2869, 1.99 ) }
    dend_25 { pt3dadd( -7.47199, -16.7214, -13.7899, 2.95 ) }
    dend_25 { pt3dadd( -8.50745, -17.1994, -14.3831, 3.54 ) }
    dend_25 { pt3dadd( -9.38151, -17.6652, -15.0237, 3.54 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -1.90855, -11.1012, 1.23, 0.81 ) }
    dend_10 { pt3dadd( -1.74129, -11.9816, 1.19254, 0.81 ) }
    dend_10 { pt3dadd( -1.46657, -13.0598, 1.14685, 0.96 ) }
    dend_10 { pt3dadd( -1.14415, -14.1364, 1.10335, 1.18 ) }
    dend_10 { pt3dadd( -0.796497, -15.1789, 1.06374, 1.18 ) }
    dend_10 { pt3dadd( -0.381976, -16.3344, 1.05937, 0.81 ) }
    dend_10 { pt3dadd( -0.116351, -17.0404, 1.08369, 1.03 ) }
    dend_10 { pt3dadd( 0.288158, -18.0296, 1.19046, 1.47 ) }
    dend_10 { pt3dadd( 0.570135, -18.7381, 1.32809, 2.06 ) }
    dend_10 { pt3dadd( 0.790833, -19.377, 1.50504, 2.14 ) }
    dend_10 { pt3dadd( 1.08582, -20.5649, 1.92273, 1.33 ) }
    dend_10 { pt3dadd( 1.25875, -22.0861, 2.53932, 0.96 ) }
    dend_10 { pt3dadd( 1.20022, -23.4406, 3.12412, 0.96 ) }
    dend_10 { pt3dadd( 0.97669, -24.4084, 3.55298, 1.18 ) }
    dend_10 { pt3dadd( 0.705892, -25.1237, 3.87481, 1.99 ) }
    dend_10 { pt3dadd( 0.272913, -26.0067, 4.26586, 2.88 ) }
    dend_10 { pt3dadd( -0.299779, -27.0096, 4.68263, 3.02 ) }
    dend_10 { pt3dadd( -1.10238, -28.3573, 5.19676, 1.77 ) }
    dend_10 { pt3dadd( -2.19903, -30.3436, 5.85452, 0.81 ) }
    dend_10 { pt3dadd( -2.74036, -31.5012, 6.19351, 0.81 ) }
    dend_10 { pt3dadd( -3.0331, -32.3246, 6.402, 0.81 ) }
    dend_10 { pt3dadd( -3.26576, -33.3249, 6.62958, 0.81 ) }
    dend_10 { pt3dadd( -3.40355, -34.4154, 6.8732, 0.81 ) }
    dend_10 { pt3dadd( -3.43433, -35.3312, 7.07124, 1.03 ) }
    dend_10 { pt3dadd( -3.41689, -36.2357, 7.25521, 1.25 ) }
    dend_10 { pt3dadd( -3.3334, -37.9216, 7.5822, 0.81 ) }
    dend_10 { pt3dadd( -3.26084, -39.2653, 7.85524, 1.03 ) }
    dend_10 { pt3dadd( -3.22432, -40.3382, 8.0961, 1.62 ) }
    dend_10 { pt3dadd( -3.2393, -41.2232, 8.32204, 2.73 ) }
    dend_10 { pt3dadd( -3.33531, -42.471, 8.67731, 4.06 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 75/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.51145, 5.98935, 5.69, 0.59 ) }
    dend_1 { pt3dadd( 7.41132, 6.45634, 5.50202, 0.44 ) }
    dend_1 { pt3dadd( 8.28818, 6.9637, 5.58302, 0.44 ) }
    dend_1 { pt3dadd( 9.02141, 7.40992, 5.84928, 0.44 ) }
    dend_1 { pt3dadd( 9.80678, 7.88569, 6.28655, 0.37 ) }
    dend_1 { pt3dadd( 10.3931, 8.2236, 6.68048, 1.03 ) }
    dend_1 { pt3dadd( 11.3143, 8.7275, 7.3868, 1.33 ) }
    dend_1 { pt3dadd( 12.2872, 9.2378, 8.35631, 1.47 ) }
    dend_1 { pt3dadd( 12.9546, 9.55756, 9.16014, 1.25 ) }
    dend_1 { pt3dadd( 13.6812, 9.82022, 10.1521, 0.29 ) }
    dend_1 { pt3dadd( 14.1488, 9.89942, 10.8394, 0.22 ) }
    dend_1 { pt3dadd( 14.5091, 9.88962, 11.3411, 0.22 ) }
    dend_1 { pt3dadd( 14.7393, 9.81352, 11.6041, 0.22 ) }
    dend_1 { pt3dadd( 15.0137, 9.69282, 11.885, 0.22 ) }
    dend_1 { pt3dadd( 15.4416, 9.51405, 12.3023, 1.03 ) }
    dend_1 { pt3dadd( 16.35, 9.19932, 13.2148, 2.21 ) }
    dend_1 { pt3dadd( 16.8532, 9.12071, 13.728, 3.02 ) }
    dend_1 { pt3dadd( 18.4438, 9.26939, 15.3869, 0.29 ) }
    dend_1 { pt3dadd( 19.1755, 9.54284, 16.1931, 0.29 ) }
    dend_1 { pt3dadd( 19.5872, 9.80602, 16.6605, 0.44 ) }
    dend_1 { pt3dadd( 19.9878, 10.1655, 17.1355, 0.66 ) }
    dend_1 { pt3dadd( 20.6049, 10.8814, 17.8929, 1.11 ) }
    dend_1 { pt3dadd( 21.1709, 11.6262, 18.6183, 0.52 ) }
    dend_1 { pt3dadd( 21.6211, 12.2769, 19.1522, 0.22 ) }
    dend_1 { pt3dadd( 21.9095, 12.5662, 19.4475, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 22.1925, 12.6586, 19.7125, 0.22 ) }
    dend_1 { pt3dadd( 22.4684, 12.5572, 19.9488, 0.22 ) }
    dend_1 { pt3dadd( 23.1005, 12.1704, 20.4618, 0.66 ) }
    dend_1 { pt3dadd( 23.7394, 11.7442, 20.9526, 1.7 ) }
    dend_1 { pt3dadd( 24.3733, 11.3236, 21.4575, 2.21 ) }
    dend_1 { pt3dadd( 24.9715, 10.9712, 21.9807, 1.7 ) }
    dend_1 { pt3dadd( 25.7958, 10.6376, 22.8198, 0.29 ) }
    dend_1 { pt3dadd( 26.5537, 10.5353, 23.7736, 0.22 ) }
    dend_1 { pt3dadd( 26.8619, 10.6164, 24.2733, 0.22 ) }
    dend_1 { pt3dadd( 27.1696, 10.9081, 25.0562, 0.22 ) }
    dend_1 { pt3dadd( 27.3392, 11.3366, 25.9137, 0.96 ) }
    dend_1 { pt3dadd( 27.419, 12.1058, 27.2592, 0.74 ) }
    dend_1 { pt3dadd( 27.3758, 12.654, 28.1958, 0.74 ) }
    dend_1 { pt3dadd( 27.3135, 12.9573, 28.7531, 0.74 ) }
    dend_1 { pt3dadd( 27.2485, 13.3654, 29.669, 0.74 ) }
    dend_1 { pt3dadd( 27.2757, 13.5978, 30.2748, 0.74 ) }
    dend_1 { pt3dadd( 27.3397, 13.6552, 30.487, 0.74 ) }
    dend_1 { pt3dadd( 27.8015, 13.7757, 31.1748, 0.74 ) }
    dend_1 { pt3dadd( 28.2869, 13.868, 31.723, 1.18 ) }
    dend_1 { pt3dadd( 29.1406, 14.0106, 32.6044, 0.44 ) }
    dend_1 { pt3dadd( 29.9187, 14.1437, 33.325, 1.25 ) }
    dend_1 { pt3dadd( 30.9982, 14.354, 34.2636, 2.73 ) }
    dend_1 { pt3dadd( 32.1518, 14.6174, 35.2487, 3.54 ) }
    dend_1 { pt3dadd( 32.7979, 14.7885, 35.78, 2.8 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 24/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.64855, 6.56885, 5.52, 0.88 ) }
    dend_0 { pt3dadd( -5.06662, 7.05641, 5.71854, 0.74 ) }
    dend_0 { pt3dadd( -5.73902, 7.75706, 6.10303, 0.22 ) }
    dend_0 { pt3dadd( -6.18883, 8.18296, 6.38436, 0.22 ) }
    dend_0 { pt3dadd( -6.78707, 8.70112, 6.75131, 0.44 ) }
    dend_0 { pt3dadd( -7.28729, 9.0914, 7.04276, 0.44 ) }
    dend_0 { pt3dadd( -7.9458, 9.528, 7.40772, 0.22 ) }
    dend_0 { pt3dadd( -8.65014, 9.87842, 7.79128, 0.22 ) }
    dend_0 { pt3dadd( -9.01414, 10.016, 7.9772, 0.22 ) }
    dend_0 { pt3dadd( -9.52675, 10.1709, 8.21756, 0.96 ) }
    dend_0 { pt3dadd( -10.3332, 10.3647, 8.59413, 1.47 ) }
    dend_0 { pt3dadd( -11.7926, 10.6608, 9.33596, 0.15 ) }
    dend_0 { pt3dadd( -12.4436, 10.791, 9.65471, 0.15 ) }
    dend_0 { pt3dadd( -12.9002, 10.9071, 9.84556, 0.15 ) }
    dend_0 { pt3dadd( -13.5785, 11.097, 10.1055, 0.88 ) }
    dend_0 { pt3dadd( -14.7786, 11.4577, 10.5512, 0.37 ) }
    dend_0 { pt3dadd( -16.0619, 11.8722, 11.0216, 1.55 ) }
    dend_0 { pt3dadd( -17.0884, 12.2355, 11.3958, 2.95 ) }
    dend_0 { pt3dadd( -19.7079, 13.2156, 12.3377, 0.07 ) }
    dend_0 { pt3dadd( -20.1968, 13.3976, 12.5088, 0.88 ) }
    dend_0 { pt3dadd( -21.2078, 13.7753, 12.8314, 0.07 ) }
    dend_0 { pt3dadd( -22.1462, 14.1323, 13.0609, 0.22 ) }
    dend_0 { pt3dadd( -22.791, 14.3791, 13.1915, 0.22 ) }
    dend_0 { pt3dadd( -24.2244, 14.9037, 13.4589, 0.15 ) }
    dend_0 { pt3dadd( -24.67, 15.0494, 13.5337, 0.96 ) }
    dend_0 { pt3dadd( -25.3076, 15.2481, 13.6071, 1.84 ) }
    dend_0 { pt3dadd( -27.5755, 15.9084, 13.7294, 0.15 ) }
    dend_0 { pt3dadd( -28.0791, 16.033, 13.7357, 0.66 ) }
    dend_0 { pt3dadd( -28.8783, 16.2021, 13.7286, 1.18 ) }
    dend_0 { pt3dadd( -30.8249, 16.5521, 13.6829, 0.15 ) }
    dend_0 { pt3dadd( -31.5499, 16.6566, 13.6503, 1.33 ) }
    dend_0 { pt3dadd( -32.5204, 16.762, 13.5932, 2.51 ) }
    dend_0 { pt3dadd( -35.2621, 16.9571, 13.3929, 0.15 ) }
    dend_0 { pt3dadd( -35.7042, 16.9794, 13.3412, 0.52 ) }
    dend_0 { pt3dadd( -36.5085, 17.0029, 13.2074, 0.81 ) }
    dend_0 { pt3dadd( -37.762, 17.0206, 12.9313, 0.15 ) }
    dend_0 { pt3dadd( -38.3959, 17.0257, 12.7822, 0.15 ) }
    dend_0 { pt3dadd( -38.8773, 17.033, 12.6551, 0.66 ) }
    dend_0 { pt3dadd( -40.3421, 17.0806, 12.22, 1.84 ) }
    dend_0 { pt3dadd( -41.7838, 17.171, 11.816, 0.22 ) }
    dend_0 { pt3dadd( -42.5194, 17.237, 11.6336, 0.37 ) }
    dend_0 { pt3dadd( -42.8385, 17.2737, 11.565, 0.88 ) }
    dend_0 { pt3dadd( -44.0403, 17.4252, 11.3708, 0.15 ) }
    dend_0 { pt3dadd( -44.7021, 17.5219, 11.2964, 0.15 ) }
    dend_0 { pt3dadd( -45.4308, 17.6437, 11.2626, 0.74 ) }
    dend_0 { pt3dadd( -47.6039, 18.0271, 11.3168, 0.07 ) }
    dend_0 { pt3dadd( -48.0145, 18.1055, 11.3464, 0.52 ) }
    dend_0 { pt3dadd( -49.4234, 18.4064, 11.5101, 0.15 ) }
    dend_0 { pt3dadd( -50.0911, 18.5636, 11.6194, 0.96 ) }
    dend_0 { pt3dadd( -50.9282, 18.7737, 11.7853, 1.92 ) }
    dend_0 { pt3dadd( -52.73, 19.3087, 12.1948, 0.15 ) }
    dend_0 { pt3dadd( -53.4771, 19.5729, 12.3788, 0.22 ) }
    dend_0 { pt3dadd( -54.3604, 19.9169, 12.5795, 0.07 ) }
    dend_0 { pt3dadd( -54.9377, 20.1812, 12.6955, 1.03 ) }
    dend_0 { pt3dadd( -55.5328, 20.4776, 12.8048, 1.77 ) }
    dend_0 { pt3dadd( -57.3193, 21.4346, 13.0888, 0.07 ) }
    dend_0 { pt3dadd( -58.0439, 21.8546, 13.19, 0.07 ) }
    dend_0 { pt3dadd( -58.5434, 22.1404, 13.2698, 0.74 ) }
    dend_0 { pt3dadd( -59.902, 22.9234, 13.4997, 0.07 ) }
    dend_0 { pt3dadd( -60.3217, 23.1619, 13.572, 0.52 ) }
    dend_0 { pt3dadd( -61.4746, 23.7328, 13.7853, 0.07 ) }
    dend_0 { pt3dadd( -62.1925, 24.0116, 13.9272, 0.22 ) }
    dend_0 { pt3dadd( -62.9903, 24.234, 14.0772, 0.15 ) }
    dend_0 { pt3dadd( -63.324, 24.2844, 14.1307, 0.96 ) }
    dend_0 { pt3dadd( -64.1418, 24.3101, 14.2353, 1.92 ) }
    dend_0 { pt3dadd( -65.8155, 24.2548, 14.4013, 0.07 ) }
    dend_0 { pt3dadd( -66.633, 24.1803, 14.4456, 0.29 ) }
    dend_0 { pt3dadd( -67.5248, 24.1084, 14.4512, 0.07 ) }
    dend_0 { pt3dadd( -68.3876, 24.0894, 14.422, 0.07 ) }
    dend_0 { pt3dadd( -68.7237, 24.1023, 14.4078, 0.07 ) }
    dend_0 { pt3dadd( -69.0413, 24.1296, 14.3884, 0.44 ) }
    dend_0 { pt3dadd( -69.7078, 24.2256, 14.3295, 0.74 ) }
    dend_0 { pt3dadd( -71.3487, 24.4842, 14.1739, 0.07 ) }
    dend_0 { pt3dadd( -72.6509, 24.6915, 14.0565, 0.15 ) }
    dend_0 { pt3dadd( -73.5558, 24.8306, 13.9758, 0.96 ) }
    dend_0 { pt3dadd( -74.6764, 24.9557, 13.8827, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( -75.582, 25.0172, 13.8089, 0.59 ) }
    dend_0 { pt3dadd( -76.4561, 25.0244, 13.741, 0.15 ) }
    dend_0 { pt3dadd( -76.8727, 24.9994, 13.7084, 0.74 ) }
    dend_0 { pt3dadd( -77.504, 24.9316, 13.6561, 1.18 ) }
    dend_0 { pt3dadd( -79.4721, 24.6836, 13.4192, 0.15 ) }
    dend_0 { pt3dadd( -80.1213, 24.6052, 13.3254, 0.81 ) }
    dend_0 { pt3dadd( -81.1002, 24.4928, 13.1559, 0.15 ) }
    dend_0 { pt3dadd( -81.6734, 24.4303, 13.0435, 0.22 ) }
    dend_0 { pt3dadd( -83.1498, 24.2733, 12.7253, 0.07 ) }
    dend_0 { pt3dadd( -84.0638, 24.1768, 12.5128, 1.03 ) }
    dend_0 { pt3dadd( -84.7021, 24.1205, 12.3524, 1.84 ) }
    dend_0 { pt3dadd( -86.8211, 24.001, 11.8314, 0.07 ) }
    dend_0 { pt3dadd( -87.2443, 23.9978, 11.7312, 0.22 ) }
    dend_0 { pt3dadd( -89.2314, 24.0814, 11.3074, 0.07 ) }
    dend_0 { pt3dadd( -89.4879, 24.1007, 11.2599, 0.66 ) }
    dend_0 { pt3dadd( -90.0622, 24.1525, 11.1863, 1.25 ) }
    dend_0 { pt3dadd( -91.031, 24.2589, 11.0815, 0.15 ) }
    dend_0 { pt3dadd( -91.8119, 24.3788, 11.0168, 0.74 ) }
    dend_0 { pt3dadd( -93.0968, 24.565, 10.9567, 0.07 ) }
    dend_0 { pt3dadd( -93.9628, 24.6831, 10.9456, 0.07 ) }
    dend_0 { pt3dadd( -94.8538, 24.7897, 10.9458, 0.07 ) }
    dend_0 { pt3dadd( -95.0311, 24.8122, 10.9531, 0.07 ) }
    dend_0 { pt3dadd( -95.758, 24.9241, 11.0123, 0.74 ) }
    dend_0 { pt3dadd( -97.1565, 25.1638, 11.2149, 0.07 ) }
    dend_0 { pt3dadd( -97.5462, 25.249, 11.2962, 1.11 ) }
    dend_0 { pt3dadd( -98.372, 25.4486, 11.511, 1.62 ) }
    dend_0 { pt3dadd( -99.8776, 25.7365, 11.9541, 0.07 ) }
    dend_0 { pt3dadd( -100.665, 25.8546, 12.2007, 0.81 ) }
    dend_0 { pt3dadd( -101.918, 25.9908, 12.6071, 0.15 ) }
    dend_0 { pt3dadd( -102.94, 26.0495, 12.9602, 0.15 ) }
    dend_0 { pt3dadd( -104.013, 26.0541, 13.3407, 1.11 ) }
    dend_0 { pt3dadd( -106.435, 25.9291, 14.2001, 0.15 ) }
    dend_0 { pt3dadd( -106.993, 25.8737, 14.3897, 1.03 ) }
    dend_0 { pt3dadd( -108.014, 25.7471, 14.7246, 1.84 ) }
    dend_0 { pt3dadd( -109.759, 25.4941, 15.2461, 0.22 ) }
    dend_0 { pt3dadd( -110.073, 25.4409, 15.3392, 0.22 ) }
    dend_0 { pt3dadd( -110.713, 25.3304, 15.5313, 0.07 ) }
    dend_0 { pt3dadd( -111.182, 25.2522, 15.6805, 0.59 ) }
    dend_0 { pt3dadd( -112.164, 25.08, 16.0168, 0.07 ) }
    dend_0 { pt3dadd( -112.808, 24.9547, 16.2429, 0.29 ) }
    dend_0 { pt3dadd( -113.456, 24.8011, 16.4668, 0.07 ) }
    dend_0 { pt3dadd( -114.201, 24.5913, 16.7242, 0.37 ) }
    dend_0 { pt3dadd( -115.262, 24.2518, 17.0882, 0.07 ) }
    dend_0 { pt3dadd( -116.032, 23.9696, 17.3488, 0.66 ) }
    dend_0 { pt3dadd( -116.887, 23.5615, 17.5982, 0.07 ) }
    dend_0 { pt3dadd( -117.665, 23.1158, 17.7951, 0.96 ) }
    dend_0 { pt3dadd( -118.998, 22.189, 18.0628, 0.07 ) }
    dend_0 { pt3dadd( -119.718, 21.5511, 18.1492, 0.07 ) }
    dend_0 { pt3dadd( -120.19, 21.0096, 18.1529, 1.03 ) }
    dend_0 { pt3dadd( -121.442, 19.0424, 18.0145, 0.15 ) }
    dend_0 { pt3dadd( -121.765, 18.3937, 17.9295, 0.15 ) }
    dend_0 { pt3dadd( -122.103, 17.5467, 17.7817, 1.11 ) }
    dend_0 { pt3dadd( -122.552, 16.1302, 17.4958, 0.15 ) }
    dend_0 { pt3dadd( -122.888, 14.9164, 17.2319, 1.84 ) }
    dend_0 { pt3dadd( -123.513, 12.5446, 16.7014, 0.15 ) }
    dend_0 { pt3dadd( -123.646, 12.0222, 16.5866, 0.59 ) }
    dend_0 { pt3dadd( -123.876, 11.2111, 16.4354, 1.03 ) }
    dend_0 { pt3dadd( -124.462, 9.43692, 16.2031, 0.15 ) }
    dend_0 { pt3dadd( -124.69, 8.85344, 16.1907, 0.52 ) }
    dend_0 { pt3dadd( -125.177, 7.7474, 16.2673, 0.15 ) }
    dend_0 { pt3dadd( -125.479, 7.09073, 16.3798, 0.66 ) }
    dend_0 { pt3dadd( -125.921, 6.06841, 16.6487, 0.15 ) }
    dend_0 { pt3dadd( -126.368, 4.89191, 17.0485, 1.62 ) }
    dend_0 { pt3dadd( -126.88, 3.17334, 17.7408, 0.07 ) }
    dend_0 { pt3dadd( -127.016, 2.53032, 18.0008, 0.29 ) }
    dend_0 { pt3dadd( -127.166, 1.34762, 18.4367, 0.07 ) }
    dend_0 { pt3dadd( -127.193, 0.703403, 18.6271, 0.96 ) }
    dend_0 { pt3dadd( -127.181, -0.319042, 18.7803, 2.21 ) }
    dend_0 { pt3dadd( -127.144, -1.20501, 18.805, 1.33 ) }
    dend_0 { pt3dadd( -127.115, -2.44007, 18.7034, 0.07 ) }
    dend_0 { pt3dadd( -127.133, -3.53488, 18.5406, 0.07 ) }
    dend_0 { pt3dadd( -127.186, -4.36109, 18.3695, 1.03 ) }
    dend_0 { pt3dadd( -127.349, -6.32161, 17.9107, 0.07 ) }
    dend_0 { pt3dadd( -127.422, -6.94936, 17.7492, 0.88 ) }
    dend_0 { pt3dadd( -127.64, -8.46342, 17.3405, 0.07 ) }
    dend_0 { pt3dadd( -127.721, -9.01368, 17.1875, 0.66 ) }
    dend_0 { pt3dadd( -127.777, -9.39, 17.0895, 1.25 ) }
    dend_0 { pt3dadd( -127.965, -10.5643, 16.8092, 0.29 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 78/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.06335, 10.2596, 0.0, 0.610609 ) }
    axon_0 { pt3dadd( 5.74396, 24.801, 0.0, 0.610609 ) }
    axon_0 { pt3dadd( 9.42458, 39.3425, 0.0, 0.610609 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 81/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.377472, 19.0596, 1.39248, 0.37 ) }
    dend_38 { pt3dadd( 1.01506, 19.6565, 1.65613, 0.37 ) }
    dend_38 { pt3dadd( 1.21713, 19.8236, 1.74466, 0.37 ) }
    dend_38 { pt3dadd( 1.59943, 20.1455, 1.94585, 0.37 ) }
    dend_38 { pt3dadd( 2.06553, 20.6205, 2.25697, 0.22 ) }
    dend_38 { pt3dadd( 2.18825, 20.7994, 2.38988, 0.22 ) }
    dend_38 { pt3dadd( 2.23311, 21.0086, 2.5909, 0.22 ) }
    dend_38 { pt3dadd( 2.18493, 21.1316, 2.76197, 0.22 ) }
    dend_38 { pt3dadd( 2.06696, 21.3268, 3.03221, 0.22 ) }
    dend_38 { pt3dadd( 1.85699, 21.6521, 3.49238, 0.22 ) }
    dend_38 { pt3dadd( 1.72758, 21.8615, 3.7933, 0.22 ) }
    dend_38 { pt3dadd( 1.53669, 22.2492, 4.31915, 0.66 ) }
    dend_38 { pt3dadd( 1.38723, 22.71, 4.90754, 1.03 ) }
    dend_38 { pt3dadd( 1.26854, 23.2943, 5.65934, 0.22 ) }
    dend_38 { pt3dadd( 1.23272, 23.6994, 6.21403, 0.22 ) }
    dend_38 { pt3dadd( 1.2508, 23.9847, 6.64392, 0.88 ) }
    dend_38 { pt3dadd( 1.31053, 24.2781, 7.1305, 1.47 ) }
    dend_38 { pt3dadd( 1.47973, 24.7381, 7.99079, 0.15 ) }
    dend_38 { pt3dadd( 1.65302, 25.106, 8.68726, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_38 { pt3dadd( 1.83804, 25.4846, 9.36766, 0.15 ) }
    dend_38 { pt3dadd( 1.96045, 25.8519, 9.96865, 0.15 ) }
    dend_38 { pt3dadd( 2.02073, 26.2173, 10.5542, 0.15 ) }
    dend_38 { pt3dadd( 1.98867, 26.6508, 11.2411, 0.15 ) }
    dend_38 { pt3dadd( 1.74816, 27.3148, 12.2104, 0.96 ) }
    dend_38 { pt3dadd( 1.54353, 27.6886, 12.7157, 2.06 ) }
    dend_38 { pt3dadd( 1.10194, 28.2864, 13.4529, 0.22 ) }
    dend_38 { pt3dadd( 0.905584, 28.531, 13.727, 0.22 ) }
    dend_38 { pt3dadd( 0.705316, 28.7515, 13.9798, 0.22 ) }
    dend_38 { pt3dadd( 0.396921, 29.0512, 14.3831, 0.22 ) }
    dend_38 { pt3dadd( 0.068319, 29.3469, 14.9146, 0.22 ) }
    dend_38 { pt3dadd( -0.133914, 29.5324, 15.2788, 1.33 ) }
    dend_38 { pt3dadd( -0.383981, 29.9033, 15.9181, 2.95 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.377472, 19.0596, 1.39248, 1.25 ) }
    dend_33 { pt3dadd( -0.120291, 20.1399, 1.33826, 1.25 ) }
    dend_33 { pt3dadd( -0.71073, 21.5369, 1.36467, 0.81 ) }
    dend_33 { pt3dadd( -1.12943, 22.7307, 1.49431, 0.81 ) }
    dend_33 { pt3dadd( -1.44093, 23.8831, 1.69972, 1.11 ) }
    dend_33 { pt3dadd( -1.63328, 24.9552, 1.95061, 1.4 ) }
    dend_33 { pt3dadd( -1.6943, 25.8723, 2.20718, 0.59 ) }
    dend_33 { pt3dadd( -1.57265, 26.7473, 2.58749, 0.59 ) }
    dend_33 { pt3dadd( -1.18057, 27.7783, 3.17431, 0.52 ) }
    dend_33 { pt3dadd( -0.819835, 28.3971, 3.5712, 0.59 ) }
    dend_33 { pt3dadd( -0.391894, 29.0206, 3.99726, 0.59 ) }
    dend_33 { pt3dadd( 0.173525, 29.8403, 4.57522, 0.44 ) }
    dend_33 { pt3dadd( 0.469851, 30.3468, 4.9289, 0.44 ) }
    dend_33 { pt3dadd( 0.550002, 30.6351, 5.0994, 0.44 ) }
    dend_33 { pt3dadd( 0.512374, 31.1508, 5.38038, 0.52 ) }
    dend_33 { pt3dadd( 0.297932, 31.9305, 5.84646, 0.66 ) }
    dend_33 { pt3dadd( 0.053946, 32.5723, 6.25917, 0.29 ) }
    dend_33 { pt3dadd( -0.141093, 33.0441, 6.59398, 0.29 ) }
    dend_33 { pt3dadd( -0.34768, 33.6511, 7.02556, 0.37 ) }
    dend_33 { pt3dadd( -0.56179, 34.4387, 7.56854, 0.88 ) }
    dend_33 { pt3dadd( -0.759105, 35.253, 8.11954, 1.62 ) }
    dend_33 { pt3dadd( -0.911958, 36.0055, 8.61307, 2.43 ) }
    dend_33 { pt3dadd( -1.04747, 36.8588, 9.15696, 2.43 ) }
    dend_33 { pt3dadd( -1.2129, 38.283, 10.0324, 0.22 ) }
    dend_33 { pt3dadd( -1.26031, 38.9547, 10.4329, 0.52 ) }
    dend_33 { pt3dadd( -1.28743, 39.6332, 10.7995, 0.22 ) }
    dend_33 { pt3dadd( -1.29245, 39.9933, 10.9613, 0.22 ) }
    dend_33 { pt3dadd( -1.28818, 40.4556, 11.1326, 0.22 ) }
    dend_33 { pt3dadd( -1.279, 41.0184, 11.279, 0.22 ) }
    dend_33 { pt3dadd( -1.2774, 41.3945, 11.3518, 0.22 ) }
    dend_33 { pt3dadd( -1.28223, 41.6413, 11.3892, 0.22 ) }
    dend_33 { pt3dadd( -1.34703, 42.5217, 11.464, 0.37 ) }
    dend_33 { pt3dadd( -1.44339, 43.2705, 11.4843, 0.37 ) }
    dend_33 { pt3dadd( -1.5663, 43.9854, 11.467, 0.52 ) }
    dend_33 { pt3dadd( -1.69873, 44.7085, 11.4258, 0.96 ) }
    dend_33 { pt3dadd( -1.84273, 45.5743, 11.339, 0.96 ) }
    dend_33 { pt3dadd( -2.01644, 46.8975, 11.1239, 0.44 ) }
    dend_33 { pt3dadd( -2.06119, 47.7599, 10.9239, 0.44 ) }
    dend_33 { pt3dadd( -2.08118, 48.6549, 10.6753, 1.47 ) }
    dend_33 { pt3dadd( -2.09181, 49.5888, 10.3851, 2.8 ) }
    dend_33 { pt3dadd( -2.10225, 50.4513, 10.0876, 3.61 ) }
    dend_33 { pt3dadd( -2.11786, 51.346, 9.74129, 3.02 ) }
    dend_33 { pt3dadd( -2.15651, 53.4401, 8.83321, 0.22 ) }
    dend_33 { pt3dadd( -2.17937, 54.0797, 8.53343, 0.29 ) }
    dend_33 { pt3dadd( -2.19447, 54.4275, 8.36692, 0.29 ) }
    dend_33 { pt3dadd( -2.23921, 55.1064, 8.02705, 0.22 ) }
    dend_33 { pt3dadd( -2.31472, 55.9205, 7.61629, 0.52 ) }
    dend_33 { pt3dadd( -2.39792, 56.5983, 7.27021, 1.33 ) }
    dend_33 { pt3dadd( -2.53174, 57.4476, 6.7726, 2.43 ) }
    dend_33 { pt3dadd( -2.57154, 58.2343, 6.29882, 2.43 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -9.38151, -17.6652, -15.0237, 0.44 ) }
    dend_27 { pt3dadd( -11.3726, -18.943, -15.9866, 0.44 ) }
    dend_27 { pt3dadd( -11.4766, -19.3197, -16.3482, 0.44 ) }
    dend_27 { pt3dadd( -11.5473, -19.7101, -16.7525, 0.44 ) }
    dend_27 { pt3dadd( -11.6625, -20.1318, -17.1925, 0.44 ) }
    dend_27 { pt3dadd( -11.8617, -20.6221, -17.7185, 0.59 ) }
    dend_27 { pt3dadd( -12.2221, -21.2881, -18.491, 0.74 ) }
    dend_27 { pt3dadd( -12.4643, -21.7371, -19.09, 1.11 ) }
    dend_27 { pt3dadd( -12.8119, -22.2283, -19.8383, 1.47 ) }
    dend_27 { pt3dadd( -13.2381, -22.6649, -20.618, 1.47 ) }
    dend_27 { pt3dadd( -13.9549, -23.1751, -21.7234, 0.59 ) }
    dend_27 { pt3dadd( -14.5728, -23.4373, -22.5254, 0.52 ) }
    dend_27 { pt3dadd( -15.0573, -23.5156, -23.0586, 0.52 ) }
    dend_27 { pt3dadd( -15.6248, -23.5144, -23.5825, 0.44 ) }
    dend_27 { pt3dadd( -16.2554, -23.4546, -24.0234, 0.44 ) }
    dend_27 { pt3dadd( -16.5898, -23.4139, -24.2068, 0.44 ) }
    dend_27 { pt3dadd( -17.4143, -23.3441, -24.5474, 0.96 ) }
    dend_27 { pt3dadd( -18.1865, -23.3106, -24.8196, 0.96 ) }
    dend_27 { pt3dadd( -19.0872, -23.3189, -25.1028, 1.4 ) }
    dend_27 { pt3dadd( -20.2344, -23.3875, -25.4367, 2.36 ) }
    dend_27 { pt3dadd( -21.1647, -23.4867, -25.6932, 3.32 ) }
    dend_27 { pt3dadd( -22.2549, -23.6194, -26.0107, 3.61 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -9.38151, -17.6652, -15.0237, 0.29 ) }
    dend_26 { pt3dadd( -9.11643, -19.1613, -15.6038, 0.29 ) }
    dend_26 { pt3dadd( -8.99452, -19.6721, -15.8136, 0.29 ) }
    dend_26 { pt3dadd( -8.83259, -20.3407, -16.1059, 0.29 ) }
    dend_26 { pt3dadd( -8.7099, -20.8974, -16.3801, 0.81 ) }
    dend_26 { pt3dadd( -8.59012, -21.4947, -16.7046, 1.11 ) }
    dend_26 { pt3dadd( -8.44656, -22.3529, -17.2345, 0.22 ) }
    dend_26 { pt3dadd( -8.31063, -22.9762, -17.7138, 0.22 ) }
    dend_26 { pt3dadd( -8.27509, -23.3315, -18.0446, 0.22 ) }
    dend_26 { pt3dadd( -8.28201, -23.8133, -18.5613, 0.22 ) }
    dend_26 { pt3dadd( -8.27763, -24.0816, -18.7815, 0.37 ) }
    dend_26 { pt3dadd( -8.2462, -24.5999, -19.1465, 0.37 ) }
    dend_26 { pt3dadd( -8.19994, -25.0232, -19.3959, 0.81 ) }
    dend_26 { pt3dadd( -8.10925, -25.6382, -19.6911, 1.7 ) }
    dend_26 { pt3dadd( -7.98118, -26.5001, -20.077, 2.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( -7.69184, -28.3796, -20.8516, 0.29 ) }
    dend_26 { pt3dadd( -7.58645, -29.0196, -21.0837, 0.96 ) }
    dend_26 { pt3dadd( -7.50747, -29.4492, -21.2179, 0.96 ) }
    dend_26 { pt3dadd( -7.29236, -30.4469, -21.4961, 0.15 ) }
    dend_26 { pt3dadd( -7.1217, -31.083, -21.6319, 0.15 ) }
    dend_26 { pt3dadd( -6.99152, -31.5113, -21.7043, 0.59 ) }
    dend_26 { pt3dadd( -6.68489, -32.334, -21.8028, 0.29 ) }
    dend_26 { pt3dadd( -6.46407, -32.8594, -21.8345, 1.4 ) }
    dend_26 { pt3dadd( -6.10931, -33.6455, -21.854, 2.73 ) }
    dend_26 { pt3dadd( -5.23567, -35.4649, -21.8264, 0.15 ) }
    dend_26 { pt3dadd( -5.0988, -35.743, -21.8166, 0.74 ) }
    dend_26 { pt3dadd( -4.84743, -36.2472, -21.8114, 0.74 ) }
    dend_26 { pt3dadd( -4.44041, -37.0203, -21.8258, 0.15 ) }
    dend_26 { pt3dadd( -4.06518, -37.7175, -21.8503, 0.15 ) }
    dend_26 { pt3dadd( -3.74795, -38.3247, -21.8832, 0.15 ) }
    dend_26 { pt3dadd( -3.47328, -38.8665, -21.9441, 1.25 ) }
    dend_26 { pt3dadd( -3.09886, -39.6792, -22.0866, 0.22 ) }
    dend_26 { pt3dadd( -2.89633, -40.2358, -22.2279, 0.22 ) }
    dend_26 { pt3dadd( -2.83374, -40.5235, -22.317, 0.22 ) }
    dend_26 { pt3dadd( -2.8123, -40.939, -22.44, 0.22 ) }
    dend_26 { pt3dadd( -2.84992, -41.6968, -22.6423, 0.44 ) }
    dend_26 { pt3dadd( -2.92867, -42.4107, -22.8121, 1.62 ) }
    dend_26 { pt3dadd( -3.02579, -43.1762, -22.9796, 3.02 ) }
    dend_26 { pt3dadd( -3.1309, -44.1023, -23.171, 3.02 ) }
    dend_26 { pt3dadd( -3.31426, -46.1755, -23.5993, 0.29 ) }
    dend_26 { pt3dadd( -3.35873, -46.9374, -23.7486, 0.81 ) }
    dend_26 { pt3dadd( -3.37643, -47.601, -23.8639, 1.03 ) }
    dend_26 { pt3dadd( -3.3714, -48.2912, -23.9785, 0.37 ) }
    dend_26 { pt3dadd( -3.35318, -48.8263, -24.0503, 1.18 ) }
    dend_26 { pt3dadd( -3.27227, -49.9064, -24.172, 0.22 ) }
    dend_26 { pt3dadd( -3.20985, -50.3187, -24.2056, 0.74 ) }
    dend_26 { pt3dadd( -3.13429, -50.6571, -24.217, 0.74 ) }
    dend_26 { pt3dadd( -3.02725, -51.0188, -24.2055, 0.15 ) }
    dend_26 { pt3dadd( -2.71437, -51.9976, -24.1035, 0.44 ) }
    dend_26 { pt3dadd( -2.61643, -52.2415, -24.0645, 0.44 ) }
    dend_26 { pt3dadd( -2.26674, -52.9887, -23.9241, 0.22 ) }
    dend_26 { pt3dadd( -2.05867, -53.4284, -23.856, 1.11 ) }
    dend_26 { pt3dadd( -1.9068, -53.8008, -23.8123, 1.62 ) }
    dend_26 { pt3dadd( -1.68594, -54.4228, -23.7584, 1.62 ) }
    dend_26 { pt3dadd( -1.28906, -55.8514, -23.7185, 0.22 ) }
    dend_26 { pt3dadd( -1.17256, -56.5741, -23.7085, 0.96 ) }
    dend_26 { pt3dadd( -1.17662, -57.3212, -23.7084, 1.18 ) }
    dend_26 { pt3dadd( -1.37811, -58.6396, -23.7446, 0.15 ) }
    dend_26 { pt3dadd( -1.47723, -59.0811, -23.7643, 0.22 ) }
    dend_26 { pt3dadd( -1.82813, -60.0965, -23.8421, 0.07 ) }
    dend_26 { pt3dadd( -2.09155, -60.5403, -23.9033, 0.22 ) }
    dend_26 { pt3dadd( -2.79225, -61.4086, -24.0552, 0.07 ) }
    dend_26 { pt3dadd( -3.1088, -61.696, -24.1209, 0.15 ) }
    dend_26 { pt3dadd( -2.72748, -69.6193, -26.1033, 0.15 ) }
    dend_26 { pt3dadd( -3.60049, -77.553, -27.8596, 0.15 ) }
    dend_26 { pt3dadd( -2.61775, -85.5308, -29.3303, 0.15 ) }
    dend_26 { pt3dadd( -0.918711, -93.2893, -31.3542, 0.15 ) }
    dend_26 { pt3dadd( 0.82317, -100.787, -34.2476, 0.15 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 53/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -3.33531, -42.471, 8.67731, 1.99 ) }
    dend_14 { pt3dadd( -3.8235, -44.1596, 8.66334, 1.99 ) }
    dend_14 { pt3dadd( -4.40314, -46.5006, 8.64986, 0.59 ) }
    dend_14 { pt3dadd( -4.68455, -47.8375, 8.64392, 0.59 ) }
    dend_14 { pt3dadd( -4.95477, -49.4419, 8.65544, 0.59 ) }
    dend_14 { pt3dadd( -5.04949, -50.2286, 8.66703, 1.11 ) }
    dend_14 { pt3dadd( -5.14938, -51.6614, 8.71575, 2.58 ) }
    dend_14 { pt3dadd( -5.11602, -52.3664, 8.75088, 2.88 ) }
    dend_14 { pt3dadd( -5.03372, -52.9766, 8.79757, 2.65 ) }
    dend_14 { pt3dadd( -4.90642, -53.9118, 8.90713, 1.55 ) }
    dend_14 { pt3dadd( -4.74024, -55.227, 9.11426, 0.74 ) }
    dend_14 { pt3dadd( -4.63135, -56.4804, 9.33168, 0.44 ) }
    dend_14 { pt3dadd( -4.59964, -57.5767, 9.53444, 0.29 ) }
    dend_14 { pt3dadd( -4.629, -58.4247, 9.70365, 0.29 ) }
    dend_14 { pt3dadd( -4.72702, -59.5056, 9.94376, 0.29 ) }
    dend_14 { pt3dadd( -4.75755, -59.8478, 10.023, 0.29 ) }
    dend_14 { pt3dadd( -4.82158, -60.4795, 10.1746, 0.44 ) }
    dend_14 { pt3dadd( -4.89932, -61.1045, 10.3151, 1.11 ) }
    dend_14 { pt3dadd( -4.98799, -61.811, 10.4839, 2.36 ) }
    dend_14 { pt3dadd( -5.1367, -63.2811, 10.8304, 2.73 ) }
    dend_14 { pt3dadd( -5.31029, -66.022, 11.4693, 0.44 ) }
    dend_14 { pt3dadd( -5.3352, -66.5621, 11.6066, 0.44 ) }
    dend_14 { pt3dadd( -5.37687, -67.6042, 11.8919, 0.59 ) }
    dend_14 { pt3dadd( -5.40595, -68.607, 12.1843, 0.29 ) }
    dend_14 { pt3dadd( -5.4191, -69.2345, 12.3714, 0.29 ) }
    dend_14 { pt3dadd( -5.39343, -69.8199, 12.5362, 0.29 ) }
    dend_14 { pt3dadd( -5.31542, -70.4278, 12.7318, 0.29 ) }
    dend_14 { pt3dadd( -5.20419, -70.8982, 12.903, 0.88 ) }
    dend_14 { pt3dadd( -4.98269, -71.5578, 13.1661, 1.84 ) }
    dend_14 { pt3dadd( -4.72754, -72.1871, 13.4269, 2.14 ) }
    dend_14 { pt3dadd( -3.95882, -73.9849, 14.2216, 0.44 ) }
    dend_14 { pt3dadd( -3.62309, -74.7898, 14.5884, 0.66 ) }
    dend_14 { pt3dadd( -3.22346, -75.7442, 15.0612, 0.29 ) }
    dend_14 { pt3dadd( -3.07359, -76.0869, 15.2593, 0.29 ) }
    dend_14 { pt3dadd( -2.92423, -76.442, 15.5095, 0.29 ) }
    dend_14 { pt3dadd( -2.85112, -76.6685, 15.7113, 0.29 ) }
    dend_14 { pt3dadd( -2.87684, -76.9079, 15.9434, 0.29 ) }
    dend_14 { pt3dadd( -3.03992, -77.429, 16.2176, 0.29 ) }
    dend_14 { pt3dadd( -3.16708, -77.8259, 16.346, 0.29 ) }
    dend_14 { pt3dadd( -3.30023, -78.2985, 16.4663, 0.29 ) }
    dend_14 { pt3dadd( -3.4988, -79.0536, 16.6298, 1.18 ) }
    dend_14 { pt3dadd( -3.67746, -79.828, 16.8094, 2.43 ) }
    dend_14 { pt3dadd( -3.84782, -80.7267, 17.0357, 2.88 ) }
    dend_14 { pt3dadd( -4.04865, -82.1181, 17.4186, 1.55 ) }
    dend_14 { pt3dadd( -4.2074, -83.8881, 17.981, 0.52 ) }
    dend_14 { pt3dadd( -4.25349, -85.0093, 18.3985, 0.29 ) }
    dend_14 { pt3dadd( -4.26503, -85.9048, 18.7792, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_14 { pt3dadd( -4.25102, -86.6343, 19.1211, 0.66 ) }
    dend_14 { pt3dadd( -4.22302, -87.2266, 19.4148, 0.96 ) }
    dend_14 { pt3dadd( -4.16366, -88.0059, 19.7665, 0.22 ) }
    dend_14 { pt3dadd( -4.10746, -88.7419, 20.0, 0.22 ) }
    dend_14 { pt3dadd( -4.06683, -89.5317, 20.1227, 0.29 ) }
    dend_14 { pt3dadd( -4.03351, -90.2538, 20.1522, 0.59 ) }
    dend_14 { pt3dadd( -3.99788, -91.4034, 20.1345, 1.33 ) }
    dend_14 { pt3dadd( -3.97036, -92.6974, 20.074, 2.21 ) }
    dend_14 { pt3dadd( -3.94611, -93.7288, 20.0072, 3.24 ) }
    dend_14 { pt3dadd( -3.86866, -95.5416, 19.8771, 1.77 ) }
    dend_14 { pt3dadd( -3.78267, -97.0563, 19.7819, 0.44 ) }
    dend_14 { pt3dadd( -3.72026, -98.1272, 19.7272, 0.37 ) }
    dend_14 { pt3dadd( -3.66156, -99.3387, 19.6849, 0.37 ) }
    dend_14 { pt3dadd( -3.63064, -100.127, 19.6744, 0.88 ) }
    dend_14 { pt3dadd( -3.6255, -100.486, 19.6728, 1.77 ) }
    dend_14 { pt3dadd( -3.66085, -101.637, 19.6647, 3.1 ) }
    dend_14 { pt3dadd( -3.84327, -103.417, 19.6486, 1.33 ) }
    dend_14 { pt3dadd( -4.06815, -104.634, 19.6356, 0.74 ) }
    dend_14 { pt3dadd( -4.4624, -106.055, 19.6184, 0.22 ) }
    dend_14 { pt3dadd( -4.66933, -106.633, 19.6108, 0.22 ) }
    dend_14 { pt3dadd( -4.84351, -107.049, 19.6063, 0.52 ) }
    dend_14 { pt3dadd( -5.33797, -108.039, 19.5994, 0.81 ) }
    dend_14 { pt3dadd( -5.95028, -109.107, 19.6374, 0.29 ) }
    dend_14 { pt3dadd( -6.13597, -109.43, 19.6585, 0.37 ) }
    dend_14 { pt3dadd( -6.5315, -110.196, 19.7207, 0.37 ) }
    dend_14 { pt3dadd( -6.91301, -111.116, 19.875, 0.44 ) }
    dend_14 { pt3dadd( -7.26239, -112.177, 20.1359, 0.81 ) }
    dend_14 { pt3dadd( -7.56795, -113.441, 20.5311, 0.81 ) }
    dend_14 { pt3dadd( -7.74259, -114.43, 20.8855, 0.81 ) }
    dend_14 { pt3dadd( -7.95438, -115.695, 21.3758, 0.37 ) }
    dend_14 { pt3dadd( -8.21313, -117.221, 22.0423, 0.37 ) }
    dend_14 { pt3dadd( -8.33323, -117.992, 22.4267, 1.18 ) }
    dend_14 { pt3dadd( -8.40833, -118.738, 22.8523, 2.8 ) }
    dend_14 { pt3dadd( -8.42305, -119.373, 23.2544, 3.32 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 34/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -3.33531, -42.471, 8.67731, 0.66 ) }
    dend_11 { pt3dadd( -2.19066, -43.3832, 9.40081, 0.66 ) }
    dend_11 { pt3dadd( -1.45234, -44.0612, 9.86941, 0.44 ) }
    dend_11 { pt3dadd( -0.945164, -44.6048, 10.1916, 0.88 ) }
    dend_11 { pt3dadd( -0.607863, -45.0279, 10.407, 0.44 ) }
    dend_11 { pt3dadd( -0.338406, -45.4231, 10.5729, 0.22 ) }
    dend_11 { pt3dadd( -0.0854998, -45.8682, 10.7292, 0.22 ) }
    dend_11 { pt3dadd( 0.0548849, -46.3416, 10.8093, 0.22 ) }
    dend_11 { pt3dadd( 0.13597, -46.7827, 10.8625, 0.22 ) }
    dend_11 { pt3dadd( 0.168975, -47.181, 10.9142, 0.59 ) }
    dend_11 { pt3dadd( 0.186338, -47.7635, 11.0213, 1.7 ) }
    dend_11 { pt3dadd( 0.181839, -48.5306, 11.194, 1.47 ) }
    dend_11 { pt3dadd( 0.160435, -49.8568, 11.5428, 0.44 ) }
    dend_11 { pt3dadd( 0.167381, -50.5669, 11.7494, 0.29 ) }
    dend_11 { pt3dadd( 0.173816, -51.0186, 11.886, 0.22 ) }
    dend_11 { pt3dadd( 0.190331, -51.5273, 12.0327, 0.22 ) }
    dend_11 { pt3dadd( 0.209813, -51.8867, 12.1374, 0.96 ) }
    dend_11 { pt3dadd( 0.272236, -52.5804, 12.3224, 2.51 ) }
    dend_11 { pt3dadd( 0.376654, -53.3529, 12.5259, 3.39 ) }
    dend_11 { pt3dadd( 0.510475, -54.0833, 12.7024, 3.1 ) }
    dend_11 { pt3dadd( 0.749086, -55.0603, 12.9511, 1.03 ) }
    dend_11 { pt3dadd( 1.0119, -55.9952, 13.2009, 0.29 ) }
    dend_11 { pt3dadd( 1.2208, -56.6604, 13.4039, 0.22 ) }
    dend_11 { pt3dadd( 1.36645, -57.0909, 13.5519, 0.22 ) }
    dend_11 { pt3dadd( 1.44904, -57.3362, 13.6462, 0.22 ) }
    dend_11 { pt3dadd( 1.57454, -57.6938, 13.7933, 0.29 ) }
    dend_11 { pt3dadd( 1.70948, -58.092, 13.9485, 0.22 ) }
    dend_11 { pt3dadd( 1.84716, -58.575, 14.0604, 0.29 ) }
    dend_11 { pt3dadd( 1.91249, -58.829, 14.0957, 0.81 ) }
    dend_11 { pt3dadd( 2.09903, -59.5805, 14.1449, 1.55 ) }
    dend_11 { pt3dadd( 2.24958, -60.1958, 14.1579, 2.29 ) }
    dend_11 { pt3dadd( 2.38733, -60.7382, 14.1542, 2.06 ) }
    dend_11 { pt3dadd( 2.70994, -61.8773, 14.1514, 0.22 ) }
    dend_11 { pt3dadd( 2.83778, -62.256, 14.1678, 0.22 ) }
    dend_11 { pt3dadd( 2.9481, -62.5298, 14.201, 0.22 ) }
    dend_11 { pt3dadd( 3.00553, -62.6508, 14.2281, 0.22 ) }
    dend_11 { pt3dadd( 3.20067, -63.0228, 14.3542, 0.81 ) }
    dend_11 { pt3dadd( 3.50098, -63.5739, 14.581, 1.84 ) }
    dend_11 { pt3dadd( 3.78728, -64.1346, 14.8483, 2.8 ) }
    dend_11 { pt3dadd( 4.06635, -64.7891, 15.1829, 1.77 ) }
    dend_11 { pt3dadd( 4.26949, -65.3955, 15.4898, 0.81 ) }
    dend_11 { pt3dadd( 4.48617, -66.179, 15.8847, 0.22 ) }
    dend_11 { pt3dadd( 4.5975, -66.6322, 16.1064, 0.29 ) }
    dend_11 { pt3dadd( 4.68688, -67.0806, 16.3216, 0.29 ) }
    dend_11 { pt3dadd( 4.78005, -67.8768, 16.6987, 0.59 ) }
    dend_11 { pt3dadd( 4.80267, -68.608, 17.0561, 1.47 ) }
    dend_11 { pt3dadd( 4.78209, -68.9797, 17.251, 1.92 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 81/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 32.7979, 14.7885, 35.78, 0.22 ) }
    dend_3 { pt3dadd( 34.0383, 15.3591, 37.6328, 0.22 ) }
    dend_3 { pt3dadd( 34.875, 15.7439, 38.8826, 0.22 ) }
    dend_3 { pt3dadd( 36.0457, 16.2825, 40.6313, 1.47 ) }
    dend_3 { pt3dadd( 36.5024, 16.4925, 41.3134, 1.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 86/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 32.7979, 14.7885, 35.78, 0.29 ) }
    dend_2 { pt3dadd( 34.6908, 13.7051, 37.1007, 0.29 ) }
    dend_2 { pt3dadd( 35.8165, 12.9423, 37.8715, 0.15 ) }
    dend_2 { pt3dadd( 36.2778, 12.6294, 38.1595, 0.22 ) }
    dend_2 { pt3dadd( 37.2065, 12.0083, 38.6946, 0.22 ) }
    dend_2 { pt3dadd( 38.3099, 11.2451, 39.3277, 0.22 ) }
    dend_2 { pt3dadd( 39.1725, 10.6609, 39.7878, 0.22 ) }
    dend_2 { pt3dadd( 40.3562, 9.82772, 40.3667, 0.22 ) }
    dend_2 { pt3dadd( 41.5322, 8.99516, 40.8977, 0.22 ) }
    dend_2 { pt3dadd( 42.7609, 8.18043, 41.3964, 0.22 ) }
    dend_2 { pt3dadd( 44.2886, 7.28806, 41.9019, 0.15 ) }
    dend_2 { pt3dadd( 45.6914, 6.56892, 42.2602, 0.15 ) }
    dend_2 { pt3dadd( 46.3858, 6.25366, 42.4061, 0.15 ) }
    dend_2 { pt3dadd( 47.2305, 5.86845, 42.5574, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 48.0802, 5.46858, 42.6838, 1.25 ) }
    dend_2 { pt3dadd( 49.4769, 4.82421, 42.8376, 0.15 ) }
    dend_2 { pt3dadd( 50.185, 4.508, 42.8984, 0.15 ) }
    dend_2 { pt3dadd( 51.3543, 3.99329, 42.9774, 0.88 ) }
    dend_2 { pt3dadd( 52.9671, 3.29932, 43.0603, 0.15 ) }
    dend_2 { pt3dadd( 53.6404, 3.02107, 43.0832, 0.44 ) }
    dend_2 { pt3dadd( 54.5199, 2.66044, 43.1248, 1.18 ) }
    dend_2 { pt3dadd( 56.321, 1.92439, 43.2492, 0.07 ) }
    dend_2 { pt3dadd( 57.6482, 1.41682, 43.3614, 0.07 ) }
    dend_2 { pt3dadd( 58.6869, 1.0215, 43.4887, 1.47 ) }
    dend_2 { pt3dadd( 59.2876, 0.807113, 43.5887, 1.47 ) }
    dend_2 { pt3dadd( 61.2395, 0.08882, 43.9759, 0.15 ) }
    dend_2 { pt3dadd( 62.0809, -0.250434, 44.194, 1.11 ) }
    dend_2 { pt3dadd( 62.7661, -0.559355, 44.4139, 1.47 ) }
    dend_2 { pt3dadd( 64.8602, -1.60426, 45.2049, 0.07 ) }
    dend_2 { pt3dadd( 65.9664, -2.24193, 45.6707, 0.15 ) }
    dend_2 { pt3dadd( 66.7527, -2.75425, 46.0327, 0.22 ) }
    dend_2 { pt3dadd( 67.8294, -3.53791, 46.6063, 0.07 ) }
    dend_2 { pt3dadd( 68.4524, -4.01237, 46.9769, 1.18 ) }
    dend_2 { pt3dadd( 69.1775, -4.55908, 47.4333, 1.77 ) }
    dend_2 { pt3dadd( 70.8412, -5.79081, 48.4951, 0.07 ) }
    dend_2 { pt3dadd( 71.7898, -6.36736, 49.0261, 0.15 ) }
    dend_2 { pt3dadd( 73.5221, -7.14718, 49.8853, 0.74 ) }
    dend_2 { pt3dadd( 74.891, -7.54421, 50.4667, 0.15 ) }
    dend_2 { pt3dadd( 75.7598, -7.65612, 50.7887, 0.81 ) }
    dend_2 { pt3dadd( 76.654, -7.64603, 51.0787, 2.14 ) }
    dend_2 { pt3dadd( 79.8802, -7.16133, 51.9639, 0.15 ) }
    dend_2 { pt3dadd( 81.0039, -6.86851, 52.2548, 0.15 ) }
    dend_2 { pt3dadd( 81.8969, -6.55154, 52.4873, 0.37 ) }
    dend_2 { pt3dadd( 83.5156, -5.85967, 52.9974, 0.07 ) }
    dend_2 { pt3dadd( 84.1541, -5.54637, 53.2683, 0.88 ) }
    dend_2 { pt3dadd( 84.7181, -5.21548, 53.5785, 1.25 ) }
    dend_2 { pt3dadd( 86.1307, -4.16405, 54.7028, 0.07 ) }
    dend_2 { pt3dadd( 86.7992, -3.57834, 55.3923, 1.11 ) }
    dend_2 { pt3dadd( 87.3485, -3.01656, 56.1338, 1.55 ) }
    dend_2 { pt3dadd( 88.0537, -2.28078, 57.3219, 0.07 ) }
    dend_2 { pt3dadd( 88.3807, -1.95822, 57.9436, 0.74 ) }
    dend_2 { pt3dadd( 88.9683, -1.38803, 59.215, 0.15 ) }
    dend_2 { pt3dadd( 89.4277, -0.934623, 60.3327, 0.81 ) }
    dend_2 { pt3dadd( 89.9225, -0.467359, 61.5765, 1.25 ) }
    dend_2 { pt3dadd( 90.7324, 0.220056, 63.6116, 0.22 ) }
    dend_2 { pt3dadd( 91.086, 0.473651, 64.5005, 0.22 ) }
    dend_2 { pt3dadd( 91.2833, 0.570472, 64.9564, 0.22 ) }
    dend_2 { pt3dadd( 91.7617, 0.696703, 65.9148, 0.15 ) }
    dend_2 { pt3dadd( 92.2484, 0.748193, 66.8039, 0.81 ) }
    dend_2 { pt3dadd( 93.377, 0.699043, 68.5797, 0.22 ) }
    dend_2 { pt3dadd( 94.316, 0.598834, 69.8904, 0.22 ) }
    dend_2 { pt3dadd( 95.1608, 0.438959, 70.9124, 1.62 ) }
    dend_2 { pt3dadd( 96.1233, 0.192804, 71.9581, 0.15 ) }
    dend_2 { pt3dadd( 96.8436, -0.019647, 72.6627, 0.96 ) }
    dend_2 { pt3dadd( 98.6645, -0.546518, 74.1715, 0.07 ) }
    dend_2 { pt3dadd( 99.8615, -0.864364, 75.0445, 0.59 ) }
    dend_2 { pt3dadd( 101.465, -1.21618, 76.1669, 0.07 ) }
    dend_2 { pt3dadd( 102.621, -1.41844, 76.9862, 0.07 ) }
    dend_2 { pt3dadd( 103.351, -1.52358, 77.5072, 1.25 ) }
    dend_2 { pt3dadd( 105.607, -1.71943, 79.0803, 0.07 ) }
    dend_2 { pt3dadd( 106.779, -1.73574, 79.8457, 0.81 ) }
    dend_2 { pt3dadd( 108.639, -1.62823, 81.0255, 0.07 ) }
    dend_2 { pt3dadd( 109.211, -1.53741, 81.3952, 0.07 ) }
    dend_2 { pt3dadd( 109.911, -1.36305, 81.8615, 1.03 ) }
    dend_2 { pt3dadd( 111.38, -0.922155, 82.8717, 0.07 ) }
    dend_2 { pt3dadd( 112.726, -0.384941, 83.8364, 0.07 ) }
    dend_2 { pt3dadd( 114.173, 0.279923, 84.8327, 0.07 ) }
    dend_2 { pt3dadd( 115.066, 0.772473, 85.4209, 0.66 ) }
    dend_2 { pt3dadd( 115.687, 1.13522, 85.8442, 1.03 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 65/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.42458, 39.3425, 0.0, 0.181543 ) }
    axon_1 { pt3dadd( 13.1052, 53.8839, 0.0, 0.181543 ) }
    axon_1 { pt3dadd( 16.7858, 68.4253, 0.0, 0.181543 ) }
    // Section: dend_56, id: dend_56, parent: dend_38 (entry count 68/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -0.383981, 29.9033, 15.9181, 0.22 ) }
    dend_56 { pt3dadd( -1.01035, 30.1561, 16.903, 0.22 ) }
    dend_56 { pt3dadd( -1.24725, 30.3108, 17.2793, 0.22 ) }
    dend_56 { pt3dadd( -1.41439, 30.5025, 17.6232, 0.15 ) }
    dend_56 { pt3dadd( -1.53351, 30.7048, 17.9557, 0.15 ) }
    dend_56 { pt3dadd( -1.61437, 30.8616, 18.1863, 0.15 ) }
    dend_56 { pt3dadd( -1.73015, 31.1901, 18.6056, 0.66 ) }
    dend_56 { pt3dadd( -1.81154, 31.4938, 18.958, 0.22 ) }
    dend_56 { pt3dadd( -1.94493, 31.9615, 19.5172, 0.22 ) }
    dend_56 { pt3dadd( -2.04845, 32.3251, 19.9616, 1.62 ) }
    dend_56 { pt3dadd( -2.16401, 32.7666, 20.5221, 3.1 ) }
    dend_56 { pt3dadd( -2.47147, 33.869, 22.0157, 0.29 ) }
    dend_56 { pt3dadd( -2.60271, 34.2829, 22.6245, 0.22 ) }
    dend_56 { pt3dadd( -2.6722, 34.4634, 22.8984, 0.22 ) }
    dend_56 { pt3dadd( -2.69268, 34.512, 22.9699, 0.22 ) }
    dend_56 { pt3dadd( -2.7807, 34.7219, 23.281, 0.22 ) }
    dend_56 { pt3dadd( -2.8706, 34.9372, 23.6332, 0.22 ) }
    dend_56 { pt3dadd( -3.03095, 35.1839, 24.1172, 0.22 ) }
    dend_56 { pt3dadd( -3.18937, 35.475, 24.6238, 0.88 ) }
    dend_56 { pt3dadd( -3.27893, 35.6453, 24.8904, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 88/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -0.383981, 29.9033, 15.9181, 0.22 ) }
    dend_39 { pt3dadd( 0.98385, 30.3758, 15.8406, 0.22 ) }
    dend_39 { pt3dadd( 1.61745, 30.5947, 15.8047, 0.37 ) }
    dend_39 { pt3dadd( 2.16789, 30.7849, 15.7735, 0.88 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 92/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -2.57154, 58.2343, 6.29882, 0.15 ) }
    dend_35 { pt3dadd( -3.33429, 60.011, 6.26208, 0.15 ) }
    dend_35 { pt3dadd( -3.73306, 60.95, 6.29224, 0.81 ) }
    dend_35 { pt3dadd( -4.04454, 61.6703, 6.28317, 1.18 ) }
    dend_35 { pt3dadd( -4.69857, 63.1625, 6.23425, 0.22 ) }
    dend_35 { pt3dadd( -5.03359, 63.9735, 6.19991, 0.81 ) }
    dend_35 { pt3dadd( -5.23148, 64.4954, 6.19128, 0.81 ) }
    dend_35 { pt3dadd( -5.57821, 65.639, 6.27004, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_35 { pt3dadd( -5.87538, 66.8639, 6.38069, 0.07 ) }
    dend_35 { pt3dadd( -5.99727, 67.5108, 6.43676, 0.96 ) }
    dend_35 { pt3dadd( -6.15185, 68.5208, 6.50554, 1.92 ) }
    dend_35 { pt3dadd( -6.37287, 69.8809, 6.61696, 0.22 ) }
    dend_35 { pt3dadd( -6.47424, 70.6079, 6.70455, 0.22 ) }
    dend_35 { pt3dadd( -6.55157, 71.2662, 6.8089, 0.22 ) }
    dend_35 { pt3dadd( -6.61782, 71.8852, 6.9416, 0.81 ) }
    dend_35 { pt3dadd( -6.70929, 72.6275, 7.10488, 1.11 ) }
    dend_35 { pt3dadd( -6.9753, 74.2454, 7.44425, 0.15 ) }
    dend_35 { pt3dadd( -7.19873, 75.4413, 7.64997, 0.15 ) }
    dend_35 { pt3dadd( -7.29766, 75.9511, 7.72669, 0.74 ) }
    dend_35 { pt3dadd( -7.46426, 77.0044, 7.87094, 1.92 ) }
    dend_35 { pt3dadd( -7.52046, 77.4966, 7.92839, 2.88 ) }
    dend_35 { pt3dadd( -7.5984, 78.5731, 8.06141, 1.84 ) }
    dend_35 { pt3dadd( -7.64793, 80.2581, 8.28701, 0.22 ) }
    dend_35 { pt3dadd( -7.66376, 81.3543, 8.43785, 0.59 ) }
    dend_35 { pt3dadd( -7.65443, 82.0981, 8.5365, 0.59 ) }
    dend_35 { pt3dadd( -7.61787, 83.0551, 8.64144, 0.22 ) }
    dend_35 { pt3dadd( -7.55014, 84.1208, 8.72516, 0.22 ) }
    dend_35 { pt3dadd( -7.49123, 84.9047, 8.7466, 0.22 ) }
    dend_35 { pt3dadd( -7.49187, 85.7191, 8.70278, 0.15 ) }
    dend_35 { pt3dadd( -7.60039, 86.744, 8.55108, 0.15 ) }
    dend_35 { pt3dadd( -7.76034, 87.5562, 8.35053, 0.88 ) }
    dend_35 { pt3dadd( -8.02086, 88.594, 8.00371, 1.77 ) }
    dend_35 { pt3dadd( -8.23817, 89.3661, 7.70641, 1.77 ) }
    dend_35 { pt3dadd( -8.76143, 90.8828, 7.10482, 0.15 ) }
    dend_35 { pt3dadd( -9.05217, 91.6212, 6.81992, 0.37 ) }
    dend_35 { pt3dadd( -9.32716, 92.2947, 6.58814, 0.96 ) }
    dend_35 { pt3dadd( -9.65159, 93.1115, 6.38029, 1.77 ) }
    dend_35 { pt3dadd( -10.1411, 94.4437, 6.16313, 0.29 ) }
    dend_35 { pt3dadd( -10.57, 95.8181, 6.04223, 0.15 ) }
    dend_35 { pt3dadd( -10.6531, 96.1828, 6.03283, 0.52 ) }
    dend_35 { pt3dadd( -10.8335, 96.9822, 6.03709, 1.18 ) }
    dend_35 { pt3dadd( -11.1475, 98.308, 6.08403, 0.15 ) }
    dend_35 { pt3dadd( -11.3388, 99.1151, 6.12855, 0.15 ) }
    dend_35 { pt3dadd( -11.4789, 99.838, 6.18957, 1.03 ) }
    dend_35 { pt3dadd( -11.6304, 101.23, 6.3643, 2.8 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 37/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -2.57154, 58.2343, 6.29882, 0.22 ) }
    dend_34 { pt3dadd( -2.02435, 59.6554, 6.92661, 0.22 ) }
    dend_34 { pt3dadd( -1.51161, 61.0178, 7.5601, 0.22 ) }
    dend_34 { pt3dadd( -1.11288, 62.0643, 8.0395, 0.96 ) }
    dend_34 { pt3dadd( -0.796896, 62.8299, 8.37785, 1.18 ) }
    dend_34 { pt3dadd( -0.179652, 64.1883, 8.93541, 0.15 ) }
    dend_34 { pt3dadd( 0.242807, 65.0049, 9.25666, 0.15 ) }
    dend_34 { pt3dadd( 0.575069, 65.5677, 9.44348, 0.15 ) }
    dend_34 { pt3dadd( 0.94829, 66.2078, 9.59717, 0.15 ) }
    dend_34 { pt3dadd( 1.31303, 66.9438, 9.69864, 0.15 ) }
    dend_34 { pt3dadd( 1.68005, 67.8158, 9.73856, 1.33 ) }
    dend_34 { pt3dadd( 2.0924, 68.9476, 9.68485, 2.73 ) }
    dend_34 { pt3dadd( 2.39177, 69.9973, 9.59479, 3.1 ) }
    dend_34 { pt3dadd( 2.9378, 73.0146, 9.2719, 0.22 ) }
    dend_34 { pt3dadd( 3.07831, 74.3744, 9.11573, 0.15 ) }
    dend_34 { pt3dadd( 3.11701, 75.3118, 9.00732, 0.52 ) }
    dend_34 { pt3dadd( 3.12252, 76.1792, 8.90541, 0.74 ) }
    dend_34 { pt3dadd( 3.09358, 77.96, 8.68963, 0.22 ) }
    dend_34 { pt3dadd( 3.08248, 79.0015, 8.58131, 1.18 ) }
    dend_34 { pt3dadd( 3.0982, 79.944, 8.5168, 2.58 ) }
    dend_34 { pt3dadd( 3.22222, 82.2781, 8.47294, 0.22 ) }
    dend_34 { pt3dadd( 3.29136, 83.2504, 8.48447, 0.22 ) }
    dend_34 { pt3dadd( 3.36408, 84.2718, 8.51519, 0.81 ) }
    dend_34 { pt3dadd( 3.47527, 85.9352, 8.58861, 2.51 ) }
    dend_34 { pt3dadd( 3.61974, 88.7943, 8.75443, 0.22 ) }
    dend_34 { pt3dadd( 3.63324, 90.0145, 8.84282, 0.29 ) }
    dend_34 { pt3dadd( 3.5661, 91.3633, 8.96082, 0.15 ) }
    dend_34 { pt3dadd( 3.43729, 92.7307, 9.08675, 0.15 ) }
    dend_34 { pt3dadd( 3.27999, 93.8054, 9.18941, 1.03 ) }
    dend_34 { pt3dadd( 3.07741, 94.7276, 9.27933, 1.99 ) }
    dend_34 { pt3dadd( 2.74126, 95.7388, 9.38009, 1.99 ) }
    dend_34 { pt3dadd( 1.80139, 97.9849, 9.59839, 0.15 ) }
    dend_34 { pt3dadd( 1.34069, 98.9049, 9.68511, 0.15 ) }
    dend_34 { pt3dadd( 0.892483, 99.697, 9.7427, 0.15 ) }
    dend_34 { pt3dadd( 0.517903, 100.283, 9.77438, 0.44 ) }
    dend_34 { pt3dadd( -0.590803, 101.777, 9.84326, 0.15 ) }
    dend_34 { pt3dadd( -1.53799, 102.878, 9.88857, 1.47 ) }
    dend_34 { pt3dadd( -2.4102, 103.727, 9.93161, 2.51 ) }
    dend_34 { pt3dadd( -3.89451, 105.028, 10.0213, 0.37 ) }
    dend_34 { pt3dadd( -4.73291, 105.71, 10.0681, 0.22 ) }
    dend_34 { pt3dadd( -5.4968, 106.267, 10.1046, 0.07 ) }
    dend_34 { pt3dadd( -6.22884, 106.727, 10.1559, 0.29 ) }
    dend_34 { pt3dadd( -7.6084, 107.475, 10.3016, 0.07 ) }
    dend_34 { pt3dadd( -8.77897, 108.073, 10.4556, 0.44 ) }
    dend_34 { pt3dadd( -10.4058, 108.851, 10.6907, 0.07 ) }
    dend_34 { pt3dadd( -11.7491, 109.484, 10.8652, 0.15 ) }
    dend_34 { pt3dadd( -12.6598, 109.895, 10.9192, 0.74 ) }
    dend_34 { pt3dadd( -13.8728, 110.417, 10.9726, 1.84 ) }
    dend_34 { pt3dadd( -15.7992, 111.173, 11.0215, 0.15 ) }
    dend_34 { pt3dadd( -16.851, 111.56, 11.032, 0.59 ) }
    dend_34 { pt3dadd( -17.6914, 111.855, 11.0285, 0.29 ) }
    dend_34 { pt3dadd( -19.5684, 112.54, 10.9184, 1.03 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 89/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -22.2549, -23.6194, -26.0107, 1.47 ) }
    dend_31 { pt3dadd( -23.6067, -23.8678, -26.385, 1.47 ) }
    dend_31 { pt3dadd( -24.9842, -24.2386, -26.9626, 0.52 ) }
    dend_31 { pt3dadd( -25.6302, -24.4838, -27.306, 0.52 ) }
    dend_31 { pt3dadd( -26.2506, -24.7192, -27.6358, 1.11 ) }
    dend_31 { pt3dadd( -26.9372, -24.9798, -28.0008, 2.21 ) }
    dend_31 { pt3dadd( -27.5689, -25.2195, -28.3365, 1.11 ) }
    dend_31 { pt3dadd( -28.6088, -25.7816, -29.0765, 0.44 ) }
    dend_31 { pt3dadd( -29.1967, -26.245, -29.612, 1.47 ) }
    dend_31 { pt3dadd( -36.9309, -28.6391, -31.7761, 1.47 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 99/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -22.2549, -23.6194, -26.0107, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_28 { pt3dadd( -22.4327, -25.8532, -26.5939, 0.22 ) }
    dend_28 { pt3dadd( -22.5078, -26.5906, -26.8004, 0.22 ) }
    dend_28 { pt3dadd( -22.6035, -27.4798, -27.0406, 0.96 ) }
    dend_28 { pt3dadd( -22.7288, -28.7696, -27.4167, 0.22 ) }
    dend_28 { pt3dadd( -22.7922, -29.6565, -27.7068, 0.22 ) }
    dend_28 { pt3dadd( -22.842, -30.3537, -27.9348, 0.81 ) }
    dend_28 { pt3dadd( -22.8971, -31.0751, -28.195, 1.92 ) }
    dend_28 { pt3dadd( -22.9578, -31.9417, -28.5045, 0.81 ) }
    dend_28 { pt3dadd( -23.0085, -33.0456, -28.9527, 0.15 ) }
    dend_28 { pt3dadd( -23.015, -33.8835, -29.3481, 0.66 ) }
    dend_28 { pt3dadd( -22.9533, -42.9706, -33.959, 0.66 ) }
    dend_28 { pt3dadd( -24.178, -52.5701, -36.8716, 0.66 ) }
    dend_28 { pt3dadd( -25.5998, -61.8665, -40.672, 0.66 ) }
    dend_28 { pt3dadd( -28.417, -71.2146, -43.2777, 0.66 ) }
    dend_28 { pt3dadd( -32.1514, -80.2177, -46.0288, 0.66 ) }
    dend_28 { pt3dadd( -34.0787, -90.0025, -47.3223, 0.66 ) }
    dend_28 { pt3dadd( -35.0296, -99.9689, -46.7858, 0.66 ) }
    dend_28 { pt3dadd( -36.735, -109.619, -44.6679, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 18/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.42305, -119.373, 23.2544, 0.37 ) }
    dend_20 { pt3dadd( -7.30303, -120.727, 23.8497, 0.37 ) }
    dend_20 { pt3dadd( -6.74251, -121.622, 24.2326, 0.22 ) }
    dend_20 { pt3dadd( -6.49284, -122.151, 24.4614, 0.22 ) }
    dend_20 { pt3dadd( -6.25491, -122.805, 24.7479, 0.22 ) }
    dend_20 { pt3dadd( -6.07803, -123.405, 25.0005, 0.29 ) }
    dend_20 { pt3dadd( -5.91513, -124.164, 25.2857, 0.29 ) }
    dend_20 { pt3dadd( -5.9166, -124.812, 25.4916, 0.22 ) }
    dend_20 { pt3dadd( -5.97006, -125.438, 25.6749, 0.81 ) }
    dend_20 { pt3dadd( -6.03476, -126.036, 25.849, 1.77 ) }
    dend_20 { pt3dadd( -6.09773, -126.647, 26.0198, 2.43 ) }
    dend_20 { pt3dadd( -6.17076, -127.864, 26.32, 0.96 ) }
    dend_20 { pt3dadd( -6.21593, -129.572, 26.7196, 0.22 ) }
    dend_20 { pt3dadd( -6.24427, -130.239, 26.8709, 1.18 ) }
    dend_20 { pt3dadd( -6.30781, -130.995, 27.038, 1.7 ) }
    dend_20 { pt3dadd( -6.34836, -131.317, 27.1089, 1.7 ) }
    dend_20 { pt3dadd( -6.52899, -132.359, 27.367, 0.74 ) }
    dend_20 { pt3dadd( -6.7375, -133.369, 27.6336, 0.29 ) }
    dend_20 { pt3dadd( -6.95104, -134.325, 27.8761, 0.29 ) }
    dend_20 { pt3dadd( -7.09419, -135.048, 28.0689, 0.29 ) }
    dend_20 { pt3dadd( -7.22821, -135.639, 28.2289, 0.66 ) }
    dend_20 { pt3dadd( -7.39185, -136.309, 28.4239, 1.47 ) }
    dend_20 { pt3dadd( -7.54383, -136.906, 28.6166, 2.73 ) }
    dend_20 { pt3dadd( -7.64084, -137.459, 28.7974, 2.88 ) }
    dend_20 { pt3dadd( -7.64673, -138.883, 29.2858, 1.84 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 43/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -8.42305, -119.373, 23.2544, 0.22 ) }
    dend_15 { pt3dadd( -10.5921, -120.281, 23.8401, 0.22 ) }
    dend_15 { pt3dadd( -11.7407, -120.777, 24.1052, 0.22 ) }
    dend_15 { pt3dadd( -12.2593, -121.044, 24.206, 0.22 ) }
    dend_15 { pt3dadd( -12.6542, -121.274, 24.2747, 0.22 ) }
    dend_15 { pt3dadd( -13.2683, -121.656, 24.3932, 0.29 ) }
    dend_15 { pt3dadd( -13.7352, -121.949, 24.4861, 0.96 ) }
    dend_15 { pt3dadd( -14.7266, -122.584, 24.6142, 1.84 ) }
    dend_15 { pt3dadd( -16.1489, -123.503, 24.7163, 0.22 ) }
    dend_15 { pt3dadd( -16.9965, -124.034, 24.7606, 0.22 ) }
    dend_15 { pt3dadd( -17.9378, -124.554, 24.7975, 0.96 ) }
    dend_15 { pt3dadd( -19.0862, -125.063, 24.8491, 0.22 ) }
    dend_15 { pt3dadd( -20.2188, -125.366, 24.8938, 0.22 ) }
    dend_15 { pt3dadd( -20.6622, -125.412, 24.9095, 0.22 ) }
    dend_15 { pt3dadd( -21.608, -125.405, 24.9542, 0.22 ) }
    dend_15 { pt3dadd( -22.7501, -125.38, 25.0235, 0.29 ) }
    dend_15 { pt3dadd( -23.5445, -125.391, 25.0827, 1.25 ) }
    dend_15 { pt3dadd( -24.9518, -125.49, 25.2415, 2.88 ) }
    dend_15 { pt3dadd( -25.5412, -125.554, 25.3262, 2.73 ) }
    dend_15 { pt3dadd( -27.9276, -125.968, 25.6624, 0.29 ) }
    dend_15 { pt3dadd( -28.862, -126.212, 25.7906, 0.66 ) }
    dend_15 { pt3dadd( -30.1089, -126.607, 25.9531, 0.29 ) }
    dend_15 { pt3dadd( -30.8473, -126.853, 26.0274, 0.22 ) }
    dend_15 { pt3dadd( -31.8259, -127.164, 26.1127, 0.22 ) }
    dend_15 { pt3dadd( -32.8389, -127.441, 26.1726, 0.22 ) }
    dend_15 { pt3dadd( -34.4146, -127.776, 26.2158, 0.22 ) }
    dend_15 { pt3dadd( -35.1179, -127.859, 26.2049, 0.37 ) }
    dend_15 { pt3dadd( -36.3301, -127.943, 26.1586, 0.37 ) }
    dend_15 { pt3dadd( -37.4466, -127.981, 26.0896, 0.66 ) }
    dend_15 { pt3dadd( -38.1859, -127.979, 26.0301, 1.62 ) }
    dend_15 { pt3dadd( -39.0493, -127.884, 25.9376, 2.51 ) }
    dend_15 { pt3dadd( -40.5412, -127.545, 25.7296, 2.73 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 75/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 4.78209, -68.9797, 17.251, 3.24 ) }
    dend_13 { pt3dadd( 5.04205, -70.5029, 17.3328, 3.24 ) }
    dend_13 { pt3dadd( 5.30081, -71.815, 17.4008, 3.24 ) }
    dend_13 { pt3dadd( 5.88854, -74.4909, 17.5372, 0.22 ) }
    dend_13 { pt3dadd( 6.29531, -76.1968, 17.6222, 0.29 ) }
    dend_13 { pt3dadd( 6.52526, -77.1061, 17.6666, 0.22 ) }
    dend_13 { pt3dadd( 6.82042, -78.2102, 17.7192, 0.22 ) }
    dend_13 { pt3dadd( 7.02917, -78.8978, 17.7378, 0.22 ) }
    dend_13 { pt3dadd( 7.19937, -79.4156, 17.7539, 0.22 ) }
    dend_13 { pt3dadd( 7.47781, -80.2457, 17.7815, 0.74 ) }
    dend_13 { pt3dadd( 7.64642, -80.8191, 17.7981, 0.74 ) }
    dend_13 { pt3dadd( 7.82586, -81.8072, 17.8415, 0.22 ) }
    dend_13 { pt3dadd( 7.90319, -82.681, 17.902, 0.22 ) }
    dend_13 { pt3dadd( 8.00309, -83.8956, 17.9807, 0.22 ) }
    dend_13 { pt3dadd( 8.0864, -84.6903, 17.9901, 0.22 ) }
    dend_13 { pt3dadd( 8.23794, -85.7985, 17.9628, 0.22 ) }
    dend_13 { pt3dadd( 8.46003, -86.9433, 17.9067, 1.33 ) }
    dend_13 { pt3dadd( 8.82083, -88.4196, 17.794, 3.02 ) }
    dend_13 { pt3dadd( 9.41815, -90.3056, 17.6082, 0.88 ) }
    dend_13 { pt3dadd( 10.0717, -92.1032, 17.4428, 0.22 ) }
    dend_13 { pt3dadd( 10.4217, -93.0122, 17.3705, 0.22 ) }
    dend_13 { pt3dadd( 10.9064, -94.2419, 17.2938, 0.22 ) }
    dend_13 { pt3dadd( 11.1885, -94.993, 17.2717, 1.18 ) }
    dend_13 { pt3dadd( 11.6962, -96.4882, 17.3327, 2.06 ) }
    dend_13 { pt3dadd( 12.2914, -98.5945, 17.6325, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_13 { pt3dadd( 12.4828, -99.5947, 17.8745, 0.52 ) }
    dend_13 { pt3dadd( 12.5891, -100.455, 18.1264, 0.52 ) }
    dend_13 { pt3dadd( 12.7378, -102.088, 18.6722, 0.22 ) }
    dend_13 { pt3dadd( 12.7949, -102.803, 18.9374, 0.22 ) }
    dend_13 { pt3dadd( 12.902, -104.405, 19.5805, 1.99 ) }
    dend_13 { pt3dadd( 13.1336, -107.133, 20.6987, 0.29 ) }
    dend_13 { pt3dadd( 13.2022, -108.019, 21.0569, 0.22 ) }
    dend_13 { pt3dadd( 13.3139, -109.514, 21.6432, 0.22 ) }
    dend_13 { pt3dadd( 13.3815, -110.272, 21.917, 1.03 ) }
    dend_13 { pt3dadd( 13.4672, -111.167, 22.2133, 2.14 ) }
    dend_13 { pt3dadd( 13.561, -112.011, 22.4755, 2.06 ) }
    dend_13 { pt3dadd( 13.8074, -114.108, 23.1009, 0.22 ) }
    dend_13 { pt3dadd( 13.8857, -115.038, 23.3624, 0.66 ) }
    dend_13 { pt3dadd( 13.9931, -116.983, 23.8755, 0.22 ) }
    dend_13 { pt3dadd( 14.05, -118.238, 24.1809, 0.22 ) }
    dend_13 { pt3dadd( 14.0959, -119.06, 24.3466, 0.66 ) }
    dend_13 { pt3dadd( 14.1817, -120.294, 24.5562, 0.22 ) }
    dend_13 { pt3dadd( 14.2804, -121.403, 24.7141, 1.55 ) }
    dend_13 { pt3dadd( 14.3608, -122.319, 24.8278, 2.8 ) }
    dend_13 { pt3dadd( 14.4473, -123.242, 24.9196, 2.58 ) }
    dend_13 { pt3dadd( 14.8334, -126.341, 25.1184, 0.22 ) }
    dend_13 { pt3dadd( 14.9267, -127.305, 25.1798, 0.22 ) }
    dend_13 { pt3dadd( 14.9902, -128.136, 25.2188, 0.59 ) }
    dend_13 { pt3dadd( 15.0406, -128.883, 25.2592, 0.29 ) }
    dend_13 { pt3dadd( 15.0918, -129.85, 25.3149, 1.03 ) }
    dend_13 { pt3dadd( 15.1444, -131.009, 25.3693, 2.06 ) }
    dend_13 { pt3dadd( 15.1859, -133.347, 25.4307, 0.15 ) }
    dend_13 { pt3dadd( 15.2018, -133.936, 25.4306, 0.15 ) }
    dend_13 { pt3dadd( 15.268, -135.235, 25.3973, 0.29 ) }
    dend_13 { pt3dadd( 15.3246, -136.118, 25.367, 0.15 ) }
    dend_13 { pt3dadd( 15.3978, -137.125, 25.3249, 0.15 ) }
    dend_13 { pt3dadd( 15.4775, -137.976, 25.3052, 0.96 ) }
    dend_13 { pt3dadd( 15.5867, -138.864, 25.2849, 2.06 ) }
    dend_13 { pt3dadd( 15.7115, -140.082, 25.3035, 2.14 ) }
    dend_13 { pt3dadd( 15.9192, -142.962, 25.4322, 0.22 ) }
    dend_13 { pt3dadd( 15.943, -143.894, 25.5294, 0.22 ) }
    dend_13 { pt3dadd( 15.9362, -145.182, 25.7333, 0.22 ) }
    dend_13 { pt3dadd( 15.9268, -145.563, 25.8126, 0.59 ) }
    dend_13 { pt3dadd( 15.8779, -146.508, 26.046, 1.4 ) }
    dend_13 { pt3dadd( 15.8186, -147.499, 26.3164, 0.66 ) }
    dend_13 { pt3dadd( 15.7111, -149.534, 26.9209, 0.22 ) }
    dend_13 { pt3dadd( 15.6253, -150.528, 27.185, 0.22 ) }
    dend_13 { pt3dadd( 15.5463, -151.279, 27.3554, 0.22 ) }
    dend_13 { pt3dadd( 15.4703, -152.095, 27.5281, 1.03 ) }
    dend_13 { pt3dadd( 15.3992, -153.325, 27.7575, 2.21 ) }
    dend_13 { pt3dadd( 15.3454, -155.936, 28.2205, 0.15 ) }
    dend_13 { pt3dadd( 15.384, -157.504, 28.46, 0.15 ) }
    dend_13 { pt3dadd( 15.4095, -158.146, 28.5545, 0.81 ) }
    dend_13 { pt3dadd( 15.4508, -159.062, 28.6835, 1.33 ) }
    dend_13 { pt3dadd( 15.5105, -160.433, 28.8757, 0.22 ) }
    dend_13 { pt3dadd( 15.5673, -161.811, 29.0595, 0.22 ) }
    dend_13 { pt3dadd( 15.6092, -162.665, 29.1642, 0.88 ) }
    dend_13 { pt3dadd( 15.6475, -163.419, 29.2709, 0.66 ) }
    dend_13 { pt3dadd( 15.7259, -165.119, 29.5597, 0.15 ) }
    dend_13 { pt3dadd( 15.7915, -166.369, 29.7983, 0.15 ) }
    dend_13 { pt3dadd( 15.8281, -166.837, 29.8969, 0.74 ) }
    dend_13 { pt3dadd( 15.9343, -167.78, 30.0995, 1.18 ) }
    dend_13 { pt3dadd( 16.2144, -169.676, 30.5349, 0.22 ) }
    dend_13 { pt3dadd( 16.4371, -170.769, 30.8171, 0.22 ) }
    dend_13 { pt3dadd( 16.6315, -171.45, 30.9943, 0.22 ) }
    dend_13 { pt3dadd( 16.8665, -172.138, 31.179, 0.22 ) }
    dend_13 { pt3dadd( 17.1811, -172.994, 31.4018, 0.22 ) }
    dend_13 { pt3dadd( 17.5173, -173.943, 31.6311, 1.33 ) }
    dend_13 { pt3dadd( 17.8724, -175.044, 31.8742, 2.21 ) }
    dend_13 { pt3dadd( 18.4295, -177.009, 32.2625, 0.15 ) }
    dend_13 { pt3dadd( 18.6796, -177.812, 32.4342, 0.29 ) }
    dend_13 { pt3dadd( 18.8158, -178.201, 32.5225, 0.29 ) }
    dend_13 { pt3dadd( 19.3004, -179.432, 32.8276, 0.15 ) }
    dend_13 { pt3dadd( 19.4406, -179.793, 32.9179, 0.15 ) }
    dend_13 { pt3dadd( 19.7212, -180.597, 33.1006, 0.66 ) }
    dend_13 { pt3dadd( 20.1759, -182.022, 33.4501, 0.15 ) }
    dend_13 { pt3dadd( 20.3426, -182.585, 33.5767, 0.15 ) }
    dend_13 { pt3dadd( 20.4745, -182.994, 33.6834, 0.15 ) }
    dend_13 { pt3dadd( 20.806, -183.94, 33.9756, 0.15 ) }
    dend_13 { pt3dadd( 21.0058, -184.542, 34.1707, 0.37 ) }
    dend_13 { pt3dadd( 21.2662, -185.413, 34.4456, 1.03 ) }
    dend_13 { pt3dadd( 21.5277, -186.345, 34.7368, 0.22 ) }
    dend_13 { pt3dadd( 21.9226, -187.655, 35.1481, 0.22 ) }
    dend_13 { pt3dadd( 22.2911, -188.772, 35.4936, 1.4 ) }
    dend_13 { pt3dadd( 22.6362, -189.747, 35.7794, 2.14 ) }
    dend_13 { pt3dadd( 23.0013, -190.804, 36.0772, 1.4 ) }
    dend_13 { pt3dadd( 23.6266, -192.813, 36.5927, 0.22 ) }
    dend_13 { pt3dadd( 23.7966, -193.445, 36.737, 0.81 ) }
    dend_13 { pt3dadd( 23.9709, -194.246, 36.8945, 1.55 ) }
    dend_13 { pt3dadd( 24.2551, -195.803, 37.1785, 0.29 ) }
    dend_13 { pt3dadd( 24.4628, -197.174, 37.4266, 0.22 ) }
    dend_13 { pt3dadd( 24.5768, -198.106, 37.5845, 0.22 ) }
    dend_13 { pt3dadd( 24.6457, -199.057, 37.7114, 0.29 ) }
    dend_13 { pt3dadd( 24.6874, -200.141, 37.8583, 0.15 ) }
    dend_13 { pt3dadd( 24.7055, -200.97, 37.9682, 0.96 ) }
    dend_13 { pt3dadd( 24.715, -201.542, 38.0369, 1.47 ) }
    dend_13 { pt3dadd( 24.746, -202.397, 38.1159, 1.47 ) }
    dend_13 { pt3dadd( 24.8649, -203.897, 38.2464, 0.22 ) }
    dend_13 { pt3dadd( 25.0493, -205.367, 38.3801, 0.22 ) }
    dend_13 { pt3dadd( 25.1922, -206.19, 38.4476, 0.88 ) }
    dend_13 { pt3dadd( 25.434, -207.29, 38.537, 0.88 ) }
    dend_13 { pt3dadd( 25.8754, -209.003, 38.689, 0.15 ) }
    dend_13 { pt3dadd( 26.2417, -210.164, 38.8037, 0.15 ) }
    dend_13 { pt3dadd( 26.5484, -210.998, 38.889, 0.81 ) }
    dend_13 { pt3dadd( 27.0677, -212.33, 39.0708, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_13 { pt3dadd( 27.4011, -213.19, 39.2245, 0.81 ) }
    dend_13 { pt3dadd( 27.7896, -214.224, 39.4439, 0.52 ) }
    dend_13 { pt3dadd( 28.1007, -215.155, 39.6634, 1.62 ) }
    dend_13 { pt3dadd( 28.3552, -216.124, 39.904, 1.62 ) }
    dend_13 { pt3dadd( 28.7486, -218.104, 40.3637, 0.22 ) }
    dend_13 { pt3dadd( 28.9176, -219.211, 40.5989, 0.22 ) }
    dend_13 { pt3dadd( 28.9968, -219.872, 40.7104, 0.74 ) }
    dend_13 { pt3dadd( 29.0672, -220.614, 40.8095, 0.29 ) }
    dend_13 { pt3dadd( 29.1393, -221.688, 40.9355, 1.47 ) }
    dend_13 { pt3dadd( 29.1947, -222.433, 41.0139, 1.47 ) }
    dend_13 { pt3dadd( 29.3183, -224.189, 41.1472, 0.15 ) }
    dend_13 { pt3dadd( 29.4119, -225.044, 41.2573, 0.52 ) }
    dend_13 { pt3dadd( 29.588, -226.235, 41.4547, 0.15 ) }
    dend_13 { pt3dadd( 29.7486, -227.132, 41.6265, 0.15 ) }
    dend_13 { pt3dadd( 29.8433, -227.629, 41.7296, 0.66 ) }
    dend_13 { pt3dadd( 30.021, -228.541, 41.9307, 1.47 ) }
    dend_13 { pt3dadd( 30.427, -230.564, 42.3891, 0.22 ) }
    dend_13 { pt3dadd( 30.6605, -231.669, 42.619, 0.15 ) }
    dend_13 { pt3dadd( 30.822, -232.391, 42.7349, 0.15 ) }
    dend_13 { pt3dadd( 31.0264, -233.311, 42.8648, 0.74 ) }
    dend_13 { pt3dadd( 31.3086, -234.699, 43.0362, 0.15 ) }
    dend_13 { pt3dadd( 31.4937, -235.617, 43.1359, 0.15 ) }
    dend_13 { pt3dadd( 31.7482, -237.103, 43.267, 0.22 ) }
    dend_13 { pt3dadd( 31.901, -238.087, 43.3684, 1.18 ) }
    dend_13 { pt3dadd( 32.0681, -239.238, 43.5034, 1.7 ) }
    dend_13 { pt3dadd( 32.4235, -241.636, 43.8262, 0.22 ) }
    dend_13 { pt3dadd( 32.5655, -242.568, 43.9612, 0.22 ) }
    dend_13 { pt3dadd( 32.7123, -243.441, 44.0984, 0.15 ) }
    dend_13 { pt3dadd( 32.9348, -244.692, 44.3203, 0.15 ) }
    dend_13 { pt3dadd( 33.038, -245.411, 44.4647, 0.44 ) }
    dend_13 { pt3dadd( 33.2691, -247.396, 44.8732, 0.15 ) }
    dend_13 { pt3dadd( 33.3161, -248.03, 45.0222, 0.88 ) }
    dend_13 { pt3dadd( 33.3469, -248.927, 45.2412, 1.7 ) }
    dend_13 { pt3dadd( 33.359, -249.926, 45.4829, 1.4 ) }
    dend_13 { pt3dadd( 33.3325, -252.25, 46.0068, 0.15 ) }
    dend_13 { pt3dadd( 33.3227, -252.72, 46.1056, 0.22 ) }
    dend_13 { pt3dadd( 33.2683, -254.367, 46.4264, 0.07 ) }
    dend_13 { pt3dadd( 33.2492, -255.206, 46.574, 1.33 ) }
    dend_13 { pt3dadd( 33.2385, -255.944, 46.6914, 1.33 ) }
    dend_13 { pt3dadd( 33.2718, -257.296, 46.8912, 0.07 ) }
    dend_13 { pt3dadd( 33.3646, -258.286, 47.0091, 0.15 ) }
    dend_13 { pt3dadd( 33.4557, -258.947, 47.0772, 0.15 ) }
    dend_13 { pt3dadd( 33.5769, -259.612, 47.1339, 0.22 ) }
    dend_13 { pt3dadd( 33.8207, -260.878, 47.2391, 0.07 ) }
    dend_13 { pt3dadd( 33.9046, -261.342, 47.2762, 0.66 ) }
    dend_13 { pt3dadd( 34.0245, -262.09, 47.329, 0.29 ) }
    dend_13 { pt3dadd( 34.2864, -263.85, 47.432, 0.15 ) }
    dend_13 { pt3dadd( 34.3627, -264.305, 47.4608, 0.22 ) }
    dend_13 { pt3dadd( 34.5193, -265.235, 47.5303, 0.07 ) }
    dend_13 { pt3dadd( 34.6568, -266.065, 47.6087, 0.74 ) }
    dend_13 { pt3dadd( 34.8448, -267.367, 47.7646, 0.15 ) }
    dend_13 { pt3dadd( 34.9221, -268.005, 47.8546, 0.59 ) }
    dend_13 { pt3dadd( 35.0801, -269.729, 48.1081, 0.15 ) }
    dend_13 { pt3dadd( 35.1385, -270.458, 48.234, 0.29 ) }
    dend_13 { pt3dadd( 35.1989, -271.373, 48.3879, 0.15 ) }
    dend_13 { pt3dadd( 35.2334, -272.11, 48.5081, 0.88 ) }
    dend_13 { pt3dadd( 35.2487, -272.751, 48.6059, 1.92 ) }
    dend_13 { pt3dadd( 35.2623, -275.538, 48.9949, 0.22 ) }
    dend_13 { pt3dadd( 35.256, -276.969, 49.1694, 1.7 ) }
    dend_13 { pt3dadd( 35.2488, -280.114, 49.5125, 0.15 ) }
    dend_13 { pt3dadd( 35.2347, -281.448, 49.6363, 0.15 ) }
    dend_13 { pt3dadd( 35.2159, -282.279, 49.7064, 0.81 ) }
    dend_13 { pt3dadd( 35.1548, -284.157, 49.8416, 0.22 ) }
    dend_13 { pt3dadd( 35.1214, -285.223, 49.9001, 1.25 ) }
    dend_13 { pt3dadd( 35.109, -285.803, 49.9248, 1.84 ) }
    dend_13 { pt3dadd( 35.0859, -288.432, 50.0709, 0.15 ) }
    dend_13 { pt3dadd( 35.0953, -289.111, 50.112, 0.29 ) }
    dend_13 { pt3dadd( 35.1544, -290.32, 50.2243, 0.07 ) }
    dend_13 { pt3dadd( 35.2036, -291.067, 50.3116, 0.15 ) }
    dend_13 { pt3dadd( 35.3372, -292.84, 50.5595, 0.15 ) }
    dend_13 { pt3dadd( 35.3812, -293.315, 50.6348, 0.52 ) }
    dend_13 { pt3dadd( 35.4578, -293.992, 50.7543, 1.4 ) }
    dend_13 { pt3dadd( 35.5992, -295.938, 51.1418, 0.07 ) }
    dend_13 { pt3dadd( 35.644, -297.327, 51.4388, 0.15 ) }
    dend_13 { pt3dadd( 35.6269, -297.969, 51.5932, 0.74 ) }
    dend_13 { pt3dadd( 35.5855, -298.615, 51.7587, 1.92 ) }
    dend_13 { pt3dadd( 35.5075, -299.601, 52.0448, 1.92 ) }
    dend_13 { pt3dadd( 35.2882, -302.17, 52.8697, 0.15 ) }
    dend_13 { pt3dadd( 35.2156, -303.07, 53.2125, 0.59 ) }
    dend_13 { pt3dadd( 35.1588, -304.542, 53.8848, 0.07 ) }
    dend_13 { pt3dadd( 35.1578, -304.884, 54.0613, 0.15 ) }
    dend_13 { pt3dadd( 35.202, -306.021, 54.6976, 0.15 ) }
    dend_13 { pt3dadd( 35.2661, -306.814, 55.1587, 0.37 ) }
    dend_13 { pt3dadd( 35.4059, -307.801, 55.7199, 0.96 ) }
    dend_13 { pt3dadd( 35.5992, -308.702, 56.1729, 1.47 ) }
    dend_13 { pt3dadd( 36.0341, -310.263, 56.8912, 0.15 ) }
    dend_13 { pt3dadd( 36.3026, -311.145, 57.2612, 0.15 ) }
    dend_13 { pt3dadd( 36.5185, -311.824, 57.5064, 1.11 ) }
    dend_13 { pt3dadd( 36.7432, -312.524, 57.7244, 1.7 ) }
    dend_13 { pt3dadd( 37.3863, -314.633, 58.2424, 0.15 ) }
    dend_13 { pt3dadd( 37.6054, -315.38, 58.3984, 0.81 ) }
    dend_13 { pt3dadd( 37.87, -316.262, 58.5551, 1.03 ) }
    dend_13 { pt3dadd( 38.5745, -318.37, 58.9211, 0.15 ) }
    dend_13 { pt3dadd( 38.8677, -319.16, 59.0659, 0.22 ) }
    dend_13 { pt3dadd( 39.2585, -320.209, 59.2469, 0.07 ) }
    dend_13 { pt3dadd( 39.5019, -320.911, 59.3537, 0.88 ) }
    dend_13 { pt3dadd( 39.7765, -321.74, 59.4803, 1.62 ) }
    dend_13 { pt3dadd( 40.4414, -323.693, 59.8138, 0.15 ) }
    dend_13 { pt3dadd( 40.8074, -324.649, 59.9863, 1.33 ) }
    dend_13 { pt3dadd( 41.5388, -326.455, 60.334, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( 41.7483, -327.006, 60.4492, 0.22 ) }
    dend_13 { pt3dadd( 42.329, -328.766, 60.8483, 0.07 ) }
    dend_13 { pt3dadd( 42.5291, -329.454, 61.0281, 0.96 ) }
    dend_13 { pt3dadd( 42.9863, -331.285, 61.5482, 0.15 ) }
    dend_13 { pt3dadd( 43.1946, -332.108, 61.8031, 1.11 ) }
    dend_13 { pt3dadd( 43.8753, -334.619, 62.6369, 0.15 ) }
    dend_13 { pt3dadd( 44.1907, -335.717, 62.984, 1.11 ) }
    dend_13 { pt3dadd( 44.4813, -336.711, 63.2721, 1.47 ) }
    dend_13 { pt3dadd( 45.1274, -339.081, 63.8975, 0.15 ) }
    dend_13 { pt3dadd( 45.3571, -339.924, 64.0905, 0.88 ) }
    dend_13 { pt3dadd( 45.6558, -340.948, 64.2703, 1.33 ) }
    dend_13 { pt3dadd( 46.3393, -343.239, 64.4914, 0.15 ) }
    dend_13 { pt3dadd( 46.6722, -344.452, 64.5095, 0.96 ) }
    dend_13 { pt3dadd( 47.2025, -346.768, 64.3625, 0.15 ) }
    dend_13 { pt3dadd( 47.3425, -347.714, 64.2433, 0.15 ) }
    dend_13 { pt3dadd( 47.4122, -348.727, 64.1007, 0.74 ) }
    dend_13 { pt3dadd( 47.353, -350.271, 63.8708, 0.44 ) }
    dend_13 { pt3dadd( 47.2065, -351.325, 63.7077, 1.11 ) }
    dend_13 { pt3dadd( 47.0345, -352.124, 63.5899, 1.7 ) }
    dend_13 { pt3dadd( 46.274, -354.986, 63.2227, 0.15 ) }
    dend_13 { pt3dadd( 45.8268, -356.458, 63.076, 1.33 ) }
    dend_13 { pt3dadd( 45.3625, -357.863, 62.9862, 0.15 ) }
    dend_13 { pt3dadd( 45.1728, -358.415, 62.9762, 0.74 ) }
    dend_13 { pt3dadd( 44.9406, -359.088, 63.0016, 1.4 ) }
    dend_13 { pt3dadd( 44.6413, -359.972, 63.0681, 0.74 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 4.78209, -68.9797, 17.251, 1.03 ) }
    dend_12 { pt3dadd( 6.97395, -69.7966, 21.5961, 1.03 ) }
    dend_12 { pt3dadd( 7.46194, -69.9265, 22.4864, 1.03 ) }
    dend_12 { pt3dadd( 7.93924, -70.0216, 23.2906, 1.03 ) }
    dend_12 { pt3dadd( 8.41568, -70.1175, 24.0585, 1.03 ) }
    dend_12 { pt3dadd( 8.79258, -70.1948, 24.6147, 1.03 ) }
    dend_12 { pt3dadd( 9.33257, -70.3135, 25.3455, 1.03 ) }
    dend_12 { pt3dadd( 9.80126, -70.4002, 25.6858, 0.88 ) }
    dend_12 { pt3dadd( 10.2086, -70.4947, 25.9944, 0.88 ) }
    dend_12 { pt3dadd( 10.7113, -70.6993, 26.488, 0.44 ) }
    dend_12 { pt3dadd( 11.1357, -71.0661, 27.0656, 0.59 ) }
    dend_12 { pt3dadd( 11.3999, -71.3733, 27.5042, 0.22 ) }
    dend_12 { pt3dadd( 12.0334, -71.97, 28.553, 0.22 ) }
    dend_12 { pt3dadd( 12.5622, -72.3553, 29.4025, 0.44 ) }
    dend_12 { pt3dadd( 12.8986, -72.5153, 29.9081, 1.4 ) }
    dend_12 { pt3dadd( 13.5561, -72.6801, 30.804, 2.14 ) }
    dend_12 { pt3dadd( 14.6125, -72.7564, 32.0282, 0.59 ) }
    dend_12 { pt3dadd( 16.3877, -72.6739, 33.7034, 0.59 ) }
    dend_12 { pt3dadd( 17.0578, -72.5938, 34.1702, 0.44 ) }
    dend_12 { pt3dadd( 18.2997, -72.384, 34.8295, 0.81 ) }
    dend_12 { pt3dadd( 19.3584, -72.1536, 35.2884, 1.99 ) }
    dend_12 { pt3dadd( 20.9658, -71.7453, 35.7973, 0.22 ) }
    dend_12 { pt3dadd( 21.7326, -71.5532, 35.956, 1.03 ) }
    dend_12 { pt3dadd( 22.84, -71.3081, 36.088, 0.22 ) }
    dend_12 { pt3dadd( 24.0814, -71.0812, 36.219, 0.96 ) }
    dend_12 { pt3dadd( 24.8904, -70.952, 36.2972, 1.92 ) }
    dend_12 { pt3dadd( 26.7821, -70.6862, 36.6236, 0.22 ) }
    dend_12 { pt3dadd( 27.5695, -70.5641, 36.8274, 0.22 ) }
    dend_12 { pt3dadd( 28.0292, -70.486, 36.9677, 0.22 ) }
    dend_12 { pt3dadd( 28.8309, -70.3389, 37.2318, 1.11 ) }
    dend_12 { pt3dadd( 29.8534, -70.1391, 37.5667, 2.58 ) }
    dend_12 { pt3dadd( 31.8454, -69.6959, 38.2213, 1.11 ) }
    dend_12 { pt3dadd( 32.795, -69.4537, 38.5407, 0.44 ) }
    dend_12 { pt3dadd( 33.6473, -69.2487, 38.8395, 0.44 ) }
    dend_12 { pt3dadd( 34.1685, -69.1423, 39.0432, 0.22 ) }
    dend_12 { pt3dadd( 34.6276, -69.0797, 39.2305, 0.22 ) }
    dend_12 { pt3dadd( 35.0774, -69.0545, 39.4202, 0.22 ) }
    dend_12 { pt3dadd( 35.8304, -69.0737, 39.7708, 1.4 ) }
    dend_12 { pt3dadd( 37.1561, -69.2136, 40.5759, 0.37 ) }
    dend_12 { pt3dadd( 38.1573, -69.3823, 41.4246, 0.29 ) }
    dend_12 { pt3dadd( 38.8707, -69.5842, 42.2013, 0.29 ) }
    dend_12 { pt3dadd( 38.998, -69.6404, 42.3681, 0.29 ) }
    dend_12 { pt3dadd( 39.3674, -69.9271, 43.0058, 0.29 ) }
    dend_12 { pt3dadd( 39.6525, -70.2718, 43.6436, 0.29 ) }
    dend_12 { pt3dadd( 40.0263, -70.8933, 44.6205, 0.59 ) }
    dend_12 { pt3dadd( 40.2534, -71.3968, 45.3147, 1.84 ) }
    dend_12 { pt3dadd( 40.4259, -71.872, 45.9325, 2.06 ) }
    dend_12 { pt3dadd( 40.7665, -72.9729, 47.2799, 0.52 ) }
    dend_12 { pt3dadd( 40.9165, -73.6388, 48.0198, 0.22 ) }
    dend_12 { pt3dadd( 41.0056, -74.2546, 48.6586, 0.22 ) }
    dend_12 { pt3dadd( 41.0146, -74.6561, 49.0567, 0.22 ) }
    dend_12 { pt3dadd( 40.9688, -74.912, 49.3513, 0.52 ) }
    dend_12 { pt3dadd( 40.8277, -75.216, 49.7946, 0.81 ) }
    dend_12 { pt3dadd( 40.3245, -75.7474, 50.9362, 0.22 ) }
    dend_12 { pt3dadd( 39.9411, -75.9824, 51.7363, 1.47 ) }
    dend_12 { pt3dadd( 39.684, -76.0762, 52.2761, 1.92 ) }
    dend_12 { pt3dadd( 39.1286, -76.1749, 53.5069, 0.44 ) }
    dend_12 { pt3dadd( 38.874, -76.1684, 54.0978, 0.22 ) }
    dend_12 { pt3dadd( 38.5932, -76.068, 54.7841, 0.81 ) }
    dend_12 { pt3dadd( 38.1686, -75.7723, 55.8912, 0.22 ) }
    dend_12 { pt3dadd( 37.9567, -75.5954, 56.4632, 0.22 ) }
    dend_12 { pt3dadd( 37.8533, -75.5071, 56.7661, 0.22 ) }
    dend_12 { pt3dadd( 37.6652, -75.3752, 57.3476, 0.59 ) }
    dend_12 { pt3dadd( 37.2872, -75.1782, 58.5935, 0.37 ) }
    dend_12 { pt3dadd( 37.0637, -75.0946, 59.405, 0.37 ) }
    dend_12 { pt3dadd( 36.9257, -75.035, 60.115, 0.37 ) }
    dend_12 { pt3dadd( 36.8788, -75.0008, 60.6941, 0.37 ) }
    dend_12 { pt3dadd( 36.916, -75.0294, 61.4439, 0.37 ) }
    dend_12 { pt3dadd( 37.0199, -75.1425, 61.9998, 0.37 ) }
    dend_12 { pt3dadd( 37.145, -75.2977, 62.4825, 0.37 ) }
    dend_12 { pt3dadd( 37.3113, -75.4642, 63.1103, 0.37 ) }
    dend_12 { pt3dadd( 37.3449, -75.4934, 63.8122, 0.37 ) }
    dend_12 { pt3dadd( 37.115, -75.4736, 64.523, 0.37 ) }
    dend_12 { pt3dadd( 36.7077, -75.4199, 65.2033, 0.37 ) }
    dend_12 { pt3dadd( 36.2519, -75.3184, 65.7608, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( 35.9871, -75.2421, 66.015, 0.37 ) }
    dend_12 { pt3dadd( 34.8851, -74.8029, 66.9444, 0.29 ) }
    dend_12 { pt3dadd( 33.7733, -74.1597, 67.8056, 0.22 ) }
    dend_12 { pt3dadd( 33.4224, -73.9207, 68.0643, 0.22 ) }
    dend_12 { pt3dadd( 32.7271, -73.4009, 68.6066, 0.15 ) }
    dend_12 { pt3dadd( 32.2533, -73.0404, 69.0206, 0.59 ) }
    dend_12 { pt3dadd( 31.8134, -72.7061, 69.4299, 0.29 ) }
    dend_12 { pt3dadd( 31.4273, -72.4304, 69.83, 0.88 ) }
    dend_12 { pt3dadd( 30.8166, -72.033, 70.5468, 0.96 ) }
    dend_12 { pt3dadd( 29.9241, -71.5855, 71.5749, 0.22 ) }
    dend_12 { pt3dadd( 29.3802, -71.3867, 72.1843, 1.33 ) }
    dend_12 { pt3dadd( 29.013, -71.2885, 72.5814, 1.4 ) }
    dend_12 { pt3dadd( 28.1012, -71.1399, 73.5031, 0.15 ) }
    dend_12 { pt3dadd( 27.8578, -71.1294, 73.7582, 0.15 ) }
    dend_12 { pt3dadd( 27.5354, -71.1421, 74.1148, 0.15 ) }
    dend_12 { pt3dadd( 27.2963, -71.1796, 74.3819, 0.15 ) }
    dend_12 { pt3dadd( 27.1402, -71.2061, 74.5643, 0.81 ) }
    dend_12 { pt3dadd( 26.9065, -71.2104, 74.8553, 0.81 ) }
    dend_12 { pt3dadd( 26.1418, -71.106, 75.8705, 0.22 ) }
    dend_12 { pt3dadd( 25.7153, -70.9789, 76.4274, 0.22 ) }
    dend_12 { pt3dadd( 25.3034, -70.8162, 76.9501, 1.11 ) }
    dend_12 { pt3dadd( 24.9021, -70.6172, 77.4386, 1.62 ) }
    dend_12 { pt3dadd( 23.9981, -70.075, 78.4615, 0.22 ) }
    dend_12 { pt3dadd( 23.4641, -69.6846, 79.0083, 1.11 ) }
    dend_12 { pt3dadd( 22.734, -69.0781, 79.6473, 0.22 ) }
    dend_12 { pt3dadd( 22.214, -68.6428, 80.0511, 0.22 ) }
    dend_12 { pt3dadd( 21.9537, -68.4209, 80.2348, 1.03 ) }
    dend_12 { pt3dadd( 21.4401, -67.9848, 80.5556, 1.03 ) }
    dend_12 { pt3dadd( 20.7283, -67.3839, 80.9389, 0.22 ) }
    dend_12 { pt3dadd( 20.0139, -66.7561, 81.2817, 0.52 ) }
    dend_12 { pt3dadd( 19.2334, -66.0188, 81.6414, 0.15 ) }
    dend_12 { pt3dadd( 18.9528, -65.7246, 81.7642, 0.15 ) }
    dend_12 { pt3dadd( 18.7564, -65.4862, 81.8659, 0.52 ) }
    dend_12 { pt3dadd( 18.4898, -65.1191, 82.0201, 1.18 ) }
    dend_12 { pt3dadd( 17.7478, -63.9612, 82.4904, 0.22 ) }
    dend_12 { pt3dadd( 17.4153, -63.3254, 82.6811, 1.03 ) }
    dend_12 { pt3dadd( 17.2316, -62.9028, 82.7657, 1.99 ) }
    dend_12 { pt3dadd( 16.5888, -61.198, 82.9827, 0.29 ) }
    dend_12 { pt3dadd( 16.4337, -60.7222, 82.9957, 0.96 ) }
    dend_12 { pt3dadd( 16.2329, -59.9977, 82.9406, 1.7 ) }
    dend_12 { pt3dadd( 15.9351, -58.5094, 82.645, 0.22 ) }
    dend_12 { pt3dadd( 15.8299, -57.8057, 82.4201, 0.22 ) }
    dend_12 { pt3dadd( 15.7737, -57.2295, 82.1608, 0.96 ) }
    dend_12 { pt3dadd( 15.7576, -56.2535, 81.579, 0.07 ) }
    dend_12 { pt3dadd( 15.7804, -55.6682, 81.1856, 0.74 ) }
    dend_12 { pt3dadd( 15.869, -54.9034, 80.6049, 0.22 ) }
    dend_12 { pt3dadd( 16.0411, -54.1567, 80.0017, 0.22 ) }
    dend_12 { pt3dadd( 16.3546, -53.5248, 79.4482, 0.66 ) }
    dend_12 { pt3dadd( 16.9582, -52.7613, 78.7282, 0.07 ) }
    dend_12 { pt3dadd( 17.428, -52.3516, 78.3144, 0.22 ) }
    dend_12 { pt3dadd( 18.1275, -51.886, 77.837, 0.07 ) }
    dend_12 { pt3dadd( 18.8589, -51.4796, 77.4055, 1.11 ) }
    dend_12 { pt3dadd( 20.9124, -50.5289, 76.4115, 0.07 ) }
    dend_12 { pt3dadd( 21.4011, -50.339, 76.2185, 0.07 ) }
    dend_12 { pt3dadd( 21.7615, -50.2234, 76.1057, 0.29 ) }
    dend_12 { pt3dadd( 22.7527, -49.9338, 75.8668, 0.07 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 56/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 36.5024, 16.4925, 41.3134, 0.22 ) }
    dend_7 { pt3dadd( 36.8478, 17.0274, 42.2574, 0.22 ) }
    dend_7 { pt3dadd( 37.2096, 17.4354, 43.1015, 0.22 ) }
    dend_7 { pt3dadd( 37.5412, 17.7317, 43.7878, 0.52 ) }
    dend_7 { pt3dadd( 38.0238, 18.1147, 44.6928, 1.7 ) }
    dend_7 { pt3dadd( 38.4866, 18.3972, 45.415, 2.06 ) }
    dend_7 { pt3dadd( 39.495, 18.8955, 46.8631, 0.52 ) }
    dend_7 { pt3dadd( 40.2596, 19.2202, 47.9038, 0.66 ) }
    dend_7 { pt3dadd( 40.9574, 19.4963, 48.7987, 2.14 ) }
    dend_7 { pt3dadd( 41.3706, 19.6614, 49.3159, 2.65 ) }
    dend_7 { pt3dadd( 42.8216, 20.2817, 51.1117, 0.29 ) }
    dend_7 { pt3dadd( 43.4684, 20.5543, 51.9655, 0.22 ) }
    dend_7 { pt3dadd( 44.1785, 20.8384, 52.9456, 0.22 ) }
    dend_7 { pt3dadd( 44.7298, 21.0298, 53.7432, 1.25 ) }
    dend_7 { pt3dadd( 45.5456, 21.275, 54.9713, 0.15 ) }
    dend_7 { pt3dadd( 46.3128, 21.4907, 56.1435, 0.81 ) }
    dend_7 { pt3dadd( 47.2423, 21.7762, 57.4609, 1.4 ) }
    dend_7 { pt3dadd( 47.9066, 21.9775, 58.267, 2.21 ) }
    dend_7 { pt3dadd( 49.6079, 22.4373, 60.0124, 0.22 ) }
    dend_7 { pt3dadd( 50.4302, 22.6384, 60.7276, 0.88 ) }
    dend_7 { pt3dadd( 51.192, 22.8163, 61.2856, 1.18 ) }
    dend_7 { pt3dadd( 52.7777, 23.2343, 62.2325, 0.22 ) }
    dend_7 { pt3dadd( 53.4939, 23.4658, 62.5694, 0.59 ) }
    dend_7 { pt3dadd( 54.1527, 23.7102, 62.8162, 1.11 ) }
    dend_7 { pt3dadd( 55.2208, 24.1256, 63.1324, 0.15 ) }
    dend_7 { pt3dadd( 55.6469, 24.2892, 63.2688, 0.15 ) }
    dend_7 { pt3dadd( 56.0369, 24.4546, 63.4381, 0.15 ) }
    dend_7 { pt3dadd( 56.3916, 24.6212, 63.6566, 0.37 ) }
    dend_7 { pt3dadd( 56.8864, 24.9009, 64.066, 0.66 ) }
    dend_7 { pt3dadd( 58.0094, 25.5999, 65.1536, 0.15 ) }
    dend_7 { pt3dadd( 58.7951, 26.1003, 66.021, 1.62 ) }
    dend_7 { pt3dadd( 59.5981, 26.5814, 66.9649, 0.29 ) }
    dend_7 { pt3dadd( 60.4482, 27.0473, 68.0207, 1.18 ) }
    dend_7 { pt3dadd( 61.6292, 27.6024, 69.5451, 0.22 ) }
    dend_7 { pt3dadd( 62.4314, 27.9094, 70.5964, 0.52 ) }
    dend_7 { pt3dadd( 63.4372, 28.2006, 71.8855, 1.25 ) }
    dend_7 { pt3dadd( 64.2356, 28.3658, 72.902, 2.14 ) }
    dend_7 { pt3dadd( 65.6018, 28.4966, 74.6092, 0.59 ) }
    dend_7 { pt3dadd( 66.4765, 28.503, 75.6879, 0.59 ) }
    dend_7 { pt3dadd( 67.3421, 28.4471, 76.7115, 0.22 ) }
    dend_7 { pt3dadd( 68.3461, 28.3693, 77.8961, 1.55 ) }
    dend_7 { pt3dadd( 68.8437, 28.3452, 78.4863, 1.55 ) }
    dend_7 { pt3dadd( 70.1458, 28.4007, 80.1084, 0.22 ) }
    dend_7 { pt3dadd( 70.5359, 28.4633, 80.6319, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_7 { pt3dadd( 71.0641, 28.6376, 81.3166, 0.22 ) }
    dend_7 { pt3dadd( 71.5662, 28.8701, 81.9965, 0.96 ) }
    dend_7 { pt3dadd( 72.0969, 29.2144, 82.7476, 1.25 ) }
    dend_7 { pt3dadd( 73.0066, 29.9967, 84.0433, 0.22 ) }
    dend_7 { pt3dadd( 73.6867, 30.786, 85.0047, 0.22 ) }
    dend_7 { pt3dadd( 74.4323, 31.6757, 86.0458, 2.73 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 6/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 36.5024, 16.4925, 41.3134, 0.22 ) }
    dend_4 { pt3dadd( 36.9794, 15.2945, 41.8018, 0.22 ) }
    dend_4 { pt3dadd( 37.2148, 14.7704, 41.9765, 0.37 ) }
    dend_4 { pt3dadd( 37.6199, 13.9801, 42.2299, 0.66 ) }
    dend_4 { pt3dadd( 38.0847, 13.1016, 42.5786, 0.66 ) }
    dend_4 { pt3dadd( 38.5026, 12.3208, 42.956, 0.15 ) }
    dend_4 { pt3dadd( 38.8508, 11.6629, 43.3244, 1.47 ) }
    dend_4 { pt3dadd( 39.3016, 10.7826, 43.8035, 3.24 ) }
    dend_4 { pt3dadd( 39.5969, 10.2365, 44.1296, 3.24 ) }
    dend_4 { pt3dadd( 40.5597, 8.61543, 45.2315, 0.29 ) }
    dend_4 { pt3dadd( 40.9393, 7.99239, 45.7142, 0.44 ) }
    dend_4 { pt3dadd( 41.4242, 7.17336, 46.3969, 2.14 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 18/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -3.27893, 35.6453, 24.8904, 0.22 ) }
    dend_60 { pt3dadd( -4.34435, 36.262, 25.4794, 0.22 ) }
    dend_60 { pt3dadd( -4.85108, 36.5571, 25.7548, 1.55 ) }
    dend_60 { pt3dadd( -5.58369, 36.9386, 26.0749, 3.1 ) }
    dend_60 { pt3dadd( -6.96638, 37.5981, 26.5759, 0.15 ) }
    dend_60 { pt3dadd( -7.46418, 37.8156, 26.7251, 0.66 ) }
    dend_60 { pt3dadd( -8.30091, 38.1502, 26.9407, 0.15 ) }
    dend_60 { pt3dadd( -8.96689, 38.3574, 27.0561, 1.18 ) }
    dend_60 { pt3dadd( -10.2296, 38.6567, 27.2022, 0.07 ) }
    dend_60 { pt3dadd( -10.9457, 38.7783, 27.2557, 0.07 ) }
    dend_60 { pt3dadd( -11.5385, 38.8538, 27.2817, 0.07 ) }
    dend_60 { pt3dadd( -12.1859, 38.9132, 27.3193, 0.96 ) }
    dend_60 { pt3dadd( -13.432, 38.9944, 27.4215, 0.15 ) }
    dend_60 { pt3dadd( -14.3893, 39.0618, 27.5392, 0.15 ) }
    dend_60 { pt3dadd( -14.9469, 39.1116, 27.6569, 1.03 ) }
    dend_60 { pt3dadd( -15.5146, 39.1617, 27.8083, 1.99 ) }
    dend_60 { pt3dadd( -16.5722, 39.2514, 28.2005, 0.15 ) }
    dend_60 { pt3dadd( -17.0134, 39.2811, 28.4013, 0.15 ) }
    dend_60 { pt3dadd( -17.3173, 39.2917, 28.5653, 0.15 ) }
    dend_60 { pt3dadd( -17.7932, 39.2935, 28.8559, 0.88 ) }
    dend_60 { pt3dadd( -18.3739, 39.2613, 29.2144, 1.62 ) }
    dend_60 { pt3dadd( -19.5853, 39.1354, 29.9828, 0.15 ) }
    dend_60 { pt3dadd( -20.0507, 39.0651, 30.2823, 0.15 ) }
    dend_60 { pt3dadd( -20.5738, 38.9674, 30.6105, 0.44 ) }
    dend_60 { pt3dadd( -21.1616, 38.8249, 30.9616, 0.15 ) }
    dend_60 { pt3dadd( -21.9561, 38.5956, 31.4629, 0.22 ) }
    dend_60 { pt3dadd( -22.6949, 38.3439, 31.9596, 0.15 ) }
    dend_60 { pt3dadd( -22.8649, 38.2726, 32.084, 0.74 ) }
    dend_60 { pt3dadd( -23.4572, 37.9961, 32.5589, 1.25 ) }
    dend_60 { pt3dadd( -24.3777, 37.5304, 33.3546, 0.22 ) }
    dend_60 { pt3dadd( -25.1588, 37.0935, 34.0865, 1.11 ) }
    dend_60 { pt3dadd( -25.5007, 36.8758, 34.4295, 1.84 ) }
    dend_60 { pt3dadd( -26.1885, 36.2944, 35.2072, 0.15 ) }
    dend_60 { pt3dadd( -26.3986, 36.0626, 35.4835, 0.15 ) }
    dend_60 { pt3dadd( -26.6032, 35.8012, 35.7822, 0.15 ) }
    dend_60 { pt3dadd( -26.7379, 35.6032, 35.997, 0.81 ) }
    dend_60 { pt3dadd( -27.0962, 35.0002, 36.5471, 2.14 ) }
    dend_60 { pt3dadd( -27.601, 33.8864, 37.4931, 0.22 ) }
    dend_60 { pt3dadd( -27.7743, 33.2837, 37.9378, 1.47 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 57/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -3.27893, 35.6453, 24.8904, 0.22 ) }
    dend_57 { pt3dadd( -3.61664, 37.0813, 26.6202, 0.22 ) }
    dend_57 { pt3dadd( -3.90235, 38.1247, 27.8028, 0.22 ) }
    dend_57 { pt3dadd( -4.37397, 39.6317, 29.472, 0.37 ) }
    dend_57 { pt3dadd( -4.58807, 40.2233, 30.1523, 0.37 ) }
    dend_57 { pt3dadd( -4.86945, 40.9376, 30.9954, 0.96 ) }
    dend_57 { pt3dadd( -5.14157, 41.6243, 31.796, 0.15 ) }
    dend_57 { pt3dadd( -5.27307, 41.9622, 32.1667, 0.15 ) }
    dend_57 { pt3dadd( -5.36585, 42.1541, 32.3836, 0.22 ) }
    dend_57 { pt3dadd( -5.75889, 42.7784, 33.0944, 0.15 ) }
    dend_57 { pt3dadd( -6.08264, 43.2599, 33.6993, 1.03 ) }
    dend_57 { pt3dadd( -6.47316, 43.9103, 34.5588, 1.99 ) }
    dend_57 { pt3dadd( -6.92879, 44.968, 35.9268, 0.22 ) }
    dend_57 { pt3dadd( -7.1269, 45.7122, 36.7502, 0.15 ) }
    dend_57 { pt3dadd( -7.17185, 46.0408, 37.0714, 0.15 ) }
    dend_57 { pt3dadd( -7.19609, 46.7301, 37.6664, 1.18 ) }
    dend_57 { pt3dadd( -7.17057, 47.8067, 38.5288, 0.15 ) }
    dend_57 { pt3dadd( -7.13112, 48.4539, 39.0339, 0.52 ) }
    dend_57 { pt3dadd( -7.06797, 49.3432, 39.6841, 0.22 ) }
    dend_57 { pt3dadd( -7.03413, 50.2112, 40.3223, 1.33 ) }
    dend_57 { pt3dadd( -7.05809, 51.1703, 41.0883, 2.88 ) }
    dend_57 { pt3dadd( -7.26536, 52.8516, 42.587, 0.22 ) }
    dend_57 { pt3dadd( -7.44017, 53.4541, 43.1946, 0.22 ) }
    dend_57 { pt3dadd( -7.7084, 54.0966, 43.9148, 0.74 ) }
    dend_57 { pt3dadd( -8.05103, 54.7933, 44.7858, 0.15 ) }
    dend_57 { pt3dadd( -8.33996, 55.346, 45.5141, 0.15 ) }
    dend_57 { pt3dadd( -8.58704, 55.7935, 46.1763, 0.15 ) }
    dend_57 { pt3dadd( -8.82557, 56.253, 47.0481, 0.74 ) }
    dend_57 { pt3dadd( -8.95576, 56.6484, 47.9474, 0.74 ) }
    dend_57 { pt3dadd( -8.95153, 56.8563, 48.6991, 0.74 ) }
    dend_57 { pt3dadd( -8.87458, 56.9721, 49.4863, 0.74 ) }
    dend_57 { pt3dadd( -8.84795, 56.9903, 49.7927, 0.74 ) }
    dend_57 { pt3dadd( -8.76691, 57.007, 51.0546, 0.74 ) }
    dend_57 { pt3dadd( -8.73102, 57.0004, 51.49, 0.74 ) }
    dend_57 { pt3dadd( -8.62686, 56.9776, 52.6703, 0.74 ) }
    dend_57 { pt3dadd( -8.52048, 57.0029, 53.4227, 0.74 ) }
    dend_57 { pt3dadd( -8.20534, 57.1743, 54.8074, 0.96 ) }
    dend_57 { pt3dadd( -7.88038, 57.4002, 55.7868, 0.96 ) }
    dend_57 { pt3dadd( -7.59272, 57.639, 56.4554, 0.96 ) }
    dend_57 { pt3dadd( -7.14351, 58.0185, 57.3631, 0.96 ) }
    dend_57 { pt3dadd( -6.54822, 58.5546, 58.4596, 0.66 ) }
    dend_57 { pt3dadd( -5.91951, 59.1375, 59.5636, 0.88 ) }
    dend_57 { pt3dadd( -5.30441, 59.7863, 60.7607, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_57 { pt3dadd( -4.73507, 60.5485, 62.1684, 0.37 ) }
    dend_57 { pt3dadd( -4.54868, 60.92, 62.8223, 0.37 ) }
    dend_57 { pt3dadd( -4.31818, 61.6327, 63.9371, 1.4 ) }
    dend_57 { pt3dadd( -4.23719, 62.0391, 64.5162, 1.62 ) }
    dend_57 { pt3dadd( -4.09224, 63.084, 65.8275, 0.44 ) }
    dend_57 { pt3dadd( -4.00214, 63.8171, 66.6412, 0.44 ) }
    dend_57 { pt3dadd( -3.86704, 64.6135, 67.4047, 1.18 ) }
    dend_57 { pt3dadd( -3.60143, 65.7509, 68.3591, 0.22 ) }
    dend_57 { pt3dadd( -3.40931, 66.3437, 68.7944, 0.22 ) }
    dend_57 { pt3dadd( -3.12067, 67.0553, 69.2585, 1.25 ) }
    dend_57 { pt3dadd( -2.78464, 67.8066, 69.7171, 1.92 ) }
    dend_57 { pt3dadd( -2.10126, 69.3936, 70.7746, 0.15 ) }
    dend_57 { pt3dadd( -1.8616, 70.0086, 71.2487, 0.88 ) }
    dend_57 { pt3dadd( -1.6251, 70.765, 71.9064, 1.92 ) }
    dend_57 { pt3dadd( -1.27712, 72.2384, 73.3566, 0.22 ) }
    dend_57 { pt3dadd( -1.13565, 73.006, 74.2336, 0.74 ) }
    dend_57 { pt3dadd( -0.976714, 74.0223, 75.5309, 1.7 ) }
    dend_57 { pt3dadd( -0.848755, 74.752, 76.5602, 0.07 ) }
    dend_57 { pt3dadd( -0.748354, 75.1245, 77.1013, 0.96 ) }
    dend_57 { pt3dadd( -0.414693, 76.0776, 78.5396, 0.07 ) }
    dend_57 { pt3dadd( -0.132285, 76.678, 79.4619, 0.07 ) }
    dend_57 { pt3dadd( 0.154543, 77.1364, 80.145, 0.07 ) }
    dend_57 { pt3dadd( 0.709161, 77.8275, 81.2361, 0.37 ) }
    dend_57 { pt3dadd( 1.26236, 78.4048, 82.3438, 0.59 ) }
    dend_57 { pt3dadd( 1.55869, 78.6864, 82.9951, 0.59 ) }
    dend_57 { pt3dadd( 1.76929, 78.8793, 83.5654, 0.59 ) }
    dend_57 { pt3dadd( 1.85209, 78.9883, 83.9212, 0.59 ) }
    dend_57 { pt3dadd( 2.00151, 79.444, 85.2464, 0.15 ) }
    dend_57 { pt3dadd( 2.02844, 79.8436, 86.1331, 0.07 ) }
    dend_57 { pt3dadd( 2.06046, 80.1801, 86.6855, 0.07 ) }
    dend_57 { pt3dadd( 2.09169, 80.5055, 87.1323, 0.07 ) }
    dend_57 { pt3dadd( 2.10402, 81.0641, 87.8242, 0.88 ) }
    dend_57 { pt3dadd( 2.07946, 81.9599, 88.9389, 0.22 ) }
    dend_57 { pt3dadd( 2.04014, 82.6948, 89.9711, 0.22 ) }
    dend_57 { pt3dadd( 1.9738, 83.3286, 91.0296, 1.62 ) }
    dend_57 { pt3dadd( 1.84886, 83.8688, 92.2062, 2.21 ) }
    dend_57 { pt3dadd( 1.59495, 84.5562, 94.2812, 0.37 ) }
    dend_57 { pt3dadd( 1.43679, 84.8635, 95.7242, 0.37 ) }
    dend_57 { pt3dadd( 1.25549, 85.0596, 97.8883, 1.33 ) }
    dend_57 { pt3dadd( 1.24229, 85.0361, 98.5891, 1.77 ) }
    dend_57 { pt3dadd( 1.35253, 84.8135, 100.094, 0.29 ) }
    dend_57 { pt3dadd( 1.5633, 84.4671, 101.386, 0.29 ) }
    dend_57 { pt3dadd( 1.75045, 84.0849, 102.443, 0.59 ) }
    dend_57 { pt3dadd( 1.91142, 83.6648, 103.527, 1.18 ) }
    dend_57 { pt3dadd( 2.09955, 82.9963, 105.284, 0.37 ) }
    dend_57 { pt3dadd( 2.22607, 82.3084, 107.127, 1.03 ) }
    dend_57 { pt3dadd( 2.22618, 81.7609, 108.591, 1.4 ) }
    dend_57 { pt3dadd( 1.94828, 80.666, 111.471, 0.07 ) }
    dend_57 { pt3dadd( 1.68416, 80.1726, 112.775, 0.59 ) }
    dend_57 { pt3dadd( 1.24079, 79.7424, 114.019, 0.15 ) }
    dend_57 { pt3dadd( 0.834246, 79.509, 114.757, 0.15 ) }
    dend_57 { pt3dadd( 0.106782, 79.2054, 115.769, 0.15 ) }
    dend_57 { pt3dadd( -0.273581, 79.0865, 116.22, 1.03 ) }
    dend_57 { pt3dadd( -0.693623, 78.9728, 116.63, 1.4 ) }
    dend_57 { pt3dadd( -2.25697, 78.5689, 118.04, 0.15 ) }
    dend_57 { pt3dadd( -2.82683, 78.431, 118.56, 0.15 ) }
    dend_57 { pt3dadd( -3.8038, 78.1907, 119.556, 0.15 ) }
    dend_57 { pt3dadd( -4.27658, 78.0588, 120.109, 1.11 ) }
    dend_57 { pt3dadd( -4.70414, 77.9272, 120.673, 1.62 ) }
    dend_57 { pt3dadd( -5.6777, 77.6114, 122.12, 0.29 ) }
    dend_57 { pt3dadd( -6.2503, 77.4313, 123.065, 0.07 ) }
    dend_57 { pt3dadd( -6.80573, 77.3192, 123.95, 0.07 ) }
    dend_57 { pt3dadd( -7.15598, 77.2757, 124.495, 0.88 ) }
    dend_57 { pt3dadd( -7.96171, 77.2172, 125.806, 0.07 ) }
    dend_57 { pt3dadd( -8.34021, 77.2201, 126.47, 0.22 ) }
    dend_57 { pt3dadd( -8.96287, 77.3105, 127.657, 0.07 ) }
    dend_57 { pt3dadd( -9.42395, 77.4328, 128.472, 1.77 ) }
    // Section: dend_51, id: dend_51, parent: dend_39 (entry count 67/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 2.16789, 30.7849, 15.7735, 0.52 ) }
    dend_51 { pt3dadd( 3.82459, 30.585, 12.8048, 0.52 ) }
    dend_51 { pt3dadd( 4.26078, 30.482, 12.1291, 2.21 ) }
    dend_51 { pt3dadd( 5.07811, 30.2087, 10.9658, 2.88 ) }
    dend_51 { pt3dadd( 6.49723, 29.6042, 9.04796, 0.96 ) }
    dend_51 { pt3dadd( 7.51587, 29.0609, 7.64696, 0.15 ) }
    dend_51 { pt3dadd( 8.05974, 28.7009, 6.82588, 0.59 ) }
    dend_51 { pt3dadd( 8.65225, 28.2079, 6.07283, 0.15 ) }
    dend_51 { pt3dadd( 9.04693, 27.8213, 5.56857, 0.22 ) }
    dend_51 { pt3dadd( 9.34247, 27.4364, 5.15895, 0.22 ) }
    dend_51 { pt3dadd( 9.80536, 26.5611, 4.32404, 0.22 ) }
    dend_51 { pt3dadd( 10.3132, 25.2795, 3.21035, 1.11 ) }
    dend_51 { pt3dadd( 10.5259, 24.5552, 2.62465, 2.29 ) }
    dend_51 { pt3dadd( 10.6251, 24.0899, 2.26227, 2.58 ) }
    dend_51 { pt3dadd( 10.8689, 22.5856, 1.13838, 0.15 ) }
    dend_51 { pt3dadd( 10.9786, 21.6706, 0.535779, 0.15 ) }
    dend_51 { pt3dadd( 11.0327, 20.8153, 0.0997963, 0.29 ) }
    dend_51 { pt3dadd( 11.0414, 20.1782, -0.155224, 1.03 ) }
    dend_51 { pt3dadd( 11.0265, 19.5131, -0.395829, 1.99 ) }
    dend_51 { pt3dadd( 11.0177, 19.0291, -0.550626, 2.29 ) }
    dend_51 { pt3dadd( 11.0334, 17.4278, -0.928134, 0.44 ) }
    dend_51 { pt3dadd( 11.1027, 16.2959, -1.15273, 0.29 ) }
    dend_51 { pt3dadd( 11.1672, 15.6875, -1.25298, 0.44 ) }
    dend_51 { pt3dadd( 11.2487, 15.1056, -1.33754, 0.52 ) }
    dend_51 { pt3dadd( 11.4346, 14.059, -1.44727, 0.22 ) }
    dend_51 { pt3dadd( 11.5969, 13.3647, -1.50166, 0.22 ) }
    dend_51 { pt3dadd( 11.811, 12.619, -1.52691, 1.33 ) }
    dend_51 { pt3dadd( 12.0456, 11.8943, -1.53321, 2.29 ) }
    dend_51 { pt3dadd( 12.2386, 11.2948, -1.51958, 2.29 ) }
    dend_51 { pt3dadd( 12.7923, 9.6284, -1.44586, 0.15 ) }
    dend_51 { pt3dadd( 13.0191, 8.92036, -1.40093, 0.15 ) }
    dend_51 { pt3dadd( 13.1964, 8.34882, -1.36774, 0.15 ) }
    dend_51 { pt3dadd( 13.3599, 7.79951, -1.33165, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_51 { pt3dadd( 13.6018, 6.93439, -1.29252, 1.33 ) }
    dend_51 { pt3dadd( 13.7596, 6.25784, -1.31285, 1.03 ) }
    dend_51 { pt3dadd( 13.9939, 4.80758, -1.49158, 0.22 ) }
    dend_51 { pt3dadd( 14.0729, 4.10742, -1.62753, 0.22 ) }
    dend_51 { pt3dadd( 14.12, 3.42206, -1.80845, 0.66 ) }
    dend_51 { pt3dadd( 14.1699, 2.43317, -2.11347, 0.22 ) }
    dend_51 { pt3dadd( 14.178, 1.15557, -2.54432, 0.29 ) }
    dend_51 { pt3dadd( 14.1725, 0.341488, -2.81006, 0.59 ) }
    dend_51 { pt3dadd( 14.1598, -0.27896, -3.03399, 1.33 ) }
    dend_51 { pt3dadd( 14.1212, -1.17124, -3.36552, 2.14 ) }
    dend_51 { pt3dadd( 14.0367, -2.7057, -3.94524, 0.22 ) }
    dend_51 { pt3dadd( 13.98, -3.75798, -4.30634, 0.22 ) }
    dend_51 { pt3dadd( 13.9723, -4.64913, -4.50673, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 2.16789, 30.7849, 15.7735, 0.52 ) }
    dend_40 { pt3dadd( 2.4541, 31.5609, 17.2037, 0.52 ) }
    dend_40 { pt3dadd( 2.81632, 32.0137, 18.4773, 0.52 ) }
    dend_40 { pt3dadd( 3.37864, 32.3567, 20.084, 0.52 ) }
    dend_40 { pt3dadd( 3.70896, 32.4323, 20.925, 0.52 ) }
    dend_40 { pt3dadd( 4.5488, 32.5219, 22.8699, 0.81 ) }
    dend_40 { pt3dadd( 5.21326, 32.595, 24.287, 1.18 ) }
    dend_40 { pt3dadd( 6.21984, 32.5661, 26.0365, 0.96 ) }
    dend_40 { pt3dadd( 6.99197, 32.4901, 27.2468, 1.25 ) }
    dend_40 { pt3dadd( 7.86479, 32.3461, 28.5208, 0.37 ) }
    dend_40 { pt3dadd( 8.4168, 32.2775, 29.2411, 0.37 ) }
    dend_40 { pt3dadd( 9.10616, 32.2006, 30.0888, 0.15 ) }
    dend_40 { pt3dadd( 9.97852, 32.1601, 31.073, 0.15 ) }
    dend_40 { pt3dadd( 10.9915, 32.2841, 32.0997, 1.18 ) }
    dend_40 { pt3dadd( 11.5968, 32.4463, 32.7054, 2.43 ) }
    dend_40 { pt3dadd( 12.6606, 32.7894, 33.7042, 2.65 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 29/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -11.6304, 101.23, 6.3643, 0.59 ) }
    dend_37 { pt3dadd( -11.8834, 102.341, 6.24039, 0.59 ) }
    dend_37 { pt3dadd( -12.1644, 103.319, 6.10647, 0.29 ) }
    dend_37 { pt3dadd( -12.4723, 104.239, 5.97077, 0.96 ) }
    dend_37 { pt3dadd( -12.7293, 104.938, 5.87239, 0.07 ) }
    dend_37 { pt3dadd( -13.0453, 105.688, 5.77369, 0.07 ) }
    dend_37 { pt3dadd( -13.2332, 106.114, 5.72123, 0.22 ) }
    dend_37 { pt3dadd( -13.5171, 106.628, 5.66608, 0.88 ) }
    dend_37 { pt3dadd( -13.6848, 106.933, 5.64567, 1.47 ) }
    dend_37 { pt3dadd( -14.1082, 107.8, 5.55815, 0.07 ) }
    dend_37 { pt3dadd( -14.3242, 108.378, 5.46486, 0.07 ) }
    dend_37 { pt3dadd( -14.4032, 108.683, 5.41813, 0.22 ) }
    dend_37 { pt3dadd( -14.4563, 108.915, 5.38771, 0.22 ) }
    dend_37 { pt3dadd( -14.5878, 109.554, 5.32141, 0.07 ) }
    dend_37 { pt3dadd( -14.6728, 110.133, 5.26489, 0.07 ) }
    dend_37 { pt3dadd( -14.7099, 110.513, 5.21593, 0.66 ) }
    dend_37 { pt3dadd( -14.7475, 110.941, 5.14039, 0.66 ) }
    dend_37 { pt3dadd( -14.8198, 111.634, 4.99341, 0.15 ) }
    dend_37 { pt3dadd( -14.8754, 112.173, 4.86756, 1.03 ) }
    dend_37 { pt3dadd( -14.9304, 112.739, 4.72728, 1.77 ) }
    dend_37 { pt3dadd( -15.0001, 113.798, 4.47023, 0.15 ) }
    dend_37 { pt3dadd( -15.0402, 114.511, 4.30716, 0.22 ) }
    dend_37 { pt3dadd( -15.0585, 114.802, 4.23727, 0.66 ) }
    dend_37 { pt3dadd( -15.0928, 115.142, 4.16798, 0.37 ) }
    dend_37 { pt3dadd( -15.1964, 115.728, 4.09076, 1.11 ) }
    dend_37 { pt3dadd( -15.3229, 116.187, 4.06891, 1.11 ) }
    dend_37 { pt3dadd( -15.7117, 117.261, 4.12195, 0.22 ) }
    dend_37 { pt3dadd( -15.9969, 117.89, 4.18642, 1.03 ) }
    dend_37 { pt3dadd( -16.3839, 118.615, 4.27383, 1.62 ) }
    dend_37 { pt3dadd( -16.7893, 119.283, 4.36997, 1.99 ) }
    dend_37 { pt3dadd( -17.1963, 119.903, 4.41935, 0.52 ) }
    dend_37 { pt3dadd( -17.7633, 120.721, 4.41165, 0.22 ) }
    dend_37 { pt3dadd( -18.333, 121.534, 4.30964, 0.22 ) }
    dend_37 { pt3dadd( -18.6133, 121.942, 4.2023, 0.88 ) }
    dend_37 { pt3dadd( -19.0093, 122.546, 3.90885, 1.55 ) }
    dend_37 { pt3dadd( -19.8043, 123.738, 3.12804, 0.15 ) }
    dend_37 { pt3dadd( -20.1181, 124.226, 2.77066, 0.22 ) }
    dend_37 { pt3dadd( -20.3787, 124.663, 2.44442, 0.07 ) }
    dend_37 { pt3dadd( -20.772, 125.385, 1.91583, 1.33 ) }
    dend_37 { pt3dadd( -21.3437, 126.473, 1.22095, 0.07 ) }
    dend_37 { pt3dadd( -21.5244, 126.826, 1.00235, 0.37 ) }
    dend_37 { pt3dadd( -21.8858, 127.545, 0.706095, 0.07 ) }
    dend_37 { pt3dadd( -22.2833, 128.362, 0.515307, 0.22 ) }
    dend_37 { pt3dadd( -22.6452, 129.127, 0.526426, 1.55 ) }
    dend_37 { pt3dadd( -22.8978, 129.758, 0.77779, 1.55 ) }
    dend_37 { pt3dadd( -24.5123, 136.525, -1.2738, 1.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 75/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -11.6304, 101.23, 6.3643, 0.22 ) }
    dend_36 { pt3dadd( -12.8067, 102.671, 6.23378, 0.22 ) }
    dend_36 { pt3dadd( -13.3442, 103.367, 6.16066, 0.07 ) }
    dend_36 { pt3dadd( -13.9291, 104.176, 6.06194, 1.11 ) }
    dend_36 { pt3dadd( -14.7831, 105.501, 5.89302, 0.07 ) }
    dend_36 { pt3dadd( -15.138, 106.131, 5.81276, 0.07 ) }
    dend_36 { pt3dadd( -15.3082, 106.468, 5.77152, 0.52 ) }
    dend_36 { pt3dadd( -15.5414, 107.127, 5.68631, 1.47 ) }
    dend_36 { pt3dadd( -15.7797, 107.97, 5.5843, 0.07 ) }
    dend_36 { pt3dadd( -15.9534, 108.722, 5.49621, 0.15 ) }
    dend_36 { pt3dadd( -16.0737, 109.457, 5.43024, 0.88 ) }
    dend_36 { pt3dadd( -16.1639, 110.17, 5.38881, 1.4 ) }
    dend_36 { pt3dadd( -16.2771, 111.293, 5.32875, 0.07 ) }
    dend_36 { pt3dadd( -16.3239, 111.827, 5.30796, 0.74 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -36.735, -109.619, -44.6679, 0.15 ) }
    dend_30 { pt3dadd( -38.3726, -117.514, -46.1904, 0.15 ) }
    dend_30 { pt3dadd( -40.1277, -125.485, -46.7103, 0.15 ) }
    dend_30 { pt3dadd( -40.9592, -133.458, -48.531, 0.15 ) }
    dend_30 { pt3dadd( -40.0355, -141.546, -49.8056, 0.15 ) }
    dend_30 { pt3dadd( -38.1241, -149.44, -51.4274, 0.15 ) }
    dend_30 { pt3dadd( -36.1081, -157.361, -52.7419, 0.15 ) }
    dend_30 { pt3dadd( -33.3693, -165.034, -54.4178, 0.15 ) }
    dend_30 { pt3dadd( -30.9177, -172.919, -55.0215, 0.15 ) }
    dend_30 { pt3dadd( -27.3502, -180.4, -55.9401, 0.15 ) }
    dend_30 { pt3dadd( -23.4665, -187.758, -56.6636, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_30 { pt3dadd( -20.3063, -195.366, -55.6883, 0.15 ) }
    dend_30 { pt3dadd( -17.5792, -203.101, -54.5926, 0.15 ) }
    dend_30 { pt3dadd( -14.7319, -210.875, -54.2828, 0.15 ) }
    dend_30 { pt3dadd( -12.3921, -218.783, -54.9836, 0.15 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 4/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -36.735, -109.619, -44.6679, 1.03 ) }
    dend_29 { pt3dadd( -37.6729, -118.23, -47.154, 0.15 ) }
    dend_29 { pt3dadd( -39.563, -126.975, -48.0943, 0.15 ) }
    dend_29 { pt3dadd( -42.3713, -135.527, -48.6186, 0.15 ) }
    dend_29 { pt3dadd( -46.492, -143.531, -47.5225, 0.15 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 9/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -7.64673, -138.883, 29.2858, 0.22 ) }
    dend_24 { pt3dadd( -7.0013, -140.376, 29.4669, 0.22 ) }
    dend_24 { pt3dadd( -6.65969, -141.317, 29.6117, 0.22 ) }
    dend_24 { pt3dadd( -6.48125, -142.014, 29.7303, 0.88 ) }
    dend_24 { pt3dadd( -6.29802, -143.031, 29.9106, 1.25 ) }
    dend_24 { pt3dadd( -6.07767, -144.593, 30.2076, 0.15 ) }
    dend_24 { pt3dadd( -5.95677, -145.774, 30.4316, 0.15 ) }
    dend_24 { pt3dadd( -5.93577, -146.727, 30.6342, 0.66 ) }
    dend_24 { pt3dadd( -5.98504, -148.143, 30.9284, 0.15 ) }
    dend_24 { pt3dadd( -6.02673, -148.786, 31.0597, 0.44 ) }
    dend_24 { pt3dadd( -6.06192, -149.253, 31.1432, 0.44 ) }
    dend_24 { pt3dadd( -6.11751, -150.557, 31.3341, 0.15 ) }
    dend_24 { pt3dadd( -6.12833, -151.503, 31.4476, 0.15 ) }
    dend_24 { pt3dadd( -6.10386, -152.229, 31.5213, 1.18 ) }
    dend_24 { pt3dadd( -6.03674, -152.955, 31.5801, 2.14 ) }
    dend_24 { pt3dadd( -5.91828, -154.038, 31.6501, 1.03 ) }
    dend_24 { pt3dadd( -5.80973, -155.084, 31.6993, 0.15 ) }
    dend_24 { pt3dadd( -5.70799, -155.905, 31.7269, 0.15 ) }
    dend_24 { pt3dadd( -5.63414, -156.557, 31.7393, 0.37 ) }
    dend_24 { pt3dadd( -5.55618, -157.37, 31.7342, 0.22 ) }
    dend_24 { pt3dadd( -5.53317, -157.805, 31.7125, 0.66 ) }
    dend_24 { pt3dadd( -5.51911, -158.387, 31.6605, 0.81 ) }
    dend_24 { pt3dadd( -5.49132, -159.623, 31.4994, 0.22 ) }
    dend_24 { pt3dadd( -5.47653, -160.223, 31.4133, 1.03 ) }
    dend_24 { pt3dadd( -5.47898, -161.299, 31.2471, 1.84 ) }
    dend_24 { pt3dadd( -5.51671, -162.859, 31.0013, 0.22 ) }
    dend_24 { pt3dadd( -5.53182, -163.368, 30.9275, 0.22 ) }
    dend_24 { pt3dadd( -5.54794, -163.962, 30.8555, 0.22 ) }
    dend_24 { pt3dadd( -5.55881, -164.545, 30.8031, 0.22 ) }
    dend_24 { pt3dadd( -5.52185, -165.401, 30.751, 0.96 ) }
    dend_24 { pt3dadd( -5.32503, -167.191, 30.6929, 0.15 ) }
    dend_24 { pt3dadd( -5.21075, -167.825, 30.6877, 0.15 ) }
    dend_24 { pt3dadd( -5.07376, -168.499, 30.6969, 0.96 ) }
    dend_24 { pt3dadd( -4.91073, -169.274, 30.7245, 1.92 ) }
    dend_24 { pt3dadd( -4.51069, -171.01, 30.8147, 0.22 ) }
    dend_24 { pt3dadd( -4.35358, -171.621, 30.8569, 0.22 ) }
    dend_24 { pt3dadd( -4.19965, -172.163, 30.8907, 0.15 ) }
    dend_24 { pt3dadd( -3.91904, -173.135, 30.9443, 0.15 ) }
    dend_24 { pt3dadd( -3.76594, -173.71, 30.9781, 0.81 ) }
    dend_24 { pt3dadd( -3.63605, -174.293, 31.0376, 1.62 ) }
    dend_24 { pt3dadd( -3.43307, -175.455, 31.2147, 0.15 ) }
    dend_24 { pt3dadd( -3.28864, -176.359, 31.3644, 0.15 ) }
    dend_24 { pt3dadd( -3.19526, -176.862, 31.4455, 0.15 ) }
    dend_24 { pt3dadd( -3.03014, -177.653, 31.5693, 0.88 ) }
    dend_24 { pt3dadd( -2.80566, -178.834, 31.7523, 0.15 ) }
    dend_24 { pt3dadd( -2.70223, -179.438, 31.8409, 0.96 ) }
    dend_24 { pt3dadd( -2.54463, -180.537, 31.9935, 2.21 ) }
    dend_24 { pt3dadd( -2.28404, -182.596, 32.2623, 0.15 ) }
    dend_24 { pt3dadd( -2.17472, -183.457, 32.358, 0.96 ) }
    dend_24 { pt3dadd( -1.91227, -185.204, 32.5498, 0.22 ) }
    dend_24 { pt3dadd( -1.7632, -186.041, 32.6355, 0.88 ) }
    dend_24 { pt3dadd( -1.67767, -186.489, 32.687, 0.88 ) }
    dend_24 { pt3dadd( -1.38097, -187.916, 32.8798, 0.07 ) }
    dend_24 { pt3dadd( -1.30754, -188.218, 32.9265, 0.29 ) }
    dend_24 { pt3dadd( -1.12497, -188.865, 33.0433, 0.29 ) }
    dend_24 { pt3dadd( -0.929922, -189.497, 33.1682, 0.15 ) }
    dend_24 { pt3dadd( -0.794408, -190.003, 33.285, 0.15 ) }
    dend_24 { pt3dadd( -0.606088, -190.83, 33.4789, 0.15 ) }
    dend_24 { pt3dadd( -0.502424, -191.408, 33.6012, 0.74 ) }
    dend_24 { pt3dadd( -0.382175, -192.224, 33.7748, 1.77 ) }
    dend_24 { pt3dadd( -0.325122, -192.739, 33.8922, 1.33 ) }
    dend_24 { pt3dadd( -0.209479, -194.013, 34.2165, 0.07 ) }
    dend_24 { pt3dadd( -0.182204, -194.434, 34.3315, 0.37 ) }
    dend_24 { pt3dadd( -0.120802, -195.739, 34.7207, 0.07 ) }
    dend_24 { pt3dadd( -0.0869062, -196.435, 34.9319, 0.59 ) }
    dend_24 { pt3dadd( -0.00642864, -197.566, 35.2641, 0.15 ) }
    dend_24 { pt3dadd( 0.0454572, -198.15, 35.4239, 0.22 ) }
    dend_24 { pt3dadd( 0.134588, -199.043, 35.6513, 1.33 ) }
    dend_24 { pt3dadd( 0.258556, -200.352, 35.9764, 0.07 ) }
    dend_24 { pt3dadd( 0.29219, -200.857, 36.0978, 0.88 ) }
    dend_24 { pt3dadd( 0.415101, -202.322, 36.4179, 0.15 ) }
    dend_24 { pt3dadd( 0.486984, -202.995, 36.5521, 0.15 ) }
    dend_24 { pt3dadd( 0.560525, -203.577, 36.6655, 0.15 ) }
    dend_24 { pt3dadd( 0.655927, -204.222, 36.7974, 0.74 ) }
    dend_24 { pt3dadd( 0.781224, -205.142, 36.997, 2.14 ) }
    dend_24 { pt3dadd( 0.9597, -206.803, 37.3853, 0.15 ) }
    dend_24 { pt3dadd( 0.97493, -207.321, 37.5071, 0.44 ) }
    dend_24 { pt3dadd( 0.92772, -208.638, 37.8149, 0.07 ) }
    dend_24 { pt3dadd( 0.868024, -209.174, 37.9426, 0.15 ) }
    dend_24 { pt3dadd( 0.751166, -209.784, 38.0943, 0.07 ) }
    dend_24 { pt3dadd( 0.549381, -210.516, 38.2879, 1.11 ) }
    dend_24 { pt3dadd( -0.0644076, -212.212, 38.7471, 0.15 ) }
    dend_24 { pt3dadd( -0.348489, -212.929, 38.9445, 1.03 ) }
    dend_24 { pt3dadd( -0.895947, -214.217, 39.2886, 0.15 ) }
    dend_24 { pt3dadd( -1.12389, -214.799, 39.4222, 0.44 ) }
    dend_24 { pt3dadd( -1.45669, -215.863, 39.62, 0.15 ) }
    dend_24 { pt3dadd( -1.64951, -216.706, 39.7461, 1.62 ) }
    dend_24 { pt3dadd( -1.70591, -217.147, 39.7918, 1.77 ) }
    dend_24 { pt3dadd( -1.73396, -217.818, 39.8238, 1.03 ) }
    dend_24 { pt3dadd( -1.68719, -219.526, 39.823, 0.15 ) }
    dend_24 { pt3dadd( -1.56759, -221.154, 39.7772, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_24 { pt3dadd( -1.50327, -221.693, 39.7548, 0.88 ) }
    dend_24 { pt3dadd( -1.3868, -222.418, 39.7413, 1.18 ) }
    dend_24 { pt3dadd( -1.01052, -224.304, 39.734, 0.07 ) }
    dend_24 { pt3dadd( -0.923098, -224.684, 39.7368, 0.15 ) }
    dend_24 { pt3dadd( -0.626702, -225.875, 39.7723, 0.07 ) }
    dend_24 { pt3dadd( -0.291792, -227.174, 39.8314, 0.15 ) }
    dend_24 { pt3dadd( -0.0206026, -228.29, 39.8967, 1.33 ) }
    dend_24 { pt3dadd( 0.397235, -230.112, 40.023, 0.15 ) }
    dend_24 { pt3dadd( 0.553834, -230.864, 40.0909, 0.22 ) }
    dend_24 { pt3dadd( 0.739173, -232.078, 40.1929, 0.07 ) }
    dend_24 { pt3dadd( 0.773683, -232.452, 40.2208, 0.22 ) }
    dend_24 { pt3dadd( 0.82268, -234.223, 40.3193, 0.07 ) }
    dend_24 { pt3dadd( 0.817747, -234.569, 40.3348, 0.81 ) }
    dend_24 { pt3dadd( 0.751776, -235.821, 40.3896, 1.92 ) }
    dend_24 { pt3dadd( 0.645032, -237.346, 40.3954, 0.15 ) }
    dend_24 { pt3dadd( 0.578835, -238.145, 40.3531, 0.88 ) }
    dend_24 { pt3dadd( 0.433437, -239.891, 40.1805, 0.15 ) }
    dend_24 { pt3dadd( 0.392588, -240.357, 40.1114, 0.44 ) }
    dend_24 { pt3dadd( 0.264079, -241.804, 39.8606, 0.07 ) }
    dend_24 { pt3dadd( 0.182302, -243.002, 39.6287, 0.07 ) }
    dend_24 { pt3dadd( 0.139236, -243.787, 39.5053, 0.15 ) }
    dend_24 { pt3dadd( 0.111705, -244.397, 39.4364, 0.74 ) }
    dend_24 { pt3dadd( 0.0906091, -244.951, 39.409, 0.74 ) }
    dend_24 { pt3dadd( 0.134514, -246.197, 39.4929, 0.07 ) }
    dend_24 { pt3dadd( 0.262805, -247.057, 39.6577, 0.07 ) }
    dend_24 { pt3dadd( 0.443124, -247.899, 39.9199, 0.07 ) }
    dend_24 { pt3dadd( 0.614299, -248.595, 40.1751, 1.25 ) }
    dend_24 { pt3dadd( 0.755523, -249.154, 40.3891, 1.99 ) }
    dend_24 { pt3dadd( 1.21708, -251.064, 41.0914, 0.15 ) }
    dend_24 { pt3dadd( 1.44696, -252.106, 41.4544, 0.96 ) }
    dend_24 { pt3dadd( 1.71913, -253.601, 41.9316, 0.07 ) }
    dend_24 { pt3dadd( 1.89088, -254.776, 42.2637, 0.07 ) }
    dend_24 { pt3dadd( 1.97276, -255.635, 42.4702, 0.81 ) }
    dend_24 { pt3dadd( 2.08611, -257.922, 42.9011, 0.15 ) }
    dend_24 { pt3dadd( 2.07888, -258.498, 42.9798, 0.29 ) }
    dend_24 { pt3dadd( 2.02254, -259.625, 43.0846, 0.07 ) }
    dend_24 { pt3dadd( 1.96059, -260.569, 43.1257, 1.47 ) }
    dend_24 { pt3dadd( 1.79334, -262.682, 43.1512, 0.07 ) }
    dend_24 { pt3dadd( 1.71084, -263.6, 43.1718, 0.07 ) }
    dend_24 { pt3dadd( 1.6247, -264.277, 43.1791, 1.11 ) }
    dend_24 { pt3dadd( 1.35128, -266.025, 43.156, 0.07 ) }
    dend_24 { pt3dadd( 1.21337, -266.764, 43.1238, 0.74 ) }
    dend_24 { pt3dadd( 1.06493, -267.434, 43.0693, 1.92 ) }
    dend_24 { pt3dadd( 0.589977, -269.267, 42.8699, 0.15 ) }
    dend_24 { pt3dadd( 0.198256, -270.671, 42.7, 0.22 ) }
    dend_24 { pt3dadd( -0.257952, -272.289, 42.5052, 0.22 ) }
    dend_24 { pt3dadd( -0.470788, -272.998, 42.4125, 0.81 ) }
    dend_24 { pt3dadd( -0.748336, -273.915, 42.2972, 1.84 ) }
    dend_24 { pt3dadd( -1.29506, -275.888, 42.1278, 0.07 ) }
    dend_24 { pt3dadd( -1.441, -276.471, 42.0971, 0.29 ) }
    dend_24 { pt3dadd( -1.71333, -277.947, 42.2092, 0.07 ) }
    dend_24 { pt3dadd( -1.86547, -278.888, 42.3456, 0.07 ) }
    dend_24 { pt3dadd( -2.01326, -279.958, 42.5569, 1.55 ) }
    dend_24 { pt3dadd( -2.17607, -281.603, 42.9858, 0.07 ) }
    dend_24 { pt3dadd( -2.20876, -282.191, 43.1723, 0.07 ) }
    dend_24 { pt3dadd( -2.23225, -283.729, 43.7097, 1.47 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -7.64673, -138.883, 29.2858, 0.22 ) }
    dend_21 { pt3dadd( -8.37419, -140.084, 30.092, 0.22 ) }
    dend_21 { pt3dadd( -8.92072, -141.244, 30.7585, 0.44 ) }
    dend_21 { pt3dadd( -9.13303, -141.799, 31.046, 0.15 ) }
    dend_21 { pt3dadd( -9.2914, -142.262, 31.2819, 0.15 ) }
    dend_21 { pt3dadd( -9.37092, -142.477, 31.3934, 0.37 ) }
    dend_21 { pt3dadd( -9.63851, -143.098, 31.7208, 0.44 ) }
    dend_21 { pt3dadd( -9.89736, -143.626, 31.9891, 0.15 ) }
    dend_21 { pt3dadd( -10.0173, -143.839, 32.1221, 0.22 ) }
    dend_21 { pt3dadd( -10.2167, -144.187, 32.4084, 0.22 ) }
    dend_21 { pt3dadd( -10.4804, -144.637, 32.8432, 0.22 ) }
    dend_21 { pt3dadd( -10.7111, -145.048, 33.274, 0.81 ) }
    dend_21 { pt3dadd( -11.0893, -145.796, 34.0735, 0.22 ) }
    dend_21 { pt3dadd( -11.4615, -146.657, 34.9757, 0.96 ) }
    dend_21 { pt3dadd( -11.7798, -147.516, 35.8254, 2.21 ) }
    dend_21 { pt3dadd( -12.3005, -149.224, 37.389, 0.22 ) }
    dend_21 { pt3dadd( -12.4779, -149.972, 38.0434, 0.22 ) }
    dend_21 { pt3dadd( -12.5739, -150.494, 38.4743, 0.22 ) }
    dend_21 { pt3dadd( -12.6358, -150.895, 38.7752, 0.22 ) }
    dend_21 { pt3dadd( -12.7574, -151.526, 39.1878, 0.22 ) }
    dend_21 { pt3dadd( -12.8956, -152.014, 39.4917, 0.22 ) }
    dend_21 { pt3dadd( -13.0809, -152.491, 39.7931, 0.88 ) }
    dend_21 { pt3dadd( -13.371, -153.07, 40.2034, 1.4 ) }
    dend_21 { pt3dadd( -13.8542, -153.828, 40.8535, 2.14 ) }
    dend_21 { pt3dadd( -14.752, -155.041, 42.0603, 0.52 ) }
    dend_21 { pt3dadd( -15.4305, -155.862, 42.9779, 0.22 ) }
    dend_21 { pt3dadd( -15.8192, -156.297, 43.4938, 0.22 ) }
    dend_21 { pt3dadd( -16.3652, -156.851, 44.1854, 1.11 ) }
    dend_21 { pt3dadd( -17.262, -157.638, 45.2977, 1.99 ) }
    dend_21 { pt3dadd( -17.7417, -157.986, 45.8798, 1.99 ) }
    dend_21 { pt3dadd( -17.9086, -158.079, 46.0909, 1.99 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 87/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -40.5412, -127.545, 25.7296, 0.22 ) }
    dend_19 { pt3dadd( -41.3717, -128.261, 25.7222, 0.22 ) }
    dend_19 { pt3dadd( -41.8148, -128.664, 25.7233, 0.22 ) }
    dend_19 { pt3dadd( -42.2016, -129.01, 25.7207, 1.33 ) }
    dend_19 { pt3dadd( -42.9127, -129.648, 25.7105, 0.15 ) }
    dend_19 { pt3dadd( -43.1672, -129.883, 25.7065, 0.15 ) }
    dend_19 { pt3dadd( -43.3513, -130.06, 25.7039, 0.37 ) }
    dend_19 { pt3dadd( -43.6432, -130.378, 25.7219, 0.37 ) }
    dend_19 { pt3dadd( -44.063, -130.892, 25.7498, 0.22 ) }
    dend_19 { pt3dadd( -44.2505, -131.133, 25.7546, 0.15 ) }
    dend_19 { pt3dadd( -44.3887, -131.318, 25.7513, 0.15 ) }
    dend_19 { pt3dadd( -44.4874, -131.457, 25.7553, 0.15 ) }
    dend_19 { pt3dadd( -44.7136, -131.792, 25.7727, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_19 { pt3dadd( -44.9379, -132.15, 25.7979, 0.74 ) }
    dend_19 { pt3dadd( -45.3008, -132.743, 25.8408, 0.15 ) }
    dend_19 { pt3dadd( -45.5503, -133.103, 25.8319, 0.15 ) }
    dend_19 { pt3dadd( -45.932, -133.595, 25.7803, 0.15 ) }
    dend_19 { pt3dadd( -46.0797, -133.772, 25.7434, 0.15 ) }
    dend_19 { pt3dadd( -46.4107, -134.151, 25.6279, 1.33 ) }
    dend_19 { pt3dadd( -46.7258, -134.482, 25.5274, 2.14 ) }
    dend_19 { pt3dadd( -47.5878, -135.282, 25.2898, 0.15 ) }
    dend_19 { pt3dadd( -48.0268, -135.634, 25.1904, 1.25 ) }
    dend_19 { pt3dadd( -48.689, -136.111, 25.0583, 0.07 ) }
    dend_19 { pt3dadd( -48.9464, -136.291, 25.0213, 0.22 ) }
    dend_19 { pt3dadd( -49.7606, -136.839, 24.9389, 0.22 ) }
    dend_19 { pt3dadd( -50.1728, -137.101, 24.9182, 1.25 ) }
    dend_19 { pt3dadd( -50.4391, -137.261, 24.9211, 1.25 ) }
    dend_19 { pt3dadd( -51.2877, -137.844, 24.9032, 0.07 ) }
    dend_19 { pt3dadd( -51.8481, -138.295, 24.8678, 0.07 ) }
    dend_19 { pt3dadd( -52.2162, -138.67, 24.798, 0.07 ) }
    dend_19 { pt3dadd( -52.5176, -139.074, 24.657, 0.07 ) }
    dend_19 { pt3dadd( -52.6669, -139.311, 24.5622, 1.18 ) }
    dend_19 { pt3dadd( -53.1592, -140.211, 24.1686, 0.07 ) }
    dend_19 { pt3dadd( -53.2562, -140.414, 24.0767, 0.88 ) }
    dend_19 { pt3dadd( -53.4978, -140.978, 23.8219, 1.92 ) }
    dend_19 { pt3dadd( -53.9011, -141.967, 23.3846, 0.15 ) }
    dend_19 { pt3dadd( -54.0242, -142.284, 23.247, 0.22 ) }
    dend_19 { pt3dadd( -54.2352, -142.778, 23.0334, 0.07 ) }
    dend_19 { pt3dadd( -54.3527, -143.045, 22.9229, 0.07 ) }
    dend_19 { pt3dadd( -54.5205, -143.472, 22.7673, 0.29 ) }
    dend_19 { pt3dadd( -54.8197, -144.349, 22.5193, 0.07 ) }
    dend_19 { pt3dadd( -55.058, -145.126, 22.3718, 0.22 ) }
    dend_19 { pt3dadd( -55.2225, -145.665, 22.2949, 1.55 ) }
    dend_19 { pt3dadd( -55.5332, -146.637, 22.2342, 0.22 ) }
    dend_19 { pt3dadd( -55.7377, -147.232, 22.2387, 0.07 ) }
    dend_19 { pt3dadd( -55.9195, -147.763, 22.2737, 0.07 ) }
    dend_19 { pt3dadd( -56.0401, -148.118, 22.3423, 0.07 ) }
    dend_19 { pt3dadd( -56.167, -148.438, 22.451, 0.15 ) }
    dend_19 { pt3dadd( -56.3817, -148.909, 22.6867, 0.07 ) }
    dend_19 { pt3dadd( -56.5396, -149.109, 22.8542, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 37/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -40.5412, -127.545, 25.7296, 0.29 ) }
    dend_16 { pt3dadd( -42.2147, -127.121, 25.6887, 0.29 ) }
    dend_16 { pt3dadd( -43.0538, -126.886, 25.5871, 0.22 ) }
    dend_16 { pt3dadd( -43.5893, -126.733, 25.4844, 0.74 ) }
    dend_16 { pt3dadd( -44.2344, -126.543, 25.3375, 0.96 ) }
    dend_16 { pt3dadd( -44.9993, -126.326, 25.1529, 0.29 ) }
    dend_16 { pt3dadd( -45.7923, -126.102, 24.9518, 0.15 ) }
    dend_16 { pt3dadd( -46.6541, -125.854, 24.6997, 0.15 ) }
    dend_16 { pt3dadd( -47.3841, -125.665, 24.5139, 1.03 ) }
    dend_16 { pt3dadd( -48.3004, -125.448, 24.3132, 0.29 ) }
    dend_16 { pt3dadd( -49.5538, -125.168, 24.0829, 0.22 ) }
    dend_16 { pt3dadd( -50.2427, -125.026, 23.9821, 1.11 ) }
    dend_16 { pt3dadd( -51.3408, -124.821, 23.8734, 2.14 ) }
    dend_16 { pt3dadd( -53.3966, -124.461, 23.7514, 0.22 ) }
    dend_16 { pt3dadd( -53.9164, -124.375, 23.7327, 0.81 ) }
    dend_16 { pt3dadd( -54.9573, -124.213, 23.7017, 1.7 ) }
    dend_16 { pt3dadd( -56.3645, -123.987, 23.6736, 0.22 ) }
    dend_16 { pt3dadd( -56.959, -123.893, 23.6511, 0.88 ) }
    dend_16 { pt3dadd( -57.8618, -123.755, 23.592, 1.55 ) }
    dend_16 { pt3dadd( -58.5357, -123.648, 23.5274, 0.59 ) }
    dend_16 { pt3dadd( -59.8078, -123.453, 23.3835, 0.15 ) }
    dend_16 { pt3dadd( -60.7473, -123.332, 23.2426, 0.88 ) }
    dend_16 { pt3dadd( -61.6944, -123.215, 23.0592, 0.15 ) }
    dend_16 { pt3dadd( -62.4535, -123.107, 22.8788, 0.22 ) }
    dend_16 { pt3dadd( -63.1263, -123.001, 22.693, 0.81 ) }
    dend_16 { pt3dadd( -64.1298, -122.845, 22.3951, 1.99 ) }
    dend_16 { pt3dadd( -65.548, -122.665, 21.9216, 0.22 ) }
    dend_16 { pt3dadd( -66.2424, -122.589, 21.6781, 0.22 ) }
    dend_16 { pt3dadd( -66.9477, -122.505, 21.4212, 0.52 ) }
    dend_16 { pt3dadd( -67.6804, -122.41, 21.1404, 1.18 ) }
    dend_16 { pt3dadd( -68.8363, -122.242, 20.6881, 1.99 ) }
    dend_16 { pt3dadd( -70.3262, -122.002, 20.0654, 0.15 ) }
    dend_16 { pt3dadd( -70.8786, -121.907, 19.8318, 0.29 ) }
    dend_16 { pt3dadd( -71.7789, -121.779, 19.4416, 0.07 ) }
    dend_16 { pt3dadd( -72.3965, -121.714, 19.1402, 0.22 ) }
    dend_16 { pt3dadd( -72.8683, -121.672, 18.8583, 0.22 ) }
    dend_16 { pt3dadd( -73.2911, -121.656, 18.5131, 0.22 ) }
    dend_16 { pt3dadd( -73.4538, -121.667, 18.3499, 0.22 ) }
    dend_16 { pt3dadd( -73.852, -121.789, 17.8531, 0.22 ) }
    dend_16 { pt3dadd( -74.2551, -122.059, 17.2614, 0.22 ) }
    dend_16 { pt3dadd( -74.536, -122.302, 16.8157, 0.22 ) }
    dend_16 { pt3dadd( -75.1876, -122.901, 15.8571, 1.84 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 79/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 74.4323, 31.6757, 86.0458, 0.22 ) }
    dend_9 { pt3dadd( 75.7364, 31.7553, 87.4105, 0.22 ) }
    dend_9 { pt3dadd( 76.0285, 31.7496, 87.7154, 0.22 ) }
    dend_9 { pt3dadd( 76.7226, 31.761, 88.4012, 0.59 ) }
    dend_9 { pt3dadd( 77.3774, 31.8092, 88.9935, 0.44 ) }
    dend_9 { pt3dadd( 77.743, 31.842, 89.292, 0.44 ) }
    dend_9 { pt3dadd( 78.2213, 31.8786, 89.6181, 0.15 ) }
    dend_9 { pt3dadd( 78.7236, 31.9353, 89.8636, 0.15 ) }
    dend_9 { pt3dadd( 79.3902, 31.9716, 90.1049, 0.15 ) }
    dend_9 { pt3dadd( 79.9376, 31.9723, 90.2341, 0.96 ) }
    dend_9 { pt3dadd( 80.6811, 31.9626, 90.3613, 1.55 ) }
    dend_9 { pt3dadd( 81.7215, 31.9958, 90.5341, 0.22 ) }
    dend_9 { pt3dadd( 82.4718, 32.0239, 90.6508, 0.37 ) }
    dend_9 { pt3dadd( 83.0585, 32.023, 90.7293, 0.22 ) }
    dend_9 { pt3dadd( 83.5464, 32.0016, 90.7946, 0.22 ) }
    dend_9 { pt3dadd( 84.0985, 31.9761, 90.874, 0.37 ) }
    dend_9 { pt3dadd( 85.1395, 31.9372, 91.0624, 0.22 ) }
    dend_9 { pt3dadd( 85.7162, 31.9307, 91.2033, 0.22 ) }
    dend_9 { pt3dadd( 86.4675, 31.9554, 91.4296, 0.22 ) }
    dend_9 { pt3dadd( 86.9499, 31.9857, 91.5942, 0.96 ) }
    dend_9 { pt3dadd( 87.7706, 32.0482, 91.9096, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_9 { pt3dadd( 89.114, 32.1294, 92.4693, 0.22 ) }
    dend_9 { pt3dadd( 89.9559, 32.1423, 92.8502, 0.15 ) }
    dend_9 { pt3dadd( 90.772, 32.1477, 93.2667, 0.15 ) }
    dend_9 { pt3dadd( 91.0417, 32.1454, 93.4174, 0.15 ) }
    dend_9 { pt3dadd( 91.4205, 32.1237, 93.6324, 0.15 ) }
    dend_9 { pt3dadd( 91.7855, 32.0871, 93.8124, 0.15 ) }
    dend_9 { pt3dadd( 92.4741, 32.0002, 94.0757, 0.15 ) }
    dend_9 { pt3dadd( 92.9103, 31.9068, 94.2082, 0.81 ) }
    dend_9 { pt3dadd( 93.4292, 31.7536, 94.3536, 1.47 ) }
    dend_9 { pt3dadd( 93.8117, 31.6317, 94.4606, 1.47 ) }
    dend_9 { pt3dadd( 94.9602, 31.2593, 94.7572, 0.15 ) }
    dend_9 { pt3dadd( 95.2485, 31.1738, 94.8414, 0.22 ) }
    dend_9 { pt3dadd( 96.0105, 30.9277, 95.0813, 0.37 ) }
    dend_9 { pt3dadd( 96.7751, 30.6475, 95.3365, 1.03 ) }
    dend_9 { pt3dadd( 97.5142, 30.3642, 95.6678, 1.77 ) }
    dend_9 { pt3dadd( 97.9052, 30.2174, 95.8961, 1.77 ) }
    dend_9 { pt3dadd( 99.0571, 29.7998, 96.7174, 0.22 ) }
    dend_9 { pt3dadd( 99.485, 29.6825, 97.0549, 0.22 ) }
    dend_9 { pt3dadd( 100.153, 29.5759, 97.6022, 1.11 ) }
    dend_9 { pt3dadd( 101.501, 29.4612, 98.7597, 0.22 ) }
    dend_9 { pt3dadd( 102.052, 29.4236, 99.2749, 0.22 ) }
    dend_9 { pt3dadd( 102.58, 29.3857, 99.7983, 0.66 ) }
    dend_9 { pt3dadd( 103.319, 29.3313, 100.525, 0.88 ) }
    dend_9 { pt3dadd( 103.825, 29.3096, 101.013, 1.7 ) }
    dend_9 { pt3dadd( 104.895, 29.3098, 102.045, 0.44 ) }
    dend_9 { pt3dadd( 105.694, 29.3378, 102.78, 0.74 ) }
    dend_9 { pt3dadd( 106.286, 29.3915, 103.325, 1.25 ) }
    dend_9 { pt3dadd( 107.257, 29.5752, 104.254, 0.22 ) }
    dend_9 { pt3dadd( 107.594, 29.6694, 104.585, 0.22 ) }
    dend_9 { pt3dadd( 108.167, 29.9013, 105.166, 0.37 ) }
    dend_9 { pt3dadd( 108.561, 30.1057, 105.534, 0.37 ) }
    dend_9 { pt3dadd( 109.207, 30.4692, 106.068, 1.47 ) }
    dend_9 { pt3dadd( 110.0, 30.9054, 106.679, 0.29 ) }
    dend_9 { pt3dadd( 110.386, 31.1065, 106.954, 0.29 ) }
    dend_9 { pt3dadd( 110.599, 31.2097, 107.104, 0.29 ) }
    dend_9 { pt3dadd( 111.287, 31.5239, 107.631, 0.15 ) }
    dend_9 { pt3dadd( 111.714, 31.7318, 108.03, 0.22 ) }
    dend_9 { pt3dadd( 112.036, 31.9046, 108.397, 0.74 ) }
    dend_9 { pt3dadd( 112.386, 32.1357, 108.909, 1.25 ) }
    dend_9 { pt3dadd( 112.931, 32.5957, 109.914, 0.22 ) }
    dend_9 { pt3dadd( 113.329, 32.9921, 110.768, 0.96 ) }
    dend_9 { pt3dadd( 113.674, 33.3549, 111.574, 0.96 ) }
    dend_9 { pt3dadd( 113.961, 33.6126, 112.231, 0.29 ) }
    dend_9 { pt3dadd( 114.327, 33.8725, 113.061, 0.29 ) }
    dend_9 { pt3dadd( 114.645, 34.0358, 113.793, 0.29 ) }
    dend_9 { pt3dadd( 114.953, 34.1389, 114.504, 0.29 ) }
    dend_9 { pt3dadd( 115.214, 34.2137, 115.254, 0.29 ) }
    dend_9 { pt3dadd( 115.366, 34.2558, 115.964, 0.29 ) }
    dend_9 { pt3dadd( 115.428, 34.2724, 116.669, 0.29 ) }
    dend_9 { pt3dadd( 115.44, 34.2762, 117.118, 0.29 ) }
    dend_9 { pt3dadd( 115.44, 34.2931, 117.717, 0.29 ) }
    dend_9 { pt3dadd( 115.42, 34.3564, 118.868, 0.59 ) }
    dend_9 { pt3dadd( 115.405, 34.4259, 119.74, 0.59 ) }
    dend_9 { pt3dadd( 115.422, 34.5211, 120.826, 0.59 ) }
    dend_9 { pt3dadd( 115.477, 34.5768, 121.59, 0.59 ) }
    dend_9 { pt3dadd( 115.629, 34.6129, 122.535, 0.59 ) }
    dend_9 { pt3dadd( 115.802, 34.6074, 123.188, 0.59 ) }
    dend_9 { pt3dadd( 115.902, 34.5986, 123.437, 0.59 ) }
    dend_9 { pt3dadd( 116.265, 34.5547, 124.082, 0.59 ) }
    dend_9 { pt3dadd( 116.463, 34.5126, 124.338, 0.59 ) }
    dend_9 { pt3dadd( 116.985, 34.3664, 124.854, 0.22 ) }
    dend_9 { pt3dadd( 117.413, 34.2359, 125.17, 0.22 ) }
    dend_9 { pt3dadd( 118.005, 34.1019, 125.62, 0.22 ) }
    dend_9 { pt3dadd( 118.424, 34.055, 125.981, 0.22 ) }
    dend_9 { pt3dadd( 119.08, 34.0665, 126.565, 0.22 ) }
    dend_9 { pt3dadd( 119.543, 34.137, 127.025, 0.22 ) }
    dend_9 { pt3dadd( 120.024, 34.27, 127.589, 1.11 ) }
    dend_9 { pt3dadd( 120.884, 34.6003, 128.748, 0.22 ) }
    dend_9 { pt3dadd( 121.346, 34.8068, 129.446, 0.22 ) }
    dend_9 { pt3dadd( 121.885, 35.0839, 130.332, 0.22 ) }
    dend_9 { pt3dadd( 122.3, 35.2658, 131.008, 0.22 ) }
    dend_9 { pt3dadd( 122.644, 35.3093, 131.559, 0.22 ) }
    dend_9 { pt3dadd( 122.821, 35.2481, 131.815, 0.22 ) }
    dend_9 { pt3dadd( 123.196, 35.0048, 132.27, 0.59 ) }
    dend_9 { pt3dadd( 123.792, 34.5621, 132.915, 0.59 ) }
    dend_9 { pt3dadd( 124.494, 34.0511, 133.644, 0.15 ) }
    dend_9 { pt3dadd( 125.177, 33.5643, 134.329, 0.66 ) }
    dend_9 { pt3dadd( 125.902, 33.0762, 135.068, 0.15 ) }
    dend_9 { pt3dadd( 126.481, 32.7147, 135.688, 0.66 ) }
    dend_9 { pt3dadd( 126.959, 32.4629, 136.207, 1.03 ) }
    dend_9 { pt3dadd( 127.879, 32.0524, 137.159, 0.22 ) }
    dend_9 { pt3dadd( 128.657, 31.7565, 137.906, 0.15 ) }
    dend_9 { pt3dadd( 129.442, 31.5159, 138.61, 0.66 ) }
    dend_9 { pt3dadd( 129.929, 31.4183, 139.05, 1.25 ) }
    dend_9 { pt3dadd( 130.968, 31.2978, 139.979, 0.22 ) }
    dend_9 { pt3dadd( 131.733, 31.2485, 140.65, 0.15 ) }
    dend_9 { pt3dadd( 132.408, 31.2471, 141.191, 0.37 ) }
    dend_9 { pt3dadd( 132.817, 31.2748, 141.49, 0.59 ) }
    dend_9 { pt3dadd( 133.859, 31.3697, 142.205, 0.15 ) }
    dend_9 { pt3dadd( 134.493, 31.4143, 142.649, 0.88 ) }
    dend_9 { pt3dadd( 135.581, 31.4726, 143.449, 0.22 ) }
    dend_9 { pt3dadd( 136.01, 31.5073, 143.777, 0.96 ) }
    dend_9 { pt3dadd( 136.365, 31.5434, 144.057, 0.66 ) }
    dend_9 { pt3dadd( 137.112, 31.6262, 144.627, 0.15 ) }
    dend_9 { pt3dadd( 137.851, 31.7404, 145.219, 0.81 ) }
    dend_9 { pt3dadd( 138.339, 31.8678, 145.667, 1.25 ) }
    dend_9 { pt3dadd( 138.984, 32.1197, 146.297, 0.15 ) }
    dend_9 { pt3dadd( 139.77, 32.4707, 147.103, 0.15 ) }
    dend_9 { pt3dadd( 140.005, 32.5861, 147.357, 0.29 ) }
    dend_9 { pt3dadd( 140.575, 32.9164, 148.003, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_9 { pt3dadd( 140.848, 33.091, 148.328, 0.96 ) }
    dend_9 { pt3dadd( 141.358, 33.3847, 148.964, 0.29 ) }
    dend_9 { pt3dadd( 142.05, 33.6867, 149.801, 0.74 ) }
    dend_9 { pt3dadd( 142.738, 33.9333, 150.575, 0.15 ) }
    dend_9 { pt3dadd( 143.207, 34.0841, 151.084, 0.37 ) }
    dend_9 { pt3dadd( 143.491, 34.1733, 151.363, 0.37 ) }
    dend_9 { pt3dadd( 143.984, 34.3447, 151.859, 0.22 ) }
    dend_9 { pt3dadd( 144.542, 34.558, 152.399, 0.22 ) }
    dend_9 { pt3dadd( 145.007, 34.7096, 152.784, 0.37 ) }
    dend_9 { pt3dadd( 145.56, 34.8724, 153.186, 0.37 ) }
    dend_9 { pt3dadd( 146.185, 35.0573, 153.586, 1.33 ) }
    dend_9 { pt3dadd( 147.394, 35.4654, 154.282, 0.22 ) }
    dend_9 { pt3dadd( 148.186, 35.799, 154.713, 1.03 ) }
    dend_9 { pt3dadd( 149.157, 36.2677, 155.208, 0.15 ) }
    dend_9 { pt3dadd( 149.487, 36.4534, 155.366, 0.15 ) }
    dend_9 { pt3dadd( 150.322, 37.0367, 155.751, 0.15 ) }
    dend_9 { pt3dadd( 150.894, 37.5473, 156.042, 1.03 ) }
    dend_9 { pt3dadd( 151.343, 38.0865, 156.295, 0.15 ) }
    dend_9 { pt3dadd( 151.636, 38.5206, 156.492, 0.15 ) }
    dend_9 { pt3dadd( 152.03, 39.186, 156.841, 0.15 ) }
    dend_9 { pt3dadd( 152.447, 39.85, 157.293, 0.88 ) }
    dend_9 { pt3dadd( 152.86, 40.4783, 157.814, 0.29 ) }
    dend_9 { pt3dadd( 153.17, 40.9255, 158.234, 0.81 ) }
    dend_9 { pt3dadd( 153.325, 41.133, 158.438, 0.81 ) }
    dend_9 { pt3dadd( 153.902, 42.0337, 159.261, 0.22 ) }
    dend_9 { pt3dadd( 154.261, 42.7209, 159.831, 0.07 ) }
    dend_9 { pt3dadd( 154.458, 43.2956, 160.239, 0.15 ) }
    dend_9 { pt3dadd( 154.513, 43.6055, 160.427, 0.66 ) }
    dend_9 { pt3dadd( 154.547, 44.2489, 160.776, 1.55 ) }
    dend_9 { pt3dadd( 154.526, 45.8725, 161.566, 0.15 ) }
    dend_9 { pt3dadd( 154.454, 46.6504, 161.869, 0.15 ) }
    dend_9 { pt3dadd( 154.327, 47.3642, 162.125, 0.66 ) }
    dend_9 { pt3dadd( 154.2, 47.8839, 162.32, 0.15 ) }
    dend_9 { pt3dadd( 154.107, 48.1892, 162.439, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 34/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 74.4323, 31.6757, 86.0458, 0.29 ) }
    dend_8 { pt3dadd( 73.5427, 32.5095, 87.7253, 0.29 ) }
    dend_8 { pt3dadd( 72.8406, 33.1742, 88.8783, 0.29 ) }
    dend_8 { pt3dadd( 72.0994, 33.9209, 90.0281, 0.81 ) }
    dend_8 { pt3dadd( 71.6765, 34.3258, 90.644, 1.4 ) }
    dend_8 { pt3dadd( 70.6193, 35.239, 92.092, 0.07 ) }
    dend_8 { pt3dadd( 70.049, 35.6946, 92.8274, 1.03 ) }
    dend_8 { pt3dadd( 68.9108, 36.4939, 94.0877, 0.15 ) }
    dend_8 { pt3dadd( 67.9442, 37.1985, 95.1073, 1.55 ) }
    dend_8 { pt3dadd( 67.0458, 37.9089, 96.0803, 0.22 ) }
    dend_8 { pt3dadd( 66.4586, 38.4284, 96.7647, 0.22 ) }
    dend_8 { pt3dadd( 65.851, 39.0451, 97.534, 0.81 ) }
    dend_8 { pt3dadd( 65.2395, 39.7468, 98.3572, 0.07 ) }
    dend_8 { pt3dadd( 64.761, 40.4519, 99.0984, 0.59 ) }
    dend_8 { pt3dadd( 64.4433, 41.1728, 99.7101, 0.07 ) }
    dend_8 { pt3dadd( 64.3348, 41.6348, 100.043, 0.52 ) }
    dend_8 { pt3dadd( 64.1871, 43.2119, 101.113, 0.07 ) }
    dend_8 { pt3dadd( 64.2067, 43.7402, 101.463, 0.96 ) }
    dend_8 { pt3dadd( 64.2859, 44.236, 101.8, 0.96 ) }
    dend_8 { pt3dadd( 64.6312, 45.5556, 102.751, 0.22 ) }
    dend_8 { pt3dadd( 65.0123, 46.4751, 103.434, 0.22 ) }
    dend_8 { pt3dadd( 65.4699, 47.2506, 104.06, 0.96 ) }
    dend_8 { pt3dadd( 66.0572, 48.0576, 104.754, 1.77 ) }
    dend_8 { pt3dadd( 66.8993, 49.1438, 105.772, 0.22 ) }
    dend_8 { pt3dadd( 67.4339, 49.7937, 106.413, 0.15 ) }
    dend_8 { pt3dadd( 67.8982, 50.3418, 106.93, 0.15 ) }
    dend_8 { pt3dadd( 68.1335, 50.6391, 107.202, 0.15 ) }
    dend_8 { pt3dadd( 68.8528, 51.6762, 108.116, 0.88 ) }
    dend_8 { pt3dadd( 69.4669, 52.881, 109.163, 0.22 ) }
    dend_8 { pt3dadd( 69.7105, 53.5582, 109.753, 0.81 ) }
    dend_8 { pt3dadd( 70.0393, 54.7091, 110.768, 0.15 ) }
    dend_8 { pt3dadd( 70.2496, 55.5372, 111.498, 0.66 ) }
    dend_8 { pt3dadd( 70.4631, 56.4524, 112.297, 1.84 ) }
    dend_8 { pt3dadd( 70.8924, 58.1583, 113.779, 0.15 ) }
    dend_8 { pt3dadd( 71.1256, 59.131, 114.598, 0.15 ) }
    dend_8 { pt3dadd( 71.3139, 59.923, 115.249, 0.15 ) }
    dend_8 { pt3dadd( 71.4947, 60.5655, 115.773, 0.66 ) }
    dend_8 { pt3dadd( 71.9308, 61.7911, 116.678, 0.15 ) }
    dend_8 { pt3dadd( 72.4429, 62.929, 117.448, 0.15 ) }
    dend_8 { pt3dadd( 72.7424, 63.5022, 117.795, 0.66 ) }
    dend_8 { pt3dadd( 73.0035, 64.0608, 118.099, 0.22 ) }
    dend_8 { pt3dadd( 73.3406, 64.9594, 118.576, 0.22 ) }
    dend_8 { pt3dadd( 73.5045, 65.4952, 118.85, 0.81 ) }
    dend_8 { pt3dadd( 73.5948, 65.9274, 119.055, 0.81 ) }
    dend_8 { pt3dadd( 73.6783, 67.1388, 119.634, 0.07 ) }
    dend_8 { pt3dadd( 73.6477, 67.8683, 120.002, 0.66 ) }
    dend_8 { pt3dadd( 73.3768, 69.3937, 120.832, 0.15 ) }
    dend_8 { pt3dadd( 73.0796, 70.41, 121.409, 1.4 ) }
    dend_8 { pt3dadd( 72.5444, 71.8128, 122.265, 0.15 ) }
    dend_8 { pt3dadd( 72.1071, 72.741, 122.869, 0.15 ) }
    dend_8 { pt3dadd( 71.6528, 73.5131, 123.405, 1.18 ) }
    dend_8 { pt3dadd( 70.7505, 74.6793, 124.335, 0.22 ) }
    dend_8 { pt3dadd( 69.9345, 75.4828, 125.054, 0.15 ) }
    dend_8 { pt3dadd( 69.416, 75.9364, 125.488, 0.15 ) }
    dend_8 { pt3dadd( 68.8941, 76.3737, 125.915, 0.74 ) }
    dend_8 { pt3dadd( 68.2618, 76.9168, 126.416, 1.25 ) }
    dend_8 { pt3dadd( 66.9776, 78.0672, 127.444, 0.22 ) }
    dend_8 { pt3dadd( 66.3015, 78.7052, 128.009, 1.11 ) }
    dend_8 { pt3dadd( 65.146, 79.849, 129.061, 0.22 ) }
    dend_8 { pt3dadd( 64.5194, 80.5179, 129.674, 1.47 ) }
    dend_8 { pt3dadd( 63.9213, 81.1953, 130.284, 0.96 ) }
    dend_8 { pt3dadd( 63.1308, 82.1615, 131.139, 0.22 ) }
    dend_8 { pt3dadd( 62.4595, 83.0477, 131.909, 0.74 ) }
    dend_8 { pt3dadd( 61.6498, 84.1439, 132.901, 0.15 ) }
    dend_8 { pt3dadd( 61.3007, 84.6068, 133.352, 0.15 ) }
    dend_8 { pt3dadd( 60.9314, 85.112, 133.865, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 0/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 41.4242, 7.17336, 46.3969, 0.15 ) }
    dend_6 { pt3dadd( 43.0541, 5.92352, 49.8327, 0.15 ) }
    dend_6 { pt3dadd( 43.6629, 5.5202, 50.6657, 0.22 ) }
    dend_6 { pt3dadd( 44.174, 5.2111, 51.2527, 0.88 ) }
    dend_6 { pt3dadd( 45.1176, 4.66829, 52.2249, 0.15 ) }
    dend_6 { pt3dadd( 45.7457, 4.3214, 52.8275, 1.18 ) }
    dend_6 { pt3dadd( 46.4454, 3.93951, 53.4855, 2.58 ) }
    dend_6 { pt3dadd( 48.1561, 3.06782, 54.7232, 0.29 ) }
    dend_6 { pt3dadd( 48.9491, 2.67238, 55.277, 0.96 ) }
    dend_6 { pt3dadd( 49.5422, 2.3821, 55.7022, 1.18 ) }
    dend_6 { pt3dadd( 51.2203, 1.60956, 57.0093, 0.07 ) }
    dend_6 { pt3dadd( 51.8414, 1.3612, 57.5543, 0.07 ) }
    dend_6 { pt3dadd( 52.1378, 1.24999, 57.8472, 0.07 ) }
    dend_6 { pt3dadd( 52.6599, 1.04767, 58.4714, 0.74 ) }
    dend_6 { pt3dadd( 53.0658, 0.869004, 59.0438, 1.03 ) }
    dend_6 { pt3dadd( 53.9487, 0.427717, 60.5004, 0.15 ) }
    dend_6 { pt3dadd( 54.6236, -8.70824E-5, 61.8303, 1.18 ) }
    dend_6 { pt3dadd( 54.8615, -0.197965, 62.383, 1.4 ) }
    dend_6 { pt3dadd( 55.2977, -0.673712, 63.6114, 0.15 ) }
    dend_6 { pt3dadd( 55.549, -1.08994, 64.5335, 0.15 ) }
    dend_6 { pt3dadd( 55.6594, -1.34773, 65.0446, 0.88 ) }
    dend_6 { pt3dadd( 55.7663, -1.68038, 65.6771, 0.29 ) }
    dend_6 { pt3dadd( 55.9278, -2.28301, 66.8471, 0.15 ) }
    dend_6 { pt3dadd( 56.0224, -2.67153, 67.7138, 0.81 ) }
    dend_6 { pt3dadd( 56.1021, -3.06119, 68.7159, 1.62 ) }
    dend_6 { pt3dadd( 56.1523, -3.7745, 70.7507, 0.15 ) }
    dend_6 { pt3dadd( 56.1321, -4.13034, 71.8568, 0.15 ) }
    dend_6 { pt3dadd( 56.0761, -4.43989, 72.8455, 0.22 ) }
    dend_6 { pt3dadd( 55.941, -4.81523, 74.0588, 0.22 ) }
    dend_6 { pt3dadd( 55.8191, -5.06218, 74.8303, 0.22 ) }
    dend_6 { pt3dadd( 55.7027, -5.29162, 75.5782, 1.18 ) }
    dend_6 { pt3dadd( 55.5702, -5.59535, 76.4842, 1.62 ) }
    dend_6 { pt3dadd( 55.493, -6.22156, 78.0701, 0.22 ) }
    dend_6 { pt3dadd( 55.5848, -6.55166, 78.8928, 0.22 ) }
    dend_6 { pt3dadd( 55.7114, -6.73332, 79.3736, 0.44 ) }
    dend_6 { pt3dadd( 56.1553, -7.11931, 80.5263, 0.15 ) }
    dend_6 { pt3dadd( 56.5425, -7.35532, 81.3112, 1.33 ) }
    dend_6 { pt3dadd( 57.3832, -7.79371, 82.8031, 0.15 ) }
    dend_6 { pt3dadd( 58.2991, -8.24155, 84.2582, 0.22 ) }
    dend_6 { pt3dadd( 58.7859, -8.52347, 84.9932, 0.22 ) }
    dend_6 { pt3dadd( 59.0347, -8.68818, 85.3602, 0.22 ) }
    dend_6 { pt3dadd( 59.4528, -9.03357, 85.9713, 0.74 ) }
    dend_6 { pt3dadd( 59.8906, -9.44612, 86.5663, 1.25 ) }
    dend_6 { pt3dadd( 60.2631, -9.82507, 86.9902, 1.25 ) }
    dend_6 { pt3dadd( 61.4322, -11.1814, 88.2022, 0.22 ) }
    dend_6 { pt3dadd( 61.9385, -11.7889, 88.7434, 0.22 ) }
    dend_6 { pt3dadd( 62.3574, -12.3024, 89.2146, 1.03 ) }
    dend_6 { pt3dadd( 62.8824, -12.9493, 89.811, 1.84 ) }
    dend_6 { pt3dadd( 64.2204, -14.588, 91.2991, 0.22 ) }
    dend_6 { pt3dadd( 64.793, -15.3232, 91.936, 1.11 ) }
    dend_6 { pt3dadd( 65.5771, -16.4342, 92.8659, 0.22 ) }
    dend_6 { pt3dadd( 66.0647, -17.1687, 93.5003, 0.15 ) }
    dend_6 { pt3dadd( 66.4113, -17.6874, 93.9792, 0.15 ) }
    dend_6 { pt3dadd( 66.9115, -18.4423, 94.7268, 1.03 ) }
    dend_6 { pt3dadd( 67.5917, -19.5269, 95.8711, 0.22 ) }
    dend_6 { pt3dadd( 67.9198, -20.009, 96.4748, 0.96 ) }
    dend_6 { pt3dadd( 68.5007, -20.8253, 97.615, 0.15 ) }
    dend_6 { pt3dadd( 68.882, -21.347, 98.4628, 0.15 ) }
    dend_6 { pt3dadd( 69.1413, -21.7163, 99.1774, 0.96 ) }
    dend_6 { pt3dadd( 69.4774, -22.1625, 100.264, 1.92 ) }
    dend_6 { pt3dadd( 70.3279, -23.0384, 103.101, 0.22 ) }
    dend_6 { pt3dadd( 70.6197, -23.2698, 104.029, 0.44 ) }
    dend_6 { pt3dadd( 71.0668, -23.5997, 105.535, 1.18 ) }
    dend_6 { pt3dadd( 71.5697, -23.9592, 107.462, 0.22 ) }
    dend_6 { pt3dadd( 72.0237, -24.2472, 109.534, 0.52 ) }
    dend_6 { pt3dadd( 72.3413, -24.3811, 111.412, 0.81 ) }
    dend_6 { pt3dadd( 72.4778, -24.3635, 112.704, 0.81 ) }
    dend_6 { pt3dadd( 72.623, -24.137, 114.872, 0.52 ) }
    dend_6 { pt3dadd( 72.6158, -23.8645, 116.049, 0.52 ) }
    dend_6 { pt3dadd( 72.4815, -23.3665, 117.137, 0.52 ) }
    dend_6 { pt3dadd( 72.1996, -22.6551, 118.014, 0.52 ) }
    dend_6 { pt3dadd( 71.8864, -21.9186, 118.586, 1.25 ) }
    dend_6 { pt3dadd( 71.6049, -21.1522, 118.997, 1.25 ) }
    dend_6 { pt3dadd( 71.3269, -20.1013, 119.432, 0.37 ) }
    dend_6 { pt3dadd( 71.067, -18.5675, 120.048, 0.66 ) }
    dend_6 { pt3dadd( 70.9879, -17.5333, 120.467, 0.37 ) }
    dend_6 { pt3dadd( 71.0378, -16.4821, 120.962, 0.66 ) }
    dend_6 { pt3dadd( 71.2371, -15.3407, 121.683, 0.15 ) }
    dend_6 { pt3dadd( 71.4529, -14.6511, 122.262, 0.15 ) }
    dend_6 { pt3dadd( 71.6336, -14.2831, 122.669, 0.15 ) }
    dend_6 { pt3dadd( 71.9705, -13.7306, 123.391, 1.62 ) }
    dend_6 { pt3dadd( 72.6211, -12.7063, 124.827, 0.22 ) }
    dend_6 { pt3dadd( 73.314, -11.5682, 126.5, 0.88 ) }
    dend_6 { pt3dadd( 73.8282, -10.641, 127.962, 1.4 ) }
    dend_6 { pt3dadd( 74.2324, -9.81311, 129.321, 1.4 ) }
    dend_6 { pt3dadd( 74.7005, -8.6576, 131.22, 0.66 ) }
    dend_6 { pt3dadd( 75.0168, -7.62278, 132.941, 0.29 ) }
    dend_6 { pt3dadd( 75.1148, -7.12073, 133.827, 0.29 ) }
    dend_6 { pt3dadd( 75.1602, -6.64801, 134.729, 0.29 ) }
    dend_6 { pt3dadd( 75.1309, -6.36392, 135.339, 0.29 ) }
    dend_6 { pt3dadd( 74.8944, -5.82626, 136.806, 0.29 ) }
    dend_6 { pt3dadd( 74.6088, -5.57272, 137.851, 0.29 ) }
    dend_6 { pt3dadd( 74.2253, -5.35527, 139.052, 0.29 ) }
    dend_6 { pt3dadd( 73.9281, -5.14239, 139.919, 0.29 ) }
    dend_6 { pt3dadd( 73.6851, -4.89764, 140.522, 0.29 ) }
    dend_6 { pt3dadd( 73.5101, -4.67834, 140.894, 0.29 ) }
    dend_6 { pt3dadd( 73.0931, -4.01855, 141.525, 0.88 ) }
    dend_6 { pt3dadd( 72.6814, -3.20979, 142.022, 1.25 ) }
    dend_6 { pt3dadd( 72.3202, -2.38164, 142.439, 0.59 ) }
    dend_6 { pt3dadd( 71.8461, -1.26036, 142.928, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_6 { pt3dadd( 71.5318, -0.479601, 143.249, 1.4 ) }
    dend_6 { pt3dadd( 70.5651, 1.90513, 144.175, 0.15 ) }
    dend_6 { pt3dadd( 70.1835, 2.80503, 144.491, 0.74 ) }
    dend_6 { pt3dadd( 69.4663, 4.42685, 145.01, 0.22 ) }
    dend_6 { pt3dadd( 68.9593, 5.54729, 145.365, 1.03 ) }
    dend_6 { pt3dadd( 68.6027, 6.33566, 145.627, 0.52 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 6/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 41.4242, 7.17336, 46.3969, 0.15 ) }
    dend_5 { pt3dadd( 40.1331, 6.17553, 47.0379, 0.15 ) }
    dend_5 { pt3dadd( 39.6112, 5.75854, 47.2801, 0.07 ) }
    dend_5 { pt3dadd( 38.9862, 5.25571, 47.5501, 1.03 ) }
    dend_5 { pt3dadd( 38.1159, 4.55671, 47.8926, 0.07 ) }
    dend_5 { pt3dadd( 37.2504, 3.87058, 48.2109, 0.07 ) }
    dend_5 { pt3dadd( 36.758, 3.49095, 48.3793, 0.66 ) }
    dend_5 { pt3dadd( 35.765, 2.71271, 48.5832, 0.07 ) }
    dend_5 { pt3dadd( 35.2565, 2.29961, 48.6545, 0.07 ) }
    dend_5 { pt3dadd( 34.5228, 1.68906, 48.7243, 0.07 ) }
    dend_5 { pt3dadd( 34.3057, 1.50364, 48.7233, 0.29 ) }
    dend_5 { pt3dadd( 33.8961, 1.13533, 48.6853, 0.81 ) }
    dend_5 { pt3dadd( 32.7764, 0.0937509, 48.5034, 0.07 ) }
    dend_5 { pt3dadd( 32.0162, -0.642449, 48.3305, 0.07 ) }
    dend_5 { pt3dadd( 31.4965, -1.16311, 48.1762, 0.15 ) }
    dend_5 { pt3dadd( 30.4585, -2.24231, 47.8137, 0.07 ) }
    dend_5 { pt3dadd( 29.8265, -2.93772, 47.5708, 0.07 ) }
    dend_5 { pt3dadd( 29.4698, -3.35647, 47.4235, 0.22 ) }
    dend_5 { pt3dadd( 29.2029, -3.68532, 47.3061, 0.22 ) }
    dend_5 { pt3dadd( 28.4047, -4.65595, 46.9424, 0.15 ) }
    dend_5 { pt3dadd( 27.9422, -5.22641, 46.7369, 0.15 ) }
    dend_5 { pt3dadd( 27.4071, -5.9225, 46.513, 0.07 ) }
    dend_5 { pt3dadd( 27.1231, -6.30734, 46.3906, 0.15 ) }
    dend_5 { pt3dadd( 26.4445, -7.22054, 46.1171, 0.07 ) }
    dend_5 { pt3dadd( 26.0433, -7.72807, 45.9638, 0.59 ) }
    dend_5 { pt3dadd( 25.3171, -8.52248, 45.6934, 0.07 ) }
    dend_5 { pt3dadd( 24.9137, -8.89649, 45.5161, 0.07 ) }
    dend_5 { pt3dadd( 24.6078, -9.13339, 45.3645, 0.22 ) }
    dend_5 { pt3dadd( 23.9552, -9.57694, 45.0312, 0.22 ) }
    dend_5 { pt3dadd( 23.1479, -10.0831, 44.6436, 0.07 ) }
    dend_5 { pt3dadd( 22.1792, -10.6619, 44.2148, 0.07 ) }
    dend_5 { pt3dadd( 21.7109, -10.9116, 44.027, 0.07 ) }
    dend_5 { pt3dadd( 21.1259, -11.172, 43.8296, 0.07 ) }
    dend_5 { pt3dadd( 20.1757, -11.5059, 43.5934, 0.29 ) }
    dend_5 { pt3dadd( 18.7319, -11.8744, 43.3892, 0.07 ) }
    dend_5 { pt3dadd( 18.0888, -11.9727, 43.3863, 0.29 ) }
    dend_5 { pt3dadd( 17.5159, -12.0279, 43.4482, 0.29 ) }
    dend_5 { pt3dadd( 16.4234, -12.1151, 43.6325, 0.07 ) }
    dend_5 { pt3dadd( 15.3742, -12.1589, 43.8509, 0.07 ) }
    dend_5 { pt3dadd( 14.935, -12.153, 43.9461, 0.22 ) }
    dend_5 { pt3dadd( 14.2793, -12.1103, 44.0715, 0.37 ) }
    dend_5 { pt3dadd( 13.3963, -12.0676, 44.1942, 0.29 ) }
    dend_5 { pt3dadd( 12.3059, -12.0689, 44.1955, 0.07 ) }
    dend_5 { pt3dadd( 11.9184, -12.0852, 44.1375, 0.37 ) }
    dend_5 { pt3dadd( 11.3509, -12.0983, 43.9991, 0.59 ) }
    dend_5 { pt3dadd( 10.2678, -12.0546, 43.6546, 0.07 ) }
    dend_5 { pt3dadd( 9.72909, -11.9989, 43.4466, 0.15 ) }
    dend_5 { pt3dadd( 8.41366, -11.785, 42.872, 0.07 ) }
    dend_5 { pt3dadd( 7.55938, -11.6179, 42.4675, 0.07 ) }
    dend_5 { pt3dadd( 6.81054, -11.4971, 42.1154, 0.15 ) }
    dend_5 { pt3dadd( 5.80533, -11.4016, 41.6764, 0.07 ) }
    dend_5 { pt3dadd( 5.27189, -11.4009, 41.4782, 0.07 ) }
    dend_5 { pt3dadd( 4.96169, -11.4227, 41.3876, 0.29 ) }
    dend_5 { pt3dadd( 4.58021, -11.4756, 41.3162, 0.29 ) }
    dend_5 { pt3dadd( 3.50516, -11.6986, 41.1696, 0.07 ) }
    dend_5 { pt3dadd( 2.49475, -11.9534, 41.073, 0.07 ) }
    dend_5 { pt3dadd( 1.59022, -12.2002, 41.0082, 0.07 ) }
    dend_5 { pt3dadd( 1.25157, -12.2902, 40.9744, 0.07 ) }
    dend_5 { pt3dadd( 1.07703, -12.3349, 40.9477, 0.15 ) }
    dend_5 { pt3dadd( 0.798992, -12.3961, 40.8806, 0.15 ) }
    dend_5 { pt3dadd( 0.273543, -12.46, 40.6752, 0.15 ) }
    dend_5 { pt3dadd( -0.417765, -12.4593, 40.2924, 0.15 ) }
    dend_5 { pt3dadd( -1.11686, -12.4075, 39.796, 0.15 ) }
    dend_5 { pt3dadd( -1.52624, -12.3666, 39.4861, 0.15 ) }
    dend_5 { pt3dadd( -1.96656, -12.3195, 39.1473, 0.15 ) }
    dend_5 { pt3dadd( -2.40225, -12.271, 38.8032, 0.15 ) }
    dend_5 { pt3dadd( -2.73262, -12.2342, 38.533, 0.15 ) }
    dend_5 { pt3dadd( -3.11038, -12.1721, 38.2239, 0.15 ) }
    dend_5 { pt3dadd( -3.83343, -12.0017, 37.615, 0.07 ) }
    dend_5 { pt3dadd( -4.31082, -11.881, 37.2305, 0.07 ) }
    dend_5 { pt3dadd( -4.99362, -11.7449, 36.7511, 0.66 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 77/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -27.7743, 33.2837, 37.9378, 0.07 ) }
    dend_62 { pt3dadd( -28.3157, 32.6031, 39.053, 0.07 ) }
    dend_62 { pt3dadd( -28.5952, 32.1404, 39.7875, 0.88 ) }
    dend_62 { pt3dadd( -28.8868, 31.4989, 40.7759, 0.22 ) }
    dend_62 { pt3dadd( -29.092, 31.0625, 41.4532, 0.88 ) }
    dend_62 { pt3dadd( -29.375, 30.4806, 42.3515, 1.84 ) }
    dend_62 { pt3dadd( -29.9053, 29.3533, 44.0452, 0.22 ) }
    dend_62 { pt3dadd( -30.0961, 28.8208, 44.7388, 0.22 ) }
    dend_62 { pt3dadd( -30.2483, 28.3437, 45.2619, 0.22 ) }
    dend_62 { pt3dadd( -30.5196, 27.4813, 46.0864, 0.15 ) }
    dend_62 { pt3dadd( -30.7187, 26.8472, 46.6316, 0.15 ) }
    dend_62 { pt3dadd( -30.9009, 26.344, 47.0058, 0.29 ) }
    dend_62 { pt3dadd( -31.3371, 25.2915, 47.6616, 1.25 ) }
    dend_62 { pt3dadd( -32.0469, 23.7032, 48.5647, 0.07 ) }
    dend_62 { pt3dadd( -32.2916, 23.163, 48.8518, 0.88 ) }
    dend_62 { pt3dadd( -32.4181, 22.8628, 49.0057, 1.18 ) }
    dend_62 { pt3dadd( -32.9277, 21.7056, 49.6075, 0.07 ) }
    dend_62 { pt3dadd( -33.1864, 21.1446, 49.9182, 0.74 ) }
    dend_62 { pt3dadd( -33.628, 20.1466, 50.5725, 0.07 ) }
    dend_62 { pt3dadd( -33.78, 19.7083, 50.9133, 0.29 ) }
    dend_62 { pt3dadd( -33.9053, 19.0641, 51.4865, 0.07 ) }
    dend_62 { pt3dadd( -33.9059, 18.5108, 52.063, 1.03 ) }
    dend_62 { pt3dadd( -33.828, 18.1319, 52.5344, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_62 { pt3dadd( -33.5248, 17.2922, 53.7126, 0.22 ) }
    dend_62 { pt3dadd( -33.2287, 16.7003, 54.6304, 0.22 ) }
    dend_62 { pt3dadd( -32.9228, 16.1463, 55.5727, 0.22 ) }
    dend_62 { pt3dadd( -32.7208, 15.7378, 56.326, 0.22 ) }
    dend_62 { pt3dadd( -32.6298, 15.4936, 56.7733, 0.22 ) }
    dend_62 { pt3dadd( -32.6006, 15.1196, 57.3395, 0.22 ) }
    dend_62 { pt3dadd( -32.6476, 14.8043, 57.7396, 0.22 ) }
    dend_62 { pt3dadd( -32.8212, 14.2922, 58.3227, 0.22 ) }
    dend_62 { pt3dadd( -33.1311, 13.5198, 59.0636, 1.03 ) }
    dend_62 { pt3dadd( -33.4268, 12.7516, 59.7097, 1.47 ) }
    dend_62 { pt3dadd( -33.9416, 11.2478, 60.8582, 0.07 ) }
    dend_62 { pt3dadd( -34.0795, 10.8493, 61.1534, 1.25 ) }
    dend_62 { pt3dadd( -34.2917, 10.2757, 61.5784, 1.4 ) }
    dend_62 { pt3dadd( -34.7522, 9.135, 62.4065, 0.29 ) }
    dend_62 { pt3dadd( -35.0806, 8.42719, 62.9215, 0.15 ) }
    dend_62 { pt3dadd( -35.3951, 7.87156, 63.3365, 0.81 ) }
    dend_62 { pt3dadd( -36.1317, 6.74104, 64.1884, 0.15 ) }
    dend_62 { pt3dadd( -36.6003, 6.13941, 64.6346, 0.15 ) }
    dend_62 { pt3dadd( -36.9632, 5.72433, 64.9476, 0.37 ) }
    dend_62 { pt3dadd( -37.6317, 5.09672, 65.3821, 0.15 ) }
    dend_62 { pt3dadd( -38.0071, 4.78074, 65.5683, 0.88 ) }
    dend_62 { pt3dadd( -38.3926, 4.47571, 65.7206, 1.55 ) }
    dend_62 { pt3dadd( -39.9437, 3.30716, 66.2528, 0.22 ) }
    dend_62 { pt3dadd( -40.3451, 3.01639, 66.3969, 0.22 ) }
    dend_62 { pt3dadd( -41.3054, 2.35965, 66.7849, 0.81 ) }
    dend_62 { pt3dadd( -42.5501, 1.55351, 67.3599, 0.07 ) }
    dend_62 { pt3dadd( -43.022, 1.26565, 67.6271, 0.74 ) }
    dend_62 { pt3dadd( -43.727, 0.856054, 68.1313, 0.22 ) }
    dend_62 { pt3dadd( -44.4607, 0.428006, 68.8138, 0.37 ) }
    dend_62 { pt3dadd( -44.9325, 0.143605, 69.3469, 0.22 ) }
    dend_62 { pt3dadd( -45.6228, -0.321044, 70.3266, 1.03 ) }
    dend_62 { pt3dadd( -46.2751, -0.868224, 71.4876, 0.07 ) }
    dend_62 { pt3dadd( -46.7055, -1.33906, 72.4481, 0.88 ) }
    dend_62 { pt3dadd( -47.0301, -1.78386, 73.2928, 1.25 ) }
    dend_62 { pt3dadd( -47.609, -2.69032, 74.7836, 0.15 ) }
    dend_62 { pt3dadd( -47.8945, -3.17196, 75.4671, 0.74 ) }
    dend_62 { pt3dadd( -48.4689, -4.15738, 76.6525, 0.22 ) }
    dend_62 { pt3dadd( -49.0648, -5.14018, 77.6404, 1.11 ) }
    dend_62 { pt3dadd( -49.4645, -5.74044, 78.1692, 2.06 ) }
    dend_62 { pt3dadd( -50.5398, -7.1942, 79.3368, 0.15 ) }
    dend_62 { pt3dadd( -50.9669, -7.72001, 79.7347, 0.29 ) }
    dend_62 { pt3dadd( -51.9528, -8.80588, 80.5602, 0.07 ) }
    dend_62 { pt3dadd( -52.4464, -9.27149, 80.9509, 0.22 ) }
    dend_62 { pt3dadd( -53.3788, -10.0534, 81.7323, 0.07 ) }
    dend_62 { pt3dadd( -53.8769, -10.4278, 82.234, 1.4 ) }
    dend_62 { pt3dadd( -54.9769, -11.1745, 83.5508, 0.07 ) }
    dend_62 { pt3dadd( -55.5073, -11.512, 84.2354, 0.81 ) }
    dend_62 { pt3dadd( -56.3646, -12.0161, 85.4788, 0.07 ) }
    dend_62 { pt3dadd( -56.8753, -12.2967, 86.3004, 0.96 ) }
    dend_62 { pt3dadd( -57.8113, -12.744, 87.8839, 0.07 ) }
    dend_62 { pt3dadd( -58.1644, -12.8888, 88.4763, 0.07 ) }
    dend_62 { pt3dadd( -58.6246, -13.0558, 89.2294, 1.25 ) }
    dend_62 { pt3dadd( -59.698, -13.422, 90.8711, 0.22 ) }
    dend_62 { pt3dadd( -60.4556, -13.6809, 91.9268, 0.88 ) }
    dend_62 { pt3dadd( -60.9771, -13.8256, 92.561, 1.18 ) }
    dend_62 { pt3dadd( -62.5568, -14.1863, 94.243, 0.15 ) }
    dend_62 { pt3dadd( -63.0626, -14.2919, 94.7213, 0.81 ) }
    dend_62 { pt3dadd( -63.8871, -14.4556, 95.4017, 0.15 ) }
    dend_62 { pt3dadd( -64.7029, -14.6087, 95.9578, 1.18 ) }
    dend_62 { pt3dadd( -66.0353, -14.7991, 96.7629, 0.07 ) }
    dend_62 { pt3dadd( -66.6178, -14.8476, 97.0887, 0.07 ) }
    dend_62 { pt3dadd( -67.4572, -14.8019, 97.4776, 0.07 ) }
    dend_62 { pt3dadd( -67.9014, -14.7406, 97.6602, 0.88 ) }
    dend_62 { pt3dadd( -68.5646, -14.6203, 97.9178, 1.33 ) }
    dend_62 { pt3dadd( -70.3901, -14.1815, 98.5784, 0.07 ) }
    dend_62 { pt3dadd( -71.2509, -13.9302, 98.8602, 1.33 ) }
    dend_62 { pt3dadd( -73.3565, -13.1786, 99.5165, 0.07 ) }
    dend_62 { pt3dadd( -73.7131, -13.0287, 99.6199, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 68/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -27.7743, 33.2837, 37.9378, 0.15 ) }
    dend_61 { pt3dadd( -27.4971, 32.3325, 37.6689, 0.15 ) }
    dend_61 { pt3dadd( -27.3845, 31.9412, 37.525, 0.29 ) }
    dend_61 { pt3dadd( -27.2092, 31.3574, 37.293, 0.15 ) }
    dend_61 { pt3dadd( -27.1372, 31.133, 37.1947, 0.52 ) }
    dend_61 { pt3dadd( -26.9868, 30.6833, 36.9905, 1.33 ) }
    dend_61 { pt3dadd( -26.7062, 29.812, 36.6098, 0.07 ) }
    dend_61 { pt3dadd( -26.5725, 29.3451, 36.3895, 0.07 ) }
    dend_61 { pt3dadd( -26.4583, 28.9429, 36.2217, 0.37 ) }
    dend_61 { pt3dadd( -26.2265, 28.2561, 36.0283, 0.07 ) }
    dend_61 { pt3dadd( -26.1451, 28.0448, 35.9984, 0.15 ) }
    dend_61 { pt3dadd( -25.7481, 27.0655, 35.9896, 0.15 ) }
    dend_61 { pt3dadd( -25.6442, 26.8308, 36.018, 0.74 ) }
    dend_61 { pt3dadd( -25.4136, 26.3017, 36.1253, 1.25 ) }
    dend_61 { pt3dadd( -24.8744, 24.9919, 36.4873, 0.15 ) }
    dend_61 { pt3dadd( -24.5706, 24.2117, 36.7497, 0.15 ) }
    dend_61 { pt3dadd( -24.4379, 23.8593, 36.8742, 0.15 ) }
    dend_61 { pt3dadd( -24.285, 23.4197, 37.0265, 0.15 ) }
    dend_61 { pt3dadd( -24.1173, 22.8547, 37.195, 1.25 ) }
    dend_61 { pt3dadd( -23.9077, 21.8665, 37.421, 0.07 ) }
    dend_61 { pt3dadd( -23.8586, 21.4576, 37.4857, 0.96 ) }
    dend_61 { pt3dadd( -23.8342, 21.0969, 37.5207, 1.25 ) }
    dend_61 { pt3dadd( -23.7705, 19.8862, 37.5956, 0.15 ) }
    dend_61 { pt3dadd( -23.7486, 19.3854, 37.6038, 0.96 ) }
    dend_61 { pt3dadd( -23.6999, 18.4311, 37.5749, 0.07 ) }
    dend_61 { pt3dadd( -23.6738, 17.9751, 37.5384, 0.29 ) }
    dend_61 { pt3dadd( -23.6011, 16.6372, 37.3802, 0.07 ) }
    dend_61 { pt3dadd( -23.5854, 16.3412, 37.337, 0.29 ) }
    dend_61 { pt3dadd( -23.5318, 15.4182, 37.1722, 0.07 ) }
    dend_61 { pt3dadd( -23.4943, 14.9955, 37.0868, 1.03 ) }
    dend_61 { pt3dadd( -23.4411, 14.5854, 36.9995, 1.47 ) }
    dend_61 { pt3dadd( -23.186, 13.1195, 36.69, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_61 { pt3dadd( -23.1079, 12.7811, 36.6217, 0.59 ) }
    dend_61 { pt3dadd( -22.986, 12.308, 36.5356, 0.07 ) }
    dend_61 { pt3dadd( -22.8648, 11.8596, 36.4768, 0.07 ) }
    dend_61 { pt3dadd( -22.6968, 11.2529, 36.4221, 0.07 ) }
    dend_61 { pt3dadd( -22.5572, 10.7099, 36.4022, 1.18 ) }
    dend_61 { pt3dadd( -22.2148, 9.29733, 36.4135, 0.07 ) }
    dend_61 { pt3dadd( -22.1374, 8.88832, 36.426, 0.74 ) }
    dend_61 { pt3dadd( -21.9846, 7.79621, 36.476, 0.07 ) }
    dend_61 { pt3dadd( -21.9585, 7.4842, 36.4927, 0.44 ) }
    dend_61 { pt3dadd( -21.9174, 6.41861, 36.5735, 0.07 ) }
    dend_61 { pt3dadd( -21.9207, 5.87237, 36.6297, 1.47 ) }
    dend_61 { pt3dadd( -21.9755, 4.74852, 36.7697, 0.07 ) }
    dend_61 { pt3dadd( -22.0042, 4.40088, 36.8115, 0.37 ) }
    dend_61 { pt3dadd( -22.0862, 3.70677, 36.8855, 0.07 ) }
    dend_61 { pt3dadd( -22.2093, 2.78007, 37.0045, 0.07 ) }
    dend_61 { pt3dadd( -22.2947, 2.18197, 37.0895, 0.07 ) }
    dend_61 { pt3dadd( -22.3311, 1.87015, 37.1404, 0.37 ) }
    dend_61 { pt3dadd( -22.3954, 1.10069, 37.2791, 0.15 ) }
    dend_61 { pt3dadd( -22.4227, 0.622773, 37.3814, 0.81 ) }
    dend_61 { pt3dadd( -22.4445, -0.203367, 37.5823, 0.15 ) }
    dend_61 { pt3dadd( -22.4389, -0.880111, 37.7674, 1.55 ) }
    dend_61 { pt3dadd( -22.4006, -1.98654, 38.1137, 0.07 ) }
    dend_61 { pt3dadd( -22.3786, -2.31692, 38.2372, 0.66 ) }
    dend_61 { pt3dadd( -22.2633, -3.21249, 38.6267, 0.07 ) }
    dend_61 { pt3dadd( -22.1914, -3.52655, 38.7704, 0.29 ) }
    dend_61 { pt3dadd( -22.0391, -3.98894, 38.9883, 0.07 ) }
    dend_61 { pt3dadd( -21.9339, -4.27523, 39.1374, 0.74 ) }
    dend_61 { pt3dadd( -21.6373, -5.0065, 39.5449, 0.15 ) }
    dend_61 { pt3dadd( -21.3435, -5.63446, 39.8901, 1.18 ) }
    dend_61 { pt3dadd( -20.6273, -6.85572, 40.5273, 0.15 ) }
    dend_61 { pt3dadd( -20.3652, -7.26185, 40.7306, 0.66 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 31/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -9.42395, 77.4328, 128.472, 0.07 ) }
    dend_59 { pt3dadd( -11.1426, 75.9419, 128.388, 0.07 ) }
    dend_59 { pt3dadd( -11.7418, 75.2975, 128.338, 0.07 ) }
    dend_59 { pt3dadd( -12.3522, 74.6409, 128.286, 0.22 ) }
    dend_59 { pt3dadd( -13.5046, 73.4016, 128.189, 0.07 ) }
    dend_59 { pt3dadd( -13.9734, 72.8974, 128.149, 0.52 ) }
    dend_59 { pt3dadd( -14.7632, 72.048, 128.082, 0.07 ) }
    dend_59 { pt3dadd( -15.0357, 71.578, 128.059, 0.22 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 39/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -9.42395, 77.4328, 128.472, 0.29 ) }
    dend_58 { pt3dadd( -9.43546, 77.468, 130.044, 0.29 ) }
    dend_58 { pt3dadd( -9.48597, 77.4035, 131.186, 0.29 ) }
    dend_58 { pt3dadd( -9.62574, 77.2821, 132.461, 0.59 ) }
    dend_58 { pt3dadd( -9.8744, 77.1245, 134.153, 0.74 ) }
    dend_58 { pt3dadd( -10.0163, 77.0702, 134.963, 1.03 ) }
    dend_58 { pt3dadd( -10.1977, 77.0647, 135.916, 1.03 ) }
    dend_58 { pt3dadd( -10.4545, 77.1195, 137.128, 0.15 ) }
    dend_58 { pt3dadd( -10.667, 77.2649, 138.049, 0.44 ) }
    dend_58 { pt3dadd( -10.9538, 77.5283, 139.189, 0.81 ) }
    dend_58 { pt3dadd( -11.1625, 77.7852, 139.909, 1.03 ) }
    dend_58 { pt3dadd( -11.5333, 78.3801, 141.205, 0.15 ) }
    dend_58 { pt3dadd( -11.8353, 79.0332, 142.344, 0.74 ) }
    dend_58 { pt3dadd( -12.0527, 79.8419, 143.496, 0.37 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 53/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 13.9723, -4.64913, -4.50673, 0.22 ) }
    dend_55 { pt3dadd( 13.1439, -6.62706, -6.91985, 0.22 ) }
    dend_55 { pt3dadd( 12.8984, -7.52005, -7.87502, 0.37 ) }
    dend_55 { pt3dadd( 12.8051, -8.06175, -8.43118, 0.59 ) }
    dend_55 { pt3dadd( 12.6324, -9.06323, -9.45937, 0.22 ) }
    dend_55 { pt3dadd( 12.4444, -10.1544, -10.5796, 1.47 ) }
    dend_55 { pt3dadd( 12.2526, -11.2667, -11.7216, 0.29 ) }
    dend_55 { pt3dadd( 12.2792, -12.3534, -12.5949, 0.15 ) }
    dend_55 { pt3dadd( 12.3917, -13.3744, -13.3524, 1.03 ) }
    dend_55 { pt3dadd( 9.75349, -21.8451, -21.6848, 1.03 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 63/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 13.9723, -4.64913, -4.50673, 0.22 ) }
    dend_52 { pt3dadd( 14.6627, -5.43281, -4.3519, 0.22 ) }
    dend_52 { pt3dadd( 15.2317, -6.20443, -4.24585, 1.4 ) }
    dend_52 { pt3dadd( 15.973, -7.53134, -4.11729, 2.65 ) }
    dend_52 { pt3dadd( 17.4766, -10.9894, -3.83029, 0.22 ) }
    dend_52 { pt3dadd( 17.7224, -11.6961, -3.78503, 0.22 ) }
    dend_52 { pt3dadd( 18.0336, -12.8019, -3.73098, 0.96 ) }
    dend_52 { pt3dadd( 18.2561, -14.1817, -3.68913, 2.06 ) }
    dend_52 { pt3dadd( 18.3717, -16.433, -3.6732, 0.22 ) }
    dend_52 { pt3dadd( 18.2564, -17.7234, -3.73055, 0.15 ) }
    dend_52 { pt3dadd( 18.0475, -18.723, -3.85543, 0.29 ) }
    dend_52 { pt3dadd( 17.7918, -19.7538, -3.98624, 0.15 ) }
    dend_52 { pt3dadd( 17.5373, -20.8369, -4.16041, 1.18 ) }
    dend_52 { pt3dadd( 17.4038, -21.4772, -4.28758, 1.7 ) }
    dend_52 { pt3dadd( 16.923, -24.2516, -4.92879, 0.22 ) }
    dend_52 { pt3dadd( 16.7798, -25.3687, -5.20768, 0.81 ) }
    dend_52 { pt3dadd( 16.7256, -26.0957, -5.39096, 1.4 ) }
    dend_52 { pt3dadd( 16.6802, -28.5707, -6.01461, 0.15 ) }
    dend_52 { pt3dadd( 16.7357, -29.2094, -6.17554, 0.15 ) }
    dend_52 { pt3dadd( 16.9986, -30.4725, -6.50424, 0.15 ) }
    dend_52 { pt3dadd( 17.2529, -31.284, -6.7098, 0.37 ) }
    dend_52 { pt3dadd( 17.5023, -32.0943, -6.89535, 1.33 ) }
    dend_52 { pt3dadd( 17.7503, -33.0569, -7.08567, 1.84 ) }
    dend_52 { pt3dadd( 18.1996, -36.2123, -7.49254, 0.22 ) }
    dend_52 { pt3dadd( 18.2669, -37.9391, -7.64478, 0.07 ) }
    dend_52 { pt3dadd( 18.277, -38.6719, -7.70131, 0.96 ) }
    dend_52 { pt3dadd( 18.2156, -40.2456, -7.77952, 0.22 ) }
    dend_52 { pt3dadd( 18.0605, -41.466, -7.80063, 1.33 ) }
    dend_52 { pt3dadd( 17.4659, -43.6052, -7.70872, 0.22 ) }
    dend_52 { pt3dadd( 16.7769, -44.7334, -7.50021, 1.18 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 93/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 12.6606, 32.7894, 33.7042, 0.44 ) }
    dend_44 { pt3dadd( 11.5474, 32.7101, 34.577, 0.44 ) }
    dend_44 { pt3dadd( 10.6445, 32.769, 35.1545, 0.44 ) }
    dend_44 { pt3dadd( 9.74119, 32.9159, 35.7222, 0.44 ) }
    dend_44 { pt3dadd( 9.34828, 32.9968, 35.9811, 0.44 ) }
    dend_44 { pt3dadd( 8.7164, 33.1322, 36.3967, 0.96 ) }
    dend_44 { pt3dadd( 8.31666, 33.2164, 36.6529, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_44 { pt3dadd( 7.21653, 33.4273, 37.2382, 0.15 ) }
    dend_44 { pt3dadd( 6.68068, 33.5611, 37.5479, 0.15 ) }
    dend_44 { pt3dadd( 6.19673, 33.6895, 37.8809, 0.15 ) }
    dend_44 { pt3dadd( 5.477, 33.8413, 38.4253, 0.15 ) }
    dend_44 { pt3dadd( 5.07189, 33.8732, 38.7355, 1.33 ) }
    dend_44 { pt3dadd( 4.22261, 33.8428, 39.3631, 1.92 ) }
    dend_44 { pt3dadd( 2.70667, 33.6382, 40.431, 0.22 ) }
    dend_44 { pt3dadd( 1.70701, 33.4244, 41.0765, 0.59 ) }
    dend_44 { pt3dadd( 1.18047, 33.253, 41.4236, 1.03 ) }
    dend_44 { pt3dadd( -0.0487933, 32.7007, 42.2944, 0.15 ) }
    dend_44 { pt3dadd( -0.715726, 32.309, 42.8122, 0.15 ) }
    dend_44 { pt3dadd( -1.02113, 32.0731, 43.0646, 0.88 ) }
    dend_44 { pt3dadd( -1.60496, 31.4804, 43.5518, 1.92 ) }
    dend_44 { pt3dadd( -2.78045, 30.0684, 44.5763, 0.22 ) }
    dend_44 { pt3dadd( -3.07936, 29.687, 44.8652, 0.22 ) }
    dend_44 { pt3dadd( -3.42964, 29.1783, 45.2091, 0.22 ) }
    dend_44 { pt3dadd( -3.63163, 28.8889, 45.3993, 0.22 ) }
    dend_44 { pt3dadd( -4.16518, 28.209, 45.848, 0.22 ) }
    dend_44 { pt3dadd( -4.62002, 27.7118, 46.1816, 1.11 ) }
    dend_44 { pt3dadd( -5.39818, 27.0169, 46.6469, 2.58 ) }
    dend_44 { pt3dadd( -6.8663, 25.8605, 47.4566, 0.52 ) }
    dend_44 { pt3dadd( -8.00597, 24.9917, 48.1062, 0.15 ) }
    dend_44 { pt3dadd( -8.47984, 24.633, 48.4005, 0.15 ) }
    dend_44 { pt3dadd( -9.13597, 24.1545, 48.849, 0.29 ) }
    dend_44 { pt3dadd( -9.74949, 23.7278, 49.2933, 0.96 ) }
    dend_44 { pt3dadd( -10.7234, 23.0495, 50.0252, 0.22 ) }
    dend_44 { pt3dadd( -11.3634, 22.6407, 50.541, 0.22 ) }
    dend_44 { pt3dadd( -11.9429, 22.2302, 51.003, 0.44 ) }
    dend_44 { pt3dadd( -12.5422, 21.7485, 51.5217, 1.62 ) }
    dend_44 { pt3dadd( -13.092, 21.2721, 52.0464, 1.99 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 12.6606, 32.7894, 33.7042, 1.47 ) }
    dend_41 { pt3dadd( 13.9453, 33.2353, 34.0692, 1.47 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 32/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -17.9086, -158.079, 46.0909, 0.22 ) }
    dend_23 { pt3dadd( -17.6897, -157.315, 46.5903, 0.22 ) }
    dend_23 { pt3dadd( -17.4434, -156.443, 47.1212, 0.22 ) }
    dend_23 { pt3dadd( -17.2319, -155.75, 47.5011, 0.22 ) }
    dend_23 { pt3dadd( -16.9788, -154.967, 47.8847, 0.66 ) }
    dend_23 { pt3dadd( -16.7729, -154.381, 48.1672, 0.81 ) }
    dend_23 { pt3dadd( -16.3368, -153.279, 48.6616, 0.15 ) }
    dend_23 { pt3dadd( -16.0434, -152.617, 48.9006, 1.18 ) }
    dend_23 { pt3dadd( -15.7366, -151.968, 49.0989, 1.4 ) }
    dend_23 { pt3dadd( -15.0169, -150.552, 49.4759, 0.15 ) }
    dend_23 { pt3dadd( -14.7399, -150.066, 49.5873, 0.15 ) }
    dend_23 { pt3dadd( -14.1148, -149.117, 49.7844, 1.7 ) }
    dend_23 { pt3dadd( -13.4714, -148.275, 49.9128, 0.22 ) }
    dend_23 { pt3dadd( -12.94, -147.636, 49.9824, 0.88 ) }
    dend_23 { pt3dadd( -12.5008, -147.131, 50.022, 0.22 ) }
    dend_23 { pt3dadd( -12.03, -146.604, 50.0389, 0.07 ) }
    dend_23 { pt3dadd( -11.4881, -145.95, 50.0542, 0.07 ) }
    dend_23 { pt3dadd( -10.7812, -145.034, 50.0908, 0.66 ) }
    dend_23 { pt3dadd( -10.0966, -144.067, 50.1425, 0.07 ) }
    dend_23 { pt3dadd( -9.85513, -143.692, 50.1723, 0.37 ) }
    dend_23 { pt3dadd( -9.56655, -143.19, 50.2204, 0.66 ) }
    dend_23 { pt3dadd( -8.75352, -141.593, 50.4217, 0.07 ) }
    dend_23 { pt3dadd( -8.42933, -140.896, 50.5312, 1.03 ) }
    dend_23 { pt3dadd( -7.89272, -139.594, 50.7843, 0.15 ) }
    dend_23 { pt3dadd( -7.68139, -139.015, 50.9192, 0.88 ) }
    dend_23 { pt3dadd( -7.51926, -138.517, 51.0474, 1.18 ) }
    dend_23 { pt3dadd( -7.08719, -136.903, 51.5191, 0.15 ) }
    dend_23 { pt3dadd( -7.00137, -136.369, 51.6964, 0.15 ) }
    dend_23 { pt3dadd( -6.98068, -135.775, 51.9072, 0.22 ) }
    dend_23 { pt3dadd( -7.04714, -135.331, 52.075, 0.07 ) }
    dend_23 { pt3dadd( -7.20674, -134.8, 52.2636, 0.29 ) }
    dend_23 { pt3dadd( -7.41715, -134.306, 52.4279, 0.07 ) }
    dend_23 { pt3dadd( -7.63296, -133.9, 52.541, 0.59 ) }
    dend_23 { pt3dadd( -8.01743, -133.242, 52.7057, 0.15 ) }
    dend_23 { pt3dadd( -8.53729, -132.393, 52.9021, 1.62 ) }
    dend_23 { pt3dadd( -9.06598, -131.534, 53.0926, 0.15 ) }
    dend_23 { pt3dadd( -9.43859, -130.929, 53.2342, 0.29 ) }
    dend_23 { pt3dadd( -10.0347, -129.947, 53.4682, 0.07 ) }
    dend_23 { pt3dadd( -10.4571, -129.151, 53.6778, 0.07 ) }
    dend_23 { pt3dadd( -10.6654, -128.697, 53.8075, 0.66 ) }
    dend_23 { pt3dadd( -11.0103, -127.886, 54.0519, 0.15 ) }
    dend_23 { pt3dadd( -11.2623, -127.271, 54.2509, 1.03 ) }
    dend_23 { pt3dadd( -11.5557, -126.559, 54.5131, 1.62 ) }
    dend_23 { pt3dadd( -12.3427, -124.59, 55.3789, 0.07 ) }
    dend_23 { pt3dadd( -12.6742, -123.713, 55.7986, 0.59 ) }
    dend_23 { pt3dadd( -12.9077, -123.089, 56.1168, 0.15 ) }
    dend_23 { pt3dadd( -13.1985, -122.289, 56.5378, 0.88 ) }
    dend_23 { pt3dadd( -13.5729, -121.116, 57.1609, 0.15 ) }
    dend_23 { pt3dadd( -13.9105, -120.052, 57.7613, 0.15 ) }
    dend_23 { pt3dadd( -14.1771, -119.216, 58.2676, 1.33 ) }
    dend_23 { pt3dadd( -14.4875, -118.155, 58.9278, 0.15 ) }
    dend_23 { pt3dadd( -14.6909, -117.277, 59.4729, 0.15 ) }
    dend_23 { pt3dadd( -14.7998, -116.515, 59.9108, 1.33 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 85/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -17.9086, -158.079, 46.0909, 0.15 ) }
    dend_22 { pt3dadd( -18.51, -159.519, 46.4772, 0.15 ) }
    dend_22 { pt3dadd( -18.9796, -160.342, 46.8933, 0.15 ) }
    dend_22 { pt3dadd( -19.376, -160.897, 47.3128, 0.15 ) }
    dend_22 { pt3dadd( -19.7442, -161.331, 47.6973, 0.74 ) }
    dend_22 { pt3dadd( -20.3582, -162.009, 48.3249, 0.15 ) }
    dend_22 { pt3dadd( -20.8237, -162.544, 48.8081, 1.4 ) }
    dend_22 { pt3dadd( -21.5833, -163.39, 49.7315, 0.15 ) }
    dend_22 { pt3dadd( -22.2986, -164.191, 50.6534, 0.66 ) }
    dend_22 { pt3dadd( -22.7901, -164.889, 51.4942, 0.07 ) }
    dend_22 { pt3dadd( -22.9544, -165.235, 51.9603, 0.07 ) }
    dend_22 { pt3dadd( -23.1191, -165.68, 52.5583, 0.29 ) }
    dend_22 { pt3dadd( -23.3076, -166.453, 53.603, 0.07 ) }
    dend_22 { pt3dadd( -23.3498, -167.092, 54.4543, 1.25 ) }
    dend_22 { pt3dadd( -23.2376, -168.325, 56.1403, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_22 { pt3dadd( -22.9508, -169.637, 58.1074, 1.62 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 1/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -75.1876, -122.901, 15.8571, 0.59 ) }
    dend_18 { pt3dadd( -76.4878, -122.665, 15.2637, 0.59 ) }
    dend_18 { pt3dadd( -76.8849, -122.577, 15.0492, 0.07 ) }
    dend_18 { pt3dadd( -77.4231, -122.453, 14.6941, 0.07 ) }
    dend_18 { pt3dadd( -77.7915, -122.365, 14.4216, 0.37 ) }
    dend_18 { pt3dadd( -78.4037, -122.204, 13.9212, 0.07 ) }
    dend_18 { pt3dadd( -78.8661, -122.067, 13.4896, 0.15 ) }
    dend_18 { pt3dadd( -79.4804, -121.888, 12.7841, 1.62 ) }
    dend_18 { pt3dadd( -80.1257, -121.62, 11.7113, 0.22 ) }
    dend_18 { pt3dadd( -80.3252, -121.5, 11.1779, 0.22 ) }
    dend_18 { pt3dadd( -80.4568, -121.399, 10.695, 0.59 ) }
    dend_18 { pt3dadd( -80.5597, -121.256, 9.96922, 0.59 ) }
    dend_18 { pt3dadd( -80.5663, -121.127, 9.18784, 0.59 ) }
    dend_18 { pt3dadd( -80.3682, -121.017, 8.17433, 1.18 ) }
    dend_18 { pt3dadd( -80.1455, -120.98, 7.65594, 1.18 ) }
    dend_18 { pt3dadd( -83.7036, -119.375, 0.966273, 1.18 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 17/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -75.1876, -122.901, 15.8571, 0.22 ) }
    dend_17 { pt3dadd( -76.1316, -123.565, 15.4193, 0.22 ) }
    dend_17 { pt3dadd( -76.6523, -123.923, 15.1645, 0.15 ) }
    dend_17 { pt3dadd( -77.4042, -124.401, 14.7249, 0.15 ) }
    dend_17 { pt3dadd( -78.0539, -124.8, 14.2954, 1.25 ) }
    dend_17 { pt3dadd( -78.7997, -125.228, 13.7938, 0.15 ) }
    dend_17 { pt3dadd( -79.4426, -125.568, 13.3735, 0.15 ) }
    dend_17 { pt3dadd( -80.3354, -125.99, 12.7854, 1.62 ) }
    dend_17 { pt3dadd( -81.3376, -126.43, 12.1681, 0.22 ) }
    dend_17 { pt3dadd( -81.9548, -126.712, 11.8003, 0.22 ) }
    dend_17 { pt3dadd( -82.6804, -127.053, 11.3679, 1.33 ) }
    dend_17 { pt3dadd( -83.3985, -127.38, 10.9544, 1.11 ) }
    dend_17 { pt3dadd( -84.6216, -127.908, 10.2928, 0.15 ) }
    dend_17 { pt3dadd( -85.059, -128.096, 10.0849, 0.15 ) }
    dend_17 { pt3dadd( -86.0652, -128.541, 9.70938, 0.15 ) }
    dend_17 { pt3dadd( -86.656, -128.799, 9.54908, 0.15 ) }
    dend_17 { pt3dadd( -87.277, -129.057, 9.47118, 0.66 ) }
    dend_17 { pt3dadd( -88.2028, -129.335, 9.56522, 0.07 ) }
    dend_17 { pt3dadd( -88.7989, -129.411, 9.77529, 0.88 ) }
    dend_17 { pt3dadd( -89.6319, -129.375, 10.1884, 0.15 ) }
    dend_17 { pt3dadd( -90.4907, -129.216, 10.6747, 0.59 ) }
    dend_17 { pt3dadd( -91.5602, -128.87, 11.3502, 1.4 ) }
    dend_17 { pt3dadd( -92.9592, -128.221, 12.2367, 0.22 ) }
    dend_17 { pt3dadd( -93.9428, -127.618, 12.8628, 1.25 ) }
    dend_17 { pt3dadd( -95.1097, -126.744, 13.6093, 0.44 ) }
    dend_17 { pt3dadd( -95.7209, -126.197, 13.9826, 0.52 ) }
    dend_17 { pt3dadd( -96.4065, -125.467, 14.4039, 1.11 ) }
    dend_17 { pt3dadd( -97.1482, -124.541, 14.8953, 0.37 ) }
    dend_17 { pt3dadd( -97.9645, -123.415, 15.5149, 0.07 ) }
    dend_17 { pt3dadd( -98.416, -122.789, 15.8968, 0.07 ) }
    dend_17 { pt3dadd( -98.7273, -122.341, 16.2121, 0.22 ) }
    dend_17 { pt3dadd( -99.1411, -121.724, 16.7207, 0.96 ) }
    dend_17 { pt3dadd( -99.5075, -121.145, 17.252, 2.06 ) }
    dend_17 { pt3dadd( -100.208, -119.878, 18.5786, 0.22 ) }
    dend_17 { pt3dadd( -100.633, -119.031, 19.5978, 0.74 ) }
    dend_17 { pt3dadd( -100.903, -118.515, 20.3507, 0.74 ) }
    dend_17 { pt3dadd( -101.164, -118.052, 21.2107, 0.74 ) }
    dend_17 { pt3dadd( -101.257, -117.895, 21.6073, 0.74 ) }
    dend_17 { pt3dadd( -101.408, -117.617, 22.595, 0.74 ) }
    dend_17 { pt3dadd( -101.441, -117.394, 23.6629, 0.74 ) }
    dend_17 { pt3dadd( -101.437, -117.262, 24.2976, 0.74 ) }
    dend_17 { pt3dadd( -101.434, -117.148, 24.6515, 0.74 ) }
    dend_17 { pt3dadd( -101.405, -116.717, 25.4281, 0.74 ) }
    dend_17 { pt3dadd( -101.299, -116.202, 26.029, 0.74 ) }
    dend_17 { pt3dadd( -101.033, -115.224, 26.9198, 0.29 ) }
    dend_17 { pt3dadd( -100.868, -114.666, 27.3518, 0.29 ) }
    dend_17 { pt3dadd( -100.605, -113.882, 27.9019, 0.07 ) }
    dend_17 { pt3dadd( -100.42, -113.405, 28.2219, 0.44 ) }
    dend_17 { pt3dadd( -99.9077, -112.224, 28.9659, 0.07 ) }
    dend_17 { pt3dadd( -99.5924, -111.588, 29.3696, 0.07 ) }
    dend_17 { pt3dadd( -99.2695, -110.979, 29.7666, 0.07 ) }
    dend_17 { pt3dadd( -99.0728, -110.633, 30.0062, 0.29 ) }
    dend_17 { pt3dadd( -98.6992, -110.003, 30.4359, 0.07 ) }
    dend_17 { pt3dadd( -98.4015, -109.476, 30.8225, 0.37 ) }
    dend_17 { pt3dadd( -98.0648, -108.907, 31.2866, 0.22 ) }
    dend_17 { pt3dadd( -97.9302, -108.695, 31.5031, 0.81 ) }
    dend_17 { pt3dadd( -97.7083, -108.331, 31.9962, 0.37 ) }
    dend_17 { pt3dadd( -97.4672, -107.845, 32.8931, 0.88 ) }
    dend_17 { pt3dadd( -97.2497, -107.316, 34.0097, 0.88 ) }
    dend_17 { pt3dadd( -97.1907, -107.122, 34.4823, 0.88 ) }
    dend_17 { pt3dadd( -97.1353, -106.783, 35.4273, 0.88 ) }
    dend_17 { pt3dadd( -97.1097, -106.528, 36.2775, 0.88 ) }
    dend_17 { pt3dadd( -97.1046, -106.261, 37.5704, 0.88 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 80/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 16.7769, -44.7334, -7.50021, 0.29 ) }
    dend_54 { pt3dadd( 17.0236, -46.0633, -7.29168, 0.29 ) }
    dend_54 { pt3dadd( 17.165, -46.7278, -7.19285, 0.15 ) }
    dend_54 { pt3dadd( 17.3165, -47.3669, -7.10688, 1.03 ) }
    dend_54 { pt3dadd( 17.6103, -48.5627, -6.96161, 0.15 ) }
    dend_54 { pt3dadd( 17.8085, -49.3693, -6.86363, 1.4 ) }
    dend_54 { pt3dadd( 18.2598, -51.206, -6.64051, 0.07 ) }
    dend_54 { pt3dadd( 18.3257, -51.4844, -6.60536, 0.81 ) }
    dend_54 { pt3dadd( 18.5674, -52.4321, -6.51311, 0.07 ) }
    dend_54 { pt3dadd( 18.768, -53.1061, -6.45793, 1.62 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 90/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 16.7769, -44.7334, -7.50021, 1.92 ) }
    dend_53 { pt3dadd( 16.6694, -45.2339, -7.1299, 1.92 ) }
    dend_53 { pt3dadd( 16.5474, -45.7375, -6.74997, 2.06 ) }
    dend_53 { pt3dadd( 16.215, -46.8354, -5.8792, 0.22 ) }
    dend_53 { pt3dadd( 16.1006, -47.1861, -5.5864, 0.66 ) }
    dend_53 { pt3dadd( 15.901, -47.6407, -5.18114, 0.22 ) }
    dend_53 { pt3dadd( 15.7289, -47.9466, -4.89973, 0.96 ) }
    dend_53 { pt3dadd( 15.6182, -48.1234, -4.72911, 1.47 ) }
    dend_53 { pt3dadd( 15.1212, -48.7914, -4.04643, 0.52 ) }
    dend_53 { pt3dadd( 14.7911, -49.1196, -3.66487, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_53 { pt3dadd( 14.0803, -49.7673, -2.92096, 0.15 ) }
    dend_53 { pt3dadd( 13.6779, -50.1347, -2.5211, 0.37 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 2/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -13.092, 21.2721, 52.0464, 0.07 ) }
    dend_48 { pt3dadd( -14.7304, 21.5302, 52.5416, 0.07 ) }
    dend_48 { pt3dadd( -15.4911, 21.65, 52.7715, 0.96 ) }
    dend_48 { pt3dadd( -16.5116, 21.8108, 53.0799, 0.07 ) }
    dend_48 { pt3dadd( -17.0505, 21.8957, 53.2428, 0.29 ) }
    dend_48 { pt3dadd( -17.9459, 22.0367, 53.5134, 0.07 ) }
    dend_48 { pt3dadd( -18.9173, 22.1897, 53.8071, 0.07 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 9/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -13.092, 21.2721, 52.0464, 0.44 ) }
    dend_45 { pt3dadd( -12.7072, 20.2994, 53.1691, 0.44 ) }
    dend_45 { pt3dadd( -12.273, 19.5508, 54.1678, 0.96 ) }
    dend_45 { pt3dadd( -11.9128, 19.0493, 54.9221, 0.66 ) }
    dend_45 { pt3dadd( -11.5294, 18.5306, 55.7179, 0.15 ) }
    dend_45 { pt3dadd( -11.3667, 18.2198, 56.1336, 0.15 ) }
    dend_45 { pt3dadd( -11.1529, 17.7339, 56.7329, 0.29 ) }
    dend_45 { pt3dadd( -10.8625, 17.0222, 57.552, 0.29 ) }
    dend_45 { pt3dadd( -10.7132, 16.5473, 58.0224, 0.74 ) }
    dend_45 { pt3dadd( -10.5031, 15.8991, 58.5895, 1.62 ) }
    dend_45 { pt3dadd( -9.91747, 14.2609, 59.8738, 0.22 ) }
    dend_45 { pt3dadd( -9.696, 13.6071, 60.3398, 1.18 ) }
    dend_45 { pt3dadd( -9.59074, 13.2363, 60.5813, 1.55 ) }
    dend_45 { pt3dadd( -9.31974, 12.2278, 61.1868, 0.29 ) }
    dend_45 { pt3dadd( -9.04865, 11.3348, 61.7235, 0.22 ) }
    dend_45 { pt3dadd( -8.66337, 10.3768, 62.3456, 0.22 ) }
    dend_45 { pt3dadd( -8.30214, 9.75712, 62.812, 0.22 ) }
    dend_45 { pt3dadd( -7.97318, 9.20618, 63.2848, 0.52 ) }
    dend_45 { pt3dadd( -7.8291, 9.00495, 63.4981, 0.52 ) }
    dend_45 { pt3dadd( -7.50992, 8.64137, 63.992, 0.52 ) }
    dend_45 { pt3dadd( -7.28263, 8.38809, 64.3471, 0.52 ) }
    dend_45 { pt3dadd( -6.99942, 8.07312, 64.731, 0.52 ) }
    dend_45 { pt3dadd( -6.51131, 7.53741, 65.3299, 0.15 ) }
    dend_45 { pt3dadd( -6.18769, 7.19042, 65.6908, 0.15 ) }
    dend_45 { pt3dadd( -5.94069, 6.92049, 65.9507, 0.44 ) }
    dend_45 { pt3dadd( -5.52809, 6.46795, 66.3632, 1.11 ) }
    dend_45 { pt3dadd( -4.75546, 5.60727, 67.0411, 0.15 ) }
    dend_45 { pt3dadd( -4.45501, 5.25674, 67.2817, 0.15 ) }
    dend_45 { pt3dadd( -3.83231, 4.50043, 67.7721, 0.22 ) }
    dend_45 { pt3dadd( -3.33302, 3.89869, 68.1435, 1.25 ) }
    dend_45 { pt3dadd( -2.8238, 3.35049, 68.4957, 1.99 ) }
    dend_45 { pt3dadd( -1.57134, 2.20384, 69.2763, 0.15 ) }
    dend_45 { pt3dadd( -1.01217, 1.76424, 69.5589, 1.03 ) }
    dend_45 { pt3dadd( -0.402683, 1.35678, 69.8203, 1.03 ) }
    dend_45 { pt3dadd( 0.860348, 0.765144, 70.2098, 0.15 ) }
    dend_45 { pt3dadd( 1.80753, 0.472805, 70.4138, 0.15 ) }
    dend_45 { pt3dadd( 2.66111, 0.315098, 70.523, 0.15 ) }
    dend_45 { pt3dadd( 3.64539, 0.244255, 70.5686, 0.81 ) }
    dend_45 { pt3dadd( 4.6413, 0.177725, 70.559, 1.33 ) }
    dend_45 { pt3dadd( 6.59107, -0.0372531, 70.4402, 0.15 ) }
    dend_45 { pt3dadd( 7.21485, -0.189102, 70.3894, 1.25 ) }
    dend_45 { pt3dadd( 8.32086, -0.648144, 70.2981, 0.29 ) }
    dend_45 { pt3dadd( 9.40687, -1.32156, 70.2136, 0.22 ) }
    dend_45 { pt3dadd( 10.1316, -1.93441, 70.1549, 0.15 ) }
    dend_45 { pt3dadd( 10.8389, -2.75103, 70.0613, 1.77 ) }
    dend_45 { pt3dadd( 12.0201, -4.55443, 69.8033, 0.07 ) }
    dend_45 { pt3dadd( 12.3359, -5.11635, 69.7119, 0.81 ) }
    dend_45 { pt3dadd( 12.8318, -6.15341, 69.5425, 0.07 ) }
    dend_45 { pt3dadd( 13.2077, -7.04775, 69.4006, 0.96 ) }
    dend_45 { pt3dadd( 13.5448, -7.88746, 69.2485, 2.06 ) }
    dend_45 { pt3dadd( 14.3576, -9.83332, 68.8584, 0.07 ) }
    dend_45 { pt3dadd( 14.7753, -10.7529, 68.6619, 0.22 ) }
    dend_45 { pt3dadd( 15.267, -11.8136, 68.486, 0.15 ) }
    dend_45 { pt3dadd( 15.675, -12.6844, 68.39, 1.47 ) }
    dend_45 { pt3dadd( 16.1016, -13.6532, 68.3218, 0.66 ) }
    dend_45 { pt3dadd( 16.4898, -14.6474, 68.2793, 0.66 ) }
    dend_45 { pt3dadd( 16.712, -15.2861, 68.2771, 1.77 ) }
    dend_45 { pt3dadd( 17.1659, -16.6566, 68.2862, 0.07 ) }
    dend_45 { pt3dadd( 17.2788, -17.0469, 68.2985, 0.22 ) }
    dend_45 { pt3dadd( 17.4905, -17.9153, 68.3496, 0.22 ) }
    dend_45 { pt3dadd( 17.6307, -18.6621, 68.4186, 1.55 ) }
    dend_45 { pt3dadd( 17.8195, -20.1842, 68.5705, 0.15 ) }
    dend_45 { pt3dadd( 17.8707, -20.8716, 68.622, 0.59 ) }
    dend_45 { pt3dadd( 17.919, -21.7288, 68.6474, 0.15 ) }
    dend_45 { pt3dadd( 17.96, -22.4393, 68.6507, 0.15 ) }
    dend_45 { pt3dadd( 17.9993, -23.0857, 68.6424, 0.74 ) }
    dend_45 { pt3dadd( 18.041, -23.8764, 68.6058, 1.25 ) }
    dend_45 { pt3dadd( 18.0533, -25.3329, 68.5394, 0.07 ) }
    dend_45 { pt3dadd( 18.0508, -26.1347, 68.5078, 0.15 ) }
    dend_45 { pt3dadd( 18.0515, -26.8256, 68.5112, 0.74 ) }
    dend_45 { pt3dadd( 18.0452, -27.4423, 68.5542, 1.4 ) }
    dend_45 { pt3dadd( 18.0275, -28.4754, 68.698, 0.15 ) }
    dend_45 { pt3dadd( 17.9927, -29.4334, 68.9486, 0.07 ) }
    dend_45 { pt3dadd( 17.9538, -29.8813, 69.1342, 0.29 ) }
    dend_45 { pt3dadd( 17.7513, -31.0156, 69.7162, 0.07 ) }
    dend_45 { pt3dadd( 17.628, -31.5792, 70.0393, 0.88 ) }
    dend_45 { pt3dadd( 17.5316, -31.941, 70.2649, 1.33 ) }
    dend_45 { pt3dadd( 17.1948, -32.9938, 70.9848, 0.22 ) }
    dend_45 { pt3dadd( 16.9688, -33.6823, 71.4643, 0.22 ) }
    dend_45 { pt3dadd( 16.7373, -34.3164, 71.9237, 1.33 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 89/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 13.9453, 33.2353, 34.0692, 0.15 ) }
    dend_43 { pt3dadd( 14.7083, 34.7862, 34.7446, 0.15 ) }
    dend_43 { pt3dadd( 14.9627, 35.3374, 35.0409, 0.22 ) }
    dend_43 { pt3dadd( 15.3459, 36.2346, 35.6211, 0.15 ) }
    dend_43 { pt3dadd( 15.5557, 36.7801, 35.9975, 0.96 ) }
    dend_43 { pt3dadd( 15.8179, 37.5305, 36.5244, 0.29 ) }
    dend_43 { pt3dadd( 16.0253, 38.109, 36.9277, 0.29 ) }
    dend_43 { pt3dadd( 16.2419, 38.7693, 37.4462, 0.29 ) }
    dend_43 { pt3dadd( 16.4734, 39.4112, 37.913, 0.29 ) }
    dend_43 { pt3dadd( 16.7178, 40.0213, 38.3185, 1.25 ) }
    dend_43 { pt3dadd( 16.8257, 40.2571, 38.466, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_43 { pt3dadd( 17.5132, 41.5695, 39.2639, 0.15 ) }
    dend_43 { pt3dadd( 18.1088, 42.5251, 39.7988, 1.33 ) }
    dend_43 { pt3dadd( 19.0366, 43.8182, 40.4703, 0.07 ) }
    dend_43 { pt3dadd( 19.5971, 44.4809, 40.8049, 0.59 ) }
    dend_43 { pt3dadd( 20.4151, 45.3404, 41.244, 0.15 ) }
    dend_43 { pt3dadd( 21.1612, 46.0874, 41.627, 1.11 ) }
    dend_43 { pt3dadd( 21.7766, 46.7674, 41.9535, 2.14 ) }
    dend_43 { pt3dadd( 22.0837, 47.1616, 42.1274, 1.84 ) }
    dend_43 { pt3dadd( 22.8647, 48.6449, 42.7474, 0.15 ) }
    dend_43 { pt3dadd( 23.1149, 49.5553, 43.0864, 1.4 ) }
    dend_43 { pt3dadd( 23.1746, 50.3252, 43.3589, 0.96 ) }
    dend_43 { pt3dadd( 23.1011, 52.3458, 44.1296, 0.15 ) }
    dend_43 { pt3dadd( 23.0035, 53.1708, 44.4799, 0.96 ) }
    dend_43 { pt3dadd( 22.6992, 54.8284, 45.3137, 0.15 ) }
    dend_43 { pt3dadd( 22.5634, 55.373, 45.6385, 1.18 ) }
    dend_43 { pt3dadd( 22.3292, 56.3877, 46.3624, 0.15 ) }
    dend_43 { pt3dadd( 22.1923, 57.3547, 47.2082, 0.59 ) }
    dend_43 { pt3dadd( 22.1899, 57.6653, 47.5431, 0.88 ) }
    dend_43 { pt3dadd( 22.3031, 58.6997, 48.7852, 0.22 ) }
    dend_43 { pt3dadd( 22.4655, 59.3735, 49.653, 0.88 ) }
    dend_43 { pt3dadd( 22.6318, 59.9466, 50.4078, 1.77 ) }
    dend_43 { pt3dadd( 22.9974, 61.0338, 51.7873, 0.29 ) }
    dend_43 { pt3dadd( 23.2218, 61.5697, 52.4223, 0.81 ) }
    dend_43 { pt3dadd( 23.6969, 62.5441, 53.5145, 0.22 ) }
    dend_43 { pt3dadd( 24.088, 63.2523, 54.2569, 0.37 ) }
    dend_43 { pt3dadd( 24.3143, 63.6283, 54.63, 0.37 ) }
    dend_43 { pt3dadd( 24.9032, 64.5405, 55.4888, 1.55 ) }
    dend_43 { pt3dadd( 25.7345, 65.7401, 56.5245, 0.07 ) }
    dend_43 { pt3dadd( 26.4044, 66.6871, 57.2688, 0.22 ) }
    dend_43 { pt3dadd( 26.8614, 67.3276, 57.729, 0.22 ) }
    dend_43 { pt3dadd( 27.2649, 67.9007, 58.1207, 0.22 ) }
    dend_43 { pt3dadd( 27.7299, 68.5946, 58.5682, 0.07 ) }
    dend_43 { pt3dadd( 28.1175, 69.2287, 58.9476, 1.11 ) }
    dend_43 { pt3dadd( 28.327, 69.5972, 59.1402, 1.4 ) }
    dend_43 { pt3dadd( 29.063, 70.8588, 59.7199, 0.07 ) }
    dend_43 { pt3dadd( 29.5205, 71.6394, 60.0636, 0.74 ) }
    dend_43 { pt3dadd( 29.789, 72.1362, 60.2829, 0.74 ) }
    dend_43 { pt3dadd( 30.2126, 72.9741, 60.6578, 0.22 ) }
    dend_43 { pt3dadd( 30.7006, 73.9692, 61.0994, 0.22 ) }
    dend_43 { pt3dadd( 31.023, 74.6298, 61.384, 0.96 ) }
    dend_43 { pt3dadd( 31.2376, 75.0807, 61.5719, 0.96 ) }
    dend_43 { pt3dadd( 32.0027, 76.8046, 62.274, 0.15 ) }
    dend_43 { pt3dadd( 32.4042, 77.7634, 62.6682, 0.15 ) }
    dend_43 { pt3dadd( 32.5646, 78.1951, 62.842, 0.22 ) }
    dend_43 { pt3dadd( 32.9205, 79.4078, 63.2984, 0.07 ) }
    dend_43 { pt3dadd( 33.0765, 80.0386, 63.5362, 0.07 ) }
    dend_43 { pt3dadd( 33.2806, 81.0694, 63.9137, 0.96 ) }
    dend_43 { pt3dadd( 33.4117, 81.9164, 64.2122, 0.22 ) }
    dend_43 { pt3dadd( 33.5154, 82.8662, 64.5341, 1.25 ) }
    dend_43 { pt3dadd( 33.6855, 84.9481, 65.238, 0.15 ) }
    dend_43 { pt3dadd( 33.7476, 85.9715, 65.5764, 1.33 ) }
    dend_43 { pt3dadd( 33.8346, 87.6121, 66.1135, 0.15 ) }
    dend_43 { pt3dadd( 33.8561, 88.1245, 66.288, 0.22 ) }
    dend_43 { pt3dadd( 33.8832, 89.2507, 66.6775, 0.15 ) }
    dend_43 { pt3dadd( 33.8854, 90.0211, 66.9441, 0.81 ) }
    dend_43 { pt3dadd( 33.8826, 90.1623, 66.9909, 0.81 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 56/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 13.9453, 33.2353, 34.0692, 0.29 ) }
    dend_42 { pt3dadd( 14.8697, 33.8762, 34.98, 0.29 ) }
    dend_42 { pt3dadd( 15.714, 34.5624, 35.8714, 0.52 ) }
    dend_42 { pt3dadd( 16.1679, 34.9825, 36.3752, 1.25 ) }
    dend_42 { pt3dadd( 16.9759, 35.7893, 37.2852, 0.15 ) }
    dend_42 { pt3dadd( 17.3447, 36.1659, 37.6972, 0.15 ) }
    dend_42 { pt3dadd( 17.6199, 36.4563, 38.0135, 0.15 ) }
    dend_42 { pt3dadd( 18.028, 36.9778, 38.5124, 0.15 ) }
    dend_42 { pt3dadd( 18.3279, 37.3699, 38.8502, 0.81 ) }
    dend_42 { pt3dadd( 18.7438, 37.8769, 39.2901, 1.33 ) }
    dend_42 { pt3dadd( 19.4564, 38.6949, 40.0234, 0.22 ) }
    dend_42 { pt3dadd( 19.8604, 39.0889, 40.4095, 0.22 ) }
    dend_42 { pt3dadd( 20.3394, 39.4703, 40.8043, 1.11 ) }
    dend_42 { pt3dadd( 20.7463, 39.7461, 41.1074, 1.7 ) }
    dend_42 { pt3dadd( 21.5068, 40.2459, 41.6605, 0.22 ) }
    dend_42 { pt3dadd( 21.9012, 40.494, 41.9436, 0.88 ) }
    dend_42 { pt3dadd( 22.6653, 40.9258, 42.4482, 0.15 ) }
    dend_42 { pt3dadd( 23.1026, 41.1338, 42.7044, 0.29 ) }
    dend_42 { pt3dadd( 23.4978, 41.286, 42.9231, 0.29 ) }
    dend_42 { pt3dadd( 24.0138, 41.4742, 43.2187, 0.15 ) }
    dend_42 { pt3dadd( 24.596, 41.7024, 43.588, 0.15 ) }
    dend_42 { pt3dadd( 25.055, 41.9079, 43.9072, 0.96 ) }
    dend_42 { pt3dadd( 25.6104, 42.17, 44.3173, 0.66 ) }
    dend_42 { pt3dadd( 26.3918, 42.4199, 44.8751, 0.15 ) }
    dend_42 { pt3dadd( 26.9268, 42.5618, 45.258, 0.15 ) }
    dend_42 { pt3dadd( 27.6527, 42.7403, 45.8042, 0.81 ) }
    dend_42 { pt3dadd( 28.7254, 43.024, 46.665, 2.14 ) }
    dend_42 { pt3dadd( 29.2656, 43.181, 47.1262, 2.14 ) }
    dend_42 { pt3dadd( 30.8315, 43.7224, 48.5002, 0.15 ) }
    dend_42 { pt3dadd( 31.3892, 43.9263, 48.9773, 0.15 ) }
    dend_42 { pt3dadd( 32.2189, 44.2081, 49.6526, 0.29 ) }
    dend_42 { pt3dadd( 32.8064, 44.3899, 50.1107, 1.33 ) }
    dend_42 { pt3dadd( 33.3079, 44.5504, 50.5021, 1.62 ) }
    dend_42 { pt3dadd( 34.2737, 44.9205, 51.2685, 0.15 ) }
    dend_42 { pt3dadd( 34.5835, 45.0881, 51.5476, 0.15 ) }
    dend_42 { pt3dadd( 35.0646, 45.3463, 51.9981, 0.15 ) }
    dend_42 { pt3dadd( 35.3399, 45.494, 52.2714, 0.15 ) }
    dend_42 { pt3dadd( 35.696, 45.6606, 52.6428, 0.29 ) }
    dend_42 { pt3dadd( 36.2281, 45.8682, 53.2563, 0.66 ) }
    dend_42 { pt3dadd( 36.9372, 46.1317, 54.1984, 0.15 ) }
    dend_42 { pt3dadd( 37.3035, 46.3047, 54.7532, 0.15 ) }
    dend_42 { pt3dadd( 37.5686, 46.4717, 55.2038, 0.15 ) }
    dend_42 { pt3dadd( 37.8562, 46.7303, 55.7635, 0.66 ) }
    dend_42 { pt3dadd( 38.3459, 47.3247, 56.8828, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_42 { pt3dadd( 38.6324, 47.7576, 57.5953, 0.22 ) }
    dend_42 { pt3dadd( 38.8824, 48.1635, 58.2129, 1.33 ) }
    dend_42 { pt3dadd( 39.1839, 48.6741, 58.9466, 1.92 ) }
    dend_42 { pt3dadd( 39.8242, 49.7755, 60.477, 0.37 ) }
    dend_42 { pt3dadd( 40.17, 50.3942, 61.3178, 0.22 ) }
    dend_42 { pt3dadd( 40.5412, 51.0761, 62.2286, 0.22 ) }
    dend_42 { pt3dadd( 40.7243, 51.4033, 62.7085, 0.22 ) }
    dend_42 { pt3dadd( 40.8553, 51.6615, 63.1709, 0.22 ) }
    dend_42 { pt3dadd( 40.9417, 51.8538, 63.6597, 0.22 ) }
    dend_42 { pt3dadd( 41.0143, 51.9798, 64.1316, 0.22 ) }
    dend_42 { pt3dadd( 41.0999, 52.133, 64.698, 0.52 ) }
    dend_42 { pt3dadd( 41.287, 52.5632, 66.0204, 1.18 ) }
    dend_42 { pt3dadd( 41.4898, 53.0318, 67.2892, 1.4 ) }
    dend_42 { pt3dadd( 41.8714, 53.85, 69.3126, 0.81 ) }
    dend_42 { pt3dadd( 42.1736, 54.3496, 70.4984, 0.81 ) }
    dend_42 { pt3dadd( 42.6122, 54.8897, 71.7927, 1.7 ) }
    dend_42 { pt3dadd( 43.6067, 55.8243, 74.0674, 0.29 ) }
    dend_42 { pt3dadd( 44.1905, 56.2815, 75.1599, 0.29 ) }
    dend_42 { pt3dadd( 44.5446, 56.5345, 75.7331, 1.03 ) }
    dend_42 { pt3dadd( 45.3285, 57.0905, 76.925, 0.22 ) }
    dend_42 { pt3dadd( 45.9661, 57.5386, 77.8813, 1.11 ) }
    dend_42 { pt3dadd( 46.7687, 58.0136, 79.0277, 0.29 ) }
    dend_42 { pt3dadd( 47.3152, 58.2667, 79.795, 0.29 ) }
    dend_42 { pt3dadd( 47.5998, 58.3856, 80.2336, 0.52 ) }
    dend_42 { pt3dadd( 48.0363, 58.5156, 81.0046, 0.52 ) }
    dend_42 { pt3dadd( 48.1833, 58.5554, 81.3052, 0.52 ) }
    dend_42 { pt3dadd( 48.4138, 58.5858, 81.7694, 0.52 ) }
    dend_42 { pt3dadd( 48.8902, 58.5471, 82.4965, 0.52 ) }
    dend_42 { pt3dadd( 49.3462, 58.5121, 82.9305, 0.52 ) }
    dend_42 { pt3dadd( 50.2624, 58.5107, 83.6153, 0.22 ) }
    dend_42 { pt3dadd( 51.1006, 58.5934, 84.1541, 0.15 ) }
    dend_42 { pt3dadd( 51.4226, 58.6854, 84.3814, 0.15 ) }
    dend_42 { pt3dadd( 51.9732, 58.9468, 84.793, 0.81 ) }
    dend_42 { pt3dadd( 52.9008, 59.5389, 85.527, 0.29 ) }
    dend_42 { pt3dadd( 53.5682, 60.0645, 86.0959, 0.81 ) }
    dend_42 { pt3dadd( 54.0837, 60.5789, 86.5694, 1.7 ) }
    dend_42 { pt3dadd( 55.2597, 61.9602, 87.7508, 0.22 ) }
    dend_42 { pt3dadd( 55.8209, 62.7515, 88.3524, 0.44 ) }
    dend_42 { pt3dadd( 56.0392, 63.2019, 88.6313, 0.15 ) }
    dend_42 { pt3dadd( 56.2497, 63.8335, 88.9394, 0.88 ) }
    dend_42 { pt3dadd( 56.5519, 65.1375, 89.4309, 0.22 ) }
    dend_42 { pt3dadd( 56.6775, 65.7704, 89.6244, 0.88 ) }
    dend_42 { pt3dadd( 56.7752, 66.2832, 89.7482, 1.47 ) }
    dend_42 { pt3dadd( 57.1674, 68.2712, 90.2331, 0.22 ) }
    dend_42 { pt3dadd( 57.2699, 68.7114, 90.3397, 0.22 ) }
    dend_42 { pt3dadd( 57.468, 69.3047, 90.4936, 0.37 ) }
    dend_42 { pt3dadd( 58.069, 70.5592, 90.8931, 0.22 ) }
    dend_42 { pt3dadd( 58.3703, 71.0666, 91.0942, 0.22 ) }
    dend_42 { pt3dadd( 58.7058, 71.539, 91.3442, 0.96 ) }
    dend_42 { pt3dadd( 59.0414, 71.9078, 91.5903, 1.55 ) }
    dend_42 { pt3dadd( 60.1429, 72.9768, 92.3899, 0.15 ) }
    dend_42 { pt3dadd( 60.952, 73.6589, 92.948, 1.25 ) }
    dend_42 { pt3dadd( 61.698, 74.2558, 93.4659, 1.25 ) }
    dend_42 { pt3dadd( 62.5724, 74.9015, 94.0554, 0.74 ) }
    dend_42 { pt3dadd( 63.6111, 75.5746, 94.7395, 0.15 ) }
    dend_42 { pt3dadd( 64.3106, 75.9786, 95.1921, 0.29 ) }
    dend_42 { pt3dadd( 64.7873, 76.2118, 95.4739, 0.29 ) }
    dend_42 { pt3dadd( 65.6048, 76.5541, 95.8359, 0.29 ) }
    dend_42 { pt3dadd( 66.4277, 76.878, 96.1108, 0.81 ) }
    dend_42 { pt3dadd( 67.5976, 77.3888, 96.4373, 0.15 ) }
    dend_42 { pt3dadd( 68.2384, 77.7175, 96.6209, 1.11 ) }
    dend_42 { pt3dadd( 68.564, 77.9079, 96.7161, 1.77 ) }
    dend_42 { pt3dadd( 70.277, 78.9544, 97.1993, 0.22 ) }
    dend_42 { pt3dadd( 70.8877, 79.3156, 97.3398, 0.22 ) }
    dend_42 { pt3dadd( 71.6445, 79.7929, 97.4843, 0.22 ) }
    dend_42 { pt3dadd( 72.3129, 80.2215, 97.5651, 0.22 ) }
    dend_42 { pt3dadd( 72.6651, 80.4615, 97.601, 0.44 ) }
    dend_42 { pt3dadd( 73.3577, 80.9661, 97.667, 0.44 ) }
    dend_42 { pt3dadd( 74.2476, 81.6385, 97.7499, 1.55 ) }
    dend_42 { pt3dadd( 75.2107, 82.3007, 97.8216, 0.66 ) }
    dend_42 { pt3dadd( 76.4847, 83.0209, 97.8986, 0.15 ) }
    dend_42 { pt3dadd( 76.9975, 83.2689, 97.9391, 0.15 ) }
    dend_42 { pt3dadd( 77.6425, 83.5467, 98.0175, 0.37 ) }
    dend_42 { pt3dadd( 78.6597, 83.9438, 98.1777, 0.15 ) }
    dend_42 { pt3dadd( 79.3421, 84.1921, 98.3184, 0.81 ) }
    dend_42 { pt3dadd( 80.619, 84.6105, 98.6282, 0.22 ) }
    dend_42 { pt3dadd( 81.2791, 84.8167, 98.7894, 0.22 ) }
    dend_42 { pt3dadd( 81.9765, 85.0255, 98.943, 1.25 ) }
    dend_42 { pt3dadd( 82.3104, 85.1332, 99.0103, 1.25 ) }
    dend_42 { pt3dadd( 83.5188, 85.5573, 99.1982, 0.07 ) }
    dend_42 { pt3dadd( 84.2996, 85.8585, 99.2832, 0.96 ) }
    dend_42 { pt3dadd( 85.8389, 86.4922, 99.3787, 0.22 ) }
    dend_42 { pt3dadd( 86.5962, 86.7907, 99.3998, 1.03 ) }
    dend_42 { pt3dadd( 87.3566, 87.0773, 99.4006, 1.77 ) }
    dend_42 { pt3dadd( 88.8843, 87.6762, 99.3817, 0.15 ) }
    dend_42 { pt3dadd( 89.7266, 88.0113, 99.3533, 0.22 ) }
    dend_42 { pt3dadd( 90.7212, 88.4186, 99.3181, 0.15 ) }
    dend_42 { pt3dadd( 91.4487, 88.7379, 99.3035, 1.03 ) }
    dend_42 { pt3dadd( 92.3701, 89.1529, 99.2986, 0.22 ) }
    dend_42 { pt3dadd( 93.4345, 89.6413, 99.3121, 0.22 ) }
    dend_42 { pt3dadd( 94.5463, 90.1989, 99.3501, 0.15 ) }
    dend_42 { pt3dadd( 95.3025, 90.5929, 99.3775, 0.15 ) }
    dend_42 { pt3dadd( 96.099, 91.0161, 99.4151, 0.81 ) }
    dend_42 { pt3dadd( 96.366, 91.1556, 99.4289, 1.77 ) }
    dend_42 { pt3dadd( 97.4838, 91.7075, 99.434, 0.07 ) }
    dend_42 { pt3dadd( 98.329, 92.1079, 99.3819, 0.59 ) }
    dend_42 { pt3dadd( 100.106, 92.9762, 99.1367, 0.22 ) }
    dend_42 { pt3dadd( 100.486, 93.1612, 99.0662, 0.59 ) }
    dend_42 { pt3dadd( 101.209, 93.498, 98.9055, 0.66 ) }
    dend_42 { pt3dadd( 102.654, 94.1634, 98.5455, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_42 { pt3dadd( 103.231, 94.4202, 98.3664, 0.07 ) }
    dend_42 { pt3dadd( 103.582, 94.5606, 98.2288, 0.52 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 2/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -18.9173, 22.1897, 53.8071, 0.15 ) }
    dend_50 { pt3dadd( -19.6761, 22.716, 54.1801, 0.15 ) }
    dend_50 { pt3dadd( -20.2236, 23.1661, 54.2985, 0.15 ) }
    dend_50 { pt3dadd( -20.8132, 23.7172, 54.2896, 0.07 ) }
    dend_50 { pt3dadd( -21.0904, 23.9987, 54.2163, 0.07 ) }
    dend_50 { pt3dadd( -21.7015, 24.6323, 53.9354, 0.07 ) }
    dend_50 { pt3dadd( -22.1672, 25.1119, 53.6483, 0.07 ) }
    dend_50 { pt3dadd( -22.3608, 25.3337, 53.4293, 0.07 ) }
    dend_50 { pt3dadd( -22.5153, 25.5445, 53.1537, 0.29 ) }
    dend_50 { pt3dadd( -22.6941, 25.8379, 52.6847, 0.29 ) }
    dend_50 { pt3dadd( -22.787, 26.0032, 52.3861, 0.29 ) }
    dend_50 { pt3dadd( -22.8683, 26.1522, 52.1007, 0.29 ) }
    dend_50 { pt3dadd( -22.9667, 26.3344, 51.7264, 0.29 ) }
    dend_50 { pt3dadd( -23.1715, 26.6495, 51.029, 0.22 ) }
    dend_50 { pt3dadd( -23.3374, 26.8458, 50.5447, 0.22 ) }
    dend_50 { pt3dadd( -23.643, 27.1471, 49.7626, 0.88 ) }
    dend_50 { pt3dadd( -23.9223, 27.3897, 49.0937, 0.22 ) }
    dend_50 { pt3dadd( -24.0589, 27.4927, 48.7954, 0.22 ) }
    dend_50 { pt3dadd( -24.2927, 27.6469, 48.3256, 0.15 ) }
    dend_50 { pt3dadd( -24.5816, 27.8222, 47.8097, 0.15 ) }
    dend_50 { pt3dadd( -24.8741, 27.9988, 47.2867, 0.15 ) }
    dend_50 { pt3dadd( -25.1242, 28.1602, 46.8171, 0.15 ) }
    dend_50 { pt3dadd( -25.324, 28.3102, 46.4136, 0.74 ) }
    dend_50 { pt3dadd( -25.4927, 28.4518, 46.0662, 0.74 ) }
    dend_50 { pt3dadd( -25.7317, 28.6749, 45.5251, 0.15 ) }
    dend_50 { pt3dadd( -26.0032, 28.9354, 44.8411, 0.22 ) }
    dend_50 { pt3dadd( -26.1153, 29.0368, 44.5293, 0.22 ) }
    dend_50 { pt3dadd( -26.2748, 29.1822, 43.9868, 0.22 ) }
    dend_50 { pt3dadd( -26.332, 29.2352, 43.7422, 0.22 ) }
    dend_50 { pt3dadd( -26.4255, 29.3126, 43.283, 0.22 ) }
    dend_50 { pt3dadd( -26.4982, 29.3455, 42.8049, 0.22 ) }
    dend_50 { pt3dadd( -26.5305, 29.3336, 42.4608, 0.22 ) }
    dend_50 { pt3dadd( -26.5554, 29.2908, 42.0261, 0.22 ) }
    dend_50 { pt3dadd( -26.5637, 29.2461, 41.638, 0.22 ) }
    dend_50 { pt3dadd( -26.5989, 29.1856, 41.0511, 0.22 ) }
    dend_50 { pt3dadd( -26.6851, 29.0907, 40.2508, 0.44 ) }
    dend_50 { pt3dadd( -26.7621, 29.0156, 39.7612, 0.44 ) }
    dend_50 { pt3dadd( -26.7947, 28.9812, 39.5859, 0.44 ) }
    dend_50 { pt3dadd( -26.8854, 28.849, 39.0631, 0.44 ) }
    dend_50 { pt3dadd( -26.9374, 28.6795, 38.5003, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 42/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -18.9173, 22.1897, 53.8071, 1.03 ) }
    dend_49 { pt3dadd( -19.2974, 22.4134, 54.1936, 1.03 ) }
    dend_49 { pt3dadd( -20.194, 23.0965, 55.2548, 0.07 ) }
    dend_49 { pt3dadd( -20.495, 23.3671, 55.6509, 0.07 ) }
    dend_49 { pt3dadd( -20.7238, 23.6328, 55.9659, 0.22 ) }
    dend_49 { pt3dadd( -21.0855, 24.1281, 56.4838, 0.07 ) }
    dend_49 { pt3dadd( -21.3523, 24.5178, 56.8656, 0.37 ) }
    dend_49 { pt3dadd( -21.7753, 25.2257, 57.5138, 0.15 ) }
    dend_49 { pt3dadd( -22.107, 25.8751, 58.0668, 1.33 ) }
    dend_49 { pt3dadd( -22.8561, 27.3939, 59.3442, 0.07 ) }
    dend_49 { pt3dadd( -23.2965, 28.3124, 60.1146, 0.07 ) }
    dend_49 { pt3dadd( -23.5304, 28.8066, 60.5239, 0.66 ) }
    dend_49 { pt3dadd( -23.7843, 29.3484, 60.9512, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 55/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 16.7373, -34.3164, 71.9237, 0.07 ) }
    dend_47 { pt3dadd( 16.4756, -35.5893, 72.3288, 0.07 ) }
    dend_47 { pt3dadd( 16.3109, -36.3902, 72.5837, 0.37 ) }
    dend_47 { pt3dadd( 16.1251, -37.2932, 72.8711, 0.22 ) }
    dend_47 { pt3dadd( 15.9332, -38.2267, 73.1682, 0.88 ) }
    dend_47 { pt3dadd( 15.8056, -38.8467, 73.3656, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 61/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 16.7373, -34.3164, 71.9237, 0.07 ) }
    dend_46 { pt3dadd( 15.9576, -33.4493, 71.7576, 0.07 ) }
    dend_46 { pt3dadd( 15.6433, -33.0999, 71.6906, 0.44 ) }
    dend_46 { pt3dadd( 15.2754, -32.6908, 71.6122, 0.15 ) }
    dend_46 { pt3dadd( 14.8699, -32.2399, 71.5258, 0.74 ) }
    dend_46 { pt3dadd( 14.3288, -31.6382, 71.4106, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
    ModelViewParmSubset_2 = new SectionList()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_33 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_26 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_14 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_28 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_13 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_7 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_57 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_51 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_5 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_62 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_61 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_52 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_23 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_17 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_45 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_43 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_42 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_32 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_38 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_39 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_10 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_56 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_27 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_3 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_41 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_31 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_60 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_48 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_55 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_49 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_36 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_50 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_53 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_54 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_20 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_29 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_46 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_47 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_59 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_19 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_22 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_58 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_16 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_18 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_42 all.append()
    dend_42 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_1 nseg = 3
    dend_0 nseg = 7
    dend_33 nseg = 3
    dend_26 nseg = 5
    dend_14 nseg = 5
    dend_2 nseg = 5
    dend_35 nseg = 3
    dend_34 nseg = 3
    dend_28 nseg = 5
    dend_13 nseg = 15
    dend_12 nseg = 7
    dend_7 nseg = 3
    dend_57 nseg = 7
    dend_51 nseg = 3
    dend_30 nseg = 5
    dend_24 nseg = 7
    dend_9 nseg = 7
    dend_8 nseg = 5
    dend_6 nseg = 7
    dend_5 nseg = 3
    dend_62 nseg = 5
    dend_61 nseg = 3
    dend_52 nseg = 3
    dend_23 nseg = 3
    dend_17 nseg = 3
    dend_45 nseg = 3
    dend_43 nseg = 3
    dend_42 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L4_DBC_5a91010028_0_0


