// Cell: cACint209_L5_ChC_c38923facb_0_0
/*
{
  "id" : "cACint209_L5_ChC_c38923facb_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.44259, -9.54825, -1.27888, 2.30647", "-1.2819, -8.63231, -1.15821, 3.63473", "-1.1212, -7.71637, -1.03754, 6.81375", "-0.960502, -6.80044, -0.916865, 9.18535", "-0.799804, -5.8845, -0.796194, 10.2157", "-0.639107, -4.96856, -0.675522, 11.1797", "-0.478409, -4.05262, -0.554851, 12.0566", "-0.317712, -3.13668, -0.43418, 12.6775", "-0.157014, -2.22074, -0.313508, 13.0617", "0.00368301, -1.3048, -0.192837, 13.2009", "0.16438, -0.388856, -0.0721652, 13.2418", "0.325078, 0.527084, 0.0485063, 12.889", "0.485775, 1.44302, 0.169178, 12.4912", "0.646473, 2.35896, 0.289849, 12.2347", "0.80717, 3.2749, 0.410521, 12.0486", "0.967868, 4.19084, 0.531192, 11.9346", "1.12856, 5.10678, 0.651864, 11.8925", "1.28926, 6.02272, 0.772535, 11.1454", "1.44996, 6.93866, 0.893206, 8.66152", "1.61066, 7.8546, 1.01388, 5.25757", "1.77135, 8.77054, 1.13455, 3.12251" ]
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.66144, -7.08761, -8.0337, 1.77", "-3.66144, -7.08761, -8.0337, 1.77", "-3.29542, -8.27095, -8.20483, 1.77", "-3.01665, -9.15185, -8.34115, 1.77", "-2.59059, -10.5326, -8.54233, 1.55", "-2.34034, -11.4482, -8.70211, 1.69", "-2.16904, -12.1596, -8.84134, 1.77", "-2.01896, -12.8517, -9.00974, 1.77", "-1.82844, -13.7795, -9.2928, 1.25", "-1.5196, -15.2028, -9.67441, 0.74", "-2.11326, -14.5826, -10.3282, 0.74", "-2.57622, -14.3634, -11.0238, 0.74", "-3.38798, -14.0654, -12.2745, 1.18", "-3.82436, -13.9905, -12.9876, 1.18", "-4.47891, -13.8401, -13.9733, 0.52", "-5.25347, -13.5662, -15.0322, 0.52", "-6.13393, -13.6059, -16.3705, 0.74", "-6.50496, -13.8052, -17.2809, 0.74", "-6.68197, -14.1125, -18.0754, 0.74", "-6.96765, -14.5085, -19.2744, 1.11", "-7.22266, -14.7153, -20.0418, 1.69", "-7.64003, -14.8576, -20.8167, 1.77", "-8.59084, -15.1313, -22.5292, 1.33", "-9.09689, -15.3764, -23.5731, 1.4", "-9.39502, -15.7027, -24.3571, 1.55", "-9.56453, -16.2456, -25.1782, 1.33", "-9.58298, -17.1815, -26.2203, 0.74", "-9.42436, -17.9478, -26.8259, 1.03", "-9.19266, -18.5911, -27.2087, 1.47", "-8.94682, -19.014, -27.4837, 1.62", "-8.55739, -19.519, -27.8629, 1.62", "-8.11606, -19.9248, -28.2119, 0.52", "-7.59147, -20.3066, -28.597, 0.52", "-7.46095, -20.5061, -28.9279, 0.52", "-7.48748, -20.9144, -29.7851, 0.66", "-7.65717, -21.3154, -30.6909, 0.74", "-7.93393, -21.479, -31.3298, 0.44", "-8.41079, -21.477, -32.0057, 0.44", "-9.11367, -21.3928, -32.8652, 0.44", "-9.61336, -21.4424, -33.63, 0.44", "-9.89119, -21.5401, -34.1723, 0.44", "-10.4077, -21.8662, -35.2261, 0.66", "-10.66, -22.3726, -36.2909, 1.11", "-10.7905, -22.5582, -36.6607, 0.96", "-11.1316, -22.9495, -37.5085, 1.18", "-11.2643, -23.117, -37.8399, 1.69", "-11.48, -23.3748, -38.3202, 1.69", "-12.3021, -24.2873, -39.9275, 0.88", "-12.8042, -24.7214, -40.7668, 2.14", "-13.943, -25.3082, -42.3177, 2.28", "-14.103, -25.3506, -42.4953, 2.28", "-15.0269, -25.4338, -43.3571, 0.44", "-15.5543, -25.3925, -43.7447, 0.44", "-16.1774, -25.2686, -44.1021, 0.81", "-16.8165, -25.1101, -44.4838, 0.81", "-17.1079, -25.071, -44.6926, 0.96", "-17.6868, -25.1218, -45.2015, 0.66", "-18.2689, -25.3148, -45.7992, 1.99", "-18.7048, -25.5457, -46.3035, 2.21", "-19.1305, -25.8502, -46.8301, 2.5", "-20.3018, -26.8953, -48.3913, 0.66", "-20.909, -27.5772, -49.3133, 0.66", "-21.284, -28.1072, -49.9468, 0.66", "-21.6702, -28.7377, -50.6247, 1.55", "-21.8496, -29.0478, -50.9248, 2.21", "-22.0227, -29.3717, -51.2113, 2.21", "-22.5, -30.4016, -52.0728, 0.29", "-22.7553, -31.0658, -52.6716, 0.29", "-22.9223, -31.5245, -53.077, 1.55", "-23.1304, -32.0779, -53.5554, 1.99", "-23.3218, -32.5733, -53.9937, 2.36", "-23.86, -33.9207, -55.2224, 0.59", "-24.1275, -34.6114, -55.8948, 1.84", "-24.2328, -34.932, -56.245, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-6.50143, -1.65687, 2.1563, 1.92", "-6.50143, -1.65687, 2.1563, 1.92", "-6.93196, -2.3999, 2.12205, 1.92", "-7.6643, -3.8733, 2.04758, 1.92", "-8.41948, -5.21748, 1.97246, 2.14", "-9.00162, -6.12654, 1.90892, 2.36", "-9.82652, -7.22654, 1.82132, 2.28", "-10.7328, -8.24215, 1.72114, 2.36", "-11.7468, -9.18194, 1.59106, 2.36", "-13.3206, -10.2356, 1.40539, 1.77", "-14.1862, -10.5822, 1.34034, 1.77", "-15.5435, -10.8648, 1.30416, 1.99", "-16.753, -10.9808, 1.38095, 1.99", "-17.3515, -11.0019, 1.45484, 1.99", "-18.2435, -11.0441, 1.61399, 1.77", "-19.6243, -11.2788, 1.97121, 1.47", "-20.6209, -11.6259, 2.25318, 1.47", "-21.877, -12.333, 2.57059, 1.33", "-22.448, -12.7656, 2.67691, 1.99", "-23.4185, -13.6499, 2.78345, 1.99", "-24.5365, -14.799, 2.79772, 1.77", "-25.773, -16.203, 2.68891, 1.92", "-26.9165, -17.5375, 2.45561, 1.69", "-27.6196, -18.3122, 2.22949, 1.69", "-28.5006, -19.1847, 1.89641, 1.84", "-29.3042, -19.9145, 1.5895, 1.84", "-30.3444, -20.8259, 1.20843, 1.69", "-31.4876, -21.8413, 0.851768, 1.55", "-32.6421, -22.9401, 0.58234, 1.4", "-33.588, -23.8447, 0.390332, 1.25", "-34.5777, -24.834, 0.212044, 1.33", "-35.515, -25.8625, 0.108334, 1.47", "-36.3925, -26.9537, 0.150394, 1.62", "-37.0129, -27.9744, 0.368928, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.448551, -8.50136, -4.9037, 3.61", "0.448551, -8.50136, -4.9037, 3.61", "0.750854, -10.5854, -4.80405, 2.95", "1.18413, -13.8195, -4.65411, 2.8", "1.43396, -15.9869, -4.51125, 2.8", "1.65156, -18.4104, -4.33122, 3.02", "1.75567, -20.0189, -4.21069, 3.02", "1.79923, -21.5967, -4.08615, 3.02", "1.75724, -23.9741, -3.89514, 3.02", "1.58695, -26.4892, -3.68508, 2.36", "1.12997, -30.8885, -3.4555, 2.36", "0.800074, -33.3529, -3.4331, 2.43", "0.420558, -35.7382, -3.49031, 2.43", "-0.0754979, -38.5343, -3.65266, 2.43", "-0.846779, -42.3947, -3.98402, 2.28", "-1.67788, -46.3555, -4.41748, 2.14", "-2.8382, -51.6027, -5.09568, 2.06", "-3.64348, -55.2444, -5.62541, 2.43", "-4.15215, -57.5636, -6.00988, 2.58", "-4.69757, -60.0074, -6.46982, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.381405, 7.41064, -7.5337, 1.62", "-0.452704, 8.03804, -7.58262, 1.62", "-0.565451, 8.96108, -7.61107, 1.92", "-0.735483, 10.1941, -7.66026, 1.33", "-0.949924, 11.5213, -7.73273, 1.69", "-1.12581, 12.5033, -7.7696, 2.21", "-1.27657, 13.3242, -7.76325, 2.21", "-1.45809, 14.2483, -7.71921, 1.99", "-1.62844, 15.0341, -7.65234, 1.77", "-1.83073, 15.9083, -7.55403, 1.99", "-2.05011, 16.8335, -7.446, 1.99", "-2.42511, 18.4589, -7.28848, 1.11", "-2.6566, 19.4751, -7.22092, 1.11", "-2.90465, 20.4975, -7.19409, 1.25", "-3.14115, 21.356, -7.18948, 1.4", "-3.45072, 22.2942, -7.24295, 0.81", "-3.81531, 23.183, -7.37965, 0.74", "-4.10503, 23.7641, -7.52517, 0.74", "-4.46217, 24.3945, -7.72201, 0.74", "-4.87721, 25.0811, -7.9723, 0.96", "-5.26851, 25.7273, -8.22509, 0.96", "-5.67675, 26.3762, -8.48508, 1.55", "-6.13788, 27.1037, -8.78712, 2.06", "-6.52801, 27.7661, -9.06882, 2.43", "-6.97544, 28.6582, -9.45123, 2.36", "-7.48203, 29.8733, -9.95875, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.32144, 8.11264, 0.346303, 2.5", "-2.38465, 8.24866, 0.347022, 2.5", "-3.38681, 10.1543, 0.308295, 1.77", "-4.08631, 11.4421, 0.315453, 1.55", "-4.90672, 12.9078, 0.382264, 1.55", "-5.53184, 14.0263, 0.475466, 1.33", "-6.48564, 15.7611, 0.673787, 1.33", "-7.0821, 16.8209, 0.826379, 1.55", "-7.98201, 18.3909, 1.08571, 1.55", "-8.91662, 20.0983, 1.37336, 1.62", "-9.66281, 21.62, 1.61496, 1.4", "-10.3585, 23.2949, 1.8509, 1.4", "-10.7543, 24.3237, 1.99746, 1.4", "-11.3697, 25.9782, 2.22021, 1.4", "-11.9539, 27.631, 2.3757, 1.4", "-12.6109, 29.674, 2.48112, 1.77", "-13.1639, 31.5069, 2.50084, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.82855, 4.07614, 1.3463, 2.58", "6.88188, 4.12687, 1.35114, 2.58", "7.55402, 4.78248, 1.42133, 2.58", "8.31664, 5.5341, 1.52456, 1.84", "8.8812, 6.07942, 1.61614, 2.06", "9.61012, 6.78154, 1.75309, 2.06", "10.0918, 7.23474, 1.87474, 2.58", "10.6264, 7.73436, 2.04063, 2.58", "10.9798, 8.07009, 2.17467, 2.58", "11.607, 8.63912, 2.44263, 2.58", "12.0482, 9.01101, 2.64161, 2.43", "12.9726, 9.74486, 3.09446, 2.21", "13.6469, 10.2493, 3.43849, 1.99", "14.188, 10.6304, 3.69787, 1.99", "14.8898, 11.052, 4.00098, 1.69", "15.4764, 11.2933, 4.22349, 1.69", "16.5152, 11.4321, 4.56494, 2.06", "17.1672, 11.3209, 4.74248, 2.06", "18.7077, 10.6664, 5.15465, 1.69", "19.7673, 10.0997, 5.42244, 1.92", "21.4239, 9.00192, 5.8115, 1.92", "23.0013, 7.73846, 6.14781, 2.06", "23.81, 6.95119, 6.29997, 2.28", "24.4165, 6.23392, 6.42226, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.77135, 8.77054, 1.13455, 0.828419", "4.36343, 23.5449, 1.13455, 0.828419", "6.95552, 38.3192, 1.13455, 0.828419" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-24.2328, -34.932, -56.245, 0.96", "-22.1854, -39.5075, -63.6032, 0.96", "-21.8351, -40.5045, -64.9768, 0.96", "-21.4314, -41.836, -66.594, 0.96", "-20.9079, -43.6913, -68.6628, 1.55", "-20.5289, -45.2395, -70.2317, 0.22", "-20.1764, -47.0121, -71.7696, 0.22", "-20.0827, -48.1237, -72.3636, 1.11", "-20.0262, -49.1615, -72.8363, 1.4", "-19.9095, -50.5703, -73.3551, 1.4", "-19.5749, -53.6109, -74.2732, 0.22", "-19.0693, -56.7446, -75.1101, 0.22", "-18.8542, -57.7797, -75.3644, 0.74", "-18.7261, -58.3347, -75.4821, 0.74", "-18.0146, -61.2944, -76.0192, 0.15", "-17.8964, -61.7537, -76.0826, 0.37", "-17.1204, -64.2701, -76.3376, 0.22", "-16.6171, -65.6807, -76.5112, 0.22", "-16.218, -66.8054, -76.6455, 0.74", "-15.8693, -67.9417, -76.7606, 0.88", "-15.8038, -68.3204, -76.7911, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-24.2328, -34.932, -56.245, 2.87", "-25.1544, -35.095, -56.4373, 2.87", "-28.0877, -35.8481, -57.1565, 0.22", "-30.7838, -36.8631, -57.8608, 0.22", "-32.0961, -37.4246, -58.2047, 1.69", "-32.5108, -37.6171, -58.3128, 2.21", "-33.1876, -37.948, -58.4877, 2.21", "-35.7066, -39.3845, -59.1063, 0.22", "-37.9618, -40.9759, -59.6923, 0.22", "-38.6668, -41.5216, -59.8849, 1.25", "-39.2432, -41.9732, -60.0433, 1.25", "-40.0066, -42.5652, -60.2636, 1.25", "-41.5514, -43.6822, -60.7148, 0.15", "-42.4242, -44.2843, -60.9642, 0.15", "-43.1032, -44.6999, -61.1707, 0.96", "-43.8653, -45.1182, -61.431, 1.18", "-44.2105, -45.2802, -61.5563, 1.18", "-46.4047, -46.1451, -62.4928, 0.22", "-46.9754, -46.2956, -62.7712, 0.52", "-47.4899, -46.4035, -63.0309, 0.52", "-48.8087, -46.6383, -63.6923, 0.22", "-49.6255, -46.776, -64.1123, 1.25", "-50.8326, -47.0213, -64.7109, 1.4", "-53.1854, -47.7117, -65.9239, 0.22", "-54.8182, -48.385, -66.7563, 0.22", "-55.4485, -48.7324, -67.0757, 0.74", "-56.2756, -49.3305, -67.4849, 0.88", "-57.4675, -50.6139, -68.2263, 0.22", "-58.4919, -52.3458, -68.9472, 0.22", "-58.9476, -53.5102, -69.3339, 1.99", "-59.1571, -54.2333, -69.5252, 2.36", "-59.3336, -54.9478, -69.7083, 2.36", "-60.1479, -58.9841, -70.7055, 0.15", "-60.5345, -61.5112, -71.361, 0.15", "-60.6194, -62.1702, -71.5046, 0.44", "-60.7471, -63.4435, -71.7462, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-37.0129, -27.9744, 0.368928, 0.96", "-38.0184, -28.3084, 0.0355968, 0.96", "-38.9765, -28.6579, -0.290854, 1.25", "-40.3566, -29.1614, -0.75529, 1.25", "-42.7571, -29.9692, -1.49296, 1.18", "-44.3876, -30.454, -1.93643, 1.11", "-45.6427, -30.7998, -2.26285, 0.88", "-47.2972, -31.2628, -2.71854, 0.96", "-48.2448, -31.5271, -2.98759, 0.96", "-49.6364, -31.9243, -3.39186, 0.96", "-51.0033, -32.3275, -3.71519, 0.96", "-52.1614, -32.6644, -3.92295, 1.18", "-53.5817, -33.0629, -4.11537, 1.03", "-54.2801, -33.2447, -4.13794, 1.03", "-55.7306, -33.5858, -4.02015, 1.18", "-56.6032, -33.7641, -3.81437, 1.18", "-58.5431, -34.0765, -2.94997, 0.96", "-59.2501, -34.153, -2.55702, 1.11", "-60.6216, -34.2784, -1.71476, 1.11", "-61.72, -34.4092, -1.02821, 1.11", "-63.0122, -34.6149, -0.224961, 1.11", "-64.739, -35.0375, 0.814772, 1.55", "-65.9786, -35.4797, 1.4948, 1.03", "-67.4632, -36.1969, 2.26935, 0.88", "-68.7324, -36.9934, 2.86991, 0.74", "-69.4608, -37.5746, 3.17864, 0.74", "-70.4056, -38.5079, 3.48377, 0.74", "-71.3489, -39.6248, 3.67532, 0.66", "-72.1952, -40.7738, 3.78893, 0.88", "-72.7498, -41.6084, 3.81722, 1.03", "-73.3289, -42.5884, 3.81293, 1.03", "-74.0702, -43.8495, 3.78619, 0.88", "-74.9968, -45.3297, 3.73852, 0.88", "-75.5233, -46.0706, 3.70649, 0.88", "-76.3062, -46.9807, 3.67714, 0.88", "-77.8351, -48.439, 3.65615, 0.88", "-78.7314, -49.0997, 3.66265, 0.88", "-80.0182, -49.7937, 3.69716, 0.88", "-80.8866, -50.1122, 3.72916, 0.96", "-81.9123, -50.3874, 3.74585, 0.96", "-82.8449, -50.5659, 3.77031, 0.96", "-83.8889, -50.7341, 3.81006, 0.52", "-84.6001, -50.9702, 3.84186, 0.52", "-85.1308, -51.3971, 3.89525, 0.52", "-85.6357, -52.2038, 4.04453, 0.81", "-86.0144, -53.0617, 4.2421, 0.96", "-86.2783, -54.0544, 4.47472, 0.96", "-86.549, -55.8338, 4.88731, 0.81", "-86.6274, -56.7054, 5.095, 0.81", "-86.6773, -57.8132, 5.40229, 1.11", "-86.742, -58.4444, 5.62767, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-37.0129, -27.9744, 0.368928, 1.33", "-37.4727, -28.3601, 0.954701, 1.33", "-37.9399, -28.7255, 1.45284, 1.18", "-38.8273, -29.3738, 2.36347, 0.88", "-39.2646, -29.6519, 2.78449, 0.74", "-39.9214, -30.0008, 3.36624, 0.74", "-40.5873, -30.3086, 3.97267, 0.74", "-41.0961, -30.5166, 4.41553, 0.59", "-41.6936, -30.7224, 4.94563, 0.59", "-42.1609, -30.8515, 5.37909, 0.52", "-42.614, -30.9384, 5.88179, 0.52", "-43.4316, -31.009, 6.9608, 0.74", "-43.9303, -31.0164, 7.71374, 0.59", "-44.3837, -31.0227, 8.42766, 0.44", "-44.8697, -31.0729, 9.19958, 0.37", "-45.261, -31.1704, 9.80095, 0.66", "-45.6359, -31.3061, 10.2519, 0.66", "-45.9051, -31.4146, 10.4657, 0.66", "-46.2702, -31.5728, 10.7172, 0.44", "-46.7032, -31.7782, 10.9752, 0.44", "-47.4824, -32.1405, 11.4139, 0.44", "-48.5589, -32.6682, 12.0123, 0.74", "-49.1995, -33.0038, 12.3545, 0.74", "-50.0876, -33.4536, 12.8193, 0.52", "-50.9205, -33.8583, 13.2494, 0.59", "-51.6391, -34.1953, 13.6085, 0.44", "-52.6411, -34.7051, 14.0899, 0.37", "-53.3656, -35.1393, 14.4124, 0.37", "-54.1683, -35.7157, 14.6977, 0.29", "-54.5582, -36.0641, 14.7905, 0.29", "-55.0131, -36.5877, 14.8917, 0.29", "-55.3944, -37.0914, 14.9891, 0.37", "-55.8134, -37.6955, 15.1315, 0.37", "-56.2244, -38.3009, 15.3219, 0.37", "-56.6567, -39.0167, 15.5449, 0.66", "-57.0819, -39.7227, 15.7878, 0.81", "-57.4064, -40.2241, 15.9961, 0.81", "-57.8826, -40.846, 16.3217, 0.22", "-58.4674, -41.5114, 16.7468, 0.22", "-64.2895, -44.1335, 21.3599, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-4.69757, -60.0074, -6.46982, 1.55", "-4.30309, -61.1558, -6.44109, 1.55", "-3.91073, -62.3256, -6.40968, 1.55", "-3.57866, -63.3536, -6.38592, 1.55", "-3.21436, -64.5202, -6.35305, 1.69", "-2.9537, -65.4156, -6.32255, 1.69", "-2.78077, -66.0855, -6.29882, 1.69", "-2.54695, -67.1983, -6.25684, 1.55", "-2.29768, -68.6552, -6.20391, 1.47", "-2.15728, -69.8703, -6.14779, 1.33", "-2.10206, -71.0363, -6.08268, 1.33", "-2.13923, -72.5864, -5.98765, 1.33", "-2.25713, -73.7245, -5.90137, 1.11", "-2.39578, -74.4423, -5.83533, 1.11", "-2.81578, -76.0078, -5.67007, 1.25", "-3.15734, -77.0483, -5.5524, 1.25", "-3.50408, -77.9851, -5.4429, 1.25", "-4.01992, -79.2865, -5.30003, 1.4", "-4.54823, -80.5704, -5.17364, 1.4", "-4.96502, -81.6122, -5.09576, 1.55", "-5.23022, -82.3796, -5.07328, 1.55", "-5.5484, -83.5159, -5.07957, 1.33", "-5.85658, -84.9363, -5.14644, 0.96", "-5.94468, -85.4995, -5.19941, 0.81", "-6.0136, -86.1335, -5.26556, 0.81", "-6.11627, -87.5986, -5.41277, 0.96", "-6.15123, -88.6132, -5.50025, 1.33", "-6.17111, -89.7331, -5.57681, 1.69", "-6.19045, -90.4117, -5.60653, 1.84", "-6.22881, -91.1812, -5.61721, 1.99", "-6.31799, -92.0917, -5.59782, 2.06", "-6.40799, -92.8703, -5.56074, 2.06", "-6.49906, -93.6625, -5.49118, 1.84", "-6.58468, -94.5079, -5.37842, 1.62", "-6.66697, -95.5238, -5.20852, 1.18", "-6.71145, -96.3372, -5.06202, 0.88", "-6.75899, -97.449, -4.84357, 0.88", "-6.78476, -98.214, -4.66577, 1.03", "-6.81292, -99.001, -4.45864, 1.11", "-6.84672, -99.5614, -4.30324, 1.11", "-7.00213, -100.959, -3.91223, 1.03", "-7.14867, -101.872, -3.65737, 1.18", "-7.2872, -102.616, -3.46153, 1.25", "-7.51441, -103.749, -3.19268, 1.18", "-7.73986, -104.777, -2.98039, 1.03", "-7.99319, -105.803, -2.79973, 0.96", "-8.29877, -106.913, -2.64503, 0.88", "-8.52946, -107.655, -2.57936, 0.88", "-8.93737, -108.772, -2.57707, 1.25", "-9.39498, -109.886, -2.6516, 1.55", "-9.75325, -110.737, -2.74714, 1.62", "-10.022, -111.419, -2.83933, 1.62", "-10.3374, -112.312, -2.96605, 1.4", "-10.7298, -113.577, -3.12919, 1.11", "-11.0546, -114.881, -3.27128, 1.11", "-11.3293, -116.322, -3.37367, 1.11", "-11.5663, -117.859, -3.44668, 1.11", "-11.7187, -118.983, -3.47734, 1.4", "-11.8597, -120.148, -3.49142, 1.4", "-12.0645, -121.965, -3.48578, 1.25", "-12.2743, -123.825, -3.48571, 1.25", "-12.4233, -125.049, -3.48802, 1.62", "-12.5702, -126.12, -3.50115, 1.77", "-12.7686, -127.555, -3.54201, 1.33", "-12.942, -128.854, -3.58779, 0.88", "-13.1042, -130.302, -3.65546, 1.25", "-13.171, -131.02, -3.6994, 1.84", "-13.2232, -131.823, -3.76165, 2.28", "-13.2552, -132.656, -3.84439, 2.43" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-4.69757, -60.0074, -6.46982, 2.14", "-4.56661, -60.7116, -6.71081, 2.14", "-4.31405, -61.8261, -7.04591, 2.14", "-3.88218, -63.7319, -7.61894, 1.69", "-3.52031, -65.3288, -8.09909, 1.84", "-3.16876, -66.8801, -8.56554, 1.99", "-2.88437, -68.1351, -8.94288, 2.36", "-2.64843, -69.0561, -9.18473, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-7.48203, 29.8733, -9.95875, 1.25", "-7.1582, 30.8098, -10.2284, 1.25", "-6.88485, 31.4374, -10.4016, 1.03", "-6.52038, 32.1827, -10.5976, 0.81", "-6.1105, 33.0178, -10.8014, 0.81", "-5.74845, 33.8539, -10.9865, 1.11", "-5.51905, 34.4626, -11.1085, 1.11", "-5.26972, 35.1772, -11.2115, 0.96", "-4.97178, 36.1365, -11.3165, 0.66", "-4.78968, 36.8017, -11.3825, 0.52", "-4.57544, 37.6764, -11.4575, 0.52", "-4.43904, 38.3276, -11.5082, 0.52", "-4.14667, 39.72, -11.6395, 1.18", "-3.99289, 40.4321, -11.7149, 1.62", "-3.87493, 40.9426, -11.7758, 1.69", "-3.65365, 41.7862, -11.905, 1.33", "-3.5168, 42.202, -11.9888, 0.74", "-3.26867, 42.8373, -12.1473, 0.59", "-2.85164, 43.8392, -12.4602, 0.66", "-2.63713, 44.381, -12.6433, 0.44", "-2.49965, 44.7869, -12.7786, 0.44", "-2.28434, 45.5329, -13.0254, 0.37", "-2.09958, 46.161, -13.2275, 0.37", "-1.94397, 46.6171, -13.3629, 0.37", "-1.64085, 47.3323, -13.5966, 0.37", "-1.34655, 47.9681, -13.8203, 0.44", "-1.09, 48.5876, -14.0588, 0.44", "-0.748856, 49.5925, -14.4721, 0.81", "-0.535602, 50.3036, -14.7715, 1.03", "-0.335227, 50.9454, -15.053, 1.03", "-0.154317, 51.5288, -15.3331, 0.81", "0.0870949, 52.3803, -15.7795, 0.29", "0.188326, 52.8043, -16.0103, 0.29", "0.379804, 53.8321, -16.5576, 1.77", "0.437403, 54.1748, -16.7353, 2.36", "0.524963, 54.6498, -16.9623, 2.36", "0.714757, 55.5537, -17.3688, 2.28", "0.981222, 56.6382, -17.8181, 0.66", "1.13366, 57.2311, -18.0644, 0.88", "1.2902, 57.8485, -18.3239, 0.88", "1.46814, 58.5417, -18.5982, 0.37", "1.59013, 59.01, -18.7764, 0.37", "1.83649, 59.9873, -19.1249, 0.37", "2.01325, 60.725, -19.3757, 1.11", "2.14346, 61.3151, -19.5677, 1.47", "2.22489, 61.7379, -19.6963, 1.69", "2.33884, 62.4539, -19.8963, 1.33", "2.4388, 63.2422, -20.0936, 0.44", "2.48682, 64.0835, -20.2743, 0.29", "2.49919, 64.745, -20.4096, 0.52", "2.49482, 65.2401, -20.5075, 0.52", "2.46718, 66.0715, -20.6893, 0.29", "2.45162, 66.9269, -20.8822, 0.29", "2.45384, 68.4332, -21.2507, 1.18", "2.46337, 68.9993, -21.3902, 1.62", "2.47443, 69.6024, -21.5282, 1.84", "2.49214, 70.3642, -21.6885, 1.33", "2.53984, 72.5384, -22.1265, 0.22", "2.5783, 73.9305, -22.3936, 0.22", "2.61451, 75.1892, -22.6152, 0.22", "2.63748, 76.5206, -22.8217, 0.74", "2.64317, 77.2468, -22.9269, 1.03", "2.64013, 77.5895, -22.9714, 1.03", "2.57738, 78.6834, -23.1329, 0.15", "2.54252, 79.1029, -23.214, 0.15", "2.49491, 79.5826, -23.3404, 0.44", "2.44856, 80.0387, -23.4823, 0.66", "2.40655, 80.4588, -23.6144, 0.66", "2.32362, 81.6693, -23.9924, 1.55", "2.29072, 82.5589, -24.2612, 2.58", "2.2853, 83.3327, -24.4955, 2.58", "2.35723, 85.0489, -24.9889, 0.29", "2.48053, 86.1946, -25.2715, 0.29", "2.7558, 87.8363, -25.6015, 0.29", "2.99502, 88.8665, -25.7621, 0.96", "3.14445, 89.3952, -25.8205, 0.96", "3.72465, 91.1161, -25.9405, 0.22", "4.41774, 92.9481, -25.9953, 0.22", "4.88544, 94.0983, -25.9945, 1.77", "5.0796, 94.5481, -25.9815, 2.36", "5.3215, 95.0975, -25.9611, 2.5", "6.1042, 96.8728, -25.882, 0.15", "6.49386, 97.7662, -25.8482, 0.29", "6.74908, 98.3643, -25.837, 0.29", "7.06678, 99.128, -25.8619, 0.15", "7.37321, 99.9098, -25.9347, 1.18", "7.56119, 100.394, -26.0054, 1.55", "7.76769, 100.931, -26.105, 1.18", "7.91707, 101.318, -26.1889, 0.74", "8.34237, 102.521, -26.4545, 0.22", "8.65029, 103.46, -26.6627, 0.22", "9.14473, 105.107, -26.9887, 0.22", "9.39299, 105.994, -27.1435, 0.81", "9.48548, 106.35, -27.1975, 0.81", "10.0192, 108.582, -27.4613, 0.22", "10.2613, 109.707, -27.5286, 0.22", "10.4453, 110.724, -27.5749, 1.25", "10.475, 110.995, -27.5844, 1.69", "10.4933, 111.301, -27.5923, 1.69", "10.5098, 111.955, -27.6024, 1.33", "10.4983, 112.527, -27.6161, 0.59", "10.45, 113.718, -27.6733, 0.22", "10.3939, 115.414, -27.8098, 0.22", "10.359, 116.458, -27.9062, 1.03", "10.3428, 116.898, -27.9495, 1.03", "10.3402, 117.357, -27.996, 1.03", "10.3629, 118.038, -28.0613, 0.52", "10.4761, 119.562, -28.1819, 0.22", "10.5883, 120.295, -28.2435, 0.59", "10.6896, 120.764, -28.2826, 0.59", "11.2341, 122.82, -28.4457, 0.22", "11.4388, 123.457, -28.4922, 0.66", "11.6163, 123.912, -28.5269, 0.66", "12.0681, 124.964, -28.6198, 0.15", "12.329, 125.549, -28.6811, 0.81", "12.5069, 125.951, -28.7305, 0.81", "12.7598, 126.544, -28.818, 0.81", "13.2055, 127.676, -29.0017, 0.22", "13.6359, 128.827, -29.2162, 1.33", "13.8069, 129.309, -29.3148, 1.55", "13.9078, 129.591, -29.3742, 1.55", "14.0145, 129.889, -29.4418, 1.03", "14.5216, 131.247, -29.774, 0.22", "15.0047, 132.455, -30.0899, 0.22", "15.2801, 133.087, -30.2739, 0.22", "15.6032, 133.835, -30.4936, 1.25", "15.7983, 134.318, -30.6377, 1.77", "15.9594, 134.757, -30.7713, 1.77", "16.0855, 135.127, -30.8917, 1.18", "16.2716, 135.712, -31.0885, 0.66", "16.8306, 137.496, -31.7297, 0.22", "17.2061, 138.686, -32.1959, 0.22", "17.4699, 139.498, -32.5133, 1.11", "17.6587, 140.019, -32.7136, 1.4", "17.847, 140.481, -32.8918, 1.4", "18.0919, 141.016, -33.1171, 0.96", "18.8462, 142.524, -33.8052, 0.22", "19.6966, 144.09, -34.5324, 0.22", "20.3779, 145.288, -35.0837, 1.77", "20.6241, 145.711, -35.2716, 2.65", "21.0203, 146.372, -35.5538, 2.95" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-7.48203, 29.8733, -9.95875, 0.66", "-8.43809, 30.3029, -10.1358, 0.66", "-8.81874, 30.457, -10.2054, 0.66", "-9.2649, 30.6209, -10.2834, 0.66", "-9.77382, 30.7867, -10.3739, 1.11", "-10.0891, 30.8754, -10.4324, 1.33", "-10.5639, 31.0034, -10.5222, 1.33", "-11.0791, 31.1266, -10.6191, 0.96", "-11.4353, 31.2135, -10.6742, 0.88", "-11.8616, 31.3173, -10.7262, 0.88", "-12.3698, 31.4383, -10.7632, 0.37", "-12.6323, 31.4978, -10.7707, 0.37", "-13.0817, 31.5982, -10.7671, 0.81", "-13.471, 31.6891, -10.753, 0.88", "-13.8319, 31.7761, -10.7346, 0.81", "-14.2133, 31.87, -10.7093, 0.29", "-14.4564, 31.9269, -10.6962, 0.29", "-14.8772, 32.0001, -10.6925, 0.74", "-15.1897, 32.0458, -10.7033, 0.74", "-15.3691, 32.0793, -10.7073, 0.74", "-15.5779, 32.1333, -10.6968, 0.74", "-15.8354, 32.2102, -10.6686, 0.59", "-16.087, 32.2815, -10.6252, 0.59", "-16.3087, 32.3363, -10.5692, 0.37", "-16.9088, 32.4522, -10.4054, 0.37", "-17.3316, 32.508, -10.2863, 0.37", "-17.5576, 32.5257, -10.2225, 0.22", "-17.9378, 32.5373, -10.1195, 0.22", "-18.1422, 32.532, -10.0742, 0.22", "-18.7421, 32.5039, -9.9699, 1.03", "-19.0387, 32.4964, -9.93557, 1.4", "-19.2162, 32.5011, -9.91838, 1.4", "-19.6478, 32.5387, -9.8833, 0.81", "-20.1996, 32.6107, -9.85497, 0.22", "-20.4976, 32.6539, -9.84516, 0.22", "-21.0983, 32.7497, -9.83906, 1.11", "-21.4048, 32.8026, -9.84333, 1.4", "-21.6224, 32.8411, -9.85053, 1.4", "-22.1296, 32.9301, -9.87751, 0.66", "-22.606, 33.0084, -9.90836, 0.52", "-23.1819, 33.0874, -9.95303, 0.74", "-23.5555, 33.1362, -9.98658, 0.88", "-24.0856, 33.2117, -10.0386, 0.66", "-24.4616, 33.2693, -10.0781, 0.66", "-24.7698, 33.3202, -10.1138, 0.66", "-25.3499, 33.4267, -10.1788, 0.29", "-25.8158, 33.5205, -10.2188, 1.03", "-26.2127, 33.6053, -10.2397, 1.25", "-26.3397, 33.6375, -10.2365, 1.25", "-26.6683, 33.7391, -10.2052, 0.81", "-27.0646, 33.8755, -10.1412, 0.29", "-27.3219, 33.9715, -10.0809, 0.52", "-27.4935, 34.0418, -10.0353, 0.66", "-28.1186, 34.312, -9.87066, 0.22", "-28.4718, 34.469, -9.78652, 0.22", "-28.7607, 34.5985, -9.73022, 0.22", "-29.1473, 34.7761, -9.68265, 0.22", "-29.6666, 35.019, -9.64256, 0.59", "-29.963, 35.1611, -9.63286, 0.81", "-30.2373, 35.3039, -9.6458, 0.81", "-30.6563, 35.5428, -9.68376, 0.52", "-31.218, 35.8903, -9.75612, 1.03", "-31.5533, 36.1078, -9.80983, 1.18", "-31.8015, 36.2773, -9.85648, 1.25", "-32.3531, 36.6729, -9.97226, 0.29", "-32.851, 37.0423, -10.086, 0.74", "-33.0377, 37.1833, -10.132, 0.96", "-33.2009, 37.306, -10.1768, 0.96", "-33.7433, 37.7007, -10.336, 0.22", "-33.9586, 37.8488, -10.4006, 0.22", "-34.2542, 38.0373, -10.4858, 0.66", "-34.4553, 38.1603, -10.5485, 0.88", "-34.6939, 38.2991, -10.6226, 0.44", "-35.0055, 38.4756, -10.7162, 0.37", "-35.1941, 38.5795, -10.7683, 0.44", "-35.4454, 38.7235, -10.837, 0.44", "-35.6263, 38.8286, -10.8865, 0.44", "-35.9751, 39.0352, -10.9779, 0.22", "-36.2034, 39.1746, -11.0303, 0.22", "-36.4748, 39.3544, -11.0863, 0.29", "-36.6344, 39.4672, -11.1129, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-13.1639, 31.5069, 2.50084, 1.47", "-12.8251, 32.1554, 2.49817, 1.47", "-12.5178, 32.8631, 2.49851, 0.81", "-12.3259, 33.3815, 2.50174, 0.81", "-12.1216, 34.1078, 2.50927, 0.81", "-11.9108, 34.9924, 2.52151, 0.81", "-11.7134, 35.9692, 2.53829, 0.81", "-11.5827, 36.945, 2.5543, 1.03", "-11.4982, 37.8232, 2.57078, 1.03", "-11.3934, 39.168, 2.59254, 1.18", "-11.3331, 40.001, 2.61012, 1.18", "-11.2989, 41.4498, 2.63344, 1.18", "-11.3112, 42.481, 2.64524, 1.4", "-11.3125, 43.2118, 2.65167, 1.4", "-11.3181, 43.7319, 2.65338, 1.4" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-13.1639, 31.5069, 2.50084, 0.96", "-15.2909, 32.4828, 1.73765, 0.96", "-16.0544, 32.8542, 1.48435, 0.96", "-17.1127, 33.3793, 1.13454, 0.96", "-18.213, 33.945, 0.759324, 0.81", "-19.16, 34.4505, 0.438426, 0.81", "-20.4665, 35.1669, 0.0114572, 1.03", "-21.3494, 35.6937, -0.274921, 1.03", "-22.1659, 36.2716, -0.538756, 1.03", "-23.1762, 37.1017, -0.864682, 0.81", "-23.9145, 37.737, -1.10095, 0.81", "-24.7246, 38.4583, -1.34771, 0.81", "-25.6758, 39.3619, -1.63838, 0.52", "-26.5477, 40.2822, -1.89359, 0.52", "-27.0369, 40.8466, -2.01601, 0.52", "-27.7353, 41.7165, -2.16763, 0.52", "-28.6008, 42.8408, -2.34354, 0.52", "-29.0543, 43.4573, -2.42574, 0.52", "-29.5126, 44.0982, -2.48869, 0.52", "-30.0488, 44.8648, -2.5396, 0.66", "-30.5431, 45.6273, -2.56995, 0.88", "-31.02, 46.4475, -2.58759, 0.88", "-31.5479, 47.4131, -2.60726, 0.59", "-32.0837, 48.371, -2.63854, 0.88", "-32.471, 49.0602, -2.66997, 0.88", "-32.7866, 49.6758, -2.70365, 0.96", "-33.0648, 50.2393, -2.74496, 0.96", "-33.3177, 50.7313, -2.79208, 0.96", "-33.7762, 51.5327, -2.89039, 0.74", "-34.5115, 52.7085, -3.06487, 1.25", "-35.0256, 53.4895, -3.19398, 1.25", "-35.6123, 54.3602, -3.34241, 0.29", "-36.0022, 54.9399, -3.43443, 0.29", "-36.3955, 55.5286, -3.51553, 0.66", "-36.7493, 56.0617, -3.57261, 0.81", "-37.0437, 56.5146, -3.60426, 0.81", "-37.5279, 57.323, -3.62238, 0.37", "-37.9798, 58.2208, -3.66292, 0.37", "-38.24, 58.8091, -3.70913, 1.03", "-38.4611, 59.3299, -3.76584, 1.25", "-38.7493, 59.9659, -3.85513, 1.25", "-39.0038, 60.4688, -3.94549, 0.81", "-39.5619, 61.4631, -4.15132, 0.59", "-39.8993, 62.0288, -4.27609, 0.44", "-40.3695, 62.8281, -4.42457, 0.88", "-40.7294, 63.4452, -4.51464, 0.88", "-41.343, 64.5283, -4.60988, 0.59", "-41.7364, 65.2515, -4.65452, 0.59", "-42.341, 66.4271, -4.68694, 0.44", "-42.9956, 67.7846, -4.70885, 1.03", "-43.5129, 68.942, -4.7, 1.55", "-43.7995, 69.6629, -4.67041, 1.62", "-44.1787, 70.721, -4.60126, 1.11", "-44.5604, 71.8848, -4.50704, 0.59", "-44.8059, 72.6906, -4.42133, 0.59", "-45.1904, 74.0386, -4.2495, 0.59", "-45.5718, 75.3825, -4.05682, 0.52", "-45.8267, 76.2617, -3.91028, 0.52", "-46.1539, 77.3577, -3.68583, 0.52", "-46.5088, 78.5009, -3.44236, 0.52", "-46.927, 79.7508, -3.18503, 0.37", "-47.568, 81.4083, -2.8626, 1.55", "-47.8175, 81.9524, -2.7663, 1.92", "-48.0817, 82.445, -2.69025, 1.92", "-48.3371, 82.8629, -2.64248, 1.92", "-48.8978, 83.6489, -2.58567, 0.88", "-49.6623, 84.6406, -2.54894, 0.44", "-50.2437, 85.3731, -2.53693, 0.44", "-50.869, 86.166, -2.54131, 0.44", "-51.7372, 87.2959, -2.55242, 0.37", "-52.1991, 87.9112, -2.55946, 0.37", "-53.148, 89.2331, -2.57252, 0.74", "-53.5246, 89.7776, -2.57084, 0.74", "-53.9886, 90.4786, -2.56539, 0.52", "-54.6027, 91.4481, -2.57503, 1.25", "-55.0296, 92.1281, -2.60889, 1.47", "-55.3149, 92.5895, -2.64785, 1.47", "-55.7114, 93.1567, -2.73782, 0.81", "-56.2554, 93.8625, -2.89096, 0.59", "-56.8058, 94.5086, -3.08367, 0.88", "-57.2731, 95.0259, -3.26744, 1.18", "-57.5652, 95.3433, -3.39013, 1.18", "-58.2807, 96.1529, -3.66783, 0.96", "-59.0385, 97.0787, -3.91636, 0.52", "-59.4715, 97.6622, -4.00111, 0.37", "-60.0858, 98.5769, -4.02867, 0.37", "-60.6625, 99.5352, -3.97863, 0.37", "-61.1816, 100.5, -3.87129, 0.37", "-61.5304, 101.253, -3.74438, 0.81", "-62.0182, 102.465, -3.50847, 1.84", "-62.2115, 102.956, -3.41211, 1.92", "-62.3599, 103.309, -3.35225, 1.92", "-62.6291, 103.965, -3.26344, 1.62", "-63.0006, 104.894, -3.19368, 0.88", "-63.3757, 105.893, -3.15383, 0.29", "-63.9509, 107.449, -3.12528, 0.29", "-64.3896, 108.567, -3.10717, 0.29", "-64.6806, 109.218, -3.08999, 0.29", "-64.8377, 109.52, -3.07928, 0.29", "-65.2487, 110.18, -3.05106, 0.66", "-65.7801, 110.902, -3.01624, 0.81", "-66.1691, 111.377, -2.99232, 0.81", "-66.9155, 112.274, -2.95107, 0.37", "-67.5046, 112.961, -2.92042, 0.37", "-68.062, 113.62, -2.8913, 0.81", "-68.4543, 114.089, -2.86685, 0.81", "-69.0092, 114.765, -2.82345, 0.37", "-69.561, 115.394, -2.778, 0.37", "-70.1271, 115.978, -2.7284, 0.88", "-70.8246, 116.663, -2.66597, 1.47", "-71.3497, 117.175, -2.6225, 1.69", "-71.7752, 117.594, -2.59244, 1.69", "-72.9355, 118.713, -2.52057, 0.37", "-73.3332, 119.104, -2.49771, 0.37", "-74.0745, 119.885, -2.46408, 0.37", "-74.9222, 120.855, -2.43538, 0.81", "-75.4636, 121.567, -2.42253, 1.33", "-75.7876, 122.041, -2.42076, 1.33", "-76.2192, 122.71, -2.42528, 0.81", "-77.0925, 124.021, -2.4518, 0.52", "-77.8244, 125.033, -2.48849, 0.52", "-78.6514, 126.154, -2.54187, 0.52", "-79.1082, 126.771, -2.57615, 0.52", "-79.6951, 127.572, -2.62629, 0.52", "-80.3536, 128.468, -2.69229, 0.52", "-81.4764, 129.977, -2.81714, 0.52", "-81.8836, 130.523, -2.86379, 0.52", "-82.8971, 131.856, -2.97616, 1.25", "-83.1835, 132.234, -3.00543, 1.47", "-83.5598, 132.725, -3.04931, 1.47", "-84.1141, 133.405, -3.12144, 0.88", "-84.7934, 134.157, -3.21447, 0.29", "-85.078, 134.435, -3.25147, 0.29", "-85.6708, 134.963, -3.32058, 0.44", "-86.1432, 135.365, -3.36502, 0.44", "-86.5893, 135.733, -3.39566, 0.44", "-86.8501, 135.959, -3.42338, 0.44", "-87.2195, 136.297, -3.44374, 0.29", "-87.6905, 136.856, -3.43176, 0.29", "-87.8516, 137.071, -3.41058, 0.44", "-88.0482, 137.343, -3.37053, 0.44", "-88.5688, 138.044, -3.2499, 0.37", "-89.276, 138.954, -3.07816, 0.44", "-90.4282, 140.401, -2.88739, 2.28", "-90.8897, 140.976, -2.84195, 2.5", "-91.2428, 141.433, -2.83099, 2.5", "-91.8136, 142.184, -2.85058, 1.92", "-92.3799, 142.945, -2.92655, 0.81", "-93.1014, 143.993, -3.15728, 0.52", "-93.3973, 144.475, -3.28901, 0.52", "-94.0145, 145.593, -3.6131, 0.88", "-94.3524, 146.285, -3.81107, 0.88", "-94.7197, 147.123, -4.03766, 0.66", "-94.9962, 147.815, -4.21445, 0.44", "-95.3671, 148.822, -4.43578, 0.29", "-95.76, 149.985, -4.69924, 0.29", "-96.1594, 151.315, -5.02084, 0.29", "-96.3406, 151.975, -5.19014, 0.29", "-96.6591, 153.199, -5.56235, 0.52", "-96.8857, 154.038, -5.85982, 0.88", "-97.0828, 154.725, -6.15381, 0.88", "-97.3306, 155.477, -6.52188, 0.44", "-97.8527, 156.662, -7.1776, 1.11", "-98.4431, 157.682, -7.79424, 2.43", "-98.9575, 158.366, -8.24247, 2.43", "-99.3344, 158.758, -8.51949, 2.43", "-99.8865, 159.218, -8.84013, 1.69", "-100.7, 159.793, -9.24431, 0.59", "-101.623, 160.335, -9.61303, 0.74", "-101.939, 160.5, -9.70567, 0.74", "-102.473, 160.761, -9.84929, 0.52", "-103.299, 161.166, -10.0401, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "24.4165, 6.23392, 6.42226, 1.99", "25.9487, 6.37984, 6.42379, 1.99", "26.8459, 6.67812, 6.51108, 1.99", "27.4755, 7.12188, 6.63177, 1.69", "28.3606, 7.7457, 6.80144, 1.69", "28.7334, 8.00845, 6.8729, 1.69", "29.3528, 8.44501, 6.99163, 1.69", "29.7477, 8.89422, 7.06493, 1.92", "30.327, 9.82436, 7.27768, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "24.4165, 6.23392, 6.42226, 0.74", "25.4878, 8.53773, 6.32084, 0.74", "25.8966, 9.53425, 6.25621, 0.74", "26.4737, 11.0948, 6.12605, 0.74", "26.9317, 12.4363, 5.99784, 0.44", "27.2889, 13.5751, 5.88982, 0.44", "27.7771, 15.2661, 5.72835, 0.66", "27.9712, 16.0787, 5.63283, 0.88", "28.2269, 17.2678, 5.52116, 0.88", "28.4415, 18.3767, 5.45841, 1.03", "28.7642, 19.9762, 5.41128, 0.96", "29.0103, 21.1138, 5.39767, 0.52", "29.2368, 22.0293, 5.39765, 0.52", "29.5038, 23.2493, 5.40022, 0.88", "29.7217, 24.2446, 5.40655, 0.66", "29.9699, 25.3609, 5.42381, 0.88", "30.1892, 26.3591, 5.44555, 0.88", "30.4959, 27.8379, 5.49243, 0.29", "30.7155, 29.0327, 5.5233, 0.29", "30.8573, 29.8533, 5.53109, 0.29", "31.0969, 31.254, 5.5522, 0.44", "31.2582, 32.0942, 5.58722, 0.74", "31.4895, 33.106, 5.64213, 0.88", "31.6525, 33.7194, 5.68651, 1.11", "31.7952, 34.2033, 5.72042, 1.11", "32.0772, 35.2975, 5.76144, 0.29", "32.3782, 36.3646, 5.75533, 0.29", "32.7124, 37.365, 5.72738, 0.29", "35.7707, 48.7847, 7.79749, 0.29", "40.3509, 59.7837, 9.32811, 0.29", "43.7722, 71.2634, 9.53675, 0.29", "46.1737, 82.97, 8.95583, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.95552, 38.3192, 1.13455, 0.59", "9.5476, 53.0936, 1.13455, 0.59", "12.1397, 67.8679, 1.13455, 0.59" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-86.742, -58.4444, 5.62767, 0.44", "-89.1681, -59.4032, 6.62568, 0.44", "-90.3958, -59.9803, 7.11869, 0.29", "-91.6916, -60.655, 7.59471, 0.29", "-92.4522, -61.0678, 7.85868, 0.29", "-94.0709, -61.9317, 8.38192, 0.37", "-94.8099, -62.3046, 8.62559, 0.37", "-95.9427, -62.8459, 8.90195, 0.29", "-97.0244, -63.4445, 9.19088, 0.29", "-97.8494, -63.9688, 9.42617, 0.29", "-98.422, -64.353, 9.58876, 0.29", "-99.3152, -64.9345, 9.83612, 0.29", "-100.199, -65.432, 10.0611, 0.44", "-101.418, -66.0395, 10.3653, 0.44", "-102.063, -66.3811, 10.5575, 0.44", "-103.001, -66.9479, 10.8934, 0.66", "-103.933, -67.6347, 11.3034, 0.66", "-104.409, -68.0925, 11.5768, 0.52", "-105.208, -69.1982, 12.2799, 0.44", "-105.51, -69.975, 12.7891, 0.66", "-105.663, -70.7866, 13.3303, 0.66", "-105.752, -71.7248, 13.9564, 0.52", "-105.86, -72.9684, 14.7994, 0.52", "-105.917, -74.1048, 15.5555, 0.44", "-105.935, -75.1022, 16.2115, 0.37", "-106.023, -76.6525, 17.2264, 0.37", "-106.159, -77.872, 18.0487, 0.29", "-106.418, -79.0989, 18.9469, 0.29", "-115.243, -87.7044, 21.6451, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-86.742, -58.4444, 5.62767, 1.11", "-87.4207, -58.7397, 5.77527, 1.11", "-87.949, -59.0176, 5.87556, 1.11", "-89.0193, -59.6203, 6.08162, 0.88", "-89.8356, -60.0552, 6.2387, 0.88", "-91.078, -60.665, 6.47659, 0.88", "-92.3757, -61.2433, 6.71539, 0.88", "-93.0869, -61.5556, 6.84448, 0.88", "-93.7493, -61.8373, 6.94687, 0.81", "-94.4951, -62.1406, 7.04214, 0.81", "-95.0347, -62.3375, 7.10801, 0.81", "-95.9939, -62.653, 7.22811, 0.96", "-96.4949, -62.8336, 7.28597, 0.96", "-97.0067, -63.0716, 7.3294, 0.96", "-97.4914, -63.3758, 7.34845, 0.96", "-98.1228, -63.8523, 7.35918, 0.96", "-98.3332, -64.0188, 7.35728, 0.96", "-98.9785, -64.5152, 7.33351, 0.88", "-99.7901, -65.0604, 7.28444, 0.88", "-100.372, -65.4344, 7.24236, 1.11", "-100.96, -65.8129, 7.1971, 1.11", "-101.639, -66.2671, 7.13044, 0.96", "-102.212, -66.6877, 7.08898, 0.96", "-102.998, -67.326, 7.05682, 0.88", "-103.898, -68.1298, 7.00756, 0.88", "-104.594, -68.7785, 6.93381, 0.96", "-105.152, -69.3042, 6.84762, 0.96", "-105.949, -70.0275, 6.70008, 0.88", "-106.329, -70.3496, 6.61151, 0.74", "-107.185, -71.0212, 6.37997, 0.96", "-107.943, -71.5544, 6.16864, 1.11", "-108.561, -71.9662, 6.00738, 1.25", "-109.097, -72.3257, 5.8829, 1.25", "-109.959, -72.9208, 5.70182, 1.03", "-111.118, -73.7821, 5.52105, 0.88", "-111.955, -74.4712, 5.43029, 0.88", "-112.797, -75.2168, 5.3538, 0.88", "-113.5, -75.8473, 5.28802, 0.88", "-114.18, -76.4307, 5.22631, 1.33", "-114.714, -76.8454, 5.18642, 1.33", "-115.352, -77.305, 5.13657, 1.18", "-115.802, -77.6089, 5.09802, 0.96", "-116.611, -78.1162, 5.0382, 0.96", "-117.358, -78.5313, 4.99823, 0.96", "-118.364, -79.0136, 4.98138, 0.88", "-119.234, -79.343, 5.01119, 0.81", "-119.723, -79.4809, 5.05794, 0.81", "-120.292, -79.6198, 5.13079, 0.74", "-120.713, -79.7376, 5.19184, 0.74", "-121.249, -79.9357, 5.27357, 0.74", "-122.014, -80.3227, 5.38908, 0.74", "-122.44, -80.6302, 5.44318, 1.11", "-123.087, -81.2862, 5.49856, 1.11", "-123.878, -82.2679, 5.53219, 0.88", "-124.39, -82.9983, 5.53963, 0.88", "-124.782, -83.6119, 5.53583, 0.88", "-125.321, -84.4676, 5.52355, 0.81", "-126.067, -85.5711, 5.47586, 0.81", "-126.453, -86.0878, 5.44013, 1.18", "-126.879, -86.6394, 5.37816, 1.33", "-127.344, -87.1959, 5.29767, 1.33", "-128.11, -88.0302, 5.15573, 0.88", "-128.873, -88.7889, 4.9955, 0.81", "-129.674, -89.5241, 4.82745, 0.81", "-130.628, -90.3543, 4.6158, 0.81", "-131.353, -90.9556, 4.43515, 0.81", "-132.037, -91.5055, 4.25902, 1.11", "-132.452, -91.8348, 4.14681, 1.25", "-132.949, -92.2268, 4.01346, 2.14", "-133.428, -92.6264, 3.86766, 2.5", "-134.086, -93.1657, 3.66817, 1.92", "-135.033, -94.0544, 3.33056, 1.11", "-135.438, -94.4864, 3.16623, 0.96", "-135.993, -95.134, 2.92841, 1.4", "-136.705, -96.0066, 2.58295, 1.69" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-13.2552, -132.656, -3.84439, 0.37", "-12.6524, -135.056, -2.64646, 0.37", "-12.4674, -135.677, -2.35697, 0.52", "-12.2253, -136.439, -2.03122, 0.66", "-11.9486, -137.307, -1.6813, 0.37", "-11.7378, -137.949, -1.43015, 0.44", "-11.4873, -138.697, -1.14848, 0.44", "-11.1561, -139.591, -0.898356, 0.29", "-10.8163, -140.43, -0.652414, 0.29", "-10.4741, -141.135, -0.430778, 0.59", "-10.1161, -141.743, -0.238164, 0.59", "-9.66699, -142.378, -0.0344482, 0.37", "-9.1712, -142.979, 0.155342, 0.66", "-8.67898, -143.486, 0.319528, 0.52", "-7.91639, -144.166, 0.537826, 0.37", "-7.32503, -144.645, 0.68315, 0.37", "-6.42725, -145.352, 0.87478, 0.37", "-5.54714, -146.031, 1.03812, 1.03", "-4.90325, -146.529, 1.14011, 1.18", "-4.29176, -147.008, 1.21656, 0.81", "-3.80673, -147.395, 1.26307, 0.52", "-2.89906, -148.123, 1.34893, 0.52", "-2.03771, -148.842, 1.42745, 0.59", "-1.28275, -149.52, 1.46808, 0.59", "-0.666901, -150.13, 1.48206, 0.81", "-0.166241, -150.66, 1.48405, 0.81", "0.384084, -151.276, 1.47472, 0.66", "0.781132, -151.745, 1.45807, 0.29", "1.68858, -152.887, 1.40308, 0.52", "2.46113, -153.883, 1.34973, 1.03", "2.73826, -154.247, 1.32522, 1.47", "3.24672, -154.884, 1.27849, 1.62", "3.93495, -155.656, 1.21829, 1.03", "4.60329, -156.323, 1.18233, 0.29", "5.25233, -156.904, 1.17232, 0.29", "6.01494, -157.528, 1.1627, 0.37", "6.80956, -158.171, 1.15347, 0.66", "7.21884, -158.498, 1.15396, 0.81", "7.86523, -159.001, 1.1719, 0.96", "8.35245, -159.373, 1.1972, 0.44", "8.73808, -159.664, 1.22937, 0.29", "9.48192, -160.216, 1.32037, 0.29", "10.0396, -160.677, 1.3978, 0.59", "10.5696, -161.173, 1.47991, 0.74", "10.9903, -161.613, 1.55004, 0.74", "11.5499, -162.27, 1.64582, 0.74", "11.9949, -162.844, 1.7171, 0.44", "12.5827, -163.667, 1.80532, 0.29", "12.9289, -164.184, 1.85021, 0.66", "13.3599, -164.842, 1.89515, 0.88", "13.7632, -165.45, 1.93167, 0.96", "14.3439, -166.302, 1.99255, 0.66", "14.942, -167.175, 2.06201, 0.37", "15.6522, -168.16, 2.15246, 0.74", "16.0487, -168.692, 2.20513, 0.81", "16.5057, -169.315, 2.27047, 0.37", "17.1132, -170.185, 2.36283, 0.37", "17.6324, -170.966, 2.44451, 0.37", "18.0623, -171.636, 2.51056, 0.37", "18.4065, -172.196, 2.56007, 0.52", "18.8186, -172.858, 2.60976, 0.52", "19.2467, -173.534, 2.64873, 0.37", "19.6883, -174.243, 2.67274, 0.37", "20.2072, -175.053, 2.70081, 0.81", "20.5238, -175.497, 2.71947, 0.88", "21.069, -176.177, 2.75301, 0.59", "21.5444, -176.72, 2.78517, 0.37", "22.0334, -177.235, 2.81996, 0.37", "22.6605, -177.855, 2.87105, 0.44", "23.9516, -179.042, 2.98764, 0.44", "24.8013, -179.736, 3.06989, 1.18", "25.4432, -180.221, 3.13711, 1.47", "26.1571, -180.729, 3.2027, 1.47", "27.2117, -181.47, 3.28373, 1.18", "28.0326, -182.082, 3.32508, 0.29", "28.5448, -182.498, 3.33394, 0.29", "28.9365, -182.836, 3.32107, 0.29", "29.6429, -183.5, 3.24002, 0.59", "30.3302, -184.22, 3.10768, 0.66", "30.7105, -184.671, 2.9991, 0.74", "31.1005, -185.196, 2.86676, 0.59", "31.5271, -185.842, 2.70788, 0.44", "32.0356, -186.668, 2.50191, 0.29", "32.3305, -187.225, 2.36988, 0.37", "32.7583, -188.159, 2.15413, 0.52", "33.0385, -188.873, 2.01645, 1.03", "33.3076, -189.62, 1.87172, 1.55", "33.5393, -190.267, 1.75582, 1.55", "34.1135, -191.9, 1.46772, 0.44", "34.5105, -192.965, 1.27001, 0.37", "35.5387, -195.347, 0.774329, 0.29", "35.804, -195.853, 0.66059, 0.29", "36.6507, -197.16, 0.357658, 1.47", "37.0025, -197.585, 0.251492, 1.92", "37.7311, -198.27, 0.0498634, 2.06", "38.862, -199.118, -0.28937, 0.81", "40.3701, -200.019, -0.801223, 0.29", "41.3302, -200.552, -1.153, 0.29", "42.5875, -201.225, -1.60313, 0.44", "43.201, -201.561, -1.79831, 0.52", "44.6425, -202.389, -2.18125, 0.29", "45.6874, -203.03, -2.37693, 0.88", "46.2813, -203.424, -2.41731, 0.74", "47.6309, -204.437, -2.28223, 0.29", "48.5455, -205.179, -2.03562, 0.29", "49.4171, -205.923, -1.69671, 0.59", "49.9684, -206.417, -1.4259, 0.66", "51.0018, -207.375, -0.872027, 0.29", "52.0326, -208.383, -0.323383, 0.29", "52.7109, -209.108, -0.00559168, 0.29", "53.3341, -209.859, 0.25108, 1.03", "53.7902, -210.449, 0.404322, 1.47", "54.2085, -211.019, 0.505318, 1.18", "54.9853, -212.132, 0.620211, 0.22", "55.685, -213.16, 0.689437, 0.22", "56.5849, -214.488, 0.741624, 0.22", "56.9707, -215.035, 0.76193, 0.52", "57.6395, -215.948, 0.79387, 0.29", "58.2767, -216.793, 0.815351, 0.29", "58.6858, -217.302, 0.817048, 0.88", "59.2429, -217.987, 0.842206, 0.88", "60.0587, -219.021, 0.900842, 0.29", "60.4255, -219.498, 0.947181, 0.29", "61.0546, -220.321, 1.09107, 0.96", "61.4845, -220.864, 1.24642, 1.4", "61.9313, -221.413, 1.45229, 1.77", "62.2076, -221.735, 1.60118, 1.77", "63.2891, -222.927, 2.20883, 0.22", "64.3933, -224.067, 2.8683, 0.22", "65.2681, -224.892, 3.38095, 0.88", "65.6671, -225.248, 3.60033, 1.33", "66.084, -225.601, 3.80069, 1.33", "67.0458, -226.383, 4.2266, 0.22", "68.2535, -227.326, 4.69991, 0.22", "69.5546, -228.343, 5.12885, 0.22", "70.751, -229.313, 5.45167, 0.22", "71.4522, -229.905, 5.61473, 0.74", "71.8322, -230.245, 5.68913, 0.88", "72.2802, -230.679, 5.75331, 0.52", "73.0731, -231.555, 5.80984, 0.22", "73.4706, -232.055, 5.82283, 0.88", "73.9016, -232.645, 5.84147, 1.33", "74.2383, -233.135, 5.86474, 1.33", "75.0107, -234.334, 5.93968, 0.29", "75.8904, -235.801, 6.06532, 0.29", "76.3054, -236.53, 6.15212, 0.44", "76.6581, -237.17, 6.25087, 0.59", "76.9735, -237.756, 6.36025, 0.59", "77.4698, -238.693, 6.56355, 0.22", "77.9672, -239.654, 6.78796, 0.22", "78.2768, -240.241, 6.9269, 0.74", "78.466, -240.591, 7.00398, 0.88", "78.725, -241.039, 7.08785, 0.88", "79.2465, -241.914, 7.25011, 0.22", "80.183, -243.399, 7.50859, 0.22", "80.6089, -244.051, 7.60206, 0.52", "80.8895, -244.476, 7.64888, 0.66", "81.333, -245.138, 7.70817, 0.44", "88.409, -251.932, 7.09668, 0.44" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-13.2552, -132.656, -3.84439, 2.28", "-13.9451, -133.963, -3.66437, 2.28", "-14.6017, -135.08, -3.45298, 1.62", "-15.4404, -136.405, -3.19742, 1.33", "-16.2763, -137.649, -2.97915, 0.88", "-16.6836, -138.222, -2.89019, 0.88", "-17.3266, -139.063, -2.77546, 1.03", "-18.6021, -140.562, -2.60656, 1.03", "-19.6964, -141.703, -2.51272, 0.96", "-20.5589, -142.526, -2.49011, 0.88", "-21.2902, -143.229, -2.52001, 1.11", "-22.0813, -144.079, -2.62087, 1.33", "-22.6922, -144.894, -2.76648, 1.55", "-23.1696, -145.728, -2.95536, 1.25", "-23.5043, -146.575, -3.16122, 0.96", "-23.7754, -147.744, -3.43778, 0.88", "-23.9541, -149.199, -3.7811, 0.88", "-24.0421, -150.757, -4.13271, 0.88", "-24.0716, -152.128, -4.42636, 1.03", "-24.067, -153.411, -4.6819, 1.03", "-24.0487, -154.921, -4.94966, 1.03", "-24.0241, -156.298, -5.16085, 1.25", "-23.9779, -157.886, -5.35225, 1.55", "-23.9171, -159.101, -5.45475, 1.55", "-23.7839, -160.776, -5.54328, 1.33", "-23.6474, -162.145, -5.58511, 1.33", "-23.5302, -163.367, -5.6071, 1.11", "-23.4047, -164.674, -5.57193, 1.11", "-23.3011, -166.111, -5.48922, 0.96", "-23.2653, -167.179, -5.40465, 0.96", "-23.2791, -168.722, -5.23288, 0.88", "-23.3641, -170.757, -4.96322, 0.88", "-23.4868, -172.521, -4.6899, 1.03", "-23.6325, -174.089, -4.41648, 1.25", "-23.8036, -175.58, -4.13843, 1.33", "-23.9585, -176.753, -3.90993, 1.62", "-24.1098, -177.959, -3.6582, 2.5", "-24.1685, -178.614, -3.52055, 2.8", "-24.2187, -179.425, -3.38649, 3.02", "-24.2327, -180.187, -3.25117, 3.02", "-24.2361, -180.697, -3.16236, 3.32" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-2.64843, -69.0561, -9.18473, 0.81", "-2.81302, -70.6385, -9.03459, 0.81", "-2.97792, -71.7087, -8.85461, 0.66", "-3.22414, -72.9096, -8.60037, 0.66", "-3.52459, -74.1703, -8.30782, 0.52", "-3.65177, -74.6745, -8.18809, 0.52", "-3.99175, -76.0029, -7.87512, 0.74", "-4.30178, -77.3531, -7.50997, 0.74", "-4.59156, -78.4718, -7.20208, 0.88", "-4.95541, -79.687, -6.87407, 0.59", "-5.2111, -80.4791, -6.68604, 1.03", "-5.44336, -81.255, -6.5206, 1.25", "-5.65882, -82.1633, -6.36074, 1.03", "-5.86694, -83.3314, -6.1981, 0.66", "-6.01752, -84.2827, -6.08075, 0.66", "-6.17846, -85.2643, -5.97397, 0.81", "-6.3661, -86.4122, -5.88666, 0.81", "-6.50967, -87.3707, -5.86841, 0.66", "-6.63054, -88.3824, -5.91763, 0.52", "-6.69608, -88.9814, -5.9926, 0.52", "-6.77797, -89.7148, -6.10699, 0.52", "-6.91246, -90.7604, -6.29146, 0.66", "-7.05453, -91.7108, -6.45985, 0.66", "-7.22931, -92.7164, -6.63575, 0.59", "-7.44078, -93.8206, -6.80742, 1.18", "-7.61334, -94.7818, -6.95207, 1.55", "-7.78786, -95.7023, -7.06421, 1.99", "-8.05984, -96.8208, -7.1402, 2.73", "-8.30756, -97.6511, -7.15177, 2.87", "-8.58019, -98.4278, -7.14237, 3.02" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-2.64843, -69.0561, -9.18473, 0.52", "-1.97148, -70.0441, -9.88713, 0.52", "-1.82679, -70.2765, -10.0333, 0.52", "-1.3294, -71.0455, -10.5099, 0.52", "-0.930929, -71.6175, -10.8586, 0.66", "-0.674888, -71.9686, -11.0553, 0.66", "-0.44412, -72.266, -11.2106, 0.44", "-0.15687, -72.6747, -11.4323, 0.88", "0.0942659, -73.0579, -11.6182, 1.33", "0.361146, -73.4711, -11.7911, 1.47", "0.68462, -73.9494, -12.0414, 1.03", "1.12919, -74.6871, -12.5425, 0.44", "1.30771, -75.1282, -12.972, 0.44", "1.43178, -75.6241, -13.6512, 0.37", "1.49782, -75.9794, -14.2501, 0.37", "1.62608, -76.4358, -15.1379, 0.37", "1.76153, -76.7364, -15.7961, 0.74", "1.8992, -76.9432, -16.2792, 0.96", "2.14211, -77.235, -16.9214, 0.96", "2.61952, -77.7691, -18.0225, 0.44", "2.96337, -78.1397, -18.7033, 1.33", "3.43354, -78.6516, -19.5408, 1.55", "3.85144, -79.123, -20.2658, 1.33", "4.39007, -79.7668, -21.166, 0.81", "4.60994, -80.0433, -21.5076, 1.25", "4.87428, -80.387, -21.8679, 0.88", "5.13603, -80.7726, -22.21, 0.37", "5.3364, -81.1122, -22.4544, 0.81", "5.52749, -81.4754, -22.6827, 1.03", "5.64216, -81.6946, -22.7989, 1.03", "6.05772, -82.4563, -23.1687, 0.29", "6.27293, -82.8441, -23.3371, 0.29", "6.56693, -83.3482, -23.524, 1.84", "6.84586, -83.7752, -23.6705, 2.14", "7.6269, -84.8349, -24.0342, 0.29", "8.03041, -85.3238, -24.1956, 0.81", "8.4382, -85.7662, -24.3313, 0.81", "8.86622, -86.1815, -24.4605, 0.52", "9.46115, -86.6974, -24.6422, 1.25", "9.85604, -87.0126, -24.7683, 1.4", "10.8742, -87.7946, -25.092, 0.22", "11.4954, -88.2712, -25.2718, 0.22", "12.1901, -88.8156, -25.4535, 1.4", "12.6178, -89.176, -25.5544, 2.21", "12.8084, -89.3537, -25.5906, 2.21", "14.0118, -90.6011, -25.7663, 0.22", "14.33, -90.9517, -25.8064, 0.74", "14.6117, -91.2759, -25.8467, 1.03", "15.0659, -91.8354, -25.9198, 0.59", "16.124, -93.213, -26.1032, 0.22", "17.4714, -95.0016, -26.3649, 0.22", "17.9488, -95.6369, -26.4797, 0.81", "18.3062, -96.1066, -26.5731, 0.96", "19.4771, -97.6372, -26.9077, 0.22", "20.2214, -98.5828, -27.1466, 0.22", "20.6422, -99.1052, -27.306, 0.88", "21.0676, -99.6124, -27.4901, 0.88", "22.2787, -101.03, -28.0393, 0.15", "23.1817, -102.067, -28.4122, 0.15", "23.71, -102.655, -28.6239, 0.15", "24.1876, -103.19, -28.8103, 1.62", "24.4821, -103.534, -28.9215, 1.92", "24.7099, -103.811, -28.9949, 1.92", "26.1603, -105.647, -29.4154, 0.22", "26.4647, -106.04, -29.4886, 0.66", "26.6936, -106.344, -29.5395, 0.88", "26.929, -106.655, -29.5928, 0.88", "27.7105, -107.67, -29.845, 0.15", "28.3255, -108.488, -30.1537, 0.15", "28.6758, -108.984, -30.4015, 0.81", "28.8985, -109.337, -30.5986, 1.03", "29.0762, -109.655, -30.7923, 1.03", "29.5884, -110.717, -31.5056, 0.22", "30.0474, -111.864, -32.359, 0.22", "30.2267, -112.33, -32.7388, 0.22", "30.4888, -113.003, -33.3252, 1.03", "30.6276, -113.353, -33.6325, 1.62", "30.7752, -113.707, -33.9606, 1.62", "31.0499, -114.304, -34.5465, 1.03", "31.6621, -115.529, -35.7981, 0.22", "31.9718, -116.101, -36.451, 0.44", "32.1597, -116.417, -36.8262, 0.44", "32.5859, -117.113, -37.657, 0.66", "32.8033, -117.464, -38.0607, 0.96", "33.0601, -117.871, -38.5135, 0.37", "33.8904, -119.175, -39.8936, 0.66", "34.0682, -119.443, -40.1647, 0.66", "34.7387, -120.42, -41.15, 0.22", "35.1049, -120.937, -41.6376, 0.22", "35.4437, -121.398, -42.0546, 0.81", "35.7729, -121.815, -42.4046, 0.96", "35.9834, -122.087, -42.5564, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "21.0203, 146.372, -35.5538, 0.37", "23.0229, 145.501, -33.3499, 0.37", "23.4315, 145.323, -32.9003, 0.37" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "21.0203, 146.372, -35.5538, 0.22", "22.3501, 148.929, -36.34, 0.22", "23.0029, 150.327, -36.7999, 0.22", "23.4913, 151.437, -37.178, 0.74", "23.6622, 151.85, -37.317, 0.74", "24.4541, 153.763, -37.9609, 0.15", "24.9665, 155.001, -38.3775, 0.15", "25.2819, 155.899, -38.7724, 0.66", "25.451, 156.458, -38.9762, 0.88", "25.6506, 157.098, -39.1685, 0.29" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-11.3181, 43.7319, 2.65338, 0.66", "-11.6158, 45.2778, 2.49859, 0.66", "-11.6804, 45.8627, 2.46592, 0.96", "-11.7527, 46.549, 2.44051, 0.96", "-11.8453, 47.4867, 2.41791, 0.59", "-11.9177, 48.3175, 2.40476, 0.59", "-11.9878, 49.2999, 2.39523, 0.59", "-12.056, 50.7276, 2.42816, 0.59", "-12.067, 51.4012, 2.44707, 0.52", "-12.0616, 52.4074, 2.48021, 0.88", "-12.0581, 53.1368, 2.49874, 1.11", "-12.0718, 54.007, 2.50915, 1.11", "-12.1018, 55.0091, 2.52173, 0.74", "-12.1572, 56.0596, 2.53542, 0.74", "-12.2421, 57.4039, 2.55702, 0.74", "-12.3192, 58.3311, 2.56597, 0.52", "-12.4227, 59.3227, 2.56035, 0.52", "-12.5066, 60.0369, 2.54652, 0.96", "-12.6332, 61.0915, 2.50257, 1.11", "-12.8256, 62.6555, 2.40951, 1.11", "-12.9508, 63.6832, 2.33419, 1.11", "-13.0589, 64.7075, 2.26731, 0.81", "-13.1378, 65.608, 2.21525, 0.74", "-13.1984, 66.5463, 2.17063, 0.74", "-13.2311, 67.426, 2.14332, 0.44", "-13.2526, 68.17, 2.13619, 0.44", "-13.2929, 69.3943, 2.15963, 0.74", "-13.3204, 70.2392, 2.1939, 0.74", "-13.3439, 71.1375, 2.23838, 0.37", "-13.3409, 72.0699, 2.29073, 0.74", "-13.326, 72.8843, 2.30488, 0.96", "-13.3001, 73.8185, 2.28264, 0.96", "-13.2646, 74.8469, 2.20342, 0.81", "-13.2219, 75.8125, 2.09812, 0.52", "-13.1635, 76.8217, 1.96293, 0.52", "-13.0516, 78.146, 1.76397, 1.03", "-12.9768, 78.8499, 1.65105, 1.55", "-12.9027, 79.4862, 1.54276, 1.69", "-12.8535, 79.9009, 1.47252, 1.69", "-12.7268, 80.926, 1.31756, 0.37", "-12.6157, 81.7834, 1.22126, 0.44", "-12.5402, 82.2294, 1.20014, 0.44", "-12.4371, 82.743, 1.19171, 0.44", "-12.2483, 83.5928, 1.19832, 0.29", "-12.1553, 83.9541, 1.20344, 0.59", "-11.9691, 84.5671, 1.21467, 0.44", "-11.6641, 85.5311, 1.23623, 0.29", "-11.3963, 86.4249, 1.25939, 1.18", "-11.2613, 86.9059, 1.27385, 1.18", "-11.0645, 87.6282, 1.29378, 0.52", "-10.8771, 88.3211, 1.31277, 0.29", "-10.6575, 89.1119, 1.35776, 0.29", "-10.4726, 89.8278, 1.43844, 0.29", "-10.3678, 90.2961, 1.51314, 0.29", "-10.1909, 91.2288, 1.69445, 0.81", "-10.0509, 92.0463, 1.8748, 0.44", "-9.90217, 92.8296, 2.0423, 0.22", "-9.71591, 93.6196, 2.20144, 0.44", "-9.63763, 93.9224, 2.2655, 0.44", "-9.47469, 94.5716, 2.40611, 0.29", "-9.34121, 95.1585, 2.53719, 0.29", "-9.15556, 95.9604, 2.69831, 0.29", "-9.03261, 96.4723, 2.78211, 0.29", "-8.86929, 97.1315, 2.88193, 0.66", "-8.74032, 97.6674, 2.96848, 0.66", "-8.58171, 98.3452, 3.05983, 0.74", "-8.44142, 99.0833, 3.16244, 0.37", "-8.35069, 99.6613, 3.24517, 0.37", "-8.22826, 100.47, 3.33526, 0.52", "-8.13235, 101.08, 3.37892, 0.59", "-7.98409, 102.009, 3.43195, 0.44", "-7.87652, 102.663, 3.46278, 0.29", "-7.79524, 103.122, 3.48674, 0.29", "-7.61771, 104.137, 3.55241, 1.11", "-7.51798, 104.718, 3.59709, 1.25", "-7.44794, 105.132, 3.63377, 1.25", "-7.28631, 106.002, 3.71152, 0.66", "-7.17059, 106.522, 3.74189, 0.29", "-6.96357, 107.329, 3.77937, 0.29", "-6.75734, 108.05, 3.80618, 0.29", "-6.55129, 108.703, 3.82536, 0.29", "-6.21964, 109.678, 3.84513, 0.96", "-6.0743, 110.101, 3.84612, 1.47", "-5.96021, 110.463, 3.8407, 1.47", "-5.9007, 110.676, 3.83392, 1.47", "-5.752, 111.301, 3.81415, 0.74", "-5.59929, 112.019, 3.79681, 0.29", "-5.46548, 112.755, 3.78453, 0.52", "-5.34115, 113.435, 3.77759, 0.74", "-5.16144, 114.298, 3.77609, 0.44", "-4.99934, 114.985, 3.77947, 0.29", "-4.87119, 115.467, 3.78405, 0.29", "-4.66692, 116.128, 3.79468, 0.66", "-4.50491, 116.601, 3.80197, 0.74", "-4.26743, 117.266, 3.81108, 0.74", "-4.00731, 118.012, 3.8268, 0.29", "-3.78873, 118.679, 3.84473, 0.29", "-3.38067, 120.023, 3.8866, 0.29", "-3.13294, 120.94, 3.96173, 0.52", "-3.00034, 121.494, 4.0284, 1.18", "-2.90186, 121.975, 4.1008, 1.4", "-2.76947, 122.758, 4.23752, 1.4", "-2.68669, 123.373, 4.35503, 0.66", "-2.512, 124.814, 4.63454, 0.29", "-2.38974, 125.722, 4.79151, 0.29", "-2.2978, 126.269, 4.85536, 0.37", "-2.15183, 127.007, 4.90068, 0.37", "-1.97776, 127.768, 4.91496, 0.37", "-1.62567, 129.115, 4.88318, 0.37", "-1.18981, 130.576, 4.77224, 0.37", "-0.727564, 131.994, 4.64851, 1.33", "-0.480554, 132.673, 4.5752, 1.99", "-0.27152, 133.212, 4.50836, 1.99", "-0.1822, 133.44, 4.47736, 1.99", "-0.0154502, 133.861, 4.42043, 1.99", "0.335756, 134.739, 4.31852, 0.59", "0.750666, 135.758, 4.23819, 0.29", "1.04812, 136.471, 4.22222, 0.59", "1.28189, 137.021, 4.22749, 0.59", "1.77733, 138.175, 4.27244, 0.37", "2.04416, 138.815, 4.31578, 0.37", "2.45468, 139.854, 4.41608, 0.37", "2.91373, 141.104, 4.56922, 0.74", "3.0788, 141.619, 4.63228, 0.74", "3.22055, 142.152, 4.70239, 0.88", "3.37975, 142.928, 4.80795, 0.44", "3.58586, 144.27, 4.9598, 0.29", "3.65764, 144.989, 5.00013, 0.52", "3.73725, 146.327, 4.99109, 1.25", "3.75616, 146.898, 4.97056, 1.62", "3.76425, 147.273, 4.93822, 1.62", "3.77488, 148.043, 4.83628, 0.96", "3.79598, 149.193, 4.62917, 0.29", "3.82624, 149.854, 4.4952, 0.29", "3.88765, 150.657, 4.33814, 0.29", "3.95675, 151.499, 4.20027, 0.74", "3.98342, 151.881, 4.15603, 0.96", "4.01006, 152.324, 4.12671, 0.96", "4.07032, 153.445, 4.08183, 0.52", "4.15025, 154.994, 4.01167, 0.37", "4.20172, 156.057, 3.96685, 0.29", "4.23667, 157.058, 3.91898, 0.66", "4.25437, 157.731, 3.87323, 0.66", "4.27318, 158.992, 3.76242, 0.29", "4.2817, 159.619, 3.70229, 0.29", "4.31132, 161.269, 3.53946, 0.29", "4.36883, 163.065, 3.36921, 1.99", "4.38341, 163.473, 3.33673, 2.28", "4.39883, 164.049, 3.30459, 1.55", "4.41104, 164.681, 3.30068, 0.88", "4.41765, 165.711, 3.3536, 0.22", "4.41259, 166.193, 3.40057, 0.22", "4.39484, 167.073, 3.51898, 0.66", "4.3833, 167.63, 3.59391, 0.66", "4.37091, 168.572, 3.71089, 0.29", "4.35698, 170.08, 3.86651, 0.22", "4.369, 170.845, 3.93533, 0.22", "4.40232, 171.653, 3.99492, 0.52", "4.49304, 172.666, 4.04809, 0.44", "4.61244, 173.547, 4.07713, 0.44", "4.79029, 174.564, 4.08608, 0.44", "5.13852, 176.141, 4.07911, 0.22", "5.42869, 177.314, 4.06801, 0.66", "5.69061, 178.263, 4.05493, 1.77", "5.84267, 178.764, 4.04681, 1.77", "5.99242, 179.214, 4.03941, 1.77", "6.24295, 179.872, 4.03012, 0.88", "6.54633, 180.603, 4.04981, 0.29", "6.75952, 181.099, 4.08247, 0.52", "7.29857, 182.381, 4.19756, 0.22", "7.60732, 183.112, 4.2593, 0.52", "7.95805, 183.935, 4.31793, 0.52", "8.71723, 185.746, 4.42314, 0.22", "9.29199, 187.132, 4.48152, 0.37", "9.66384, 188.044, 4.51614, 0.37", "10.0652, 189.059, 4.54587, 1.92", "10.2414, 189.527, 4.55174, 2.21", "10.4095, 190.011, 4.53936, 2.21", "10.5963, 190.583, 4.45488, 1.18" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-11.3181, 43.7319, 2.65338, 0.66", "-10.9276, 45.0991, 3.00467, 0.66", "-10.687, 45.9319, 3.21185, 0.81", "-10.5153, 46.5507, 3.38239, 0.37", "-10.3237, 47.2962, 3.58965, 0.29", "-9.99563, 48.5461, 3.92929, 0.29", "-9.78472, 49.2777, 4.13092, 0.29", "-9.53773, 49.9813, 4.31261, 0.29", "-9.15122, 50.9074, 4.57719, 0.29", "-8.80499, 51.6668, 4.80361, 0.29", "-8.4598, 52.423, 5.02873, 0.74", "-8.22078, 52.9309, 5.18747, 0.74", "-7.7655, 53.7903, 5.46752, 0.29", "-7.49608, 54.2834, 5.6356, 0.37", "-6.87691, 55.4316, 6.01495, 0.37", "-6.55113, 56.0809, 6.22988, 0.37", "-6.21971, 56.8486, 6.47362, 0.37", "-6.08728, 57.2026, 6.58179, 0.37", "-5.87923, 57.8489, 6.77672, 0.22", "-5.69445, 58.4765, 6.96299, 0.22", "-5.52966, 58.9717, 7.10767, 0.66", "-5.34467, 59.5693, 7.25067, 0.96", "-3.2476, 66.7361, 8.35697, 0.96", "0.270658, 72.9337, 10.9715, 0.96", "2.86082, 79.2069, 14.3622, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "30.327, 9.82436, 7.27768, 0.66", "31.1823, 8.12282, 7.28309, 0.66", "31.4235, 7.58125, 7.24944, 0.66", "31.8207, 6.74863, 7.22386, 0.88", "32.5413, 5.40667, 7.23761, 0.88", "33.061, 4.55247, 7.28385, 0.88", "33.5643, 3.84336, 7.34964, 1.03", "34.1572, 3.0763, 7.43263, 1.03", "35.0254, 2.48104, 7.67053, 0.88", "35.7257, 2.33757, 7.9044, 0.88", "36.3297, 2.28664, 8.12684, 0.88", "37.2852, 2.17633, 8.50869, 0.81", "38.3812, 1.90603, 8.98166, 0.81", "39.0751, 1.59751, 9.26853, 0.81", "39.9532, 0.992484, 9.56624, 0.74", "40.8872, 0.20516, 9.83892, 0.88", "41.7157, -0.586812, 10.0372, 0.88", "42.6024, -1.54851, 10.2055, 0.52", "43.0487, -2.04556, 10.2504, 0.52", "43.6013, -2.5711, 10.2381, 0.52", "44.3197, -3.10819, 10.1701, 0.52", "45.1507, -3.56866, 10.052, 0.74", "46.0004, -3.94755, 9.90711, 0.74", "47.0826, -4.35614, 9.70597, 0.74", "48.5148, -4.83875, 9.44449, 0.74", "49.5093, -5.14599, 9.25552, 0.74", "50.2981, -5.35006, 9.11037, 0.74", "51.1575, -5.4867, 8.96212, 0.74", "51.6613, -5.52827, 8.89554, 0.88", "53.0861, -5.53746, 8.73415, 0.88", "54.3009, -5.50568, 8.61957, 0.88", "55.8041, -5.47837, 8.49521, 0.66", "56.9021, -5.47936, 8.43028, 0.66", "59.724, -5.50555, 8.33417, 0.59", "60.7017, -5.52243, 8.31852, 0.52", "62.1815, -5.51547, 8.31879, 0.52", "63.0732, -5.46379, 8.33323, 0.52", "64.0444, -5.31908, 8.35202, 0.52", "65.2063, -5.07238, 8.37958, 0.52", "65.983, -4.88943, 8.40764, 0.52", "67.2496, -4.64401, 8.46808, 0.52", "68.6234, -4.37747, 8.54339, 0.52", "69.9103, -4.16695, 8.62342, 0.52", "71.1059, -4.06623, 8.71048, 0.52", "72.4647, -4.11153, 8.83143, 0.52", "73.3951, -4.29158, 8.94258, 0.52", "74.2565, -4.56313, 9.10546, 0.52", "74.8337, -4.76356, 9.25122, 0.52", "75.5613, -4.99841, 9.46743, 0.52", "77.0346, -5.38188, 9.98935, 0.29", "79.6689, -5.85832, 11.0365, 0.29", "82.0596, -6.12348, 12.05, 0.29", "83.28, -6.16229, 12.6036, 0.29", "84.1567, -6.14791, 13.016, 0.44", "85.0857, -6.05771, 13.4854, 0.59", "85.6689, -5.92105, 13.8391, 0.59", "86.6188, -5.34985, 14.5683, 0.59", "87.1247, -4.81497, 14.9833, 0.59", "97.0251, -7.99022, 17.261, 0.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "30.327, 9.82436, 7.27768, 1.11", "31.7077, 9.47173, 7.28276, 1.11", "32.5589, 9.14708, 7.27353, 1.11", "33.5395, 8.81633, 7.17517, 1.25", "34.3033, 8.63265, 7.07116, 1.47", "35.348, 8.4945, 6.91342, 1.4", "36.2813, 8.45766, 6.76446, 1.4", "37.3371, 8.4628, 6.54828, 1.18", "38.7759, 8.72864, 6.20529, 1.18", "39.7669, 9.11741, 5.93663, 1.18", "40.615, 9.52588, 5.69028, 1.18", "41.119, 9.77346, 5.54329, 0.88", "41.6232, 9.97016, 5.40349, 0.88", "42.416, 10.1114, 5.20308, 0.88", "43.6275, 10.0397, 4.93548, 1.11", "44.5472, 9.85346, 4.73191, 1.11", "45.4779, 9.59627, 4.52171, 1.11", "46.5293, 9.24943, 4.28575, 1.25", "47.601, 8.84304, 4.04983, 1.33", "48.0961, 8.63395, 3.94597, 1.47", "48.9128, 8.29918, 3.79389, 1.77" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-136.705, -96.0066, 2.58295, 0.59", "-136.786, -97.7706, 1.62234, 0.59", "-136.802, -98.5271, 1.24632, 0.59", "-136.791, -99.1966, 0.933105, 0.52", "-136.761, -99.9768, 0.591206, 0.52", "-136.748, -100.826, 0.239279, 0.88", "-136.738, -101.772, -0.139528, 1.03", "-136.728, -102.355, -0.322188, 1.03", "-136.678, -103.387, -0.635036, 1.03", "-136.605, -104.278, -0.899308, 0.29", "-136.558, -104.914, -1.08272, 0.29", "-136.533, -105.441, -1.22774, 0.29", "-136.54, -106.438, -1.49426, 0.59", "-136.581, -107.269, -1.66744, 0.74", "-136.639, -107.871, -1.76141, 0.88", "-136.715, -108.458, -1.83565, 0.88", "-136.796, -109.008, -1.88598, 0.88", "-136.943, -109.748, -1.92985, 0.81", "-137.32, -111.349, -2.0026, 0.37", "-137.52, -112.216, -2.03541, 1.03", "-137.714, -113.088, -2.03434, 1.33", "-137.894, -113.893, -2.01084, 1.33", "-138.143, -114.928, -1.95868, 1.03", "-138.369, -115.798, -1.90604, 0.74", "-138.585, -116.546, -1.87824, 0.37", "-138.87, -117.548, -1.78894, 0.74", "-139.042, -118.13, -1.72116, 0.74", "-139.243, -118.827, -1.68539, 0.59", "-139.379, -119.346, -1.69721, 0.37", "-139.56, -120.08, -1.78818, 0.37", "-139.878, -121.24, -2.07906, 0.66", "-140.137, -122.032, -2.37051, 0.74", "-140.638, -123.343, -2.94131, 0.52", "-140.86, -123.88, -3.20429, 0.52", "-141.168, -124.513, -3.52453, 1.33", "-141.574, -125.294, -3.94121, 1.55", "-142.11, -126.326, -4.46469, 1.99", "-142.44, -126.959, -4.73137, 2.21", "-142.875, -127.764, -5.00471, 1.99", "-143.425, -128.737, -5.32297, 1.11", "-144.018, -129.848, -5.7051, 0.37", "-144.466, -130.796, -6.04537, 1.11", "-144.675, -131.274, -6.22617, 1.25", "-144.939, -131.891, -6.46051, 1.25", "-145.54, -133.239, -7.00948, 0.29", "-145.933, -134.09, -7.37725, 0.29", "-146.329, -134.869, -7.71057, 0.44", "-146.758, -135.674, -8.05881, 0.59", "-147.271, -136.628, -8.45719, 0.88", "-147.7, -137.426, -8.77342, 0.96", "-148.159, -138.2, -9.04718, 0.66", "-148.769, -139.138, -9.31474, 0.37", "-149.231, -139.81, -9.48599, 0.29", "-149.732, -140.525, -9.623, 0.29", "-150.161, -141.16, -9.71482, 0.29", "-150.746, -142.028, -9.79878, 0.29", "-151.626, -143.222, -9.89055, 0.74", "-152.301, -144.062, -9.89911, 1.03", "-153.134, -145.05, -9.85809, 2.28", "-153.787, -145.775, -9.79311, 2.8", "-154.415, -146.463, -9.72639, 3.09", "-155.429, -147.605, -9.63565, 1.84", "-156.604, -148.911, -9.53522, 0.29", "-157.179, -149.585, -9.49147, 0.29", "-157.934, -150.539, -9.46531, 0.29", "-158.69, -151.585, -9.456, 0.29", "-159.2, -152.45, -9.47554, 0.88", "-159.591, -153.225, -9.51528, 1.11", "-159.902, -153.883, -9.58081, 0.81", "-160.15, -154.452, -9.64123, 0.52", "-160.527, -155.409, -9.75076, 0.29", "-160.943, -156.546, -9.8784, 0.29", "-161.275, -157.519, -9.99142, 0.29", "-161.461, -158.044, -10.0515, 0.29", "-161.815, -159.091, -10.1739, 0.81", "-162.113, -160.063, -10.2928, 1.11", "-162.323, -160.825, -10.391, 0.88", "-162.618, -161.907, -10.5339, 0.29", "-162.97, -163.226, -10.7071, 0.29", "-163.329, -164.393, -10.8928, 0.29", "-163.471, -164.816, -10.9689, 0.29", "-163.812, -165.818, -11.1748, 0.74", "-164.063, -166.53, -11.3382, 0.74", "-164.407, -167.53, -11.587, 0.44", "-164.797, -168.688, -11.8949, 0.29", "-164.999, -169.261, -12.0517, 0.29", "-165.261, -170.068, -12.2433, 0.29", "-165.517, -171.052, -12.4412, 0.29", "-165.634, -171.629, -12.5269, 0.74", "-165.729, -172.172, -12.5781, 0.74", "-165.879, -173.168, -12.6107, 0.44", "-166.064, -174.3, -12.6235, 0.29", "-166.229, -175.289, -12.5982, 0.74", "-166.351, -175.985, -12.5712, 1.11", "-166.475, -176.572, -12.5463, 1.69", "-166.585, -177.062, -12.5298, 1.92", "-166.751, -177.768, -12.5226, 1.92", "-166.995, -178.819, -12.5583, 1.62", "-167.296, -180.085, -12.6267, 0.29", "-167.532, -181.093, -12.7025, 0.22", "-167.747, -181.923, -12.7719, 0.22", "-168.058, -183.039, -12.8835, 0.59", "-168.339, -183.959, -12.9908, 0.74", "-168.557, -184.6, -13.067, 0.74", "-168.862, -185.425, -13.1505, 0.44", "-169.156, -186.126, -13.2096, 0.29", "-169.501, -186.834, -13.2284, 0.29", "-170.313, -188.273, -13.1702, 0.44", "-170.793, -189.014, -13.1229, 0.59", "-171.28, -189.701, -13.0735, 0.59", "-171.864, -190.479, -13.0386, 0.52", "-172.772, -191.632, -13.0194, 1.33", "-173.532, -192.553, -13.034, 2.06", "-174.252, -193.432, -13.0893, 2.21", "-174.783, -194.125, -13.1767, 2.21", "-175.564, -195.24, -13.3863, 0.81", "-176.049, -196.034, -13.5968, 0.29", "-176.429, -196.743, -13.8392, 0.44", "-176.669, -197.28, -14.0398, 0.44", "-176.975, -198.071, -14.3352, 0.29", "-177.206, -198.66, -14.571, 0.29", "-177.497, -199.391, -14.862, 0.29", "-177.711, -199.868, -15.0442, 0.74", "-177.932, -200.307, -15.185, 0.88", "-178.215, -200.831, -15.3217, 0.88", "-178.667, -201.698, -15.4931, 0.29", "-179.107, -202.584, -15.5991, 0.29", "-179.501, -203.505, -15.636, 0.29", "-179.918, -204.633, -15.6382, 0.52", "-180.1, -205.169, -15.622, 0.52", "-180.395, -206.159, -15.5583, 0.29", "-180.553, -206.856, -15.4816, 0.29", "-180.778, -208.287, -15.2805, 0.59", "-180.873, -209.109, -15.137, 0.29", "-180.935, -209.657, -15.0147, 0.29", "-181.049, -210.423, -14.8, 0.74", "-181.3, -211.442, -14.4374, 0.88", "-181.59, -212.208, -14.1177, 0.29", "-181.953, -212.913, -13.7772, 0.29", "-182.497, -213.785, -13.3489, 0.96", "-182.966, -214.46, -13.0508, 1.11", "-183.589, -215.282, -12.7722, 1.11", "-184.274, -216.192, -12.5622, 0.29", "-184.724, -216.856, -12.4696, 0.22", "-185.09, -217.503, -12.4515, 0.44", "-185.445, -218.252, -12.5015, 0.44", "-185.944, -219.487, -12.6969, 0.22", "-186.23, -220.245, -12.8702, 0.22", "-186.431, -220.799, -13.0352, 0.22", "-186.663, -221.421, -13.2449, 0.59", "-186.83, -221.867, -13.3998, 0.74", "-187.343, -223.17, -13.8894, 0.29", "-187.623, -223.857, -14.1616, 0.29", "-187.981, -224.71, -14.5076, 0.44", "-188.309, -225.527, -14.8419, 0.44", "-188.721, -226.616, -15.2721, 0.52", "-188.952, -227.242, -15.506, 0.96", "-189.186, -227.872, -15.7181, 1.4", "-189.446, -228.51, -15.9272, 1.4", "-190.096, -230.011, -16.3089, 0.29", "-190.762, -231.494, -16.5827, 0.22", "-191.1, -232.231, -16.6627, 0.37", "-191.645, -233.421, -16.708, 0.37", "-192.196, -234.604, -16.6845, 0.29", "-192.95, -236.167, -16.5671, 0.74", "-193.364, -236.973, -16.4596, 1.11", "-193.846, -237.828, -16.3197, 1.25", "-194.361, -238.666, -16.1802, 1.11", "-194.867, -239.429, -16.0625, 0.59", "-195.544, -240.397, -15.9541, 0.29", "-195.964, -240.961, -15.9544, 0.29", "-196.763, -242.024, -16.0068, 0.22", "-197.297, -242.744, -16.0681, 0.22", "-197.595, -243.154, -16.1088, 0.66", "-198.055, -243.797, -16.1746, 0.66", "-198.981, -245.145, -16.2902, 0.29", "-199.54, -245.961, -16.3447, 0.29", "-200.127, -246.778, -16.3821, 0.29", "-200.744, -247.583, -16.4091, 0.66", "-201.24, -248.195, -16.426, 0.66", "-202.042, -249.135, -16.4497, 0.22", "-202.596, -249.763, -16.4692, 0.22", "-203.532, -250.81, -16.5161, 0.22", "-205.178, -252.651, -16.6547, 0.22", "-205.676, -253.238, -16.7324, 0.22", "-206.199, -253.9, -16.857, 1.11", "-206.485, -254.304, -16.9648, 1.11", "-206.621, -254.538, -17.0395, 1.11", "-206.899, -255.148, -17.2607, 0.66", "-207.254, -256.154, -17.6683, 0.22", "-207.428, -256.773, -17.9241, 0.52", "-207.719, -258.2, -18.5207, 0.22", "-207.946, -259.364, -18.9975, 0.22", "-208.041, -259.863, -19.1961, 0.59", "-208.161, -260.5, -19.4386, 0.59", "-208.332, -261.423, -19.7917, 0.52", "-208.57, -262.78, -20.3215, 0.22", "-208.693, -263.575, -20.6388, 0.22", "-208.748, -264.049, -20.8317, 0.22", "-208.799, -264.587, -21.0544, 0.66", "-208.826, -265.378, -21.3347, 0.81", "-208.767, -266.27, -21.5866, 0.59", "-208.476, -267.596, -21.8266, 1.25", "-208.201, -268.319, -21.9045, 1.69", "-207.997, -268.685, -21.9197, 1.92", "-207.075, -269.896, -21.8944, 1.18", "-206.136, -270.842, -21.7967, 0.22", "-205.0, -271.737, -21.6549, 0.22", "-204.217, -272.245, -21.5551, 0.22", "-203.231, -272.817, -21.4603, 0.22", "-202.521, -273.205, -21.4238, 0.66", "-201.999, -273.482, -21.4371, 0.66", "-200.595, -274.22, -21.5383, 0.22", "-200.064, -274.504, -21.5993, 0.37", "-199.53, -274.847, -21.6782, 0.37", "-199.102, -275.182, -21.7471, 0.22", "-198.458, -275.763, -21.8634, 0.22", "-202.742, -285.262, -23.0751, 0.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-136.705, -96.0066, 2.58295, 0.37", "-137.544, -95.8354, 2.83931, 0.37", "-137.901, -95.7777, 2.92944, 0.37", "-138.672, -95.6781, 3.06763, 0.29", "-139.262, -95.6209, 3.14946, 0.44", "-139.835, -95.5827, 3.21266, 0.66", "-140.166, -95.5692, 3.23831, 0.81", "-140.455, -95.5671, 3.24295, 0.81", "-141.361, -95.5836, 3.21435, 0.22", "-141.647, -95.5942, 3.18979, 0.22", "-142.161, -95.616, 3.14416, 0.74", "-142.584, -95.6324, 3.10352, 0.88", "-143.289, -95.6611, 3.01577, 0.22", "-143.582, -95.6658, 2.95592, 0.22", "-143.857, -95.6698, 2.87816, 0.22", "-144.171, -95.6776, 2.77106, 0.74", "-144.507, -95.7005, 2.63232, 0.88", "-144.88, -95.7589, 2.42949, 0.88", "-145.715, -95.9812, 1.85428, 0.22", "-146.013, -96.0807, 1.62304, 0.22", "-146.259, -96.1702, 1.41405, 0.74", "-146.573, -96.2981, 1.10089, 0.74", "-147.221, -96.5784, 0.497878, 0.29", "-147.422, -96.6674, 0.324769, 0.29", "-147.749, -96.8158, 0.067215, 0.88", "-148.138, -96.9734, -0.216944, 1.03", "-149.308, -97.3748, -1.00566, 0.22", "-150.415, -97.7181, -1.69091, 0.22", "-150.86, -97.8413, -1.93179, 0.22", "-151.123, -97.9105, -2.06487, 1.11", "-151.44, -97.9961, -2.21303, 1.11", "-151.777, -98.0863, -2.33881, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-24.2361, -180.697, -3.16236, 0.81", "-23.037, -181.344, -3.58042, 0.81", "-22.0696, -181.807, -3.93249, 0.52", "-20.6937, -182.414, -4.45159, 0.52", "-20.0941, -182.688, -4.68414, 0.37", "-18.898, -183.253, -5.15537, 0.37", "-18.4234, -183.485, -5.34373, 0.66", "-18.0038, -183.693, -5.5267, 0.88", "-17.6543, -183.87, -5.67535, 0.88", "-16.7627, -184.418, -6.05889, 0.59", "-15.9734, -185.012, -6.40165, 0.66", "-15.1881, -185.694, -6.74154, 0.74", "-14.7074, -186.108, -6.94793, 0.74", "-14.3333, -186.405, -7.10627, 0.52", "-13.7225, -186.834, -7.36469, 0.29", "-13.0654, -187.198, -7.62721, 0.96", "-12.4643, -187.477, -7.85363, 1.03", "-12.065, -187.645, -7.99262, 1.03", "-11.1511, -188.009, -8.2853, 0.66", "-10.7676, -188.166, -8.40998, 0.52", "-9.88744, -188.541, -8.69907, 0.59", "-9.01695, -188.964, -8.98911, 0.59", "-8.2192, -189.408, -9.26356, 0.52", "-7.56215, -189.824, -9.49931, 0.52", "-6.87707, -190.304, -9.75604, 0.96", "-6.45344, -190.61, -9.92915, 1.18", "-5.7572, -191.104, -10.2377, 0.66", "-4.9369, -191.638, -10.6079, 0.37", "-4.42395, -191.939, -10.8423, 0.37", "-3.36199, -192.496, -11.3317, 0.88", "-2.41399, -192.969, -11.7379, 1.03", "-1.68975, -193.33, -12.0348, 0.81", "-1.01738, -193.663, -12.2919, 0.52", "-0.222247, -194.058, -12.5734, 0.52", "0.404788, -194.381, -12.7751, 0.52", "1.27492, -194.895, -13.0309, 0.52", "2.01196, -195.384, -13.2293, 1.33", "2.4731, -195.723, -13.3489, 1.69", "3.00238, -196.164, -13.4822, 1.69", "3.86294, -196.948, -13.7711, 1.11", "4.77593, -197.815, -14.1533, 0.44", "5.35075, -198.351, -14.4575, 0.44", "5.80692, -198.766, -14.7359, 0.29", "6.31399, -199.218, -15.0998, 0.29", "7.4423, -200.184, -16.004, 1.03", "7.76508, -200.447, -16.2898, 1.4", "8.1066, -200.734, -16.6227, 1.4", "9.17529, -201.742, -17.7516, 0.22", "9.73876, -202.306, -18.3562, 0.52", "10.0174, -202.598, -18.6484, 0.52", "10.4997, -203.151, -19.1324, 0.29", "11.1716, -203.954, -19.8165, 0.29", "11.586, -204.452, -20.2255, 0.29", "12.0026, -204.984, -20.6441, 0.66", "12.316, -205.384, -20.9284, 0.81", "12.5462, -205.676, -21.1262, 0.81", "12.9415, -206.133, -21.4284, 0.59", "13.3963, -206.598, -21.7552, 0.29", "13.8366, -207.062, -22.0409, 0.29", "14.3368, -207.671, -22.3337, 0.66", "14.7233, -208.212, -22.5144, 0.66", "15.2414, -209.05, -22.6856, 0.29", "15.5352, -209.594, -22.7353, 0.29", "16.0288, -210.593, -22.7484, 0.66", "16.3712, -211.304, -22.7092, 0.66", "16.7953, -212.237, -22.601, 0.44", "17.1934, -213.19, -22.4463, 1.47", "17.4859, -213.96, -22.2981, 1.84", "17.6458, -214.412, -22.2082, 1.84", "17.7382, -214.692, -22.1644, 1.84", "17.9787, -215.407, -22.0674, 1.33", "18.2878, -216.268, -21.9761, 0.52", "18.4579, -216.721, -21.9359, 0.52", "18.6921, -217.336, -21.8835, 0.52", "19.069, -218.319, -21.7913, 0.29", "19.2708, -218.827, -21.7391, 0.29", "19.5789, -219.552, -21.6533, 0.29", "19.8831, -220.22, -21.5663, 0.44", "20.3428, -221.118, -21.4577, 0.44", "20.7705, -221.847, -21.397, 0.44", "21.1016, -222.354, -21.3836, 1.33", "21.4838, -222.934, -21.4071, 1.84", "21.8558, -223.446, -21.4611, 1.84", "22.4856, -224.238, -21.5824, 0.96", "23.3149, -225.203, -21.7756, 0.22", "24.023, -225.981, -21.9618, 0.22", "25.0273, -227.026, -22.2538, 0.22", "25.6357, -227.611, -22.4398, 0.22", "26.3304, -228.21, -22.659, 0.22", "26.9445, -228.69, -22.8674, 0.44", "27.6756, -229.213, -23.1394, 0.88", "28.3747, -229.693, -23.4312, 1.03", "28.83, -230.004, -23.6331, 1.03", "29.3582, -230.393, -23.8764, 0.88", "29.8853, -230.76, -24.1257, 0.29", "30.2691, -231.007, -24.294, 0.29", "30.8684, -231.353, -24.5165, 0.29", "31.6349, -231.753, -24.7583, 0.37", "32.2226, -232.029, -24.9078, 0.37", "32.7455, -232.247, -25.0157, 0.29", "33.7612, -232.612, -25.1837, 0.29", "34.5589, -232.875, -25.3116, 0.81", "35.0053, -233.022, -25.3887, 0.81", "35.8621, -233.352, -25.5377, 0.59", "36.4863, -233.662, -25.6348, 0.29", "37.021, -233.981, -25.7067, 0.29", "37.5813, -234.36, -25.769, 0.66", "37.9958, -234.657, -25.7971, 0.66", "39.2346, -235.571, -25.8233, 0.29", "40.0244, -236.147, -25.7903, 0.29", "40.8483, -236.747, -25.6898, 0.29", "41.476, -237.209, -25.5661, 0.29", "42.102, -237.662, -25.3968, 0.88", "42.3849, -237.864, -25.3154, 0.88", "43.1419, -238.406, -25.0675, 0.66", "44.1851, -239.14, -24.6798, 0.29", "44.7239, -239.527, -24.4546, 0.29", "45.3599, -239.999, -24.1838, 0.66", "45.8897, -240.412, -23.9828, 0.44", "53.1964, -246.614, -24.3472, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-24.2361, -180.697, -3.16236, 2.14", "-24.8208, -182.207, -3.46635, 2.14", "-25.3007, -183.584, -3.70961, 1.33", "-25.7321, -184.94, -3.91638, 1.03", "-26.0127, -185.971, -4.04502, 1.03", "-26.1882, -186.673, -4.12423, 1.25", "-26.3525, -187.36, -4.19586, 1.25", "-26.5946, -188.659, -4.29805, 0.96", "-26.7686, -189.711, -4.34899, 0.96", "-27.0885, -191.556, -4.42114, 0.88", "-27.283, -192.643, -4.43981, 0.88", "-27.4424, -193.673, -4.43839, 0.96", "-27.5902, -194.849, -4.41568, 0.96", "-27.6969, -195.854, -4.37177, 0.74", "-27.785, -196.822, -4.31004, 0.52", "-27.8497, -197.626, -4.24041, 0.52", "-27.9218, -198.613, -4.13689, 0.37", "-27.9759, -199.399, -4.05122, 0.74", "-28.0516, -200.254, -3.95715, 0.74", "-28.1481, -201.216, -3.83968, 1.03", "-28.2205, -201.827, -3.76168, 1.18", "-28.3329, -202.673, -3.66138, 1.33", "-28.4334, -203.31, -3.58425, 1.33", "-28.5323, -203.989, -3.46716, 1.18", "-28.6784, -204.979, -3.19091, 0.96", "-28.7932, -205.735, -2.89636, 0.81", "-28.9022, -206.498, -2.53884, 0.81", "-28.9948, -207.336, -2.10069, 0.81", "-29.0632, -208.07, -1.70563, 0.59", "-29.1562, -209.282, -1.07842, 0.66", "-29.2142, -209.799, -0.839052, 0.66", "-29.3772, -210.725, -0.504721, 1.18", "-29.6593, -211.678, -0.320419, 1.47", "-30.0116, -212.499, -0.299517, 1.55", "-30.3601, -213.095, -0.368446, 1.55", "-30.9528, -213.895, -0.544631, 1.4", "-31.7954, -214.819, -0.784183, 1.18", "-32.8148, -215.793, -1.05462, 0.66", "-33.6713, -216.555, -1.25883, 0.74", "-34.793, -217.51, -1.49163, 1.18", "-35.7288, -218.277, -1.64148, 1.25", "-36.7194, -219.065, -1.74096, 1.25", "-37.5681, -219.718, -1.76285, 1.25", "-38.4369, -220.324, -1.73725, 1.33", "-38.9418, -220.629, -1.69327, 1.33", "-39.7641, -221.042, -1.55245, 1.03", "-40.4789, -221.335, -1.37392, 0.74", "-41.0518, -221.533, -1.20513, 0.59", "-41.8078, -221.794, -0.959357, 0.59", "-42.5637, -222.097, -0.698853, 0.88", "-43.318, -222.51, -0.40643, 1.18", "-44.0233, -223.017, -0.0815704, 1.18", "-44.6449, -223.56, 0.244985, 1.18", "-45.2275, -224.165, 0.565014, 1.18", "-45.6753, -224.694, 0.809926, 1.18", "-46.2957, -225.507, 1.14334, 0.81", "-46.6675, -226.045, 1.33491, 0.59", "-47.0098, -226.609, 1.5008, 0.52", "-47.6653, -227.81, 1.78886, 0.96", "-48.0432, -228.616, 1.93455, 1.18", "-48.3581, -229.367, 2.03223, 1.18", "-48.7614, -230.392, 2.11542, 0.88", "-49.1518, -231.425, 2.16652, 0.59", "-49.4727, -232.355, 2.20104, 0.59", "-49.8236, -233.438, 2.23856, 0.59", "-50.1507, -234.449, 2.27506, 0.74", "-50.5321, -235.58, 2.31889, 1.33", "-50.8753, -236.562, 2.35877, 1.69", "-51.3155, -237.775, 2.4094, 1.77", "-51.5677, -238.488, 2.43717, 1.77", "-51.8785, -239.387, 2.44874, 1.77", "-52.1353, -240.252, 2.43325, 1.47", "-52.3759, -241.213, 2.38566, 1.03", "-52.5936, -242.159, 2.31391, 1.03", "-52.8447, -243.263, 2.20257, 1.03", "-53.0905, -244.409, 2.08415, 1.11", "-53.3061, -245.489, 1.98127, 1.33", "-53.4654, -246.473, 1.90453, 1.03", "-53.6156, -247.808, 1.82716, 0.81", "-53.6837, -248.743, 1.79319, 1.03", "-53.7271, -249.92, 1.77691, 0.81", "-53.7338, -250.562, 1.78288, 0.81", "-53.7156, -252.3, 1.80892, 0.74", "-53.6629, -254.047, 1.84377, 0.74", "-53.5899, -255.451, 1.87394, 0.74", "-53.4869, -257.503, 1.91884, 0.74", "-53.4497, -258.919, 1.94094, 0.74", "-53.4633, -259.837, 1.95476, 1.18", "-53.5505, -260.779, 1.97847, 1.4", "-53.7513, -261.753, 2.02179, 1.4", "-54.0718, -262.674, 2.08626, 1.47", "-54.621, -263.686, 2.18254, 1.55", "-55.0616, -264.289, 2.24777, 1.55", "-55.9013, -265.223, 2.36715, 1.11", "-57.0189, -266.269, 2.52814, 0.88", "-57.8396, -266.945, 2.67089, 0.88", "-58.7852, -267.636, 2.8588, 1.03", "-59.4404, -268.085, 2.99406, 1.03", "-59.9604, -268.45, 3.10836, 1.03", "-60.7225, -269.066, 3.3145, 0.81", "-61.5997, -269.942, 3.58865, 0.59", "-62.5575, -271.152, 3.92077, 0.59", "-63.1589, -272.095, 4.15194, 0.88", "-63.6076, -272.971, 4.34824, 0.88", "-64.1789, -274.35, 4.61746, 0.74", "-64.4923, -275.301, 4.7766, 0.96", "-64.7427, -276.239, 4.88928, 1.11", "-64.8883, -276.914, 4.95523, 1.11", "-65.0296, -277.624, 5.00001, 0.88", "-65.2374, -278.6, 5.00496, 0.66", "-65.3991, -279.286, 4.98572, 0.66", "-65.6686, -280.439, 4.95621, 0.96", "-65.8666, -281.32, 4.93009, 0.96", "-66.1088, -282.448, 4.89107, 0.66", "-66.3296, -283.478, 4.85367, 0.74", "-66.6731, -285.129, 4.81252, 0.96", "-66.864, -286.083, 4.81689, 0.96", "-67.0571, -287.078, 4.82715, 0.96", "-67.2892, -288.219, 4.82035, 0.66", "-67.6376, -289.902, 4.77833, 0.66", "-67.9313, -291.51, 4.68961, 0.66", "-68.0857, -292.471, 4.60568, 0.81", "-68.3208, -294.152, 4.42066, 0.74", "-68.4772, -295.486, 4.24318, 0.74", "-68.6003, -296.892, 4.0295, 0.96", "-68.6742, -298.073, 3.83387, 0.96", "-68.721, -298.857, 3.71125, 1.62", "-68.7692, -299.288, 3.66332, 1.62", "-68.867, -299.853, 3.65033, 1.62", "-69.0458, -300.68, 3.67832, 1.4", "-69.2737, -301.544, 3.73904, 0.88", "-69.5824, -302.649, 3.84256, 0.59", "-69.9931, -304.152, 4.00158, 0.81", "-70.3244, -305.361, 4.14025, 0.96", "-70.5791, -306.338, 4.24515, 0.96", "-70.8638, -307.518, 4.35046, 1.11", "-71.0505, -308.29, 4.40894, 1.11", "-71.2077, -308.886, 4.44548, 1.33", "-71.3727, -309.466, 4.47587, 1.33", "-71.7064, -310.409, 4.54387, 1.03", "-72.1144, -311.337, 4.6339, 0.66", "-72.4567, -312.029, 4.71334, 0.37", "-72.7159, -312.534, 4.77454, 0.37", "-73.0314, -313.196, 4.85555, 0.37", "-73.3153, -313.825, 4.93427, 1.03", "-73.6224, -314.525, 5.02127, 1.25", "-73.822, -315.045, 5.08506, 1.25", "-74.1392, -316.02, 5.19423, 0.96", "-74.4893, -317.247, 5.31692, 0.52", "-74.7887, -318.351, 5.41458, 0.52", "-75.1775, -319.891, 5.53168, 0.52", "-75.4532, -321.146, 5.61537, 0.81", "-75.6463, -322.062, 5.67858, 1.03", "-75.8281, -322.889, 5.7385, 1.03", "-75.975, -323.526, 5.78496, 0.81", "-76.1692, -324.295, 5.8386, 0.81", "-76.4825, -325.372, 5.90669, 0.59", "-76.8878, -326.501, 5.97112, 0.44", "-77.5262, -327.918, 6.06773, 0.88", "-77.8573, -328.524, 6.1169, 0.88", "-78.3584, -329.306, 6.18953, 0.59", "-78.8933, -329.97, 6.26799, 0.59", "-79.7522, -330.798, 6.38017, 0.59", "-80.6857, -331.52, 6.48599, 0.81", "-81.2213, -331.863, 6.54445, 0.81", "-81.6547, -332.109, 6.59031, 0.81", "-82.6364, -332.582, 6.68648, 0.59", "-83.7175, -333.0, 6.78656, 0.88", "-84.7945, -333.333, 6.87766, 1.03", "-85.8244, -333.598, 6.95643, 1.03", "-86.6763, -333.773, 7.02461, 0.59", "-87.4439, -333.908, 7.0958, 0.59", "-88.0951, -334.024, 7.16513, 0.59", "-88.6531, -334.122, 7.24228, 0.59", "-89.2462, -334.252, 7.33222, 0.59", "-90.0203, -334.459, 7.46256, 0.44", "-91.1768, -334.85, 7.67402, 0.81", "-92.139, -335.245, 7.8676, 1.11", "-93.1847, -335.755, 8.10122, 0.81", "-94.2281, -336.353, 8.35087, 0.66", "-94.7048, -336.665, 8.46917, 0.66", "-95.277, -337.093, 8.61494, 0.52", "-95.9291, -337.632, 8.79035, 0.52", "-96.5871, -338.246, 8.97419, 0.52", "-97.2461, -338.906, 9.16411, 0.52", "-97.6426, -339.345, 9.28258, 1.11", "-98.5208, -340.417, 9.5392, 1.4", "-98.9948, -341.061, 9.67443, 1.84", "-99.5151, -341.842, 9.80794, 2.43" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-8.58019, -98.4278, -7.14237, 0.66", "-8.61885, -99.4546, -7.08119, 0.66", "-8.6529, -100.088, -7.04796, 0.37", "-8.66953, -100.511, -7.04033, 0.81", "-8.67898, -101.059, -7.04002, 1.03", "-8.68697, -101.535, -7.04354, 1.11", "-8.69751, -102.043, -7.05617, 0.88", "-8.70801, -102.63, -7.09238, 0.59", "-8.70049, -103.313, -7.15405, 0.29", "-8.67816, -103.808, -7.21047, 0.29", "-8.65617, -104.035, -7.24, 0.29", "-8.56625, -104.547, -7.32068, 0.74", "-8.4393, -105.023, -7.40609, 1.11", "-8.33796, -105.323, -7.46066, 1.11", "-8.17417, -105.765, -7.5402, 1.11", "-7.97367, -106.276, -7.61008, 0.81", "-7.64767, -107.119, -7.68564, 0.44", "-7.35726, -107.918, -7.72013, 0.59", "-7.20434, -108.4, -7.72467, 0.88", "-7.07383, -108.906, -7.71146, 0.88", "-6.93099, -109.632, -7.67143, 0.81", "-6.83632, -110.343, -7.60577, 0.44", "-6.79671, -110.904, -7.53115, 1.03", "-6.78216, -111.374, -7.46267, 0.74", "-6.77492, -111.963, -7.38282, 0.52", "-6.7738, -112.419, -7.32973, 0.88", "-6.77726, -112.839, -7.30908, 1.18", "-6.77993, -113.204, -7.2986, 1.18", "-6.78717, -113.621, -7.29214, 0.88", "-6.80152, -114.347, -7.28993, 0.29", "-6.81555, -114.897, -7.29633, 0.29", "-6.83897, -115.684, -7.324, 1.03", "-6.85007, -116.207, -7.35096, 1.47", "-6.85764, -116.537, -7.36866, 1.47", "-6.86329, -116.9, -7.3882, 1.47", "-6.85891, -117.442, -7.4145, 1.25", "-6.84439, -118.104, -7.43739, 0.44", "-6.82116, -118.65, -7.44515, 0.44", "-6.7923, -119.184, -7.45521, 0.44", "-6.77342, -119.458, -7.46095, 0.59", "-6.72713, -120.102, -7.47502, 0.59", "-6.68241, -120.592, -7.48701, 0.37", "-6.6441, -121.002, -7.49678, 0.81", "-6.61012, -121.377, -7.50062, 1.03", "-6.58747, -121.651, -7.49896, 1.03", "-6.5684, -121.991, -7.49047, 0.59", "-6.5361, -122.544, -7.46683, 0.22", "-6.50392, -122.891, -7.44812, 0.22", "-6.45476, -123.3, -7.42334, 0.22", "-6.39365, -123.74, -7.39477, 0.66", "-6.31159, -124.266, -7.36142, 0.88", "-6.17374, -125.033, -7.31348, 0.88", "-6.00608, -125.925, -7.25917, 0.96", "-5.87642, -126.597, -7.2292, 1.18", "-5.77931, -127.143, -7.21745, 0.66", "-5.7036, -127.59, -7.2108, 0.52", "-5.57621, -128.445, -7.20859, 0.52", "-5.49164, -129.105, -7.2142, 0.81", "-5.4132, -129.772, -7.22698, 0.52", "-5.35409, -130.271, -7.23492, 0.52", "-5.27871, -130.861, -7.25571, 1.47", "-5.19301, -131.465, -7.29056, 1.77", "-5.11737, -131.932, -7.33565, 1.77", "-5.06437, -132.2, -7.36759, 1.77", "-4.96139, -132.645, -7.42221, 1.25", "-4.83098, -133.159, -7.48544, 0.81", "-4.67549, -133.784, -7.56532, 0.44", "-4.47671, -134.567, -7.66134, 0.37", "-4.35503, -135.048, -7.71681, 0.52", "-4.20007, -135.63, -7.77842, 0.52", "-4.07739, -136.066, -7.8205, 0.66", "-3.90411, -136.639, -7.87481, 0.66", "-3.66826, -137.372, -7.97052, 0.88", "-3.45417, -137.987, -8.07077, 1.25", "-3.32487, -138.334, -8.14418, 1.25", "-3.2033, -138.633, -8.21881, 1.25", "-2.94818, -139.22, -8.38589, 1.11", "-2.71244, -139.738, -8.54826, 0.74", "-2.49824, -140.193, -8.70314, 0.29", "-2.37169, -140.463, -8.80095, 0.29", "-2.07356, -141.12, -9.03266, 0.44", "-1.91164, -141.497, -9.1514, 0.88", "-1.78205, -141.84, -9.23924, 1.33", "-1.64651, -142.245, -9.31795, 1.47", "-1.51837, -142.684, -9.38013, 1.47", "-1.41436, -143.075, -9.41862, 1.25", "-1.28209, -143.608, -9.45302, 0.44", "-1.09886, -144.389, -9.4552, 0.29", "-0.968509, -145.008, -9.4207, 0.29", "-0.852771, -145.638, -9.35561, 0.29", "-0.775674, -146.14, -9.28393, 0.74", "-0.734857, -146.496, -9.22213, 0.88", "-0.691414, -147.217, -9.07644, 0.96", "-0.695273, -147.835, -8.94721, 1.03", "-0.730047, -148.3, -8.86088, 1.03", "-0.790558, -148.765, -8.77881, 0.59", "-0.865814, -149.261, -8.69746, 0.22", "-0.912422, -149.575, -8.65604, 0.22", "-1.00848, -150.297, -8.59988, 0.96", "-1.06241, -150.726, -8.57899, 1.11", "-1.11557, -151.197, -8.54373, 1.11", "-1.15403, -151.646, -8.49227, 0.59", "-1.17945, -152.102, -8.42694, 0.29", "-1.19039, -152.491, -8.35861, 0.29", "-1.19873, -152.815, -8.29164, 0.29", "-1.21445, -153.517, -8.13177, 0.44", "-1.2285, -154.111, -7.9802, 0.66", "-1.24287, -154.738, -7.81361, 0.66", "-1.24753, -155.192, -7.69663, 0.81", "-1.24784, -155.696, -7.57798, 0.81", "-1.24452, -156.178, -7.4736, 0.52", "-1.25235, -156.792, -7.3606, 0.66", "-1.26513, -157.246, -7.28143, 0.66", "-1.30622, -158.014, -7.19013, 0.37", "-1.35518, -158.695, -7.14663, 0.37", "-1.40598, -159.24, -7.13931, 1.03", "-1.46461, -159.79, -7.17353, 1.47", "-1.53382, -160.33, -7.24521, 1.62", "-1.68334, -161.298, -7.43745, 0.88", "-1.81488, -161.929, -7.62018, 0.59", "-1.94673, -162.412, -7.80358, 0.37", "-2.21979, -163.191, -8.15043, 0.29", "-2.31877, -163.421, -8.25429, 0.29", "-2.48729, -163.75, -8.39624, 0.29", "-2.81853, -164.36, -8.62023, 0.29", "-3.14967, -164.937, -8.83412, 0.59", "-3.49527, -165.547, -9.0483, 0.59", "-3.71316, -165.925, -9.17769, 0.44", "-3.98439, -166.378, -9.3426, 0.44", "-4.16514, -166.656, -9.47105, 0.29", "-4.42792, -167.052, -9.69087, 1.4", "-4.81848, -167.51, -10.053, 1.62", "-5.1893, -167.827, -10.3916, 1.4", "-5.55773, -168.058, -10.7132, 1.11", "-6.18175, -168.37, -11.2259, 0.81", "-6.52891, -168.532, -11.5078, 0.59", "-6.90845, -168.725, -11.8327, 0.74", "-7.26936, -168.957, -12.1582, 0.81", "-7.54575, -169.246, -12.4255, 0.52", "-7.7449, -169.537, -12.6368, 0.52", "-7.92627, -169.859, -12.8233, 0.74", "-8.17211, -170.318, -13.0956, 0.74", "-8.29842, -170.602, -13.2421, 0.74", "-8.42267, -170.923, -13.4109, 0.52", "-8.60641, -171.428, -13.6478, 0.52", "-8.70764, -171.705, -13.7682, 0.52", "-8.90341, -172.247, -13.9687, 1.69", "-9.02335, -172.605, -14.0714, 2.14", "-9.24036, -173.359, -14.235, 1.55", "-9.43958, -174.149, -14.361, 0.29", "-9.54474, -174.61, -14.4144, 0.29", "-9.6824, -175.243, -14.4681, 0.44", "-9.8128, -175.846, -14.4967, 0.59", "-9.92944, -176.381, -14.5087, 0.59", "-10.0497, -176.925, -14.4993, 0.29", "-10.115, -177.217, -14.495, 0.29", "-10.2047, -177.625, -14.4887, 0.96", "-10.2772, -177.983, -14.4829, 1.03", "-10.3638, -178.482, -14.4764, 0.52", "-10.4541, -179.13, -14.4699, 0.29", "-10.4938, -179.499, -14.4657, 0.81", "-10.5313, -179.927, -14.4587, 0.96", "-10.557, -180.257, -14.4536, 0.96", "-10.6007, -180.836, -14.4459, 0.29", "-10.6621, -181.497, -14.4369, 0.29", "-10.7342, -182.189, -14.4477, 1.47", "-10.7851, -182.674, -14.4651, 1.92", "-10.8072, -182.91, -14.4762, 1.92", "-10.8605, -183.496, -14.4995, 1.33", "-10.912, -184.149, -14.5278, 0.29", "-10.9595, -184.815, -14.5615, 0.29", "-10.9911, -185.347, -14.5951, 0.29", "-11.0536, -186.502, -14.6774, 0.29", "-11.0892, -187.288, -14.7276, 1.4", "-11.1053, -187.767, -14.7535, 2.14", "-11.11, -187.976, -14.7626, 2.28", "-11.1142, -188.316, -14.77, 2.28", "-11.1214, -188.668, -14.767, 1.92", "-11.1429, -189.176, -14.7221, 0.88", "-11.1845, -189.95, -14.6069, 0.29", "-11.2127, -190.421, -14.5113, 0.29", "-11.2446, -190.948, -14.3866, 0.29", "-11.2955, -191.773, -14.1728, 0.29", "-11.344, -192.617, -13.9523, 0.96", "-11.3714, -193.183, -13.8103, 1.62", "-11.3851, -193.503, -13.7321, 1.62", "-11.3971, -193.805, -13.6654, 1.62", "-11.4223, -194.457, -13.5495, 1.11", "-11.445, -195.259, -13.4839, 0.29", "-11.4657, -195.86, -13.4763, 0.29", "-11.4867, -196.336, -13.4853, 0.59", "-11.5012, -196.572, -13.4955, 0.66", "-11.524, -196.859, -13.5122, 0.66", "-11.6047, -197.646, -13.5654, 0.29", "-11.7256, -198.56, -13.6498, 0.29", "-11.8391, -199.269, -13.7245, 0.96", "-11.9509, -199.827, -13.784, 1.4", "-12.0458, -200.245, -13.8242, 1.4", "-12.1504, -200.677, -13.8589, 1.4", "-12.2961, -201.247, -13.891, 0.88", "-12.4781, -201.945, -13.9259, 0.29", "-12.643, -202.582, -13.9481, 0.29", "-12.8179, -203.225, -13.9664, 0.44", "-12.9388, -203.633, -13.9731, 0.66", "-13.0431, -203.96, -13.9714, 0.66", "-13.2353, -204.541, -13.9447, 0.29", "-13.3494, -204.89, -13.9256, 0.29", "-13.4946, -205.336, -13.9206, 0.29", "-13.7011, -205.95, -13.9561, 0.29", "-13.8231, -206.302, -14.0011, 0.52", "-13.9851, -206.79, -14.0889, 0.66", "-14.1123, -207.277, -14.1631, 0.66", "-14.2435, -208.032, -14.2597, 1.4", "-14.2865, -208.692, -14.3359, 2.28", "-14.2699, -209.349, -14.4065, 2.5", "-14.2275, -209.718, -14.4322, 2.5", "-13.9356, -211.001, -14.4587, 0.22", "-13.7631, -211.517, -14.436, 0.22", "-13.4663, -212.168, -14.3606, 0.37", "-13.2451, -212.55, -14.2894, 0.44", "-12.822, -213.115, -14.2154, 0.29", "-12.3444, -213.639, -14.2167, 0.88", "-12.0582, -213.887, -14.2933, 1.4", "-11.8362, -214.066, -14.3936, 1.4", "-11.5368, -214.324, -14.5844, 1.11", "-10.6042, -215.221, -15.3568, 0.29", "-10.3094, -215.547, -15.6547, 0.29", "-9.86396, -216.117, -16.1711, 0.81", "-9.64464, -216.487, -16.4565, 0.81", "-9.2972, -217.272, -16.9617, 0.22", "-9.19008, -217.6, -17.1344, 0.22", "-9.07853, -218.105, -17.3195, 0.44", "-9.0313, -218.389, -17.4028, 0.59", "-8.88263, -219.579, -17.6738, 0.22", "-8.83975, -219.995, -17.7626, 0.74", "-8.80846, -220.364, -17.8354, 1.03", "-8.77145, -220.759, -17.9049, 1.03", "-8.73429, -221.145, -17.9663, 0.74", "-8.69739, -221.504, -18.0217, 0.37", "-8.59237, -222.414, -18.1649, 0.22", "-8.49652, -223.32, -18.3117, 0.22", "-8.43464, -224.003, -18.4202, 0.88", "-8.39472, -224.507, -18.5, 1.62", "-8.37657, -224.784, -18.5442, 1.84", "-8.36268, -225.118, -18.5968, 1.84", "-8.35353, -225.807, -18.7, 0.52", "-8.37133, -226.389, -18.7878, 0.22", "-8.40776, -226.855, -18.8618, 0.22", "-8.45648, -227.258, -18.9269, 0.37", "-8.48275, -227.414, -18.9484, 0.37", "-8.56828, -227.801, -19.0023, 0.22", "-8.65274, -228.115, -19.0455, 0.74", "-8.75682, -228.473, -19.0977, 0.74", "-8.85793, -228.796, -19.1423, 0.59", "-9.0929, -229.497, -19.233, 0.22", "-9.21295, -229.82, -19.2692, 0.22", "-9.397, -230.251, -19.2953, 0.59", "-9.54658, -230.561, -19.2938, 0.59", "-9.71012, -230.879, -19.2605, 0.29", "-9.89162, -231.203, -19.209, 0.22", "-10.1746, -231.65, -19.1493, 0.37", "-10.5525, -232.188, -19.0886, 0.44", "-10.9027, -232.572, -19.0947, 0.59", "-11.3617, -232.966, -19.1748, 0.37", "-11.6503, -233.142, -19.2666, 0.22", "-12.3877, -233.422, -19.5958, 2.21", "-12.6711, -233.459, -19.7583, 2.5", "-13.7857, -233.312, -20.5092, 0.22", "-14.1309, -233.195, -20.7651, 0.22", "-14.5963, -232.929, -21.1655, 0.66", "-14.8181, -232.756, -21.3799, 0.66", "-15.1315, -232.457, -21.7091, 0.37", "-15.5658, -232.018, -22.2025, 1.92", "-15.7188, -231.863, -22.3831, 1.92", "-16.4976, -231.214, -23.3385, 0.44", "-16.8423, -230.987, -23.7636, 0.59", "-17.052, -230.891, -23.9982, 0.37", "-17.3827, -230.818, -24.3091, 0.37", "-17.7261, -230.785, -24.6129, 0.22", "-18.5558, -230.8, -25.2502, 0.29", "-18.8509, -230.854, -25.4173, 0.22", "-19.3384, -230.968, -25.6541, 0.22", "-20.0139, -231.121, -25.9593, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-8.58019, -98.4278, -7.14237, 0.74", "-9.95985, -99.4338, -7.14158, 0.74", "-10.5077, -99.7938, -7.14271, 0.74", "-11.3003, -100.248, -7.16991, 0.74", "-11.8562, -100.515, -7.20502, 0.52", "-12.436, -100.711, -7.27656, 0.52", "-12.9928, -100.843, -7.3749, 0.88", "-13.4616, -100.821, -7.5418, 0.88", "-14.2112, -100.66, -7.89993, 0.59", "-14.6785, -100.518, -8.15809, 0.37", "-15.3952, -100.325, -8.60101, 0.37", "-15.8263, -100.263, -8.90871, 1.11", "-16.1837, -100.303, -9.1958, 1.47", "-16.5276, -100.409, -9.47283, 1.47", "-16.7792, -100.514, -9.66242, 1.47", "-17.3575, -100.76, -10.0765, 0.96", "-17.8771, -100.937, -10.4234, 0.59", "-18.3601, -101.039, -10.7023, 0.59", "-18.8672, -101.101, -10.9319, 0.59", "-19.4042, -101.162, -11.1547, 0.81", "-19.9161, -101.221, -11.3528, 0.81", "-20.3185, -101.265, -11.4793, 0.81", "-20.7962, -101.335, -11.6121, 0.81", "-21.3058, -101.591, -11.8255, 0.22", "-21.6116, -102.16, -12.1062, 0.22", "-21.7947, -102.616, -12.3414, 0.66", "-21.8892, -102.887, -12.4894, 0.88", "-22.0223, -103.282, -12.7229, 0.88", "-22.2151, -103.747, -13.1023, 0.44", "-22.5207, -104.211, -13.628, 1.4", "-22.8228, -104.466, -14.086, 2.14", "-22.9607, -104.532, -14.2899, 2.58", "-23.2567, -104.593, -14.7039, 2.36", "-24.0661, -104.632, -15.826, 1.69", "-24.4966, -104.611, -16.4012, 0.37", "-25.0347, -104.55, -17.0405, 0.37", "-25.4824, -104.493, -17.5203, 0.37", "-26.3991, -104.415, -18.4107, 1.92", "-26.7812, -104.407, -18.7537, 2.14", "-27.1672, -104.44, -19.0709, 2.5", "-28.2975, -104.673, -20.0281, 0.44", "-28.6469, -104.785, -20.3318, 0.44", "-29.1769, -104.972, -20.8257, 0.44", "-29.6542, -105.126, -21.3085, 0.44", "-30.1425, -105.242, -21.8256, 1.4", "-30.6723, -105.343, -22.4122, 2.06", "-31.1395, -105.427, -22.9769, 2.06", "-31.7065, -105.488, -23.7006, 0.66", "-32.1435, -105.517, -24.315, 0.81", "-32.603, -105.548, -25.0293, 0.52", "-32.9583, -105.606, -25.7031, 1.77", "-33.1766, -105.689, -26.2375, 2.28", "-33.7097, -106.123, -28.0519, 1.33", "-33.8432, -106.363, -28.7659, 1.77", "-33.8975, -106.534, -29.2234, 1.77", "-33.9722, -106.878, -30.1052, 0.74", "-34.0203, -107.157, -30.8061, 0.52", "-34.1044, -107.602, -31.82, 0.52", "-34.1946, -108.128, -32.8402, 0.88", "-34.3375, -108.634, -33.7715, 1.47", "-34.5239, -109.137, -34.6428, 0.22", "-34.6344, -109.397, -35.0603, 0.22", "-34.7868, -109.752, -35.5583, 0.81", "-34.9393, -110.135, -36.0065, 0.96", "-35.135, -110.645, -36.5257, 1.55", "-35.3188, -111.153, -36.9643, 1.55", "-35.5206, -111.706, -37.4198, 0.37", "-35.6665, -112.099, -37.7505, 0.74", "-35.8555, -112.585, -38.191, 0.81", "-36.0883, -113.225, -38.8015, 0.29", "-36.1811, -113.532, -39.0952, 0.96", "-36.2909, -113.981, -39.5189, 1.33", "-36.3977, -114.609, -40.1068, 0.74", "-36.4393, -115.133, -40.5798, 0.59", "-36.4198, -115.958, -41.284, 0.29", "-36.3417, -116.49, -41.6842, 0.29", "-36.2165, -116.979, -42.0278, 0.29", "-36.0794, -117.353, -42.254, 1.18", "-35.9111, -117.702, -42.4457, 1.69", "-35.6133, -118.207, -42.6945, 1.33", "-35.144, -118.915, -43.0332, 0.22", "-34.9241, -119.239, -43.1938, 0.22", "-34.6588, -119.659, -43.4039, 0.96", "-34.494, -119.957, -43.5528, 1.11", "-34.2125, -120.529, -43.8326, 0.52", "-33.8081, -121.454, -44.2695, 0.22", "-33.6336, -121.894, -44.4739, 0.22", "-33.4612, -122.377, -44.6995, 0.88", "-33.3469, -122.73, -44.8811, 1.03", "-33.1615, -123.341, -45.224, 0.22", "-33.0751, -123.622, -45.3915, 0.22", "-32.9391, -124.033, -45.6447, 0.66", "-32.7762, -124.489, -45.9235, 0.74", "-32.3783, -125.548, -46.5434, 0.22", "-32.0992, -126.319, -46.9436, 0.22", "-31.8022, -127.302, -47.3885, 0.96", "-31.7092, -127.675, -47.5366, 1.25", "-31.6287, -128.176, -47.6997, 1.25", "-31.5656, -128.922, -47.8831, 0.66", "-31.5705, -129.843, -48.0544, 0.15", "-31.6677, -130.635, -48.188, 0.37", "-31.7502, -131.004, -48.2586, 0.37", "-32.1427, -132.355, -48.5556, 0.22", "-32.2175, -132.565, -48.6126, 0.74", "-32.3963, -133.012, -48.759, 0.88", "-33.008, -134.431, -49.2762, 0.22", "-33.2449, -134.965, -49.4739, 0.74", "-33.4824, -135.482, -49.6628, 0.74", "-34.0025, -136.608, -50.082, 0.22", "-34.4359, -137.552, -50.4216, 0.22", "-34.9223, -138.638, -50.7567, 0.22", "-35.3615, -139.663, -51.011, 0.22", "-35.5919, -140.222, -51.1153, 0.88", "-35.764, -140.663, -51.1725, 1.11", "-35.9166, -141.112, -51.1973, 1.11", "-36.2378, -142.207, -51.202, 0.15", "-36.4522, -143.094, -51.1831, 0.15", "-36.5553, -143.586, -51.1651, 0.81", "-36.6366, -144.015, -51.1467, 0.96", "-36.8999, -145.625, -51.2589, 0.22", "-37.0097, -146.381, -51.3307, 0.22", "-37.1155, -147.218, -51.4608, 0.22", "-37.1532, -147.554, -51.5294, 1.18", "-37.1857, -147.875, -51.6154, 1.18", "-37.416, -150.246, -52.5846, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "23.4315, 145.323, -32.9003, 0.37", "23.4688, 144.449, -31.7267, 0.37", "23.5448, 143.802, -30.8302, 0.52", "23.6749, 142.933, -29.5928, 0.74", "23.803, 142.247, -28.615, 1.11", "23.881, 141.863, -28.0501, 1.11", "23.9901, 141.309, -27.2271, 0.81", "24.1788, 140.137, -25.3149, 0.22", "24.2676, 139.561, -24.3923, 0.22", "24.3387, 139.164, -23.8197, 0.66", "24.4147, 138.709, -23.2289, 0.66", "24.4901, 138.226, -22.6499, 0.66", "24.6026, 137.246, -21.5343, 0.44", "24.6767, 136.259, -20.4756, 0.22", "24.7504, 135.146, -19.3599, 0.22", "24.7828, 134.598, -18.8434, 0.44", "24.8185, 134.214, -18.5201, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "23.4315, 145.323, -32.9003, 0.22", "24.5812, 145.529, -32.3182, 0.22", "24.8486, 145.593, -32.1979, 0.44", "26.076, 145.965, -31.6659, 0.22", "26.6103, 146.142, -31.4551, 0.59", "27.029, 146.282, -31.3134, 0.59", "28.8252, 146.884, -30.7058, 0.22", "30.9214, 147.609, -30.0562, 0.22", "31.6779, 147.888, -29.8419, 0.66", "32.2791, 148.132, -29.6992, 0.81", "33.1988, 148.517, -29.5101, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "10.5963, 190.583, 4.45488, 0.59", "12.1511, 191.769, 4.33664, 0.59", "12.6524, 192.17, 4.31465, 0.44", "13.6972, 193.051, 4.24212, 0.22", "14.5923, 193.868, 4.18066, 0.81", "15.0667, 194.318, 4.13264, 0.96", "15.2865, 194.53, 4.10395, 0.96", "15.9659, 195.277, 3.99259, 0.22", "16.9357, 196.48, 3.7148, 0.22", "17.7322, 197.606, 3.38402, 1.11", "18.1256, 198.235, 3.18433, 1.47", "18.295, 198.544, 3.06667, 1.47", "18.9093, 199.899, 2.50858, 0.22", "19.3575, 201.14, 1.95322, 0.22", "19.5663, 201.872, 1.61282, 0.66", "19.6561, 202.236, 1.43215, 0.66", "19.9811, 203.971, 0.563314, 0.22", "20.2002, 205.553, -0.232381, 0.22", "20.2819, 206.454, -0.700543, 0.22", "20.3438, 207.501, -1.24862, 1.47", "20.3499, 208.098, -1.55585, 1.47", "20.2565, 210.117, -2.54107, 0.22", "20.1867, 210.773, -2.84985, 0.81", "20.0905, 211.324, -3.10163, 0.81", "19.7657, 212.671, -3.6838, 0.22", "19.4493, 213.739, -4.13342, 0.22", "19.0716, 214.848, -4.59248, 1.47", "18.9014, 215.306, -4.79898, 1.84", "18.2508, 216.971, -5.56654, 0.22", "17.7198, 218.246, -6.15792, 0.22", "17.5161, 218.687, -6.37315, 0.22", "16.9681, 219.84, -6.98841, 1.55", "16.6193, 220.533, -7.39324, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "10.5963, 190.583, 4.45488, 0.22", "11.8319, 194.032, 4.81325, 0.22", "12.5138, 195.906, 5.04896, 0.22", "13.0439, 197.359, 5.25042, 0.96", "13.2717, 197.991, 5.3444, 1.18", "13.5041, 198.645, 5.44737, 1.18", "13.8739, 199.713, 5.6198, 0.22", "14.1317, 200.475, 5.77098, 0.44", "14.2578, 200.865, 5.83821, 0.44", "14.5985, 201.987, 6.00843, 0.22", "14.8872, 202.973, 6.15065, 0.44", "15.2019, 204.066, 6.30536, 0.44", "16.1131, 207.41, 6.7504, 0.22", "16.8819, 210.228, 7.09505, 0.22", "17.1801, 211.285, 7.21462, 0.66", "17.3492, 211.866, 7.27429, 0.74", "17.642, 212.788, 7.35178, 0.22", "18.4104, 215.041, 7.51561, 0.22", "18.8752, 216.364, 7.59561, 1.03", "19.1913, 217.241, 7.64011, 1.25", "19.4327, 217.904, 7.669, 1.25", "20.2541, 220.134, 7.75344, 0.22", "21.6246, 223.801, 7.88623, 0.22", "22.0915, 225.036, 7.9357, 0.74", "22.3438, 225.749, 7.97459, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "2.86082, 79.2069, 14.3622, 0.37", "4.36473, 87.9372, 20.1448, 0.37", "6.45289, 96.0826, 26.6018, 0.37", "6.03237, 103.958, 33.7113, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.86082, 79.2069, 14.3622, 0.22", "7.29386, 90.6442, 12.3742, 0.37", "11.9925, 101.571, 8.67692, 0.37", "17.0053, 112.103, 4.25368, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "97.0251, -7.99022, 17.261, 0.37", "103.524, -9.70207, 18.7143, 0.37", "110.303, -10.5759, 19.5446, 0.37", "117.123, -10.4859, 20.4953, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "97.0251, -7.99022, 17.261, 0.22", "107.152, -10.7828, 19.2322, 0.37", "117.745, -12.1084, 20.0044, 0.37", "128.204, -13.7369, 21.573, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "48.9128, 8.29918, 3.79389, 0.52", "50.3532, 8.55565, 4.22136, 0.52", "50.9131, 8.62853, 4.39378, 0.52", "51.4937, 8.68565, 4.61403, 0.52", "52.6063, 8.7792, 5.07243, 0.52", "53.271, 8.81813, 5.36207, 0.88", "54.2886, 8.85755, 5.79722, 0.88", "55.0429, 8.88333, 6.10875, 0.88", "55.8454, 8.81451, 6.45013, 0.81", "56.3593, 8.65755, 6.64348, 0.81", "57.1277, 8.23483, 6.90104, 0.59", "57.7382, 7.76143, 7.06149, 0.59", "58.3909, 7.15006, 7.16249, 0.59", "59.0369, 6.49492, 7.18924, 0.74", "60.0423, 5.36829, 7.1537, 0.66", "60.4529, 4.8632, 7.12653, 0.66", "61.0709, 4.0329, 7.07491, 0.52", "61.4894, 3.45915, 7.03299, 0.52", "62.0303, 2.74706, 6.96702, 0.81", "62.7031, 1.86205, 6.87342, 0.81", "63.1468, 1.2484, 6.82121, 0.81", "63.6789, 0.439933, 6.75176, 0.81", "64.3104, -0.632326, 6.66983, 0.88", "64.809, -1.58214, 6.60712, 1.11", "65.1127, -2.2071, 6.56404, 1.11", "65.6648, -3.46544, 6.48629, 0.88", "66.0322, -4.46743, 6.46094, 0.96", "66.26, -5.24763, 6.48498, 0.96", "66.4107, -5.8981, 6.54041, 0.96", "66.5311, -6.4918, 6.61237, 0.66", "66.722, -7.43212, 6.77944, 0.66", "67.0119, -8.66437, 7.07075, 0.81", "67.3235, -9.63656, 7.34347, 1.11", "67.7671, -10.7263, 7.69426, 0.96", "68.1627, -11.5017, 7.93415, 0.81", "68.7767, -12.4818, 8.22163, 0.81", "69.5564, -13.4945, 8.48834, 0.59", "70.24, -14.2561, 8.65304, 0.37", "70.8812, -14.9075, 8.76018, 0.37", "71.8389, -15.85, 8.86567, 0.59", "72.3654, -16.3772, 8.88125, 0.88", "72.6569, -16.6854, 8.86386, 1.11", "73.0282, -17.1144, 8.83932, 1.11", "73.5168, -17.7151, 8.8287, 0.74", "73.9108, -18.1739, 8.82004, 0.74", "74.2997, -18.6431, 8.80288, 0.74", "74.8896, -19.3921, 8.73405, 0.74", "75.4864, -20.1849, 8.61482, 0.74", "76.0288, -20.9049, 8.48763, 0.66", "76.5435, -21.5777, 8.34875, 0.66", "77.2264, -22.4614, 8.13897, 0.96", "78.029, -23.5299, 7.84792, 1.4", "78.4341, -24.1159, 7.66457, 1.62", "78.8465, -24.7633, 7.43884, 1.77" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "48.9128, 8.29918, 3.79389, 0.88", "50.1735, 9.46414, 3.61044, 0.88", "51.3055, 10.423, 3.53166, 0.88", "52.5812, 11.3619, 3.52909, 0.88", "53.9677, 12.2417, 3.58679, 0.88", "55.6116, 13.1731, 3.72422, 0.74", "56.652, 13.738, 3.83868, 0.74", "58.1215, 14.4601, 4.08594, 0.88", "59.4417, 15.0331, 4.35221, 0.88", "60.5358, 15.4568, 4.5795, 0.88", "61.5996, 15.8498, 4.79449, 0.66", "62.3488, 16.1483, 4.91572, 0.66", "63.3626, 16.6376, 4.96963, 0.88", "63.9743, 16.9967, 4.93565, 0.88", "64.5629, 17.3861, 4.85751, 0.88", "65.1623, 17.7928, 4.76032, 0.88", "66.2782, 18.5329, 4.58859, 0.59", "67.0657, 19.0555, 4.5232, 0.59", "67.6643, 19.4909, 4.50611, 0.81", "68.4453, 20.1325, 4.50292, 0.81", "69.0404, 20.6923, 4.50014, 0.81", "69.7112, 21.3761, 4.49419, 0.66", "70.672, 22.393, 4.48905, 0.59", "71.6931, 23.6375, 4.41352, 0.59", "72.2462, 24.3895, 4.31513, 0.59", "72.882, 25.3106, 4.1272, 0.44", "73.2848, 25.88, 3.97138, 0.44", "73.723, 26.4642, 3.7735, 0.44", "74.8215, 27.8433, 3.24327, 0.44", "75.6925, 28.8742, 2.84042, 0.66", "76.4204, 29.7134, 2.50912, 0.66", "77.3211, 30.7362, 2.09688, 0.74", "78.0248, 31.5316, 1.77049, 0.96", "78.5661, 32.1229, 1.52677, 0.96", "79.3647, 32.9069, 1.20864, 0.66", "80.147, 33.6387, 0.915164, 0.66", "81.3887, 34.7764, 0.459529, 0.59", "82.5357, 35.871, 0.0491551, 0.59", "83.2754, 36.601, -0.207693, 0.81", "83.8354, 37.1762, -0.400764, 0.81", "84.7911, 38.1277, -0.701471, 0.52", "85.5296, 38.8042, -0.899884, 0.52", "86.5085, 39.653, -1.1227, 0.52", "87.3323, 40.3517, -1.29894, 0.52", "88.1222, 41.0054, -1.46507, 0.37", "89.5315, 42.1385, -1.75765, 0.37", "90.4602, 42.8651, -1.95487, 0.59", "91.0538, 43.2933, -2.07809, 0.59", "92.3177, 44.1516, -2.35669, 0.74", "92.9775, 44.604, -2.50539, 0.74", "93.5382, 45.0088, -2.6345, 0.74", "94.3369, 45.669, -2.83591, 0.74", "94.8779, 46.1196, -3.02042, 0.44", "95.6618, 46.6977, -3.36273, 0.44", "96.3417, 47.1215, -3.68952, 0.81", "97.4891, 47.7397, -4.26663, 0.81", "98.3358, 48.1198, -4.71296, 0.66", "99.8161, 48.7135, -5.50508, 0.52", "100.951, 49.1445, -6.1682, 0.44", "101.704, 49.3883, -6.6417, 0.44", "102.366, 49.5772, -7.08764, 0.44", "102.887, 49.6964, -7.46265, 0.44", "103.754, 49.8718, -8.05703, 0.74", "104.493, 50.0957, -8.42866, 0.59", "104.99, 50.3063, -8.66835, 0.59", "113.815, 58.9654, -9.66319, 0.59", "122.929, 67.3354, -10.6379, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-99.5151, -341.842, 9.80794, 0.52", "-100.1, -343.282, 9.773, 0.52", "-100.346, -343.863, 9.76497, 0.29", "-100.687, -344.623, 9.74925, 0.44", "-101.01, -345.33, 9.73007, 0.44", "-101.267, -345.877, 9.71215, 0.29", "-101.659, -346.673, 9.67319, 0.29", "-102.064, -347.431, 9.62437, 0.81", "-102.371, -348.012, 9.56512, 1.18", "-102.532, -348.33, 9.52574, 1.4", "-102.784, -348.859, 9.45658, 1.4", "-103.004, -349.368, 9.39, 1.11", "-103.44, -350.469, 9.25413, 0.52", "-103.73, -351.333, 9.16352, 0.44", "-103.931, -352.028, 9.10245, 0.74", "-104.158, -352.865, 9.03983, 0.81", "-104.32, -353.495, 8.99604, 0.81", "-104.474, -354.164, 8.95119, 0.74", "-104.661, -355.049, 8.93201, 0.22", "-104.744, -355.458, 8.9294, 0.22", "-104.871, -356.177, 8.92287, 0.22", "-104.957, -356.801, 8.93624, 0.66", "-105.029, -357.451, 8.97805, 0.81", "-105.115, -358.496, 9.08502, 0.66", "-105.159, -359.447, 9.22512, 0.22", "-105.157, -360.295, 9.38421, 0.22", "-105.124, -360.913, 9.52396, 0.22", "-105.082, -361.51, 9.69266, 0.96", "-105.066, -361.817, 9.78663, 1.18", "-105.047, -362.273, 9.92519, 1.18", "-105.035, -362.647, 10.0627, 1.18", "-105.037, -363.36, 10.3117, 0.74", "-105.092, -364.441, 10.652, 0.22", "-105.123, -364.797, 10.757, 0.22", "-105.17, -365.212, 10.8767, 0.44", "-105.214, -365.572, 10.9711, 0.44", "-105.319, -366.514, 11.1946, 0.22", "-105.375, -367.107, 11.3148, 0.96", "-105.4, -367.561, 11.3884, 1.18", "-105.414, -367.997, 11.4536, 1.25", "-105.439, -368.828, 11.5686, 0.96", "-105.506, -370.02, 11.7176, 0.29", "-105.582, -370.959, 11.8209, 0.22", "-105.701, -372.019, 11.9152, 0.22", "-105.782, -372.564, 11.9562, 0.81", "-105.872, -373.008, 11.9816, 0.96", "-106.277, -374.55, 12.056, 0.22", "-106.435, -375.032, 12.075, 0.22", "-106.711, -375.798, 12.1086, 0.59", "-106.927, -376.357, 12.1378, 0.59", "-107.242, -377.199, 12.1865, 0.52", "-107.484, -377.891, 12.2345, 0.52", "-107.786, -378.83, 12.3226, 0.52", "-107.901, -379.2, 12.363, 0.96", "-108.088, -379.832, 12.4384, 0.96", "-108.289, -380.543, 12.529, 0.59", "-108.631, -381.745, 12.7199, 0.22", "-108.974, -382.986, 12.9254, 0.22", "-109.134, -383.566, 13.0267, 0.22", "-109.284, -384.081, 13.1202, 0.96", "-109.39, -384.433, 13.189, 1.18", "-109.611, -385.132, 13.3424, 0.52", "-110.104, -393.804, 13.304, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-99.5151, -341.842, 9.80794, 0.29", "-101.911, -341.089, 10.4186, 0.29", "-103.192, -341.024, 10.714, 0.37", "-103.776, -341.147, 10.8365, 0.37", "-105.108, -341.636, 11.153, 0.37", "-106.394, -342.182, 11.3208, 0.52", "-107.517, -342.682, 11.4023, 0.59", "-109.037, -343.526, 11.4006, 0.59", "-110.386, -344.325, 11.3352, 0.37", "-111.631, -345.078, 11.2286, 0.37", "-113.843, -346.437, 10.9485, 0.37", "-114.862, -347.005, 10.7955, 0.37", "-115.806, -347.49, 10.6454, 0.29", "-116.56, -347.844, 10.5322, 0.29", "-117.41, -348.233, 10.4266, 0.81", "-118.092, -348.573, 10.3695, 0.81", "-119.025, -349.147, 10.4172, 0.81", "-120.595, -350.27, 10.5583, 0.29", "-121.34, -350.874, 10.6525, 0.66", "-121.892, -351.364, 10.7539, 0.66", "-122.403, -351.853, 10.8704, 0.66", "-124.235, -353.721, 11.3512, 0.29", "-125.047, -354.59, 11.5608, 0.44", "-125.75, -355.339, 11.7393, 0.29", "-126.591, -356.203, 11.9299, 0.74", "-127.211, -356.787, 12.0269, 0.74", "-128.237, -357.627, 12.1194, 0.52", "-130.058, -358.907, 12.1703, 0.29", "-131.144, -359.595, 12.1629, 0.52", "-131.881, -360.021, 12.1142, 0.52", "-133.427, -360.847, 11.8985, 0.29", "-134.579, -361.402, 11.7045, 0.29", "-135.28, -361.693, 11.5694, 0.59", "-136.11, -361.996, 11.3766, 0.59", "-137.609, -362.518, 10.9898, 0.22", "-138.451, -362.799, 10.7884, 0.29", "-139.718, -363.229, 10.5304, 0.29", "-140.316, -363.443, 10.4138, 0.29", "-141.844, -364.06, 10.1278, 0.37", "-142.997, -364.654, 10.0212, 0.37", "-144.178, -365.401, 10.0471, 0.52", "-145.531, -366.426, 10.1779, 1.55", "-146.338, -367.14, 10.2929, 1.92", "-147.106, -367.887, 10.4401, 1.92", "-148.873, -369.749, 10.901, 0.29", "-150.026, -371.063, 11.2339, 0.29", "-150.949, -372.199, 11.5383, 0.29", "-151.682, -373.12, 11.8031, 0.74", "-152.046, -373.58, 11.9369, 0.96", "-152.371, -373.973, 12.0473, 1.11", "-153.31, -375.134, 12.3597, 0.52", "-153.896, -375.912, 12.6089, 0.29", "-154.753, -377.039, 13.0236, 0.22", "-155.34, -377.771, 13.318, 0.44", "-155.845, -378.367, 13.5735, 0.44", "-157.244, -379.999, 14.3031, 0.22", "-158.092, -380.968, 14.7611, 0.22", "-158.91, -381.864, 15.1947, 1.25", "-159.662, -382.674, 15.6127, 1.55", "-160.024, -383.042, 15.8069, 1.62" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "78.8465, -24.7633, 7.43884, 0.74", "80.0583, -25.521, 8.60057, 0.74", "80.4127, -25.7562, 8.91091, 0.74", "81.0245, -26.1963, 9.38655, 0.59", "81.7506, -26.7657, 9.86753, 0.59", "82.4307, -27.3404, 10.2534, 0.59", "82.7723, -27.638, 10.4303, 0.59", "83.4509, -28.2789, 10.706, 0.59", "84.0327, -28.8478, 10.9053, 0.81", "84.8055, -29.596, 11.1665, 0.81", "85.4447, -30.1884, 11.3812, 0.37", "86.1088, -30.7635, 11.613, 0.37", "86.8844, -31.4274, 11.8947, 0.37", "87.6708, -32.1097, 12.2122, 0.37", "88.4208, -32.736, 12.5457, 0.37", "89.5435, -33.637, 13.0944, 0.22", "90.7383, -34.5711, 13.7091, 0.22", "97.0938, -41.2607, 16.1916, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "78.8465, -24.7633, 7.43884, 0.37", "78.9477, -26.2209, 6.51828, 0.37", "79.0799, -27.1581, 6.0011, 0.37", "79.2564, -28.0382, 5.55225, 0.37", "79.4919, -28.9679, 5.18004, 0.37", "79.7307, -29.7762, 4.88835, 0.37", "80.0464, -30.7292, 4.5802, 0.29", "80.603, -32.0641, 4.13586, 0.22", "81.2494, -33.465, 3.60841, 0.22", "82.1227, -35.1881, 2.87643, 0.22", "82.4573, -35.8174, 2.57178, 1.18", "82.7132, -36.3212, 2.26074, 1.4", "83.2933, -37.8157, 1.04913, 1.4", "83.5446, -38.9816, -0.139835, 0.44", "83.5585, -39.3723, -0.572161, 0.44", "83.4932, -39.9603, -1.25434, 0.29", "83.2751, -40.9589, -2.32825, 0.29", "82.91, -42.2347, -3.63887, 0.22", "82.5414, -43.2458, -4.51981, 0.22", "82.258, -43.8562, -5.03366, 1.03", "82.1011, -44.1702, -5.27868, 1.33", "81.8648, -44.6173, -5.59127, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-160.024, -383.042, 15.8069, 0.29", "-160.672, -382.37, 16.3525, 0.29", "-160.819, -382.22, 16.4689, 0.52", "-161.048, -381.984, 16.6423, 0.59", "-162.398, -380.624, 17.5425, 0.22", "-162.784, -380.244, 17.7812, 0.22", "-163.323, -379.73, 18.0944, 0.66", "-163.621, -379.448, 18.2414, 0.66", "-164.904, -378.292, 18.8174, 0.22", "-165.441, -377.835, 19.0382, 0.22", "-165.938, -377.45, 19.2306, 0.52", "-166.292, -377.196, 19.3648, 0.66", "-167.263, -376.552, 19.7289, 0.22", "-169.189, -375.304, 20.4514, 0.22", "-170.431, -374.538, 20.9184, 0.22", "-171.57, -373.842, 21.3756, 1.18", "-171.889, -373.65, 21.5033, 1.4", "-172.379, -373.365, 21.702, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-160.024, -383.042, 15.8069, 0.22", "-161.019, -384.604, 16.0212, 0.22", "-161.805, -385.888, 16.2687, 0.22", "-162.138, -386.466, 16.39, 0.44", "-162.28, -386.72, 16.4451, 0.44", "-163.581, -389.151, 16.9697, 0.22", "-164.189, -390.289, 17.2152, 0.44", "-164.703, -391.245, 17.4343, 0.22", "-165.021, -391.891, 17.5921, 0.59", "-165.285, -392.45, 17.7369, 0.66", "-165.476, -392.88, 17.8556, 0.44", "-169.027, -402.845, 20.7972, 0.44" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "axon_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "axon_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_ChC_c38923facb_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, axon_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_49(0), soma_0(0.49999994654580493)
    connect dend_42(0), soma_0(0.49999994654580493)
    connect dend_27(0), soma_0(0.49999994654580493)
    connect dend_20(0), soma_0(0.49999994654580493)
    connect dend_11(0), soma_0(0.49999994654580493)
    connect dend_0(0), soma_0(0.49999994654580493)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.44259, -9.54825, -1.27888, 2.30647 ) }
    soma_0 { pt3dadd( -1.2819, -8.63231, -1.15821, 3.63473 ) }
    soma_0 { pt3dadd( -1.1212, -7.71637, -1.03754, 6.81375 ) }
    soma_0 { pt3dadd( -0.960502, -6.80044, -0.916865, 9.18535 ) }
    soma_0 { pt3dadd( -0.799804, -5.8845, -0.796194, 10.2157 ) }
    soma_0 { pt3dadd( -0.639107, -4.96856, -0.675522, 11.1797 ) }
    soma_0 { pt3dadd( -0.478409, -4.05262, -0.554851, 12.0566 ) }
    soma_0 { pt3dadd( -0.317712, -3.13668, -0.43418, 12.6775 ) }
    soma_0 { pt3dadd( -0.157014, -2.22074, -0.313508, 13.0617 ) }
    soma_0 { pt3dadd( 0.00368301, -1.3048, -0.192837, 13.2009 ) }
    soma_0 { pt3dadd( 0.16438, -0.388856, -0.0721652, 13.2418 ) }
    soma_0 { pt3dadd( 0.325078, 0.527084, 0.0485063, 12.889 ) }
    soma_0 { pt3dadd( 0.485775, 1.44302, 0.169178, 12.4912 ) }
    soma_0 { pt3dadd( 0.646473, 2.35896, 0.289849, 12.2347 ) }
    soma_0 { pt3dadd( 0.80717, 3.2749, 0.410521, 12.0486 ) }
    soma_0 { pt3dadd( 0.967868, 4.19084, 0.531192, 11.9346 ) }
    soma_0 { pt3dadd( 1.12856, 5.10678, 0.651864, 11.8925 ) }
    soma_0 { pt3dadd( 1.28926, 6.02272, 0.772535, 11.1454 ) }
    soma_0 { pt3dadd( 1.44996, 6.93866, 0.893206, 8.66152 ) }
    soma_0 { pt3dadd( 1.61066, 7.8546, 1.01388, 5.25757 ) }
    soma_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 3.12251 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.66144, -7.08761, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.66144, -7.08761, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.29542, -8.27095, -8.20483, 1.77 ) }
    dend_49 { pt3dadd( -3.01665, -9.15185, -8.34115, 1.77 ) }
    dend_49 { pt3dadd( -2.59059, -10.5326, -8.54233, 1.55 ) }
    dend_49 { pt3dadd( -2.34034, -11.4482, -8.70211, 1.69 ) }
    dend_49 { pt3dadd( -2.16904, -12.1596, -8.84134, 1.77 ) }
    dend_49 { pt3dadd( -2.01896, -12.8517, -9.00974, 1.77 ) }
    dend_49 { pt3dadd( -1.82844, -13.7795, -9.2928, 1.25 ) }
    dend_49 { pt3dadd( -1.5196, -15.2028, -9.67441, 0.74 ) }
    dend_49 { pt3dadd( -2.11326, -14.5826, -10.3282, 0.74 ) }
    dend_49 { pt3dadd( -2.57622, -14.3634, -11.0238, 0.74 ) }
    dend_49 { pt3dadd( -3.38798, -14.0654, -12.2745, 1.18 ) }
    dend_49 { pt3dadd( -3.82436, -13.9905, -12.9876, 1.18 ) }
    dend_49 { pt3dadd( -4.47891, -13.8401, -13.9733, 0.52 ) }
    dend_49 { pt3dadd( -5.25347, -13.5662, -15.0322, 0.52 ) }
    dend_49 { pt3dadd( -6.13393, -13.6059, -16.3705, 0.74 ) }
    dend_49 { pt3dadd( -6.50496, -13.8052, -17.2809, 0.74 ) }
    dend_49 { pt3dadd( -6.68197, -14.1125, -18.0754, 0.74 ) }
    dend_49 { pt3dadd( -6.96765, -14.5085, -19.2744, 1.11 ) }
    dend_49 { pt3dadd( -7.22266, -14.7153, -20.0418, 1.69 ) }
    dend_49 { pt3dadd( -7.64003, -14.8576, -20.8167, 1.77 ) }
    dend_49 { pt3dadd( -8.59084, -15.1313, -22.5292, 1.33 ) }
    dend_49 { pt3dadd( -9.09689, -15.3764, -23.5731, 1.4 ) }
    dend_49 { pt3dadd( -9.39502, -15.7027, -24.3571, 1.55 ) }
    dend_49 { pt3dadd( -9.56453, -16.2456, -25.1782, 1.33 ) }
    dend_49 { pt3dadd( -9.58298, -17.1815, -26.2203, 0.74 ) }
    dend_49 { pt3dadd( -9.42436, -17.9478, -26.8259, 1.03 ) }
    dend_49 { pt3dadd( -9.19266, -18.5911, -27.2087, 1.47 ) }
    dend_49 { pt3dadd( -8.94682, -19.014, -27.4837, 1.62 ) }
    dend_49 { pt3dadd( -8.55739, -19.519, -27.8629, 1.62 ) }
    dend_49 { pt3dadd( -8.11606, -19.9248, -28.2119, 0.52 ) }
    dend_49 { pt3dadd( -7.59147, -20.3066, -28.597, 0.52 ) }
    dend_49 { pt3dadd( -7.46095, -20.5061, -28.9279, 0.52 ) }
    dend_49 { pt3dadd( -7.48748, -20.9144, -29.7851, 0.66 ) }
    dend_49 { pt3dadd( -7.65717, -21.3154, -30.6909, 0.74 ) }
    dend_49 { pt3dadd( -7.93393, -21.479, -31.3298, 0.44 ) }
    dend_49 { pt3dadd( -8.41079, -21.477, -32.0057, 0.44 ) }
    dend_49 { pt3dadd( -9.11367, -21.3928, -32.8652, 0.44 ) }
    dend_49 { pt3dadd( -9.61336, -21.4424, -33.63, 0.44 ) }
    dend_49 { pt3dadd( -9.89119, -21.5401, -34.1723, 0.44 ) }
    dend_49 { pt3dadd( -10.4077, -21.8662, -35.2261, 0.66 ) }
    dend_49 { pt3dadd( -10.66, -22.3726, -36.2909, 1.11 ) }
    dend_49 { pt3dadd( -10.7905, -22.5582, -36.6607, 0.96 ) }
    dend_49 { pt3dadd( -11.1316, -22.9495, -37.5085, 1.18 ) }
    dend_49 { pt3dadd( -11.2643, -23.117, -37.8399, 1.69 ) }
    dend_49 { pt3dadd( -11.48, -23.3748, -38.3202, 1.69 ) }
    dend_49 { pt3dadd( -12.3021, -24.2873, -39.9275, 0.88 ) }
    dend_49 { pt3dadd( -12.8042, -24.7214, -40.7668, 2.14 ) }
    dend_49 { pt3dadd( -13.943, -25.3082, -42.3177, 2.28 ) }
    dend_49 { pt3dadd( -14.103, -25.3506, -42.4953, 2.28 ) }
    dend_49 { pt3dadd( -15.0269, -25.4338, -43.3571, 0.44 ) }
    dend_49 { pt3dadd( -15.5543, -25.3925, -43.7447, 0.44 ) }
    dend_49 { pt3dadd( -16.1774, -25.2686, -44.1021, 0.81 ) }
    dend_49 { pt3dadd( -16.8165, -25.1101, -44.4838, 0.81 ) }
    dend_49 { pt3dadd( -17.1079, -25.071, -44.6926, 0.96 ) }
    dend_49 { pt3dadd( -17.6868, -25.1218, -45.2015, 0.66 ) }
    dend_49 { pt3dadd( -18.2689, -25.3148, -45.7992, 1.99 ) }
    dend_49 { pt3dadd( -18.7048, -25.5457, -46.3035, 2.21 ) }
    dend_49 { pt3dadd( -19.1305, -25.8502, -46.8301, 2.5 ) }
    dend_49 { pt3dadd( -20.3018, -26.8953, -48.3913, 0.66 ) }
    dend_49 { pt3dadd( -20.909, -27.5772, -49.3133, 0.66 ) }
    dend_49 { pt3dadd( -21.284, -28.1072, -49.9468, 0.66 ) }
    dend_49 { pt3dadd( -21.6702, -28.7377, -50.6247, 1.55 ) }
    dend_49 { pt3dadd( -21.8496, -29.0478, -50.9248, 2.21 ) }
    dend_49 { pt3dadd( -22.0227, -29.3717, -51.2113, 2.21 ) }
    dend_49 { pt3dadd( -22.5, -30.4016, -52.0728, 0.29 ) }
    dend_49 { pt3dadd( -22.7553, -31.0658, -52.6716, 0.29 ) }
    dend_49 { pt3dadd( -22.9223, -31.5245, -53.077, 1.55 ) }
    dend_49 { pt3dadd( -23.1304, -32.0779, -53.5554, 1.99 ) }
    dend_49 { pt3dadd( -23.3218, -32.5733, -53.9937, 2.36 ) }
    dend_49 { pt3dadd( -23.86, -33.9207, -55.2224, 0.59 ) }
    dend_49 { pt3dadd( -24.1275, -34.6114, -55.8948, 1.84 ) }
    dend_49 { pt3dadd( -24.2328, -34.932, -56.245, 1.84 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 95/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -6.50143, -1.65687, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.50143, -1.65687, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.93196, -2.3999, 2.12205, 1.92 ) }
    dend_42 { pt3dadd( -7.6643, -3.8733, 2.04758, 1.92 ) }
    dend_42 { pt3dadd( -8.41948, -5.21748, 1.97246, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( -9.00162, -6.12654, 1.90892, 2.36 ) }
    dend_42 { pt3dadd( -9.82652, -7.22654, 1.82132, 2.28 ) }
    dend_42 { pt3dadd( -10.7328, -8.24215, 1.72114, 2.36 ) }
    dend_42 { pt3dadd( -11.7468, -9.18194, 1.59106, 2.36 ) }
    dend_42 { pt3dadd( -13.3206, -10.2356, 1.40539, 1.77 ) }
    dend_42 { pt3dadd( -14.1862, -10.5822, 1.34034, 1.77 ) }
    dend_42 { pt3dadd( -15.5435, -10.8648, 1.30416, 1.99 ) }
    dend_42 { pt3dadd( -16.753, -10.9808, 1.38095, 1.99 ) }
    dend_42 { pt3dadd( -17.3515, -11.0019, 1.45484, 1.99 ) }
    dend_42 { pt3dadd( -18.2435, -11.0441, 1.61399, 1.77 ) }
    dend_42 { pt3dadd( -19.6243, -11.2788, 1.97121, 1.47 ) }
    dend_42 { pt3dadd( -20.6209, -11.6259, 2.25318, 1.47 ) }
    dend_42 { pt3dadd( -21.877, -12.333, 2.57059, 1.33 ) }
    dend_42 { pt3dadd( -22.448, -12.7656, 2.67691, 1.99 ) }
    dend_42 { pt3dadd( -23.4185, -13.6499, 2.78345, 1.99 ) }
    dend_42 { pt3dadd( -24.5365, -14.799, 2.79772, 1.77 ) }
    dend_42 { pt3dadd( -25.773, -16.203, 2.68891, 1.92 ) }
    dend_42 { pt3dadd( -26.9165, -17.5375, 2.45561, 1.69 ) }
    dend_42 { pt3dadd( -27.6196, -18.3122, 2.22949, 1.69 ) }
    dend_42 { pt3dadd( -28.5006, -19.1847, 1.89641, 1.84 ) }
    dend_42 { pt3dadd( -29.3042, -19.9145, 1.5895, 1.84 ) }
    dend_42 { pt3dadd( -30.3444, -20.8259, 1.20843, 1.69 ) }
    dend_42 { pt3dadd( -31.4876, -21.8413, 0.851768, 1.55 ) }
    dend_42 { pt3dadd( -32.6421, -22.9401, 0.58234, 1.4 ) }
    dend_42 { pt3dadd( -33.588, -23.8447, 0.390332, 1.25 ) }
    dend_42 { pt3dadd( -34.5777, -24.834, 0.212044, 1.33 ) }
    dend_42 { pt3dadd( -35.515, -25.8625, 0.108334, 1.47 ) }
    dend_42 { pt3dadd( -36.3925, -26.9537, 0.150394, 1.62 ) }
    dend_42 { pt3dadd( -37.0129, -27.9744, 0.368928, 1.77 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 29/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.448551, -8.50136, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.448551, -8.50136, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.750854, -10.5854, -4.80405, 2.95 ) }
    dend_27 { pt3dadd( 1.18413, -13.8195, -4.65411, 2.8 ) }
    dend_27 { pt3dadd( 1.43396, -15.9869, -4.51125, 2.8 ) }
    dend_27 { pt3dadd( 1.65156, -18.4104, -4.33122, 3.02 ) }
    dend_27 { pt3dadd( 1.75567, -20.0189, -4.21069, 3.02 ) }
    dend_27 { pt3dadd( 1.79923, -21.5967, -4.08615, 3.02 ) }
    dend_27 { pt3dadd( 1.75724, -23.9741, -3.89514, 3.02 ) }
    dend_27 { pt3dadd( 1.58695, -26.4892, -3.68508, 2.36 ) }
    dend_27 { pt3dadd( 1.12997, -30.8885, -3.4555, 2.36 ) }
    dend_27 { pt3dadd( 0.800074, -33.3529, -3.4331, 2.43 ) }
    dend_27 { pt3dadd( 0.420558, -35.7382, -3.49031, 2.43 ) }
    dend_27 { pt3dadd( -0.0754979, -38.5343, -3.65266, 2.43 ) }
    dend_27 { pt3dadd( -0.846779, -42.3947, -3.98402, 2.28 ) }
    dend_27 { pt3dadd( -1.67788, -46.3555, -4.41748, 2.14 ) }
    dend_27 { pt3dadd( -2.8382, -51.6027, -5.09568, 2.06 ) }
    dend_27 { pt3dadd( -3.64348, -55.2444, -5.62541, 2.43 ) }
    dend_27 { pt3dadd( -4.15215, -57.5636, -6.00988, 2.58 ) }
    dend_27 { pt3dadd( -4.69757, -60.0074, -6.46982, 2.58 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 49/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.381405, 7.41064, -7.5337, 1.62 ) }
    dend_20 { pt3dadd( -0.452704, 8.03804, -7.58262, 1.62 ) }
    dend_20 { pt3dadd( -0.565451, 8.96108, -7.61107, 1.92 ) }
    dend_20 { pt3dadd( -0.735483, 10.1941, -7.66026, 1.33 ) }
    dend_20 { pt3dadd( -0.949924, 11.5213, -7.73273, 1.69 ) }
    dend_20 { pt3dadd( -1.12581, 12.5033, -7.7696, 2.21 ) }
    dend_20 { pt3dadd( -1.27657, 13.3242, -7.76325, 2.21 ) }
    dend_20 { pt3dadd( -1.45809, 14.2483, -7.71921, 1.99 ) }
    dend_20 { pt3dadd( -1.62844, 15.0341, -7.65234, 1.77 ) }
    dend_20 { pt3dadd( -1.83073, 15.9083, -7.55403, 1.99 ) }
    dend_20 { pt3dadd( -2.05011, 16.8335, -7.446, 1.99 ) }
    dend_20 { pt3dadd( -2.42511, 18.4589, -7.28848, 1.11 ) }
    dend_20 { pt3dadd( -2.6566, 19.4751, -7.22092, 1.11 ) }
    dend_20 { pt3dadd( -2.90465, 20.4975, -7.19409, 1.25 ) }
    dend_20 { pt3dadd( -3.14115, 21.356, -7.18948, 1.4 ) }
    dend_20 { pt3dadd( -3.45072, 22.2942, -7.24295, 0.81 ) }
    dend_20 { pt3dadd( -3.81531, 23.183, -7.37965, 0.74 ) }
    dend_20 { pt3dadd( -4.10503, 23.7641, -7.52517, 0.74 ) }
    dend_20 { pt3dadd( -4.46217, 24.3945, -7.72201, 0.74 ) }
    dend_20 { pt3dadd( -4.87721, 25.0811, -7.9723, 0.96 ) }
    dend_20 { pt3dadd( -5.26851, 25.7273, -8.22509, 0.96 ) }
    dend_20 { pt3dadd( -5.67675, 26.3762, -8.48508, 1.55 ) }
    dend_20 { pt3dadd( -6.13788, 27.1037, -8.78712, 2.06 ) }
    dend_20 { pt3dadd( -6.52801, 27.7661, -9.06882, 2.43 ) }
    dend_20 { pt3dadd( -6.97544, 28.6582, -9.45123, 2.36 ) }
    dend_20 { pt3dadd( -7.48203, 29.8733, -9.95875, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.32144, 8.11264, 0.346303, 2.5 ) }
    dend_11 { pt3dadd( -2.38465, 8.24866, 0.347022, 2.5 ) }
    dend_11 { pt3dadd( -3.38681, 10.1543, 0.308295, 1.77 ) }
    dend_11 { pt3dadd( -4.08631, 11.4421, 0.315453, 1.55 ) }
    dend_11 { pt3dadd( -4.90672, 12.9078, 0.382264, 1.55 ) }
    dend_11 { pt3dadd( -5.53184, 14.0263, 0.475466, 1.33 ) }
    dend_11 { pt3dadd( -6.48564, 15.7611, 0.673787, 1.33 ) }
    dend_11 { pt3dadd( -7.0821, 16.8209, 0.826379, 1.55 ) }
    dend_11 { pt3dadd( -7.98201, 18.3909, 1.08571, 1.55 ) }
    dend_11 { pt3dadd( -8.91662, 20.0983, 1.37336, 1.62 ) }
    dend_11 { pt3dadd( -9.66281, 21.62, 1.61496, 1.4 ) }
    dend_11 { pt3dadd( -10.3585, 23.2949, 1.8509, 1.4 ) }
    dend_11 { pt3dadd( -10.7543, 24.3237, 1.99746, 1.4 ) }
    dend_11 { pt3dadd( -11.3697, 25.9782, 2.22021, 1.4 ) }
    dend_11 { pt3dadd( -11.9539, 27.631, 2.3757, 1.4 ) }
    dend_11 { pt3dadd( -12.6109, 29.674, 2.48112, 1.77 ) }
    dend_11 { pt3dadd( -13.1639, 31.5069, 2.50084, 2.73 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.82855, 4.07614, 1.3463, 2.58 ) }
    dend_0 { pt3dadd( 6.88188, 4.12687, 1.35114, 2.58 ) }
    dend_0 { pt3dadd( 7.55402, 4.78248, 1.42133, 2.58 ) }
    dend_0 { pt3dadd( 8.31664, 5.5341, 1.52456, 1.84 ) }
    dend_0 { pt3dadd( 8.8812, 6.07942, 1.61614, 2.06 ) }
    dend_0 { pt3dadd( 9.61012, 6.78154, 1.75309, 2.06 ) }
    dend_0 { pt3dadd( 10.0918, 7.23474, 1.87474, 2.58 ) }
    dend_0 { pt3dadd( 10.6264, 7.73436, 2.04063, 2.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 10.9798, 8.07009, 2.17467, 2.58 ) }
    dend_0 { pt3dadd( 11.607, 8.63912, 2.44263, 2.58 ) }
    dend_0 { pt3dadd( 12.0482, 9.01101, 2.64161, 2.43 ) }
    dend_0 { pt3dadd( 12.9726, 9.74486, 3.09446, 2.21 ) }
    dend_0 { pt3dadd( 13.6469, 10.2493, 3.43849, 1.99 ) }
    dend_0 { pt3dadd( 14.188, 10.6304, 3.69787, 1.99 ) }
    dend_0 { pt3dadd( 14.8898, 11.052, 4.00098, 1.69 ) }
    dend_0 { pt3dadd( 15.4764, 11.2933, 4.22349, 1.69 ) }
    dend_0 { pt3dadd( 16.5152, 11.4321, 4.56494, 2.06 ) }
    dend_0 { pt3dadd( 17.1672, 11.3209, 4.74248, 2.06 ) }
    dend_0 { pt3dadd( 18.7077, 10.6664, 5.15465, 1.69 ) }
    dend_0 { pt3dadd( 19.7673, 10.0997, 5.42244, 1.92 ) }
    dend_0 { pt3dadd( 21.4239, 9.00192, 5.8115, 1.92 ) }
    dend_0 { pt3dadd( 23.0013, 7.73846, 6.14781, 2.06 ) }
    dend_0 { pt3dadd( 23.81, 6.95119, 6.29997, 2.28 ) }
    dend_0 { pt3dadd( 24.4165, 6.23392, 6.42226, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 16/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 0.828419 ) }
    axon_0 { pt3dadd( 4.36343, 23.5449, 1.13455, 0.828419 ) }
    axon_0 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.828419 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 19/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -24.2328, -34.932, -56.245, 0.96 ) }
    dend_51 { pt3dadd( -22.1854, -39.5075, -63.6032, 0.96 ) }
    dend_51 { pt3dadd( -21.8351, -40.5045, -64.9768, 0.96 ) }
    dend_51 { pt3dadd( -21.4314, -41.836, -66.594, 0.96 ) }
    dend_51 { pt3dadd( -20.9079, -43.6913, -68.6628, 1.55 ) }
    dend_51 { pt3dadd( -20.5289, -45.2395, -70.2317, 0.22 ) }
    dend_51 { pt3dadd( -20.1764, -47.0121, -71.7696, 0.22 ) }
    dend_51 { pt3dadd( -20.0827, -48.1237, -72.3636, 1.11 ) }
    dend_51 { pt3dadd( -20.0262, -49.1615, -72.8363, 1.4 ) }
    dend_51 { pt3dadd( -19.9095, -50.5703, -73.3551, 1.4 ) }
    dend_51 { pt3dadd( -19.5749, -53.6109, -74.2732, 0.22 ) }
    dend_51 { pt3dadd( -19.0693, -56.7446, -75.1101, 0.22 ) }
    dend_51 { pt3dadd( -18.8542, -57.7797, -75.3644, 0.74 ) }
    dend_51 { pt3dadd( -18.7261, -58.3347, -75.4821, 0.74 ) }
    dend_51 { pt3dadd( -18.0146, -61.2944, -76.0192, 0.15 ) }
    dend_51 { pt3dadd( -17.8964, -61.7537, -76.0826, 0.37 ) }
    dend_51 { pt3dadd( -17.1204, -64.2701, -76.3376, 0.22 ) }
    dend_51 { pt3dadd( -16.6171, -65.6807, -76.5112, 0.22 ) }
    dend_51 { pt3dadd( -16.218, -66.8054, -76.6455, 0.74 ) }
    dend_51 { pt3dadd( -15.8693, -67.9417, -76.7606, 0.88 ) }
    dend_51 { pt3dadd( -15.8038, -68.3204, -76.7911, 0.88 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 40/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -24.2328, -34.932, -56.245, 2.87 ) }
    dend_50 { pt3dadd( -25.1544, -35.095, -56.4373, 2.87 ) }
    dend_50 { pt3dadd( -28.0877, -35.8481, -57.1565, 0.22 ) }
    dend_50 { pt3dadd( -30.7838, -36.8631, -57.8608, 0.22 ) }
    dend_50 { pt3dadd( -32.0961, -37.4246, -58.2047, 1.69 ) }
    dend_50 { pt3dadd( -32.5108, -37.6171, -58.3128, 2.21 ) }
    dend_50 { pt3dadd( -33.1876, -37.948, -58.4877, 2.21 ) }
    dend_50 { pt3dadd( -35.7066, -39.3845, -59.1063, 0.22 ) }
    dend_50 { pt3dadd( -37.9618, -40.9759, -59.6923, 0.22 ) }
    dend_50 { pt3dadd( -38.6668, -41.5216, -59.8849, 1.25 ) }
    dend_50 { pt3dadd( -39.2432, -41.9732, -60.0433, 1.25 ) }
    dend_50 { pt3dadd( -40.0066, -42.5652, -60.2636, 1.25 ) }
    dend_50 { pt3dadd( -41.5514, -43.6822, -60.7148, 0.15 ) }
    dend_50 { pt3dadd( -42.4242, -44.2843, -60.9642, 0.15 ) }
    dend_50 { pt3dadd( -43.1032, -44.6999, -61.1707, 0.96 ) }
    dend_50 { pt3dadd( -43.8653, -45.1182, -61.431, 1.18 ) }
    dend_50 { pt3dadd( -44.2105, -45.2802, -61.5563, 1.18 ) }
    dend_50 { pt3dadd( -46.4047, -46.1451, -62.4928, 0.22 ) }
    dend_50 { pt3dadd( -46.9754, -46.2956, -62.7712, 0.52 ) }
    dend_50 { pt3dadd( -47.4899, -46.4035, -63.0309, 0.52 ) }
    dend_50 { pt3dadd( -48.8087, -46.6383, -63.6923, 0.22 ) }
    dend_50 { pt3dadd( -49.6255, -46.776, -64.1123, 1.25 ) }
    dend_50 { pt3dadd( -50.8326, -47.0213, -64.7109, 1.4 ) }
    dend_50 { pt3dadd( -53.1854, -47.7117, -65.9239, 0.22 ) }
    dend_50 { pt3dadd( -54.8182, -48.385, -66.7563, 0.22 ) }
    dend_50 { pt3dadd( -55.4485, -48.7324, -67.0757, 0.74 ) }
    dend_50 { pt3dadd( -56.2756, -49.3305, -67.4849, 0.88 ) }
    dend_50 { pt3dadd( -57.4675, -50.6139, -68.2263, 0.22 ) }
    dend_50 { pt3dadd( -58.4919, -52.3458, -68.9472, 0.22 ) }
    dend_50 { pt3dadd( -58.9476, -53.5102, -69.3339, 1.99 ) }
    dend_50 { pt3dadd( -59.1571, -54.2333, -69.5252, 2.36 ) }
    dend_50 { pt3dadd( -59.3336, -54.9478, -69.7083, 2.36 ) }
    dend_50 { pt3dadd( -60.1479, -58.9841, -70.7055, 0.15 ) }
    dend_50 { pt3dadd( -60.5345, -61.5112, -71.361, 0.15 ) }
    dend_50 { pt3dadd( -60.6194, -62.1702, -71.5046, 0.44 ) }
    dend_50 { pt3dadd( -60.7471, -63.4435, -71.7462, 0.44 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 76/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -37.0129, -27.9744, 0.368928, 0.96 ) }
    dend_44 { pt3dadd( -38.0184, -28.3084, 0.0355968, 0.96 ) }
    dend_44 { pt3dadd( -38.9765, -28.6579, -0.290854, 1.25 ) }
    dend_44 { pt3dadd( -40.3566, -29.1614, -0.75529, 1.25 ) }
    dend_44 { pt3dadd( -42.7571, -29.9692, -1.49296, 1.18 ) }
    dend_44 { pt3dadd( -44.3876, -30.454, -1.93643, 1.11 ) }
    dend_44 { pt3dadd( -45.6427, -30.7998, -2.26285, 0.88 ) }
    dend_44 { pt3dadd( -47.2972, -31.2628, -2.71854, 0.96 ) }
    dend_44 { pt3dadd( -48.2448, -31.5271, -2.98759, 0.96 ) }
    dend_44 { pt3dadd( -49.6364, -31.9243, -3.39186, 0.96 ) }
    dend_44 { pt3dadd( -51.0033, -32.3275, -3.71519, 0.96 ) }
    dend_44 { pt3dadd( -52.1614, -32.6644, -3.92295, 1.18 ) }
    dend_44 { pt3dadd( -53.5817, -33.0629, -4.11537, 1.03 ) }
    dend_44 { pt3dadd( -54.2801, -33.2447, -4.13794, 1.03 ) }
    dend_44 { pt3dadd( -55.7306, -33.5858, -4.02015, 1.18 ) }
    dend_44 { pt3dadd( -56.6032, -33.7641, -3.81437, 1.18 ) }
    dend_44 { pt3dadd( -58.5431, -34.0765, -2.94997, 0.96 ) }
    dend_44 { pt3dadd( -59.2501, -34.153, -2.55702, 1.11 ) }
    dend_44 { pt3dadd( -60.6216, -34.2784, -1.71476, 1.11 ) }
    dend_44 { pt3dadd( -61.72, -34.4092, -1.02821, 1.11 ) }
    dend_44 { pt3dadd( -63.0122, -34.6149, -0.224961, 1.11 ) }
    dend_44 { pt3dadd( -64.739, -35.0375, 0.814772, 1.55 ) }
    dend_44 { pt3dadd( -65.9786, -35.4797, 1.4948, 1.03 ) }
    dend_44 { pt3dadd( -67.4632, -36.1969, 2.26935, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( -68.7324, -36.9934, 2.86991, 0.74 ) }
    dend_44 { pt3dadd( -69.4608, -37.5746, 3.17864, 0.74 ) }
    dend_44 { pt3dadd( -70.4056, -38.5079, 3.48377, 0.74 ) }
    dend_44 { pt3dadd( -71.3489, -39.6248, 3.67532, 0.66 ) }
    dend_44 { pt3dadd( -72.1952, -40.7738, 3.78893, 0.88 ) }
    dend_44 { pt3dadd( -72.7498, -41.6084, 3.81722, 1.03 ) }
    dend_44 { pt3dadd( -73.3289, -42.5884, 3.81293, 1.03 ) }
    dend_44 { pt3dadd( -74.0702, -43.8495, 3.78619, 0.88 ) }
    dend_44 { pt3dadd( -74.9968, -45.3297, 3.73852, 0.88 ) }
    dend_44 { pt3dadd( -75.5233, -46.0706, 3.70649, 0.88 ) }
    dend_44 { pt3dadd( -76.3062, -46.9807, 3.67714, 0.88 ) }
    dend_44 { pt3dadd( -77.8351, -48.439, 3.65615, 0.88 ) }
    dend_44 { pt3dadd( -78.7314, -49.0997, 3.66265, 0.88 ) }
    dend_44 { pt3dadd( -80.0182, -49.7937, 3.69716, 0.88 ) }
    dend_44 { pt3dadd( -80.8866, -50.1122, 3.72916, 0.96 ) }
    dend_44 { pt3dadd( -81.9123, -50.3874, 3.74585, 0.96 ) }
    dend_44 { pt3dadd( -82.8449, -50.5659, 3.77031, 0.96 ) }
    dend_44 { pt3dadd( -83.8889, -50.7341, 3.81006, 0.52 ) }
    dend_44 { pt3dadd( -84.6001, -50.9702, 3.84186, 0.52 ) }
    dend_44 { pt3dadd( -85.1308, -51.3971, 3.89525, 0.52 ) }
    dend_44 { pt3dadd( -85.6357, -52.2038, 4.04453, 0.81 ) }
    dend_44 { pt3dadd( -86.0144, -53.0617, 4.2421, 0.96 ) }
    dend_44 { pt3dadd( -86.2783, -54.0544, 4.47472, 0.96 ) }
    dend_44 { pt3dadd( -86.549, -55.8338, 4.88731, 0.81 ) }
    dend_44 { pt3dadd( -86.6274, -56.7054, 5.095, 0.81 ) }
    dend_44 { pt3dadd( -86.6773, -57.8132, 5.40229, 1.11 ) }
    dend_44 { pt3dadd( -86.742, -58.4444, 5.62767, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 27/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -37.0129, -27.9744, 0.368928, 1.33 ) }
    dend_43 { pt3dadd( -37.4727, -28.3601, 0.954701, 1.33 ) }
    dend_43 { pt3dadd( -37.9399, -28.7255, 1.45284, 1.18 ) }
    dend_43 { pt3dadd( -38.8273, -29.3738, 2.36347, 0.88 ) }
    dend_43 { pt3dadd( -39.2646, -29.6519, 2.78449, 0.74 ) }
    dend_43 { pt3dadd( -39.9214, -30.0008, 3.36624, 0.74 ) }
    dend_43 { pt3dadd( -40.5873, -30.3086, 3.97267, 0.74 ) }
    dend_43 { pt3dadd( -41.0961, -30.5166, 4.41553, 0.59 ) }
    dend_43 { pt3dadd( -41.6936, -30.7224, 4.94563, 0.59 ) }
    dend_43 { pt3dadd( -42.1609, -30.8515, 5.37909, 0.52 ) }
    dend_43 { pt3dadd( -42.614, -30.9384, 5.88179, 0.52 ) }
    dend_43 { pt3dadd( -43.4316, -31.009, 6.9608, 0.74 ) }
    dend_43 { pt3dadd( -43.9303, -31.0164, 7.71374, 0.59 ) }
    dend_43 { pt3dadd( -44.3837, -31.0227, 8.42766, 0.44 ) }
    dend_43 { pt3dadd( -44.8697, -31.0729, 9.19958, 0.37 ) }
    dend_43 { pt3dadd( -45.261, -31.1704, 9.80095, 0.66 ) }
    dend_43 { pt3dadd( -45.6359, -31.3061, 10.2519, 0.66 ) }
    dend_43 { pt3dadd( -45.9051, -31.4146, 10.4657, 0.66 ) }
    dend_43 { pt3dadd( -46.2702, -31.5728, 10.7172, 0.44 ) }
    dend_43 { pt3dadd( -46.7032, -31.7782, 10.9752, 0.44 ) }
    dend_43 { pt3dadd( -47.4824, -32.1405, 11.4139, 0.44 ) }
    dend_43 { pt3dadd( -48.5589, -32.6682, 12.0123, 0.74 ) }
    dend_43 { pt3dadd( -49.1995, -33.0038, 12.3545, 0.74 ) }
    dend_43 { pt3dadd( -50.0876, -33.4536, 12.8193, 0.52 ) }
    dend_43 { pt3dadd( -50.9205, -33.8583, 13.2494, 0.59 ) }
    dend_43 { pt3dadd( -51.6391, -34.1953, 13.6085, 0.44 ) }
    dend_43 { pt3dadd( -52.6411, -34.7051, 14.0899, 0.37 ) }
    dend_43 { pt3dadd( -53.3656, -35.1393, 14.4124, 0.37 ) }
    dend_43 { pt3dadd( -54.1683, -35.7157, 14.6977, 0.29 ) }
    dend_43 { pt3dadd( -54.5582, -36.0641, 14.7905, 0.29 ) }
    dend_43 { pt3dadd( -55.0131, -36.5877, 14.8917, 0.29 ) }
    dend_43 { pt3dadd( -55.3944, -37.0914, 14.9891, 0.37 ) }
    dend_43 { pt3dadd( -55.8134, -37.6955, 15.1315, 0.37 ) }
    dend_43 { pt3dadd( -56.2244, -38.3009, 15.3219, 0.37 ) }
    dend_43 { pt3dadd( -56.6567, -39.0167, 15.5449, 0.66 ) }
    dend_43 { pt3dadd( -57.0819, -39.7227, 15.7878, 0.81 ) }
    dend_43 { pt3dadd( -57.4064, -40.2241, 15.9961, 0.81 ) }
    dend_43 { pt3dadd( -57.8826, -40.846, 16.3217, 0.22 ) }
    dend_43 { pt3dadd( -58.4674, -41.5114, 16.7468, 0.22 ) }
    dend_43 { pt3dadd( -64.2895, -44.1335, 21.3599, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 67/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -4.69757, -60.0074, -6.46982, 1.55 ) }
    dend_33 { pt3dadd( -4.30309, -61.1558, -6.44109, 1.55 ) }
    dend_33 { pt3dadd( -3.91073, -62.3256, -6.40968, 1.55 ) }
    dend_33 { pt3dadd( -3.57866, -63.3536, -6.38592, 1.55 ) }
    dend_33 { pt3dadd( -3.21436, -64.5202, -6.35305, 1.69 ) }
    dend_33 { pt3dadd( -2.9537, -65.4156, -6.32255, 1.69 ) }
    dend_33 { pt3dadd( -2.78077, -66.0855, -6.29882, 1.69 ) }
    dend_33 { pt3dadd( -2.54695, -67.1983, -6.25684, 1.55 ) }
    dend_33 { pt3dadd( -2.29768, -68.6552, -6.20391, 1.47 ) }
    dend_33 { pt3dadd( -2.15728, -69.8703, -6.14779, 1.33 ) }
    dend_33 { pt3dadd( -2.10206, -71.0363, -6.08268, 1.33 ) }
    dend_33 { pt3dadd( -2.13923, -72.5864, -5.98765, 1.33 ) }
    dend_33 { pt3dadd( -2.25713, -73.7245, -5.90137, 1.11 ) }
    dend_33 { pt3dadd( -2.39578, -74.4423, -5.83533, 1.11 ) }
    dend_33 { pt3dadd( -2.81578, -76.0078, -5.67007, 1.25 ) }
    dend_33 { pt3dadd( -3.15734, -77.0483, -5.5524, 1.25 ) }
    dend_33 { pt3dadd( -3.50408, -77.9851, -5.4429, 1.25 ) }
    dend_33 { pt3dadd( -4.01992, -79.2865, -5.30003, 1.4 ) }
    dend_33 { pt3dadd( -4.54823, -80.5704, -5.17364, 1.4 ) }
    dend_33 { pt3dadd( -4.96502, -81.6122, -5.09576, 1.55 ) }
    dend_33 { pt3dadd( -5.23022, -82.3796, -5.07328, 1.55 ) }
    dend_33 { pt3dadd( -5.5484, -83.5159, -5.07957, 1.33 ) }
    dend_33 { pt3dadd( -5.85658, -84.9363, -5.14644, 0.96 ) }
    dend_33 { pt3dadd( -5.94468, -85.4995, -5.19941, 0.81 ) }
    dend_33 { pt3dadd( -6.0136, -86.1335, -5.26556, 0.81 ) }
    dend_33 { pt3dadd( -6.11627, -87.5986, -5.41277, 0.96 ) }
    dend_33 { pt3dadd( -6.15123, -88.6132, -5.50025, 1.33 ) }
    dend_33 { pt3dadd( -6.17111, -89.7331, -5.57681, 1.69 ) }
    dend_33 { pt3dadd( -6.19045, -90.4117, -5.60653, 1.84 ) }
    dend_33 { pt3dadd( -6.22881, -91.1812, -5.61721, 1.99 ) }
    dend_33 { pt3dadd( -6.31799, -92.0917, -5.59782, 2.06 ) }
    dend_33 { pt3dadd( -6.40799, -92.8703, -5.56074, 2.06 ) }
    dend_33 { pt3dadd( -6.49906, -93.6625, -5.49118, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( -6.58468, -94.5079, -5.37842, 1.62 ) }
    dend_33 { pt3dadd( -6.66697, -95.5238, -5.20852, 1.18 ) }
    dend_33 { pt3dadd( -6.71145, -96.3372, -5.06202, 0.88 ) }
    dend_33 { pt3dadd( -6.75899, -97.449, -4.84357, 0.88 ) }
    dend_33 { pt3dadd( -6.78476, -98.214, -4.66577, 1.03 ) }
    dend_33 { pt3dadd( -6.81292, -99.001, -4.45864, 1.11 ) }
    dend_33 { pt3dadd( -6.84672, -99.5614, -4.30324, 1.11 ) }
    dend_33 { pt3dadd( -7.00213, -100.959, -3.91223, 1.03 ) }
    dend_33 { pt3dadd( -7.14867, -101.872, -3.65737, 1.18 ) }
    dend_33 { pt3dadd( -7.2872, -102.616, -3.46153, 1.25 ) }
    dend_33 { pt3dadd( -7.51441, -103.749, -3.19268, 1.18 ) }
    dend_33 { pt3dadd( -7.73986, -104.777, -2.98039, 1.03 ) }
    dend_33 { pt3dadd( -7.99319, -105.803, -2.79973, 0.96 ) }
    dend_33 { pt3dadd( -8.29877, -106.913, -2.64503, 0.88 ) }
    dend_33 { pt3dadd( -8.52946, -107.655, -2.57936, 0.88 ) }
    dend_33 { pt3dadd( -8.93737, -108.772, -2.57707, 1.25 ) }
    dend_33 { pt3dadd( -9.39498, -109.886, -2.6516, 1.55 ) }
    dend_33 { pt3dadd( -9.75325, -110.737, -2.74714, 1.62 ) }
    dend_33 { pt3dadd( -10.022, -111.419, -2.83933, 1.62 ) }
    dend_33 { pt3dadd( -10.3374, -112.312, -2.96605, 1.4 ) }
    dend_33 { pt3dadd( -10.7298, -113.577, -3.12919, 1.11 ) }
    dend_33 { pt3dadd( -11.0546, -114.881, -3.27128, 1.11 ) }
    dend_33 { pt3dadd( -11.3293, -116.322, -3.37367, 1.11 ) }
    dend_33 { pt3dadd( -11.5663, -117.859, -3.44668, 1.11 ) }
    dend_33 { pt3dadd( -11.7187, -118.983, -3.47734, 1.4 ) }
    dend_33 { pt3dadd( -11.8597, -120.148, -3.49142, 1.4 ) }
    dend_33 { pt3dadd( -12.0645, -121.965, -3.48578, 1.25 ) }
    dend_33 { pt3dadd( -12.2743, -123.825, -3.48571, 1.25 ) }
    dend_33 { pt3dadd( -12.4233, -125.049, -3.48802, 1.62 ) }
    dend_33 { pt3dadd( -12.5702, -126.12, -3.50115, 1.77 ) }
    dend_33 { pt3dadd( -12.7686, -127.555, -3.54201, 1.33 ) }
    dend_33 { pt3dadd( -12.942, -128.854, -3.58779, 0.88 ) }
    dend_33 { pt3dadd( -13.1042, -130.302, -3.65546, 1.25 ) }
    dend_33 { pt3dadd( -13.171, -131.02, -3.6994, 1.84 ) }
    dend_33 { pt3dadd( -13.2232, -131.823, -3.76165, 2.28 ) }
    dend_33 { pt3dadd( -13.2552, -132.656, -3.84439, 2.43 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 36/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -4.69757, -60.0074, -6.46982, 2.14 ) }
    dend_28 { pt3dadd( -4.56661, -60.7116, -6.71081, 2.14 ) }
    dend_28 { pt3dadd( -4.31405, -61.8261, -7.04591, 2.14 ) }
    dend_28 { pt3dadd( -3.88218, -63.7319, -7.61894, 1.69 ) }
    dend_28 { pt3dadd( -3.52031, -65.3288, -8.09909, 1.84 ) }
    dend_28 { pt3dadd( -3.16876, -66.8801, -8.56554, 1.99 ) }
    dend_28 { pt3dadd( -2.88437, -68.1351, -8.94288, 2.36 ) }
    dend_28 { pt3dadd( -2.64843, -69.0561, -9.18473, 2.5 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 44/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -7.48203, 29.8733, -9.95875, 1.25 ) }
    dend_22 { pt3dadd( -7.1582, 30.8098, -10.2284, 1.25 ) }
    dend_22 { pt3dadd( -6.88485, 31.4374, -10.4016, 1.03 ) }
    dend_22 { pt3dadd( -6.52038, 32.1827, -10.5976, 0.81 ) }
    dend_22 { pt3dadd( -6.1105, 33.0178, -10.8014, 0.81 ) }
    dend_22 { pt3dadd( -5.74845, 33.8539, -10.9865, 1.11 ) }
    dend_22 { pt3dadd( -5.51905, 34.4626, -11.1085, 1.11 ) }
    dend_22 { pt3dadd( -5.26972, 35.1772, -11.2115, 0.96 ) }
    dend_22 { pt3dadd( -4.97178, 36.1365, -11.3165, 0.66 ) }
    dend_22 { pt3dadd( -4.78968, 36.8017, -11.3825, 0.52 ) }
    dend_22 { pt3dadd( -4.57544, 37.6764, -11.4575, 0.52 ) }
    dend_22 { pt3dadd( -4.43904, 38.3276, -11.5082, 0.52 ) }
    dend_22 { pt3dadd( -4.14667, 39.72, -11.6395, 1.18 ) }
    dend_22 { pt3dadd( -3.99289, 40.4321, -11.7149, 1.62 ) }
    dend_22 { pt3dadd( -3.87493, 40.9426, -11.7758, 1.69 ) }
    dend_22 { pt3dadd( -3.65365, 41.7862, -11.905, 1.33 ) }
    dend_22 { pt3dadd( -3.5168, 42.202, -11.9888, 0.74 ) }
    dend_22 { pt3dadd( -3.26867, 42.8373, -12.1473, 0.59 ) }
    dend_22 { pt3dadd( -2.85164, 43.8392, -12.4602, 0.66 ) }
    dend_22 { pt3dadd( -2.63713, 44.381, -12.6433, 0.44 ) }
    dend_22 { pt3dadd( -2.49965, 44.7869, -12.7786, 0.44 ) }
    dend_22 { pt3dadd( -2.28434, 45.5329, -13.0254, 0.37 ) }
    dend_22 { pt3dadd( -2.09958, 46.161, -13.2275, 0.37 ) }
    dend_22 { pt3dadd( -1.94397, 46.6171, -13.3629, 0.37 ) }
    dend_22 { pt3dadd( -1.64085, 47.3323, -13.5966, 0.37 ) }
    dend_22 { pt3dadd( -1.34655, 47.9681, -13.8203, 0.44 ) }
    dend_22 { pt3dadd( -1.09, 48.5876, -14.0588, 0.44 ) }
    dend_22 { pt3dadd( -0.748856, 49.5925, -14.4721, 0.81 ) }
    dend_22 { pt3dadd( -0.535602, 50.3036, -14.7715, 1.03 ) }
    dend_22 { pt3dadd( -0.335227, 50.9454, -15.053, 1.03 ) }
    dend_22 { pt3dadd( -0.154317, 51.5288, -15.3331, 0.81 ) }
    dend_22 { pt3dadd( 0.0870949, 52.3803, -15.7795, 0.29 ) }
    dend_22 { pt3dadd( 0.188326, 52.8043, -16.0103, 0.29 ) }
    dend_22 { pt3dadd( 0.379804, 53.8321, -16.5576, 1.77 ) }
    dend_22 { pt3dadd( 0.437403, 54.1748, -16.7353, 2.36 ) }
    dend_22 { pt3dadd( 0.524963, 54.6498, -16.9623, 2.36 ) }
    dend_22 { pt3dadd( 0.714757, 55.5537, -17.3688, 2.28 ) }
    dend_22 { pt3dadd( 0.981222, 56.6382, -17.8181, 0.66 ) }
    dend_22 { pt3dadd( 1.13366, 57.2311, -18.0644, 0.88 ) }
    dend_22 { pt3dadd( 1.2902, 57.8485, -18.3239, 0.88 ) }
    dend_22 { pt3dadd( 1.46814, 58.5417, -18.5982, 0.37 ) }
    dend_22 { pt3dadd( 1.59013, 59.01, -18.7764, 0.37 ) }
    dend_22 { pt3dadd( 1.83649, 59.9873, -19.1249, 0.37 ) }
    dend_22 { pt3dadd( 2.01325, 60.725, -19.3757, 1.11 ) }
    dend_22 { pt3dadd( 2.14346, 61.3151, -19.5677, 1.47 ) }
    dend_22 { pt3dadd( 2.22489, 61.7379, -19.6963, 1.69 ) }
    dend_22 { pt3dadd( 2.33884, 62.4539, -19.8963, 1.33 ) }
    dend_22 { pt3dadd( 2.4388, 63.2422, -20.0936, 0.44 ) }
    dend_22 { pt3dadd( 2.48682, 64.0835, -20.2743, 0.29 ) }
    dend_22 { pt3dadd( 2.49919, 64.745, -20.4096, 0.52 ) }
    dend_22 { pt3dadd( 2.49482, 65.2401, -20.5075, 0.52 ) }
    dend_22 { pt3dadd( 2.46718, 66.0715, -20.6893, 0.29 ) }
    dend_22 { pt3dadd( 2.45162, 66.9269, -20.8822, 0.29 ) }
    dend_22 { pt3dadd( 2.45384, 68.4332, -21.2507, 1.18 ) }
    dend_22 { pt3dadd( 2.46337, 68.9993, -21.3902, 1.62 ) }
    dend_22 { pt3dadd( 2.47443, 69.6024, -21.5282, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 2.49214, 70.3642, -21.6885, 1.33 ) }
    dend_22 { pt3dadd( 2.53984, 72.5384, -22.1265, 0.22 ) }
    dend_22 { pt3dadd( 2.5783, 73.9305, -22.3936, 0.22 ) }
    dend_22 { pt3dadd( 2.61451, 75.1892, -22.6152, 0.22 ) }
    dend_22 { pt3dadd( 2.63748, 76.5206, -22.8217, 0.74 ) }
    dend_22 { pt3dadd( 2.64317, 77.2468, -22.9269, 1.03 ) }
    dend_22 { pt3dadd( 2.64013, 77.5895, -22.9714, 1.03 ) }
    dend_22 { pt3dadd( 2.57738, 78.6834, -23.1329, 0.15 ) }
    dend_22 { pt3dadd( 2.54252, 79.1029, -23.214, 0.15 ) }
    dend_22 { pt3dadd( 2.49491, 79.5826, -23.3404, 0.44 ) }
    dend_22 { pt3dadd( 2.44856, 80.0387, -23.4823, 0.66 ) }
    dend_22 { pt3dadd( 2.40655, 80.4588, -23.6144, 0.66 ) }
    dend_22 { pt3dadd( 2.32362, 81.6693, -23.9924, 1.55 ) }
    dend_22 { pt3dadd( 2.29072, 82.5589, -24.2612, 2.58 ) }
    dend_22 { pt3dadd( 2.2853, 83.3327, -24.4955, 2.58 ) }
    dend_22 { pt3dadd( 2.35723, 85.0489, -24.9889, 0.29 ) }
    dend_22 { pt3dadd( 2.48053, 86.1946, -25.2715, 0.29 ) }
    dend_22 { pt3dadd( 2.7558, 87.8363, -25.6015, 0.29 ) }
    dend_22 { pt3dadd( 2.99502, 88.8665, -25.7621, 0.96 ) }
    dend_22 { pt3dadd( 3.14445, 89.3952, -25.8205, 0.96 ) }
    dend_22 { pt3dadd( 3.72465, 91.1161, -25.9405, 0.22 ) }
    dend_22 { pt3dadd( 4.41774, 92.9481, -25.9953, 0.22 ) }
    dend_22 { pt3dadd( 4.88544, 94.0983, -25.9945, 1.77 ) }
    dend_22 { pt3dadd( 5.0796, 94.5481, -25.9815, 2.36 ) }
    dend_22 { pt3dadd( 5.3215, 95.0975, -25.9611, 2.5 ) }
    dend_22 { pt3dadd( 6.1042, 96.8728, -25.882, 0.15 ) }
    dend_22 { pt3dadd( 6.49386, 97.7662, -25.8482, 0.29 ) }
    dend_22 { pt3dadd( 6.74908, 98.3643, -25.837, 0.29 ) }
    dend_22 { pt3dadd( 7.06678, 99.128, -25.8619, 0.15 ) }
    dend_22 { pt3dadd( 7.37321, 99.9098, -25.9347, 1.18 ) }
    dend_22 { pt3dadd( 7.56119, 100.394, -26.0054, 1.55 ) }
    dend_22 { pt3dadd( 7.76769, 100.931, -26.105, 1.18 ) }
    dend_22 { pt3dadd( 7.91707, 101.318, -26.1889, 0.74 ) }
    dend_22 { pt3dadd( 8.34237, 102.521, -26.4545, 0.22 ) }
    dend_22 { pt3dadd( 8.65029, 103.46, -26.6627, 0.22 ) }
    dend_22 { pt3dadd( 9.14473, 105.107, -26.9887, 0.22 ) }
    dend_22 { pt3dadd( 9.39299, 105.994, -27.1435, 0.81 ) }
    dend_22 { pt3dadd( 9.48548, 106.35, -27.1975, 0.81 ) }
    dend_22 { pt3dadd( 10.0192, 108.582, -27.4613, 0.22 ) }
    dend_22 { pt3dadd( 10.2613, 109.707, -27.5286, 0.22 ) }
    dend_22 { pt3dadd( 10.4453, 110.724, -27.5749, 1.25 ) }
    dend_22 { pt3dadd( 10.475, 110.995, -27.5844, 1.69 ) }
    dend_22 { pt3dadd( 10.4933, 111.301, -27.5923, 1.69 ) }
    dend_22 { pt3dadd( 10.5098, 111.955, -27.6024, 1.33 ) }
    dend_22 { pt3dadd( 10.4983, 112.527, -27.6161, 0.59 ) }
    dend_22 { pt3dadd( 10.45, 113.718, -27.6733, 0.22 ) }
    dend_22 { pt3dadd( 10.3939, 115.414, -27.8098, 0.22 ) }
    dend_22 { pt3dadd( 10.359, 116.458, -27.9062, 1.03 ) }
    dend_22 { pt3dadd( 10.3428, 116.898, -27.9495, 1.03 ) }
    dend_22 { pt3dadd( 10.3402, 117.357, -27.996, 1.03 ) }
    dend_22 { pt3dadd( 10.3629, 118.038, -28.0613, 0.52 ) }
    dend_22 { pt3dadd( 10.4761, 119.562, -28.1819, 0.22 ) }
    dend_22 { pt3dadd( 10.5883, 120.295, -28.2435, 0.59 ) }
    dend_22 { pt3dadd( 10.6896, 120.764, -28.2826, 0.59 ) }
    dend_22 { pt3dadd( 11.2341, 122.82, -28.4457, 0.22 ) }
    dend_22 { pt3dadd( 11.4388, 123.457, -28.4922, 0.66 ) }
    dend_22 { pt3dadd( 11.6163, 123.912, -28.5269, 0.66 ) }
    dend_22 { pt3dadd( 12.0681, 124.964, -28.6198, 0.15 ) }
    dend_22 { pt3dadd( 12.329, 125.549, -28.6811, 0.81 ) }
    dend_22 { pt3dadd( 12.5069, 125.951, -28.7305, 0.81 ) }
    dend_22 { pt3dadd( 12.7598, 126.544, -28.818, 0.81 ) }
    dend_22 { pt3dadd( 13.2055, 127.676, -29.0017, 0.22 ) }
    dend_22 { pt3dadd( 13.6359, 128.827, -29.2162, 1.33 ) }
    dend_22 { pt3dadd( 13.8069, 129.309, -29.3148, 1.55 ) }
    dend_22 { pt3dadd( 13.9078, 129.591, -29.3742, 1.55 ) }
    dend_22 { pt3dadd( 14.0145, 129.889, -29.4418, 1.03 ) }
    dend_22 { pt3dadd( 14.5216, 131.247, -29.774, 0.22 ) }
    dend_22 { pt3dadd( 15.0047, 132.455, -30.0899, 0.22 ) }
    dend_22 { pt3dadd( 15.2801, 133.087, -30.2739, 0.22 ) }
    dend_22 { pt3dadd( 15.6032, 133.835, -30.4936, 1.25 ) }
    dend_22 { pt3dadd( 15.7983, 134.318, -30.6377, 1.77 ) }
    dend_22 { pt3dadd( 15.9594, 134.757, -30.7713, 1.77 ) }
    dend_22 { pt3dadd( 16.0855, 135.127, -30.8917, 1.18 ) }
    dend_22 { pt3dadd( 16.2716, 135.712, -31.0885, 0.66 ) }
    dend_22 { pt3dadd( 16.8306, 137.496, -31.7297, 0.22 ) }
    dend_22 { pt3dadd( 17.2061, 138.686, -32.1959, 0.22 ) }
    dend_22 { pt3dadd( 17.4699, 139.498, -32.5133, 1.11 ) }
    dend_22 { pt3dadd( 17.6587, 140.019, -32.7136, 1.4 ) }
    dend_22 { pt3dadd( 17.847, 140.481, -32.8918, 1.4 ) }
    dend_22 { pt3dadd( 18.0919, 141.016, -33.1171, 0.96 ) }
    dend_22 { pt3dadd( 18.8462, 142.524, -33.8052, 0.22 ) }
    dend_22 { pt3dadd( 19.6966, 144.09, -34.5324, 0.22 ) }
    dend_22 { pt3dadd( 20.3779, 145.288, -35.0837, 1.77 ) }
    dend_22 { pt3dadd( 20.6241, 145.711, -35.2716, 2.65 ) }
    dend_22 { pt3dadd( 21.0203, 146.372, -35.5538, 2.95 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 85/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -7.48203, 29.8733, -9.95875, 0.66 ) }
    dend_21 { pt3dadd( -8.43809, 30.3029, -10.1358, 0.66 ) }
    dend_21 { pt3dadd( -8.81874, 30.457, -10.2054, 0.66 ) }
    dend_21 { pt3dadd( -9.2649, 30.6209, -10.2834, 0.66 ) }
    dend_21 { pt3dadd( -9.77382, 30.7867, -10.3739, 1.11 ) }
    dend_21 { pt3dadd( -10.0891, 30.8754, -10.4324, 1.33 ) }
    dend_21 { pt3dadd( -10.5639, 31.0034, -10.5222, 1.33 ) }
    dend_21 { pt3dadd( -11.0791, 31.1266, -10.6191, 0.96 ) }
    dend_21 { pt3dadd( -11.4353, 31.2135, -10.6742, 0.88 ) }
    dend_21 { pt3dadd( -11.8616, 31.3173, -10.7262, 0.88 ) }
    dend_21 { pt3dadd( -12.3698, 31.4383, -10.7632, 0.37 ) }
    dend_21 { pt3dadd( -12.6323, 31.4978, -10.7707, 0.37 ) }
    dend_21 { pt3dadd( -13.0817, 31.5982, -10.7671, 0.81 ) }
    dend_21 { pt3dadd( -13.471, 31.6891, -10.753, 0.88 ) }
    dend_21 { pt3dadd( -13.8319, 31.7761, -10.7346, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -14.2133, 31.87, -10.7093, 0.29 ) }
    dend_21 { pt3dadd( -14.4564, 31.9269, -10.6962, 0.29 ) }
    dend_21 { pt3dadd( -14.8772, 32.0001, -10.6925, 0.74 ) }
    dend_21 { pt3dadd( -15.1897, 32.0458, -10.7033, 0.74 ) }
    dend_21 { pt3dadd( -15.3691, 32.0793, -10.7073, 0.74 ) }
    dend_21 { pt3dadd( -15.5779, 32.1333, -10.6968, 0.74 ) }
    dend_21 { pt3dadd( -15.8354, 32.2102, -10.6686, 0.59 ) }
    dend_21 { pt3dadd( -16.087, 32.2815, -10.6252, 0.59 ) }
    dend_21 { pt3dadd( -16.3087, 32.3363, -10.5692, 0.37 ) }
    dend_21 { pt3dadd( -16.9088, 32.4522, -10.4054, 0.37 ) }
    dend_21 { pt3dadd( -17.3316, 32.508, -10.2863, 0.37 ) }
    dend_21 { pt3dadd( -17.5576, 32.5257, -10.2225, 0.22 ) }
    dend_21 { pt3dadd( -17.9378, 32.5373, -10.1195, 0.22 ) }
    dend_21 { pt3dadd( -18.1422, 32.532, -10.0742, 0.22 ) }
    dend_21 { pt3dadd( -18.7421, 32.5039, -9.9699, 1.03 ) }
    dend_21 { pt3dadd( -19.0387, 32.4964, -9.93557, 1.4 ) }
    dend_21 { pt3dadd( -19.2162, 32.5011, -9.91838, 1.4 ) }
    dend_21 { pt3dadd( -19.6478, 32.5387, -9.8833, 0.81 ) }
    dend_21 { pt3dadd( -20.1996, 32.6107, -9.85497, 0.22 ) }
    dend_21 { pt3dadd( -20.4976, 32.6539, -9.84516, 0.22 ) }
    dend_21 { pt3dadd( -21.0983, 32.7497, -9.83906, 1.11 ) }
    dend_21 { pt3dadd( -21.4048, 32.8026, -9.84333, 1.4 ) }
    dend_21 { pt3dadd( -21.6224, 32.8411, -9.85053, 1.4 ) }
    dend_21 { pt3dadd( -22.1296, 32.9301, -9.87751, 0.66 ) }
    dend_21 { pt3dadd( -22.606, 33.0084, -9.90836, 0.52 ) }
    dend_21 { pt3dadd( -23.1819, 33.0874, -9.95303, 0.74 ) }
    dend_21 { pt3dadd( -23.5555, 33.1362, -9.98658, 0.88 ) }
    dend_21 { pt3dadd( -24.0856, 33.2117, -10.0386, 0.66 ) }
    dend_21 { pt3dadd( -24.4616, 33.2693, -10.0781, 0.66 ) }
    dend_21 { pt3dadd( -24.7698, 33.3202, -10.1138, 0.66 ) }
    dend_21 { pt3dadd( -25.3499, 33.4267, -10.1788, 0.29 ) }
    dend_21 { pt3dadd( -25.8158, 33.5205, -10.2188, 1.03 ) }
    dend_21 { pt3dadd( -26.2127, 33.6053, -10.2397, 1.25 ) }
    dend_21 { pt3dadd( -26.3397, 33.6375, -10.2365, 1.25 ) }
    dend_21 { pt3dadd( -26.6683, 33.7391, -10.2052, 0.81 ) }
    dend_21 { pt3dadd( -27.0646, 33.8755, -10.1412, 0.29 ) }
    dend_21 { pt3dadd( -27.3219, 33.9715, -10.0809, 0.52 ) }
    dend_21 { pt3dadd( -27.4935, 34.0418, -10.0353, 0.66 ) }
    dend_21 { pt3dadd( -28.1186, 34.312, -9.87066, 0.22 ) }
    dend_21 { pt3dadd( -28.4718, 34.469, -9.78652, 0.22 ) }
    dend_21 { pt3dadd( -28.7607, 34.5985, -9.73022, 0.22 ) }
    dend_21 { pt3dadd( -29.1473, 34.7761, -9.68265, 0.22 ) }
    dend_21 { pt3dadd( -29.6666, 35.019, -9.64256, 0.59 ) }
    dend_21 { pt3dadd( -29.963, 35.1611, -9.63286, 0.81 ) }
    dend_21 { pt3dadd( -30.2373, 35.3039, -9.6458, 0.81 ) }
    dend_21 { pt3dadd( -30.6563, 35.5428, -9.68376, 0.52 ) }
    dend_21 { pt3dadd( -31.218, 35.8903, -9.75612, 1.03 ) }
    dend_21 { pt3dadd( -31.5533, 36.1078, -9.80983, 1.18 ) }
    dend_21 { pt3dadd( -31.8015, 36.2773, -9.85648, 1.25 ) }
    dend_21 { pt3dadd( -32.3531, 36.6729, -9.97226, 0.29 ) }
    dend_21 { pt3dadd( -32.851, 37.0423, -10.086, 0.74 ) }
    dend_21 { pt3dadd( -33.0377, 37.1833, -10.132, 0.96 ) }
    dend_21 { pt3dadd( -33.2009, 37.306, -10.1768, 0.96 ) }
    dend_21 { pt3dadd( -33.7433, 37.7007, -10.336, 0.22 ) }
    dend_21 { pt3dadd( -33.9586, 37.8488, -10.4006, 0.22 ) }
    dend_21 { pt3dadd( -34.2542, 38.0373, -10.4858, 0.66 ) }
    dend_21 { pt3dadd( -34.4553, 38.1603, -10.5485, 0.88 ) }
    dend_21 { pt3dadd( -34.6939, 38.2991, -10.6226, 0.44 ) }
    dend_21 { pt3dadd( -35.0055, 38.4756, -10.7162, 0.37 ) }
    dend_21 { pt3dadd( -35.1941, 38.5795, -10.7683, 0.44 ) }
    dend_21 { pt3dadd( -35.4454, 38.7235, -10.837, 0.44 ) }
    dend_21 { pt3dadd( -35.6263, 38.8286, -10.8865, 0.44 ) }
    dend_21 { pt3dadd( -35.9751, 39.0352, -10.9779, 0.22 ) }
    dend_21 { pt3dadd( -36.2034, 39.1746, -11.0303, 0.22 ) }
    dend_21 { pt3dadd( -36.4748, 39.3544, -11.0863, 0.29 ) }
    dend_21 { pt3dadd( -36.6344, 39.4672, -11.1129, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -13.1639, 31.5069, 2.50084, 1.47 ) }
    dend_13 { pt3dadd( -12.8251, 32.1554, 2.49817, 1.47 ) }
    dend_13 { pt3dadd( -12.5178, 32.8631, 2.49851, 0.81 ) }
    dend_13 { pt3dadd( -12.3259, 33.3815, 2.50174, 0.81 ) }
    dend_13 { pt3dadd( -12.1216, 34.1078, 2.50927, 0.81 ) }
    dend_13 { pt3dadd( -11.9108, 34.9924, 2.52151, 0.81 ) }
    dend_13 { pt3dadd( -11.7134, 35.9692, 2.53829, 0.81 ) }
    dend_13 { pt3dadd( -11.5827, 36.945, 2.5543, 1.03 ) }
    dend_13 { pt3dadd( -11.4982, 37.8232, 2.57078, 1.03 ) }
    dend_13 { pt3dadd( -11.3934, 39.168, 2.59254, 1.18 ) }
    dend_13 { pt3dadd( -11.3331, 40.001, 2.61012, 1.18 ) }
    dend_13 { pt3dadd( -11.2989, 41.4498, 2.63344, 1.18 ) }
    dend_13 { pt3dadd( -11.3112, 42.481, 2.64524, 1.4 ) }
    dend_13 { pt3dadd( -11.3125, 43.2118, 2.65167, 1.4 ) }
    dend_13 { pt3dadd( -11.3181, 43.7319, 2.65338, 1.4 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 81/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -13.1639, 31.5069, 2.50084, 0.96 ) }
    dend_12 { pt3dadd( -15.2909, 32.4828, 1.73765, 0.96 ) }
    dend_12 { pt3dadd( -16.0544, 32.8542, 1.48435, 0.96 ) }
    dend_12 { pt3dadd( -17.1127, 33.3793, 1.13454, 0.96 ) }
    dend_12 { pt3dadd( -18.213, 33.945, 0.759324, 0.81 ) }
    dend_12 { pt3dadd( -19.16, 34.4505, 0.438426, 0.81 ) }
    dend_12 { pt3dadd( -20.4665, 35.1669, 0.0114572, 1.03 ) }
    dend_12 { pt3dadd( -21.3494, 35.6937, -0.274921, 1.03 ) }
    dend_12 { pt3dadd( -22.1659, 36.2716, -0.538756, 1.03 ) }
    dend_12 { pt3dadd( -23.1762, 37.1017, -0.864682, 0.81 ) }
    dend_12 { pt3dadd( -23.9145, 37.737, -1.10095, 0.81 ) }
    dend_12 { pt3dadd( -24.7246, 38.4583, -1.34771, 0.81 ) }
    dend_12 { pt3dadd( -25.6758, 39.3619, -1.63838, 0.52 ) }
    dend_12 { pt3dadd( -26.5477, 40.2822, -1.89359, 0.52 ) }
    dend_12 { pt3dadd( -27.0369, 40.8466, -2.01601, 0.52 ) }
    dend_12 { pt3dadd( -27.7353, 41.7165, -2.16763, 0.52 ) }
    dend_12 { pt3dadd( -28.6008, 42.8408, -2.34354, 0.52 ) }
    dend_12 { pt3dadd( -29.0543, 43.4573, -2.42574, 0.52 ) }
    dend_12 { pt3dadd( -29.5126, 44.0982, -2.48869, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -30.0488, 44.8648, -2.5396, 0.66 ) }
    dend_12 { pt3dadd( -30.5431, 45.6273, -2.56995, 0.88 ) }
    dend_12 { pt3dadd( -31.02, 46.4475, -2.58759, 0.88 ) }
    dend_12 { pt3dadd( -31.5479, 47.4131, -2.60726, 0.59 ) }
    dend_12 { pt3dadd( -32.0837, 48.371, -2.63854, 0.88 ) }
    dend_12 { pt3dadd( -32.471, 49.0602, -2.66997, 0.88 ) }
    dend_12 { pt3dadd( -32.7866, 49.6758, -2.70365, 0.96 ) }
    dend_12 { pt3dadd( -33.0648, 50.2393, -2.74496, 0.96 ) }
    dend_12 { pt3dadd( -33.3177, 50.7313, -2.79208, 0.96 ) }
    dend_12 { pt3dadd( -33.7762, 51.5327, -2.89039, 0.74 ) }
    dend_12 { pt3dadd( -34.5115, 52.7085, -3.06487, 1.25 ) }
    dend_12 { pt3dadd( -35.0256, 53.4895, -3.19398, 1.25 ) }
    dend_12 { pt3dadd( -35.6123, 54.3602, -3.34241, 0.29 ) }
    dend_12 { pt3dadd( -36.0022, 54.9399, -3.43443, 0.29 ) }
    dend_12 { pt3dadd( -36.3955, 55.5286, -3.51553, 0.66 ) }
    dend_12 { pt3dadd( -36.7493, 56.0617, -3.57261, 0.81 ) }
    dend_12 { pt3dadd( -37.0437, 56.5146, -3.60426, 0.81 ) }
    dend_12 { pt3dadd( -37.5279, 57.323, -3.62238, 0.37 ) }
    dend_12 { pt3dadd( -37.9798, 58.2208, -3.66292, 0.37 ) }
    dend_12 { pt3dadd( -38.24, 58.8091, -3.70913, 1.03 ) }
    dend_12 { pt3dadd( -38.4611, 59.3299, -3.76584, 1.25 ) }
    dend_12 { pt3dadd( -38.7493, 59.9659, -3.85513, 1.25 ) }
    dend_12 { pt3dadd( -39.0038, 60.4688, -3.94549, 0.81 ) }
    dend_12 { pt3dadd( -39.5619, 61.4631, -4.15132, 0.59 ) }
    dend_12 { pt3dadd( -39.8993, 62.0288, -4.27609, 0.44 ) }
    dend_12 { pt3dadd( -40.3695, 62.8281, -4.42457, 0.88 ) }
    dend_12 { pt3dadd( -40.7294, 63.4452, -4.51464, 0.88 ) }
    dend_12 { pt3dadd( -41.343, 64.5283, -4.60988, 0.59 ) }
    dend_12 { pt3dadd( -41.7364, 65.2515, -4.65452, 0.59 ) }
    dend_12 { pt3dadd( -42.341, 66.4271, -4.68694, 0.44 ) }
    dend_12 { pt3dadd( -42.9956, 67.7846, -4.70885, 1.03 ) }
    dend_12 { pt3dadd( -43.5129, 68.942, -4.7, 1.55 ) }
    dend_12 { pt3dadd( -43.7995, 69.6629, -4.67041, 1.62 ) }
    dend_12 { pt3dadd( -44.1787, 70.721, -4.60126, 1.11 ) }
    dend_12 { pt3dadd( -44.5604, 71.8848, -4.50704, 0.59 ) }
    dend_12 { pt3dadd( -44.8059, 72.6906, -4.42133, 0.59 ) }
    dend_12 { pt3dadd( -45.1904, 74.0386, -4.2495, 0.59 ) }
    dend_12 { pt3dadd( -45.5718, 75.3825, -4.05682, 0.52 ) }
    dend_12 { pt3dadd( -45.8267, 76.2617, -3.91028, 0.52 ) }
    dend_12 { pt3dadd( -46.1539, 77.3577, -3.68583, 0.52 ) }
    dend_12 { pt3dadd( -46.5088, 78.5009, -3.44236, 0.52 ) }
    dend_12 { pt3dadd( -46.927, 79.7508, -3.18503, 0.37 ) }
    dend_12 { pt3dadd( -47.568, 81.4083, -2.8626, 1.55 ) }
    dend_12 { pt3dadd( -47.8175, 81.9524, -2.7663, 1.92 ) }
    dend_12 { pt3dadd( -48.0817, 82.445, -2.69025, 1.92 ) }
    dend_12 { pt3dadd( -48.3371, 82.8629, -2.64248, 1.92 ) }
    dend_12 { pt3dadd( -48.8978, 83.6489, -2.58567, 0.88 ) }
    dend_12 { pt3dadd( -49.6623, 84.6406, -2.54894, 0.44 ) }
    dend_12 { pt3dadd( -50.2437, 85.3731, -2.53693, 0.44 ) }
    dend_12 { pt3dadd( -50.869, 86.166, -2.54131, 0.44 ) }
    dend_12 { pt3dadd( -51.7372, 87.2959, -2.55242, 0.37 ) }
    dend_12 { pt3dadd( -52.1991, 87.9112, -2.55946, 0.37 ) }
    dend_12 { pt3dadd( -53.148, 89.2331, -2.57252, 0.74 ) }
    dend_12 { pt3dadd( -53.5246, 89.7776, -2.57084, 0.74 ) }
    dend_12 { pt3dadd( -53.9886, 90.4786, -2.56539, 0.52 ) }
    dend_12 { pt3dadd( -54.6027, 91.4481, -2.57503, 1.25 ) }
    dend_12 { pt3dadd( -55.0296, 92.1281, -2.60889, 1.47 ) }
    dend_12 { pt3dadd( -55.3149, 92.5895, -2.64785, 1.47 ) }
    dend_12 { pt3dadd( -55.7114, 93.1567, -2.73782, 0.81 ) }
    dend_12 { pt3dadd( -56.2554, 93.8625, -2.89096, 0.59 ) }
    dend_12 { pt3dadd( -56.8058, 94.5086, -3.08367, 0.88 ) }
    dend_12 { pt3dadd( -57.2731, 95.0259, -3.26744, 1.18 ) }
    dend_12 { pt3dadd( -57.5652, 95.3433, -3.39013, 1.18 ) }
    dend_12 { pt3dadd( -58.2807, 96.1529, -3.66783, 0.96 ) }
    dend_12 { pt3dadd( -59.0385, 97.0787, -3.91636, 0.52 ) }
    dend_12 { pt3dadd( -59.4715, 97.6622, -4.00111, 0.37 ) }
    dend_12 { pt3dadd( -60.0858, 98.5769, -4.02867, 0.37 ) }
    dend_12 { pt3dadd( -60.6625, 99.5352, -3.97863, 0.37 ) }
    dend_12 { pt3dadd( -61.1816, 100.5, -3.87129, 0.37 ) }
    dend_12 { pt3dadd( -61.5304, 101.253, -3.74438, 0.81 ) }
    dend_12 { pt3dadd( -62.0182, 102.465, -3.50847, 1.84 ) }
    dend_12 { pt3dadd( -62.2115, 102.956, -3.41211, 1.92 ) }
    dend_12 { pt3dadd( -62.3599, 103.309, -3.35225, 1.92 ) }
    dend_12 { pt3dadd( -62.6291, 103.965, -3.26344, 1.62 ) }
    dend_12 { pt3dadd( -63.0006, 104.894, -3.19368, 0.88 ) }
    dend_12 { pt3dadd( -63.3757, 105.893, -3.15383, 0.29 ) }
    dend_12 { pt3dadd( -63.9509, 107.449, -3.12528, 0.29 ) }
    dend_12 { pt3dadd( -64.3896, 108.567, -3.10717, 0.29 ) }
    dend_12 { pt3dadd( -64.6806, 109.218, -3.08999, 0.29 ) }
    dend_12 { pt3dadd( -64.8377, 109.52, -3.07928, 0.29 ) }
    dend_12 { pt3dadd( -65.2487, 110.18, -3.05106, 0.66 ) }
    dend_12 { pt3dadd( -65.7801, 110.902, -3.01624, 0.81 ) }
    dend_12 { pt3dadd( -66.1691, 111.377, -2.99232, 0.81 ) }
    dend_12 { pt3dadd( -66.9155, 112.274, -2.95107, 0.37 ) }
    dend_12 { pt3dadd( -67.5046, 112.961, -2.92042, 0.37 ) }
    dend_12 { pt3dadd( -68.062, 113.62, -2.8913, 0.81 ) }
    dend_12 { pt3dadd( -68.4543, 114.089, -2.86685, 0.81 ) }
    dend_12 { pt3dadd( -69.0092, 114.765, -2.82345, 0.37 ) }
    dend_12 { pt3dadd( -69.561, 115.394, -2.778, 0.37 ) }
    dend_12 { pt3dadd( -70.1271, 115.978, -2.7284, 0.88 ) }
    dend_12 { pt3dadd( -70.8246, 116.663, -2.66597, 1.47 ) }
    dend_12 { pt3dadd( -71.3497, 117.175, -2.6225, 1.69 ) }
    dend_12 { pt3dadd( -71.7752, 117.594, -2.59244, 1.69 ) }
    dend_12 { pt3dadd( -72.9355, 118.713, -2.52057, 0.37 ) }
    dend_12 { pt3dadd( -73.3332, 119.104, -2.49771, 0.37 ) }
    dend_12 { pt3dadd( -74.0745, 119.885, -2.46408, 0.37 ) }
    dend_12 { pt3dadd( -74.9222, 120.855, -2.43538, 0.81 ) }
    dend_12 { pt3dadd( -75.4636, 121.567, -2.42253, 1.33 ) }
    dend_12 { pt3dadd( -75.7876, 122.041, -2.42076, 1.33 ) }
    dend_12 { pt3dadd( -76.2192, 122.71, -2.42528, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -77.0925, 124.021, -2.4518, 0.52 ) }
    dend_12 { pt3dadd( -77.8244, 125.033, -2.48849, 0.52 ) }
    dend_12 { pt3dadd( -78.6514, 126.154, -2.54187, 0.52 ) }
    dend_12 { pt3dadd( -79.1082, 126.771, -2.57615, 0.52 ) }
    dend_12 { pt3dadd( -79.6951, 127.572, -2.62629, 0.52 ) }
    dend_12 { pt3dadd( -80.3536, 128.468, -2.69229, 0.52 ) }
    dend_12 { pt3dadd( -81.4764, 129.977, -2.81714, 0.52 ) }
    dend_12 { pt3dadd( -81.8836, 130.523, -2.86379, 0.52 ) }
    dend_12 { pt3dadd( -82.8971, 131.856, -2.97616, 1.25 ) }
    dend_12 { pt3dadd( -83.1835, 132.234, -3.00543, 1.47 ) }
    dend_12 { pt3dadd( -83.5598, 132.725, -3.04931, 1.47 ) }
    dend_12 { pt3dadd( -84.1141, 133.405, -3.12144, 0.88 ) }
    dend_12 { pt3dadd( -84.7934, 134.157, -3.21447, 0.29 ) }
    dend_12 { pt3dadd( -85.078, 134.435, -3.25147, 0.29 ) }
    dend_12 { pt3dadd( -85.6708, 134.963, -3.32058, 0.44 ) }
    dend_12 { pt3dadd( -86.1432, 135.365, -3.36502, 0.44 ) }
    dend_12 { pt3dadd( -86.5893, 135.733, -3.39566, 0.44 ) }
    dend_12 { pt3dadd( -86.8501, 135.959, -3.42338, 0.44 ) }
    dend_12 { pt3dadd( -87.2195, 136.297, -3.44374, 0.29 ) }
    dend_12 { pt3dadd( -87.6905, 136.856, -3.43176, 0.29 ) }
    dend_12 { pt3dadd( -87.8516, 137.071, -3.41058, 0.44 ) }
    dend_12 { pt3dadd( -88.0482, 137.343, -3.37053, 0.44 ) }
    dend_12 { pt3dadd( -88.5688, 138.044, -3.2499, 0.37 ) }
    dend_12 { pt3dadd( -89.276, 138.954, -3.07816, 0.44 ) }
    dend_12 { pt3dadd( -90.4282, 140.401, -2.88739, 2.28 ) }
    dend_12 { pt3dadd( -90.8897, 140.976, -2.84195, 2.5 ) }
    dend_12 { pt3dadd( -91.2428, 141.433, -2.83099, 2.5 ) }
    dend_12 { pt3dadd( -91.8136, 142.184, -2.85058, 1.92 ) }
    dend_12 { pt3dadd( -92.3799, 142.945, -2.92655, 0.81 ) }
    dend_12 { pt3dadd( -93.1014, 143.993, -3.15728, 0.52 ) }
    dend_12 { pt3dadd( -93.3973, 144.475, -3.28901, 0.52 ) }
    dend_12 { pt3dadd( -94.0145, 145.593, -3.6131, 0.88 ) }
    dend_12 { pt3dadd( -94.3524, 146.285, -3.81107, 0.88 ) }
    dend_12 { pt3dadd( -94.7197, 147.123, -4.03766, 0.66 ) }
    dend_12 { pt3dadd( -94.9962, 147.815, -4.21445, 0.44 ) }
    dend_12 { pt3dadd( -95.3671, 148.822, -4.43578, 0.29 ) }
    dend_12 { pt3dadd( -95.76, 149.985, -4.69924, 0.29 ) }
    dend_12 { pt3dadd( -96.1594, 151.315, -5.02084, 0.29 ) }
    dend_12 { pt3dadd( -96.3406, 151.975, -5.19014, 0.29 ) }
    dend_12 { pt3dadd( -96.6591, 153.199, -5.56235, 0.52 ) }
    dend_12 { pt3dadd( -96.8857, 154.038, -5.85982, 0.88 ) }
    dend_12 { pt3dadd( -97.0828, 154.725, -6.15381, 0.88 ) }
    dend_12 { pt3dadd( -97.3306, 155.477, -6.52188, 0.44 ) }
    dend_12 { pt3dadd( -97.8527, 156.662, -7.1776, 1.11 ) }
    dend_12 { pt3dadd( -98.4431, 157.682, -7.79424, 2.43 ) }
    dend_12 { pt3dadd( -98.9575, 158.366, -8.24247, 2.43 ) }
    dend_12 { pt3dadd( -99.3344, 158.758, -8.51949, 2.43 ) }
    dend_12 { pt3dadd( -99.8865, 159.218, -8.84013, 1.69 ) }
    dend_12 { pt3dadd( -100.7, 159.793, -9.24431, 0.59 ) }
    dend_12 { pt3dadd( -101.623, 160.335, -9.61303, 0.74 ) }
    dend_12 { pt3dadd( -101.939, 160.5, -9.70567, 0.74 ) }
    dend_12 { pt3dadd( -102.473, 160.761, -9.84929, 0.52 ) }
    dend_12 { pt3dadd( -103.299, 161.166, -10.0401, 0.52 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 24.4165, 6.23392, 6.42226, 1.99 ) }
    dend_2 { pt3dadd( 25.9487, 6.37984, 6.42379, 1.99 ) }
    dend_2 { pt3dadd( 26.8459, 6.67812, 6.51108, 1.99 ) }
    dend_2 { pt3dadd( 27.4755, 7.12188, 6.63177, 1.69 ) }
    dend_2 { pt3dadd( 28.3606, 7.7457, 6.80144, 1.69 ) }
    dend_2 { pt3dadd( 28.7334, 8.00845, 6.8729, 1.69 ) }
    dend_2 { pt3dadd( 29.3528, 8.44501, 6.99163, 1.69 ) }
    dend_2 { pt3dadd( 29.7477, 8.89422, 7.06493, 1.92 ) }
    dend_2 { pt3dadd( 30.327, 9.82436, 7.27768, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 62/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 24.4165, 6.23392, 6.42226, 0.74 ) }
    dend_1 { pt3dadd( 25.4878, 8.53773, 6.32084, 0.74 ) }
    dend_1 { pt3dadd( 25.8966, 9.53425, 6.25621, 0.74 ) }
    dend_1 { pt3dadd( 26.4737, 11.0948, 6.12605, 0.74 ) }
    dend_1 { pt3dadd( 26.9317, 12.4363, 5.99784, 0.44 ) }
    dend_1 { pt3dadd( 27.2889, 13.5751, 5.88982, 0.44 ) }
    dend_1 { pt3dadd( 27.7771, 15.2661, 5.72835, 0.66 ) }
    dend_1 { pt3dadd( 27.9712, 16.0787, 5.63283, 0.88 ) }
    dend_1 { pt3dadd( 28.2269, 17.2678, 5.52116, 0.88 ) }
    dend_1 { pt3dadd( 28.4415, 18.3767, 5.45841, 1.03 ) }
    dend_1 { pt3dadd( 28.7642, 19.9762, 5.41128, 0.96 ) }
    dend_1 { pt3dadd( 29.0103, 21.1138, 5.39767, 0.52 ) }
    dend_1 { pt3dadd( 29.2368, 22.0293, 5.39765, 0.52 ) }
    dend_1 { pt3dadd( 29.5038, 23.2493, 5.40022, 0.88 ) }
    dend_1 { pt3dadd( 29.7217, 24.2446, 5.40655, 0.66 ) }
    dend_1 { pt3dadd( 29.9699, 25.3609, 5.42381, 0.88 ) }
    dend_1 { pt3dadd( 30.1892, 26.3591, 5.44555, 0.88 ) }
    dend_1 { pt3dadd( 30.4959, 27.8379, 5.49243, 0.29 ) }
    dend_1 { pt3dadd( 30.7155, 29.0327, 5.5233, 0.29 ) }
    dend_1 { pt3dadd( 30.8573, 29.8533, 5.53109, 0.29 ) }
    dend_1 { pt3dadd( 31.0969, 31.254, 5.5522, 0.44 ) }
    dend_1 { pt3dadd( 31.2582, 32.0942, 5.58722, 0.74 ) }
    dend_1 { pt3dadd( 31.4895, 33.106, 5.64213, 0.88 ) }
    dend_1 { pt3dadd( 31.6525, 33.7194, 5.68651, 1.11 ) }
    dend_1 { pt3dadd( 31.7952, 34.2033, 5.72042, 1.11 ) }
    dend_1 { pt3dadd( 32.0772, 35.2975, 5.76144, 0.29 ) }
    dend_1 { pt3dadd( 32.3782, 36.3646, 5.75533, 0.29 ) }
    dend_1 { pt3dadd( 32.7124, 37.365, 5.72738, 0.29 ) }
    dend_1 { pt3dadd( 35.7707, 48.7847, 7.79749, 0.29 ) }
    dend_1 { pt3dadd( 40.3509, 59.7837, 9.32811, 0.29 ) }
    dend_1 { pt3dadd( 43.7722, 71.2634, 9.53675, 0.29 ) }
    dend_1 { pt3dadd( 46.1737, 82.97, 8.95583, 0.29 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 94/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 9.5476, 53.0936, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 12.1397, 67.8679, 1.13455, 0.59 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 97/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -86.742, -58.4444, 5.62767, 0.44 ) }
    dend_48 { pt3dadd( -89.1681, -59.4032, 6.62568, 0.44 ) }
    dend_48 { pt3dadd( -90.3958, -59.9803, 7.11869, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -91.6916, -60.655, 7.59471, 0.29 ) }
    dend_48 { pt3dadd( -92.4522, -61.0678, 7.85868, 0.29 ) }
    dend_48 { pt3dadd( -94.0709, -61.9317, 8.38192, 0.37 ) }
    dend_48 { pt3dadd( -94.8099, -62.3046, 8.62559, 0.37 ) }
    dend_48 { pt3dadd( -95.9427, -62.8459, 8.90195, 0.29 ) }
    dend_48 { pt3dadd( -97.0244, -63.4445, 9.19088, 0.29 ) }
    dend_48 { pt3dadd( -97.8494, -63.9688, 9.42617, 0.29 ) }
    dend_48 { pt3dadd( -98.422, -64.353, 9.58876, 0.29 ) }
    dend_48 { pt3dadd( -99.3152, -64.9345, 9.83612, 0.29 ) }
    dend_48 { pt3dadd( -100.199, -65.432, 10.0611, 0.44 ) }
    dend_48 { pt3dadd( -101.418, -66.0395, 10.3653, 0.44 ) }
    dend_48 { pt3dadd( -102.063, -66.3811, 10.5575, 0.44 ) }
    dend_48 { pt3dadd( -103.001, -66.9479, 10.8934, 0.66 ) }
    dend_48 { pt3dadd( -103.933, -67.6347, 11.3034, 0.66 ) }
    dend_48 { pt3dadd( -104.409, -68.0925, 11.5768, 0.52 ) }
    dend_48 { pt3dadd( -105.208, -69.1982, 12.2799, 0.44 ) }
    dend_48 { pt3dadd( -105.51, -69.975, 12.7891, 0.66 ) }
    dend_48 { pt3dadd( -105.663, -70.7866, 13.3303, 0.66 ) }
    dend_48 { pt3dadd( -105.752, -71.7248, 13.9564, 0.52 ) }
    dend_48 { pt3dadd( -105.86, -72.9684, 14.7994, 0.52 ) }
    dend_48 { pt3dadd( -105.917, -74.1048, 15.5555, 0.44 ) }
    dend_48 { pt3dadd( -105.935, -75.1022, 16.2115, 0.37 ) }
    dend_48 { pt3dadd( -106.023, -76.6525, 17.2264, 0.37 ) }
    dend_48 { pt3dadd( -106.159, -77.872, 18.0487, 0.29 ) }
    dend_48 { pt3dadd( -106.418, -79.0989, 18.9469, 0.29 ) }
    dend_48 { pt3dadd( -115.243, -87.7044, 21.6451, 0.29 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 26/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -86.742, -58.4444, 5.62767, 1.11 ) }
    dend_45 { pt3dadd( -87.4207, -58.7397, 5.77527, 1.11 ) }
    dend_45 { pt3dadd( -87.949, -59.0176, 5.87556, 1.11 ) }
    dend_45 { pt3dadd( -89.0193, -59.6203, 6.08162, 0.88 ) }
    dend_45 { pt3dadd( -89.8356, -60.0552, 6.2387, 0.88 ) }
    dend_45 { pt3dadd( -91.078, -60.665, 6.47659, 0.88 ) }
    dend_45 { pt3dadd( -92.3757, -61.2433, 6.71539, 0.88 ) }
    dend_45 { pt3dadd( -93.0869, -61.5556, 6.84448, 0.88 ) }
    dend_45 { pt3dadd( -93.7493, -61.8373, 6.94687, 0.81 ) }
    dend_45 { pt3dadd( -94.4951, -62.1406, 7.04214, 0.81 ) }
    dend_45 { pt3dadd( -95.0347, -62.3375, 7.10801, 0.81 ) }
    dend_45 { pt3dadd( -95.9939, -62.653, 7.22811, 0.96 ) }
    dend_45 { pt3dadd( -96.4949, -62.8336, 7.28597, 0.96 ) }
    dend_45 { pt3dadd( -97.0067, -63.0716, 7.3294, 0.96 ) }
    dend_45 { pt3dadd( -97.4914, -63.3758, 7.34845, 0.96 ) }
    dend_45 { pt3dadd( -98.1228, -63.8523, 7.35918, 0.96 ) }
    dend_45 { pt3dadd( -98.3332, -64.0188, 7.35728, 0.96 ) }
    dend_45 { pt3dadd( -98.9785, -64.5152, 7.33351, 0.88 ) }
    dend_45 { pt3dadd( -99.7901, -65.0604, 7.28444, 0.88 ) }
    dend_45 { pt3dadd( -100.372, -65.4344, 7.24236, 1.11 ) }
    dend_45 { pt3dadd( -100.96, -65.8129, 7.1971, 1.11 ) }
    dend_45 { pt3dadd( -101.639, -66.2671, 7.13044, 0.96 ) }
    dend_45 { pt3dadd( -102.212, -66.6877, 7.08898, 0.96 ) }
    dend_45 { pt3dadd( -102.998, -67.326, 7.05682, 0.88 ) }
    dend_45 { pt3dadd( -103.898, -68.1298, 7.00756, 0.88 ) }
    dend_45 { pt3dadd( -104.594, -68.7785, 6.93381, 0.96 ) }
    dend_45 { pt3dadd( -105.152, -69.3042, 6.84762, 0.96 ) }
    dend_45 { pt3dadd( -105.949, -70.0275, 6.70008, 0.88 ) }
    dend_45 { pt3dadd( -106.329, -70.3496, 6.61151, 0.74 ) }
    dend_45 { pt3dadd( -107.185, -71.0212, 6.37997, 0.96 ) }
    dend_45 { pt3dadd( -107.943, -71.5544, 6.16864, 1.11 ) }
    dend_45 { pt3dadd( -108.561, -71.9662, 6.00738, 1.25 ) }
    dend_45 { pt3dadd( -109.097, -72.3257, 5.8829, 1.25 ) }
    dend_45 { pt3dadd( -109.959, -72.9208, 5.70182, 1.03 ) }
    dend_45 { pt3dadd( -111.118, -73.7821, 5.52105, 0.88 ) }
    dend_45 { pt3dadd( -111.955, -74.4712, 5.43029, 0.88 ) }
    dend_45 { pt3dadd( -112.797, -75.2168, 5.3538, 0.88 ) }
    dend_45 { pt3dadd( -113.5, -75.8473, 5.28802, 0.88 ) }
    dend_45 { pt3dadd( -114.18, -76.4307, 5.22631, 1.33 ) }
    dend_45 { pt3dadd( -114.714, -76.8454, 5.18642, 1.33 ) }
    dend_45 { pt3dadd( -115.352, -77.305, 5.13657, 1.18 ) }
    dend_45 { pt3dadd( -115.802, -77.6089, 5.09802, 0.96 ) }
    dend_45 { pt3dadd( -116.611, -78.1162, 5.0382, 0.96 ) }
    dend_45 { pt3dadd( -117.358, -78.5313, 4.99823, 0.96 ) }
    dend_45 { pt3dadd( -118.364, -79.0136, 4.98138, 0.88 ) }
    dend_45 { pt3dadd( -119.234, -79.343, 5.01119, 0.81 ) }
    dend_45 { pt3dadd( -119.723, -79.4809, 5.05794, 0.81 ) }
    dend_45 { pt3dadd( -120.292, -79.6198, 5.13079, 0.74 ) }
    dend_45 { pt3dadd( -120.713, -79.7376, 5.19184, 0.74 ) }
    dend_45 { pt3dadd( -121.249, -79.9357, 5.27357, 0.74 ) }
    dend_45 { pt3dadd( -122.014, -80.3227, 5.38908, 0.74 ) }
    dend_45 { pt3dadd( -122.44, -80.6302, 5.44318, 1.11 ) }
    dend_45 { pt3dadd( -123.087, -81.2862, 5.49856, 1.11 ) }
    dend_45 { pt3dadd( -123.878, -82.2679, 5.53219, 0.88 ) }
    dend_45 { pt3dadd( -124.39, -82.9983, 5.53963, 0.88 ) }
    dend_45 { pt3dadd( -124.782, -83.6119, 5.53583, 0.88 ) }
    dend_45 { pt3dadd( -125.321, -84.4676, 5.52355, 0.81 ) }
    dend_45 { pt3dadd( -126.067, -85.5711, 5.47586, 0.81 ) }
    dend_45 { pt3dadd( -126.453, -86.0878, 5.44013, 1.18 ) }
    dend_45 { pt3dadd( -126.879, -86.6394, 5.37816, 1.33 ) }
    dend_45 { pt3dadd( -127.344, -87.1959, 5.29767, 1.33 ) }
    dend_45 { pt3dadd( -128.11, -88.0302, 5.15573, 0.88 ) }
    dend_45 { pt3dadd( -128.873, -88.7889, 4.9955, 0.81 ) }
    dend_45 { pt3dadd( -129.674, -89.5241, 4.82745, 0.81 ) }
    dend_45 { pt3dadd( -130.628, -90.3543, 4.6158, 0.81 ) }
    dend_45 { pt3dadd( -131.353, -90.9556, 4.43515, 0.81 ) }
    dend_45 { pt3dadd( -132.037, -91.5055, 4.25902, 1.11 ) }
    dend_45 { pt3dadd( -132.452, -91.8348, 4.14681, 1.25 ) }
    dend_45 { pt3dadd( -132.949, -92.2268, 4.01346, 2.14 ) }
    dend_45 { pt3dadd( -133.428, -92.6264, 3.86766, 2.5 ) }
    dend_45 { pt3dadd( -134.086, -93.1657, 3.66817, 1.92 ) }
    dend_45 { pt3dadd( -135.033, -94.0544, 3.33056, 1.11 ) }
    dend_45 { pt3dadd( -135.438, -94.4864, 3.16623, 0.96 ) }
    dend_45 { pt3dadd( -135.993, -95.134, 2.92841, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_45 { pt3dadd( -136.705, -96.0066, 2.58295, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -13.2552, -132.656, -3.84439, 0.37 ) }
    dend_41 { pt3dadd( -12.6524, -135.056, -2.64646, 0.37 ) }
    dend_41 { pt3dadd( -12.4674, -135.677, -2.35697, 0.52 ) }
    dend_41 { pt3dadd( -12.2253, -136.439, -2.03122, 0.66 ) }
    dend_41 { pt3dadd( -11.9486, -137.307, -1.6813, 0.37 ) }
    dend_41 { pt3dadd( -11.7378, -137.949, -1.43015, 0.44 ) }
    dend_41 { pt3dadd( -11.4873, -138.697, -1.14848, 0.44 ) }
    dend_41 { pt3dadd( -11.1561, -139.591, -0.898356, 0.29 ) }
    dend_41 { pt3dadd( -10.8163, -140.43, -0.652414, 0.29 ) }
    dend_41 { pt3dadd( -10.4741, -141.135, -0.430778, 0.59 ) }
    dend_41 { pt3dadd( -10.1161, -141.743, -0.238164, 0.59 ) }
    dend_41 { pt3dadd( -9.66699, -142.378, -0.0344482, 0.37 ) }
    dend_41 { pt3dadd( -9.1712, -142.979, 0.155342, 0.66 ) }
    dend_41 { pt3dadd( -8.67898, -143.486, 0.319528, 0.52 ) }
    dend_41 { pt3dadd( -7.91639, -144.166, 0.537826, 0.37 ) }
    dend_41 { pt3dadd( -7.32503, -144.645, 0.68315, 0.37 ) }
    dend_41 { pt3dadd( -6.42725, -145.352, 0.87478, 0.37 ) }
    dend_41 { pt3dadd( -5.54714, -146.031, 1.03812, 1.03 ) }
    dend_41 { pt3dadd( -4.90325, -146.529, 1.14011, 1.18 ) }
    dend_41 { pt3dadd( -4.29176, -147.008, 1.21656, 0.81 ) }
    dend_41 { pt3dadd( -3.80673, -147.395, 1.26307, 0.52 ) }
    dend_41 { pt3dadd( -2.89906, -148.123, 1.34893, 0.52 ) }
    dend_41 { pt3dadd( -2.03771, -148.842, 1.42745, 0.59 ) }
    dend_41 { pt3dadd( -1.28275, -149.52, 1.46808, 0.59 ) }
    dend_41 { pt3dadd( -0.666901, -150.13, 1.48206, 0.81 ) }
    dend_41 { pt3dadd( -0.166241, -150.66, 1.48405, 0.81 ) }
    dend_41 { pt3dadd( 0.384084, -151.276, 1.47472, 0.66 ) }
    dend_41 { pt3dadd( 0.781132, -151.745, 1.45807, 0.29 ) }
    dend_41 { pt3dadd( 1.68858, -152.887, 1.40308, 0.52 ) }
    dend_41 { pt3dadd( 2.46113, -153.883, 1.34973, 1.03 ) }
    dend_41 { pt3dadd( 2.73826, -154.247, 1.32522, 1.47 ) }
    dend_41 { pt3dadd( 3.24672, -154.884, 1.27849, 1.62 ) }
    dend_41 { pt3dadd( 3.93495, -155.656, 1.21829, 1.03 ) }
    dend_41 { pt3dadd( 4.60329, -156.323, 1.18233, 0.29 ) }
    dend_41 { pt3dadd( 5.25233, -156.904, 1.17232, 0.29 ) }
    dend_41 { pt3dadd( 6.01494, -157.528, 1.1627, 0.37 ) }
    dend_41 { pt3dadd( 6.80956, -158.171, 1.15347, 0.66 ) }
    dend_41 { pt3dadd( 7.21884, -158.498, 1.15396, 0.81 ) }
    dend_41 { pt3dadd( 7.86523, -159.001, 1.1719, 0.96 ) }
    dend_41 { pt3dadd( 8.35245, -159.373, 1.1972, 0.44 ) }
    dend_41 { pt3dadd( 8.73808, -159.664, 1.22937, 0.29 ) }
    dend_41 { pt3dadd( 9.48192, -160.216, 1.32037, 0.29 ) }
    dend_41 { pt3dadd( 10.0396, -160.677, 1.3978, 0.59 ) }
    dend_41 { pt3dadd( 10.5696, -161.173, 1.47991, 0.74 ) }
    dend_41 { pt3dadd( 10.9903, -161.613, 1.55004, 0.74 ) }
    dend_41 { pt3dadd( 11.5499, -162.27, 1.64582, 0.74 ) }
    dend_41 { pt3dadd( 11.9949, -162.844, 1.7171, 0.44 ) }
    dend_41 { pt3dadd( 12.5827, -163.667, 1.80532, 0.29 ) }
    dend_41 { pt3dadd( 12.9289, -164.184, 1.85021, 0.66 ) }
    dend_41 { pt3dadd( 13.3599, -164.842, 1.89515, 0.88 ) }
    dend_41 { pt3dadd( 13.7632, -165.45, 1.93167, 0.96 ) }
    dend_41 { pt3dadd( 14.3439, -166.302, 1.99255, 0.66 ) }
    dend_41 { pt3dadd( 14.942, -167.175, 2.06201, 0.37 ) }
    dend_41 { pt3dadd( 15.6522, -168.16, 2.15246, 0.74 ) }
    dend_41 { pt3dadd( 16.0487, -168.692, 2.20513, 0.81 ) }
    dend_41 { pt3dadd( 16.5057, -169.315, 2.27047, 0.37 ) }
    dend_41 { pt3dadd( 17.1132, -170.185, 2.36283, 0.37 ) }
    dend_41 { pt3dadd( 17.6324, -170.966, 2.44451, 0.37 ) }
    dend_41 { pt3dadd( 18.0623, -171.636, 2.51056, 0.37 ) }
    dend_41 { pt3dadd( 18.4065, -172.196, 2.56007, 0.52 ) }
    dend_41 { pt3dadd( 18.8186, -172.858, 2.60976, 0.52 ) }
    dend_41 { pt3dadd( 19.2467, -173.534, 2.64873, 0.37 ) }
    dend_41 { pt3dadd( 19.6883, -174.243, 2.67274, 0.37 ) }
    dend_41 { pt3dadd( 20.2072, -175.053, 2.70081, 0.81 ) }
    dend_41 { pt3dadd( 20.5238, -175.497, 2.71947, 0.88 ) }
    dend_41 { pt3dadd( 21.069, -176.177, 2.75301, 0.59 ) }
    dend_41 { pt3dadd( 21.5444, -176.72, 2.78517, 0.37 ) }
    dend_41 { pt3dadd( 22.0334, -177.235, 2.81996, 0.37 ) }
    dend_41 { pt3dadd( 22.6605, -177.855, 2.87105, 0.44 ) }
    dend_41 { pt3dadd( 23.9516, -179.042, 2.98764, 0.44 ) }
    dend_41 { pt3dadd( 24.8013, -179.736, 3.06989, 1.18 ) }
    dend_41 { pt3dadd( 25.4432, -180.221, 3.13711, 1.47 ) }
    dend_41 { pt3dadd( 26.1571, -180.729, 3.2027, 1.47 ) }
    dend_41 { pt3dadd( 27.2117, -181.47, 3.28373, 1.18 ) }
    dend_41 { pt3dadd( 28.0326, -182.082, 3.32508, 0.29 ) }
    dend_41 { pt3dadd( 28.5448, -182.498, 3.33394, 0.29 ) }
    dend_41 { pt3dadd( 28.9365, -182.836, 3.32107, 0.29 ) }
    dend_41 { pt3dadd( 29.6429, -183.5, 3.24002, 0.59 ) }
    dend_41 { pt3dadd( 30.3302, -184.22, 3.10768, 0.66 ) }
    dend_41 { pt3dadd( 30.7105, -184.671, 2.9991, 0.74 ) }
    dend_41 { pt3dadd( 31.1005, -185.196, 2.86676, 0.59 ) }
    dend_41 { pt3dadd( 31.5271, -185.842, 2.70788, 0.44 ) }
    dend_41 { pt3dadd( 32.0356, -186.668, 2.50191, 0.29 ) }
    dend_41 { pt3dadd( 32.3305, -187.225, 2.36988, 0.37 ) }
    dend_41 { pt3dadd( 32.7583, -188.159, 2.15413, 0.52 ) }
    dend_41 { pt3dadd( 33.0385, -188.873, 2.01645, 1.03 ) }
    dend_41 { pt3dadd( 33.3076, -189.62, 1.87172, 1.55 ) }
    dend_41 { pt3dadd( 33.5393, -190.267, 1.75582, 1.55 ) }
    dend_41 { pt3dadd( 34.1135, -191.9, 1.46772, 0.44 ) }
    dend_41 { pt3dadd( 34.5105, -192.965, 1.27001, 0.37 ) }
    dend_41 { pt3dadd( 35.5387, -195.347, 0.774329, 0.29 ) }
    dend_41 { pt3dadd( 35.804, -195.853, 0.66059, 0.29 ) }
    dend_41 { pt3dadd( 36.6507, -197.16, 0.357658, 1.47 ) }
    dend_41 { pt3dadd( 37.0025, -197.585, 0.251492, 1.92 ) }
    dend_41 { pt3dadd( 37.7311, -198.27, 0.0498634, 2.06 ) }
    dend_41 { pt3dadd( 38.862, -199.118, -0.28937, 0.81 ) }
    dend_41 { pt3dadd( 40.3701, -200.019, -0.801223, 0.29 ) }
    dend_41 { pt3dadd( 41.3302, -200.552, -1.153, 0.29 ) }
    dend_41 { pt3dadd( 42.5875, -201.225, -1.60313, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 43.201, -201.561, -1.79831, 0.52 ) }
    dend_41 { pt3dadd( 44.6425, -202.389, -2.18125, 0.29 ) }
    dend_41 { pt3dadd( 45.6874, -203.03, -2.37693, 0.88 ) }
    dend_41 { pt3dadd( 46.2813, -203.424, -2.41731, 0.74 ) }
    dend_41 { pt3dadd( 47.6309, -204.437, -2.28223, 0.29 ) }
    dend_41 { pt3dadd( 48.5455, -205.179, -2.03562, 0.29 ) }
    dend_41 { pt3dadd( 49.4171, -205.923, -1.69671, 0.59 ) }
    dend_41 { pt3dadd( 49.9684, -206.417, -1.4259, 0.66 ) }
    dend_41 { pt3dadd( 51.0018, -207.375, -0.872027, 0.29 ) }
    dend_41 { pt3dadd( 52.0326, -208.383, -0.323383, 0.29 ) }
    dend_41 { pt3dadd( 52.7109, -209.108, -0.00559168, 0.29 ) }
    dend_41 { pt3dadd( 53.3341, -209.859, 0.25108, 1.03 ) }
    dend_41 { pt3dadd( 53.7902, -210.449, 0.404322, 1.47 ) }
    dend_41 { pt3dadd( 54.2085, -211.019, 0.505318, 1.18 ) }
    dend_41 { pt3dadd( 54.9853, -212.132, 0.620211, 0.22 ) }
    dend_41 { pt3dadd( 55.685, -213.16, 0.689437, 0.22 ) }
    dend_41 { pt3dadd( 56.5849, -214.488, 0.741624, 0.22 ) }
    dend_41 { pt3dadd( 56.9707, -215.035, 0.76193, 0.52 ) }
    dend_41 { pt3dadd( 57.6395, -215.948, 0.79387, 0.29 ) }
    dend_41 { pt3dadd( 58.2767, -216.793, 0.815351, 0.29 ) }
    dend_41 { pt3dadd( 58.6858, -217.302, 0.817048, 0.88 ) }
    dend_41 { pt3dadd( 59.2429, -217.987, 0.842206, 0.88 ) }
    dend_41 { pt3dadd( 60.0587, -219.021, 0.900842, 0.29 ) }
    dend_41 { pt3dadd( 60.4255, -219.498, 0.947181, 0.29 ) }
    dend_41 { pt3dadd( 61.0546, -220.321, 1.09107, 0.96 ) }
    dend_41 { pt3dadd( 61.4845, -220.864, 1.24642, 1.4 ) }
    dend_41 { pt3dadd( 61.9313, -221.413, 1.45229, 1.77 ) }
    dend_41 { pt3dadd( 62.2076, -221.735, 1.60118, 1.77 ) }
    dend_41 { pt3dadd( 63.2891, -222.927, 2.20883, 0.22 ) }
    dend_41 { pt3dadd( 64.3933, -224.067, 2.8683, 0.22 ) }
    dend_41 { pt3dadd( 65.2681, -224.892, 3.38095, 0.88 ) }
    dend_41 { pt3dadd( 65.6671, -225.248, 3.60033, 1.33 ) }
    dend_41 { pt3dadd( 66.084, -225.601, 3.80069, 1.33 ) }
    dend_41 { pt3dadd( 67.0458, -226.383, 4.2266, 0.22 ) }
    dend_41 { pt3dadd( 68.2535, -227.326, 4.69991, 0.22 ) }
    dend_41 { pt3dadd( 69.5546, -228.343, 5.12885, 0.22 ) }
    dend_41 { pt3dadd( 70.751, -229.313, 5.45167, 0.22 ) }
    dend_41 { pt3dadd( 71.4522, -229.905, 5.61473, 0.74 ) }
    dend_41 { pt3dadd( 71.8322, -230.245, 5.68913, 0.88 ) }
    dend_41 { pt3dadd( 72.2802, -230.679, 5.75331, 0.52 ) }
    dend_41 { pt3dadd( 73.0731, -231.555, 5.80984, 0.22 ) }
    dend_41 { pt3dadd( 73.4706, -232.055, 5.82283, 0.88 ) }
    dend_41 { pt3dadd( 73.9016, -232.645, 5.84147, 1.33 ) }
    dend_41 { pt3dadd( 74.2383, -233.135, 5.86474, 1.33 ) }
    dend_41 { pt3dadd( 75.0107, -234.334, 5.93968, 0.29 ) }
    dend_41 { pt3dadd( 75.8904, -235.801, 6.06532, 0.29 ) }
    dend_41 { pt3dadd( 76.3054, -236.53, 6.15212, 0.44 ) }
    dend_41 { pt3dadd( 76.6581, -237.17, 6.25087, 0.59 ) }
    dend_41 { pt3dadd( 76.9735, -237.756, 6.36025, 0.59 ) }
    dend_41 { pt3dadd( 77.4698, -238.693, 6.56355, 0.22 ) }
    dend_41 { pt3dadd( 77.9672, -239.654, 6.78796, 0.22 ) }
    dend_41 { pt3dadd( 78.2768, -240.241, 6.9269, 0.74 ) }
    dend_41 { pt3dadd( 78.466, -240.591, 7.00398, 0.88 ) }
    dend_41 { pt3dadd( 78.725, -241.039, 7.08785, 0.88 ) }
    dend_41 { pt3dadd( 79.2465, -241.914, 7.25011, 0.22 ) }
    dend_41 { pt3dadd( 80.183, -243.399, 7.50859, 0.22 ) }
    dend_41 { pt3dadd( 80.6089, -244.051, 7.60206, 0.52 ) }
    dend_41 { pt3dadd( 80.8895, -244.476, 7.64888, 0.66 ) }
    dend_41 { pt3dadd( 81.333, -245.138, 7.70817, 0.44 ) }
    dend_41 { pt3dadd( 88.409, -251.932, 7.09668, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 60/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -13.2552, -132.656, -3.84439, 2.28 ) }
    dend_34 { pt3dadd( -13.9451, -133.963, -3.66437, 2.28 ) }
    dend_34 { pt3dadd( -14.6017, -135.08, -3.45298, 1.62 ) }
    dend_34 { pt3dadd( -15.4404, -136.405, -3.19742, 1.33 ) }
    dend_34 { pt3dadd( -16.2763, -137.649, -2.97915, 0.88 ) }
    dend_34 { pt3dadd( -16.6836, -138.222, -2.89019, 0.88 ) }
    dend_34 { pt3dadd( -17.3266, -139.063, -2.77546, 1.03 ) }
    dend_34 { pt3dadd( -18.6021, -140.562, -2.60656, 1.03 ) }
    dend_34 { pt3dadd( -19.6964, -141.703, -2.51272, 0.96 ) }
    dend_34 { pt3dadd( -20.5589, -142.526, -2.49011, 0.88 ) }
    dend_34 { pt3dadd( -21.2902, -143.229, -2.52001, 1.11 ) }
    dend_34 { pt3dadd( -22.0813, -144.079, -2.62087, 1.33 ) }
    dend_34 { pt3dadd( -22.6922, -144.894, -2.76648, 1.55 ) }
    dend_34 { pt3dadd( -23.1696, -145.728, -2.95536, 1.25 ) }
    dend_34 { pt3dadd( -23.5043, -146.575, -3.16122, 0.96 ) }
    dend_34 { pt3dadd( -23.7754, -147.744, -3.43778, 0.88 ) }
    dend_34 { pt3dadd( -23.9541, -149.199, -3.7811, 0.88 ) }
    dend_34 { pt3dadd( -24.0421, -150.757, -4.13271, 0.88 ) }
    dend_34 { pt3dadd( -24.0716, -152.128, -4.42636, 1.03 ) }
    dend_34 { pt3dadd( -24.067, -153.411, -4.6819, 1.03 ) }
    dend_34 { pt3dadd( -24.0487, -154.921, -4.94966, 1.03 ) }
    dend_34 { pt3dadd( -24.0241, -156.298, -5.16085, 1.25 ) }
    dend_34 { pt3dadd( -23.9779, -157.886, -5.35225, 1.55 ) }
    dend_34 { pt3dadd( -23.9171, -159.101, -5.45475, 1.55 ) }
    dend_34 { pt3dadd( -23.7839, -160.776, -5.54328, 1.33 ) }
    dend_34 { pt3dadd( -23.6474, -162.145, -5.58511, 1.33 ) }
    dend_34 { pt3dadd( -23.5302, -163.367, -5.6071, 1.11 ) }
    dend_34 { pt3dadd( -23.4047, -164.674, -5.57193, 1.11 ) }
    dend_34 { pt3dadd( -23.3011, -166.111, -5.48922, 0.96 ) }
    dend_34 { pt3dadd( -23.2653, -167.179, -5.40465, 0.96 ) }
    dend_34 { pt3dadd( -23.2791, -168.722, -5.23288, 0.88 ) }
    dend_34 { pt3dadd( -23.3641, -170.757, -4.96322, 0.88 ) }
    dend_34 { pt3dadd( -23.4868, -172.521, -4.6899, 1.03 ) }
    dend_34 { pt3dadd( -23.6325, -174.089, -4.41648, 1.25 ) }
    dend_34 { pt3dadd( -23.8036, -175.58, -4.13843, 1.33 ) }
    dend_34 { pt3dadd( -23.9585, -176.753, -3.90993, 1.62 ) }
    dend_34 { pt3dadd( -24.1098, -177.959, -3.6582, 2.5 ) }
    dend_34 { pt3dadd( -24.1685, -178.614, -3.52055, 2.8 ) }
    dend_34 { pt3dadd( -24.2187, -179.425, -3.38649, 3.02 ) }
    dend_34 { pt3dadd( -24.2327, -180.187, -3.25117, 3.02 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( -24.2361, -180.697, -3.16236, 3.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -2.64843, -69.0561, -9.18473, 0.81 ) }
    dend_30 { pt3dadd( -2.81302, -70.6385, -9.03459, 0.81 ) }
    dend_30 { pt3dadd( -2.97792, -71.7087, -8.85461, 0.66 ) }
    dend_30 { pt3dadd( -3.22414, -72.9096, -8.60037, 0.66 ) }
    dend_30 { pt3dadd( -3.52459, -74.1703, -8.30782, 0.52 ) }
    dend_30 { pt3dadd( -3.65177, -74.6745, -8.18809, 0.52 ) }
    dend_30 { pt3dadd( -3.99175, -76.0029, -7.87512, 0.74 ) }
    dend_30 { pt3dadd( -4.30178, -77.3531, -7.50997, 0.74 ) }
    dend_30 { pt3dadd( -4.59156, -78.4718, -7.20208, 0.88 ) }
    dend_30 { pt3dadd( -4.95541, -79.687, -6.87407, 0.59 ) }
    dend_30 { pt3dadd( -5.2111, -80.4791, -6.68604, 1.03 ) }
    dend_30 { pt3dadd( -5.44336, -81.255, -6.5206, 1.25 ) }
    dend_30 { pt3dadd( -5.65882, -82.1633, -6.36074, 1.03 ) }
    dend_30 { pt3dadd( -5.86694, -83.3314, -6.1981, 0.66 ) }
    dend_30 { pt3dadd( -6.01752, -84.2827, -6.08075, 0.66 ) }
    dend_30 { pt3dadd( -6.17846, -85.2643, -5.97397, 0.81 ) }
    dend_30 { pt3dadd( -6.3661, -86.4122, -5.88666, 0.81 ) }
    dend_30 { pt3dadd( -6.50967, -87.3707, -5.86841, 0.66 ) }
    dend_30 { pt3dadd( -6.63054, -88.3824, -5.91763, 0.52 ) }
    dend_30 { pt3dadd( -6.69608, -88.9814, -5.9926, 0.52 ) }
    dend_30 { pt3dadd( -6.77797, -89.7148, -6.10699, 0.52 ) }
    dend_30 { pt3dadd( -6.91246, -90.7604, -6.29146, 0.66 ) }
    dend_30 { pt3dadd( -7.05453, -91.7108, -6.45985, 0.66 ) }
    dend_30 { pt3dadd( -7.22931, -92.7164, -6.63575, 0.59 ) }
    dend_30 { pt3dadd( -7.44078, -93.8206, -6.80742, 1.18 ) }
    dend_30 { pt3dadd( -7.61334, -94.7818, -6.95207, 1.55 ) }
    dend_30 { pt3dadd( -7.78786, -95.7023, -7.06421, 1.99 ) }
    dend_30 { pt3dadd( -8.05984, -96.8208, -7.1402, 2.73 ) }
    dend_30 { pt3dadd( -8.30756, -97.6511, -7.15177, 2.87 ) }
    dend_30 { pt3dadd( -8.58019, -98.4278, -7.14237, 3.02 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -2.64843, -69.0561, -9.18473, 0.52 ) }
    dend_29 { pt3dadd( -1.97148, -70.0441, -9.88713, 0.52 ) }
    dend_29 { pt3dadd( -1.82679, -70.2765, -10.0333, 0.52 ) }
    dend_29 { pt3dadd( -1.3294, -71.0455, -10.5099, 0.52 ) }
    dend_29 { pt3dadd( -0.930929, -71.6175, -10.8586, 0.66 ) }
    dend_29 { pt3dadd( -0.674888, -71.9686, -11.0553, 0.66 ) }
    dend_29 { pt3dadd( -0.44412, -72.266, -11.2106, 0.44 ) }
    dend_29 { pt3dadd( -0.15687, -72.6747, -11.4323, 0.88 ) }
    dend_29 { pt3dadd( 0.0942659, -73.0579, -11.6182, 1.33 ) }
    dend_29 { pt3dadd( 0.361146, -73.4711, -11.7911, 1.47 ) }
    dend_29 { pt3dadd( 0.68462, -73.9494, -12.0414, 1.03 ) }
    dend_29 { pt3dadd( 1.12919, -74.6871, -12.5425, 0.44 ) }
    dend_29 { pt3dadd( 1.30771, -75.1282, -12.972, 0.44 ) }
    dend_29 { pt3dadd( 1.43178, -75.6241, -13.6512, 0.37 ) }
    dend_29 { pt3dadd( 1.49782, -75.9794, -14.2501, 0.37 ) }
    dend_29 { pt3dadd( 1.62608, -76.4358, -15.1379, 0.37 ) }
    dend_29 { pt3dadd( 1.76153, -76.7364, -15.7961, 0.74 ) }
    dend_29 { pt3dadd( 1.8992, -76.9432, -16.2792, 0.96 ) }
    dend_29 { pt3dadd( 2.14211, -77.235, -16.9214, 0.96 ) }
    dend_29 { pt3dadd( 2.61952, -77.7691, -18.0225, 0.44 ) }
    dend_29 { pt3dadd( 2.96337, -78.1397, -18.7033, 1.33 ) }
    dend_29 { pt3dadd( 3.43354, -78.6516, -19.5408, 1.55 ) }
    dend_29 { pt3dadd( 3.85144, -79.123, -20.2658, 1.33 ) }
    dend_29 { pt3dadd( 4.39007, -79.7668, -21.166, 0.81 ) }
    dend_29 { pt3dadd( 4.60994, -80.0433, -21.5076, 1.25 ) }
    dend_29 { pt3dadd( 4.87428, -80.387, -21.8679, 0.88 ) }
    dend_29 { pt3dadd( 5.13603, -80.7726, -22.21, 0.37 ) }
    dend_29 { pt3dadd( 5.3364, -81.1122, -22.4544, 0.81 ) }
    dend_29 { pt3dadd( 5.52749, -81.4754, -22.6827, 1.03 ) }
    dend_29 { pt3dadd( 5.64216, -81.6946, -22.7989, 1.03 ) }
    dend_29 { pt3dadd( 6.05772, -82.4563, -23.1687, 0.29 ) }
    dend_29 { pt3dadd( 6.27293, -82.8441, -23.3371, 0.29 ) }
    dend_29 { pt3dadd( 6.56693, -83.3482, -23.524, 1.84 ) }
    dend_29 { pt3dadd( 6.84586, -83.7752, -23.6705, 2.14 ) }
    dend_29 { pt3dadd( 7.6269, -84.8349, -24.0342, 0.29 ) }
    dend_29 { pt3dadd( 8.03041, -85.3238, -24.1956, 0.81 ) }
    dend_29 { pt3dadd( 8.4382, -85.7662, -24.3313, 0.81 ) }
    dend_29 { pt3dadd( 8.86622, -86.1815, -24.4605, 0.52 ) }
    dend_29 { pt3dadd( 9.46115, -86.6974, -24.6422, 1.25 ) }
    dend_29 { pt3dadd( 9.85604, -87.0126, -24.7683, 1.4 ) }
    dend_29 { pt3dadd( 10.8742, -87.7946, -25.092, 0.22 ) }
    dend_29 { pt3dadd( 11.4954, -88.2712, -25.2718, 0.22 ) }
    dend_29 { pt3dadd( 12.1901, -88.8156, -25.4535, 1.4 ) }
    dend_29 { pt3dadd( 12.6178, -89.176, -25.5544, 2.21 ) }
    dend_29 { pt3dadd( 12.8084, -89.3537, -25.5906, 2.21 ) }
    dend_29 { pt3dadd( 14.0118, -90.6011, -25.7663, 0.22 ) }
    dend_29 { pt3dadd( 14.33, -90.9517, -25.8064, 0.74 ) }
    dend_29 { pt3dadd( 14.6117, -91.2759, -25.8467, 1.03 ) }
    dend_29 { pt3dadd( 15.0659, -91.8354, -25.9198, 0.59 ) }
    dend_29 { pt3dadd( 16.124, -93.213, -26.1032, 0.22 ) }
    dend_29 { pt3dadd( 17.4714, -95.0016, -26.3649, 0.22 ) }
    dend_29 { pt3dadd( 17.9488, -95.6369, -26.4797, 0.81 ) }
    dend_29 { pt3dadd( 18.3062, -96.1066, -26.5731, 0.96 ) }
    dend_29 { pt3dadd( 19.4771, -97.6372, -26.9077, 0.22 ) }
    dend_29 { pt3dadd( 20.2214, -98.5828, -27.1466, 0.22 ) }
    dend_29 { pt3dadd( 20.6422, -99.1052, -27.306, 0.88 ) }
    dend_29 { pt3dadd( 21.0676, -99.6124, -27.4901, 0.88 ) }
    dend_29 { pt3dadd( 22.2787, -101.03, -28.0393, 0.15 ) }
    dend_29 { pt3dadd( 23.1817, -102.067, -28.4122, 0.15 ) }
    dend_29 { pt3dadd( 23.71, -102.655, -28.6239, 0.15 ) }
    dend_29 { pt3dadd( 24.1876, -103.19, -28.8103, 1.62 ) }
    dend_29 { pt3dadd( 24.4821, -103.534, -28.9215, 1.92 ) }
    dend_29 { pt3dadd( 24.7099, -103.811, -28.9949, 1.92 ) }
    dend_29 { pt3dadd( 26.1603, -105.647, -29.4154, 0.22 ) }
    dend_29 { pt3dadd( 26.4647, -106.04, -29.4886, 0.66 ) }
    dend_29 { pt3dadd( 26.6936, -106.344, -29.5395, 0.88 ) }
    dend_29 { pt3dadd( 26.929, -106.655, -29.5928, 0.88 ) }
    dend_29 { pt3dadd( 27.7105, -107.67, -29.845, 0.15 ) }
    dend_29 { pt3dadd( 28.3255, -108.488, -30.1537, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_29 { pt3dadd( 28.6758, -108.984, -30.4015, 0.81 ) }
    dend_29 { pt3dadd( 28.8985, -109.337, -30.5986, 1.03 ) }
    dend_29 { pt3dadd( 29.0762, -109.655, -30.7923, 1.03 ) }
    dend_29 { pt3dadd( 29.5884, -110.717, -31.5056, 0.22 ) }
    dend_29 { pt3dadd( 30.0474, -111.864, -32.359, 0.22 ) }
    dend_29 { pt3dadd( 30.2267, -112.33, -32.7388, 0.22 ) }
    dend_29 { pt3dadd( 30.4888, -113.003, -33.3252, 1.03 ) }
    dend_29 { pt3dadd( 30.6276, -113.353, -33.6325, 1.62 ) }
    dend_29 { pt3dadd( 30.7752, -113.707, -33.9606, 1.62 ) }
    dend_29 { pt3dadd( 31.0499, -114.304, -34.5465, 1.03 ) }
    dend_29 { pt3dadd( 31.6621, -115.529, -35.7981, 0.22 ) }
    dend_29 { pt3dadd( 31.9718, -116.101, -36.451, 0.44 ) }
    dend_29 { pt3dadd( 32.1597, -116.417, -36.8262, 0.44 ) }
    dend_29 { pt3dadd( 32.5859, -117.113, -37.657, 0.66 ) }
    dend_29 { pt3dadd( 32.8033, -117.464, -38.0607, 0.96 ) }
    dend_29 { pt3dadd( 33.0601, -117.871, -38.5135, 0.37 ) }
    dend_29 { pt3dadd( 33.8904, -119.175, -39.8936, 0.66 ) }
    dend_29 { pt3dadd( 34.0682, -119.443, -40.1647, 0.66 ) }
    dend_29 { pt3dadd( 34.7387, -120.42, -41.15, 0.22 ) }
    dend_29 { pt3dadd( 35.1049, -120.937, -41.6376, 0.22 ) }
    dend_29 { pt3dadd( 35.4437, -121.398, -42.0546, 0.81 ) }
    dend_29 { pt3dadd( 35.7729, -121.815, -42.4046, 0.96 ) }
    dend_29 { pt3dadd( 35.9834, -122.087, -42.5564, 0.96 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 21.0203, 146.372, -35.5538, 0.37 ) }
    dend_24 { pt3dadd( 23.0229, 145.501, -33.3499, 0.37 ) }
    dend_24 { pt3dadd( 23.4315, 145.323, -32.9003, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 21.0203, 146.372, -35.5538, 0.22 ) }
    dend_23 { pt3dadd( 22.3501, 148.929, -36.34, 0.22 ) }
    dend_23 { pt3dadd( 23.0029, 150.327, -36.7999, 0.22 ) }
    dend_23 { pt3dadd( 23.4913, 151.437, -37.178, 0.74 ) }
    dend_23 { pt3dadd( 23.6622, 151.85, -37.317, 0.74 ) }
    dend_23 { pt3dadd( 24.4541, 153.763, -37.9609, 0.15 ) }
    dend_23 { pt3dadd( 24.9665, 155.001, -38.3775, 0.15 ) }
    dend_23 { pt3dadd( 25.2819, 155.899, -38.7724, 0.66 ) }
    dend_23 { pt3dadd( 25.451, 156.458, -38.9762, 0.88 ) }
    dend_23 { pt3dadd( 25.6506, 157.098, -39.1685, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 36/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -11.3181, 43.7319, 2.65338, 0.66 ) }
    dend_17 { pt3dadd( -11.6158, 45.2778, 2.49859, 0.66 ) }
    dend_17 { pt3dadd( -11.6804, 45.8627, 2.46592, 0.96 ) }
    dend_17 { pt3dadd( -11.7527, 46.549, 2.44051, 0.96 ) }
    dend_17 { pt3dadd( -11.8453, 47.4867, 2.41791, 0.59 ) }
    dend_17 { pt3dadd( -11.9177, 48.3175, 2.40476, 0.59 ) }
    dend_17 { pt3dadd( -11.9878, 49.2999, 2.39523, 0.59 ) }
    dend_17 { pt3dadd( -12.056, 50.7276, 2.42816, 0.59 ) }
    dend_17 { pt3dadd( -12.067, 51.4012, 2.44707, 0.52 ) }
    dend_17 { pt3dadd( -12.0616, 52.4074, 2.48021, 0.88 ) }
    dend_17 { pt3dadd( -12.0581, 53.1368, 2.49874, 1.11 ) }
    dend_17 { pt3dadd( -12.0718, 54.007, 2.50915, 1.11 ) }
    dend_17 { pt3dadd( -12.1018, 55.0091, 2.52173, 0.74 ) }
    dend_17 { pt3dadd( -12.1572, 56.0596, 2.53542, 0.74 ) }
    dend_17 { pt3dadd( -12.2421, 57.4039, 2.55702, 0.74 ) }
    dend_17 { pt3dadd( -12.3192, 58.3311, 2.56597, 0.52 ) }
    dend_17 { pt3dadd( -12.4227, 59.3227, 2.56035, 0.52 ) }
    dend_17 { pt3dadd( -12.5066, 60.0369, 2.54652, 0.96 ) }
    dend_17 { pt3dadd( -12.6332, 61.0915, 2.50257, 1.11 ) }
    dend_17 { pt3dadd( -12.8256, 62.6555, 2.40951, 1.11 ) }
    dend_17 { pt3dadd( -12.9508, 63.6832, 2.33419, 1.11 ) }
    dend_17 { pt3dadd( -13.0589, 64.7075, 2.26731, 0.81 ) }
    dend_17 { pt3dadd( -13.1378, 65.608, 2.21525, 0.74 ) }
    dend_17 { pt3dadd( -13.1984, 66.5463, 2.17063, 0.74 ) }
    dend_17 { pt3dadd( -13.2311, 67.426, 2.14332, 0.44 ) }
    dend_17 { pt3dadd( -13.2526, 68.17, 2.13619, 0.44 ) }
    dend_17 { pt3dadd( -13.2929, 69.3943, 2.15963, 0.74 ) }
    dend_17 { pt3dadd( -13.3204, 70.2392, 2.1939, 0.74 ) }
    dend_17 { pt3dadd( -13.3439, 71.1375, 2.23838, 0.37 ) }
    dend_17 { pt3dadd( -13.3409, 72.0699, 2.29073, 0.74 ) }
    dend_17 { pt3dadd( -13.326, 72.8843, 2.30488, 0.96 ) }
    dend_17 { pt3dadd( -13.3001, 73.8185, 2.28264, 0.96 ) }
    dend_17 { pt3dadd( -13.2646, 74.8469, 2.20342, 0.81 ) }
    dend_17 { pt3dadd( -13.2219, 75.8125, 2.09812, 0.52 ) }
    dend_17 { pt3dadd( -13.1635, 76.8217, 1.96293, 0.52 ) }
    dend_17 { pt3dadd( -13.0516, 78.146, 1.76397, 1.03 ) }
    dend_17 { pt3dadd( -12.9768, 78.8499, 1.65105, 1.55 ) }
    dend_17 { pt3dadd( -12.9027, 79.4862, 1.54276, 1.69 ) }
    dend_17 { pt3dadd( -12.8535, 79.9009, 1.47252, 1.69 ) }
    dend_17 { pt3dadd( -12.7268, 80.926, 1.31756, 0.37 ) }
    dend_17 { pt3dadd( -12.6157, 81.7834, 1.22126, 0.44 ) }
    dend_17 { pt3dadd( -12.5402, 82.2294, 1.20014, 0.44 ) }
    dend_17 { pt3dadd( -12.4371, 82.743, 1.19171, 0.44 ) }
    dend_17 { pt3dadd( -12.2483, 83.5928, 1.19832, 0.29 ) }
    dend_17 { pt3dadd( -12.1553, 83.9541, 1.20344, 0.59 ) }
    dend_17 { pt3dadd( -11.9691, 84.5671, 1.21467, 0.44 ) }
    dend_17 { pt3dadd( -11.6641, 85.5311, 1.23623, 0.29 ) }
    dend_17 { pt3dadd( -11.3963, 86.4249, 1.25939, 1.18 ) }
    dend_17 { pt3dadd( -11.2613, 86.9059, 1.27385, 1.18 ) }
    dend_17 { pt3dadd( -11.0645, 87.6282, 1.29378, 0.52 ) }
    dend_17 { pt3dadd( -10.8771, 88.3211, 1.31277, 0.29 ) }
    dend_17 { pt3dadd( -10.6575, 89.1119, 1.35776, 0.29 ) }
    dend_17 { pt3dadd( -10.4726, 89.8278, 1.43844, 0.29 ) }
    dend_17 { pt3dadd( -10.3678, 90.2961, 1.51314, 0.29 ) }
    dend_17 { pt3dadd( -10.1909, 91.2288, 1.69445, 0.81 ) }
    dend_17 { pt3dadd( -10.0509, 92.0463, 1.8748, 0.44 ) }
    dend_17 { pt3dadd( -9.90217, 92.8296, 2.0423, 0.22 ) }
    dend_17 { pt3dadd( -9.71591, 93.6196, 2.20144, 0.44 ) }
    dend_17 { pt3dadd( -9.63763, 93.9224, 2.2655, 0.44 ) }
    dend_17 { pt3dadd( -9.47469, 94.5716, 2.40611, 0.29 ) }
    dend_17 { pt3dadd( -9.34121, 95.1585, 2.53719, 0.29 ) }
    dend_17 { pt3dadd( -9.15556, 95.9604, 2.69831, 0.29 ) }
    dend_17 { pt3dadd( -9.03261, 96.4723, 2.78211, 0.29 ) }
    dend_17 { pt3dadd( -8.86929, 97.1315, 2.88193, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( -8.74032, 97.6674, 2.96848, 0.66 ) }
    dend_17 { pt3dadd( -8.58171, 98.3452, 3.05983, 0.74 ) }
    dend_17 { pt3dadd( -8.44142, 99.0833, 3.16244, 0.37 ) }
    dend_17 { pt3dadd( -8.35069, 99.6613, 3.24517, 0.37 ) }
    dend_17 { pt3dadd( -8.22826, 100.47, 3.33526, 0.52 ) }
    dend_17 { pt3dadd( -8.13235, 101.08, 3.37892, 0.59 ) }
    dend_17 { pt3dadd( -7.98409, 102.009, 3.43195, 0.44 ) }
    dend_17 { pt3dadd( -7.87652, 102.663, 3.46278, 0.29 ) }
    dend_17 { pt3dadd( -7.79524, 103.122, 3.48674, 0.29 ) }
    dend_17 { pt3dadd( -7.61771, 104.137, 3.55241, 1.11 ) }
    dend_17 { pt3dadd( -7.51798, 104.718, 3.59709, 1.25 ) }
    dend_17 { pt3dadd( -7.44794, 105.132, 3.63377, 1.25 ) }
    dend_17 { pt3dadd( -7.28631, 106.002, 3.71152, 0.66 ) }
    dend_17 { pt3dadd( -7.17059, 106.522, 3.74189, 0.29 ) }
    dend_17 { pt3dadd( -6.96357, 107.329, 3.77937, 0.29 ) }
    dend_17 { pt3dadd( -6.75734, 108.05, 3.80618, 0.29 ) }
    dend_17 { pt3dadd( -6.55129, 108.703, 3.82536, 0.29 ) }
    dend_17 { pt3dadd( -6.21964, 109.678, 3.84513, 0.96 ) }
    dend_17 { pt3dadd( -6.0743, 110.101, 3.84612, 1.47 ) }
    dend_17 { pt3dadd( -5.96021, 110.463, 3.8407, 1.47 ) }
    dend_17 { pt3dadd( -5.9007, 110.676, 3.83392, 1.47 ) }
    dend_17 { pt3dadd( -5.752, 111.301, 3.81415, 0.74 ) }
    dend_17 { pt3dadd( -5.59929, 112.019, 3.79681, 0.29 ) }
    dend_17 { pt3dadd( -5.46548, 112.755, 3.78453, 0.52 ) }
    dend_17 { pt3dadd( -5.34115, 113.435, 3.77759, 0.74 ) }
    dend_17 { pt3dadd( -5.16144, 114.298, 3.77609, 0.44 ) }
    dend_17 { pt3dadd( -4.99934, 114.985, 3.77947, 0.29 ) }
    dend_17 { pt3dadd( -4.87119, 115.467, 3.78405, 0.29 ) }
    dend_17 { pt3dadd( -4.66692, 116.128, 3.79468, 0.66 ) }
    dend_17 { pt3dadd( -4.50491, 116.601, 3.80197, 0.74 ) }
    dend_17 { pt3dadd( -4.26743, 117.266, 3.81108, 0.74 ) }
    dend_17 { pt3dadd( -4.00731, 118.012, 3.8268, 0.29 ) }
    dend_17 { pt3dadd( -3.78873, 118.679, 3.84473, 0.29 ) }
    dend_17 { pt3dadd( -3.38067, 120.023, 3.8866, 0.29 ) }
    dend_17 { pt3dadd( -3.13294, 120.94, 3.96173, 0.52 ) }
    dend_17 { pt3dadd( -3.00034, 121.494, 4.0284, 1.18 ) }
    dend_17 { pt3dadd( -2.90186, 121.975, 4.1008, 1.4 ) }
    dend_17 { pt3dadd( -2.76947, 122.758, 4.23752, 1.4 ) }
    dend_17 { pt3dadd( -2.68669, 123.373, 4.35503, 0.66 ) }
    dend_17 { pt3dadd( -2.512, 124.814, 4.63454, 0.29 ) }
    dend_17 { pt3dadd( -2.38974, 125.722, 4.79151, 0.29 ) }
    dend_17 { pt3dadd( -2.2978, 126.269, 4.85536, 0.37 ) }
    dend_17 { pt3dadd( -2.15183, 127.007, 4.90068, 0.37 ) }
    dend_17 { pt3dadd( -1.97776, 127.768, 4.91496, 0.37 ) }
    dend_17 { pt3dadd( -1.62567, 129.115, 4.88318, 0.37 ) }
    dend_17 { pt3dadd( -1.18981, 130.576, 4.77224, 0.37 ) }
    dend_17 { pt3dadd( -0.727564, 131.994, 4.64851, 1.33 ) }
    dend_17 { pt3dadd( -0.480554, 132.673, 4.5752, 1.99 ) }
    dend_17 { pt3dadd( -0.27152, 133.212, 4.50836, 1.99 ) }
    dend_17 { pt3dadd( -0.1822, 133.44, 4.47736, 1.99 ) }
    dend_17 { pt3dadd( -0.0154502, 133.861, 4.42043, 1.99 ) }
    dend_17 { pt3dadd( 0.335756, 134.739, 4.31852, 0.59 ) }
    dend_17 { pt3dadd( 0.750666, 135.758, 4.23819, 0.29 ) }
    dend_17 { pt3dadd( 1.04812, 136.471, 4.22222, 0.59 ) }
    dend_17 { pt3dadd( 1.28189, 137.021, 4.22749, 0.59 ) }
    dend_17 { pt3dadd( 1.77733, 138.175, 4.27244, 0.37 ) }
    dend_17 { pt3dadd( 2.04416, 138.815, 4.31578, 0.37 ) }
    dend_17 { pt3dadd( 2.45468, 139.854, 4.41608, 0.37 ) }
    dend_17 { pt3dadd( 2.91373, 141.104, 4.56922, 0.74 ) }
    dend_17 { pt3dadd( 3.0788, 141.619, 4.63228, 0.74 ) }
    dend_17 { pt3dadd( 3.22055, 142.152, 4.70239, 0.88 ) }
    dend_17 { pt3dadd( 3.37975, 142.928, 4.80795, 0.44 ) }
    dend_17 { pt3dadd( 3.58586, 144.27, 4.9598, 0.29 ) }
    dend_17 { pt3dadd( 3.65764, 144.989, 5.00013, 0.52 ) }
    dend_17 { pt3dadd( 3.73725, 146.327, 4.99109, 1.25 ) }
    dend_17 { pt3dadd( 3.75616, 146.898, 4.97056, 1.62 ) }
    dend_17 { pt3dadd( 3.76425, 147.273, 4.93822, 1.62 ) }
    dend_17 { pt3dadd( 3.77488, 148.043, 4.83628, 0.96 ) }
    dend_17 { pt3dadd( 3.79598, 149.193, 4.62917, 0.29 ) }
    dend_17 { pt3dadd( 3.82624, 149.854, 4.4952, 0.29 ) }
    dend_17 { pt3dadd( 3.88765, 150.657, 4.33814, 0.29 ) }
    dend_17 { pt3dadd( 3.95675, 151.499, 4.20027, 0.74 ) }
    dend_17 { pt3dadd( 3.98342, 151.881, 4.15603, 0.96 ) }
    dend_17 { pt3dadd( 4.01006, 152.324, 4.12671, 0.96 ) }
    dend_17 { pt3dadd( 4.07032, 153.445, 4.08183, 0.52 ) }
    dend_17 { pt3dadd( 4.15025, 154.994, 4.01167, 0.37 ) }
    dend_17 { pt3dadd( 4.20172, 156.057, 3.96685, 0.29 ) }
    dend_17 { pt3dadd( 4.23667, 157.058, 3.91898, 0.66 ) }
    dend_17 { pt3dadd( 4.25437, 157.731, 3.87323, 0.66 ) }
    dend_17 { pt3dadd( 4.27318, 158.992, 3.76242, 0.29 ) }
    dend_17 { pt3dadd( 4.2817, 159.619, 3.70229, 0.29 ) }
    dend_17 { pt3dadd( 4.31132, 161.269, 3.53946, 0.29 ) }
    dend_17 { pt3dadd( 4.36883, 163.065, 3.36921, 1.99 ) }
    dend_17 { pt3dadd( 4.38341, 163.473, 3.33673, 2.28 ) }
    dend_17 { pt3dadd( 4.39883, 164.049, 3.30459, 1.55 ) }
    dend_17 { pt3dadd( 4.41104, 164.681, 3.30068, 0.88 ) }
    dend_17 { pt3dadd( 4.41765, 165.711, 3.3536, 0.22 ) }
    dend_17 { pt3dadd( 4.41259, 166.193, 3.40057, 0.22 ) }
    dend_17 { pt3dadd( 4.39484, 167.073, 3.51898, 0.66 ) }
    dend_17 { pt3dadd( 4.3833, 167.63, 3.59391, 0.66 ) }
    dend_17 { pt3dadd( 4.37091, 168.572, 3.71089, 0.29 ) }
    dend_17 { pt3dadd( 4.35698, 170.08, 3.86651, 0.22 ) }
    dend_17 { pt3dadd( 4.369, 170.845, 3.93533, 0.22 ) }
    dend_17 { pt3dadd( 4.40232, 171.653, 3.99492, 0.52 ) }
    dend_17 { pt3dadd( 4.49304, 172.666, 4.04809, 0.44 ) }
    dend_17 { pt3dadd( 4.61244, 173.547, 4.07713, 0.44 ) }
    dend_17 { pt3dadd( 4.79029, 174.564, 4.08608, 0.44 ) }
    dend_17 { pt3dadd( 5.13852, 176.141, 4.07911, 0.22 ) }
    dend_17 { pt3dadd( 5.42869, 177.314, 4.06801, 0.66 ) }
    dend_17 { pt3dadd( 5.69061, 178.263, 4.05493, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_17 { pt3dadd( 5.84267, 178.764, 4.04681, 1.77 ) }
    dend_17 { pt3dadd( 5.99242, 179.214, 4.03941, 1.77 ) }
    dend_17 { pt3dadd( 6.24295, 179.872, 4.03012, 0.88 ) }
    dend_17 { pt3dadd( 6.54633, 180.603, 4.04981, 0.29 ) }
    dend_17 { pt3dadd( 6.75952, 181.099, 4.08247, 0.52 ) }
    dend_17 { pt3dadd( 7.29857, 182.381, 4.19756, 0.22 ) }
    dend_17 { pt3dadd( 7.60732, 183.112, 4.2593, 0.52 ) }
    dend_17 { pt3dadd( 7.95805, 183.935, 4.31793, 0.52 ) }
    dend_17 { pt3dadd( 8.71723, 185.746, 4.42314, 0.22 ) }
    dend_17 { pt3dadd( 9.29199, 187.132, 4.48152, 0.37 ) }
    dend_17 { pt3dadd( 9.66384, 188.044, 4.51614, 0.37 ) }
    dend_17 { pt3dadd( 10.0652, 189.059, 4.54587, 1.92 ) }
    dend_17 { pt3dadd( 10.2414, 189.527, 4.55174, 2.21 ) }
    dend_17 { pt3dadd( 10.4095, 190.011, 4.53936, 2.21 ) }
    dend_17 { pt3dadd( 10.5963, 190.583, 4.45488, 1.18 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 15/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -11.3181, 43.7319, 2.65338, 0.66 ) }
    dend_14 { pt3dadd( -10.9276, 45.0991, 3.00467, 0.66 ) }
    dend_14 { pt3dadd( -10.687, 45.9319, 3.21185, 0.81 ) }
    dend_14 { pt3dadd( -10.5153, 46.5507, 3.38239, 0.37 ) }
    dend_14 { pt3dadd( -10.3237, 47.2962, 3.58965, 0.29 ) }
    dend_14 { pt3dadd( -9.99563, 48.5461, 3.92929, 0.29 ) }
    dend_14 { pt3dadd( -9.78472, 49.2777, 4.13092, 0.29 ) }
    dend_14 { pt3dadd( -9.53773, 49.9813, 4.31261, 0.29 ) }
    dend_14 { pt3dadd( -9.15122, 50.9074, 4.57719, 0.29 ) }
    dend_14 { pt3dadd( -8.80499, 51.6668, 4.80361, 0.29 ) }
    dend_14 { pt3dadd( -8.4598, 52.423, 5.02873, 0.74 ) }
    dend_14 { pt3dadd( -8.22078, 52.9309, 5.18747, 0.74 ) }
    dend_14 { pt3dadd( -7.7655, 53.7903, 5.46752, 0.29 ) }
    dend_14 { pt3dadd( -7.49608, 54.2834, 5.6356, 0.37 ) }
    dend_14 { pt3dadd( -6.87691, 55.4316, 6.01495, 0.37 ) }
    dend_14 { pt3dadd( -6.55113, 56.0809, 6.22988, 0.37 ) }
    dend_14 { pt3dadd( -6.21971, 56.8486, 6.47362, 0.37 ) }
    dend_14 { pt3dadd( -6.08728, 57.2026, 6.58179, 0.37 ) }
    dend_14 { pt3dadd( -5.87923, 57.8489, 6.77672, 0.22 ) }
    dend_14 { pt3dadd( -5.69445, 58.4765, 6.96299, 0.22 ) }
    dend_14 { pt3dadd( -5.52966, 58.9717, 7.10767, 0.66 ) }
    dend_14 { pt3dadd( -5.34467, 59.5693, 7.25067, 0.96 ) }
    dend_14 { pt3dadd( -3.2476, 66.7361, 8.35697, 0.96 ) }
    dend_14 { pt3dadd( 0.270658, 72.9337, 10.9715, 0.96 ) }
    dend_14 { pt3dadd( 2.86082, 79.2069, 14.3622, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 30.327, 9.82436, 7.27768, 0.66 ) }
    dend_8 { pt3dadd( 31.1823, 8.12282, 7.28309, 0.66 ) }
    dend_8 { pt3dadd( 31.4235, 7.58125, 7.24944, 0.66 ) }
    dend_8 { pt3dadd( 31.8207, 6.74863, 7.22386, 0.88 ) }
    dend_8 { pt3dadd( 32.5413, 5.40667, 7.23761, 0.88 ) }
    dend_8 { pt3dadd( 33.061, 4.55247, 7.28385, 0.88 ) }
    dend_8 { pt3dadd( 33.5643, 3.84336, 7.34964, 1.03 ) }
    dend_8 { pt3dadd( 34.1572, 3.0763, 7.43263, 1.03 ) }
    dend_8 { pt3dadd( 35.0254, 2.48104, 7.67053, 0.88 ) }
    dend_8 { pt3dadd( 35.7257, 2.33757, 7.9044, 0.88 ) }
    dend_8 { pt3dadd( 36.3297, 2.28664, 8.12684, 0.88 ) }
    dend_8 { pt3dadd( 37.2852, 2.17633, 8.50869, 0.81 ) }
    dend_8 { pt3dadd( 38.3812, 1.90603, 8.98166, 0.81 ) }
    dend_8 { pt3dadd( 39.0751, 1.59751, 9.26853, 0.81 ) }
    dend_8 { pt3dadd( 39.9532, 0.992484, 9.56624, 0.74 ) }
    dend_8 { pt3dadd( 40.8872, 0.20516, 9.83892, 0.88 ) }
    dend_8 { pt3dadd( 41.7157, -0.586812, 10.0372, 0.88 ) }
    dend_8 { pt3dadd( 42.6024, -1.54851, 10.2055, 0.52 ) }
    dend_8 { pt3dadd( 43.0487, -2.04556, 10.2504, 0.52 ) }
    dend_8 { pt3dadd( 43.6013, -2.5711, 10.2381, 0.52 ) }
    dend_8 { pt3dadd( 44.3197, -3.10819, 10.1701, 0.52 ) }
    dend_8 { pt3dadd( 45.1507, -3.56866, 10.052, 0.74 ) }
    dend_8 { pt3dadd( 46.0004, -3.94755, 9.90711, 0.74 ) }
    dend_8 { pt3dadd( 47.0826, -4.35614, 9.70597, 0.74 ) }
    dend_8 { pt3dadd( 48.5148, -4.83875, 9.44449, 0.74 ) }
    dend_8 { pt3dadd( 49.5093, -5.14599, 9.25552, 0.74 ) }
    dend_8 { pt3dadd( 50.2981, -5.35006, 9.11037, 0.74 ) }
    dend_8 { pt3dadd( 51.1575, -5.4867, 8.96212, 0.74 ) }
    dend_8 { pt3dadd( 51.6613, -5.52827, 8.89554, 0.88 ) }
    dend_8 { pt3dadd( 53.0861, -5.53746, 8.73415, 0.88 ) }
    dend_8 { pt3dadd( 54.3009, -5.50568, 8.61957, 0.88 ) }
    dend_8 { pt3dadd( 55.8041, -5.47837, 8.49521, 0.66 ) }
    dend_8 { pt3dadd( 56.9021, -5.47936, 8.43028, 0.66 ) }
    dend_8 { pt3dadd( 59.724, -5.50555, 8.33417, 0.59 ) }
    dend_8 { pt3dadd( 60.7017, -5.52243, 8.31852, 0.52 ) }
    dend_8 { pt3dadd( 62.1815, -5.51547, 8.31879, 0.52 ) }
    dend_8 { pt3dadd( 63.0732, -5.46379, 8.33323, 0.52 ) }
    dend_8 { pt3dadd( 64.0444, -5.31908, 8.35202, 0.52 ) }
    dend_8 { pt3dadd( 65.2063, -5.07238, 8.37958, 0.52 ) }
    dend_8 { pt3dadd( 65.983, -4.88943, 8.40764, 0.52 ) }
    dend_8 { pt3dadd( 67.2496, -4.64401, 8.46808, 0.52 ) }
    dend_8 { pt3dadd( 68.6234, -4.37747, 8.54339, 0.52 ) }
    dend_8 { pt3dadd( 69.9103, -4.16695, 8.62342, 0.52 ) }
    dend_8 { pt3dadd( 71.1059, -4.06623, 8.71048, 0.52 ) }
    dend_8 { pt3dadd( 72.4647, -4.11153, 8.83143, 0.52 ) }
    dend_8 { pt3dadd( 73.3951, -4.29158, 8.94258, 0.52 ) }
    dend_8 { pt3dadd( 74.2565, -4.56313, 9.10546, 0.52 ) }
    dend_8 { pt3dadd( 74.8337, -4.76356, 9.25122, 0.52 ) }
    dend_8 { pt3dadd( 75.5613, -4.99841, 9.46743, 0.52 ) }
    dend_8 { pt3dadd( 77.0346, -5.38188, 9.98935, 0.29 ) }
    dend_8 { pt3dadd( 79.6689, -5.85832, 11.0365, 0.29 ) }
    dend_8 { pt3dadd( 82.0596, -6.12348, 12.05, 0.29 ) }
    dend_8 { pt3dadd( 83.28, -6.16229, 12.6036, 0.29 ) }
    dend_8 { pt3dadd( 84.1567, -6.14791, 13.016, 0.44 ) }
    dend_8 { pt3dadd( 85.0857, -6.05771, 13.4854, 0.59 ) }
    dend_8 { pt3dadd( 85.6689, -5.92105, 13.8391, 0.59 ) }
    dend_8 { pt3dadd( 86.6188, -5.34985, 14.5683, 0.59 ) }
    dend_8 { pt3dadd( 87.1247, -4.81497, 14.9833, 0.59 ) }
    dend_8 { pt3dadd( 97.0251, -7.99022, 17.261, 0.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 30.327, 9.82436, 7.27768, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_3 { pt3dadd( 31.7077, 9.47173, 7.28276, 1.11 ) }
    dend_3 { pt3dadd( 32.5589, 9.14708, 7.27353, 1.11 ) }
    dend_3 { pt3dadd( 33.5395, 8.81633, 7.17517, 1.25 ) }
    dend_3 { pt3dadd( 34.3033, 8.63265, 7.07116, 1.47 ) }
    dend_3 { pt3dadd( 35.348, 8.4945, 6.91342, 1.4 ) }
    dend_3 { pt3dadd( 36.2813, 8.45766, 6.76446, 1.4 ) }
    dend_3 { pt3dadd( 37.3371, 8.4628, 6.54828, 1.18 ) }
    dend_3 { pt3dadd( 38.7759, 8.72864, 6.20529, 1.18 ) }
    dend_3 { pt3dadd( 39.7669, 9.11741, 5.93663, 1.18 ) }
    dend_3 { pt3dadd( 40.615, 9.52588, 5.69028, 1.18 ) }
    dend_3 { pt3dadd( 41.119, 9.77346, 5.54329, 0.88 ) }
    dend_3 { pt3dadd( 41.6232, 9.97016, 5.40349, 0.88 ) }
    dend_3 { pt3dadd( 42.416, 10.1114, 5.20308, 0.88 ) }
    dend_3 { pt3dadd( 43.6275, 10.0397, 4.93548, 1.11 ) }
    dend_3 { pt3dadd( 44.5472, 9.85346, 4.73191, 1.11 ) }
    dend_3 { pt3dadd( 45.4779, 9.59627, 4.52171, 1.11 ) }
    dend_3 { pt3dadd( 46.5293, 9.24943, 4.28575, 1.25 ) }
    dend_3 { pt3dadd( 47.601, 8.84304, 4.04983, 1.33 ) }
    dend_3 { pt3dadd( 48.0961, 8.63395, 3.94597, 1.47 ) }
    dend_3 { pt3dadd( 48.9128, 8.29918, 3.79389, 1.77 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -136.705, -96.0066, 2.58295, 0.59 ) }
    dend_47 { pt3dadd( -136.786, -97.7706, 1.62234, 0.59 ) }
    dend_47 { pt3dadd( -136.802, -98.5271, 1.24632, 0.59 ) }
    dend_47 { pt3dadd( -136.791, -99.1966, 0.933105, 0.52 ) }
    dend_47 { pt3dadd( -136.761, -99.9768, 0.591206, 0.52 ) }
    dend_47 { pt3dadd( -136.748, -100.826, 0.239279, 0.88 ) }
    dend_47 { pt3dadd( -136.738, -101.772, -0.139528, 1.03 ) }
    dend_47 { pt3dadd( -136.728, -102.355, -0.322188, 1.03 ) }
    dend_47 { pt3dadd( -136.678, -103.387, -0.635036, 1.03 ) }
    dend_47 { pt3dadd( -136.605, -104.278, -0.899308, 0.29 ) }
    dend_47 { pt3dadd( -136.558, -104.914, -1.08272, 0.29 ) }
    dend_47 { pt3dadd( -136.533, -105.441, -1.22774, 0.29 ) }
    dend_47 { pt3dadd( -136.54, -106.438, -1.49426, 0.59 ) }
    dend_47 { pt3dadd( -136.581, -107.269, -1.66744, 0.74 ) }
    dend_47 { pt3dadd( -136.639, -107.871, -1.76141, 0.88 ) }
    dend_47 { pt3dadd( -136.715, -108.458, -1.83565, 0.88 ) }
    dend_47 { pt3dadd( -136.796, -109.008, -1.88598, 0.88 ) }
    dend_47 { pt3dadd( -136.943, -109.748, -1.92985, 0.81 ) }
    dend_47 { pt3dadd( -137.32, -111.349, -2.0026, 0.37 ) }
    dend_47 { pt3dadd( -137.52, -112.216, -2.03541, 1.03 ) }
    dend_47 { pt3dadd( -137.714, -113.088, -2.03434, 1.33 ) }
    dend_47 { pt3dadd( -137.894, -113.893, -2.01084, 1.33 ) }
    dend_47 { pt3dadd( -138.143, -114.928, -1.95868, 1.03 ) }
    dend_47 { pt3dadd( -138.369, -115.798, -1.90604, 0.74 ) }
    dend_47 { pt3dadd( -138.585, -116.546, -1.87824, 0.37 ) }
    dend_47 { pt3dadd( -138.87, -117.548, -1.78894, 0.74 ) }
    dend_47 { pt3dadd( -139.042, -118.13, -1.72116, 0.74 ) }
    dend_47 { pt3dadd( -139.243, -118.827, -1.68539, 0.59 ) }
    dend_47 { pt3dadd( -139.379, -119.346, -1.69721, 0.37 ) }
    dend_47 { pt3dadd( -139.56, -120.08, -1.78818, 0.37 ) }
    dend_47 { pt3dadd( -139.878, -121.24, -2.07906, 0.66 ) }
    dend_47 { pt3dadd( -140.137, -122.032, -2.37051, 0.74 ) }
    dend_47 { pt3dadd( -140.638, -123.343, -2.94131, 0.52 ) }
    dend_47 { pt3dadd( -140.86, -123.88, -3.20429, 0.52 ) }
    dend_47 { pt3dadd( -141.168, -124.513, -3.52453, 1.33 ) }
    dend_47 { pt3dadd( -141.574, -125.294, -3.94121, 1.55 ) }
    dend_47 { pt3dadd( -142.11, -126.326, -4.46469, 1.99 ) }
    dend_47 { pt3dadd( -142.44, -126.959, -4.73137, 2.21 ) }
    dend_47 { pt3dadd( -142.875, -127.764, -5.00471, 1.99 ) }
    dend_47 { pt3dadd( -143.425, -128.737, -5.32297, 1.11 ) }
    dend_47 { pt3dadd( -144.018, -129.848, -5.7051, 0.37 ) }
    dend_47 { pt3dadd( -144.466, -130.796, -6.04537, 1.11 ) }
    dend_47 { pt3dadd( -144.675, -131.274, -6.22617, 1.25 ) }
    dend_47 { pt3dadd( -144.939, -131.891, -6.46051, 1.25 ) }
    dend_47 { pt3dadd( -145.54, -133.239, -7.00948, 0.29 ) }
    dend_47 { pt3dadd( -145.933, -134.09, -7.37725, 0.29 ) }
    dend_47 { pt3dadd( -146.329, -134.869, -7.71057, 0.44 ) }
    dend_47 { pt3dadd( -146.758, -135.674, -8.05881, 0.59 ) }
    dend_47 { pt3dadd( -147.271, -136.628, -8.45719, 0.88 ) }
    dend_47 { pt3dadd( -147.7, -137.426, -8.77342, 0.96 ) }
    dend_47 { pt3dadd( -148.159, -138.2, -9.04718, 0.66 ) }
    dend_47 { pt3dadd( -148.769, -139.138, -9.31474, 0.37 ) }
    dend_47 { pt3dadd( -149.231, -139.81, -9.48599, 0.29 ) }
    dend_47 { pt3dadd( -149.732, -140.525, -9.623, 0.29 ) }
    dend_47 { pt3dadd( -150.161, -141.16, -9.71482, 0.29 ) }
    dend_47 { pt3dadd( -150.746, -142.028, -9.79878, 0.29 ) }
    dend_47 { pt3dadd( -151.626, -143.222, -9.89055, 0.74 ) }
    dend_47 { pt3dadd( -152.301, -144.062, -9.89911, 1.03 ) }
    dend_47 { pt3dadd( -153.134, -145.05, -9.85809, 2.28 ) }
    dend_47 { pt3dadd( -153.787, -145.775, -9.79311, 2.8 ) }
    dend_47 { pt3dadd( -154.415, -146.463, -9.72639, 3.09 ) }
    dend_47 { pt3dadd( -155.429, -147.605, -9.63565, 1.84 ) }
    dend_47 { pt3dadd( -156.604, -148.911, -9.53522, 0.29 ) }
    dend_47 { pt3dadd( -157.179, -149.585, -9.49147, 0.29 ) }
    dend_47 { pt3dadd( -157.934, -150.539, -9.46531, 0.29 ) }
    dend_47 { pt3dadd( -158.69, -151.585, -9.456, 0.29 ) }
    dend_47 { pt3dadd( -159.2, -152.45, -9.47554, 0.88 ) }
    dend_47 { pt3dadd( -159.591, -153.225, -9.51528, 1.11 ) }
    dend_47 { pt3dadd( -159.902, -153.883, -9.58081, 0.81 ) }
    dend_47 { pt3dadd( -160.15, -154.452, -9.64123, 0.52 ) }
    dend_47 { pt3dadd( -160.527, -155.409, -9.75076, 0.29 ) }
    dend_47 { pt3dadd( -160.943, -156.546, -9.8784, 0.29 ) }
    dend_47 { pt3dadd( -161.275, -157.519, -9.99142, 0.29 ) }
    dend_47 { pt3dadd( -161.461, -158.044, -10.0515, 0.29 ) }
    dend_47 { pt3dadd( -161.815, -159.091, -10.1739, 0.81 ) }
    dend_47 { pt3dadd( -162.113, -160.063, -10.2928, 1.11 ) }
    dend_47 { pt3dadd( -162.323, -160.825, -10.391, 0.88 ) }
    dend_47 { pt3dadd( -162.618, -161.907, -10.5339, 0.29 ) }
    dend_47 { pt3dadd( -162.97, -163.226, -10.7071, 0.29 ) }
    dend_47 { pt3dadd( -163.329, -164.393, -10.8928, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_47 { pt3dadd( -163.471, -164.816, -10.9689, 0.29 ) }
    dend_47 { pt3dadd( -163.812, -165.818, -11.1748, 0.74 ) }
    dend_47 { pt3dadd( -164.063, -166.53, -11.3382, 0.74 ) }
    dend_47 { pt3dadd( -164.407, -167.53, -11.587, 0.44 ) }
    dend_47 { pt3dadd( -164.797, -168.688, -11.8949, 0.29 ) }
    dend_47 { pt3dadd( -164.999, -169.261, -12.0517, 0.29 ) }
    dend_47 { pt3dadd( -165.261, -170.068, -12.2433, 0.29 ) }
    dend_47 { pt3dadd( -165.517, -171.052, -12.4412, 0.29 ) }
    dend_47 { pt3dadd( -165.634, -171.629, -12.5269, 0.74 ) }
    dend_47 { pt3dadd( -165.729, -172.172, -12.5781, 0.74 ) }
    dend_47 { pt3dadd( -165.879, -173.168, -12.6107, 0.44 ) }
    dend_47 { pt3dadd( -166.064, -174.3, -12.6235, 0.29 ) }
    dend_47 { pt3dadd( -166.229, -175.289, -12.5982, 0.74 ) }
    dend_47 { pt3dadd( -166.351, -175.985, -12.5712, 1.11 ) }
    dend_47 { pt3dadd( -166.475, -176.572, -12.5463, 1.69 ) }
    dend_47 { pt3dadd( -166.585, -177.062, -12.5298, 1.92 ) }
    dend_47 { pt3dadd( -166.751, -177.768, -12.5226, 1.92 ) }
    dend_47 { pt3dadd( -166.995, -178.819, -12.5583, 1.62 ) }
    dend_47 { pt3dadd( -167.296, -180.085, -12.6267, 0.29 ) }
    dend_47 { pt3dadd( -167.532, -181.093, -12.7025, 0.22 ) }
    dend_47 { pt3dadd( -167.747, -181.923, -12.7719, 0.22 ) }
    dend_47 { pt3dadd( -168.058, -183.039, -12.8835, 0.59 ) }
    dend_47 { pt3dadd( -168.339, -183.959, -12.9908, 0.74 ) }
    dend_47 { pt3dadd( -168.557, -184.6, -13.067, 0.74 ) }
    dend_47 { pt3dadd( -168.862, -185.425, -13.1505, 0.44 ) }
    dend_47 { pt3dadd( -169.156, -186.126, -13.2096, 0.29 ) }
    dend_47 { pt3dadd( -169.501, -186.834, -13.2284, 0.29 ) }
    dend_47 { pt3dadd( -170.313, -188.273, -13.1702, 0.44 ) }
    dend_47 { pt3dadd( -170.793, -189.014, -13.1229, 0.59 ) }
    dend_47 { pt3dadd( -171.28, -189.701, -13.0735, 0.59 ) }
    dend_47 { pt3dadd( -171.864, -190.479, -13.0386, 0.52 ) }
    dend_47 { pt3dadd( -172.772, -191.632, -13.0194, 1.33 ) }
    dend_47 { pt3dadd( -173.532, -192.553, -13.034, 2.06 ) }
    dend_47 { pt3dadd( -174.252, -193.432, -13.0893, 2.21 ) }
    dend_47 { pt3dadd( -174.783, -194.125, -13.1767, 2.21 ) }
    dend_47 { pt3dadd( -175.564, -195.24, -13.3863, 0.81 ) }
    dend_47 { pt3dadd( -176.049, -196.034, -13.5968, 0.29 ) }
    dend_47 { pt3dadd( -176.429, -196.743, -13.8392, 0.44 ) }
    dend_47 { pt3dadd( -176.669, -197.28, -14.0398, 0.44 ) }
    dend_47 { pt3dadd( -176.975, -198.071, -14.3352, 0.29 ) }
    dend_47 { pt3dadd( -177.206, -198.66, -14.571, 0.29 ) }
    dend_47 { pt3dadd( -177.497, -199.391, -14.862, 0.29 ) }
    dend_47 { pt3dadd( -177.711, -199.868, -15.0442, 0.74 ) }
    dend_47 { pt3dadd( -177.932, -200.307, -15.185, 0.88 ) }
    dend_47 { pt3dadd( -178.215, -200.831, -15.3217, 0.88 ) }
    dend_47 { pt3dadd( -178.667, -201.698, -15.4931, 0.29 ) }
    dend_47 { pt3dadd( -179.107, -202.584, -15.5991, 0.29 ) }
    dend_47 { pt3dadd( -179.501, -203.505, -15.636, 0.29 ) }
    dend_47 { pt3dadd( -179.918, -204.633, -15.6382, 0.52 ) }
    dend_47 { pt3dadd( -180.1, -205.169, -15.622, 0.52 ) }
    dend_47 { pt3dadd( -180.395, -206.159, -15.5583, 0.29 ) }
    dend_47 { pt3dadd( -180.553, -206.856, -15.4816, 0.29 ) }
    dend_47 { pt3dadd( -180.778, -208.287, -15.2805, 0.59 ) }
    dend_47 { pt3dadd( -180.873, -209.109, -15.137, 0.29 ) }
    dend_47 { pt3dadd( -180.935, -209.657, -15.0147, 0.29 ) }
    dend_47 { pt3dadd( -181.049, -210.423, -14.8, 0.74 ) }
    dend_47 { pt3dadd( -181.3, -211.442, -14.4374, 0.88 ) }
    dend_47 { pt3dadd( -181.59, -212.208, -14.1177, 0.29 ) }
    dend_47 { pt3dadd( -181.953, -212.913, -13.7772, 0.29 ) }
    dend_47 { pt3dadd( -182.497, -213.785, -13.3489, 0.96 ) }
    dend_47 { pt3dadd( -182.966, -214.46, -13.0508, 1.11 ) }
    dend_47 { pt3dadd( -183.589, -215.282, -12.7722, 1.11 ) }
    dend_47 { pt3dadd( -184.274, -216.192, -12.5622, 0.29 ) }
    dend_47 { pt3dadd( -184.724, -216.856, -12.4696, 0.22 ) }
    dend_47 { pt3dadd( -185.09, -217.503, -12.4515, 0.44 ) }
    dend_47 { pt3dadd( -185.445, -218.252, -12.5015, 0.44 ) }
    dend_47 { pt3dadd( -185.944, -219.487, -12.6969, 0.22 ) }
    dend_47 { pt3dadd( -186.23, -220.245, -12.8702, 0.22 ) }
    dend_47 { pt3dadd( -186.431, -220.799, -13.0352, 0.22 ) }
    dend_47 { pt3dadd( -186.663, -221.421, -13.2449, 0.59 ) }
    dend_47 { pt3dadd( -186.83, -221.867, -13.3998, 0.74 ) }
    dend_47 { pt3dadd( -187.343, -223.17, -13.8894, 0.29 ) }
    dend_47 { pt3dadd( -187.623, -223.857, -14.1616, 0.29 ) }
    dend_47 { pt3dadd( -187.981, -224.71, -14.5076, 0.44 ) }
    dend_47 { pt3dadd( -188.309, -225.527, -14.8419, 0.44 ) }
    dend_47 { pt3dadd( -188.721, -226.616, -15.2721, 0.52 ) }
    dend_47 { pt3dadd( -188.952, -227.242, -15.506, 0.96 ) }
    dend_47 { pt3dadd( -189.186, -227.872, -15.7181, 1.4 ) }
    dend_47 { pt3dadd( -189.446, -228.51, -15.9272, 1.4 ) }
    dend_47 { pt3dadd( -190.096, -230.011, -16.3089, 0.29 ) }
    dend_47 { pt3dadd( -190.762, -231.494, -16.5827, 0.22 ) }
    dend_47 { pt3dadd( -191.1, -232.231, -16.6627, 0.37 ) }
    dend_47 { pt3dadd( -191.645, -233.421, -16.708, 0.37 ) }
    dend_47 { pt3dadd( -192.196, -234.604, -16.6845, 0.29 ) }
    dend_47 { pt3dadd( -192.95, -236.167, -16.5671, 0.74 ) }
    dend_47 { pt3dadd( -193.364, -236.973, -16.4596, 1.11 ) }
    dend_47 { pt3dadd( -193.846, -237.828, -16.3197, 1.25 ) }
    dend_47 { pt3dadd( -194.361, -238.666, -16.1802, 1.11 ) }
    dend_47 { pt3dadd( -194.867, -239.429, -16.0625, 0.59 ) }
    dend_47 { pt3dadd( -195.544, -240.397, -15.9541, 0.29 ) }
    dend_47 { pt3dadd( -195.964, -240.961, -15.9544, 0.29 ) }
    dend_47 { pt3dadd( -196.763, -242.024, -16.0068, 0.22 ) }
    dend_47 { pt3dadd( -197.297, -242.744, -16.0681, 0.22 ) }
    dend_47 { pt3dadd( -197.595, -243.154, -16.1088, 0.66 ) }
    dend_47 { pt3dadd( -198.055, -243.797, -16.1746, 0.66 ) }
    dend_47 { pt3dadd( -198.981, -245.145, -16.2902, 0.29 ) }
    dend_47 { pt3dadd( -199.54, -245.961, -16.3447, 0.29 ) }
    dend_47 { pt3dadd( -200.127, -246.778, -16.3821, 0.29 ) }
    dend_47 { pt3dadd( -200.744, -247.583, -16.4091, 0.66 ) }
    dend_47 { pt3dadd( -201.24, -248.195, -16.426, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_47 { pt3dadd( -202.042, -249.135, -16.4497, 0.22 ) }
    dend_47 { pt3dadd( -202.596, -249.763, -16.4692, 0.22 ) }
    dend_47 { pt3dadd( -203.532, -250.81, -16.5161, 0.22 ) }
    dend_47 { pt3dadd( -205.178, -252.651, -16.6547, 0.22 ) }
    dend_47 { pt3dadd( -205.676, -253.238, -16.7324, 0.22 ) }
    dend_47 { pt3dadd( -206.199, -253.9, -16.857, 1.11 ) }
    dend_47 { pt3dadd( -206.485, -254.304, -16.9648, 1.11 ) }
    dend_47 { pt3dadd( -206.621, -254.538, -17.0395, 1.11 ) }
    dend_47 { pt3dadd( -206.899, -255.148, -17.2607, 0.66 ) }
    dend_47 { pt3dadd( -207.254, -256.154, -17.6683, 0.22 ) }
    dend_47 { pt3dadd( -207.428, -256.773, -17.9241, 0.52 ) }
    dend_47 { pt3dadd( -207.719, -258.2, -18.5207, 0.22 ) }
    dend_47 { pt3dadd( -207.946, -259.364, -18.9975, 0.22 ) }
    dend_47 { pt3dadd( -208.041, -259.863, -19.1961, 0.59 ) }
    dend_47 { pt3dadd( -208.161, -260.5, -19.4386, 0.59 ) }
    dend_47 { pt3dadd( -208.332, -261.423, -19.7917, 0.52 ) }
    dend_47 { pt3dadd( -208.57, -262.78, -20.3215, 0.22 ) }
    dend_47 { pt3dadd( -208.693, -263.575, -20.6388, 0.22 ) }
    dend_47 { pt3dadd( -208.748, -264.049, -20.8317, 0.22 ) }
    dend_47 { pt3dadd( -208.799, -264.587, -21.0544, 0.66 ) }
    dend_47 { pt3dadd( -208.826, -265.378, -21.3347, 0.81 ) }
    dend_47 { pt3dadd( -208.767, -266.27, -21.5866, 0.59 ) }
    dend_47 { pt3dadd( -208.476, -267.596, -21.8266, 1.25 ) }
    dend_47 { pt3dadd( -208.201, -268.319, -21.9045, 1.69 ) }
    dend_47 { pt3dadd( -207.997, -268.685, -21.9197, 1.92 ) }
    dend_47 { pt3dadd( -207.075, -269.896, -21.8944, 1.18 ) }
    dend_47 { pt3dadd( -206.136, -270.842, -21.7967, 0.22 ) }
    dend_47 { pt3dadd( -205.0, -271.737, -21.6549, 0.22 ) }
    dend_47 { pt3dadd( -204.217, -272.245, -21.5551, 0.22 ) }
    dend_47 { pt3dadd( -203.231, -272.817, -21.4603, 0.22 ) }
    dend_47 { pt3dadd( -202.521, -273.205, -21.4238, 0.66 ) }
    dend_47 { pt3dadd( -201.999, -273.482, -21.4371, 0.66 ) }
    dend_47 { pt3dadd( -200.595, -274.22, -21.5383, 0.22 ) }
    dend_47 { pt3dadd( -200.064, -274.504, -21.5993, 0.37 ) }
    dend_47 { pt3dadd( -199.53, -274.847, -21.6782, 0.37 ) }
    dend_47 { pt3dadd( -199.102, -275.182, -21.7471, 0.22 ) }
    dend_47 { pt3dadd( -198.458, -275.763, -21.8634, 0.22 ) }
    dend_47 { pt3dadd( -202.742, -285.262, -23.0751, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 38/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -136.705, -96.0066, 2.58295, 0.37 ) }
    dend_46 { pt3dadd( -137.544, -95.8354, 2.83931, 0.37 ) }
    dend_46 { pt3dadd( -137.901, -95.7777, 2.92944, 0.37 ) }
    dend_46 { pt3dadd( -138.672, -95.6781, 3.06763, 0.29 ) }
    dend_46 { pt3dadd( -139.262, -95.6209, 3.14946, 0.44 ) }
    dend_46 { pt3dadd( -139.835, -95.5827, 3.21266, 0.66 ) }
    dend_46 { pt3dadd( -140.166, -95.5692, 3.23831, 0.81 ) }
    dend_46 { pt3dadd( -140.455, -95.5671, 3.24295, 0.81 ) }
    dend_46 { pt3dadd( -141.361, -95.5836, 3.21435, 0.22 ) }
    dend_46 { pt3dadd( -141.647, -95.5942, 3.18979, 0.22 ) }
    dend_46 { pt3dadd( -142.161, -95.616, 3.14416, 0.74 ) }
    dend_46 { pt3dadd( -142.584, -95.6324, 3.10352, 0.88 ) }
    dend_46 { pt3dadd( -143.289, -95.6611, 3.01577, 0.22 ) }
    dend_46 { pt3dadd( -143.582, -95.6658, 2.95592, 0.22 ) }
    dend_46 { pt3dadd( -143.857, -95.6698, 2.87816, 0.22 ) }
    dend_46 { pt3dadd( -144.171, -95.6776, 2.77106, 0.74 ) }
    dend_46 { pt3dadd( -144.507, -95.7005, 2.63232, 0.88 ) }
    dend_46 { pt3dadd( -144.88, -95.7589, 2.42949, 0.88 ) }
    dend_46 { pt3dadd( -145.715, -95.9812, 1.85428, 0.22 ) }
    dend_46 { pt3dadd( -146.013, -96.0807, 1.62304, 0.22 ) }
    dend_46 { pt3dadd( -146.259, -96.1702, 1.41405, 0.74 ) }
    dend_46 { pt3dadd( -146.573, -96.2981, 1.10089, 0.74 ) }
    dend_46 { pt3dadd( -147.221, -96.5784, 0.497878, 0.29 ) }
    dend_46 { pt3dadd( -147.422, -96.6674, 0.324769, 0.29 ) }
    dend_46 { pt3dadd( -147.749, -96.8158, 0.067215, 0.88 ) }
    dend_46 { pt3dadd( -148.138, -96.9734, -0.216944, 1.03 ) }
    dend_46 { pt3dadd( -149.308, -97.3748, -1.00566, 0.22 ) }
    dend_46 { pt3dadd( -150.415, -97.7181, -1.69091, 0.22 ) }
    dend_46 { pt3dadd( -150.86, -97.8413, -1.93179, 0.22 ) }
    dend_46 { pt3dadd( -151.123, -97.9105, -2.06487, 1.11 ) }
    dend_46 { pt3dadd( -151.44, -97.9961, -2.21303, 1.11 ) }
    dend_46 { pt3dadd( -151.777, -98.0863, -2.33881, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 70/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -24.2361, -180.697, -3.16236, 0.81 ) }
    dend_40 { pt3dadd( -23.037, -181.344, -3.58042, 0.81 ) }
    dend_40 { pt3dadd( -22.0696, -181.807, -3.93249, 0.52 ) }
    dend_40 { pt3dadd( -20.6937, -182.414, -4.45159, 0.52 ) }
    dend_40 { pt3dadd( -20.0941, -182.688, -4.68414, 0.37 ) }
    dend_40 { pt3dadd( -18.898, -183.253, -5.15537, 0.37 ) }
    dend_40 { pt3dadd( -18.4234, -183.485, -5.34373, 0.66 ) }
    dend_40 { pt3dadd( -18.0038, -183.693, -5.5267, 0.88 ) }
    dend_40 { pt3dadd( -17.6543, -183.87, -5.67535, 0.88 ) }
    dend_40 { pt3dadd( -16.7627, -184.418, -6.05889, 0.59 ) }
    dend_40 { pt3dadd( -15.9734, -185.012, -6.40165, 0.66 ) }
    dend_40 { pt3dadd( -15.1881, -185.694, -6.74154, 0.74 ) }
    dend_40 { pt3dadd( -14.7074, -186.108, -6.94793, 0.74 ) }
    dend_40 { pt3dadd( -14.3333, -186.405, -7.10627, 0.52 ) }
    dend_40 { pt3dadd( -13.7225, -186.834, -7.36469, 0.29 ) }
    dend_40 { pt3dadd( -13.0654, -187.198, -7.62721, 0.96 ) }
    dend_40 { pt3dadd( -12.4643, -187.477, -7.85363, 1.03 ) }
    dend_40 { pt3dadd( -12.065, -187.645, -7.99262, 1.03 ) }
    dend_40 { pt3dadd( -11.1511, -188.009, -8.2853, 0.66 ) }
    dend_40 { pt3dadd( -10.7676, -188.166, -8.40998, 0.52 ) }
    dend_40 { pt3dadd( -9.88744, -188.541, -8.69907, 0.59 ) }
    dend_40 { pt3dadd( -9.01695, -188.964, -8.98911, 0.59 ) }
    dend_40 { pt3dadd( -8.2192, -189.408, -9.26356, 0.52 ) }
    dend_40 { pt3dadd( -7.56215, -189.824, -9.49931, 0.52 ) }
    dend_40 { pt3dadd( -6.87707, -190.304, -9.75604, 0.96 ) }
    dend_40 { pt3dadd( -6.45344, -190.61, -9.92915, 1.18 ) }
    dend_40 { pt3dadd( -5.7572, -191.104, -10.2377, 0.66 ) }
    dend_40 { pt3dadd( -4.9369, -191.638, -10.6079, 0.37 ) }
    dend_40 { pt3dadd( -4.42395, -191.939, -10.8423, 0.37 ) }
    dend_40 { pt3dadd( -3.36199, -192.496, -11.3317, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_40 { pt3dadd( -2.41399, -192.969, -11.7379, 1.03 ) }
    dend_40 { pt3dadd( -1.68975, -193.33, -12.0348, 0.81 ) }
    dend_40 { pt3dadd( -1.01738, -193.663, -12.2919, 0.52 ) }
    dend_40 { pt3dadd( -0.222247, -194.058, -12.5734, 0.52 ) }
    dend_40 { pt3dadd( 0.404788, -194.381, -12.7751, 0.52 ) }
    dend_40 { pt3dadd( 1.27492, -194.895, -13.0309, 0.52 ) }
    dend_40 { pt3dadd( 2.01196, -195.384, -13.2293, 1.33 ) }
    dend_40 { pt3dadd( 2.4731, -195.723, -13.3489, 1.69 ) }
    dend_40 { pt3dadd( 3.00238, -196.164, -13.4822, 1.69 ) }
    dend_40 { pt3dadd( 3.86294, -196.948, -13.7711, 1.11 ) }
    dend_40 { pt3dadd( 4.77593, -197.815, -14.1533, 0.44 ) }
    dend_40 { pt3dadd( 5.35075, -198.351, -14.4575, 0.44 ) }
    dend_40 { pt3dadd( 5.80692, -198.766, -14.7359, 0.29 ) }
    dend_40 { pt3dadd( 6.31399, -199.218, -15.0998, 0.29 ) }
    dend_40 { pt3dadd( 7.4423, -200.184, -16.004, 1.03 ) }
    dend_40 { pt3dadd( 7.76508, -200.447, -16.2898, 1.4 ) }
    dend_40 { pt3dadd( 8.1066, -200.734, -16.6227, 1.4 ) }
    dend_40 { pt3dadd( 9.17529, -201.742, -17.7516, 0.22 ) }
    dend_40 { pt3dadd( 9.73876, -202.306, -18.3562, 0.52 ) }
    dend_40 { pt3dadd( 10.0174, -202.598, -18.6484, 0.52 ) }
    dend_40 { pt3dadd( 10.4997, -203.151, -19.1324, 0.29 ) }
    dend_40 { pt3dadd( 11.1716, -203.954, -19.8165, 0.29 ) }
    dend_40 { pt3dadd( 11.586, -204.452, -20.2255, 0.29 ) }
    dend_40 { pt3dadd( 12.0026, -204.984, -20.6441, 0.66 ) }
    dend_40 { pt3dadd( 12.316, -205.384, -20.9284, 0.81 ) }
    dend_40 { pt3dadd( 12.5462, -205.676, -21.1262, 0.81 ) }
    dend_40 { pt3dadd( 12.9415, -206.133, -21.4284, 0.59 ) }
    dend_40 { pt3dadd( 13.3963, -206.598, -21.7552, 0.29 ) }
    dend_40 { pt3dadd( 13.8366, -207.062, -22.0409, 0.29 ) }
    dend_40 { pt3dadd( 14.3368, -207.671, -22.3337, 0.66 ) }
    dend_40 { pt3dadd( 14.7233, -208.212, -22.5144, 0.66 ) }
    dend_40 { pt3dadd( 15.2414, -209.05, -22.6856, 0.29 ) }
    dend_40 { pt3dadd( 15.5352, -209.594, -22.7353, 0.29 ) }
    dend_40 { pt3dadd( 16.0288, -210.593, -22.7484, 0.66 ) }
    dend_40 { pt3dadd( 16.3712, -211.304, -22.7092, 0.66 ) }
    dend_40 { pt3dadd( 16.7953, -212.237, -22.601, 0.44 ) }
    dend_40 { pt3dadd( 17.1934, -213.19, -22.4463, 1.47 ) }
    dend_40 { pt3dadd( 17.4859, -213.96, -22.2981, 1.84 ) }
    dend_40 { pt3dadd( 17.6458, -214.412, -22.2082, 1.84 ) }
    dend_40 { pt3dadd( 17.7382, -214.692, -22.1644, 1.84 ) }
    dend_40 { pt3dadd( 17.9787, -215.407, -22.0674, 1.33 ) }
    dend_40 { pt3dadd( 18.2878, -216.268, -21.9761, 0.52 ) }
    dend_40 { pt3dadd( 18.4579, -216.721, -21.9359, 0.52 ) }
    dend_40 { pt3dadd( 18.6921, -217.336, -21.8835, 0.52 ) }
    dend_40 { pt3dadd( 19.069, -218.319, -21.7913, 0.29 ) }
    dend_40 { pt3dadd( 19.2708, -218.827, -21.7391, 0.29 ) }
    dend_40 { pt3dadd( 19.5789, -219.552, -21.6533, 0.29 ) }
    dend_40 { pt3dadd( 19.8831, -220.22, -21.5663, 0.44 ) }
    dend_40 { pt3dadd( 20.3428, -221.118, -21.4577, 0.44 ) }
    dend_40 { pt3dadd( 20.7705, -221.847, -21.397, 0.44 ) }
    dend_40 { pt3dadd( 21.1016, -222.354, -21.3836, 1.33 ) }
    dend_40 { pt3dadd( 21.4838, -222.934, -21.4071, 1.84 ) }
    dend_40 { pt3dadd( 21.8558, -223.446, -21.4611, 1.84 ) }
    dend_40 { pt3dadd( 22.4856, -224.238, -21.5824, 0.96 ) }
    dend_40 { pt3dadd( 23.3149, -225.203, -21.7756, 0.22 ) }
    dend_40 { pt3dadd( 24.023, -225.981, -21.9618, 0.22 ) }
    dend_40 { pt3dadd( 25.0273, -227.026, -22.2538, 0.22 ) }
    dend_40 { pt3dadd( 25.6357, -227.611, -22.4398, 0.22 ) }
    dend_40 { pt3dadd( 26.3304, -228.21, -22.659, 0.22 ) }
    dend_40 { pt3dadd( 26.9445, -228.69, -22.8674, 0.44 ) }
    dend_40 { pt3dadd( 27.6756, -229.213, -23.1394, 0.88 ) }
    dend_40 { pt3dadd( 28.3747, -229.693, -23.4312, 1.03 ) }
    dend_40 { pt3dadd( 28.83, -230.004, -23.6331, 1.03 ) }
    dend_40 { pt3dadd( 29.3582, -230.393, -23.8764, 0.88 ) }
    dend_40 { pt3dadd( 29.8853, -230.76, -24.1257, 0.29 ) }
    dend_40 { pt3dadd( 30.2691, -231.007, -24.294, 0.29 ) }
    dend_40 { pt3dadd( 30.8684, -231.353, -24.5165, 0.29 ) }
    dend_40 { pt3dadd( 31.6349, -231.753, -24.7583, 0.37 ) }
    dend_40 { pt3dadd( 32.2226, -232.029, -24.9078, 0.37 ) }
    dend_40 { pt3dadd( 32.7455, -232.247, -25.0157, 0.29 ) }
    dend_40 { pt3dadd( 33.7612, -232.612, -25.1837, 0.29 ) }
    dend_40 { pt3dadd( 34.5589, -232.875, -25.3116, 0.81 ) }
    dend_40 { pt3dadd( 35.0053, -233.022, -25.3887, 0.81 ) }
    dend_40 { pt3dadd( 35.8621, -233.352, -25.5377, 0.59 ) }
    dend_40 { pt3dadd( 36.4863, -233.662, -25.6348, 0.29 ) }
    dend_40 { pt3dadd( 37.021, -233.981, -25.7067, 0.29 ) }
    dend_40 { pt3dadd( 37.5813, -234.36, -25.769, 0.66 ) }
    dend_40 { pt3dadd( 37.9958, -234.657, -25.7971, 0.66 ) }
    dend_40 { pt3dadd( 39.2346, -235.571, -25.8233, 0.29 ) }
    dend_40 { pt3dadd( 40.0244, -236.147, -25.7903, 0.29 ) }
    dend_40 { pt3dadd( 40.8483, -236.747, -25.6898, 0.29 ) }
    dend_40 { pt3dadd( 41.476, -237.209, -25.5661, 0.29 ) }
    dend_40 { pt3dadd( 42.102, -237.662, -25.3968, 0.88 ) }
    dend_40 { pt3dadd( 42.3849, -237.864, -25.3154, 0.88 ) }
    dend_40 { pt3dadd( 43.1419, -238.406, -25.0675, 0.66 ) }
    dend_40 { pt3dadd( 44.1851, -239.14, -24.6798, 0.29 ) }
    dend_40 { pt3dadd( 44.7239, -239.527, -24.4546, 0.29 ) }
    dend_40 { pt3dadd( 45.3599, -239.999, -24.1838, 0.66 ) }
    dend_40 { pt3dadd( 45.8897, -240.412, -23.9828, 0.44 ) }
    dend_40 { pt3dadd( 53.1964, -246.614, -24.3472, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 90/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -24.2361, -180.697, -3.16236, 2.14 ) }
    dend_35 { pt3dadd( -24.8208, -182.207, -3.46635, 2.14 ) }
    dend_35 { pt3dadd( -25.3007, -183.584, -3.70961, 1.33 ) }
    dend_35 { pt3dadd( -25.7321, -184.94, -3.91638, 1.03 ) }
    dend_35 { pt3dadd( -26.0127, -185.971, -4.04502, 1.03 ) }
    dend_35 { pt3dadd( -26.1882, -186.673, -4.12423, 1.25 ) }
    dend_35 { pt3dadd( -26.3525, -187.36, -4.19586, 1.25 ) }
    dend_35 { pt3dadd( -26.5946, -188.659, -4.29805, 0.96 ) }
    dend_35 { pt3dadd( -26.7686, -189.711, -4.34899, 0.96 ) }
    dend_35 { pt3dadd( -27.0885, -191.556, -4.42114, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( -27.283, -192.643, -4.43981, 0.88 ) }
    dend_35 { pt3dadd( -27.4424, -193.673, -4.43839, 0.96 ) }
    dend_35 { pt3dadd( -27.5902, -194.849, -4.41568, 0.96 ) }
    dend_35 { pt3dadd( -27.6969, -195.854, -4.37177, 0.74 ) }
    dend_35 { pt3dadd( -27.785, -196.822, -4.31004, 0.52 ) }
    dend_35 { pt3dadd( -27.8497, -197.626, -4.24041, 0.52 ) }
    dend_35 { pt3dadd( -27.9218, -198.613, -4.13689, 0.37 ) }
    dend_35 { pt3dadd( -27.9759, -199.399, -4.05122, 0.74 ) }
    dend_35 { pt3dadd( -28.0516, -200.254, -3.95715, 0.74 ) }
    dend_35 { pt3dadd( -28.1481, -201.216, -3.83968, 1.03 ) }
    dend_35 { pt3dadd( -28.2205, -201.827, -3.76168, 1.18 ) }
    dend_35 { pt3dadd( -28.3329, -202.673, -3.66138, 1.33 ) }
    dend_35 { pt3dadd( -28.4334, -203.31, -3.58425, 1.33 ) }
    dend_35 { pt3dadd( -28.5323, -203.989, -3.46716, 1.18 ) }
    dend_35 { pt3dadd( -28.6784, -204.979, -3.19091, 0.96 ) }
    dend_35 { pt3dadd( -28.7932, -205.735, -2.89636, 0.81 ) }
    dend_35 { pt3dadd( -28.9022, -206.498, -2.53884, 0.81 ) }
    dend_35 { pt3dadd( -28.9948, -207.336, -2.10069, 0.81 ) }
    dend_35 { pt3dadd( -29.0632, -208.07, -1.70563, 0.59 ) }
    dend_35 { pt3dadd( -29.1562, -209.282, -1.07842, 0.66 ) }
    dend_35 { pt3dadd( -29.2142, -209.799, -0.839052, 0.66 ) }
    dend_35 { pt3dadd( -29.3772, -210.725, -0.504721, 1.18 ) }
    dend_35 { pt3dadd( -29.6593, -211.678, -0.320419, 1.47 ) }
    dend_35 { pt3dadd( -30.0116, -212.499, -0.299517, 1.55 ) }
    dend_35 { pt3dadd( -30.3601, -213.095, -0.368446, 1.55 ) }
    dend_35 { pt3dadd( -30.9528, -213.895, -0.544631, 1.4 ) }
    dend_35 { pt3dadd( -31.7954, -214.819, -0.784183, 1.18 ) }
    dend_35 { pt3dadd( -32.8148, -215.793, -1.05462, 0.66 ) }
    dend_35 { pt3dadd( -33.6713, -216.555, -1.25883, 0.74 ) }
    dend_35 { pt3dadd( -34.793, -217.51, -1.49163, 1.18 ) }
    dend_35 { pt3dadd( -35.7288, -218.277, -1.64148, 1.25 ) }
    dend_35 { pt3dadd( -36.7194, -219.065, -1.74096, 1.25 ) }
    dend_35 { pt3dadd( -37.5681, -219.718, -1.76285, 1.25 ) }
    dend_35 { pt3dadd( -38.4369, -220.324, -1.73725, 1.33 ) }
    dend_35 { pt3dadd( -38.9418, -220.629, -1.69327, 1.33 ) }
    dend_35 { pt3dadd( -39.7641, -221.042, -1.55245, 1.03 ) }
    dend_35 { pt3dadd( -40.4789, -221.335, -1.37392, 0.74 ) }
    dend_35 { pt3dadd( -41.0518, -221.533, -1.20513, 0.59 ) }
    dend_35 { pt3dadd( -41.8078, -221.794, -0.959357, 0.59 ) }
    dend_35 { pt3dadd( -42.5637, -222.097, -0.698853, 0.88 ) }
    dend_35 { pt3dadd( -43.318, -222.51, -0.40643, 1.18 ) }
    dend_35 { pt3dadd( -44.0233, -223.017, -0.0815704, 1.18 ) }
    dend_35 { pt3dadd( -44.6449, -223.56, 0.244985, 1.18 ) }
    dend_35 { pt3dadd( -45.2275, -224.165, 0.565014, 1.18 ) }
    dend_35 { pt3dadd( -45.6753, -224.694, 0.809926, 1.18 ) }
    dend_35 { pt3dadd( -46.2957, -225.507, 1.14334, 0.81 ) }
    dend_35 { pt3dadd( -46.6675, -226.045, 1.33491, 0.59 ) }
    dend_35 { pt3dadd( -47.0098, -226.609, 1.5008, 0.52 ) }
    dend_35 { pt3dadd( -47.6653, -227.81, 1.78886, 0.96 ) }
    dend_35 { pt3dadd( -48.0432, -228.616, 1.93455, 1.18 ) }
    dend_35 { pt3dadd( -48.3581, -229.367, 2.03223, 1.18 ) }
    dend_35 { pt3dadd( -48.7614, -230.392, 2.11542, 0.88 ) }
    dend_35 { pt3dadd( -49.1518, -231.425, 2.16652, 0.59 ) }
    dend_35 { pt3dadd( -49.4727, -232.355, 2.20104, 0.59 ) }
    dend_35 { pt3dadd( -49.8236, -233.438, 2.23856, 0.59 ) }
    dend_35 { pt3dadd( -50.1507, -234.449, 2.27506, 0.74 ) }
    dend_35 { pt3dadd( -50.5321, -235.58, 2.31889, 1.33 ) }
    dend_35 { pt3dadd( -50.8753, -236.562, 2.35877, 1.69 ) }
    dend_35 { pt3dadd( -51.3155, -237.775, 2.4094, 1.77 ) }
    dend_35 { pt3dadd( -51.5677, -238.488, 2.43717, 1.77 ) }
    dend_35 { pt3dadd( -51.8785, -239.387, 2.44874, 1.77 ) }
    dend_35 { pt3dadd( -52.1353, -240.252, 2.43325, 1.47 ) }
    dend_35 { pt3dadd( -52.3759, -241.213, 2.38566, 1.03 ) }
    dend_35 { pt3dadd( -52.5936, -242.159, 2.31391, 1.03 ) }
    dend_35 { pt3dadd( -52.8447, -243.263, 2.20257, 1.03 ) }
    dend_35 { pt3dadd( -53.0905, -244.409, 2.08415, 1.11 ) }
    dend_35 { pt3dadd( -53.3061, -245.489, 1.98127, 1.33 ) }
    dend_35 { pt3dadd( -53.4654, -246.473, 1.90453, 1.03 ) }
    dend_35 { pt3dadd( -53.6156, -247.808, 1.82716, 0.81 ) }
    dend_35 { pt3dadd( -53.6837, -248.743, 1.79319, 1.03 ) }
    dend_35 { pt3dadd( -53.7271, -249.92, 1.77691, 0.81 ) }
    dend_35 { pt3dadd( -53.7338, -250.562, 1.78288, 0.81 ) }
    dend_35 { pt3dadd( -53.7156, -252.3, 1.80892, 0.74 ) }
    dend_35 { pt3dadd( -53.6629, -254.047, 1.84377, 0.74 ) }
    dend_35 { pt3dadd( -53.5899, -255.451, 1.87394, 0.74 ) }
    dend_35 { pt3dadd( -53.4869, -257.503, 1.91884, 0.74 ) }
    dend_35 { pt3dadd( -53.4497, -258.919, 1.94094, 0.74 ) }
    dend_35 { pt3dadd( -53.4633, -259.837, 1.95476, 1.18 ) }
    dend_35 { pt3dadd( -53.5505, -260.779, 1.97847, 1.4 ) }
    dend_35 { pt3dadd( -53.7513, -261.753, 2.02179, 1.4 ) }
    dend_35 { pt3dadd( -54.0718, -262.674, 2.08626, 1.47 ) }
    dend_35 { pt3dadd( -54.621, -263.686, 2.18254, 1.55 ) }
    dend_35 { pt3dadd( -55.0616, -264.289, 2.24777, 1.55 ) }
    dend_35 { pt3dadd( -55.9013, -265.223, 2.36715, 1.11 ) }
    dend_35 { pt3dadd( -57.0189, -266.269, 2.52814, 0.88 ) }
    dend_35 { pt3dadd( -57.8396, -266.945, 2.67089, 0.88 ) }
    dend_35 { pt3dadd( -58.7852, -267.636, 2.8588, 1.03 ) }
    dend_35 { pt3dadd( -59.4404, -268.085, 2.99406, 1.03 ) }
    dend_35 { pt3dadd( -59.9604, -268.45, 3.10836, 1.03 ) }
    dend_35 { pt3dadd( -60.7225, -269.066, 3.3145, 0.81 ) }
    dend_35 { pt3dadd( -61.5997, -269.942, 3.58865, 0.59 ) }
    dend_35 { pt3dadd( -62.5575, -271.152, 3.92077, 0.59 ) }
    dend_35 { pt3dadd( -63.1589, -272.095, 4.15194, 0.88 ) }
    dend_35 { pt3dadd( -63.6076, -272.971, 4.34824, 0.88 ) }
    dend_35 { pt3dadd( -64.1789, -274.35, 4.61746, 0.74 ) }
    dend_35 { pt3dadd( -64.4923, -275.301, 4.7766, 0.96 ) }
    dend_35 { pt3dadd( -64.7427, -276.239, 4.88928, 1.11 ) }
    dend_35 { pt3dadd( -64.8883, -276.914, 4.95523, 1.11 ) }
    dend_35 { pt3dadd( -65.0296, -277.624, 5.00001, 0.88 ) }
    dend_35 { pt3dadd( -65.2374, -278.6, 5.00496, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_35 { pt3dadd( -65.3991, -279.286, 4.98572, 0.66 ) }
    dend_35 { pt3dadd( -65.6686, -280.439, 4.95621, 0.96 ) }
    dend_35 { pt3dadd( -65.8666, -281.32, 4.93009, 0.96 ) }
    dend_35 { pt3dadd( -66.1088, -282.448, 4.89107, 0.66 ) }
    dend_35 { pt3dadd( -66.3296, -283.478, 4.85367, 0.74 ) }
    dend_35 { pt3dadd( -66.6731, -285.129, 4.81252, 0.96 ) }
    dend_35 { pt3dadd( -66.864, -286.083, 4.81689, 0.96 ) }
    dend_35 { pt3dadd( -67.0571, -287.078, 4.82715, 0.96 ) }
    dend_35 { pt3dadd( -67.2892, -288.219, 4.82035, 0.66 ) }
    dend_35 { pt3dadd( -67.6376, -289.902, 4.77833, 0.66 ) }
    dend_35 { pt3dadd( -67.9313, -291.51, 4.68961, 0.66 ) }
    dend_35 { pt3dadd( -68.0857, -292.471, 4.60568, 0.81 ) }
    dend_35 { pt3dadd( -68.3208, -294.152, 4.42066, 0.74 ) }
    dend_35 { pt3dadd( -68.4772, -295.486, 4.24318, 0.74 ) }
    dend_35 { pt3dadd( -68.6003, -296.892, 4.0295, 0.96 ) }
    dend_35 { pt3dadd( -68.6742, -298.073, 3.83387, 0.96 ) }
    dend_35 { pt3dadd( -68.721, -298.857, 3.71125, 1.62 ) }
    dend_35 { pt3dadd( -68.7692, -299.288, 3.66332, 1.62 ) }
    dend_35 { pt3dadd( -68.867, -299.853, 3.65033, 1.62 ) }
    dend_35 { pt3dadd( -69.0458, -300.68, 3.67832, 1.4 ) }
    dend_35 { pt3dadd( -69.2737, -301.544, 3.73904, 0.88 ) }
    dend_35 { pt3dadd( -69.5824, -302.649, 3.84256, 0.59 ) }
    dend_35 { pt3dadd( -69.9931, -304.152, 4.00158, 0.81 ) }
    dend_35 { pt3dadd( -70.3244, -305.361, 4.14025, 0.96 ) }
    dend_35 { pt3dadd( -70.5791, -306.338, 4.24515, 0.96 ) }
    dend_35 { pt3dadd( -70.8638, -307.518, 4.35046, 1.11 ) }
    dend_35 { pt3dadd( -71.0505, -308.29, 4.40894, 1.11 ) }
    dend_35 { pt3dadd( -71.2077, -308.886, 4.44548, 1.33 ) }
    dend_35 { pt3dadd( -71.3727, -309.466, 4.47587, 1.33 ) }
    dend_35 { pt3dadd( -71.7064, -310.409, 4.54387, 1.03 ) }
    dend_35 { pt3dadd( -72.1144, -311.337, 4.6339, 0.66 ) }
    dend_35 { pt3dadd( -72.4567, -312.029, 4.71334, 0.37 ) }
    dend_35 { pt3dadd( -72.7159, -312.534, 4.77454, 0.37 ) }
    dend_35 { pt3dadd( -73.0314, -313.196, 4.85555, 0.37 ) }
    dend_35 { pt3dadd( -73.3153, -313.825, 4.93427, 1.03 ) }
    dend_35 { pt3dadd( -73.6224, -314.525, 5.02127, 1.25 ) }
    dend_35 { pt3dadd( -73.822, -315.045, 5.08506, 1.25 ) }
    dend_35 { pt3dadd( -74.1392, -316.02, 5.19423, 0.96 ) }
    dend_35 { pt3dadd( -74.4893, -317.247, 5.31692, 0.52 ) }
    dend_35 { pt3dadd( -74.7887, -318.351, 5.41458, 0.52 ) }
    dend_35 { pt3dadd( -75.1775, -319.891, 5.53168, 0.52 ) }
    dend_35 { pt3dadd( -75.4532, -321.146, 5.61537, 0.81 ) }
    dend_35 { pt3dadd( -75.6463, -322.062, 5.67858, 1.03 ) }
    dend_35 { pt3dadd( -75.8281, -322.889, 5.7385, 1.03 ) }
    dend_35 { pt3dadd( -75.975, -323.526, 5.78496, 0.81 ) }
    dend_35 { pt3dadd( -76.1692, -324.295, 5.8386, 0.81 ) }
    dend_35 { pt3dadd( -76.4825, -325.372, 5.90669, 0.59 ) }
    dend_35 { pt3dadd( -76.8878, -326.501, 5.97112, 0.44 ) }
    dend_35 { pt3dadd( -77.5262, -327.918, 6.06773, 0.88 ) }
    dend_35 { pt3dadd( -77.8573, -328.524, 6.1169, 0.88 ) }
    dend_35 { pt3dadd( -78.3584, -329.306, 6.18953, 0.59 ) }
    dend_35 { pt3dadd( -78.8933, -329.97, 6.26799, 0.59 ) }
    dend_35 { pt3dadd( -79.7522, -330.798, 6.38017, 0.59 ) }
    dend_35 { pt3dadd( -80.6857, -331.52, 6.48599, 0.81 ) }
    dend_35 { pt3dadd( -81.2213, -331.863, 6.54445, 0.81 ) }
    dend_35 { pt3dadd( -81.6547, -332.109, 6.59031, 0.81 ) }
    dend_35 { pt3dadd( -82.6364, -332.582, 6.68648, 0.59 ) }
    dend_35 { pt3dadd( -83.7175, -333.0, 6.78656, 0.88 ) }
    dend_35 { pt3dadd( -84.7945, -333.333, 6.87766, 1.03 ) }
    dend_35 { pt3dadd( -85.8244, -333.598, 6.95643, 1.03 ) }
    dend_35 { pt3dadd( -86.6763, -333.773, 7.02461, 0.59 ) }
    dend_35 { pt3dadd( -87.4439, -333.908, 7.0958, 0.59 ) }
    dend_35 { pt3dadd( -88.0951, -334.024, 7.16513, 0.59 ) }
    dend_35 { pt3dadd( -88.6531, -334.122, 7.24228, 0.59 ) }
    dend_35 { pt3dadd( -89.2462, -334.252, 7.33222, 0.59 ) }
    dend_35 { pt3dadd( -90.0203, -334.459, 7.46256, 0.44 ) }
    dend_35 { pt3dadd( -91.1768, -334.85, 7.67402, 0.81 ) }
    dend_35 { pt3dadd( -92.139, -335.245, 7.8676, 1.11 ) }
    dend_35 { pt3dadd( -93.1847, -335.755, 8.10122, 0.81 ) }
    dend_35 { pt3dadd( -94.2281, -336.353, 8.35087, 0.66 ) }
    dend_35 { pt3dadd( -94.7048, -336.665, 8.46917, 0.66 ) }
    dend_35 { pt3dadd( -95.277, -337.093, 8.61494, 0.52 ) }
    dend_35 { pt3dadd( -95.9291, -337.632, 8.79035, 0.52 ) }
    dend_35 { pt3dadd( -96.5871, -338.246, 8.97419, 0.52 ) }
    dend_35 { pt3dadd( -97.2461, -338.906, 9.16411, 0.52 ) }
    dend_35 { pt3dadd( -97.6426, -339.345, 9.28258, 1.11 ) }
    dend_35 { pt3dadd( -98.5208, -340.417, 9.5392, 1.4 ) }
    dend_35 { pt3dadd( -98.9948, -341.061, 9.67443, 1.84 ) }
    dend_35 { pt3dadd( -99.5151, -341.842, 9.80794, 2.43 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 79/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -8.58019, -98.4278, -7.14237, 0.66 ) }
    dend_32 { pt3dadd( -8.61885, -99.4546, -7.08119, 0.66 ) }
    dend_32 { pt3dadd( -8.6529, -100.088, -7.04796, 0.37 ) }
    dend_32 { pt3dadd( -8.66953, -100.511, -7.04033, 0.81 ) }
    dend_32 { pt3dadd( -8.67898, -101.059, -7.04002, 1.03 ) }
    dend_32 { pt3dadd( -8.68697, -101.535, -7.04354, 1.11 ) }
    dend_32 { pt3dadd( -8.69751, -102.043, -7.05617, 0.88 ) }
    dend_32 { pt3dadd( -8.70801, -102.63, -7.09238, 0.59 ) }
    dend_32 { pt3dadd( -8.70049, -103.313, -7.15405, 0.29 ) }
    dend_32 { pt3dadd( -8.67816, -103.808, -7.21047, 0.29 ) }
    dend_32 { pt3dadd( -8.65617, -104.035, -7.24, 0.29 ) }
    dend_32 { pt3dadd( -8.56625, -104.547, -7.32068, 0.74 ) }
    dend_32 { pt3dadd( -8.4393, -105.023, -7.40609, 1.11 ) }
    dend_32 { pt3dadd( -8.33796, -105.323, -7.46066, 1.11 ) }
    dend_32 { pt3dadd( -8.17417, -105.765, -7.5402, 1.11 ) }
    dend_32 { pt3dadd( -7.97367, -106.276, -7.61008, 0.81 ) }
    dend_32 { pt3dadd( -7.64767, -107.119, -7.68564, 0.44 ) }
    dend_32 { pt3dadd( -7.35726, -107.918, -7.72013, 0.59 ) }
    dend_32 { pt3dadd( -7.20434, -108.4, -7.72467, 0.88 ) }
    dend_32 { pt3dadd( -7.07383, -108.906, -7.71146, 0.88 ) }
    dend_32 { pt3dadd( -6.93099, -109.632, -7.67143, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -6.83632, -110.343, -7.60577, 0.44 ) }
    dend_32 { pt3dadd( -6.79671, -110.904, -7.53115, 1.03 ) }
    dend_32 { pt3dadd( -6.78216, -111.374, -7.46267, 0.74 ) }
    dend_32 { pt3dadd( -6.77492, -111.963, -7.38282, 0.52 ) }
    dend_32 { pt3dadd( -6.7738, -112.419, -7.32973, 0.88 ) }
    dend_32 { pt3dadd( -6.77726, -112.839, -7.30908, 1.18 ) }
    dend_32 { pt3dadd( -6.77993, -113.204, -7.2986, 1.18 ) }
    dend_32 { pt3dadd( -6.78717, -113.621, -7.29214, 0.88 ) }
    dend_32 { pt3dadd( -6.80152, -114.347, -7.28993, 0.29 ) }
    dend_32 { pt3dadd( -6.81555, -114.897, -7.29633, 0.29 ) }
    dend_32 { pt3dadd( -6.83897, -115.684, -7.324, 1.03 ) }
    dend_32 { pt3dadd( -6.85007, -116.207, -7.35096, 1.47 ) }
    dend_32 { pt3dadd( -6.85764, -116.537, -7.36866, 1.47 ) }
    dend_32 { pt3dadd( -6.86329, -116.9, -7.3882, 1.47 ) }
    dend_32 { pt3dadd( -6.85891, -117.442, -7.4145, 1.25 ) }
    dend_32 { pt3dadd( -6.84439, -118.104, -7.43739, 0.44 ) }
    dend_32 { pt3dadd( -6.82116, -118.65, -7.44515, 0.44 ) }
    dend_32 { pt3dadd( -6.7923, -119.184, -7.45521, 0.44 ) }
    dend_32 { pt3dadd( -6.77342, -119.458, -7.46095, 0.59 ) }
    dend_32 { pt3dadd( -6.72713, -120.102, -7.47502, 0.59 ) }
    dend_32 { pt3dadd( -6.68241, -120.592, -7.48701, 0.37 ) }
    dend_32 { pt3dadd( -6.6441, -121.002, -7.49678, 0.81 ) }
    dend_32 { pt3dadd( -6.61012, -121.377, -7.50062, 1.03 ) }
    dend_32 { pt3dadd( -6.58747, -121.651, -7.49896, 1.03 ) }
    dend_32 { pt3dadd( -6.5684, -121.991, -7.49047, 0.59 ) }
    dend_32 { pt3dadd( -6.5361, -122.544, -7.46683, 0.22 ) }
    dend_32 { pt3dadd( -6.50392, -122.891, -7.44812, 0.22 ) }
    dend_32 { pt3dadd( -6.45476, -123.3, -7.42334, 0.22 ) }
    dend_32 { pt3dadd( -6.39365, -123.74, -7.39477, 0.66 ) }
    dend_32 { pt3dadd( -6.31159, -124.266, -7.36142, 0.88 ) }
    dend_32 { pt3dadd( -6.17374, -125.033, -7.31348, 0.88 ) }
    dend_32 { pt3dadd( -6.00608, -125.925, -7.25917, 0.96 ) }
    dend_32 { pt3dadd( -5.87642, -126.597, -7.2292, 1.18 ) }
    dend_32 { pt3dadd( -5.77931, -127.143, -7.21745, 0.66 ) }
    dend_32 { pt3dadd( -5.7036, -127.59, -7.2108, 0.52 ) }
    dend_32 { pt3dadd( -5.57621, -128.445, -7.20859, 0.52 ) }
    dend_32 { pt3dadd( -5.49164, -129.105, -7.2142, 0.81 ) }
    dend_32 { pt3dadd( -5.4132, -129.772, -7.22698, 0.52 ) }
    dend_32 { pt3dadd( -5.35409, -130.271, -7.23492, 0.52 ) }
    dend_32 { pt3dadd( -5.27871, -130.861, -7.25571, 1.47 ) }
    dend_32 { pt3dadd( -5.19301, -131.465, -7.29056, 1.77 ) }
    dend_32 { pt3dadd( -5.11737, -131.932, -7.33565, 1.77 ) }
    dend_32 { pt3dadd( -5.06437, -132.2, -7.36759, 1.77 ) }
    dend_32 { pt3dadd( -4.96139, -132.645, -7.42221, 1.25 ) }
    dend_32 { pt3dadd( -4.83098, -133.159, -7.48544, 0.81 ) }
    dend_32 { pt3dadd( -4.67549, -133.784, -7.56532, 0.44 ) }
    dend_32 { pt3dadd( -4.47671, -134.567, -7.66134, 0.37 ) }
    dend_32 { pt3dadd( -4.35503, -135.048, -7.71681, 0.52 ) }
    dend_32 { pt3dadd( -4.20007, -135.63, -7.77842, 0.52 ) }
    dend_32 { pt3dadd( -4.07739, -136.066, -7.8205, 0.66 ) }
    dend_32 { pt3dadd( -3.90411, -136.639, -7.87481, 0.66 ) }
    dend_32 { pt3dadd( -3.66826, -137.372, -7.97052, 0.88 ) }
    dend_32 { pt3dadd( -3.45417, -137.987, -8.07077, 1.25 ) }
    dend_32 { pt3dadd( -3.32487, -138.334, -8.14418, 1.25 ) }
    dend_32 { pt3dadd( -3.2033, -138.633, -8.21881, 1.25 ) }
    dend_32 { pt3dadd( -2.94818, -139.22, -8.38589, 1.11 ) }
    dend_32 { pt3dadd( -2.71244, -139.738, -8.54826, 0.74 ) }
    dend_32 { pt3dadd( -2.49824, -140.193, -8.70314, 0.29 ) }
    dend_32 { pt3dadd( -2.37169, -140.463, -8.80095, 0.29 ) }
    dend_32 { pt3dadd( -2.07356, -141.12, -9.03266, 0.44 ) }
    dend_32 { pt3dadd( -1.91164, -141.497, -9.1514, 0.88 ) }
    dend_32 { pt3dadd( -1.78205, -141.84, -9.23924, 1.33 ) }
    dend_32 { pt3dadd( -1.64651, -142.245, -9.31795, 1.47 ) }
    dend_32 { pt3dadd( -1.51837, -142.684, -9.38013, 1.47 ) }
    dend_32 { pt3dadd( -1.41436, -143.075, -9.41862, 1.25 ) }
    dend_32 { pt3dadd( -1.28209, -143.608, -9.45302, 0.44 ) }
    dend_32 { pt3dadd( -1.09886, -144.389, -9.4552, 0.29 ) }
    dend_32 { pt3dadd( -0.968509, -145.008, -9.4207, 0.29 ) }
    dend_32 { pt3dadd( -0.852771, -145.638, -9.35561, 0.29 ) }
    dend_32 { pt3dadd( -0.775674, -146.14, -9.28393, 0.74 ) }
    dend_32 { pt3dadd( -0.734857, -146.496, -9.22213, 0.88 ) }
    dend_32 { pt3dadd( -0.691414, -147.217, -9.07644, 0.96 ) }
    dend_32 { pt3dadd( -0.695273, -147.835, -8.94721, 1.03 ) }
    dend_32 { pt3dadd( -0.730047, -148.3, -8.86088, 1.03 ) }
    dend_32 { pt3dadd( -0.790558, -148.765, -8.77881, 0.59 ) }
    dend_32 { pt3dadd( -0.865814, -149.261, -8.69746, 0.22 ) }
    dend_32 { pt3dadd( -0.912422, -149.575, -8.65604, 0.22 ) }
    dend_32 { pt3dadd( -1.00848, -150.297, -8.59988, 0.96 ) }
    dend_32 { pt3dadd( -1.06241, -150.726, -8.57899, 1.11 ) }
    dend_32 { pt3dadd( -1.11557, -151.197, -8.54373, 1.11 ) }
    dend_32 { pt3dadd( -1.15403, -151.646, -8.49227, 0.59 ) }
    dend_32 { pt3dadd( -1.17945, -152.102, -8.42694, 0.29 ) }
    dend_32 { pt3dadd( -1.19039, -152.491, -8.35861, 0.29 ) }
    dend_32 { pt3dadd( -1.19873, -152.815, -8.29164, 0.29 ) }
    dend_32 { pt3dadd( -1.21445, -153.517, -8.13177, 0.44 ) }
    dend_32 { pt3dadd( -1.2285, -154.111, -7.9802, 0.66 ) }
    dend_32 { pt3dadd( -1.24287, -154.738, -7.81361, 0.66 ) }
    dend_32 { pt3dadd( -1.24753, -155.192, -7.69663, 0.81 ) }
    dend_32 { pt3dadd( -1.24784, -155.696, -7.57798, 0.81 ) }
    dend_32 { pt3dadd( -1.24452, -156.178, -7.4736, 0.52 ) }
    dend_32 { pt3dadd( -1.25235, -156.792, -7.3606, 0.66 ) }
    dend_32 { pt3dadd( -1.26513, -157.246, -7.28143, 0.66 ) }
    dend_32 { pt3dadd( -1.30622, -158.014, -7.19013, 0.37 ) }
    dend_32 { pt3dadd( -1.35518, -158.695, -7.14663, 0.37 ) }
    dend_32 { pt3dadd( -1.40598, -159.24, -7.13931, 1.03 ) }
    dend_32 { pt3dadd( -1.46461, -159.79, -7.17353, 1.47 ) }
    dend_32 { pt3dadd( -1.53382, -160.33, -7.24521, 1.62 ) }
    dend_32 { pt3dadd( -1.68334, -161.298, -7.43745, 0.88 ) }
    dend_32 { pt3dadd( -1.81488, -161.929, -7.62018, 0.59 ) }
    dend_32 { pt3dadd( -1.94673, -162.412, -7.80358, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_32 { pt3dadd( -2.21979, -163.191, -8.15043, 0.29 ) }
    dend_32 { pt3dadd( -2.31877, -163.421, -8.25429, 0.29 ) }
    dend_32 { pt3dadd( -2.48729, -163.75, -8.39624, 0.29 ) }
    dend_32 { pt3dadd( -2.81853, -164.36, -8.62023, 0.29 ) }
    dend_32 { pt3dadd( -3.14967, -164.937, -8.83412, 0.59 ) }
    dend_32 { pt3dadd( -3.49527, -165.547, -9.0483, 0.59 ) }
    dend_32 { pt3dadd( -3.71316, -165.925, -9.17769, 0.44 ) }
    dend_32 { pt3dadd( -3.98439, -166.378, -9.3426, 0.44 ) }
    dend_32 { pt3dadd( -4.16514, -166.656, -9.47105, 0.29 ) }
    dend_32 { pt3dadd( -4.42792, -167.052, -9.69087, 1.4 ) }
    dend_32 { pt3dadd( -4.81848, -167.51, -10.053, 1.62 ) }
    dend_32 { pt3dadd( -5.1893, -167.827, -10.3916, 1.4 ) }
    dend_32 { pt3dadd( -5.55773, -168.058, -10.7132, 1.11 ) }
    dend_32 { pt3dadd( -6.18175, -168.37, -11.2259, 0.81 ) }
    dend_32 { pt3dadd( -6.52891, -168.532, -11.5078, 0.59 ) }
    dend_32 { pt3dadd( -6.90845, -168.725, -11.8327, 0.74 ) }
    dend_32 { pt3dadd( -7.26936, -168.957, -12.1582, 0.81 ) }
    dend_32 { pt3dadd( -7.54575, -169.246, -12.4255, 0.52 ) }
    dend_32 { pt3dadd( -7.7449, -169.537, -12.6368, 0.52 ) }
    dend_32 { pt3dadd( -7.92627, -169.859, -12.8233, 0.74 ) }
    dend_32 { pt3dadd( -8.17211, -170.318, -13.0956, 0.74 ) }
    dend_32 { pt3dadd( -8.29842, -170.602, -13.2421, 0.74 ) }
    dend_32 { pt3dadd( -8.42267, -170.923, -13.4109, 0.52 ) }
    dend_32 { pt3dadd( -8.60641, -171.428, -13.6478, 0.52 ) }
    dend_32 { pt3dadd( -8.70764, -171.705, -13.7682, 0.52 ) }
    dend_32 { pt3dadd( -8.90341, -172.247, -13.9687, 1.69 ) }
    dend_32 { pt3dadd( -9.02335, -172.605, -14.0714, 2.14 ) }
    dend_32 { pt3dadd( -9.24036, -173.359, -14.235, 1.55 ) }
    dend_32 { pt3dadd( -9.43958, -174.149, -14.361, 0.29 ) }
    dend_32 { pt3dadd( -9.54474, -174.61, -14.4144, 0.29 ) }
    dend_32 { pt3dadd( -9.6824, -175.243, -14.4681, 0.44 ) }
    dend_32 { pt3dadd( -9.8128, -175.846, -14.4967, 0.59 ) }
    dend_32 { pt3dadd( -9.92944, -176.381, -14.5087, 0.59 ) }
    dend_32 { pt3dadd( -10.0497, -176.925, -14.4993, 0.29 ) }
    dend_32 { pt3dadd( -10.115, -177.217, -14.495, 0.29 ) }
    dend_32 { pt3dadd( -10.2047, -177.625, -14.4887, 0.96 ) }
    dend_32 { pt3dadd( -10.2772, -177.983, -14.4829, 1.03 ) }
    dend_32 { pt3dadd( -10.3638, -178.482, -14.4764, 0.52 ) }
    dend_32 { pt3dadd( -10.4541, -179.13, -14.4699, 0.29 ) }
    dend_32 { pt3dadd( -10.4938, -179.499, -14.4657, 0.81 ) }
    dend_32 { pt3dadd( -10.5313, -179.927, -14.4587, 0.96 ) }
    dend_32 { pt3dadd( -10.557, -180.257, -14.4536, 0.96 ) }
    dend_32 { pt3dadd( -10.6007, -180.836, -14.4459, 0.29 ) }
    dend_32 { pt3dadd( -10.6621, -181.497, -14.4369, 0.29 ) }
    dend_32 { pt3dadd( -10.7342, -182.189, -14.4477, 1.47 ) }
    dend_32 { pt3dadd( -10.7851, -182.674, -14.4651, 1.92 ) }
    dend_32 { pt3dadd( -10.8072, -182.91, -14.4762, 1.92 ) }
    dend_32 { pt3dadd( -10.8605, -183.496, -14.4995, 1.33 ) }
    dend_32 { pt3dadd( -10.912, -184.149, -14.5278, 0.29 ) }
    dend_32 { pt3dadd( -10.9595, -184.815, -14.5615, 0.29 ) }
    dend_32 { pt3dadd( -10.9911, -185.347, -14.5951, 0.29 ) }
    dend_32 { pt3dadd( -11.0536, -186.502, -14.6774, 0.29 ) }
    dend_32 { pt3dadd( -11.0892, -187.288, -14.7276, 1.4 ) }
    dend_32 { pt3dadd( -11.1053, -187.767, -14.7535, 2.14 ) }
    dend_32 { pt3dadd( -11.11, -187.976, -14.7626, 2.28 ) }
    dend_32 { pt3dadd( -11.1142, -188.316, -14.77, 2.28 ) }
    dend_32 { pt3dadd( -11.1214, -188.668, -14.767, 1.92 ) }
    dend_32 { pt3dadd( -11.1429, -189.176, -14.7221, 0.88 ) }
    dend_32 { pt3dadd( -11.1845, -189.95, -14.6069, 0.29 ) }
    dend_32 { pt3dadd( -11.2127, -190.421, -14.5113, 0.29 ) }
    dend_32 { pt3dadd( -11.2446, -190.948, -14.3866, 0.29 ) }
    dend_32 { pt3dadd( -11.2955, -191.773, -14.1728, 0.29 ) }
    dend_32 { pt3dadd( -11.344, -192.617, -13.9523, 0.96 ) }
    dend_32 { pt3dadd( -11.3714, -193.183, -13.8103, 1.62 ) }
    dend_32 { pt3dadd( -11.3851, -193.503, -13.7321, 1.62 ) }
    dend_32 { pt3dadd( -11.3971, -193.805, -13.6654, 1.62 ) }
    dend_32 { pt3dadd( -11.4223, -194.457, -13.5495, 1.11 ) }
    dend_32 { pt3dadd( -11.445, -195.259, -13.4839, 0.29 ) }
    dend_32 { pt3dadd( -11.4657, -195.86, -13.4763, 0.29 ) }
    dend_32 { pt3dadd( -11.4867, -196.336, -13.4853, 0.59 ) }
    dend_32 { pt3dadd( -11.5012, -196.572, -13.4955, 0.66 ) }
    dend_32 { pt3dadd( -11.524, -196.859, -13.5122, 0.66 ) }
    dend_32 { pt3dadd( -11.6047, -197.646, -13.5654, 0.29 ) }
    dend_32 { pt3dadd( -11.7256, -198.56, -13.6498, 0.29 ) }
    dend_32 { pt3dadd( -11.8391, -199.269, -13.7245, 0.96 ) }
    dend_32 { pt3dadd( -11.9509, -199.827, -13.784, 1.4 ) }
    dend_32 { pt3dadd( -12.0458, -200.245, -13.8242, 1.4 ) }
    dend_32 { pt3dadd( -12.1504, -200.677, -13.8589, 1.4 ) }
    dend_32 { pt3dadd( -12.2961, -201.247, -13.891, 0.88 ) }
    dend_32 { pt3dadd( -12.4781, -201.945, -13.9259, 0.29 ) }
    dend_32 { pt3dadd( -12.643, -202.582, -13.9481, 0.29 ) }
    dend_32 { pt3dadd( -12.8179, -203.225, -13.9664, 0.44 ) }
    dend_32 { pt3dadd( -12.9388, -203.633, -13.9731, 0.66 ) }
    dend_32 { pt3dadd( -13.0431, -203.96, -13.9714, 0.66 ) }
    dend_32 { pt3dadd( -13.2353, -204.541, -13.9447, 0.29 ) }
    dend_32 { pt3dadd( -13.3494, -204.89, -13.9256, 0.29 ) }
    dend_32 { pt3dadd( -13.4946, -205.336, -13.9206, 0.29 ) }
    dend_32 { pt3dadd( -13.7011, -205.95, -13.9561, 0.29 ) }
    dend_32 { pt3dadd( -13.8231, -206.302, -14.0011, 0.52 ) }
    dend_32 { pt3dadd( -13.9851, -206.79, -14.0889, 0.66 ) }
    dend_32 { pt3dadd( -14.1123, -207.277, -14.1631, 0.66 ) }
    dend_32 { pt3dadd( -14.2435, -208.032, -14.2597, 1.4 ) }
    dend_32 { pt3dadd( -14.2865, -208.692, -14.3359, 2.28 ) }
    dend_32 { pt3dadd( -14.2699, -209.349, -14.4065, 2.5 ) }
    dend_32 { pt3dadd( -14.2275, -209.718, -14.4322, 2.5 ) }
    dend_32 { pt3dadd( -13.9356, -211.001, -14.4587, 0.22 ) }
    dend_32 { pt3dadd( -13.7631, -211.517, -14.436, 0.22 ) }
    dend_32 { pt3dadd( -13.4663, -212.168, -14.3606, 0.37 ) }
    dend_32 { pt3dadd( -13.2451, -212.55, -14.2894, 0.44 ) }
    dend_32 { pt3dadd( -12.822, -213.115, -14.2154, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( -12.3444, -213.639, -14.2167, 0.88 ) }
    dend_32 { pt3dadd( -12.0582, -213.887, -14.2933, 1.4 ) }
    dend_32 { pt3dadd( -11.8362, -214.066, -14.3936, 1.4 ) }
    dend_32 { pt3dadd( -11.5368, -214.324, -14.5844, 1.11 ) }
    dend_32 { pt3dadd( -10.6042, -215.221, -15.3568, 0.29 ) }
    dend_32 { pt3dadd( -10.3094, -215.547, -15.6547, 0.29 ) }
    dend_32 { pt3dadd( -9.86396, -216.117, -16.1711, 0.81 ) }
    dend_32 { pt3dadd( -9.64464, -216.487, -16.4565, 0.81 ) }
    dend_32 { pt3dadd( -9.2972, -217.272, -16.9617, 0.22 ) }
    dend_32 { pt3dadd( -9.19008, -217.6, -17.1344, 0.22 ) }
    dend_32 { pt3dadd( -9.07853, -218.105, -17.3195, 0.44 ) }
    dend_32 { pt3dadd( -9.0313, -218.389, -17.4028, 0.59 ) }
    dend_32 { pt3dadd( -8.88263, -219.579, -17.6738, 0.22 ) }
    dend_32 { pt3dadd( -8.83975, -219.995, -17.7626, 0.74 ) }
    dend_32 { pt3dadd( -8.80846, -220.364, -17.8354, 1.03 ) }
    dend_32 { pt3dadd( -8.77145, -220.759, -17.9049, 1.03 ) }
    dend_32 { pt3dadd( -8.73429, -221.145, -17.9663, 0.74 ) }
    dend_32 { pt3dadd( -8.69739, -221.504, -18.0217, 0.37 ) }
    dend_32 { pt3dadd( -8.59237, -222.414, -18.1649, 0.22 ) }
    dend_32 { pt3dadd( -8.49652, -223.32, -18.3117, 0.22 ) }
    dend_32 { pt3dadd( -8.43464, -224.003, -18.4202, 0.88 ) }
    dend_32 { pt3dadd( -8.39472, -224.507, -18.5, 1.62 ) }
    dend_32 { pt3dadd( -8.37657, -224.784, -18.5442, 1.84 ) }
    dend_32 { pt3dadd( -8.36268, -225.118, -18.5968, 1.84 ) }
    dend_32 { pt3dadd( -8.35353, -225.807, -18.7, 0.52 ) }
    dend_32 { pt3dadd( -8.37133, -226.389, -18.7878, 0.22 ) }
    dend_32 { pt3dadd( -8.40776, -226.855, -18.8618, 0.22 ) }
    dend_32 { pt3dadd( -8.45648, -227.258, -18.9269, 0.37 ) }
    dend_32 { pt3dadd( -8.48275, -227.414, -18.9484, 0.37 ) }
    dend_32 { pt3dadd( -8.56828, -227.801, -19.0023, 0.22 ) }
    dend_32 { pt3dadd( -8.65274, -228.115, -19.0455, 0.74 ) }
    dend_32 { pt3dadd( -8.75682, -228.473, -19.0977, 0.74 ) }
    dend_32 { pt3dadd( -8.85793, -228.796, -19.1423, 0.59 ) }
    dend_32 { pt3dadd( -9.0929, -229.497, -19.233, 0.22 ) }
    dend_32 { pt3dadd( -9.21295, -229.82, -19.2692, 0.22 ) }
    dend_32 { pt3dadd( -9.397, -230.251, -19.2953, 0.59 ) }
    dend_32 { pt3dadd( -9.54658, -230.561, -19.2938, 0.59 ) }
    dend_32 { pt3dadd( -9.71012, -230.879, -19.2605, 0.29 ) }
    dend_32 { pt3dadd( -9.89162, -231.203, -19.209, 0.22 ) }
    dend_32 { pt3dadd( -10.1746, -231.65, -19.1493, 0.37 ) }
    dend_32 { pt3dadd( -10.5525, -232.188, -19.0886, 0.44 ) }
    dend_32 { pt3dadd( -10.9027, -232.572, -19.0947, 0.59 ) }
    dend_32 { pt3dadd( -11.3617, -232.966, -19.1748, 0.37 ) }
    dend_32 { pt3dadd( -11.6503, -233.142, -19.2666, 0.22 ) }
    dend_32 { pt3dadd( -12.3877, -233.422, -19.5958, 2.21 ) }
    dend_32 { pt3dadd( -12.6711, -233.459, -19.7583, 2.5 ) }
    dend_32 { pt3dadd( -13.7857, -233.312, -20.5092, 0.22 ) }
    dend_32 { pt3dadd( -14.1309, -233.195, -20.7651, 0.22 ) }
    dend_32 { pt3dadd( -14.5963, -232.929, -21.1655, 0.66 ) }
    dend_32 { pt3dadd( -14.8181, -232.756, -21.3799, 0.66 ) }
    dend_32 { pt3dadd( -15.1315, -232.457, -21.7091, 0.37 ) }
    dend_32 { pt3dadd( -15.5658, -232.018, -22.2025, 1.92 ) }
    dend_32 { pt3dadd( -15.7188, -231.863, -22.3831, 1.92 ) }
    dend_32 { pt3dadd( -16.4976, -231.214, -23.3385, 0.44 ) }
    dend_32 { pt3dadd( -16.8423, -230.987, -23.7636, 0.59 ) }
    dend_32 { pt3dadd( -17.052, -230.891, -23.9982, 0.37 ) }
    dend_32 { pt3dadd( -17.3827, -230.818, -24.3091, 0.37 ) }
    dend_32 { pt3dadd( -17.7261, -230.785, -24.6129, 0.22 ) }
    dend_32 { pt3dadd( -18.5558, -230.8, -25.2502, 0.29 ) }
    dend_32 { pt3dadd( -18.8509, -230.854, -25.4173, 0.22 ) }
    dend_32 { pt3dadd( -19.3384, -230.968, -25.6541, 0.22 ) }
    dend_32 { pt3dadd( -20.0139, -231.121, -25.9593, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 62/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -8.58019, -98.4278, -7.14237, 0.74 ) }
    dend_31 { pt3dadd( -9.95985, -99.4338, -7.14158, 0.74 ) }
    dend_31 { pt3dadd( -10.5077, -99.7938, -7.14271, 0.74 ) }
    dend_31 { pt3dadd( -11.3003, -100.248, -7.16991, 0.74 ) }
    dend_31 { pt3dadd( -11.8562, -100.515, -7.20502, 0.52 ) }
    dend_31 { pt3dadd( -12.436, -100.711, -7.27656, 0.52 ) }
    dend_31 { pt3dadd( -12.9928, -100.843, -7.3749, 0.88 ) }
    dend_31 { pt3dadd( -13.4616, -100.821, -7.5418, 0.88 ) }
    dend_31 { pt3dadd( -14.2112, -100.66, -7.89993, 0.59 ) }
    dend_31 { pt3dadd( -14.6785, -100.518, -8.15809, 0.37 ) }
    dend_31 { pt3dadd( -15.3952, -100.325, -8.60101, 0.37 ) }
    dend_31 { pt3dadd( -15.8263, -100.263, -8.90871, 1.11 ) }
    dend_31 { pt3dadd( -16.1837, -100.303, -9.1958, 1.47 ) }
    dend_31 { pt3dadd( -16.5276, -100.409, -9.47283, 1.47 ) }
    dend_31 { pt3dadd( -16.7792, -100.514, -9.66242, 1.47 ) }
    dend_31 { pt3dadd( -17.3575, -100.76, -10.0765, 0.96 ) }
    dend_31 { pt3dadd( -17.8771, -100.937, -10.4234, 0.59 ) }
    dend_31 { pt3dadd( -18.3601, -101.039, -10.7023, 0.59 ) }
    dend_31 { pt3dadd( -18.8672, -101.101, -10.9319, 0.59 ) }
    dend_31 { pt3dadd( -19.4042, -101.162, -11.1547, 0.81 ) }
    dend_31 { pt3dadd( -19.9161, -101.221, -11.3528, 0.81 ) }
    dend_31 { pt3dadd( -20.3185, -101.265, -11.4793, 0.81 ) }
    dend_31 { pt3dadd( -20.7962, -101.335, -11.6121, 0.81 ) }
    dend_31 { pt3dadd( -21.3058, -101.591, -11.8255, 0.22 ) }
    dend_31 { pt3dadd( -21.6116, -102.16, -12.1062, 0.22 ) }
    dend_31 { pt3dadd( -21.7947, -102.616, -12.3414, 0.66 ) }
    dend_31 { pt3dadd( -21.8892, -102.887, -12.4894, 0.88 ) }
    dend_31 { pt3dadd( -22.0223, -103.282, -12.7229, 0.88 ) }
    dend_31 { pt3dadd( -22.2151, -103.747, -13.1023, 0.44 ) }
    dend_31 { pt3dadd( -22.5207, -104.211, -13.628, 1.4 ) }
    dend_31 { pt3dadd( -22.8228, -104.466, -14.086, 2.14 ) }
    dend_31 { pt3dadd( -22.9607, -104.532, -14.2899, 2.58 ) }
    dend_31 { pt3dadd( -23.2567, -104.593, -14.7039, 2.36 ) }
    dend_31 { pt3dadd( -24.0661, -104.632, -15.826, 1.69 ) }
    dend_31 { pt3dadd( -24.4966, -104.611, -16.4012, 0.37 ) }
    dend_31 { pt3dadd( -25.0347, -104.55, -17.0405, 0.37 ) }
    dend_31 { pt3dadd( -25.4824, -104.493, -17.5203, 0.37 ) }
    dend_31 { pt3dadd( -26.3991, -104.415, -18.4107, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -26.7812, -104.407, -18.7537, 2.14 ) }
    dend_31 { pt3dadd( -27.1672, -104.44, -19.0709, 2.5 ) }
    dend_31 { pt3dadd( -28.2975, -104.673, -20.0281, 0.44 ) }
    dend_31 { pt3dadd( -28.6469, -104.785, -20.3318, 0.44 ) }
    dend_31 { pt3dadd( -29.1769, -104.972, -20.8257, 0.44 ) }
    dend_31 { pt3dadd( -29.6542, -105.126, -21.3085, 0.44 ) }
    dend_31 { pt3dadd( -30.1425, -105.242, -21.8256, 1.4 ) }
    dend_31 { pt3dadd( -30.6723, -105.343, -22.4122, 2.06 ) }
    dend_31 { pt3dadd( -31.1395, -105.427, -22.9769, 2.06 ) }
    dend_31 { pt3dadd( -31.7065, -105.488, -23.7006, 0.66 ) }
    dend_31 { pt3dadd( -32.1435, -105.517, -24.315, 0.81 ) }
    dend_31 { pt3dadd( -32.603, -105.548, -25.0293, 0.52 ) }
    dend_31 { pt3dadd( -32.9583, -105.606, -25.7031, 1.77 ) }
    dend_31 { pt3dadd( -33.1766, -105.689, -26.2375, 2.28 ) }
    dend_31 { pt3dadd( -33.7097, -106.123, -28.0519, 1.33 ) }
    dend_31 { pt3dadd( -33.8432, -106.363, -28.7659, 1.77 ) }
    dend_31 { pt3dadd( -33.8975, -106.534, -29.2234, 1.77 ) }
    dend_31 { pt3dadd( -33.9722, -106.878, -30.1052, 0.74 ) }
    dend_31 { pt3dadd( -34.0203, -107.157, -30.8061, 0.52 ) }
    dend_31 { pt3dadd( -34.1044, -107.602, -31.82, 0.52 ) }
    dend_31 { pt3dadd( -34.1946, -108.128, -32.8402, 0.88 ) }
    dend_31 { pt3dadd( -34.3375, -108.634, -33.7715, 1.47 ) }
    dend_31 { pt3dadd( -34.5239, -109.137, -34.6428, 0.22 ) }
    dend_31 { pt3dadd( -34.6344, -109.397, -35.0603, 0.22 ) }
    dend_31 { pt3dadd( -34.7868, -109.752, -35.5583, 0.81 ) }
    dend_31 { pt3dadd( -34.9393, -110.135, -36.0065, 0.96 ) }
    dend_31 { pt3dadd( -35.135, -110.645, -36.5257, 1.55 ) }
    dend_31 { pt3dadd( -35.3188, -111.153, -36.9643, 1.55 ) }
    dend_31 { pt3dadd( -35.5206, -111.706, -37.4198, 0.37 ) }
    dend_31 { pt3dadd( -35.6665, -112.099, -37.7505, 0.74 ) }
    dend_31 { pt3dadd( -35.8555, -112.585, -38.191, 0.81 ) }
    dend_31 { pt3dadd( -36.0883, -113.225, -38.8015, 0.29 ) }
    dend_31 { pt3dadd( -36.1811, -113.532, -39.0952, 0.96 ) }
    dend_31 { pt3dadd( -36.2909, -113.981, -39.5189, 1.33 ) }
    dend_31 { pt3dadd( -36.3977, -114.609, -40.1068, 0.74 ) }
    dend_31 { pt3dadd( -36.4393, -115.133, -40.5798, 0.59 ) }
    dend_31 { pt3dadd( -36.4198, -115.958, -41.284, 0.29 ) }
    dend_31 { pt3dadd( -36.3417, -116.49, -41.6842, 0.29 ) }
    dend_31 { pt3dadd( -36.2165, -116.979, -42.0278, 0.29 ) }
    dend_31 { pt3dadd( -36.0794, -117.353, -42.254, 1.18 ) }
    dend_31 { pt3dadd( -35.9111, -117.702, -42.4457, 1.69 ) }
    dend_31 { pt3dadd( -35.6133, -118.207, -42.6945, 1.33 ) }
    dend_31 { pt3dadd( -35.144, -118.915, -43.0332, 0.22 ) }
    dend_31 { pt3dadd( -34.9241, -119.239, -43.1938, 0.22 ) }
    dend_31 { pt3dadd( -34.6588, -119.659, -43.4039, 0.96 ) }
    dend_31 { pt3dadd( -34.494, -119.957, -43.5528, 1.11 ) }
    dend_31 { pt3dadd( -34.2125, -120.529, -43.8326, 0.52 ) }
    dend_31 { pt3dadd( -33.8081, -121.454, -44.2695, 0.22 ) }
    dend_31 { pt3dadd( -33.6336, -121.894, -44.4739, 0.22 ) }
    dend_31 { pt3dadd( -33.4612, -122.377, -44.6995, 0.88 ) }
    dend_31 { pt3dadd( -33.3469, -122.73, -44.8811, 1.03 ) }
    dend_31 { pt3dadd( -33.1615, -123.341, -45.224, 0.22 ) }
    dend_31 { pt3dadd( -33.0751, -123.622, -45.3915, 0.22 ) }
    dend_31 { pt3dadd( -32.9391, -124.033, -45.6447, 0.66 ) }
    dend_31 { pt3dadd( -32.7762, -124.489, -45.9235, 0.74 ) }
    dend_31 { pt3dadd( -32.3783, -125.548, -46.5434, 0.22 ) }
    dend_31 { pt3dadd( -32.0992, -126.319, -46.9436, 0.22 ) }
    dend_31 { pt3dadd( -31.8022, -127.302, -47.3885, 0.96 ) }
    dend_31 { pt3dadd( -31.7092, -127.675, -47.5366, 1.25 ) }
    dend_31 { pt3dadd( -31.6287, -128.176, -47.6997, 1.25 ) }
    dend_31 { pt3dadd( -31.5656, -128.922, -47.8831, 0.66 ) }
    dend_31 { pt3dadd( -31.5705, -129.843, -48.0544, 0.15 ) }
    dend_31 { pt3dadd( -31.6677, -130.635, -48.188, 0.37 ) }
    dend_31 { pt3dadd( -31.7502, -131.004, -48.2586, 0.37 ) }
    dend_31 { pt3dadd( -32.1427, -132.355, -48.5556, 0.22 ) }
    dend_31 { pt3dadd( -32.2175, -132.565, -48.6126, 0.74 ) }
    dend_31 { pt3dadd( -32.3963, -133.012, -48.759, 0.88 ) }
    dend_31 { pt3dadd( -33.008, -134.431, -49.2762, 0.22 ) }
    dend_31 { pt3dadd( -33.2449, -134.965, -49.4739, 0.74 ) }
    dend_31 { pt3dadd( -33.4824, -135.482, -49.6628, 0.74 ) }
    dend_31 { pt3dadd( -34.0025, -136.608, -50.082, 0.22 ) }
    dend_31 { pt3dadd( -34.4359, -137.552, -50.4216, 0.22 ) }
    dend_31 { pt3dadd( -34.9223, -138.638, -50.7567, 0.22 ) }
    dend_31 { pt3dadd( -35.3615, -139.663, -51.011, 0.22 ) }
    dend_31 { pt3dadd( -35.5919, -140.222, -51.1153, 0.88 ) }
    dend_31 { pt3dadd( -35.764, -140.663, -51.1725, 1.11 ) }
    dend_31 { pt3dadd( -35.9166, -141.112, -51.1973, 1.11 ) }
    dend_31 { pt3dadd( -36.2378, -142.207, -51.202, 0.15 ) }
    dend_31 { pt3dadd( -36.4522, -143.094, -51.1831, 0.15 ) }
    dend_31 { pt3dadd( -36.5553, -143.586, -51.1651, 0.81 ) }
    dend_31 { pt3dadd( -36.6366, -144.015, -51.1467, 0.96 ) }
    dend_31 { pt3dadd( -36.8999, -145.625, -51.2589, 0.22 ) }
    dend_31 { pt3dadd( -37.0097, -146.381, -51.3307, 0.22 ) }
    dend_31 { pt3dadd( -37.1155, -147.218, -51.4608, 0.22 ) }
    dend_31 { pt3dadd( -37.1532, -147.554, -51.5294, 1.18 ) }
    dend_31 { pt3dadd( -37.1857, -147.875, -51.6154, 1.18 ) }
    dend_31 { pt3dadd( -37.416, -150.246, -52.5846, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 23.4315, 145.323, -32.9003, 0.37 ) }
    dend_26 { pt3dadd( 23.4688, 144.449, -31.7267, 0.37 ) }
    dend_26 { pt3dadd( 23.5448, 143.802, -30.8302, 0.52 ) }
    dend_26 { pt3dadd( 23.6749, 142.933, -29.5928, 0.74 ) }
    dend_26 { pt3dadd( 23.803, 142.247, -28.615, 1.11 ) }
    dend_26 { pt3dadd( 23.881, 141.863, -28.0501, 1.11 ) }
    dend_26 { pt3dadd( 23.9901, 141.309, -27.2271, 0.81 ) }
    dend_26 { pt3dadd( 24.1788, 140.137, -25.3149, 0.22 ) }
    dend_26 { pt3dadd( 24.2676, 139.561, -24.3923, 0.22 ) }
    dend_26 { pt3dadd( 24.3387, 139.164, -23.8197, 0.66 ) }
    dend_26 { pt3dadd( 24.4147, 138.709, -23.2289, 0.66 ) }
    dend_26 { pt3dadd( 24.4901, 138.226, -22.6499, 0.66 ) }
    dend_26 { pt3dadd( 24.6026, 137.246, -21.5343, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( 24.6767, 136.259, -20.4756, 0.22 ) }
    dend_26 { pt3dadd( 24.7504, 135.146, -19.3599, 0.22 ) }
    dend_26 { pt3dadd( 24.7828, 134.598, -18.8434, 0.44 ) }
    dend_26 { pt3dadd( 24.8185, 134.214, -18.5201, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 23.4315, 145.323, -32.9003, 0.22 ) }
    dend_25 { pt3dadd( 24.5812, 145.529, -32.3182, 0.22 ) }
    dend_25 { pt3dadd( 24.8486, 145.593, -32.1979, 0.44 ) }
    dend_25 { pt3dadd( 26.076, 145.965, -31.6659, 0.22 ) }
    dend_25 { pt3dadd( 26.6103, 146.142, -31.4551, 0.59 ) }
    dend_25 { pt3dadd( 27.029, 146.282, -31.3134, 0.59 ) }
    dend_25 { pt3dadd( 28.8252, 146.884, -30.7058, 0.22 ) }
    dend_25 { pt3dadd( 30.9214, 147.609, -30.0562, 0.22 ) }
    dend_25 { pt3dadd( 31.6779, 147.888, -29.8419, 0.66 ) }
    dend_25 { pt3dadd( 32.2791, 148.132, -29.6992, 0.81 ) }
    dend_25 { pt3dadd( 33.1988, 148.517, -29.5101, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 10.5963, 190.583, 4.45488, 0.59 ) }
    dend_19 { pt3dadd( 12.1511, 191.769, 4.33664, 0.59 ) }
    dend_19 { pt3dadd( 12.6524, 192.17, 4.31465, 0.44 ) }
    dend_19 { pt3dadd( 13.6972, 193.051, 4.24212, 0.22 ) }
    dend_19 { pt3dadd( 14.5923, 193.868, 4.18066, 0.81 ) }
    dend_19 { pt3dadd( 15.0667, 194.318, 4.13264, 0.96 ) }
    dend_19 { pt3dadd( 15.2865, 194.53, 4.10395, 0.96 ) }
    dend_19 { pt3dadd( 15.9659, 195.277, 3.99259, 0.22 ) }
    dend_19 { pt3dadd( 16.9357, 196.48, 3.7148, 0.22 ) }
    dend_19 { pt3dadd( 17.7322, 197.606, 3.38402, 1.11 ) }
    dend_19 { pt3dadd( 18.1256, 198.235, 3.18433, 1.47 ) }
    dend_19 { pt3dadd( 18.295, 198.544, 3.06667, 1.47 ) }
    dend_19 { pt3dadd( 18.9093, 199.899, 2.50858, 0.22 ) }
    dend_19 { pt3dadd( 19.3575, 201.14, 1.95322, 0.22 ) }
    dend_19 { pt3dadd( 19.5663, 201.872, 1.61282, 0.66 ) }
    dend_19 { pt3dadd( 19.6561, 202.236, 1.43215, 0.66 ) }
    dend_19 { pt3dadd( 19.9811, 203.971, 0.563314, 0.22 ) }
    dend_19 { pt3dadd( 20.2002, 205.553, -0.232381, 0.22 ) }
    dend_19 { pt3dadd( 20.2819, 206.454, -0.700543, 0.22 ) }
    dend_19 { pt3dadd( 20.3438, 207.501, -1.24862, 1.47 ) }
    dend_19 { pt3dadd( 20.3499, 208.098, -1.55585, 1.47 ) }
    dend_19 { pt3dadd( 20.2565, 210.117, -2.54107, 0.22 ) }
    dend_19 { pt3dadd( 20.1867, 210.773, -2.84985, 0.81 ) }
    dend_19 { pt3dadd( 20.0905, 211.324, -3.10163, 0.81 ) }
    dend_19 { pt3dadd( 19.7657, 212.671, -3.6838, 0.22 ) }
    dend_19 { pt3dadd( 19.4493, 213.739, -4.13342, 0.22 ) }
    dend_19 { pt3dadd( 19.0716, 214.848, -4.59248, 1.47 ) }
    dend_19 { pt3dadd( 18.9014, 215.306, -4.79898, 1.84 ) }
    dend_19 { pt3dadd( 18.2508, 216.971, -5.56654, 0.22 ) }
    dend_19 { pt3dadd( 17.7198, 218.246, -6.15792, 0.22 ) }
    dend_19 { pt3dadd( 17.5161, 218.687, -6.37315, 0.22 ) }
    dend_19 { pt3dadd( 16.9681, 219.84, -6.98841, 1.55 ) }
    dend_19 { pt3dadd( 16.6193, 220.533, -7.39324, 2.06 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 48/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 10.5963, 190.583, 4.45488, 0.22 ) }
    dend_18 { pt3dadd( 11.8319, 194.032, 4.81325, 0.22 ) }
    dend_18 { pt3dadd( 12.5138, 195.906, 5.04896, 0.22 ) }
    dend_18 { pt3dadd( 13.0439, 197.359, 5.25042, 0.96 ) }
    dend_18 { pt3dadd( 13.2717, 197.991, 5.3444, 1.18 ) }
    dend_18 { pt3dadd( 13.5041, 198.645, 5.44737, 1.18 ) }
    dend_18 { pt3dadd( 13.8739, 199.713, 5.6198, 0.22 ) }
    dend_18 { pt3dadd( 14.1317, 200.475, 5.77098, 0.44 ) }
    dend_18 { pt3dadd( 14.2578, 200.865, 5.83821, 0.44 ) }
    dend_18 { pt3dadd( 14.5985, 201.987, 6.00843, 0.22 ) }
    dend_18 { pt3dadd( 14.8872, 202.973, 6.15065, 0.44 ) }
    dend_18 { pt3dadd( 15.2019, 204.066, 6.30536, 0.44 ) }
    dend_18 { pt3dadd( 16.1131, 207.41, 6.7504, 0.22 ) }
    dend_18 { pt3dadd( 16.8819, 210.228, 7.09505, 0.22 ) }
    dend_18 { pt3dadd( 17.1801, 211.285, 7.21462, 0.66 ) }
    dend_18 { pt3dadd( 17.3492, 211.866, 7.27429, 0.74 ) }
    dend_18 { pt3dadd( 17.642, 212.788, 7.35178, 0.22 ) }
    dend_18 { pt3dadd( 18.4104, 215.041, 7.51561, 0.22 ) }
    dend_18 { pt3dadd( 18.8752, 216.364, 7.59561, 1.03 ) }
    dend_18 { pt3dadd( 19.1913, 217.241, 7.64011, 1.25 ) }
    dend_18 { pt3dadd( 19.4327, 217.904, 7.669, 1.25 ) }
    dend_18 { pt3dadd( 20.2541, 220.134, 7.75344, 0.22 ) }
    dend_18 { pt3dadd( 21.6246, 223.801, 7.88623, 0.22 ) }
    dend_18 { pt3dadd( 22.0915, 225.036, 7.9357, 0.74 ) }
    dend_18 { pt3dadd( 22.3438, 225.749, 7.97459, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 73/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 2.86082, 79.2069, 14.3622, 0.37 ) }
    dend_16 { pt3dadd( 4.36473, 87.9372, 20.1448, 0.37 ) }
    dend_16 { pt3dadd( 6.45289, 96.0826, 26.6018, 0.37 ) }
    dend_16 { pt3dadd( 6.03237, 103.958, 33.7113, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.86082, 79.2069, 14.3622, 0.22 ) }
    dend_15 { pt3dadd( 7.29386, 90.6442, 12.3742, 0.37 ) }
    dend_15 { pt3dadd( 11.9925, 101.571, 8.67692, 0.37 ) }
    dend_15 { pt3dadd( 17.0053, 112.103, 4.25368, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 81/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 97.0251, -7.99022, 17.261, 0.37 ) }
    dend_10 { pt3dadd( 103.524, -9.70207, 18.7143, 0.37 ) }
    dend_10 { pt3dadd( 110.303, -10.5759, 19.5446, 0.37 ) }
    dend_10 { pt3dadd( 117.123, -10.4859, 20.4953, 0.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 97.0251, -7.99022, 17.261, 0.22 ) }
    dend_9 { pt3dadd( 107.152, -10.7828, 19.2322, 0.37 ) }
    dend_9 { pt3dadd( 117.745, -12.1084, 20.0044, 0.37 ) }
    dend_9 { pt3dadd( 128.204, -13.7369, 21.573, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 89/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 48.9128, 8.29918, 3.79389, 0.52 ) }
    dend_5 { pt3dadd( 50.3532, 8.55565, 4.22136, 0.52 ) }
    dend_5 { pt3dadd( 50.9131, 8.62853, 4.39378, 0.52 ) }
    dend_5 { pt3dadd( 51.4937, 8.68565, 4.61403, 0.52 ) }
    dend_5 { pt3dadd( 52.6063, 8.7792, 5.07243, 0.52 ) }
    dend_5 { pt3dadd( 53.271, 8.81813, 5.36207, 0.88 ) }
    dend_5 { pt3dadd( 54.2886, 8.85755, 5.79722, 0.88 ) }
    dend_5 { pt3dadd( 55.0429, 8.88333, 6.10875, 0.88 ) }
    dend_5 { pt3dadd( 55.8454, 8.81451, 6.45013, 0.81 ) }
    dend_5 { pt3dadd( 56.3593, 8.65755, 6.64348, 0.81 ) }
    dend_5 { pt3dadd( 57.1277, 8.23483, 6.90104, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_5 { pt3dadd( 57.7382, 7.76143, 7.06149, 0.59 ) }
    dend_5 { pt3dadd( 58.3909, 7.15006, 7.16249, 0.59 ) }
    dend_5 { pt3dadd( 59.0369, 6.49492, 7.18924, 0.74 ) }
    dend_5 { pt3dadd( 60.0423, 5.36829, 7.1537, 0.66 ) }
    dend_5 { pt3dadd( 60.4529, 4.8632, 7.12653, 0.66 ) }
    dend_5 { pt3dadd( 61.0709, 4.0329, 7.07491, 0.52 ) }
    dend_5 { pt3dadd( 61.4894, 3.45915, 7.03299, 0.52 ) }
    dend_5 { pt3dadd( 62.0303, 2.74706, 6.96702, 0.81 ) }
    dend_5 { pt3dadd( 62.7031, 1.86205, 6.87342, 0.81 ) }
    dend_5 { pt3dadd( 63.1468, 1.2484, 6.82121, 0.81 ) }
    dend_5 { pt3dadd( 63.6789, 0.439933, 6.75176, 0.81 ) }
    dend_5 { pt3dadd( 64.3104, -0.632326, 6.66983, 0.88 ) }
    dend_5 { pt3dadd( 64.809, -1.58214, 6.60712, 1.11 ) }
    dend_5 { pt3dadd( 65.1127, -2.2071, 6.56404, 1.11 ) }
    dend_5 { pt3dadd( 65.6648, -3.46544, 6.48629, 0.88 ) }
    dend_5 { pt3dadd( 66.0322, -4.46743, 6.46094, 0.96 ) }
    dend_5 { pt3dadd( 66.26, -5.24763, 6.48498, 0.96 ) }
    dend_5 { pt3dadd( 66.4107, -5.8981, 6.54041, 0.96 ) }
    dend_5 { pt3dadd( 66.5311, -6.4918, 6.61237, 0.66 ) }
    dend_5 { pt3dadd( 66.722, -7.43212, 6.77944, 0.66 ) }
    dend_5 { pt3dadd( 67.0119, -8.66437, 7.07075, 0.81 ) }
    dend_5 { pt3dadd( 67.3235, -9.63656, 7.34347, 1.11 ) }
    dend_5 { pt3dadd( 67.7671, -10.7263, 7.69426, 0.96 ) }
    dend_5 { pt3dadd( 68.1627, -11.5017, 7.93415, 0.81 ) }
    dend_5 { pt3dadd( 68.7767, -12.4818, 8.22163, 0.81 ) }
    dend_5 { pt3dadd( 69.5564, -13.4945, 8.48834, 0.59 ) }
    dend_5 { pt3dadd( 70.24, -14.2561, 8.65304, 0.37 ) }
    dend_5 { pt3dadd( 70.8812, -14.9075, 8.76018, 0.37 ) }
    dend_5 { pt3dadd( 71.8389, -15.85, 8.86567, 0.59 ) }
    dend_5 { pt3dadd( 72.3654, -16.3772, 8.88125, 0.88 ) }
    dend_5 { pt3dadd( 72.6569, -16.6854, 8.86386, 1.11 ) }
    dend_5 { pt3dadd( 73.0282, -17.1144, 8.83932, 1.11 ) }
    dend_5 { pt3dadd( 73.5168, -17.7151, 8.8287, 0.74 ) }
    dend_5 { pt3dadd( 73.9108, -18.1739, 8.82004, 0.74 ) }
    dend_5 { pt3dadd( 74.2997, -18.6431, 8.80288, 0.74 ) }
    dend_5 { pt3dadd( 74.8896, -19.3921, 8.73405, 0.74 ) }
    dend_5 { pt3dadd( 75.4864, -20.1849, 8.61482, 0.74 ) }
    dend_5 { pt3dadd( 76.0288, -20.9049, 8.48763, 0.66 ) }
    dend_5 { pt3dadd( 76.5435, -21.5777, 8.34875, 0.66 ) }
    dend_5 { pt3dadd( 77.2264, -22.4614, 8.13897, 0.96 ) }
    dend_5 { pt3dadd( 78.029, -23.5299, 7.84792, 1.4 ) }
    dend_5 { pt3dadd( 78.4341, -24.1159, 7.66457, 1.62 ) }
    dend_5 { pt3dadd( 78.8465, -24.7633, 7.43884, 1.77 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 48.9128, 8.29918, 3.79389, 0.88 ) }
    dend_4 { pt3dadd( 50.1735, 9.46414, 3.61044, 0.88 ) }
    dend_4 { pt3dadd( 51.3055, 10.423, 3.53166, 0.88 ) }
    dend_4 { pt3dadd( 52.5812, 11.3619, 3.52909, 0.88 ) }
    dend_4 { pt3dadd( 53.9677, 12.2417, 3.58679, 0.88 ) }
    dend_4 { pt3dadd( 55.6116, 13.1731, 3.72422, 0.74 ) }
    dend_4 { pt3dadd( 56.652, 13.738, 3.83868, 0.74 ) }
    dend_4 { pt3dadd( 58.1215, 14.4601, 4.08594, 0.88 ) }
    dend_4 { pt3dadd( 59.4417, 15.0331, 4.35221, 0.88 ) }
    dend_4 { pt3dadd( 60.5358, 15.4568, 4.5795, 0.88 ) }
    dend_4 { pt3dadd( 61.5996, 15.8498, 4.79449, 0.66 ) }
    dend_4 { pt3dadd( 62.3488, 16.1483, 4.91572, 0.66 ) }
    dend_4 { pt3dadd( 63.3626, 16.6376, 4.96963, 0.88 ) }
    dend_4 { pt3dadd( 63.9743, 16.9967, 4.93565, 0.88 ) }
    dend_4 { pt3dadd( 64.5629, 17.3861, 4.85751, 0.88 ) }
    dend_4 { pt3dadd( 65.1623, 17.7928, 4.76032, 0.88 ) }
    dend_4 { pt3dadd( 66.2782, 18.5329, 4.58859, 0.59 ) }
    dend_4 { pt3dadd( 67.0657, 19.0555, 4.5232, 0.59 ) }
    dend_4 { pt3dadd( 67.6643, 19.4909, 4.50611, 0.81 ) }
    dend_4 { pt3dadd( 68.4453, 20.1325, 4.50292, 0.81 ) }
    dend_4 { pt3dadd( 69.0404, 20.6923, 4.50014, 0.81 ) }
    dend_4 { pt3dadd( 69.7112, 21.3761, 4.49419, 0.66 ) }
    dend_4 { pt3dadd( 70.672, 22.393, 4.48905, 0.59 ) }
    dend_4 { pt3dadd( 71.6931, 23.6375, 4.41352, 0.59 ) }
    dend_4 { pt3dadd( 72.2462, 24.3895, 4.31513, 0.59 ) }
    dend_4 { pt3dadd( 72.882, 25.3106, 4.1272, 0.44 ) }
    dend_4 { pt3dadd( 73.2848, 25.88, 3.97138, 0.44 ) }
    dend_4 { pt3dadd( 73.723, 26.4642, 3.7735, 0.44 ) }
    dend_4 { pt3dadd( 74.8215, 27.8433, 3.24327, 0.44 ) }
    dend_4 { pt3dadd( 75.6925, 28.8742, 2.84042, 0.66 ) }
    dend_4 { pt3dadd( 76.4204, 29.7134, 2.50912, 0.66 ) }
    dend_4 { pt3dadd( 77.3211, 30.7362, 2.09688, 0.74 ) }
    dend_4 { pt3dadd( 78.0248, 31.5316, 1.77049, 0.96 ) }
    dend_4 { pt3dadd( 78.5661, 32.1229, 1.52677, 0.96 ) }
    dend_4 { pt3dadd( 79.3647, 32.9069, 1.20864, 0.66 ) }
    dend_4 { pt3dadd( 80.147, 33.6387, 0.915164, 0.66 ) }
    dend_4 { pt3dadd( 81.3887, 34.7764, 0.459529, 0.59 ) }
    dend_4 { pt3dadd( 82.5357, 35.871, 0.0491551, 0.59 ) }
    dend_4 { pt3dadd( 83.2754, 36.601, -0.207693, 0.81 ) }
    dend_4 { pt3dadd( 83.8354, 37.1762, -0.400764, 0.81 ) }
    dend_4 { pt3dadd( 84.7911, 38.1277, -0.701471, 0.52 ) }
    dend_4 { pt3dadd( 85.5296, 38.8042, -0.899884, 0.52 ) }
    dend_4 { pt3dadd( 86.5085, 39.653, -1.1227, 0.52 ) }
    dend_4 { pt3dadd( 87.3323, 40.3517, -1.29894, 0.52 ) }
    dend_4 { pt3dadd( 88.1222, 41.0054, -1.46507, 0.37 ) }
    dend_4 { pt3dadd( 89.5315, 42.1385, -1.75765, 0.37 ) }
    dend_4 { pt3dadd( 90.4602, 42.8651, -1.95487, 0.59 ) }
    dend_4 { pt3dadd( 91.0538, 43.2933, -2.07809, 0.59 ) }
    dend_4 { pt3dadd( 92.3177, 44.1516, -2.35669, 0.74 ) }
    dend_4 { pt3dadd( 92.9775, 44.604, -2.50539, 0.74 ) }
    dend_4 { pt3dadd( 93.5382, 45.0088, -2.6345, 0.74 ) }
    dend_4 { pt3dadd( 94.3369, 45.669, -2.83591, 0.74 ) }
    dend_4 { pt3dadd( 94.8779, 46.1196, -3.02042, 0.44 ) }
    dend_4 { pt3dadd( 95.6618, 46.6977, -3.36273, 0.44 ) }
    dend_4 { pt3dadd( 96.3417, 47.1215, -3.68952, 0.81 ) }
    dend_4 { pt3dadd( 97.4891, 47.7397, -4.26663, 0.81 ) }
    dend_4 { pt3dadd( 98.3358, 48.1198, -4.71296, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( 99.8161, 48.7135, -5.50508, 0.52 ) }
    dend_4 { pt3dadd( 100.951, 49.1445, -6.1682, 0.44 ) }
    dend_4 { pt3dadd( 101.704, 49.3883, -6.6417, 0.44 ) }
    dend_4 { pt3dadd( 102.366, 49.5772, -7.08764, 0.44 ) }
    dend_4 { pt3dadd( 102.887, 49.6964, -7.46265, 0.44 ) }
    dend_4 { pt3dadd( 103.754, 49.8718, -8.05703, 0.74 ) }
    dend_4 { pt3dadd( 104.493, 50.0957, -8.42866, 0.59 ) }
    dend_4 { pt3dadd( 104.99, 50.3063, -8.66835, 0.59 ) }
    dend_4 { pt3dadd( 113.815, 58.9654, -9.66319, 0.59 ) }
    dend_4 { pt3dadd( 122.929, 67.3354, -10.6379, 0.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -99.5151, -341.842, 9.80794, 0.52 ) }
    dend_39 { pt3dadd( -100.1, -343.282, 9.773, 0.52 ) }
    dend_39 { pt3dadd( -100.346, -343.863, 9.76497, 0.29 ) }
    dend_39 { pt3dadd( -100.687, -344.623, 9.74925, 0.44 ) }
    dend_39 { pt3dadd( -101.01, -345.33, 9.73007, 0.44 ) }
    dend_39 { pt3dadd( -101.267, -345.877, 9.71215, 0.29 ) }
    dend_39 { pt3dadd( -101.659, -346.673, 9.67319, 0.29 ) }
    dend_39 { pt3dadd( -102.064, -347.431, 9.62437, 0.81 ) }
    dend_39 { pt3dadd( -102.371, -348.012, 9.56512, 1.18 ) }
    dend_39 { pt3dadd( -102.532, -348.33, 9.52574, 1.4 ) }
    dend_39 { pt3dadd( -102.784, -348.859, 9.45658, 1.4 ) }
    dend_39 { pt3dadd( -103.004, -349.368, 9.39, 1.11 ) }
    dend_39 { pt3dadd( -103.44, -350.469, 9.25413, 0.52 ) }
    dend_39 { pt3dadd( -103.73, -351.333, 9.16352, 0.44 ) }
    dend_39 { pt3dadd( -103.931, -352.028, 9.10245, 0.74 ) }
    dend_39 { pt3dadd( -104.158, -352.865, 9.03983, 0.81 ) }
    dend_39 { pt3dadd( -104.32, -353.495, 8.99604, 0.81 ) }
    dend_39 { pt3dadd( -104.474, -354.164, 8.95119, 0.74 ) }
    dend_39 { pt3dadd( -104.661, -355.049, 8.93201, 0.22 ) }
    dend_39 { pt3dadd( -104.744, -355.458, 8.9294, 0.22 ) }
    dend_39 { pt3dadd( -104.871, -356.177, 8.92287, 0.22 ) }
    dend_39 { pt3dadd( -104.957, -356.801, 8.93624, 0.66 ) }
    dend_39 { pt3dadd( -105.029, -357.451, 8.97805, 0.81 ) }
    dend_39 { pt3dadd( -105.115, -358.496, 9.08502, 0.66 ) }
    dend_39 { pt3dadd( -105.159, -359.447, 9.22512, 0.22 ) }
    dend_39 { pt3dadd( -105.157, -360.295, 9.38421, 0.22 ) }
    dend_39 { pt3dadd( -105.124, -360.913, 9.52396, 0.22 ) }
    dend_39 { pt3dadd( -105.082, -361.51, 9.69266, 0.96 ) }
    dend_39 { pt3dadd( -105.066, -361.817, 9.78663, 1.18 ) }
    dend_39 { pt3dadd( -105.047, -362.273, 9.92519, 1.18 ) }
    dend_39 { pt3dadd( -105.035, -362.647, 10.0627, 1.18 ) }
    dend_39 { pt3dadd( -105.037, -363.36, 10.3117, 0.74 ) }
    dend_39 { pt3dadd( -105.092, -364.441, 10.652, 0.22 ) }
    dend_39 { pt3dadd( -105.123, -364.797, 10.757, 0.22 ) }
    dend_39 { pt3dadd( -105.17, -365.212, 10.8767, 0.44 ) }
    dend_39 { pt3dadd( -105.214, -365.572, 10.9711, 0.44 ) }
    dend_39 { pt3dadd( -105.319, -366.514, 11.1946, 0.22 ) }
    dend_39 { pt3dadd( -105.375, -367.107, 11.3148, 0.96 ) }
    dend_39 { pt3dadd( -105.4, -367.561, 11.3884, 1.18 ) }
    dend_39 { pt3dadd( -105.414, -367.997, 11.4536, 1.25 ) }
    dend_39 { pt3dadd( -105.439, -368.828, 11.5686, 0.96 ) }
    dend_39 { pt3dadd( -105.506, -370.02, 11.7176, 0.29 ) }
    dend_39 { pt3dadd( -105.582, -370.959, 11.8209, 0.22 ) }
    dend_39 { pt3dadd( -105.701, -372.019, 11.9152, 0.22 ) }
    dend_39 { pt3dadd( -105.782, -372.564, 11.9562, 0.81 ) }
    dend_39 { pt3dadd( -105.872, -373.008, 11.9816, 0.96 ) }
    dend_39 { pt3dadd( -106.277, -374.55, 12.056, 0.22 ) }
    dend_39 { pt3dadd( -106.435, -375.032, 12.075, 0.22 ) }
    dend_39 { pt3dadd( -106.711, -375.798, 12.1086, 0.59 ) }
    dend_39 { pt3dadd( -106.927, -376.357, 12.1378, 0.59 ) }
    dend_39 { pt3dadd( -107.242, -377.199, 12.1865, 0.52 ) }
    dend_39 { pt3dadd( -107.484, -377.891, 12.2345, 0.52 ) }
    dend_39 { pt3dadd( -107.786, -378.83, 12.3226, 0.52 ) }
    dend_39 { pt3dadd( -107.901, -379.2, 12.363, 0.96 ) }
    dend_39 { pt3dadd( -108.088, -379.832, 12.4384, 0.96 ) }
    dend_39 { pt3dadd( -108.289, -380.543, 12.529, 0.59 ) }
    dend_39 { pt3dadd( -108.631, -381.745, 12.7199, 0.22 ) }
    dend_39 { pt3dadd( -108.974, -382.986, 12.9254, 0.22 ) }
    dend_39 { pt3dadd( -109.134, -383.566, 13.0267, 0.22 ) }
    dend_39 { pt3dadd( -109.284, -384.081, 13.1202, 0.96 ) }
    dend_39 { pt3dadd( -109.39, -384.433, 13.189, 1.18 ) }
    dend_39 { pt3dadd( -109.611, -385.132, 13.3424, 0.52 ) }
    dend_39 { pt3dadd( -110.104, -393.804, 13.304, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -99.5151, -341.842, 9.80794, 0.29 ) }
    dend_36 { pt3dadd( -101.911, -341.089, 10.4186, 0.29 ) }
    dend_36 { pt3dadd( -103.192, -341.024, 10.714, 0.37 ) }
    dend_36 { pt3dadd( -103.776, -341.147, 10.8365, 0.37 ) }
    dend_36 { pt3dadd( -105.108, -341.636, 11.153, 0.37 ) }
    dend_36 { pt3dadd( -106.394, -342.182, 11.3208, 0.52 ) }
    dend_36 { pt3dadd( -107.517, -342.682, 11.4023, 0.59 ) }
    dend_36 { pt3dadd( -109.037, -343.526, 11.4006, 0.59 ) }
    dend_36 { pt3dadd( -110.386, -344.325, 11.3352, 0.37 ) }
    dend_36 { pt3dadd( -111.631, -345.078, 11.2286, 0.37 ) }
    dend_36 { pt3dadd( -113.843, -346.437, 10.9485, 0.37 ) }
    dend_36 { pt3dadd( -114.862, -347.005, 10.7955, 0.37 ) }
    dend_36 { pt3dadd( -115.806, -347.49, 10.6454, 0.29 ) }
    dend_36 { pt3dadd( -116.56, -347.844, 10.5322, 0.29 ) }
    dend_36 { pt3dadd( -117.41, -348.233, 10.4266, 0.81 ) }
    dend_36 { pt3dadd( -118.092, -348.573, 10.3695, 0.81 ) }
    dend_36 { pt3dadd( -119.025, -349.147, 10.4172, 0.81 ) }
    dend_36 { pt3dadd( -120.595, -350.27, 10.5583, 0.29 ) }
    dend_36 { pt3dadd( -121.34, -350.874, 10.6525, 0.66 ) }
    dend_36 { pt3dadd( -121.892, -351.364, 10.7539, 0.66 ) }
    dend_36 { pt3dadd( -122.403, -351.853, 10.8704, 0.66 ) }
    dend_36 { pt3dadd( -124.235, -353.721, 11.3512, 0.29 ) }
    dend_36 { pt3dadd( -125.047, -354.59, 11.5608, 0.44 ) }
    dend_36 { pt3dadd( -125.75, -355.339, 11.7393, 0.29 ) }
    dend_36 { pt3dadd( -126.591, -356.203, 11.9299, 0.74 ) }
    dend_36 { pt3dadd( -127.211, -356.787, 12.0269, 0.74 ) }
    dend_36 { pt3dadd( -128.237, -357.627, 12.1194, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_36 { pt3dadd( -130.058, -358.907, 12.1703, 0.29 ) }
    dend_36 { pt3dadd( -131.144, -359.595, 12.1629, 0.52 ) }
    dend_36 { pt3dadd( -131.881, -360.021, 12.1142, 0.52 ) }
    dend_36 { pt3dadd( -133.427, -360.847, 11.8985, 0.29 ) }
    dend_36 { pt3dadd( -134.579, -361.402, 11.7045, 0.29 ) }
    dend_36 { pt3dadd( -135.28, -361.693, 11.5694, 0.59 ) }
    dend_36 { pt3dadd( -136.11, -361.996, 11.3766, 0.59 ) }
    dend_36 { pt3dadd( -137.609, -362.518, 10.9898, 0.22 ) }
    dend_36 { pt3dadd( -138.451, -362.799, 10.7884, 0.29 ) }
    dend_36 { pt3dadd( -139.718, -363.229, 10.5304, 0.29 ) }
    dend_36 { pt3dadd( -140.316, -363.443, 10.4138, 0.29 ) }
    dend_36 { pt3dadd( -141.844, -364.06, 10.1278, 0.37 ) }
    dend_36 { pt3dadd( -142.997, -364.654, 10.0212, 0.37 ) }
    dend_36 { pt3dadd( -144.178, -365.401, 10.0471, 0.52 ) }
    dend_36 { pt3dadd( -145.531, -366.426, 10.1779, 1.55 ) }
    dend_36 { pt3dadd( -146.338, -367.14, 10.2929, 1.92 ) }
    dend_36 { pt3dadd( -147.106, -367.887, 10.4401, 1.92 ) }
    dend_36 { pt3dadd( -148.873, -369.749, 10.901, 0.29 ) }
    dend_36 { pt3dadd( -150.026, -371.063, 11.2339, 0.29 ) }
    dend_36 { pt3dadd( -150.949, -372.199, 11.5383, 0.29 ) }
    dend_36 { pt3dadd( -151.682, -373.12, 11.8031, 0.74 ) }
    dend_36 { pt3dadd( -152.046, -373.58, 11.9369, 0.96 ) }
    dend_36 { pt3dadd( -152.371, -373.973, 12.0473, 1.11 ) }
    dend_36 { pt3dadd( -153.31, -375.134, 12.3597, 0.52 ) }
    dend_36 { pt3dadd( -153.896, -375.912, 12.6089, 0.29 ) }
    dend_36 { pt3dadd( -154.753, -377.039, 13.0236, 0.22 ) }
    dend_36 { pt3dadd( -155.34, -377.771, 13.318, 0.44 ) }
    dend_36 { pt3dadd( -155.845, -378.367, 13.5735, 0.44 ) }
    dend_36 { pt3dadd( -157.244, -379.999, 14.3031, 0.22 ) }
    dend_36 { pt3dadd( -158.092, -380.968, 14.7611, 0.22 ) }
    dend_36 { pt3dadd( -158.91, -381.864, 15.1947, 1.25 ) }
    dend_36 { pt3dadd( -159.662, -382.674, 15.6127, 1.55 ) }
    dend_36 { pt3dadd( -160.024, -383.042, 15.8069, 1.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 78.8465, -24.7633, 7.43884, 0.74 ) }
    dend_7 { pt3dadd( 80.0583, -25.521, 8.60057, 0.74 ) }
    dend_7 { pt3dadd( 80.4127, -25.7562, 8.91091, 0.74 ) }
    dend_7 { pt3dadd( 81.0245, -26.1963, 9.38655, 0.59 ) }
    dend_7 { pt3dadd( 81.7506, -26.7657, 9.86753, 0.59 ) }
    dend_7 { pt3dadd( 82.4307, -27.3404, 10.2534, 0.59 ) }
    dend_7 { pt3dadd( 82.7723, -27.638, 10.4303, 0.59 ) }
    dend_7 { pt3dadd( 83.4509, -28.2789, 10.706, 0.59 ) }
    dend_7 { pt3dadd( 84.0327, -28.8478, 10.9053, 0.81 ) }
    dend_7 { pt3dadd( 84.8055, -29.596, 11.1665, 0.81 ) }
    dend_7 { pt3dadd( 85.4447, -30.1884, 11.3812, 0.37 ) }
    dend_7 { pt3dadd( 86.1088, -30.7635, 11.613, 0.37 ) }
    dend_7 { pt3dadd( 86.8844, -31.4274, 11.8947, 0.37 ) }
    dend_7 { pt3dadd( 87.6708, -32.1097, 12.2122, 0.37 ) }
    dend_7 { pt3dadd( 88.4208, -32.736, 12.5457, 0.37 ) }
    dend_7 { pt3dadd( 89.5435, -33.637, 13.0944, 0.22 ) }
    dend_7 { pt3dadd( 90.7383, -34.5711, 13.7091, 0.22 ) }
    dend_7 { pt3dadd( 97.0938, -41.2607, 16.1916, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 78.8465, -24.7633, 7.43884, 0.37 ) }
    dend_6 { pt3dadd( 78.9477, -26.2209, 6.51828, 0.37 ) }
    dend_6 { pt3dadd( 79.0799, -27.1581, 6.0011, 0.37 ) }
    dend_6 { pt3dadd( 79.2564, -28.0382, 5.55225, 0.37 ) }
    dend_6 { pt3dadd( 79.4919, -28.9679, 5.18004, 0.37 ) }
    dend_6 { pt3dadd( 79.7307, -29.7762, 4.88835, 0.37 ) }
    dend_6 { pt3dadd( 80.0464, -30.7292, 4.5802, 0.29 ) }
    dend_6 { pt3dadd( 80.603, -32.0641, 4.13586, 0.22 ) }
    dend_6 { pt3dadd( 81.2494, -33.465, 3.60841, 0.22 ) }
    dend_6 { pt3dadd( 82.1227, -35.1881, 2.87643, 0.22 ) }
    dend_6 { pt3dadd( 82.4573, -35.8174, 2.57178, 1.18 ) }
    dend_6 { pt3dadd( 82.7132, -36.3212, 2.26074, 1.4 ) }
    dend_6 { pt3dadd( 83.2933, -37.8157, 1.04913, 1.4 ) }
    dend_6 { pt3dadd( 83.5446, -38.9816, -0.139835, 0.44 ) }
    dend_6 { pt3dadd( 83.5585, -39.3723, -0.572161, 0.44 ) }
    dend_6 { pt3dadd( 83.4932, -39.9603, -1.25434, 0.29 ) }
    dend_6 { pt3dadd( 83.2751, -40.9589, -2.32825, 0.29 ) }
    dend_6 { pt3dadd( 82.91, -42.2347, -3.63887, 0.22 ) }
    dend_6 { pt3dadd( 82.5414, -43.2458, -4.51981, 0.22 ) }
    dend_6 { pt3dadd( 82.258, -43.8562, -5.03366, 1.03 ) }
    dend_6 { pt3dadd( 82.1011, -44.1702, -5.27868, 1.33 ) }
    dend_6 { pt3dadd( 81.8648, -44.6173, -5.59127, 1.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 73/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -160.024, -383.042, 15.8069, 0.29 ) }
    dend_38 { pt3dadd( -160.672, -382.37, 16.3525, 0.29 ) }
    dend_38 { pt3dadd( -160.819, -382.22, 16.4689, 0.52 ) }
    dend_38 { pt3dadd( -161.048, -381.984, 16.6423, 0.59 ) }
    dend_38 { pt3dadd( -162.398, -380.624, 17.5425, 0.22 ) }
    dend_38 { pt3dadd( -162.784, -380.244, 17.7812, 0.22 ) }
    dend_38 { pt3dadd( -163.323, -379.73, 18.0944, 0.66 ) }
    dend_38 { pt3dadd( -163.621, -379.448, 18.2414, 0.66 ) }
    dend_38 { pt3dadd( -164.904, -378.292, 18.8174, 0.22 ) }
    dend_38 { pt3dadd( -165.441, -377.835, 19.0382, 0.22 ) }
    dend_38 { pt3dadd( -165.938, -377.45, 19.2306, 0.52 ) }
    dend_38 { pt3dadd( -166.292, -377.196, 19.3648, 0.66 ) }
    dend_38 { pt3dadd( -167.263, -376.552, 19.7289, 0.22 ) }
    dend_38 { pt3dadd( -169.189, -375.304, 20.4514, 0.22 ) }
    dend_38 { pt3dadd( -170.431, -374.538, 20.9184, 0.22 ) }
    dend_38 { pt3dadd( -171.57, -373.842, 21.3756, 1.18 ) }
    dend_38 { pt3dadd( -171.889, -373.65, 21.5033, 1.4 ) }
    dend_38 { pt3dadd( -172.379, -373.365, 21.702, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 91/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -160.024, -383.042, 15.8069, 0.22 ) }
    dend_37 { pt3dadd( -161.019, -384.604, 16.0212, 0.22 ) }
    dend_37 { pt3dadd( -161.805, -385.888, 16.2687, 0.22 ) }
    dend_37 { pt3dadd( -162.138, -386.466, 16.39, 0.44 ) }
    dend_37 { pt3dadd( -162.28, -386.72, 16.4451, 0.44 ) }
    dend_37 { pt3dadd( -163.581, -389.151, 16.9697, 0.22 ) }
    dend_37 { pt3dadd( -164.189, -390.289, 17.2152, 0.44 ) }
    dend_37 { pt3dadd( -164.703, -391.245, 17.4343, 0.22 ) }
    dend_37 { pt3dadd( -165.021, -391.891, 17.5921, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_37 { pt3dadd( -165.285, -392.45, 17.7369, 0.66 ) }
    dend_37 { pt3dadd( -165.476, -392.88, 17.8556, 0.44 ) }
    dend_37 { pt3dadd( -169.027, -402.845, 20.7972, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, axon_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_5 = new SectionList()
    dend_49 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_49 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_44 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_48 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_45 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_34 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_17 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_47 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_40 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_32 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_31 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_39 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_36 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_11 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_13 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_6 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_7 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_10 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_25 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_26 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_46 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 3
    dend_42 nseg = 3
    dend_27 nseg = 3
    dend_51 nseg = 3
    dend_50 nseg = 3
    dend_44 nseg = 3
    dend_33 nseg = 3
    dend_22 nseg = 7
    dend_12 nseg = 9
    dend_1 nseg = 5
    dend_48 nseg = 3
    dend_45 nseg = 3
    dend_41 nseg = 9
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_17 nseg = 7
    dend_14 nseg = 3
    dend_8 nseg = 3
    dend_47 nseg = 11
    dend_40 nseg = 5
    dend_35 nseg = 9
    dend_32 nseg = 7
    dend_31 nseg = 5
    dend_5 nseg = 3
    dend_4 nseg = 5
    dend_39 nseg = 3
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_ChC_c38923facb_0_0


