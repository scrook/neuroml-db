// Cell: cNAC187_L5_LBC_078d827ab9_0_0
/*
{
  "id" : "cNAC187_L5_LBC_078d827ab9_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.26545, 12.8263, -0.385372, 4.20571", "-2.99538, 11.4835, -0.361166, 7.19402", "-2.72531, 10.1406, -0.336961, 9.45629", "-2.45524, 8.79768, -0.312756, 10.8887", "-2.18516, 7.45479, -0.28855, 12.1858", "-1.91509, 6.11191, -0.264345, 13.0837", "-1.64502, 4.76902, -0.24014, 13.8391", "-1.37495, 3.42613, -0.215934, 14.1927", "-1.10488, 2.08325, -0.191729, 14.7245", "-0.834809, 0.740358, -0.167524, 15.0655", "-0.564738, -0.602529, -0.143318, 15.0604", "-0.294667, -1.94542, -0.119113, 14.8454", "-0.0245954, -3.2883, -0.0949076, 14.4598", "0.245476, -4.63119, -0.0707023, 13.4621", "0.515547, -5.97408, -0.0464969, 12.4622", "0.785618, -7.31696, -0.0222916, 11.0253", "1.05569, -8.65985, 0.00191374, 9.34508", "1.32576, -10.0027, 0.0261191, 7.80961", "1.59583, -11.3456, 0.0503244, 6.28847", "1.8659, -12.6885, 0.0745297, 5.0944", "2.13597, -14.0314, 0.0987351, 2.89855" ]
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-3.80934, 13.1159, 8.90928, 5.26", "-3.93265, 14.0811, 7.4856, 4.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999926341317097
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-7.75934, -3.36909, 15.6893, 1.66", "-9.73927, -3.66987, 18.6322, 1.66", "-12.1293, -4.03295, 22.1848, 1.66", "-17.2917, -4.81718, 29.8581, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999926341317097
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.73066, -12.7141, 8.52928, 3.32", "3.83896, -18.9837, 8.52928, 3.05", "4.45474, -22.4672, 8.52928, 3.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999926341317097
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.13597, -14.0314, 0.0987351, 1.11", "5.09344, -28.737, 0.0987351, 1.11", "8.05091, -43.4425, 0.0987351, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-3.93265, 14.0811, 7.4856, 3.88", "-4.72125, 16.0244, 7.49685, 3.88" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-3.93265, 14.0811, 7.4856, 1.11", "0.965721, 24.3867, -8.85851, 1.11", "2.34975, 27.3105, -13.0549, 1.11", "3.09533, 28.8424, -15.0428, 0.83", "3.66709, 30.0272, -16.4062, 0.55", "5.00648, 32.6797, -19.1014, 0.55", "5.64066, 33.8588, -20.1828, 0.55", "6.77899, 35.5962, -20.7026, 0.55", "7.93966, 37.0311, -21.4884, 0.83", "9.27244, 38.5573, -22.5183, 0.83", "10.9373, 40.3486, -23.8566, 0.55", "11.946, 41.3235, -24.6124, 0.55", "12.9635, 42.2412, -25.392, 0.55", "18.5453, 47.1725, -31.0038, 0.55", "19.3036, 47.7915, -31.877, 0.55", "20.0541, 48.366, -32.7837, 0.28", "20.9066, 49.0452, -33.873, 0.28", "22.1732, 50.1694, -35.5787, 0.28", "26.5157, 54.4063, -41.0477, 0.55", "28.1555, 56.1916, -42.5738, 0.28", "29.1955, 57.3811, -43.4671, 0.28", "29.9495, 58.2777, -44.0182, 0.28", "31.2907, 59.8986, -44.7215, 0.55", "33.613, 62.8916, -45.3542, 0.55", "36.4271, 66.6477, -45.3324, 0.28", "36.6149, 66.9093, -45.3236, 0.28", "38.0008, 68.6945, -45.5331, 0.28", "39.7877, 70.8012, -46.0483, 0.28", "41.3074, 72.4095, -46.602, 0.28", "42.2337, 73.3666, -47.0173, 0.28", "43.9034, 74.989, -47.7713, 0.55", "48.7385, 79.7472, -50.6361, 0.28", "50.7222, 81.7363, -51.9283, 0.28", "52.7977, 83.9998, -53.2931, 0.28", "54.0608, 85.5406, -54.2623, 0.28", "56.2705, 88.5216, -56.2226, 0.55", "59.9861, 94.0704, -59.8042, 0.28", "62.3092, 98.0039, -62.1213, 0.28", "64.6189, 102.306, -64.6535, 0.28", "67.6534, 108.545, -68.1391, 0.55", "69.2708, 112.138, -69.9874, 0.28", "70.1019, 114.104, -70.8606, 0.28", "71.1344, 116.503, -71.6138, 0.28", "72.5898, 119.697, -72.4804, 0.55", "74.1945, 122.646, -73.2033, 0.28", "75.2248, 124.351, -73.4644, 0.28", "76.6634, 126.633, -73.8087, 0.28", "78.7902, 129.789, -74.4346, 0.28", "79.8828, 131.328, -74.8002, 0.55", "82.9956, 135.633, -75.9499, 0.55", "84.0892, 137.124, -76.3551, 0.55", "85.1278, 138.604, -76.699, 0.55", "86.6746, 141.032, -77.1484, 0.83", "88.049, 143.321, -77.4284, 0.28", "88.781, 144.736, -77.4976, 0.28", "89.6636, 146.813, -77.5163, 0.28", "90.8573, 150.625, -77.7276, 0.28", "91.1116, 151.918, -77.8512, 0.28", "91.4217, 153.931, -78.0892, 0.55", "91.8446, 156.318, -78.4022, 0.28", "92.8462, 160.323, -78.9257, 0.28", "93.877, 163.421, -79.3099, 0.28", "95.2598, 166.711, -79.9883, 0.28", "97.3473, 170.657, -80.9851, 0.28", "98.85, 172.989, -81.631, 0.28", "100.787, 175.383, -82.2974, 0.55", "102.136, 176.823, -82.6614, 0.28", "105.601, 180.331, -83.5878, 0.28", "108.551, 183.231, -84.385, 0.28", "109.848, 184.482, -84.6955, 0.28", "112.034, 186.605, -85.081, 0.83", "113.81, 188.301, -86.0756, 0.28", "115.639, 190.038, -87.5865, 0.28", "117.262, 191.572, -89.3701, 0.28", "119.264, 193.365, -91.9516, 0.28", "121.232, 195.048, -94.6274, 0.28", "130.069, 202.668, -107.31, 0.28", "130.842, 203.354, -108.442, 0.55", "132.377, 204.735, -110.953, 0.28", "134.258, 206.602, -114.506, 0.28", "135.233, 207.592, -116.625, 0.28", "136.302, 208.57, -118.827, 0.28", "138.486, 210.293, -118.855, 0.28" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-17.2917, -4.81718, 29.8581, 1.66", "-20.0188, -4.46946, 30.149, 1.66", "-22.9772, -3.7795, 30.172, 1.66", "-26.6425, -2.69268, 30.7471, 1.39", "-30.1947, -1.6085, 31.5814, 1.39", "-33.3981, -0.64375, 32.4642, 1.11", "-38.3462, 0.821732, 34.1722, 1.11", "-44.2209, 2.89735, 36.6336, 1.11", "-51.6269, 5.87402, 40.8362, 1.11", "-52.6584, 6.34127, 41.5353, 1.11", "-55.2723, 7.42667, 43.3398, 1.11", "-59.3157, 9.00422, 45.6562, 1.11", "-61.4328, 9.81779, 46.7477, 1.11", "-66.1172, 11.4595, 49.0501, 1.11", "-68.1807, 12.1602, 49.713, 1.11", "-72.873, 13.7587, 51.08, 1.11", "-78.6049, 15.4528, 52.4947, 1.11", "-85.2184, 16.9948, 53.5792, 1.11", "-88.0905, 17.555, 53.9494, 0.83", "-91.1991, 18.0937, 54.5739, 0.83", "-92.6805, 18.3661, 55.1099, 0.83", "-95.009, 18.8483, 56.2678, 0.83", "-97.0633, 19.2421, 57.527, 0.83", "-98.7926, 19.5377, 58.3817, 0.83", "-104.862, 21.3478, 62.7439, 0.83", "-105.279, 21.526, 63.198, 0.83", "-116.302, 23.6005, 66.0054, 0.83", "-126.538, 27.1998, 70.1008, 0.83", "-137.104, 30.075, 73.8641, 0.83", "-148.218, 31.9834, 76.4003, 0.83", "-159.451, 34.2758, 77.9419, 0.83", "-170.927, 34.4159, 79.1543, 0.83", "-182.253, 33.4719, 81.1595, 0.83", "-192.952, 31.06, 84.8092, 0.83", "-203.233, 27.3587, 88.668, 0.83", "-213.319, 22.5871, 91.9177, 0.83", "-222.684, 18.3948, 97.3413, 0.83", "-230.866, 12.1776, 102.912, 0.83", "-239.165, 6.2063, 108.554, 0.83", "-247.649, -0.193778, 113.441, 0.83", "-256.753, -4.31828, 119.337, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-17.2917, -4.81718, 29.8581, 1.11", "-18.6322, -4.00155, 31.9394, 1.11", "-19.3838, -3.67003, 33.2172, 1.11", "-21.7342, -2.87269, 36.8521, 1.11", "-22.4993, -2.62179, 37.9555, 1.11", "-24.0252, -2.05601, 40.0559, 1.11", "-28.1187, -0.409092, 45.9559, 1.11", "-28.9114, -0.043589, 47.1717, 0.83", "-29.9839, 0.524089, 48.6429, 0.83", "-30.7101, 0.918543, 49.4517, 0.83", "-31.4975, 1.3909, 50.3811, 0.83", "-33.6273, 2.9584, 52.9474, 0.83", "-35.5249, 4.6547, 54.3347, 0.83", "-36.6634, 5.76487, 55.2551, 0.83", "-36.9152, 6.01738, 55.4994, 0.83", "-41.4592, 10.0044, 60.3886, 0.83", "-45.768, 13.8897, 65.5629, 0.83", "-51.4294, 16.339, 70.2051, 0.83", "-57.4197, 19.0041, 74.2843, 0.83", "-63.1803, 21.6929, 78.6716, 0.83", "-68.6532, 25.4095, 82.7156, 0.83", "-73.8205, 29.1295, 87.1474, 0.83", "-79.1991, 33.973, 90.0382, 0.83", "-84.5407, 38.5546, 93.3671, 0.83", "-89.8798, 43.1082, 96.7361, 0.83", "-94.6149, 47.3057, 101.263, 0.83", "-100.009, 50.3077, 105.923, 0.83", "-105.509, 53.1569, 110.548, 0.83", "-111.061, 54.7352, 115.656, 0.83", "-116.701, 55.3949, 120.86, 0.83", "-122.752, 55.2762, 125.631, 0.83", "-129.762, 55.7613, 128.791, 0.83", "-136.61, 55.6045, 132.332, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "4.45474, -22.4672, 8.52928, 4.16", "4.46408, -23.0086, 8.54941, 4.16" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.45474, -22.4672, 8.52928, 1.39", "13.7517, -22.1997, 0.43505, 1.39", "16.362, -22.0914, -1.70025, 1.11", "19.5939, -22.0812, -3.818, 1.11", "22.016, -22.1895, -5.13989, 0.83", "24.3865, -22.3603, -6.20628, 0.83", "31.6495, -22.9466, -9.22809, 0.83", "35.1954, -23.2624, -10.0708, 0.83", "41.1938, -23.6412, -11.4273, 0.55", "43.7363, -23.7015, -11.9398, 0.55", "47.6544, -23.6801, -12.5942, 0.55", "52.3641, -23.4475, -13.1804, 0.55", "56.4607, -23.175, -13.6799, 0.55", "58.4537, -22.9827, -14.0953, 0.55", "62.2563, -22.5093, -15.1902, 0.55", "65.1648, -22.1719, -16.0464, 0.55", "67.2884, -21.9962, -16.6675, 0.55", "72.8237, -21.7402, -18.1682, 0.55", "75.5104, -21.7055, -18.8229, 0.55", "78.2823, -21.6825, -19.2627, 0.55", "80.8784, -21.582, -19.461, 0.55", "82.7096, -21.4592, -19.4642, 0.55", "85.164, -21.237, -19.4512, 0.55", "89.1987, -20.7014, -19.3635, 0.55", "94.3728, -19.8922, -19.5981, 0.55", "97.5884, -19.2681, -19.9324, 0.28", "100.881, -18.5316, -20.4568, 0.55", "106.289, -17.2339, -21.633, 0.55", "109.2, -16.4567, -22.4781, 0.55", "112.314, -15.4973, -23.6891, 0.28", "114.184, -14.7927, -24.5494, 0.55", "115.254, -14.3078, -25.0317, 0.28", "116.541, -13.5629, -25.5439, 0.55", "117.984, -12.6238, -25.8837, 0.28", "119.284, -11.8106, -26.1005, 0.28", "120.48, -11.1165, -26.2116, 0.28", "122.452, -10.0414, -26.4137, 0.28", "123.257, -9.60026, -26.502, 0.28", "126.833, -7.71999, -26.9061, 1.11", "128.489, -6.84898, -27.0959, 0.28", "129.91, -6.08051, -27.4668, 0.28", "131.574, -5.10505, -28.0595, 0.28", "134.139, -3.41738, -28.9221, 0.28", "137.436, -1.15207, -29.96, 0.28", "139.692, 0.484083, -30.6276, 0.28", "146.144, 5.22154, -32.3543, 0.28", "148.399, 6.8943, -32.8885, 0.28", "152.978, 10.2991, -33.7984, 0.83", "154.751, 11.6865, -34.072, 0.83", "156.84, 13.3522, -34.2423, 0.28", "158.185, 14.3552, -34.1999, 0.28", "159.574, 15.3726, -33.8723, 0.28", "160.717, 16.1478, -33.7059, 0.55", "162.434, 17.3045, -33.8719, 0.28", "163.652, 18.2664, -33.9915, 0.28", "164.435, 18.8538, -34.0686, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "8.05091, -43.4425, 0.0987351, 0.55", "11.0084, -58.1481, 0.0987351, 0.55", "13.9659, -72.8536, 0.0987351, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-4.72125, 16.0244, 7.49685, 4.43", "-6.5253, 21.5376, 7.1549, 4.43" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-4.72125, 16.0244, 7.49685, 1.39", "-9.74007, 19.2149, 5.38658, 1.39", "-13.1781, 21.7093, 3.30967, 1.39", "-15.3326, 23.4526, 1.57389, 1.39", "-17.7468, 25.4055, -0.457292, 1.39", "-19.3963, 26.6526, -2.15003, 1.11", "-22.5975, 29.0306, -5.65224, 1.11", "-25.4771, 31.304, -8.91308, 1.11", "-28.2179, 33.5247, -12.6297, 1.11", "-29.9803, 34.9981, -15.2206, 1.39", "-34.7937, 39.0848, -22.6141, 1.11", "-35.879, 40.003, -24.218, 1.11", "-37.9066, 41.7131, -26.9137, 1.11", "-42.0026, 45.3717, -32.037, 1.11", "-43.4206, 46.7825, -33.7763, 1.11", "-46.0105, 49.7571, -36.9448, 0.83", "-47.2386, 51.3369, -38.2902, 0.83", "-49.2167, 53.9223, -40.452, 0.83", "-50.9335, 56.1857, -42.4752, 0.28", "-51.359, 56.7641, -42.9288, 0.55", "-52.4438, 58.2366, -44.0992, 0.55", "-54.3751, 60.8557, -46.0684, 0.28", "-55.9531, 62.9633, -47.6598, 1.11", "-58.696, 66.8653, -51.2021, 0.28", "-59.6081, 68.234, -52.61, 0.28", "-60.4227, 69.6152, -54.0761, 0.55", "-60.8295, 70.4794, -55.0557, 0.55", "-60.9809, 70.8723, -55.4899, 0.55", "-62.6461, 76.1496, -62.9773, 0.28", "-62.9244, 77.0246, -64.2974, 0.28", "-63.4741, 78.7456, -67.0082, 0.83", "-64.4227, 81.6539, -71.9275, 0.28", "-64.8557, 82.8306, -73.9687, 0.83", "-67.9023, 89.8262, -86.0039, 0.28", "-68.4896, 90.9463, -88.1091, 0.28", "-68.8886, 91.6136, -89.5062, 0.83", "-71.212, 95.1365, -97.7814, 0.28", "-71.6688, 95.7586, -99.2971, 0.55", "-72.3293, 96.5773, -101.328, 0.55", "-76.1366, 100.853, -111.788, 0.28", "-76.6135, 101.373, -113.166, 0.28", "-78.5733, 103.317, -118.749, 0.55", "-79.2052, 103.878, -120.463, 0.28", "-79.6184, 104.249, -121.693, 0.55", "-81.638, 106.149, -128.236, 0.28" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "4.46408, -23.0086, 8.54941, 2.49", "5.36233, -31.3219, 8.10661, 2.49", "5.92323, -37.6865, 7.3942, 2.22", "6.48419, -44.0519, 6.68171, 2.22", "7.18387, -51.9913, 5.79303, 1.94", "8.12705, -62.6938, 4.59509, 2.22", "8.67478, -68.9091, 3.8994, 2.22", "9.28448, -75.6321, 3.25118, 2.22" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "4.46408, -23.0086, 8.54941, 2.49", "-10.8716, -27.7807, -3.53495, 2.49", "-14.8237, -29.0105, -6.64914, 2.49" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-6.5253, 21.5376, 7.1549, 4.43", "-6.92445, 26.0608, 10.0815, 4.43" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-6.5253, 21.5376, 7.1549, 1.39", "-9.66539, 23.6155, 9.43965, 1.39", "-13.0002, 26.1742, 11.6251, 1.39", "-18.7575, 30.9501, 16.0232, 1.39", "-21.2795, 33.204, 18.0826, 0.83", "-23.6955, 35.4054, 20.331, 0.83", "-29.3706, 40.7177, 25.8022, 1.11", "-33.6958, 45.3151, 30.3886, 1.11", "-38.7828, 51.3835, 36.2164, 1.11", "-39.73, 52.7249, 37.3414, 1.11", "-43.3975, 58.6125, 41.937, 1.11", "-44.9826, 61.5705, 43.9121, 1.11", "-46.6201, 64.8525, 45.5539, 0.83", "-47.7977, 67.4473, 46.5955, 0.83", "-48.6078, 69.6649, 46.8316, 0.83", "-49.497, 72.237, 47.0068, 0.83", "-50.4299, 75.1527, 46.9831, 0.83", "-51.2024, 77.4692, 47.0705, 0.83", "-52.9321, 82.3842, 47.4842, 0.83", "-53.8449, 84.8507, 48.1771, 0.83", "-56.2928, 91.205, 50.4531, 0.83", "-56.7931, 92.4782, 51.0579, 0.83", "-57.8189, 94.8463, 52.5939, 0.83", "-58.5345, 96.447, 53.9791, 0.83", "-61.0245, 101.394, 59.6805, 0.83", "-65.8568, 109.098, 67.3862, 0.83", "-71.3442, 116.527, 74.8934, 0.83", "-75.1653, 125.124, 82.3068, 0.83", "-77.5323, 134.056, 89.9703, 0.83", "-78.1406, 141.999, 98.8676, 0.83", "-77.3423, 148.652, 108.665, 0.83", "-78.8132, 154.662, 118.753, 0.83", "-82.1207, 162.017, 127.507, 0.83", "-83.5525, 167.115, 138.044, 0.83", "-86.1971, 173.283, 147.798, 0.83", "-88.5921, 179.543, 157.565, 0.83", "-90.5371, 187.277, 166.435, 0.83", "-91.8097, 196.45, 174.103, 0.83", "-93.9934, 204.819, 182.373, 0.83", "-96.8216, 213.183, 190.449, 0.83", "-100.493, 222.288, 197.373, 0.83", "-103.188, 230.596, 205.547, 0.83", "-104.179, 239.517, 213.52, 0.83", "-104.506, 247.643, 222.282, 0.83", "-106.184, 254.388, 231.906, 0.83", "-107.351, 260.533, 241.961, 0.83", "-107.376, 266.36, 252.252, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "9.28448, -75.6321, 3.25118, 2.22", "10.3318, -77.2728, 10.7501, 2.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "9.28448, -75.6321, 3.25118, 0.83", "11.11, -80.1531, -6.44295, 0.83", "11.6202, -81.4792, -9.07984, 0.83", "12.1513, -82.7125, -11.3881, 0.83", "13.3405, -85.3248, -15.9751, 0.55", "15.194, -89.0972, -22.2308, 0.55", "15.5677, -89.9488, -23.6118, 0.55", "16.8913, -93.0925, -28.236, 0.28", "17.4786, -94.822, -30.741, 0.28", "17.7774, -95.8171, -32.1888, 0.55", "18.2197, -97.3625, -34.3281, 0.55", "19.5183, -101.813, -40.2549, 0.83", "20.5428, -105.279, -44.9343, 0.28", "21.3741, -107.787, -48.2211, 0.28", "22.1221, -110.27, -51.5126, 0.28", "22.7347, -112.176, -53.9806, 0.28", "23.9092, -115.498, -58.2293, 0.28", "24.7354, -117.567, -60.8532, 0.55", "25.7978, -120.502, -64.7069, 0.83", "27.403, -126.099, -72.6489, 0.28", "28.0058, -128.443, -76.0803, 0.28", "28.6283, -131.111, -80.0691, 0.28", "29.4386, -134.395, -84.9996, 0.28", "30.1982, -138.186, -90.444, 0.28", "30.9957, -142.273, -95.8702, 0.28", "31.3606, -144.098, -98.0097, 0.28", "31.5186, -144.854, -98.814, 0.28", "32.0985, -147.077, -100.933, 0.83", "33.9656, -152.857, -105.928, 0.28", "35.4785, -156.21, -108.446, 0.28", "38.9657, -162.467, -112.691, 0.28", "41.7216, -166.659, -115.503, 0.28", "43.5475, -168.96, -117.052, 0.28", "44.6727, -170.069, -117.809, 0.83", "51.2085, -174.461, -120.75, 0.28", "52.5252, -175.186, -121.191, 0.83", "55.353, -176.507, -121.885, 0.28", "57.4839, -177.533, -122.45, 0.83", "60.3948, -179.058, -123.45, 0.28", "64.2833, -181.244, -125.157, 0.83", "66.8195, -182.847, -126.597, 0.28", "68.9883, -184.272, -127.857, 0.28", "71.3417, -185.956, -129.277, 0.83", "75.263, -189.043, -131.724, 0.28", "76.238, -189.898, -132.365, 0.55", "77.9525, -191.578, -133.572, 0.28", "80.128, -193.764, -134.958, 0.55", "83.7368, -197.53, -137.07, 0.28", "85.6103, -199.689, -138.202, 1.11", "87.5733, -202.145, -139.416, 0.28", "90.2108, -205.507, -141.104, 0.28", "92.8915, -209.001, -143.03, 0.28", "93.9786, -210.688, -144.158, 0.55", "96.6349, -215.882, -148.242, 0.28", "97.0921, -216.89, -149.11, 0.55", "97.4131, -217.783, -149.959, 0.28", "97.9141, -220.159, -152.511, 0.28", "98.1281, -225.796, -159.296, 0.28", "97.9551, -227.89, -162.037, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-14.8237, -29.0105, -6.64914, 2.22", "-15.2289, -36.6283, -4.34876, 2.22", "-15.6156, -43.8962, -2.15401, 1.94", "-15.6791, -45.0904, -1.7934, 1.39" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-14.8237, -29.0105, -6.64914, 1.11", "-21.3847, -27.0196, 0.608005, 1.11", "-23.009, -26.5545, 2.01275, 0.83", "-25.4463, -25.9109, 3.59224, 0.83", "-29.2411, -24.8958, 5.49907, 0.83", "-31.2267, -24.3309, 6.31712, 0.83", "-33.7768, -23.6052, 7.21059, 0.83", "-39.5225, -22.3634, 7.91067, 0.83", "-42.558, -21.6053, 8.53455, 0.83", "-44.739, -21.0023, 9.32428, 0.83", "-46.3838, -20.5574, 9.97069, 0.83", "-48.2583, -20.1458, 11.1025, 0.83", "-49.6728, -19.8914, 12.1576, 0.83", "-55.0527, -18.8934, 16.9297, 0.83", "-58.1054, -18.336, 19.7097, 0.83", "-61.3717, -17.8605, 22.6372, 0.55", "-64.6379, -17.4979, 25.6758, 0.55", "-66.1348, -17.3054, 27.0212, 0.55", "-67.778, -17.0493, 28.3133, 0.55", "-68.8964, -16.8919, 28.9604, 0.55", "-70.6394, -16.6523, 29.9582, 0.55", "-74.1473, -16.1532, 32.5312, 0.55", "-75.8658, -15.9763, 33.7568, 0.55", "-76.9777, -15.96, 34.6174, 0.55", "-78.0232, -15.9943, 35.3974, 0.55", "-79.6938, -16.0278, 36.5194, 0.55", "-83.1677, -15.8742, 38.7343, 0.55", "-84.9283, -15.739, 39.7067, 0.55", "-86.8882, -15.5038, 41.0616, 0.55", "-88.8839, -15.132, 42.5892, 0.55", "-90.6443, -14.6953, 43.9857, 0.55", "-92.5587, -14.1103, 45.7377, 0.55", "-94.5243, -13.5132, 47.6777, 0.55", "-98.1458, -12.1656, 51.6503, 0.55", "-99.161, -11.7469, 52.9383, 0.55", "-100.2, -11.3428, 54.4806, 0.55", "-102.246, -10.7133, 57.9139, 0.55", "-103.253, -10.5744, 59.6541, 0.55", "-111.478, -9.30979, 67.3674, 0.55", "-119.015, -7.40898, 75.6205, 0.55", "-126.25, -5.70222, 84.1839, 0.55", "-132.846, -5.52635, 93.4389, 0.55", "-139.087, -4.29629, 102.833, 0.55", "-145.577, -4.30542, 112.17, 0.55", "-150.89, -5.15699, 122.209, 0.55", "-154.281, -5.69091, 133.051, 0.55", "-159.575, -6.08217, 143.114, 0.55", "-164.445, -6.45029, 153.387, 0.55", "-169.473, -6.24598, 163.573, 0.55", "-175.493, -4.54836, 173.029, 0.55", "-183.104, -0.214727, 180.221, 0.55", "-191.523, 2.66231, 187.236, 0.55", "-198.427, 6.57271, 195.324, 0.55", "-204.347, 9.88195, 204.398, 0.55", "-209.234, 14.8981, 213.324, 0.55", "-213.361, 18.7947, 223.133, 0.55", "-215.951, 22.475, 233.534, 0.55", "-218.908, 27.8064, 243.116, 0.55", "-221.513, 34.4675, 251.992, 0.55", "-224.532, 41.3716, 260.553, 0.55", "-226.64, 47.7844, 269.731, 0.55", "-230.342, 53.0596, 279.078, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-6.92445, 26.0608, 10.0815, 2.49", "-8.57142, 27.5777, 11.2746, 2.49", "-9.93182, 28.9828, 12.4755, 1.11", "-11.6347, 30.7936, 13.9543, 1.11", "-13.6396, 32.9233, 15.821, 1.11", "-15.2243, 34.6937, 17.5396, 1.11", "-19.0446, 39.3294, 22.4737, 0.83", "-19.8496, 40.4622, 23.7548, 0.83", "-20.7028, 41.989, 25.6219, 0.83", "-21.7353, 44.5187, 28.7373, 0.83", "-22.6158, 47.5845, 32.2852, 0.83", "-23.301, 50.5486, 35.8326, 0.83", "-23.649, 52.0266, 37.5449, 0.83", "-24.3182, 55.0107, 40.9038, 0.83", "-24.6051, 56.447, 42.5185, 0.83", "-24.9302, 57.9848, 44.0224, 0.83", "-25.5638, 60.7466, 46.3666, 0.83", "-25.8945, 62.2297, 47.5095, 0.83", "-26.3521, 64.6189, 49.2805, 0.83", "-27.4374, 71.1871, 53.6195, 0.83", "-27.5611, 73.4212, 55.0052, 0.83", "-27.392, 75.3056, 55.9392, 0.83", "-27.0103, 76.8659, 56.4547, 0.83", "-26.4092, 78.3956, 56.7879, 0.83", "-25.6756, 79.7648, 56.8691, 0.55", "-24.6015, 81.5044, 56.4909, 0.55", "-23.2864, 83.4625, 56.0189, 0.28", "-22.2337, 85.0971, 55.5991, 0.28", "-21.2901, 86.6399, 55.1797, 0.28", "-20.5825, 87.7895, 54.8455, 0.28", "-19.1793, 89.8117, 54.1851, 0.28", "-18.3117, 90.9419, 53.8638, 0.28", "-19.0239, 99.9747, 61.3746, 0.28", "-18.6858, 108.349, 69.565, 0.28", "-18.2963, 117.224, 77.2581, 0.28", "-17.8361, 126.198, 84.8435, 0.28", "-16.2429, 136.355, 90.7198, 0.28", "-16.8932, 147.308, 95.3841, 0.28", "-16.9636, 159.078, 97.7, 0.28", "-17.813, 170.536, 101.059, 0.28", "-20.0074, 181.401, 105.458, 0.28", "-21.2406, 191.561, 111.448, 0.28", "-23.5899, 200.744, 118.458, 0.28", "-25.406, 211.36, 123.52, 0.28", "-26.2735, 222.358, 128.056, 0.28", "-24.8431, 232.374, 134.19, 0.28", "-21.5619, 242.076, 140.049, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-6.92445, 26.0608, 10.0815, 1.94", "-5.64975, 28.3881, 10.2989, 1.94", "-4.70352, 30.1158, 10.4603, 1.94", "-3.46615, 32.375, 10.6714, 1.94" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "10.3318, -77.2728, 10.7501, 1.94", "10.1217, -87.3618, 9.0462, 1.94", "10.1876, -96.3336, 8.13674, 1.39", "10.3627, -100.788, 7.84901, 1.11", "10.7582, -107.422, 7.53159, 1.11", "11.2249, -113.969, 7.19702, 1.11", "11.8175, -123.001, 6.82729, 1.11", "12.6958, -133.685, 7.05142, 0.83", "13.2869, -143.087, 7.89363, 0.83", "13.4188, -146.959, 8.63233, 0.83", "13.4173, -151.053, 9.86396, 0.83", "13.4507, -155.099, 11.412, 0.83", "13.357, -161.077, 14.071, 0.83", "12.837, -170.152, 18.0817, 0.83", "12.3979, -175.922, 20.6819, 0.83", "12.2005, -179.47, 22.1168, 0.83", "11.8215, -187.196, 25.164, 0.83", "11.5796, -194.229, 27.5363, 0.83", "11.4799, -197.596, 28.5661, 0.83", "11.467, -199.927, 29.2398, 0.83", "11.1656, -205.358, 30.7667, 0.83", "10.2577, -213.691, 33.2838, 0.83", "9.88154, -216.153, 34.1288, 0.83", "8.94386, -222.705, 36.7517, 0.83", "8.42151, -226.902, 38.5078, 0.83", "7.89376, -234.43, 41.8099, 0.83", "7.70043, -238.86, 43.7397, 0.83", "7.82484, -243.548, 45.8069, 1.39", "8.21316, -248.553, 48.4687, 0.83", "8.51584, -251.138, 49.9563, 0.55", "9.49893, -256.189, 53.5051, 0.55", "10.1731, -258.298, 55.3504, 0.55", "12.322, -263.769, 60.5872, 0.55", "13.7503, -267.512, 64.1554, 0.55", "12.3391, -278.444, 67.379, 0.55", "12.7104, -289.686, 69.7286, 0.55", "12.111, -301.107, 71.0205, 0.55", "10.8331, -312.265, 73.4887, 0.55", "10.9735, -323.37, 76.4137, 0.55", "12.5155, -334.53, 78.5871, 0.55", "13.4651, -345.349, 82.2349, 0.55", "16.698, -355.506, 86.2359, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "10.3318, -77.2728, 10.7501, 0.55", "6.32667, -81.5052, 8.57703, 0.55", "3.1118, -84.8813, 7.03946, 0.55", "1.84664, -86.2059, 6.52304, 0.55", "0.577598, -87.6387, 6.0422, 0.55", "-0.971561, -89.5808, 5.46837, 0.55", "-3.03715, -92.1911, 4.56608, 0.55", "-4.38711, -94.0672, 4.01011, 0.55", "-5.36395, -95.4432, 3.54738, 0.55", "-6.94874, -97.7152, 2.75392, 0.55", "-9.78781, -101.735, 1.38797, 0.28", "-12.5088, -105.669, 0.143059, 1.66", "-14.1291, -107.999, -0.370799, 0.28", "-15.5834, -110.058, -0.677439, 1.94", "-18.2406, -113.762, -0.941021, 0.28", "-19.4329, -115.416, -0.911683, 1.39", "-20.112, -116.401, -0.804401, 1.39", "-23.5023, -121.652, 0.133769, 0.28", "-25.895, -125.478, 0.894887, 0.28", "-27.1965, -127.536, 1.05639, 0.83", "-28.8758, -130.263, 0.912559, 0.28", "-29.6338, -131.614, 0.667007, 0.83", "-30.0683, -132.44, 0.434697, 0.28", "-30.6445, -133.645, -0.00947094, 1.11", "-34.5174, -142.328, -3.25576, 0.28", "-35.1457, -143.802, -3.78204, 0.55", "-37.2969, -149.112, -5.50917, 0.28", "-37.6657, -150.175, -5.78502, 0.55", "-38.5199, -153.043, -6.38123, 0.28", "-39.1066, -155.836, -6.6936, 0.83", "-39.1759, -156.579, -6.6415, 0.83", "-39.3156, -159.917, -6.31724, 0.28", "-39.2251, -163.375, -5.75375, 0.28", "-39.0415, -166.117, -5.25779, 0.55", "-38.5682, -171.372, -4.42343, 0.28", "-38.2745, -175.134, -4.03049, 0.55", "-37.9631, -178.791, -3.69134, 0.28", "-37.6656, -181.97, -3.39379, 0.83", "-37.5417, -183.704, -3.30597, 0.28", "-37.4297, -186.235, -3.29945, 0.83", "-37.273, -192.438, -3.55522, 0.28", "-37.2649, -194.271, -3.69003, 0.55", "-37.2518, -195.107, -3.75503, 0.28", "-37.1067, -197.856, -4.00319, 0.83", "-36.4823, -203.236, -4.21346, 0.28", "-35.8074, -206.51, -4.11797, 1.11", "-34.9751, -209.221, -3.87677, 0.28", "-34.3481, -210.948, -3.67653, 0.28", "-33.3908, -213.25, -3.33005, 0.28", "-32.513, -215.058, -2.94106, 0.28", "-32.2002, -215.828, -2.81081, 0.55", "-32.141, -217.332, -2.7468, 0.28", "-32.3442, -218.493, -2.70737, 0.55", "-32.5954, -219.15, -2.69038, 0.28", "-33.2147, -220.284, -2.69365, 0.55", "-35.8857, -224.426, -2.9675, 0.28", "-36.3777, -225.081, -3.0246, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-15.6791, -45.0904, -1.7934, 1.39", "-17.5574, -51.6891, -1.16313, 1.39", "-18.4104, -54.5456, -0.840235, 1.39", "-19.0897, -57.9811, -0.145223, 1.39", "-19.9734, -63.9465, 1.24885, 1.39", "-20.5105, -68.24, 2.27966, 1.39", "-20.8596, -71.5297, 3.03261, 1.39", "-21.3332, -75.9231, 4.1093, 1.11", "-21.9446, -84.7568, 6.33052, 1.11", "-22.0573, -89.5307, 7.44747, 1.11", "-21.9399, -95.5541, 8.80363, 1.11", "-21.8325, -99.3996, 9.64293, 1.39", "-21.7905, -104.413, 10.6569, 1.39", "-21.9238, -114.53, 12.5391, 0.83", "-22.1092, -117.68, 13.0673, 0.83", "-22.3558, -120.919, 13.6773, 1.11", "-22.7398, -124.704, 14.471, 0.83", "-23.4599, -130.099, 15.6686, 1.11", "-23.9906, -133.403, 16.3583, 0.83", "-24.5032, -135.992, 16.9583, 0.83", "-25.0124, -138.596, 17.5225, 0.83", "-25.4198, -141.364, 17.9993, 0.83", "-25.6572, -144.005, 18.3418, 0.83", "-25.7103, -145.622, 18.5251, 0.83", "-25.7278, -147.916, 18.6893, 0.83", "-25.6769, -151.511, 18.883, 0.83", "-25.5279, -156.326, 19.1448, 0.83", "-25.3672, -159.694, 19.3057, 1.11", "-25.2173, -162.592, 19.4914, 0.83", "-25.1076, -166.227, 19.6344, 0.83", "-25.09, -167.197, 19.6467, 0.83", "-25.1665, -169.634, 19.6459, 0.83", "-25.3374, -172.053, 19.567, 0.83", "-25.7664, -177.601, 19.2861, 0.83", "-26.1716, -182.055, 19.0414, 0.83", "-26.3554, -184.003, 18.9114, 0.83", "-26.754, -187.246, 18.6012, 0.83", "-27.2643, -190.817, 18.2084, 0.83", "-27.7862, -193.99, 17.8667, 0.83", "-28.1449, -196.124, 17.5763, 0.83", "-28.4741, -198.693, 17.3236, 0.83", "-28.8179, -201.749, 16.9075, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-15.6791, -45.0904, -1.7934, 0.83", "-16.0181, -47.0918, 7.09909, 0.83", "-16.1226, -47.3304, 7.99991, 0.83", "-16.4747, -47.8378, 9.78694, 0.83", "-17.8272, -49.207, 14.9065, 0.83", "-18.54, -49.769, 16.9714, 0.83", "-19.3644, -50.3194, 18.8544, 0.83", "-20.2563, -50.7932, 19.9729, 0.83", "-21.4148, -51.3534, 21.2027, 0.83", "-22.6202, -51.8461, 22.2579, 0.83", "-24.3911, -52.6188, 23.6687, 0.83", "-26.255, -53.554, 25.31, 0.83", "-27.7732, -54.4233, 26.7419, 0.83", "-29.4317, -55.5134, 28.3585, 0.83", "-30.7462, -56.4777, 29.6596, 0.83", "-33.0906, -58.2543, 31.9874, 0.83", "-34.5153, -59.3041, 33.3992, 0.83", "-36.2071, -60.5408, 35.0504, 0.83", "-38.7109, -62.288, 37.2186, 0.83", "-40.2336, -63.2906, 38.3564, 0.83", "-41.3421, -64.0593, 39.0629, 0.83", "-42.5637, -64.8923, 39.7092, 0.83", "-43.8976, -65.7922, 40.2204, 0.83", "-46.5559, -67.5949, 40.946, 0.83", "-49.0763, -69.2924, 41.4228, 0.83", "-51.6321, -71.0454, 41.9087, 0.83", "-52.706, -71.7992, 42.167, 0.83", "-56.9392, -74.7819, 43.4258, 0.83", "-58.7816, -76.0851, 44.0776, 0.83", "-61.3189, -77.8639, 44.957, 0.83", "-64.7456, -80.296, 46.1078, 0.83", "-69.1125, -83.2596, 47.6512, 0.55", "-71.6338, -85.0449, 48.622, 0.55", "-73.0908, -86.1212, 49.2597, 0.55", "-77.5969, -89.2814, 51.1966, 0.55", "-80.7266, -91.2903, 52.1331, 0.55", "-83.3286, -92.7785, 52.6399, 1.11", "-85.8015, -94.0709, 53.0019, 1.11", "-86.8655, -94.6394, 53.1811, 1.11", "-90.0084, -96.2894, 53.6489, 0.28", "-97.7164, -100.264, 54.8628, 0.83", "-101.976, -102.42, 55.4106, 0.28", "-104.532, -103.798, 55.8842, 0.83", "-107.91, -105.607, 56.8496, 0.55", "-111.353, -107.611, 58.4748, 0.55", "-112.9, -108.652, 59.6016, 0.83", "-113.887, -109.429, 61.1526, 0.55", "-116.467, -111.668, 67.5744, 0.55", "-116.892, -112.027, 69.2676, 0.55", "-117.255, -112.256, 71.4719, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-21.5619, 242.076, 140.049, 0.28", "-22.4928, 250.962, 146.162, 0.28", "-22.0495, 259.753, 152.417, 0.28", "-21.3724, 269.597, 156.988, 0.28", "-20.3812, 279.313, 161.735, 0.28", "-19.1236, 288.585, 167.172, 0.28", "-18.6097, 297.155, 173.692, 0.28", "-18.0952, 304.704, 181.277, 0.28", "-17.5726, 313.547, 187.455, 0.28", "-17.1101, 322.954, 192.83, 0.28", "-18.5131, 332.198, 198.356, 0.28", "-19.2822, 342.639, 201.569, 0.28", "-20.0486, 353.025, 204.94, 0.28" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-21.5619, 242.076, 140.049, 0.28", "-20.9866, 249.33, 142.39, 0.28", "-20.0677, 256.336, 145.239, 0.28", "-18.2089, 263.188, 147.936, 0.28", "-16.1531, 270.36, 149.477, 0.28", "-13.6167, 277.043, 151.981, 0.28", "-10.5246, 283.73, 153.712, 0.28", "-7.4278, 290.439, 155.351, 0.28", "-3.36165, 296.303, 157.661, 0.28", "1.20945, 302.188, 158.498, 0.28", "5.58134, 308.286, 158.051, 0.28", "9.51171, 314.704, 157.556, 0.28", "13.6741, 320.935, 156.843, 0.28", "18.1919, 326.93, 156.892, 0.28", "22.9139, 332.749, 156.814, 0.28" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-3.46615, 32.375, 10.6714, 1.66", "3.17469, 29.8373, 15.4306, 1.66", "6.84975, 28.4329, 18.0644, 1.66", "9.16702, 27.5474, 19.7251, 1.66" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.46615, 32.375, 10.6714, 0.83", "-1.05416, 33.6713, 10.3883, 0.83", "0.865327, 34.775, 10.3563, 0.83", "2.71246, 36.0175, 10.2109, 0.83", "5.55587, 38.3356, 9.93685, 0.83", "7.31428, 39.9777, 9.76318, 0.83", "9.56865, 42.1151, 9.46989, 0.83", "11.5535, 43.9105, 8.78782, 0.83", "15.192, 47.1175, 7.13333, 0.83", "17.5583, 49.252, 5.84308, 0.83", "18.9225, 50.5441, 5.09028, 0.83", "21.3528, 52.9387, 3.43022, 0.83", "26.7362, 58.5028, -0.95273, 0.83", "28.0276, 59.8528, -2.06665, 0.83", "29.5464, 61.3964, -3.55293, 0.83", "31.2876, 63.2494, -5.26852, 0.55", "34.8804, 67.5589, -8.86461, 0.55", "36.039, 69.3512, -10.0433, 0.55", "36.7985, 70.7615, -10.7062, 0.55", "41.0275, 78.5397, -14.2407, 0.55", "44.2259, 84.1468, -16.4357, 0.55", "45.3203, 86.1057, -17.0315, 0.83", "46.2796, 87.704, -17.5377, 0.83", "47.5373, 89.6381, -18.3846, 0.83", "48.3311, 90.8086, -18.9413, 0.83", "49.4735, 92.4182, -19.9033, 0.55", "50.7174, 94.0462, -21.1155, 0.55", "55.3463, 100.287, -25.5967, 0.55", "56.1223, 101.363, -26.3423, 0.55", "58.2232, 104.566, -28.3558, 1.11", "61.0917, 109.197, -30.916, 0.55", "61.7328, 110.286, -31.4041, 0.55", "63.6377, 113.68, -32.4178, 0.83", "64.7215, 115.906, -32.6607, 0.28", "66.0902, 118.879, -32.8437, 0.55", "66.7366, 120.279, -32.9828, 0.28", "67.6939, 122.353, -33.0271, 0.28", "68.8549, 124.769, -33.1784, 0.28", "69.2003, 125.403, -33.2716, 0.28", "69.9714, 126.687, -33.6082, 0.55", "74.0502, 132.505, -36.2569, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-28.8179, -201.749, 16.9075, 0.83", "-29.4999, -204.38, 16.796, 0.83", "-29.7756, -205.519, 16.7208, 0.83", "-30.4545, -208.446, 16.5199, 0.83", "-31.4033, -212.178, 16.1929, 0.83", "-32.0876, -214.748, 15.9971, 0.83", "-32.418, -216.114, 15.9201, 0.83", "-32.8, -217.786, 15.8612, 0.83", "-32.9914, -218.876, 15.8735, 0.83", "-33.337, -221.821, 16.02, 0.83", "-33.4616, -224.306, 16.2092, 0.83", "-33.5381, -226.742, 16.4013, 0.55", "-33.5958, -229.148, 16.6398, 0.55", "-33.8306, -232.519, 16.9292, 0.83", "-33.9362, -233.784, 16.9933, 0.83", "-34.0862, -235.275, 17.0504, 0.83", "-34.3117, -236.313, 17.0724, 0.83", "-34.7792, -237.738, 17.1073, 0.83", "-36.1749, -241.369, 17.2349, 0.83", "-36.9254, -243.319, 17.3719, 1.39", "-37.3597, -244.488, 17.4966, 1.39", "-38.9103, -248.91, 18.1593, 0.83", "-39.3389, -250.263, 18.401, 0.83", "-39.9444, -252.397, 18.888, 1.39", "-40.5014, -254.61, 19.5815, 0.83", "-40.7341, -255.463, 19.8889, 0.28", "-41.3316, -257.437, 20.6415, 0.83", "-41.9147, -259.237, 21.386, 0.83", "-42.7029, -261.188, 22.2085, 1.11", "-43.6639, -263.371, 23.1806, 0.28", "-44.5876, -265.308, 24.0637, 0.28", "-46.2827, -268.672, 25.6032, 0.28", "-47.3525, -270.638, 26.4968, 0.28", "-48.9498, -273.39, 27.6645, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-28.8179, -201.749, 16.9075, 0.28", "-27.2207, -202.408, 15.1529, 0.28", "-26.0667, -202.849, 14.1951, 0.28", "-24.6825, -203.355, 13.1861, 0.28", "-21.4072, -204.357, 11.5994, 0.28", "-20.2994, -204.623, 11.2592, 0.28", "-16.6616, -205.379, 10.3014, 0.28", "-14.6356, -205.737, 9.88804, 0.28", "-13.5399, -205.915, 9.70408, 0.28", "-9.26777, -206.585, 9.11233, 0.28", "-5.46814, -207.234, 8.65307, 0.28", "-2.43658, -207.782, 8.14042, 0.28", "-0.726468, -208.103, 7.75582, 0.28", "0.628367, -208.362, 7.44186, 0.28", "1.6671, -208.589, 7.14285, 0.28", "3.3008, -209.098, 6.30741, 0.28", "4.19852, -209.544, 5.66937, 0.28", "11.9168, -211.171, 4.53517, 0.28", "19.4449, -212.101, 2.10186, 0.28", "26.3349, -214.657, -1.00912, 0.28", "32.7198, -218.104, -4.38371, 0.28", "39.145, -222.716, -5.87525, 0.28", "46.1621, -226.328, -7.24051, 0.28", "53.2192, -229.761, -8.81148, 0.28", "60.2828, -233.327, -10.0416, 0.28", "67.5008, -236.755, -10.5237, 0.28", "75.0858, -239.132, -9.81043, 0.28", "82.8011, -240.166, -8.11583, 0.28", "90.1548, -240.564, -5.07844, 0.28", "97.3766, -242.666, -2.41522, 0.28", "103.643, -245.163, 1.86927, 0.28", "110.906, -246.634, 4.80469, 0.28", "118.166, -247.229, 8.02955, 0.28", "125.201, -249.369, 11.1328, 0.28", "132.758, -250.014, 13.5677, 0.28", "140.572, -250.259, 15.1031, 0.28", "148.337, -251.694, 16.1756, 0.28", "156.025, -253.798, 15.9205, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-20.0486, 353.025, 204.94, 0.28", "-19.7971, 358.053, 212.125, 0.28", "-19.2307, 361.765, 219.988, 0.28", "-19.1102, 363.541, 228.469, 0.28" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-20.0486, 353.025, 204.94, 0.28", "-21.1007, 355.068, 199.164, 0.28", "-22.4653, 358.192, 193.914, 0.28", "-23.1819, 361.485, 188.644, 0.28", "-24.7941, 365.493, 184.044, 0.28", "-26.5168, 369.586, 179.55, 0.28", "-28.7766, 373.366, 175.028, 0.28", "-31.7738, 376.05, 170.22, 0.28", "-33.7574, 377.568, 164.532, 0.28", "-36.49, 378.896, 159.111, 0.28", "-37.9326, 379.602, 153.131, 0.28", "-40.2222, 379.733, 147.382, 0.28" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "22.9139, 332.749, 156.814, 0.28", "30.3158, 330.155, 162.509, 0.28", "38.6284, 328.971, 167.28, 0.28", "46.8782, 329.982, 172.114, 0.28", "55.5087, 332.415, 175.574, 0.28", "63.4676, 334.449, 180.563, 0.28", "70.5705, 337.536, 186.27, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "22.9139, 332.749, 156.814, 0.28", "12.3915, 332.923, 151.155, 0.28", "2.5467, 331.896, 144.503, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "9.16702, 27.5474, 19.7251, 1.11", "12.8747, 28.4675, 17.3928, 1.11", "14.6132, 28.9357, 16.4726, 1.11", "18.2585, 30.1149, 14.753, 1.11", "20.6675, 31.0528, 13.7761, 1.11", "22.5718, 31.8865, 13.0726, 1.11", "26.1722, 33.479, 11.802, 1.11", "30.1155, 35.4286, 10.6349, 1.11", "31.6821, 36.3201, 10.0537, 1.11", "33.4444, 37.5342, 9.09245, 0.83", "34.5734, 38.3568, 8.45189, 0.83", "35.377, 38.8877, 7.98767, 0.83", "37.7554, 40.3297, 6.63031, 0.83", "38.5691, 40.8267, 6.02315, 0.83", "40.3545, 41.8515, 4.74349, 0.83", "41.6499, 42.5855, 3.86643, 0.83", "42.5994, 43.1321, 3.31985, 0.83", "43.6353, 43.7226, 2.83386, 0.83", "44.9497, 44.417, 2.38433, 0.83", "46.1072, 45.0622, 1.95033, 0.83", "46.9219, 45.5699, 1.61694, 0.83", "47.8238, 46.2001, 1.14754, 0.83", "48.544, 46.7247, 0.721565, 0.83", "49.4209, 47.3614, 0.141607, 0.83", "50.5464, 48.2374, -0.67371, 0.83", "51.3394, 48.9076, -1.24392, 0.83", "52.2187, 49.7309, -1.86075, 0.83", "52.9967, 50.5455, -2.38096, 0.83", "53.6265, 51.2649, -2.76852, 0.83", "54.4871, 52.2355, -3.22703, 0.83", "55.0898, 52.8724, -3.48433, 0.55", "55.4065, 53.2171, -3.61883, 0.55", "55.8397, 53.7213, -3.89571, 0.55", "56.1055, 54.0373, -4.13492, 0.55", "56.6353, 54.6905, -4.73881, 0.55", "56.9224, 55.0731, -5.3225, 0.55", "57.1464, 55.361, -5.91635, 0.55", "57.9537, 56.2317, -8.19663, 0.55", "58.2484, 56.4858, -9.01952, 0.55", "58.5432, 56.6973, -9.78091, 0.55", "59.8476, 57.4764, -12.7994, 0.55", "60.1676, 57.6228, -13.4241, 0.55", "60.7037, 57.7718, -14.2305, 0.55", "61.3742, 57.847, -14.8429, 0.55", "62.3644, 57.8321, -15.4939, 0.55", "63.3498, 57.7645, -15.9227, 0.55", "63.9396, 57.7313, -16.075, 0.83", "64.8951, 57.6972, -16.3273, 0.83", "66.9741, 57.6576, -16.8056, 0.83", "68.0197, 57.6756, -17.0388, 0.55", "69.1792, 57.7642, -17.3141, 0.55", "70.4821, 57.9822, -17.6546, 0.55", "71.5228, 58.2493, -17.9623, 0.55", "72.9122, 58.7044, -18.3281, 0.55", "74.5916, 59.3732, -18.7614, 0.83", "76.2484, 60.1321, -19.1198, 0.55", "77.4549, 60.7481, -19.449, 0.55", "78.5758, 61.3906, -19.8356, 0.55", "80.4806, 62.5873, -20.6958, 0.55", "81.3762, 63.1911, -21.2162, 0.55", "82.3181, 63.8155, -21.8302, 0.55", "84.8798, 65.4077, -23.3458, 0.55", "85.9299, 66.047, -23.9345, 0.55", "88.2945, 67.4735, -25.2057, 1.11", "89.0046, 67.8696, -25.4879, 0.55", "91.5261, 69.1713, -26.0653, 0.83", "93.9216, 70.3406, -26.2946, 0.55", "94.8273, 70.7796, -26.2868, 0.55", "96.1886, 71.4553, -26.2372, 0.55", "99.5608, 73.1482, -26.0839, 0.55", "100.316, 73.5359, -26.0885, 0.28", "101.956, 74.4194, -26.222, 0.28", "103.281, 75.1899, -26.502, 0.28", "104.823, 76.1371, -26.9471, 0.83", "106.081, 77.0014, -27.4544, 0.55", "107.015, 77.7169, -27.9851, 0.55", "107.945, 78.4337, -28.516, 0.55", "108.879, 79.1988, -29.0484, 0.55", "109.484, 79.7332, -29.3711, 0.28", "109.903, 80.131, -29.5723, 0.28", "110.604, 80.8146, -29.8655, 0.55", "111.562, 81.712, -30.2117, 0.55", "112.342, 82.3969, -30.4883, 0.55", "112.97, 82.9077, -30.7068, 0.55", "113.995, 83.7334, -31.0501, 0.55", "114.805, 84.3777, -31.3109, 0.55", "119.127, 87.2356, -34.5203, 0.55", "123.216, 90.787, -37.3532, 0.55", "127.999, 93.941, -39.4544, 0.55", "133.608, 95.9306, -40.7289, 0.55", "138.949, 96.9398, -43.4756, 0.55", "143.931, 97.239, -46.9889, 0.55", "148.679, 98.5646, -50.5605, 0.55", "153.725, 99.7729, -53.7455, 0.55", "158.375, 101.632, -57.2017, 0.55", "163.093, 104.375, -59.9105, 0.55", "167.796, 107.81, -61.7605, 0.55", "172.616, 111.532, -62.4204, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "9.16702, 27.5474, 19.7251, 1.11", "9.88065, 31.6168, 24.1204, 1.11", "11.0704, 37.5722, 30.0471, 1.11", "11.7851, 40.4618, 33.0632, 1.11", "12.6244, 43.4506, 36.093, 0.83", "14.2823, 48.9861, 41.3679, 0.83", "15.5177, 53.0457, 45.3754, 0.83", "16.5316, 56.5869, 48.9547, 0.83", "18.1599, 62.2365, 53.8781, 0.55", "18.8446, 64.186, 55.6067, 0.55", "19.6186, 66.4651, 57.4177, 0.55", "21.0785, 71.9465, 60.9293, 0.55", "22.6191, 80.3534, 66.128, 0.55", "22.9049, 82.0175, 67.5089, 0.55", "23.5803, 89.3314, 73.4132, 0.55", "23.6743, 90.0209, 74.3569, 0.55", "23.8245, 90.4662, 75.4058, 0.55", "27.3515, 100.894, 83.1404, 0.55", "31.5855, 112.905, 87.7949, 0.55", "34.2531, 125.789, 91.3902, 0.55", "35.9985, 139.075, 94.1421, 0.55", "38.9289, 151.91, 97.6858, 0.55", "44.4828, 163.807, 100.979, 0.55", "48.382, 176.064, 105.338, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "74.0502, 132.505, -36.2569, 0.28", "66.5317, 132.291, -31.8869, 0.28", "64.3347, 132.229, -30.61, 0.28", "62.1474, 132.167, -29.3387, 0.28", "60.0702, 132.108, -28.1313, 0.28" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "74.0502, 132.505, -36.2569, 0.55", "75.0682, 137.932, -43.8773, 0.55", "75.4086, 139.172, -45.0559, 0.55", "78.8443, 148.47, -51.7404, 0.55", "79.6051, 150.303, -52.6782, 0.28", "80.526, 152.393, -53.4459, 0.28", "80.526, 152.393, -53.4459, 0.28", "82.5038, 156.369, -55.3648, 0.83", "84.766, 160.524, -57.3757, 0.28", "86.8178, 164.043, -58.3709, 0.28", "88.0778, 166.16, -58.8616, 0.55", "89.8872, 169.2, -59.3993, 0.28", "97.7239, 182.69, -63.1965, 0.28", "98.4029, 183.932, -63.6229, 0.28", "103.131, 193.344, -66.9427, 0.55", "104.477, 196.174, -67.9589, 0.55", "105.548, 198.566, -68.7116, 0.28", "110.278, 210.042, -71.4981, 0.28", "112.118, 214.825, -72.0898, 0.28", "112.946, 216.956, -72.4683, 0.28", "114.893, 221.787, -73.6546, 0.83", "115.54, 223.338, -73.9088, 0.28", "116.395, 225.263, -73.9551, 0.55", "117.123, 226.717, -73.6665, 0.28", "118.935, 229.554, -73.0738, 0.28", "120.21, 231.2, -72.7145, 0.28", "121.989, 233.115, -72.2776, 0.55", "123.44, 234.48, -72.1543, 0.55", "127.608, 237.778, -72.2727, 0.28", "131.052, 240.211, -72.9115, 0.83", "133.138, 241.639, -73.534, 0.28", "136.079, 243.737, -74.6368, 0.28", "141.834, 247.9, -77.1179, 0.28", "144.754, 250.121, -78.447, 0.83", "148.694, 253.507, -80.3083, 0.28", "150.91, 255.726, -81.2722, 0.28", "152.959, 257.957, -81.957, 0.28", "154.361, 259.633, -82.2415, 0.28", "156.92, 262.953, -82.0615, 0.28", "158.95, 265.859, -81.6178, 0.28", "160.219, 267.788, -81.1287, 0.28", "161.344, 269.554, -80.7965, 0.28", "163.234, 272.676, -80.391, 0.55", "165.612, 276.884, -80.0379, 0.28", "167.781, 280.48, -79.8578, 0.28", "169.781, 283.536, -79.7717, 0.28", "173.142, 288.191, -79.691, 0.28", "175.365, 290.885, -79.6625, 0.28", "177.675, 293.224, -79.7816, 0.55", "181.593, 296.54, -80.1914, 0.28", "183.083, 297.612, -80.3128, 0.55", "185.285, 299.006, -80.4054, 0.28", "188.141, 300.734, -80.3608, 0.28", "192.432, 303.307, -80.3456, 0.28", "196.678, 305.84, -80.3086, 0.28", "198.151, 306.766, -80.2732, 0.55", "200.145, 308.039, -80.1728, 0.28", "201.887, 309.142, -79.9103, 0.28", "203.994, 310.452, -79.396, 0.28", "208.852, 313.2, -77.838, 0.55", "211.194, 314.404, -77.0573, 0.28", "213.855, 315.584, -76.1849, 0.28", "219.678, 317.688, -74.3717, 0.55", "222.595, 318.542, -73.5215, 0.28", "226.238, 319.433, -72.4664, 0.28", "229.499, 320.048, -71.5361, 0.28", "232.391, 320.446, -70.7782, 0.28", "236.443, 320.809, -69.9171, 0.28", "239.429, 320.943, -69.6492, 0.28" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-48.9498, -273.39, 27.6645, 0.28", "-49.1847, -274.101, 20.1035, 0.28", "-49.8582, -274.813, 12.4268, 0.28", "-50.7604, -275.867, 1.12918, 0.28", "-51.0969, -276.202, -2.91681, 0.28", "-51.5558, -276.529, -6.97082, 0.28", "-52.0817, -276.866, -11.1607, 0.28", "-52.6929, -277.277, -17.3274, 0.28", "-53.3057, -277.515, -22.7034, 0.28", "-54.6205, -277.474, -27.3925, 0.28", "-56.2821, -277.324, -32.114, 0.28", "-58.1847, -277.071, -36.9028, 0.28", "-60.8498, -276.613, -43.1038, 0.28", "-62.2083, -276.347, -45.7237, 0.28", "-70.5068, -274.706, -58.5785, 0.28", "-73.2325, -274.158, -62.1792, 0.28", "-77.7504, -273.165, -67.1246, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-48.9498, -273.39, 27.6645, 0.28", "-45.7946, -273.485, 32.1755, 0.28", "-42.9544, -273.594, 36.5373, 0.28", "-40.7116, -273.769, 40.3072, 0.28", "-36.3614, -274.09, 48.0523, 0.28", "-34.0757, -274.216, 52.3228, 0.28", "-32.0688, -274.318, 56.2791, 0.28", "-30.1415, -274.482, 60.3402, 0.28", "-28.1436, -274.801, 65.0594, 0.28", "-27.2955, -275.078, 67.5203, 0.28", "-26.5697, -275.551, 70.5065, 0.28", "-25.6421, -276.592, 74.6481, 0.28", "-24.9336, -277.783, 78.1137, 0.28", "-24.4026, -279.017, 80.9402, 0.28", "-23.7162, -281.166, 84.966, 0.28", "-23.0893, -283.496, 88.8887, 0.28", "-22.5314, -285.95, 92.6345, 0.28", "-22.1028, -288.134, 95.7127, 0.28", "-21.6614, -290.583, 99.0178, 0.28", "-21.1691, -293.409, 102.766, 0.28", "-15.4747, -297.785, 113.809, 0.28", "-9.08152, -302.594, 124.285, 0.28", "-2.89227, -306.751, 135.134, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "156.025, -253.798, 15.9205, 0.28", "164.504, -256.368, 15.9171, 0.28", "173.185, -258.066, 15.7444, 0.28", "181.533, -260.833, 14.633, 0.28", "189.536, -263.899, 12.3449, 0.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "156.025, -253.798, 15.9205, 0.28", "165.129, -254.784, 18.9609, 0.28", "174.149, -255.11, 22.3748, 0.28", "183.176, -253.69, 25.535, 0.28", "192.176, -250.887, 27.8552, 0.28", "200.276, -246.815, 31.4374, 0.28", "207.255, -241.494, 35.7942, 0.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_22", "dend_19", "dend_0", "dend_24", "dend_23", "dend_21", "dend_20", "dend_2", "dend_1", "dend_26", "dend_25", "dend_14", "dend_3", "dend_28", "dend_27", "dend_16", "dend_15", "dend_5", "dend_4", "dend_36", "dend_29", "dend_18", "dend_17", "dend_7", "dend_6", "dend_40", "dend_37", "dend_33", "dend_30", "dend_11", "dend_8", "dend_42", "dend_41", "dend_39", "dend_38", "dend_35", "dend_34", "dend_32", "dend_31", "dend_13", "dend_12", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_22", "dend_19", "dend_0", "dend_24", "dend_23", "dend_21", "dend_20", "dend_2", "dend_1", "dend_26", "dend_25", "dend_14", "dend_3", "dend_28", "dend_27", "dend_16", "dend_15", "dend_5", "dend_4", "dend_36", "dend_29", "dend_18", "dend_17", "dend_7", "dend_6", "dend_40", "dend_37", "dend_33", "dend_30", "dend_11", "dend_8", "dend_42", "dend_41", "dend_39", "dend_38", "dend_35", "dend_34", "dend_32", "dend_31", "dend_13", "dend_12", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_22", "dend_19", "dend_19", "dend_19", "dend_0", "dend_0", "axon_0", "axon_0", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_3", "dend_3", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_LBC_078d827ab9_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_14, id: dend_14, parent: dend_2
create dend_14
public dend_14
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_36, id: dend_36, parent: dend_28
create dend_36
public dend_36
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_22, dend_19, dend_0, dend_24, dend_23, dend_21, dend_20, dend_2, dend_1, dend_26, dend_25, dend_14, dend_3, dend_28, dend_27, dend_16, dend_15, dend_5, dend_4, dend_36, dend_29, dend_18, dend_17, dend_7, dend_6, dend_40, dend_37, dend_33, dend_30, dend_11, dend_8, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_13, dend_12, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_22, dend_19, dend_0, dend_24, dend_23, dend_21, dend_20, dend_2, dend_1, dend_26, dend_25, dend_14, dend_3, dend_28, dend_27, dend_16, dend_15, dend_5, dend_4, dend_36, dend_29, dend_18, dend_17, dend_7, dend_6, dend_40, dend_37, dend_33, dend_30, dend_11, dend_8, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_13, dend_12, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_22, dend_19, dend_19, dend_19, dend_0, dend_0, axon_0, axon_0, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_22(0), soma_0(0.49999926341317097)
    connect dend_19(0), soma_0(0.49999926341317097)
    connect dend_0(0), soma_0(0.49999926341317097)
    connect axon_0(0), soma_0(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_14(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_36(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.26545, 12.8263, -0.385372, 4.20571 ) }
    soma_0 { pt3dadd( -2.99538, 11.4835, -0.361166, 7.19402 ) }
    soma_0 { pt3dadd( -2.72531, 10.1406, -0.336961, 9.45629 ) }
    soma_0 { pt3dadd( -2.45524, 8.79768, -0.312756, 10.8887 ) }
    soma_0 { pt3dadd( -2.18516, 7.45479, -0.28855, 12.1858 ) }
    soma_0 { pt3dadd( -1.91509, 6.11191, -0.264345, 13.0837 ) }
    soma_0 { pt3dadd( -1.64502, 4.76902, -0.24014, 13.8391 ) }
    soma_0 { pt3dadd( -1.37495, 3.42613, -0.215934, 14.1927 ) }
    soma_0 { pt3dadd( -1.10488, 2.08325, -0.191729, 14.7245 ) }
    soma_0 { pt3dadd( -0.834809, 0.740358, -0.167524, 15.0655 ) }
    soma_0 { pt3dadd( -0.564738, -0.602529, -0.143318, 15.0604 ) }
    soma_0 { pt3dadd( -0.294667, -1.94542, -0.119113, 14.8454 ) }
    soma_0 { pt3dadd( -0.0245954, -3.2883, -0.0949076, 14.4598 ) }
    soma_0 { pt3dadd( 0.245476, -4.63119, -0.0707023, 13.4621 ) }
    soma_0 { pt3dadd( 0.515547, -5.97408, -0.0464969, 12.4622 ) }
    soma_0 { pt3dadd( 0.785618, -7.31696, -0.0222916, 11.0253 ) }
    soma_0 { pt3dadd( 1.05569, -8.65985, 0.00191374, 9.34508 ) }
    soma_0 { pt3dadd( 1.32576, -10.0027, 0.0261191, 7.80961 ) }
    soma_0 { pt3dadd( 1.59583, -11.3456, 0.0503244, 6.28847 ) }
    soma_0 { pt3dadd( 1.8659, -12.6885, 0.0745297, 5.0944 ) }
    soma_0 { pt3dadd( 2.13597, -14.0314, 0.0987351, 2.89855 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -3.80934, 13.1159, 8.90928, 5.26 ) }
    dend_22 { pt3dadd( -3.93265, 14.0811, 7.4856, 4.43 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 23/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -7.75934, -3.36909, 15.6893, 1.66 ) }
    dend_19 { pt3dadd( -9.73927, -3.66987, 18.6322, 1.66 ) }
    dend_19 { pt3dadd( -12.1293, -4.03295, 22.1848, 1.66 ) }
    dend_19 { pt3dadd( -17.2917, -4.81718, 29.8581, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.73066, -12.7141, 8.52928, 3.32 ) }
    dend_0 { pt3dadd( 3.83896, -18.9837, 8.52928, 3.05 ) }
    dend_0 { pt3dadd( 4.45474, -22.4672, 8.52928, 3.88 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 30/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.13597, -14.0314, 0.0987351, 1.11 ) }
    axon_0 { pt3dadd( 5.09344, -28.737, 0.0987351, 1.11 ) }
    axon_0 { pt3dadd( 8.05091, -43.4425, 0.0987351, 1.11 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 33/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -3.93265, 14.0811, 7.4856, 3.88 ) }
    dend_24 { pt3dadd( -4.72125, 16.0244, 7.49685, 3.88 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 35/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -3.93265, 14.0811, 7.4856, 1.11 ) }
    dend_23 { pt3dadd( 0.965721, 24.3867, -8.85851, 1.11 ) }
    dend_23 { pt3dadd( 2.34975, 27.3105, -13.0549, 1.11 ) }
    dend_23 { pt3dadd( 3.09533, 28.8424, -15.0428, 0.83 ) }
    dend_23 { pt3dadd( 3.66709, 30.0272, -16.4062, 0.55 ) }
    dend_23 { pt3dadd( 5.00648, 32.6797, -19.1014, 0.55 ) }
    dend_23 { pt3dadd( 5.64066, 33.8588, -20.1828, 0.55 ) }
    dend_23 { pt3dadd( 6.77899, 35.5962, -20.7026, 0.55 ) }
    dend_23 { pt3dadd( 7.93966, 37.0311, -21.4884, 0.83 ) }
    dend_23 { pt3dadd( 9.27244, 38.5573, -22.5183, 0.83 ) }
    dend_23 { pt3dadd( 10.9373, 40.3486, -23.8566, 0.55 ) }
    dend_23 { pt3dadd( 11.946, 41.3235, -24.6124, 0.55 ) }
    dend_23 { pt3dadd( 12.9635, 42.2412, -25.392, 0.55 ) }
    dend_23 { pt3dadd( 18.5453, 47.1725, -31.0038, 0.55 ) }
    dend_23 { pt3dadd( 19.3036, 47.7915, -31.877, 0.55 ) }
    dend_23 { pt3dadd( 20.0541, 48.366, -32.7837, 0.28 ) }
    dend_23 { pt3dadd( 20.9066, 49.0452, -33.873, 0.28 ) }
    dend_23 { pt3dadd( 22.1732, 50.1694, -35.5787, 0.28 ) }
    dend_23 { pt3dadd( 26.5157, 54.4063, -41.0477, 0.55 ) }
    dend_23 { pt3dadd( 28.1555, 56.1916, -42.5738, 0.28 ) }
    dend_23 { pt3dadd( 29.1955, 57.3811, -43.4671, 0.28 ) }
    dend_23 { pt3dadd( 29.9495, 58.2777, -44.0182, 0.28 ) }
    dend_23 { pt3dadd( 31.2907, 59.8986, -44.7215, 0.55 ) }
    dend_23 { pt3dadd( 33.613, 62.8916, -45.3542, 0.55 ) }
    dend_23 { pt3dadd( 36.4271, 66.6477, -45.3324, 0.28 ) }
    dend_23 { pt3dadd( 36.6149, 66.9093, -45.3236, 0.28 ) }
    dend_23 { pt3dadd( 38.0008, 68.6945, -45.5331, 0.28 ) }
    dend_23 { pt3dadd( 39.7877, 70.8012, -46.0483, 0.28 ) }
    dend_23 { pt3dadd( 41.3074, 72.4095, -46.602, 0.28 ) }
    dend_23 { pt3dadd( 42.2337, 73.3666, -47.0173, 0.28 ) }
    dend_23 { pt3dadd( 43.9034, 74.989, -47.7713, 0.55 ) }
    dend_23 { pt3dadd( 48.7385, 79.7472, -50.6361, 0.28 ) }
    dend_23 { pt3dadd( 50.7222, 81.7363, -51.9283, 0.28 ) }
    dend_23 { pt3dadd( 52.7977, 83.9998, -53.2931, 0.28 ) }
    dend_23 { pt3dadd( 54.0608, 85.5406, -54.2623, 0.28 ) }
    dend_23 { pt3dadd( 56.2705, 88.5216, -56.2226, 0.55 ) }
    dend_23 { pt3dadd( 59.9861, 94.0704, -59.8042, 0.28 ) }
    dend_23 { pt3dadd( 62.3092, 98.0039, -62.1213, 0.28 ) }
    dend_23 { pt3dadd( 64.6189, 102.306, -64.6535, 0.28 ) }
    dend_23 { pt3dadd( 67.6534, 108.545, -68.1391, 0.55 ) }
    dend_23 { pt3dadd( 69.2708, 112.138, -69.9874, 0.28 ) }
    dend_23 { pt3dadd( 70.1019, 114.104, -70.8606, 0.28 ) }
    dend_23 { pt3dadd( 71.1344, 116.503, -71.6138, 0.28 ) }
    dend_23 { pt3dadd( 72.5898, 119.697, -72.4804, 0.55 ) }
    dend_23 { pt3dadd( 74.1945, 122.646, -73.2033, 0.28 ) }
    dend_23 { pt3dadd( 75.2248, 124.351, -73.4644, 0.28 ) }
    dend_23 { pt3dadd( 76.6634, 126.633, -73.8087, 0.28 ) }
    dend_23 { pt3dadd( 78.7902, 129.789, -74.4346, 0.28 ) }
    dend_23 { pt3dadd( 79.8828, 131.328, -74.8002, 0.55 ) }
    dend_23 { pt3dadd( 82.9956, 135.633, -75.9499, 0.55 ) }
    dend_23 { pt3dadd( 84.0892, 137.124, -76.3551, 0.55 ) }
    dend_23 { pt3dadd( 85.1278, 138.604, -76.699, 0.55 ) }
    dend_23 { pt3dadd( 86.6746, 141.032, -77.1484, 0.83 ) }
    dend_23 { pt3dadd( 88.049, 143.321, -77.4284, 0.28 ) }
    dend_23 { pt3dadd( 88.781, 144.736, -77.4976, 0.28 ) }
    dend_23 { pt3dadd( 89.6636, 146.813, -77.5163, 0.28 ) }
    dend_23 { pt3dadd( 90.8573, 150.625, -77.7276, 0.28 ) }
    dend_23 { pt3dadd( 91.1116, 151.918, -77.8512, 0.28 ) }
    dend_23 { pt3dadd( 91.4217, 153.931, -78.0892, 0.55 ) }
    dend_23 { pt3dadd( 91.8446, 156.318, -78.4022, 0.28 ) }
    dend_23 { pt3dadd( 92.8462, 160.323, -78.9257, 0.28 ) }
    dend_23 { pt3dadd( 93.877, 163.421, -79.3099, 0.28 ) }
    dend_23 { pt3dadd( 95.2598, 166.711, -79.9883, 0.28 ) }
    dend_23 { pt3dadd( 97.3473, 170.657, -80.9851, 0.28 ) }
    dend_23 { pt3dadd( 98.85, 172.989, -81.631, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( 100.787, 175.383, -82.2974, 0.55 ) }
    dend_23 { pt3dadd( 102.136, 176.823, -82.6614, 0.28 ) }
    dend_23 { pt3dadd( 105.601, 180.331, -83.5878, 0.28 ) }
    dend_23 { pt3dadd( 108.551, 183.231, -84.385, 0.28 ) }
    dend_23 { pt3dadd( 109.848, 184.482, -84.6955, 0.28 ) }
    dend_23 { pt3dadd( 112.034, 186.605, -85.081, 0.83 ) }
    dend_23 { pt3dadd( 113.81, 188.301, -86.0756, 0.28 ) }
    dend_23 { pt3dadd( 115.639, 190.038, -87.5865, 0.28 ) }
    dend_23 { pt3dadd( 117.262, 191.572, -89.3701, 0.28 ) }
    dend_23 { pt3dadd( 119.264, 193.365, -91.9516, 0.28 ) }
    dend_23 { pt3dadd( 121.232, 195.048, -94.6274, 0.28 ) }
    dend_23 { pt3dadd( 130.069, 202.668, -107.31, 0.28 ) }
    dend_23 { pt3dadd( 130.842, 203.354, -108.442, 0.55 ) }
    dend_23 { pt3dadd( 132.377, 204.735, -110.953, 0.28 ) }
    dend_23 { pt3dadd( 134.258, 206.602, -114.506, 0.28 ) }
    dend_23 { pt3dadd( 135.233, 207.592, -116.625, 0.28 ) }
    dend_23 { pt3dadd( 136.302, 208.57, -118.827, 0.28 ) }
    dend_23 { pt3dadd( 138.486, 210.293, -118.855, 0.28 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 18/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -17.2917, -4.81718, 29.8581, 1.66 ) }
    dend_21 { pt3dadd( -20.0188, -4.46946, 30.149, 1.66 ) }
    dend_21 { pt3dadd( -22.9772, -3.7795, 30.172, 1.66 ) }
    dend_21 { pt3dadd( -26.6425, -2.69268, 30.7471, 1.39 ) }
    dend_21 { pt3dadd( -30.1947, -1.6085, 31.5814, 1.39 ) }
    dend_21 { pt3dadd( -33.3981, -0.64375, 32.4642, 1.11 ) }
    dend_21 { pt3dadd( -38.3462, 0.821732, 34.1722, 1.11 ) }
    dend_21 { pt3dadd( -44.2209, 2.89735, 36.6336, 1.11 ) }
    dend_21 { pt3dadd( -51.6269, 5.87402, 40.8362, 1.11 ) }
    dend_21 { pt3dadd( -52.6584, 6.34127, 41.5353, 1.11 ) }
    dend_21 { pt3dadd( -55.2723, 7.42667, 43.3398, 1.11 ) }
    dend_21 { pt3dadd( -59.3157, 9.00422, 45.6562, 1.11 ) }
    dend_21 { pt3dadd( -61.4328, 9.81779, 46.7477, 1.11 ) }
    dend_21 { pt3dadd( -66.1172, 11.4595, 49.0501, 1.11 ) }
    dend_21 { pt3dadd( -68.1807, 12.1602, 49.713, 1.11 ) }
    dend_21 { pt3dadd( -72.873, 13.7587, 51.08, 1.11 ) }
    dend_21 { pt3dadd( -78.6049, 15.4528, 52.4947, 1.11 ) }
    dend_21 { pt3dadd( -85.2184, 16.9948, 53.5792, 1.11 ) }
    dend_21 { pt3dadd( -88.0905, 17.555, 53.9494, 0.83 ) }
    dend_21 { pt3dadd( -91.1991, 18.0937, 54.5739, 0.83 ) }
    dend_21 { pt3dadd( -92.6805, 18.3661, 55.1099, 0.83 ) }
    dend_21 { pt3dadd( -95.009, 18.8483, 56.2678, 0.83 ) }
    dend_21 { pt3dadd( -97.0633, 19.2421, 57.527, 0.83 ) }
    dend_21 { pt3dadd( -98.7926, 19.5377, 58.3817, 0.83 ) }
    dend_21 { pt3dadd( -104.862, 21.3478, 62.7439, 0.83 ) }
    dend_21 { pt3dadd( -105.279, 21.526, 63.198, 0.83 ) }
    dend_21 { pt3dadd( -116.302, 23.6005, 66.0054, 0.83 ) }
    dend_21 { pt3dadd( -126.538, 27.1998, 70.1008, 0.83 ) }
    dend_21 { pt3dadd( -137.104, 30.075, 73.8641, 0.83 ) }
    dend_21 { pt3dadd( -148.218, 31.9834, 76.4003, 0.83 ) }
    dend_21 { pt3dadd( -159.451, 34.2758, 77.9419, 0.83 ) }
    dend_21 { pt3dadd( -170.927, 34.4159, 79.1543, 0.83 ) }
    dend_21 { pt3dadd( -182.253, 33.4719, 81.1595, 0.83 ) }
    dend_21 { pt3dadd( -192.952, 31.06, 84.8092, 0.83 ) }
    dend_21 { pt3dadd( -203.233, 27.3587, 88.668, 0.83 ) }
    dend_21 { pt3dadd( -213.319, 22.5871, 91.9177, 0.83 ) }
    dend_21 { pt3dadd( -222.684, 18.3948, 97.3413, 0.83 ) }
    dend_21 { pt3dadd( -230.866, 12.1776, 102.912, 0.83 ) }
    dend_21 { pt3dadd( -239.165, 6.2063, 108.554, 0.83 ) }
    dend_21 { pt3dadd( -247.649, -0.193778, 113.441, 0.83 ) }
    dend_21 { pt3dadd( -256.753, -4.31828, 119.337, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 59/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -17.2917, -4.81718, 29.8581, 1.11 ) }
    dend_20 { pt3dadd( -18.6322, -4.00155, 31.9394, 1.11 ) }
    dend_20 { pt3dadd( -19.3838, -3.67003, 33.2172, 1.11 ) }
    dend_20 { pt3dadd( -21.7342, -2.87269, 36.8521, 1.11 ) }
    dend_20 { pt3dadd( -22.4993, -2.62179, 37.9555, 1.11 ) }
    dend_20 { pt3dadd( -24.0252, -2.05601, 40.0559, 1.11 ) }
    dend_20 { pt3dadd( -28.1187, -0.409092, 45.9559, 1.11 ) }
    dend_20 { pt3dadd( -28.9114, -0.043589, 47.1717, 0.83 ) }
    dend_20 { pt3dadd( -29.9839, 0.524089, 48.6429, 0.83 ) }
    dend_20 { pt3dadd( -30.7101, 0.918543, 49.4517, 0.83 ) }
    dend_20 { pt3dadd( -31.4975, 1.3909, 50.3811, 0.83 ) }
    dend_20 { pt3dadd( -33.6273, 2.9584, 52.9474, 0.83 ) }
    dend_20 { pt3dadd( -35.5249, 4.6547, 54.3347, 0.83 ) }
    dend_20 { pt3dadd( -36.6634, 5.76487, 55.2551, 0.83 ) }
    dend_20 { pt3dadd( -36.9152, 6.01738, 55.4994, 0.83 ) }
    dend_20 { pt3dadd( -41.4592, 10.0044, 60.3886, 0.83 ) }
    dend_20 { pt3dadd( -45.768, 13.8897, 65.5629, 0.83 ) }
    dend_20 { pt3dadd( -51.4294, 16.339, 70.2051, 0.83 ) }
    dend_20 { pt3dadd( -57.4197, 19.0041, 74.2843, 0.83 ) }
    dend_20 { pt3dadd( -63.1803, 21.6929, 78.6716, 0.83 ) }
    dend_20 { pt3dadd( -68.6532, 25.4095, 82.7156, 0.83 ) }
    dend_20 { pt3dadd( -73.8205, 29.1295, 87.1474, 0.83 ) }
    dend_20 { pt3dadd( -79.1991, 33.973, 90.0382, 0.83 ) }
    dend_20 { pt3dadd( -84.5407, 38.5546, 93.3671, 0.83 ) }
    dend_20 { pt3dadd( -89.8798, 43.1082, 96.7361, 0.83 ) }
    dend_20 { pt3dadd( -94.6149, 47.3057, 101.263, 0.83 ) }
    dend_20 { pt3dadd( -100.009, 50.3077, 105.923, 0.83 ) }
    dend_20 { pt3dadd( -105.509, 53.1569, 110.548, 0.83 ) }
    dend_20 { pt3dadd( -111.061, 54.7352, 115.656, 0.83 ) }
    dend_20 { pt3dadd( -116.701, 55.3949, 120.86, 0.83 ) }
    dend_20 { pt3dadd( -122.752, 55.2762, 125.631, 0.83 ) }
    dend_20 { pt3dadd( -129.762, 55.7613, 128.791, 0.83 ) }
    dend_20 { pt3dadd( -136.61, 55.6045, 132.332, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 92/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 4.45474, -22.4672, 8.52928, 4.16 ) }
    dend_2 { pt3dadd( 4.46408, -23.0086, 8.54941, 4.16 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 94/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.45474, -22.4672, 8.52928, 1.39 ) }
    dend_1 { pt3dadd( 13.7517, -22.1997, 0.43505, 1.39 ) }
    dend_1 { pt3dadd( 16.362, -22.0914, -1.70025, 1.11 ) }
    dend_1 { pt3dadd( 19.5939, -22.0812, -3.818, 1.11 ) }
    dend_1 { pt3dadd( 22.016, -22.1895, -5.13989, 0.83 ) }
    dend_1 { pt3dadd( 24.3865, -22.3603, -6.20628, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( 31.6495, -22.9466, -9.22809, 0.83 ) }
    dend_1 { pt3dadd( 35.1954, -23.2624, -10.0708, 0.83 ) }
    dend_1 { pt3dadd( 41.1938, -23.6412, -11.4273, 0.55 ) }
    dend_1 { pt3dadd( 43.7363, -23.7015, -11.9398, 0.55 ) }
    dend_1 { pt3dadd( 47.6544, -23.6801, -12.5942, 0.55 ) }
    dend_1 { pt3dadd( 52.3641, -23.4475, -13.1804, 0.55 ) }
    dend_1 { pt3dadd( 56.4607, -23.175, -13.6799, 0.55 ) }
    dend_1 { pt3dadd( 58.4537, -22.9827, -14.0953, 0.55 ) }
    dend_1 { pt3dadd( 62.2563, -22.5093, -15.1902, 0.55 ) }
    dend_1 { pt3dadd( 65.1648, -22.1719, -16.0464, 0.55 ) }
    dend_1 { pt3dadd( 67.2884, -21.9962, -16.6675, 0.55 ) }
    dend_1 { pt3dadd( 72.8237, -21.7402, -18.1682, 0.55 ) }
    dend_1 { pt3dadd( 75.5104, -21.7055, -18.8229, 0.55 ) }
    dend_1 { pt3dadd( 78.2823, -21.6825, -19.2627, 0.55 ) }
    dend_1 { pt3dadd( 80.8784, -21.582, -19.461, 0.55 ) }
    dend_1 { pt3dadd( 82.7096, -21.4592, -19.4642, 0.55 ) }
    dend_1 { pt3dadd( 85.164, -21.237, -19.4512, 0.55 ) }
    dend_1 { pt3dadd( 89.1987, -20.7014, -19.3635, 0.55 ) }
    dend_1 { pt3dadd( 94.3728, -19.8922, -19.5981, 0.55 ) }
    dend_1 { pt3dadd( 97.5884, -19.2681, -19.9324, 0.28 ) }
    dend_1 { pt3dadd( 100.881, -18.5316, -20.4568, 0.55 ) }
    dend_1 { pt3dadd( 106.289, -17.2339, -21.633, 0.55 ) }
    dend_1 { pt3dadd( 109.2, -16.4567, -22.4781, 0.55 ) }
    dend_1 { pt3dadd( 112.314, -15.4973, -23.6891, 0.28 ) }
    dend_1 { pt3dadd( 114.184, -14.7927, -24.5494, 0.55 ) }
    dend_1 { pt3dadd( 115.254, -14.3078, -25.0317, 0.28 ) }
    dend_1 { pt3dadd( 116.541, -13.5629, -25.5439, 0.55 ) }
    dend_1 { pt3dadd( 117.984, -12.6238, -25.8837, 0.28 ) }
    dend_1 { pt3dadd( 119.284, -11.8106, -26.1005, 0.28 ) }
    dend_1 { pt3dadd( 120.48, -11.1165, -26.2116, 0.28 ) }
    dend_1 { pt3dadd( 122.452, -10.0414, -26.4137, 0.28 ) }
    dend_1 { pt3dadd( 123.257, -9.60026, -26.502, 0.28 ) }
    dend_1 { pt3dadd( 126.833, -7.71999, -26.9061, 1.11 ) }
    dend_1 { pt3dadd( 128.489, -6.84898, -27.0959, 0.28 ) }
    dend_1 { pt3dadd( 129.91, -6.08051, -27.4668, 0.28 ) }
    dend_1 { pt3dadd( 131.574, -5.10505, -28.0595, 0.28 ) }
    dend_1 { pt3dadd( 134.139, -3.41738, -28.9221, 0.28 ) }
    dend_1 { pt3dadd( 137.436, -1.15207, -29.96, 0.28 ) }
    dend_1 { pt3dadd( 139.692, 0.484083, -30.6276, 0.28 ) }
    dend_1 { pt3dadd( 146.144, 5.22154, -32.3543, 0.28 ) }
    dend_1 { pt3dadd( 148.399, 6.8943, -32.8885, 0.28 ) }
    dend_1 { pt3dadd( 152.978, 10.2991, -33.7984, 0.83 ) }
    dend_1 { pt3dadd( 154.751, 11.6865, -34.072, 0.83 ) }
    dend_1 { pt3dadd( 156.84, 13.3522, -34.2423, 0.28 ) }
    dend_1 { pt3dadd( 158.185, 14.3552, -34.1999, 0.28 ) }
    dend_1 { pt3dadd( 159.574, 15.3726, -33.8723, 0.28 ) }
    dend_1 { pt3dadd( 160.717, 16.1478, -33.7059, 0.55 ) }
    dend_1 { pt3dadd( 162.434, 17.3045, -33.8719, 0.28 ) }
    dend_1 { pt3dadd( 163.652, 18.2664, -33.9915, 0.28 ) }
    dend_1 { pt3dadd( 164.435, 18.8538, -34.0686, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 50/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 8.05091, -43.4425, 0.0987351, 0.55 ) }
    axon_1 { pt3dadd( 11.0084, -58.1481, 0.0987351, 0.55 ) }
    axon_1 { pt3dadd( 13.9659, -72.8536, 0.0987351, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 53/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -4.72125, 16.0244, 7.49685, 4.43 ) }
    dend_26 { pt3dadd( -6.5253, 21.5376, 7.1549, 4.43 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 55/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -4.72125, 16.0244, 7.49685, 1.39 ) }
    dend_25 { pt3dadd( -9.74007, 19.2149, 5.38658, 1.39 ) }
    dend_25 { pt3dadd( -13.1781, 21.7093, 3.30967, 1.39 ) }
    dend_25 { pt3dadd( -15.3326, 23.4526, 1.57389, 1.39 ) }
    dend_25 { pt3dadd( -17.7468, 25.4055, -0.457292, 1.39 ) }
    dend_25 { pt3dadd( -19.3963, 26.6526, -2.15003, 1.11 ) }
    dend_25 { pt3dadd( -22.5975, 29.0306, -5.65224, 1.11 ) }
    dend_25 { pt3dadd( -25.4771, 31.304, -8.91308, 1.11 ) }
    dend_25 { pt3dadd( -28.2179, 33.5247, -12.6297, 1.11 ) }
    dend_25 { pt3dadd( -29.9803, 34.9981, -15.2206, 1.39 ) }
    dend_25 { pt3dadd( -34.7937, 39.0848, -22.6141, 1.11 ) }
    dend_25 { pt3dadd( -35.879, 40.003, -24.218, 1.11 ) }
    dend_25 { pt3dadd( -37.9066, 41.7131, -26.9137, 1.11 ) }
    dend_25 { pt3dadd( -42.0026, 45.3717, -32.037, 1.11 ) }
    dend_25 { pt3dadd( -43.4206, 46.7825, -33.7763, 1.11 ) }
    dend_25 { pt3dadd( -46.0105, 49.7571, -36.9448, 0.83 ) }
    dend_25 { pt3dadd( -47.2386, 51.3369, -38.2902, 0.83 ) }
    dend_25 { pt3dadd( -49.2167, 53.9223, -40.452, 0.83 ) }
    dend_25 { pt3dadd( -50.9335, 56.1857, -42.4752, 0.28 ) }
    dend_25 { pt3dadd( -51.359, 56.7641, -42.9288, 0.55 ) }
    dend_25 { pt3dadd( -52.4438, 58.2366, -44.0992, 0.55 ) }
    dend_25 { pt3dadd( -54.3751, 60.8557, -46.0684, 0.28 ) }
    dend_25 { pt3dadd( -55.9531, 62.9633, -47.6598, 1.11 ) }
    dend_25 { pt3dadd( -58.696, 66.8653, -51.2021, 0.28 ) }
    dend_25 { pt3dadd( -59.6081, 68.234, -52.61, 0.28 ) }
    dend_25 { pt3dadd( -60.4227, 69.6152, -54.0761, 0.55 ) }
    dend_25 { pt3dadd( -60.8295, 70.4794, -55.0557, 0.55 ) }
    dend_25 { pt3dadd( -60.9809, 70.8723, -55.4899, 0.55 ) }
    dend_25 { pt3dadd( -62.6461, 76.1496, -62.9773, 0.28 ) }
    dend_25 { pt3dadd( -62.9244, 77.0246, -64.2974, 0.28 ) }
    dend_25 { pt3dadd( -63.4741, 78.7456, -67.0082, 0.83 ) }
    dend_25 { pt3dadd( -64.4227, 81.6539, -71.9275, 0.28 ) }
    dend_25 { pt3dadd( -64.8557, 82.8306, -73.9687, 0.83 ) }
    dend_25 { pt3dadd( -67.9023, 89.8262, -86.0039, 0.28 ) }
    dend_25 { pt3dadd( -68.4896, 90.9463, -88.1091, 0.28 ) }
    dend_25 { pt3dadd( -68.8886, 91.6136, -89.5062, 0.83 ) }
    dend_25 { pt3dadd( -71.212, 95.1365, -97.7814, 0.28 ) }
    dend_25 { pt3dadd( -71.6688, 95.7586, -99.2971, 0.55 ) }
    dend_25 { pt3dadd( -72.3293, 96.5773, -101.328, 0.55 ) }
    dend_25 { pt3dadd( -76.1366, 100.853, -111.788, 0.28 ) }
    dend_25 { pt3dadd( -76.6135, 101.373, -113.166, 0.28 ) }
    dend_25 { pt3dadd( -78.5733, 103.317, -118.749, 0.55 ) }
    dend_25 { pt3dadd( -79.2052, 103.878, -120.463, 0.28 ) }
    dend_25 { pt3dadd( -79.6184, 104.249, -121.693, 0.55 ) }
    dend_25 { pt3dadd( -81.638, 106.149, -128.236, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    // Section: dend_14, id: dend_14, parent: dend_2 (entry count 0/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 4.46408, -23.0086, 8.54941, 2.49 ) }
    dend_14 { pt3dadd( 5.36233, -31.3219, 8.10661, 2.49 ) }
    dend_14 { pt3dadd( 5.92323, -37.6865, 7.3942, 2.22 ) }
    dend_14 { pt3dadd( 6.48419, -44.0519, 6.68171, 2.22 ) }
    dend_14 { pt3dadd( 7.18387, -51.9913, 5.79303, 1.94 ) }
    dend_14 { pt3dadd( 8.12705, -62.6938, 4.59509, 2.22 ) }
    dend_14 { pt3dadd( 8.67478, -68.9091, 3.8994, 2.22 ) }
    dend_14 { pt3dadd( 9.28448, -75.6321, 3.25118, 2.22 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 8/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 4.46408, -23.0086, 8.54941, 2.49 ) }
    dend_3 { pt3dadd( -10.8716, -27.7807, -3.53495, 2.49 ) }
    dend_3 { pt3dadd( -14.8237, -29.0105, -6.64914, 2.49 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 11/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -6.5253, 21.5376, 7.1549, 4.43 ) }
    dend_28 { pt3dadd( -6.92445, 26.0608, 10.0815, 4.43 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -6.5253, 21.5376, 7.1549, 1.39 ) }
    dend_27 { pt3dadd( -9.66539, 23.6155, 9.43965, 1.39 ) }
    dend_27 { pt3dadd( -13.0002, 26.1742, 11.6251, 1.39 ) }
    dend_27 { pt3dadd( -18.7575, 30.9501, 16.0232, 1.39 ) }
    dend_27 { pt3dadd( -21.2795, 33.204, 18.0826, 0.83 ) }
    dend_27 { pt3dadd( -23.6955, 35.4054, 20.331, 0.83 ) }
    dend_27 { pt3dadd( -29.3706, 40.7177, 25.8022, 1.11 ) }
    dend_27 { pt3dadd( -33.6958, 45.3151, 30.3886, 1.11 ) }
    dend_27 { pt3dadd( -38.7828, 51.3835, 36.2164, 1.11 ) }
    dend_27 { pt3dadd( -39.73, 52.7249, 37.3414, 1.11 ) }
    dend_27 { pt3dadd( -43.3975, 58.6125, 41.937, 1.11 ) }
    dend_27 { pt3dadd( -44.9826, 61.5705, 43.9121, 1.11 ) }
    dend_27 { pt3dadd( -46.6201, 64.8525, 45.5539, 0.83 ) }
    dend_27 { pt3dadd( -47.7977, 67.4473, 46.5955, 0.83 ) }
    dend_27 { pt3dadd( -48.6078, 69.6649, 46.8316, 0.83 ) }
    dend_27 { pt3dadd( -49.497, 72.237, 47.0068, 0.83 ) }
    dend_27 { pt3dadd( -50.4299, 75.1527, 46.9831, 0.83 ) }
    dend_27 { pt3dadd( -51.2024, 77.4692, 47.0705, 0.83 ) }
    dend_27 { pt3dadd( -52.9321, 82.3842, 47.4842, 0.83 ) }
    dend_27 { pt3dadd( -53.8449, 84.8507, 48.1771, 0.83 ) }
    dend_27 { pt3dadd( -56.2928, 91.205, 50.4531, 0.83 ) }
    dend_27 { pt3dadd( -56.7931, 92.4782, 51.0579, 0.83 ) }
    dend_27 { pt3dadd( -57.8189, 94.8463, 52.5939, 0.83 ) }
    dend_27 { pt3dadd( -58.5345, 96.447, 53.9791, 0.83 ) }
    dend_27 { pt3dadd( -61.0245, 101.394, 59.6805, 0.83 ) }
    dend_27 { pt3dadd( -65.8568, 109.098, 67.3862, 0.83 ) }
    dend_27 { pt3dadd( -71.3442, 116.527, 74.8934, 0.83 ) }
    dend_27 { pt3dadd( -75.1653, 125.124, 82.3068, 0.83 ) }
    dend_27 { pt3dadd( -77.5323, 134.056, 89.9703, 0.83 ) }
    dend_27 { pt3dadd( -78.1406, 141.999, 98.8676, 0.83 ) }
    dend_27 { pt3dadd( -77.3423, 148.652, 108.665, 0.83 ) }
    dend_27 { pt3dadd( -78.8132, 154.662, 118.753, 0.83 ) }
    dend_27 { pt3dadd( -82.1207, 162.017, 127.507, 0.83 ) }
    dend_27 { pt3dadd( -83.5525, 167.115, 138.044, 0.83 ) }
    dend_27 { pt3dadd( -86.1971, 173.283, 147.798, 0.83 ) }
    dend_27 { pt3dadd( -88.5921, 179.543, 157.565, 0.83 ) }
    dend_27 { pt3dadd( -90.5371, 187.277, 166.435, 0.83 ) }
    dend_27 { pt3dadd( -91.8097, 196.45, 174.103, 0.83 ) }
    dend_27 { pt3dadd( -93.9934, 204.819, 182.373, 0.83 ) }
    dend_27 { pt3dadd( -96.8216, 213.183, 190.449, 0.83 ) }
    dend_27 { pt3dadd( -100.493, 222.288, 197.373, 0.83 ) }
    dend_27 { pt3dadd( -103.188, 230.596, 205.547, 0.83 ) }
    dend_27 { pt3dadd( -104.179, 239.517, 213.52, 0.83 ) }
    dend_27 { pt3dadd( -104.506, 247.643, 222.282, 0.83 ) }
    dend_27 { pt3dadd( -106.184, 254.388, 231.906, 0.83 ) }
    dend_27 { pt3dadd( -107.351, 260.533, 241.961, 0.83 ) }
    dend_27 { pt3dadd( -107.376, 266.36, 252.252, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 60/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 9.28448, -75.6321, 3.25118, 2.22 ) }
    dend_16 { pt3dadd( 10.3318, -77.2728, 10.7501, 2.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 62/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 9.28448, -75.6321, 3.25118, 0.83 ) }
    dend_15 { pt3dadd( 11.11, -80.1531, -6.44295, 0.83 ) }
    dend_15 { pt3dadd( 11.6202, -81.4792, -9.07984, 0.83 ) }
    dend_15 { pt3dadd( 12.1513, -82.7125, -11.3881, 0.83 ) }
    dend_15 { pt3dadd( 13.3405, -85.3248, -15.9751, 0.55 ) }
    dend_15 { pt3dadd( 15.194, -89.0972, -22.2308, 0.55 ) }
    dend_15 { pt3dadd( 15.5677, -89.9488, -23.6118, 0.55 ) }
    dend_15 { pt3dadd( 16.8913, -93.0925, -28.236, 0.28 ) }
    dend_15 { pt3dadd( 17.4786, -94.822, -30.741, 0.28 ) }
    dend_15 { pt3dadd( 17.7774, -95.8171, -32.1888, 0.55 ) }
    dend_15 { pt3dadd( 18.2197, -97.3625, -34.3281, 0.55 ) }
    dend_15 { pt3dadd( 19.5183, -101.813, -40.2549, 0.83 ) }
    dend_15 { pt3dadd( 20.5428, -105.279, -44.9343, 0.28 ) }
    dend_15 { pt3dadd( 21.3741, -107.787, -48.2211, 0.28 ) }
    dend_15 { pt3dadd( 22.1221, -110.27, -51.5126, 0.28 ) }
    dend_15 { pt3dadd( 22.7347, -112.176, -53.9806, 0.28 ) }
    dend_15 { pt3dadd( 23.9092, -115.498, -58.2293, 0.28 ) }
    dend_15 { pt3dadd( 24.7354, -117.567, -60.8532, 0.55 ) }
    dend_15 { pt3dadd( 25.7978, -120.502, -64.7069, 0.83 ) }
    dend_15 { pt3dadd( 27.403, -126.099, -72.6489, 0.28 ) }
    dend_15 { pt3dadd( 28.0058, -128.443, -76.0803, 0.28 ) }
    dend_15 { pt3dadd( 28.6283, -131.111, -80.0691, 0.28 ) }
    dend_15 { pt3dadd( 29.4386, -134.395, -84.9996, 0.28 ) }
    dend_15 { pt3dadd( 30.1982, -138.186, -90.444, 0.28 ) }
    dend_15 { pt3dadd( 30.9957, -142.273, -95.8702, 0.28 ) }
    dend_15 { pt3dadd( 31.3606, -144.098, -98.0097, 0.28 ) }
    dend_15 { pt3dadd( 31.5186, -144.854, -98.814, 0.28 ) }
    dend_15 { pt3dadd( 32.0985, -147.077, -100.933, 0.83 ) }
    dend_15 { pt3dadd( 33.9656, -152.857, -105.928, 0.28 ) }
    dend_15 { pt3dadd( 35.4785, -156.21, -108.446, 0.28 ) }
    dend_15 { pt3dadd( 38.9657, -162.467, -112.691, 0.28 ) }
    dend_15 { pt3dadd( 41.7216, -166.659, -115.503, 0.28 ) }
    dend_15 { pt3dadd( 43.5475, -168.96, -117.052, 0.28 ) }
    dend_15 { pt3dadd( 44.6727, -170.069, -117.809, 0.83 ) }
    dend_15 { pt3dadd( 51.2085, -174.461, -120.75, 0.28 ) }
    dend_15 { pt3dadd( 52.5252, -175.186, -121.191, 0.83 ) }
    dend_15 { pt3dadd( 55.353, -176.507, -121.885, 0.28 ) }
    dend_15 { pt3dadd( 57.4839, -177.533, -122.45, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_15 { pt3dadd( 60.3948, -179.058, -123.45, 0.28 ) }
    dend_15 { pt3dadd( 64.2833, -181.244, -125.157, 0.83 ) }
    dend_15 { pt3dadd( 66.8195, -182.847, -126.597, 0.28 ) }
    dend_15 { pt3dadd( 68.9883, -184.272, -127.857, 0.28 ) }
    dend_15 { pt3dadd( 71.3417, -185.956, -129.277, 0.83 ) }
    dend_15 { pt3dadd( 75.263, -189.043, -131.724, 0.28 ) }
    dend_15 { pt3dadd( 76.238, -189.898, -132.365, 0.55 ) }
    dend_15 { pt3dadd( 77.9525, -191.578, -133.572, 0.28 ) }
    dend_15 { pt3dadd( 80.128, -193.764, -134.958, 0.55 ) }
    dend_15 { pt3dadd( 83.7368, -197.53, -137.07, 0.28 ) }
    dend_15 { pt3dadd( 85.6103, -199.689, -138.202, 1.11 ) }
    dend_15 { pt3dadd( 87.5733, -202.145, -139.416, 0.28 ) }
    dend_15 { pt3dadd( 90.2108, -205.507, -141.104, 0.28 ) }
    dend_15 { pt3dadd( 92.8915, -209.001, -143.03, 0.28 ) }
    dend_15 { pt3dadd( 93.9786, -210.688, -144.158, 0.55 ) }
    dend_15 { pt3dadd( 96.6349, -215.882, -148.242, 0.28 ) }
    dend_15 { pt3dadd( 97.0921, -216.89, -149.11, 0.55 ) }
    dend_15 { pt3dadd( 97.4131, -217.783, -149.959, 0.28 ) }
    dend_15 { pt3dadd( 97.9141, -220.159, -152.511, 0.28 ) }
    dend_15 { pt3dadd( 98.1281, -225.796, -159.296, 0.28 ) }
    dend_15 { pt3dadd( 97.9551, -227.89, -162.037, 0.28 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -14.8237, -29.0105, -6.64914, 2.22 ) }
    dend_5 { pt3dadd( -15.2289, -36.6283, -4.34876, 2.22 ) }
    dend_5 { pt3dadd( -15.6156, -43.8962, -2.15401, 1.94 ) }
    dend_5 { pt3dadd( -15.6791, -45.0904, -1.7934, 1.39 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 25/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -14.8237, -29.0105, -6.64914, 1.11 ) }
    dend_4 { pt3dadd( -21.3847, -27.0196, 0.608005, 1.11 ) }
    dend_4 { pt3dadd( -23.009, -26.5545, 2.01275, 0.83 ) }
    dend_4 { pt3dadd( -25.4463, -25.9109, 3.59224, 0.83 ) }
    dend_4 { pt3dadd( -29.2411, -24.8958, 5.49907, 0.83 ) }
    dend_4 { pt3dadd( -31.2267, -24.3309, 6.31712, 0.83 ) }
    dend_4 { pt3dadd( -33.7768, -23.6052, 7.21059, 0.83 ) }
    dend_4 { pt3dadd( -39.5225, -22.3634, 7.91067, 0.83 ) }
    dend_4 { pt3dadd( -42.558, -21.6053, 8.53455, 0.83 ) }
    dend_4 { pt3dadd( -44.739, -21.0023, 9.32428, 0.83 ) }
    dend_4 { pt3dadd( -46.3838, -20.5574, 9.97069, 0.83 ) }
    dend_4 { pt3dadd( -48.2583, -20.1458, 11.1025, 0.83 ) }
    dend_4 { pt3dadd( -49.6728, -19.8914, 12.1576, 0.83 ) }
    dend_4 { pt3dadd( -55.0527, -18.8934, 16.9297, 0.83 ) }
    dend_4 { pt3dadd( -58.1054, -18.336, 19.7097, 0.83 ) }
    dend_4 { pt3dadd( -61.3717, -17.8605, 22.6372, 0.55 ) }
    dend_4 { pt3dadd( -64.6379, -17.4979, 25.6758, 0.55 ) }
    dend_4 { pt3dadd( -66.1348, -17.3054, 27.0212, 0.55 ) }
    dend_4 { pt3dadd( -67.778, -17.0493, 28.3133, 0.55 ) }
    dend_4 { pt3dadd( -68.8964, -16.8919, 28.9604, 0.55 ) }
    dend_4 { pt3dadd( -70.6394, -16.6523, 29.9582, 0.55 ) }
    dend_4 { pt3dadd( -74.1473, -16.1532, 32.5312, 0.55 ) }
    dend_4 { pt3dadd( -75.8658, -15.9763, 33.7568, 0.55 ) }
    dend_4 { pt3dadd( -76.9777, -15.96, 34.6174, 0.55 ) }
    dend_4 { pt3dadd( -78.0232, -15.9943, 35.3974, 0.55 ) }
    dend_4 { pt3dadd( -79.6938, -16.0278, 36.5194, 0.55 ) }
    dend_4 { pt3dadd( -83.1677, -15.8742, 38.7343, 0.55 ) }
    dend_4 { pt3dadd( -84.9283, -15.739, 39.7067, 0.55 ) }
    dend_4 { pt3dadd( -86.8882, -15.5038, 41.0616, 0.55 ) }
    dend_4 { pt3dadd( -88.8839, -15.132, 42.5892, 0.55 ) }
    dend_4 { pt3dadd( -90.6443, -14.6953, 43.9857, 0.55 ) }
    dend_4 { pt3dadd( -92.5587, -14.1103, 45.7377, 0.55 ) }
    dend_4 { pt3dadd( -94.5243, -13.5132, 47.6777, 0.55 ) }
    dend_4 { pt3dadd( -98.1458, -12.1656, 51.6503, 0.55 ) }
    dend_4 { pt3dadd( -99.161, -11.7469, 52.9383, 0.55 ) }
    dend_4 { pt3dadd( -100.2, -11.3428, 54.4806, 0.55 ) }
    dend_4 { pt3dadd( -102.246, -10.7133, 57.9139, 0.55 ) }
    dend_4 { pt3dadd( -103.253, -10.5744, 59.6541, 0.55 ) }
    dend_4 { pt3dadd( -111.478, -9.30979, 67.3674, 0.55 ) }
    dend_4 { pt3dadd( -119.015, -7.40898, 75.6205, 0.55 ) }
    dend_4 { pt3dadd( -126.25, -5.70222, 84.1839, 0.55 ) }
    dend_4 { pt3dadd( -132.846, -5.52635, 93.4389, 0.55 ) }
    dend_4 { pt3dadd( -139.087, -4.29629, 102.833, 0.55 ) }
    dend_4 { pt3dadd( -145.577, -4.30542, 112.17, 0.55 ) }
    dend_4 { pt3dadd( -150.89, -5.15699, 122.209, 0.55 ) }
    dend_4 { pt3dadd( -154.281, -5.69091, 133.051, 0.55 ) }
    dend_4 { pt3dadd( -159.575, -6.08217, 143.114, 0.55 ) }
    dend_4 { pt3dadd( -164.445, -6.45029, 153.387, 0.55 ) }
    dend_4 { pt3dadd( -169.473, -6.24598, 163.573, 0.55 ) }
    dend_4 { pt3dadd( -175.493, -4.54836, 173.029, 0.55 ) }
    dend_4 { pt3dadd( -183.104, -0.214727, 180.221, 0.55 ) }
    dend_4 { pt3dadd( -191.523, 2.66231, 187.236, 0.55 ) }
    dend_4 { pt3dadd( -198.427, 6.57271, 195.324, 0.55 ) }
    dend_4 { pt3dadd( -204.347, 9.88195, 204.398, 0.55 ) }
    dend_4 { pt3dadd( -209.234, 14.8981, 213.324, 0.55 ) }
    dend_4 { pt3dadd( -213.361, 18.7947, 223.133, 0.55 ) }
    dend_4 { pt3dadd( -215.951, 22.475, 233.534, 0.55 ) }
    dend_4 { pt3dadd( -218.908, 27.8064, 243.116, 0.55 ) }
    dend_4 { pt3dadd( -221.513, 34.4675, 251.992, 0.55 ) }
    dend_4 { pt3dadd( -224.532, 41.3716, 260.553, 0.55 ) }
    dend_4 { pt3dadd( -226.64, 47.7844, 269.731, 0.55 ) }
    dend_4 { pt3dadd( -230.342, 53.0596, 279.078, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_28 (entry count 87/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -6.92445, 26.0608, 10.0815, 2.49 ) }
    dend_36 { pt3dadd( -8.57142, 27.5777, 11.2746, 2.49 ) }
    dend_36 { pt3dadd( -9.93182, 28.9828, 12.4755, 1.11 ) }
    dend_36 { pt3dadd( -11.6347, 30.7936, 13.9543, 1.11 ) }
    dend_36 { pt3dadd( -13.6396, 32.9233, 15.821, 1.11 ) }
    dend_36 { pt3dadd( -15.2243, 34.6937, 17.5396, 1.11 ) }
    dend_36 { pt3dadd( -19.0446, 39.3294, 22.4737, 0.83 ) }
    dend_36 { pt3dadd( -19.8496, 40.4622, 23.7548, 0.83 ) }
    dend_36 { pt3dadd( -20.7028, 41.989, 25.6219, 0.83 ) }
    dend_36 { pt3dadd( -21.7353, 44.5187, 28.7373, 0.83 ) }
    dend_36 { pt3dadd( -22.6158, 47.5845, 32.2852, 0.83 ) }
    dend_36 { pt3dadd( -23.301, 50.5486, 35.8326, 0.83 ) }
    dend_36 { pt3dadd( -23.649, 52.0266, 37.5449, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_36 { pt3dadd( -24.3182, 55.0107, 40.9038, 0.83 ) }
    dend_36 { pt3dadd( -24.6051, 56.447, 42.5185, 0.83 ) }
    dend_36 { pt3dadd( -24.9302, 57.9848, 44.0224, 0.83 ) }
    dend_36 { pt3dadd( -25.5638, 60.7466, 46.3666, 0.83 ) }
    dend_36 { pt3dadd( -25.8945, 62.2297, 47.5095, 0.83 ) }
    dend_36 { pt3dadd( -26.3521, 64.6189, 49.2805, 0.83 ) }
    dend_36 { pt3dadd( -27.4374, 71.1871, 53.6195, 0.83 ) }
    dend_36 { pt3dadd( -27.5611, 73.4212, 55.0052, 0.83 ) }
    dend_36 { pt3dadd( -27.392, 75.3056, 55.9392, 0.83 ) }
    dend_36 { pt3dadd( -27.0103, 76.8659, 56.4547, 0.83 ) }
    dend_36 { pt3dadd( -26.4092, 78.3956, 56.7879, 0.83 ) }
    dend_36 { pt3dadd( -25.6756, 79.7648, 56.8691, 0.55 ) }
    dend_36 { pt3dadd( -24.6015, 81.5044, 56.4909, 0.55 ) }
    dend_36 { pt3dadd( -23.2864, 83.4625, 56.0189, 0.28 ) }
    dend_36 { pt3dadd( -22.2337, 85.0971, 55.5991, 0.28 ) }
    dend_36 { pt3dadd( -21.2901, 86.6399, 55.1797, 0.28 ) }
    dend_36 { pt3dadd( -20.5825, 87.7895, 54.8455, 0.28 ) }
    dend_36 { pt3dadd( -19.1793, 89.8117, 54.1851, 0.28 ) }
    dend_36 { pt3dadd( -18.3117, 90.9419, 53.8638, 0.28 ) }
    dend_36 { pt3dadd( -19.0239, 99.9747, 61.3746, 0.28 ) }
    dend_36 { pt3dadd( -18.6858, 108.349, 69.565, 0.28 ) }
    dend_36 { pt3dadd( -18.2963, 117.224, 77.2581, 0.28 ) }
    dend_36 { pt3dadd( -17.8361, 126.198, 84.8435, 0.28 ) }
    dend_36 { pt3dadd( -16.2429, 136.355, 90.7198, 0.28 ) }
    dend_36 { pt3dadd( -16.8932, 147.308, 95.3841, 0.28 ) }
    dend_36 { pt3dadd( -16.9636, 159.078, 97.7, 0.28 ) }
    dend_36 { pt3dadd( -17.813, 170.536, 101.059, 0.28 ) }
    dend_36 { pt3dadd( -20.0074, 181.401, 105.458, 0.28 ) }
    dend_36 { pt3dadd( -21.2406, 191.561, 111.448, 0.28 ) }
    dend_36 { pt3dadd( -23.5899, 200.744, 118.458, 0.28 ) }
    dend_36 { pt3dadd( -25.406, 211.36, 123.52, 0.28 ) }
    dend_36 { pt3dadd( -26.2735, 222.358, 128.056, 0.28 ) }
    dend_36 { pt3dadd( -24.8431, 232.374, 134.19, 0.28 ) }
    dend_36 { pt3dadd( -21.5619, 242.076, 140.049, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 34/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -6.92445, 26.0608, 10.0815, 1.94 ) }
    dend_29 { pt3dadd( -5.64975, 28.3881, 10.2989, 1.94 ) }
    dend_29 { pt3dadd( -4.70352, 30.1158, 10.4603, 1.94 ) }
    dend_29 { pt3dadd( -3.46615, 32.375, 10.6714, 1.94 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 38/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 10.3318, -77.2728, 10.7501, 1.94 ) }
    dend_18 { pt3dadd( 10.1217, -87.3618, 9.0462, 1.94 ) }
    dend_18 { pt3dadd( 10.1876, -96.3336, 8.13674, 1.39 ) }
    dend_18 { pt3dadd( 10.3627, -100.788, 7.84901, 1.11 ) }
    dend_18 { pt3dadd( 10.7582, -107.422, 7.53159, 1.11 ) }
    dend_18 { pt3dadd( 11.2249, -113.969, 7.19702, 1.11 ) }
    dend_18 { pt3dadd( 11.8175, -123.001, 6.82729, 1.11 ) }
    dend_18 { pt3dadd( 12.6958, -133.685, 7.05142, 0.83 ) }
    dend_18 { pt3dadd( 13.2869, -143.087, 7.89363, 0.83 ) }
    dend_18 { pt3dadd( 13.4188, -146.959, 8.63233, 0.83 ) }
    dend_18 { pt3dadd( 13.4173, -151.053, 9.86396, 0.83 ) }
    dend_18 { pt3dadd( 13.4507, -155.099, 11.412, 0.83 ) }
    dend_18 { pt3dadd( 13.357, -161.077, 14.071, 0.83 ) }
    dend_18 { pt3dadd( 12.837, -170.152, 18.0817, 0.83 ) }
    dend_18 { pt3dadd( 12.3979, -175.922, 20.6819, 0.83 ) }
    dend_18 { pt3dadd( 12.2005, -179.47, 22.1168, 0.83 ) }
    dend_18 { pt3dadd( 11.8215, -187.196, 25.164, 0.83 ) }
    dend_18 { pt3dadd( 11.5796, -194.229, 27.5363, 0.83 ) }
    dend_18 { pt3dadd( 11.4799, -197.596, 28.5661, 0.83 ) }
    dend_18 { pt3dadd( 11.467, -199.927, 29.2398, 0.83 ) }
    dend_18 { pt3dadd( 11.1656, -205.358, 30.7667, 0.83 ) }
    dend_18 { pt3dadd( 10.2577, -213.691, 33.2838, 0.83 ) }
    dend_18 { pt3dadd( 9.88154, -216.153, 34.1288, 0.83 ) }
    dend_18 { pt3dadd( 8.94386, -222.705, 36.7517, 0.83 ) }
    dend_18 { pt3dadd( 8.42151, -226.902, 38.5078, 0.83 ) }
    dend_18 { pt3dadd( 7.89376, -234.43, 41.8099, 0.83 ) }
    dend_18 { pt3dadd( 7.70043, -238.86, 43.7397, 0.83 ) }
    dend_18 { pt3dadd( 7.82484, -243.548, 45.8069, 1.39 ) }
    dend_18 { pt3dadd( 8.21316, -248.553, 48.4687, 0.83 ) }
    dend_18 { pt3dadd( 8.51584, -251.138, 49.9563, 0.55 ) }
    dend_18 { pt3dadd( 9.49893, -256.189, 53.5051, 0.55 ) }
    dend_18 { pt3dadd( 10.1731, -258.298, 55.3504, 0.55 ) }
    dend_18 { pt3dadd( 12.322, -263.769, 60.5872, 0.55 ) }
    dend_18 { pt3dadd( 13.7503, -267.512, 64.1554, 0.55 ) }
    dend_18 { pt3dadd( 12.3391, -278.444, 67.379, 0.55 ) }
    dend_18 { pt3dadd( 12.7104, -289.686, 69.7286, 0.55 ) }
    dend_18 { pt3dadd( 12.111, -301.107, 71.0205, 0.55 ) }
    dend_18 { pt3dadd( 10.8331, -312.265, 73.4887, 0.55 ) }
    dend_18 { pt3dadd( 10.9735, -323.37, 76.4137, 0.55 ) }
    dend_18 { pt3dadd( 12.5155, -334.53, 78.5871, 0.55 ) }
    dend_18 { pt3dadd( 13.4651, -345.349, 82.2349, 0.55 ) }
    dend_18 { pt3dadd( 16.698, -355.506, 86.2359, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 80/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 10.3318, -77.2728, 10.7501, 0.55 ) }
    dend_17 { pt3dadd( 6.32667, -81.5052, 8.57703, 0.55 ) }
    dend_17 { pt3dadd( 3.1118, -84.8813, 7.03946, 0.55 ) }
    dend_17 { pt3dadd( 1.84664, -86.2059, 6.52304, 0.55 ) }
    dend_17 { pt3dadd( 0.577598, -87.6387, 6.0422, 0.55 ) }
    dend_17 { pt3dadd( -0.971561, -89.5808, 5.46837, 0.55 ) }
    dend_17 { pt3dadd( -3.03715, -92.1911, 4.56608, 0.55 ) }
    dend_17 { pt3dadd( -4.38711, -94.0672, 4.01011, 0.55 ) }
    dend_17 { pt3dadd( -5.36395, -95.4432, 3.54738, 0.55 ) }
    dend_17 { pt3dadd( -6.94874, -97.7152, 2.75392, 0.55 ) }
    dend_17 { pt3dadd( -9.78781, -101.735, 1.38797, 0.28 ) }
    dend_17 { pt3dadd( -12.5088, -105.669, 0.143059, 1.66 ) }
    dend_17 { pt3dadd( -14.1291, -107.999, -0.370799, 0.28 ) }
    dend_17 { pt3dadd( -15.5834, -110.058, -0.677439, 1.94 ) }
    dend_17 { pt3dadd( -18.2406, -113.762, -0.941021, 0.28 ) }
    dend_17 { pt3dadd( -19.4329, -115.416, -0.911683, 1.39 ) }
    dend_17 { pt3dadd( -20.112, -116.401, -0.804401, 1.39 ) }
    dend_17 { pt3dadd( -23.5023, -121.652, 0.133769, 0.28 ) }
    dend_17 { pt3dadd( -25.895, -125.478, 0.894887, 0.28 ) }
    dend_17 { pt3dadd( -27.1965, -127.536, 1.05639, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_17 { pt3dadd( -28.8758, -130.263, 0.912559, 0.28 ) }
    dend_17 { pt3dadd( -29.6338, -131.614, 0.667007, 0.83 ) }
    dend_17 { pt3dadd( -30.0683, -132.44, 0.434697, 0.28 ) }
    dend_17 { pt3dadd( -30.6445, -133.645, -0.00947094, 1.11 ) }
    dend_17 { pt3dadd( -34.5174, -142.328, -3.25576, 0.28 ) }
    dend_17 { pt3dadd( -35.1457, -143.802, -3.78204, 0.55 ) }
    dend_17 { pt3dadd( -37.2969, -149.112, -5.50917, 0.28 ) }
    dend_17 { pt3dadd( -37.6657, -150.175, -5.78502, 0.55 ) }
    dend_17 { pt3dadd( -38.5199, -153.043, -6.38123, 0.28 ) }
    dend_17 { pt3dadd( -39.1066, -155.836, -6.6936, 0.83 ) }
    dend_17 { pt3dadd( -39.1759, -156.579, -6.6415, 0.83 ) }
    dend_17 { pt3dadd( -39.3156, -159.917, -6.31724, 0.28 ) }
    dend_17 { pt3dadd( -39.2251, -163.375, -5.75375, 0.28 ) }
    dend_17 { pt3dadd( -39.0415, -166.117, -5.25779, 0.55 ) }
    dend_17 { pt3dadd( -38.5682, -171.372, -4.42343, 0.28 ) }
    dend_17 { pt3dadd( -38.2745, -175.134, -4.03049, 0.55 ) }
    dend_17 { pt3dadd( -37.9631, -178.791, -3.69134, 0.28 ) }
    dend_17 { pt3dadd( -37.6656, -181.97, -3.39379, 0.83 ) }
    dend_17 { pt3dadd( -37.5417, -183.704, -3.30597, 0.28 ) }
    dend_17 { pt3dadd( -37.4297, -186.235, -3.29945, 0.83 ) }
    dend_17 { pt3dadd( -37.273, -192.438, -3.55522, 0.28 ) }
    dend_17 { pt3dadd( -37.2649, -194.271, -3.69003, 0.55 ) }
    dend_17 { pt3dadd( -37.2518, -195.107, -3.75503, 0.28 ) }
    dend_17 { pt3dadd( -37.1067, -197.856, -4.00319, 0.83 ) }
    dend_17 { pt3dadd( -36.4823, -203.236, -4.21346, 0.28 ) }
    dend_17 { pt3dadd( -35.8074, -206.51, -4.11797, 1.11 ) }
    dend_17 { pt3dadd( -34.9751, -209.221, -3.87677, 0.28 ) }
    dend_17 { pt3dadd( -34.3481, -210.948, -3.67653, 0.28 ) }
    dend_17 { pt3dadd( -33.3908, -213.25, -3.33005, 0.28 ) }
    dend_17 { pt3dadd( -32.513, -215.058, -2.94106, 0.28 ) }
    dend_17 { pt3dadd( -32.2002, -215.828, -2.81081, 0.55 ) }
    dend_17 { pt3dadd( -32.141, -217.332, -2.7468, 0.28 ) }
    dend_17 { pt3dadd( -32.3442, -218.493, -2.70737, 0.55 ) }
    dend_17 { pt3dadd( -32.5954, -219.15, -2.69038, 0.28 ) }
    dend_17 { pt3dadd( -33.2147, -220.284, -2.69365, 0.55 ) }
    dend_17 { pt3dadd( -35.8857, -224.426, -2.9675, 0.28 ) }
    dend_17 { pt3dadd( -36.3777, -225.081, -3.0246, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 37/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -15.6791, -45.0904, -1.7934, 1.39 ) }
    dend_7 { pt3dadd( -17.5574, -51.6891, -1.16313, 1.39 ) }
    dend_7 { pt3dadd( -18.4104, -54.5456, -0.840235, 1.39 ) }
    dend_7 { pt3dadd( -19.0897, -57.9811, -0.145223, 1.39 ) }
    dend_7 { pt3dadd( -19.9734, -63.9465, 1.24885, 1.39 ) }
    dend_7 { pt3dadd( -20.5105, -68.24, 2.27966, 1.39 ) }
    dend_7 { pt3dadd( -20.8596, -71.5297, 3.03261, 1.39 ) }
    dend_7 { pt3dadd( -21.3332, -75.9231, 4.1093, 1.11 ) }
    dend_7 { pt3dadd( -21.9446, -84.7568, 6.33052, 1.11 ) }
    dend_7 { pt3dadd( -22.0573, -89.5307, 7.44747, 1.11 ) }
    dend_7 { pt3dadd( -21.9399, -95.5541, 8.80363, 1.11 ) }
    dend_7 { pt3dadd( -21.8325, -99.3996, 9.64293, 1.39 ) }
    dend_7 { pt3dadd( -21.7905, -104.413, 10.6569, 1.39 ) }
    dend_7 { pt3dadd( -21.9238, -114.53, 12.5391, 0.83 ) }
    dend_7 { pt3dadd( -22.1092, -117.68, 13.0673, 0.83 ) }
    dend_7 { pt3dadd( -22.3558, -120.919, 13.6773, 1.11 ) }
    dend_7 { pt3dadd( -22.7398, -124.704, 14.471, 0.83 ) }
    dend_7 { pt3dadd( -23.4599, -130.099, 15.6686, 1.11 ) }
    dend_7 { pt3dadd( -23.9906, -133.403, 16.3583, 0.83 ) }
    dend_7 { pt3dadd( -24.5032, -135.992, 16.9583, 0.83 ) }
    dend_7 { pt3dadd( -25.0124, -138.596, 17.5225, 0.83 ) }
    dend_7 { pt3dadd( -25.4198, -141.364, 17.9993, 0.83 ) }
    dend_7 { pt3dadd( -25.6572, -144.005, 18.3418, 0.83 ) }
    dend_7 { pt3dadd( -25.7103, -145.622, 18.5251, 0.83 ) }
    dend_7 { pt3dadd( -25.7278, -147.916, 18.6893, 0.83 ) }
    dend_7 { pt3dadd( -25.6769, -151.511, 18.883, 0.83 ) }
    dend_7 { pt3dadd( -25.5279, -156.326, 19.1448, 0.83 ) }
    dend_7 { pt3dadd( -25.3672, -159.694, 19.3057, 1.11 ) }
    dend_7 { pt3dadd( -25.2173, -162.592, 19.4914, 0.83 ) }
    dend_7 { pt3dadd( -25.1076, -166.227, 19.6344, 0.83 ) }
    dend_7 { pt3dadd( -25.09, -167.197, 19.6467, 0.83 ) }
    dend_7 { pt3dadd( -25.1665, -169.634, 19.6459, 0.83 ) }
    dend_7 { pt3dadd( -25.3374, -172.053, 19.567, 0.83 ) }
    dend_7 { pt3dadd( -25.7664, -177.601, 19.2861, 0.83 ) }
    dend_7 { pt3dadd( -26.1716, -182.055, 19.0414, 0.83 ) }
    dend_7 { pt3dadd( -26.3554, -184.003, 18.9114, 0.83 ) }
    dend_7 { pt3dadd( -26.754, -187.246, 18.6012, 0.83 ) }
    dend_7 { pt3dadd( -27.2643, -190.817, 18.2084, 0.83 ) }
    dend_7 { pt3dadd( -27.7862, -193.99, 17.8667, 0.83 ) }
    dend_7 { pt3dadd( -28.1449, -196.124, 17.5763, 0.83 ) }
    dend_7 { pt3dadd( -28.4741, -198.693, 17.3236, 0.83 ) }
    dend_7 { pt3dadd( -28.8179, -201.749, 16.9075, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 79/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -15.6791, -45.0904, -1.7934, 0.83 ) }
    dend_6 { pt3dadd( -16.0181, -47.0918, 7.09909, 0.83 ) }
    dend_6 { pt3dadd( -16.1226, -47.3304, 7.99991, 0.83 ) }
    dend_6 { pt3dadd( -16.4747, -47.8378, 9.78694, 0.83 ) }
    dend_6 { pt3dadd( -17.8272, -49.207, 14.9065, 0.83 ) }
    dend_6 { pt3dadd( -18.54, -49.769, 16.9714, 0.83 ) }
    dend_6 { pt3dadd( -19.3644, -50.3194, 18.8544, 0.83 ) }
    dend_6 { pt3dadd( -20.2563, -50.7932, 19.9729, 0.83 ) }
    dend_6 { pt3dadd( -21.4148, -51.3534, 21.2027, 0.83 ) }
    dend_6 { pt3dadd( -22.6202, -51.8461, 22.2579, 0.83 ) }
    dend_6 { pt3dadd( -24.3911, -52.6188, 23.6687, 0.83 ) }
    dend_6 { pt3dadd( -26.255, -53.554, 25.31, 0.83 ) }
    dend_6 { pt3dadd( -27.7732, -54.4233, 26.7419, 0.83 ) }
    dend_6 { pt3dadd( -29.4317, -55.5134, 28.3585, 0.83 ) }
    dend_6 { pt3dadd( -30.7462, -56.4777, 29.6596, 0.83 ) }
    dend_6 { pt3dadd( -33.0906, -58.2543, 31.9874, 0.83 ) }
    dend_6 { pt3dadd( -34.5153, -59.3041, 33.3992, 0.83 ) }
    dend_6 { pt3dadd( -36.2071, -60.5408, 35.0504, 0.83 ) }
    dend_6 { pt3dadd( -38.7109, -62.288, 37.2186, 0.83 ) }
    dend_6 { pt3dadd( -40.2336, -63.2906, 38.3564, 0.83 ) }
    dend_6 { pt3dadd( -41.3421, -64.0593, 39.0629, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_6 { pt3dadd( -42.5637, -64.8923, 39.7092, 0.83 ) }
    dend_6 { pt3dadd( -43.8976, -65.7922, 40.2204, 0.83 ) }
    dend_6 { pt3dadd( -46.5559, -67.5949, 40.946, 0.83 ) }
    dend_6 { pt3dadd( -49.0763, -69.2924, 41.4228, 0.83 ) }
    dend_6 { pt3dadd( -51.6321, -71.0454, 41.9087, 0.83 ) }
    dend_6 { pt3dadd( -52.706, -71.7992, 42.167, 0.83 ) }
    dend_6 { pt3dadd( -56.9392, -74.7819, 43.4258, 0.83 ) }
    dend_6 { pt3dadd( -58.7816, -76.0851, 44.0776, 0.83 ) }
    dend_6 { pt3dadd( -61.3189, -77.8639, 44.957, 0.83 ) }
    dend_6 { pt3dadd( -64.7456, -80.296, 46.1078, 0.83 ) }
    dend_6 { pt3dadd( -69.1125, -83.2596, 47.6512, 0.55 ) }
    dend_6 { pt3dadd( -71.6338, -85.0449, 48.622, 0.55 ) }
    dend_6 { pt3dadd( -73.0908, -86.1212, 49.2597, 0.55 ) }
    dend_6 { pt3dadd( -77.5969, -89.2814, 51.1966, 0.55 ) }
    dend_6 { pt3dadd( -80.7266, -91.2903, 52.1331, 0.55 ) }
    dend_6 { pt3dadd( -83.3286, -92.7785, 52.6399, 1.11 ) }
    dend_6 { pt3dadd( -85.8015, -94.0709, 53.0019, 1.11 ) }
    dend_6 { pt3dadd( -86.8655, -94.6394, 53.1811, 1.11 ) }
    dend_6 { pt3dadd( -90.0084, -96.2894, 53.6489, 0.28 ) }
    dend_6 { pt3dadd( -97.7164, -100.264, 54.8628, 0.83 ) }
    dend_6 { pt3dadd( -101.976, -102.42, 55.4106, 0.28 ) }
    dend_6 { pt3dadd( -104.532, -103.798, 55.8842, 0.83 ) }
    dend_6 { pt3dadd( -107.91, -105.607, 56.8496, 0.55 ) }
    dend_6 { pt3dadd( -111.353, -107.611, 58.4748, 0.55 ) }
    dend_6 { pt3dadd( -112.9, -108.652, 59.6016, 0.83 ) }
    dend_6 { pt3dadd( -113.887, -109.429, 61.1526, 0.55 ) }
    dend_6 { pt3dadd( -116.467, -111.668, 67.5744, 0.55 ) }
    dend_6 { pt3dadd( -116.892, -112.027, 69.2676, 0.55 ) }
    dend_6 { pt3dadd( -117.255, -112.256, 71.4719, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 29/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -21.5619, 242.076, 140.049, 0.28 ) }
    dend_40 { pt3dadd( -22.4928, 250.962, 146.162, 0.28 ) }
    dend_40 { pt3dadd( -22.0495, 259.753, 152.417, 0.28 ) }
    dend_40 { pt3dadd( -21.3724, 269.597, 156.988, 0.28 ) }
    dend_40 { pt3dadd( -20.3812, 279.313, 161.735, 0.28 ) }
    dend_40 { pt3dadd( -19.1236, 288.585, 167.172, 0.28 ) }
    dend_40 { pt3dadd( -18.6097, 297.155, 173.692, 0.28 ) }
    dend_40 { pt3dadd( -18.0952, 304.704, 181.277, 0.28 ) }
    dend_40 { pt3dadd( -17.5726, 313.547, 187.455, 0.28 ) }
    dend_40 { pt3dadd( -17.1101, 322.954, 192.83, 0.28 ) }
    dend_40 { pt3dadd( -18.5131, 332.198, 198.356, 0.28 ) }
    dend_40 { pt3dadd( -19.2822, 342.639, 201.569, 0.28 ) }
    dend_40 { pt3dadd( -20.0486, 353.025, 204.94, 0.28 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 42/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -21.5619, 242.076, 140.049, 0.28 ) }
    dend_37 { pt3dadd( -20.9866, 249.33, 142.39, 0.28 ) }
    dend_37 { pt3dadd( -20.0677, 256.336, 145.239, 0.28 ) }
    dend_37 { pt3dadd( -18.2089, 263.188, 147.936, 0.28 ) }
    dend_37 { pt3dadd( -16.1531, 270.36, 149.477, 0.28 ) }
    dend_37 { pt3dadd( -13.6167, 277.043, 151.981, 0.28 ) }
    dend_37 { pt3dadd( -10.5246, 283.73, 153.712, 0.28 ) }
    dend_37 { pt3dadd( -7.4278, 290.439, 155.351, 0.28 ) }
    dend_37 { pt3dadd( -3.36165, 296.303, 157.661, 0.28 ) }
    dend_37 { pt3dadd( 1.20945, 302.188, 158.498, 0.28 ) }
    dend_37 { pt3dadd( 5.58134, 308.286, 158.051, 0.28 ) }
    dend_37 { pt3dadd( 9.51171, 314.704, 157.556, 0.28 ) }
    dend_37 { pt3dadd( 13.6741, 320.935, 156.843, 0.28 ) }
    dend_37 { pt3dadd( 18.1919, 326.93, 156.892, 0.28 ) }
    dend_37 { pt3dadd( 22.9139, 332.749, 156.814, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 57/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -3.46615, 32.375, 10.6714, 1.66 ) }
    dend_33 { pt3dadd( 3.17469, 29.8373, 15.4306, 1.66 ) }
    dend_33 { pt3dadd( 6.84975, 28.4329, 18.0644, 1.66 ) }
    dend_33 { pt3dadd( 9.16702, 27.5474, 19.7251, 1.66 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 61/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.46615, 32.375, 10.6714, 0.83 ) }
    dend_30 { pt3dadd( -1.05416, 33.6713, 10.3883, 0.83 ) }
    dend_30 { pt3dadd( 0.865327, 34.775, 10.3563, 0.83 ) }
    dend_30 { pt3dadd( 2.71246, 36.0175, 10.2109, 0.83 ) }
    dend_30 { pt3dadd( 5.55587, 38.3356, 9.93685, 0.83 ) }
    dend_30 { pt3dadd( 7.31428, 39.9777, 9.76318, 0.83 ) }
    dend_30 { pt3dadd( 9.56865, 42.1151, 9.46989, 0.83 ) }
    dend_30 { pt3dadd( 11.5535, 43.9105, 8.78782, 0.83 ) }
    dend_30 { pt3dadd( 15.192, 47.1175, 7.13333, 0.83 ) }
    dend_30 { pt3dadd( 17.5583, 49.252, 5.84308, 0.83 ) }
    dend_30 { pt3dadd( 18.9225, 50.5441, 5.09028, 0.83 ) }
    dend_30 { pt3dadd( 21.3528, 52.9387, 3.43022, 0.83 ) }
    dend_30 { pt3dadd( 26.7362, 58.5028, -0.95273, 0.83 ) }
    dend_30 { pt3dadd( 28.0276, 59.8528, -2.06665, 0.83 ) }
    dend_30 { pt3dadd( 29.5464, 61.3964, -3.55293, 0.83 ) }
    dend_30 { pt3dadd( 31.2876, 63.2494, -5.26852, 0.55 ) }
    dend_30 { pt3dadd( 34.8804, 67.5589, -8.86461, 0.55 ) }
    dend_30 { pt3dadd( 36.039, 69.3512, -10.0433, 0.55 ) }
    dend_30 { pt3dadd( 36.7985, 70.7615, -10.7062, 0.55 ) }
    dend_30 { pt3dadd( 41.0275, 78.5397, -14.2407, 0.55 ) }
    dend_30 { pt3dadd( 44.2259, 84.1468, -16.4357, 0.55 ) }
    dend_30 { pt3dadd( 45.3203, 86.1057, -17.0315, 0.83 ) }
    dend_30 { pt3dadd( 46.2796, 87.704, -17.5377, 0.83 ) }
    dend_30 { pt3dadd( 47.5373, 89.6381, -18.3846, 0.83 ) }
    dend_30 { pt3dadd( 48.3311, 90.8086, -18.9413, 0.83 ) }
    dend_30 { pt3dadd( 49.4735, 92.4182, -19.9033, 0.55 ) }
    dend_30 { pt3dadd( 50.7174, 94.0462, -21.1155, 0.55 ) }
    dend_30 { pt3dadd( 55.3463, 100.287, -25.5967, 0.55 ) }
    dend_30 { pt3dadd( 56.1223, 101.363, -26.3423, 0.55 ) }
    dend_30 { pt3dadd( 58.2232, 104.566, -28.3558, 1.11 ) }
    dend_30 { pt3dadd( 61.0917, 109.197, -30.916, 0.55 ) }
    dend_30 { pt3dadd( 61.7328, 110.286, -31.4041, 0.55 ) }
    dend_30 { pt3dadd( 63.6377, 113.68, -32.4178, 0.83 ) }
    dend_30 { pt3dadd( 64.7215, 115.906, -32.6607, 0.28 ) }
    dend_30 { pt3dadd( 66.0902, 118.879, -32.8437, 0.55 ) }
    dend_30 { pt3dadd( 66.7366, 120.279, -32.9828, 0.28 ) }
    dend_30 { pt3dadd( 67.6939, 122.353, -33.0271, 0.28 ) }
    dend_30 { pt3dadd( 68.8549, 124.769, -33.1784, 0.28 ) }
    dend_30 { pt3dadd( 69.2003, 125.403, -33.2716, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( 69.9714, 126.687, -33.6082, 0.55 ) }
    dend_30 { pt3dadd( 74.0502, 132.505, -36.2569, 0.28 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 2/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -28.8179, -201.749, 16.9075, 0.83 ) }
    dend_11 { pt3dadd( -29.4999, -204.38, 16.796, 0.83 ) }
    dend_11 { pt3dadd( -29.7756, -205.519, 16.7208, 0.83 ) }
    dend_11 { pt3dadd( -30.4545, -208.446, 16.5199, 0.83 ) }
    dend_11 { pt3dadd( -31.4033, -212.178, 16.1929, 0.83 ) }
    dend_11 { pt3dadd( -32.0876, -214.748, 15.9971, 0.83 ) }
    dend_11 { pt3dadd( -32.418, -216.114, 15.9201, 0.83 ) }
    dend_11 { pt3dadd( -32.8, -217.786, 15.8612, 0.83 ) }
    dend_11 { pt3dadd( -32.9914, -218.876, 15.8735, 0.83 ) }
    dend_11 { pt3dadd( -33.337, -221.821, 16.02, 0.83 ) }
    dend_11 { pt3dadd( -33.4616, -224.306, 16.2092, 0.83 ) }
    dend_11 { pt3dadd( -33.5381, -226.742, 16.4013, 0.55 ) }
    dend_11 { pt3dadd( -33.5958, -229.148, 16.6398, 0.55 ) }
    dend_11 { pt3dadd( -33.8306, -232.519, 16.9292, 0.83 ) }
    dend_11 { pt3dadd( -33.9362, -233.784, 16.9933, 0.83 ) }
    dend_11 { pt3dadd( -34.0862, -235.275, 17.0504, 0.83 ) }
    dend_11 { pt3dadd( -34.3117, -236.313, 17.0724, 0.83 ) }
    dend_11 { pt3dadd( -34.7792, -237.738, 17.1073, 0.83 ) }
    dend_11 { pt3dadd( -36.1749, -241.369, 17.2349, 0.83 ) }
    dend_11 { pt3dadd( -36.9254, -243.319, 17.3719, 1.39 ) }
    dend_11 { pt3dadd( -37.3597, -244.488, 17.4966, 1.39 ) }
    dend_11 { pt3dadd( -38.9103, -248.91, 18.1593, 0.83 ) }
    dend_11 { pt3dadd( -39.3389, -250.263, 18.401, 0.83 ) }
    dend_11 { pt3dadd( -39.9444, -252.397, 18.888, 1.39 ) }
    dend_11 { pt3dadd( -40.5014, -254.61, 19.5815, 0.83 ) }
    dend_11 { pt3dadd( -40.7341, -255.463, 19.8889, 0.28 ) }
    dend_11 { pt3dadd( -41.3316, -257.437, 20.6415, 0.83 ) }
    dend_11 { pt3dadd( -41.9147, -259.237, 21.386, 0.83 ) }
    dend_11 { pt3dadd( -42.7029, -261.188, 22.2085, 1.11 ) }
    dend_11 { pt3dadd( -43.6639, -263.371, 23.1806, 0.28 ) }
    dend_11 { pt3dadd( -44.5876, -265.308, 24.0637, 0.28 ) }
    dend_11 { pt3dadd( -46.2827, -268.672, 25.6032, 0.28 ) }
    dend_11 { pt3dadd( -47.3525, -270.638, 26.4968, 0.28 ) }
    dend_11 { pt3dadd( -48.9498, -273.39, 27.6645, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -28.8179, -201.749, 16.9075, 0.28 ) }
    dend_8 { pt3dadd( -27.2207, -202.408, 15.1529, 0.28 ) }
    dend_8 { pt3dadd( -26.0667, -202.849, 14.1951, 0.28 ) }
    dend_8 { pt3dadd( -24.6825, -203.355, 13.1861, 0.28 ) }
    dend_8 { pt3dadd( -21.4072, -204.357, 11.5994, 0.28 ) }
    dend_8 { pt3dadd( -20.2994, -204.623, 11.2592, 0.28 ) }
    dend_8 { pt3dadd( -16.6616, -205.379, 10.3014, 0.28 ) }
    dend_8 { pt3dadd( -14.6356, -205.737, 9.88804, 0.28 ) }
    dend_8 { pt3dadd( -13.5399, -205.915, 9.70408, 0.28 ) }
    dend_8 { pt3dadd( -9.26777, -206.585, 9.11233, 0.28 ) }
    dend_8 { pt3dadd( -5.46814, -207.234, 8.65307, 0.28 ) }
    dend_8 { pt3dadd( -2.43658, -207.782, 8.14042, 0.28 ) }
    dend_8 { pt3dadd( -0.726468, -208.103, 7.75582, 0.28 ) }
    dend_8 { pt3dadd( 0.628367, -208.362, 7.44186, 0.28 ) }
    dend_8 { pt3dadd( 1.6671, -208.589, 7.14285, 0.28 ) }
    dend_8 { pt3dadd( 3.3008, -209.098, 6.30741, 0.28 ) }
    dend_8 { pt3dadd( 4.19852, -209.544, 5.66937, 0.28 ) }
    dend_8 { pt3dadd( 11.9168, -211.171, 4.53517, 0.28 ) }
    dend_8 { pt3dadd( 19.4449, -212.101, 2.10186, 0.28 ) }
    dend_8 { pt3dadd( 26.3349, -214.657, -1.00912, 0.28 ) }
    dend_8 { pt3dadd( 32.7198, -218.104, -4.38371, 0.28 ) }
    dend_8 { pt3dadd( 39.145, -222.716, -5.87525, 0.28 ) }
    dend_8 { pt3dadd( 46.1621, -226.328, -7.24051, 0.28 ) }
    dend_8 { pt3dadd( 53.2192, -229.761, -8.81148, 0.28 ) }
    dend_8 { pt3dadd( 60.2828, -233.327, -10.0416, 0.28 ) }
    dend_8 { pt3dadd( 67.5008, -236.755, -10.5237, 0.28 ) }
    dend_8 { pt3dadd( 75.0858, -239.132, -9.81043, 0.28 ) }
    dend_8 { pt3dadd( 82.8011, -240.166, -8.11583, 0.28 ) }
    dend_8 { pt3dadd( 90.1548, -240.564, -5.07844, 0.28 ) }
    dend_8 { pt3dadd( 97.3766, -242.666, -2.41522, 0.28 ) }
    dend_8 { pt3dadd( 103.643, -245.163, 1.86927, 0.28 ) }
    dend_8 { pt3dadd( 110.906, -246.634, 4.80469, 0.28 ) }
    dend_8 { pt3dadd( 118.166, -247.229, 8.02955, 0.28 ) }
    dend_8 { pt3dadd( 125.201, -249.369, 11.1328, 0.28 ) }
    dend_8 { pt3dadd( 132.758, -250.014, 13.5677, 0.28 ) }
    dend_8 { pt3dadd( 140.572, -250.259, 15.1031, 0.28 ) }
    dend_8 { pt3dadd( 148.337, -251.694, 16.1756, 0.28 ) }
    dend_8 { pt3dadd( 156.025, -253.798, 15.9205, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 74/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -20.0486, 353.025, 204.94, 0.28 ) }
    dend_42 { pt3dadd( -19.7971, 358.053, 212.125, 0.28 ) }
    dend_42 { pt3dadd( -19.2307, 361.765, 219.988, 0.28 ) }
    dend_42 { pt3dadd( -19.1102, 363.541, 228.469, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 78/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -20.0486, 353.025, 204.94, 0.28 ) }
    dend_41 { pt3dadd( -21.1007, 355.068, 199.164, 0.28 ) }
    dend_41 { pt3dadd( -22.4653, 358.192, 193.914, 0.28 ) }
    dend_41 { pt3dadd( -23.1819, 361.485, 188.644, 0.28 ) }
    dend_41 { pt3dadd( -24.7941, 365.493, 184.044, 0.28 ) }
    dend_41 { pt3dadd( -26.5168, 369.586, 179.55, 0.28 ) }
    dend_41 { pt3dadd( -28.7766, 373.366, 175.028, 0.28 ) }
    dend_41 { pt3dadd( -31.7738, 376.05, 170.22, 0.28 ) }
    dend_41 { pt3dadd( -33.7574, 377.568, 164.532, 0.28 ) }
    dend_41 { pt3dadd( -36.49, 378.896, 159.111, 0.28 ) }
    dend_41 { pt3dadd( -37.9326, 379.602, 153.131, 0.28 ) }
    dend_41 { pt3dadd( -40.2222, 379.733, 147.382, 0.28 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 90/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 22.9139, 332.749, 156.814, 0.28 ) }
    dend_39 { pt3dadd( 30.3158, 330.155, 162.509, 0.28 ) }
    dend_39 { pt3dadd( 38.6284, 328.971, 167.28, 0.28 ) }
    dend_39 { pt3dadd( 46.8782, 329.982, 172.114, 0.28 ) }
    dend_39 { pt3dadd( 55.5087, 332.415, 175.574, 0.28 ) }
    dend_39 { pt3dadd( 63.4676, 334.449, 180.563, 0.28 ) }
    dend_39 { pt3dadd( 70.5705, 337.536, 186.27, 0.28 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 97/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 22.9139, 332.749, 156.814, 0.28 ) }
    dend_38 { pt3dadd( 12.3915, 332.923, 151.155, 0.28 ) }
    dend_38 { pt3dadd( 2.5467, 331.896, 144.503, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 0/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 9.16702, 27.5474, 19.7251, 1.11 ) }
    dend_35 { pt3dadd( 12.8747, 28.4675, 17.3928, 1.11 ) }
    dend_35 { pt3dadd( 14.6132, 28.9357, 16.4726, 1.11 ) }
    dend_35 { pt3dadd( 18.2585, 30.1149, 14.753, 1.11 ) }
    dend_35 { pt3dadd( 20.6675, 31.0528, 13.7761, 1.11 ) }
    dend_35 { pt3dadd( 22.5718, 31.8865, 13.0726, 1.11 ) }
    dend_35 { pt3dadd( 26.1722, 33.479, 11.802, 1.11 ) }
    dend_35 { pt3dadd( 30.1155, 35.4286, 10.6349, 1.11 ) }
    dend_35 { pt3dadd( 31.6821, 36.3201, 10.0537, 1.11 ) }
    dend_35 { pt3dadd( 33.4444, 37.5342, 9.09245, 0.83 ) }
    dend_35 { pt3dadd( 34.5734, 38.3568, 8.45189, 0.83 ) }
    dend_35 { pt3dadd( 35.377, 38.8877, 7.98767, 0.83 ) }
    dend_35 { pt3dadd( 37.7554, 40.3297, 6.63031, 0.83 ) }
    dend_35 { pt3dadd( 38.5691, 40.8267, 6.02315, 0.83 ) }
    dend_35 { pt3dadd( 40.3545, 41.8515, 4.74349, 0.83 ) }
    dend_35 { pt3dadd( 41.6499, 42.5855, 3.86643, 0.83 ) }
    dend_35 { pt3dadd( 42.5994, 43.1321, 3.31985, 0.83 ) }
    dend_35 { pt3dadd( 43.6353, 43.7226, 2.83386, 0.83 ) }
    dend_35 { pt3dadd( 44.9497, 44.417, 2.38433, 0.83 ) }
    dend_35 { pt3dadd( 46.1072, 45.0622, 1.95033, 0.83 ) }
    dend_35 { pt3dadd( 46.9219, 45.5699, 1.61694, 0.83 ) }
    dend_35 { pt3dadd( 47.8238, 46.2001, 1.14754, 0.83 ) }
    dend_35 { pt3dadd( 48.544, 46.7247, 0.721565, 0.83 ) }
    dend_35 { pt3dadd( 49.4209, 47.3614, 0.141607, 0.83 ) }
    dend_35 { pt3dadd( 50.5464, 48.2374, -0.67371, 0.83 ) }
    dend_35 { pt3dadd( 51.3394, 48.9076, -1.24392, 0.83 ) }
    dend_35 { pt3dadd( 52.2187, 49.7309, -1.86075, 0.83 ) }
    dend_35 { pt3dadd( 52.9967, 50.5455, -2.38096, 0.83 ) }
    dend_35 { pt3dadd( 53.6265, 51.2649, -2.76852, 0.83 ) }
    dend_35 { pt3dadd( 54.4871, 52.2355, -3.22703, 0.83 ) }
    dend_35 { pt3dadd( 55.0898, 52.8724, -3.48433, 0.55 ) }
    dend_35 { pt3dadd( 55.4065, 53.2171, -3.61883, 0.55 ) }
    dend_35 { pt3dadd( 55.8397, 53.7213, -3.89571, 0.55 ) }
    dend_35 { pt3dadd( 56.1055, 54.0373, -4.13492, 0.55 ) }
    dend_35 { pt3dadd( 56.6353, 54.6905, -4.73881, 0.55 ) }
    dend_35 { pt3dadd( 56.9224, 55.0731, -5.3225, 0.55 ) }
    dend_35 { pt3dadd( 57.1464, 55.361, -5.91635, 0.55 ) }
    dend_35 { pt3dadd( 57.9537, 56.2317, -8.19663, 0.55 ) }
    dend_35 { pt3dadd( 58.2484, 56.4858, -9.01952, 0.55 ) }
    dend_35 { pt3dadd( 58.5432, 56.6973, -9.78091, 0.55 ) }
    dend_35 { pt3dadd( 59.8476, 57.4764, -12.7994, 0.55 ) }
    dend_35 { pt3dadd( 60.1676, 57.6228, -13.4241, 0.55 ) }
    dend_35 { pt3dadd( 60.7037, 57.7718, -14.2305, 0.55 ) }
    dend_35 { pt3dadd( 61.3742, 57.847, -14.8429, 0.55 ) }
    dend_35 { pt3dadd( 62.3644, 57.8321, -15.4939, 0.55 ) }
    dend_35 { pt3dadd( 63.3498, 57.7645, -15.9227, 0.55 ) }
    dend_35 { pt3dadd( 63.9396, 57.7313, -16.075, 0.83 ) }
    dend_35 { pt3dadd( 64.8951, 57.6972, -16.3273, 0.83 ) }
    dend_35 { pt3dadd( 66.9741, 57.6576, -16.8056, 0.83 ) }
    dend_35 { pt3dadd( 68.0197, 57.6756, -17.0388, 0.55 ) }
    dend_35 { pt3dadd( 69.1792, 57.7642, -17.3141, 0.55 ) }
    dend_35 { pt3dadd( 70.4821, 57.9822, -17.6546, 0.55 ) }
    dend_35 { pt3dadd( 71.5228, 58.2493, -17.9623, 0.55 ) }
    dend_35 { pt3dadd( 72.9122, 58.7044, -18.3281, 0.55 ) }
    dend_35 { pt3dadd( 74.5916, 59.3732, -18.7614, 0.83 ) }
    dend_35 { pt3dadd( 76.2484, 60.1321, -19.1198, 0.55 ) }
    dend_35 { pt3dadd( 77.4549, 60.7481, -19.449, 0.55 ) }
    dend_35 { pt3dadd( 78.5758, 61.3906, -19.8356, 0.55 ) }
    dend_35 { pt3dadd( 80.4806, 62.5873, -20.6958, 0.55 ) }
    dend_35 { pt3dadd( 81.3762, 63.1911, -21.2162, 0.55 ) }
    dend_35 { pt3dadd( 82.3181, 63.8155, -21.8302, 0.55 ) }
    dend_35 { pt3dadd( 84.8798, 65.4077, -23.3458, 0.55 ) }
    dend_35 { pt3dadd( 85.9299, 66.047, -23.9345, 0.55 ) }
    dend_35 { pt3dadd( 88.2945, 67.4735, -25.2057, 1.11 ) }
    dend_35 { pt3dadd( 89.0046, 67.8696, -25.4879, 0.55 ) }
    dend_35 { pt3dadd( 91.5261, 69.1713, -26.0653, 0.83 ) }
    dend_35 { pt3dadd( 93.9216, 70.3406, -26.2946, 0.55 ) }
    dend_35 { pt3dadd( 94.8273, 70.7796, -26.2868, 0.55 ) }
    dend_35 { pt3dadd( 96.1886, 71.4553, -26.2372, 0.55 ) }
    dend_35 { pt3dadd( 99.5608, 73.1482, -26.0839, 0.55 ) }
    dend_35 { pt3dadd( 100.316, 73.5359, -26.0885, 0.28 ) }
    dend_35 { pt3dadd( 101.956, 74.4194, -26.222, 0.28 ) }
    dend_35 { pt3dadd( 103.281, 75.1899, -26.502, 0.28 ) }
    dend_35 { pt3dadd( 104.823, 76.1371, -26.9471, 0.83 ) }
    dend_35 { pt3dadd( 106.081, 77.0014, -27.4544, 0.55 ) }
    dend_35 { pt3dadd( 107.015, 77.7169, -27.9851, 0.55 ) }
    dend_35 { pt3dadd( 107.945, 78.4337, -28.516, 0.55 ) }
    dend_35 { pt3dadd( 108.879, 79.1988, -29.0484, 0.55 ) }
    dend_35 { pt3dadd( 109.484, 79.7332, -29.3711, 0.28 ) }
    dend_35 { pt3dadd( 109.903, 80.131, -29.5723, 0.28 ) }
    dend_35 { pt3dadd( 110.604, 80.8146, -29.8655, 0.55 ) }
    dend_35 { pt3dadd( 111.562, 81.712, -30.2117, 0.55 ) }
    dend_35 { pt3dadd( 112.342, 82.3969, -30.4883, 0.55 ) }
    dend_35 { pt3dadd( 112.97, 82.9077, -30.7068, 0.55 ) }
    dend_35 { pt3dadd( 113.995, 83.7334, -31.0501, 0.55 ) }
    dend_35 { pt3dadd( 114.805, 84.3777, -31.3109, 0.55 ) }
    dend_35 { pt3dadd( 119.127, 87.2356, -34.5203, 0.55 ) }
    dend_35 { pt3dadd( 123.216, 90.787, -37.3532, 0.55 ) }
    dend_35 { pt3dadd( 127.999, 93.941, -39.4544, 0.55 ) }
    dend_35 { pt3dadd( 133.608, 95.9306, -40.7289, 0.55 ) }
    dend_35 { pt3dadd( 138.949, 96.9398, -43.4756, 0.55 ) }
    dend_35 { pt3dadd( 143.931, 97.239, -46.9889, 0.55 ) }
    dend_35 { pt3dadd( 148.679, 98.5646, -50.5605, 0.55 ) }
    dend_35 { pt3dadd( 153.725, 99.7729, -53.7455, 0.55 ) }
    dend_35 { pt3dadd( 158.375, 101.632, -57.2017, 0.55 ) }
    dend_35 { pt3dadd( 163.093, 104.375, -59.9105, 0.55 ) }
    dend_35 { pt3dadd( 167.796, 107.81, -61.7605, 0.55 ) }
    dend_35 { pt3dadd( 172.616, 111.532, -62.4204, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 98/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 9.16702, 27.5474, 19.7251, 1.11 ) }
    dend_34 { pt3dadd( 9.88065, 31.6168, 24.1204, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_34 { pt3dadd( 11.0704, 37.5722, 30.0471, 1.11 ) }
    dend_34 { pt3dadd( 11.7851, 40.4618, 33.0632, 1.11 ) }
    dend_34 { pt3dadd( 12.6244, 43.4506, 36.093, 0.83 ) }
    dend_34 { pt3dadd( 14.2823, 48.9861, 41.3679, 0.83 ) }
    dend_34 { pt3dadd( 15.5177, 53.0457, 45.3754, 0.83 ) }
    dend_34 { pt3dadd( 16.5316, 56.5869, 48.9547, 0.83 ) }
    dend_34 { pt3dadd( 18.1599, 62.2365, 53.8781, 0.55 ) }
    dend_34 { pt3dadd( 18.8446, 64.186, 55.6067, 0.55 ) }
    dend_34 { pt3dadd( 19.6186, 66.4651, 57.4177, 0.55 ) }
    dend_34 { pt3dadd( 21.0785, 71.9465, 60.9293, 0.55 ) }
    dend_34 { pt3dadd( 22.6191, 80.3534, 66.128, 0.55 ) }
    dend_34 { pt3dadd( 22.9049, 82.0175, 67.5089, 0.55 ) }
    dend_34 { pt3dadd( 23.5803, 89.3314, 73.4132, 0.55 ) }
    dend_34 { pt3dadd( 23.6743, 90.0209, 74.3569, 0.55 ) }
    dend_34 { pt3dadd( 23.8245, 90.4662, 75.4058, 0.55 ) }
    dend_34 { pt3dadd( 27.3515, 100.894, 83.1404, 0.55 ) }
    dend_34 { pt3dadd( 31.5855, 112.905, 87.7949, 0.55 ) }
    dend_34 { pt3dadd( 34.2531, 125.789, 91.3902, 0.55 ) }
    dend_34 { pt3dadd( 35.9985, 139.075, 94.1421, 0.55 ) }
    dend_34 { pt3dadd( 38.9289, 151.91, 97.6858, 0.55 ) }
    dend_34 { pt3dadd( 44.4828, 163.807, 100.979, 0.55 ) }
    dend_34 { pt3dadd( 48.382, 176.064, 105.338, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 74.0502, 132.505, -36.2569, 0.28 ) }
    dend_32 { pt3dadd( 66.5317, 132.291, -31.8869, 0.28 ) }
    dend_32 { pt3dadd( 64.3347, 132.229, -30.61, 0.28 ) }
    dend_32 { pt3dadd( 62.1474, 132.167, -29.3387, 0.28 ) }
    dend_32 { pt3dadd( 60.0702, 132.108, -28.1313, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 27/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 74.0502, 132.505, -36.2569, 0.55 ) }
    dend_31 { pt3dadd( 75.0682, 137.932, -43.8773, 0.55 ) }
    dend_31 { pt3dadd( 75.4086, 139.172, -45.0559, 0.55 ) }
    dend_31 { pt3dadd( 78.8443, 148.47, -51.7404, 0.55 ) }
    dend_31 { pt3dadd( 79.6051, 150.303, -52.6782, 0.28 ) }
    dend_31 { pt3dadd( 80.526, 152.393, -53.4459, 0.28 ) }
    dend_31 { pt3dadd( 80.526, 152.393, -53.4459, 0.28 ) }
    dend_31 { pt3dadd( 82.5038, 156.369, -55.3648, 0.83 ) }
    dend_31 { pt3dadd( 84.766, 160.524, -57.3757, 0.28 ) }
    dend_31 { pt3dadd( 86.8178, 164.043, -58.3709, 0.28 ) }
    dend_31 { pt3dadd( 88.0778, 166.16, -58.8616, 0.55 ) }
    dend_31 { pt3dadd( 89.8872, 169.2, -59.3993, 0.28 ) }
    dend_31 { pt3dadd( 97.7239, 182.69, -63.1965, 0.28 ) }
    dend_31 { pt3dadd( 98.4029, 183.932, -63.6229, 0.28 ) }
    dend_31 { pt3dadd( 103.131, 193.344, -66.9427, 0.55 ) }
    dend_31 { pt3dadd( 104.477, 196.174, -67.9589, 0.55 ) }
    dend_31 { pt3dadd( 105.548, 198.566, -68.7116, 0.28 ) }
    dend_31 { pt3dadd( 110.278, 210.042, -71.4981, 0.28 ) }
    dend_31 { pt3dadd( 112.118, 214.825, -72.0898, 0.28 ) }
    dend_31 { pt3dadd( 112.946, 216.956, -72.4683, 0.28 ) }
    dend_31 { pt3dadd( 114.893, 221.787, -73.6546, 0.83 ) }
    dend_31 { pt3dadd( 115.54, 223.338, -73.9088, 0.28 ) }
    dend_31 { pt3dadd( 116.395, 225.263, -73.9551, 0.55 ) }
    dend_31 { pt3dadd( 117.123, 226.717, -73.6665, 0.28 ) }
    dend_31 { pt3dadd( 118.935, 229.554, -73.0738, 0.28 ) }
    dend_31 { pt3dadd( 120.21, 231.2, -72.7145, 0.28 ) }
    dend_31 { pt3dadd( 121.989, 233.115, -72.2776, 0.55 ) }
    dend_31 { pt3dadd( 123.44, 234.48, -72.1543, 0.55 ) }
    dend_31 { pt3dadd( 127.608, 237.778, -72.2727, 0.28 ) }
    dend_31 { pt3dadd( 131.052, 240.211, -72.9115, 0.83 ) }
    dend_31 { pt3dadd( 133.138, 241.639, -73.534, 0.28 ) }
    dend_31 { pt3dadd( 136.079, 243.737, -74.6368, 0.28 ) }
    dend_31 { pt3dadd( 141.834, 247.9, -77.1179, 0.28 ) }
    dend_31 { pt3dadd( 144.754, 250.121, -78.447, 0.83 ) }
    dend_31 { pt3dadd( 148.694, 253.507, -80.3083, 0.28 ) }
    dend_31 { pt3dadd( 150.91, 255.726, -81.2722, 0.28 ) }
    dend_31 { pt3dadd( 152.959, 257.957, -81.957, 0.28 ) }
    dend_31 { pt3dadd( 154.361, 259.633, -82.2415, 0.28 ) }
    dend_31 { pt3dadd( 156.92, 262.953, -82.0615, 0.28 ) }
    dend_31 { pt3dadd( 158.95, 265.859, -81.6178, 0.28 ) }
    dend_31 { pt3dadd( 160.219, 267.788, -81.1287, 0.28 ) }
    dend_31 { pt3dadd( 161.344, 269.554, -80.7965, 0.28 ) }
    dend_31 { pt3dadd( 163.234, 272.676, -80.391, 0.55 ) }
    dend_31 { pt3dadd( 165.612, 276.884, -80.0379, 0.28 ) }
    dend_31 { pt3dadd( 167.781, 280.48, -79.8578, 0.28 ) }
    dend_31 { pt3dadd( 169.781, 283.536, -79.7717, 0.28 ) }
    dend_31 { pt3dadd( 173.142, 288.191, -79.691, 0.28 ) }
    dend_31 { pt3dadd( 175.365, 290.885, -79.6625, 0.28 ) }
    dend_31 { pt3dadd( 177.675, 293.224, -79.7816, 0.55 ) }
    dend_31 { pt3dadd( 181.593, 296.54, -80.1914, 0.28 ) }
    dend_31 { pt3dadd( 183.083, 297.612, -80.3128, 0.55 ) }
    dend_31 { pt3dadd( 185.285, 299.006, -80.4054, 0.28 ) }
    dend_31 { pt3dadd( 188.141, 300.734, -80.3608, 0.28 ) }
    dend_31 { pt3dadd( 192.432, 303.307, -80.3456, 0.28 ) }
    dend_31 { pt3dadd( 196.678, 305.84, -80.3086, 0.28 ) }
    dend_31 { pt3dadd( 198.151, 306.766, -80.2732, 0.55 ) }
    dend_31 { pt3dadd( 200.145, 308.039, -80.1728, 0.28 ) }
    dend_31 { pt3dadd( 201.887, 309.142, -79.9103, 0.28 ) }
    dend_31 { pt3dadd( 203.994, 310.452, -79.396, 0.28 ) }
    dend_31 { pt3dadd( 208.852, 313.2, -77.838, 0.55 ) }
    dend_31 { pt3dadd( 211.194, 314.404, -77.0573, 0.28 ) }
    dend_31 { pt3dadd( 213.855, 315.584, -76.1849, 0.28 ) }
    dend_31 { pt3dadd( 219.678, 317.688, -74.3717, 0.55 ) }
    dend_31 { pt3dadd( 222.595, 318.542, -73.5215, 0.28 ) }
    dend_31 { pt3dadd( 226.238, 319.433, -72.4664, 0.28 ) }
    dend_31 { pt3dadd( 229.499, 320.048, -71.5361, 0.28 ) }
    dend_31 { pt3dadd( 232.391, 320.446, -70.7782, 0.28 ) }
    dend_31 { pt3dadd( 236.443, 320.809, -69.9171, 0.28 ) }
    dend_31 { pt3dadd( 239.429, 320.943, -69.6492, 0.28 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -48.9498, -273.39, 27.6645, 0.28 ) }
    dend_13 { pt3dadd( -49.1847, -274.101, 20.1035, 0.28 ) }
    dend_13 { pt3dadd( -49.8582, -274.813, 12.4268, 0.28 ) }
    dend_13 { pt3dadd( -50.7604, -275.867, 1.12918, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( -51.0969, -276.202, -2.91681, 0.28 ) }
    dend_13 { pt3dadd( -51.5558, -276.529, -6.97082, 0.28 ) }
    dend_13 { pt3dadd( -52.0817, -276.866, -11.1607, 0.28 ) }
    dend_13 { pt3dadd( -52.6929, -277.277, -17.3274, 0.28 ) }
    dend_13 { pt3dadd( -53.3057, -277.515, -22.7034, 0.28 ) }
    dend_13 { pt3dadd( -54.6205, -277.474, -27.3925, 0.28 ) }
    dend_13 { pt3dadd( -56.2821, -277.324, -32.114, 0.28 ) }
    dend_13 { pt3dadd( -58.1847, -277.071, -36.9028, 0.28 ) }
    dend_13 { pt3dadd( -60.8498, -276.613, -43.1038, 0.28 ) }
    dend_13 { pt3dadd( -62.2083, -276.347, -45.7237, 0.28 ) }
    dend_13 { pt3dadd( -70.5068, -274.706, -58.5785, 0.28 ) }
    dend_13 { pt3dadd( -73.2325, -274.158, -62.1792, 0.28 ) }
    dend_13 { pt3dadd( -77.7504, -273.165, -67.1246, 0.28 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 13/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -48.9498, -273.39, 27.6645, 0.28 ) }
    dend_12 { pt3dadd( -45.7946, -273.485, 32.1755, 0.28 ) }
    dend_12 { pt3dadd( -42.9544, -273.594, 36.5373, 0.28 ) }
    dend_12 { pt3dadd( -40.7116, -273.769, 40.3072, 0.28 ) }
    dend_12 { pt3dadd( -36.3614, -274.09, 48.0523, 0.28 ) }
    dend_12 { pt3dadd( -34.0757, -274.216, 52.3228, 0.28 ) }
    dend_12 { pt3dadd( -32.0688, -274.318, 56.2791, 0.28 ) }
    dend_12 { pt3dadd( -30.1415, -274.482, 60.3402, 0.28 ) }
    dend_12 { pt3dadd( -28.1436, -274.801, 65.0594, 0.28 ) }
    dend_12 { pt3dadd( -27.2955, -275.078, 67.5203, 0.28 ) }
    dend_12 { pt3dadd( -26.5697, -275.551, 70.5065, 0.28 ) }
    dend_12 { pt3dadd( -25.6421, -276.592, 74.6481, 0.28 ) }
    dend_12 { pt3dadd( -24.9336, -277.783, 78.1137, 0.28 ) }
    dend_12 { pt3dadd( -24.4026, -279.017, 80.9402, 0.28 ) }
    dend_12 { pt3dadd( -23.7162, -281.166, 84.966, 0.28 ) }
    dend_12 { pt3dadd( -23.0893, -283.496, 88.8887, 0.28 ) }
    dend_12 { pt3dadd( -22.5314, -285.95, 92.6345, 0.28 ) }
    dend_12 { pt3dadd( -22.1028, -288.134, 95.7127, 0.28 ) }
    dend_12 { pt3dadd( -21.6614, -290.583, 99.0178, 0.28 ) }
    dend_12 { pt3dadd( -21.1691, -293.409, 102.766, 0.28 ) }
    dend_12 { pt3dadd( -15.4747, -297.785, 113.809, 0.28 ) }
    dend_12 { pt3dadd( -9.08152, -302.594, 124.285, 0.28 ) }
    dend_12 { pt3dadd( -2.89227, -306.751, 135.134, 0.28 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 36/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 156.025, -253.798, 15.9205, 0.28 ) }
    dend_10 { pt3dadd( 164.504, -256.368, 15.9171, 0.28 ) }
    dend_10 { pt3dadd( 173.185, -258.066, 15.7444, 0.28 ) }
    dend_10 { pt3dadd( 181.533, -260.833, 14.633, 0.28 ) }
    dend_10 { pt3dadd( 189.536, -263.899, 12.3449, 0.28 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 41/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 156.025, -253.798, 15.9205, 0.28 ) }
    dend_9 { pt3dadd( 165.129, -254.784, 18.9609, 0.28 ) }
    dend_9 { pt3dadd( 174.149, -255.11, 22.3748, 0.28 ) }
    dend_9 { pt3dadd( 183.176, -253.69, 25.535, 0.28 ) }
    dend_9 { pt3dadd( 192.176, -250.887, 27.8552, 0.28 ) }
    dend_9 { pt3dadd( 200.276, -246.815, 31.4374, 0.28 ) }
    dend_9 { pt3dadd( 207.255, -241.494, 35.7942, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_22, dend_19, dend_0, dend_24, dend_23, dend_21, dend_20, dend_2, dend_1, dend_26, dend_25, dend_14, dend_3, dend_28, dend_27, dend_16, dend_15, dend_5, dend_4, dend_36, dend_29, dend_18, dend_17, dend_7, dend_6, dend_40, dend_37, dend_33, dend_30, dend_11, dend_8, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_13, dend_12, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_22, dend_19, dend_0, dend_24, dend_23, dend_21, dend_20, dend_2, dend_1, dend_26, dend_25, dend_14, dend_3, dend_28, dend_27, dend_16, dend_15, dend_5, dend_4, dend_36, dend_29, dend_18, dend_17, dend_7, dend_6, dend_40, dend_37, dend_33, dend_30, dend_11, dend_8, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_13, dend_12, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_23 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_20 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_25 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_14 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_27 OneSecGrp_SectionRef_18.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_4 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_36 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_18 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_17 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_7 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_6 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_40 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_37 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_30 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_11 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_8 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_41 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_39 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_35 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_31 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_13 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_9 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_22 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_24 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_26 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_28 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_19 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_29 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_33 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_32 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_38 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_42 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_10 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_22, dend_19, dend_19, dend_19, dend_0, dend_0, axon_0, axon_0, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 15
    dend_21 nseg = 13
    dend_20 nseg = 9
    dend_1 nseg = 9
    dend_25 nseg = 9
    dend_14 nseg = 3
    dend_27 nseg = 19
    dend_15 nseg = 13
    dend_4 nseg = 19
    dend_36 nseg = 13
    dend_18 nseg = 15
    dend_17 nseg = 9
    dend_7 nseg = 9
    dend_6 nseg = 7
    dend_40 nseg = 7
    dend_37 nseg = 5
    dend_30 nseg = 7
    dend_11 nseg = 3
    dend_8 nseg = 11
    dend_41 nseg = 3
    dend_39 nseg = 3
    dend_35 nseg = 11
    dend_34 nseg = 9
    dend_31 nseg = 13
    dend_13 nseg = 5
    dend_12 nseg = 7
    dend_9 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_LBC_078d827ab9_0_0


