// Cell: dSTUT214_L6_NBC_750f7ba17d_0_0
/*
{
  "id" : "dSTUT214_L6_NBC_750f7ba17d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.18133, 10.1802, -0.0136132, 4.51632", "-3.71511, 9.17715, -0.012728, 5.89932", "-3.24888, 8.1741, -0.0118428, 6.73586", "-2.78266, 7.17105, -0.0109576, 7.77662", "-2.31644, 6.16799, -0.0100724, 8.83653", "-1.85022, 5.16494, -0.00918717, 9.98865", "-1.384, 4.16189, -0.00830196, 11.1793", "-0.917776, 3.15884, -0.00741676, 12.3766", "-0.451555, 2.15579, -0.00653155, 13.3418", "0.0146667, 1.15274, -0.00564635, 14.1684", "0.480888, 0.149684, -0.00476114, 14.5557", "0.94711, -0.853367, -0.00387593, 14.9116", "1.41333, -1.85642, -0.00299073, 14.9294", "1.87955, -2.85947, -0.00210552, 14.4593", "2.34577, -3.86252, -0.00122032, 13.9684", "2.812, -4.86557, -3.35112E-4, 13.2352", "3.27822, -5.86863, 5.50094E-4, 12.4898", "3.74444, -6.87168, 0.0014353, 11.1742", "4.21066, -7.87473, 0.0023205, 8.60206", "4.67688, -8.87778, 0.00320571, 5.94918", "5.1431, -9.88083, 0.00409092, 3.45007" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-4.86983, -2.55541, 10.4413, 1.08", "-7.33718, -3.55309, 10.462, 1.08", "-9.30854, -4.44984, 10.4763, 0.96", "-10.3148, -4.95869, 10.4826, 0.96", "-12.6507, -6.20494, 10.6636, 0.84", "-14.8165, -7.47233, 10.9807, 0.84", "-17.3268, -9.1012, 11.3922, 0.84", "-19.534, -10.5239, 11.8045, 0.84", "-21.3647, -11.7567, 12.1974, 0.84", "-23.8408, -13.6086, 12.8198, 0.84", "-25.5125, -15.0998, 13.3526, 0.84", "-27.8492, -17.55, 14.3266, 0.84", "-37.4099, -22.5853, 16.3668, 0.84", "-45.5362, -29.8876, 16.6955, 0.84", "-52.8447, -37.9261, 15.7723, 0.84", "-59.4031, -46.5146, 14.4943, 0.84", "-65.8574, -55.2598, 14.8535, 0.84", "-71.148, -64.7115, 15.3761, 0.84", "-77.4848, -73.5334, 15.8409, 0.84", "-83.4877, -82.5527, 15.0456, 0.84", "-89.0559, -91.8276, 15.907, 0.84", "-94.6241, -101.135, 16.2474, 0.84", "-100.077, -110.472, 17.1365, 0.84", "-105.312, -119.851, 18.6512, 0.84", "-111.497, -128.292, 21.6584, 0.84", "-117.391, -136.838, 24.9249, 0.84", "-123.101, -145.934, 26.538, 0.84", "-128.189, -155.485, 25.9058, 0.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "4.44017, -8.68816, -1.30865, 2.77", "4.89413, -9.9901, -1.28989, 2.77", "5.36165, -11.3308, -1.27057, 1.69", "5.89002, -12.8461, -1.24874, 1.69", "6.33053, -14.1095, -1.23054, 2.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "8.18017, -1.26841, -14.5587, 2.65", "10.7007, -3.03435, -16.2901, 2.05", "16.4413, -7.05649, -20.2336, 2.41" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.00983, 11.5821, 0.0313539, 4.22", "-5.997, 15.6968, 0.0313539, 4.22", "-6.52504, 16.7902, 0.0313539, 4.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "5.1431, -9.88083, 0.00409092, 1.16335", "11.4656, -23.4833, 0.00409092, 1.16335", "17.788, -37.0857, 0.00409092, 1.16335" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-128.189, -155.485, 25.9058, 0.24", "-134.545, -156.812, 22.3724, 0.24", "-141.203, -157.916, 19.3504, 0.24", "-148.033, -158.557, 16.586, 0.24", "-154.809, -157.92, 13.6987, 0.24", "-161.38, -157.603, 10.3204, 0.24", "-167.734, -156.859, 6.61587, 0.24", "-173.578, -156.591, 2.09207, 0.24", "-178.897, -155.988, -3.00651, 0.24", "-183.709, -154.267, -8.33258, 0.24", "-188.728, -152.181, -13.3178, 0.24", "-193.599, -151.113, -18.7696, 0.24", "-198.424, -148.926, -23.8983, 0.24", "-202.642, -145.236, -28.6372, 0.24", "-206.708, -142.402, -34.078, 0.24", "-211.324, -140.104, -39.3458, 0.24", "-215.347, -136.916, -44.6083, 0.24", "-220.307, -134.858, -49.6643, 0.24", "-224.134, -133.956, -55.9216, 0.24", "-226.978, -132.909, -62.6601, 0.24", "-228.849, -132.74, -69.8124, 0.24", "-229.707, -131.999, -77.1162, 0.24", "-230.461, -130.406, -84.2844, 0.24", "-232.722, -127.653, -90.726, 0.24", "-235.723, -125.877, -97.2289, 0.24", "-239.189, -123.804, -103.4, 0.24" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-128.189, -155.485, 25.9058, 0.24", "-131.32, -167.319, 28.7469, 0.24", "-132.711, -178.751, 33.8798, 0.24", "-133.938, -189.702, 40.0623, 0.24", "-133.226, -201.598, 44.106, 0.24" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "6.33053, -14.1095, -1.23054, 0.84", "4.11088, -23.129, 0.219011, 0.84", "3.37838, -26.2635, 0.616885, 0.84", "2.658, -29.5648, 0.9728, 0.84", "2.16612, -32.1309, 0.7679, 0.84", "1.83168, -34.7614, 0.203416, 0.72", "1.59085, -38.1574, -0.781025, 0.72", "1.63724, -40.0536, -1.94932, 0.72", "1.74991, -41.2361, -2.8476, 0.72", "2.8006, -48.8534, -9.47715, 0.72", "3.18356, -51.6228, -12.0798, 0.72", "3.33797, -52.9001, -13.346, 0.72", "3.68394, -56.9632, -17.4137, 0.6", "3.82833, -60.0231, -20.3321, 0.6", "3.88555, -62.9126, -22.8783, 0.6", "3.94601, -65.4266, -24.7075, 0.6", "4.08384, -66.9728, -25.9566, 0.6", "4.32394, -68.3882, -27.2618, 0.6", "4.55378, -69.3773, -28.2066, 0.6", "5.49998, -72.9658, -31.8286, 0.6", "6.19787, -75.2614, -34.2246, 0.6", "7.46471, -79.2929, -38.6995, 0.6", "8.4769, -83.136, -43.096, 0.6", "8.80406, -84.8737, -45.0459, 0.6", "8.88789, -85.8838, -46.2187, 0.48", "8.88268, -87.0604, -47.5326, 0.48", "8.46134, -90.8155, -51.5114, 0.48", "8.21387, -92.4041, -53.0198, 0.48", "7.88631, -94.766, -55.0543, 0.48", "7.12157, -100.701, -59.9864, 0.24", "6.97525, -102.424, -61.3312, 0.24", "6.78493, -105.695, -63.6821, 0.24", "6.73854, -107.887, -65.0912, 0.24", "6.79624, -110.664, -66.648, 0.24", "6.89246, -112.339, -67.6601, 0.36", "7.54872, -118.504, -71.6273, 0.36", "7.59975, -118.852, -71.8818, 0.36", "7.85116, -120.187, -73.022, 0.96", "8.69072, -124.184, -76.6691, 0.36", "10.4775, -131.776, -84.2255, 1.81", "11.4522, -135.588, -88.1699, 0.6", "12.2621, -138.709, -91.5282, 0.6", "13.4891, -143.289, -96.4028, 0.36", "14.1021, -145.142, -98.9389, 0.96", "15.13, -147.79, -102.972, 0.36", "15.7876, -149.373, -105.455, 0.96", "17.6855, -153.729, -112.671, 0.36", "18.4382, -155.387, -115.597, 1.57", "23.886, -166.994, -137.044, 0.72", "24.7102, -168.736, -140.549, 0.72", "24.8041, -168.929, -140.966, 1.45" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "6.33053, -14.1095, -1.23054, 1.45", "9.27103, -15.368, -0.725772, 1.45", "11.7934, -16.4474, -0.292797, 1.45", "14.2673, -17.5062, 0.131873, 1.45", "16.1846, -18.3268, 0.461001, 1.45" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "16.4413, -7.05649, -20.2336, 1.33", "19.644, -6.18138, -20.9433, 1.33", "25.0861, -4.69432, -22.1491, 1.33", "30.6843, -3.16466, -23.3896, 1.81" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "16.4413, -7.05649, -20.2336, 0.72", "17.2848, -8.89196, -21.0087, 0.72", "17.9655, -10.7322, -21.6736, 0.72", "18.6778, -12.417, -22.2476, 0.72", "19.3464, -13.7969, -22.7014, 0.6", "20.2589, -15.6878, -23.3411, 0.6", "21.1305, -17.4509, -23.954, 0.6", "21.854, -18.8298, -24.4182, 0.36", "22.9843, -20.9721, -25.1552, 0.48", "23.6903, -22.3141, -25.606, 0.36", "25.1283, -25.0842, -26.7034, 0.36", "26.4275, -27.5513, -27.9882, 0.36", "27.3475, -29.4707, -28.9864, 0.36", "28.2041, -31.327, -29.9947, 0.36", "29.8807, -35.3109, -32.2237, 0.36", "31.4501, -39.2389, -34.5068, 0.36", "32.9704, -43.1102, -36.8834, 0.24", "34.1043, -46.3966, -39.0471, 0.24" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-6.52504, 16.7902, 0.0313539, 1.81", "-11.1284, 17.04, 3.92388, 1.81" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.52504, 16.7902, 0.0313539, 2.65", "-6.0328, 20.8248, -0.0420587, 2.65", "-5.81058, 22.6462, -0.0751999, 2.65" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "17.788, -37.0857, 0.00409092, 0.501057", "24.1105, -50.6882, 0.00409092, 0.501057", "30.4329, -64.2906, 0.00409092, 0.501057" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-133.226, -201.598, 44.106, 0.24", "-134.355, -213.177, 47.8738, 0.24", "-138.15, -224.412, 50.8591, 0.24", "-140.317, -235.755, 54.9102, 0.24", "-142.483, -247.652, 56.4466, 0.24", "-142.94, -259.631, 58.7051, 0.24", "-144.628, -271.524, 60.8263, 0.24", "-148.538, -283.057, 61.3904, 0.24", "-153.986, -293.923, 60.3268, 0.24", "-161.211, -303.641, 62.3171, 0.24", "-167.236, -314.27, 62.702, 0.24", "-174.583, -324.054, 63.4677, 0.24" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-133.226, -201.598, 44.106, 0.24", "-133.857, -209.994, 46.6863, 0.24", "-133.96, -218.205, 49.9201, 0.24", "-134.931, -225.607, 54.7008, 0.24", "-135.051, -233.851, 57.8395, 0.24", "-136.664, -241.965, 60.8867, 0.24", "-140.194, -249.382, 64.134, 0.24", "-144.228, -256.271, 67.9647, 0.24", "-150.1, -262.109, 71.1468, 0.24", "-156.333, -267.899, 73.633, 0.24", "-162.511, -274.09, 74.8966, 0.24", "-168.737, -279.853, 77.4672, 0.24" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "16.1846, -18.3268, 0.461001, 0.36", "17.3444, -19.6301, -0.038354, 0.36", "19.1707, -21.6824, -0.824689, 0.36", "20.9225, -23.651, -1.57896, 0.36", "22.2518, -25.1449, -2.15132, 0.6", "25.016, -28.2512, -3.34149, 0.6", "26.4695, -29.8846, -3.96732, 1.08" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "16.1846, -18.3268, 0.461001, 0.84", "18.0769, -19.3607, 2.26408, 0.84", "20.2019, -20.5824, 4.21712, 0.84", "21.7218, -21.4833, 5.51503, 0.72", "24.2292, -22.9854, 7.51417, 0.72", "29.0945, -26.033, 11.1531, 0.72", "31.3805, -27.5759, 12.7652, 0.6", "33.1126, -28.8877, 13.9703, 0.6", "34.6445, -30.2059, 14.9138, 0.6", "35.5462, -31.1177, 15.393, 0.6", "37.1431, -32.8965, 15.9466, 0.36", "38.8073, -34.7392, 16.1381, 0.36", "40.1293, -36.1449, 16.3781, 0.36", "41.5382, -37.6758, 16.8804, 0.36", "42.6344, -38.7478, 17.4262, 0.36", "44.0771, -39.9376, 18.2905, 0.36", "44.9861, -40.5279, 18.8946, 0.36", "48.2393, -42.1061, 21.1381, 0.36", "50.3918, -42.9971, 22.5821, 0.36", "52.4604, -43.7662, 24.0548, 0.36", "53.8029, -44.2615, 25.0588, 0.36", "54.532, -44.555, 25.6129, 0.36", "55.6841, -45.058, 26.3724, 0.36", "57.6463, -45.7242, 26.9936, 0.36", "66.3567, -51.6636, 34.3024, 0.36", "73.8981, -57.0723, 43.1755, 0.36", "81.0598, -61.8994, 52.6926, 0.36", "86.6617, -68.1406, 62.3874, 0.36", "90.7264, -75.6281, 71.9173, 0.36", "96.1176, -81.6118, 81.8981, 0.36", "101.483, -88.4251, 91.3166, 0.36", "107.541, -96.6542, 98.9608, 0.36", "112.226, -105.361, 107.0, 0.36", "115.753, -115.288, 114.087, 0.36", "119.253, -125.186, 121.229, 0.36", "122.059, -134.819, 129.028, 0.36" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "30.6843, -3.16466, -23.3896, 1.32", "32.1601, -1.49823, -24.9999, 1.32", "33.3134, -0.333136, -26.2777, 1.32", "34.6288, 0.815223, -27.7254, 1.2", "36.3961, 2.15992, -29.7722, 1.08", "38.3008, 3.6968, -32.3911, 0.96", "40.1443, 5.29402, -35.1542, 0.96", "40.6394, 5.75433, -36.0364, 0.96", "41.3006, 6.44106, -37.3602, 0.96", "42.0297, 7.39662, -39.0837, 0.96", "43.5409, 10.0995, -43.3476, 0.96", "43.9473, 11.0719, -44.6972, 0.96", "44.467, 12.4499, -46.414, 0.96", "44.8043, 13.182, -47.3022, 0.84", "45.7753, 14.7538, -49.2047, 0.72", "46.2422, 15.2935, -49.8733, 0.72", "48.1302, 16.8519, -51.9896, 0.84", "49.2751, 17.7205, -53.1804, 1.08", "51.2268, 19.1313, -55.0244, 1.08", "53.5425, 20.7089, -57.0173, 1.08", "54.4728, 21.2916, -57.7797, 0.96", "56.1334, 22.3462, -59.2974, 0.84", "57.0077, 22.963, -60.2376, 0.84", "57.8978, 23.6393, -61.3257, 0.84", "58.3852, 24.0146, -61.9803, 0.84", "60.3716, 25.4374, -64.6339, 0.84", "62.4328, 26.8936, -67.5438, 0.84", "64.3519, 28.2498, -70.3526, 2.16", "64.8854, 28.6395, -71.1408, 2.16", "66.8129, 30.1421, -73.892, 0.72", "67.5353, 30.7568, -74.8221, 0.72", "69.1646, 32.2918, -76.6186, 0.72", "70.59, 33.6455, -77.9543, 0.72", "71.2024, 34.2265, -78.4854, 0.72", "73.4184, 36.3336, -80.5188, 2.16", "74.6225, 37.4802, -81.6203, 1.44", "76.2202, 39.018, -82.9326, 0.48", "77.1065, 39.9608, -83.771, 0.48", "78.5881, 41.7197, -85.3497, 1.32", "79.889, 43.6344, -87.6767, 1.32", "79.9727, 43.7777, -87.8685, 1.32", "81.2597, 46.1019, -91.1102, 0.72", "83.9844, 51.0285, -97.8406, 0.6", "84.6127, 52.152, -99.3092, 0.6", "88.6206, 58.7892, -107.51, 0.12", "89.3243, 59.8625, -108.782, 0.96", "89.9404, 60.7306, -109.782, 0.48", "91.301, 62.5013, -111.751, 0.36", "93.1608, 64.6523, -113.595, 0.24", "94.6019, 66.2786, -114.811, 0.24", "96.9591, 68.8267, -116.135, 1.2", "97.8474, 69.8295, -116.721, 0.72", "99.7635, 72.1316, -118.11, 0.24", "100.499, 73.0831, -118.666, 0.24", "101.818, 74.9336, -119.621, 1.08", "102.26, 75.6106, -119.937, 0.6", "104.141, 78.5929, -121.069, 0.48", "104.813, 79.6716, -121.462, 0.48", "105.555, 80.8008, -121.827, 1.2", "106.297, 81.8566, -122.188, 0.6", "108.318, 84.3927, -123.08, 0.24", "109.217, 85.4168, -123.544, 0.24", "110.402, 86.6339, -124.178, 1.32", "111.403, 87.5752, -124.701, 0.72", "113.546, 89.5266, -125.866, 0.48", "115.472, 91.2908, -127.013, 0.48", "117.478, 93.1384, -128.233, 1.08", "118.29, 93.9107, -128.737, 0.36", "120.168, 95.7796, -129.856, 0.12", "122.552, 98.3178, -131.234, 0.12", "124.36, 100.332, -132.247, 0.12", "124.872, 100.925, -132.519, 0.48", "125.314, 101.446, -132.754, 0.12", "126.116, 102.433, -133.298, 0.12", "126.499, 102.93, -133.594, 0.48", "127.619, 104.516, -134.437, 0.48", "128.254, 105.566, -134.907, 0.24", "129.183, 107.284, -135.563, 0.6", "129.908, 108.743, -136.018, 1.08", "130.592, 110.199, -136.381, 0.48", "131.864, 112.848, -136.978, 0.36", "132.682, 114.467, -137.406, 0.36", "133.804, 116.53, -138.111, 0.36", "134.481, 117.661, -138.551, 0.96", "134.948, 118.379, -138.87, 0.24", "136.73, 120.842, -140.051, 0.12", "138.923, 123.518, -141.334, 0.24", "140.222, 125.01, -142.156, 0.24", "141.042, 125.946, -142.695, 0.24", "141.952, 126.973, -143.225, 0.24", "143.393, 128.593, -143.879, 0.24", "144.129, 129.408, -144.093, 0.24", "146.67, 132.141, -144.742, 1.44", "147.281, 132.801, -144.938, 1.08", "148.422, 134.015, -145.379, 0.12", "149.09, 134.746, -145.767, 0.12", "150.384, 136.172, -146.712, 0.12", "151.908, 137.741, -147.833, 0.6", "152.657, 138.429, -148.327, 0.6", "153.403, 139.09, -148.937, 0.24", "155.689, 141.097, -150.982, 0.72", "156.225, 141.581, -151.513, 0.12", "157.246, 142.513, -152.511, 0.24", "158.179, 143.39, -153.382, 0.24", "161.592, 146.763, -156.559, 0.24", "162.406, 147.638, -157.297, 0.12", "164.697, 150.247, -159.197, 0.24", "165.682, 151.484, -160.012, 0.24", "167.045, 153.381, -161.076, 0.24", "167.733, 154.486, -161.648, 0.72", "168.683, 156.185, -162.348, 0.36", "169.155, 157.067, -162.711, 0.36", "169.795, 158.304, -163.182, 1.08", "170.524, 159.74, -163.792, 0.36", "172.329, 163.393, -165.388, 0.36", "172.722, 164.23, -165.808, 0.36", "173.323, 165.631, -166.676, 1.2", "173.496, 166.05, -166.955, 0.72", "173.858, 166.904, -167.568, 0.36", "174.148, 167.608, -168.09, 0.36", "175.184, 170.115, -169.573, 0.36", "175.86, 172.507, -171.292, 0.84" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "30.6843, -3.16466, -23.3896, 0.84", "32.3612, -4.07082, -23.2303, 0.84", "33.5855, -4.81319, -23.1844, 0.84", "35.5423, -6.066, -23.2539, 0.6", "36.9108, -6.97393, -23.3597, 0.6", "38.8126, -8.30369, -23.603, 0.6", "40.0533, -9.1989, -23.7988, 0.48", "41.375, -10.1828, -24.1028, 0.48", "42.6482, -11.1736, -24.4298, 0.48", "44.0323, -12.305, -24.7896, 0.84", "45.1584, -13.1979, -25.0684, 0.72", "46.4229, -14.1572, -25.3223, 0.72", "48.3495, -15.5168, -25.5678, 0.72", "49.0135, -15.9827, -25.5899, 0.6", "49.9677, -16.6581, -25.5661, 0.6", "52.0212, -18.1444, -25.4818, 0.84", "53.2795, -19.0848, -25.4128, 0.48", "54.8568, -20.309, -25.4257, 0.48", "57.0755, -22.0956, -25.5674, 0.48", "58.1588, -22.9566, -25.6712, 0.48", "59.8078, -24.2473, -25.8728, 0.84", "61.3789, -25.4577, -26.0809, 0.84", "63.9973, -27.4387, -26.4665, 0.84", "66.1044, -29.0068, -26.7743, 0.72", "68.0097, -30.3882, -27.0444, 0.6", "70.3059, -32.0255, -27.3189, 0.6", "71.7451, -33.0224, -27.4448, 0.6", "72.9073, -33.8218, -27.5217, 0.48", "74.4929, -34.9197, -27.5692, 0.48", "75.498, -35.6024, -27.6149, 0.48", "76.8365, -36.5162, -27.7021, 0.48", "78.4462, -37.6078, -27.8189, 0.48", "79.7084, -38.4131, -27.9145, 0.36", "80.8849, -39.095, -28.0023, 0.36", "82.1401, -39.7387, -28.0225, 0.36", "83.3056, -40.2594, -27.9857, 0.36", "83.6294, -40.385, -27.9536, 0.36", "85.0164, -40.8798, -27.737, 0.36", "87.0101, -41.5457, -27.348, 0.24", "89.4047, -42.3893, -26.8455, 0.24", "90.5537, -42.8333, -26.5967, 0.24", "91.5857, -43.2709, -26.3788, 0.72", "92.9669, -43.9408, -26.1055, 0.36", "94.1615, -44.6532, -25.8948, 0.36", "95.4615, -45.6103, -25.7242, 0.72", "96.2104, -46.284, -25.6891, 0.48", "97.029, -47.1013, -25.6749, 0.84", "97.6528, -47.7572, -25.69, 0.48", "98.578, -48.7585, -25.7128, 0.84", "99.0805, -49.2874, -25.7258, 0.48", "100.004, -50.1888, -25.7198, 0.96", "100.874, -50.9701, -25.6945, 0.36", "101.956, -51.9056, -25.6655, 0.36", "102.686, -52.4998, -25.6366, 0.36", "104.303, -53.7648, -25.5521, 0.84", "105.143, -54.3849, -25.5205, 0.48", "106.67, -55.4883, -25.4572, 0.48", "108.638, -56.9026, -25.3691, 0.48", "109.696, -57.6513, -25.3234, 0.48", "109.801, -57.726, -25.3197, 0.48", "113.074, -60.1182, -25.2755, 0.72" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-11.1284, 17.04, 3.92388, 0.6", "-13.6929, 19.0026, 6.89126, 0.6", "-15.7118, 20.4302, 8.955, 0.6", "-18.2105, 22.3198, 11.3855, 0.6", "-19.7295, 23.5, 12.6757, 0.48", "-20.9191, 24.4193, 13.5593, 0.48", "-22.7963, 25.8701, 14.9536, 0.48", "-26.1789, 28.3687, 16.9941, 0.24", "-27.7795, 29.555, 17.7478, 0.24", "-29.8748, 31.1976, 18.4998, 0.12", "-31.2216, 32.2036, 18.9597, 0.12", "-41.4758, 39.0844, 24.3549, 0.12", "-52.7151, 46.2004, 26.4959, 0.12", "-64.4874, 52.0205, 29.6509, 0.12", "-75.485, 57.7989, 34.9461, 0.12", "-85.4947, 65.2171, 40.0421, 0.12", "-96.1777, 71.3312, 45.5774, 0.12", "-106.582, 77.9434, 51.0404, 0.12", "-115.571, 85.6373, 57.4365, 0.12", "-126.495, 90.3667, 63.8617, 0.12", "-136.688, 96.0067, 70.6966, 0.12", "-149.022, 98.6424, 75.6818, 0.12", "-161.062, 103.504, 79.4712, 0.12", "-171.942, 109.954, 84.1583, 0.12", "-182.884, 116.485, 88.5764, 0.12", "-192.203, 123.58, 95.2244, 0.12" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-11.1284, 17.04, 3.92388, 0.72", "-12.4469, 15.3562, 4.88459, 0.72", "-12.941, 14.7336, 5.15821, 0.72", "-13.4926, 14.0522, 5.4472, 0.6", "-13.7899, 13.6851, 5.60294, 0.6", "-15.0334, 12.1491, 6.25445, 0.6", "-15.6275, 11.4153, 6.56569, 0.6", "-16.8948, 9.94185, 7.14347, 0.6", "-17.3903, 9.44214, 7.36434, 0.6" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.81058, 22.6462, -0.0751999, 0.72", "-4.45316, 25.4555, 0.740597, 0.72", "-2.54462, 29.5813, 1.8408, 0.6", "-0.571412, 34.163, 2.9623, 0.6", "0.604361, 36.9905, 3.58282, 0.6", "2.29854, 41.2157, 4.46262, 0.6", "3.51548, 44.4528, 5.08688, 0.6", "4.67812, 47.9762, 5.67532, 0.6", "5.3318, 50.2047, 5.99396, 0.6", "6.44045, 54.0289, 6.68356, 0.6", "7.57202, 57.9466, 7.63812, 0.6", "8.62472, 61.6072, 8.63729, 0.48", "9.39886, 64.3299, 9.49227, 0.48", "10.7022, 68.943, 11.0721, 0.48", "12.257, 74.3508, 12.9893, 0.48", "14.4193, 81.8003, 15.6854, 0.48", "15.4021, 85.1214, 16.9162, 0.48", "16.1316, 87.4631, 17.7981, 0.48", "16.9428, 90.0819, 18.7795, 0.48", "17.8984, 93.1571, 19.8352, 0.48", "18.4518, 95.1179, 20.339, 0.48", "19.3625, 97.8179, 20.8109, 0.48", "19.9724, 99.4391, 21.1353, 0.48" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.81058, 22.6462, -0.0751999, 2.17", "-5.68536, 29.2068, -1.69881, 2.17", "-5.64109, 31.5261, -2.2728, 1.81", "-5.60682, 33.3214, -2.71711, 1.81", "-5.55102, 36.2453, -3.4407, 2.65" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "26.4695, -29.8846, -3.96732, 0.72", "26.6253, -33.7709, -6.66056, 0.72", "26.951, -36.1593, -8.54438, 0.72", "27.3375, -38.3129, -10.3674, 0.72", "27.7053, -40.3313, -12.0135, 0.72", "28.0643, -42.59, -13.8121, 0.72", "28.488, -45.8441, -16.2223, 0.72", "28.7798, -47.9589, -17.6036, 1.08", "29.0629, -49.9655, -18.8544, 1.08", "29.1947, -52.0623, -19.9911, 0.48", "29.1714, -53.3494, -20.5446, 0.48", "28.9976, -55.8338, -21.3373, 0.48", "28.9023, -57.1074, -21.8178, 0.48", "28.7106, -58.9413, -22.7304, 0.96", "28.4565, -61.2828, -24.0799, 0.6", "28.3097, -63.4189, -25.6467, 0.48", "28.2356, -64.9148, -26.8727, 0.48", "27.913, -71.2431, -32.6659, 0.48", "27.816, -73.0905, -34.5645, 0.36", "27.7165, -74.2567, -35.8837, 0.36", "27.2998, -77.3248, -39.5038, 0.36", "27.0074, -78.802, -41.2387, 0.36", "26.2037, -81.7236, -44.611, 0.36", "25.5647, -84.1378, -47.4036, 0.36", "25.1828, -86.4184, -49.984, 0.36", "25.0839, -87.7386, -51.5216, 0.36", "25.1102, -88.7543, -52.6621, 0.36", "25.2347, -89.8193, -53.8465, 0.36", "26.9309, -98.9055, -63.1322, 0.36", "27.4941, -101.533, -65.6721, 0.36", "28.1981, -104.697, -68.7235, 0.36", "28.8264, -108.012, -72.1165, 0.36", "28.8662, -109.287, -73.2469, 0.36", "28.4032, -112.476, -75.4995, 0.36", "27.0153, -116.412, -77.8792, 0.36", "25.9792, -118.896, -79.4406, 0.36", "24.2862, -122.945, -81.8766, 0.36", "20.4167, -133.227, -87.7753, 0.36", "19.5868, -136.014, -89.318, 0.36", "17.6105, -145.294, -94.5106, 0.36", "17.1221, -149.213, -96.6577, 0.36", "16.9944, -152.477, -98.4527, 0.36", "17.1297, -155.878, -100.316, 0.36", "17.4329, -158.694, -102.027, 0.36", "18.0422, -165.085, -105.654, 0.36", "18.3375, -170.02, -107.854, 0.36", "18.3466, -174.152, -109.574, 0.36", "18.1012, -177.518, -111.011, 0.36", "17.6538, -179.982, -112.179, 0.36", "17.1772, -181.66, -112.984, 0.36", "15.7217, -185.631, -114.924, 0.36", "14.7337, -187.893, -116.133, 0.36", "12.2547, -192.774, -119.15, 0.36", "9.30954, -198.047, -122.806, 0.36", "7.52649, -201.157, -125.085, 0.36", "6.15844, -203.595, -127.104, 0.36", "5.35446, -205.064, -128.479, 0.36", "4.28382, -207.409, -130.803, 0.36", "3.87958, -208.797, -132.136, 0.36", "3.49797, -210.84, -134.064, 0.36", "2.81167, -215.835, -139.113, 0.36", "2.65967, -217.441, -140.788, 0.36", "2.48751, -221.246, -144.844, 0.36", "2.55498, -224.339, -148.059, 0.36" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "26.4695, -29.8846, -3.96732, 0.6", "29.6632, -32.1955, -4.44912, 0.6", "33.0716, -35.0792, -5.09365, 0.6", "35.5166, -37.3256, -5.62473, 0.48", "39.0015, -40.5448, -6.41208, 0.84", "41.3109, -42.651, -6.9309, 0.84", "43.3994, -44.5617, -7.38243, 0.72", "46.7118, -47.7479, -8.00286, 0.72", "48.7452, -49.7204, -8.26727, 0.72", "50.3914, -51.2871, -8.43415, 1.2", "52.5163, -53.1522, -8.60327, 0.84", "54.749, -55.0223, -8.87069, 0.84", "56.9199, -56.8069, -9.16638, 0.6", "59.7293, -59.0033, -9.54709, 0.6", "61.0726, -60.0449, -9.7592, 0.6", "63.966, -62.3583, -10.2802, 0.96", "67.515, -65.2108, -10.9711, 0.72", "69.661, -66.9445, -11.4211, 0.48", "71.5487, -68.4968, -11.8392, 1.33", "74.1187, -70.6296, -12.2722, 0.72", "77.0059, -73.0218, -12.5434, 0.6", "78.9437, -74.674, -12.6966, 0.48", "80.1278, -75.6722, -12.7742, 0.48", "81.2213, -76.5545, -12.8655, 0.36", "83.4436, -78.3333, -13.0714, 0.24", "85.8978, -80.2035, -13.2551, 0.96", "91.842, -84.455, -13.5984, 0.24", "94.6786, -86.3825, -13.599, 1.57", "99.9195, -89.882, -13.3285, 0.36", "101.493, -90.9414, -13.1769, 0.36", "104.787, -93.1335, -12.71, 0.36", "107.59, -94.9852, -12.0862, 1.08", "111.125, -97.3297, -10.8457, 0.6", "112.489, -98.3239, -10.2969, 0.48", "114.145, -99.824, -9.7644, 0.96", "116.082, -101.922, -9.40109, 0.36", "117.451, -103.689, -9.33791, 0.84", "118.536, -105.187, -9.39004, 0.36", "119.515, -106.621, -9.56952, 0.96", "124.053, -113.385, -10.6804, 0.24", "126.222, -116.843, -11.3596, 0.24", "127.124, -118.455, -11.7384, 1.69" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "122.059, -134.819, 129.028, 0.24", "126.276, -139.95, 134.564, 0.24", "130.16, -145.013, 140.398, 0.24", "133.497, -149.862, 146.737, 0.24", "136.415, -154.383, 153.518, 0.24", "139.328, -158.2, 160.743, 0.24", "142.412, -163.486, 166.836, 0.24", "146.442, -168.261, 172.825, 0.24", "149.968, -173.633, 178.595, 0.24", "154.819, -178.809, 183.542, 0.24" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "122.059, -134.819, 129.028, 0.24", "127.194, -139.484, 134.486, 0.24", "132.723, -143.471, 140.122, 0.24", "137.955, -146.767, 146.464, 0.24", "143.73, -149.269, 152.72, 0.24", "148.473, -152.834, 159.288, 0.24" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "113.074, -60.1182, -25.2755, 0.24", "116.915, -59.9577, -29.6316, 0.24", "118.161, -59.9661, -30.9395, 0.24", "122.011, -60.0894, -34.831, 0.24", "123.885, -60.2156, -36.6759, 0.24", "125.888, -60.4237, -38.5208, 0.24", "127.817, -60.6642, -40.2303, 0.24", "129.162, -60.914, -41.2586, 0.24", "130.124, -61.1317, -41.9614, 0.24", "131.457, -61.5136, -42.8004, 0.24", "133.691, -62.2128, -44.171, 0.24", "136.182, -63.0878, -45.665, 0.24", "137.796, -63.6798, -46.6639, 0.24", "138.873, -64.0542, -47.297, 0.24" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "113.074, -60.1182, -25.2755, 0.24", "115.691, -62.1969, -24.5984, 0.24", "119.163, -64.9028, -23.6022, 0.24", "121.529, -67.0875, -23.0788, 0.24", "124.741, -71.4288, -22.9389, 0.24", "126.205, -74.1648, -23.1181, 0.24", "126.981, -75.92, -23.2863, 0.24", "127.915, -78.9657, -23.788, 0.24", "129.188, -85.5423, -25.1801, 0.24", "130.353, -95.3023, -27.6113, 0.24", "130.639, -99.244, -28.6842, 0.24", "130.741, -100.658, -29.0873, 0.24", "131.081, -104.348, -30.1408, 0.24", "131.372, -106.47, -30.7442, 0.24", "132.73, -111.829, -31.9582, 0.24", "133.456, -113.532, -32.2742, 0.24", "135.244, -116.973, -33.1345, 0.24", "136.356, -118.768, -33.6804, 0.24", "137.269, -120.016, -34.1073, 0.24", "139.199, -122.34, -35.0209, 0.24", "140.908, -124.246, -35.8115, 0.24", "145.037, -128.788, -37.7718, 0.24", "147.876, -131.787, -39.1139, 0.24", "150.432, -134.423, -40.3619, 0.24", "152.346, -136.339, -41.3087, 0.24", "154.954, -138.844, -42.6384, 0.24" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-192.203, 123.58, 95.2244, 0.12", "-198.527, 127.756, 101.023, 0.12", "-203.697, 132.823, 107.201, 0.12", "-208.389, 138.237, 113.448, 0.12", "-213.2, 142.111, 120.727, 0.12", "-217.086, 146.898, 127.984, 0.12", "-221.107, 149.892, 136.13, 0.12", "-224.892, 153.311, 144.211, 0.12", "-230.034, 157.112, 151.303, 0.12" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-192.203, 123.58, 95.2244, 0.12", "-201.128, 129.012, 98.0032, 0.12", "-209.507, 134.222, 102.398, 0.12", "-216.74, 138.822, 108.962, 0.12", "-223.003, 143.835, 116.158, 0.12", "-228.665, 148.085, 124.299, 0.12", "-234.26, 153.153, 131.978, 0.12", "-238.635, 158.097, 140.476, 0.12", "-242.502, 163.844, 148.678, 0.12" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-17.3903, 9.44214, 7.36434, 0.24", "-19.0838, 7.30646, 7.61276, 0.24", "-20.3255, 5.83694, 7.82311, 0.24", "-22.2089, 3.60802, 8.14218, 0.24", "-23.3272, 2.2845, 8.33164, 0.24", "-24.0072, 1.47969, 8.44685, 0.24", "-24.9177, 0.402212, 8.60109, 0.24", "-25.7794, -0.403125, 8.88723, 0.24", "-31.1494, -8.79203, 11.1183, 0.24", "-36.735, -16.3762, 15.0948, 0.24", "-43.7202, -22.8728, 18.894, 0.24", "-50.4179, -28.2419, 24.5625, 0.24", "-56.4087, -34.938, 29.4943, 0.24" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-17.3903, 9.44214, 7.36434, 0.6", "-19.9194, 8.52693, 7.94796, 0.6", "-22.9755, 7.76128, 8.79971, 0.6", "-24.6143, 7.47406, 9.24972, 0.6", "-25.7888, 7.32433, 9.54814, 0.6", "-28.2811, 7.06986, 10.1028, 0.48", "-32.5928, 6.62963, 11.0625, 0.48", "-35.0414, 6.47792, 11.664, 0.48", "-37.7303, 6.43896, 12.321, 0.48", "-39.7971, 6.51073, 12.8295, 0.48", "-42.6756, 6.77121, 13.4916, 0.48" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "19.9724, 99.4391, 21.1353, 0.36", "23.1976, 101.823, 19.3436, 0.36", "24.448, 102.747, 18.649, 0.36", "27.8455, 105.257, 16.7615, 0.36", "35.2523, 109.437, 14.2907, 0.36", "42.7757, 113.709, 12.4089, 0.36", "50.4668, 117.864, 10.9886, 0.36", "58.1577, 122.239, 11.1391, 0.36", "65.527, 126.99, 10.0027, 0.36", "72.4145, 131.899, 7.44124, 0.36", "78.5109, 136.912, 3.47081, 0.36", "85.7305, 140.495, -0.232523, 0.36", "93.4675, 143.366, -3.51764, 0.36", "101.691, 146.28, -5.17625, 0.36", "110.121, 149.019, -5.7664, 0.36", "118.781, 150.71, -6.89863, 0.36", "127.67, 150.647, -6.39825, 0.36", "136.406, 149.483, -5.17302, 0.36", "145.158, 148.003, -5.75601, 0.36", "153.428, 145.16, -7.27479, 0.36", "162.262, 144.09, -7.40515, 0.36", "170.999, 142.609, -6.63422, 0.36", "179.758, 141.368, -7.58189, 0.36", "188.639, 141.552, -6.98492, 0.36", "197.403, 142.539, -5.7806, 0.36", "206.262, 142.314, -4.93018, 0.36" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "19.9724, 99.4391, 21.1353, 0.36", "20.5164, 102.236, 22.1338, 0.36", "20.9937, 104.689, 23.0097, 0.36", "24.2499, 113.416, 25.347, 0.36", "27.5435, 122.133, 27.6688, 0.36", "31.7929, 129.92, 31.4532, 0.36", "36.3064, 137.045, 36.1858, 0.36", "39.1205, 144.47, 41.6862, 0.36", "43.095, 151.817, 46.5428, 0.36", "46.1833, 160.041, 50.4777, 0.36", "48.645, 168.544, 54.2258, 0.36", "50.8307, 176.219, 59.6508, 0.36" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-5.55102, 36.2453, -3.4407, 1.45", "-5.31788, 39.9027, -3.44698, 1.45", "-5.36446, 43.4842, -3.53473, 1.45", "-5.48843, 46.0264, -3.57242, 1.45", "-5.64782, 48.4698, -3.58049, 1.45", "-5.91972, 52.2811, -3.55334, 1.08", "-6.05761, 54.6571, -3.65515, 1.08", "-6.41308, 59.4446, -4.08948, 0.96", "-6.66886, 63.5301, -4.53841, 0.96", "-6.80777, 66.7992, -4.91325, 0.96", "-6.85142, 70.1864, -5.27737, 0.96", "-6.74776, 75.8517, -5.79003, 0.96", "-6.53887, 80.2133, -6.14312, 0.96", "-6.26037, 84.0887, -6.51858, 0.96", "-5.96336, 87.9325, -7.10389, 0.96", "-5.66418, 92.4157, -8.00397, 0.96", "-5.49546, 95.7944, -8.80018, 0.96", "-5.38458, 99.0859, -9.70394, 0.96", "-5.27377, 103.598, -11.2327, 0.96", "-5.13509, 109.236, -13.556, 0.96", "-5.06906, 114.059, -15.6316, 0.96", "-5.10641, 117.63, -17.1929, 0.96", "-5.1947, 120.834, -18.5159, 0.96", "-5.27958, 124.174, -19.7156, 0.96", "-5.37983, 128.137, -20.7887, 0.96", "-5.42989, 132.852, -21.719, 0.96", "-5.39235, 136.155, -22.3277, 0.96", "-5.33592, 140.697, -23.0569, 0.96", "-5.28394, 145.251, -23.6729, 0.96", "-5.25521, 147.68, -23.99, 0.96", "-5.19567, 154.127, -24.7175, 0.96", "-5.05267, 158.249, -25.2752, 0.96", "-4.9088, 161.479, -25.6476, 0.96", "-4.73758, 164.737, -26.0349, 0.96", "-4.55598, 167.881, -26.4321, 0.96", "-4.27911, 171.968, -26.9423, 0.96", "-3.89675, 177.805, -27.5901, 0.96", "-3.69081, 180.369, -27.8947, 0.96", "-3.26172, 184.862, -28.5784, 0.96", "-3.08419, 186.722, -28.9099, 0.96", "-2.5138, 192.671, -30.0646, 1.2", "-2.205, 196.025, -30.7417, 1.08", "-1.99251, 198.671, -31.2444, 1.33", "-1.58629, 203.647, -32.1279, 1.08", "-1.33699, 207.065, -32.6497, 1.08", "-1.10455, 210.176, -33.1236, 0.96", "-1.0457, 210.901, -33.2322, 0.96", "-0.81625, 213.931, -33.5913, 0.96", "-0.670692, 216.536, -33.793, 0.96", "-0.43708, 220.529, -33.9975, 0.72", "-0.257107, 223.633, -34.0972, 0.72", "-0.0317503, 228.254, -34.2339, 0.72", "0.0820327, 230.995, -34.3211, 0.96", "0.151925, 233.439, -34.4044, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-5.55102, 36.2453, -3.4407, 0.72", "-9.86108, 38.8828, -8.67191, 0.72", "-11.32, 39.8668, -10.5809, 0.72", "-12.9246, 40.8962, -12.5519, 0.72", "-14.2537, 41.7324, -14.0746, 0.72", "-16.0211, 43.0146, -16.1208, 0.6", "-18.8953, 45.4883, -19.5053, 0.6", "-20.7462, 47.364, -21.6077, 0.6", "-22.4965, 49.5778, -23.7667, 0.6", "-23.4257, 50.8734, -25.0009, 0.36", "-25.6792, 54.0916, -27.9944, 0.6", "-27.3119, 56.4295, -30.0381, 0.6", "-28.8276, 58.4292, -31.7745, 0.6", "-29.6556, 59.4594, -32.7282, 0.48", "-33.4818, 64.2314, -37.3694, 1.08", "-34.2684, 65.0961, -38.3096, 0.72", "-35.1379, 65.8032, -39.2482, 0.48", "-37.4529, 67.2573, -41.6589, 0.84", "-39.5095, 68.3348, -43.7333, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "148.473, -152.834, 159.288, 0.24", "152.577, -156.275, 166.543, 0.24", "156.785, -158.6, 174.197, 0.24", "159.852, -160.369, 182.517, 0.24", "163.178, -162.919, 190.516, 0.24", "166.03, -166.184, 198.418, 0.24" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "148.473, -152.834, 159.288, 0.24", "153.921, -155.432, 162.989, 0.24", "159.187, -158.917, 166.15, 0.24", "164.367, -162.812, 168.929, 0.24", "168.487, -167.832, 171.575, 0.24", "173.499, -172.45, 173.303, 0.24" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "138.873, -64.0542, -47.297, 0.24", "141.964, -65.3041, -49.0589, 0.24", "143.998, -66.0991, -50.3962, 0.24", "147.835, -67.6253, -53.0107, 0.24", "148.674, -67.9581, -53.5675, 0.24", "150.02, -68.4532, -54.4665, 0.24", "153.674, -69.8191, -56.9136, 0.24", "157.191, -71.1313, -59.334, 0.24", "158.567, -71.6383, -60.2706, 0.24", "161.254, -72.6154, -62.0673, 0.24", "164.41, -73.641, -64.2143, 0.24", "166.457, -74.216, -65.5921, 0.24", "168.926, -74.8508, -67.261, 0.24", "171.489, -75.5166, -68.9837, 0.24", "174.291, -76.1998, -71.01, 0.24", "177.482, -77.0056, -73.277, 0.24", "179.457, -77.4874, -74.7504, 0.24", "181.548, -77.8958, -76.3326, 0.24", "183.764, -78.3177, -78.0509, 0.24", "188.038, -79.1181, -81.4105, 0.24", "190.748, -79.6693, -83.5026, 0.24", "196.506, -80.9231, -87.9117, 0.24", "200.514, -81.6889, -91.007, 0.24" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "138.873, -64.0542, -47.297, 0.24", "139.696, -65.4275, -46.4741, 0.24", "140.314, -66.4595, -45.8557, 0.24", "141.017, -67.6326, -45.1527, 0.24" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-42.6756, 6.77121, 13.4916, 0.24", "-44.9107, 5.1541, 12.792, 0.24", "-47.386, 3.58112, 12.0229, 0.24", "-48.692, 2.75115, 11.6172, 0.24", "-51.2796, 1.10677, 10.8133, 0.24", "-53.8966, -0.556285, 10.0002, 0.24", "-56.1235, -1.97146, 9.30835, 0.24", "-57.3672, -2.72753, 8.9903, 0.24" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-42.6756, 6.77121, 13.4916, 0.48", "-43.4319, 5.78083, 13.4471, 0.48", "-43.9958, 5.04251, 13.4139, 0.48", "-44.7493, 4.05582, 13.3696, 0.24", "-45.8604, 2.60097, 13.3043, 0.24", "-47.8815, -0.0454912, 13.1854, 0.24", "-52.3762, -6.20706, 12.1325, 0.24", "-57.9878, -11.2254, 10.3356, 0.24", "-64.7209, -14.9391, 9.27257, 0.24" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "50.8307, 176.219, 59.6508, 0.24", "46.0976, 182.131, 73.0305, 0.24", "39.7226, 185.89, 86.539, 0.24", "34.854, 187.536, 101.07, 0.24", "27.5081, 192.574, 113.62, 0.24", "18.7684, 195.828, 125.885, 0.24", "11.8235, 199.511, 139.132, 0.24" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "50.8307, 176.219, 59.6508, 0.24", "56.9995, 185.479, 61.3798, 0.24", "63.3686, 194.38, 64.1018, 0.24", "71.0121, 202.376, 66.444, 0.24" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.151925, 233.439, -34.4044, 0.84", "0.737001, 237.813, -34.8299, 0.84", "1.04309, 240.675, -35.052, 0.84", "1.43964, 244.84, -35.3064, 0.72", "1.71527, 247.669, -35.4873, 0.6", "2.36473, 254.94, -35.9419, 0.84", "2.64825, 258.491, -36.1505, 0.84", "2.82449, 261.973, -36.3188, 0.6", "2.93626, 264.764, -36.4853, 0.6", "2.99973, 267.433, -36.6671, 0.6", "3.04841, 271.381, -37.0355, 0.6", "3.089, 276.754, -37.6935, 0.6", "3.06755, 281.889, -38.364, 0.6", "3.01926, 284.628, -38.7052, 0.6", "2.88933, 288.437, -39.1334, 0.6", "2.62497, 294.048, -39.6975, 0.6", "2.41157, 298.223, -40.0826, 0.6", "2.16654, 302.991, -40.4893, 0.6", "2.01916, 306.507, -40.7773, 0.48", "1.84768, 310.327, -41.1211, 0.48", "1.67099, 313.407, -41.4091, 0.48", "1.45604, 316.149, -41.669, 0.36", "1.00736, 321.09, -42.3523, 0.36", "0.58032, 325.378, -43.0647, 0.36", "0.215461, 329.162, -43.8327, 0.36", "-0.122841, 332.597, -44.5563, 0.36", "-0.507858, 336.961, -45.4482, 0.36", "-1.03166, 343.237, -46.6866, 0.36", "-1.29461, 346.773, -47.3214, 0.36", "-1.56457, 351.487, -48.0592, 0.36", "-1.69145, 355.951, -48.6656, 0.36", "-1.74738, 361.44, -49.2716, 0.36", "-1.72095, 365.547, -49.6845, 0.36", "-1.71316, 367.658, -49.8688, 0.36", "-1.68314, 373.284, -50.3431, 0.36", "-1.59587, 376.508, -50.7936, 0.36", "-1.46493, 380.877, -51.6269, 0.36", "-1.35845, 385.705, -52.7837, 0.36", "-1.26755, 389.115, -53.8703, 0.36", "-1.23659, 392.91, -55.2819, 0.36", "-1.29282, 400.135, -58.3522, 0.36", "-1.43923, 404.287, -60.1513, 0.36", "-1.65545, 408.072, -61.6836, 0.36", "-2.1292, 414.145, -63.8457, 0.36", "-2.53948, 418.761, -65.2226, 0.36", "-3.00332, 423.192, -66.2577, 0.12", "-3.54374, 428.439, -67.0204, 0.12", "-3.97787, 434.266, -67.6264, 0.12", "-4.20738, 438.74, -67.8913, 0.12", "-4.40934, 445.81, -68.0753, 0.12", "-4.37574, 450.363, -68.2004, 0.12", "-4.12134, 458.522, -68.5202, 0.12", "-3.66005, 465.851, -68.9753, 0.12", "-3.03494, 472.215, -69.5581, 0.12", "-2.64766, 475.086, -69.8676, 0.12", "-1.33343, 482.58, -70.8428, 0.12", "-0.325219, 487.161, -71.4954, 0.12", "0.831481, 491.309, -72.181, 0.12", "3.02411, 497.523, -73.2127, 0.12", "5.29301, 502.71, -73.9961, 0.12", "7.95432, 507.743, -74.7636, 0.12", "9.87886, 510.81, -75.2102, 0.12", "12.498, 514.53, -75.8017, 0.12", "15.0702, 518.076, -76.4614, 0.12", "17.5977, 521.371, -77.2614, 0.12", "20.2623, 524.875, -78.3644, 0.12", "21.5611, 526.957, -79.0916, 0.12", "22.9142, 529.981, -79.9965, 0.12", "24.2575, 534.902, -81.0052, 0.12", "24.9612, 539.502, -81.9547, 0.12", "25.0907, 541.665, -82.3719, 0.12", "25.2787, 549.005, -83.6127, 0.12", "25.3166, 555.418, -84.6105, 0.12", "25.1539, 562.104, -85.4369, 0.12", "24.7654, 568.427, -86.1152, 0.12", "24.1069, 574.059, -86.5232, 0.12" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "0.151925, 233.439, -34.4044, 0.36", "0.258509, 236.299, -35.077, 0.36", "0.36086, 239.11, -35.6481, 0.36", "0.51337, 242.755, -36.2317, 0.36", "0.691031, 246.794, -36.738, 0.36", "0.908941, 251.357, -37.236, 0.36", "1.03631, 253.626, -37.4319, 0.36", "1.42679, 257.847, -37.7199, 0.36", "1.9183, 262.332, -37.9844, 0.36", "2.35151, 266.251, -38.1652, 0.36", "2.75445, 270.162, -38.2857, 0.36", "3.21416, 275.162, -38.4055, 0.36", "3.74784, 282.31, -38.6949, 0.36", "3.9652, 287.268, -38.9747, 0.24", "4.04091, 290.713, -39.2462, 0.24", "4.06607, 295.259, -39.6396, 0.24", "4.03379, 296.908, -39.7884, 0.24", "3.85218, 300.827, -40.2042, 0.24", "3.3257, 307.456, -40.9223, 0.24", "3.15087, 309.334, -41.1741, 0.24", "2.84474, 312.55, -41.6137, 0.24", "2.56482, 315.747, -42.0025, 0.24", "2.26051, 319.794, -42.4242, 0.24", "1.94359, 324.613, -42.8187, 0.24", "1.64211, 329.316, -43.1638, 0.24", "1.3931, 334.153, -43.5076, 0.24", "1.25593, 338.377, -43.8141, 0.24", "1.22674, 340.122, -43.9237, 0.24", "1.24524, 343.76, -44.1009, 0.24", "1.40971, 346.962, -44.238, 0.24", "1.86231, 351.485, -44.434, 0.24", "2.29911, 355.063, -44.678, 0.24" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-39.5095, 68.3348, -43.7333, 0.48", "-39.3618, 69.7372, -44.7686, 0.48", "-39.3411, 72.2846, -46.3288, 0.48", "-39.5672, 74.8023, -47.6502, 0.48", "-39.7194, 76.2761, -48.4601, 0.48", "-39.9273, 77.7466, -49.3533, 0.48", "-40.2512, 79.6077, -50.4217, 0.36", "-40.6907, 81.7154, -51.6425, 0.6", "-41.1554, 83.59, -52.6991, 0.36", "-41.7502, 86.5208, -54.2864, 0.36", "-42.1338, 89.1053, -55.6381, 0.36", "-42.3333, 91.5589, -57.0281, 0.84", "-42.4227, 94.3608, -58.6408, 0.48", "-42.383, 95.3753, -59.2737, 0.48", "-42.2432, 96.8437, -60.1949, 0.36", "-42.0816, 98.6907, -61.383, 1.08", "-41.7158, 102.283, -63.9461, 0.6", "-41.6369, 103.233, -64.6675, 0.6", "-41.4358, 106.701, -67.334, 0.36", "-41.3572, 108.967, -69.0948, 0.72", "-41.3138, 111.642, -71.084, 0.72", "-41.285, 114.361, -72.9926, 0.36", "-41.3064, 116.524, -74.4392, 0.84", "-41.4541, 119.688, -76.5244, 0.36", "-41.5394, 121.115, -77.4232, 0.96", "-41.8961, 126.572, -80.762, 0.24", "-42.0361, 128.917, -82.1048, 0.72", "-42.3471, 132.643, -84.1806, 0.36", "-42.5491, 134.604, -85.3408, 1.69" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-39.5095, 68.3348, -43.7333, 0.36", "-40.3069, 69.2204, -45.1852, 0.36", "-41.5275, 70.8595, -47.4228, 0.36", "-42.3883, 72.4726, -49.4996, 0.36", "-44.1426, 75.5595, -53.096, 0.36", "-45.5816, 78.1443, -56.0138, 0.24", "-46.5203, 79.7845, -57.8659, 0.12", "-47.8416, 82.1084, -60.3611, 0.12", "-50.717, 87.1646, -65.6076, 0.12", "-52.8659, 90.1555, -69.2373, 0.12", "-54.5749, 92.2902, -72.1373, 0.12", "-55.5916, 93.4005, -73.6658, 0.12", "-56.6851, 94.5344, -75.2573, 0.12", "-57.1901, 95.033, -75.973, 0.12", "-66.2525, 103.689, -88.5517, 0.12", "-69.5974, 107.009, -93.4703, 0.12", "-73.643, 110.994, -99.2256, 0.12", "-78.0856, 115.555, -105.646, 0.12" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-57.3672, -2.72753, 8.9903, 0.24", "-59.7694, -3.27668, 9.39178, 0.24", "-61.1073, -3.55175, 9.59576, 0.24", "-63.2917, -3.9975, 9.8241, 0.36", "-64.7942, -4.2919, 9.91505, 0.36", "-66.4463, -4.4872, 10.0355, 0.36", "-67.3578, -4.56824, 10.1084, 0.36", "-69.1196, -4.68367, 10.1925, 0.36", "-71.605, -4.8268, 10.3314, 0.36", "-73.3796, -4.94086, 10.4364, 0.36", "-77.1941, -5.25585, 10.6605, 0.36", "-78.2496, -5.34344, 10.7228, 0.36", "-80.6203, -5.56439, 10.8762, 0.36", "-82.1842, -5.71842, 10.9908, 0.36", "-84.3988, -5.97215, 11.2127, 0.36", "-85.9485, -6.26447, 11.3599, 0.36", "-93.9928, -8.83766, 11.3655, 0.36", "-101.746, -12.1699, 11.4675, 0.36", "-109.49, -15.1632, 9.91773, 0.36", "-117.324, -16.6869, 7.15148, 0.36", "-124.714, -17.0803, 3.1021, 0.36", "-132.733, -18.9562, 1.21481, 0.36", "-140.452, -21.9157, -0.512593, 0.36", "-147.96, -25.4242, -2.12317, 0.36", "-155.222, -28.5761, -5.06872, 0.36", "-162.703, -32.1888, -6.55842, 0.36" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-57.3672, -2.72753, 8.9903, 0.24", "-56.8402, 0.775109, 7.4863, 0.24", "-56.7598, 1.77228, 7.1053, 0.24", "-56.5456, 3.86164, 6.37561, 0.24", "-56.4316, 4.83619, 6.06692, 0.24", "-55.6592, 10.269, 4.43519, 0.24", "-55.2142, 12.9012, 3.68455, 0.24", "-54.7138, 15.7075, 2.97332, 0.24", "-53.8574, 19.95, 1.96506, 0.24", "-53.2332, 22.6509, 1.38953, 0.24", "-52.5714, 25.3406, 0.799488, 0.24", "-52.1417, 26.9957, 0.458194, 0.24", "-51.8456, 28.112, 0.211046, 0.24", "-51.385, 29.7592, -0.235858, 0.24", "-50.5858, 32.6219, -1.03916, 0.24", "-48.9536, 38.1313, -2.60134, 0.24", "-47.9384, 41.4207, -3.4697, 0.24", "-46.8833, 44.5863, -4.3279, 0.24", "-45.2402, 49.3391, -5.62333, 0.24", "-43.4339, 54.3832, -6.99085, 0.24", "-42.5948, 56.5309, -7.54332, 0.24", "-41.2336, 59.4867, -8.17819, 0.24", "-39.1484, 63.7147, -9.14542, 0.24" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "2.29911, 355.063, -44.678, 0.24", "2.5989, 361.07, -44.5015, 0.24", "2.71971, 365.183, -44.374, 0.24", "2.77513, 369.457, -44.2323, 0.24", "2.80573, 376.754, -43.9547, 0.24", "2.80149, 383.685, -43.6564, 0.24", "2.79716, 387.471, -43.4635, 0.24", "2.65747, 392.338, -43.0637, 0.24", "2.46749, 398.157, -42.4464, 0.24", "2.24522, 402.923, -41.8867, 0.24", "2.00287, 406.729, -41.4585, 0.24", "1.50663, 411.744, -41.0505, 0.24", "0.898231, 416.323, -40.9135, 0.24", "0.182782, 420.524, -41.0335, 0.24", "-0.5019, 423.758, -41.3388, 0.24", "-1.46704, 428.174, -42.1071, 0.24", "-2.73753, 433.886, -43.4436, 0.24", "-4.44122, 440.591, -45.0126, 0.24", "-5.70252, 445.461, -46.0609, 0.24", "-8.08638, 453.469, -47.1826, 0.24", "-9.64065, 458.306, -47.5335, 0.24", "-11.1032, 463.426, -47.6037, 0.24", "-13.8313, 472.992, -47.0338, 0.24", "-15.511, 479.079, -46.3281, 0.24", "-17.2666, 486.215, -45.3465, 0.24", "-17.887, 489.064, -44.926, 0.24", "-20.0549, 498.641, -43.4123, 0.24", "-21.263, 505.002, -42.5502, 0.24", "-21.8158, 509.439, -42.2661, 0.24", "-22.4434, 515.717, -42.195, 0.24", "-22.6806, 520.195, -42.4935, 0.24", "-23.1004, 525.575, -42.8213, 0.24" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "2.29911, 355.063, -44.678, 0.24", "2.08585, 357.977, -45.4475, 0.24", "1.92741, 360.142, -46.0193, 0.24", "1.74954, 362.573, -46.6611, 0.24", "1.51079, 365.835, -47.5227, 0.24", "1.1739, 370.438, -48.7383, 0.24", "1.0018, 372.79, -49.3593, 0.24" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-42.5491, 134.604, -85.3408, 0.48", "-48.9977, 140.374, -91.6785, 0.48", "-59.5066, 149.608, -100.296, 0.12", "-67.8305, 156.777, -106.233, 0.24", "-73.013, 161.237, -109.324, 0.24", "-76.2614, 164.161, -110.917, 0.24", "-80.3498, 167.933, -112.815, 0.24", "-84.1206, 171.583, -113.878, 0.24", "-86.4164, 173.669, -114.377, 0.24", "-92.027, 178.45, -116.638, 0.24", "-98.7437, 184.246, -120.266, 0.24", "-102.275, 187.517, -122.701, 0.24", "-105.18, 190.561, -125.27, 0.24", "-112.078, 198.356, -132.816, 0.24", "-117.612, 204.494, -139.499, 0.24", "-119.199, 206.141, -141.447, 0.24", "-121.934, 208.763, -144.677, 0.24", "-125.658, 212.301, -148.568, 0.24", "-128.575, 215.081, -151.326, 0.24", "-135.525, 221.456, -156.577, 0.24", "-139.524, 224.722, -159.239, 0.24", "-144.078, 228.111, -162.134, 0.24", "-147.479, 230.38, -164.145, 0.24", "-151.825, 233.119, -166.456, 0.24", "-156.029, 235.991, -168.693, 0.24", "-160.496, 239.723, -171.446, 0.24" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-42.5491, 134.604, -85.3408, 0.48", "-39.9391, 139.852, -90.2514, 0.48", "-36.1626, 147.182, -97.1557, 0.24", "-32.969, 153.65, -103.062, 0.24", "-29.7965, 160.469, -109.24, 0.24", "-28.1125, 164.341, -112.72, 0.24", "-26.1837, 168.777, -116.706, 0.24", "-23.9785, 174.081, -121.411, 0.24", "-22.9054, 176.579, -123.608, 0.24", "-20.925, 181.158, -127.556, 0.24", "-19.0295, 187.019, -132.591, 0.24" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-162.703, -32.1888, -6.55842, 0.24", "-170.278, -34.8662, -7.4073, 0.24", "-177.408, -38.5513, -8.23529, 0.24", "-184.519, -42.0049, -9.87659, 0.24" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-162.703, -32.1888, -6.55842, 0.24", "-170.386, -33.1812, -8.12511, 0.24", "-178.269, -33.3265, -8.60395, 0.24", "-186.005, -32.021, -7.8228, 0.24", "-193.158, -28.9804, -6.70547, 0.24" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "1.0018, 372.79, -49.3593, 0.24", "0.200937, 377.215, -49.2325, 0.24", "-0.410679, 380.595, -49.1357, 0.24", "-0.862991, 383.095, -49.064, 0.24", "-1.22993, 385.122, -49.0059, 0.24", "-1.8838, 388.735, -48.9024, 0.24" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "1.0018, 372.79, -49.3593, 0.24", "-0.118185, 377.762, -49.39, 0.24", "-1.55393, 382.439, -50.0161, 0.24", "-2.81275, 386.516, -51.0405, 0.24", "-3.94769, 389.752, -51.9909, 0.24", "-4.83977, 392.617, -52.968, 0.24", "-5.71669, 395.798, -54.0734, 0.24", "-7.5718, 402.09, -56.4156, 0.24", "-8.93714, 407.162, -58.545, 0.24", "-9.89002, 411.393, -60.3836, 0.24", "-10.5391, 416.506, -62.4074, 0.24", "-10.7238, 419.685, -63.431, 0.24", "-10.8369, 421.149, -63.8441, 0.24", "-11.1477, 424.273, -64.6391, 0.24", "-11.4926, 426.876, -65.2609, 0.24", "-12.8757, 435.544, -67.3423, 0.24", "-13.5773, 439.024, -68.1534, 0.24", "-16.7004, 453.696, -71.6966, 0.24", "-17.5508, 457.759, -72.6261, 0.24", "-18.4393, 462.375, -73.6168, 0.24", "-19.1442, 466.791, -74.503, 0.24", "-19.538, 469.822, -75.0305, 0.24", "-19.8491, 474.807, -75.6682, 0.24", "-19.8057, 479.291, -75.9461, 0.24", "-19.6307, 485.042, -76.2641, 0.24", "-19.2675, 492.522, -76.6535, 0.24", "-18.7675, 500.259, -77.0115, 0.24", "-18.1496, 509.297, -77.4222, 0.24", "-17.7135, 516.484, -77.7235, 0.24" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-193.158, -28.9804, -6.70547, 0.24", "-203.236, -28.1926, -8.09516, 0.24", "-213.163, -26.3438, -9.45858, 0.24", "-223.096, -24.3175, -10.4992, 0.24", "-232.795, -22.5202, -13.0096, 0.24", "-242.001, -19.1961, -15.68, 0.24", "-251.655, -17.4875, -18.4121, 0.24" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-193.158, -28.9804, -6.70547, 0.24", "-200.927, -28.113, -6.78438, 0.24", "-208.645, -27.3911, -7.7815, 0.24", "-216.233, -26.4992, -9.40603, 0.24", "-224.009, -26.9753, -10.1865, 0.24", "-231.817, -26.9457, -9.60032, 0.24", "-239.593, -26.5965, -10.3682, 0.24", "-247.133, -25.0371, -11.6228, 0.24", "-254.431, -22.8589, -13.2361, 0.24", "-261.783, -20.3677, -13.8366, 0.24", "-269.045, -17.6555, -14.4957, 0.24", "-276.461, -15.2678, -14.5631, 0.24" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_44", "dend_35", "dend_0", "dend_59", "dend_56", "dend_54", "dend_45", "dend_37", "dend_36", "dend_20", "dend_1", "dend_58", "dend_57", "dend_51", "dend_46", "dend_43", "dend_38", "dend_32", "dend_21", "dend_15", "dend_2", "dend_53", "dend_52", "dend_50", "dend_47", "dend_40", "dend_39", "dend_34", "dend_33", "dend_31", "dend_22", "dend_19", "dend_16", "dend_8", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_24", "dend_23", "dend_18", "dend_17", "dend_14", "dend_9", "dend_5", "dend_4", "dend_26", "dend_25", "dend_13", "dend_10", "dend_7", "dend_6", "dend_30", "dend_27", "dend_12", "dend_11", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_44", "dend_35", "dend_0", "dend_59", "dend_56", "dend_54", "dend_45", "dend_37", "dend_36", "dend_20", "dend_1", "dend_58", "dend_57", "dend_51", "dend_46", "dend_43", "dend_38", "dend_32", "dend_21", "dend_15", "dend_2", "dend_53", "dend_52", "dend_50", "dend_47", "dend_40", "dend_39", "dend_34", "dend_33", "dend_31", "dend_22", "dend_19", "dend_16", "dend_8", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_24", "dend_23", "dend_18", "dend_17", "dend_14", "dend_9", "dend_5", "dend_4", "dend_26", "dend_25", "dend_13", "dend_10", "dend_7", "dend_6", "dend_30", "dend_27", "dend_12", "dend_11", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_0", "dend_0", "axon_0", "axon_0", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_45", "dend_45", "dend_45", "dend_45", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_20", "dend_1", "dend_1", "axon_1", "axon_1", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_2", "dend_2", "dend_2", "dend_2", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L6_NBC_750f7ba17d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_44
create dend_54
public dend_54
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_20, id: dend_20, parent: dend_0
create dend_20
public dend_20
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_32, id: dend_32, parent: dend_20
create dend_32
public dend_32
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_1
create dend_15
public dend_15
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_21
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_8
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_0, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_1, dend_1, axon_1, axon_1, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.4499999174985625)
    connect dend_44(0), soma_0(0.4499999174985625)
    connect dend_35(0), soma_0(0.4499999174985625)
    connect dend_0(0), soma_0(0.4499999174985625)
    connect axon_0(0), soma_0(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_20(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_32(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_14(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.18133, 10.1802, -0.0136132, 4.51632 ) }
    soma_0 { pt3dadd( -3.71511, 9.17715, -0.012728, 5.89932 ) }
    soma_0 { pt3dadd( -3.24888, 8.1741, -0.0118428, 6.73586 ) }
    soma_0 { pt3dadd( -2.78266, 7.17105, -0.0109576, 7.77662 ) }
    soma_0 { pt3dadd( -2.31644, 6.16799, -0.0100724, 8.83653 ) }
    soma_0 { pt3dadd( -1.85022, 5.16494, -0.00918717, 9.98865 ) }
    soma_0 { pt3dadd( -1.384, 4.16189, -0.00830196, 11.1793 ) }
    soma_0 { pt3dadd( -0.917776, 3.15884, -0.00741676, 12.3766 ) }
    soma_0 { pt3dadd( -0.451555, 2.15579, -0.00653155, 13.3418 ) }
    soma_0 { pt3dadd( 0.0146667, 1.15274, -0.00564635, 14.1684 ) }
    soma_0 { pt3dadd( 0.480888, 0.149684, -0.00476114, 14.5557 ) }
    soma_0 { pt3dadd( 0.94711, -0.853367, -0.00387593, 14.9116 ) }
    soma_0 { pt3dadd( 1.41333, -1.85642, -0.00299073, 14.9294 ) }
    soma_0 { pt3dadd( 1.87955, -2.85947, -0.00210552, 14.4593 ) }
    soma_0 { pt3dadd( 2.34577, -3.86252, -0.00122032, 13.9684 ) }
    soma_0 { pt3dadd( 2.812, -4.86557, -3.35112E-4, 13.2352 ) }
    soma_0 { pt3dadd( 3.27822, -5.86863, 5.50094E-4, 12.4898 ) }
    soma_0 { pt3dadd( 3.74444, -6.87168, 0.0014353, 11.1742 ) }
    soma_0 { pt3dadd( 4.21066, -7.87473, 0.0023205, 8.60206 ) }
    soma_0 { pt3dadd( 4.67688, -8.87778, 0.00320571, 5.94918 ) }
    soma_0 { pt3dadd( 5.1431, -9.88083, 0.00409092, 3.45007 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -4.86983, -2.55541, 10.4413, 1.08 ) }
    dend_55 { pt3dadd( -7.33718, -3.55309, 10.462, 1.08 ) }
    dend_55 { pt3dadd( -9.30854, -4.44984, 10.4763, 0.96 ) }
    dend_55 { pt3dadd( -10.3148, -4.95869, 10.4826, 0.96 ) }
    dend_55 { pt3dadd( -12.6507, -6.20494, 10.6636, 0.84 ) }
    dend_55 { pt3dadd( -14.8165, -7.47233, 10.9807, 0.84 ) }
    dend_55 { pt3dadd( -17.3268, -9.1012, 11.3922, 0.84 ) }
    dend_55 { pt3dadd( -19.534, -10.5239, 11.8045, 0.84 ) }
    dend_55 { pt3dadd( -21.3647, -11.7567, 12.1974, 0.84 ) }
    dend_55 { pt3dadd( -23.8408, -13.6086, 12.8198, 0.84 ) }
    dend_55 { pt3dadd( -25.5125, -15.0998, 13.3526, 0.84 ) }
    dend_55 { pt3dadd( -27.8492, -17.55, 14.3266, 0.84 ) }
    dend_55 { pt3dadd( -37.4099, -22.5853, 16.3668, 0.84 ) }
    dend_55 { pt3dadd( -45.5362, -29.8876, 16.6955, 0.84 ) }
    dend_55 { pt3dadd( -52.8447, -37.9261, 15.7723, 0.84 ) }
    dend_55 { pt3dadd( -59.4031, -46.5146, 14.4943, 0.84 ) }
    dend_55 { pt3dadd( -65.8574, -55.2598, 14.8535, 0.84 ) }
    dend_55 { pt3dadd( -71.148, -64.7115, 15.3761, 0.84 ) }
    dend_55 { pt3dadd( -77.4848, -73.5334, 15.8409, 0.84 ) }
    dend_55 { pt3dadd( -83.4877, -82.5527, 15.0456, 0.84 ) }
    dend_55 { pt3dadd( -89.0559, -91.8276, 15.907, 0.84 ) }
    dend_55 { pt3dadd( -94.6241, -101.135, 16.2474, 0.84 ) }
    dend_55 { pt3dadd( -100.077, -110.472, 17.1365, 0.84 ) }
    dend_55 { pt3dadd( -105.312, -119.851, 18.6512, 0.84 ) }
    dend_55 { pt3dadd( -111.497, -128.292, 21.6584, 0.84 ) }
    dend_55 { pt3dadd( -117.391, -136.838, 24.9249, 0.84 ) }
    dend_55 { pt3dadd( -123.101, -145.934, 26.538, 0.84 ) }
    dend_55 { pt3dadd( -128.189, -155.485, 25.9058, 0.84 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 49/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 4.44017, -8.68816, -1.30865, 2.77 ) }
    dend_44 { pt3dadd( 4.89413, -9.9901, -1.28989, 2.77 ) }
    dend_44 { pt3dadd( 5.36165, -11.3308, -1.27057, 1.69 ) }
    dend_44 { pt3dadd( 5.89002, -12.8461, -1.24874, 1.69 ) }
    dend_44 { pt3dadd( 6.33053, -14.1095, -1.23054, 2.29 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 54/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 8.18017, -1.26841, -14.5587, 2.65 ) }
    dend_35 { pt3dadd( 10.7007, -3.03435, -16.2901, 2.05 ) }
    dend_35 { pt3dadd( 16.4413, -7.05649, -20.2336, 2.41 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 57/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.00983, 11.5821, 0.0313539, 4.22 ) }
    dend_0 { pt3dadd( -5.997, 15.6968, 0.0313539, 4.22 ) }
    dend_0 { pt3dadd( -6.52504, 16.7902, 0.0313539, 4.22 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 60/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 5.1431, -9.88083, 0.00409092, 1.16335 ) }
    axon_0 { pt3dadd( 11.4656, -23.4833, 0.00409092, 1.16335 ) }
    axon_0 { pt3dadd( 17.788, -37.0857, 0.00409092, 1.16335 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 63/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -128.189, -155.485, 25.9058, 0.24 ) }
    dend_59 { pt3dadd( -134.545, -156.812, 22.3724, 0.24 ) }
    dend_59 { pt3dadd( -141.203, -157.916, 19.3504, 0.24 ) }
    dend_59 { pt3dadd( -148.033, -158.557, 16.586, 0.24 ) }
    dend_59 { pt3dadd( -154.809, -157.92, 13.6987, 0.24 ) }
    dend_59 { pt3dadd( -161.38, -157.603, 10.3204, 0.24 ) }
    dend_59 { pt3dadd( -167.734, -156.859, 6.61587, 0.24 ) }
    dend_59 { pt3dadd( -173.578, -156.591, 2.09207, 0.24 ) }
    dend_59 { pt3dadd( -178.897, -155.988, -3.00651, 0.24 ) }
    dend_59 { pt3dadd( -183.709, -154.267, -8.33258, 0.24 ) }
    dend_59 { pt3dadd( -188.728, -152.181, -13.3178, 0.24 ) }
    dend_59 { pt3dadd( -193.599, -151.113, -18.7696, 0.24 ) }
    dend_59 { pt3dadd( -198.424, -148.926, -23.8983, 0.24 ) }
    dend_59 { pt3dadd( -202.642, -145.236, -28.6372, 0.24 ) }
    dend_59 { pt3dadd( -206.708, -142.402, -34.078, 0.24 ) }
    dend_59 { pt3dadd( -211.324, -140.104, -39.3458, 0.24 ) }
    dend_59 { pt3dadd( -215.347, -136.916, -44.6083, 0.24 ) }
    dend_59 { pt3dadd( -220.307, -134.858, -49.6643, 0.24 ) }
    dend_59 { pt3dadd( -224.134, -133.956, -55.9216, 0.24 ) }
    dend_59 { pt3dadd( -226.978, -132.909, -62.6601, 0.24 ) }
    dend_59 { pt3dadd( -228.849, -132.74, -69.8124, 0.24 ) }
    dend_59 { pt3dadd( -229.707, -131.999, -77.1162, 0.24 ) }
    dend_59 { pt3dadd( -230.461, -130.406, -84.2844, 0.24 ) }
    dend_59 { pt3dadd( -232.722, -127.653, -90.726, 0.24 ) }
    dend_59 { pt3dadd( -235.723, -125.877, -97.2289, 0.24 ) }
    dend_59 { pt3dadd( -239.189, -123.804, -103.4, 0.24 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 89/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -128.189, -155.485, 25.9058, 0.24 ) }
    dend_56 { pt3dadd( -131.32, -167.319, 28.7469, 0.24 ) }
    dend_56 { pt3dadd( -132.711, -178.751, 33.8798, 0.24 ) }
    dend_56 { pt3dadd( -133.938, -189.702, 40.0623, 0.24 ) }
    dend_56 { pt3dadd( -133.226, -201.598, 44.106, 0.24 ) }
    // Section: dend_54, id: dend_54, parent: dend_44 (entry count 94/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 6.33053, -14.1095, -1.23054, 0.84 ) }
    dend_54 { pt3dadd( 4.11088, -23.129, 0.219011, 0.84 ) }
    dend_54 { pt3dadd( 3.37838, -26.2635, 0.616885, 0.84 ) }
    dend_54 { pt3dadd( 2.658, -29.5648, 0.9728, 0.84 ) }
    dend_54 { pt3dadd( 2.16612, -32.1309, 0.7679, 0.84 ) }
    dend_54 { pt3dadd( 1.83168, -34.7614, 0.203416, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_54 { pt3dadd( 1.59085, -38.1574, -0.781025, 0.72 ) }
    dend_54 { pt3dadd( 1.63724, -40.0536, -1.94932, 0.72 ) }
    dend_54 { pt3dadd( 1.74991, -41.2361, -2.8476, 0.72 ) }
    dend_54 { pt3dadd( 2.8006, -48.8534, -9.47715, 0.72 ) }
    dend_54 { pt3dadd( 3.18356, -51.6228, -12.0798, 0.72 ) }
    dend_54 { pt3dadd( 3.33797, -52.9001, -13.346, 0.72 ) }
    dend_54 { pt3dadd( 3.68394, -56.9632, -17.4137, 0.6 ) }
    dend_54 { pt3dadd( 3.82833, -60.0231, -20.3321, 0.6 ) }
    dend_54 { pt3dadd( 3.88555, -62.9126, -22.8783, 0.6 ) }
    dend_54 { pt3dadd( 3.94601, -65.4266, -24.7075, 0.6 ) }
    dend_54 { pt3dadd( 4.08384, -66.9728, -25.9566, 0.6 ) }
    dend_54 { pt3dadd( 4.32394, -68.3882, -27.2618, 0.6 ) }
    dend_54 { pt3dadd( 4.55378, -69.3773, -28.2066, 0.6 ) }
    dend_54 { pt3dadd( 5.49998, -72.9658, -31.8286, 0.6 ) }
    dend_54 { pt3dadd( 6.19787, -75.2614, -34.2246, 0.6 ) }
    dend_54 { pt3dadd( 7.46471, -79.2929, -38.6995, 0.6 ) }
    dend_54 { pt3dadd( 8.4769, -83.136, -43.096, 0.6 ) }
    dend_54 { pt3dadd( 8.80406, -84.8737, -45.0459, 0.6 ) }
    dend_54 { pt3dadd( 8.88789, -85.8838, -46.2187, 0.48 ) }
    dend_54 { pt3dadd( 8.88268, -87.0604, -47.5326, 0.48 ) }
    dend_54 { pt3dadd( 8.46134, -90.8155, -51.5114, 0.48 ) }
    dend_54 { pt3dadd( 8.21387, -92.4041, -53.0198, 0.48 ) }
    dend_54 { pt3dadd( 7.88631, -94.766, -55.0543, 0.48 ) }
    dend_54 { pt3dadd( 7.12157, -100.701, -59.9864, 0.24 ) }
    dend_54 { pt3dadd( 6.97525, -102.424, -61.3312, 0.24 ) }
    dend_54 { pt3dadd( 6.78493, -105.695, -63.6821, 0.24 ) }
    dend_54 { pt3dadd( 6.73854, -107.887, -65.0912, 0.24 ) }
    dend_54 { pt3dadd( 6.79624, -110.664, -66.648, 0.24 ) }
    dend_54 { pt3dadd( 6.89246, -112.339, -67.6601, 0.36 ) }
    dend_54 { pt3dadd( 7.54872, -118.504, -71.6273, 0.36 ) }
    dend_54 { pt3dadd( 7.59975, -118.852, -71.8818, 0.36 ) }
    dend_54 { pt3dadd( 7.85116, -120.187, -73.022, 0.96 ) }
    dend_54 { pt3dadd( 8.69072, -124.184, -76.6691, 0.36 ) }
    dend_54 { pt3dadd( 10.4775, -131.776, -84.2255, 1.81 ) }
    dend_54 { pt3dadd( 11.4522, -135.588, -88.1699, 0.6 ) }
    dend_54 { pt3dadd( 12.2621, -138.709, -91.5282, 0.6 ) }
    dend_54 { pt3dadd( 13.4891, -143.289, -96.4028, 0.36 ) }
    dend_54 { pt3dadd( 14.1021, -145.142, -98.9389, 0.96 ) }
    dend_54 { pt3dadd( 15.13, -147.79, -102.972, 0.36 ) }
    dend_54 { pt3dadd( 15.7876, -149.373, -105.455, 0.96 ) }
    dend_54 { pt3dadd( 17.6855, -153.729, -112.671, 0.36 ) }
    dend_54 { pt3dadd( 18.4382, -155.387, -115.597, 1.57 ) }
    dend_54 { pt3dadd( 23.886, -166.994, -137.044, 0.72 ) }
    dend_54 { pt3dadd( 24.7102, -168.736, -140.549, 0.72 ) }
    dend_54 { pt3dadd( 24.8041, -168.929, -140.966, 1.45 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 45/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 6.33053, -14.1095, -1.23054, 1.45 ) }
    dend_45 { pt3dadd( 9.27103, -15.368, -0.725772, 1.45 ) }
    dend_45 { pt3dadd( 11.7934, -16.4474, -0.292797, 1.45 ) }
    dend_45 { pt3dadd( 14.2673, -17.5062, 0.131873, 1.45 ) }
    dend_45 { pt3dadd( 16.1846, -18.3268, 0.461001, 1.45 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 50/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 16.4413, -7.05649, -20.2336, 1.33 ) }
    dend_37 { pt3dadd( 19.644, -6.18138, -20.9433, 1.33 ) }
    dend_37 { pt3dadd( 25.0861, -4.69432, -22.1491, 1.33 ) }
    dend_37 { pt3dadd( 30.6843, -3.16466, -23.3896, 1.81 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 54/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 16.4413, -7.05649, -20.2336, 0.72 ) }
    dend_36 { pt3dadd( 17.2848, -8.89196, -21.0087, 0.72 ) }
    dend_36 { pt3dadd( 17.9655, -10.7322, -21.6736, 0.72 ) }
    dend_36 { pt3dadd( 18.6778, -12.417, -22.2476, 0.72 ) }
    dend_36 { pt3dadd( 19.3464, -13.7969, -22.7014, 0.6 ) }
    dend_36 { pt3dadd( 20.2589, -15.6878, -23.3411, 0.6 ) }
    dend_36 { pt3dadd( 21.1305, -17.4509, -23.954, 0.6 ) }
    dend_36 { pt3dadd( 21.854, -18.8298, -24.4182, 0.36 ) }
    dend_36 { pt3dadd( 22.9843, -20.9721, -25.1552, 0.48 ) }
    dend_36 { pt3dadd( 23.6903, -22.3141, -25.606, 0.36 ) }
    dend_36 { pt3dadd( 25.1283, -25.0842, -26.7034, 0.36 ) }
    dend_36 { pt3dadd( 26.4275, -27.5513, -27.9882, 0.36 ) }
    dend_36 { pt3dadd( 27.3475, -29.4707, -28.9864, 0.36 ) }
    dend_36 { pt3dadd( 28.2041, -31.327, -29.9947, 0.36 ) }
    dend_36 { pt3dadd( 29.8807, -35.3109, -32.2237, 0.36 ) }
    dend_36 { pt3dadd( 31.4501, -39.2389, -34.5068, 0.36 ) }
    dend_36 { pt3dadd( 32.9704, -43.1102, -36.8834, 0.24 ) }
    dend_36 { pt3dadd( 34.1043, -46.3966, -39.0471, 0.24 ) }
    // Section: dend_20, id: dend_20, parent: dend_0 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -6.52504, 16.7902, 0.0313539, 1.81 ) }
    dend_20 { pt3dadd( -11.1284, 17.04, 3.92388, 1.81 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 74/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.52504, 16.7902, 0.0313539, 2.65 ) }
    dend_1 { pt3dadd( -6.0328, 20.8248, -0.0420587, 2.65 ) }
    dend_1 { pt3dadd( -5.81058, 22.6462, -0.0751999, 2.65 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 77/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 17.788, -37.0857, 0.00409092, 0.501057 ) }
    axon_1 { pt3dadd( 24.1105, -50.6882, 0.00409092, 0.501057 ) }
    axon_1 { pt3dadd( 30.4329, -64.2906, 0.00409092, 0.501057 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 80/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -133.226, -201.598, 44.106, 0.24 ) }
    dend_58 { pt3dadd( -134.355, -213.177, 47.8738, 0.24 ) }
    dend_58 { pt3dadd( -138.15, -224.412, 50.8591, 0.24 ) }
    dend_58 { pt3dadd( -140.317, -235.755, 54.9102, 0.24 ) }
    dend_58 { pt3dadd( -142.483, -247.652, 56.4466, 0.24 ) }
    dend_58 { pt3dadd( -142.94, -259.631, 58.7051, 0.24 ) }
    dend_58 { pt3dadd( -144.628, -271.524, 60.8263, 0.24 ) }
    dend_58 { pt3dadd( -148.538, -283.057, 61.3904, 0.24 ) }
    dend_58 { pt3dadd( -153.986, -293.923, 60.3268, 0.24 ) }
    dend_58 { pt3dadd( -161.211, -303.641, 62.3171, 0.24 ) }
    dend_58 { pt3dadd( -167.236, -314.27, 62.702, 0.24 ) }
    dend_58 { pt3dadd( -174.583, -324.054, 63.4677, 0.24 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 92/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -133.226, -201.598, 44.106, 0.24 ) }
    dend_57 { pt3dadd( -133.857, -209.994, 46.6863, 0.24 ) }
    dend_57 { pt3dadd( -133.96, -218.205, 49.9201, 0.24 ) }
    dend_57 { pt3dadd( -134.931, -225.607, 54.7008, 0.24 ) }
    dend_57 { pt3dadd( -135.051, -233.851, 57.8395, 0.24 ) }
    dend_57 { pt3dadd( -136.664, -241.965, 60.8867, 0.24 ) }
    dend_57 { pt3dadd( -140.194, -249.382, 64.134, 0.24 ) }
    dend_57 { pt3dadd( -144.228, -256.271, 67.9647, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_57 { pt3dadd( -150.1, -262.109, 71.1468, 0.24 ) }
    dend_57 { pt3dadd( -156.333, -267.899, 73.633, 0.24 ) }
    dend_57 { pt3dadd( -162.511, -274.09, 74.8966, 0.24 ) }
    dend_57 { pt3dadd( -168.737, -279.853, 77.4672, 0.24 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 4/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 16.1846, -18.3268, 0.461001, 0.36 ) }
    dend_51 { pt3dadd( 17.3444, -19.6301, -0.038354, 0.36 ) }
    dend_51 { pt3dadd( 19.1707, -21.6824, -0.824689, 0.36 ) }
    dend_51 { pt3dadd( 20.9225, -23.651, -1.57896, 0.36 ) }
    dend_51 { pt3dadd( 22.2518, -25.1449, -2.15132, 0.6 ) }
    dend_51 { pt3dadd( 25.016, -28.2512, -3.34149, 0.6 ) }
    dend_51 { pt3dadd( 26.4695, -29.8846, -3.96732, 1.08 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 11/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 16.1846, -18.3268, 0.461001, 0.84 ) }
    dend_46 { pt3dadd( 18.0769, -19.3607, 2.26408, 0.84 ) }
    dend_46 { pt3dadd( 20.2019, -20.5824, 4.21712, 0.84 ) }
    dend_46 { pt3dadd( 21.7218, -21.4833, 5.51503, 0.72 ) }
    dend_46 { pt3dadd( 24.2292, -22.9854, 7.51417, 0.72 ) }
    dend_46 { pt3dadd( 29.0945, -26.033, 11.1531, 0.72 ) }
    dend_46 { pt3dadd( 31.3805, -27.5759, 12.7652, 0.6 ) }
    dend_46 { pt3dadd( 33.1126, -28.8877, 13.9703, 0.6 ) }
    dend_46 { pt3dadd( 34.6445, -30.2059, 14.9138, 0.6 ) }
    dend_46 { pt3dadd( 35.5462, -31.1177, 15.393, 0.6 ) }
    dend_46 { pt3dadd( 37.1431, -32.8965, 15.9466, 0.36 ) }
    dend_46 { pt3dadd( 38.8073, -34.7392, 16.1381, 0.36 ) }
    dend_46 { pt3dadd( 40.1293, -36.1449, 16.3781, 0.36 ) }
    dend_46 { pt3dadd( 41.5382, -37.6758, 16.8804, 0.36 ) }
    dend_46 { pt3dadd( 42.6344, -38.7478, 17.4262, 0.36 ) }
    dend_46 { pt3dadd( 44.0771, -39.9376, 18.2905, 0.36 ) }
    dend_46 { pt3dadd( 44.9861, -40.5279, 18.8946, 0.36 ) }
    dend_46 { pt3dadd( 48.2393, -42.1061, 21.1381, 0.36 ) }
    dend_46 { pt3dadd( 50.3918, -42.9971, 22.5821, 0.36 ) }
    dend_46 { pt3dadd( 52.4604, -43.7662, 24.0548, 0.36 ) }
    dend_46 { pt3dadd( 53.8029, -44.2615, 25.0588, 0.36 ) }
    dend_46 { pt3dadd( 54.532, -44.555, 25.6129, 0.36 ) }
    dend_46 { pt3dadd( 55.6841, -45.058, 26.3724, 0.36 ) }
    dend_46 { pt3dadd( 57.6463, -45.7242, 26.9936, 0.36 ) }
    dend_46 { pt3dadd( 66.3567, -51.6636, 34.3024, 0.36 ) }
    dend_46 { pt3dadd( 73.8981, -57.0723, 43.1755, 0.36 ) }
    dend_46 { pt3dadd( 81.0598, -61.8994, 52.6926, 0.36 ) }
    dend_46 { pt3dadd( 86.6617, -68.1406, 62.3874, 0.36 ) }
    dend_46 { pt3dadd( 90.7264, -75.6281, 71.9173, 0.36 ) }
    dend_46 { pt3dadd( 96.1176, -81.6118, 81.8981, 0.36 ) }
    dend_46 { pt3dadd( 101.483, -88.4251, 91.3166, 0.36 ) }
    dend_46 { pt3dadd( 107.541, -96.6542, 98.9608, 0.36 ) }
    dend_46 { pt3dadd( 112.226, -105.361, 107.0, 0.36 ) }
    dend_46 { pt3dadd( 115.753, -115.288, 114.087, 0.36 ) }
    dend_46 { pt3dadd( 119.253, -125.186, 121.229, 0.36 ) }
    dend_46 { pt3dadd( 122.059, -134.819, 129.028, 0.36 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 47/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 30.6843, -3.16466, -23.3896, 1.32 ) }
    dend_43 { pt3dadd( 32.1601, -1.49823, -24.9999, 1.32 ) }
    dend_43 { pt3dadd( 33.3134, -0.333136, -26.2777, 1.32 ) }
    dend_43 { pt3dadd( 34.6288, 0.815223, -27.7254, 1.2 ) }
    dend_43 { pt3dadd( 36.3961, 2.15992, -29.7722, 1.08 ) }
    dend_43 { pt3dadd( 38.3008, 3.6968, -32.3911, 0.96 ) }
    dend_43 { pt3dadd( 40.1443, 5.29402, -35.1542, 0.96 ) }
    dend_43 { pt3dadd( 40.6394, 5.75433, -36.0364, 0.96 ) }
    dend_43 { pt3dadd( 41.3006, 6.44106, -37.3602, 0.96 ) }
    dend_43 { pt3dadd( 42.0297, 7.39662, -39.0837, 0.96 ) }
    dend_43 { pt3dadd( 43.5409, 10.0995, -43.3476, 0.96 ) }
    dend_43 { pt3dadd( 43.9473, 11.0719, -44.6972, 0.96 ) }
    dend_43 { pt3dadd( 44.467, 12.4499, -46.414, 0.96 ) }
    dend_43 { pt3dadd( 44.8043, 13.182, -47.3022, 0.84 ) }
    dend_43 { pt3dadd( 45.7753, 14.7538, -49.2047, 0.72 ) }
    dend_43 { pt3dadd( 46.2422, 15.2935, -49.8733, 0.72 ) }
    dend_43 { pt3dadd( 48.1302, 16.8519, -51.9896, 0.84 ) }
    dend_43 { pt3dadd( 49.2751, 17.7205, -53.1804, 1.08 ) }
    dend_43 { pt3dadd( 51.2268, 19.1313, -55.0244, 1.08 ) }
    dend_43 { pt3dadd( 53.5425, 20.7089, -57.0173, 1.08 ) }
    dend_43 { pt3dadd( 54.4728, 21.2916, -57.7797, 0.96 ) }
    dend_43 { pt3dadd( 56.1334, 22.3462, -59.2974, 0.84 ) }
    dend_43 { pt3dadd( 57.0077, 22.963, -60.2376, 0.84 ) }
    dend_43 { pt3dadd( 57.8978, 23.6393, -61.3257, 0.84 ) }
    dend_43 { pt3dadd( 58.3852, 24.0146, -61.9803, 0.84 ) }
    dend_43 { pt3dadd( 60.3716, 25.4374, -64.6339, 0.84 ) }
    dend_43 { pt3dadd( 62.4328, 26.8936, -67.5438, 0.84 ) }
    dend_43 { pt3dadd( 64.3519, 28.2498, -70.3526, 2.16 ) }
    dend_43 { pt3dadd( 64.8854, 28.6395, -71.1408, 2.16 ) }
    dend_43 { pt3dadd( 66.8129, 30.1421, -73.892, 0.72 ) }
    dend_43 { pt3dadd( 67.5353, 30.7568, -74.8221, 0.72 ) }
    dend_43 { pt3dadd( 69.1646, 32.2918, -76.6186, 0.72 ) }
    dend_43 { pt3dadd( 70.59, 33.6455, -77.9543, 0.72 ) }
    dend_43 { pt3dadd( 71.2024, 34.2265, -78.4854, 0.72 ) }
    dend_43 { pt3dadd( 73.4184, 36.3336, -80.5188, 2.16 ) }
    dend_43 { pt3dadd( 74.6225, 37.4802, -81.6203, 1.44 ) }
    dend_43 { pt3dadd( 76.2202, 39.018, -82.9326, 0.48 ) }
    dend_43 { pt3dadd( 77.1065, 39.9608, -83.771, 0.48 ) }
    dend_43 { pt3dadd( 78.5881, 41.7197, -85.3497, 1.32 ) }
    dend_43 { pt3dadd( 79.889, 43.6344, -87.6767, 1.32 ) }
    dend_43 { pt3dadd( 79.9727, 43.7777, -87.8685, 1.32 ) }
    dend_43 { pt3dadd( 81.2597, 46.1019, -91.1102, 0.72 ) }
    dend_43 { pt3dadd( 83.9844, 51.0285, -97.8406, 0.6 ) }
    dend_43 { pt3dadd( 84.6127, 52.152, -99.3092, 0.6 ) }
    dend_43 { pt3dadd( 88.6206, 58.7892, -107.51, 0.12 ) }
    dend_43 { pt3dadd( 89.3243, 59.8625, -108.782, 0.96 ) }
    dend_43 { pt3dadd( 89.9404, 60.7306, -109.782, 0.48 ) }
    dend_43 { pt3dadd( 91.301, 62.5013, -111.751, 0.36 ) }
    dend_43 { pt3dadd( 93.1608, 64.6523, -113.595, 0.24 ) }
    dend_43 { pt3dadd( 94.6019, 66.2786, -114.811, 0.24 ) }
    dend_43 { pt3dadd( 96.9591, 68.8267, -116.135, 1.2 ) }
    dend_43 { pt3dadd( 97.8474, 69.8295, -116.721, 0.72 ) }
    dend_43 { pt3dadd( 99.7635, 72.1316, -118.11, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_43 { pt3dadd( 100.499, 73.0831, -118.666, 0.24 ) }
    dend_43 { pt3dadd( 101.818, 74.9336, -119.621, 1.08 ) }
    dend_43 { pt3dadd( 102.26, 75.6106, -119.937, 0.6 ) }
    dend_43 { pt3dadd( 104.141, 78.5929, -121.069, 0.48 ) }
    dend_43 { pt3dadd( 104.813, 79.6716, -121.462, 0.48 ) }
    dend_43 { pt3dadd( 105.555, 80.8008, -121.827, 1.2 ) }
    dend_43 { pt3dadd( 106.297, 81.8566, -122.188, 0.6 ) }
    dend_43 { pt3dadd( 108.318, 84.3927, -123.08, 0.24 ) }
    dend_43 { pt3dadd( 109.217, 85.4168, -123.544, 0.24 ) }
    dend_43 { pt3dadd( 110.402, 86.6339, -124.178, 1.32 ) }
    dend_43 { pt3dadd( 111.403, 87.5752, -124.701, 0.72 ) }
    dend_43 { pt3dadd( 113.546, 89.5266, -125.866, 0.48 ) }
    dend_43 { pt3dadd( 115.472, 91.2908, -127.013, 0.48 ) }
    dend_43 { pt3dadd( 117.478, 93.1384, -128.233, 1.08 ) }
    dend_43 { pt3dadd( 118.29, 93.9107, -128.737, 0.36 ) }
    dend_43 { pt3dadd( 120.168, 95.7796, -129.856, 0.12 ) }
    dend_43 { pt3dadd( 122.552, 98.3178, -131.234, 0.12 ) }
    dend_43 { pt3dadd( 124.36, 100.332, -132.247, 0.12 ) }
    dend_43 { pt3dadd( 124.872, 100.925, -132.519, 0.48 ) }
    dend_43 { pt3dadd( 125.314, 101.446, -132.754, 0.12 ) }
    dend_43 { pt3dadd( 126.116, 102.433, -133.298, 0.12 ) }
    dend_43 { pt3dadd( 126.499, 102.93, -133.594, 0.48 ) }
    dend_43 { pt3dadd( 127.619, 104.516, -134.437, 0.48 ) }
    dend_43 { pt3dadd( 128.254, 105.566, -134.907, 0.24 ) }
    dend_43 { pt3dadd( 129.183, 107.284, -135.563, 0.6 ) }
    dend_43 { pt3dadd( 129.908, 108.743, -136.018, 1.08 ) }
    dend_43 { pt3dadd( 130.592, 110.199, -136.381, 0.48 ) }
    dend_43 { pt3dadd( 131.864, 112.848, -136.978, 0.36 ) }
    dend_43 { pt3dadd( 132.682, 114.467, -137.406, 0.36 ) }
    dend_43 { pt3dadd( 133.804, 116.53, -138.111, 0.36 ) }
    dend_43 { pt3dadd( 134.481, 117.661, -138.551, 0.96 ) }
    dend_43 { pt3dadd( 134.948, 118.379, -138.87, 0.24 ) }
    dend_43 { pt3dadd( 136.73, 120.842, -140.051, 0.12 ) }
    dend_43 { pt3dadd( 138.923, 123.518, -141.334, 0.24 ) }
    dend_43 { pt3dadd( 140.222, 125.01, -142.156, 0.24 ) }
    dend_43 { pt3dadd( 141.042, 125.946, -142.695, 0.24 ) }
    dend_43 { pt3dadd( 141.952, 126.973, -143.225, 0.24 ) }
    dend_43 { pt3dadd( 143.393, 128.593, -143.879, 0.24 ) }
    dend_43 { pt3dadd( 144.129, 129.408, -144.093, 0.24 ) }
    dend_43 { pt3dadd( 146.67, 132.141, -144.742, 1.44 ) }
    dend_43 { pt3dadd( 147.281, 132.801, -144.938, 1.08 ) }
    dend_43 { pt3dadd( 148.422, 134.015, -145.379, 0.12 ) }
    dend_43 { pt3dadd( 149.09, 134.746, -145.767, 0.12 ) }
    dend_43 { pt3dadd( 150.384, 136.172, -146.712, 0.12 ) }
    dend_43 { pt3dadd( 151.908, 137.741, -147.833, 0.6 ) }
    dend_43 { pt3dadd( 152.657, 138.429, -148.327, 0.6 ) }
    dend_43 { pt3dadd( 153.403, 139.09, -148.937, 0.24 ) }
    dend_43 { pt3dadd( 155.689, 141.097, -150.982, 0.72 ) }
    dend_43 { pt3dadd( 156.225, 141.581, -151.513, 0.12 ) }
    dend_43 { pt3dadd( 157.246, 142.513, -152.511, 0.24 ) }
    dend_43 { pt3dadd( 158.179, 143.39, -153.382, 0.24 ) }
    dend_43 { pt3dadd( 161.592, 146.763, -156.559, 0.24 ) }
    dend_43 { pt3dadd( 162.406, 147.638, -157.297, 0.12 ) }
    dend_43 { pt3dadd( 164.697, 150.247, -159.197, 0.24 ) }
    dend_43 { pt3dadd( 165.682, 151.484, -160.012, 0.24 ) }
    dend_43 { pt3dadd( 167.045, 153.381, -161.076, 0.24 ) }
    dend_43 { pt3dadd( 167.733, 154.486, -161.648, 0.72 ) }
    dend_43 { pt3dadd( 168.683, 156.185, -162.348, 0.36 ) }
    dend_43 { pt3dadd( 169.155, 157.067, -162.711, 0.36 ) }
    dend_43 { pt3dadd( 169.795, 158.304, -163.182, 1.08 ) }
    dend_43 { pt3dadd( 170.524, 159.74, -163.792, 0.36 ) }
    dend_43 { pt3dadd( 172.329, 163.393, -165.388, 0.36 ) }
    dend_43 { pt3dadd( 172.722, 164.23, -165.808, 0.36 ) }
    dend_43 { pt3dadd( 173.323, 165.631, -166.676, 1.2 ) }
    dend_43 { pt3dadd( 173.496, 166.05, -166.955, 0.72 ) }
    dend_43 { pt3dadd( 173.858, 166.904, -167.568, 0.36 ) }
    dend_43 { pt3dadd( 174.148, 167.608, -168.09, 0.36 ) }
    dend_43 { pt3dadd( 175.184, 170.115, -169.573, 0.36 ) }
    dend_43 { pt3dadd( 175.86, 172.507, -171.292, 0.84 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 69/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 30.6843, -3.16466, -23.3896, 0.84 ) }
    dend_38 { pt3dadd( 32.3612, -4.07082, -23.2303, 0.84 ) }
    dend_38 { pt3dadd( 33.5855, -4.81319, -23.1844, 0.84 ) }
    dend_38 { pt3dadd( 35.5423, -6.066, -23.2539, 0.6 ) }
    dend_38 { pt3dadd( 36.9108, -6.97393, -23.3597, 0.6 ) }
    dend_38 { pt3dadd( 38.8126, -8.30369, -23.603, 0.6 ) }
    dend_38 { pt3dadd( 40.0533, -9.1989, -23.7988, 0.48 ) }
    dend_38 { pt3dadd( 41.375, -10.1828, -24.1028, 0.48 ) }
    dend_38 { pt3dadd( 42.6482, -11.1736, -24.4298, 0.48 ) }
    dend_38 { pt3dadd( 44.0323, -12.305, -24.7896, 0.84 ) }
    dend_38 { pt3dadd( 45.1584, -13.1979, -25.0684, 0.72 ) }
    dend_38 { pt3dadd( 46.4229, -14.1572, -25.3223, 0.72 ) }
    dend_38 { pt3dadd( 48.3495, -15.5168, -25.5678, 0.72 ) }
    dend_38 { pt3dadd( 49.0135, -15.9827, -25.5899, 0.6 ) }
    dend_38 { pt3dadd( 49.9677, -16.6581, -25.5661, 0.6 ) }
    dend_38 { pt3dadd( 52.0212, -18.1444, -25.4818, 0.84 ) }
    dend_38 { pt3dadd( 53.2795, -19.0848, -25.4128, 0.48 ) }
    dend_38 { pt3dadd( 54.8568, -20.309, -25.4257, 0.48 ) }
    dend_38 { pt3dadd( 57.0755, -22.0956, -25.5674, 0.48 ) }
    dend_38 { pt3dadd( 58.1588, -22.9566, -25.6712, 0.48 ) }
    dend_38 { pt3dadd( 59.8078, -24.2473, -25.8728, 0.84 ) }
    dend_38 { pt3dadd( 61.3789, -25.4577, -26.0809, 0.84 ) }
    dend_38 { pt3dadd( 63.9973, -27.4387, -26.4665, 0.84 ) }
    dend_38 { pt3dadd( 66.1044, -29.0068, -26.7743, 0.72 ) }
    dend_38 { pt3dadd( 68.0097, -30.3882, -27.0444, 0.6 ) }
    dend_38 { pt3dadd( 70.3059, -32.0255, -27.3189, 0.6 ) }
    dend_38 { pt3dadd( 71.7451, -33.0224, -27.4448, 0.6 ) }
    dend_38 { pt3dadd( 72.9073, -33.8218, -27.5217, 0.48 ) }
    dend_38 { pt3dadd( 74.4929, -34.9197, -27.5692, 0.48 ) }
    dend_38 { pt3dadd( 75.498, -35.6024, -27.6149, 0.48 ) }
    dend_38 { pt3dadd( 76.8365, -36.5162, -27.7021, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_38 { pt3dadd( 78.4462, -37.6078, -27.8189, 0.48 ) }
    dend_38 { pt3dadd( 79.7084, -38.4131, -27.9145, 0.36 ) }
    dend_38 { pt3dadd( 80.8849, -39.095, -28.0023, 0.36 ) }
    dend_38 { pt3dadd( 82.1401, -39.7387, -28.0225, 0.36 ) }
    dend_38 { pt3dadd( 83.3056, -40.2594, -27.9857, 0.36 ) }
    dend_38 { pt3dadd( 83.6294, -40.385, -27.9536, 0.36 ) }
    dend_38 { pt3dadd( 85.0164, -40.8798, -27.737, 0.36 ) }
    dend_38 { pt3dadd( 87.0101, -41.5457, -27.348, 0.24 ) }
    dend_38 { pt3dadd( 89.4047, -42.3893, -26.8455, 0.24 ) }
    dend_38 { pt3dadd( 90.5537, -42.8333, -26.5967, 0.24 ) }
    dend_38 { pt3dadd( 91.5857, -43.2709, -26.3788, 0.72 ) }
    dend_38 { pt3dadd( 92.9669, -43.9408, -26.1055, 0.36 ) }
    dend_38 { pt3dadd( 94.1615, -44.6532, -25.8948, 0.36 ) }
    dend_38 { pt3dadd( 95.4615, -45.6103, -25.7242, 0.72 ) }
    dend_38 { pt3dadd( 96.2104, -46.284, -25.6891, 0.48 ) }
    dend_38 { pt3dadd( 97.029, -47.1013, -25.6749, 0.84 ) }
    dend_38 { pt3dadd( 97.6528, -47.7572, -25.69, 0.48 ) }
    dend_38 { pt3dadd( 98.578, -48.7585, -25.7128, 0.84 ) }
    dend_38 { pt3dadd( 99.0805, -49.2874, -25.7258, 0.48 ) }
    dend_38 { pt3dadd( 100.004, -50.1888, -25.7198, 0.96 ) }
    dend_38 { pt3dadd( 100.874, -50.9701, -25.6945, 0.36 ) }
    dend_38 { pt3dadd( 101.956, -51.9056, -25.6655, 0.36 ) }
    dend_38 { pt3dadd( 102.686, -52.4998, -25.6366, 0.36 ) }
    dend_38 { pt3dadd( 104.303, -53.7648, -25.5521, 0.84 ) }
    dend_38 { pt3dadd( 105.143, -54.3849, -25.5205, 0.48 ) }
    dend_38 { pt3dadd( 106.67, -55.4883, -25.4572, 0.48 ) }
    dend_38 { pt3dadd( 108.638, -56.9026, -25.3691, 0.48 ) }
    dend_38 { pt3dadd( 109.696, -57.6513, -25.3234, 0.48 ) }
    dend_38 { pt3dadd( 109.801, -57.726, -25.3197, 0.48 ) }
    dend_38 { pt3dadd( 113.074, -60.1182, -25.2755, 0.72 ) }
    // Section: dend_32, id: dend_32, parent: dend_20 (entry count 30/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -11.1284, 17.04, 3.92388, 0.6 ) }
    dend_32 { pt3dadd( -13.6929, 19.0026, 6.89126, 0.6 ) }
    dend_32 { pt3dadd( -15.7118, 20.4302, 8.955, 0.6 ) }
    dend_32 { pt3dadd( -18.2105, 22.3198, 11.3855, 0.6 ) }
    dend_32 { pt3dadd( -19.7295, 23.5, 12.6757, 0.48 ) }
    dend_32 { pt3dadd( -20.9191, 24.4193, 13.5593, 0.48 ) }
    dend_32 { pt3dadd( -22.7963, 25.8701, 14.9536, 0.48 ) }
    dend_32 { pt3dadd( -26.1789, 28.3687, 16.9941, 0.24 ) }
    dend_32 { pt3dadd( -27.7795, 29.555, 17.7478, 0.24 ) }
    dend_32 { pt3dadd( -29.8748, 31.1976, 18.4998, 0.12 ) }
    dend_32 { pt3dadd( -31.2216, 32.2036, 18.9597, 0.12 ) }
    dend_32 { pt3dadd( -41.4758, 39.0844, 24.3549, 0.12 ) }
    dend_32 { pt3dadd( -52.7151, 46.2004, 26.4959, 0.12 ) }
    dend_32 { pt3dadd( -64.4874, 52.0205, 29.6509, 0.12 ) }
    dend_32 { pt3dadd( -75.485, 57.7989, 34.9461, 0.12 ) }
    dend_32 { pt3dadd( -85.4947, 65.2171, 40.0421, 0.12 ) }
    dend_32 { pt3dadd( -96.1777, 71.3312, 45.5774, 0.12 ) }
    dend_32 { pt3dadd( -106.582, 77.9434, 51.0404, 0.12 ) }
    dend_32 { pt3dadd( -115.571, 85.6373, 57.4365, 0.12 ) }
    dend_32 { pt3dadd( -126.495, 90.3667, 63.8617, 0.12 ) }
    dend_32 { pt3dadd( -136.688, 96.0067, 70.6966, 0.12 ) }
    dend_32 { pt3dadd( -149.022, 98.6424, 75.6818, 0.12 ) }
    dend_32 { pt3dadd( -161.062, 103.504, 79.4712, 0.12 ) }
    dend_32 { pt3dadd( -171.942, 109.954, 84.1583, 0.12 ) }
    dend_32 { pt3dadd( -182.884, 116.485, 88.5764, 0.12 ) }
    dend_32 { pt3dadd( -192.203, 123.58, 95.2244, 0.12 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -11.1284, 17.04, 3.92388, 0.72 ) }
    dend_21 { pt3dadd( -12.4469, 15.3562, 4.88459, 0.72 ) }
    dend_21 { pt3dadd( -12.941, 14.7336, 5.15821, 0.72 ) }
    dend_21 { pt3dadd( -13.4926, 14.0522, 5.4472, 0.6 ) }
    dend_21 { pt3dadd( -13.7899, 13.6851, 5.60294, 0.6 ) }
    dend_21 { pt3dadd( -15.0334, 12.1491, 6.25445, 0.6 ) }
    dend_21 { pt3dadd( -15.6275, 11.4153, 6.56569, 0.6 ) }
    dend_21 { pt3dadd( -16.8948, 9.94185, 7.14347, 0.6 ) }
    dend_21 { pt3dadd( -17.3903, 9.44214, 7.36434, 0.6 ) }
    // Section: dend_15, id: dend_15, parent: dend_1 (entry count 65/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.81058, 22.6462, -0.0751999, 0.72 ) }
    dend_15 { pt3dadd( -4.45316, 25.4555, 0.740597, 0.72 ) }
    dend_15 { pt3dadd( -2.54462, 29.5813, 1.8408, 0.6 ) }
    dend_15 { pt3dadd( -0.571412, 34.163, 2.9623, 0.6 ) }
    dend_15 { pt3dadd( 0.604361, 36.9905, 3.58282, 0.6 ) }
    dend_15 { pt3dadd( 2.29854, 41.2157, 4.46262, 0.6 ) }
    dend_15 { pt3dadd( 3.51548, 44.4528, 5.08688, 0.6 ) }
    dend_15 { pt3dadd( 4.67812, 47.9762, 5.67532, 0.6 ) }
    dend_15 { pt3dadd( 5.3318, 50.2047, 5.99396, 0.6 ) }
    dend_15 { pt3dadd( 6.44045, 54.0289, 6.68356, 0.6 ) }
    dend_15 { pt3dadd( 7.57202, 57.9466, 7.63812, 0.6 ) }
    dend_15 { pt3dadd( 8.62472, 61.6072, 8.63729, 0.48 ) }
    dend_15 { pt3dadd( 9.39886, 64.3299, 9.49227, 0.48 ) }
    dend_15 { pt3dadd( 10.7022, 68.943, 11.0721, 0.48 ) }
    dend_15 { pt3dadd( 12.257, 74.3508, 12.9893, 0.48 ) }
    dend_15 { pt3dadd( 14.4193, 81.8003, 15.6854, 0.48 ) }
    dend_15 { pt3dadd( 15.4021, 85.1214, 16.9162, 0.48 ) }
    dend_15 { pt3dadd( 16.1316, 87.4631, 17.7981, 0.48 ) }
    dend_15 { pt3dadd( 16.9428, 90.0819, 18.7795, 0.48 ) }
    dend_15 { pt3dadd( 17.8984, 93.1571, 19.8352, 0.48 ) }
    dend_15 { pt3dadd( 18.4518, 95.1179, 20.339, 0.48 ) }
    dend_15 { pt3dadd( 19.3625, 97.8179, 20.8109, 0.48 ) }
    dend_15 { pt3dadd( 19.9724, 99.4391, 21.1353, 0.48 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 88/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.81058, 22.6462, -0.0751999, 2.17 ) }
    dend_2 { pt3dadd( -5.68536, 29.2068, -1.69881, 2.17 ) }
    dend_2 { pt3dadd( -5.64109, 31.5261, -2.2728, 1.81 ) }
    dend_2 { pt3dadd( -5.60682, 33.3214, -2.71711, 1.81 ) }
    dend_2 { pt3dadd( -5.55102, 36.2453, -3.4407, 2.65 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 93/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 26.4695, -29.8846, -3.96732, 0.72 ) }
    dend_53 { pt3dadd( 26.6253, -33.7709, -6.66056, 0.72 ) }
    dend_53 { pt3dadd( 26.951, -36.1593, -8.54438, 0.72 ) }
    dend_53 { pt3dadd( 27.3375, -38.3129, -10.3674, 0.72 ) }
    dend_53 { pt3dadd( 27.7053, -40.3313, -12.0135, 0.72 ) }
    dend_53 { pt3dadd( 28.0643, -42.59, -13.8121, 0.72 ) }
    dend_53 { pt3dadd( 28.488, -45.8441, -16.2223, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_53 { pt3dadd( 28.7798, -47.9589, -17.6036, 1.08 ) }
    dend_53 { pt3dadd( 29.0629, -49.9655, -18.8544, 1.08 ) }
    dend_53 { pt3dadd( 29.1947, -52.0623, -19.9911, 0.48 ) }
    dend_53 { pt3dadd( 29.1714, -53.3494, -20.5446, 0.48 ) }
    dend_53 { pt3dadd( 28.9976, -55.8338, -21.3373, 0.48 ) }
    dend_53 { pt3dadd( 28.9023, -57.1074, -21.8178, 0.48 ) }
    dend_53 { pt3dadd( 28.7106, -58.9413, -22.7304, 0.96 ) }
    dend_53 { pt3dadd( 28.4565, -61.2828, -24.0799, 0.6 ) }
    dend_53 { pt3dadd( 28.3097, -63.4189, -25.6467, 0.48 ) }
    dend_53 { pt3dadd( 28.2356, -64.9148, -26.8727, 0.48 ) }
    dend_53 { pt3dadd( 27.913, -71.2431, -32.6659, 0.48 ) }
    dend_53 { pt3dadd( 27.816, -73.0905, -34.5645, 0.36 ) }
    dend_53 { pt3dadd( 27.7165, -74.2567, -35.8837, 0.36 ) }
    dend_53 { pt3dadd( 27.2998, -77.3248, -39.5038, 0.36 ) }
    dend_53 { pt3dadd( 27.0074, -78.802, -41.2387, 0.36 ) }
    dend_53 { pt3dadd( 26.2037, -81.7236, -44.611, 0.36 ) }
    dend_53 { pt3dadd( 25.5647, -84.1378, -47.4036, 0.36 ) }
    dend_53 { pt3dadd( 25.1828, -86.4184, -49.984, 0.36 ) }
    dend_53 { pt3dadd( 25.0839, -87.7386, -51.5216, 0.36 ) }
    dend_53 { pt3dadd( 25.1102, -88.7543, -52.6621, 0.36 ) }
    dend_53 { pt3dadd( 25.2347, -89.8193, -53.8465, 0.36 ) }
    dend_53 { pt3dadd( 26.9309, -98.9055, -63.1322, 0.36 ) }
    dend_53 { pt3dadd( 27.4941, -101.533, -65.6721, 0.36 ) }
    dend_53 { pt3dadd( 28.1981, -104.697, -68.7235, 0.36 ) }
    dend_53 { pt3dadd( 28.8264, -108.012, -72.1165, 0.36 ) }
    dend_53 { pt3dadd( 28.8662, -109.287, -73.2469, 0.36 ) }
    dend_53 { pt3dadd( 28.4032, -112.476, -75.4995, 0.36 ) }
    dend_53 { pt3dadd( 27.0153, -116.412, -77.8792, 0.36 ) }
    dend_53 { pt3dadd( 25.9792, -118.896, -79.4406, 0.36 ) }
    dend_53 { pt3dadd( 24.2862, -122.945, -81.8766, 0.36 ) }
    dend_53 { pt3dadd( 20.4167, -133.227, -87.7753, 0.36 ) }
    dend_53 { pt3dadd( 19.5868, -136.014, -89.318, 0.36 ) }
    dend_53 { pt3dadd( 17.6105, -145.294, -94.5106, 0.36 ) }
    dend_53 { pt3dadd( 17.1221, -149.213, -96.6577, 0.36 ) }
    dend_53 { pt3dadd( 16.9944, -152.477, -98.4527, 0.36 ) }
    dend_53 { pt3dadd( 17.1297, -155.878, -100.316, 0.36 ) }
    dend_53 { pt3dadd( 17.4329, -158.694, -102.027, 0.36 ) }
    dend_53 { pt3dadd( 18.0422, -165.085, -105.654, 0.36 ) }
    dend_53 { pt3dadd( 18.3375, -170.02, -107.854, 0.36 ) }
    dend_53 { pt3dadd( 18.3466, -174.152, -109.574, 0.36 ) }
    dend_53 { pt3dadd( 18.1012, -177.518, -111.011, 0.36 ) }
    dend_53 { pt3dadd( 17.6538, -179.982, -112.179, 0.36 ) }
    dend_53 { pt3dadd( 17.1772, -181.66, -112.984, 0.36 ) }
    dend_53 { pt3dadd( 15.7217, -185.631, -114.924, 0.36 ) }
    dend_53 { pt3dadd( 14.7337, -187.893, -116.133, 0.36 ) }
    dend_53 { pt3dadd( 12.2547, -192.774, -119.15, 0.36 ) }
    dend_53 { pt3dadd( 9.30954, -198.047, -122.806, 0.36 ) }
    dend_53 { pt3dadd( 7.52649, -201.157, -125.085, 0.36 ) }
    dend_53 { pt3dadd( 6.15844, -203.595, -127.104, 0.36 ) }
    dend_53 { pt3dadd( 5.35446, -205.064, -128.479, 0.36 ) }
    dend_53 { pt3dadd( 4.28382, -207.409, -130.803, 0.36 ) }
    dend_53 { pt3dadd( 3.87958, -208.797, -132.136, 0.36 ) }
    dend_53 { pt3dadd( 3.49797, -210.84, -134.064, 0.36 ) }
    dend_53 { pt3dadd( 2.81167, -215.835, -139.113, 0.36 ) }
    dend_53 { pt3dadd( 2.65967, -217.441, -140.788, 0.36 ) }
    dend_53 { pt3dadd( 2.48751, -221.246, -144.844, 0.36 ) }
    dend_53 { pt3dadd( 2.55498, -224.339, -148.059, 0.36 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 57/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 26.4695, -29.8846, -3.96732, 0.6 ) }
    dend_52 { pt3dadd( 29.6632, -32.1955, -4.44912, 0.6 ) }
    dend_52 { pt3dadd( 33.0716, -35.0792, -5.09365, 0.6 ) }
    dend_52 { pt3dadd( 35.5166, -37.3256, -5.62473, 0.48 ) }
    dend_52 { pt3dadd( 39.0015, -40.5448, -6.41208, 0.84 ) }
    dend_52 { pt3dadd( 41.3109, -42.651, -6.9309, 0.84 ) }
    dend_52 { pt3dadd( 43.3994, -44.5617, -7.38243, 0.72 ) }
    dend_52 { pt3dadd( 46.7118, -47.7479, -8.00286, 0.72 ) }
    dend_52 { pt3dadd( 48.7452, -49.7204, -8.26727, 0.72 ) }
    dend_52 { pt3dadd( 50.3914, -51.2871, -8.43415, 1.2 ) }
    dend_52 { pt3dadd( 52.5163, -53.1522, -8.60327, 0.84 ) }
    dend_52 { pt3dadd( 54.749, -55.0223, -8.87069, 0.84 ) }
    dend_52 { pt3dadd( 56.9199, -56.8069, -9.16638, 0.6 ) }
    dend_52 { pt3dadd( 59.7293, -59.0033, -9.54709, 0.6 ) }
    dend_52 { pt3dadd( 61.0726, -60.0449, -9.7592, 0.6 ) }
    dend_52 { pt3dadd( 63.966, -62.3583, -10.2802, 0.96 ) }
    dend_52 { pt3dadd( 67.515, -65.2108, -10.9711, 0.72 ) }
    dend_52 { pt3dadd( 69.661, -66.9445, -11.4211, 0.48 ) }
    dend_52 { pt3dadd( 71.5487, -68.4968, -11.8392, 1.33 ) }
    dend_52 { pt3dadd( 74.1187, -70.6296, -12.2722, 0.72 ) }
    dend_52 { pt3dadd( 77.0059, -73.0218, -12.5434, 0.6 ) }
    dend_52 { pt3dadd( 78.9437, -74.674, -12.6966, 0.48 ) }
    dend_52 { pt3dadd( 80.1278, -75.6722, -12.7742, 0.48 ) }
    dend_52 { pt3dadd( 81.2213, -76.5545, -12.8655, 0.36 ) }
    dend_52 { pt3dadd( 83.4436, -78.3333, -13.0714, 0.24 ) }
    dend_52 { pt3dadd( 85.8978, -80.2035, -13.2551, 0.96 ) }
    dend_52 { pt3dadd( 91.842, -84.455, -13.5984, 0.24 ) }
    dend_52 { pt3dadd( 94.6786, -86.3825, -13.599, 1.57 ) }
    dend_52 { pt3dadd( 99.9195, -89.882, -13.3285, 0.36 ) }
    dend_52 { pt3dadd( 101.493, -90.9414, -13.1769, 0.36 ) }
    dend_52 { pt3dadd( 104.787, -93.1335, -12.71, 0.36 ) }
    dend_52 { pt3dadd( 107.59, -94.9852, -12.0862, 1.08 ) }
    dend_52 { pt3dadd( 111.125, -97.3297, -10.8457, 0.6 ) }
    dend_52 { pt3dadd( 112.489, -98.3239, -10.2969, 0.48 ) }
    dend_52 { pt3dadd( 114.145, -99.824, -9.7644, 0.96 ) }
    dend_52 { pt3dadd( 116.082, -101.922, -9.40109, 0.36 ) }
    dend_52 { pt3dadd( 117.451, -103.689, -9.33791, 0.84 ) }
    dend_52 { pt3dadd( 118.536, -105.187, -9.39004, 0.36 ) }
    dend_52 { pt3dadd( 119.515, -106.621, -9.56952, 0.96 ) }
    dend_52 { pt3dadd( 124.053, -113.385, -10.6804, 0.24 ) }
    dend_52 { pt3dadd( 126.222, -116.843, -11.3596, 0.24 ) }
    dend_52 { pt3dadd( 127.124, -118.455, -11.7384, 1.69 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 99/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 122.059, -134.819, 129.028, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_50 { pt3dadd( 126.276, -139.95, 134.564, 0.24 ) }
    dend_50 { pt3dadd( 130.16, -145.013, 140.398, 0.24 ) }
    dend_50 { pt3dadd( 133.497, -149.862, 146.737, 0.24 ) }
    dend_50 { pt3dadd( 136.415, -154.383, 153.518, 0.24 ) }
    dend_50 { pt3dadd( 139.328, -158.2, 160.743, 0.24 ) }
    dend_50 { pt3dadd( 142.412, -163.486, 166.836, 0.24 ) }
    dend_50 { pt3dadd( 146.442, -168.261, 172.825, 0.24 ) }
    dend_50 { pt3dadd( 149.968, -173.633, 178.595, 0.24 ) }
    dend_50 { pt3dadd( 154.819, -178.809, 183.542, 0.24 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 9/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 122.059, -134.819, 129.028, 0.24 ) }
    dend_47 { pt3dadd( 127.194, -139.484, 134.486, 0.24 ) }
    dend_47 { pt3dadd( 132.723, -143.471, 140.122, 0.24 ) }
    dend_47 { pt3dadd( 137.955, -146.767, 146.464, 0.24 ) }
    dend_47 { pt3dadd( 143.73, -149.269, 152.72, 0.24 ) }
    dend_47 { pt3dadd( 148.473, -152.834, 159.288, 0.24 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 15/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 113.074, -60.1182, -25.2755, 0.24 ) }
    dend_40 { pt3dadd( 116.915, -59.9577, -29.6316, 0.24 ) }
    dend_40 { pt3dadd( 118.161, -59.9661, -30.9395, 0.24 ) }
    dend_40 { pt3dadd( 122.011, -60.0894, -34.831, 0.24 ) }
    dend_40 { pt3dadd( 123.885, -60.2156, -36.6759, 0.24 ) }
    dend_40 { pt3dadd( 125.888, -60.4237, -38.5208, 0.24 ) }
    dend_40 { pt3dadd( 127.817, -60.6642, -40.2303, 0.24 ) }
    dend_40 { pt3dadd( 129.162, -60.914, -41.2586, 0.24 ) }
    dend_40 { pt3dadd( 130.124, -61.1317, -41.9614, 0.24 ) }
    dend_40 { pt3dadd( 131.457, -61.5136, -42.8004, 0.24 ) }
    dend_40 { pt3dadd( 133.691, -62.2128, -44.171, 0.24 ) }
    dend_40 { pt3dadd( 136.182, -63.0878, -45.665, 0.24 ) }
    dend_40 { pt3dadd( 137.796, -63.6798, -46.6639, 0.24 ) }
    dend_40 { pt3dadd( 138.873, -64.0542, -47.297, 0.24 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 29/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 113.074, -60.1182, -25.2755, 0.24 ) }
    dend_39 { pt3dadd( 115.691, -62.1969, -24.5984, 0.24 ) }
    dend_39 { pt3dadd( 119.163, -64.9028, -23.6022, 0.24 ) }
    dend_39 { pt3dadd( 121.529, -67.0875, -23.0788, 0.24 ) }
    dend_39 { pt3dadd( 124.741, -71.4288, -22.9389, 0.24 ) }
    dend_39 { pt3dadd( 126.205, -74.1648, -23.1181, 0.24 ) }
    dend_39 { pt3dadd( 126.981, -75.92, -23.2863, 0.24 ) }
    dend_39 { pt3dadd( 127.915, -78.9657, -23.788, 0.24 ) }
    dend_39 { pt3dadd( 129.188, -85.5423, -25.1801, 0.24 ) }
    dend_39 { pt3dadd( 130.353, -95.3023, -27.6113, 0.24 ) }
    dend_39 { pt3dadd( 130.639, -99.244, -28.6842, 0.24 ) }
    dend_39 { pt3dadd( 130.741, -100.658, -29.0873, 0.24 ) }
    dend_39 { pt3dadd( 131.081, -104.348, -30.1408, 0.24 ) }
    dend_39 { pt3dadd( 131.372, -106.47, -30.7442, 0.24 ) }
    dend_39 { pt3dadd( 132.73, -111.829, -31.9582, 0.24 ) }
    dend_39 { pt3dadd( 133.456, -113.532, -32.2742, 0.24 ) }
    dend_39 { pt3dadd( 135.244, -116.973, -33.1345, 0.24 ) }
    dend_39 { pt3dadd( 136.356, -118.768, -33.6804, 0.24 ) }
    dend_39 { pt3dadd( 137.269, -120.016, -34.1073, 0.24 ) }
    dend_39 { pt3dadd( 139.199, -122.34, -35.0209, 0.24 ) }
    dend_39 { pt3dadd( 140.908, -124.246, -35.8115, 0.24 ) }
    dend_39 { pt3dadd( 145.037, -128.788, -37.7718, 0.24 ) }
    dend_39 { pt3dadd( 147.876, -131.787, -39.1139, 0.24 ) }
    dend_39 { pt3dadd( 150.432, -134.423, -40.3619, 0.24 ) }
    dend_39 { pt3dadd( 152.346, -136.339, -41.3087, 0.24 ) }
    dend_39 { pt3dadd( 154.954, -138.844, -42.6384, 0.24 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 55/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -192.203, 123.58, 95.2244, 0.12 ) }
    dend_34 { pt3dadd( -198.527, 127.756, 101.023, 0.12 ) }
    dend_34 { pt3dadd( -203.697, 132.823, 107.201, 0.12 ) }
    dend_34 { pt3dadd( -208.389, 138.237, 113.448, 0.12 ) }
    dend_34 { pt3dadd( -213.2, 142.111, 120.727, 0.12 ) }
    dend_34 { pt3dadd( -217.086, 146.898, 127.984, 0.12 ) }
    dend_34 { pt3dadd( -221.107, 149.892, 136.13, 0.12 ) }
    dend_34 { pt3dadd( -224.892, 153.311, 144.211, 0.12 ) }
    dend_34 { pt3dadd( -230.034, 157.112, 151.303, 0.12 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 64/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -192.203, 123.58, 95.2244, 0.12 ) }
    dend_33 { pt3dadd( -201.128, 129.012, 98.0032, 0.12 ) }
    dend_33 { pt3dadd( -209.507, 134.222, 102.398, 0.12 ) }
    dend_33 { pt3dadd( -216.74, 138.822, 108.962, 0.12 ) }
    dend_33 { pt3dadd( -223.003, 143.835, 116.158, 0.12 ) }
    dend_33 { pt3dadd( -228.665, 148.085, 124.299, 0.12 ) }
    dend_33 { pt3dadd( -234.26, 153.153, 131.978, 0.12 ) }
    dend_33 { pt3dadd( -238.635, 158.097, 140.476, 0.12 ) }
    dend_33 { pt3dadd( -242.502, 163.844, 148.678, 0.12 ) }
    // Section: dend_31, id: dend_31, parent: dend_21 (entry count 73/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -17.3903, 9.44214, 7.36434, 0.24 ) }
    dend_31 { pt3dadd( -19.0838, 7.30646, 7.61276, 0.24 ) }
    dend_31 { pt3dadd( -20.3255, 5.83694, 7.82311, 0.24 ) }
    dend_31 { pt3dadd( -22.2089, 3.60802, 8.14218, 0.24 ) }
    dend_31 { pt3dadd( -23.3272, 2.2845, 8.33164, 0.24 ) }
    dend_31 { pt3dadd( -24.0072, 1.47969, 8.44685, 0.24 ) }
    dend_31 { pt3dadd( -24.9177, 0.402212, 8.60109, 0.24 ) }
    dend_31 { pt3dadd( -25.7794, -0.403125, 8.88723, 0.24 ) }
    dend_31 { pt3dadd( -31.1494, -8.79203, 11.1183, 0.24 ) }
    dend_31 { pt3dadd( -36.735, -16.3762, 15.0948, 0.24 ) }
    dend_31 { pt3dadd( -43.7202, -22.8728, 18.894, 0.24 ) }
    dend_31 { pt3dadd( -50.4179, -28.2419, 24.5625, 0.24 ) }
    dend_31 { pt3dadd( -56.4087, -34.938, 29.4943, 0.24 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 86/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -17.3903, 9.44214, 7.36434, 0.6 ) }
    dend_22 { pt3dadd( -19.9194, 8.52693, 7.94796, 0.6 ) }
    dend_22 { pt3dadd( -22.9755, 7.76128, 8.79971, 0.6 ) }
    dend_22 { pt3dadd( -24.6143, 7.47406, 9.24972, 0.6 ) }
    dend_22 { pt3dadd( -25.7888, 7.32433, 9.54814, 0.6 ) }
    dend_22 { pt3dadd( -28.2811, 7.06986, 10.1028, 0.48 ) }
    dend_22 { pt3dadd( -32.5928, 6.62963, 11.0625, 0.48 ) }
    dend_22 { pt3dadd( -35.0414, 6.47792, 11.664, 0.48 ) }
    dend_22 { pt3dadd( -37.7303, 6.43896, 12.321, 0.48 ) }
    dend_22 { pt3dadd( -39.7971, 6.51073, 12.8295, 0.48 ) }
    dend_22 { pt3dadd( -42.6756, 6.77121, 13.4916, 0.48 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 97/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 19.9724, 99.4391, 21.1353, 0.36 ) }
    dend_19 { pt3dadd( 23.1976, 101.823, 19.3436, 0.36 ) }
    dend_19 { pt3dadd( 24.448, 102.747, 18.649, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_19 { pt3dadd( 27.8455, 105.257, 16.7615, 0.36 ) }
    dend_19 { pt3dadd( 35.2523, 109.437, 14.2907, 0.36 ) }
    dend_19 { pt3dadd( 42.7757, 113.709, 12.4089, 0.36 ) }
    dend_19 { pt3dadd( 50.4668, 117.864, 10.9886, 0.36 ) }
    dend_19 { pt3dadd( 58.1577, 122.239, 11.1391, 0.36 ) }
    dend_19 { pt3dadd( 65.527, 126.99, 10.0027, 0.36 ) }
    dend_19 { pt3dadd( 72.4145, 131.899, 7.44124, 0.36 ) }
    dend_19 { pt3dadd( 78.5109, 136.912, 3.47081, 0.36 ) }
    dend_19 { pt3dadd( 85.7305, 140.495, -0.232523, 0.36 ) }
    dend_19 { pt3dadd( 93.4675, 143.366, -3.51764, 0.36 ) }
    dend_19 { pt3dadd( 101.691, 146.28, -5.17625, 0.36 ) }
    dend_19 { pt3dadd( 110.121, 149.019, -5.7664, 0.36 ) }
    dend_19 { pt3dadd( 118.781, 150.71, -6.89863, 0.36 ) }
    dend_19 { pt3dadd( 127.67, 150.647, -6.39825, 0.36 ) }
    dend_19 { pt3dadd( 136.406, 149.483, -5.17302, 0.36 ) }
    dend_19 { pt3dadd( 145.158, 148.003, -5.75601, 0.36 ) }
    dend_19 { pt3dadd( 153.428, 145.16, -7.27479, 0.36 ) }
    dend_19 { pt3dadd( 162.262, 144.09, -7.40515, 0.36 ) }
    dend_19 { pt3dadd( 170.999, 142.609, -6.63422, 0.36 ) }
    dend_19 { pt3dadd( 179.758, 141.368, -7.58189, 0.36 ) }
    dend_19 { pt3dadd( 188.639, 141.552, -6.98492, 0.36 ) }
    dend_19 { pt3dadd( 197.403, 142.539, -5.7806, 0.36 ) }
    dend_19 { pt3dadd( 206.262, 142.314, -4.93018, 0.36 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 23/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 19.9724, 99.4391, 21.1353, 0.36 ) }
    dend_16 { pt3dadd( 20.5164, 102.236, 22.1338, 0.36 ) }
    dend_16 { pt3dadd( 20.9937, 104.689, 23.0097, 0.36 ) }
    dend_16 { pt3dadd( 24.2499, 113.416, 25.347, 0.36 ) }
    dend_16 { pt3dadd( 27.5435, 122.133, 27.6688, 0.36 ) }
    dend_16 { pt3dadd( 31.7929, 129.92, 31.4532, 0.36 ) }
    dend_16 { pt3dadd( 36.3064, 137.045, 36.1858, 0.36 ) }
    dend_16 { pt3dadd( 39.1205, 144.47, 41.6862, 0.36 ) }
    dend_16 { pt3dadd( 43.095, 151.817, 46.5428, 0.36 ) }
    dend_16 { pt3dadd( 46.1833, 160.041, 50.4777, 0.36 ) }
    dend_16 { pt3dadd( 48.645, 168.544, 54.2258, 0.36 ) }
    dend_16 { pt3dadd( 50.8307, 176.219, 59.6508, 0.36 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 35/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -5.55102, 36.2453, -3.4407, 1.45 ) }
    dend_8 { pt3dadd( -5.31788, 39.9027, -3.44698, 1.45 ) }
    dend_8 { pt3dadd( -5.36446, 43.4842, -3.53473, 1.45 ) }
    dend_8 { pt3dadd( -5.48843, 46.0264, -3.57242, 1.45 ) }
    dend_8 { pt3dadd( -5.64782, 48.4698, -3.58049, 1.45 ) }
    dend_8 { pt3dadd( -5.91972, 52.2811, -3.55334, 1.08 ) }
    dend_8 { pt3dadd( -6.05761, 54.6571, -3.65515, 1.08 ) }
    dend_8 { pt3dadd( -6.41308, 59.4446, -4.08948, 0.96 ) }
    dend_8 { pt3dadd( -6.66886, 63.5301, -4.53841, 0.96 ) }
    dend_8 { pt3dadd( -6.80777, 66.7992, -4.91325, 0.96 ) }
    dend_8 { pt3dadd( -6.85142, 70.1864, -5.27737, 0.96 ) }
    dend_8 { pt3dadd( -6.74776, 75.8517, -5.79003, 0.96 ) }
    dend_8 { pt3dadd( -6.53887, 80.2133, -6.14312, 0.96 ) }
    dend_8 { pt3dadd( -6.26037, 84.0887, -6.51858, 0.96 ) }
    dend_8 { pt3dadd( -5.96336, 87.9325, -7.10389, 0.96 ) }
    dend_8 { pt3dadd( -5.66418, 92.4157, -8.00397, 0.96 ) }
    dend_8 { pt3dadd( -5.49546, 95.7944, -8.80018, 0.96 ) }
    dend_8 { pt3dadd( -5.38458, 99.0859, -9.70394, 0.96 ) }
    dend_8 { pt3dadd( -5.27377, 103.598, -11.2327, 0.96 ) }
    dend_8 { pt3dadd( -5.13509, 109.236, -13.556, 0.96 ) }
    dend_8 { pt3dadd( -5.06906, 114.059, -15.6316, 0.96 ) }
    dend_8 { pt3dadd( -5.10641, 117.63, -17.1929, 0.96 ) }
    dend_8 { pt3dadd( -5.1947, 120.834, -18.5159, 0.96 ) }
    dend_8 { pt3dadd( -5.27958, 124.174, -19.7156, 0.96 ) }
    dend_8 { pt3dadd( -5.37983, 128.137, -20.7887, 0.96 ) }
    dend_8 { pt3dadd( -5.42989, 132.852, -21.719, 0.96 ) }
    dend_8 { pt3dadd( -5.39235, 136.155, -22.3277, 0.96 ) }
    dend_8 { pt3dadd( -5.33592, 140.697, -23.0569, 0.96 ) }
    dend_8 { pt3dadd( -5.28394, 145.251, -23.6729, 0.96 ) }
    dend_8 { pt3dadd( -5.25521, 147.68, -23.99, 0.96 ) }
    dend_8 { pt3dadd( -5.19567, 154.127, -24.7175, 0.96 ) }
    dend_8 { pt3dadd( -5.05267, 158.249, -25.2752, 0.96 ) }
    dend_8 { pt3dadd( -4.9088, 161.479, -25.6476, 0.96 ) }
    dend_8 { pt3dadd( -4.73758, 164.737, -26.0349, 0.96 ) }
    dend_8 { pt3dadd( -4.55598, 167.881, -26.4321, 0.96 ) }
    dend_8 { pt3dadd( -4.27911, 171.968, -26.9423, 0.96 ) }
    dend_8 { pt3dadd( -3.89675, 177.805, -27.5901, 0.96 ) }
    dend_8 { pt3dadd( -3.69081, 180.369, -27.8947, 0.96 ) }
    dend_8 { pt3dadd( -3.26172, 184.862, -28.5784, 0.96 ) }
    dend_8 { pt3dadd( -3.08419, 186.722, -28.9099, 0.96 ) }
    dend_8 { pt3dadd( -2.5138, 192.671, -30.0646, 1.2 ) }
    dend_8 { pt3dadd( -2.205, 196.025, -30.7417, 1.08 ) }
    dend_8 { pt3dadd( -1.99251, 198.671, -31.2444, 1.33 ) }
    dend_8 { pt3dadd( -1.58629, 203.647, -32.1279, 1.08 ) }
    dend_8 { pt3dadd( -1.33699, 207.065, -32.6497, 1.08 ) }
    dend_8 { pt3dadd( -1.10455, 210.176, -33.1236, 0.96 ) }
    dend_8 { pt3dadd( -1.0457, 210.901, -33.2322, 0.96 ) }
    dend_8 { pt3dadd( -0.81625, 213.931, -33.5913, 0.96 ) }
    dend_8 { pt3dadd( -0.670692, 216.536, -33.793, 0.96 ) }
    dend_8 { pt3dadd( -0.43708, 220.529, -33.9975, 0.72 ) }
    dend_8 { pt3dadd( -0.257107, 223.633, -34.0972, 0.72 ) }
    dend_8 { pt3dadd( -0.0317503, 228.254, -34.2339, 0.72 ) }
    dend_8 { pt3dadd( 0.0820327, 230.995, -34.3211, 0.96 ) }
    dend_8 { pt3dadd( 0.151925, 233.439, -34.4044, 1.2 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 89/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -5.55102, 36.2453, -3.4407, 0.72 ) }
    dend_3 { pt3dadd( -9.86108, 38.8828, -8.67191, 0.72 ) }
    dend_3 { pt3dadd( -11.32, 39.8668, -10.5809, 0.72 ) }
    dend_3 { pt3dadd( -12.9246, 40.8962, -12.5519, 0.72 ) }
    dend_3 { pt3dadd( -14.2537, 41.7324, -14.0746, 0.72 ) }
    dend_3 { pt3dadd( -16.0211, 43.0146, -16.1208, 0.6 ) }
    dend_3 { pt3dadd( -18.8953, 45.4883, -19.5053, 0.6 ) }
    dend_3 { pt3dadd( -20.7462, 47.364, -21.6077, 0.6 ) }
    dend_3 { pt3dadd( -22.4965, 49.5778, -23.7667, 0.6 ) }
    dend_3 { pt3dadd( -23.4257, 50.8734, -25.0009, 0.36 ) }
    dend_3 { pt3dadd( -25.6792, 54.0916, -27.9944, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_3 { pt3dadd( -27.3119, 56.4295, -30.0381, 0.6 ) }
    dend_3 { pt3dadd( -28.8276, 58.4292, -31.7745, 0.6 ) }
    dend_3 { pt3dadd( -29.6556, 59.4594, -32.7282, 0.48 ) }
    dend_3 { pt3dadd( -33.4818, 64.2314, -37.3694, 1.08 ) }
    dend_3 { pt3dadd( -34.2684, 65.0961, -38.3096, 0.72 ) }
    dend_3 { pt3dadd( -35.1379, 65.8032, -39.2482, 0.48 ) }
    dend_3 { pt3dadd( -37.4529, 67.2573, -41.6589, 0.84 ) }
    dend_3 { pt3dadd( -39.5095, 68.3348, -43.7333, 1.2 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 8/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 148.473, -152.834, 159.288, 0.24 ) }
    dend_49 { pt3dadd( 152.577, -156.275, 166.543, 0.24 ) }
    dend_49 { pt3dadd( 156.785, -158.6, 174.197, 0.24 ) }
    dend_49 { pt3dadd( 159.852, -160.369, 182.517, 0.24 ) }
    dend_49 { pt3dadd( 163.178, -162.919, 190.516, 0.24 ) }
    dend_49 { pt3dadd( 166.03, -166.184, 198.418, 0.24 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 14/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 148.473, -152.834, 159.288, 0.24 ) }
    dend_48 { pt3dadd( 153.921, -155.432, 162.989, 0.24 ) }
    dend_48 { pt3dadd( 159.187, -158.917, 166.15, 0.24 ) }
    dend_48 { pt3dadd( 164.367, -162.812, 168.929, 0.24 ) }
    dend_48 { pt3dadd( 168.487, -167.832, 171.575, 0.24 ) }
    dend_48 { pt3dadd( 173.499, -172.45, 173.303, 0.24 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 20/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 138.873, -64.0542, -47.297, 0.24 ) }
    dend_42 { pt3dadd( 141.964, -65.3041, -49.0589, 0.24 ) }
    dend_42 { pt3dadd( 143.998, -66.0991, -50.3962, 0.24 ) }
    dend_42 { pt3dadd( 147.835, -67.6253, -53.0107, 0.24 ) }
    dend_42 { pt3dadd( 148.674, -67.9581, -53.5675, 0.24 ) }
    dend_42 { pt3dadd( 150.02, -68.4532, -54.4665, 0.24 ) }
    dend_42 { pt3dadd( 153.674, -69.8191, -56.9136, 0.24 ) }
    dend_42 { pt3dadd( 157.191, -71.1313, -59.334, 0.24 ) }
    dend_42 { pt3dadd( 158.567, -71.6383, -60.2706, 0.24 ) }
    dend_42 { pt3dadd( 161.254, -72.6154, -62.0673, 0.24 ) }
    dend_42 { pt3dadd( 164.41, -73.641, -64.2143, 0.24 ) }
    dend_42 { pt3dadd( 166.457, -74.216, -65.5921, 0.24 ) }
    dend_42 { pt3dadd( 168.926, -74.8508, -67.261, 0.24 ) }
    dend_42 { pt3dadd( 171.489, -75.5166, -68.9837, 0.24 ) }
    dend_42 { pt3dadd( 174.291, -76.1998, -71.01, 0.24 ) }
    dend_42 { pt3dadd( 177.482, -77.0056, -73.277, 0.24 ) }
    dend_42 { pt3dadd( 179.457, -77.4874, -74.7504, 0.24 ) }
    dend_42 { pt3dadd( 181.548, -77.8958, -76.3326, 0.24 ) }
    dend_42 { pt3dadd( 183.764, -78.3177, -78.0509, 0.24 ) }
    dend_42 { pt3dadd( 188.038, -79.1181, -81.4105, 0.24 ) }
    dend_42 { pt3dadd( 190.748, -79.6693, -83.5026, 0.24 ) }
    dend_42 { pt3dadd( 196.506, -80.9231, -87.9117, 0.24 ) }
    dend_42 { pt3dadd( 200.514, -81.6889, -91.007, 0.24 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 43/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 138.873, -64.0542, -47.297, 0.24 ) }
    dend_41 { pt3dadd( 139.696, -65.4275, -46.4741, 0.24 ) }
    dend_41 { pt3dadd( 140.314, -66.4595, -45.8557, 0.24 ) }
    dend_41 { pt3dadd( 141.017, -67.6326, -45.1527, 0.24 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 47/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -42.6756, 6.77121, 13.4916, 0.24 ) }
    dend_24 { pt3dadd( -44.9107, 5.1541, 12.792, 0.24 ) }
    dend_24 { pt3dadd( -47.386, 3.58112, 12.0229, 0.24 ) }
    dend_24 { pt3dadd( -48.692, 2.75115, 11.6172, 0.24 ) }
    dend_24 { pt3dadd( -51.2796, 1.10677, 10.8133, 0.24 ) }
    dend_24 { pt3dadd( -53.8966, -0.556285, 10.0002, 0.24 ) }
    dend_24 { pt3dadd( -56.1235, -1.97146, 9.30835, 0.24 ) }
    dend_24 { pt3dadd( -57.3672, -2.72753, 8.9903, 0.24 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 55/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -42.6756, 6.77121, 13.4916, 0.48 ) }
    dend_23 { pt3dadd( -43.4319, 5.78083, 13.4471, 0.48 ) }
    dend_23 { pt3dadd( -43.9958, 5.04251, 13.4139, 0.48 ) }
    dend_23 { pt3dadd( -44.7493, 4.05582, 13.3696, 0.24 ) }
    dend_23 { pt3dadd( -45.8604, 2.60097, 13.3043, 0.24 ) }
    dend_23 { pt3dadd( -47.8815, -0.0454912, 13.1854, 0.24 ) }
    dend_23 { pt3dadd( -52.3762, -6.20706, 12.1325, 0.24 ) }
    dend_23 { pt3dadd( -57.9878, -11.2254, 10.3356, 0.24 ) }
    dend_23 { pt3dadd( -64.7209, -14.9391, 9.27257, 0.24 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 50.8307, 176.219, 59.6508, 0.24 ) }
    dend_18 { pt3dadd( 46.0976, 182.131, 73.0305, 0.24 ) }
    dend_18 { pt3dadd( 39.7226, 185.89, 86.539, 0.24 ) }
    dend_18 { pt3dadd( 34.854, 187.536, 101.07, 0.24 ) }
    dend_18 { pt3dadd( 27.5081, 192.574, 113.62, 0.24 ) }
    dend_18 { pt3dadd( 18.7684, 195.828, 125.885, 0.24 ) }
    dend_18 { pt3dadd( 11.8235, 199.511, 139.132, 0.24 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 71/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 50.8307, 176.219, 59.6508, 0.24 ) }
    dend_17 { pt3dadd( 56.9995, 185.479, 61.3798, 0.24 ) }
    dend_17 { pt3dadd( 63.3686, 194.38, 64.1018, 0.24 ) }
    dend_17 { pt3dadd( 71.0121, 202.376, 66.444, 0.24 ) }
    // Section: dend_14, id: dend_14, parent: dend_8 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.151925, 233.439, -34.4044, 0.84 ) }
    dend_14 { pt3dadd( 0.737001, 237.813, -34.8299, 0.84 ) }
    dend_14 { pt3dadd( 1.04309, 240.675, -35.052, 0.84 ) }
    dend_14 { pt3dadd( 1.43964, 244.84, -35.3064, 0.72 ) }
    dend_14 { pt3dadd( 1.71527, 247.669, -35.4873, 0.6 ) }
    dend_14 { pt3dadd( 2.36473, 254.94, -35.9419, 0.84 ) }
    dend_14 { pt3dadd( 2.64825, 258.491, -36.1505, 0.84 ) }
    dend_14 { pt3dadd( 2.82449, 261.973, -36.3188, 0.6 ) }
    dend_14 { pt3dadd( 2.93626, 264.764, -36.4853, 0.6 ) }
    dend_14 { pt3dadd( 2.99973, 267.433, -36.6671, 0.6 ) }
    dend_14 { pt3dadd( 3.04841, 271.381, -37.0355, 0.6 ) }
    dend_14 { pt3dadd( 3.089, 276.754, -37.6935, 0.6 ) }
    dend_14 { pt3dadd( 3.06755, 281.889, -38.364, 0.6 ) }
    dend_14 { pt3dadd( 3.01926, 284.628, -38.7052, 0.6 ) }
    dend_14 { pt3dadd( 2.88933, 288.437, -39.1334, 0.6 ) }
    dend_14 { pt3dadd( 2.62497, 294.048, -39.6975, 0.6 ) }
    dend_14 { pt3dadd( 2.41157, 298.223, -40.0826, 0.6 ) }
    dend_14 { pt3dadd( 2.16654, 302.991, -40.4893, 0.6 ) }
    dend_14 { pt3dadd( 2.01916, 306.507, -40.7773, 0.48 ) }
    dend_14 { pt3dadd( 1.84768, 310.327, -41.1211, 0.48 ) }
    dend_14 { pt3dadd( 1.67099, 313.407, -41.4091, 0.48 ) }
    dend_14 { pt3dadd( 1.45604, 316.149, -41.669, 0.36 ) }
    dend_14 { pt3dadd( 1.00736, 321.09, -42.3523, 0.36 ) }
    dend_14 { pt3dadd( 0.58032, 325.378, -43.0647, 0.36 ) }
    dend_14 { pt3dadd( 0.215461, 329.162, -43.8327, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -0.122841, 332.597, -44.5563, 0.36 ) }
    dend_14 { pt3dadd( -0.507858, 336.961, -45.4482, 0.36 ) }
    dend_14 { pt3dadd( -1.03166, 343.237, -46.6866, 0.36 ) }
    dend_14 { pt3dadd( -1.29461, 346.773, -47.3214, 0.36 ) }
    dend_14 { pt3dadd( -1.56457, 351.487, -48.0592, 0.36 ) }
    dend_14 { pt3dadd( -1.69145, 355.951, -48.6656, 0.36 ) }
    dend_14 { pt3dadd( -1.74738, 361.44, -49.2716, 0.36 ) }
    dend_14 { pt3dadd( -1.72095, 365.547, -49.6845, 0.36 ) }
    dend_14 { pt3dadd( -1.71316, 367.658, -49.8688, 0.36 ) }
    dend_14 { pt3dadd( -1.68314, 373.284, -50.3431, 0.36 ) }
    dend_14 { pt3dadd( -1.59587, 376.508, -50.7936, 0.36 ) }
    dend_14 { pt3dadd( -1.46493, 380.877, -51.6269, 0.36 ) }
    dend_14 { pt3dadd( -1.35845, 385.705, -52.7837, 0.36 ) }
    dend_14 { pt3dadd( -1.26755, 389.115, -53.8703, 0.36 ) }
    dend_14 { pt3dadd( -1.23659, 392.91, -55.2819, 0.36 ) }
    dend_14 { pt3dadd( -1.29282, 400.135, -58.3522, 0.36 ) }
    dend_14 { pt3dadd( -1.43923, 404.287, -60.1513, 0.36 ) }
    dend_14 { pt3dadd( -1.65545, 408.072, -61.6836, 0.36 ) }
    dend_14 { pt3dadd( -2.1292, 414.145, -63.8457, 0.36 ) }
    dend_14 { pt3dadd( -2.53948, 418.761, -65.2226, 0.36 ) }
    dend_14 { pt3dadd( -3.00332, 423.192, -66.2577, 0.12 ) }
    dend_14 { pt3dadd( -3.54374, 428.439, -67.0204, 0.12 ) }
    dend_14 { pt3dadd( -3.97787, 434.266, -67.6264, 0.12 ) }
    dend_14 { pt3dadd( -4.20738, 438.74, -67.8913, 0.12 ) }
    dend_14 { pt3dadd( -4.40934, 445.81, -68.0753, 0.12 ) }
    dend_14 { pt3dadd( -4.37574, 450.363, -68.2004, 0.12 ) }
    dend_14 { pt3dadd( -4.12134, 458.522, -68.5202, 0.12 ) }
    dend_14 { pt3dadd( -3.66005, 465.851, -68.9753, 0.12 ) }
    dend_14 { pt3dadd( -3.03494, 472.215, -69.5581, 0.12 ) }
    dend_14 { pt3dadd( -2.64766, 475.086, -69.8676, 0.12 ) }
    dend_14 { pt3dadd( -1.33343, 482.58, -70.8428, 0.12 ) }
    dend_14 { pt3dadd( -0.325219, 487.161, -71.4954, 0.12 ) }
    dend_14 { pt3dadd( 0.831481, 491.309, -72.181, 0.12 ) }
    dend_14 { pt3dadd( 3.02411, 497.523, -73.2127, 0.12 ) }
    dend_14 { pt3dadd( 5.29301, 502.71, -73.9961, 0.12 ) }
    dend_14 { pt3dadd( 7.95432, 507.743, -74.7636, 0.12 ) }
    dend_14 { pt3dadd( 9.87886, 510.81, -75.2102, 0.12 ) }
    dend_14 { pt3dadd( 12.498, 514.53, -75.8017, 0.12 ) }
    dend_14 { pt3dadd( 15.0702, 518.076, -76.4614, 0.12 ) }
    dend_14 { pt3dadd( 17.5977, 521.371, -77.2614, 0.12 ) }
    dend_14 { pt3dadd( 20.2623, 524.875, -78.3644, 0.12 ) }
    dend_14 { pt3dadd( 21.5611, 526.957, -79.0916, 0.12 ) }
    dend_14 { pt3dadd( 22.9142, 529.981, -79.9965, 0.12 ) }
    dend_14 { pt3dadd( 24.2575, 534.902, -81.0052, 0.12 ) }
    dend_14 { pt3dadd( 24.9612, 539.502, -81.9547, 0.12 ) }
    dend_14 { pt3dadd( 25.0907, 541.665, -82.3719, 0.12 ) }
    dend_14 { pt3dadd( 25.2787, 549.005, -83.6127, 0.12 ) }
    dend_14 { pt3dadd( 25.3166, 555.418, -84.6105, 0.12 ) }
    dend_14 { pt3dadd( 25.1539, 562.104, -85.4369, 0.12 ) }
    dend_14 { pt3dadd( 24.7654, 568.427, -86.1152, 0.12 ) }
    dend_14 { pt3dadd( 24.1069, 574.059, -86.5232, 0.12 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 51/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 0.151925, 233.439, -34.4044, 0.36 ) }
    dend_9 { pt3dadd( 0.258509, 236.299, -35.077, 0.36 ) }
    dend_9 { pt3dadd( 0.36086, 239.11, -35.6481, 0.36 ) }
    dend_9 { pt3dadd( 0.51337, 242.755, -36.2317, 0.36 ) }
    dend_9 { pt3dadd( 0.691031, 246.794, -36.738, 0.36 ) }
    dend_9 { pt3dadd( 0.908941, 251.357, -37.236, 0.36 ) }
    dend_9 { pt3dadd( 1.03631, 253.626, -37.4319, 0.36 ) }
    dend_9 { pt3dadd( 1.42679, 257.847, -37.7199, 0.36 ) }
    dend_9 { pt3dadd( 1.9183, 262.332, -37.9844, 0.36 ) }
    dend_9 { pt3dadd( 2.35151, 266.251, -38.1652, 0.36 ) }
    dend_9 { pt3dadd( 2.75445, 270.162, -38.2857, 0.36 ) }
    dend_9 { pt3dadd( 3.21416, 275.162, -38.4055, 0.36 ) }
    dend_9 { pt3dadd( 3.74784, 282.31, -38.6949, 0.36 ) }
    dend_9 { pt3dadd( 3.9652, 287.268, -38.9747, 0.24 ) }
    dend_9 { pt3dadd( 4.04091, 290.713, -39.2462, 0.24 ) }
    dend_9 { pt3dadd( 4.06607, 295.259, -39.6396, 0.24 ) }
    dend_9 { pt3dadd( 4.03379, 296.908, -39.7884, 0.24 ) }
    dend_9 { pt3dadd( 3.85218, 300.827, -40.2042, 0.24 ) }
    dend_9 { pt3dadd( 3.3257, 307.456, -40.9223, 0.24 ) }
    dend_9 { pt3dadd( 3.15087, 309.334, -41.1741, 0.24 ) }
    dend_9 { pt3dadd( 2.84474, 312.55, -41.6137, 0.24 ) }
    dend_9 { pt3dadd( 2.56482, 315.747, -42.0025, 0.24 ) }
    dend_9 { pt3dadd( 2.26051, 319.794, -42.4242, 0.24 ) }
    dend_9 { pt3dadd( 1.94359, 324.613, -42.8187, 0.24 ) }
    dend_9 { pt3dadd( 1.64211, 329.316, -43.1638, 0.24 ) }
    dend_9 { pt3dadd( 1.3931, 334.153, -43.5076, 0.24 ) }
    dend_9 { pt3dadd( 1.25593, 338.377, -43.8141, 0.24 ) }
    dend_9 { pt3dadd( 1.22674, 340.122, -43.9237, 0.24 ) }
    dend_9 { pt3dadd( 1.24524, 343.76, -44.1009, 0.24 ) }
    dend_9 { pt3dadd( 1.40971, 346.962, -44.238, 0.24 ) }
    dend_9 { pt3dadd( 1.86231, 351.485, -44.434, 0.24 ) }
    dend_9 { pt3dadd( 2.29911, 355.063, -44.678, 0.24 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 83/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -39.5095, 68.3348, -43.7333, 0.48 ) }
    dend_5 { pt3dadd( -39.3618, 69.7372, -44.7686, 0.48 ) }
    dend_5 { pt3dadd( -39.3411, 72.2846, -46.3288, 0.48 ) }
    dend_5 { pt3dadd( -39.5672, 74.8023, -47.6502, 0.48 ) }
    dend_5 { pt3dadd( -39.7194, 76.2761, -48.4601, 0.48 ) }
    dend_5 { pt3dadd( -39.9273, 77.7466, -49.3533, 0.48 ) }
    dend_5 { pt3dadd( -40.2512, 79.6077, -50.4217, 0.36 ) }
    dend_5 { pt3dadd( -40.6907, 81.7154, -51.6425, 0.6 ) }
    dend_5 { pt3dadd( -41.1554, 83.59, -52.6991, 0.36 ) }
    dend_5 { pt3dadd( -41.7502, 86.5208, -54.2864, 0.36 ) }
    dend_5 { pt3dadd( -42.1338, 89.1053, -55.6381, 0.36 ) }
    dend_5 { pt3dadd( -42.3333, 91.5589, -57.0281, 0.84 ) }
    dend_5 { pt3dadd( -42.4227, 94.3608, -58.6408, 0.48 ) }
    dend_5 { pt3dadd( -42.383, 95.3753, -59.2737, 0.48 ) }
    dend_5 { pt3dadd( -42.2432, 96.8437, -60.1949, 0.36 ) }
    dend_5 { pt3dadd( -42.0816, 98.6907, -61.383, 1.08 ) }
    dend_5 { pt3dadd( -41.7158, 102.283, -63.9461, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_5 { pt3dadd( -41.6369, 103.233, -64.6675, 0.6 ) }
    dend_5 { pt3dadd( -41.4358, 106.701, -67.334, 0.36 ) }
    dend_5 { pt3dadd( -41.3572, 108.967, -69.0948, 0.72 ) }
    dend_5 { pt3dadd( -41.3138, 111.642, -71.084, 0.72 ) }
    dend_5 { pt3dadd( -41.285, 114.361, -72.9926, 0.36 ) }
    dend_5 { pt3dadd( -41.3064, 116.524, -74.4392, 0.84 ) }
    dend_5 { pt3dadd( -41.4541, 119.688, -76.5244, 0.36 ) }
    dend_5 { pt3dadd( -41.5394, 121.115, -77.4232, 0.96 ) }
    dend_5 { pt3dadd( -41.8961, 126.572, -80.762, 0.24 ) }
    dend_5 { pt3dadd( -42.0361, 128.917, -82.1048, 0.72 ) }
    dend_5 { pt3dadd( -42.3471, 132.643, -84.1806, 0.36 ) }
    dend_5 { pt3dadd( -42.5491, 134.604, -85.3408, 1.69 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 12/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -39.5095, 68.3348, -43.7333, 0.36 ) }
    dend_4 { pt3dadd( -40.3069, 69.2204, -45.1852, 0.36 ) }
    dend_4 { pt3dadd( -41.5275, 70.8595, -47.4228, 0.36 ) }
    dend_4 { pt3dadd( -42.3883, 72.4726, -49.4996, 0.36 ) }
    dend_4 { pt3dadd( -44.1426, 75.5595, -53.096, 0.36 ) }
    dend_4 { pt3dadd( -45.5816, 78.1443, -56.0138, 0.24 ) }
    dend_4 { pt3dadd( -46.5203, 79.7845, -57.8659, 0.12 ) }
    dend_4 { pt3dadd( -47.8416, 82.1084, -60.3611, 0.12 ) }
    dend_4 { pt3dadd( -50.717, 87.1646, -65.6076, 0.12 ) }
    dend_4 { pt3dadd( -52.8659, 90.1555, -69.2373, 0.12 ) }
    dend_4 { pt3dadd( -54.5749, 92.2902, -72.1373, 0.12 ) }
    dend_4 { pt3dadd( -55.5916, 93.4005, -73.6658, 0.12 ) }
    dend_4 { pt3dadd( -56.6851, 94.5344, -75.2573, 0.12 ) }
    dend_4 { pt3dadd( -57.1901, 95.033, -75.973, 0.12 ) }
    dend_4 { pt3dadd( -66.2525, 103.689, -88.5517, 0.12 ) }
    dend_4 { pt3dadd( -69.5974, 107.009, -93.4703, 0.12 ) }
    dend_4 { pt3dadd( -73.643, 110.994, -99.2256, 0.12 ) }
    dend_4 { pt3dadd( -78.0856, 115.555, -105.646, 0.12 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 30/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -57.3672, -2.72753, 8.9903, 0.24 ) }
    dend_26 { pt3dadd( -59.7694, -3.27668, 9.39178, 0.24 ) }
    dend_26 { pt3dadd( -61.1073, -3.55175, 9.59576, 0.24 ) }
    dend_26 { pt3dadd( -63.2917, -3.9975, 9.8241, 0.36 ) }
    dend_26 { pt3dadd( -64.7942, -4.2919, 9.91505, 0.36 ) }
    dend_26 { pt3dadd( -66.4463, -4.4872, 10.0355, 0.36 ) }
    dend_26 { pt3dadd( -67.3578, -4.56824, 10.1084, 0.36 ) }
    dend_26 { pt3dadd( -69.1196, -4.68367, 10.1925, 0.36 ) }
    dend_26 { pt3dadd( -71.605, -4.8268, 10.3314, 0.36 ) }
    dend_26 { pt3dadd( -73.3796, -4.94086, 10.4364, 0.36 ) }
    dend_26 { pt3dadd( -77.1941, -5.25585, 10.6605, 0.36 ) }
    dend_26 { pt3dadd( -78.2496, -5.34344, 10.7228, 0.36 ) }
    dend_26 { pt3dadd( -80.6203, -5.56439, 10.8762, 0.36 ) }
    dend_26 { pt3dadd( -82.1842, -5.71842, 10.9908, 0.36 ) }
    dend_26 { pt3dadd( -84.3988, -5.97215, 11.2127, 0.36 ) }
    dend_26 { pt3dadd( -85.9485, -6.26447, 11.3599, 0.36 ) }
    dend_26 { pt3dadd( -93.9928, -8.83766, 11.3655, 0.36 ) }
    dend_26 { pt3dadd( -101.746, -12.1699, 11.4675, 0.36 ) }
    dend_26 { pt3dadd( -109.49, -15.1632, 9.91773, 0.36 ) }
    dend_26 { pt3dadd( -117.324, -16.6869, 7.15148, 0.36 ) }
    dend_26 { pt3dadd( -124.714, -17.0803, 3.1021, 0.36 ) }
    dend_26 { pt3dadd( -132.733, -18.9562, 1.21481, 0.36 ) }
    dend_26 { pt3dadd( -140.452, -21.9157, -0.512593, 0.36 ) }
    dend_26 { pt3dadd( -147.96, -25.4242, -2.12317, 0.36 ) }
    dend_26 { pt3dadd( -155.222, -28.5761, -5.06872, 0.36 ) }
    dend_26 { pt3dadd( -162.703, -32.1888, -6.55842, 0.36 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 56/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -57.3672, -2.72753, 8.9903, 0.24 ) }
    dend_25 { pt3dadd( -56.8402, 0.775109, 7.4863, 0.24 ) }
    dend_25 { pt3dadd( -56.7598, 1.77228, 7.1053, 0.24 ) }
    dend_25 { pt3dadd( -56.5456, 3.86164, 6.37561, 0.24 ) }
    dend_25 { pt3dadd( -56.4316, 4.83619, 6.06692, 0.24 ) }
    dend_25 { pt3dadd( -55.6592, 10.269, 4.43519, 0.24 ) }
    dend_25 { pt3dadd( -55.2142, 12.9012, 3.68455, 0.24 ) }
    dend_25 { pt3dadd( -54.7138, 15.7075, 2.97332, 0.24 ) }
    dend_25 { pt3dadd( -53.8574, 19.95, 1.96506, 0.24 ) }
    dend_25 { pt3dadd( -53.2332, 22.6509, 1.38953, 0.24 ) }
    dend_25 { pt3dadd( -52.5714, 25.3406, 0.799488, 0.24 ) }
    dend_25 { pt3dadd( -52.1417, 26.9957, 0.458194, 0.24 ) }
    dend_25 { pt3dadd( -51.8456, 28.112, 0.211046, 0.24 ) }
    dend_25 { pt3dadd( -51.385, 29.7592, -0.235858, 0.24 ) }
    dend_25 { pt3dadd( -50.5858, 32.6219, -1.03916, 0.24 ) }
    dend_25 { pt3dadd( -48.9536, 38.1313, -2.60134, 0.24 ) }
    dend_25 { pt3dadd( -47.9384, 41.4207, -3.4697, 0.24 ) }
    dend_25 { pt3dadd( -46.8833, 44.5863, -4.3279, 0.24 ) }
    dend_25 { pt3dadd( -45.2402, 49.3391, -5.62333, 0.24 ) }
    dend_25 { pt3dadd( -43.4339, 54.3832, -6.99085, 0.24 ) }
    dend_25 { pt3dadd( -42.5948, 56.5309, -7.54332, 0.24 ) }
    dend_25 { pt3dadd( -41.2336, 59.4867, -8.17819, 0.24 ) }
    dend_25 { pt3dadd( -39.1484, 63.7147, -9.14542, 0.24 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 79/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 2.29911, 355.063, -44.678, 0.24 ) }
    dend_13 { pt3dadd( 2.5989, 361.07, -44.5015, 0.24 ) }
    dend_13 { pt3dadd( 2.71971, 365.183, -44.374, 0.24 ) }
    dend_13 { pt3dadd( 2.77513, 369.457, -44.2323, 0.24 ) }
    dend_13 { pt3dadd( 2.80573, 376.754, -43.9547, 0.24 ) }
    dend_13 { pt3dadd( 2.80149, 383.685, -43.6564, 0.24 ) }
    dend_13 { pt3dadd( 2.79716, 387.471, -43.4635, 0.24 ) }
    dend_13 { pt3dadd( 2.65747, 392.338, -43.0637, 0.24 ) }
    dend_13 { pt3dadd( 2.46749, 398.157, -42.4464, 0.24 ) }
    dend_13 { pt3dadd( 2.24522, 402.923, -41.8867, 0.24 ) }
    dend_13 { pt3dadd( 2.00287, 406.729, -41.4585, 0.24 ) }
    dend_13 { pt3dadd( 1.50663, 411.744, -41.0505, 0.24 ) }
    dend_13 { pt3dadd( 0.898231, 416.323, -40.9135, 0.24 ) }
    dend_13 { pt3dadd( 0.182782, 420.524, -41.0335, 0.24 ) }
    dend_13 { pt3dadd( -0.5019, 423.758, -41.3388, 0.24 ) }
    dend_13 { pt3dadd( -1.46704, 428.174, -42.1071, 0.24 ) }
    dend_13 { pt3dadd( -2.73753, 433.886, -43.4436, 0.24 ) }
    dend_13 { pt3dadd( -4.44122, 440.591, -45.0126, 0.24 ) }
    dend_13 { pt3dadd( -5.70252, 445.461, -46.0609, 0.24 ) }
    dend_13 { pt3dadd( -8.08638, 453.469, -47.1826, 0.24 ) }
    dend_13 { pt3dadd( -9.64065, 458.306, -47.5335, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( -11.1032, 463.426, -47.6037, 0.24 ) }
    dend_13 { pt3dadd( -13.8313, 472.992, -47.0338, 0.24 ) }
    dend_13 { pt3dadd( -15.511, 479.079, -46.3281, 0.24 ) }
    dend_13 { pt3dadd( -17.2666, 486.215, -45.3465, 0.24 ) }
    dend_13 { pt3dadd( -17.887, 489.064, -44.926, 0.24 ) }
    dend_13 { pt3dadd( -20.0549, 498.641, -43.4123, 0.24 ) }
    dend_13 { pt3dadd( -21.263, 505.002, -42.5502, 0.24 ) }
    dend_13 { pt3dadd( -21.8158, 509.439, -42.2661, 0.24 ) }
    dend_13 { pt3dadd( -22.4434, 515.717, -42.195, 0.24 ) }
    dend_13 { pt3dadd( -22.6806, 520.195, -42.4935, 0.24 ) }
    dend_13 { pt3dadd( -23.1004, 525.575, -42.8213, 0.24 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 11/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 2.29911, 355.063, -44.678, 0.24 ) }
    dend_10 { pt3dadd( 2.08585, 357.977, -45.4475, 0.24 ) }
    dend_10 { pt3dadd( 1.92741, 360.142, -46.0193, 0.24 ) }
    dend_10 { pt3dadd( 1.74954, 362.573, -46.6611, 0.24 ) }
    dend_10 { pt3dadd( 1.51079, 365.835, -47.5227, 0.24 ) }
    dend_10 { pt3dadd( 1.1739, 370.438, -48.7383, 0.24 ) }
    dend_10 { pt3dadd( 1.0018, 372.79, -49.3593, 0.24 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 18/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -42.5491, 134.604, -85.3408, 0.48 ) }
    dend_7 { pt3dadd( -48.9977, 140.374, -91.6785, 0.48 ) }
    dend_7 { pt3dadd( -59.5066, 149.608, -100.296, 0.12 ) }
    dend_7 { pt3dadd( -67.8305, 156.777, -106.233, 0.24 ) }
    dend_7 { pt3dadd( -73.013, 161.237, -109.324, 0.24 ) }
    dend_7 { pt3dadd( -76.2614, 164.161, -110.917, 0.24 ) }
    dend_7 { pt3dadd( -80.3498, 167.933, -112.815, 0.24 ) }
    dend_7 { pt3dadd( -84.1206, 171.583, -113.878, 0.24 ) }
    dend_7 { pt3dadd( -86.4164, 173.669, -114.377, 0.24 ) }
    dend_7 { pt3dadd( -92.027, 178.45, -116.638, 0.24 ) }
    dend_7 { pt3dadd( -98.7437, 184.246, -120.266, 0.24 ) }
    dend_7 { pt3dadd( -102.275, 187.517, -122.701, 0.24 ) }
    dend_7 { pt3dadd( -105.18, 190.561, -125.27, 0.24 ) }
    dend_7 { pt3dadd( -112.078, 198.356, -132.816, 0.24 ) }
    dend_7 { pt3dadd( -117.612, 204.494, -139.499, 0.24 ) }
    dend_7 { pt3dadd( -119.199, 206.141, -141.447, 0.24 ) }
    dend_7 { pt3dadd( -121.934, 208.763, -144.677, 0.24 ) }
    dend_7 { pt3dadd( -125.658, 212.301, -148.568, 0.24 ) }
    dend_7 { pt3dadd( -128.575, 215.081, -151.326, 0.24 ) }
    dend_7 { pt3dadd( -135.525, 221.456, -156.577, 0.24 ) }
    dend_7 { pt3dadd( -139.524, 224.722, -159.239, 0.24 ) }
    dend_7 { pt3dadd( -144.078, 228.111, -162.134, 0.24 ) }
    dend_7 { pt3dadd( -147.479, 230.38, -164.145, 0.24 ) }
    dend_7 { pt3dadd( -151.825, 233.119, -166.456, 0.24 ) }
    dend_7 { pt3dadd( -156.029, 235.991, -168.693, 0.24 ) }
    dend_7 { pt3dadd( -160.496, 239.723, -171.446, 0.24 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 44/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -42.5491, 134.604, -85.3408, 0.48 ) }
    dend_6 { pt3dadd( -39.9391, 139.852, -90.2514, 0.48 ) }
    dend_6 { pt3dadd( -36.1626, 147.182, -97.1557, 0.24 ) }
    dend_6 { pt3dadd( -32.969, 153.65, -103.062, 0.24 ) }
    dend_6 { pt3dadd( -29.7965, 160.469, -109.24, 0.24 ) }
    dend_6 { pt3dadd( -28.1125, 164.341, -112.72, 0.24 ) }
    dend_6 { pt3dadd( -26.1837, 168.777, -116.706, 0.24 ) }
    dend_6 { pt3dadd( -23.9785, 174.081, -121.411, 0.24 ) }
    dend_6 { pt3dadd( -22.9054, 176.579, -123.608, 0.24 ) }
    dend_6 { pt3dadd( -20.925, 181.158, -127.556, 0.24 ) }
    dend_6 { pt3dadd( -19.0295, 187.019, -132.591, 0.24 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 55/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -162.703, -32.1888, -6.55842, 0.24 ) }
    dend_30 { pt3dadd( -170.278, -34.8662, -7.4073, 0.24 ) }
    dend_30 { pt3dadd( -177.408, -38.5513, -8.23529, 0.24 ) }
    dend_30 { pt3dadd( -184.519, -42.0049, -9.87659, 0.24 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 59/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -162.703, -32.1888, -6.55842, 0.24 ) }
    dend_27 { pt3dadd( -170.386, -33.1812, -8.12511, 0.24 ) }
    dend_27 { pt3dadd( -178.269, -33.3265, -8.60395, 0.24 ) }
    dend_27 { pt3dadd( -186.005, -32.021, -7.8228, 0.24 ) }
    dend_27 { pt3dadd( -193.158, -28.9804, -6.70547, 0.24 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 64/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 1.0018, 372.79, -49.3593, 0.24 ) }
    dend_12 { pt3dadd( 0.200937, 377.215, -49.2325, 0.24 ) }
    dend_12 { pt3dadd( -0.410679, 380.595, -49.1357, 0.24 ) }
    dend_12 { pt3dadd( -0.862991, 383.095, -49.064, 0.24 ) }
    dend_12 { pt3dadd( -1.22993, 385.122, -49.0059, 0.24 ) }
    dend_12 { pt3dadd( -1.8838, 388.735, -48.9024, 0.24 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 1.0018, 372.79, -49.3593, 0.24 ) }
    dend_11 { pt3dadd( -0.118185, 377.762, -49.39, 0.24 ) }
    dend_11 { pt3dadd( -1.55393, 382.439, -50.0161, 0.24 ) }
    dend_11 { pt3dadd( -2.81275, 386.516, -51.0405, 0.24 ) }
    dend_11 { pt3dadd( -3.94769, 389.752, -51.9909, 0.24 ) }
    dend_11 { pt3dadd( -4.83977, 392.617, -52.968, 0.24 ) }
    dend_11 { pt3dadd( -5.71669, 395.798, -54.0734, 0.24 ) }
    dend_11 { pt3dadd( -7.5718, 402.09, -56.4156, 0.24 ) }
    dend_11 { pt3dadd( -8.93714, 407.162, -58.545, 0.24 ) }
    dend_11 { pt3dadd( -9.89002, 411.393, -60.3836, 0.24 ) }
    dend_11 { pt3dadd( -10.5391, 416.506, -62.4074, 0.24 ) }
    dend_11 { pt3dadd( -10.7238, 419.685, -63.431, 0.24 ) }
    dend_11 { pt3dadd( -10.8369, 421.149, -63.8441, 0.24 ) }
    dend_11 { pt3dadd( -11.1477, 424.273, -64.6391, 0.24 ) }
    dend_11 { pt3dadd( -11.4926, 426.876, -65.2609, 0.24 ) }
    dend_11 { pt3dadd( -12.8757, 435.544, -67.3423, 0.24 ) }
    dend_11 { pt3dadd( -13.5773, 439.024, -68.1534, 0.24 ) }
    dend_11 { pt3dadd( -16.7004, 453.696, -71.6966, 0.24 ) }
    dend_11 { pt3dadd( -17.5508, 457.759, -72.6261, 0.24 ) }
    dend_11 { pt3dadd( -18.4393, 462.375, -73.6168, 0.24 ) }
    dend_11 { pt3dadd( -19.1442, 466.791, -74.503, 0.24 ) }
    dend_11 { pt3dadd( -19.538, 469.822, -75.0305, 0.24 ) }
    dend_11 { pt3dadd( -19.8491, 474.807, -75.6682, 0.24 ) }
    dend_11 { pt3dadd( -19.8057, 479.291, -75.9461, 0.24 ) }
    dend_11 { pt3dadd( -19.6307, 485.042, -76.2641, 0.24 ) }
    dend_11 { pt3dadd( -19.2675, 492.522, -76.6535, 0.24 ) }
    dend_11 { pt3dadd( -18.7675, 500.259, -77.0115, 0.24 ) }
    dend_11 { pt3dadd( -18.1496, 509.297, -77.4222, 0.24 ) }
    dend_11 { pt3dadd( -17.7135, 516.484, -77.7235, 0.24 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 99/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -193.158, -28.9804, -6.70547, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_29 { pt3dadd( -203.236, -28.1926, -8.09516, 0.24 ) }
    dend_29 { pt3dadd( -213.163, -26.3438, -9.45858, 0.24 ) }
    dend_29 { pt3dadd( -223.096, -24.3175, -10.4992, 0.24 ) }
    dend_29 { pt3dadd( -232.795, -22.5202, -13.0096, 0.24 ) }
    dend_29 { pt3dadd( -242.001, -19.1961, -15.68, 0.24 ) }
    dend_29 { pt3dadd( -251.655, -17.4875, -18.4121, 0.24 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 6/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -193.158, -28.9804, -6.70547, 0.24 ) }
    dend_28 { pt3dadd( -200.927, -28.113, -6.78438, 0.24 ) }
    dend_28 { pt3dadd( -208.645, -27.3911, -7.7815, 0.24 ) }
    dend_28 { pt3dadd( -216.233, -26.4992, -9.40603, 0.24 ) }
    dend_28 { pt3dadd( -224.009, -26.9753, -10.1865, 0.24 ) }
    dend_28 { pt3dadd( -231.817, -26.9457, -9.60032, 0.24 ) }
    dend_28 { pt3dadd( -239.593, -26.5965, -10.3682, 0.24 ) }
    dend_28 { pt3dadd( -247.133, -25.0371, -11.6228, 0.24 ) }
    dend_28 { pt3dadd( -254.431, -22.8589, -13.2361, 0.24 ) }
    dend_28 { pt3dadd( -261.783, -20.3677, -13.8366, 0.24 ) }
    dend_28 { pt3dadd( -269.045, -17.6555, -14.4957, 0.24 ) }
    dend_28 { pt3dadd( -276.461, -15.2678, -14.5631, 0.24 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_49 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_59 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_56 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_54 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_36 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_58 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_57 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_46 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_43 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_38 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_32 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_53 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_52 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_50 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_47 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_39 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_19 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_3 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_49 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_42 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_18 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_14 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_9 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_5 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_4 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_26 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_25 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_13 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_7 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_6 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_11 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_29 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_28 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_44 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_20 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_45 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_21 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_37 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_51 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_22 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_24 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_23 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_40 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_41 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_30 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_27 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_48 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_10 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_0, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_1, dend_1, axon_1, axon_1, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_20 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_55 nseg = 11
    dend_59 nseg = 9
    dend_56 nseg = 3
    dend_54 nseg = 11
    dend_36 nseg = 3
    dend_58 nseg = 7
    dend_57 nseg = 5
    dend_46 nseg = 11
    dend_43 nseg = 15
    dend_38 nseg = 5
    dend_32 nseg = 11
    dend_15 nseg = 5
    dend_53 nseg = 13
    dend_52 nseg = 7
    dend_50 nseg = 3
    dend_47 nseg = 3
    dend_39 nseg = 5
    dend_34 nseg = 3
    dend_33 nseg = 5
    dend_31 nseg = 3
    dend_19 nseg = 11
    dend_16 nseg = 5
    dend_8 nseg = 11
    dend_3 nseg = 3
    dend_49 nseg = 3
    dend_42 nseg = 3
    dend_18 nseg = 5
    dend_14 nseg = 17
    dend_9 nseg = 7
    dend_5 nseg = 3
    dend_4 nseg = 5
    dend_26 nseg = 5
    dend_25 nseg = 3
    dend_13 nseg = 9
    dend_7 nseg = 9
    dend_6 nseg = 3
    dend_11 nseg = 7
    dend_29 nseg = 3
    dend_28 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L6_NBC_750f7ba17d_0_0


