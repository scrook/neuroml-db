// Cell: bNAC219_L23_BTC_07c7c10a30_0_0
/*
{
  "id" : "bNAC219_L23_BTC_07c7c10a30_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.701782, -14.5938, 2.84454, 2.73269", "0.624028, -13.2198, 2.58654, 4.41229", "0.546274, -11.8458, 2.32855, 5.84991", "0.46852, -10.4718, 2.07055, 7.31637", "0.390766, -9.09779, 1.81255, 8.68275", "0.313011, -7.72379, 1.55455, 10.1324", "0.235257, -6.34979, 1.29656, 11.1056", "0.157503, -4.97579, 1.03856, 11.7054", "0.0797487, -3.60179, 0.780562, 12.0256", "0.00199453, -2.22779, 0.522565, 12.4948", "-0.0757597, -0.853785, 0.264567, 12.7838", "-0.153514, 0.520216, 0.00657008, 12.9275", "-0.231268, 1.89422, -0.251427, 12.8186", "-0.309022, 3.26822, -0.509424, 12.3668", "-0.386777, 4.64222, -0.767422, 11.8063", "-0.464531, 6.01622, -1.02542, 10.8607", "-0.542285, 7.39022, -1.28342, 9.60756", "-0.620039, 8.76422, -1.54141, 8.32491", "-0.697793, 10.1382, -1.79941, 6.57632", "-0.775548, 11.5122, -2.05741, 4.5422", "-0.853302, 12.8862, -2.3154, 2.90642" ]
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-3.99768, 4.28759, 12.0608, 1.77", "-4.19696, 5.16227, 12.3515, 1.77", "-4.55654, 6.51799, 12.9849, 1.55", "-4.84272, 7.42448, 13.519, 1.55", "-5.264, 8.45269, 14.2993, 1.4", "-6.0291, 9.85957, 15.5567, 1.4", "-6.65987, 10.7761, 16.4683, 1.4", "-7.37758, 11.4931, 17.3554, 1.69", "-8.00221, 11.9349, 18.0004, 1.69", "-9.20156, 12.5858, 18.9964, 1.4", "-10.2665, 13.06, 19.731, 1.33", "-11.2266, 13.4559, 20.1511, 1.18", "-12.7499, 14.1361, 20.4543, 1.18", "-13.8141, 14.6875, 20.485, 1.18", "-14.877, 15.3321, 20.4614, 1.33", "-16.2628, 16.3635, 20.357, 1.4", "-18.6261, 18.597, 20.1375, 1.62", "-19.4958, 19.6485, 20.0705, 1.69", "-20.3746, 20.9074, 20.0033, 1.33", "-21.4631, 22.7558, 19.9704, 1.62", "-21.9686, 23.876, 20.0514, 1.62", "-22.3337, 25.1036, 20.412, 1.84", "-22.4636, 25.7653, 20.8683, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500003629291099
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.09232, -14.5417, 2.30081, 3.98", "1.09232, -14.5417, 2.30081, 3.98", "1.22546, -16.2174, 2.30081, 3.98", "1.39629, -18.3676, 2.30081, 3.76", "1.56648, -20.5097, 2.30081, 3.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500003629291099
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.877678, 13.0001, -4.94919, 2.58", "-0.877678, 13.0001, -4.94919, 2.58", "-0.300741, 14.8495, -4.56666, 2.14", "0.017671, 15.9085, -4.33582, 2.14", "0.33059, 17.0381, -4.09413, 1.92", "0.756268, 18.7746, -3.71765, 1.69", "0.990606, 19.8757, -3.49532, 1.69", "1.16103, 20.9345, -3.30905, 1.69", "1.30645, 22.5017, -3.09638, 1.92", "1.32221, 23.4518, -3.04433, 2.06", "1.24319, 24.8552, -3.16595, 1.99", "1.14795, 25.7763, -3.39051, 1.84", "1.01395, 27.1016, -3.85363, 1.69", "0.886535, 28.2035, -4.30739, 1.77", "0.719168, 29.5753, -4.95753, 1.69", "0.498492, 31.5697, -6.01247, 1.92", "0.355621, 33.1278, -6.93774, 2.14", "0.280707, 34.4964, -7.7773, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500003629291099
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.853302, 12.8862, -2.3154, 0.908168", "-1.70079, 27.8622, -2.3154, 0.908168", "-2.54828, 42.8383, -2.3154, 0.908168" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-22.4636, 25.7653, 20.8683, 0.66", "-23.9468, 26.999, 23.0844, 0.66", "-24.7248, 27.6386, 23.9888, 0.59", "-25.7563, 28.4582, 24.9956, 0.59", "-26.5353, 29.0133, 25.6727, 0.52", "-27.4786, 29.5993, 26.4363, 0.66", "-28.1435, 29.9742, 26.9421, 0.52", "-28.8195, 30.3574, 27.3924, 0.52", "-29.6592, 30.8287, 28.0783, 0.44", "-30.2612, 31.1416, 28.706, 0.66", "-30.8956, 31.4336, 29.5534, 0.52", "-31.436, 31.6694, 30.3794, 0.74", "-32.8011, 32.2691, 32.7371, 1.03", "-33.5406, 32.6178, 34.2013, 0.66", "-34.1374, 32.9482, 35.5749, 0.59", "-34.5386, 33.2396, 36.657, 0.74", "-42.5109, 37.4033, 45.1633, 0.74" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-22.4636, 25.7653, 20.8683, 0.88", "-22.5532, 27.0471, 21.2322, 0.88", "-22.6053, 27.4942, 21.3328, 0.88", "-22.6944, 28.0547, 21.4579, 0.88", "-22.8141, 28.6976, 21.6018, 0.88", "-22.9272, 29.3086, 21.7486, 0.81", "-23.0297, 29.8842, 21.9036, 0.81", "-23.1114, 30.2777, 21.9893, 1.03", "-23.226, 30.734, 22.0944, 0.81", "-23.3789, 31.2349, 22.2137, 0.96", "-23.518, 31.6423, 22.3117, 0.88", "-23.6802, 32.1263, 22.4256, 0.74", "-23.7879, 32.4566, 22.5048, 0.66", "-23.9022, 32.8433, 22.5964, 0.74", "-24.013, 33.2995, 22.6926, 0.81", "-24.0821, 33.6544, 22.7665, 0.81", "-24.1404, 34.0633, 22.8578, 0.88", "-24.1716, 34.4994, 22.9644, 1.03", "-24.1711, 35.0019, 23.1046, 0.96", "-24.1344, 35.6262, 23.2851, 1.03", "-24.1019, 36.0711, 23.4076, 1.03", "-24.0626, 36.7235, 23.5821, 1.11", "-24.0573, 37.1417, 23.6703, 0.96", "-24.082, 37.6683, 23.7506, 0.88", "-24.158, 38.2606, 23.827, 0.74", "-24.2656, 38.7644, 23.8895, 0.81", "-24.3697, 39.1088, 23.9429, 0.96", "-24.6289, 39.7591, 24.0658, 1.11", "-24.7781, 40.0625, 24.141, 1.11", "-25.028, 40.4995, 24.2714, 0.96", "-25.2687, 40.8969, 24.4077, 0.74", "-25.5316, 41.3495, 24.5741, 0.74", "-25.6754, 41.607, 24.6673, 0.66", "-25.8257, 41.8835, 24.7655, 0.59", "-26.0719, 42.3385, 24.8865, 0.81", "-26.1959, 42.5715, 24.9337, 0.96", "-26.3459, 42.8704, 24.9768, 0.96", "-26.5445, 43.3273, 25.0202, 0.59", "-26.7516, 43.9393, 25.0633, 0.59", "-26.8655, 44.42, 25.0866, 0.66", "-26.9229, 44.9182, 25.1051, 0.96", "-26.9224, 45.3001, 25.115, 1.03", "-26.8816, 45.7138, 25.1402, 0.81", "-26.7863, 46.2318, 25.1906, 0.52", "-26.7004, 46.6091, 25.2557, 0.37", "-26.6386, 46.9641, 25.3581, 0.37", "-26.6413, 47.2134, 25.4617, 0.44", "-26.7557, 47.7387, 25.7617, 0.44", "-26.8716, 48.0469, 25.9421, 0.66", "-27.0407, 48.4391, 26.1463, 1.03", "-27.1548, 48.7357, 26.2718, 1.18", "-27.2492, 49.0917, 26.3904, 1.25", "-27.2732, 49.4771, 26.4854, 1.4", "-27.1832, 50.0843, 26.5855, 1.25", "-27.0577, 50.4709, 26.6297, 1.18", "-26.8152, 50.9927, 26.6434, 0.66", "-26.5362, 51.4746, 26.629, 0.66", "-26.1579, 52.0286, 26.5959, 0.66", "-25.9288, 52.3205, 26.5605, 0.81", "-25.6296, 52.6659, 26.5122, 0.96", "-25.2955, 53.0588, 26.4578, 0.81", "-25.0117, 53.416, 26.4055, 0.88", "-24.7919, 53.7513, 26.3628, 0.88", "-24.5011, 54.3357, 26.3295, 0.74", "-24.3738, 54.6548, 26.3388, 0.74", "-24.2227, 55.1019, 26.4024, 0.59", "-24.1495, 55.3611, 26.455, 0.59", "-24.0477, 55.8003, 26.5439, 0.59", "-23.9272, 56.4589, 26.663, 0.74", "-23.8813, 56.8567, 26.7233, 0.81", "-23.846, 57.3297, 26.7673, 0.81", "-23.8131, 57.9766, 26.8005, 0.74", "-23.7846, 58.4187, 26.8026, 0.74", "-23.7481, 58.856, 26.7824, 0.74", "-23.6761, 59.5823, 26.7225, 0.88", "-23.5833, 60.32, 26.6377, 1.03", "-23.516, 60.7957, 26.57, 1.03", "-23.4547, 61.1501, 26.5295, 1.69", "-23.3261, 61.8114, 26.4699, 1.4", "-23.2274, 62.3104, 26.4377, 0.74", "-23.1207, 62.8547, 26.4228, 0.74", "-23.0833, 63.0947, 26.4174, 0.88", "-23.0307, 63.6287, 26.4035, 1.03", "-23.0125, 63.9226, 26.3974, 1.11", "-22.9704, 64.5077, 26.3856, 0.66", "-22.9266, 64.8912, 26.3683, 0.66", "-22.8099, 65.4198, 26.3283, 0.81", "-22.6566, 65.8916, 26.2464, 1.03", "-22.492, 66.3286, 26.1333, 0.88", "-22.3584, 66.6646, 26.0343, 0.66", "-22.1911, 67.1206, 25.8813, 0.66", "-22.0815, 67.5448, 25.7298, 0.88", "-22.052, 68.0483, 25.5708, 0.74", "-22.1229, 68.4412, 25.4542, 0.66", "-22.1972, 68.7153, 25.3871, 0.66", "-22.3217, 69.1916, 25.2859, 0.52", "-22.3704, 69.5219, 25.2232, 0.44", "-22.3214, 69.9281, 25.1579, 0.44", "-22.183, 70.2271, 25.1258, 0.44", "-21.7432, 70.927, 25.0274, 0.52", "-21.4267, 71.3775, 24.9599, 0.66", "-21.0343, 71.8826, 24.8782, 0.59", "-20.805, 72.1703, 24.8304, 0.66", "-20.4964, 72.5819, 24.7636, 0.74", "-20.1674, 73.1154, 24.6727, 0.81", "-20.0322, 73.3994, 24.6162, 0.88", "-19.824, 73.9332, 24.5057, 0.74", "-19.7022, 74.2895, 24.4193, 0.74", "-19.5541, 74.7695, 24.2698, 0.81", "-19.398, 75.337, 24.0595, 0.74", "-19.3082, 75.7643, 23.8967, 0.88", "-19.2788, 75.9891, 23.81, 0.88", "-19.2402, 76.657, 23.5462, 0.96", "-19.2245, 77.102, 23.3725, 1.25", "-19.2098, 77.5045, 23.234, 0.74", "-19.1975, 77.938, 23.1176, 0.74", "-19.1904, 78.3437, 23.0411, 1.03", "-19.1802, 78.7859, 22.9879, 1.25", "-19.1632, 79.1943, 22.9658, 1.03", "-19.1154, 79.6941, 22.9595, 0.88", "-19.0084, 80.3253, 22.9645, 0.88", "-18.8618, 80.9424, 22.9804, 0.88", "-18.6711, 81.5972, 22.994, 0.96", "-18.4905, 82.1627, 23.0085, 1.03", "-18.3169, 82.6989, 23.0165, 1.03", "-18.1101, 83.3666, 23.0419, 0.88", "-17.9644, 83.8618, 23.0744, 0.88", "-17.8412, 84.3649, 23.1122, 0.88", "-17.8011, 84.7329, 23.1492, 0.66", "-17.8733, 85.1503, 23.2315, 0.66", "-18.1569, 85.7364, 23.4033, 0.74", "-18.3167, 85.965, 23.4841, 0.74", "-18.5253, 86.2179, 23.5787, 0.74", "-18.84, 86.5943, 23.7012, 0.59", "-19.1357, 87.0186, 23.7609, 0.88", "-19.2079, 87.181, 23.7536, 1.03", "-19.2526, 87.49, 23.6847, 0.81", "-19.2202, 87.8406, 23.5887, 0.66", "-19.1054, 88.3773, 23.441, 0.59", "-18.9067, 89.1044, 23.2395, 0.59", "-18.7751, 89.5773, 23.1183, 0.66", "-18.6209, 90.1768, 22.9951, 0.81", "-18.4899, 90.6903, 22.9164, 0.66", "-18.2794, 91.4621, 22.8436, 0.81", "-18.1297, 91.9946, 22.8152, 0.88", "-17.9704, 92.5754, 22.7948, 0.96", "-17.8481, 93.0852, 22.7644, 0.96", "-17.7586, 93.5793, 22.7168, 0.96", "-17.6785, 94.2635, 22.6119, 0.74", "-17.6523, 94.7641, 22.5096, 0.74", "-17.6552, 95.1257, 22.4295, 0.74", "-17.6721, 95.5577, 22.3331, 0.74", "-17.7068, 96.2562, 22.1806, 0.74", "-17.7431, 96.7575, 22.1057, 0.88", "-17.797, 97.4592, 22.049, 0.88", "-17.84, 98.1773, 22.0269, 0.88", "-17.8619, 98.7627, 22.0241, 0.88", "-17.8641, 99.3005, 22.0245, 0.81", "-17.8568, 99.9388, 22.0267, 0.66", "-17.8727, 100.433, 22.0098, 0.59", "-17.9211, 100.779, 21.981, 0.74", "-18.0044, 101.091, 21.9373, 0.74", "-18.1237, 101.495, 21.8578, 0.74", "-18.2023, 101.815, 21.7929, 0.66", "-18.2759, 102.25, 21.7055, 0.66", "-18.335, 102.762, 21.6332, 0.52", "-18.3654, 103.25, 21.5816, 0.52", "-18.3764, 103.776, 21.523, 0.59", "-18.3916, 104.495, 21.4223, 1.11", "-18.4138, 104.898, 21.3481, 1.33", "-18.4514, 105.242, 21.2747, 1.33", "-18.5598, 105.81, 21.1452, 0.74", "-18.7168, 106.386, 21.0165, 0.59", "-18.8927, 106.895, 20.9067, 0.66", "-19.0629, 107.372, 20.8122, 0.66", "-19.2302, 107.873, 20.7041, 0.74", "-19.4165, 108.415, 20.5699, 0.81", "-19.5693, 108.81, 20.4697, 0.81", "-19.7409, 109.209, 20.3662, 0.66", "-20.062, 109.903, 20.1657, 0.66", "-20.377, 110.501, 19.9596, 0.52", "-20.6534, 110.958, 19.7746, 0.44", "-20.8245, 111.217, 19.6592, 0.59", "-21.0027, 111.453, 19.5516, 0.59", "-21.2412, 111.737, 19.4213, 0.59", "-21.5311, 112.07, 19.2793, 0.66", "-21.7017, 112.294, 19.2084, 0.66", "-21.917, 112.64, 19.1038, 0.66", "-22.1214, 113.006, 18.9885, 0.59", "-22.3061, 113.364, 18.8656, 0.44", "-22.4753, 113.702, 18.7322, 0.44", "-22.6438, 114.029, 18.5808, 0.88", "-22.7824, 114.276, 18.4519, 1.03" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "1.56648, -20.5097, 2.30081, 1.47", "2.6776, -21.3493, 1.319, 1.47", "3.55008, -22.16, 0.490236, 1.03", "4.51676, -23.0848, -0.469777, 0.44", "4.94076, -23.4666, -0.865215, 0.66", "5.6195, -24.0324, -1.44375, 0.81", "6.25811, -24.5221, -1.94609, 0.74", "7.10424, -25.1436, -2.55276, 0.81", "8.35075, -25.9145, -3.26093, 0.44", "9.20259, -26.3605, -3.67718, 0.81", "9.96658, -26.7101, -3.97588, 1.11", "10.7901, -27.0351, -4.2158, 1.11", "11.7574, -27.3468, -4.41147, 0.74", "12.774, -27.6066, -4.54029, 0.52", "14.525, -27.9718, -4.64568, 0.52", "15.8878, -28.1966, -4.69249, 0.52", "16.6303, -28.2774, -4.69618, 0.44", "17.8572, -28.3328, -4.66154, 0.66", "18.6377, -28.3069, -4.62368, 1.18", "19.4652, -28.2136, -4.57011, 1.47", "20.4037, -28.0324, -4.49124, 1.03", "21.2882, -27.8294, -4.45492, 0.81", "22.1128, -27.6469, -4.45851, 0.59", "23.1865, -27.4252, -4.55012, 0.81", "24.0025, -27.2604, -4.67662, 0.81", "25.0614, -27.0387, -4.98536, 0.52", "25.65, -26.9187, -5.22653, 0.52", "26.5996, -26.7451, -5.69179, 0.74", "27.6437, -26.5582, -6.22893, 0.66", "28.5446, -26.3975, -6.71796, 0.66", "30.0418, -26.1085, -7.55066, 0.52", "30.9496, -25.8944, -8.07926, 0.44", "31.8995, -25.6584, -8.60171, 0.44", "32.8457, -25.438, -9.02153, 0.74", "33.4989, -25.3024, -9.22784, 0.88", "34.273, -25.1672, -9.39041, 0.74", "35.7536, -24.9319, -9.58292, 0.37", "36.5243, -24.8251, -9.73658, 0.37", "37.73, -24.7389, -10.023, 0.66", "38.6286, -24.7252, -10.2464, 0.66", "39.4567, -24.7263, -10.4333, 0.81", "40.036, -24.7308, -10.5521, 0.81", "42.2998, -24.7206, -10.9788, 0.66", "43.7155, -24.6621, -11.2815, 0.66", "44.6211, -24.6115, -11.5179, 0.81", "45.6116, -24.5231, -11.8495, 0.81", "46.5454, -24.3984, -12.2414, 0.66", "47.1198, -24.2774, -12.5251, 0.59", "47.7465, -24.045, -12.9363, 0.59", "48.7425, -23.5373, -13.8154, 0.59", "49.9179, -22.8781, -14.9904, 0.96", "50.5312, -22.555, -15.6214, 1.11", "51.0343, -22.3013, -16.1089, 1.18", "51.9553, -21.8519, -16.834, 0.81", "53.097, -21.3075, -17.4667, 0.52", "53.8564, -20.9644, -17.7049, 0.66", "54.8336, -20.5692, -17.82, 0.66", "55.6771, -20.2259, -17.8397, 0.44", "56.9464, -19.6916, -17.798, 0.44", "57.7953, -19.274, -17.7073, 0.52", "58.5437, -18.8082, -17.6029, 0.66", "59.2257, -18.2911, -17.4849, 1.11", "59.6711, -17.8971, -17.3899, 1.25", "60.0571, -17.5369, -17.3006, 1.25", "60.7161, -16.9004, -17.1512, 1.25", "61.4002, -16.2566, -16.9851, 0.74", "62.4101, -15.3769, -16.7704, 0.88", "62.8327, -15.0173, -16.6962, 0.88", "63.272, -14.6382, -16.6113, 0.88", "64.0304, -13.9531, -16.5209, 0.59", "64.956, -13.0586, -16.4984, 0.52", "65.5767, -12.4222, -16.5721, 0.52", "66.4655, -11.5639, -16.7486, 0.81", "67.1515, -10.9237, -16.9067, 0.81", "68.3895, -9.82961, -17.2228, 0.96", "69.0073, -9.31987, -17.394, 1.11", "69.8334, -8.69097, -17.6825, 1.4", "71.3321, -7.60768, -18.2612, 0.81", "72.3507, -6.89602, -18.6943, 0.81", "73.1685, -6.28429, -19.0687, 0.81", "73.59, -5.92465, -19.255, 0.81", "74.6471, -4.85948, -19.7665, 0.52", "75.5262, -3.72157, -20.2665, 0.66", "76.0067, -2.89093, -20.6208, 0.59", "76.4604, -1.96931, -20.9539, 0.37", "76.9238, -0.906914, -21.2565, 1.03", "77.1453, -0.3862, -21.3693, 1.25", "77.4175, 0.210692, -21.4564, 1.25", "77.9546, 1.18131, -21.5784, 1.03", "78.4702, 1.95508, -21.6677, 1.18", "79.1746, 2.91795, -21.7673, 1.03", "79.8483, 3.84168, -21.841, 1.18", "80.3306, 4.51657, -21.8758, 1.18", "80.9153, 5.32417, -21.8986, 0.74", "81.3793, 5.92646, -21.9065, 0.52", "81.9263, 6.55921, -21.9157, 0.52", "82.9283, 7.51431, -21.9364, 0.81", "83.6421, 8.1131, -21.9535, 0.88", "84.227, 8.55874, -21.969, 0.81", "85.247, 9.20986, -21.9976, 0.37", "85.956, 9.57119, -22.0364, 0.29", "87.1438, 10.0717, -22.1795, 0.59", "87.5814, 10.2418, -22.2643, 0.66", "88.5392, 10.6274, -22.5028, 0.37", "89.6806, 11.1344, -22.8443, 0.59", "90.7151, 11.667, -23.1628, 0.81", "92.1401, 12.4619, -23.5786, 1.99", "92.8741, 12.8676, -23.7792, 2.65", "93.4031, 13.1425, -23.9079, 2.65", "94.6134, 13.7488, -24.1653, 1.18", "95.9195, 14.3835, -24.3801, 0.44", "97.041, 14.8768, -24.4736, 0.74", "97.8181, 15.1846, -24.4716, 0.74", "98.5816, 15.4866, -24.4437, 0.81", "99.0867, 15.6856, -24.4169, 0.81", "99.8753, 15.986, -24.3552, 0.59", "100.763, 16.2887, -24.252, 0.44", "101.619, 16.5655, -24.1017, 0.37", "102.395, 16.7977, -23.9355, 0.37", "103.54, 17.107, -23.7082, 0.74", "104.218, 17.2621, -23.6009, 0.88", "105.268, 17.4418, -23.5128, 0.66", "105.94, 17.5373, -23.5267, 0.52", "106.756, 17.6373, -23.5839, 0.52", "107.891, 17.7987, -23.6869, 0.88", "108.734, 17.9649, -23.8007, 0.88", "109.825, 18.2507, -23.9804, 0.66", "111.131, 18.6694, -24.2086, 0.44", "112.021, 19.0068, -24.3438, 0.44", "112.951, 19.386, -24.447, 0.66", "113.909, 19.7774, -24.5109, 0.52", "114.646, 20.0782, -24.5407, 0.52", "115.611, 20.4664, -24.5581, 0.74", "116.54, 20.826, -24.5218, 0.44", "117.75, 21.3009, -24.4491, 0.44", "118.873, 21.7568, -24.3481, 0.88", "119.641, 22.0945, -24.2544, 1.03", "120.686, 22.5993, -24.0952, 0.74", "122.091, 23.3826, -23.8397, 0.52", "122.696, 23.7517, -23.7152, 0.96", "123.24, 24.1196, -23.5975, 0.96", "123.991, 24.6362, -23.4413, 0.81", "125.094, 25.3317, -23.2512, 0.52", "125.844, 25.7355, -23.1566, 0.52", "127.117, 26.2876, -23.0513, 0.59", "127.83, 26.5397, -23.0243, 0.81", "128.645, 26.7715, -23.027, 0.81", "129.521, 26.9648, -23.0641, 0.66", "130.236, 27.0871, -23.1229, 0.59", "131.349, 27.2736, -23.2388, 0.59", "132.89, 27.6212, -23.4235, 0.44", "133.771, 27.8533, -23.5818, 0.74", "134.469, 28.0627, -23.7346, 0.74", "134.797, 28.1701, -23.8136, 0.74", "135.823, 28.5243, -24.1061, 0.44", "136.952, 28.9204, -24.4602, 0.44", "138.574, 29.5446, -24.9407, 0.74", "139.305, 29.8596, -25.1914, 0.74", "140.004, 30.2016, -25.4569, 0.74", "140.876, 30.6805, -25.8106, 0.52", "141.634, 31.1466, -26.1287, 0.37", "142.364, 31.6547, -26.4139, 0.66", "142.938, 32.1228, -26.5948, 1.03", "143.431, 32.5314, -26.73, 1.18", "143.788, 32.8233, -26.8363, 1.18", "144.63, 33.4726, -27.0962, 0.59", "145.315, 33.9593, -27.3296, 0.44", "145.841, 34.3084, -27.5137, 0.44", "146.7, 34.8682, -27.8005, 0.81", "148.13, 35.7519, -28.2893, 1.11", "148.731, 36.0926, -28.4924, 1.11", "149.307, 36.3938, -28.6843, 0.96", "149.876, 36.6826, -28.8755, 0.66", "150.726, 37.1142, -29.156, 0.37", "151.718, 37.6074, -29.468, 0.52", "152.724, 38.0816, -29.7361, 0.59", "153.464, 38.4249, -29.9249, 0.44", "154.363, 38.8424, -30.1672, 0.37", "155.53, 39.3997, -30.4947, 0.66", "156.252, 39.7623, -30.6943, 0.44", "156.967, 40.1291, -30.8903, 0.44", "158.069, 40.676, -31.1437, 0.88", "158.8, 41.0132, -31.2556, 1.03", "159.463, 41.2964, -31.295, 1.03", "160.454, 41.712, -31.2465, 0.29", "161.329, 42.0863, -31.133, 0.29", "162.315, 42.5196, -30.9441, 0.29", "163.167, 42.8938, -30.7383, 0.44", "164.263, 43.3312, -30.4297, 1.11", "165.158, 43.6535, -30.1772, 1.4", "165.33, 43.7155, -30.1301, 1.55", "166.115, 44.0271, -29.9325, 0.88", "167.16, 44.4473, -29.7463, 0.29", "168.308, 44.8756, -29.5981, 0.29", "169.177, 45.1796, -29.5244, 0.52", "169.681, 45.353, -29.5025, 0.66", "170.253, 45.5627, -29.4801, 0.44", "171.134, 45.9213, -29.4346, 0.29", "171.814, 46.2369, -29.3959, 0.29", "172.901, 46.7671, -29.3394, 0.66", "173.492, 47.0215, -29.3046, 1.11", "174.033, 47.2256, -29.2971, 0.81", "175.324, 47.7164, -29.3535, 0.52", "175.813, 47.9201, -29.4208, 0.74", "176.669, 48.3193, -29.6048, 0.74", "177.799, 48.911, -29.9457, 0.81", "178.946, 49.5465, -30.4094, 0.44", "179.884, 50.0548, -30.8988, 0.81", "180.905, 50.6028, -31.5741, 1.33", "181.474, 50.905, -32.0141, 1.33", "182.06, 51.2044, -32.5076, 1.11", "183.367, 51.8029, -33.6375, 0.52", "184.507, 52.1943, -34.609, 1.18", "185.399, 52.4115, -35.3358, 1.33", "186.283, 52.5739, -36.0186, 1.03", "187.443, 52.7477, -36.8588, 0.22", "188.253, 52.8465, -37.3866, 0.22", "190.351, 53.0773, -38.6099, 0.88", "191.122, 53.157, -38.9884, 1.03", "191.798, 53.2067, -39.2627, 1.18", "192.693, 53.2353, -39.5768, 0.96", "193.414, 53.214, -39.8332, 0.66", "194.547, 53.0912, -40.2166, 0.44", "195.729, 52.8907, -40.5694, 0.66", "196.717, 52.6823, -40.8431, 0.74", "197.429, 52.5165, -41.0211, 0.74", "198.994, 52.1327, -41.3613, 0.37", "199.929, 51.9128, -41.5212, 0.52", "201.092, 51.6569, -41.6443, 0.29", "202.384, 51.4208, -41.7338, 0.81", "202.953, 51.3283, -41.7568, 1.47", "203.499, 51.2232, -41.7748, 1.62", "204.146, 51.0579, -41.7968, 1.62", "205.946, 50.476, -41.9948, 0.37", "207.069, 50.0234, -42.2182, 0.29", "208.244, 49.4319, -42.5439, 0.29", "209.242, 48.8456, -42.8517, 0.29", "210.361, 48.1375, -43.2177, 1.47", "211.184, 47.5943, -43.5248, 1.69", "211.614, 47.3031, -43.7272, 1.84", "212.936, 46.4697, -44.4668, 0.52", "213.843, 46.0325, -44.9825, 0.44", "214.542, 45.8049, -45.3578, 0.81", "215.287, 45.6444, -45.7364, 0.81", "216.325, 45.5002, -46.1991, 0.81", "217.882, 45.4132, -46.8735, 0.29", "219.151, 45.4587, -47.4411, 0.29", "219.763, 45.5087, -47.6973, 0.52", "220.735, 45.5962, -48.0709, 0.66", "221.895, 45.6837, -48.4705, 0.81", "222.856, 45.7524, -48.7697, 0.96", "223.68, 45.823, -49.0219, 0.74", "224.915, 45.9424, -49.4089, 0.22", "226.076, 46.0839, -49.7471, 0.22", "227.332, 46.2844, -50.0776, 0.22", "227.86, 46.3866, -50.1904, 0.44", "228.697, 46.5615, -50.3236, 0.44", "230.262, 46.9459, -50.5044, 0.29", "231.587, 47.3161, -50.6144, 1.03", "232.32, 47.5469, -50.6436, 1.25", "233.569, 47.9878, -50.6948, 0.22", "233.985, 48.1358, -50.7204, 0.37", "235.165, 48.5678, -50.8144, 0.22", "235.595, 48.7405, -50.8756, 0.52", "236.34, 49.058, -51.0156, 0.59", "237.971, 49.7604, -51.4007, 0.22", "238.71, 50.068, -51.6156, 0.59", "239.356, 50.3313, -51.8439, 0.59", "240.857, 50.9267, -52.4888, 0.29", "241.934, 51.3601, -53.0223, 0.22", "242.531, 51.5938, -53.3929, 0.22", "243.83, 52.0046, -54.3831, 0.81", "244.701, 52.2266, -55.1238, 1.18", "245.552, 52.3885, -55.8775, 0.74", "246.376, 52.4749, -56.6479, 0.44", "247.71, 52.6711, -58.0029, 0.74", "248.735, 52.9269, -59.1426, 0.52", "249.301, 53.1309, -59.8232, 0.52", "249.867, 53.392, -60.5248, 0.37", "251.015, 54.0375, -61.9925, 0.37", "252.143, 54.7773, -63.4923, 2.5", "253.942, 56.1434, -65.893, 0.29", "254.351, 56.4954, -66.4834, 0.29", "255.005, 57.112, -67.5569, 0.74", "255.466, 57.5662, -68.3817, 1.18", "256.029, 58.114, -69.4352, 1.4", "256.396, 58.4307, -70.1357, 1.4", "257.61, 59.4272, -72.4178, 0.29", "258.47, 60.0586, -73.9809, 0.44", "259.444, 60.7408, -75.7224, 0.22", "260.046, 61.1534, -76.8006, 0.22", "260.606, 61.5623, -77.8798, 0.74", "260.934, 61.824, -78.5365, 0.88", "262.585, 63.2878, -81.8728, 0.29", "263.197, 63.9238, -83.1255, 0.52", "263.969, 64.9047, -84.8035, 0.81", "265.076, 66.4568, -87.3139, 0.81", "265.448, 67.0464, -88.2287, 0.29", "265.715, 67.565, -88.9844, 0.37", "266.016, 68.5208, -90.0576, 0.22", "266.138, 69.0418, -90.5454, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "1.56648, -20.5097, 2.30081, 3.68", "1.24159, -21.894, 2.39375, 3.68", "0.854244, -23.4946, 2.48584, 3.32", "0.395011, -25.2037, 2.57664, 3.17", "-0.171789, -27.1646, 2.68868, 3.09", "-0.634851, -28.6916, 2.77382, 2.8", "-1.05043, -30.0347, 2.86698, 2.73", "-1.44955, -31.2571, 2.96407, 2.65", "-1.81179, -32.316, 3.06388, 2.65", "-2.17748, -33.3778, 3.17098, 2.65", "-2.57503, -34.4917, 3.3113, 2.65", "-3.08285, -35.8864, 3.5236, 2.5", "-3.28869, -36.4669, 3.62781, 2.58", "-3.54335, -37.2466, 3.78646, 2.58", "-3.72146, -37.9269, 3.93538, 2.65" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "0.280707, 34.4964, -7.7773, 1.4", "0.528805, 35.3216, -7.84474, 1.4", "0.858713, 36.6971, -7.92068, 1.11", "1.10451, 37.9099, -7.97149, 0.88", "1.36744, 39.3054, -7.93009, 0.96", "1.65678, 40.5974, -7.9827, 1.11", "1.98891, 41.8171, -8.08605, 0.88", "2.35071, 43.0302, -8.27191, 0.88", "2.59912, 43.6314, -8.48136, 1.11", "3.37672, 44.8742, -9.22164, 1.11", "5.06997, 46.8413, -10.9036, 1.4", "5.56015, 47.3457, -11.4143, 1.62", "6.12535, 47.9242, -12.0221, 1.11", "7.38119, 49.2456, -13.3218, 0.88", "8.03758, 50.0067, -13.9505, 1.47", "8.4811, 50.5888, -14.3229, 1.47", "9.16987, 51.6267, -14.6876, 1.18", "9.79449, 52.6167, -14.9285, 1.33", "10.3151, 53.4668, -15.0519, 1.33", "10.8654, 54.421, -15.1456, 1.18", "11.577, 55.74, -15.2824, 1.03", "12.0345, 56.705, -15.4266, 0.88", "12.4491, 57.7132, -15.6605, 0.88", "12.7646, 58.7695, -16.0206, 1.03", "13.0837, 60.4524, -16.7856, 1.18", "13.2083, 61.4827, -17.3401, 1.11", "13.3359, 62.9122, -18.1736, 1.25", "13.4307, 63.8682, -18.7512, 1.11", "13.6155, 65.0159, -19.4513, 0.96", "13.8845, 65.9627, -19.9812, 0.88", "14.4272, 67.0868, -20.4681, 0.88", "15.0033, 67.9682, -20.7191, 0.96", "15.53, 68.6516, -20.7993, 1.03", "16.1232, 69.3919, -20.8128, 1.03", "16.8189, 70.2959, -20.7717, 0.88", "17.1952, 70.8988, -20.7439, 0.74", "17.6635, 72.1189, -20.7867, 1.69", "17.7922, 72.814, -20.8653, 2.28", "17.8436, 73.5242, -20.9757, 2.28", "17.8589, 74.433, -21.1295, 2.06", "17.8668, 75.4017, -21.2952, 1.62", "17.9325, 76.6026, -21.5112, 1.18", "18.0209, 77.3318, -21.6509, 1.4", "18.1775, 78.1319, -21.8139, 1.4", "18.4298, 79.1181, -22.0687, 1.18", "18.6753, 79.9904, -22.3315, 1.03", "19.1292, 81.46, -22.8517, 0.81", "19.4326, 82.3537, -23.1942, 0.81", "19.6945, 83.0855, -23.478, 0.81", "20.0434, 84.041, -23.8329, 0.96", "20.3281, 84.8157, -24.0875, 1.33", "20.7097, 85.8621, -24.356, 1.11", "21.1225, 87.0004, -24.5516, 0.96", "21.3948, 87.695, -24.6268, 1.18", "21.745, 88.5415, -24.683, 1.18", "22.1051, 89.3995, -24.7099, 1.33", "22.385, 90.0873, -24.7445, 1.18", "22.5822, 90.6096, -24.7767, 1.18", "22.8809, 91.387, -24.8549, 0.88", "23.1997, 92.1439, -24.9541, 0.74", "23.562, 92.9432, -25.0725, 0.74", "24.1186, 94.053, -25.2722, 0.88", "24.6042, 94.9252, -25.4272, 1.11", "25.0686, 95.7239, -25.59, 1.11", "25.4792, 96.4182, -25.725, 0.96", "26.0346, 97.355, -25.8668, 1.18", "26.6103, 98.3599, -25.9393, 0.96", "27.0345, 99.1817, -25.9207, 0.81", "27.6685, 100.529, -25.7618, 0.88", "28.0869, 101.433, -25.5538, 0.88", "28.4562, 102.259, -25.2765, 1.03", "28.7846, 103.016, -24.9724, 1.11", "29.0916, 103.778, -24.647, 0.88", "29.4345, 104.637, -24.291, 0.66", "29.7079, 105.305, -24.0092, 0.66", "30.0647, 106.179, -23.7262, 0.66", "30.6789, 107.749, -23.3475, 0.96", "31.0125, 108.735, -23.2025, 1.4", "31.2323, 109.504, -23.1401, 1.55", "31.3643, 110.094, -23.1028, 1.84", "31.5453, 110.983, -23.0293, 1.92", "31.7152, 111.726, -22.93, 1.77", "32.0135, 112.87, -22.6894, 1.25", "32.3166, 113.856, -22.3935, 1.18", "32.6508, 114.773, -22.0572, 1.11", "33.0224, 115.664, -21.668, 1.25", "33.4584, 116.588, -21.2032, 1.33", "33.7162, 117.076, -20.9505, 1.33", "34.1754, 117.871, -20.5384, 1.25", "34.5988, 118.603, -20.2254, 0.74", "35.0923, 119.489, -19.9669, 0.52", "35.4491, 120.184, -19.8595, 0.52", "35.8422, 120.999, -19.7864, 0.81", "36.3685, 122.144, -19.7628, 1.4", "36.8087, 123.131, -19.8315, 1.69", "37.1157, 123.84, -19.9295, 1.84", "37.3882, 124.437, -20.089, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.280707, 34.4964, -7.7773, 1.4", "-0.727512, 35.0593, -7.66275, 1.4", "-1.50766, 35.456, -7.54084, 0.96", "-2.20004, 35.8284, -7.43885, 1.25", "-2.78376, 36.1787, -7.36513, 1.4", "-3.23206, 36.4771, -7.31753, 1.47", "-4.54504, 37.4392, -7.20599, 1.03", "-5.20102, 37.9513, -7.14593, 1.11", "-5.93389, 38.6337, -7.09081, 1.11", "-6.60198, 39.3777, -7.06449, 1.03", "-7.09733, 39.9887, -7.08305, 1.03", "-7.71881, 40.8067, -7.18259, 1.03", "-8.13068, 41.3427, -7.31421, 1.18", "-8.8046, 42.0985, -7.577, 1.18", "-9.71743, 42.8633, -8.00803, 0.81", "-10.3247, 43.2, -8.33079, 0.88", "-11.0128, 43.4415, -8.72336, 1.11", "-11.8549, 43.6382, -9.21599, 0.96", "-12.4124, 43.7399, -9.53971, 0.96", "-13.2134, 43.8773, -9.99102, 0.88", "-13.9301, 44.0418, -10.3702, 0.81", "-14.8838, 44.3724, -10.8027, 1.11", "-15.331, 44.5745, -10.9828, 1.25", "-15.7716, 44.8188, -11.1548, 1.25", "-16.4119, 45.2151, -11.3891, 0.88", "-17.0054, 45.6117, -11.5896, 0.88", "-17.5676, 46.0026, -11.7552, 0.96", "-18.234, 46.4748, -11.9149, 0.96", "-18.767, 46.8486, -12.0263, 1.03", "-19.3462, 47.2471, -12.1302, 1.25", "-19.9565, 47.6559, -12.2123, 1.25", "-20.3567, 47.9209, -12.2549, 1.11", "-20.8516, 48.241, -12.2873, 1.25", "-21.3345, 48.5494, -12.2881, 1.4", "-21.8151, 48.8577, -12.2706, 1.4", "-22.4137, 49.2446, -12.2345, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.54828, 42.8383, -2.3154, 0.908168", "-3.39577, 57.8143, -2.3154, 0.908168", "-4.24326, 72.7904, -2.3154, 0.908168" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-42.5109, 37.4033, 45.1633, 0.88", "-43.3589, 37.6157, 52.8499, 0.88", "-44.8609, 36.8899, 60.4075, 0.88", "-45.749, 37.0867, 68.09, 0.88", "-46.9503, 36.6663, 75.7225, 0.88", "-48.8431, 36.2262, 83.2123, 0.88", "-52.1061, 35.3346, 90.1739, 0.88", "-54.5065, 33.8076, 97.3784, 0.88", "-55.5125, 32.9682, 105.008, 0.88", "-57.6436, 32.3935, 112.424, 0.88", "-58.685, 32.2429, 120.089, 0.88" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-42.5109, 37.4033, 45.1633, 0.22", "-47.5134, 38.7506, 46.7713, 0.88", "-52.5971, 38.9383, 48.5927, 0.88", "-57.3968, 40.1283, 50.8002, 0.88", "-62.0979, 42.1677, 52.6129, 0.88", "-66.7008, 44.3786, 54.4838, 0.88", "-71.7673, 45.1107, 56.2403, 0.88", "-76.9025, 45.1787, 57.9179, 0.88", "-82.0374, 46.0472, 59.4087, 0.88", "-87.1436, 47.4775, 60.5812, 0.88", "-92.1023, 49.5649, 61.442, 0.88", "-96.7981, 51.8956, 62.9174, 0.88", "-101.395, 53.8255, 65.0684, 0.88", "-105.278, 56.4387, 67.8255, 0.88", "-108.742, 58.3086, 71.5316, 0.88", "-111.662, 59.4901, 75.9093, 0.88" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-22.7824, 114.276, 18.4519, 0.66", "-24.1016, 116.893, 16.3584, 0.66", "-24.5245, 117.663, 15.7083, 0.66", "-24.9355, 118.367, 15.1117, 0.74", "-25.3337, 119.014, 14.5682, 0.88", "-25.6621, 119.523, 14.1607, 0.88", "-26.1647, 120.279, 13.5957, 0.74", "-26.6406, 120.933, 13.2104, 0.52", "-27.0408, 121.517, 12.8616, 0.96", "-27.4049, 122.063, 12.5434, 0.96", "-28.0168, 122.964, 12.0384, 0.37", "-28.5505, 123.722, 11.6324, 0.37", "-29.167, 124.545, 11.2217, 0.66", "-29.6331, 125.138, 10.9378, 0.81", "-30.1993, 125.838, 10.6111, 0.81", "-30.6822, 126.425, 10.3526, 0.66", "-31.1738, 126.995, 10.0866, 0.66", "-31.5654, 127.416, 9.87706, 0.66", "-32.0227, 127.88, 9.65066, 0.37", "-32.4073, 128.305, 9.45815, 0.37", "-33.0551, 129.122, 9.11176, 0.74", "-33.4229, 129.633, 8.9408, 0.74", "-33.9902, 130.47, 8.71108, 0.29", "-34.4404, 131.154, 8.538, 0.29", "-34.9497, 131.956, 8.33023, 0.66", "-35.1339, 132.258, 8.24587, 0.66", "-35.5922, 133.079, 8.01293, 0.52", "-35.8204, 133.522, 7.89167, 0.37", "-36.0328, 133.936, 7.76114, 0.37", "-36.3688, 134.514, 7.53936, 0.59", "-36.709, 135.051, 7.30017, 1.11", "-37.1097, 135.712, 7.01505, 1.18", "-37.4113, 136.253, 6.78963, 0.96", "-37.924, 137.206, 6.45215, 0.74", "-38.3395, 137.99, 6.22483, 0.66", "-38.7139, 138.684, 6.064, 0.37", "-39.1493, 139.508, 5.91527, 0.37", "-39.4392, 140.111, 5.84538, 0.52", "-39.7228, 140.806, 5.76405, 0.52", "-40.1049, 141.897, 5.67178, 0.66", "-40.3632, 142.693, 5.63667, 0.81", "-40.6467, 143.521, 5.63706, 0.81", "-41.1669, 144.857, 5.68123, 0.59", "-41.5487, 145.762, 5.75407, 0.52", "-41.8469, 146.465, 5.85398, 0.52", "-42.2519, 147.473, 6.06906, 0.44", "-42.5161, 148.172, 6.23911, 0.44", "-42.7531, 148.822, 6.40929, 0.44", "-42.9533, 149.34, 6.52016, 0.44", "-43.1499, 149.812, 6.56835, 0.44", "-43.387, 150.398, 6.50107, 0.44", "-43.5966, 151.003, 6.31014, 0.59", "-43.7663, 151.671, 5.9859, 0.66", "-43.9032, 152.462, 5.57088, 0.52", "-44.0123, 153.431, 5.07031, 0.52", "-44.0659, 154.251, 4.67099, 0.52", "-44.0632, 155.312, 4.18147, 0.59", "-44.0038, 156.503, 3.68124, 0.59", "-43.9205, 157.469, 3.29762, 0.52", "-43.8299, 158.41, 2.95623, 0.52", "-43.7827, 158.992, 2.74618, 0.52", "-43.8141, 159.934, 2.41772, 0.44", "-43.9461, 160.517, 2.26105, 0.44", "-44.1542, 161.069, 2.13554, 0.44", "-44.6007, 161.965, 1.90958, 0.44", "-45.0782, 162.773, 1.70748, 0.44", "-45.6024, 163.624, 1.52322, 0.44", "-46.0946, 164.482, 1.39116, 0.52", "-46.4234, 165.207, 1.32039, 0.66", "-46.6681, 165.948, 1.26363, 0.37", "-46.8233, 166.712, 1.22681, 0.29", "-46.9163, 167.703, 1.20203, 0.44", "-46.9069, 168.655, 1.20343, 0.74", "-46.8176, 169.531, 1.23564, 1.03", "-46.6609, 170.198, 1.26693, 1.03", "-46.4176, 170.911, 1.24057, 0.88", "-46.031, 171.917, 1.11229, 0.52", "-45.7299, 172.74, 0.912818, 0.52", "-45.5714, 173.18, 0.718766, 0.37", "-45.1174, 174.41, 0.0278941, 0.37", "-44.5672, 175.702, -0.829943, 0.37", "-44.27, 176.275, -1.2524, 0.37", "-43.9391, 176.897, -1.72253, 0.37", "-43.2859, 178.262, -2.70659, 0.37", "-43.0424, 178.883, -3.11436, 0.29", "-42.7676, 179.809, -3.64564, 0.29", "-42.5179, 180.717, -4.12682, 0.29", "-42.3129, 181.641, -4.60619, 0.37", "-42.2013, 182.32, -4.97709, 0.37", "-42.1274, 183.19, -5.49736, 0.37", "-42.0256, 184.163, -6.16466, 0.44", "-41.9446, 184.694, -6.55922, 0.59", "-41.7691, 185.348, -7.10953, 0.59", "-41.3234, 186.557, -8.19349, 0.74", "-40.9642, 187.458, -8.99862, 0.88", "-40.5315, 188.548, -9.97203, 0.81", "-40.1853, 189.496, -10.8275, 1.03", "-39.5307, 191.503, -12.6847, 0.74", "-39.279, 192.577, -13.6727, 0.66", "-39.1865, 193.126, -14.2279, 0.74", "-39.1195, 193.862, -15.0425, 0.74", "-39.1183, 194.452, -15.803, 0.59", "-39.1681, 195.04, -16.7109, 0.44", "-39.3358, 195.805, -18.2735, 0.29", "-39.6506, 196.88, -21.0591, 0.74", "-39.7178, 197.099, -21.7301, 1.25", "-39.8659, 197.572, -23.3088, 1.77", "-39.988, 197.938, -24.5472, 1.92", "-40.1673, 198.384, -26.1511, 0.74", "-40.3041, 198.642, -27.1351, 0.52", "-40.6055, 199.018, -28.5106, 0.52", "-40.8464, 199.259, -29.5031, 0.66", "-41.1961, 199.529, -30.6459, 0.52", "-41.7202, 199.889, -32.0531, 0.52", "-42.2295, 200.241, -33.2545, 0.52", "-42.7963, 200.648, -34.5646, 0.66", "-43.2087, 200.969, -35.4579, 0.66", "-43.511, 201.293, -36.2359, 0.81", "-43.7538, 201.676, -37.0048, 0.59", "-43.8503, 202.005, -37.7446, 0.59", "-43.8649, 202.806, -39.8597, 0.81", "-43.7548, 203.194, -41.191, 0.74", "-43.31, 203.677, -43.8078, 0.88", "-42.835, 203.759, -45.6647, 1.11", "-41.4501, 203.387, -49.8614, 0.74", "-41.0821, 203.152, -50.698, 0.88", "-40.3957, 202.423, -51.7237, 0.96", "-39.747, 201.492, -52.2895, 0.74", "-38.7776, 199.663, -52.5743, 0.66", "-37.321, 196.581, -52.4791, 0.29", "-36.8268, 195.264, -52.134, 0.29", "-36.2974, 193.733, -51.6039, 0.29", "-36.0092, 192.772, -51.1713, 0.66", "-35.865, 192.163, -50.8331, 0.74" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-22.7824, 114.276, 18.4519, 0.29", "-23.4332, 115.268, 18.7471, 0.29", "-23.775, 115.815, 18.8976, 0.37", "-24.1681, 116.43, 19.0799, 0.52", "-24.433, 116.826, 19.1916, 0.66", "-24.9154, 117.489, 19.3581, 0.81", "-25.43, 118.154, 19.4995, 1.03", "-25.8929, 118.717, 19.6064, 0.74", "-26.7313, 119.7, 19.7246, 0.29", "-27.1, 120.117, 19.7419, 0.29", "-27.5738, 120.651, 19.7518, 0.37", "-28.0618, 121.226, 19.7495, 0.37", "-28.6707, 122.002, 19.7635, 0.44", "-28.9358, 122.417, 19.7823, 0.66", "-29.2356, 123.041, 19.8175, 0.81", "-29.506, 123.709, 19.8681, 0.81", "-29.7432, 124.299, 19.9062, 0.52", "-30.0289, 125.018, 19.9418, 0.52", "-30.3405, 125.89, 19.9815, 0.52", "-30.628, 126.819, 20.0235, 0.44", "-30.8572, 127.735, 20.0472, 0.37", "-31.1087, 128.891, 20.0524, 0.29", "-31.2913, 129.792, 20.0516, 0.44", "-31.4628, 130.764, 20.0419, 0.52", "-31.5742, 131.533, 20.0281, 0.37", "-31.6619, 132.305, 20.015, 0.37", "-31.7318, 132.941, 20.0038, 0.59", "-31.7823, 133.557, 20.001, 0.59", "-31.8568, 134.257, 19.9909, 0.59", "-31.9836, 135.176, 19.9624, 0.37", "-32.1528, 136.288, 19.9215, 0.29", "-32.2643, 137.288, 19.915, 0.29", "-32.3175, 138.296, 19.9328, 0.29", "-32.308, 138.794, 19.95, 0.29", "-32.2487, 139.529, 19.9841, 0.44", "-32.1758, 140.055, 20.0087, 0.44", "-32.0068, 141.04, 20.0292, 0.59", "-31.9109, 141.582, 20.013, 0.74", "-31.8091, 142.184, 19.969, 0.74", "-31.6923, 142.733, 19.9263, 0.59", "-31.4374, 143.703, 19.8677, 0.88", "-31.2257, 144.471, 19.8325, 1.18", "-30.9783, 145.493, 19.7793, 0.37", "-30.8994, 145.895, 19.7529, 0.37", "-30.7462, 146.792, 19.6886, 0.37", "-30.5514, 147.777, 19.6282, 0.29", "-30.3229, 148.68, 19.5829, 0.37", "-30.0477, 149.559, 19.5629, 0.29", "-29.6929, 150.456, 19.5278, 0.29", "-29.5383, 150.758, 19.4969, 0.29", "-28.987, 151.553, 19.3654, 0.59", "-28.4873, 152.091, 19.2741, 0.74", "-28.0784, 152.452, 19.2158, 0.74", "-27.3657, 153.009, 19.1389, 0.66", "-26.5157, 153.611, 19.0557, 0.44", "-25.965, 153.999, 19.0118, 0.44", "-25.13, 154.551, 18.9678, 0.88", "-24.7612, 154.759, 18.9668, 1.33", "-24.2979, 154.982, 18.9547, 1.69", "-23.4955, 155.337, 18.9336, 1.84", "-22.1966, 155.943, 18.8885, 0.29", "-21.4284, 156.374, 18.8451, 0.29", "-20.6631, 156.918, 18.784, 0.29", "-19.4802, 157.952, 18.7051, 0.59", "-19.0093, 158.458, 18.6671, 0.59", "-18.3349, 159.388, 18.5878, 0.44", "-17.713, 160.538, 18.4611, 0.59", "-17.4122, 161.262, 18.3933, 0.44", "-17.2031, 161.875, 18.365, 0.29", "-16.9425, 162.671, 18.3676, 0.29", "-16.7849, 163.12, 18.3403, 0.29", "-16.525, 163.875, 18.2819, 0.52", "-16.352, 164.357, 18.2347, 0.52", "-16.1393, 164.978, 18.18, 0.37", "-15.8134, 165.958, 18.1063, 0.44", "-15.4642, 166.895, 18.0602, 0.44", "-15.0952, 167.694, 18.0383, 0.74", "-14.6266, 168.596, 18.0361, 0.81", "-13.9686, 169.915, 18.0633, 0.29", "-13.8009, 170.306, 18.0764, 0.29", "-13.5993, 170.84, 18.0945, 0.29", "-13.3357, 171.509, 18.1208, 0.29", "-12.9775, 172.331, 18.1248, 0.37", "-12.6118, 173.089, 18.1544, 0.44", "-12.1317, 173.832, 18.1887, 0.44", "-11.55, 174.586, 18.2041, 0.44", "-11.07, 175.211, 18.2399, 0.44", "-10.776, 175.602, 18.274, 0.66", "-10.4445, 176.014, 18.3174, 0.66", "-9.91228, 176.641, 18.3569, 0.44", "-9.27929, 177.288, 18.161, 0.29", "-8.67479, 177.896, 17.619, 0.29", "-8.27879, 178.357, 17.1097, 0.44", "-7.93334, 178.81, 16.5521, 0.59", "-7.54776, 179.344, 15.9004, 0.74", "-6.49167, 180.793, 14.1319, 0.74", "-5.4858, 182.013, 12.5908, 0.37", "-4.9733, 182.582, 11.824, 0.29", "-4.43201, 183.139, 11.0369, 0.59", "-3.87305, 183.71, 10.2395, 0.52", "-3.50172, 184.134, 9.72461, 0.52", "-2.93188, 184.96, 9.07078, 0.59" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-3.72146, -37.9269, 3.93538, 0.52", "-6.0103, -39.0519, 5.17786, 0.52", "-6.47972, -39.355, 5.45327, 0.44", "-6.88387, -39.6732, 5.71089, 0.66", "-7.41825, -40.1672, 6.07129, 0.74", "-8.27806, -41.1051, 6.66551, 0.66", "-8.62195, -41.5504, 6.91482, 0.81", "-9.09718, -42.5327, 7.25587, 0.74", "-9.23981, -43.0161, 7.37678, 0.88", "-9.38967, -43.9707, 7.70214, 0.66", "-9.46154, -44.8107, 8.0748, 0.66", "-9.50369, -45.4795, 8.45543, 0.81", "-9.62798, -46.2904, 9.03592, 0.81", "-9.87616, -47.1675, 9.77587, 0.88", "-10.7255, -49.4599, 11.8425, 0.96", "-11.02, -50.1453, 12.4774, 0.74", "-11.2673, -50.674, 12.9446, 0.59", "-11.7158, -51.6273, 13.6629, 0.59", "-12.0974, -52.4721, 14.1845, 0.59", "-12.492, -53.4761, 14.606, 0.96", "-12.7601, -54.2877, 14.7595, 1.11", "-13.0717, -55.2863, 14.9224, 0.88", "-13.3975, -56.3063, 15.1068, 0.66", "-13.5291, -56.6361, 15.1808, 0.74", "-14.1285, -57.5765, 15.5186, 0.66", "-14.6162, -58.1308, 15.8173, 0.74", "-15.1984, -58.6983, 16.2518, 0.81", "-15.7038, -59.1465, 16.7053, 0.88", "-16.3066, -59.7565, 17.3926, 0.66", "-16.6669, -60.2326, 17.8811, 0.66", "-17.0671, -60.9083, 18.4776, 0.59", "-17.4186, -61.6961, 19.0456, 0.66", "-17.5956, -62.128, 19.2914, 0.81", "-18.0205, -63.1367, 19.752, 0.59", "-18.37, -63.9895, 20.1038, 0.74", "-18.7042, -64.7827, 20.4076, 0.88", "-18.9051, -65.2526, 20.5682, 0.88", "-19.2518, -66.1631, 20.9428, 0.66", "-19.4798, -66.8708, 21.3484, 0.52", "-19.7426, -67.8608, 22.2258, 0.59", "-19.8413, -68.3224, 22.7709, 0.59", "-19.9247, -68.7725, 23.3673, 0.66", "-20.1499, -70.0535, 25.1386, 0.66", "-20.2503, -70.6789, 26.008, 0.96", "-20.4638, -71.5384, 27.1837, 1.03", "-20.7191, -72.1703, 27.9855, 0.88", "-20.9708, -72.6559, 28.5151, 0.59", "-21.2153, -73.0468, 28.8453, 0.74", "-21.6507, -73.6616, 29.1358, 0.59", "-22.1583, -74.3129, 29.305, 0.74", "-22.7469, -75.0111, 29.3633, 0.88", "-23.2978, -75.6351, 29.3585, 0.88", "-23.8931, -76.2782, 29.3493, 0.59", "-24.4697, -76.8778, 29.3593, 0.37", "-24.6995, -77.1045, 29.3773, 0.37", "-25.1663, -77.5651, 29.492, 0.44", "-25.6703, -78.0563, 29.6797, 0.59", "-26.1512, -78.5134, 29.9249, 0.59", "-26.7293, -79.0639, 30.2657, 0.74", "-27.2766, -79.5528, 30.6001, 0.66", "-28.3138, -80.4328, 31.1991, 0.66", "-28.9365, -80.9462, 31.5341, 0.59", "-29.8467, -81.7311, 31.9922, 0.81", "-30.3662, -82.2064, 32.2399, 0.96", "-31.0332, -82.8306, 32.5366, 0.74", "-31.7652, -83.5181, 32.8276, 0.52", "-33.0198, -84.7414, 33.2829, 0.59", "-33.6912, -85.4455, 33.519, 0.66", "-34.127, -85.9386, 33.6545, 0.66", "-34.7567, -86.6908, 33.8328, 0.44", "-35.2102, -87.263, 33.9604, 0.44", "-35.8132, -88.0232, 34.13, 0.37", "-36.534, -88.9407, 34.296, 0.29", "-36.8449, -89.3471, 34.359, 0.29", "-37.4983, -90.3656, 34.4649, 0.29", "-41.9286, -97.935, 41.1698, 0.29", "-45.7164, -105.687, 48.0679, 0.29", "-50.8564, -113.373, 54.1062, 0.29", "-55.1347, -122.011, 59.5644, 0.29", "-61.299, -130.204, 63.7137, 0.29", "-68.5622, -137.492, 67.6865, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-3.72146, -37.9269, 3.93538, 2.21", "-3.44233, -39.1483, 3.97563, 2.21", "-3.27813, -39.919, 3.98964, 2.21", "-3.02506, -41.1067, 4.01124, 2.21", "-2.81726, -42.082, 4.02897, 2.28", "-2.65206, -42.8574, 4.04307, 2.28", "-2.41406, -43.9744, 4.06338, 2.5", "-2.23032, -44.7363, 4.01659, 2.58" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "37.3882, 124.437, -20.089, 1.25", "37.887, 124.852, -20.1743, 1.25", "38.9031, 125.565, -20.257, 0.81", "39.5204, 125.953, -20.2767, 0.96", "40.0923, 126.278, -20.2172, 0.74", "41.0216, 126.774, -20.0489, 0.59", "41.8656, 127.213, -19.8601, 0.52", "42.2259, 127.376, -19.7528, 0.66", "42.7523, 127.593, -19.5659, 0.44", "43.8999, 128.055, -19.1588, 0.66", "44.4291, 128.285, -18.9952, 0.52", "44.9342, 128.541, -18.8886, 0.52", "45.6357, 128.943, -18.7895, 0.88", "46.2539, 129.328, -18.7592, 1.25", "46.5058, 129.499, -18.7703, 1.62", "47.275, 130.051, -18.8788, 1.62", "47.9101, 130.513, -18.9791, 1.33", "48.6698, 131.049, -19.0823, 0.88", "49.2425, 131.46, -19.1595, 0.74", "49.6737, 131.767, -19.2086, 0.59", "50.0062, 131.998, -19.2384, 0.59", "50.7553, 132.487, -19.2582, 1.18", "51.4271, 132.897, -19.2737, 1.77" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "37.3882, 124.437, -20.089, 0.37", "38.1966, 125.453, -16.0706, 0.37", "38.3175, 125.826, -14.9889, 0.37", "38.3041, 126.051, -14.497, 0.37", "38.2146, 126.394, -13.9038, 0.66", "38.1095, 126.726, -13.4399, 0.66", "37.9636, 127.236, -12.8183, 0.66", "37.7319, 127.831, -12.4434, 0.52", "37.5158, 128.531, -12.0372, 0.52", "37.4284, 128.981, -11.7779, 0.52", "37.4648, 129.748, -11.3023, 0.66", "37.6297, 130.241, -10.9724, 1.18", "37.8171, 130.572, -10.7187, 1.18", "38.1735, 131.094, -10.2949, 0.66", "38.4957, 131.564, -9.92253, 0.52", "38.9576, 132.31, -9.36948, 0.52", "39.2297, 132.836, -9.00516, 1.11", "39.5367, 133.644, -8.48984, 0.96", "39.6842, 134.237, -8.14105, 0.88", "39.7907, 135.064, -7.69702, 0.37", "39.8277, 136.19, -7.1518, 0.29", "39.8034, 136.784, -6.88115, 0.29", "39.7114, 137.581, -6.51518, 0.59", "39.5629, 138.42, -6.14409, 0.74", "39.39, 139.128, -5.83446, 0.88", "39.2173, 139.708, -5.58142, 1.03", "38.9539, 140.477, -5.25627, 1.11", "38.7159, 141.144, -5.00378, 0.88", "38.5099, 141.717, -4.81474, 0.52", "38.2151, 142.528, -4.56662, 0.88", "38.0767, 142.903, -4.45576, 0.74", "37.8192, 143.607, -4.25981, 0.52", "37.5424, 144.357, -4.03775, 0.52", "37.2782, 145.073, -3.78922, 0.74", "37.0285, 145.718, -3.54011, 0.88", "36.8009, 146.273, -3.32789, 0.88", "36.5521, 146.831, -3.13302, 1.03", "36.2316, 147.493, -2.95191, 0.81", "35.8542, 148.211, -2.78246, 0.59", "35.6083, 148.642, -2.68756, 0.52", "35.2125, 149.323, -2.52191, 0.52", "34.9945, 149.727, -2.40387, 0.52", "34.6777, 150.414, -2.17941, 0.52", "34.3126, 151.389, -1.8625, 0.52", "34.0691, 152.174, -1.58434, 0.88", "33.8457, 153.011, -1.25251, 0.88", "33.6501, 153.825, -0.8946, 0.74", "33.4933, 154.413, -0.638163, 0.37", "33.3017, 155.047, -0.375485, 0.37", "33.0476, 155.669, -0.16577, 0.52", "32.8009, 156.095, -0.0396934, 0.52", "32.6013, 156.354, 0.0389384, 0.37", "31.9802, 157.037, 0.29126, 0.52", "31.7187, 157.314, 0.401909, 0.74", "31.1866, 157.926, 0.642933, 0.74", "30.79, 158.484, 0.835904, 0.59", "30.4704, 159.046, 1.00036, 0.74", "30.1522, 159.729, 1.18885, 0.88", "29.904, 160.318, 1.35292, 0.88", "29.5919, 161.011, 1.53504, 0.88", "29.1738, 161.805, 1.73775, 0.66", "28.8618, 162.244, 1.86449, 0.66", "28.3735, 162.761, 2.03887, 0.52", "27.7154, 163.264, 2.27312, 0.37", "27.2031, 163.537, 2.52563, 0.29", "26.5525, 163.813, 2.93732, 0.29", "25.9415, 164.054, 3.37645, 0.66", "25.6804, 164.166, 3.57891, 1.03", "25.1424, 164.45, 4.02823, 1.18", "23.9442, 165.256, 5.17424, 0.59", "23.3769, 165.766, 5.78628, 0.44", "23.011, 166.211, 6.22725, 0.52", "22.7495, 166.634, 6.60868, 0.52", "22.4746, 167.175, 7.06547, 0.52", "22.2298, 167.765, 7.5185, 0.59", "22.0195, 168.423, 7.9677, 0.37", "21.8645, 168.976, 8.35567, 0.37", "21.6205, 169.975, 9.06017, 0.66", "21.5048, 170.449, 9.37822, 0.74", "21.3404, 170.971, 9.69037, 0.59", "21.1044, 171.535, 9.96917, 0.52", "20.7754, 172.129, 10.2179, 0.44", "20.2844, 172.878, 10.4454, 0.44", "19.9052, 173.43, 10.5522, 0.59", "19.3309, 174.279, 10.6794, 0.59", "18.9563, 174.848, 10.7679, 0.74", "18.6049, 175.388, 10.8847, 0.74", "18.3319, 175.85, 11.0709, 0.74", "17.9363, 176.595, 11.6094, 0.52", "17.7542, 176.993, 11.9861, 0.66", "17.5765, 177.412, 12.4922, 0.81", "17.2937, 177.996, 13.3212, 1.03", "16.8638, 178.639, 14.3823, 0.74", "16.4237, 179.18, 15.3221, 0.44", "16.1625, 179.458, 15.7749, 0.29", "15.6046, 179.973, 16.5812, 0.59", "15.2795, 180.229, 16.9904, 0.96", "14.3793, 180.916, 18.0408, 0.29", "13.9296, 181.264, 18.5688, 0.29", "13.3731, 181.735, 19.2223, 0.96", "12.8332, 182.212, 19.8404, 1.18", "11.9609, 183.061, 20.8225, 0.96", "11.5964, 183.402, 21.2885, 0.59", "11.2757, 183.679, 21.7259, 0.29", "10.8711, 183.988, 22.3201, 0.29", "10.672, 184.144, 22.6509, 0.29", "10.2162, 184.607, 23.5344, 0.44", "9.50304, 185.572, 25.2077, 0.44", "9.36127, 185.833, 25.6516, 0.59", "9.2551, 186.234, 26.3411, 0.59", "9.28262, 186.597, 26.9708, 0.52", "9.52058, 187.039, 27.6537, 0.29", "9.98091, 187.434, 28.157, 0.29", "10.548, 187.792, 28.5874, 0.29", "11.3086, 188.191, 29.0963, 0.44", "11.9707, 188.518, 29.5618, 0.44", "12.4852, 188.76, 29.9957, 0.29", "13.0437, 189.035, 30.5447, 0.29", "13.8956, 189.55, 31.526, 0.59", "14.4312, 189.969, 32.2166, 0.74", "15.2115, 190.77, 33.2746, 0.52", "16.0138, 191.798, 34.4394, 0.22", "16.1609, 192.024, 34.6589, 0.29", "16.5563, 192.793, 35.2329, 0.29", "16.8384, 193.468, 35.5846, 0.29", "17.1766, 194.36, 35.9179, 0.37", "17.5112, 195.113, 35.963, 0.37", "17.786, 195.621, 35.894, 0.22", "18.6002, 196.628, 35.5579, 0.22", "19.0912, 197.087, 35.3364, 0.37", "19.6863, 197.559, 35.0621, 0.15", "21.8365, 199.135, 33.9975, 0.15", "22.5277, 199.588, 33.6404, 0.15", "24.6095, 200.78, 32.5677, 0.15", "25.635, 201.273, 32.0435, 0.15", "26.6255, 201.705, 31.5389, 0.22", "24.5958, 208.945, 37.5018, 0.22", "23.0824, 216.304, 43.48, 0.22", "23.3208, 222.847, 50.4614, 0.22", "24.401, 228.411, 58.1362, 0.22", "24.7525, 233.98, 65.8758, 0.22", "27.0908, 240.262, 72.695, 0.22", "29.815, 247.47, 78.4086, 0.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-22.4137, 49.2446, -12.2345, 0.52", "-23.3606, 49.735, -11.8026, 0.52", "-23.9637, 50.0216, -11.5531, 0.52", "-24.5289, 50.2598, -11.3721, 0.74", "-25.2331, 50.5526, -11.1827, 0.96", "-25.9444, 50.8928, -11.0022, 1.18", "-26.5183, 51.2134, -10.8623, 1.18", "-27.072, 51.5656, -10.7436, 0.88", "-27.9317, 52.3025, -10.5229, 0.37", "-28.1874, 52.6186, -10.4452, 0.37", "-28.6691, 53.4366, -10.2654, 0.52", "-28.9542, 54.0201, -10.1193, 0.81", "-29.2511, 54.6708, -9.91625, 0.96", "-29.602, 55.3827, -9.61713, 0.52", "-29.9293, 55.9055, -9.30742, 0.59", "-30.2258, 56.1926, -9.06067, 0.74", "-30.9332, 56.5957, -8.57355, 1.11", "-31.4649, 56.8043, -8.25282, 1.18", "-32.2052, 57.0295, -7.85337, 1.18", "-32.938, 57.2224, -7.50376, 0.74", "-33.7284, 57.4331, -7.17929, 0.59", "-34.4932, 57.6614, -6.91543, 0.52", "-35.0093, 57.84, -6.78973, 0.52", "-35.5566, 58.0535, -6.72691, 0.52", "-36.1493, 58.3145, -6.7424, 0.74", "-36.7827, 58.6207, -6.76689, 0.74", "-37.0981, 58.786, -6.78617, 0.81", "-37.529, 59.0295, -6.78617, 0.81", "-38.4147, 59.5818, -6.69754, 0.66", "-38.8646, 59.9219, -6.57014, 0.52", "-39.9236, 60.9112, -6.01062, 0.74", "-40.2939, 61.3268, -5.745, 0.66", "-40.8072, 61.978, -5.31458, 0.59", "-41.1228, 62.3924, -5.04145, 0.66", "-41.6785, 63.1298, -4.58032, 0.52", "-41.9856, 63.5015, -4.40924, 0.66", "-42.3715, 63.9047, -4.27718, 0.88", "-42.887, 64.3566, -4.13991, 0.88", "-43.4064, 64.74, -3.9796, 0.66", "-43.7962, 65.0005, -3.78911, 0.59", "-44.2951, 65.3462, -3.43455, 0.74", "-44.7713, 65.7227, -2.99141, 0.52", "-45.2075, 66.106, -2.50073, 0.52", "-46.1836, 67.0592, -1.25833, 0.66", "-46.8631, 67.7774, -0.329364, 0.74", "-47.2389, 68.1715, 0.196604, 0.44", "-47.5585, 68.4813, 0.61766, 0.44", "-47.8386, 68.707, 0.908951, 0.59", "-48.1669, 68.9087, 1.15432, 0.66", "-48.6826, 69.1671, 1.39754, 0.66", "-49.4603, 69.5278, 1.74474, 0.52", "-50.0049, 69.7855, 2.05128, 0.52", "-50.4773, 70.0598, 2.38999, 0.44", "-51.2798, 70.6509, 3.10393, 0.59", "-51.6301, 70.9438, 3.42702, 0.74", "-52.0151, 71.2961, 3.78869, 0.88", "-52.5062, 71.7481, 4.23594, 0.88", "-52.9765, 72.1231, 4.68407, 0.44", "-53.4119, 72.4167, 5.08724, 0.44", "-54.1052, 72.7764, 5.68276, 0.59", "-54.6233, 73.0171, 6.08827, 0.52", "-55.4686, 73.381, 6.71149, 0.66", "-56.2296, 73.6993, 7.25397, 0.74", "-56.8504, 73.9709, 7.70793, 0.74", "-57.2255, 74.1661, 7.98834, 0.74", "-57.8158, 74.5409, 8.43955, 0.52", "-58.0311, 74.7088, 8.57879, 0.52", "-58.3321, 74.9988, 8.73595, 0.66", "-58.7216, 75.4233, 8.92458, 0.66", "-59.1277, 75.868, 9.11334, 0.81", "-59.5731, 76.3548, 9.31211, 0.81", "-59.9736, 76.7696, 9.49352, 0.59", "-60.4127, 77.2069, 9.68019, 0.52", "-61.0413, 77.7975, 9.93541, 0.59", "-61.4823, 78.1776, 10.1209, 0.66", "-61.8575, 78.4571, 10.2778, 0.66", "-62.533, 78.8548, 10.5555, 0.59", "-62.9743, 79.0628, 10.7528, 0.59", "-63.4175, 79.2371, 10.9566, 0.59", "-64.0751, 79.4777, 11.2436, 0.52", "-64.612, 79.6901, 11.4793, 0.66", "-65.0958, 79.9108, 11.6724, 0.66", "-65.7278, 80.2463, 11.8721, 0.52", "-66.1876, 80.529, 11.9748, 0.66", "-66.8824, 81.0244, 12.0677, 0.81", "-67.4543, 81.4903, 12.1124, 0.81", "-68.2772, 82.2639, 12.1661, 0.52", "-68.7863, 82.8058, 12.2077, 0.59", "-69.1521, 83.2223, 12.2425, 0.59", "-69.6015, 83.7568, 12.3059, 0.37", "-70.2422, 84.5175, 12.4462, 0.52", "-70.7527, 85.0834, 12.5936, 0.59", "-71.39, 85.7222, 12.8152, 0.22", "-71.6847, 85.9704, 12.9299, 0.37", "-72.0914, 86.2593, 13.065, 0.37", "-72.629, 86.5786, 13.1904, 0.37", "-73.2671, 86.923, 13.29, 0.66", "-73.7574, 87.1956, 13.4102, 0.88", "-74.154, 87.4327, 13.565, 0.59", "-75.0728, 88.0444, 14.0814, 0.29", "-75.7005, 88.5681, 14.577, 0.29", "-76.1593, 89.0527, 15.0373, 0.29", "-77.0261, 90.2286, 16.1909, 0.88", "-77.4244, 90.853, 16.9152, 0.88", "-77.6276, 91.2335, 17.3966, 0.66", "-77.8473, 91.7811, 18.2115, 0.52", "-77.9216, 92.0684, 18.6701, 0.29", "-77.9678, 92.2922, 19.049, 0.29", "-78.2971, 93.4436, 20.4518, 0.74", "-84.7221, 98.3515, 25.6777, 0.74", "-91.0979, 102.507, 31.5444, 0.74", "-97.0566, 106.783, 37.7562, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-22.4137, 49.2446, -12.2345, 0.74", "-22.9443, 49.5297, -12.7365, 0.74", "-23.3602, 49.8101, -13.1012, 0.74", "-24.0262, 50.3109, -13.6226, 0.74", "-24.4518, 50.6487, -14.0327, 0.88", "-24.8623, 50.9567, -14.5025, 1.03", "-25.2451, 51.1915, -15.0088, 1.03", "-25.6032, 51.3592, -15.5702, 0.96", "-25.9868, 51.4601, -16.1912, 0.74", "-26.9065, 51.5205, -17.5787, 0.66", "-27.5369, 51.4725, -18.3923, 0.66", "-28.3878, 51.3386, -19.3381, 0.66", "-28.9233, 51.2322, -19.8574, 0.59", "-29.6665, 51.0666, -20.4708, 0.66", "-30.2596, 50.9376, -20.8669, 0.66", "-31.5206, 50.7121, -21.5173, 0.81", "-32.2733, 50.6332, -21.8579, 0.96", "-32.8493, 50.6285, -22.0992, 1.18", "-33.4446, 50.6729, -22.3519, 1.18", "-34.261, 50.7996, -22.7161, 0.66", "-34.8775, 50.9252, -23.0138, 0.66", "-35.3671, 51.0374, -23.2762, 0.59", "-35.8935, 51.137, -23.6335, 0.74", "-36.5084, 51.1854, -24.1264, 0.74", "-36.7392, 51.1412, -24.404, 0.88", "-37.0543, 50.8654, -25.1019, 0.88", "-37.218, 50.6182, -25.6946, 0.66", "-37.5364, 50.0931, -26.9892, 0.66", "-37.6884, 49.8468, -27.6202, 1.25", "-38.0506, 49.3225, -29.0272, 1.47", "-38.4738, 48.8308, -30.4498, 1.62", "-39.0395, 48.3802, -32.0258, 1.55", "-39.3625, 48.25, -32.6854, 0.81", "-39.7964, 48.2071, -33.2922, 0.59", "-40.3759, 48.2564, -33.9371, 0.44", "-40.8504, 48.3499, -34.3672, 0.44", "-41.3815, 48.4908, -34.815, 0.59", "-41.7419, 48.5893, -35.1316, 0.59", "-42.2044, 48.7189, -35.6475, 0.29", "-42.951, 48.9749, -36.6411, 1.03", "-43.5135, 49.224, -37.4483, 1.47", "-43.9333, 49.4458, -38.0637, 1.69", "-44.196, 49.6012, -38.4407, 2.06", "-44.7401, 49.9705, -39.173, 1.03", "-45.2985, 50.407, -39.8697, 0.52", "-45.784, 50.8704, -40.4546, 0.81", "-46.0441, 51.1757, -40.7764, 0.96", "-46.3599, 51.6396, -41.2189, 0.74", "-46.677, 52.2033, -41.7461, 1.03", "-46.8711, 52.6037, -42.1193, 0.88", "-47.1252, 53.1684, -42.6741, 1.25", "-47.318, 53.5889, -43.1335, 1.62", "-47.4958, 53.9356, -43.5505, 1.77", "-47.7499, 54.4171, -44.1732, 1.99", "-47.969, 54.8109, -44.6882, 1.18", "-48.1425, 55.1222, -45.0831, 0.29", "-48.3799, 55.5774, -45.6526, 0.29", "-48.6515, 56.1926, -46.4179, 0.66", "-48.8384, 56.7401, -47.0566, 0.66", "-48.9604, 57.2208, -47.5603, 0.22", "-49.0565, 57.7655, -48.0863, 0.81", "-49.1367, 58.3837, -48.6659, 1.18", "-49.2246, 59.1265, -49.3222, 0.96", "-49.2882, 59.5319, -49.6634, 0.37", "-49.3952, 59.906, -49.9785, 0.29", "-49.5255, 60.1944, -50.2338, 0.29", "-49.7339, 60.5175, -50.5099, 0.29", "-49.9894, 60.869, -50.7668, 0.59", "-50.2978, 61.3148, -51.0421, 0.59", "-50.5667, 61.8225, -51.3476, 0.59", "-50.7809, 62.3693, -51.6789, 0.59", "-50.9442, 62.8947, -51.983, 0.59", "-51.0685, 63.3824, -52.2573, 0.29", "-51.1622, 63.7972, -52.4934, 0.37", "-51.3495, 64.5135, -52.9625, 0.37", "-51.5516, 65.1099, -53.4598, 0.74", "-51.6805, 65.376, -53.7197, 1.25", "-51.8981, 65.7249, -54.0878, 1.69", "-52.1106, 66.0131, -54.4237, 1.47", "-52.5349, 66.5147, -55.0778, 0.96", "-52.997, 66.9984, -55.7622, 0.59", "-53.3413, 67.3444, -56.3035, 0.52", "-53.633, 67.6144, -56.7921, 0.66", "-54.0191, 67.9168, -57.4278, 0.52", "-54.3735, 68.1463, -58.0244, 0.81", "-54.7566, 68.3096, -58.6118, 0.96", "-55.1429, 68.4123, -59.1257, 1.55", "-55.649, 68.51, -59.7513, 1.77", "-56.0886, 68.5841, -60.2294, 2.21", "-56.7974, 68.7041, -60.9041, 2.36", "-57.5642, 68.8294, -61.5689, 0.59", "-58.2125, 68.909, -62.1115, 0.37", "-58.6008, 68.9392, -62.4205, 0.37", "-59.1294, 68.9554, -62.832, 0.37", "-59.5806, 68.9552, -63.1859, 0.37", "-59.9984, 68.9431, -63.4924, 0.37", "-60.4909, 68.9281, -63.8818, 0.29", "-60.785, 68.904, -64.1139, 0.29", "-61.1079, 68.8898, -64.3927, 0.44", "-61.6519, 68.9523, -64.9033, 0.81", "-61.9649, 69.0569, -65.2427, 1.18", "-62.2517, 69.2028, -65.6044, 1.18", "-62.5574, 69.3999, -66.1096, 0.74", "-63.0123, 69.7229, -67.0084, 0.37", "-63.2701, 69.9197, -67.5755, 0.81", "-63.6669, 70.2348, -68.567, 1.18", "-63.9588, 70.4721, -69.3593, 1.18", "-64.5187, 70.9238, -70.9878, 0.52", "-64.8094, 71.1451, -71.7528, 0.37", "-65.2989, 71.449, -72.8126, 1.33", "-65.7171, 71.6634, -73.5916, 2.14", "-65.9916, 71.8008, -74.0333, 2.58", "-66.6547, 72.1563, -74.9575, 2.8", "-67.5489, 72.7064, -76.0475, 0.37", "-68.0917, 73.1218, -76.6963, 0.37", "-68.3083, 73.3322, -76.9495, 0.37", "-68.6672, 73.8113, -77.3438, 0.59", "-68.9058, 74.2756, -77.6312, 0.74", "-69.0963, 74.8227, -77.9083, 0.74", "-69.2082, 75.3501, -78.2539, 0.74", "-69.2841, 75.6565, -78.5159, 0.44", "-69.4746, 76.0376, -78.9763, 0.29", "-69.6752, 76.3055, -79.4222, 0.29", "-69.9115, 76.542, -79.9357, 0.81", "-70.5224, 76.9774, -81.1276, 1.03", "-70.7959, 77.1292, -81.6128, 0.96", "-71.3134, 77.3961, -82.4812, 0.22", "-71.8074, 77.6638, -83.3286, 0.59", "-72.1256, 77.8669, -83.874, 0.59", "-72.4447, 78.1112, -84.4268, 0.44", "-72.7591, 78.3777, -84.9457, 0.37", "-73.3519, 78.8647, -85.9451, 1.03", "-73.8214, 79.1995, -86.6932, 1.69", "-74.0766, 79.3688, -87.0551, 1.92", "-74.4163, 79.6072, -87.5136, 1.92", "-74.6242, 79.7643, -87.8019, 1.92", "-75.4393, 80.3901, -88.9016, 0.44", "-75.7036, 80.6021, -89.22, 0.37", "-76.0199, 80.9075, -89.6143, 0.52", "-76.183, 81.1117, -89.8584, 0.88", "-76.4841, 81.5936, -90.3969, 1.03", "-76.6593, 81.9061, -90.7425, 1.18", "-76.9171, 82.4193, -91.3, 0.96", "-77.2385, 83.0535, -91.9837, 0.74", "-77.4438, 83.4509, -92.3853, 0.74", "-77.6393, 83.8244, -92.7365, 0.59", "-78.0117, 84.4802, -93.2939, 0.52", "-78.2678, 84.8997, -93.627, 0.52", "-78.6981, 85.5389, -94.081, 0.74", "-79.1817, 86.1799, -94.4715, 1.18", "-79.6118, 86.715, -94.7656, 1.4", "-79.9329, 87.0909, -94.962, 1.47", "-80.2579, 87.4333, -95.1428, 1.69", "-80.7589, 87.8672, -95.4162, 1.4", "-81.409, 88.3148, -95.7901, 0.52", "-82.0344, 88.6437, -96.1659, 0.52", "-82.6926, 88.9152, -96.5666, 0.74", "-83.2619, 89.1153, -96.9526, 0.96", "-84.005, 89.3522, -97.5252, 0.96", "-84.5333, 89.5216, -97.9961, 0.74", "-85.0355, 89.7245, -98.5084, 0.44", "-85.3463, 89.9154, -98.8669, 0.44", "-85.7144, 90.2282, -99.3358, 0.74", "-86.0414, 90.5415, -99.7464, 0.88", "-86.2669, 90.7693, -100.054, 0.88", "-86.6497, 91.1877, -100.627, 0.29", "-86.9964, 91.5909, -101.201, 0.29", "-87.3767, 92.0182, -101.836, 0.37", "-87.7449, 92.405, -102.43, 0.44", "-88.3322, 93.0118, -103.386, 0.59", "-88.5912, 93.3061, -103.835, 1.18", "-88.9568, 93.7838, -104.494, 1.03", "-89.2488, 94.2134, -105.001, 1.69", "-89.4083, 94.4628, -105.249, 1.69", "-89.7753, 95.028, -105.767, 1.18", "-90.2828, 95.7418, -106.371, 0.37", "-90.587, 96.146, -106.734, 0.37", "-91.0617, 96.748, -107.302, 0.37", "-91.4917, 97.2638, -107.826, 0.59", "-91.8711, 97.6764, -108.273, 1.11", "-92.2004, 97.9911, -108.638, 1.62", "-92.604, 98.3158, -109.086, 1.69", "-92.982, 98.6153, -109.553, 1.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-58.685, 32.2429, 120.089, 0.88", "-60.3669, 31.6028, 127.023, 0.88", "-62.5102, 32.0396, 133.841, 0.88", "-63.7981, 33.2756, 140.778, 0.88", "-65.0557, 34.5554, 147.712, 0.88", "-65.3083, 36.8686, 154.496, 0.88", "-65.2296, 39.3661, 161.221, 0.88", "-66.5036, 42.3519, 167.629, 0.88", "-67.7369, 46.0933, 173.655, 0.88", "-69.3793, 50.3926, 179.212, 0.88", "-71.3432, 54.9267, 184.48, 0.88" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-58.685, 32.2429, 120.089, 0.22", "-60.7147, 31.5005, 128.62, 0.88", "-61.851, 31.2147, 137.34, 0.88", "-64.6556, 31.985, 145.646, 0.88", "-67.396, 33.2171, 153.919, 0.88", "-70.6536, 33.6226, 162.083, 0.88", "-74.5929, 33.5846, 169.951, 0.88", "-77.6841, 32.8308, 178.156, 0.88", "-81.2346, 32.3178, 186.192, 0.88", "-83.7871, 30.4054, 194.404, 0.88", "-84.9301, 28.4958, 202.925, 0.88" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-111.662, 59.4901, 75.9093, 0.88", "-119.344, 61.6476, 79.647, 0.88", "-127.019, 63.5654, 83.5139, 0.88", "-134.944, 64.9912, 87.0668, 0.88", "-142.541, 65.5417, 91.4389, 0.88" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-111.662, 59.4901, 75.9093, 0.22", "-118.056, 61.6022, 78.6261, 0.88", "-124.385, 63.4471, 81.6483, 0.88", "-130.688, 63.6617, 85.1718, 0.88", "-137.555, 64.172, 87.4119, 0.88", "-144.048, 64.6062, 90.5617, 0.88" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-68.5622, -137.492, 67.6865, 0.88", "-72.0376, -142.631, 70.9613, 0.88", "-75.0408, -147.645, 74.8439, 0.88", "-78.1864, -152.3, 79.0287, 0.88", "-80.2167, -157.659, 83.1101, 0.88", "-81.6388, -161.922, 88.4883, 0.88", "-84.1258, -166.212, 93.4317, 0.88", "-86.0496, -169.054, 99.4971, 0.88", "-87.1025, -171.865, 105.791, 0.88", "-87.2852, -173.44, 112.557, 0.88", "-86.8688, -176.01, 119.025, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-68.5622, -137.492, 67.6865, 0.22", "-73.4492, -144.206, 71.3274, 0.88", "-78.8446, -150.2, 75.4199, 0.88", "-83.4054, -157.442, 78.4702, 0.88", "-88.3063, -164.617, 81.1163, 0.88", "-93.2378, -171.994, 83.0893, 0.88", "-99.0438, -178.962, 83.1963, 0.88", "-104.79, -185.949, 83.8889, 0.88", "-111.32, -192.138, 84.8189, 0.88", "-118.507, -197.584, 84.5778, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-2.23032, -44.7363, 4.01659, 1.25", "-1.95522, -45.5313, 3.58274, 1.25", "-1.7353, -46.0792, 3.34711, 1.03", "-1.36014, -46.8372, 3.10954, 0.88", "-1.04243, -47.4569, 2.99822, 0.66", "-0.822984, -47.9154, 2.97292, 0.66", "-0.525987, -48.618, 2.98733, 0.74", "-0.310421, -49.292, 3.08109, 0.66", "-0.158693, -49.8109, 3.20152, 0.81", "-0.016711, -50.3337, 3.34436, 0.81", "0.169868, -51.0075, 3.50816, 0.74", "0.365444, -51.6832, 3.62316, 0.96", "0.59812, -52.4708, 3.70005, 1.03", "0.830192, -53.2127, 3.75408, 1.11", "1.06423, -53.9424, 3.79677, 1.25", "1.40051, -54.8777, 3.83096, 0.96", "1.77779, -55.8166, 3.8622, 0.96", "2.15264, -56.6607, 3.8916, 1.11", "2.4933, -57.3619, 3.91407, 1.47" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.23032, -44.7363, 4.01659, 2.06", "-3.02415, -45.8169, 3.63818, 2.06", "-3.80055, -47.1032, 3.0834, 2.06", "-4.38906, -48.2857, 2.51526, 2.06", "-4.87072, -49.3828, 1.91527, 2.06", "-5.39163, -50.5997, 1.16302, 1.99", "-6.06051, -52.2005, 0.130797, 1.77", "-6.55979, -53.6264, -0.893254, 1.47", "-6.99694, -55.0736, -2.01281, 1.11", "-7.38838, -56.4294, -3.15544, 1.11", "-7.68706, -57.3867, -4.00267, 1.25", "-7.95584, -58.1172, -4.66464, 1.25", "-8.70321, -59.6218, -6.03757, 1.18", "-9.25195, -60.4141, -6.77424, 1.25", "-10.2757, -61.5264, -7.81578, 1.18", "-11.1339, -62.2595, -8.44949, 1.18", "-11.8238, -62.7283, -8.81218, 1.18", "-13.0471, -63.3633, -9.26959, 1.18", "-14.3475, -63.894, -9.61031, 1.25", "-15.0679, -64.1353, -9.74939, 1.25", "-16.127, -64.4364, -9.86551, 1.25", "-17.7163, -64.879, -10.0007, 1.77", "-18.8192, -65.1817, -10.0785, 2.14" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "51.4271, 132.897, -19.2737, 0.74", "51.9766, 133.031, -20.1976, 0.74", "53.163, 133.473, -21.9951, 1.03", "53.7757, 133.807, -22.9032, 0.52", "54.2452, 134.146, -23.5888, 0.52", "54.7335, 134.594, -24.2834, 0.74", "55.2271, 135.12, -24.9464, 0.52", "55.7835, 135.831, -25.5507, 0.59", "56.523, 136.876, -26.1792, 0.44", "57.0443, 137.627, -26.5632, 0.52", "57.7335, 138.63, -27.0223, 0.44", "58.2649, 139.378, -27.3208, 0.29", "58.9298, 140.23, -27.6487, 0.29", "59.1379, 140.451, -27.7506, 0.59", "59.7053, 140.964, -28.0226, 0.59", "60.4188, 141.499, -28.3783, 0.44", "60.9849, 141.868, -28.6805, 0.59", "62.008, 142.546, -29.254, 0.37", "62.7644, 143.106, -29.689, 0.37", "63.3954, 143.606, -30.0305, 0.37", "64.1059, 144.189, -30.3764, 0.37", "65.1744, 145.026, -30.8298, 0.96", "65.8862, 145.575, -31.0993, 1.03", "66.8298, 146.304, -31.4169, 0.81", "67.4858, 146.835, -31.6294, 0.66", "68.3902, 147.621, -31.9362, 0.88", "68.8535, 148.05, -32.0944, 1.25", "69.5679, 148.662, -32.3099, 0.88", "70.2894, 149.198, -32.5824, 0.29", "70.7242, 149.493, -32.7779, 0.44", "71.3316, 149.906, -33.0838, 0.37", "72.2754, 150.498, -33.5779, 0.52", "73.2856, 151.064, -34.1102, 0.59", "75.0629, 151.897, -34.973, 0.66", "76.0923, 152.314, -35.4306, 0.52", "76.526, 152.472, -35.629, 0.59", "77.365, 152.767, -36.0108, 0.44", "78.2563, 153.116, -36.4085, 0.37", "79.4349, 153.642, -36.8739, 0.37", "80.1264, 153.969, -37.0703, 0.96", "81.0185, 154.446, -37.2808, 0.88", "81.9464, 155.006, -37.4784, 0.44", "82.5491, 155.417, -37.6129, 0.29", "83.2659, 155.951, -37.8189, 0.44", "84.1661, 156.702, -38.1332, 0.44", "85.1199, 157.581, -38.5482, 0.52", "85.7378, 158.215, -38.8784, 0.66", "86.729, 159.331, -39.6126, 0.66", "87.5554, 160.357, -40.3934, 0.44", "87.98, 160.937, -40.8858, 0.37", "88.4392, 161.635, -41.5356, 0.37", "88.7193, 162.037, -41.9525, 0.52", "89.2892, 162.721, -42.7175, 0.59", "89.6342, 163.012, -43.0631, 0.66", "90.3123, 163.341, -43.519, 0.52", "91.2129, 163.582, -44.0, 0.88", "91.8807, 163.7, -44.2965, 0.88", "92.6535, 163.847, -44.6582, 0.74", "93.2873, 163.968, -45.0394, 0.59", "93.7492, 164.042, -45.3713, 0.29", "94.5904, 164.119, -46.0358, 0.29", "95.164, 164.143, -46.5154, 0.29", "96.2644, 164.237, -47.5291, 0.88", "97.3616, 164.437, -48.6064, 0.96", "97.8778, 164.583, -49.1255, 0.88", "98.6074, 164.813, -49.8721, 0.29", "98.9483, 164.902, -50.1868, 0.29", "99.5386, 164.965, -50.6587, 0.37", "100.161, 164.949, -51.097, 0.37", "100.646, 164.936, -51.4859, 0.37", "101.845, 164.876, -52.5532, 0.44", "102.563, 164.809, -53.2278, 0.59", "103.034, 164.719, -53.6693, 0.81", "103.733, 164.567, -54.3339, 0.59", "104.851, 164.372, -55.4123, 1.11", "105.402, 164.317, -55.9577, 1.47", "105.825, 164.297, -56.3515, 1.47", "106.65, 164.251, -57.0904, 1.03", "107.722, 164.191, -57.9564, 0.59", "108.696, 164.107, -58.6563, 0.96", "109.739, 163.97, -59.3362, 0.96", "110.784, 163.82, -60.006, 0.37", "111.738, 163.684, -60.5638, 0.37", "112.455, 163.574, -60.9445, 0.37", "113.584, 163.353, -61.5065, 0.37", "114.701, 163.132, -62.0385, 0.81", "115.664, 162.982, -62.4791, 1.03", "116.989, 162.876, -63.1045, 1.25", "117.369, 162.862, -63.2808, 1.47", "118.991, 162.808, -63.9931, 0.29", "119.513, 162.8, -64.1887, 0.29", "120.119, 162.797, -64.3763, 0.44", "120.838, 162.815, -64.5544, 0.22", "121.64, 162.862, -64.7195, 0.59", "122.345, 162.941, -64.8334, 0.59", "123.479, 163.126, -64.9771, 0.22", "124.672, 163.342, -65.1247, 0.22", "126.155, 163.604, -65.2955, 0.22", "127.013, 163.761, -65.3841, 0.44", "128.509, 164.086, -65.5332, 0.22", "129.412, 164.292, -65.6247, 0.22", "130.112, 164.449, -65.7025, 0.37", "132.071, 164.86, -65.9294, 0.22", "133.404, 165.114, -66.0955, 0.22", "135.791, 165.563, -66.4029, 0.22", "137.149, 165.791, -66.5994, 0.22", "137.825, 165.891, -66.7002, 0.96", "138.771, 166.025, -66.8437, 0.96", "139.627, 166.143, -66.9761, 0.88", "140.432, 166.234, -67.0943, 0.88", "142.445, 166.456, -67.3533, 0.22", "144.974, 166.715, -67.6319, 0.22", "146.249, 166.835, -67.7563, 0.44", "146.961, 166.88, -67.8248, 0.52", "148.583, 166.926, -67.9486, 0.22", "150.929, 166.917, -68.0852, 0.22", "152.755, 166.865, -68.1384, 0.22", "154.503, 166.756, -68.1661, 0.22", "156.849, 166.528, -68.1838, 0.22", "158.229, 166.345, -68.1848, 0.22", "159.295, 166.144, -68.1811, 1.33", "160.021, 165.938, -68.1767, 1.47", "161.506, 165.482, -68.1558, 0.66", "162.591, 165.099, -68.1359, 0.29", "164.06, 164.538, -68.1226, 0.29", "165.176, 164.075, -68.1694, 0.29", "166.282, 163.546, -68.2354, 0.29" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "51.4271, 132.897, -19.2737, 0.37", "52.1163, 133.588, -19.0504, 0.37", "52.7874, 134.308, -18.7983, 0.37", "53.0853, 134.64, -18.6719, 0.37", "53.5981, 135.206, -18.4858, 0.37", "53.9622, 135.627, -18.3631, 0.37", "54.7383, 136.562, -18.0931, 0.66", "55.1101, 137.05, -17.8981, 1.25", "55.3561, 137.412, -17.7323, 1.25", "55.8314, 138.241, -17.3382, 0.59", "56.2059, 138.986, -16.9526, 0.37", "56.6382, 139.852, -16.4624, 0.37", "57.2584, 141.029, -15.7589, 0.52", "57.4907, 141.48, -15.4741, 0.37", "57.81, 142.111, -15.0852, 0.52", "58.0444, 142.605, -14.7493, 0.66", "58.2378, 143.012, -14.4779, 0.66", "58.4814, 143.527, -14.1614, 0.44", "58.8889, 144.417, -13.7001, 0.66", "59.0916, 144.898, -13.45, 0.81", "59.5117, 145.972, -12.8992, 1.03", "59.8044, 146.743, -12.4995, 1.18", "59.951, 147.146, -12.2447, 1.18", "60.2714, 147.991, -11.6222, 0.44", "60.537, 148.692, -11.0539, 0.37", "60.6763, 149.096, -10.7174, 0.37", "60.8773, 149.735, -10.2155, 0.66", "61.3065, 151.076, -9.14082, 0.96", "61.3866, 151.313, -8.96004, 0.66", "61.575, 151.8, -8.59104, 0.29", "61.8027, 152.313, -8.24524, 0.29", "61.9972, 152.678, -8.04375, 0.29", "62.5035, 153.446, -7.70226, 0.29", "63.0147, 154.102, -7.46652, 0.44", "63.5752, 154.769, -7.22735, 0.59", "64.2194, 155.496, -6.97034, 0.59", "64.9424, 156.311, -6.69329, 0.66", "65.3492, 156.798, -6.52574, 0.44", "65.7448, 157.327, -6.34764, 0.37", "66.0727, 157.814, -6.17234, 0.52", "66.3815, 158.305, -5.98025, 0.66", "66.6346, 158.728, -5.79498, 0.66", "67.1622, 159.654, -5.36115, 0.59", "67.5195, 160.306, -5.05867, 0.74", "67.9464, 161.13, -4.65907, 0.66", "68.453, 162.193, -4.14827, 0.52", "68.8099, 163.006, -3.75904, 0.59", "69.0441, 163.565, -3.48571, 0.59", "69.2892, 164.134, -3.20355, 0.59", "69.691, 165.024, -2.72663, 0.44", "70.0041, 165.72, -2.3392, 0.29", "70.2602, 166.358, -1.95293, 0.44", "70.5539, 167.071, -1.4634, 0.59", "70.9061, 167.771, -0.926974, 0.74", "71.2716, 168.37, -0.450774, 0.59", "71.709, 169.005, 0.0256346, 0.96", "72.0149, 169.46, 0.364163, 1.11", "72.5391, 170.353, 0.96094, 0.59", "72.9572, 171.209, 1.44461, 0.52", "73.2979, 171.93, 1.80675, 0.52", "73.6535, 172.638, 2.12908, 0.66", "74.2455, 173.78, 2.58883, 0.74", "74.6073, 174.522, 2.85008, 0.74", "75.0105, 175.405, 3.13696, 0.29", "75.4369, 176.341, 3.43396, 0.29", "75.6094, 176.66, 3.54016, 0.29", "76.1135, 177.465, 3.79531, 0.29", "76.6481, 178.167, 3.9989, 0.52", "77.0142, 178.58, 4.13954, 0.37", "77.4995, 179.063, 4.33102, 0.37", "78.0063, 179.52, 4.52704, 0.29", "78.8218, 180.181, 4.85347, 0.29", "79.4389, 180.626, 5.09509, 0.37", "79.9631, 180.985, 5.29754, 0.52", "80.3663, 181.262, 5.46656, 0.52", "80.8745, 181.612, 5.69179, 0.44", "81.6656, 182.156, 6.04118, 0.44", "82.1802, 182.517, 6.2571, 0.59", "82.7158, 182.93, 6.46609, 0.74", "83.2256, 183.356, 6.71901, 0.74", "83.8031, 183.876, 7.04688, 0.52", "84.2908, 184.338, 7.3333, 0.37", "84.9709, 184.981, 7.72287, 0.29", "85.4953, 185.477, 8.03058, 0.29", "86.7327, 186.623, 8.74363, 0.66", "87.3238, 187.168, 9.09163, 0.44", "87.922, 187.706, 9.46264, 0.52", "88.2823, 188.023, 9.6912, 0.52", "88.6821, 188.381, 9.95331, 0.37", "89.0198, 188.716, 10.1742, 0.37", "89.3808, 189.094, 10.3714, 0.44", "89.8889, 189.683, 10.6778, 0.74", "90.2031, 190.084, 10.8752, 0.88", "90.6716, 190.754, 11.1851, 0.74", "91.0155, 191.273, 11.419, 0.52", "91.4507, 191.936, 11.7161, 0.37", "91.8523, 192.518, 11.9777, 0.22", "92.1391, 192.897, 12.1498, 0.22", "92.6096, 193.464, 12.4178, 0.59", "92.9892, 193.872, 12.6476, 0.74", "93.4308, 194.274, 12.9449, 0.59", "93.636, 194.436, 13.0988, 0.59", "94.5547, 195.099, 13.8159, 0.37", "94.9171, 195.357, 14.0965, 0.37", "95.5216, 195.763, 14.5207, 0.52", "96.1167, 196.13, 14.8739, 0.52", "96.5982, 196.387, 15.1049, 0.52", "97.3146, 196.719, 15.45, 0.81", "97.7351, 196.893, 15.6545, 0.88", "98.2874, 197.103, 15.9126, 0.88", "99.1928, 197.412, 16.3076, 0.44", "100.04, 197.672, 16.6803, 0.37", "101.459, 198.065, 17.3124, 0.59", "102.001, 198.195, 17.5588, 0.59", "102.789, 198.377, 17.9652, 0.37", "103.353, 198.515, 18.2856, 0.29", "103.961, 198.661, 18.6463, 0.29", "104.72, 198.805, 19.0368, 0.29", "105.525, 198.92, 19.3742, 0.29", "106.837, 199.068, 19.927, 0.59", "107.432, 199.135, 20.1853, 0.59", "107.989, 199.198, 20.4276, 0.59", "109.124, 199.295, 20.894, 0.29", "109.728, 199.337, 21.1194, 0.29", "110.715, 199.411, 21.4453, 0.66", "111.41, 199.462, 21.6414, 0.74", "112.03, 199.507, 21.8124, 0.74", "113.27, 199.628, 22.1102, 0.22", "114.386, 199.782, 22.3495, 0.22", "115.033, 199.888, 22.4534, 0.29", "115.475, 199.979, 22.498, 0.29", "116.293, 200.199, 22.5571, 0.22", "117.306, 200.587, 22.6074, 0.37", "117.83, 200.859, 22.6226, 0.52", "118.226, 201.097, 22.6337, 0.52", "118.804, 201.466, 22.659, 0.59", "119.468, 201.873, 22.7062, 0.59", "120.155, 202.232, 22.8039, 0.52", "120.686, 202.454, 22.9163, 0.59", "121.351, 202.678, 23.0693, 0.44", "121.908, 202.833, 23.2008, 0.29", "122.514, 202.989, 23.3818, 0.29", "123.603, 203.323, 23.7619, 0.29", "123.988, 203.455, 23.9097, 0.29", "124.752, 203.753, 24.2167, 0.29", "125.148, 203.93, 24.3801, 0.29", "126.357, 204.525, 24.8474, 0.29", "126.995, 204.861, 25.0328, 0.29", "127.832, 205.312, 25.1956, 0.22", "128.249, 205.523, 25.2507, 0.44", "128.671, 205.717, 25.2836, 0.44", "129.388, 206.001, 25.3066, 0.29", "130.615, 206.359, 25.2801, 0.22", "131.148, 206.479, 25.2728, 0.22", "131.665, 206.585, 25.2713, 0.44", "132.165, 206.663, 25.2626, 0.44", "132.789, 206.73, 25.2328, 0.37", "133.599, 206.809, 25.1796, 0.29", "134.504, 206.902, 25.1008, 0.29", "135.085, 206.984, 25.0224, 0.29", "136.038, 207.162, 24.8507, 0.29", "136.622, 207.31, 24.7241, 0.29", "137.346, 207.542, 24.5253, 0.44", "138.021, 207.765, 24.2837, 0.37", "138.67, 207.923, 24.0048, 0.52", "139.178, 208.022, 23.7766, 0.52", "139.57, 208.088, 23.6146, 0.66", "140.665, 208.249, 23.1859, 0.96", "141.644, 208.393, 22.8246, 0.81", "142.964, 208.641, 22.3605, 0.29", "143.801, 208.808, 22.0082, 0.29", "144.54, 208.992, 21.6734, 0.29", "145.031, 209.157, 21.4788, 0.29", "146.011, 209.515, 21.2334, 0.29", "146.605, 209.72, 21.1417, 0.66", "148.814, 210.327, 20.9182, 0.29", "149.303, 210.405, 20.8773, 0.22", "151.192, 210.593, 20.719, 0.22", "153.05, 210.656, 20.5841, 0.22", "153.869, 210.632, 20.5407, 0.37", "154.676, 210.579, 20.5638, 0.44", "155.012, 210.556, 20.6315, 0.22", "161.786, 215.883, 22.3331, 0.22", "169.305, 220.348, 22.9051, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-97.0566, 106.783, 37.7562, 0.88", "-104.585, 112.056, 42.2116, 0.88", "-111.953, 118.739, 44.6907, 0.88", "-118.807, 126.397, 44.7427, 0.88", "-127.568, 131.534, 45.7453, 0.88", "-137.107, 135.06, 45.8311, 0.88", "-146.668, 138.456, 46.5028, 0.88", "-155.863, 142.728, 45.5617, 0.88", "-165.289, 146.408, 46.6217, 0.88", "-173.996, 151.26, 48.7832, 0.88", "-181.636, 156.831, 52.6671, 0.88", "-187.706, 162.844, 58.3071, 0.88" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-97.0566, 106.783, 37.7562, 0.22", "-104.016, 111.75, 42.0887, 0.88", "-110.368, 116.664, 47.3247, 0.88", "-115.524, 121.096, 54.0696, 0.88", "-119.399, 126.17, 61.2334, 0.88", "-122.057, 129.634, 69.737, 0.88", "-124.264, 132.681, 78.5164, 0.88", "-125.419, 135.038, 87.6886, 0.88", "-127.816, 136.579, 96.7812, 0.88", "-130.594, 136.71, 105.884, 0.88", "-134.57, 136.78, 114.53, 0.88", "-136.936, 137.581, 123.718, 0.88", "-138.273, 137.926, 133.136, 0.88" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-92.982, 98.6153, -109.553, 0.29", "-92.813, 99.8289, -110.611, 0.29", "-92.8525, 100.613, -111.348, 0.29", "-92.971, 101.215, -111.93, 0.37", "-93.0452, 101.531, -112.225, 0.37", "-93.1224, 101.975, -112.651, 0.81", "-93.2177, 102.526, -113.186, 0.81", "-93.3685, 103.023, -113.685, 0.44", "-93.4973, 103.353, -114.027, 0.22", "-93.647, 103.711, -114.465, 0.22", "-93.9231, 104.486, -115.526, 0.37", "-93.9844, 104.699, -115.847, 0.22", "-94.1021, 105.129, -116.489, 0.22", "-94.2077, 105.475, -116.995, 0.59", "-94.4023, 105.983, -117.805, 0.74", "-94.6746, 106.508, -118.851, 0.37", "-94.919, 106.829, -119.778, 0.37", "-95.0738, 107.036, -120.529, 0.37", "-95.2185, 107.236, -121.305, 1.03", "-95.4722, 107.566, -122.641, 1.62", "-95.8479, 107.987, -124.478, 1.84", "-96.3535, 108.507, -126.96, 1.33", "-96.6851, 108.864, -128.702, 0.44", "-96.8225, 109.042, -129.516, 0.44", "-96.9502, 109.246, -130.301, 0.44", "-97.0621, 109.456, -130.918, 0.59", "-97.4287, 110.176, -132.56, 0.74", "-97.5569, 110.391, -133.033, 0.74", "-97.765, 110.598, -133.65, 0.88", "-98.1079, 110.797, -134.568, 0.96", "-98.4276, 110.892, -135.359, 0.52", "-98.6719, 110.934, -135.875, 0.37", "-99.3514, 111.001, -137.16, 0.29", "-99.868, 111.04, -138.21, 0.29", "-100.275, 111.081, -139.068, 0.29", "-100.994, 111.223, -140.606, 0.29", "-101.275, 111.363, -141.265, 0.29", "-101.483, 111.584, -141.853, 0.29", "-101.704, 112.05, -142.629, 0.29", "-101.805, 112.475, -143.22, 0.52", "-101.842, 112.843, -143.697, 0.66", "-101.898, 113.427, -144.395, 0.66", "-101.985, 114.055, -145.235, 0.44", "-102.071, 114.397, -145.775, 0.59", "-102.274, 115.095, -146.984, 0.29", "-102.404, 115.605, -147.91, 0.29", "-102.522, 116.072, -148.734, 0.81", "-102.666, 116.672, -149.723, 1.25", "-102.967, 118.029, -151.744, 0.44", "-103.179, 119.144, -153.232, 0.74", "-103.329, 120.065, -154.324, 0.29", "-103.41, 120.611, -154.954, 0.29", "-103.482, 121.304, -155.708, 0.29", "-103.568, 122.553, -156.823, 0.22", "-103.581, 123.441, -157.396, 0.22", "-103.586, 123.746, -157.545, 0.29" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-92.982, 98.6153, -109.553, 0.44", "-93.8299, 99.1608, -109.737, 0.44", "-94.2653, 99.4239, -109.826, 0.52", "-94.6102, 99.6188, -109.893, 0.59", "-94.9816, 99.8114, -109.979, 0.59", "-95.4302, 100.027, -110.094, 0.37", "-95.8364, 100.221, -110.213, 0.37", "-96.1747, 100.377, -110.32, 0.96", "-96.5985, 100.57, -110.488, 1.4", "-96.9464, 100.736, -110.647, 1.62", "-97.4255, 101.003, -110.899, 0.59", "-97.7949, 101.252, -111.142, 0.81", "-98.0801, 101.468, -111.356, 0.96", "-98.2233, 101.586, -111.471, 1.18", "-98.4738, 101.812, -111.678, 0.29", "-98.7918, 102.109, -111.928, 0.22", "-99.224, 102.493, -112.263, 0.96", "-99.4462, 102.669, -112.431, 0.96", "-99.774, 102.902, -112.691, 0.66", "-100.141, 103.124, -113.006, 0.44", "-100.529, 103.313, -113.379, 0.44", "-100.918, 103.478, -113.775, 0.81", "-101.264, 103.626, -114.141, 0.96", "-101.656, 103.805, -114.582, 0.74", "-102.208, 104.061, -115.246, 0.29", "-102.535, 104.216, -115.668, 0.29", "-102.754, 104.325, -115.968, 0.44", "-102.921, 104.407, -116.208, 0.66", "-103.105, 104.493, -116.484, 0.52", "-103.322, 104.576, -116.814, 0.52", "-103.584, 104.639, -117.213, 0.66", "-103.873, 104.651, -117.618, 0.37", "-104.147, 104.611, -117.975, 0.29", "-104.374, 104.559, -118.236, 0.29", "-104.554, 104.513, -118.431, 0.29", "-104.891, 104.417, -118.753, 0.29", "-105.128, 104.336, -118.996, 0.52", "-105.35, 104.25, -119.248, 0.74", "-105.633, 104.102, -119.595, 0.74", "-106.008, 103.8, -120.155, 0.52", "-106.169, 103.563, -120.493, 1.47", "-106.4, 103.072, -121.098, 1.92", "-106.505, 102.806, -121.419, 1.84", "-106.648, 102.41, -121.907, 0.88", "-106.79, 102.036, -122.442, 0.66", "-107.012, 101.624, -123.167, 0.37", "-107.168, 101.473, -123.579, 0.29", "-107.37, 101.405, -123.99, 0.29", "-107.633, 101.414, -124.424, 0.44", "-108.139, 101.503, -125.134, 0.59", "-108.585, 101.637, -125.746, 0.66", "-108.847, 101.737, -126.103, 0.66", "-109.008, 101.794, -126.34, 0.44", "-109.335, 101.882, -126.831, 0.37", "-109.792, 101.98, -127.56, 0.37", "-110.274, 102.065, -128.3, 0.37", "-110.436, 102.094, -128.547, 0.52", "-110.769, 102.136, -129.046, 0.66", "-111.159, 102.175, -129.601, 0.37", "-111.602, 102.162, -130.297, 0.37", "-111.97, 102.098, -130.882, 0.74", "-112.168, 102.038, -131.181, 0.74", "-112.57, 101.899, -131.798, 0.52", "-112.956, 101.761, -132.395, 0.52", "-113.834, 101.379, -133.858, 0.52", "-114.123, 101.192, -134.401, 0.44", "-114.297, 101.031, -134.799, 0.29", "-114.457, 100.847, -135.199, 0.29", "-114.75, 100.467, -135.95, 0.29", "-114.975, 100.188, -136.522, 0.29", "-115.421, 99.7938, -137.428, 0.52", "-115.673, 99.5447, -138.029, 0.66", "-115.826, 99.348, -138.476, 0.66", "-115.91, 99.1683, -138.821, 0.52", "-116.0, 98.8984, -139.28, 0.52", "-116.077, 98.7023, -139.628, 0.22", "-116.422, 98.083, -140.853, 1.18", "-116.54, 97.8535, -141.297, 1.4", "-116.738, 97.3788, -142.1, 0.52", "-116.813, 97.1894, -142.379, 0.29", "-116.956, 96.8594, -142.781, 0.29", "-117.171, 96.4544, -143.217, 0.29", "-117.704, 95.639, -143.917, 0.44", "-118.1, 95.1213, -144.304, 0.44", "-118.42, 94.7225, -144.575, 0.29", "-119.061, 93.9141, -145.078, 0.52", "-119.369, 93.5209, -145.288, 0.52", "-119.809, 92.9691, -145.543, 0.37", "-120.305, 92.4105, -145.762, 0.29", "-121.016, 91.6986, -146.053, 0.44", "-121.339, 91.4139, -146.18, 0.44", "-121.889, 91.0114, -146.39, 0.22", "-122.348, 90.7267, -146.578, 0.22", "-122.798, 90.4996, -146.78, 0.52", "-122.966, 90.4282, -146.861, 0.52", "-123.647, 90.1864, -147.202, 0.29", "-124.48, 89.9293, -147.653, 0.29", "-125.117, 89.7662, -148.023, 0.22", "-125.946, 89.5673, -148.518, 0.22", "-126.408, 89.4559, -148.8, 0.59", "-126.884, 89.3359, -149.087, 0.44", "-127.35, 89.2197, -149.353, 0.22", "-127.638, 89.1507, -149.498, 0.22", "-128.029, 89.0632, -149.665, 0.37", "-128.377, 88.9922, -149.787, 0.37", "-128.763, 88.9213, -149.903, 0.22", "-129.277, 88.8383, -150.05, 0.22", "-129.699, 88.7839, -150.173, 0.37", "-130.056, 88.7517, -150.275, 0.37", "-130.495, 88.7165, -150.389, 0.37", "-130.929, 88.6781, -150.495, 0.29", "-131.339, 88.6441, -150.599, 0.37", "-132.374, 88.5704, -150.868, 0.22", "-133.081, 88.5227, -151.05, 0.22", "-134.063, 88.4603, -151.294, 0.22", "-134.47, 88.4354, -151.39, 0.22", "-134.898, 88.4088, -151.484, 0.44", "-135.122, 88.3926, -151.526, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-71.3432, 54.9267, 184.48, 0.88", "-73.4601, 58.5811, 194.535, 0.88", "-75.2003, 61.7459, 204.818, 0.88", "-78.4723, 64.9751, 214.704, 0.88", "-82.0391, 68.1419, 224.509, 0.88", "-85.1446, 70.846, 234.597, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-71.3432, 54.9267, 184.48, 0.22", "-73.6916, 59.1359, 196.013, 0.88", "-78.0265, 63.6353, 206.851, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-84.9301, 28.4958, 202.925, 0.88", "-88.6797, 26.6155, 209.424, 0.88", "-91.4898, 24.994, 216.443, 0.88" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-84.9301, 28.4958, 202.925, 0.22", "-84.8098, 30.2258, 210.5, 0.88", "-83.3704, 31.8662, 217.959, 0.88" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-142.541, 65.5417, 91.4389, 0.88", "-145.924, 64.6655, 95.0379, 0.88", "-149.788, 63.5892, 98.0513, 0.88", "-153.83, 63.0757, 100.98, 0.88" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-142.541, 65.5417, 91.4389, 0.22", "-154.792, 72.2233, 91.7802, 0.88", "-167.509, 77.8433, 90.4824, 0.88", "-179.839, 83.9968, 88.0678, 0.88", "-191.787, 90.164, 84.1386, 0.88" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-86.8688, -176.01, 119.025, 0.88", "-89.4163, -183.255, 127.994, 0.88", "-92.5972, -190.834, 136.484, 0.88" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-86.8688, -176.01, 119.025, 0.22", "-90.1876, -181.938, 127.245, 0.88" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-118.507, -197.584, 84.5778, 0.88", "-125.284, -206.934, 86.2774, 0.88", "-132.074, -216.412, 86.8492, 0.88" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-118.507, -197.584, 84.5778, 0.22", "-127.547, -206.102, 88.7146, 0.88", "-135.432, -216.216, 91.591, 0.88" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "2.4933, -57.3619, 3.91407, 0.66", "3.04189, -59.0476, 4.49424, 0.66", "3.45625, -60.2217, 4.81538, 0.52", "3.93381, -61.656, 5.14196, 1.18", "4.13965, -62.4444, 5.30859, 1.62", "4.28152, -63.2733, 5.46366, 1.33", "4.36834, -64.3475, 5.63638, 0.74", "4.44088, -65.5974, 5.7309, 0.44", "4.46102, -66.3788, 5.79326, 0.44", "4.42045, -67.4786, 5.89904, 0.44", "4.39264, -68.5998, 6.03069, 0.52", "4.42893, -69.7187, 6.19493, 0.66", "4.64281, -70.8316, 6.4103, 0.44", "5.08121, -71.7326, 6.72239, 0.66", "5.38158, -72.1863, 6.95571, 0.88", "5.89607, -72.8448, 7.34937, 0.88", "6.20169, -73.2073, 7.57632, 0.96", "6.57693, -73.6465, 7.84913, 0.66", "7.41346, -74.6932, 8.42218, 0.44", "8.27065, -75.8442, 8.91876, 0.52", "8.6787, -76.4047, 9.1409, 0.52", "9.36237, -77.3139, 9.50557, 0.74", "9.85388, -77.919, 9.74536, 0.96", "10.4147, -78.5285, 9.97871, 0.96", "11.3211, -79.3462, 10.268, 0.59", "12.3063, -80.0549, 10.5898, 0.59", "13.4195, -80.8027, 11.0176, 0.88", "13.7955, -81.0608, 11.1787, 0.88", "14.2994, -81.4433, 11.405, 0.88", "14.9329, -81.9863, 11.6991, 0.74", "15.8934, -82.9025, 12.1129, 0.74", "16.7455, -83.8061, 12.4072, 0.74", "17.6086, -84.8215, 12.6627, 0.81", "18.2167, -85.5975, 12.8417, 0.96", "18.6463, -86.1935, 12.9567, 0.96", "19.1342, -86.9258, 13.065, 0.88", "19.6921, -87.8377, 13.1503, 0.88", "19.881, -88.1453, 13.1769, 1.11", "20.4613, -89.0775, 13.2081, 0.74", "20.9175, -89.7853, 13.2019, 0.74", "21.3845, -90.4946, 13.1991, 0.66", "22.1183, -91.6729, 13.2057, 0.44", "22.6058, -92.5193, 13.2311, 1.03", "23.2538, -93.7458, 13.3013, 0.81", "23.7752, -94.791, 13.3671, 0.59", "24.3654, -96.0442, 13.4658, 0.74", "24.7772, -96.9726, 13.5363, 0.59", "25.1011, -97.798, 13.6346, 0.59", "25.5124, -99.071, 13.8349, 0.44", "25.7528, -100.035, 14.0204, 0.37", "25.9894, -101.253, 14.2394, 0.74", "26.1438, -102.175, 14.3817, 0.88", "26.4224, -103.811, 14.6476, 0.88", "26.5414, -104.486, 14.7816, 0.74", "26.7784, -105.769, 15.0903, 0.66", "26.9709, -106.706, 15.3541, 0.74", "27.2662, -107.858, 15.7162, 0.74", "27.5091, -108.63, 15.9667, 0.74", "28.0209, -110.038, 16.3875, 0.52", "28.2652, -110.672, 16.5625, 0.52", "28.6066, -111.65, 16.8743, 0.29", "28.8651, -112.463, 17.1615, 0.59", "29.0534, -113.068, 17.3857, 0.74", "29.3071, -113.913, 17.7033, 0.44", "29.6139, -114.961, 18.0982, 0.37", "30.1312, -116.822, 18.8584, 0.37", "30.332, -117.625, 19.2214, 0.52", "30.4936, -118.396, 19.6265, 0.59", "30.6248, -119.237, 20.1208, 0.74", "30.6813, -119.833, 20.4988, 1.18", "30.6977, -120.253, 20.7622, 1.18", "30.6905, -121.469, 21.4477, 0.74", "30.578, -122.902, 22.2316, 0.52", "30.424, -124.037, 22.8122, 0.44", "30.183, -125.425, 23.4507, 0.59", "29.9469, -126.564, 23.9027, 0.44", "29.7839, -127.319, 24.1383, 0.44", "29.5596, -128.396, 24.3615, 0.59", "29.4268, -129.163, 24.4437, 0.59", "29.3412, -129.802, 24.4628, 0.59", "29.2069, -131.045, 24.4005, 0.66", "29.1355, -131.938, 24.3227, 0.59", "29.0922, -132.926, 24.2218, 0.52", "29.0847, -133.59, 24.1459, 0.66", "29.0919, -134.631, 24.0326, 0.66", "29.1093, -135.904, 23.9225, 0.52", "29.1206, -136.885, 23.8505, 0.74", "29.1125, -137.72, 23.8037, 0.88", "29.0707, -138.965, 23.7548, 0.96", "29.003, -140.395, 23.7257, 0.88", "28.9513, -141.392, 23.7288, 0.88", "28.9005, -142.184, 23.7028, 0.81", "28.7987, -143.185, 23.6278, 0.66", "28.69, -143.951, 23.5738, 0.66", "28.567, -144.695, 23.5504, 0.44", "28.3981, -145.677, 23.5773, 0.44", "28.1446, -147.137, 23.7554, 0.44", "27.9757, -148.263, 24.0332, 0.44", "27.8348, -149.433, 24.5389, 0.66", "27.7925, -150.122, 24.9673, 0.81", "27.7884, -150.945, 25.6146, 0.96", "27.8512, -151.974, 26.5454, 0.66", "27.9446, -152.976, 27.5146, 0.59", "28.0674, -154.104, 28.5856, 0.96", "28.1518, -154.956, 29.3222, 0.96", "28.2069, -155.702, 29.8916, 0.96", "28.2282, -156.452, 30.3564, 0.66", "28.2071, -157.349, 30.754, 0.44", "28.1208, -158.199, 30.9877, 0.37", "28.0329, -158.851, 31.068, 0.37", "27.8959, -159.847, 31.1127, 0.29", "27.746, -160.946, 31.1112, 0.29", "27.6028, -162.091, 31.086, 0.37", "27.4955, -163.151, 31.0543, 0.29", "27.3957, -164.307, 31.0378, 0.29", "27.2904, -165.47, 31.0375, 0.29", "27.1802, -166.683, 31.0518, 0.29", "27.1463, -167.192, 31.065, 0.44", "27.1112, -168.023, 31.0958, 0.52", "27.0766, -169.255, 31.1532, 0.37", "27.0351, -170.465, 31.2208, 1.03", "27.0266, -171.071, 31.2452, 1.03", "27.0597, -171.803, 31.2649, 0.74", "27.1411, -172.715, 31.2847, 0.59", "27.207, -173.244, 31.3025, 0.81", "27.2846, -173.907, 31.3278, 0.81", "27.4002, -175.164, 31.4493, 0.37", "27.4225, -176.083, 31.5829, 0.37", "27.3591, -176.797, 31.7297, 0.37", "27.0773, -177.842, 32.0197, 0.29", "26.7611, -178.503, 32.2302, 0.44", "26.244, -179.244, 32.4811, 0.59", "25.7807, -179.808, 32.6704, 0.74", "25.4482, -180.237, 32.782, 0.74", "24.8353, -181.136, 32.9522, 0.22", "24.4606, -181.925, 33.0443, 0.22", "24.3253, -182.559, 33.0909, 0.66", "24.3357, -183.462, 33.123, 0.29", "24.528, -184.574, 33.1721, 0.59", "24.6376, -184.97, 33.1886, 0.44", "24.9755, -185.784, 33.2295, 0.29", "25.2235, -186.248, 33.2626, 0.22", "25.7892, -187.152, 33.3427, 0.22", "26.1203, -187.643, 33.3926, 0.22", "30.422, -197.862, 35.4598, 0.22", "35.4601, -207.509, 38.3263, 0.22", "38.2127, -217.539, 42.6613, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.4933, -57.3619, 3.91407, 1.03", "3.06501, -58.179, 3.12745, 1.03", "4.21863, -59.5051, 1.7461, 0.66", "4.80787, -60.0717, 1.13303, 0.66", "5.6242, -60.7719, 0.330369, 0.66", "6.81474, -61.7683, -0.701722, 1.11", "7.37385, -62.2368, -1.13369, 1.18", "8.06746, -62.7756, -1.55069, 0.96", "9.05491, -63.4623, -1.93536, 0.81", "10.8167, -64.559, -2.41005, 0.81", "12.1414, -65.3038, -2.60305, 0.74", "13.1409, -65.8225, -2.61759, 0.96", "14.431, -66.4153, -2.55966, 0.96", "14.9395, -66.6017, -2.52863, 0.96", "15.6934, -66.7755, -2.48299, 0.81", "16.6042, -66.8757, -2.44635, 0.81", "18.0537, -66.9435, -2.48052, 0.74", "19.1362, -66.9669, -2.56748, 0.96", "20.4274, -67.0243, -2.70691, 0.96", "21.5737, -67.1392, -2.82566, 0.74", "22.8203, -67.3506, -2.90967, 0.88", "23.8191, -67.5897, -2.92777, 1.03", "24.8913, -67.9453, -2.86448, 1.03", "25.8882, -68.4044, -2.65509, 0.88", "26.607, -68.8393, -2.41031, 0.66", "27.5473, -69.5058, -2.0888, 1.03", "28.1327, -69.952, -1.9093, 1.03", "28.6978, -70.3853, -1.80051, 0.81", "29.9582, -71.3626, -1.60361, 0.59", "30.7915, -71.9937, -1.54346, 0.74", "32.0541, -72.9216, -1.48279, 0.74", "32.7899, -73.452, -1.45075, 0.88", "34.0105, -74.3169, -1.35647, 0.66", "35.0941, -75.0778, -1.24026, 0.96", "35.8055, -75.5772, -1.1256, 1.11", "36.4745, -76.0448, -0.956605, 1.11", "37.556, -76.7738, -0.602314, 0.81", "38.6593, -77.4559, -0.205489, 0.74", "39.7902, -78.082, 0.206817, 0.66", "41.0964, -78.7484, 0.60818, 0.88", "41.9106, -79.1805, 0.824044, 1.03", "42.7295, -79.6718, 0.988412, 1.03", "43.7094, -80.3704, 1.12478, 0.81", "44.3461, -80.9463, 1.15304, 0.81", "45.1387, -81.8271, 1.08569, 0.81", "45.9877, -82.949, 0.892255, 0.88", "46.6964, -83.9553, 0.714464, 1.03", "47.2238, -84.742, 0.580852, 0.88", "47.9508, -85.7725, 0.405041, 0.66", "48.4902, -86.4263, 0.343843, 0.66", "49.145, -87.0098, 0.369935, 0.59", "50.1397, -87.6079, 0.525344, 0.88", "50.5733, -87.8099, 0.616044, 0.88", "51.5497, -88.229, 0.810637, 0.59", "52.2634, -88.558, 0.953554, 0.74", "52.8904, -88.8911, 1.03966, 0.81", "53.7428, -89.408, 1.05483, 0.74", "54.5801, -89.9721, 0.981788, 0.59", "55.7676, -90.8352, 0.796466, 0.59", "56.4098, -91.3318, 0.665415, 0.88", "57.0622, -91.8627, 0.498868, 1.03", "58.1479, -92.8094, 0.183162, 0.66", "58.8479, -93.4575, -0.0442755, 0.59", "59.7207, -94.27, -0.346427, 2.06", "60.3202, -94.8106, -0.545392, 2.73" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-18.8192, -65.1817, -10.0785, 1.25", "-19.7812, -65.0833, -10.1583, 1.25", "-20.8462, -65.0923, -10.2591, 0.66", "-21.3302, -65.133, -10.3064, 0.66", "-21.9996, -65.2199, -10.3846, 0.81", "-22.6675, -65.3156, -10.4796, 0.81", "-23.5282, -65.4226, -10.6021, 0.44", "-24.0648, -65.5128, -10.7018, 0.44", "-24.5339, -65.5622, -10.7914, 0.59", "-24.8923, -65.5508, -10.8701, 0.74", "-25.3904, -65.4639, -10.9857, 0.74", "-25.9193, -65.3477, -11.1424, 0.66", "-26.2859, -65.2748, -11.2566, 0.52", "-27.0142, -65.1753, -11.4959, 0.52", "-27.6842, -65.1336, -11.7138, 0.52", "-28.4569, -65.1328, -11.9341, 0.66", "-29.3409, -65.1726, -12.1373, 0.88", "-30.1619, -65.2279, -12.295, 1.03", "-30.7441, -65.2643, -12.3902, 1.03", "-31.4128, -65.2829, -12.49, 0.96", "-32.0262, -65.262, -12.5677, 0.74", "-32.871, -65.1754, -12.6766, 0.59", "-33.364, -65.1133, -12.7377, 0.59", "-34.1897, -65.032, -12.8418, 0.74", "-34.9024, -64.984, -12.9415, 0.74", "-35.6465, -64.9673, -13.076, 0.52", "-36.2741, -64.998, -13.209, 0.59", "-37.0788, -65.1261, -13.3905, 0.59", "-37.8071, -65.3013, -13.5356, 0.74", "-38.56, -65.519, -13.6573, 0.74", "-39.1835, -65.7047, -13.7403, 0.74", "-40.0685, -65.9372, -13.8448, 0.74", "-40.9409, -66.1296, -13.9309, 0.74", "-41.8926, -66.3133, -14.0044, 0.88", "-42.4041, -66.4002, -14.0449, 0.88", "-43.2502, -66.5316, -14.1568, 0.96", "-44.2089, -66.6525, -14.3283, 0.96", "-45.0901, -66.745, -14.5192, 0.66", "-45.6813, -66.8286, -14.6597, 0.59", "-46.6109, -67.0418, -14.894, 0.59", "-47.9819, -67.47, -15.238, 0.81", "-48.7282, -67.7589, -15.4319, 0.96", "-49.7265, -68.1901, -15.6854, 0.96", "-51.0434, -68.7808, -15.9893, 0.96", "-52.0357, -69.2218, -16.1788, 0.96", "-52.7954, -69.5469, -16.2834, 0.96", "-53.4939, -69.8108, -16.3468, 0.81", "-54.2244, -70.0279, -16.4272, 0.88", "-54.9718, -70.1622, -16.5243, 0.88", "-55.6634, -70.2112, -16.6265, 0.66", "-56.1903, -70.2326, -16.7116, 0.66", "-56.7248, -70.2804, -16.8019, 0.59", "-57.2684, -70.3929, -16.8884, 0.59", "-57.9707, -70.6505, -17.0033, 0.81", "-58.5335, -70.9056, -17.0852, 0.81", "-59.3374, -71.274, -17.1984, 0.52", "-60.1008, -71.5836, -17.3021, 0.66", "-60.8211, -71.8187, -17.3976, 0.66", "-61.7545, -72.019, -17.5059, 0.66", "-62.585, -72.1013, -17.5962, 0.88", "-63.4721, -72.1105, -17.6842, 0.88", "-64.2236, -72.0784, -17.7524, 0.81", "-65.0335, -72.0453, -17.8752, 0.88", "-65.9032, -72.0384, -18.0868, 1.03", "-66.5687, -72.0688, -18.3026, 1.03", "-67.2658, -72.1584, -18.6064, 0.81", "-67.8695, -72.294, -18.92, 0.81", "-69.1608, -72.7784, -19.7579, 0.44", "-69.901, -73.1681, -20.3399, 0.66", "-70.4143, -73.5048, -20.79, 0.81", "-71.0835, -74.002, -21.4255, 1.03", "-71.3756, -74.2313, -21.7066, 1.11", "-72.2177, -74.8314, -22.4355, 0.37", "-72.8169, -75.1656, -22.8406, 0.37", "-73.2697, -75.3789, -23.0991, 1.69", "-73.8886, -75.6292, -23.3998, 2.06", "-74.3119, -75.7779, -23.5596, 2.06", "-75.5594, -76.1807, -23.9424, 0.59", "-76.6432, -76.4891, -24.1971, 0.44", "-77.7949, -76.7822, -24.4232, 0.52", "-78.4133, -76.9196, -24.5255, 0.74", "-79.2233, -77.0826, -24.6375, 0.88", "-80.0619, -77.2456, -24.7392, 0.66", "-80.3433, -77.2989, -24.7548, 0.44", "-80.9932, -77.4018, -24.759, 0.37", "-81.7238, -77.4633, -24.7232, 0.96", "-82.6019, -77.5036, -24.6153, 1.62", "-83.3641, -77.5467, -24.4652, 1.77", "-84.2332, -77.6187, -24.2557, 1.77", "-85.0315, -77.716, -24.0469, 1.11", "-85.7691, -77.8242, -23.8445, 0.66", "-86.6183, -77.9394, -23.6204, 0.52", "-87.6292, -78.044, -23.3228, 0.44", "-88.366, -78.0957, -23.1216, 0.44", "-88.9156, -78.1256, -22.9943, 0.59", "-89.4011, -78.1547, -22.8936, 0.59", "-90.0584, -78.2079, -22.7834, 0.44", "-91.4631, -78.3516, -22.5757, 0.74", "-92.1438, -78.4264, -22.4721, 0.81", "-92.889, -78.5192, -22.3704, 0.81", "-93.6792, -78.6257, -22.2948, 0.96", "-94.4518, -78.7429, -22.289, 1.11", "-95.1069, -78.8445, -22.3392, 1.11", "-95.7124, -78.9255, -22.4589, 0.81", "-96.6498, -79.0274, -22.6967, 0.59", "-97.3897, -79.0733, -22.9134, 1.18", "-98.4174, -79.0992, -23.2372, 1.47", "-98.9479, -79.1063, -23.4049, 1.62", "-99.278, -79.1006, -23.5213, 1.62", "-99.8297, -79.0673, -23.7188, 1.11", "-100.473, -78.9956, -23.9048, 0.66", "-101.136, -78.8658, -24.0411, 0.44", "-101.932, -78.6446, -24.1464, 0.37", "-102.809, -78.3471, -24.2434, 0.37", "-103.367, -78.1302, -24.2839, 0.37", "-104.148, -77.7926, -24.31, 0.44", "-105.196, -77.3356, -24.3464, 0.74", "-105.698, -77.1229, -24.3756, 1.18", "-106.138, -76.9462, -24.4127, 1.33", "-106.671, -76.7485, -24.4622, 1.33", "-107.324, -76.4888, -24.5502, 0.81", "-108.191, -76.1073, -24.6829, 0.29", "-108.795, -75.8262, -24.7702, 0.29", "-109.729, -75.3723, -24.8926, 0.37", "-110.335, -75.0632, -24.9553, 0.44", "-111.206, -74.6446, -25.1255, 0.44", "-112.255, -74.1782, -25.3809, 1.4", "-112.863, -73.9172, -25.5417, 1.92", "-113.126, -73.8101, -25.6177, 2.28", "-113.705, -73.5988, -25.8099, 2.28", "-116.051, -72.7883, -26.6734, 0.29", "-116.455, -72.6489, -26.8389, 0.52", "-116.961, -72.469, -27.0632, 0.52", "-117.524, -72.2678, -27.2983, 0.74", "-118.002, -72.0941, -27.4955, 0.74", "-118.635, -71.8714, -27.7644, 0.44", "-119.333, -71.6273, -28.0316, 0.37", "-119.937, -71.4315, -28.3066, 0.81", "-120.363, -71.304, -28.5245, 0.96", "-120.995, -71.118, -28.8921, 0.96", "-121.757, -70.9082, -29.3822, 0.66", "-122.39, -70.7578, -29.8209, 0.29", "-123.099, -70.6032, -30.2974, 0.66", "-123.549, -70.5043, -30.5806, 0.66", "-124.498, -70.3024, -31.1111, 0.52", "-125.127, -70.1592, -31.3979, 0.74", "-126.454, -69.8427, -31.9243, 0.88", "-127.088, -69.679, -32.1752, 1.11", "-127.538, -69.5564, -32.3526, 1.33", "-128.307, -69.3121, -32.6421, 0.44", "-129.117, -68.9918, -32.9159, 0.44", "-129.847, -68.6349, -33.1562, 0.29", "-130.934, -68.0075, -33.5873, 0.96", "-131.408, -67.7221, -33.8249, 1.18", "-131.995, -67.3621, -34.1534, 2.21", "-132.333, -67.1543, -34.3559, 2.43", "-132.997, -66.7598, -34.7841, 2.43", "-133.938, -66.2587, -35.3801, 2.21", "-135.138, -65.7315, -36.0944, 0.29", "-135.791, -65.4961, -36.4595, 0.44", "-136.216, -65.3647, -36.6693, 0.52", "-137.731, -64.9364, -37.3431, 0.29", "-138.507, -64.7344, -37.6453, 0.29", "-139.157, -64.5789, -37.8513, 0.29", "-139.93, -64.4158, -38.079, 0.29", "-141.044, -64.1923, -38.3857, 0.96", "-141.547, -64.0855, -38.5066, 1.47", "-142.018, -63.974, -38.5947, 1.47", "-143.116, -63.6272, -38.799, 0.29", "-143.553, -63.4596, -38.8823, 0.29", "-144.291, -63.1276, -39.0471, 0.74", "-144.674, -62.9373, -39.1386, 0.81", "-144.923, -62.8005, -39.1936, 0.81", "-145.336, -62.5426, -39.2855, 0.29", "-145.686, -62.2931, -39.3738, 0.22", "-146.474, -61.7019, -39.6123, 0.22", "-147.358, -61.0507, -39.9097, 0.22", "-147.976, -60.6184, -40.1094, 0.88", "-148.494, -60.2676, -40.2644, 1.11", "-148.715, -60.1221, -40.3237, 1.4", "-149.202, -59.8102, -40.4282, 1.4", "-149.697, -59.5042, -40.4951, 0.96", "-150.722, -58.9222, -40.5943, 0.29", "-151.168, -58.6866, -40.6214, 0.59", "-151.467, -58.5295, -40.6287, 0.59", "-151.891, -58.3072, -40.6273, 0.37", "-153.117, -57.6557, -40.5932, 0.22", "-153.873, -57.2496, -40.5726, 0.22", "-154.385, -56.9712, -40.5592, 0.22", "-155.409, -56.3914, -40.5334, 1.25", "-155.915, -56.0839, -40.521, 1.69", "-156.284, -55.8414, -40.5124, 1.92", "-156.77, -55.4937, -40.4997, 1.62", "-157.599, -54.8943, -40.4779, 0.81", "-158.127, -54.5117, -40.4639, 0.81", "-159.051, -53.8639, -40.4054, 0.37", "-159.688, -53.4302, -40.3484, 0.37", "-160.066, -53.1879, -40.3078, 0.37", "-160.855, -52.7173, -40.2114, 0.29", "-161.644, -52.2642, -40.103, 0.29", "-162.633, -51.7057, -39.9278, 0.29", "-163.116, -51.4339, -39.8194, 0.44", "-163.461, -51.2355, -39.7308, 0.44", "-163.913, -50.9689, -39.6076, 0.29", "-164.891, -50.3986, -39.3359, 1.4", "-165.576, -50.0479, -39.1577, 1.77", "-165.874, -49.9121, -39.0907, 1.77", "-166.667, -49.5786, -38.9285, 0.66", "-167.264, -49.3338, -38.8206, 0.66", "-167.835, -49.1116, -38.7264, 0.81", "-168.51, -48.8627, -38.6608, 0.81", "-169.39, -48.5172, -38.6449, 0.37", "-170.501, -48.0322, -38.6765, 0.29", "-171.13, -47.7378, -38.719, 0.29", "-171.81, -47.3996, -38.7858, 1.11", "-172.705, -46.9126, -38.9031, 1.77", "-173.397, -46.5083, -39.0231, 0.88", "-174.266, -45.987, -39.1966, 0.29", "-175.584, -45.2096, -39.4728, 0.29", "-176.277, -44.813, -39.6142, 0.66", "-176.801, -44.5311, -39.7121, 0.88", "-177.88, -43.964, -39.8919, 0.29", "-178.589, -43.6, -40.0129, 0.29", "-179.205, -43.3003, -40.1261, 0.66", "-179.721, -43.0506, -40.2478, 0.66", "-180.445, -42.7092, -40.4422, 0.29", "-181.086, -42.4195, -40.6251, 0.88", "-181.508, -42.2238, -40.7503, 0.88", "-182.332, -41.7992, -41.0036, 0.29", "-183.269, -41.224, -41.2209, 0.59", "-183.549, -41.0033, -41.259, 0.59", "-183.937, -40.6438, -41.2687, 0.59", "-184.533, -40.0572, -41.2146, 0.37", "-185.169, -39.3803, -41.0988, 0.29", "-186.042, -38.3875, -40.8664, 0.29", "-186.838, -37.4347, -40.5985, 1.25", "-187.321, -36.8162, -40.4378, 1.4", "-187.627, -36.4016, -40.344, 1.4", "-188.019, -35.8514, -40.241, 1.03", "-188.496, -35.1782, -40.1486, 0.29", "-189.101, -34.304, -40.0859, 0.29", "-189.615, -33.5127, -40.0452, 0.29", "-190.248, -32.4362, -40.0117, 1.11", "-190.477, -32.0364, -40.0041, 1.55", "-190.884, -31.3095, -39.9937, 0.66", "-191.529, -30.1388, -39.9727, 0.29", "-192.389, -28.6139, -39.9419, 0.29", "-192.922, -27.6787, -39.9192, 0.29", "-193.559, -26.5488, -39.8882, 0.44", "-193.911, -25.9178, -39.868, 0.44", "-194.295, -25.2301, -39.8464, 0.59", "-194.813, -24.2985, -39.8174, 0.29", "-195.195, -23.5722, -39.7914, 0.29", "-195.52, -22.8736, -39.7681, 0.44", "-195.801, -22.1517, -39.7533, 0.29", "-196.083, -21.421, -39.7457, 0.59", "-196.434, -20.5745, -39.7442, 1.03", "-196.635, -20.1277, -39.7473, 1.03", "-197.201, -19.0665, -39.7642, 0.22", "-197.81, -18.1297, -39.7889, 0.22", "-198.384, -17.3434, -39.8177, 0.22", "-198.856, -16.7921, -39.8448, 0.29", "-199.169, -16.5064, -39.8629, 0.29", "-199.577, -16.239, -39.8819, 0.52", "-199.839, -16.1621, -39.8864, 0.52" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-18.8192, -65.1817, -10.0785, 0.88", "-19.4947, -66.5597, -10.4694, 0.88", "-20.0011, -67.6942, -10.7921, 0.88", "-20.4475, -68.791, -11.1353, 0.88", "-20.8258, -69.7894, -11.4515, 1.03", "-21.1764, -70.7861, -11.7657, 1.03", "-21.5008, -71.7345, -12.0605, 0.96", "-21.852, -72.8214, -12.4517, 0.96", "-22.111, -73.6519, -12.7486, 1.11", "-22.3462, -74.3572, -12.9917, 1.11", "-22.6684, -75.1814, -13.2676, 1.18", "-23.1938, -76.296, -13.6431, 1.18", "-23.7595, -77.4144, -14.0299, 1.11", "-24.1255, -78.0599, -14.2642, 1.25", "-24.7068, -78.9879, -14.5941, 1.25", "-25.2804, -79.8158, -14.9144, 1.47", "-25.861, -80.5548, -15.2193, 1.69" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "166.282, 163.546, -68.2354, 0.88", "166.688, 162.828, -68.1569, 0.88", "166.897, 162.475, -68.1272, 1.11", "167.103, 162.192, -68.1171, 1.25", "167.493, 161.677, -68.1105, 1.03", "168.019, 160.995, -68.1037, 0.15", "168.317, 160.615, -68.0995, 0.37", "168.462, 160.43, -68.1052, 0.37", "169.33, 159.328, -68.1243, 0.15", "169.612, 158.961, -68.1263, 0.29", "169.93, 158.538, -68.1203, 0.15", "170.224, 158.109, -68.0991, 0.15", "170.468, 157.713, -68.0665, 0.15", "170.66, 157.368, -68.0102, 0.22", "170.827, 157.034, -67.9329, 0.22", "171.04, 156.632, -67.8278, 0.29", "171.307, 156.139, -67.7009, 0.29", "171.782, 155.278, -67.4585, 0.15", "172.371, 154.181, -67.1578, 0.59", "172.531, 153.875, -67.0778, 0.88", "172.718, 153.515, -66.9886, 0.88", "173.265, 152.439, -66.7468, 0.22", "173.678, 151.591, -66.5467, 0.22", "174.181, 150.511, -66.254, 0.22", "174.417, 149.99, -66.1014, 0.59", "174.562, 149.661, -65.9972, 0.74", "174.711, 149.305, -65.8788, 0.52", "175.127, 148.338, -65.5653, 0.22", "175.54, 147.407, -65.304, 1.33", "175.681, 147.089, -65.2232, 1.4", "176.102, 146.07, -65.0226, 0.22", "176.349, 145.488, -64.9311, 0.15", "176.798, 144.405, -64.7574, 0.15", "177.067, 143.684, -64.6591, 0.29", "177.264, 143.068, -64.5778, 0.29", "177.569, 142.02, -64.4233, 0.15", "177.803, 141.138, -64.2785, 0.15", "178.223, 139.414, -63.9814, 0.15", "178.553, 137.839, -63.7125, 0.15", "178.934, 135.905, -63.3996, 0.15", "179.072, 135.121, -63.2868, 0.22", "179.119, 134.797, -63.2488, 0.96", "179.171, 134.293, -63.2115, 1.18", "179.286, 133.067, -63.1933, 0.15", "179.354, 132.479, -63.1861, 0.29", "179.469, 131.612, -63.2085, 0.15", "179.55, 131.099, -63.2372, 0.29", "179.613, 130.721, -63.2598, 0.29", "179.839, 129.458, -63.3444, 0.15", "180.056, 128.398, -63.4279, 0.15", "180.236, 127.618, -63.4987, 0.52", "180.319, 127.341, -63.5293, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "166.282, 163.546, -68.2354, 0.22", "167.744, 163.613, -68.3438, 0.22", "168.639, 163.635, -68.3464, 0.52", "168.819, 163.639, -68.3428, 0.52", "170.352, 163.666, -68.2974, 0.22", "170.859, 163.683, -68.2838, 0.59", "171.308, 163.701, -68.2732, 0.59", "173.203, 163.727, -68.2295, 0.22", "173.509, 163.735, -68.2225, 0.44", "173.701, 163.742, -68.2195, 0.44", "175.176, 163.804, -68.2072, 0.15", "175.436, 163.809, -68.2112, 0.37", "175.729, 163.808, -68.2197, 0.37", "176.813, 163.769, -68.2895, 0.15", "177.41, 163.73, -68.3186, 0.15", "177.733, 163.695, -68.3302, 0.29", "178.042, 163.641, -68.337, 0.29", "178.79, 163.438, -68.34, 0.22", "178.983, 163.372, -68.3407, 0.44", "179.815, 163.02, -68.349, 0.22", "180.099, 162.889, -68.3552, 0.44", "180.395, 162.749, -68.3636, 0.44", "182.004, 161.947, -68.4311, 0.22", "183.017, 161.4, -68.5001, 0.22", "183.542, 161.101, -68.5336, 0.37", "183.817, 160.932, -68.5494, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-138.273, 137.926, 133.136, 0.88", "-141.74, 139.702, 139.89, 0.88", "-145.106, 142.281, 146.448, 0.88" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-138.273, 137.926, 133.136, 0.22", "-143.5, 142.146, 145.651, 0.88", "-147.85, 143.85, 159.027, 0.88", "-151.284, 142.872, 172.722, 0.88", "-154.508, 139.878, 186.175, 0.88", "-156.253, 138.154, 200.113, 0.88", "-156.438, 138.126, 214.268, 0.88", "-158.123, 138.736, 228.314, 0.88" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "60.3202, -94.8106, -0.545392, 1.11", "61.9837, -94.7159, -0.733339, 1.11", "63.0057, -94.7139, -0.840319, 0.96", "64.0796, -94.7727, -0.944831, 0.81", "64.7627, -94.8748, -1.00707, 0.81", "65.9265, -95.1385, -1.10119, 0.81", "66.6606, -95.3156, -1.15207, 1.03", "67.346, -95.5272, -1.17846, 1.03", "67.8732, -95.689, -1.22151, 1.03", "68.9462, -95.9455, -1.38527, 0.59", "69.6498, -95.971, -1.59541, 0.59", "70.3475, -95.8828, -1.89422, 0.81", "70.9923, -95.7594, -2.26697, 0.81", "71.7515, -95.6297, -2.77131, 0.66", "72.4972, -95.5573, -3.30564, 0.66", "73.472, -95.6566, -4.05285, 0.74", "74.2984, -96.0324, -4.63142, 0.88", "74.9538, -96.536, -5.01696, 0.88", "75.5213, -97.0775, -5.28964, 0.81", "76.0507, -97.6192, -5.51021, 0.81", "77.0734, -98.6736, -5.86595, 0.59", "78.0811, -99.6662, -6.17254, 0.52", "78.8659, -100.35, -6.41124, 0.66", "79.4429, -100.789, -6.585, 0.66", "80.2312, -101.322, -6.83141, 0.81", "80.7417, -101.643, -7.00995, 0.81", "81.6362, -102.173, -7.35826, 0.66", "82.2488, -102.564, -7.65242, 0.81", "82.9461, -103.06, -7.97878, 0.81", "83.674, -103.615, -8.29953, 0.88", "84.3497, -104.157, -8.57495, 0.88", "84.9936, -104.664, -8.81819, 0.52", "85.9189, -105.394, -9.2032, 0.88", "86.5579, -105.935, -9.52453, 0.88", "87.0465, -106.402, -9.82112, 1.03", "87.567, -107.003, -10.2084, 0.81", "87.9455, -107.512, -10.5204, 0.59", "88.772, -108.777, -11.2175, 0.59", "89.2185, -109.535, -11.5738, 0.59", "89.5627, -110.131, -11.8403, 0.66", "90.0607, -110.915, -12.1092, 0.37", "90.4315, -111.4, -12.2384, 0.37", "91.0929, -112.081, -12.4933, 0.66", "91.5059, -112.431, -12.6352, 0.81", "92.0241, -112.82, -12.8754, 0.81", "92.7248, -113.284, -13.3027, 0.44", "93.6812, -113.937, -14.2113, 1.33", "94.8025, -114.756, -15.5078, 1.92", "95.1125, -114.983, -15.9003, 1.84", "95.9821, -115.581, -17.0228, 0.81", "96.5664, -115.93, -17.756, 0.88", "98.3647, -116.773, -19.9036, 0.52", "98.827, -116.922, -20.3825, 0.52", "99.3895, -117.036, -20.867, 0.52", "100.046, -117.101, -21.3221, 0.52", "100.784, -117.105, -21.6883, 1.18", "101.621, -117.064, -21.9602, 1.69", "102.155, -116.996, -22.0551, 1.92", "102.616, -116.931, -22.1526, 1.69", "103.708, -116.818, -22.3818, 0.81", "104.876, -116.727, -22.6149, 0.52", "105.547, -116.681, -22.7369, 0.81", "106.014, -116.651, -22.8162, 0.81", "107.502, -116.547, -23.0902, 0.37", "108.794, -116.437, -23.3262, 0.29", "109.76, -116.314, -23.5383, 0.52", "110.557, -116.171, -23.7167, 0.88", "110.945, -116.071, -23.8207, 1.18", "111.283, -115.949, -23.9389, 1.4", "112.031, -115.571, -24.264, 0.88", "113.235, -114.825, -24.8841, 0.44", "113.742, -114.489, -25.159, 0.44", "114.411, -114.043, -25.5182, 1.18", "115.315, -113.485, -25.9332, 1.4", "115.853, -113.191, -26.1457, 1.4", "116.387, -112.939, -26.3256, 1.18", "116.691, -112.816, -26.4003, 1.18", "117.956, -112.373, -26.6634, 0.29", "118.988, -112.039, -26.8081, 0.29", "119.879, -111.745, -26.8906, 0.29", "120.558, -111.502, -26.9455, 0.44", "121.173, -111.25, -26.9873, 0.37", "121.558, -111.076, -27.0024, 0.37", "122.606, -110.555, -26.9927, 1.33", "123.086, -110.27, -26.9792, 1.77", "123.685, -109.882, -26.943, 1.55", "124.318, -109.463, -26.8912, 0.74", "124.952, -109.045, -26.8352, 0.52", "125.607, -108.626, -26.794, 0.29", "126.134, -108.298, -26.766, 0.29", "126.61, -108.01, -26.7395, 0.66", "127.182, -107.667, -26.7148, 0.66", "127.96, -107.22, -26.7112, 0.29", "128.916, -106.698, -26.731, 0.29", "129.649, -106.315, -26.7555, 0.29", "130.169, -106.057, -26.7719, 0.44", "130.932, -105.657, -26.8181, 1.33", "131.89, -105.134, -26.8907, 2.36", "132.19, -104.968, -26.9153, 2.36", "132.783, -104.632, -26.9493, 2.06", "133.626, -104.177, -26.9923, 0.66", "134.48, -103.715, -27.0238, 0.29", "135.087, -103.376, -27.0284, 0.29", "135.924, -102.882, -26.996, 0.52", "136.457, -102.561, -26.9635, 0.66", "137.046, -102.206, -26.9039, 0.29", "137.328, -102.027, -26.8591, 0.29", "137.999, -101.571, -26.6906, 0.88", "138.407, -101.267, -26.5734, 1.03", "139.019, -100.782, -26.3824, 1.03", "139.449, -100.453, -26.2554, 0.74", "139.804, -100.206, -26.1509, 0.44", "140.35, -99.8851, -25.9975, 0.37", "140.927, -99.6108, -25.8717, 0.37", "141.491, -99.3664, -25.7932, 0.59", "142.114, -99.0891, -25.7458, 0.81", "142.478, -98.9031, -25.7367, 0.81", "142.792, -98.7048, -25.7386, 0.81", "143.654, -98.034, -25.7654, 0.37", "144.385, -97.3448, -25.7831, 0.37", "144.896, -96.7776, -25.7863, 0.74", "145.445, -96.1097, -25.7795, 1.11", "146.025, -95.3774, -25.7544, 0.66", "146.421, -94.8719, -25.7214, 0.66", "146.882, -94.3006, -25.6579, 0.81", "147.329, -93.7935, -25.5784, 1.03", "147.828, -93.2699, -25.4818, 0.88", "148.383, -92.6999, -25.3648, 0.66", "148.853, -92.1917, -25.2554, 0.29", "149.374, -91.5951, -25.1134, 0.22", "149.83, -91.0541, -24.9715, 0.37", "150.146, -90.6547, -24.8535, 0.37", "150.596, -90.065, -24.6701, 0.37", "150.992, -89.5697, -24.5108, 0.81", "151.381, -89.0852, -24.3615, 0.81", "151.888, -88.4521, -24.1823, 0.88", "152.523, -87.6658, -23.9838, 0.29", "152.969, -87.1157, -23.8517, 0.29", "153.371, -86.6335, -23.7612, 0.37", "154.093, -85.768, -23.6335, 0.52", "154.589, -85.1486, -23.5675, 0.66", "154.952, -84.6839, -23.5292, 0.59", "155.424, -84.0785, -23.4958, 1.62", "156.091, -83.1788, -23.4501, 1.99", "156.712, -82.3354, -23.4187, 1.69", "157.158, -81.8129, -23.408, 1.77" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "60.3202, -94.8106, -0.545392, 0.74", "60.8807, -97.0838, -0.318703, 0.74", "61.2583, -98.4219, -0.185362, 0.74", "61.6923, -99.7643, -0.0582394, 0.74", "62.1528, -101.031, 0.0556843, 0.74", "62.73, -102.449, 0.199814, 0.74", "63.0888, -103.276, 0.286929, 0.88", "63.5098, -104.071, 0.370108, 0.88", "64.1726, -105.235, 0.499056, 0.59", "64.6815, -106.139, 0.589947, 0.37", "65.2724, -107.223, 0.676985, 0.37", "65.7356, -108.097, 0.725119, 0.59", "66.1911, -109.011, 0.768293, 0.66", "66.6474, -110.071, 0.798811, 0.66", "67.0327, -111.149, 0.80565, 0.81", "67.2393, -111.852, 0.793677, 0.81", "67.4103, -112.579, 0.763598, 0.52", "67.5436, -113.225, 0.725649, 0.52", "67.8394, -114.886, 0.60842, 0.74", "68.0298, -116.092, 0.542225, 0.96", "68.1787, -117.134, 0.512378, 0.96", "68.2881, -117.981, 0.510403, 0.96", "68.3911, -119.028, 0.528899, 0.66", "68.4195, -119.675, 0.552329, 0.66", "68.3749, -120.681, 0.610119, 1.11", "68.2742, -121.339, 0.647713, 1.11", "68.0015, -122.357, 0.693649, 0.81", "67.57, -123.555, 0.720553, 0.44", "67.0848, -124.67, 0.715223, 0.44", "66.7224, -125.452, 0.676558, 0.44", "66.2785, -126.39, 0.585378, 0.66", "65.918, -127.176, 0.492789, 0.44", "65.4596, -128.195, 0.368187, 0.81", "65.1671, -128.898, 0.289589, 0.96", "64.8947, -129.656, 0.214755, 0.52", "64.6518, -130.448, 0.130848, 0.44", "64.3263, -131.633, -0.0300077, 0.37", "64.0896, -132.56, -0.179512, 0.37", "63.8324, -133.579, -0.350884, 0.52", "63.5305, -134.848, -0.566998, 0.59", "63.2588, -136.069, -0.77787, 0.59", "63.0469, -137.206, -0.973229, 0.66", "62.886, -138.444, -1.18014, 0.74", "62.8259, -139.288, -1.3008, 0.59", "62.7938, -140.167, -1.39719, 0.44", "62.7835, -140.503, -1.40967, 0.74", "62.7751, -141.087, -1.38068, 0.74", "62.7923, -141.801, -1.30612, 0.44", "62.8679, -142.865, -1.18662, 0.29", "62.9727, -143.659, -1.10254, 0.37", "63.0962, -144.38, -1.02612, 0.59", "63.2872, -145.362, -0.931499, 0.59", "63.5002, -146.354, -0.899549, 0.74", "63.6183, -146.889, -0.887928, 0.81", "63.8403, -147.888, -0.907026, 0.66", "63.9713, -148.523, -0.939392, 0.66", "64.0651, -149.034, -0.978998, 0.66", "64.262, -150.409, -1.09569, 0.59", "64.4, -151.836, -1.22632, 0.66", "64.4575, -152.876, -1.32537, 0.74", "64.4679, -153.85, -1.41879, 0.74", "64.4746, -154.445, -1.46804, 0.74" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-25.861, -80.5548, -15.2193, 0.81", "-25.0356, -81.5198, -15.435, 0.81", "-24.7394, -82.0199, -15.514, 0.74", "-24.4925, -82.5942, -15.5437, 0.59", "-24.353, -82.9848, -15.5242, 0.59", "-24.1589, -83.6275, -15.4569, 0.74", "-23.9596, -84.4216, -15.3732, 0.66", "-23.8587, -85.1948, -15.2684, 0.66", "-23.7658, -85.906, -15.1887, 0.74", "-23.6525, -86.6774, -15.0865, 0.74", "-23.5514, -87.1951, -15.0206, 0.81", "-23.2939, -88.2323, -14.8851, 0.96", "-23.156, -88.7122, -14.8359, 1.18", "-22.806, -89.9364, -14.752, 0.52", "-22.5692, -90.7327, -14.7376, 0.74", "-22.3103, -91.4512, -14.7619, 0.88", "-22.0114, -92.0768, -14.821, 0.59", "-21.684, -92.6549, -14.8959, 0.59", "-21.3518, -93.2119, -14.9867, 1.18", "-20.9948, -93.848, -15.1, 1.18", "-20.3187, -95.1163, -15.3354, 0.59", "-19.829, -96.099, -15.4956, 0.74", "-19.5567, -96.6558, -15.6137, 0.88", "-19.2105, -97.4349, -15.8123, 0.66", "-18.9454, -98.2135, -16.0411, 0.88", "-18.8594, -98.7153, -16.2019, 1.03", "-18.8646, -99.2902, -16.4168, 0.74", "-18.9649, -100.522, -16.9657, 0.44", "-18.9777, -100.944, -17.1869, 0.44", "-18.96, -101.422, -17.4451, 0.81", "-18.8685, -102.036, -17.7292, 1.18", "-18.7263, -102.566, -17.8913, 1.18", "-18.4408, -103.264, -17.9732, 0.81", "-17.9164, -104.293, -17.9032, 0.52", "-17.59, -104.842, -17.8079, 0.88", "-17.0599, -105.629, -17.6127, 1.03", "-16.6582, -106.188, -17.4321, 1.03", "-16.277, -106.725, -17.2299, 1.25", "-16.058, -107.057, -17.0985, 1.92", "-15.7944, -107.508, -16.9388, 1.55", "-15.311, -108.545, -16.6363, 0.52", "-15.1614, -108.974, -16.5551, 0.44", "-14.9605, -109.646, -16.4838, 0.37", "-14.8663, -109.988, -16.4667, 0.52", "-14.7542, -110.377, -16.4637, 0.52", "-14.4976, -111.234, -16.4787, 0.44", "-14.2201, -112.167, -16.4917, 0.96", "-13.9565, -113.101, -16.4722, 1.69", "-13.762, -113.778, -16.4507, 1.92", "-13.5582, -114.515, -16.4122, 1.92", "-13.3736, -115.27, -16.3738, 1.92", "-13.2217, -115.995, -16.3427, 1.62", "-13.0819, -117.091, -16.2635, 0.37", "-13.0056, -118.474, -16.146, 0.29", "-12.9988, -118.851, -16.1153, 0.29", "-12.9986, -119.335, -16.0771, 0.29", "-12.9931, -119.604, -16.0519, 0.29", "-12.9327, -120.343, -16.0161, 0.88", "-12.8763, -120.775, -16.0199, 1.11", "-12.8341, -121.085, -16.0248, 1.11", "-12.7345, -121.75, -16.0632, 0.29", "-12.653, -122.372, -16.1135, 0.29", "-12.5713, -123.308, -16.2259, 0.44", "-12.5418, -123.847, -16.3201, 0.66", "-12.5336, -124.247, -16.4026, 0.66", "-12.55, -124.925, -16.5632, 0.37", "-12.6126, -125.804, -16.7874, 0.37", "-12.6842, -126.629, -16.9688, 0.59", "-12.7427, -127.355, -17.0797, 1.03", "-12.7625, -127.715, -17.1206, 1.03", "-12.7877, -128.395, -17.1728, 0.74", "-12.7831, -129.086, -17.213, 0.29", "-12.7407, -129.83, -17.2459, 0.29", "-12.673, -130.634, -17.2568, 1.25", "-12.6214, -131.166, -17.2466, 2.06", "-12.5812, -131.539, -17.2346, 2.06", "-12.5001, -132.344, -17.2059, 1.4", "-12.4463, -133.208, -17.192, 0.81", "-12.4444, -133.847, -17.206, 0.44", "-12.4599, -134.379, -17.2169, 0.59", "-12.4763, -134.868, -17.2171, 0.59", "-12.49, -135.491, -17.1888, 0.59", "-12.491, -136.199, -17.1026, 0.44", "-12.4646, -136.786, -16.9933, 0.29", "-12.4162, -137.283, -16.8985, 0.74", "-12.3446, -137.807, -16.804, 0.74", "-12.2248, -138.427, -16.7034, 0.52", "-12.103, -138.901, -16.6269, 0.52", "-11.9708, -139.353, -16.5523, 0.44", "-11.7852, -140.023, -16.4487, 0.44", "-11.6666, -140.572, -16.3894, 0.37", "-11.5664, -141.154, -16.357, 0.37", "-11.5086, -141.534, -16.3414, 0.59", "-11.3923, -142.249, -16.2975, 0.59", "-11.3017, -142.663, -16.26, 0.59", "-11.1324, -143.293, -16.1713, 0.37", "-10.9006, -144.048, -16.0425, 0.29", "-10.75, -144.506, -15.957, 1.18", "-10.5861, -144.908, -15.906, 1.4", "-10.3573, -145.413, -15.866, 1.4", "-10.1908, -145.764, -15.844, 1.4", "-9.97484, -146.189, -15.8138, 0.88", "-9.75662, -146.611, -15.7667, 0.66", "-9.19304, -147.719, -15.6138, 0.37", "-8.86861, -148.391, -15.4958, 0.29", "-8.69448, -148.777, -15.4077, 0.29", "-8.5552, -149.087, -15.3225, 0.29", "-8.2665, -149.753, -15.0979, 1.03", "-8.09523, -150.141, -14.9208, 1.47", "-7.94997, -150.46, -14.7294, 1.62", "-7.78194, -150.814, -14.5094, 1.33", "-7.61462, -151.194, -14.2824, 0.81", "-7.45454, -151.615, -14.0528, 0.44", "-7.21616, -152.326, -13.6992, 0.29", "-7.05925, -152.868, -13.4554, 0.88", "-6.91327, -153.486, -13.2087, 0.96", "-6.82397, -153.931, -13.0548, 1.25", "-6.76328, -154.335, -12.9366, 1.4", "-6.72736, -154.716, -12.8455, 1.4", "-6.70932, -155.297, -12.7394, 1.03", "-6.71473, -156.035, -12.6426, 0.29", "-6.76081, -157.001, -12.5612, 0.29", "-6.82537, -157.651, -12.5354, 0.29", "-6.886, -158.069, -12.5331, 0.44", "-7.00026, -158.626, -12.5543, 0.44", "-7.14277, -159.19, -12.6169, 0.52", "-7.32125, -159.794, -12.7261, 0.44", "-7.47353, -160.295, -12.8421, 0.29", "-7.56142, -160.604, -12.9237, 0.44", "-7.71244, -161.18, -13.0776, 0.44", "-7.89592, -162.048, -13.322, 1.55", "-8.00059, -162.722, -13.4992, 2.43", "-8.04041, -163.131, -13.5993, 2.73", "-8.0574, -163.454, -13.6677, 2.43", "-8.07613, -164.182, -13.7938, 1.69", "-8.09227, -165.365, -13.9547, 0.52", "-8.10295, -165.74, -13.9905, 0.52", "-8.12074, -166.061, -14.0155, 0.88", "-8.16605, -166.644, -14.0804, 0.59", "-8.20011, -167.129, -14.1388, 0.59", "-8.25316, -167.82, -14.2348, 0.66", "-8.28193, -168.17, -14.2826, 0.66", "-8.30201, -168.587, -14.3431, 0.52", "-8.2981, -169.461, -14.4768, 0.29", "-8.2652, -170.06, -14.5593, 0.29", "-8.25147, -170.206, -14.5743, 0.59", "-8.19848, -170.683, -14.6015, 0.59", "-8.15577, -171.159, -14.6147, 0.29", "-8.11516, -171.919, -14.6351, 0.29", "-8.10249, -172.466, -14.6241, 0.74", "-8.09811, -172.818, -14.6455, 0.74", "-8.10326, -173.246, -14.6945, 0.74", "-8.13008, -173.687, -14.7703, 0.59", "-8.19197, -174.4, -14.9114, 0.29", "-8.2791, -175.354, -15.097, 0.29", "-8.36715, -176.31, -15.2848, 0.37", "-8.40086, -176.652, -15.3481, 0.37", "-8.46036, -177.214, -15.4369, 0.29", "-8.53026, -177.847, -15.5161, 0.44", "-8.56668, -178.13, -15.5344, 0.59", "-8.61644, -178.516, -15.5358, 0.44", "-8.63901, -178.922, -15.4891, 0.37", "-8.63527, -179.395, -15.4211, 0.37", "-8.61219, -179.811, -15.3528, 0.52", "-8.5754, -180.226, -15.2929, 0.74", "-8.49319, -180.828, -15.2352, 0.29", "-8.35148, -181.649, -15.1839, 1.11", "-8.29236, -181.962, -15.1725, 1.33", "-8.23355, -182.28, -15.1698, 1.33", "-8.15528, -182.801, -15.1868, 1.03", "-8.07913, -183.558, -15.2615, 0.59", "-8.07283, -183.982, -15.3388, 0.37", "-8.1194, -184.438, -15.4546, 0.59", "-8.15199, -184.653, -15.5192, 0.59", "-8.24763, -185.096, -15.6666, 0.29", "-8.36961, -185.5, -15.8025, 0.29", "-8.48176, -185.834, -15.9022, 0.29", "-8.53568, -186.161, -16.0094, 0.29", "-8.5811, -186.758, -16.235, 0.88", "-8.58623, -186.941, -16.303, 1.18", "-8.58185, -187.14, -16.3766, 1.18", "-8.5624, -187.635, -16.5606, 0.74", "-8.50677, -188.65, -16.943, 0.29", "-8.48845, -189.119, -17.117, 0.29", "-8.48624, -189.705, -17.3282, 0.29", "-8.49599, -190.38, -17.5709, 0.96", "-8.51215, -190.741, -17.697, 1.11", "-8.56156, -191.35, -17.8877, 0.74", "-8.60893, -191.874, -18.0101, 0.59", "-8.62674, -192.139, -18.057, 0.81", "-8.66994, -192.711, -18.144, 0.81", "-8.72187, -193.198, -18.2072, 0.44", "-8.80171, -193.866, -18.3019, 0.29", "-8.89069, -194.56, -18.4273, 0.29", "-8.99191, -195.415, -18.6053, 1.62", "-9.02663, -195.789, -18.6774, 1.84", "-9.04283, -196.129, -18.7247, 1.99", "-9.03728, -196.724, -18.8223, 1.77", "-9.02091, -197.294, -18.9357, 1.11", "-9.00357, -197.936, -19.0737, 0.44", "-8.9767, -198.546, -19.2026, 0.44", "-8.93825, -199.324, -19.3373, 0.37", "-8.8863, -200.36, -19.4503, 0.29", "-8.8698, -200.709, -19.4782, 0.29", "-8.84133, -201.437, -19.5255, 0.66", "-8.82528, -201.905, -19.5696, 0.81", "-8.80412, -202.49, -19.6373, 0.37", "-8.77267, -203.345, -19.702, 0.29", "-8.70606, -204.512, -19.6992, 1.4", "-8.67711, -204.901, -19.6797, 1.99", "-8.64597, -205.36, -19.6358, 2.21", "-8.62635, -205.943, -19.5517, 1.47", "-8.63509, -206.923, -19.3265, 0.29", "-8.65336, -207.41, -19.1532, 0.29", "-8.6849, -208.092, -18.7758, 0.52", "-8.694, -208.442, -18.5393, 0.66", "-8.69536, -208.919, -18.1517, 0.44", "-8.68047, -209.594, -17.5521, 0.37", "-8.63691, -210.057, -17.1256, 0.37", "-8.56624, -210.732, -16.4053, 1.25", "-8.5364, -210.956, -16.1474, 1.84", "-8.4926, -211.359, -15.6472, 1.92", "-8.44, -211.834, -15.0123, 1.33", "-8.39464, -212.251, -14.4484, 1.11", "-8.2988, -213.288, -13.11, 0.29", "-8.26716, -213.741, -12.5287, 0.29", "-8.22249, -214.362, -11.6865, 0.29", "-8.19588, -214.714, -11.1898, 0.29", "-8.15159, -215.133, -10.5924, 0.52", "-8.11122, -215.423, -10.2052, 0.66", "-7.96835, -216.155, -9.30538, 0.29", "-7.86568, -216.649, -8.68652, 1.11", "-7.78389, -217.025, -8.2242, 1.11", "-7.64861, -217.891, -7.14834, 0.22", "-7.61359, -218.166, -6.79292, 0.44" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-25.861, -80.5548, -15.2193, 0.96", "-26.9896, -81.7546, -15.4542, 0.96", "-27.9265, -82.7073, -15.6654, 0.96", "-28.7285, -83.4607, -15.8398, 1.18", "-29.452, -84.0928, -16.0358, 1.18", "-30.5294, -84.9635, -16.395, 0.74", "-31.3298, -85.5493, -16.7102, 0.74", "-31.9008, -85.9341, -17.0093, 0.74", "-32.4032, -86.233, -17.3383, 0.74", "-33.3388, -86.7968, -18.0128, 0.66", "-33.7435, -87.1148, -18.3274, 0.66", "-34.2426, -87.6449, -18.7089, 0.66", "-34.6526, -88.1708, -18.9985, 0.81", "-35.0854, -88.7464, -19.2688, 0.96", "-35.738, -89.5981, -19.6238, 1.11", "-36.426, -90.4403, -19.9243, 1.11", "-36.9819, -91.1269, -20.1551, 1.33", "-37.4649, -91.7103, -20.3579, 1.47", "-38.1707, -92.4656, -20.6637, 1.47", "-38.8153, -93.0538, -20.9509, 1.4", "-39.5471, -93.5744, -21.2727, 1.25" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "157.158, -81.8129, -23.408, 0.52", "157.909, -81.2249, -23.1228, 0.52", "158.336, -80.8329, -22.9485, 0.29", "158.797, -80.3698, -22.7136, 0.22", "159.283, -79.852, -22.5012, 0.22", "159.727, -79.3685, -22.335, 0.22", "160.191, -78.8315, -22.167, 0.22", "160.645, -78.241, -21.9922, 0.88", "160.987, -77.7402, -21.8545, 1.18", "161.579, -76.79, -21.5966, 1.47", "161.782, -76.4468, -21.5008, 1.55", "162.481, -75.2629, -21.1687, 0.22", "162.885, -74.634, -20.9944, 0.22", "163.411, -73.8992, -20.7567, 0.88", "163.788, -73.402, -20.5831, 1.4", "164.016, -73.1149, -20.4628, 1.25", "164.384, -72.6707, -20.2724, 0.81", "165.033, -71.9331, -19.9571, 0.22", "165.972, -70.9175, -19.5221, 0.22", "166.551, -70.3358, -19.2678, 0.66", "166.921, -69.975, -19.1074, 0.81", "167.154, -69.7405, -19.0017, 0.66", "167.372, -69.5054, -18.8893, 0.52" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "157.158, -81.8129, -23.408, 0.29", "157.143, -80.5467, -22.597, 0.29", "157.145, -79.6536, -22.0213, 0.29", "157.136, -78.9896, -21.5925, 0.52", "157.123, -78.6121, -21.3458, 0.66", "157.096, -77.9001, -20.8742, 0.22", "157.076, -77.432, -20.5637, 0.59", "157.045, -76.9516, -20.2368, 0.74", "157.015, -76.5571, -19.9591, 0.81", "156.977, -75.9657, -19.5255, 0.52", "156.945, -75.2667, -18.9925, 0.22", "156.932, -74.791, -18.6183, 0.29", "156.941, -74.4055, -18.306, 0.29", "156.976, -74.0302, -17.9949, 0.15", "157.063, -73.5395, -17.5805, 0.29", "157.141, -73.1987, -17.2929, 0.37", "157.24, -72.7971, -16.9595, 0.22", "157.376, -72.2502, -16.5201, 0.22", "157.485, -71.7666, -16.1517, 0.74", "157.557, -71.4046, -15.8848, 0.88", "157.636, -70.9611, -15.5638, 0.52", "157.76, -70.2234, -15.0397, 0.22", "157.822, -69.7659, -14.7216, 0.44", "157.843, -69.4871, -14.5362, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "64.4746, -154.445, -1.46804, 0.37", "64.9041, -155.186, -1.54946, 0.37", "65.2447, -155.725, -1.59669, 0.52", "65.5412, -156.166, -1.62797, 0.59", "66.0056, -156.848, -1.66742, 0.22", "66.2965, -157.265, -1.68741, 0.22", "66.5607, -157.638, -1.70279, 0.44", "66.8956, -158.077, -1.69907, 0.44", "67.2131, -158.453, -1.69498, 0.37", "67.5929, -158.849, -1.68953, 0.29", "67.9828, -159.208, -1.68808, 0.52", "68.253, -159.441, -1.68973, 0.74", "68.6626, -159.8, -1.69685, 0.74", "69.1104, -160.203, -1.70751, 0.44", "69.3836, -160.449, -1.71513, 0.44", "69.8843, -160.892, -1.72945, 0.29", "70.2592, -161.231, -1.74585, 0.29", "70.4799, -161.436, -1.75781, 0.66", "70.7343, -161.688, -1.77074, 0.81", "70.9049, -161.854, -1.77764, 0.81", "71.4887, -162.375, -1.79144, 0.29", "71.916, -162.704, -1.79366, 0.29", "72.2545, -162.938, -1.79321, 0.44", "72.7954, -163.29, -1.78976, 0.29", "73.2403, -163.563, -1.77819, 0.37", "73.9382, -163.959, -1.7557, 0.37", "74.5206, -164.262, -1.73251, 0.37", "74.863, -164.42, -1.71641, 0.59", "75.1037, -164.515, -1.7066, 0.59", "75.7574, -164.741, -1.67543, 0.29", "76.3996, -164.948, -1.63677, 1.25", "76.7177, -165.045, -1.6149, 1.55", "77.1762, -165.176, -1.57741, 1.55", "78.2621, -165.477, -1.47156, 0.29", "78.9519, -165.685, -1.39816, 0.52", "79.4021, -165.826, -1.34794, 0.59", "79.864, -165.989, -1.27541, 0.37", "80.2397, -166.136, -1.20775, 0.22", "80.8435, -166.401, -1.089, 0.22", "81.5455, -166.728, -0.939085, 0.22", "82.0141, -166.954, -0.838254, 0.22", "82.8515, -167.369, -0.649733, 0.59", "83.3538, -167.626, -0.531043, 0.59", "83.7989, -167.864, -0.425977, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "64.4746, -154.445, -1.46804, 0.59", "64.5852, -155.212, -1.57784, 0.59", "64.7066, -156.185, -1.49454, 0.44", "64.8495, -157.311, -1.34508, 0.29", "65.0348, -158.837, -1.1799, 0.59", "65.1258, -159.603, -1.1126, 0.66", "65.3073, -161.051, -1.00856, 0.44", "65.8196, -164.432, -0.861055, 0.29", "66.0041, -165.489, -0.85399, 0.29", "66.2966, -166.822, -0.895076, 0.59", "66.5321, -167.665, -0.954478, 0.74", "66.7166, -168.246, -1.01537, 0.74", "67.1271, -169.485, -1.18955, 0.44", "67.5253, -170.742, -1.47031, 0.29", "67.805, -171.827, -1.65232, 0.29", "68.0713, -173.033, -1.82898, 0.59", "68.28, -174.067, -1.97976, 0.44", "68.4466, -174.93, -2.09554, 0.44", "68.6136, -175.817, -2.19302, 0.44", "68.8628, -176.934, -2.32131, 0.37", "69.2132, -178.257, -2.47554, 0.37", "69.4431, -178.903, -2.5422, 0.66", "69.7978, -179.56, -2.58425, 0.66", "70.0916, -179.96, -2.59121, 0.52", "70.7101, -180.718, -2.57675, 0.74", "70.9904, -181.05, -2.56095, 0.74", "71.6898, -181.951, -2.50688, 0.29", "72.3755, -182.906, -2.46011, 0.29", "72.8953, -183.636, -2.42756, 0.29", "73.67, -184.729, -2.38324, 0.22", "74.2202, -185.505, -2.35177, 0.22", "74.9949, -186.593, -2.30698, 0.44", "75.5982, -187.437, -2.27179, 0.59", "75.9959, -188.063, -2.25549, 0.59", "81.5703, -199.824, -4.08882, 0.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-39.5471, -93.5744, -21.2727, 0.88", "-39.8947, -93.7663, -21.2796, 0.88", "-40.8445, -94.3368, -21.3001, 0.74", "-41.7651, -94.9092, -21.3163, 0.88", "-42.5136, -95.3871, -21.3704, 0.52", "-43.494, -96.0062, -21.4103, 0.66", "-44.4082, -96.5678, -21.4305, 0.74", "-45.3118, -97.0873, -21.439, 0.88", "-46.1437, -97.5211, -21.4363, 1.03", "-47.3703, -98.1133, -21.4031, 1.33", "-48.5549, -98.6502, -21.3558, 1.4", "-49.6844, -99.1172, -21.3069, 0.66", "-50.4136, -99.4042, -21.2622, 0.66", "-51.1312, -99.7151, -21.1911, 0.59", "-51.9537, -100.156, -21.0815, 0.37", "-52.4839, -100.506, -20.9977, 0.88", "-53.2201, -101.093, -20.929, 0.96", "-53.7237, -101.551, -20.875, 0.96", "-54.4489, -102.273, -20.7755, 0.66", "-54.9883, -102.837, -20.6995, 0.66", "-55.7369, -103.612, -20.6144, 0.66", "-56.3681, -104.266, -20.5471, 0.74", "-56.7785, -104.694, -20.5023, 0.96", "-57.5094, -105.456, -20.4325, 0.74", "-58.1511, -106.174, -20.3697, 0.74", "-58.8837, -107.122, -20.2673, 0.96", "-59.3486, -107.833, -20.1773, 1.03", "-59.7712, -108.517, -20.0711, 0.81", "-60.2358, -109.233, -19.9301, 0.44", "-60.9775, -110.339, -19.6593, 0.44", "-61.4994, -111.126, -19.411, 0.44", "-61.9892, -111.89, -19.1279, 0.44", "-62.7491, -113.158, -18.6311, 0.44", "-63.3876, -114.352, -18.1732, 0.81", "-63.6563, -114.923, -17.9604, 0.81", "-63.9673, -115.679, -17.7161, 0.88", "-64.1214, -116.097, -17.6056, 0.66", "-64.4441, -117.069, -17.4155, 0.37", "-64.7485, -117.985, -17.2653, 0.29", "-65.0562, -118.628, -17.164, 0.44", "-65.6848, -119.357, -17.003, 0.29", "-66.241, -119.786, -16.8692, 0.29", "-66.8929, -120.189, -16.689, 0.37", "-67.9582, -120.716, -16.3466, 0.37", "-68.7216, -121.087, -16.0466, 0.37", "-69.6003, -121.558, -15.6622, 0.81", "-70.1733, -121.902, -15.4054, 1.03", "-70.6674, -122.304, -15.1471, 1.03", "-71.0366, -122.699, -14.9224, 0.96", "-71.8388, -123.806, -14.3605, 0.52", "-72.2265, -124.431, -14.0418, 0.52", "-72.7108, -125.266, -13.6066, 1.77", "-73.4734, -126.59, -12.9365, 0.66", "-73.914, -127.271, -12.6135, 0.66", "-74.5465, -128.133, -12.198, 0.59", "-75.0978, -128.821, -11.865, 0.74", "-75.6002, -129.43, -11.5467, 0.74", "-76.0803, -129.978, -11.2549, 0.74", "-76.9872, -130.887, -10.7939, 0.37", "-78.16, -132.048, -10.2429, 0.37", "-78.7419, -132.645, -9.9832, 0.44", "-79.319, -133.316, -9.70668, 0.44", "-79.9483, -134.115, -9.39687, 0.44", "-80.3864, -134.691, -9.18863, 0.66", "-80.74, -135.185, -9.03617, 0.74", "-81.0976, -135.704, -8.9208, 0.74", "-81.8253, -136.758, -8.71437, 0.81", "-82.5748, -137.861, -8.53614, 0.44", "-83.3043, -138.978, -8.37242, 0.44", "-83.9499, -140.034, -8.24335, 0.37", "-84.6174, -141.188, -8.09742, 0.37", "-85.0108, -141.898, -8.01448, 1.18", "-85.3392, -142.503, -7.96231, 1.62", "-85.836, -143.46, -7.86661, 1.84", "-86.3111, -144.375, -7.75446, 1.03", "-86.9101, -145.508, -7.60422, 0.74", "-87.166, -146.026, -7.53145, 0.74", "-87.6308, -147.098, -7.38097, 0.44", "-88.0905, -148.299, -7.2104, 0.59", "-88.3618, -149.11, -7.09961, 0.59", "-88.6748, -150.121, -6.97624, 0.37", "-89.042, -151.358, -6.84749, 0.37", "-89.3976, -152.507, -6.72544, 0.37", "-89.6579, -153.295, -6.65253, 0.81", "-89.933, -153.978, -6.6083, 0.96", "-90.321, -154.762, -6.58377, 1.18", "-91.0313, -155.974, -6.55515, 0.44", "-91.6268, -156.881, -6.5167, 0.44", "-92.4556, -158.057, -6.38014, 0.44", "-93.1186, -158.936, -6.2214, 0.44", "-93.8622, -159.886, -6.01022, 0.59", "-94.3811, -160.551, -5.8257, 0.74", "-95.0395, -161.403, -5.5571, 0.96", "-95.9918, -162.603, -5.14162, 0.59", "-96.5709, -163.33, -4.88597, 0.44", "-97.1962, -164.165, -4.59662, 0.37", "-97.6696, -164.854, -4.36283, 0.52", "-98.0811, -165.509, -4.18099, 0.52", "-98.8513, -166.815, -3.87713, 0.37", "-99.3782, -167.746, -3.67796, 0.59", "-99.7547, -168.412, -3.5005, 0.74", "-100.273, -169.285, -3.24293, 0.96", "-100.567, -169.791, -3.096, 0.88", "-100.896, -170.391, -2.92013, 0.81", "-101.405, -171.282, -2.62943, 0.88", "-102.091, -172.352, -2.27981, 0.37", "-102.784, -173.358, -1.96041, 0.37", "-103.432, -174.249, -1.6898, 0.37", "-104.034, -175.045, -1.44316, 0.66", "-104.89, -176.119, -1.10487, 0.52", "-105.51, -176.812, -0.879194, 0.37", "-106.204, -177.459, -0.672406, 0.59", "-106.912, -178.014, -0.452618, 0.59", "-107.841, -178.641, -0.126777, 0.29", "-108.42, -179.024, 0.118793, 0.29", "-109.022, -179.458, 0.400248, 0.29", "-110.01, -180.235, 0.912757, 0.37", "-111.179, -181.228, 1.54417, 0.52", "-112.198, -182.168, 2.11925, 0.74", "-113.164, -183.117, 2.66284, 0.59", "-113.817, -183.786, 3.00814, 0.44", "-114.228, -184.214, 3.1984, 0.44", "-114.797, -184.832, 3.42399, 0.37", "-115.401, -185.556, 3.59539, 0.52", "-116.008, -186.37, 3.74651, 0.74", "-116.723, -187.416, 3.93881, 0.44", "-117.166, -188.187, 4.10447, 0.37", "-117.523, -188.994, 4.32029, 0.37", "-117.889, -190.079, 4.63439, 0.59", "-118.041, -190.715, 4.8171, 0.59", "-118.158, -191.605, 5.07382, 0.59", "-118.203, -192.63, 5.38656, 0.66", "-118.21, -194.069, 5.81927, 0.66", "-118.209, -195.21, 6.13028, 0.37", "-118.197, -195.931, 6.30272, 0.37", "-118.127, -196.824, 6.49058, 0.37", "-118.028, -197.442, 6.61968, 0.37", "-117.79, -198.601, 6.84875, 0.59", "-117.644, -199.164, 6.93596, 0.74", "-117.421, -199.932, 7.06654, 0.74", "-117.139, -201.124, 7.27596, 0.44", "-117.039, -201.747, 7.37898, 0.44", "-124.37, -209.797, 7.34552, 0.44" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-39.5471, -93.5744, -21.2727, 0.81", "-41.6291, -95.8109, -23.2799, 0.81", "-42.4472, -96.5667, -24.0754, 0.74", "-42.9345, -96.9289, -24.5559, 0.81", "-43.5257, -97.2775, -25.1539, 0.59", "-44.3538, -97.6848, -25.948, 0.44", "-44.68, -97.8226, -26.2363, 0.44", "-45.9446, -98.0806, -26.957, 0.52", "-46.5804, -98.1078, -27.3649, 0.74", "-47.2948, -98.1271, -27.848, 0.59", "-47.9826, -98.1611, -28.3061, 0.59", "-48.5447, -98.2251, -28.663, 1.03", "-49.1844, -98.3559, -28.9927, 1.18", "-49.8438, -98.5347, -29.2439, 1.18", "-50.6883, -98.7758, -29.546, 0.52", "-51.3503, -98.9487, -29.7956, 0.37", "-51.882, -99.0661, -30.0168, 0.29", "-52.4214, -99.1705, -30.2629, 0.29", "-53.005, -99.2658, -30.5366, 0.88", "-53.73, -99.3437, -30.8785, 1.11", "-54.3459, -99.347, -31.234, 1.4", "-54.8202, -99.3646, -31.5853, 1.55", "-55.1851, -99.4112, -31.9318, 1.55", "-55.797, -99.5467, -32.5872, 0.59", "-56.1393, -99.6495, -32.9631, 0.59", "-57.0605, -99.9908, -33.9265, 0.44", "-58.1094, -100.421, -35.0155, 0.29", "-59.0353, -100.847, -36.0599, 0.52", "-59.4111, -101.043, -36.5907, 0.66", "-59.822, -101.282, -37.2485, 0.66", "-60.0939, -101.459, -37.7026, 0.44", "-60.7532, -101.887, -38.8237, 0.37", "-62.1857, -102.734, -41.2988, 2.8", "-63.9305, -103.741, -44.574, 0.74", "-64.6702, -104.153, -46.1004, 0.74", "-65.2483, -104.443, -47.4428, 0.52", "-65.8823, -104.697, -49.0474, 1.11", "-66.1402, -104.76, -49.7265, 1.25", "-67.1969, -104.706, -52.6693, 0.37", "-67.8619, -104.453, -54.5601, 1.03", "-68.5216, -103.984, -56.5744, 1.25", "-68.8957, -103.605, -57.7996, 0.37", "-69.1704, -103.277, -58.7065, 1.84", "-69.6949, -102.619, -60.3115, 0.52", "-69.8399, -102.427, -60.6799, 0.37", "-70.2106, -101.98, -61.4825, 0.74", "-70.8758, -101.338, -62.7033, 0.44", "-71.4889, -100.896, -63.6714, 0.44", "-71.9542, -100.648, -64.2938, 0.44", "-72.4562, -100.448, -64.8544, 1.11", "-72.917, -100.287, -65.3223, 1.55", "-73.4432, -100.125, -65.804, 1.69", "-75.0272, -99.7066, -67.0653, 0.29", "-75.7964, -99.5328, -67.6415, 0.44", "-76.3835, -99.4124, -68.0924, 0.44", "-76.8768, -99.3161, -68.4834, 1.33", "-77.3588, -99.2171, -68.8548, 1.55", "-78.4427, -98.9872, -69.6872, 0.29", "-78.9423, -98.8837, -70.0655, 0.52", "-79.7753, -98.7311, -70.695, 0.29", "-80.2551, -98.6215, -71.0776, 1.03", "-80.6684, -98.5117, -71.42, 1.18", "-81.0549, -98.3904, -71.7412, 1.18", "-81.9987, -98.0569, -72.5637, 0.29", "-82.6565, -97.8385, -73.1483, 0.29", "-83.7432, -97.51, -74.06, 0.88", "-84.2799, -97.3559, -74.51, 0.66", "-84.6441, -97.2539, -74.8176, 0.66", "-85.0781, -97.1214, -75.1714, 0.44", "-85.6412, -96.9482, -75.6325, 0.29", "-86.226, -96.7748, -76.0843, 0.74", "-86.4803, -96.7077, -76.2699, 0.88", "-87.6163, -96.3732, -77.0819, 0.29", "-88.3843, -96.1341, -77.6052, 1.47", "-89.0046, -95.9314, -78.0044, 1.92", "-89.5809, -95.7423, -78.356, 1.92", "-90.8793, -95.3257, -79.1091, 0.22", "-91.802, -95.0423, -79.5952, 0.22", "-92.416, -94.862, -79.8724, 0.59", "-92.7493, -94.7685, -80.0043, 0.59", "-93.6908, -94.4867, -80.3153, 0.22", "-94.3626, -94.2679, -80.4984, 0.81", "-94.661, -94.1598, -80.5716, 1.03", "-95.0107, -94.0211, -80.6575, 1.03", "-95.9651, -93.6015, -80.9129, 0.22", "-96.4667, -93.3692, -81.0449, 0.44", "-98.1115, -92.5457, -81.4825, 0.22", "-98.6318, -92.2741, -81.6315, 0.22", "-99.3362, -91.8986, -81.8381, 1.03", "-99.8248, -91.6316, -81.9824, 1.25" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "83.7989, -167.864, -0.425977, 0.22", "85.1784, -168.896, -0.381284, 0.22", "85.7765, -169.343, -0.361906, 0.22", "86.2174, -169.673, -0.347624, 0.44", "86.528, -169.905, -0.337563, 0.44", "96.1135, -176.571, 1.2543, 0.44" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "83.7989, -167.864, -0.425977, 0.59", "84.8863, -167.551, -0.166711, 0.59", "85.4816, -167.38, -0.0248079, 0.66", "85.7302, -167.308, 0.0344618, 0.66", "96.6956, -164.566, 3.90685, 0.66", "107.515, -162.076, 8.31449, 0.66", "117.374, -159.741, 14.6451, 0.66" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_17", "dend_0", "dend_50", "dend_47", "dend_45", "dend_18", "dend_10", "dend_1", "dend_56", "dend_51", "dend_49", "dend_48", "dend_38", "dend_19", "dend_12", "dend_11", "dend_5", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_42", "dend_39", "dend_27", "dend_20", "dend_14", "dend_13", "dend_9", "dend_6", "dend_4", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_44", "dend_43", "dend_41", "dend_40", "dend_37", "dend_28", "dend_26", "dend_21", "dend_16", "dend_15", "dend_8", "dend_7", "dend_34", "dend_29", "dend_25", "dend_22", "dend_36", "dend_35", "dend_31", "dend_30", "dend_24", "dend_23", "dend_33", "dend_32" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_46", "dend_17", "dend_0", "dend_50", "dend_47", "dend_45", "dend_18", "dend_10", "dend_1", "dend_56", "dend_51", "dend_49", "dend_48", "dend_38", "dend_19", "dend_12", "dend_11", "dend_5", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_42", "dend_39", "dend_27", "dend_20", "dend_14", "dend_13", "dend_9", "dend_6", "dend_4", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_44", "dend_43", "dend_41", "dend_40", "dend_37", "dend_28", "dend_26", "dend_21", "dend_16", "dend_15", "dend_8", "dend_7", "dend_34", "dend_29", "dend_25", "dend_22", "dend_36", "dend_35", "dend_31", "dend_30", "dend_24", "dend_23", "dend_33", "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_59", "dend_59", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_44", "dend_44", "dend_43", "dend_41", "dend_41", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_BTC_07c7c10a30_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_17
create dend_45
public dend_45
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_50
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_38, id: dend_38, parent: dend_18
create dend_38
public dend_38
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_27
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_59, dend_59, dend_58, dend_58, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_43, dend_41, dend_41, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_46(0), soma_0(0.4500003629291099)
    connect dend_17(0), soma_0(0.4500003629291099)
    connect dend_0(0), soma_0(0.4500003629291099)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_38(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.701782, -14.5938, 2.84454, 2.73269 ) }
    soma_0 { pt3dadd( 0.624028, -13.2198, 2.58654, 4.41229 ) }
    soma_0 { pt3dadd( 0.546274, -11.8458, 2.32855, 5.84991 ) }
    soma_0 { pt3dadd( 0.46852, -10.4718, 2.07055, 7.31637 ) }
    soma_0 { pt3dadd( 0.390766, -9.09779, 1.81255, 8.68275 ) }
    soma_0 { pt3dadd( 0.313011, -7.72379, 1.55455, 10.1324 ) }
    soma_0 { pt3dadd( 0.235257, -6.34979, 1.29656, 11.1056 ) }
    soma_0 { pt3dadd( 0.157503, -4.97579, 1.03856, 11.7054 ) }
    soma_0 { pt3dadd( 0.0797487, -3.60179, 0.780562, 12.0256 ) }
    soma_0 { pt3dadd( 0.00199453, -2.22779, 0.522565, 12.4948 ) }
    soma_0 { pt3dadd( -0.0757597, -0.853785, 0.264567, 12.7838 ) }
    soma_0 { pt3dadd( -0.153514, 0.520216, 0.00657008, 12.9275 ) }
    soma_0 { pt3dadd( -0.231268, 1.89422, -0.251427, 12.8186 ) }
    soma_0 { pt3dadd( -0.309022, 3.26822, -0.509424, 12.3668 ) }
    soma_0 { pt3dadd( -0.386777, 4.64222, -0.767422, 11.8063 ) }
    soma_0 { pt3dadd( -0.464531, 6.01622, -1.02542, 10.8607 ) }
    soma_0 { pt3dadd( -0.542285, 7.39022, -1.28342, 9.60756 ) }
    soma_0 { pt3dadd( -0.620039, 8.76422, -1.54141, 8.32491 ) }
    soma_0 { pt3dadd( -0.697793, 10.1382, -1.79941, 6.57632 ) }
    soma_0 { pt3dadd( -0.775548, 11.5122, -2.05741, 4.5422 ) }
    soma_0 { pt3dadd( -0.853302, 12.8862, -2.3154, 2.90642 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -3.99768, 4.28759, 12.0608, 1.77 ) }
    dend_46 { pt3dadd( -4.19696, 5.16227, 12.3515, 1.77 ) }
    dend_46 { pt3dadd( -4.55654, 6.51799, 12.9849, 1.55 ) }
    dend_46 { pt3dadd( -4.84272, 7.42448, 13.519, 1.55 ) }
    dend_46 { pt3dadd( -5.264, 8.45269, 14.2993, 1.4 ) }
    dend_46 { pt3dadd( -6.0291, 9.85957, 15.5567, 1.4 ) }
    dend_46 { pt3dadd( -6.65987, 10.7761, 16.4683, 1.4 ) }
    dend_46 { pt3dadd( -7.37758, 11.4931, 17.3554, 1.69 ) }
    dend_46 { pt3dadd( -8.00221, 11.9349, 18.0004, 1.69 ) }
    dend_46 { pt3dadd( -9.20156, 12.5858, 18.9964, 1.4 ) }
    dend_46 { pt3dadd( -10.2665, 13.06, 19.731, 1.33 ) }
    dend_46 { pt3dadd( -11.2266, 13.4559, 20.1511, 1.18 ) }
    dend_46 { pt3dadd( -12.7499, 14.1361, 20.4543, 1.18 ) }
    dend_46 { pt3dadd( -13.8141, 14.6875, 20.485, 1.18 ) }
    dend_46 { pt3dadd( -14.877, 15.3321, 20.4614, 1.33 ) }
    dend_46 { pt3dadd( -16.2628, 16.3635, 20.357, 1.4 ) }
    dend_46 { pt3dadd( -18.6261, 18.597, 20.1375, 1.62 ) }
    dend_46 { pt3dadd( -19.4958, 19.6485, 20.0705, 1.69 ) }
    dend_46 { pt3dadd( -20.3746, 20.9074, 20.0033, 1.33 ) }
    dend_46 { pt3dadd( -21.4631, 22.7558, 19.9704, 1.62 ) }
    dend_46 { pt3dadd( -21.9686, 23.876, 20.0514, 1.62 ) }
    dend_46 { pt3dadd( -22.3337, 25.1036, 20.412, 1.84 ) }
    dend_46 { pt3dadd( -22.4636, 25.7653, 20.8683, 1.84 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 44/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.09232, -14.5417, 2.30081, 3.98 ) }
    dend_17 { pt3dadd( 1.09232, -14.5417, 2.30081, 3.98 ) }
    dend_17 { pt3dadd( 1.22546, -16.2174, 2.30081, 3.98 ) }
    dend_17 { pt3dadd( 1.39629, -18.3676, 2.30081, 3.76 ) }
    dend_17 { pt3dadd( 1.56648, -20.5097, 2.30081, 3.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.877678, 13.0001, -4.94919, 2.58 ) }
    dend_0 { pt3dadd( -0.877678, 13.0001, -4.94919, 2.58 ) }
    dend_0 { pt3dadd( -0.300741, 14.8495, -4.56666, 2.14 ) }
    dend_0 { pt3dadd( 0.017671, 15.9085, -4.33582, 2.14 ) }
    dend_0 { pt3dadd( 0.33059, 17.0381, -4.09413, 1.92 ) }
    dend_0 { pt3dadd( 0.756268, 18.7746, -3.71765, 1.69 ) }
    dend_0 { pt3dadd( 0.990606, 19.8757, -3.49532, 1.69 ) }
    dend_0 { pt3dadd( 1.16103, 20.9345, -3.30905, 1.69 ) }
    dend_0 { pt3dadd( 1.30645, 22.5017, -3.09638, 1.92 ) }
    dend_0 { pt3dadd( 1.32221, 23.4518, -3.04433, 2.06 ) }
    dend_0 { pt3dadd( 1.24319, 24.8552, -3.16595, 1.99 ) }
    dend_0 { pt3dadd( 1.14795, 25.7763, -3.39051, 1.84 ) }
    dend_0 { pt3dadd( 1.01395, 27.1016, -3.85363, 1.69 ) }
    dend_0 { pt3dadd( 0.886535, 28.2035, -4.30739, 1.77 ) }
    dend_0 { pt3dadd( 0.719168, 29.5753, -4.95753, 1.69 ) }
    dend_0 { pt3dadd( 0.498492, 31.5697, -6.01247, 1.92 ) }
    dend_0 { pt3dadd( 0.355621, 33.1278, -6.93774, 2.14 ) }
    dend_0 { pt3dadd( 0.280707, 34.4964, -7.7773, 2.43 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 67/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.853302, 12.8862, -2.3154, 0.908168 ) }
    axon_0 { pt3dadd( -1.70079, 27.8622, -2.3154, 0.908168 ) }
    axon_0 { pt3dadd( -2.54828, 42.8383, -2.3154, 0.908168 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 70/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -22.4636, 25.7653, 20.8683, 0.66 ) }
    dend_50 { pt3dadd( -23.9468, 26.999, 23.0844, 0.66 ) }
    dend_50 { pt3dadd( -24.7248, 27.6386, 23.9888, 0.59 ) }
    dend_50 { pt3dadd( -25.7563, 28.4582, 24.9956, 0.59 ) }
    dend_50 { pt3dadd( -26.5353, 29.0133, 25.6727, 0.52 ) }
    dend_50 { pt3dadd( -27.4786, 29.5993, 26.4363, 0.66 ) }
    dend_50 { pt3dadd( -28.1435, 29.9742, 26.9421, 0.52 ) }
    dend_50 { pt3dadd( -28.8195, 30.3574, 27.3924, 0.52 ) }
    dend_50 { pt3dadd( -29.6592, 30.8287, 28.0783, 0.44 ) }
    dend_50 { pt3dadd( -30.2612, 31.1416, 28.706, 0.66 ) }
    dend_50 { pt3dadd( -30.8956, 31.4336, 29.5534, 0.52 ) }
    dend_50 { pt3dadd( -31.436, 31.6694, 30.3794, 0.74 ) }
    dend_50 { pt3dadd( -32.8011, 32.2691, 32.7371, 1.03 ) }
    dend_50 { pt3dadd( -33.5406, 32.6178, 34.2013, 0.66 ) }
    dend_50 { pt3dadd( -34.1374, 32.9482, 35.5749, 0.59 ) }
    dend_50 { pt3dadd( -34.5386, 33.2396, 36.657, 0.74 ) }
    dend_50 { pt3dadd( -42.5109, 37.4033, 45.1633, 0.74 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 87/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -22.4636, 25.7653, 20.8683, 0.88 ) }
    dend_47 { pt3dadd( -22.5532, 27.0471, 21.2322, 0.88 ) }
    dend_47 { pt3dadd( -22.6053, 27.4942, 21.3328, 0.88 ) }
    dend_47 { pt3dadd( -22.6944, 28.0547, 21.4579, 0.88 ) }
    dend_47 { pt3dadd( -22.8141, 28.6976, 21.6018, 0.88 ) }
    dend_47 { pt3dadd( -22.9272, 29.3086, 21.7486, 0.81 ) }
    dend_47 { pt3dadd( -23.0297, 29.8842, 21.9036, 0.81 ) }
    dend_47 { pt3dadd( -23.1114, 30.2777, 21.9893, 1.03 ) }
    dend_47 { pt3dadd( -23.226, 30.734, 22.0944, 0.81 ) }
    dend_47 { pt3dadd( -23.3789, 31.2349, 22.2137, 0.96 ) }
    dend_47 { pt3dadd( -23.518, 31.6423, 22.3117, 0.88 ) }
    dend_47 { pt3dadd( -23.6802, 32.1263, 22.4256, 0.74 ) }
    dend_47 { pt3dadd( -23.7879, 32.4566, 22.5048, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_47 { pt3dadd( -23.9022, 32.8433, 22.5964, 0.74 ) }
    dend_47 { pt3dadd( -24.013, 33.2995, 22.6926, 0.81 ) }
    dend_47 { pt3dadd( -24.0821, 33.6544, 22.7665, 0.81 ) }
    dend_47 { pt3dadd( -24.1404, 34.0633, 22.8578, 0.88 ) }
    dend_47 { pt3dadd( -24.1716, 34.4994, 22.9644, 1.03 ) }
    dend_47 { pt3dadd( -24.1711, 35.0019, 23.1046, 0.96 ) }
    dend_47 { pt3dadd( -24.1344, 35.6262, 23.2851, 1.03 ) }
    dend_47 { pt3dadd( -24.1019, 36.0711, 23.4076, 1.03 ) }
    dend_47 { pt3dadd( -24.0626, 36.7235, 23.5821, 1.11 ) }
    dend_47 { pt3dadd( -24.0573, 37.1417, 23.6703, 0.96 ) }
    dend_47 { pt3dadd( -24.082, 37.6683, 23.7506, 0.88 ) }
    dend_47 { pt3dadd( -24.158, 38.2606, 23.827, 0.74 ) }
    dend_47 { pt3dadd( -24.2656, 38.7644, 23.8895, 0.81 ) }
    dend_47 { pt3dadd( -24.3697, 39.1088, 23.9429, 0.96 ) }
    dend_47 { pt3dadd( -24.6289, 39.7591, 24.0658, 1.11 ) }
    dend_47 { pt3dadd( -24.7781, 40.0625, 24.141, 1.11 ) }
    dend_47 { pt3dadd( -25.028, 40.4995, 24.2714, 0.96 ) }
    dend_47 { pt3dadd( -25.2687, 40.8969, 24.4077, 0.74 ) }
    dend_47 { pt3dadd( -25.5316, 41.3495, 24.5741, 0.74 ) }
    dend_47 { pt3dadd( -25.6754, 41.607, 24.6673, 0.66 ) }
    dend_47 { pt3dadd( -25.8257, 41.8835, 24.7655, 0.59 ) }
    dend_47 { pt3dadd( -26.0719, 42.3385, 24.8865, 0.81 ) }
    dend_47 { pt3dadd( -26.1959, 42.5715, 24.9337, 0.96 ) }
    dend_47 { pt3dadd( -26.3459, 42.8704, 24.9768, 0.96 ) }
    dend_47 { pt3dadd( -26.5445, 43.3273, 25.0202, 0.59 ) }
    dend_47 { pt3dadd( -26.7516, 43.9393, 25.0633, 0.59 ) }
    dend_47 { pt3dadd( -26.8655, 44.42, 25.0866, 0.66 ) }
    dend_47 { pt3dadd( -26.9229, 44.9182, 25.1051, 0.96 ) }
    dend_47 { pt3dadd( -26.9224, 45.3001, 25.115, 1.03 ) }
    dend_47 { pt3dadd( -26.8816, 45.7138, 25.1402, 0.81 ) }
    dend_47 { pt3dadd( -26.7863, 46.2318, 25.1906, 0.52 ) }
    dend_47 { pt3dadd( -26.7004, 46.6091, 25.2557, 0.37 ) }
    dend_47 { pt3dadd( -26.6386, 46.9641, 25.3581, 0.37 ) }
    dend_47 { pt3dadd( -26.6413, 47.2134, 25.4617, 0.44 ) }
    dend_47 { pt3dadd( -26.7557, 47.7387, 25.7617, 0.44 ) }
    dend_47 { pt3dadd( -26.8716, 48.0469, 25.9421, 0.66 ) }
    dend_47 { pt3dadd( -27.0407, 48.4391, 26.1463, 1.03 ) }
    dend_47 { pt3dadd( -27.1548, 48.7357, 26.2718, 1.18 ) }
    dend_47 { pt3dadd( -27.2492, 49.0917, 26.3904, 1.25 ) }
    dend_47 { pt3dadd( -27.2732, 49.4771, 26.4854, 1.4 ) }
    dend_47 { pt3dadd( -27.1832, 50.0843, 26.5855, 1.25 ) }
    dend_47 { pt3dadd( -27.0577, 50.4709, 26.6297, 1.18 ) }
    dend_47 { pt3dadd( -26.8152, 50.9927, 26.6434, 0.66 ) }
    dend_47 { pt3dadd( -26.5362, 51.4746, 26.629, 0.66 ) }
    dend_47 { pt3dadd( -26.1579, 52.0286, 26.5959, 0.66 ) }
    dend_47 { pt3dadd( -25.9288, 52.3205, 26.5605, 0.81 ) }
    dend_47 { pt3dadd( -25.6296, 52.6659, 26.5122, 0.96 ) }
    dend_47 { pt3dadd( -25.2955, 53.0588, 26.4578, 0.81 ) }
    dend_47 { pt3dadd( -25.0117, 53.416, 26.4055, 0.88 ) }
    dend_47 { pt3dadd( -24.7919, 53.7513, 26.3628, 0.88 ) }
    dend_47 { pt3dadd( -24.5011, 54.3357, 26.3295, 0.74 ) }
    dend_47 { pt3dadd( -24.3738, 54.6548, 26.3388, 0.74 ) }
    dend_47 { pt3dadd( -24.2227, 55.1019, 26.4024, 0.59 ) }
    dend_47 { pt3dadd( -24.1495, 55.3611, 26.455, 0.59 ) }
    dend_47 { pt3dadd( -24.0477, 55.8003, 26.5439, 0.59 ) }
    dend_47 { pt3dadd( -23.9272, 56.4589, 26.663, 0.74 ) }
    dend_47 { pt3dadd( -23.8813, 56.8567, 26.7233, 0.81 ) }
    dend_47 { pt3dadd( -23.846, 57.3297, 26.7673, 0.81 ) }
    dend_47 { pt3dadd( -23.8131, 57.9766, 26.8005, 0.74 ) }
    dend_47 { pt3dadd( -23.7846, 58.4187, 26.8026, 0.74 ) }
    dend_47 { pt3dadd( -23.7481, 58.856, 26.7824, 0.74 ) }
    dend_47 { pt3dadd( -23.6761, 59.5823, 26.7225, 0.88 ) }
    dend_47 { pt3dadd( -23.5833, 60.32, 26.6377, 1.03 ) }
    dend_47 { pt3dadd( -23.516, 60.7957, 26.57, 1.03 ) }
    dend_47 { pt3dadd( -23.4547, 61.1501, 26.5295, 1.69 ) }
    dend_47 { pt3dadd( -23.3261, 61.8114, 26.4699, 1.4 ) }
    dend_47 { pt3dadd( -23.2274, 62.3104, 26.4377, 0.74 ) }
    dend_47 { pt3dadd( -23.1207, 62.8547, 26.4228, 0.74 ) }
    dend_47 { pt3dadd( -23.0833, 63.0947, 26.4174, 0.88 ) }
    dend_47 { pt3dadd( -23.0307, 63.6287, 26.4035, 1.03 ) }
    dend_47 { pt3dadd( -23.0125, 63.9226, 26.3974, 1.11 ) }
    dend_47 { pt3dadd( -22.9704, 64.5077, 26.3856, 0.66 ) }
    dend_47 { pt3dadd( -22.9266, 64.8912, 26.3683, 0.66 ) }
    dend_47 { pt3dadd( -22.8099, 65.4198, 26.3283, 0.81 ) }
    dend_47 { pt3dadd( -22.6566, 65.8916, 26.2464, 1.03 ) }
    dend_47 { pt3dadd( -22.492, 66.3286, 26.1333, 0.88 ) }
    dend_47 { pt3dadd( -22.3584, 66.6646, 26.0343, 0.66 ) }
    dend_47 { pt3dadd( -22.1911, 67.1206, 25.8813, 0.66 ) }
    dend_47 { pt3dadd( -22.0815, 67.5448, 25.7298, 0.88 ) }
    dend_47 { pt3dadd( -22.052, 68.0483, 25.5708, 0.74 ) }
    dend_47 { pt3dadd( -22.1229, 68.4412, 25.4542, 0.66 ) }
    dend_47 { pt3dadd( -22.1972, 68.7153, 25.3871, 0.66 ) }
    dend_47 { pt3dadd( -22.3217, 69.1916, 25.2859, 0.52 ) }
    dend_47 { pt3dadd( -22.3704, 69.5219, 25.2232, 0.44 ) }
    dend_47 { pt3dadd( -22.3214, 69.9281, 25.1579, 0.44 ) }
    dend_47 { pt3dadd( -22.183, 70.2271, 25.1258, 0.44 ) }
    dend_47 { pt3dadd( -21.7432, 70.927, 25.0274, 0.52 ) }
    dend_47 { pt3dadd( -21.4267, 71.3775, 24.9599, 0.66 ) }
    dend_47 { pt3dadd( -21.0343, 71.8826, 24.8782, 0.59 ) }
    dend_47 { pt3dadd( -20.805, 72.1703, 24.8304, 0.66 ) }
    dend_47 { pt3dadd( -20.4964, 72.5819, 24.7636, 0.74 ) }
    dend_47 { pt3dadd( -20.1674, 73.1154, 24.6727, 0.81 ) }
    dend_47 { pt3dadd( -20.0322, 73.3994, 24.6162, 0.88 ) }
    dend_47 { pt3dadd( -19.824, 73.9332, 24.5057, 0.74 ) }
    dend_47 { pt3dadd( -19.7022, 74.2895, 24.4193, 0.74 ) }
    dend_47 { pt3dadd( -19.5541, 74.7695, 24.2698, 0.81 ) }
    dend_47 { pt3dadd( -19.398, 75.337, 24.0595, 0.74 ) }
    dend_47 { pt3dadd( -19.3082, 75.7643, 23.8967, 0.88 ) }
    dend_47 { pt3dadd( -19.2788, 75.9891, 23.81, 0.88 ) }
    dend_47 { pt3dadd( -19.2402, 76.657, 23.5462, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_47 { pt3dadd( -19.2245, 77.102, 23.3725, 1.25 ) }
    dend_47 { pt3dadd( -19.2098, 77.5045, 23.234, 0.74 ) }
    dend_47 { pt3dadd( -19.1975, 77.938, 23.1176, 0.74 ) }
    dend_47 { pt3dadd( -19.1904, 78.3437, 23.0411, 1.03 ) }
    dend_47 { pt3dadd( -19.1802, 78.7859, 22.9879, 1.25 ) }
    dend_47 { pt3dadd( -19.1632, 79.1943, 22.9658, 1.03 ) }
    dend_47 { pt3dadd( -19.1154, 79.6941, 22.9595, 0.88 ) }
    dend_47 { pt3dadd( -19.0084, 80.3253, 22.9645, 0.88 ) }
    dend_47 { pt3dadd( -18.8618, 80.9424, 22.9804, 0.88 ) }
    dend_47 { pt3dadd( -18.6711, 81.5972, 22.994, 0.96 ) }
    dend_47 { pt3dadd( -18.4905, 82.1627, 23.0085, 1.03 ) }
    dend_47 { pt3dadd( -18.3169, 82.6989, 23.0165, 1.03 ) }
    dend_47 { pt3dadd( -18.1101, 83.3666, 23.0419, 0.88 ) }
    dend_47 { pt3dadd( -17.9644, 83.8618, 23.0744, 0.88 ) }
    dend_47 { pt3dadd( -17.8412, 84.3649, 23.1122, 0.88 ) }
    dend_47 { pt3dadd( -17.8011, 84.7329, 23.1492, 0.66 ) }
    dend_47 { pt3dadd( -17.8733, 85.1503, 23.2315, 0.66 ) }
    dend_47 { pt3dadd( -18.1569, 85.7364, 23.4033, 0.74 ) }
    dend_47 { pt3dadd( -18.3167, 85.965, 23.4841, 0.74 ) }
    dend_47 { pt3dadd( -18.5253, 86.2179, 23.5787, 0.74 ) }
    dend_47 { pt3dadd( -18.84, 86.5943, 23.7012, 0.59 ) }
    dend_47 { pt3dadd( -19.1357, 87.0186, 23.7609, 0.88 ) }
    dend_47 { pt3dadd( -19.2079, 87.181, 23.7536, 1.03 ) }
    dend_47 { pt3dadd( -19.2526, 87.49, 23.6847, 0.81 ) }
    dend_47 { pt3dadd( -19.2202, 87.8406, 23.5887, 0.66 ) }
    dend_47 { pt3dadd( -19.1054, 88.3773, 23.441, 0.59 ) }
    dend_47 { pt3dadd( -18.9067, 89.1044, 23.2395, 0.59 ) }
    dend_47 { pt3dadd( -18.7751, 89.5773, 23.1183, 0.66 ) }
    dend_47 { pt3dadd( -18.6209, 90.1768, 22.9951, 0.81 ) }
    dend_47 { pt3dadd( -18.4899, 90.6903, 22.9164, 0.66 ) }
    dend_47 { pt3dadd( -18.2794, 91.4621, 22.8436, 0.81 ) }
    dend_47 { pt3dadd( -18.1297, 91.9946, 22.8152, 0.88 ) }
    dend_47 { pt3dadd( -17.9704, 92.5754, 22.7948, 0.96 ) }
    dend_47 { pt3dadd( -17.8481, 93.0852, 22.7644, 0.96 ) }
    dend_47 { pt3dadd( -17.7586, 93.5793, 22.7168, 0.96 ) }
    dend_47 { pt3dadd( -17.6785, 94.2635, 22.6119, 0.74 ) }
    dend_47 { pt3dadd( -17.6523, 94.7641, 22.5096, 0.74 ) }
    dend_47 { pt3dadd( -17.6552, 95.1257, 22.4295, 0.74 ) }
    dend_47 { pt3dadd( -17.6721, 95.5577, 22.3331, 0.74 ) }
    dend_47 { pt3dadd( -17.7068, 96.2562, 22.1806, 0.74 ) }
    dend_47 { pt3dadd( -17.7431, 96.7575, 22.1057, 0.88 ) }
    dend_47 { pt3dadd( -17.797, 97.4592, 22.049, 0.88 ) }
    dend_47 { pt3dadd( -17.84, 98.1773, 22.0269, 0.88 ) }
    dend_47 { pt3dadd( -17.8619, 98.7627, 22.0241, 0.88 ) }
    dend_47 { pt3dadd( -17.8641, 99.3005, 22.0245, 0.81 ) }
    dend_47 { pt3dadd( -17.8568, 99.9388, 22.0267, 0.66 ) }
    dend_47 { pt3dadd( -17.8727, 100.433, 22.0098, 0.59 ) }
    dend_47 { pt3dadd( -17.9211, 100.779, 21.981, 0.74 ) }
    dend_47 { pt3dadd( -18.0044, 101.091, 21.9373, 0.74 ) }
    dend_47 { pt3dadd( -18.1237, 101.495, 21.8578, 0.74 ) }
    dend_47 { pt3dadd( -18.2023, 101.815, 21.7929, 0.66 ) }
    dend_47 { pt3dadd( -18.2759, 102.25, 21.7055, 0.66 ) }
    dend_47 { pt3dadd( -18.335, 102.762, 21.6332, 0.52 ) }
    dend_47 { pt3dadd( -18.3654, 103.25, 21.5816, 0.52 ) }
    dend_47 { pt3dadd( -18.3764, 103.776, 21.523, 0.59 ) }
    dend_47 { pt3dadd( -18.3916, 104.495, 21.4223, 1.11 ) }
    dend_47 { pt3dadd( -18.4138, 104.898, 21.3481, 1.33 ) }
    dend_47 { pt3dadd( -18.4514, 105.242, 21.2747, 1.33 ) }
    dend_47 { pt3dadd( -18.5598, 105.81, 21.1452, 0.74 ) }
    dend_47 { pt3dadd( -18.7168, 106.386, 21.0165, 0.59 ) }
    dend_47 { pt3dadd( -18.8927, 106.895, 20.9067, 0.66 ) }
    dend_47 { pt3dadd( -19.0629, 107.372, 20.8122, 0.66 ) }
    dend_47 { pt3dadd( -19.2302, 107.873, 20.7041, 0.74 ) }
    dend_47 { pt3dadd( -19.4165, 108.415, 20.5699, 0.81 ) }
    dend_47 { pt3dadd( -19.5693, 108.81, 20.4697, 0.81 ) }
    dend_47 { pt3dadd( -19.7409, 109.209, 20.3662, 0.66 ) }
    dend_47 { pt3dadd( -20.062, 109.903, 20.1657, 0.66 ) }
    dend_47 { pt3dadd( -20.377, 110.501, 19.9596, 0.52 ) }
    dend_47 { pt3dadd( -20.6534, 110.958, 19.7746, 0.44 ) }
    dend_47 { pt3dadd( -20.8245, 111.217, 19.6592, 0.59 ) }
    dend_47 { pt3dadd( -21.0027, 111.453, 19.5516, 0.59 ) }
    dend_47 { pt3dadd( -21.2412, 111.737, 19.4213, 0.59 ) }
    dend_47 { pt3dadd( -21.5311, 112.07, 19.2793, 0.66 ) }
    dend_47 { pt3dadd( -21.7017, 112.294, 19.2084, 0.66 ) }
    dend_47 { pt3dadd( -21.917, 112.64, 19.1038, 0.66 ) }
    dend_47 { pt3dadd( -22.1214, 113.006, 18.9885, 0.59 ) }
    dend_47 { pt3dadd( -22.3061, 113.364, 18.8656, 0.44 ) }
    dend_47 { pt3dadd( -22.4753, 113.702, 18.7322, 0.44 ) }
    dend_47 { pt3dadd( -22.6438, 114.029, 18.5808, 0.88 ) }
    dend_47 { pt3dadd( -22.7824, 114.276, 18.4519, 1.03 ) }
    // Section: dend_45, id: dend_45, parent: dend_17 (entry count 80/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 1.56648, -20.5097, 2.30081, 1.47 ) }
    dend_45 { pt3dadd( 2.6776, -21.3493, 1.319, 1.47 ) }
    dend_45 { pt3dadd( 3.55008, -22.16, 0.490236, 1.03 ) }
    dend_45 { pt3dadd( 4.51676, -23.0848, -0.469777, 0.44 ) }
    dend_45 { pt3dadd( 4.94076, -23.4666, -0.865215, 0.66 ) }
    dend_45 { pt3dadd( 5.6195, -24.0324, -1.44375, 0.81 ) }
    dend_45 { pt3dadd( 6.25811, -24.5221, -1.94609, 0.74 ) }
    dend_45 { pt3dadd( 7.10424, -25.1436, -2.55276, 0.81 ) }
    dend_45 { pt3dadd( 8.35075, -25.9145, -3.26093, 0.44 ) }
    dend_45 { pt3dadd( 9.20259, -26.3605, -3.67718, 0.81 ) }
    dend_45 { pt3dadd( 9.96658, -26.7101, -3.97588, 1.11 ) }
    dend_45 { pt3dadd( 10.7901, -27.0351, -4.2158, 1.11 ) }
    dend_45 { pt3dadd( 11.7574, -27.3468, -4.41147, 0.74 ) }
    dend_45 { pt3dadd( 12.774, -27.6066, -4.54029, 0.52 ) }
    dend_45 { pt3dadd( 14.525, -27.9718, -4.64568, 0.52 ) }
    dend_45 { pt3dadd( 15.8878, -28.1966, -4.69249, 0.52 ) }
    dend_45 { pt3dadd( 16.6303, -28.2774, -4.69618, 0.44 ) }
    dend_45 { pt3dadd( 17.8572, -28.3328, -4.66154, 0.66 ) }
    dend_45 { pt3dadd( 18.6377, -28.3069, -4.62368, 1.18 ) }
    dend_45 { pt3dadd( 19.4652, -28.2136, -4.57011, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( 20.4037, -28.0324, -4.49124, 1.03 ) }
    dend_45 { pt3dadd( 21.2882, -27.8294, -4.45492, 0.81 ) }
    dend_45 { pt3dadd( 22.1128, -27.6469, -4.45851, 0.59 ) }
    dend_45 { pt3dadd( 23.1865, -27.4252, -4.55012, 0.81 ) }
    dend_45 { pt3dadd( 24.0025, -27.2604, -4.67662, 0.81 ) }
    dend_45 { pt3dadd( 25.0614, -27.0387, -4.98536, 0.52 ) }
    dend_45 { pt3dadd( 25.65, -26.9187, -5.22653, 0.52 ) }
    dend_45 { pt3dadd( 26.5996, -26.7451, -5.69179, 0.74 ) }
    dend_45 { pt3dadd( 27.6437, -26.5582, -6.22893, 0.66 ) }
    dend_45 { pt3dadd( 28.5446, -26.3975, -6.71796, 0.66 ) }
    dend_45 { pt3dadd( 30.0418, -26.1085, -7.55066, 0.52 ) }
    dend_45 { pt3dadd( 30.9496, -25.8944, -8.07926, 0.44 ) }
    dend_45 { pt3dadd( 31.8995, -25.6584, -8.60171, 0.44 ) }
    dend_45 { pt3dadd( 32.8457, -25.438, -9.02153, 0.74 ) }
    dend_45 { pt3dadd( 33.4989, -25.3024, -9.22784, 0.88 ) }
    dend_45 { pt3dadd( 34.273, -25.1672, -9.39041, 0.74 ) }
    dend_45 { pt3dadd( 35.7536, -24.9319, -9.58292, 0.37 ) }
    dend_45 { pt3dadd( 36.5243, -24.8251, -9.73658, 0.37 ) }
    dend_45 { pt3dadd( 37.73, -24.7389, -10.023, 0.66 ) }
    dend_45 { pt3dadd( 38.6286, -24.7252, -10.2464, 0.66 ) }
    dend_45 { pt3dadd( 39.4567, -24.7263, -10.4333, 0.81 ) }
    dend_45 { pt3dadd( 40.036, -24.7308, -10.5521, 0.81 ) }
    dend_45 { pt3dadd( 42.2998, -24.7206, -10.9788, 0.66 ) }
    dend_45 { pt3dadd( 43.7155, -24.6621, -11.2815, 0.66 ) }
    dend_45 { pt3dadd( 44.6211, -24.6115, -11.5179, 0.81 ) }
    dend_45 { pt3dadd( 45.6116, -24.5231, -11.8495, 0.81 ) }
    dend_45 { pt3dadd( 46.5454, -24.3984, -12.2414, 0.66 ) }
    dend_45 { pt3dadd( 47.1198, -24.2774, -12.5251, 0.59 ) }
    dend_45 { pt3dadd( 47.7465, -24.045, -12.9363, 0.59 ) }
    dend_45 { pt3dadd( 48.7425, -23.5373, -13.8154, 0.59 ) }
    dend_45 { pt3dadd( 49.9179, -22.8781, -14.9904, 0.96 ) }
    dend_45 { pt3dadd( 50.5312, -22.555, -15.6214, 1.11 ) }
    dend_45 { pt3dadd( 51.0343, -22.3013, -16.1089, 1.18 ) }
    dend_45 { pt3dadd( 51.9553, -21.8519, -16.834, 0.81 ) }
    dend_45 { pt3dadd( 53.097, -21.3075, -17.4667, 0.52 ) }
    dend_45 { pt3dadd( 53.8564, -20.9644, -17.7049, 0.66 ) }
    dend_45 { pt3dadd( 54.8336, -20.5692, -17.82, 0.66 ) }
    dend_45 { pt3dadd( 55.6771, -20.2259, -17.8397, 0.44 ) }
    dend_45 { pt3dadd( 56.9464, -19.6916, -17.798, 0.44 ) }
    dend_45 { pt3dadd( 57.7953, -19.274, -17.7073, 0.52 ) }
    dend_45 { pt3dadd( 58.5437, -18.8082, -17.6029, 0.66 ) }
    dend_45 { pt3dadd( 59.2257, -18.2911, -17.4849, 1.11 ) }
    dend_45 { pt3dadd( 59.6711, -17.8971, -17.3899, 1.25 ) }
    dend_45 { pt3dadd( 60.0571, -17.5369, -17.3006, 1.25 ) }
    dend_45 { pt3dadd( 60.7161, -16.9004, -17.1512, 1.25 ) }
    dend_45 { pt3dadd( 61.4002, -16.2566, -16.9851, 0.74 ) }
    dend_45 { pt3dadd( 62.4101, -15.3769, -16.7704, 0.88 ) }
    dend_45 { pt3dadd( 62.8327, -15.0173, -16.6962, 0.88 ) }
    dend_45 { pt3dadd( 63.272, -14.6382, -16.6113, 0.88 ) }
    dend_45 { pt3dadd( 64.0304, -13.9531, -16.5209, 0.59 ) }
    dend_45 { pt3dadd( 64.956, -13.0586, -16.4984, 0.52 ) }
    dend_45 { pt3dadd( 65.5767, -12.4222, -16.5721, 0.52 ) }
    dend_45 { pt3dadd( 66.4655, -11.5639, -16.7486, 0.81 ) }
    dend_45 { pt3dadd( 67.1515, -10.9237, -16.9067, 0.81 ) }
    dend_45 { pt3dadd( 68.3895, -9.82961, -17.2228, 0.96 ) }
    dend_45 { pt3dadd( 69.0073, -9.31987, -17.394, 1.11 ) }
    dend_45 { pt3dadd( 69.8334, -8.69097, -17.6825, 1.4 ) }
    dend_45 { pt3dadd( 71.3321, -7.60768, -18.2612, 0.81 ) }
    dend_45 { pt3dadd( 72.3507, -6.89602, -18.6943, 0.81 ) }
    dend_45 { pt3dadd( 73.1685, -6.28429, -19.0687, 0.81 ) }
    dend_45 { pt3dadd( 73.59, -5.92465, -19.255, 0.81 ) }
    dend_45 { pt3dadd( 74.6471, -4.85948, -19.7665, 0.52 ) }
    dend_45 { pt3dadd( 75.5262, -3.72157, -20.2665, 0.66 ) }
    dend_45 { pt3dadd( 76.0067, -2.89093, -20.6208, 0.59 ) }
    dend_45 { pt3dadd( 76.4604, -1.96931, -20.9539, 0.37 ) }
    dend_45 { pt3dadd( 76.9238, -0.906914, -21.2565, 1.03 ) }
    dend_45 { pt3dadd( 77.1453, -0.3862, -21.3693, 1.25 ) }
    dend_45 { pt3dadd( 77.4175, 0.210692, -21.4564, 1.25 ) }
    dend_45 { pt3dadd( 77.9546, 1.18131, -21.5784, 1.03 ) }
    dend_45 { pt3dadd( 78.4702, 1.95508, -21.6677, 1.18 ) }
    dend_45 { pt3dadd( 79.1746, 2.91795, -21.7673, 1.03 ) }
    dend_45 { pt3dadd( 79.8483, 3.84168, -21.841, 1.18 ) }
    dend_45 { pt3dadd( 80.3306, 4.51657, -21.8758, 1.18 ) }
    dend_45 { pt3dadd( 80.9153, 5.32417, -21.8986, 0.74 ) }
    dend_45 { pt3dadd( 81.3793, 5.92646, -21.9065, 0.52 ) }
    dend_45 { pt3dadd( 81.9263, 6.55921, -21.9157, 0.52 ) }
    dend_45 { pt3dadd( 82.9283, 7.51431, -21.9364, 0.81 ) }
    dend_45 { pt3dadd( 83.6421, 8.1131, -21.9535, 0.88 ) }
    dend_45 { pt3dadd( 84.227, 8.55874, -21.969, 0.81 ) }
    dend_45 { pt3dadd( 85.247, 9.20986, -21.9976, 0.37 ) }
    dend_45 { pt3dadd( 85.956, 9.57119, -22.0364, 0.29 ) }
    dend_45 { pt3dadd( 87.1438, 10.0717, -22.1795, 0.59 ) }
    dend_45 { pt3dadd( 87.5814, 10.2418, -22.2643, 0.66 ) }
    dend_45 { pt3dadd( 88.5392, 10.6274, -22.5028, 0.37 ) }
    dend_45 { pt3dadd( 89.6806, 11.1344, -22.8443, 0.59 ) }
    dend_45 { pt3dadd( 90.7151, 11.667, -23.1628, 0.81 ) }
    dend_45 { pt3dadd( 92.1401, 12.4619, -23.5786, 1.99 ) }
    dend_45 { pt3dadd( 92.8741, 12.8676, -23.7792, 2.65 ) }
    dend_45 { pt3dadd( 93.4031, 13.1425, -23.9079, 2.65 ) }
    dend_45 { pt3dadd( 94.6134, 13.7488, -24.1653, 1.18 ) }
    dend_45 { pt3dadd( 95.9195, 14.3835, -24.3801, 0.44 ) }
    dend_45 { pt3dadd( 97.041, 14.8768, -24.4736, 0.74 ) }
    dend_45 { pt3dadd( 97.8181, 15.1846, -24.4716, 0.74 ) }
    dend_45 { pt3dadd( 98.5816, 15.4866, -24.4437, 0.81 ) }
    dend_45 { pt3dadd( 99.0867, 15.6856, -24.4169, 0.81 ) }
    dend_45 { pt3dadd( 99.8753, 15.986, -24.3552, 0.59 ) }
    dend_45 { pt3dadd( 100.763, 16.2887, -24.252, 0.44 ) }
    dend_45 { pt3dadd( 101.619, 16.5655, -24.1017, 0.37 ) }
    dend_45 { pt3dadd( 102.395, 16.7977, -23.9355, 0.37 ) }
    dend_45 { pt3dadd( 103.54, 17.107, -23.7082, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_45 { pt3dadd( 104.218, 17.2621, -23.6009, 0.88 ) }
    dend_45 { pt3dadd( 105.268, 17.4418, -23.5128, 0.66 ) }
    dend_45 { pt3dadd( 105.94, 17.5373, -23.5267, 0.52 ) }
    dend_45 { pt3dadd( 106.756, 17.6373, -23.5839, 0.52 ) }
    dend_45 { pt3dadd( 107.891, 17.7987, -23.6869, 0.88 ) }
    dend_45 { pt3dadd( 108.734, 17.9649, -23.8007, 0.88 ) }
    dend_45 { pt3dadd( 109.825, 18.2507, -23.9804, 0.66 ) }
    dend_45 { pt3dadd( 111.131, 18.6694, -24.2086, 0.44 ) }
    dend_45 { pt3dadd( 112.021, 19.0068, -24.3438, 0.44 ) }
    dend_45 { pt3dadd( 112.951, 19.386, -24.447, 0.66 ) }
    dend_45 { pt3dadd( 113.909, 19.7774, -24.5109, 0.52 ) }
    dend_45 { pt3dadd( 114.646, 20.0782, -24.5407, 0.52 ) }
    dend_45 { pt3dadd( 115.611, 20.4664, -24.5581, 0.74 ) }
    dend_45 { pt3dadd( 116.54, 20.826, -24.5218, 0.44 ) }
    dend_45 { pt3dadd( 117.75, 21.3009, -24.4491, 0.44 ) }
    dend_45 { pt3dadd( 118.873, 21.7568, -24.3481, 0.88 ) }
    dend_45 { pt3dadd( 119.641, 22.0945, -24.2544, 1.03 ) }
    dend_45 { pt3dadd( 120.686, 22.5993, -24.0952, 0.74 ) }
    dend_45 { pt3dadd( 122.091, 23.3826, -23.8397, 0.52 ) }
    dend_45 { pt3dadd( 122.696, 23.7517, -23.7152, 0.96 ) }
    dend_45 { pt3dadd( 123.24, 24.1196, -23.5975, 0.96 ) }
    dend_45 { pt3dadd( 123.991, 24.6362, -23.4413, 0.81 ) }
    dend_45 { pt3dadd( 125.094, 25.3317, -23.2512, 0.52 ) }
    dend_45 { pt3dadd( 125.844, 25.7355, -23.1566, 0.52 ) }
    dend_45 { pt3dadd( 127.117, 26.2876, -23.0513, 0.59 ) }
    dend_45 { pt3dadd( 127.83, 26.5397, -23.0243, 0.81 ) }
    dend_45 { pt3dadd( 128.645, 26.7715, -23.027, 0.81 ) }
    dend_45 { pt3dadd( 129.521, 26.9648, -23.0641, 0.66 ) }
    dend_45 { pt3dadd( 130.236, 27.0871, -23.1229, 0.59 ) }
    dend_45 { pt3dadd( 131.349, 27.2736, -23.2388, 0.59 ) }
    dend_45 { pt3dadd( 132.89, 27.6212, -23.4235, 0.44 ) }
    dend_45 { pt3dadd( 133.771, 27.8533, -23.5818, 0.74 ) }
    dend_45 { pt3dadd( 134.469, 28.0627, -23.7346, 0.74 ) }
    dend_45 { pt3dadd( 134.797, 28.1701, -23.8136, 0.74 ) }
    dend_45 { pt3dadd( 135.823, 28.5243, -24.1061, 0.44 ) }
    dend_45 { pt3dadd( 136.952, 28.9204, -24.4602, 0.44 ) }
    dend_45 { pt3dadd( 138.574, 29.5446, -24.9407, 0.74 ) }
    dend_45 { pt3dadd( 139.305, 29.8596, -25.1914, 0.74 ) }
    dend_45 { pt3dadd( 140.004, 30.2016, -25.4569, 0.74 ) }
    dend_45 { pt3dadd( 140.876, 30.6805, -25.8106, 0.52 ) }
    dend_45 { pt3dadd( 141.634, 31.1466, -26.1287, 0.37 ) }
    dend_45 { pt3dadd( 142.364, 31.6547, -26.4139, 0.66 ) }
    dend_45 { pt3dadd( 142.938, 32.1228, -26.5948, 1.03 ) }
    dend_45 { pt3dadd( 143.431, 32.5314, -26.73, 1.18 ) }
    dend_45 { pt3dadd( 143.788, 32.8233, -26.8363, 1.18 ) }
    dend_45 { pt3dadd( 144.63, 33.4726, -27.0962, 0.59 ) }
    dend_45 { pt3dadd( 145.315, 33.9593, -27.3296, 0.44 ) }
    dend_45 { pt3dadd( 145.841, 34.3084, -27.5137, 0.44 ) }
    dend_45 { pt3dadd( 146.7, 34.8682, -27.8005, 0.81 ) }
    dend_45 { pt3dadd( 148.13, 35.7519, -28.2893, 1.11 ) }
    dend_45 { pt3dadd( 148.731, 36.0926, -28.4924, 1.11 ) }
    dend_45 { pt3dadd( 149.307, 36.3938, -28.6843, 0.96 ) }
    dend_45 { pt3dadd( 149.876, 36.6826, -28.8755, 0.66 ) }
    dend_45 { pt3dadd( 150.726, 37.1142, -29.156, 0.37 ) }
    dend_45 { pt3dadd( 151.718, 37.6074, -29.468, 0.52 ) }
    dend_45 { pt3dadd( 152.724, 38.0816, -29.7361, 0.59 ) }
    dend_45 { pt3dadd( 153.464, 38.4249, -29.9249, 0.44 ) }
    dend_45 { pt3dadd( 154.363, 38.8424, -30.1672, 0.37 ) }
    dend_45 { pt3dadd( 155.53, 39.3997, -30.4947, 0.66 ) }
    dend_45 { pt3dadd( 156.252, 39.7623, -30.6943, 0.44 ) }
    dend_45 { pt3dadd( 156.967, 40.1291, -30.8903, 0.44 ) }
    dend_45 { pt3dadd( 158.069, 40.676, -31.1437, 0.88 ) }
    dend_45 { pt3dadd( 158.8, 41.0132, -31.2556, 1.03 ) }
    dend_45 { pt3dadd( 159.463, 41.2964, -31.295, 1.03 ) }
    dend_45 { pt3dadd( 160.454, 41.712, -31.2465, 0.29 ) }
    dend_45 { pt3dadd( 161.329, 42.0863, -31.133, 0.29 ) }
    dend_45 { pt3dadd( 162.315, 42.5196, -30.9441, 0.29 ) }
    dend_45 { pt3dadd( 163.167, 42.8938, -30.7383, 0.44 ) }
    dend_45 { pt3dadd( 164.263, 43.3312, -30.4297, 1.11 ) }
    dend_45 { pt3dadd( 165.158, 43.6535, -30.1772, 1.4 ) }
    dend_45 { pt3dadd( 165.33, 43.7155, -30.1301, 1.55 ) }
    dend_45 { pt3dadd( 166.115, 44.0271, -29.9325, 0.88 ) }
    dend_45 { pt3dadd( 167.16, 44.4473, -29.7463, 0.29 ) }
    dend_45 { pt3dadd( 168.308, 44.8756, -29.5981, 0.29 ) }
    dend_45 { pt3dadd( 169.177, 45.1796, -29.5244, 0.52 ) }
    dend_45 { pt3dadd( 169.681, 45.353, -29.5025, 0.66 ) }
    dend_45 { pt3dadd( 170.253, 45.5627, -29.4801, 0.44 ) }
    dend_45 { pt3dadd( 171.134, 45.9213, -29.4346, 0.29 ) }
    dend_45 { pt3dadd( 171.814, 46.2369, -29.3959, 0.29 ) }
    dend_45 { pt3dadd( 172.901, 46.7671, -29.3394, 0.66 ) }
    dend_45 { pt3dadd( 173.492, 47.0215, -29.3046, 1.11 ) }
    dend_45 { pt3dadd( 174.033, 47.2256, -29.2971, 0.81 ) }
    dend_45 { pt3dadd( 175.324, 47.7164, -29.3535, 0.52 ) }
    dend_45 { pt3dadd( 175.813, 47.9201, -29.4208, 0.74 ) }
    dend_45 { pt3dadd( 176.669, 48.3193, -29.6048, 0.74 ) }
    dend_45 { pt3dadd( 177.799, 48.911, -29.9457, 0.81 ) }
    dend_45 { pt3dadd( 178.946, 49.5465, -30.4094, 0.44 ) }
    dend_45 { pt3dadd( 179.884, 50.0548, -30.8988, 0.81 ) }
    dend_45 { pt3dadd( 180.905, 50.6028, -31.5741, 1.33 ) }
    dend_45 { pt3dadd( 181.474, 50.905, -32.0141, 1.33 ) }
    dend_45 { pt3dadd( 182.06, 51.2044, -32.5076, 1.11 ) }
    dend_45 { pt3dadd( 183.367, 51.8029, -33.6375, 0.52 ) }
    dend_45 { pt3dadd( 184.507, 52.1943, -34.609, 1.18 ) }
    dend_45 { pt3dadd( 185.399, 52.4115, -35.3358, 1.33 ) }
    dend_45 { pt3dadd( 186.283, 52.5739, -36.0186, 1.03 ) }
    dend_45 { pt3dadd( 187.443, 52.7477, -36.8588, 0.22 ) }
    dend_45 { pt3dadd( 188.253, 52.8465, -37.3866, 0.22 ) }
    dend_45 { pt3dadd( 190.351, 53.0773, -38.6099, 0.88 ) }
    dend_45 { pt3dadd( 191.122, 53.157, -38.9884, 1.03 ) }
    dend_45 { pt3dadd( 191.798, 53.2067, -39.2627, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_45 { pt3dadd( 192.693, 53.2353, -39.5768, 0.96 ) }
    dend_45 { pt3dadd( 193.414, 53.214, -39.8332, 0.66 ) }
    dend_45 { pt3dadd( 194.547, 53.0912, -40.2166, 0.44 ) }
    dend_45 { pt3dadd( 195.729, 52.8907, -40.5694, 0.66 ) }
    dend_45 { pt3dadd( 196.717, 52.6823, -40.8431, 0.74 ) }
    dend_45 { pt3dadd( 197.429, 52.5165, -41.0211, 0.74 ) }
    dend_45 { pt3dadd( 198.994, 52.1327, -41.3613, 0.37 ) }
    dend_45 { pt3dadd( 199.929, 51.9128, -41.5212, 0.52 ) }
    dend_45 { pt3dadd( 201.092, 51.6569, -41.6443, 0.29 ) }
    dend_45 { pt3dadd( 202.384, 51.4208, -41.7338, 0.81 ) }
    dend_45 { pt3dadd( 202.953, 51.3283, -41.7568, 1.47 ) }
    dend_45 { pt3dadd( 203.499, 51.2232, -41.7748, 1.62 ) }
    dend_45 { pt3dadd( 204.146, 51.0579, -41.7968, 1.62 ) }
    dend_45 { pt3dadd( 205.946, 50.476, -41.9948, 0.37 ) }
    dend_45 { pt3dadd( 207.069, 50.0234, -42.2182, 0.29 ) }
    dend_45 { pt3dadd( 208.244, 49.4319, -42.5439, 0.29 ) }
    dend_45 { pt3dadd( 209.242, 48.8456, -42.8517, 0.29 ) }
    dend_45 { pt3dadd( 210.361, 48.1375, -43.2177, 1.47 ) }
    dend_45 { pt3dadd( 211.184, 47.5943, -43.5248, 1.69 ) }
    dend_45 { pt3dadd( 211.614, 47.3031, -43.7272, 1.84 ) }
    dend_45 { pt3dadd( 212.936, 46.4697, -44.4668, 0.52 ) }
    dend_45 { pt3dadd( 213.843, 46.0325, -44.9825, 0.44 ) }
    dend_45 { pt3dadd( 214.542, 45.8049, -45.3578, 0.81 ) }
    dend_45 { pt3dadd( 215.287, 45.6444, -45.7364, 0.81 ) }
    dend_45 { pt3dadd( 216.325, 45.5002, -46.1991, 0.81 ) }
    dend_45 { pt3dadd( 217.882, 45.4132, -46.8735, 0.29 ) }
    dend_45 { pt3dadd( 219.151, 45.4587, -47.4411, 0.29 ) }
    dend_45 { pt3dadd( 219.763, 45.5087, -47.6973, 0.52 ) }
    dend_45 { pt3dadd( 220.735, 45.5962, -48.0709, 0.66 ) }
    dend_45 { pt3dadd( 221.895, 45.6837, -48.4705, 0.81 ) }
    dend_45 { pt3dadd( 222.856, 45.7524, -48.7697, 0.96 ) }
    dend_45 { pt3dadd( 223.68, 45.823, -49.0219, 0.74 ) }
    dend_45 { pt3dadd( 224.915, 45.9424, -49.4089, 0.22 ) }
    dend_45 { pt3dadd( 226.076, 46.0839, -49.7471, 0.22 ) }
    dend_45 { pt3dadd( 227.332, 46.2844, -50.0776, 0.22 ) }
    dend_45 { pt3dadd( 227.86, 46.3866, -50.1904, 0.44 ) }
    dend_45 { pt3dadd( 228.697, 46.5615, -50.3236, 0.44 ) }
    dend_45 { pt3dadd( 230.262, 46.9459, -50.5044, 0.29 ) }
    dend_45 { pt3dadd( 231.587, 47.3161, -50.6144, 1.03 ) }
    dend_45 { pt3dadd( 232.32, 47.5469, -50.6436, 1.25 ) }
    dend_45 { pt3dadd( 233.569, 47.9878, -50.6948, 0.22 ) }
    dend_45 { pt3dadd( 233.985, 48.1358, -50.7204, 0.37 ) }
    dend_45 { pt3dadd( 235.165, 48.5678, -50.8144, 0.22 ) }
    dend_45 { pt3dadd( 235.595, 48.7405, -50.8756, 0.52 ) }
    dend_45 { pt3dadd( 236.34, 49.058, -51.0156, 0.59 ) }
    dend_45 { pt3dadd( 237.971, 49.7604, -51.4007, 0.22 ) }
    dend_45 { pt3dadd( 238.71, 50.068, -51.6156, 0.59 ) }
    dend_45 { pt3dadd( 239.356, 50.3313, -51.8439, 0.59 ) }
    dend_45 { pt3dadd( 240.857, 50.9267, -52.4888, 0.29 ) }
    dend_45 { pt3dadd( 241.934, 51.3601, -53.0223, 0.22 ) }
    dend_45 { pt3dadd( 242.531, 51.5938, -53.3929, 0.22 ) }
    dend_45 { pt3dadd( 243.83, 52.0046, -54.3831, 0.81 ) }
    dend_45 { pt3dadd( 244.701, 52.2266, -55.1238, 1.18 ) }
    dend_45 { pt3dadd( 245.552, 52.3885, -55.8775, 0.74 ) }
    dend_45 { pt3dadd( 246.376, 52.4749, -56.6479, 0.44 ) }
    dend_45 { pt3dadd( 247.71, 52.6711, -58.0029, 0.74 ) }
    dend_45 { pt3dadd( 248.735, 52.9269, -59.1426, 0.52 ) }
    dend_45 { pt3dadd( 249.301, 53.1309, -59.8232, 0.52 ) }
    dend_45 { pt3dadd( 249.867, 53.392, -60.5248, 0.37 ) }
    dend_45 { pt3dadd( 251.015, 54.0375, -61.9925, 0.37 ) }
    dend_45 { pt3dadd( 252.143, 54.7773, -63.4923, 2.5 ) }
    dend_45 { pt3dadd( 253.942, 56.1434, -65.893, 0.29 ) }
    dend_45 { pt3dadd( 254.351, 56.4954, -66.4834, 0.29 ) }
    dend_45 { pt3dadd( 255.005, 57.112, -67.5569, 0.74 ) }
    dend_45 { pt3dadd( 255.466, 57.5662, -68.3817, 1.18 ) }
    dend_45 { pt3dadd( 256.029, 58.114, -69.4352, 1.4 ) }
    dend_45 { pt3dadd( 256.396, 58.4307, -70.1357, 1.4 ) }
    dend_45 { pt3dadd( 257.61, 59.4272, -72.4178, 0.29 ) }
    dend_45 { pt3dadd( 258.47, 60.0586, -73.9809, 0.44 ) }
    dend_45 { pt3dadd( 259.444, 60.7408, -75.7224, 0.22 ) }
    dend_45 { pt3dadd( 260.046, 61.1534, -76.8006, 0.22 ) }
    dend_45 { pt3dadd( 260.606, 61.5623, -77.8798, 0.74 ) }
    dend_45 { pt3dadd( 260.934, 61.824, -78.5365, 0.88 ) }
    dend_45 { pt3dadd( 262.585, 63.2878, -81.8728, 0.29 ) }
    dend_45 { pt3dadd( 263.197, 63.9238, -83.1255, 0.52 ) }
    dend_45 { pt3dadd( 263.969, 64.9047, -84.8035, 0.81 ) }
    dend_45 { pt3dadd( 265.076, 66.4568, -87.3139, 0.81 ) }
    dend_45 { pt3dadd( 265.448, 67.0464, -88.2287, 0.29 ) }
    dend_45 { pt3dadd( 265.715, 67.565, -88.9844, 0.37 ) }
    dend_45 { pt3dadd( 266.016, 68.5208, -90.0576, 0.22 ) }
    dend_45 { pt3dadd( 266.138, 69.0418, -90.5454, 0.81 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 81/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 1.56648, -20.5097, 2.30081, 3.68 ) }
    dend_18 { pt3dadd( 1.24159, -21.894, 2.39375, 3.68 ) }
    dend_18 { pt3dadd( 0.854244, -23.4946, 2.48584, 3.32 ) }
    dend_18 { pt3dadd( 0.395011, -25.2037, 2.57664, 3.17 ) }
    dend_18 { pt3dadd( -0.171789, -27.1646, 2.68868, 3.09 ) }
    dend_18 { pt3dadd( -0.634851, -28.6916, 2.77382, 2.8 ) }
    dend_18 { pt3dadd( -1.05043, -30.0347, 2.86698, 2.73 ) }
    dend_18 { pt3dadd( -1.44955, -31.2571, 2.96407, 2.65 ) }
    dend_18 { pt3dadd( -1.81179, -32.316, 3.06388, 2.65 ) }
    dend_18 { pt3dadd( -2.17748, -33.3778, 3.17098, 2.65 ) }
    dend_18 { pt3dadd( -2.57503, -34.4917, 3.3113, 2.65 ) }
    dend_18 { pt3dadd( -3.08285, -35.8864, 3.5236, 2.5 ) }
    dend_18 { pt3dadd( -3.28869, -36.4669, 3.62781, 2.58 ) }
    dend_18 { pt3dadd( -3.54335, -37.2466, 3.78646, 2.58 ) }
    dend_18 { pt3dadd( -3.72146, -37.9269, 3.93538, 2.65 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 96/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 0.280707, 34.4964, -7.7773, 1.4 ) }
    dend_10 { pt3dadd( 0.528805, 35.3216, -7.84474, 1.4 ) }
    dend_10 { pt3dadd( 0.858713, 36.6971, -7.92068, 1.11 ) }
    dend_10 { pt3dadd( 1.10451, 37.9099, -7.97149, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_10 { pt3dadd( 1.36744, 39.3054, -7.93009, 0.96 ) }
    dend_10 { pt3dadd( 1.65678, 40.5974, -7.9827, 1.11 ) }
    dend_10 { pt3dadd( 1.98891, 41.8171, -8.08605, 0.88 ) }
    dend_10 { pt3dadd( 2.35071, 43.0302, -8.27191, 0.88 ) }
    dend_10 { pt3dadd( 2.59912, 43.6314, -8.48136, 1.11 ) }
    dend_10 { pt3dadd( 3.37672, 44.8742, -9.22164, 1.11 ) }
    dend_10 { pt3dadd( 5.06997, 46.8413, -10.9036, 1.4 ) }
    dend_10 { pt3dadd( 5.56015, 47.3457, -11.4143, 1.62 ) }
    dend_10 { pt3dadd( 6.12535, 47.9242, -12.0221, 1.11 ) }
    dend_10 { pt3dadd( 7.38119, 49.2456, -13.3218, 0.88 ) }
    dend_10 { pt3dadd( 8.03758, 50.0067, -13.9505, 1.47 ) }
    dend_10 { pt3dadd( 8.4811, 50.5888, -14.3229, 1.47 ) }
    dend_10 { pt3dadd( 9.16987, 51.6267, -14.6876, 1.18 ) }
    dend_10 { pt3dadd( 9.79449, 52.6167, -14.9285, 1.33 ) }
    dend_10 { pt3dadd( 10.3151, 53.4668, -15.0519, 1.33 ) }
    dend_10 { pt3dadd( 10.8654, 54.421, -15.1456, 1.18 ) }
    dend_10 { pt3dadd( 11.577, 55.74, -15.2824, 1.03 ) }
    dend_10 { pt3dadd( 12.0345, 56.705, -15.4266, 0.88 ) }
    dend_10 { pt3dadd( 12.4491, 57.7132, -15.6605, 0.88 ) }
    dend_10 { pt3dadd( 12.7646, 58.7695, -16.0206, 1.03 ) }
    dend_10 { pt3dadd( 13.0837, 60.4524, -16.7856, 1.18 ) }
    dend_10 { pt3dadd( 13.2083, 61.4827, -17.3401, 1.11 ) }
    dend_10 { pt3dadd( 13.3359, 62.9122, -18.1736, 1.25 ) }
    dend_10 { pt3dadd( 13.4307, 63.8682, -18.7512, 1.11 ) }
    dend_10 { pt3dadd( 13.6155, 65.0159, -19.4513, 0.96 ) }
    dend_10 { pt3dadd( 13.8845, 65.9627, -19.9812, 0.88 ) }
    dend_10 { pt3dadd( 14.4272, 67.0868, -20.4681, 0.88 ) }
    dend_10 { pt3dadd( 15.0033, 67.9682, -20.7191, 0.96 ) }
    dend_10 { pt3dadd( 15.53, 68.6516, -20.7993, 1.03 ) }
    dend_10 { pt3dadd( 16.1232, 69.3919, -20.8128, 1.03 ) }
    dend_10 { pt3dadd( 16.8189, 70.2959, -20.7717, 0.88 ) }
    dend_10 { pt3dadd( 17.1952, 70.8988, -20.7439, 0.74 ) }
    dend_10 { pt3dadd( 17.6635, 72.1189, -20.7867, 1.69 ) }
    dend_10 { pt3dadd( 17.7922, 72.814, -20.8653, 2.28 ) }
    dend_10 { pt3dadd( 17.8436, 73.5242, -20.9757, 2.28 ) }
    dend_10 { pt3dadd( 17.8589, 74.433, -21.1295, 2.06 ) }
    dend_10 { pt3dadd( 17.8668, 75.4017, -21.2952, 1.62 ) }
    dend_10 { pt3dadd( 17.9325, 76.6026, -21.5112, 1.18 ) }
    dend_10 { pt3dadd( 18.0209, 77.3318, -21.6509, 1.4 ) }
    dend_10 { pt3dadd( 18.1775, 78.1319, -21.8139, 1.4 ) }
    dend_10 { pt3dadd( 18.4298, 79.1181, -22.0687, 1.18 ) }
    dend_10 { pt3dadd( 18.6753, 79.9904, -22.3315, 1.03 ) }
    dend_10 { pt3dadd( 19.1292, 81.46, -22.8517, 0.81 ) }
    dend_10 { pt3dadd( 19.4326, 82.3537, -23.1942, 0.81 ) }
    dend_10 { pt3dadd( 19.6945, 83.0855, -23.478, 0.81 ) }
    dend_10 { pt3dadd( 20.0434, 84.041, -23.8329, 0.96 ) }
    dend_10 { pt3dadd( 20.3281, 84.8157, -24.0875, 1.33 ) }
    dend_10 { pt3dadd( 20.7097, 85.8621, -24.356, 1.11 ) }
    dend_10 { pt3dadd( 21.1225, 87.0004, -24.5516, 0.96 ) }
    dend_10 { pt3dadd( 21.3948, 87.695, -24.6268, 1.18 ) }
    dend_10 { pt3dadd( 21.745, 88.5415, -24.683, 1.18 ) }
    dend_10 { pt3dadd( 22.1051, 89.3995, -24.7099, 1.33 ) }
    dend_10 { pt3dadd( 22.385, 90.0873, -24.7445, 1.18 ) }
    dend_10 { pt3dadd( 22.5822, 90.6096, -24.7767, 1.18 ) }
    dend_10 { pt3dadd( 22.8809, 91.387, -24.8549, 0.88 ) }
    dend_10 { pt3dadd( 23.1997, 92.1439, -24.9541, 0.74 ) }
    dend_10 { pt3dadd( 23.562, 92.9432, -25.0725, 0.74 ) }
    dend_10 { pt3dadd( 24.1186, 94.053, -25.2722, 0.88 ) }
    dend_10 { pt3dadd( 24.6042, 94.9252, -25.4272, 1.11 ) }
    dend_10 { pt3dadd( 25.0686, 95.7239, -25.59, 1.11 ) }
    dend_10 { pt3dadd( 25.4792, 96.4182, -25.725, 0.96 ) }
    dend_10 { pt3dadd( 26.0346, 97.355, -25.8668, 1.18 ) }
    dend_10 { pt3dadd( 26.6103, 98.3599, -25.9393, 0.96 ) }
    dend_10 { pt3dadd( 27.0345, 99.1817, -25.9207, 0.81 ) }
    dend_10 { pt3dadd( 27.6685, 100.529, -25.7618, 0.88 ) }
    dend_10 { pt3dadd( 28.0869, 101.433, -25.5538, 0.88 ) }
    dend_10 { pt3dadd( 28.4562, 102.259, -25.2765, 1.03 ) }
    dend_10 { pt3dadd( 28.7846, 103.016, -24.9724, 1.11 ) }
    dend_10 { pt3dadd( 29.0916, 103.778, -24.647, 0.88 ) }
    dend_10 { pt3dadd( 29.4345, 104.637, -24.291, 0.66 ) }
    dend_10 { pt3dadd( 29.7079, 105.305, -24.0092, 0.66 ) }
    dend_10 { pt3dadd( 30.0647, 106.179, -23.7262, 0.66 ) }
    dend_10 { pt3dadd( 30.6789, 107.749, -23.3475, 0.96 ) }
    dend_10 { pt3dadd( 31.0125, 108.735, -23.2025, 1.4 ) }
    dend_10 { pt3dadd( 31.2323, 109.504, -23.1401, 1.55 ) }
    dend_10 { pt3dadd( 31.3643, 110.094, -23.1028, 1.84 ) }
    dend_10 { pt3dadd( 31.5453, 110.983, -23.0293, 1.92 ) }
    dend_10 { pt3dadd( 31.7152, 111.726, -22.93, 1.77 ) }
    dend_10 { pt3dadd( 32.0135, 112.87, -22.6894, 1.25 ) }
    dend_10 { pt3dadd( 32.3166, 113.856, -22.3935, 1.18 ) }
    dend_10 { pt3dadd( 32.6508, 114.773, -22.0572, 1.11 ) }
    dend_10 { pt3dadd( 33.0224, 115.664, -21.668, 1.25 ) }
    dend_10 { pt3dadd( 33.4584, 116.588, -21.2032, 1.33 ) }
    dend_10 { pt3dadd( 33.7162, 117.076, -20.9505, 1.33 ) }
    dend_10 { pt3dadd( 34.1754, 117.871, -20.5384, 1.25 ) }
    dend_10 { pt3dadd( 34.5988, 118.603, -20.2254, 0.74 ) }
    dend_10 { pt3dadd( 35.0923, 119.489, -19.9669, 0.52 ) }
    dend_10 { pt3dadd( 35.4491, 120.184, -19.8595, 0.52 ) }
    dend_10 { pt3dadd( 35.8422, 120.999, -19.7864, 0.81 ) }
    dend_10 { pt3dadd( 36.3685, 122.144, -19.7628, 1.4 ) }
    dend_10 { pt3dadd( 36.8087, 123.131, -19.8315, 1.69 ) }
    dend_10 { pt3dadd( 37.1157, 123.84, -19.9295, 1.84 ) }
    dend_10 { pt3dadd( 37.3882, 124.437, -20.089, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 93/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.280707, 34.4964, -7.7773, 1.4 ) }
    dend_1 { pt3dadd( -0.727512, 35.0593, -7.66275, 1.4 ) }
    dend_1 { pt3dadd( -1.50766, 35.456, -7.54084, 0.96 ) }
    dend_1 { pt3dadd( -2.20004, 35.8284, -7.43885, 1.25 ) }
    dend_1 { pt3dadd( -2.78376, 36.1787, -7.36513, 1.4 ) }
    dend_1 { pt3dadd( -3.23206, 36.4771, -7.31753, 1.47 ) }
    dend_1 { pt3dadd( -4.54504, 37.4392, -7.20599, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_1 { pt3dadd( -5.20102, 37.9513, -7.14593, 1.11 ) }
    dend_1 { pt3dadd( -5.93389, 38.6337, -7.09081, 1.11 ) }
    dend_1 { pt3dadd( -6.60198, 39.3777, -7.06449, 1.03 ) }
    dend_1 { pt3dadd( -7.09733, 39.9887, -7.08305, 1.03 ) }
    dend_1 { pt3dadd( -7.71881, 40.8067, -7.18259, 1.03 ) }
    dend_1 { pt3dadd( -8.13068, 41.3427, -7.31421, 1.18 ) }
    dend_1 { pt3dadd( -8.8046, 42.0985, -7.577, 1.18 ) }
    dend_1 { pt3dadd( -9.71743, 42.8633, -8.00803, 0.81 ) }
    dend_1 { pt3dadd( -10.3247, 43.2, -8.33079, 0.88 ) }
    dend_1 { pt3dadd( -11.0128, 43.4415, -8.72336, 1.11 ) }
    dend_1 { pt3dadd( -11.8549, 43.6382, -9.21599, 0.96 ) }
    dend_1 { pt3dadd( -12.4124, 43.7399, -9.53971, 0.96 ) }
    dend_1 { pt3dadd( -13.2134, 43.8773, -9.99102, 0.88 ) }
    dend_1 { pt3dadd( -13.9301, 44.0418, -10.3702, 0.81 ) }
    dend_1 { pt3dadd( -14.8838, 44.3724, -10.8027, 1.11 ) }
    dend_1 { pt3dadd( -15.331, 44.5745, -10.9828, 1.25 ) }
    dend_1 { pt3dadd( -15.7716, 44.8188, -11.1548, 1.25 ) }
    dend_1 { pt3dadd( -16.4119, 45.2151, -11.3891, 0.88 ) }
    dend_1 { pt3dadd( -17.0054, 45.6117, -11.5896, 0.88 ) }
    dend_1 { pt3dadd( -17.5676, 46.0026, -11.7552, 0.96 ) }
    dend_1 { pt3dadd( -18.234, 46.4748, -11.9149, 0.96 ) }
    dend_1 { pt3dadd( -18.767, 46.8486, -12.0263, 1.03 ) }
    dend_1 { pt3dadd( -19.3462, 47.2471, -12.1302, 1.25 ) }
    dend_1 { pt3dadd( -19.9565, 47.6559, -12.2123, 1.25 ) }
    dend_1 { pt3dadd( -20.3567, 47.9209, -12.2549, 1.11 ) }
    dend_1 { pt3dadd( -20.8516, 48.241, -12.2873, 1.25 ) }
    dend_1 { pt3dadd( -21.3345, 48.5494, -12.2881, 1.4 ) }
    dend_1 { pt3dadd( -21.8151, 48.8577, -12.2706, 1.4 ) }
    dend_1 { pt3dadd( -22.4137, 49.2446, -12.2345, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 29/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.54828, 42.8383, -2.3154, 0.908168 ) }
    axon_1 { pt3dadd( -3.39577, 57.8143, -2.3154, 0.908168 ) }
    axon_1 { pt3dadd( -4.24326, 72.7904, -2.3154, 0.908168 ) }
    // Section: dend_56, id: dend_56, parent: dend_50 (entry count 32/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -42.5109, 37.4033, 45.1633, 0.88 ) }
    dend_56 { pt3dadd( -43.3589, 37.6157, 52.8499, 0.88 ) }
    dend_56 { pt3dadd( -44.8609, 36.8899, 60.4075, 0.88 ) }
    dend_56 { pt3dadd( -45.749, 37.0867, 68.09, 0.88 ) }
    dend_56 { pt3dadd( -46.9503, 36.6663, 75.7225, 0.88 ) }
    dend_56 { pt3dadd( -48.8431, 36.2262, 83.2123, 0.88 ) }
    dend_56 { pt3dadd( -52.1061, 35.3346, 90.1739, 0.88 ) }
    dend_56 { pt3dadd( -54.5065, 33.8076, 97.3784, 0.88 ) }
    dend_56 { pt3dadd( -55.5125, 32.9682, 105.008, 0.88 ) }
    dend_56 { pt3dadd( -57.6436, 32.3935, 112.424, 0.88 ) }
    dend_56 { pt3dadd( -58.685, 32.2429, 120.089, 0.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 43/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -42.5109, 37.4033, 45.1633, 0.22 ) }
    dend_51 { pt3dadd( -47.5134, 38.7506, 46.7713, 0.88 ) }
    dend_51 { pt3dadd( -52.5971, 38.9383, 48.5927, 0.88 ) }
    dend_51 { pt3dadd( -57.3968, 40.1283, 50.8002, 0.88 ) }
    dend_51 { pt3dadd( -62.0979, 42.1677, 52.6129, 0.88 ) }
    dend_51 { pt3dadd( -66.7008, 44.3786, 54.4838, 0.88 ) }
    dend_51 { pt3dadd( -71.7673, 45.1107, 56.2403, 0.88 ) }
    dend_51 { pt3dadd( -76.9025, 45.1787, 57.9179, 0.88 ) }
    dend_51 { pt3dadd( -82.0374, 46.0472, 59.4087, 0.88 ) }
    dend_51 { pt3dadd( -87.1436, 47.4775, 60.5812, 0.88 ) }
    dend_51 { pt3dadd( -92.1023, 49.5649, 61.442, 0.88 ) }
    dend_51 { pt3dadd( -96.7981, 51.8956, 62.9174, 0.88 ) }
    dend_51 { pt3dadd( -101.395, 53.8255, 65.0684, 0.88 ) }
    dend_51 { pt3dadd( -105.278, 56.4387, 67.8255, 0.88 ) }
    dend_51 { pt3dadd( -108.742, 58.3086, 71.5316, 0.88 ) }
    dend_51 { pt3dadd( -111.662, 59.4901, 75.9093, 0.88 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 59/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -22.7824, 114.276, 18.4519, 0.66 ) }
    dend_49 { pt3dadd( -24.1016, 116.893, 16.3584, 0.66 ) }
    dend_49 { pt3dadd( -24.5245, 117.663, 15.7083, 0.66 ) }
    dend_49 { pt3dadd( -24.9355, 118.367, 15.1117, 0.74 ) }
    dend_49 { pt3dadd( -25.3337, 119.014, 14.5682, 0.88 ) }
    dend_49 { pt3dadd( -25.6621, 119.523, 14.1607, 0.88 ) }
    dend_49 { pt3dadd( -26.1647, 120.279, 13.5957, 0.74 ) }
    dend_49 { pt3dadd( -26.6406, 120.933, 13.2104, 0.52 ) }
    dend_49 { pt3dadd( -27.0408, 121.517, 12.8616, 0.96 ) }
    dend_49 { pt3dadd( -27.4049, 122.063, 12.5434, 0.96 ) }
    dend_49 { pt3dadd( -28.0168, 122.964, 12.0384, 0.37 ) }
    dend_49 { pt3dadd( -28.5505, 123.722, 11.6324, 0.37 ) }
    dend_49 { pt3dadd( -29.167, 124.545, 11.2217, 0.66 ) }
    dend_49 { pt3dadd( -29.6331, 125.138, 10.9378, 0.81 ) }
    dend_49 { pt3dadd( -30.1993, 125.838, 10.6111, 0.81 ) }
    dend_49 { pt3dadd( -30.6822, 126.425, 10.3526, 0.66 ) }
    dend_49 { pt3dadd( -31.1738, 126.995, 10.0866, 0.66 ) }
    dend_49 { pt3dadd( -31.5654, 127.416, 9.87706, 0.66 ) }
    dend_49 { pt3dadd( -32.0227, 127.88, 9.65066, 0.37 ) }
    dend_49 { pt3dadd( -32.4073, 128.305, 9.45815, 0.37 ) }
    dend_49 { pt3dadd( -33.0551, 129.122, 9.11176, 0.74 ) }
    dend_49 { pt3dadd( -33.4229, 129.633, 8.9408, 0.74 ) }
    dend_49 { pt3dadd( -33.9902, 130.47, 8.71108, 0.29 ) }
    dend_49 { pt3dadd( -34.4404, 131.154, 8.538, 0.29 ) }
    dend_49 { pt3dadd( -34.9497, 131.956, 8.33023, 0.66 ) }
    dend_49 { pt3dadd( -35.1339, 132.258, 8.24587, 0.66 ) }
    dend_49 { pt3dadd( -35.5922, 133.079, 8.01293, 0.52 ) }
    dend_49 { pt3dadd( -35.8204, 133.522, 7.89167, 0.37 ) }
    dend_49 { pt3dadd( -36.0328, 133.936, 7.76114, 0.37 ) }
    dend_49 { pt3dadd( -36.3688, 134.514, 7.53936, 0.59 ) }
    dend_49 { pt3dadd( -36.709, 135.051, 7.30017, 1.11 ) }
    dend_49 { pt3dadd( -37.1097, 135.712, 7.01505, 1.18 ) }
    dend_49 { pt3dadd( -37.4113, 136.253, 6.78963, 0.96 ) }
    dend_49 { pt3dadd( -37.924, 137.206, 6.45215, 0.74 ) }
    dend_49 { pt3dadd( -38.3395, 137.99, 6.22483, 0.66 ) }
    dend_49 { pt3dadd( -38.7139, 138.684, 6.064, 0.37 ) }
    dend_49 { pt3dadd( -39.1493, 139.508, 5.91527, 0.37 ) }
    dend_49 { pt3dadd( -39.4392, 140.111, 5.84538, 0.52 ) }
    dend_49 { pt3dadd( -39.7228, 140.806, 5.76405, 0.52 ) }
    dend_49 { pt3dadd( -40.1049, 141.897, 5.67178, 0.66 ) }
    dend_49 { pt3dadd( -40.3632, 142.693, 5.63667, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_49 { pt3dadd( -40.6467, 143.521, 5.63706, 0.81 ) }
    dend_49 { pt3dadd( -41.1669, 144.857, 5.68123, 0.59 ) }
    dend_49 { pt3dadd( -41.5487, 145.762, 5.75407, 0.52 ) }
    dend_49 { pt3dadd( -41.8469, 146.465, 5.85398, 0.52 ) }
    dend_49 { pt3dadd( -42.2519, 147.473, 6.06906, 0.44 ) }
    dend_49 { pt3dadd( -42.5161, 148.172, 6.23911, 0.44 ) }
    dend_49 { pt3dadd( -42.7531, 148.822, 6.40929, 0.44 ) }
    dend_49 { pt3dadd( -42.9533, 149.34, 6.52016, 0.44 ) }
    dend_49 { pt3dadd( -43.1499, 149.812, 6.56835, 0.44 ) }
    dend_49 { pt3dadd( -43.387, 150.398, 6.50107, 0.44 ) }
    dend_49 { pt3dadd( -43.5966, 151.003, 6.31014, 0.59 ) }
    dend_49 { pt3dadd( -43.7663, 151.671, 5.9859, 0.66 ) }
    dend_49 { pt3dadd( -43.9032, 152.462, 5.57088, 0.52 ) }
    dend_49 { pt3dadd( -44.0123, 153.431, 5.07031, 0.52 ) }
    dend_49 { pt3dadd( -44.0659, 154.251, 4.67099, 0.52 ) }
    dend_49 { pt3dadd( -44.0632, 155.312, 4.18147, 0.59 ) }
    dend_49 { pt3dadd( -44.0038, 156.503, 3.68124, 0.59 ) }
    dend_49 { pt3dadd( -43.9205, 157.469, 3.29762, 0.52 ) }
    dend_49 { pt3dadd( -43.8299, 158.41, 2.95623, 0.52 ) }
    dend_49 { pt3dadd( -43.7827, 158.992, 2.74618, 0.52 ) }
    dend_49 { pt3dadd( -43.8141, 159.934, 2.41772, 0.44 ) }
    dend_49 { pt3dadd( -43.9461, 160.517, 2.26105, 0.44 ) }
    dend_49 { pt3dadd( -44.1542, 161.069, 2.13554, 0.44 ) }
    dend_49 { pt3dadd( -44.6007, 161.965, 1.90958, 0.44 ) }
    dend_49 { pt3dadd( -45.0782, 162.773, 1.70748, 0.44 ) }
    dend_49 { pt3dadd( -45.6024, 163.624, 1.52322, 0.44 ) }
    dend_49 { pt3dadd( -46.0946, 164.482, 1.39116, 0.52 ) }
    dend_49 { pt3dadd( -46.4234, 165.207, 1.32039, 0.66 ) }
    dend_49 { pt3dadd( -46.6681, 165.948, 1.26363, 0.37 ) }
    dend_49 { pt3dadd( -46.8233, 166.712, 1.22681, 0.29 ) }
    dend_49 { pt3dadd( -46.9163, 167.703, 1.20203, 0.44 ) }
    dend_49 { pt3dadd( -46.9069, 168.655, 1.20343, 0.74 ) }
    dend_49 { pt3dadd( -46.8176, 169.531, 1.23564, 1.03 ) }
    dend_49 { pt3dadd( -46.6609, 170.198, 1.26693, 1.03 ) }
    dend_49 { pt3dadd( -46.4176, 170.911, 1.24057, 0.88 ) }
    dend_49 { pt3dadd( -46.031, 171.917, 1.11229, 0.52 ) }
    dend_49 { pt3dadd( -45.7299, 172.74, 0.912818, 0.52 ) }
    dend_49 { pt3dadd( -45.5714, 173.18, 0.718766, 0.37 ) }
    dend_49 { pt3dadd( -45.1174, 174.41, 0.0278941, 0.37 ) }
    dend_49 { pt3dadd( -44.5672, 175.702, -0.829943, 0.37 ) }
    dend_49 { pt3dadd( -44.27, 176.275, -1.2524, 0.37 ) }
    dend_49 { pt3dadd( -43.9391, 176.897, -1.72253, 0.37 ) }
    dend_49 { pt3dadd( -43.2859, 178.262, -2.70659, 0.37 ) }
    dend_49 { pt3dadd( -43.0424, 178.883, -3.11436, 0.29 ) }
    dend_49 { pt3dadd( -42.7676, 179.809, -3.64564, 0.29 ) }
    dend_49 { pt3dadd( -42.5179, 180.717, -4.12682, 0.29 ) }
    dend_49 { pt3dadd( -42.3129, 181.641, -4.60619, 0.37 ) }
    dend_49 { pt3dadd( -42.2013, 182.32, -4.97709, 0.37 ) }
    dend_49 { pt3dadd( -42.1274, 183.19, -5.49736, 0.37 ) }
    dend_49 { pt3dadd( -42.0256, 184.163, -6.16466, 0.44 ) }
    dend_49 { pt3dadd( -41.9446, 184.694, -6.55922, 0.59 ) }
    dend_49 { pt3dadd( -41.7691, 185.348, -7.10953, 0.59 ) }
    dend_49 { pt3dadd( -41.3234, 186.557, -8.19349, 0.74 ) }
    dend_49 { pt3dadd( -40.9642, 187.458, -8.99862, 0.88 ) }
    dend_49 { pt3dadd( -40.5315, 188.548, -9.97203, 0.81 ) }
    dend_49 { pt3dadd( -40.1853, 189.496, -10.8275, 1.03 ) }
    dend_49 { pt3dadd( -39.5307, 191.503, -12.6847, 0.74 ) }
    dend_49 { pt3dadd( -39.279, 192.577, -13.6727, 0.66 ) }
    dend_49 { pt3dadd( -39.1865, 193.126, -14.2279, 0.74 ) }
    dend_49 { pt3dadd( -39.1195, 193.862, -15.0425, 0.74 ) }
    dend_49 { pt3dadd( -39.1183, 194.452, -15.803, 0.59 ) }
    dend_49 { pt3dadd( -39.1681, 195.04, -16.7109, 0.44 ) }
    dend_49 { pt3dadd( -39.3358, 195.805, -18.2735, 0.29 ) }
    dend_49 { pt3dadd( -39.6506, 196.88, -21.0591, 0.74 ) }
    dend_49 { pt3dadd( -39.7178, 197.099, -21.7301, 1.25 ) }
    dend_49 { pt3dadd( -39.8659, 197.572, -23.3088, 1.77 ) }
    dend_49 { pt3dadd( -39.988, 197.938, -24.5472, 1.92 ) }
    dend_49 { pt3dadd( -40.1673, 198.384, -26.1511, 0.74 ) }
    dend_49 { pt3dadd( -40.3041, 198.642, -27.1351, 0.52 ) }
    dend_49 { pt3dadd( -40.6055, 199.018, -28.5106, 0.52 ) }
    dend_49 { pt3dadd( -40.8464, 199.259, -29.5031, 0.66 ) }
    dend_49 { pt3dadd( -41.1961, 199.529, -30.6459, 0.52 ) }
    dend_49 { pt3dadd( -41.7202, 199.889, -32.0531, 0.52 ) }
    dend_49 { pt3dadd( -42.2295, 200.241, -33.2545, 0.52 ) }
    dend_49 { pt3dadd( -42.7963, 200.648, -34.5646, 0.66 ) }
    dend_49 { pt3dadd( -43.2087, 200.969, -35.4579, 0.66 ) }
    dend_49 { pt3dadd( -43.511, 201.293, -36.2359, 0.81 ) }
    dend_49 { pt3dadd( -43.7538, 201.676, -37.0048, 0.59 ) }
    dend_49 { pt3dadd( -43.8503, 202.005, -37.7446, 0.59 ) }
    dend_49 { pt3dadd( -43.8649, 202.806, -39.8597, 0.81 ) }
    dend_49 { pt3dadd( -43.7548, 203.194, -41.191, 0.74 ) }
    dend_49 { pt3dadd( -43.31, 203.677, -43.8078, 0.88 ) }
    dend_49 { pt3dadd( -42.835, 203.759, -45.6647, 1.11 ) }
    dend_49 { pt3dadd( -41.4501, 203.387, -49.8614, 0.74 ) }
    dend_49 { pt3dadd( -41.0821, 203.152, -50.698, 0.88 ) }
    dend_49 { pt3dadd( -40.3957, 202.423, -51.7237, 0.96 ) }
    dend_49 { pt3dadd( -39.747, 201.492, -52.2895, 0.74 ) }
    dend_49 { pt3dadd( -38.7776, 199.663, -52.5743, 0.66 ) }
    dend_49 { pt3dadd( -37.321, 196.581, -52.4791, 0.29 ) }
    dend_49 { pt3dadd( -36.8268, 195.264, -52.134, 0.29 ) }
    dend_49 { pt3dadd( -36.2974, 193.733, -51.6039, 0.29 ) }
    dend_49 { pt3dadd( -36.0092, 192.772, -51.1713, 0.66 ) }
    dend_49 { pt3dadd( -35.865, 192.163, -50.8331, 0.74 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 93/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -22.7824, 114.276, 18.4519, 0.29 ) }
    dend_48 { pt3dadd( -23.4332, 115.268, 18.7471, 0.29 ) }
    dend_48 { pt3dadd( -23.775, 115.815, 18.8976, 0.37 ) }
    dend_48 { pt3dadd( -24.1681, 116.43, 19.0799, 0.52 ) }
    dend_48 { pt3dadd( -24.433, 116.826, 19.1916, 0.66 ) }
    dend_48 { pt3dadd( -24.9154, 117.489, 19.3581, 0.81 ) }
    dend_48 { pt3dadd( -25.43, 118.154, 19.4995, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -25.8929, 118.717, 19.6064, 0.74 ) }
    dend_48 { pt3dadd( -26.7313, 119.7, 19.7246, 0.29 ) }
    dend_48 { pt3dadd( -27.1, 120.117, 19.7419, 0.29 ) }
    dend_48 { pt3dadd( -27.5738, 120.651, 19.7518, 0.37 ) }
    dend_48 { pt3dadd( -28.0618, 121.226, 19.7495, 0.37 ) }
    dend_48 { pt3dadd( -28.6707, 122.002, 19.7635, 0.44 ) }
    dend_48 { pt3dadd( -28.9358, 122.417, 19.7823, 0.66 ) }
    dend_48 { pt3dadd( -29.2356, 123.041, 19.8175, 0.81 ) }
    dend_48 { pt3dadd( -29.506, 123.709, 19.8681, 0.81 ) }
    dend_48 { pt3dadd( -29.7432, 124.299, 19.9062, 0.52 ) }
    dend_48 { pt3dadd( -30.0289, 125.018, 19.9418, 0.52 ) }
    dend_48 { pt3dadd( -30.3405, 125.89, 19.9815, 0.52 ) }
    dend_48 { pt3dadd( -30.628, 126.819, 20.0235, 0.44 ) }
    dend_48 { pt3dadd( -30.8572, 127.735, 20.0472, 0.37 ) }
    dend_48 { pt3dadd( -31.1087, 128.891, 20.0524, 0.29 ) }
    dend_48 { pt3dadd( -31.2913, 129.792, 20.0516, 0.44 ) }
    dend_48 { pt3dadd( -31.4628, 130.764, 20.0419, 0.52 ) }
    dend_48 { pt3dadd( -31.5742, 131.533, 20.0281, 0.37 ) }
    dend_48 { pt3dadd( -31.6619, 132.305, 20.015, 0.37 ) }
    dend_48 { pt3dadd( -31.7318, 132.941, 20.0038, 0.59 ) }
    dend_48 { pt3dadd( -31.7823, 133.557, 20.001, 0.59 ) }
    dend_48 { pt3dadd( -31.8568, 134.257, 19.9909, 0.59 ) }
    dend_48 { pt3dadd( -31.9836, 135.176, 19.9624, 0.37 ) }
    dend_48 { pt3dadd( -32.1528, 136.288, 19.9215, 0.29 ) }
    dend_48 { pt3dadd( -32.2643, 137.288, 19.915, 0.29 ) }
    dend_48 { pt3dadd( -32.3175, 138.296, 19.9328, 0.29 ) }
    dend_48 { pt3dadd( -32.308, 138.794, 19.95, 0.29 ) }
    dend_48 { pt3dadd( -32.2487, 139.529, 19.9841, 0.44 ) }
    dend_48 { pt3dadd( -32.1758, 140.055, 20.0087, 0.44 ) }
    dend_48 { pt3dadd( -32.0068, 141.04, 20.0292, 0.59 ) }
    dend_48 { pt3dadd( -31.9109, 141.582, 20.013, 0.74 ) }
    dend_48 { pt3dadd( -31.8091, 142.184, 19.969, 0.74 ) }
    dend_48 { pt3dadd( -31.6923, 142.733, 19.9263, 0.59 ) }
    dend_48 { pt3dadd( -31.4374, 143.703, 19.8677, 0.88 ) }
    dend_48 { pt3dadd( -31.2257, 144.471, 19.8325, 1.18 ) }
    dend_48 { pt3dadd( -30.9783, 145.493, 19.7793, 0.37 ) }
    dend_48 { pt3dadd( -30.8994, 145.895, 19.7529, 0.37 ) }
    dend_48 { pt3dadd( -30.7462, 146.792, 19.6886, 0.37 ) }
    dend_48 { pt3dadd( -30.5514, 147.777, 19.6282, 0.29 ) }
    dend_48 { pt3dadd( -30.3229, 148.68, 19.5829, 0.37 ) }
    dend_48 { pt3dadd( -30.0477, 149.559, 19.5629, 0.29 ) }
    dend_48 { pt3dadd( -29.6929, 150.456, 19.5278, 0.29 ) }
    dend_48 { pt3dadd( -29.5383, 150.758, 19.4969, 0.29 ) }
    dend_48 { pt3dadd( -28.987, 151.553, 19.3654, 0.59 ) }
    dend_48 { pt3dadd( -28.4873, 152.091, 19.2741, 0.74 ) }
    dend_48 { pt3dadd( -28.0784, 152.452, 19.2158, 0.74 ) }
    dend_48 { pt3dadd( -27.3657, 153.009, 19.1389, 0.66 ) }
    dend_48 { pt3dadd( -26.5157, 153.611, 19.0557, 0.44 ) }
    dend_48 { pt3dadd( -25.965, 153.999, 19.0118, 0.44 ) }
    dend_48 { pt3dadd( -25.13, 154.551, 18.9678, 0.88 ) }
    dend_48 { pt3dadd( -24.7612, 154.759, 18.9668, 1.33 ) }
    dend_48 { pt3dadd( -24.2979, 154.982, 18.9547, 1.69 ) }
    dend_48 { pt3dadd( -23.4955, 155.337, 18.9336, 1.84 ) }
    dend_48 { pt3dadd( -22.1966, 155.943, 18.8885, 0.29 ) }
    dend_48 { pt3dadd( -21.4284, 156.374, 18.8451, 0.29 ) }
    dend_48 { pt3dadd( -20.6631, 156.918, 18.784, 0.29 ) }
    dend_48 { pt3dadd( -19.4802, 157.952, 18.7051, 0.59 ) }
    dend_48 { pt3dadd( -19.0093, 158.458, 18.6671, 0.59 ) }
    dend_48 { pt3dadd( -18.3349, 159.388, 18.5878, 0.44 ) }
    dend_48 { pt3dadd( -17.713, 160.538, 18.4611, 0.59 ) }
    dend_48 { pt3dadd( -17.4122, 161.262, 18.3933, 0.44 ) }
    dend_48 { pt3dadd( -17.2031, 161.875, 18.365, 0.29 ) }
    dend_48 { pt3dadd( -16.9425, 162.671, 18.3676, 0.29 ) }
    dend_48 { pt3dadd( -16.7849, 163.12, 18.3403, 0.29 ) }
    dend_48 { pt3dadd( -16.525, 163.875, 18.2819, 0.52 ) }
    dend_48 { pt3dadd( -16.352, 164.357, 18.2347, 0.52 ) }
    dend_48 { pt3dadd( -16.1393, 164.978, 18.18, 0.37 ) }
    dend_48 { pt3dadd( -15.8134, 165.958, 18.1063, 0.44 ) }
    dend_48 { pt3dadd( -15.4642, 166.895, 18.0602, 0.44 ) }
    dend_48 { pt3dadd( -15.0952, 167.694, 18.0383, 0.74 ) }
    dend_48 { pt3dadd( -14.6266, 168.596, 18.0361, 0.81 ) }
    dend_48 { pt3dadd( -13.9686, 169.915, 18.0633, 0.29 ) }
    dend_48 { pt3dadd( -13.8009, 170.306, 18.0764, 0.29 ) }
    dend_48 { pt3dadd( -13.5993, 170.84, 18.0945, 0.29 ) }
    dend_48 { pt3dadd( -13.3357, 171.509, 18.1208, 0.29 ) }
    dend_48 { pt3dadd( -12.9775, 172.331, 18.1248, 0.37 ) }
    dend_48 { pt3dadd( -12.6118, 173.089, 18.1544, 0.44 ) }
    dend_48 { pt3dadd( -12.1317, 173.832, 18.1887, 0.44 ) }
    dend_48 { pt3dadd( -11.55, 174.586, 18.2041, 0.44 ) }
    dend_48 { pt3dadd( -11.07, 175.211, 18.2399, 0.44 ) }
    dend_48 { pt3dadd( -10.776, 175.602, 18.274, 0.66 ) }
    dend_48 { pt3dadd( -10.4445, 176.014, 18.3174, 0.66 ) }
    dend_48 { pt3dadd( -9.91228, 176.641, 18.3569, 0.44 ) }
    dend_48 { pt3dadd( -9.27929, 177.288, 18.161, 0.29 ) }
    dend_48 { pt3dadd( -8.67479, 177.896, 17.619, 0.29 ) }
    dend_48 { pt3dadd( -8.27879, 178.357, 17.1097, 0.44 ) }
    dend_48 { pt3dadd( -7.93334, 178.81, 16.5521, 0.59 ) }
    dend_48 { pt3dadd( -7.54776, 179.344, 15.9004, 0.74 ) }
    dend_48 { pt3dadd( -6.49167, 180.793, 14.1319, 0.74 ) }
    dend_48 { pt3dadd( -5.4858, 182.013, 12.5908, 0.37 ) }
    dend_48 { pt3dadd( -4.9733, 182.582, 11.824, 0.29 ) }
    dend_48 { pt3dadd( -4.43201, 183.139, 11.0369, 0.59 ) }
    dend_48 { pt3dadd( -3.87305, 183.71, 10.2395, 0.52 ) }
    dend_48 { pt3dadd( -3.50172, 184.134, 9.72461, 0.52 ) }
    dend_48 { pt3dadd( -2.93188, 184.96, 9.07078, 0.59 ) }
    // Section: dend_38, id: dend_38, parent: dend_18 (entry count 95/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -3.72146, -37.9269, 3.93538, 0.52 ) }
    dend_38 { pt3dadd( -6.0103, -39.0519, 5.17786, 0.52 ) }
    dend_38 { pt3dadd( -6.47972, -39.355, 5.45327, 0.44 ) }
    dend_38 { pt3dadd( -6.88387, -39.6732, 5.71089, 0.66 ) }
    dend_38 { pt3dadd( -7.41825, -40.1672, 6.07129, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_38 { pt3dadd( -8.27806, -41.1051, 6.66551, 0.66 ) }
    dend_38 { pt3dadd( -8.62195, -41.5504, 6.91482, 0.81 ) }
    dend_38 { pt3dadd( -9.09718, -42.5327, 7.25587, 0.74 ) }
    dend_38 { pt3dadd( -9.23981, -43.0161, 7.37678, 0.88 ) }
    dend_38 { pt3dadd( -9.38967, -43.9707, 7.70214, 0.66 ) }
    dend_38 { pt3dadd( -9.46154, -44.8107, 8.0748, 0.66 ) }
    dend_38 { pt3dadd( -9.50369, -45.4795, 8.45543, 0.81 ) }
    dend_38 { pt3dadd( -9.62798, -46.2904, 9.03592, 0.81 ) }
    dend_38 { pt3dadd( -9.87616, -47.1675, 9.77587, 0.88 ) }
    dend_38 { pt3dadd( -10.7255, -49.4599, 11.8425, 0.96 ) }
    dend_38 { pt3dadd( -11.02, -50.1453, 12.4774, 0.74 ) }
    dend_38 { pt3dadd( -11.2673, -50.674, 12.9446, 0.59 ) }
    dend_38 { pt3dadd( -11.7158, -51.6273, 13.6629, 0.59 ) }
    dend_38 { pt3dadd( -12.0974, -52.4721, 14.1845, 0.59 ) }
    dend_38 { pt3dadd( -12.492, -53.4761, 14.606, 0.96 ) }
    dend_38 { pt3dadd( -12.7601, -54.2877, 14.7595, 1.11 ) }
    dend_38 { pt3dadd( -13.0717, -55.2863, 14.9224, 0.88 ) }
    dend_38 { pt3dadd( -13.3975, -56.3063, 15.1068, 0.66 ) }
    dend_38 { pt3dadd( -13.5291, -56.6361, 15.1808, 0.74 ) }
    dend_38 { pt3dadd( -14.1285, -57.5765, 15.5186, 0.66 ) }
    dend_38 { pt3dadd( -14.6162, -58.1308, 15.8173, 0.74 ) }
    dend_38 { pt3dadd( -15.1984, -58.6983, 16.2518, 0.81 ) }
    dend_38 { pt3dadd( -15.7038, -59.1465, 16.7053, 0.88 ) }
    dend_38 { pt3dadd( -16.3066, -59.7565, 17.3926, 0.66 ) }
    dend_38 { pt3dadd( -16.6669, -60.2326, 17.8811, 0.66 ) }
    dend_38 { pt3dadd( -17.0671, -60.9083, 18.4776, 0.59 ) }
    dend_38 { pt3dadd( -17.4186, -61.6961, 19.0456, 0.66 ) }
    dend_38 { pt3dadd( -17.5956, -62.128, 19.2914, 0.81 ) }
    dend_38 { pt3dadd( -18.0205, -63.1367, 19.752, 0.59 ) }
    dend_38 { pt3dadd( -18.37, -63.9895, 20.1038, 0.74 ) }
    dend_38 { pt3dadd( -18.7042, -64.7827, 20.4076, 0.88 ) }
    dend_38 { pt3dadd( -18.9051, -65.2526, 20.5682, 0.88 ) }
    dend_38 { pt3dadd( -19.2518, -66.1631, 20.9428, 0.66 ) }
    dend_38 { pt3dadd( -19.4798, -66.8708, 21.3484, 0.52 ) }
    dend_38 { pt3dadd( -19.7426, -67.8608, 22.2258, 0.59 ) }
    dend_38 { pt3dadd( -19.8413, -68.3224, 22.7709, 0.59 ) }
    dend_38 { pt3dadd( -19.9247, -68.7725, 23.3673, 0.66 ) }
    dend_38 { pt3dadd( -20.1499, -70.0535, 25.1386, 0.66 ) }
    dend_38 { pt3dadd( -20.2503, -70.6789, 26.008, 0.96 ) }
    dend_38 { pt3dadd( -20.4638, -71.5384, 27.1837, 1.03 ) }
    dend_38 { pt3dadd( -20.7191, -72.1703, 27.9855, 0.88 ) }
    dend_38 { pt3dadd( -20.9708, -72.6559, 28.5151, 0.59 ) }
    dend_38 { pt3dadd( -21.2153, -73.0468, 28.8453, 0.74 ) }
    dend_38 { pt3dadd( -21.6507, -73.6616, 29.1358, 0.59 ) }
    dend_38 { pt3dadd( -22.1583, -74.3129, 29.305, 0.74 ) }
    dend_38 { pt3dadd( -22.7469, -75.0111, 29.3633, 0.88 ) }
    dend_38 { pt3dadd( -23.2978, -75.6351, 29.3585, 0.88 ) }
    dend_38 { pt3dadd( -23.8931, -76.2782, 29.3493, 0.59 ) }
    dend_38 { pt3dadd( -24.4697, -76.8778, 29.3593, 0.37 ) }
    dend_38 { pt3dadd( -24.6995, -77.1045, 29.3773, 0.37 ) }
    dend_38 { pt3dadd( -25.1663, -77.5651, 29.492, 0.44 ) }
    dend_38 { pt3dadd( -25.6703, -78.0563, 29.6797, 0.59 ) }
    dend_38 { pt3dadd( -26.1512, -78.5134, 29.9249, 0.59 ) }
    dend_38 { pt3dadd( -26.7293, -79.0639, 30.2657, 0.74 ) }
    dend_38 { pt3dadd( -27.2766, -79.5528, 30.6001, 0.66 ) }
    dend_38 { pt3dadd( -28.3138, -80.4328, 31.1991, 0.66 ) }
    dend_38 { pt3dadd( -28.9365, -80.9462, 31.5341, 0.59 ) }
    dend_38 { pt3dadd( -29.8467, -81.7311, 31.9922, 0.81 ) }
    dend_38 { pt3dadd( -30.3662, -82.2064, 32.2399, 0.96 ) }
    dend_38 { pt3dadd( -31.0332, -82.8306, 32.5366, 0.74 ) }
    dend_38 { pt3dadd( -31.7652, -83.5181, 32.8276, 0.52 ) }
    dend_38 { pt3dadd( -33.0198, -84.7414, 33.2829, 0.59 ) }
    dend_38 { pt3dadd( -33.6912, -85.4455, 33.519, 0.66 ) }
    dend_38 { pt3dadd( -34.127, -85.9386, 33.6545, 0.66 ) }
    dend_38 { pt3dadd( -34.7567, -86.6908, 33.8328, 0.44 ) }
    dend_38 { pt3dadd( -35.2102, -87.263, 33.9604, 0.44 ) }
    dend_38 { pt3dadd( -35.8132, -88.0232, 34.13, 0.37 ) }
    dend_38 { pt3dadd( -36.534, -88.9407, 34.296, 0.29 ) }
    dend_38 { pt3dadd( -36.8449, -89.3471, 34.359, 0.29 ) }
    dend_38 { pt3dadd( -37.4983, -90.3656, 34.4649, 0.29 ) }
    dend_38 { pt3dadd( -41.9286, -97.935, 41.1698, 0.29 ) }
    dend_38 { pt3dadd( -45.7164, -105.687, 48.0679, 0.29 ) }
    dend_38 { pt3dadd( -50.8564, -113.373, 54.1062, 0.29 ) }
    dend_38 { pt3dadd( -55.1347, -122.011, 59.5644, 0.29 ) }
    dend_38 { pt3dadd( -61.299, -130.204, 63.7137, 0.29 ) }
    dend_38 { pt3dadd( -68.5622, -137.492, 67.6865, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 76/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -3.72146, -37.9269, 3.93538, 2.21 ) }
    dend_19 { pt3dadd( -3.44233, -39.1483, 3.97563, 2.21 ) }
    dend_19 { pt3dadd( -3.27813, -39.919, 3.98964, 2.21 ) }
    dend_19 { pt3dadd( -3.02506, -41.1067, 4.01124, 2.21 ) }
    dend_19 { pt3dadd( -2.81726, -42.082, 4.02897, 2.28 ) }
    dend_19 { pt3dadd( -2.65206, -42.8574, 4.04307, 2.28 ) }
    dend_19 { pt3dadd( -2.41406, -43.9744, 4.06338, 2.5 ) }
    dend_19 { pt3dadd( -2.23032, -44.7363, 4.01659, 2.58 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 84/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 37.3882, 124.437, -20.089, 1.25 ) }
    dend_12 { pt3dadd( 37.887, 124.852, -20.1743, 1.25 ) }
    dend_12 { pt3dadd( 38.9031, 125.565, -20.257, 0.81 ) }
    dend_12 { pt3dadd( 39.5204, 125.953, -20.2767, 0.96 ) }
    dend_12 { pt3dadd( 40.0923, 126.278, -20.2172, 0.74 ) }
    dend_12 { pt3dadd( 41.0216, 126.774, -20.0489, 0.59 ) }
    dend_12 { pt3dadd( 41.8656, 127.213, -19.8601, 0.52 ) }
    dend_12 { pt3dadd( 42.2259, 127.376, -19.7528, 0.66 ) }
    dend_12 { pt3dadd( 42.7523, 127.593, -19.5659, 0.44 ) }
    dend_12 { pt3dadd( 43.8999, 128.055, -19.1588, 0.66 ) }
    dend_12 { pt3dadd( 44.4291, 128.285, -18.9952, 0.52 ) }
    dend_12 { pt3dadd( 44.9342, 128.541, -18.8886, 0.52 ) }
    dend_12 { pt3dadd( 45.6357, 128.943, -18.7895, 0.88 ) }
    dend_12 { pt3dadd( 46.2539, 129.328, -18.7592, 1.25 ) }
    dend_12 { pt3dadd( 46.5058, 129.499, -18.7703, 1.62 ) }
    dend_12 { pt3dadd( 47.275, 130.051, -18.8788, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( 47.9101, 130.513, -18.9791, 1.33 ) }
    dend_12 { pt3dadd( 48.6698, 131.049, -19.0823, 0.88 ) }
    dend_12 { pt3dadd( 49.2425, 131.46, -19.1595, 0.74 ) }
    dend_12 { pt3dadd( 49.6737, 131.767, -19.2086, 0.59 ) }
    dend_12 { pt3dadd( 50.0062, 131.998, -19.2384, 0.59 ) }
    dend_12 { pt3dadd( 50.7553, 132.487, -19.2582, 1.18 ) }
    dend_12 { pt3dadd( 51.4271, 132.897, -19.2737, 1.77 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 7/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 37.3882, 124.437, -20.089, 0.37 ) }
    dend_11 { pt3dadd( 38.1966, 125.453, -16.0706, 0.37 ) }
    dend_11 { pt3dadd( 38.3175, 125.826, -14.9889, 0.37 ) }
    dend_11 { pt3dadd( 38.3041, 126.051, -14.497, 0.37 ) }
    dend_11 { pt3dadd( 38.2146, 126.394, -13.9038, 0.66 ) }
    dend_11 { pt3dadd( 38.1095, 126.726, -13.4399, 0.66 ) }
    dend_11 { pt3dadd( 37.9636, 127.236, -12.8183, 0.66 ) }
    dend_11 { pt3dadd( 37.7319, 127.831, -12.4434, 0.52 ) }
    dend_11 { pt3dadd( 37.5158, 128.531, -12.0372, 0.52 ) }
    dend_11 { pt3dadd( 37.4284, 128.981, -11.7779, 0.52 ) }
    dend_11 { pt3dadd( 37.4648, 129.748, -11.3023, 0.66 ) }
    dend_11 { pt3dadd( 37.6297, 130.241, -10.9724, 1.18 ) }
    dend_11 { pt3dadd( 37.8171, 130.572, -10.7187, 1.18 ) }
    dend_11 { pt3dadd( 38.1735, 131.094, -10.2949, 0.66 ) }
    dend_11 { pt3dadd( 38.4957, 131.564, -9.92253, 0.52 ) }
    dend_11 { pt3dadd( 38.9576, 132.31, -9.36948, 0.52 ) }
    dend_11 { pt3dadd( 39.2297, 132.836, -9.00516, 1.11 ) }
    dend_11 { pt3dadd( 39.5367, 133.644, -8.48984, 0.96 ) }
    dend_11 { pt3dadd( 39.6842, 134.237, -8.14105, 0.88 ) }
    dend_11 { pt3dadd( 39.7907, 135.064, -7.69702, 0.37 ) }
    dend_11 { pt3dadd( 39.8277, 136.19, -7.1518, 0.29 ) }
    dend_11 { pt3dadd( 39.8034, 136.784, -6.88115, 0.29 ) }
    dend_11 { pt3dadd( 39.7114, 137.581, -6.51518, 0.59 ) }
    dend_11 { pt3dadd( 39.5629, 138.42, -6.14409, 0.74 ) }
    dend_11 { pt3dadd( 39.39, 139.128, -5.83446, 0.88 ) }
    dend_11 { pt3dadd( 39.2173, 139.708, -5.58142, 1.03 ) }
    dend_11 { pt3dadd( 38.9539, 140.477, -5.25627, 1.11 ) }
    dend_11 { pt3dadd( 38.7159, 141.144, -5.00378, 0.88 ) }
    dend_11 { pt3dadd( 38.5099, 141.717, -4.81474, 0.52 ) }
    dend_11 { pt3dadd( 38.2151, 142.528, -4.56662, 0.88 ) }
    dend_11 { pt3dadd( 38.0767, 142.903, -4.45576, 0.74 ) }
    dend_11 { pt3dadd( 37.8192, 143.607, -4.25981, 0.52 ) }
    dend_11 { pt3dadd( 37.5424, 144.357, -4.03775, 0.52 ) }
    dend_11 { pt3dadd( 37.2782, 145.073, -3.78922, 0.74 ) }
    dend_11 { pt3dadd( 37.0285, 145.718, -3.54011, 0.88 ) }
    dend_11 { pt3dadd( 36.8009, 146.273, -3.32789, 0.88 ) }
    dend_11 { pt3dadd( 36.5521, 146.831, -3.13302, 1.03 ) }
    dend_11 { pt3dadd( 36.2316, 147.493, -2.95191, 0.81 ) }
    dend_11 { pt3dadd( 35.8542, 148.211, -2.78246, 0.59 ) }
    dend_11 { pt3dadd( 35.6083, 148.642, -2.68756, 0.52 ) }
    dend_11 { pt3dadd( 35.2125, 149.323, -2.52191, 0.52 ) }
    dend_11 { pt3dadd( 34.9945, 149.727, -2.40387, 0.52 ) }
    dend_11 { pt3dadd( 34.6777, 150.414, -2.17941, 0.52 ) }
    dend_11 { pt3dadd( 34.3126, 151.389, -1.8625, 0.52 ) }
    dend_11 { pt3dadd( 34.0691, 152.174, -1.58434, 0.88 ) }
    dend_11 { pt3dadd( 33.8457, 153.011, -1.25251, 0.88 ) }
    dend_11 { pt3dadd( 33.6501, 153.825, -0.8946, 0.74 ) }
    dend_11 { pt3dadd( 33.4933, 154.413, -0.638163, 0.37 ) }
    dend_11 { pt3dadd( 33.3017, 155.047, -0.375485, 0.37 ) }
    dend_11 { pt3dadd( 33.0476, 155.669, -0.16577, 0.52 ) }
    dend_11 { pt3dadd( 32.8009, 156.095, -0.0396934, 0.52 ) }
    dend_11 { pt3dadd( 32.6013, 156.354, 0.0389384, 0.37 ) }
    dend_11 { pt3dadd( 31.9802, 157.037, 0.29126, 0.52 ) }
    dend_11 { pt3dadd( 31.7187, 157.314, 0.401909, 0.74 ) }
    dend_11 { pt3dadd( 31.1866, 157.926, 0.642933, 0.74 ) }
    dend_11 { pt3dadd( 30.79, 158.484, 0.835904, 0.59 ) }
    dend_11 { pt3dadd( 30.4704, 159.046, 1.00036, 0.74 ) }
    dend_11 { pt3dadd( 30.1522, 159.729, 1.18885, 0.88 ) }
    dend_11 { pt3dadd( 29.904, 160.318, 1.35292, 0.88 ) }
    dend_11 { pt3dadd( 29.5919, 161.011, 1.53504, 0.88 ) }
    dend_11 { pt3dadd( 29.1738, 161.805, 1.73775, 0.66 ) }
    dend_11 { pt3dadd( 28.8618, 162.244, 1.86449, 0.66 ) }
    dend_11 { pt3dadd( 28.3735, 162.761, 2.03887, 0.52 ) }
    dend_11 { pt3dadd( 27.7154, 163.264, 2.27312, 0.37 ) }
    dend_11 { pt3dadd( 27.2031, 163.537, 2.52563, 0.29 ) }
    dend_11 { pt3dadd( 26.5525, 163.813, 2.93732, 0.29 ) }
    dend_11 { pt3dadd( 25.9415, 164.054, 3.37645, 0.66 ) }
    dend_11 { pt3dadd( 25.6804, 164.166, 3.57891, 1.03 ) }
    dend_11 { pt3dadd( 25.1424, 164.45, 4.02823, 1.18 ) }
    dend_11 { pt3dadd( 23.9442, 165.256, 5.17424, 0.59 ) }
    dend_11 { pt3dadd( 23.3769, 165.766, 5.78628, 0.44 ) }
    dend_11 { pt3dadd( 23.011, 166.211, 6.22725, 0.52 ) }
    dend_11 { pt3dadd( 22.7495, 166.634, 6.60868, 0.52 ) }
    dend_11 { pt3dadd( 22.4746, 167.175, 7.06547, 0.52 ) }
    dend_11 { pt3dadd( 22.2298, 167.765, 7.5185, 0.59 ) }
    dend_11 { pt3dadd( 22.0195, 168.423, 7.9677, 0.37 ) }
    dend_11 { pt3dadd( 21.8645, 168.976, 8.35567, 0.37 ) }
    dend_11 { pt3dadd( 21.6205, 169.975, 9.06017, 0.66 ) }
    dend_11 { pt3dadd( 21.5048, 170.449, 9.37822, 0.74 ) }
    dend_11 { pt3dadd( 21.3404, 170.971, 9.69037, 0.59 ) }
    dend_11 { pt3dadd( 21.1044, 171.535, 9.96917, 0.52 ) }
    dend_11 { pt3dadd( 20.7754, 172.129, 10.2179, 0.44 ) }
    dend_11 { pt3dadd( 20.2844, 172.878, 10.4454, 0.44 ) }
    dend_11 { pt3dadd( 19.9052, 173.43, 10.5522, 0.59 ) }
    dend_11 { pt3dadd( 19.3309, 174.279, 10.6794, 0.59 ) }
    dend_11 { pt3dadd( 18.9563, 174.848, 10.7679, 0.74 ) }
    dend_11 { pt3dadd( 18.6049, 175.388, 10.8847, 0.74 ) }
    dend_11 { pt3dadd( 18.3319, 175.85, 11.0709, 0.74 ) }
    dend_11 { pt3dadd( 17.9363, 176.595, 11.6094, 0.52 ) }
    dend_11 { pt3dadd( 17.7542, 176.993, 11.9861, 0.66 ) }
    dend_11 { pt3dadd( 17.5765, 177.412, 12.4922, 0.81 ) }
    dend_11 { pt3dadd( 17.2937, 177.996, 13.3212, 1.03 ) }
    dend_11 { pt3dadd( 16.8638, 178.639, 14.3823, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( 16.4237, 179.18, 15.3221, 0.44 ) }
    dend_11 { pt3dadd( 16.1625, 179.458, 15.7749, 0.29 ) }
    dend_11 { pt3dadd( 15.6046, 179.973, 16.5812, 0.59 ) }
    dend_11 { pt3dadd( 15.2795, 180.229, 16.9904, 0.96 ) }
    dend_11 { pt3dadd( 14.3793, 180.916, 18.0408, 0.29 ) }
    dend_11 { pt3dadd( 13.9296, 181.264, 18.5688, 0.29 ) }
    dend_11 { pt3dadd( 13.3731, 181.735, 19.2223, 0.96 ) }
    dend_11 { pt3dadd( 12.8332, 182.212, 19.8404, 1.18 ) }
    dend_11 { pt3dadd( 11.9609, 183.061, 20.8225, 0.96 ) }
    dend_11 { pt3dadd( 11.5964, 183.402, 21.2885, 0.59 ) }
    dend_11 { pt3dadd( 11.2757, 183.679, 21.7259, 0.29 ) }
    dend_11 { pt3dadd( 10.8711, 183.988, 22.3201, 0.29 ) }
    dend_11 { pt3dadd( 10.672, 184.144, 22.6509, 0.29 ) }
    dend_11 { pt3dadd( 10.2162, 184.607, 23.5344, 0.44 ) }
    dend_11 { pt3dadd( 9.50304, 185.572, 25.2077, 0.44 ) }
    dend_11 { pt3dadd( 9.36127, 185.833, 25.6516, 0.59 ) }
    dend_11 { pt3dadd( 9.2551, 186.234, 26.3411, 0.59 ) }
    dend_11 { pt3dadd( 9.28262, 186.597, 26.9708, 0.52 ) }
    dend_11 { pt3dadd( 9.52058, 187.039, 27.6537, 0.29 ) }
    dend_11 { pt3dadd( 9.98091, 187.434, 28.157, 0.29 ) }
    dend_11 { pt3dadd( 10.548, 187.792, 28.5874, 0.29 ) }
    dend_11 { pt3dadd( 11.3086, 188.191, 29.0963, 0.44 ) }
    dend_11 { pt3dadd( 11.9707, 188.518, 29.5618, 0.44 ) }
    dend_11 { pt3dadd( 12.4852, 188.76, 29.9957, 0.29 ) }
    dend_11 { pt3dadd( 13.0437, 189.035, 30.5447, 0.29 ) }
    dend_11 { pt3dadd( 13.8956, 189.55, 31.526, 0.59 ) }
    dend_11 { pt3dadd( 14.4312, 189.969, 32.2166, 0.74 ) }
    dend_11 { pt3dadd( 15.2115, 190.77, 33.2746, 0.52 ) }
    dend_11 { pt3dadd( 16.0138, 191.798, 34.4394, 0.22 ) }
    dend_11 { pt3dadd( 16.1609, 192.024, 34.6589, 0.29 ) }
    dend_11 { pt3dadd( 16.5563, 192.793, 35.2329, 0.29 ) }
    dend_11 { pt3dadd( 16.8384, 193.468, 35.5846, 0.29 ) }
    dend_11 { pt3dadd( 17.1766, 194.36, 35.9179, 0.37 ) }
    dend_11 { pt3dadd( 17.5112, 195.113, 35.963, 0.37 ) }
    dend_11 { pt3dadd( 17.786, 195.621, 35.894, 0.22 ) }
    dend_11 { pt3dadd( 18.6002, 196.628, 35.5579, 0.22 ) }
    dend_11 { pt3dadd( 19.0912, 197.087, 35.3364, 0.37 ) }
    dend_11 { pt3dadd( 19.6863, 197.559, 35.0621, 0.15 ) }
    dend_11 { pt3dadd( 21.8365, 199.135, 33.9975, 0.15 ) }
    dend_11 { pt3dadd( 22.5277, 199.588, 33.6404, 0.15 ) }
    dend_11 { pt3dadd( 24.6095, 200.78, 32.5677, 0.15 ) }
    dend_11 { pt3dadd( 25.635, 201.273, 32.0435, 0.15 ) }
    dend_11 { pt3dadd( 26.6255, 201.705, 31.5389, 0.22 ) }
    dend_11 { pt3dadd( 24.5958, 208.945, 37.5018, 0.22 ) }
    dend_11 { pt3dadd( 23.0824, 216.304, 43.48, 0.22 ) }
    dend_11 { pt3dadd( 23.3208, 222.847, 50.4614, 0.22 ) }
    dend_11 { pt3dadd( 24.401, 228.411, 58.1362, 0.22 ) }
    dend_11 { pt3dadd( 24.7525, 233.98, 65.8758, 0.22 ) }
    dend_11 { pt3dadd( 27.0908, 240.262, 72.695, 0.22 ) }
    dend_11 { pt3dadd( 29.815, 247.47, 78.4086, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 50/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -22.4137, 49.2446, -12.2345, 0.52 ) }
    dend_5 { pt3dadd( -23.3606, 49.735, -11.8026, 0.52 ) }
    dend_5 { pt3dadd( -23.9637, 50.0216, -11.5531, 0.52 ) }
    dend_5 { pt3dadd( -24.5289, 50.2598, -11.3721, 0.74 ) }
    dend_5 { pt3dadd( -25.2331, 50.5526, -11.1827, 0.96 ) }
    dend_5 { pt3dadd( -25.9444, 50.8928, -11.0022, 1.18 ) }
    dend_5 { pt3dadd( -26.5183, 51.2134, -10.8623, 1.18 ) }
    dend_5 { pt3dadd( -27.072, 51.5656, -10.7436, 0.88 ) }
    dend_5 { pt3dadd( -27.9317, 52.3025, -10.5229, 0.37 ) }
    dend_5 { pt3dadd( -28.1874, 52.6186, -10.4452, 0.37 ) }
    dend_5 { pt3dadd( -28.6691, 53.4366, -10.2654, 0.52 ) }
    dend_5 { pt3dadd( -28.9542, 54.0201, -10.1193, 0.81 ) }
    dend_5 { pt3dadd( -29.2511, 54.6708, -9.91625, 0.96 ) }
    dend_5 { pt3dadd( -29.602, 55.3827, -9.61713, 0.52 ) }
    dend_5 { pt3dadd( -29.9293, 55.9055, -9.30742, 0.59 ) }
    dend_5 { pt3dadd( -30.2258, 56.1926, -9.06067, 0.74 ) }
    dend_5 { pt3dadd( -30.9332, 56.5957, -8.57355, 1.11 ) }
    dend_5 { pt3dadd( -31.4649, 56.8043, -8.25282, 1.18 ) }
    dend_5 { pt3dadd( -32.2052, 57.0295, -7.85337, 1.18 ) }
    dend_5 { pt3dadd( -32.938, 57.2224, -7.50376, 0.74 ) }
    dend_5 { pt3dadd( -33.7284, 57.4331, -7.17929, 0.59 ) }
    dend_5 { pt3dadd( -34.4932, 57.6614, -6.91543, 0.52 ) }
    dend_5 { pt3dadd( -35.0093, 57.84, -6.78973, 0.52 ) }
    dend_5 { pt3dadd( -35.5566, 58.0535, -6.72691, 0.52 ) }
    dend_5 { pt3dadd( -36.1493, 58.3145, -6.7424, 0.74 ) }
    dend_5 { pt3dadd( -36.7827, 58.6207, -6.76689, 0.74 ) }
    dend_5 { pt3dadd( -37.0981, 58.786, -6.78617, 0.81 ) }
    dend_5 { pt3dadd( -37.529, 59.0295, -6.78617, 0.81 ) }
    dend_5 { pt3dadd( -38.4147, 59.5818, -6.69754, 0.66 ) }
    dend_5 { pt3dadd( -38.8646, 59.9219, -6.57014, 0.52 ) }
    dend_5 { pt3dadd( -39.9236, 60.9112, -6.01062, 0.74 ) }
    dend_5 { pt3dadd( -40.2939, 61.3268, -5.745, 0.66 ) }
    dend_5 { pt3dadd( -40.8072, 61.978, -5.31458, 0.59 ) }
    dend_5 { pt3dadd( -41.1228, 62.3924, -5.04145, 0.66 ) }
    dend_5 { pt3dadd( -41.6785, 63.1298, -4.58032, 0.52 ) }
    dend_5 { pt3dadd( -41.9856, 63.5015, -4.40924, 0.66 ) }
    dend_5 { pt3dadd( -42.3715, 63.9047, -4.27718, 0.88 ) }
    dend_5 { pt3dadd( -42.887, 64.3566, -4.13991, 0.88 ) }
    dend_5 { pt3dadd( -43.4064, 64.74, -3.9796, 0.66 ) }
    dend_5 { pt3dadd( -43.7962, 65.0005, -3.78911, 0.59 ) }
    dend_5 { pt3dadd( -44.2951, 65.3462, -3.43455, 0.74 ) }
    dend_5 { pt3dadd( -44.7713, 65.7227, -2.99141, 0.52 ) }
    dend_5 { pt3dadd( -45.2075, 66.106, -2.50073, 0.52 ) }
    dend_5 { pt3dadd( -46.1836, 67.0592, -1.25833, 0.66 ) }
    dend_5 { pt3dadd( -46.8631, 67.7774, -0.329364, 0.74 ) }
    dend_5 { pt3dadd( -47.2389, 68.1715, 0.196604, 0.44 ) }
    dend_5 { pt3dadd( -47.5585, 68.4813, 0.61766, 0.44 ) }
    dend_5 { pt3dadd( -47.8386, 68.707, 0.908951, 0.59 ) }
    dend_5 { pt3dadd( -48.1669, 68.9087, 1.15432, 0.66 ) }
    dend_5 { pt3dadd( -48.6826, 69.1671, 1.39754, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( -49.4603, 69.5278, 1.74474, 0.52 ) }
    dend_5 { pt3dadd( -50.0049, 69.7855, 2.05128, 0.52 ) }
    dend_5 { pt3dadd( -50.4773, 70.0598, 2.38999, 0.44 ) }
    dend_5 { pt3dadd( -51.2798, 70.6509, 3.10393, 0.59 ) }
    dend_5 { pt3dadd( -51.6301, 70.9438, 3.42702, 0.74 ) }
    dend_5 { pt3dadd( -52.0151, 71.2961, 3.78869, 0.88 ) }
    dend_5 { pt3dadd( -52.5062, 71.7481, 4.23594, 0.88 ) }
    dend_5 { pt3dadd( -52.9765, 72.1231, 4.68407, 0.44 ) }
    dend_5 { pt3dadd( -53.4119, 72.4167, 5.08724, 0.44 ) }
    dend_5 { pt3dadd( -54.1052, 72.7764, 5.68276, 0.59 ) }
    dend_5 { pt3dadd( -54.6233, 73.0171, 6.08827, 0.52 ) }
    dend_5 { pt3dadd( -55.4686, 73.381, 6.71149, 0.66 ) }
    dend_5 { pt3dadd( -56.2296, 73.6993, 7.25397, 0.74 ) }
    dend_5 { pt3dadd( -56.8504, 73.9709, 7.70793, 0.74 ) }
    dend_5 { pt3dadd( -57.2255, 74.1661, 7.98834, 0.74 ) }
    dend_5 { pt3dadd( -57.8158, 74.5409, 8.43955, 0.52 ) }
    dend_5 { pt3dadd( -58.0311, 74.7088, 8.57879, 0.52 ) }
    dend_5 { pt3dadd( -58.3321, 74.9988, 8.73595, 0.66 ) }
    dend_5 { pt3dadd( -58.7216, 75.4233, 8.92458, 0.66 ) }
    dend_5 { pt3dadd( -59.1277, 75.868, 9.11334, 0.81 ) }
    dend_5 { pt3dadd( -59.5731, 76.3548, 9.31211, 0.81 ) }
    dend_5 { pt3dadd( -59.9736, 76.7696, 9.49352, 0.59 ) }
    dend_5 { pt3dadd( -60.4127, 77.2069, 9.68019, 0.52 ) }
    dend_5 { pt3dadd( -61.0413, 77.7975, 9.93541, 0.59 ) }
    dend_5 { pt3dadd( -61.4823, 78.1776, 10.1209, 0.66 ) }
    dend_5 { pt3dadd( -61.8575, 78.4571, 10.2778, 0.66 ) }
    dend_5 { pt3dadd( -62.533, 78.8548, 10.5555, 0.59 ) }
    dend_5 { pt3dadd( -62.9743, 79.0628, 10.7528, 0.59 ) }
    dend_5 { pt3dadd( -63.4175, 79.2371, 10.9566, 0.59 ) }
    dend_5 { pt3dadd( -64.0751, 79.4777, 11.2436, 0.52 ) }
    dend_5 { pt3dadd( -64.612, 79.6901, 11.4793, 0.66 ) }
    dend_5 { pt3dadd( -65.0958, 79.9108, 11.6724, 0.66 ) }
    dend_5 { pt3dadd( -65.7278, 80.2463, 11.8721, 0.52 ) }
    dend_5 { pt3dadd( -66.1876, 80.529, 11.9748, 0.66 ) }
    dend_5 { pt3dadd( -66.8824, 81.0244, 12.0677, 0.81 ) }
    dend_5 { pt3dadd( -67.4543, 81.4903, 12.1124, 0.81 ) }
    dend_5 { pt3dadd( -68.2772, 82.2639, 12.1661, 0.52 ) }
    dend_5 { pt3dadd( -68.7863, 82.8058, 12.2077, 0.59 ) }
    dend_5 { pt3dadd( -69.1521, 83.2223, 12.2425, 0.59 ) }
    dend_5 { pt3dadd( -69.6015, 83.7568, 12.3059, 0.37 ) }
    dend_5 { pt3dadd( -70.2422, 84.5175, 12.4462, 0.52 ) }
    dend_5 { pt3dadd( -70.7527, 85.0834, 12.5936, 0.59 ) }
    dend_5 { pt3dadd( -71.39, 85.7222, 12.8152, 0.22 ) }
    dend_5 { pt3dadd( -71.6847, 85.9704, 12.9299, 0.37 ) }
    dend_5 { pt3dadd( -72.0914, 86.2593, 13.065, 0.37 ) }
    dend_5 { pt3dadd( -72.629, 86.5786, 13.1904, 0.37 ) }
    dend_5 { pt3dadd( -73.2671, 86.923, 13.29, 0.66 ) }
    dend_5 { pt3dadd( -73.7574, 87.1956, 13.4102, 0.88 ) }
    dend_5 { pt3dadd( -74.154, 87.4327, 13.565, 0.59 ) }
    dend_5 { pt3dadd( -75.0728, 88.0444, 14.0814, 0.29 ) }
    dend_5 { pt3dadd( -75.7005, 88.5681, 14.577, 0.29 ) }
    dend_5 { pt3dadd( -76.1593, 89.0527, 15.0373, 0.29 ) }
    dend_5 { pt3dadd( -77.0261, 90.2286, 16.1909, 0.88 ) }
    dend_5 { pt3dadd( -77.4244, 90.853, 16.9152, 0.88 ) }
    dend_5 { pt3dadd( -77.6276, 91.2335, 17.3966, 0.66 ) }
    dend_5 { pt3dadd( -77.8473, 91.7811, 18.2115, 0.52 ) }
    dend_5 { pt3dadd( -77.9216, 92.0684, 18.6701, 0.29 ) }
    dend_5 { pt3dadd( -77.9678, 92.2922, 19.049, 0.29 ) }
    dend_5 { pt3dadd( -78.2971, 93.4436, 20.4518, 0.74 ) }
    dend_5 { pt3dadd( -84.7221, 98.3515, 25.6777, 0.74 ) }
    dend_5 { pt3dadd( -91.0979, 102.507, 31.5444, 0.74 ) }
    dend_5 { pt3dadd( -97.0566, 106.783, 37.7562, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 62/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -22.4137, 49.2446, -12.2345, 0.74 ) }
    dend_2 { pt3dadd( -22.9443, 49.5297, -12.7365, 0.74 ) }
    dend_2 { pt3dadd( -23.3602, 49.8101, -13.1012, 0.74 ) }
    dend_2 { pt3dadd( -24.0262, 50.3109, -13.6226, 0.74 ) }
    dend_2 { pt3dadd( -24.4518, 50.6487, -14.0327, 0.88 ) }
    dend_2 { pt3dadd( -24.8623, 50.9567, -14.5025, 1.03 ) }
    dend_2 { pt3dadd( -25.2451, 51.1915, -15.0088, 1.03 ) }
    dend_2 { pt3dadd( -25.6032, 51.3592, -15.5702, 0.96 ) }
    dend_2 { pt3dadd( -25.9868, 51.4601, -16.1912, 0.74 ) }
    dend_2 { pt3dadd( -26.9065, 51.5205, -17.5787, 0.66 ) }
    dend_2 { pt3dadd( -27.5369, 51.4725, -18.3923, 0.66 ) }
    dend_2 { pt3dadd( -28.3878, 51.3386, -19.3381, 0.66 ) }
    dend_2 { pt3dadd( -28.9233, 51.2322, -19.8574, 0.59 ) }
    dend_2 { pt3dadd( -29.6665, 51.0666, -20.4708, 0.66 ) }
    dend_2 { pt3dadd( -30.2596, 50.9376, -20.8669, 0.66 ) }
    dend_2 { pt3dadd( -31.5206, 50.7121, -21.5173, 0.81 ) }
    dend_2 { pt3dadd( -32.2733, 50.6332, -21.8579, 0.96 ) }
    dend_2 { pt3dadd( -32.8493, 50.6285, -22.0992, 1.18 ) }
    dend_2 { pt3dadd( -33.4446, 50.6729, -22.3519, 1.18 ) }
    dend_2 { pt3dadd( -34.261, 50.7996, -22.7161, 0.66 ) }
    dend_2 { pt3dadd( -34.8775, 50.9252, -23.0138, 0.66 ) }
    dend_2 { pt3dadd( -35.3671, 51.0374, -23.2762, 0.59 ) }
    dend_2 { pt3dadd( -35.8935, 51.137, -23.6335, 0.74 ) }
    dend_2 { pt3dadd( -36.5084, 51.1854, -24.1264, 0.74 ) }
    dend_2 { pt3dadd( -36.7392, 51.1412, -24.404, 0.88 ) }
    dend_2 { pt3dadd( -37.0543, 50.8654, -25.1019, 0.88 ) }
    dend_2 { pt3dadd( -37.218, 50.6182, -25.6946, 0.66 ) }
    dend_2 { pt3dadd( -37.5364, 50.0931, -26.9892, 0.66 ) }
    dend_2 { pt3dadd( -37.6884, 49.8468, -27.6202, 1.25 ) }
    dend_2 { pt3dadd( -38.0506, 49.3225, -29.0272, 1.47 ) }
    dend_2 { pt3dadd( -38.4738, 48.8308, -30.4498, 1.62 ) }
    dend_2 { pt3dadd( -39.0395, 48.3802, -32.0258, 1.55 ) }
    dend_2 { pt3dadd( -39.3625, 48.25, -32.6854, 0.81 ) }
    dend_2 { pt3dadd( -39.7964, 48.2071, -33.2922, 0.59 ) }
    dend_2 { pt3dadd( -40.3759, 48.2564, -33.9371, 0.44 ) }
    dend_2 { pt3dadd( -40.8504, 48.3499, -34.3672, 0.44 ) }
    dend_2 { pt3dadd( -41.3815, 48.4908, -34.815, 0.59 ) }
    dend_2 { pt3dadd( -41.7419, 48.5893, -35.1316, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( -42.2044, 48.7189, -35.6475, 0.29 ) }
    dend_2 { pt3dadd( -42.951, 48.9749, -36.6411, 1.03 ) }
    dend_2 { pt3dadd( -43.5135, 49.224, -37.4483, 1.47 ) }
    dend_2 { pt3dadd( -43.9333, 49.4458, -38.0637, 1.69 ) }
    dend_2 { pt3dadd( -44.196, 49.6012, -38.4407, 2.06 ) }
    dend_2 { pt3dadd( -44.7401, 49.9705, -39.173, 1.03 ) }
    dend_2 { pt3dadd( -45.2985, 50.407, -39.8697, 0.52 ) }
    dend_2 { pt3dadd( -45.784, 50.8704, -40.4546, 0.81 ) }
    dend_2 { pt3dadd( -46.0441, 51.1757, -40.7764, 0.96 ) }
    dend_2 { pt3dadd( -46.3599, 51.6396, -41.2189, 0.74 ) }
    dend_2 { pt3dadd( -46.677, 52.2033, -41.7461, 1.03 ) }
    dend_2 { pt3dadd( -46.8711, 52.6037, -42.1193, 0.88 ) }
    dend_2 { pt3dadd( -47.1252, 53.1684, -42.6741, 1.25 ) }
    dend_2 { pt3dadd( -47.318, 53.5889, -43.1335, 1.62 ) }
    dend_2 { pt3dadd( -47.4958, 53.9356, -43.5505, 1.77 ) }
    dend_2 { pt3dadd( -47.7499, 54.4171, -44.1732, 1.99 ) }
    dend_2 { pt3dadd( -47.969, 54.8109, -44.6882, 1.18 ) }
    dend_2 { pt3dadd( -48.1425, 55.1222, -45.0831, 0.29 ) }
    dend_2 { pt3dadd( -48.3799, 55.5774, -45.6526, 0.29 ) }
    dend_2 { pt3dadd( -48.6515, 56.1926, -46.4179, 0.66 ) }
    dend_2 { pt3dadd( -48.8384, 56.7401, -47.0566, 0.66 ) }
    dend_2 { pt3dadd( -48.9604, 57.2208, -47.5603, 0.22 ) }
    dend_2 { pt3dadd( -49.0565, 57.7655, -48.0863, 0.81 ) }
    dend_2 { pt3dadd( -49.1367, 58.3837, -48.6659, 1.18 ) }
    dend_2 { pt3dadd( -49.2246, 59.1265, -49.3222, 0.96 ) }
    dend_2 { pt3dadd( -49.2882, 59.5319, -49.6634, 0.37 ) }
    dend_2 { pt3dadd( -49.3952, 59.906, -49.9785, 0.29 ) }
    dend_2 { pt3dadd( -49.5255, 60.1944, -50.2338, 0.29 ) }
    dend_2 { pt3dadd( -49.7339, 60.5175, -50.5099, 0.29 ) }
    dend_2 { pt3dadd( -49.9894, 60.869, -50.7668, 0.59 ) }
    dend_2 { pt3dadd( -50.2978, 61.3148, -51.0421, 0.59 ) }
    dend_2 { pt3dadd( -50.5667, 61.8225, -51.3476, 0.59 ) }
    dend_2 { pt3dadd( -50.7809, 62.3693, -51.6789, 0.59 ) }
    dend_2 { pt3dadd( -50.9442, 62.8947, -51.983, 0.59 ) }
    dend_2 { pt3dadd( -51.0685, 63.3824, -52.2573, 0.29 ) }
    dend_2 { pt3dadd( -51.1622, 63.7972, -52.4934, 0.37 ) }
    dend_2 { pt3dadd( -51.3495, 64.5135, -52.9625, 0.37 ) }
    dend_2 { pt3dadd( -51.5516, 65.1099, -53.4598, 0.74 ) }
    dend_2 { pt3dadd( -51.6805, 65.376, -53.7197, 1.25 ) }
    dend_2 { pt3dadd( -51.8981, 65.7249, -54.0878, 1.69 ) }
    dend_2 { pt3dadd( -52.1106, 66.0131, -54.4237, 1.47 ) }
    dend_2 { pt3dadd( -52.5349, 66.5147, -55.0778, 0.96 ) }
    dend_2 { pt3dadd( -52.997, 66.9984, -55.7622, 0.59 ) }
    dend_2 { pt3dadd( -53.3413, 67.3444, -56.3035, 0.52 ) }
    dend_2 { pt3dadd( -53.633, 67.6144, -56.7921, 0.66 ) }
    dend_2 { pt3dadd( -54.0191, 67.9168, -57.4278, 0.52 ) }
    dend_2 { pt3dadd( -54.3735, 68.1463, -58.0244, 0.81 ) }
    dend_2 { pt3dadd( -54.7566, 68.3096, -58.6118, 0.96 ) }
    dend_2 { pt3dadd( -55.1429, 68.4123, -59.1257, 1.55 ) }
    dend_2 { pt3dadd( -55.649, 68.51, -59.7513, 1.77 ) }
    dend_2 { pt3dadd( -56.0886, 68.5841, -60.2294, 2.21 ) }
    dend_2 { pt3dadd( -56.7974, 68.7041, -60.9041, 2.36 ) }
    dend_2 { pt3dadd( -57.5642, 68.8294, -61.5689, 0.59 ) }
    dend_2 { pt3dadd( -58.2125, 68.909, -62.1115, 0.37 ) }
    dend_2 { pt3dadd( -58.6008, 68.9392, -62.4205, 0.37 ) }
    dend_2 { pt3dadd( -59.1294, 68.9554, -62.832, 0.37 ) }
    dend_2 { pt3dadd( -59.5806, 68.9552, -63.1859, 0.37 ) }
    dend_2 { pt3dadd( -59.9984, 68.9431, -63.4924, 0.37 ) }
    dend_2 { pt3dadd( -60.4909, 68.9281, -63.8818, 0.29 ) }
    dend_2 { pt3dadd( -60.785, 68.904, -64.1139, 0.29 ) }
    dend_2 { pt3dadd( -61.1079, 68.8898, -64.3927, 0.44 ) }
    dend_2 { pt3dadd( -61.6519, 68.9523, -64.9033, 0.81 ) }
    dend_2 { pt3dadd( -61.9649, 69.0569, -65.2427, 1.18 ) }
    dend_2 { pt3dadd( -62.2517, 69.2028, -65.6044, 1.18 ) }
    dend_2 { pt3dadd( -62.5574, 69.3999, -66.1096, 0.74 ) }
    dend_2 { pt3dadd( -63.0123, 69.7229, -67.0084, 0.37 ) }
    dend_2 { pt3dadd( -63.2701, 69.9197, -67.5755, 0.81 ) }
    dend_2 { pt3dadd( -63.6669, 70.2348, -68.567, 1.18 ) }
    dend_2 { pt3dadd( -63.9588, 70.4721, -69.3593, 1.18 ) }
    dend_2 { pt3dadd( -64.5187, 70.9238, -70.9878, 0.52 ) }
    dend_2 { pt3dadd( -64.8094, 71.1451, -71.7528, 0.37 ) }
    dend_2 { pt3dadd( -65.2989, 71.449, -72.8126, 1.33 ) }
    dend_2 { pt3dadd( -65.7171, 71.6634, -73.5916, 2.14 ) }
    dend_2 { pt3dadd( -65.9916, 71.8008, -74.0333, 2.58 ) }
    dend_2 { pt3dadd( -66.6547, 72.1563, -74.9575, 2.8 ) }
    dend_2 { pt3dadd( -67.5489, 72.7064, -76.0475, 0.37 ) }
    dend_2 { pt3dadd( -68.0917, 73.1218, -76.6963, 0.37 ) }
    dend_2 { pt3dadd( -68.3083, 73.3322, -76.9495, 0.37 ) }
    dend_2 { pt3dadd( -68.6672, 73.8113, -77.3438, 0.59 ) }
    dend_2 { pt3dadd( -68.9058, 74.2756, -77.6312, 0.74 ) }
    dend_2 { pt3dadd( -69.0963, 74.8227, -77.9083, 0.74 ) }
    dend_2 { pt3dadd( -69.2082, 75.3501, -78.2539, 0.74 ) }
    dend_2 { pt3dadd( -69.2841, 75.6565, -78.5159, 0.44 ) }
    dend_2 { pt3dadd( -69.4746, 76.0376, -78.9763, 0.29 ) }
    dend_2 { pt3dadd( -69.6752, 76.3055, -79.4222, 0.29 ) }
    dend_2 { pt3dadd( -69.9115, 76.542, -79.9357, 0.81 ) }
    dend_2 { pt3dadd( -70.5224, 76.9774, -81.1276, 1.03 ) }
    dend_2 { pt3dadd( -70.7959, 77.1292, -81.6128, 0.96 ) }
    dend_2 { pt3dadd( -71.3134, 77.3961, -82.4812, 0.22 ) }
    dend_2 { pt3dadd( -71.8074, 77.6638, -83.3286, 0.59 ) }
    dend_2 { pt3dadd( -72.1256, 77.8669, -83.874, 0.59 ) }
    dend_2 { pt3dadd( -72.4447, 78.1112, -84.4268, 0.44 ) }
    dend_2 { pt3dadd( -72.7591, 78.3777, -84.9457, 0.37 ) }
    dend_2 { pt3dadd( -73.3519, 78.8647, -85.9451, 1.03 ) }
    dend_2 { pt3dadd( -73.8214, 79.1995, -86.6932, 1.69 ) }
    dend_2 { pt3dadd( -74.0766, 79.3688, -87.0551, 1.92 ) }
    dend_2 { pt3dadd( -74.4163, 79.6072, -87.5136, 1.92 ) }
    dend_2 { pt3dadd( -74.6242, 79.7643, -87.8019, 1.92 ) }
    dend_2 { pt3dadd( -75.4393, 80.3901, -88.9016, 0.44 ) }
    dend_2 { pt3dadd( -75.7036, 80.6021, -89.22, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( -76.0199, 80.9075, -89.6143, 0.52 ) }
    dend_2 { pt3dadd( -76.183, 81.1117, -89.8584, 0.88 ) }
    dend_2 { pt3dadd( -76.4841, 81.5936, -90.3969, 1.03 ) }
    dend_2 { pt3dadd( -76.6593, 81.9061, -90.7425, 1.18 ) }
    dend_2 { pt3dadd( -76.9171, 82.4193, -91.3, 0.96 ) }
    dend_2 { pt3dadd( -77.2385, 83.0535, -91.9837, 0.74 ) }
    dend_2 { pt3dadd( -77.4438, 83.4509, -92.3853, 0.74 ) }
    dend_2 { pt3dadd( -77.6393, 83.8244, -92.7365, 0.59 ) }
    dend_2 { pt3dadd( -78.0117, 84.4802, -93.2939, 0.52 ) }
    dend_2 { pt3dadd( -78.2678, 84.8997, -93.627, 0.52 ) }
    dend_2 { pt3dadd( -78.6981, 85.5389, -94.081, 0.74 ) }
    dend_2 { pt3dadd( -79.1817, 86.1799, -94.4715, 1.18 ) }
    dend_2 { pt3dadd( -79.6118, 86.715, -94.7656, 1.4 ) }
    dend_2 { pt3dadd( -79.9329, 87.0909, -94.962, 1.47 ) }
    dend_2 { pt3dadd( -80.2579, 87.4333, -95.1428, 1.69 ) }
    dend_2 { pt3dadd( -80.7589, 87.8672, -95.4162, 1.4 ) }
    dend_2 { pt3dadd( -81.409, 88.3148, -95.7901, 0.52 ) }
    dend_2 { pt3dadd( -82.0344, 88.6437, -96.1659, 0.52 ) }
    dend_2 { pt3dadd( -82.6926, 88.9152, -96.5666, 0.74 ) }
    dend_2 { pt3dadd( -83.2619, 89.1153, -96.9526, 0.96 ) }
    dend_2 { pt3dadd( -84.005, 89.3522, -97.5252, 0.96 ) }
    dend_2 { pt3dadd( -84.5333, 89.5216, -97.9961, 0.74 ) }
    dend_2 { pt3dadd( -85.0355, 89.7245, -98.5084, 0.44 ) }
    dend_2 { pt3dadd( -85.3463, 89.9154, -98.8669, 0.44 ) }
    dend_2 { pt3dadd( -85.7144, 90.2282, -99.3358, 0.74 ) }
    dend_2 { pt3dadd( -86.0414, 90.5415, -99.7464, 0.88 ) }
    dend_2 { pt3dadd( -86.2669, 90.7693, -100.054, 0.88 ) }
    dend_2 { pt3dadd( -86.6497, 91.1877, -100.627, 0.29 ) }
    dend_2 { pt3dadd( -86.9964, 91.5909, -101.201, 0.29 ) }
    dend_2 { pt3dadd( -87.3767, 92.0182, -101.836, 0.37 ) }
    dend_2 { pt3dadd( -87.7449, 92.405, -102.43, 0.44 ) }
    dend_2 { pt3dadd( -88.3322, 93.0118, -103.386, 0.59 ) }
    dend_2 { pt3dadd( -88.5912, 93.3061, -103.835, 1.18 ) }
    dend_2 { pt3dadd( -88.9568, 93.7838, -104.494, 1.03 ) }
    dend_2 { pt3dadd( -89.2488, 94.2134, -105.001, 1.69 ) }
    dend_2 { pt3dadd( -89.4083, 94.4628, -105.249, 1.69 ) }
    dend_2 { pt3dadd( -89.7753, 95.028, -105.767, 1.18 ) }
    dend_2 { pt3dadd( -90.2828, 95.7418, -106.371, 0.37 ) }
    dend_2 { pt3dadd( -90.587, 96.146, -106.734, 0.37 ) }
    dend_2 { pt3dadd( -91.0617, 96.748, -107.302, 0.37 ) }
    dend_2 { pt3dadd( -91.4917, 97.2638, -107.826, 0.59 ) }
    dend_2 { pt3dadd( -91.8711, 97.6764, -108.273, 1.11 ) }
    dend_2 { pt3dadd( -92.2004, 97.9911, -108.638, 1.62 ) }
    dend_2 { pt3dadd( -92.604, 98.3158, -109.086, 1.69 ) }
    dend_2 { pt3dadd( -92.982, 98.6153, -109.553, 1.92 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 45/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -58.685, 32.2429, 120.089, 0.88 ) }
    dend_60 { pt3dadd( -60.3669, 31.6028, 127.023, 0.88 ) }
    dend_60 { pt3dadd( -62.5102, 32.0396, 133.841, 0.88 ) }
    dend_60 { pt3dadd( -63.7981, 33.2756, 140.778, 0.88 ) }
    dend_60 { pt3dadd( -65.0557, 34.5554, 147.712, 0.88 ) }
    dend_60 { pt3dadd( -65.3083, 36.8686, 154.496, 0.88 ) }
    dend_60 { pt3dadd( -65.2296, 39.3661, 161.221, 0.88 ) }
    dend_60 { pt3dadd( -66.5036, 42.3519, 167.629, 0.88 ) }
    dend_60 { pt3dadd( -67.7369, 46.0933, 173.655, 0.88 ) }
    dend_60 { pt3dadd( -69.3793, 50.3926, 179.212, 0.88 ) }
    dend_60 { pt3dadd( -71.3432, 54.9267, 184.48, 0.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 56/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -58.685, 32.2429, 120.089, 0.22 ) }
    dend_57 { pt3dadd( -60.7147, 31.5005, 128.62, 0.88 ) }
    dend_57 { pt3dadd( -61.851, 31.2147, 137.34, 0.88 ) }
    dend_57 { pt3dadd( -64.6556, 31.985, 145.646, 0.88 ) }
    dend_57 { pt3dadd( -67.396, 33.2171, 153.919, 0.88 ) }
    dend_57 { pt3dadd( -70.6536, 33.6226, 162.083, 0.88 ) }
    dend_57 { pt3dadd( -74.5929, 33.5846, 169.951, 0.88 ) }
    dend_57 { pt3dadd( -77.6841, 32.8308, 178.156, 0.88 ) }
    dend_57 { pt3dadd( -81.2346, 32.3178, 186.192, 0.88 ) }
    dend_57 { pt3dadd( -83.7871, 30.4054, 194.404, 0.88 ) }
    dend_57 { pt3dadd( -84.9301, 28.4958, 202.925, 0.88 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 67/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -111.662, 59.4901, 75.9093, 0.88 ) }
    dend_53 { pt3dadd( -119.344, 61.6476, 79.647, 0.88 ) }
    dend_53 { pt3dadd( -127.019, 63.5654, 83.5139, 0.88 ) }
    dend_53 { pt3dadd( -134.944, 64.9912, 87.0668, 0.88 ) }
    dend_53 { pt3dadd( -142.541, 65.5417, 91.4389, 0.88 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 72/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -111.662, 59.4901, 75.9093, 0.22 ) }
    dend_52 { pt3dadd( -118.056, 61.6022, 78.6261, 0.88 ) }
    dend_52 { pt3dadd( -124.385, 63.4471, 81.6483, 0.88 ) }
    dend_52 { pt3dadd( -130.688, 63.6617, 85.1718, 0.88 ) }
    dend_52 { pt3dadd( -137.555, 64.172, 87.4119, 0.88 ) }
    dend_52 { pt3dadd( -144.048, 64.6062, 90.5617, 0.88 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 78/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -68.5622, -137.492, 67.6865, 0.88 ) }
    dend_42 { pt3dadd( -72.0376, -142.631, 70.9613, 0.88 ) }
    dend_42 { pt3dadd( -75.0408, -147.645, 74.8439, 0.88 ) }
    dend_42 { pt3dadd( -78.1864, -152.3, 79.0287, 0.88 ) }
    dend_42 { pt3dadd( -80.2167, -157.659, 83.1101, 0.88 ) }
    dend_42 { pt3dadd( -81.6388, -161.922, 88.4883, 0.88 ) }
    dend_42 { pt3dadd( -84.1258, -166.212, 93.4317, 0.88 ) }
    dend_42 { pt3dadd( -86.0496, -169.054, 99.4971, 0.88 ) }
    dend_42 { pt3dadd( -87.1025, -171.865, 105.791, 0.88 ) }
    dend_42 { pt3dadd( -87.2852, -173.44, 112.557, 0.88 ) }
    dend_42 { pt3dadd( -86.8688, -176.01, 119.025, 0.88 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 89/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -68.5622, -137.492, 67.6865, 0.22 ) }
    dend_39 { pt3dadd( -73.4492, -144.206, 71.3274, 0.88 ) }
    dend_39 { pt3dadd( -78.8446, -150.2, 75.4199, 0.88 ) }
    dend_39 { pt3dadd( -83.4054, -157.442, 78.4702, 0.88 ) }
    dend_39 { pt3dadd( -88.3063, -164.617, 81.1163, 0.88 ) }
    dend_39 { pt3dadd( -93.2378, -171.994, 83.0893, 0.88 ) }
    dend_39 { pt3dadd( -99.0438, -178.962, 83.1963, 0.88 ) }
    dend_39 { pt3dadd( -104.79, -185.949, 83.8889, 0.88 ) }
    dend_39 { pt3dadd( -111.32, -192.138, 84.8189, 0.88 ) }
    dend_39 { pt3dadd( -118.507, -197.584, 84.5778, 0.88 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 99/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -2.23032, -44.7363, 4.01659, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_27 { pt3dadd( -1.95522, -45.5313, 3.58274, 1.25 ) }
    dend_27 { pt3dadd( -1.7353, -46.0792, 3.34711, 1.03 ) }
    dend_27 { pt3dadd( -1.36014, -46.8372, 3.10954, 0.88 ) }
    dend_27 { pt3dadd( -1.04243, -47.4569, 2.99822, 0.66 ) }
    dend_27 { pt3dadd( -0.822984, -47.9154, 2.97292, 0.66 ) }
    dend_27 { pt3dadd( -0.525987, -48.618, 2.98733, 0.74 ) }
    dend_27 { pt3dadd( -0.310421, -49.292, 3.08109, 0.66 ) }
    dend_27 { pt3dadd( -0.158693, -49.8109, 3.20152, 0.81 ) }
    dend_27 { pt3dadd( -0.016711, -50.3337, 3.34436, 0.81 ) }
    dend_27 { pt3dadd( 0.169868, -51.0075, 3.50816, 0.74 ) }
    dend_27 { pt3dadd( 0.365444, -51.6832, 3.62316, 0.96 ) }
    dend_27 { pt3dadd( 0.59812, -52.4708, 3.70005, 1.03 ) }
    dend_27 { pt3dadd( 0.830192, -53.2127, 3.75408, 1.11 ) }
    dend_27 { pt3dadd( 1.06423, -53.9424, 3.79677, 1.25 ) }
    dend_27 { pt3dadd( 1.40051, -54.8777, 3.83096, 0.96 ) }
    dend_27 { pt3dadd( 1.77779, -55.8166, 3.8622, 0.96 ) }
    dend_27 { pt3dadd( 2.15264, -56.6607, 3.8916, 1.11 ) }
    dend_27 { pt3dadd( 2.4933, -57.3619, 3.91407, 1.47 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 18/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.23032, -44.7363, 4.01659, 2.06 ) }
    dend_20 { pt3dadd( -3.02415, -45.8169, 3.63818, 2.06 ) }
    dend_20 { pt3dadd( -3.80055, -47.1032, 3.0834, 2.06 ) }
    dend_20 { pt3dadd( -4.38906, -48.2857, 2.51526, 2.06 ) }
    dend_20 { pt3dadd( -4.87072, -49.3828, 1.91527, 2.06 ) }
    dend_20 { pt3dadd( -5.39163, -50.5997, 1.16302, 1.99 ) }
    dend_20 { pt3dadd( -6.06051, -52.2005, 0.130797, 1.77 ) }
    dend_20 { pt3dadd( -6.55979, -53.6264, -0.893254, 1.47 ) }
    dend_20 { pt3dadd( -6.99694, -55.0736, -2.01281, 1.11 ) }
    dend_20 { pt3dadd( -7.38838, -56.4294, -3.15544, 1.11 ) }
    dend_20 { pt3dadd( -7.68706, -57.3867, -4.00267, 1.25 ) }
    dend_20 { pt3dadd( -7.95584, -58.1172, -4.66464, 1.25 ) }
    dend_20 { pt3dadd( -8.70321, -59.6218, -6.03757, 1.18 ) }
    dend_20 { pt3dadd( -9.25195, -60.4141, -6.77424, 1.25 ) }
    dend_20 { pt3dadd( -10.2757, -61.5264, -7.81578, 1.18 ) }
    dend_20 { pt3dadd( -11.1339, -62.2595, -8.44949, 1.18 ) }
    dend_20 { pt3dadd( -11.8238, -62.7283, -8.81218, 1.18 ) }
    dend_20 { pt3dadd( -13.0471, -63.3633, -9.26959, 1.18 ) }
    dend_20 { pt3dadd( -14.3475, -63.894, -9.61031, 1.25 ) }
    dend_20 { pt3dadd( -15.0679, -64.1353, -9.74939, 1.25 ) }
    dend_20 { pt3dadd( -16.127, -64.4364, -9.86551, 1.25 ) }
    dend_20 { pt3dadd( -17.7163, -64.879, -10.0007, 1.77 ) }
    dend_20 { pt3dadd( -18.8192, -65.1817, -10.0785, 2.14 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 51.4271, 132.897, -19.2737, 0.74 ) }
    dend_14 { pt3dadd( 51.9766, 133.031, -20.1976, 0.74 ) }
    dend_14 { pt3dadd( 53.163, 133.473, -21.9951, 1.03 ) }
    dend_14 { pt3dadd( 53.7757, 133.807, -22.9032, 0.52 ) }
    dend_14 { pt3dadd( 54.2452, 134.146, -23.5888, 0.52 ) }
    dend_14 { pt3dadd( 54.7335, 134.594, -24.2834, 0.74 ) }
    dend_14 { pt3dadd( 55.2271, 135.12, -24.9464, 0.52 ) }
    dend_14 { pt3dadd( 55.7835, 135.831, -25.5507, 0.59 ) }
    dend_14 { pt3dadd( 56.523, 136.876, -26.1792, 0.44 ) }
    dend_14 { pt3dadd( 57.0443, 137.627, -26.5632, 0.52 ) }
    dend_14 { pt3dadd( 57.7335, 138.63, -27.0223, 0.44 ) }
    dend_14 { pt3dadd( 58.2649, 139.378, -27.3208, 0.29 ) }
    dend_14 { pt3dadd( 58.9298, 140.23, -27.6487, 0.29 ) }
    dend_14 { pt3dadd( 59.1379, 140.451, -27.7506, 0.59 ) }
    dend_14 { pt3dadd( 59.7053, 140.964, -28.0226, 0.59 ) }
    dend_14 { pt3dadd( 60.4188, 141.499, -28.3783, 0.44 ) }
    dend_14 { pt3dadd( 60.9849, 141.868, -28.6805, 0.59 ) }
    dend_14 { pt3dadd( 62.008, 142.546, -29.254, 0.37 ) }
    dend_14 { pt3dadd( 62.7644, 143.106, -29.689, 0.37 ) }
    dend_14 { pt3dadd( 63.3954, 143.606, -30.0305, 0.37 ) }
    dend_14 { pt3dadd( 64.1059, 144.189, -30.3764, 0.37 ) }
    dend_14 { pt3dadd( 65.1744, 145.026, -30.8298, 0.96 ) }
    dend_14 { pt3dadd( 65.8862, 145.575, -31.0993, 1.03 ) }
    dend_14 { pt3dadd( 66.8298, 146.304, -31.4169, 0.81 ) }
    dend_14 { pt3dadd( 67.4858, 146.835, -31.6294, 0.66 ) }
    dend_14 { pt3dadd( 68.3902, 147.621, -31.9362, 0.88 ) }
    dend_14 { pt3dadd( 68.8535, 148.05, -32.0944, 1.25 ) }
    dend_14 { pt3dadd( 69.5679, 148.662, -32.3099, 0.88 ) }
    dend_14 { pt3dadd( 70.2894, 149.198, -32.5824, 0.29 ) }
    dend_14 { pt3dadd( 70.7242, 149.493, -32.7779, 0.44 ) }
    dend_14 { pt3dadd( 71.3316, 149.906, -33.0838, 0.37 ) }
    dend_14 { pt3dadd( 72.2754, 150.498, -33.5779, 0.52 ) }
    dend_14 { pt3dadd( 73.2856, 151.064, -34.1102, 0.59 ) }
    dend_14 { pt3dadd( 75.0629, 151.897, -34.973, 0.66 ) }
    dend_14 { pt3dadd( 76.0923, 152.314, -35.4306, 0.52 ) }
    dend_14 { pt3dadd( 76.526, 152.472, -35.629, 0.59 ) }
    dend_14 { pt3dadd( 77.365, 152.767, -36.0108, 0.44 ) }
    dend_14 { pt3dadd( 78.2563, 153.116, -36.4085, 0.37 ) }
    dend_14 { pt3dadd( 79.4349, 153.642, -36.8739, 0.37 ) }
    dend_14 { pt3dadd( 80.1264, 153.969, -37.0703, 0.96 ) }
    dend_14 { pt3dadd( 81.0185, 154.446, -37.2808, 0.88 ) }
    dend_14 { pt3dadd( 81.9464, 155.006, -37.4784, 0.44 ) }
    dend_14 { pt3dadd( 82.5491, 155.417, -37.6129, 0.29 ) }
    dend_14 { pt3dadd( 83.2659, 155.951, -37.8189, 0.44 ) }
    dend_14 { pt3dadd( 84.1661, 156.702, -38.1332, 0.44 ) }
    dend_14 { pt3dadd( 85.1199, 157.581, -38.5482, 0.52 ) }
    dend_14 { pt3dadd( 85.7378, 158.215, -38.8784, 0.66 ) }
    dend_14 { pt3dadd( 86.729, 159.331, -39.6126, 0.66 ) }
    dend_14 { pt3dadd( 87.5554, 160.357, -40.3934, 0.44 ) }
    dend_14 { pt3dadd( 87.98, 160.937, -40.8858, 0.37 ) }
    dend_14 { pt3dadd( 88.4392, 161.635, -41.5356, 0.37 ) }
    dend_14 { pt3dadd( 88.7193, 162.037, -41.9525, 0.52 ) }
    dend_14 { pt3dadd( 89.2892, 162.721, -42.7175, 0.59 ) }
    dend_14 { pt3dadd( 89.6342, 163.012, -43.0631, 0.66 ) }
    dend_14 { pt3dadd( 90.3123, 163.341, -43.519, 0.52 ) }
    dend_14 { pt3dadd( 91.2129, 163.582, -44.0, 0.88 ) }
    dend_14 { pt3dadd( 91.8807, 163.7, -44.2965, 0.88 ) }
    dend_14 { pt3dadd( 92.6535, 163.847, -44.6582, 0.74 ) }
    dend_14 { pt3dadd( 93.2873, 163.968, -45.0394, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( 93.7492, 164.042, -45.3713, 0.29 ) }
    dend_14 { pt3dadd( 94.5904, 164.119, -46.0358, 0.29 ) }
    dend_14 { pt3dadd( 95.164, 164.143, -46.5154, 0.29 ) }
    dend_14 { pt3dadd( 96.2644, 164.237, -47.5291, 0.88 ) }
    dend_14 { pt3dadd( 97.3616, 164.437, -48.6064, 0.96 ) }
    dend_14 { pt3dadd( 97.8778, 164.583, -49.1255, 0.88 ) }
    dend_14 { pt3dadd( 98.6074, 164.813, -49.8721, 0.29 ) }
    dend_14 { pt3dadd( 98.9483, 164.902, -50.1868, 0.29 ) }
    dend_14 { pt3dadd( 99.5386, 164.965, -50.6587, 0.37 ) }
    dend_14 { pt3dadd( 100.161, 164.949, -51.097, 0.37 ) }
    dend_14 { pt3dadd( 100.646, 164.936, -51.4859, 0.37 ) }
    dend_14 { pt3dadd( 101.845, 164.876, -52.5532, 0.44 ) }
    dend_14 { pt3dadd( 102.563, 164.809, -53.2278, 0.59 ) }
    dend_14 { pt3dadd( 103.034, 164.719, -53.6693, 0.81 ) }
    dend_14 { pt3dadd( 103.733, 164.567, -54.3339, 0.59 ) }
    dend_14 { pt3dadd( 104.851, 164.372, -55.4123, 1.11 ) }
    dend_14 { pt3dadd( 105.402, 164.317, -55.9577, 1.47 ) }
    dend_14 { pt3dadd( 105.825, 164.297, -56.3515, 1.47 ) }
    dend_14 { pt3dadd( 106.65, 164.251, -57.0904, 1.03 ) }
    dend_14 { pt3dadd( 107.722, 164.191, -57.9564, 0.59 ) }
    dend_14 { pt3dadd( 108.696, 164.107, -58.6563, 0.96 ) }
    dend_14 { pt3dadd( 109.739, 163.97, -59.3362, 0.96 ) }
    dend_14 { pt3dadd( 110.784, 163.82, -60.006, 0.37 ) }
    dend_14 { pt3dadd( 111.738, 163.684, -60.5638, 0.37 ) }
    dend_14 { pt3dadd( 112.455, 163.574, -60.9445, 0.37 ) }
    dend_14 { pt3dadd( 113.584, 163.353, -61.5065, 0.37 ) }
    dend_14 { pt3dadd( 114.701, 163.132, -62.0385, 0.81 ) }
    dend_14 { pt3dadd( 115.664, 162.982, -62.4791, 1.03 ) }
    dend_14 { pt3dadd( 116.989, 162.876, -63.1045, 1.25 ) }
    dend_14 { pt3dadd( 117.369, 162.862, -63.2808, 1.47 ) }
    dend_14 { pt3dadd( 118.991, 162.808, -63.9931, 0.29 ) }
    dend_14 { pt3dadd( 119.513, 162.8, -64.1887, 0.29 ) }
    dend_14 { pt3dadd( 120.119, 162.797, -64.3763, 0.44 ) }
    dend_14 { pt3dadd( 120.838, 162.815, -64.5544, 0.22 ) }
    dend_14 { pt3dadd( 121.64, 162.862, -64.7195, 0.59 ) }
    dend_14 { pt3dadd( 122.345, 162.941, -64.8334, 0.59 ) }
    dend_14 { pt3dadd( 123.479, 163.126, -64.9771, 0.22 ) }
    dend_14 { pt3dadd( 124.672, 163.342, -65.1247, 0.22 ) }
    dend_14 { pt3dadd( 126.155, 163.604, -65.2955, 0.22 ) }
    dend_14 { pt3dadd( 127.013, 163.761, -65.3841, 0.44 ) }
    dend_14 { pt3dadd( 128.509, 164.086, -65.5332, 0.22 ) }
    dend_14 { pt3dadd( 129.412, 164.292, -65.6247, 0.22 ) }
    dend_14 { pt3dadd( 130.112, 164.449, -65.7025, 0.37 ) }
    dend_14 { pt3dadd( 132.071, 164.86, -65.9294, 0.22 ) }
    dend_14 { pt3dadd( 133.404, 165.114, -66.0955, 0.22 ) }
    dend_14 { pt3dadd( 135.791, 165.563, -66.4029, 0.22 ) }
    dend_14 { pt3dadd( 137.149, 165.791, -66.5994, 0.22 ) }
    dend_14 { pt3dadd( 137.825, 165.891, -66.7002, 0.96 ) }
    dend_14 { pt3dadd( 138.771, 166.025, -66.8437, 0.96 ) }
    dend_14 { pt3dadd( 139.627, 166.143, -66.9761, 0.88 ) }
    dend_14 { pt3dadd( 140.432, 166.234, -67.0943, 0.88 ) }
    dend_14 { pt3dadd( 142.445, 166.456, -67.3533, 0.22 ) }
    dend_14 { pt3dadd( 144.974, 166.715, -67.6319, 0.22 ) }
    dend_14 { pt3dadd( 146.249, 166.835, -67.7563, 0.44 ) }
    dend_14 { pt3dadd( 146.961, 166.88, -67.8248, 0.52 ) }
    dend_14 { pt3dadd( 148.583, 166.926, -67.9486, 0.22 ) }
    dend_14 { pt3dadd( 150.929, 166.917, -68.0852, 0.22 ) }
    dend_14 { pt3dadd( 152.755, 166.865, -68.1384, 0.22 ) }
    dend_14 { pt3dadd( 154.503, 166.756, -68.1661, 0.22 ) }
    dend_14 { pt3dadd( 156.849, 166.528, -68.1838, 0.22 ) }
    dend_14 { pt3dadd( 158.229, 166.345, -68.1848, 0.22 ) }
    dend_14 { pt3dadd( 159.295, 166.144, -68.1811, 1.33 ) }
    dend_14 { pt3dadd( 160.021, 165.938, -68.1767, 1.47 ) }
    dend_14 { pt3dadd( 161.506, 165.482, -68.1558, 0.66 ) }
    dend_14 { pt3dadd( 162.591, 165.099, -68.1359, 0.29 ) }
    dend_14 { pt3dadd( 164.06, 164.538, -68.1226, 0.29 ) }
    dend_14 { pt3dadd( 165.176, 164.075, -68.1694, 0.29 ) }
    dend_14 { pt3dadd( 166.282, 163.546, -68.2354, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 51.4271, 132.897, -19.2737, 0.37 ) }
    dend_13 { pt3dadd( 52.1163, 133.588, -19.0504, 0.37 ) }
    dend_13 { pt3dadd( 52.7874, 134.308, -18.7983, 0.37 ) }
    dend_13 { pt3dadd( 53.0853, 134.64, -18.6719, 0.37 ) }
    dend_13 { pt3dadd( 53.5981, 135.206, -18.4858, 0.37 ) }
    dend_13 { pt3dadd( 53.9622, 135.627, -18.3631, 0.37 ) }
    dend_13 { pt3dadd( 54.7383, 136.562, -18.0931, 0.66 ) }
    dend_13 { pt3dadd( 55.1101, 137.05, -17.8981, 1.25 ) }
    dend_13 { pt3dadd( 55.3561, 137.412, -17.7323, 1.25 ) }
    dend_13 { pt3dadd( 55.8314, 138.241, -17.3382, 0.59 ) }
    dend_13 { pt3dadd( 56.2059, 138.986, -16.9526, 0.37 ) }
    dend_13 { pt3dadd( 56.6382, 139.852, -16.4624, 0.37 ) }
    dend_13 { pt3dadd( 57.2584, 141.029, -15.7589, 0.52 ) }
    dend_13 { pt3dadd( 57.4907, 141.48, -15.4741, 0.37 ) }
    dend_13 { pt3dadd( 57.81, 142.111, -15.0852, 0.52 ) }
    dend_13 { pt3dadd( 58.0444, 142.605, -14.7493, 0.66 ) }
    dend_13 { pt3dadd( 58.2378, 143.012, -14.4779, 0.66 ) }
    dend_13 { pt3dadd( 58.4814, 143.527, -14.1614, 0.44 ) }
    dend_13 { pt3dadd( 58.8889, 144.417, -13.7001, 0.66 ) }
    dend_13 { pt3dadd( 59.0916, 144.898, -13.45, 0.81 ) }
    dend_13 { pt3dadd( 59.5117, 145.972, -12.8992, 1.03 ) }
    dend_13 { pt3dadd( 59.8044, 146.743, -12.4995, 1.18 ) }
    dend_13 { pt3dadd( 59.951, 147.146, -12.2447, 1.18 ) }
    dend_13 { pt3dadd( 60.2714, 147.991, -11.6222, 0.44 ) }
    dend_13 { pt3dadd( 60.537, 148.692, -11.0539, 0.37 ) }
    dend_13 { pt3dadd( 60.6763, 149.096, -10.7174, 0.37 ) }
    dend_13 { pt3dadd( 60.8773, 149.735, -10.2155, 0.66 ) }
    dend_13 { pt3dadd( 61.3065, 151.076, -9.14082, 0.96 ) }
    dend_13 { pt3dadd( 61.3866, 151.313, -8.96004, 0.66 ) }
    dend_13 { pt3dadd( 61.575, 151.8, -8.59104, 0.29 ) }
    dend_13 { pt3dadd( 61.8027, 152.313, -8.24524, 0.29 ) }
    dend_13 { pt3dadd( 61.9972, 152.678, -8.04375, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_13 { pt3dadd( 62.5035, 153.446, -7.70226, 0.29 ) }
    dend_13 { pt3dadd( 63.0147, 154.102, -7.46652, 0.44 ) }
    dend_13 { pt3dadd( 63.5752, 154.769, -7.22735, 0.59 ) }
    dend_13 { pt3dadd( 64.2194, 155.496, -6.97034, 0.59 ) }
    dend_13 { pt3dadd( 64.9424, 156.311, -6.69329, 0.66 ) }
    dend_13 { pt3dadd( 65.3492, 156.798, -6.52574, 0.44 ) }
    dend_13 { pt3dadd( 65.7448, 157.327, -6.34764, 0.37 ) }
    dend_13 { pt3dadd( 66.0727, 157.814, -6.17234, 0.52 ) }
    dend_13 { pt3dadd( 66.3815, 158.305, -5.98025, 0.66 ) }
    dend_13 { pt3dadd( 66.6346, 158.728, -5.79498, 0.66 ) }
    dend_13 { pt3dadd( 67.1622, 159.654, -5.36115, 0.59 ) }
    dend_13 { pt3dadd( 67.5195, 160.306, -5.05867, 0.74 ) }
    dend_13 { pt3dadd( 67.9464, 161.13, -4.65907, 0.66 ) }
    dend_13 { pt3dadd( 68.453, 162.193, -4.14827, 0.52 ) }
    dend_13 { pt3dadd( 68.8099, 163.006, -3.75904, 0.59 ) }
    dend_13 { pt3dadd( 69.0441, 163.565, -3.48571, 0.59 ) }
    dend_13 { pt3dadd( 69.2892, 164.134, -3.20355, 0.59 ) }
    dend_13 { pt3dadd( 69.691, 165.024, -2.72663, 0.44 ) }
    dend_13 { pt3dadd( 70.0041, 165.72, -2.3392, 0.29 ) }
    dend_13 { pt3dadd( 70.2602, 166.358, -1.95293, 0.44 ) }
    dend_13 { pt3dadd( 70.5539, 167.071, -1.4634, 0.59 ) }
    dend_13 { pt3dadd( 70.9061, 167.771, -0.926974, 0.74 ) }
    dend_13 { pt3dadd( 71.2716, 168.37, -0.450774, 0.59 ) }
    dend_13 { pt3dadd( 71.709, 169.005, 0.0256346, 0.96 ) }
    dend_13 { pt3dadd( 72.0149, 169.46, 0.364163, 1.11 ) }
    dend_13 { pt3dadd( 72.5391, 170.353, 0.96094, 0.59 ) }
    dend_13 { pt3dadd( 72.9572, 171.209, 1.44461, 0.52 ) }
    dend_13 { pt3dadd( 73.2979, 171.93, 1.80675, 0.52 ) }
    dend_13 { pt3dadd( 73.6535, 172.638, 2.12908, 0.66 ) }
    dend_13 { pt3dadd( 74.2455, 173.78, 2.58883, 0.74 ) }
    dend_13 { pt3dadd( 74.6073, 174.522, 2.85008, 0.74 ) }
    dend_13 { pt3dadd( 75.0105, 175.405, 3.13696, 0.29 ) }
    dend_13 { pt3dadd( 75.4369, 176.341, 3.43396, 0.29 ) }
    dend_13 { pt3dadd( 75.6094, 176.66, 3.54016, 0.29 ) }
    dend_13 { pt3dadd( 76.1135, 177.465, 3.79531, 0.29 ) }
    dend_13 { pt3dadd( 76.6481, 178.167, 3.9989, 0.52 ) }
    dend_13 { pt3dadd( 77.0142, 178.58, 4.13954, 0.37 ) }
    dend_13 { pt3dadd( 77.4995, 179.063, 4.33102, 0.37 ) }
    dend_13 { pt3dadd( 78.0063, 179.52, 4.52704, 0.29 ) }
    dend_13 { pt3dadd( 78.8218, 180.181, 4.85347, 0.29 ) }
    dend_13 { pt3dadd( 79.4389, 180.626, 5.09509, 0.37 ) }
    dend_13 { pt3dadd( 79.9631, 180.985, 5.29754, 0.52 ) }
    dend_13 { pt3dadd( 80.3663, 181.262, 5.46656, 0.52 ) }
    dend_13 { pt3dadd( 80.8745, 181.612, 5.69179, 0.44 ) }
    dend_13 { pt3dadd( 81.6656, 182.156, 6.04118, 0.44 ) }
    dend_13 { pt3dadd( 82.1802, 182.517, 6.2571, 0.59 ) }
    dend_13 { pt3dadd( 82.7158, 182.93, 6.46609, 0.74 ) }
    dend_13 { pt3dadd( 83.2256, 183.356, 6.71901, 0.74 ) }
    dend_13 { pt3dadd( 83.8031, 183.876, 7.04688, 0.52 ) }
    dend_13 { pt3dadd( 84.2908, 184.338, 7.3333, 0.37 ) }
    dend_13 { pt3dadd( 84.9709, 184.981, 7.72287, 0.29 ) }
    dend_13 { pt3dadd( 85.4953, 185.477, 8.03058, 0.29 ) }
    dend_13 { pt3dadd( 86.7327, 186.623, 8.74363, 0.66 ) }
    dend_13 { pt3dadd( 87.3238, 187.168, 9.09163, 0.44 ) }
    dend_13 { pt3dadd( 87.922, 187.706, 9.46264, 0.52 ) }
    dend_13 { pt3dadd( 88.2823, 188.023, 9.6912, 0.52 ) }
    dend_13 { pt3dadd( 88.6821, 188.381, 9.95331, 0.37 ) }
    dend_13 { pt3dadd( 89.0198, 188.716, 10.1742, 0.37 ) }
    dend_13 { pt3dadd( 89.3808, 189.094, 10.3714, 0.44 ) }
    dend_13 { pt3dadd( 89.8889, 189.683, 10.6778, 0.74 ) }
    dend_13 { pt3dadd( 90.2031, 190.084, 10.8752, 0.88 ) }
    dend_13 { pt3dadd( 90.6716, 190.754, 11.1851, 0.74 ) }
    dend_13 { pt3dadd( 91.0155, 191.273, 11.419, 0.52 ) }
    dend_13 { pt3dadd( 91.4507, 191.936, 11.7161, 0.37 ) }
    dend_13 { pt3dadd( 91.8523, 192.518, 11.9777, 0.22 ) }
    dend_13 { pt3dadd( 92.1391, 192.897, 12.1498, 0.22 ) }
    dend_13 { pt3dadd( 92.6096, 193.464, 12.4178, 0.59 ) }
    dend_13 { pt3dadd( 92.9892, 193.872, 12.6476, 0.74 ) }
    dend_13 { pt3dadd( 93.4308, 194.274, 12.9449, 0.59 ) }
    dend_13 { pt3dadd( 93.636, 194.436, 13.0988, 0.59 ) }
    dend_13 { pt3dadd( 94.5547, 195.099, 13.8159, 0.37 ) }
    dend_13 { pt3dadd( 94.9171, 195.357, 14.0965, 0.37 ) }
    dend_13 { pt3dadd( 95.5216, 195.763, 14.5207, 0.52 ) }
    dend_13 { pt3dadd( 96.1167, 196.13, 14.8739, 0.52 ) }
    dend_13 { pt3dadd( 96.5982, 196.387, 15.1049, 0.52 ) }
    dend_13 { pt3dadd( 97.3146, 196.719, 15.45, 0.81 ) }
    dend_13 { pt3dadd( 97.7351, 196.893, 15.6545, 0.88 ) }
    dend_13 { pt3dadd( 98.2874, 197.103, 15.9126, 0.88 ) }
    dend_13 { pt3dadd( 99.1928, 197.412, 16.3076, 0.44 ) }
    dend_13 { pt3dadd( 100.04, 197.672, 16.6803, 0.37 ) }
    dend_13 { pt3dadd( 101.459, 198.065, 17.3124, 0.59 ) }
    dend_13 { pt3dadd( 102.001, 198.195, 17.5588, 0.59 ) }
    dend_13 { pt3dadd( 102.789, 198.377, 17.9652, 0.37 ) }
    dend_13 { pt3dadd( 103.353, 198.515, 18.2856, 0.29 ) }
    dend_13 { pt3dadd( 103.961, 198.661, 18.6463, 0.29 ) }
    dend_13 { pt3dadd( 104.72, 198.805, 19.0368, 0.29 ) }
    dend_13 { pt3dadd( 105.525, 198.92, 19.3742, 0.29 ) }
    dend_13 { pt3dadd( 106.837, 199.068, 19.927, 0.59 ) }
    dend_13 { pt3dadd( 107.432, 199.135, 20.1853, 0.59 ) }
    dend_13 { pt3dadd( 107.989, 199.198, 20.4276, 0.59 ) }
    dend_13 { pt3dadd( 109.124, 199.295, 20.894, 0.29 ) }
    dend_13 { pt3dadd( 109.728, 199.337, 21.1194, 0.29 ) }
    dend_13 { pt3dadd( 110.715, 199.411, 21.4453, 0.66 ) }
    dend_13 { pt3dadd( 111.41, 199.462, 21.6414, 0.74 ) }
    dend_13 { pt3dadd( 112.03, 199.507, 21.8124, 0.74 ) }
    dend_13 { pt3dadd( 113.27, 199.628, 22.1102, 0.22 ) }
    dend_13 { pt3dadd( 114.386, 199.782, 22.3495, 0.22 ) }
    dend_13 { pt3dadd( 115.033, 199.888, 22.4534, 0.29 ) }
    dend_13 { pt3dadd( 115.475, 199.979, 22.498, 0.29 ) }
    dend_13 { pt3dadd( 116.293, 200.199, 22.5571, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_13 { pt3dadd( 117.306, 200.587, 22.6074, 0.37 ) }
    dend_13 { pt3dadd( 117.83, 200.859, 22.6226, 0.52 ) }
    dend_13 { pt3dadd( 118.226, 201.097, 22.6337, 0.52 ) }
    dend_13 { pt3dadd( 118.804, 201.466, 22.659, 0.59 ) }
    dend_13 { pt3dadd( 119.468, 201.873, 22.7062, 0.59 ) }
    dend_13 { pt3dadd( 120.155, 202.232, 22.8039, 0.52 ) }
    dend_13 { pt3dadd( 120.686, 202.454, 22.9163, 0.59 ) }
    dend_13 { pt3dadd( 121.351, 202.678, 23.0693, 0.44 ) }
    dend_13 { pt3dadd( 121.908, 202.833, 23.2008, 0.29 ) }
    dend_13 { pt3dadd( 122.514, 202.989, 23.3818, 0.29 ) }
    dend_13 { pt3dadd( 123.603, 203.323, 23.7619, 0.29 ) }
    dend_13 { pt3dadd( 123.988, 203.455, 23.9097, 0.29 ) }
    dend_13 { pt3dadd( 124.752, 203.753, 24.2167, 0.29 ) }
    dend_13 { pt3dadd( 125.148, 203.93, 24.3801, 0.29 ) }
    dend_13 { pt3dadd( 126.357, 204.525, 24.8474, 0.29 ) }
    dend_13 { pt3dadd( 126.995, 204.861, 25.0328, 0.29 ) }
    dend_13 { pt3dadd( 127.832, 205.312, 25.1956, 0.22 ) }
    dend_13 { pt3dadd( 128.249, 205.523, 25.2507, 0.44 ) }
    dend_13 { pt3dadd( 128.671, 205.717, 25.2836, 0.44 ) }
    dend_13 { pt3dadd( 129.388, 206.001, 25.3066, 0.29 ) }
    dend_13 { pt3dadd( 130.615, 206.359, 25.2801, 0.22 ) }
    dend_13 { pt3dadd( 131.148, 206.479, 25.2728, 0.22 ) }
    dend_13 { pt3dadd( 131.665, 206.585, 25.2713, 0.44 ) }
    dend_13 { pt3dadd( 132.165, 206.663, 25.2626, 0.44 ) }
    dend_13 { pt3dadd( 132.789, 206.73, 25.2328, 0.37 ) }
    dend_13 { pt3dadd( 133.599, 206.809, 25.1796, 0.29 ) }
    dend_13 { pt3dadd( 134.504, 206.902, 25.1008, 0.29 ) }
    dend_13 { pt3dadd( 135.085, 206.984, 25.0224, 0.29 ) }
    dend_13 { pt3dadd( 136.038, 207.162, 24.8507, 0.29 ) }
    dend_13 { pt3dadd( 136.622, 207.31, 24.7241, 0.29 ) }
    dend_13 { pt3dadd( 137.346, 207.542, 24.5253, 0.44 ) }
    dend_13 { pt3dadd( 138.021, 207.765, 24.2837, 0.37 ) }
    dend_13 { pt3dadd( 138.67, 207.923, 24.0048, 0.52 ) }
    dend_13 { pt3dadd( 139.178, 208.022, 23.7766, 0.52 ) }
    dend_13 { pt3dadd( 139.57, 208.088, 23.6146, 0.66 ) }
    dend_13 { pt3dadd( 140.665, 208.249, 23.1859, 0.96 ) }
    dend_13 { pt3dadd( 141.644, 208.393, 22.8246, 0.81 ) }
    dend_13 { pt3dadd( 142.964, 208.641, 22.3605, 0.29 ) }
    dend_13 { pt3dadd( 143.801, 208.808, 22.0082, 0.29 ) }
    dend_13 { pt3dadd( 144.54, 208.992, 21.6734, 0.29 ) }
    dend_13 { pt3dadd( 145.031, 209.157, 21.4788, 0.29 ) }
    dend_13 { pt3dadd( 146.011, 209.515, 21.2334, 0.29 ) }
    dend_13 { pt3dadd( 146.605, 209.72, 21.1417, 0.66 ) }
    dend_13 { pt3dadd( 148.814, 210.327, 20.9182, 0.29 ) }
    dend_13 { pt3dadd( 149.303, 210.405, 20.8773, 0.22 ) }
    dend_13 { pt3dadd( 151.192, 210.593, 20.719, 0.22 ) }
    dend_13 { pt3dadd( 153.05, 210.656, 20.5841, 0.22 ) }
    dend_13 { pt3dadd( 153.869, 210.632, 20.5407, 0.37 ) }
    dend_13 { pt3dadd( 154.676, 210.579, 20.5638, 0.44 ) }
    dend_13 { pt3dadd( 155.012, 210.556, 20.6315, 0.22 ) }
    dend_13 { pt3dadd( 161.786, 215.883, 22.3331, 0.22 ) }
    dend_13 { pt3dadd( 169.305, 220.348, 22.9051, 0.22 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 52/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -97.0566, 106.783, 37.7562, 0.88 ) }
    dend_9 { pt3dadd( -104.585, 112.056, 42.2116, 0.88 ) }
    dend_9 { pt3dadd( -111.953, 118.739, 44.6907, 0.88 ) }
    dend_9 { pt3dadd( -118.807, 126.397, 44.7427, 0.88 ) }
    dend_9 { pt3dadd( -127.568, 131.534, 45.7453, 0.88 ) }
    dend_9 { pt3dadd( -137.107, 135.06, 45.8311, 0.88 ) }
    dend_9 { pt3dadd( -146.668, 138.456, 46.5028, 0.88 ) }
    dend_9 { pt3dadd( -155.863, 142.728, 45.5617, 0.88 ) }
    dend_9 { pt3dadd( -165.289, 146.408, 46.6217, 0.88 ) }
    dend_9 { pt3dadd( -173.996, 151.26, 48.7832, 0.88 ) }
    dend_9 { pt3dadd( -181.636, 156.831, 52.6671, 0.88 ) }
    dend_9 { pt3dadd( -187.706, 162.844, 58.3071, 0.88 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 64/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -97.0566, 106.783, 37.7562, 0.22 ) }
    dend_6 { pt3dadd( -104.016, 111.75, 42.0887, 0.88 ) }
    dend_6 { pt3dadd( -110.368, 116.664, 47.3247, 0.88 ) }
    dend_6 { pt3dadd( -115.524, 121.096, 54.0696, 0.88 ) }
    dend_6 { pt3dadd( -119.399, 126.17, 61.2334, 0.88 ) }
    dend_6 { pt3dadd( -122.057, 129.634, 69.737, 0.88 ) }
    dend_6 { pt3dadd( -124.264, 132.681, 78.5164, 0.88 ) }
    dend_6 { pt3dadd( -125.419, 135.038, 87.6886, 0.88 ) }
    dend_6 { pt3dadd( -127.816, 136.579, 96.7812, 0.88 ) }
    dend_6 { pt3dadd( -130.594, 136.71, 105.884, 0.88 ) }
    dend_6 { pt3dadd( -134.57, 136.78, 114.53, 0.88 ) }
    dend_6 { pt3dadd( -136.936, 137.581, 123.718, 0.88 ) }
    dend_6 { pt3dadd( -138.273, 137.926, 133.136, 0.88 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 77/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -92.982, 98.6153, -109.553, 0.29 ) }
    dend_4 { pt3dadd( -92.813, 99.8289, -110.611, 0.29 ) }
    dend_4 { pt3dadd( -92.8525, 100.613, -111.348, 0.29 ) }
    dend_4 { pt3dadd( -92.971, 101.215, -111.93, 0.37 ) }
    dend_4 { pt3dadd( -93.0452, 101.531, -112.225, 0.37 ) }
    dend_4 { pt3dadd( -93.1224, 101.975, -112.651, 0.81 ) }
    dend_4 { pt3dadd( -93.2177, 102.526, -113.186, 0.81 ) }
    dend_4 { pt3dadd( -93.3685, 103.023, -113.685, 0.44 ) }
    dend_4 { pt3dadd( -93.4973, 103.353, -114.027, 0.22 ) }
    dend_4 { pt3dadd( -93.647, 103.711, -114.465, 0.22 ) }
    dend_4 { pt3dadd( -93.9231, 104.486, -115.526, 0.37 ) }
    dend_4 { pt3dadd( -93.9844, 104.699, -115.847, 0.22 ) }
    dend_4 { pt3dadd( -94.1021, 105.129, -116.489, 0.22 ) }
    dend_4 { pt3dadd( -94.2077, 105.475, -116.995, 0.59 ) }
    dend_4 { pt3dadd( -94.4023, 105.983, -117.805, 0.74 ) }
    dend_4 { pt3dadd( -94.6746, 106.508, -118.851, 0.37 ) }
    dend_4 { pt3dadd( -94.919, 106.829, -119.778, 0.37 ) }
    dend_4 { pt3dadd( -95.0738, 107.036, -120.529, 0.37 ) }
    dend_4 { pt3dadd( -95.2185, 107.236, -121.305, 1.03 ) }
    dend_4 { pt3dadd( -95.4722, 107.566, -122.641, 1.62 ) }
    dend_4 { pt3dadd( -95.8479, 107.987, -124.478, 1.84 ) }
    dend_4 { pt3dadd( -96.3535, 108.507, -126.96, 1.33 ) }
    dend_4 { pt3dadd( -96.6851, 108.864, -128.702, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_4 { pt3dadd( -96.8225, 109.042, -129.516, 0.44 ) }
    dend_4 { pt3dadd( -96.9502, 109.246, -130.301, 0.44 ) }
    dend_4 { pt3dadd( -97.0621, 109.456, -130.918, 0.59 ) }
    dend_4 { pt3dadd( -97.4287, 110.176, -132.56, 0.74 ) }
    dend_4 { pt3dadd( -97.5569, 110.391, -133.033, 0.74 ) }
    dend_4 { pt3dadd( -97.765, 110.598, -133.65, 0.88 ) }
    dend_4 { pt3dadd( -98.1079, 110.797, -134.568, 0.96 ) }
    dend_4 { pt3dadd( -98.4276, 110.892, -135.359, 0.52 ) }
    dend_4 { pt3dadd( -98.6719, 110.934, -135.875, 0.37 ) }
    dend_4 { pt3dadd( -99.3514, 111.001, -137.16, 0.29 ) }
    dend_4 { pt3dadd( -99.868, 111.04, -138.21, 0.29 ) }
    dend_4 { pt3dadd( -100.275, 111.081, -139.068, 0.29 ) }
    dend_4 { pt3dadd( -100.994, 111.223, -140.606, 0.29 ) }
    dend_4 { pt3dadd( -101.275, 111.363, -141.265, 0.29 ) }
    dend_4 { pt3dadd( -101.483, 111.584, -141.853, 0.29 ) }
    dend_4 { pt3dadd( -101.704, 112.05, -142.629, 0.29 ) }
    dend_4 { pt3dadd( -101.805, 112.475, -143.22, 0.52 ) }
    dend_4 { pt3dadd( -101.842, 112.843, -143.697, 0.66 ) }
    dend_4 { pt3dadd( -101.898, 113.427, -144.395, 0.66 ) }
    dend_4 { pt3dadd( -101.985, 114.055, -145.235, 0.44 ) }
    dend_4 { pt3dadd( -102.071, 114.397, -145.775, 0.59 ) }
    dend_4 { pt3dadd( -102.274, 115.095, -146.984, 0.29 ) }
    dend_4 { pt3dadd( -102.404, 115.605, -147.91, 0.29 ) }
    dend_4 { pt3dadd( -102.522, 116.072, -148.734, 0.81 ) }
    dend_4 { pt3dadd( -102.666, 116.672, -149.723, 1.25 ) }
    dend_4 { pt3dadd( -102.967, 118.029, -151.744, 0.44 ) }
    dend_4 { pt3dadd( -103.179, 119.144, -153.232, 0.74 ) }
    dend_4 { pt3dadd( -103.329, 120.065, -154.324, 0.29 ) }
    dend_4 { pt3dadd( -103.41, 120.611, -154.954, 0.29 ) }
    dend_4 { pt3dadd( -103.482, 121.304, -155.708, 0.29 ) }
    dend_4 { pt3dadd( -103.568, 122.553, -156.823, 0.22 ) }
    dend_4 { pt3dadd( -103.581, 123.441, -157.396, 0.22 ) }
    dend_4 { pt3dadd( -103.586, 123.746, -157.545, 0.29 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 33/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -92.982, 98.6153, -109.553, 0.44 ) }
    dend_3 { pt3dadd( -93.8299, 99.1608, -109.737, 0.44 ) }
    dend_3 { pt3dadd( -94.2653, 99.4239, -109.826, 0.52 ) }
    dend_3 { pt3dadd( -94.6102, 99.6188, -109.893, 0.59 ) }
    dend_3 { pt3dadd( -94.9816, 99.8114, -109.979, 0.59 ) }
    dend_3 { pt3dadd( -95.4302, 100.027, -110.094, 0.37 ) }
    dend_3 { pt3dadd( -95.8364, 100.221, -110.213, 0.37 ) }
    dend_3 { pt3dadd( -96.1747, 100.377, -110.32, 0.96 ) }
    dend_3 { pt3dadd( -96.5985, 100.57, -110.488, 1.4 ) }
    dend_3 { pt3dadd( -96.9464, 100.736, -110.647, 1.62 ) }
    dend_3 { pt3dadd( -97.4255, 101.003, -110.899, 0.59 ) }
    dend_3 { pt3dadd( -97.7949, 101.252, -111.142, 0.81 ) }
    dend_3 { pt3dadd( -98.0801, 101.468, -111.356, 0.96 ) }
    dend_3 { pt3dadd( -98.2233, 101.586, -111.471, 1.18 ) }
    dend_3 { pt3dadd( -98.4738, 101.812, -111.678, 0.29 ) }
    dend_3 { pt3dadd( -98.7918, 102.109, -111.928, 0.22 ) }
    dend_3 { pt3dadd( -99.224, 102.493, -112.263, 0.96 ) }
    dend_3 { pt3dadd( -99.4462, 102.669, -112.431, 0.96 ) }
    dend_3 { pt3dadd( -99.774, 102.902, -112.691, 0.66 ) }
    dend_3 { pt3dadd( -100.141, 103.124, -113.006, 0.44 ) }
    dend_3 { pt3dadd( -100.529, 103.313, -113.379, 0.44 ) }
    dend_3 { pt3dadd( -100.918, 103.478, -113.775, 0.81 ) }
    dend_3 { pt3dadd( -101.264, 103.626, -114.141, 0.96 ) }
    dend_3 { pt3dadd( -101.656, 103.805, -114.582, 0.74 ) }
    dend_3 { pt3dadd( -102.208, 104.061, -115.246, 0.29 ) }
    dend_3 { pt3dadd( -102.535, 104.216, -115.668, 0.29 ) }
    dend_3 { pt3dadd( -102.754, 104.325, -115.968, 0.44 ) }
    dend_3 { pt3dadd( -102.921, 104.407, -116.208, 0.66 ) }
    dend_3 { pt3dadd( -103.105, 104.493, -116.484, 0.52 ) }
    dend_3 { pt3dadd( -103.322, 104.576, -116.814, 0.52 ) }
    dend_3 { pt3dadd( -103.584, 104.639, -117.213, 0.66 ) }
    dend_3 { pt3dadd( -103.873, 104.651, -117.618, 0.37 ) }
    dend_3 { pt3dadd( -104.147, 104.611, -117.975, 0.29 ) }
    dend_3 { pt3dadd( -104.374, 104.559, -118.236, 0.29 ) }
    dend_3 { pt3dadd( -104.554, 104.513, -118.431, 0.29 ) }
    dend_3 { pt3dadd( -104.891, 104.417, -118.753, 0.29 ) }
    dend_3 { pt3dadd( -105.128, 104.336, -118.996, 0.52 ) }
    dend_3 { pt3dadd( -105.35, 104.25, -119.248, 0.74 ) }
    dend_3 { pt3dadd( -105.633, 104.102, -119.595, 0.74 ) }
    dend_3 { pt3dadd( -106.008, 103.8, -120.155, 0.52 ) }
    dend_3 { pt3dadd( -106.169, 103.563, -120.493, 1.47 ) }
    dend_3 { pt3dadd( -106.4, 103.072, -121.098, 1.92 ) }
    dend_3 { pt3dadd( -106.505, 102.806, -121.419, 1.84 ) }
    dend_3 { pt3dadd( -106.648, 102.41, -121.907, 0.88 ) }
    dend_3 { pt3dadd( -106.79, 102.036, -122.442, 0.66 ) }
    dend_3 { pt3dadd( -107.012, 101.624, -123.167, 0.37 ) }
    dend_3 { pt3dadd( -107.168, 101.473, -123.579, 0.29 ) }
    dend_3 { pt3dadd( -107.37, 101.405, -123.99, 0.29 ) }
    dend_3 { pt3dadd( -107.633, 101.414, -124.424, 0.44 ) }
    dend_3 { pt3dadd( -108.139, 101.503, -125.134, 0.59 ) }
    dend_3 { pt3dadd( -108.585, 101.637, -125.746, 0.66 ) }
    dend_3 { pt3dadd( -108.847, 101.737, -126.103, 0.66 ) }
    dend_3 { pt3dadd( -109.008, 101.794, -126.34, 0.44 ) }
    dend_3 { pt3dadd( -109.335, 101.882, -126.831, 0.37 ) }
    dend_3 { pt3dadd( -109.792, 101.98, -127.56, 0.37 ) }
    dend_3 { pt3dadd( -110.274, 102.065, -128.3, 0.37 ) }
    dend_3 { pt3dadd( -110.436, 102.094, -128.547, 0.52 ) }
    dend_3 { pt3dadd( -110.769, 102.136, -129.046, 0.66 ) }
    dend_3 { pt3dadd( -111.159, 102.175, -129.601, 0.37 ) }
    dend_3 { pt3dadd( -111.602, 102.162, -130.297, 0.37 ) }
    dend_3 { pt3dadd( -111.97, 102.098, -130.882, 0.74 ) }
    dend_3 { pt3dadd( -112.168, 102.038, -131.181, 0.74 ) }
    dend_3 { pt3dadd( -112.57, 101.899, -131.798, 0.52 ) }
    dend_3 { pt3dadd( -112.956, 101.761, -132.395, 0.52 ) }
    dend_3 { pt3dadd( -113.834, 101.379, -133.858, 0.52 ) }
    dend_3 { pt3dadd( -114.123, 101.192, -134.401, 0.44 ) }
    dend_3 { pt3dadd( -114.297, 101.031, -134.799, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( -114.457, 100.847, -135.199, 0.29 ) }
    dend_3 { pt3dadd( -114.75, 100.467, -135.95, 0.29 ) }
    dend_3 { pt3dadd( -114.975, 100.188, -136.522, 0.29 ) }
    dend_3 { pt3dadd( -115.421, 99.7938, -137.428, 0.52 ) }
    dend_3 { pt3dadd( -115.673, 99.5447, -138.029, 0.66 ) }
    dend_3 { pt3dadd( -115.826, 99.348, -138.476, 0.66 ) }
    dend_3 { pt3dadd( -115.91, 99.1683, -138.821, 0.52 ) }
    dend_3 { pt3dadd( -116.0, 98.8984, -139.28, 0.52 ) }
    dend_3 { pt3dadd( -116.077, 98.7023, -139.628, 0.22 ) }
    dend_3 { pt3dadd( -116.422, 98.083, -140.853, 1.18 ) }
    dend_3 { pt3dadd( -116.54, 97.8535, -141.297, 1.4 ) }
    dend_3 { pt3dadd( -116.738, 97.3788, -142.1, 0.52 ) }
    dend_3 { pt3dadd( -116.813, 97.1894, -142.379, 0.29 ) }
    dend_3 { pt3dadd( -116.956, 96.8594, -142.781, 0.29 ) }
    dend_3 { pt3dadd( -117.171, 96.4544, -143.217, 0.29 ) }
    dend_3 { pt3dadd( -117.704, 95.639, -143.917, 0.44 ) }
    dend_3 { pt3dadd( -118.1, 95.1213, -144.304, 0.44 ) }
    dend_3 { pt3dadd( -118.42, 94.7225, -144.575, 0.29 ) }
    dend_3 { pt3dadd( -119.061, 93.9141, -145.078, 0.52 ) }
    dend_3 { pt3dadd( -119.369, 93.5209, -145.288, 0.52 ) }
    dend_3 { pt3dadd( -119.809, 92.9691, -145.543, 0.37 ) }
    dend_3 { pt3dadd( -120.305, 92.4105, -145.762, 0.29 ) }
    dend_3 { pt3dadd( -121.016, 91.6986, -146.053, 0.44 ) }
    dend_3 { pt3dadd( -121.339, 91.4139, -146.18, 0.44 ) }
    dend_3 { pt3dadd( -121.889, 91.0114, -146.39, 0.22 ) }
    dend_3 { pt3dadd( -122.348, 90.7267, -146.578, 0.22 ) }
    dend_3 { pt3dadd( -122.798, 90.4996, -146.78, 0.52 ) }
    dend_3 { pt3dadd( -122.966, 90.4282, -146.861, 0.52 ) }
    dend_3 { pt3dadd( -123.647, 90.1864, -147.202, 0.29 ) }
    dend_3 { pt3dadd( -124.48, 89.9293, -147.653, 0.29 ) }
    dend_3 { pt3dadd( -125.117, 89.7662, -148.023, 0.22 ) }
    dend_3 { pt3dadd( -125.946, 89.5673, -148.518, 0.22 ) }
    dend_3 { pt3dadd( -126.408, 89.4559, -148.8, 0.59 ) }
    dend_3 { pt3dadd( -126.884, 89.3359, -149.087, 0.44 ) }
    dend_3 { pt3dadd( -127.35, 89.2197, -149.353, 0.22 ) }
    dend_3 { pt3dadd( -127.638, 89.1507, -149.498, 0.22 ) }
    dend_3 { pt3dadd( -128.029, 89.0632, -149.665, 0.37 ) }
    dend_3 { pt3dadd( -128.377, 88.9922, -149.787, 0.37 ) }
    dend_3 { pt3dadd( -128.763, 88.9213, -149.903, 0.22 ) }
    dend_3 { pt3dadd( -129.277, 88.8383, -150.05, 0.22 ) }
    dend_3 { pt3dadd( -129.699, 88.7839, -150.173, 0.37 ) }
    dend_3 { pt3dadd( -130.056, 88.7517, -150.275, 0.37 ) }
    dend_3 { pt3dadd( -130.495, 88.7165, -150.389, 0.37 ) }
    dend_3 { pt3dadd( -130.929, 88.6781, -150.495, 0.29 ) }
    dend_3 { pt3dadd( -131.339, 88.6441, -150.599, 0.37 ) }
    dend_3 { pt3dadd( -132.374, 88.5704, -150.868, 0.22 ) }
    dend_3 { pt3dadd( -133.081, 88.5227, -151.05, 0.22 ) }
    dend_3 { pt3dadd( -134.063, 88.4603, -151.294, 0.22 ) }
    dend_3 { pt3dadd( -134.47, 88.4354, -151.39, 0.22 ) }
    dend_3 { pt3dadd( -134.898, 88.4088, -151.484, 0.44 ) }
    dend_3 { pt3dadd( -135.122, 88.3926, -151.526, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 51/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -71.3432, 54.9267, 184.48, 0.88 ) }
    dend_62 { pt3dadd( -73.4601, 58.5811, 194.535, 0.88 ) }
    dend_62 { pt3dadd( -75.2003, 61.7459, 204.818, 0.88 ) }
    dend_62 { pt3dadd( -78.4723, 64.9751, 214.704, 0.88 ) }
    dend_62 { pt3dadd( -82.0391, 68.1419, 224.509, 0.88 ) }
    dend_62 { pt3dadd( -85.1446, 70.846, 234.597, 0.88 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 57/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -71.3432, 54.9267, 184.48, 0.22 ) }
    dend_61 { pt3dadd( -73.6916, 59.1359, 196.013, 0.88 ) }
    dend_61 { pt3dadd( -78.0265, 63.6353, 206.851, 0.88 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 60/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -84.9301, 28.4958, 202.925, 0.88 ) }
    dend_59 { pt3dadd( -88.6797, 26.6155, 209.424, 0.88 ) }
    dend_59 { pt3dadd( -91.4898, 24.994, 216.443, 0.88 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 63/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -84.9301, 28.4958, 202.925, 0.22 ) }
    dend_58 { pt3dadd( -84.8098, 30.2258, 210.5, 0.88 ) }
    dend_58 { pt3dadd( -83.3704, 31.8662, 217.959, 0.88 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 66/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -142.541, 65.5417, 91.4389, 0.88 ) }
    dend_55 { pt3dadd( -145.924, 64.6655, 95.0379, 0.88 ) }
    dend_55 { pt3dadd( -149.788, 63.5892, 98.0513, 0.88 ) }
    dend_55 { pt3dadd( -153.83, 63.0757, 100.98, 0.88 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 70/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -142.541, 65.5417, 91.4389, 0.22 ) }
    dend_54 { pt3dadd( -154.792, 72.2233, 91.7802, 0.88 ) }
    dend_54 { pt3dadd( -167.509, 77.8433, 90.4824, 0.88 ) }
    dend_54 { pt3dadd( -179.839, 83.9968, 88.0678, 0.88 ) }
    dend_54 { pt3dadd( -191.787, 90.164, 84.1386, 0.88 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 75/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -86.8688, -176.01, 119.025, 0.88 ) }
    dend_44 { pt3dadd( -89.4163, -183.255, 127.994, 0.88 ) }
    dend_44 { pt3dadd( -92.5972, -190.834, 136.484, 0.88 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 78/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -86.8688, -176.01, 119.025, 0.22 ) }
    dend_43 { pt3dadd( -90.1876, -181.938, 127.245, 0.88 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 80/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -118.507, -197.584, 84.5778, 0.88 ) }
    dend_41 { pt3dadd( -125.284, -206.934, 86.2774, 0.88 ) }
    dend_41 { pt3dadd( -132.074, -216.412, 86.8492, 0.88 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 83/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -118.507, -197.584, 84.5778, 0.22 ) }
    dend_40 { pt3dadd( -127.547, -206.102, 88.7146, 0.88 ) }
    dend_40 { pt3dadd( -135.432, -216.216, 91.591, 0.88 ) }
    // Section: dend_37, id: dend_37, parent: dend_27 (entry count 86/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 2.4933, -57.3619, 3.91407, 0.66 ) }
    dend_37 { pt3dadd( 3.04189, -59.0476, 4.49424, 0.66 ) }
    dend_37 { pt3dadd( 3.45625, -60.2217, 4.81538, 0.52 ) }
    dend_37 { pt3dadd( 3.93381, -61.656, 5.14196, 1.18 ) }
    dend_37 { pt3dadd( 4.13965, -62.4444, 5.30859, 1.62 ) }
    dend_37 { pt3dadd( 4.28152, -63.2733, 5.46366, 1.33 ) }
    dend_37 { pt3dadd( 4.36834, -64.3475, 5.63638, 0.74 ) }
    dend_37 { pt3dadd( 4.44088, -65.5974, 5.7309, 0.44 ) }
    dend_37 { pt3dadd( 4.46102, -66.3788, 5.79326, 0.44 ) }
    dend_37 { pt3dadd( 4.42045, -67.4786, 5.89904, 0.44 ) }
    dend_37 { pt3dadd( 4.39264, -68.5998, 6.03069, 0.52 ) }
    dend_37 { pt3dadd( 4.42893, -69.7187, 6.19493, 0.66 ) }
    dend_37 { pt3dadd( 4.64281, -70.8316, 6.4103, 0.44 ) }
    dend_37 { pt3dadd( 5.08121, -71.7326, 6.72239, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_37 { pt3dadd( 5.38158, -72.1863, 6.95571, 0.88 ) }
    dend_37 { pt3dadd( 5.89607, -72.8448, 7.34937, 0.88 ) }
    dend_37 { pt3dadd( 6.20169, -73.2073, 7.57632, 0.96 ) }
    dend_37 { pt3dadd( 6.57693, -73.6465, 7.84913, 0.66 ) }
    dend_37 { pt3dadd( 7.41346, -74.6932, 8.42218, 0.44 ) }
    dend_37 { pt3dadd( 8.27065, -75.8442, 8.91876, 0.52 ) }
    dend_37 { pt3dadd( 8.6787, -76.4047, 9.1409, 0.52 ) }
    dend_37 { pt3dadd( 9.36237, -77.3139, 9.50557, 0.74 ) }
    dend_37 { pt3dadd( 9.85388, -77.919, 9.74536, 0.96 ) }
    dend_37 { pt3dadd( 10.4147, -78.5285, 9.97871, 0.96 ) }
    dend_37 { pt3dadd( 11.3211, -79.3462, 10.268, 0.59 ) }
    dend_37 { pt3dadd( 12.3063, -80.0549, 10.5898, 0.59 ) }
    dend_37 { pt3dadd( 13.4195, -80.8027, 11.0176, 0.88 ) }
    dend_37 { pt3dadd( 13.7955, -81.0608, 11.1787, 0.88 ) }
    dend_37 { pt3dadd( 14.2994, -81.4433, 11.405, 0.88 ) }
    dend_37 { pt3dadd( 14.9329, -81.9863, 11.6991, 0.74 ) }
    dend_37 { pt3dadd( 15.8934, -82.9025, 12.1129, 0.74 ) }
    dend_37 { pt3dadd( 16.7455, -83.8061, 12.4072, 0.74 ) }
    dend_37 { pt3dadd( 17.6086, -84.8215, 12.6627, 0.81 ) }
    dend_37 { pt3dadd( 18.2167, -85.5975, 12.8417, 0.96 ) }
    dend_37 { pt3dadd( 18.6463, -86.1935, 12.9567, 0.96 ) }
    dend_37 { pt3dadd( 19.1342, -86.9258, 13.065, 0.88 ) }
    dend_37 { pt3dadd( 19.6921, -87.8377, 13.1503, 0.88 ) }
    dend_37 { pt3dadd( 19.881, -88.1453, 13.1769, 1.11 ) }
    dend_37 { pt3dadd( 20.4613, -89.0775, 13.2081, 0.74 ) }
    dend_37 { pt3dadd( 20.9175, -89.7853, 13.2019, 0.74 ) }
    dend_37 { pt3dadd( 21.3845, -90.4946, 13.1991, 0.66 ) }
    dend_37 { pt3dadd( 22.1183, -91.6729, 13.2057, 0.44 ) }
    dend_37 { pt3dadd( 22.6058, -92.5193, 13.2311, 1.03 ) }
    dend_37 { pt3dadd( 23.2538, -93.7458, 13.3013, 0.81 ) }
    dend_37 { pt3dadd( 23.7752, -94.791, 13.3671, 0.59 ) }
    dend_37 { pt3dadd( 24.3654, -96.0442, 13.4658, 0.74 ) }
    dend_37 { pt3dadd( 24.7772, -96.9726, 13.5363, 0.59 ) }
    dend_37 { pt3dadd( 25.1011, -97.798, 13.6346, 0.59 ) }
    dend_37 { pt3dadd( 25.5124, -99.071, 13.8349, 0.44 ) }
    dend_37 { pt3dadd( 25.7528, -100.035, 14.0204, 0.37 ) }
    dend_37 { pt3dadd( 25.9894, -101.253, 14.2394, 0.74 ) }
    dend_37 { pt3dadd( 26.1438, -102.175, 14.3817, 0.88 ) }
    dend_37 { pt3dadd( 26.4224, -103.811, 14.6476, 0.88 ) }
    dend_37 { pt3dadd( 26.5414, -104.486, 14.7816, 0.74 ) }
    dend_37 { pt3dadd( 26.7784, -105.769, 15.0903, 0.66 ) }
    dend_37 { pt3dadd( 26.9709, -106.706, 15.3541, 0.74 ) }
    dend_37 { pt3dadd( 27.2662, -107.858, 15.7162, 0.74 ) }
    dend_37 { pt3dadd( 27.5091, -108.63, 15.9667, 0.74 ) }
    dend_37 { pt3dadd( 28.0209, -110.038, 16.3875, 0.52 ) }
    dend_37 { pt3dadd( 28.2652, -110.672, 16.5625, 0.52 ) }
    dend_37 { pt3dadd( 28.6066, -111.65, 16.8743, 0.29 ) }
    dend_37 { pt3dadd( 28.8651, -112.463, 17.1615, 0.59 ) }
    dend_37 { pt3dadd( 29.0534, -113.068, 17.3857, 0.74 ) }
    dend_37 { pt3dadd( 29.3071, -113.913, 17.7033, 0.44 ) }
    dend_37 { pt3dadd( 29.6139, -114.961, 18.0982, 0.37 ) }
    dend_37 { pt3dadd( 30.1312, -116.822, 18.8584, 0.37 ) }
    dend_37 { pt3dadd( 30.332, -117.625, 19.2214, 0.52 ) }
    dend_37 { pt3dadd( 30.4936, -118.396, 19.6265, 0.59 ) }
    dend_37 { pt3dadd( 30.6248, -119.237, 20.1208, 0.74 ) }
    dend_37 { pt3dadd( 30.6813, -119.833, 20.4988, 1.18 ) }
    dend_37 { pt3dadd( 30.6977, -120.253, 20.7622, 1.18 ) }
    dend_37 { pt3dadd( 30.6905, -121.469, 21.4477, 0.74 ) }
    dend_37 { pt3dadd( 30.578, -122.902, 22.2316, 0.52 ) }
    dend_37 { pt3dadd( 30.424, -124.037, 22.8122, 0.44 ) }
    dend_37 { pt3dadd( 30.183, -125.425, 23.4507, 0.59 ) }
    dend_37 { pt3dadd( 29.9469, -126.564, 23.9027, 0.44 ) }
    dend_37 { pt3dadd( 29.7839, -127.319, 24.1383, 0.44 ) }
    dend_37 { pt3dadd( 29.5596, -128.396, 24.3615, 0.59 ) }
    dend_37 { pt3dadd( 29.4268, -129.163, 24.4437, 0.59 ) }
    dend_37 { pt3dadd( 29.3412, -129.802, 24.4628, 0.59 ) }
    dend_37 { pt3dadd( 29.2069, -131.045, 24.4005, 0.66 ) }
    dend_37 { pt3dadd( 29.1355, -131.938, 24.3227, 0.59 ) }
    dend_37 { pt3dadd( 29.0922, -132.926, 24.2218, 0.52 ) }
    dend_37 { pt3dadd( 29.0847, -133.59, 24.1459, 0.66 ) }
    dend_37 { pt3dadd( 29.0919, -134.631, 24.0326, 0.66 ) }
    dend_37 { pt3dadd( 29.1093, -135.904, 23.9225, 0.52 ) }
    dend_37 { pt3dadd( 29.1206, -136.885, 23.8505, 0.74 ) }
    dend_37 { pt3dadd( 29.1125, -137.72, 23.8037, 0.88 ) }
    dend_37 { pt3dadd( 29.0707, -138.965, 23.7548, 0.96 ) }
    dend_37 { pt3dadd( 29.003, -140.395, 23.7257, 0.88 ) }
    dend_37 { pt3dadd( 28.9513, -141.392, 23.7288, 0.88 ) }
    dend_37 { pt3dadd( 28.9005, -142.184, 23.7028, 0.81 ) }
    dend_37 { pt3dadd( 28.7987, -143.185, 23.6278, 0.66 ) }
    dend_37 { pt3dadd( 28.69, -143.951, 23.5738, 0.66 ) }
    dend_37 { pt3dadd( 28.567, -144.695, 23.5504, 0.44 ) }
    dend_37 { pt3dadd( 28.3981, -145.677, 23.5773, 0.44 ) }
    dend_37 { pt3dadd( 28.1446, -147.137, 23.7554, 0.44 ) }
    dend_37 { pt3dadd( 27.9757, -148.263, 24.0332, 0.44 ) }
    dend_37 { pt3dadd( 27.8348, -149.433, 24.5389, 0.66 ) }
    dend_37 { pt3dadd( 27.7925, -150.122, 24.9673, 0.81 ) }
    dend_37 { pt3dadd( 27.7884, -150.945, 25.6146, 0.96 ) }
    dend_37 { pt3dadd( 27.8512, -151.974, 26.5454, 0.66 ) }
    dend_37 { pt3dadd( 27.9446, -152.976, 27.5146, 0.59 ) }
    dend_37 { pt3dadd( 28.0674, -154.104, 28.5856, 0.96 ) }
    dend_37 { pt3dadd( 28.1518, -154.956, 29.3222, 0.96 ) }
    dend_37 { pt3dadd( 28.2069, -155.702, 29.8916, 0.96 ) }
    dend_37 { pt3dadd( 28.2282, -156.452, 30.3564, 0.66 ) }
    dend_37 { pt3dadd( 28.2071, -157.349, 30.754, 0.44 ) }
    dend_37 { pt3dadd( 28.1208, -158.199, 30.9877, 0.37 ) }
    dend_37 { pt3dadd( 28.0329, -158.851, 31.068, 0.37 ) }
    dend_37 { pt3dadd( 27.8959, -159.847, 31.1127, 0.29 ) }
    dend_37 { pt3dadd( 27.746, -160.946, 31.1112, 0.29 ) }
    dend_37 { pt3dadd( 27.6028, -162.091, 31.086, 0.37 ) }
    dend_37 { pt3dadd( 27.4955, -163.151, 31.0543, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_37 { pt3dadd( 27.3957, -164.307, 31.0378, 0.29 ) }
    dend_37 { pt3dadd( 27.2904, -165.47, 31.0375, 0.29 ) }
    dend_37 { pt3dadd( 27.1802, -166.683, 31.0518, 0.29 ) }
    dend_37 { pt3dadd( 27.1463, -167.192, 31.065, 0.44 ) }
    dend_37 { pt3dadd( 27.1112, -168.023, 31.0958, 0.52 ) }
    dend_37 { pt3dadd( 27.0766, -169.255, 31.1532, 0.37 ) }
    dend_37 { pt3dadd( 27.0351, -170.465, 31.2208, 1.03 ) }
    dend_37 { pt3dadd( 27.0266, -171.071, 31.2452, 1.03 ) }
    dend_37 { pt3dadd( 27.0597, -171.803, 31.2649, 0.74 ) }
    dend_37 { pt3dadd( 27.1411, -172.715, 31.2847, 0.59 ) }
    dend_37 { pt3dadd( 27.207, -173.244, 31.3025, 0.81 ) }
    dend_37 { pt3dadd( 27.2846, -173.907, 31.3278, 0.81 ) }
    dend_37 { pt3dadd( 27.4002, -175.164, 31.4493, 0.37 ) }
    dend_37 { pt3dadd( 27.4225, -176.083, 31.5829, 0.37 ) }
    dend_37 { pt3dadd( 27.3591, -176.797, 31.7297, 0.37 ) }
    dend_37 { pt3dadd( 27.0773, -177.842, 32.0197, 0.29 ) }
    dend_37 { pt3dadd( 26.7611, -178.503, 32.2302, 0.44 ) }
    dend_37 { pt3dadd( 26.244, -179.244, 32.4811, 0.59 ) }
    dend_37 { pt3dadd( 25.7807, -179.808, 32.6704, 0.74 ) }
    dend_37 { pt3dadd( 25.4482, -180.237, 32.782, 0.74 ) }
    dend_37 { pt3dadd( 24.8353, -181.136, 32.9522, 0.22 ) }
    dend_37 { pt3dadd( 24.4606, -181.925, 33.0443, 0.22 ) }
    dend_37 { pt3dadd( 24.3253, -182.559, 33.0909, 0.66 ) }
    dend_37 { pt3dadd( 24.3357, -183.462, 33.123, 0.29 ) }
    dend_37 { pt3dadd( 24.528, -184.574, 33.1721, 0.59 ) }
    dend_37 { pt3dadd( 24.6376, -184.97, 33.1886, 0.44 ) }
    dend_37 { pt3dadd( 24.9755, -185.784, 33.2295, 0.29 ) }
    dend_37 { pt3dadd( 25.2235, -186.248, 33.2626, 0.22 ) }
    dend_37 { pt3dadd( 25.7892, -187.152, 33.3427, 0.22 ) }
    dend_37 { pt3dadd( 26.1203, -187.643, 33.3926, 0.22 ) }
    dend_37 { pt3dadd( 30.422, -197.862, 35.4598, 0.22 ) }
    dend_37 { pt3dadd( 35.4601, -207.509, 38.3263, 0.22 ) }
    dend_37 { pt3dadd( 38.2127, -217.539, 42.6613, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 33/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.4933, -57.3619, 3.91407, 1.03 ) }
    dend_28 { pt3dadd( 3.06501, -58.179, 3.12745, 1.03 ) }
    dend_28 { pt3dadd( 4.21863, -59.5051, 1.7461, 0.66 ) }
    dend_28 { pt3dadd( 4.80787, -60.0717, 1.13303, 0.66 ) }
    dend_28 { pt3dadd( 5.6242, -60.7719, 0.330369, 0.66 ) }
    dend_28 { pt3dadd( 6.81474, -61.7683, -0.701722, 1.11 ) }
    dend_28 { pt3dadd( 7.37385, -62.2368, -1.13369, 1.18 ) }
    dend_28 { pt3dadd( 8.06746, -62.7756, -1.55069, 0.96 ) }
    dend_28 { pt3dadd( 9.05491, -63.4623, -1.93536, 0.81 ) }
    dend_28 { pt3dadd( 10.8167, -64.559, -2.41005, 0.81 ) }
    dend_28 { pt3dadd( 12.1414, -65.3038, -2.60305, 0.74 ) }
    dend_28 { pt3dadd( 13.1409, -65.8225, -2.61759, 0.96 ) }
    dend_28 { pt3dadd( 14.431, -66.4153, -2.55966, 0.96 ) }
    dend_28 { pt3dadd( 14.9395, -66.6017, -2.52863, 0.96 ) }
    dend_28 { pt3dadd( 15.6934, -66.7755, -2.48299, 0.81 ) }
    dend_28 { pt3dadd( 16.6042, -66.8757, -2.44635, 0.81 ) }
    dend_28 { pt3dadd( 18.0537, -66.9435, -2.48052, 0.74 ) }
    dend_28 { pt3dadd( 19.1362, -66.9669, -2.56748, 0.96 ) }
    dend_28 { pt3dadd( 20.4274, -67.0243, -2.70691, 0.96 ) }
    dend_28 { pt3dadd( 21.5737, -67.1392, -2.82566, 0.74 ) }
    dend_28 { pt3dadd( 22.8203, -67.3506, -2.90967, 0.88 ) }
    dend_28 { pt3dadd( 23.8191, -67.5897, -2.92777, 1.03 ) }
    dend_28 { pt3dadd( 24.8913, -67.9453, -2.86448, 1.03 ) }
    dend_28 { pt3dadd( 25.8882, -68.4044, -2.65509, 0.88 ) }
    dend_28 { pt3dadd( 26.607, -68.8393, -2.41031, 0.66 ) }
    dend_28 { pt3dadd( 27.5473, -69.5058, -2.0888, 1.03 ) }
    dend_28 { pt3dadd( 28.1327, -69.952, -1.9093, 1.03 ) }
    dend_28 { pt3dadd( 28.6978, -70.3853, -1.80051, 0.81 ) }
    dend_28 { pt3dadd( 29.9582, -71.3626, -1.60361, 0.59 ) }
    dend_28 { pt3dadd( 30.7915, -71.9937, -1.54346, 0.74 ) }
    dend_28 { pt3dadd( 32.0541, -72.9216, -1.48279, 0.74 ) }
    dend_28 { pt3dadd( 32.7899, -73.452, -1.45075, 0.88 ) }
    dend_28 { pt3dadd( 34.0105, -74.3169, -1.35647, 0.66 ) }
    dend_28 { pt3dadd( 35.0941, -75.0778, -1.24026, 0.96 ) }
    dend_28 { pt3dadd( 35.8055, -75.5772, -1.1256, 1.11 ) }
    dend_28 { pt3dadd( 36.4745, -76.0448, -0.956605, 1.11 ) }
    dend_28 { pt3dadd( 37.556, -76.7738, -0.602314, 0.81 ) }
    dend_28 { pt3dadd( 38.6593, -77.4559, -0.205489, 0.74 ) }
    dend_28 { pt3dadd( 39.7902, -78.082, 0.206817, 0.66 ) }
    dend_28 { pt3dadd( 41.0964, -78.7484, 0.60818, 0.88 ) }
    dend_28 { pt3dadd( 41.9106, -79.1805, 0.824044, 1.03 ) }
    dend_28 { pt3dadd( 42.7295, -79.6718, 0.988412, 1.03 ) }
    dend_28 { pt3dadd( 43.7094, -80.3704, 1.12478, 0.81 ) }
    dend_28 { pt3dadd( 44.3461, -80.9463, 1.15304, 0.81 ) }
    dend_28 { pt3dadd( 45.1387, -81.8271, 1.08569, 0.81 ) }
    dend_28 { pt3dadd( 45.9877, -82.949, 0.892255, 0.88 ) }
    dend_28 { pt3dadd( 46.6964, -83.9553, 0.714464, 1.03 ) }
    dend_28 { pt3dadd( 47.2238, -84.742, 0.580852, 0.88 ) }
    dend_28 { pt3dadd( 47.9508, -85.7725, 0.405041, 0.66 ) }
    dend_28 { pt3dadd( 48.4902, -86.4263, 0.343843, 0.66 ) }
    dend_28 { pt3dadd( 49.145, -87.0098, 0.369935, 0.59 ) }
    dend_28 { pt3dadd( 50.1397, -87.6079, 0.525344, 0.88 ) }
    dend_28 { pt3dadd( 50.5733, -87.8099, 0.616044, 0.88 ) }
    dend_28 { pt3dadd( 51.5497, -88.229, 0.810637, 0.59 ) }
    dend_28 { pt3dadd( 52.2634, -88.558, 0.953554, 0.74 ) }
    dend_28 { pt3dadd( 52.8904, -88.8911, 1.03966, 0.81 ) }
    dend_28 { pt3dadd( 53.7428, -89.408, 1.05483, 0.74 ) }
    dend_28 { pt3dadd( 54.5801, -89.9721, 0.981788, 0.59 ) }
    dend_28 { pt3dadd( 55.7676, -90.8352, 0.796466, 0.59 ) }
    dend_28 { pt3dadd( 56.4098, -91.3318, 0.665415, 0.88 ) }
    dend_28 { pt3dadd( 57.0622, -91.8627, 0.498868, 1.03 ) }
    dend_28 { pt3dadd( 58.1479, -92.8094, 0.183162, 0.66 ) }
    dend_28 { pt3dadd( 58.8479, -93.4575, -0.0442755, 0.59 ) }
    dend_28 { pt3dadd( 59.7207, -94.27, -0.346427, 2.06 ) }
    dend_28 { pt3dadd( 60.3202, -94.8106, -0.545392, 2.73 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 98/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -18.8192, -65.1817, -10.0785, 1.25 ) }
    dend_26 { pt3dadd( -19.7812, -65.0833, -10.1583, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_26 { pt3dadd( -20.8462, -65.0923, -10.2591, 0.66 ) }
    dend_26 { pt3dadd( -21.3302, -65.133, -10.3064, 0.66 ) }
    dend_26 { pt3dadd( -21.9996, -65.2199, -10.3846, 0.81 ) }
    dend_26 { pt3dadd( -22.6675, -65.3156, -10.4796, 0.81 ) }
    dend_26 { pt3dadd( -23.5282, -65.4226, -10.6021, 0.44 ) }
    dend_26 { pt3dadd( -24.0648, -65.5128, -10.7018, 0.44 ) }
    dend_26 { pt3dadd( -24.5339, -65.5622, -10.7914, 0.59 ) }
    dend_26 { pt3dadd( -24.8923, -65.5508, -10.8701, 0.74 ) }
    dend_26 { pt3dadd( -25.3904, -65.4639, -10.9857, 0.74 ) }
    dend_26 { pt3dadd( -25.9193, -65.3477, -11.1424, 0.66 ) }
    dend_26 { pt3dadd( -26.2859, -65.2748, -11.2566, 0.52 ) }
    dend_26 { pt3dadd( -27.0142, -65.1753, -11.4959, 0.52 ) }
    dend_26 { pt3dadd( -27.6842, -65.1336, -11.7138, 0.52 ) }
    dend_26 { pt3dadd( -28.4569, -65.1328, -11.9341, 0.66 ) }
    dend_26 { pt3dadd( -29.3409, -65.1726, -12.1373, 0.88 ) }
    dend_26 { pt3dadd( -30.1619, -65.2279, -12.295, 1.03 ) }
    dend_26 { pt3dadd( -30.7441, -65.2643, -12.3902, 1.03 ) }
    dend_26 { pt3dadd( -31.4128, -65.2829, -12.49, 0.96 ) }
    dend_26 { pt3dadd( -32.0262, -65.262, -12.5677, 0.74 ) }
    dend_26 { pt3dadd( -32.871, -65.1754, -12.6766, 0.59 ) }
    dend_26 { pt3dadd( -33.364, -65.1133, -12.7377, 0.59 ) }
    dend_26 { pt3dadd( -34.1897, -65.032, -12.8418, 0.74 ) }
    dend_26 { pt3dadd( -34.9024, -64.984, -12.9415, 0.74 ) }
    dend_26 { pt3dadd( -35.6465, -64.9673, -13.076, 0.52 ) }
    dend_26 { pt3dadd( -36.2741, -64.998, -13.209, 0.59 ) }
    dend_26 { pt3dadd( -37.0788, -65.1261, -13.3905, 0.59 ) }
    dend_26 { pt3dadd( -37.8071, -65.3013, -13.5356, 0.74 ) }
    dend_26 { pt3dadd( -38.56, -65.519, -13.6573, 0.74 ) }
    dend_26 { pt3dadd( -39.1835, -65.7047, -13.7403, 0.74 ) }
    dend_26 { pt3dadd( -40.0685, -65.9372, -13.8448, 0.74 ) }
    dend_26 { pt3dadd( -40.9409, -66.1296, -13.9309, 0.74 ) }
    dend_26 { pt3dadd( -41.8926, -66.3133, -14.0044, 0.88 ) }
    dend_26 { pt3dadd( -42.4041, -66.4002, -14.0449, 0.88 ) }
    dend_26 { pt3dadd( -43.2502, -66.5316, -14.1568, 0.96 ) }
    dend_26 { pt3dadd( -44.2089, -66.6525, -14.3283, 0.96 ) }
    dend_26 { pt3dadd( -45.0901, -66.745, -14.5192, 0.66 ) }
    dend_26 { pt3dadd( -45.6813, -66.8286, -14.6597, 0.59 ) }
    dend_26 { pt3dadd( -46.6109, -67.0418, -14.894, 0.59 ) }
    dend_26 { pt3dadd( -47.9819, -67.47, -15.238, 0.81 ) }
    dend_26 { pt3dadd( -48.7282, -67.7589, -15.4319, 0.96 ) }
    dend_26 { pt3dadd( -49.7265, -68.1901, -15.6854, 0.96 ) }
    dend_26 { pt3dadd( -51.0434, -68.7808, -15.9893, 0.96 ) }
    dend_26 { pt3dadd( -52.0357, -69.2218, -16.1788, 0.96 ) }
    dend_26 { pt3dadd( -52.7954, -69.5469, -16.2834, 0.96 ) }
    dend_26 { pt3dadd( -53.4939, -69.8108, -16.3468, 0.81 ) }
    dend_26 { pt3dadd( -54.2244, -70.0279, -16.4272, 0.88 ) }
    dend_26 { pt3dadd( -54.9718, -70.1622, -16.5243, 0.88 ) }
    dend_26 { pt3dadd( -55.6634, -70.2112, -16.6265, 0.66 ) }
    dend_26 { pt3dadd( -56.1903, -70.2326, -16.7116, 0.66 ) }
    dend_26 { pt3dadd( -56.7248, -70.2804, -16.8019, 0.59 ) }
    dend_26 { pt3dadd( -57.2684, -70.3929, -16.8884, 0.59 ) }
    dend_26 { pt3dadd( -57.9707, -70.6505, -17.0033, 0.81 ) }
    dend_26 { pt3dadd( -58.5335, -70.9056, -17.0852, 0.81 ) }
    dend_26 { pt3dadd( -59.3374, -71.274, -17.1984, 0.52 ) }
    dend_26 { pt3dadd( -60.1008, -71.5836, -17.3021, 0.66 ) }
    dend_26 { pt3dadd( -60.8211, -71.8187, -17.3976, 0.66 ) }
    dend_26 { pt3dadd( -61.7545, -72.019, -17.5059, 0.66 ) }
    dend_26 { pt3dadd( -62.585, -72.1013, -17.5962, 0.88 ) }
    dend_26 { pt3dadd( -63.4721, -72.1105, -17.6842, 0.88 ) }
    dend_26 { pt3dadd( -64.2236, -72.0784, -17.7524, 0.81 ) }
    dend_26 { pt3dadd( -65.0335, -72.0453, -17.8752, 0.88 ) }
    dend_26 { pt3dadd( -65.9032, -72.0384, -18.0868, 1.03 ) }
    dend_26 { pt3dadd( -66.5687, -72.0688, -18.3026, 1.03 ) }
    dend_26 { pt3dadd( -67.2658, -72.1584, -18.6064, 0.81 ) }
    dend_26 { pt3dadd( -67.8695, -72.294, -18.92, 0.81 ) }
    dend_26 { pt3dadd( -69.1608, -72.7784, -19.7579, 0.44 ) }
    dend_26 { pt3dadd( -69.901, -73.1681, -20.3399, 0.66 ) }
    dend_26 { pt3dadd( -70.4143, -73.5048, -20.79, 0.81 ) }
    dend_26 { pt3dadd( -71.0835, -74.002, -21.4255, 1.03 ) }
    dend_26 { pt3dadd( -71.3756, -74.2313, -21.7066, 1.11 ) }
    dend_26 { pt3dadd( -72.2177, -74.8314, -22.4355, 0.37 ) }
    dend_26 { pt3dadd( -72.8169, -75.1656, -22.8406, 0.37 ) }
    dend_26 { pt3dadd( -73.2697, -75.3789, -23.0991, 1.69 ) }
    dend_26 { pt3dadd( -73.8886, -75.6292, -23.3998, 2.06 ) }
    dend_26 { pt3dadd( -74.3119, -75.7779, -23.5596, 2.06 ) }
    dend_26 { pt3dadd( -75.5594, -76.1807, -23.9424, 0.59 ) }
    dend_26 { pt3dadd( -76.6432, -76.4891, -24.1971, 0.44 ) }
    dend_26 { pt3dadd( -77.7949, -76.7822, -24.4232, 0.52 ) }
    dend_26 { pt3dadd( -78.4133, -76.9196, -24.5255, 0.74 ) }
    dend_26 { pt3dadd( -79.2233, -77.0826, -24.6375, 0.88 ) }
    dend_26 { pt3dadd( -80.0619, -77.2456, -24.7392, 0.66 ) }
    dend_26 { pt3dadd( -80.3433, -77.2989, -24.7548, 0.44 ) }
    dend_26 { pt3dadd( -80.9932, -77.4018, -24.759, 0.37 ) }
    dend_26 { pt3dadd( -81.7238, -77.4633, -24.7232, 0.96 ) }
    dend_26 { pt3dadd( -82.6019, -77.5036, -24.6153, 1.62 ) }
    dend_26 { pt3dadd( -83.3641, -77.5467, -24.4652, 1.77 ) }
    dend_26 { pt3dadd( -84.2332, -77.6187, -24.2557, 1.77 ) }
    dend_26 { pt3dadd( -85.0315, -77.716, -24.0469, 1.11 ) }
    dend_26 { pt3dadd( -85.7691, -77.8242, -23.8445, 0.66 ) }
    dend_26 { pt3dadd( -86.6183, -77.9394, -23.6204, 0.52 ) }
    dend_26 { pt3dadd( -87.6292, -78.044, -23.3228, 0.44 ) }
    dend_26 { pt3dadd( -88.366, -78.0957, -23.1216, 0.44 ) }
    dend_26 { pt3dadd( -88.9156, -78.1256, -22.9943, 0.59 ) }
    dend_26 { pt3dadd( -89.4011, -78.1547, -22.8936, 0.59 ) }
    dend_26 { pt3dadd( -90.0584, -78.2079, -22.7834, 0.44 ) }
    dend_26 { pt3dadd( -91.4631, -78.3516, -22.5757, 0.74 ) }
    dend_26 { pt3dadd( -92.1438, -78.4264, -22.4721, 0.81 ) }
    dend_26 { pt3dadd( -92.889, -78.5192, -22.3704, 0.81 ) }
    dend_26 { pt3dadd( -93.6792, -78.6257, -22.2948, 0.96 ) }
    dend_26 { pt3dadd( -94.4518, -78.7429, -22.289, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_26 { pt3dadd( -95.1069, -78.8445, -22.3392, 1.11 ) }
    dend_26 { pt3dadd( -95.7124, -78.9255, -22.4589, 0.81 ) }
    dend_26 { pt3dadd( -96.6498, -79.0274, -22.6967, 0.59 ) }
    dend_26 { pt3dadd( -97.3897, -79.0733, -22.9134, 1.18 ) }
    dend_26 { pt3dadd( -98.4174, -79.0992, -23.2372, 1.47 ) }
    dend_26 { pt3dadd( -98.9479, -79.1063, -23.4049, 1.62 ) }
    dend_26 { pt3dadd( -99.278, -79.1006, -23.5213, 1.62 ) }
    dend_26 { pt3dadd( -99.8297, -79.0673, -23.7188, 1.11 ) }
    dend_26 { pt3dadd( -100.473, -78.9956, -23.9048, 0.66 ) }
    dend_26 { pt3dadd( -101.136, -78.8658, -24.0411, 0.44 ) }
    dend_26 { pt3dadd( -101.932, -78.6446, -24.1464, 0.37 ) }
    dend_26 { pt3dadd( -102.809, -78.3471, -24.2434, 0.37 ) }
    dend_26 { pt3dadd( -103.367, -78.1302, -24.2839, 0.37 ) }
    dend_26 { pt3dadd( -104.148, -77.7926, -24.31, 0.44 ) }
    dend_26 { pt3dadd( -105.196, -77.3356, -24.3464, 0.74 ) }
    dend_26 { pt3dadd( -105.698, -77.1229, -24.3756, 1.18 ) }
    dend_26 { pt3dadd( -106.138, -76.9462, -24.4127, 1.33 ) }
    dend_26 { pt3dadd( -106.671, -76.7485, -24.4622, 1.33 ) }
    dend_26 { pt3dadd( -107.324, -76.4888, -24.5502, 0.81 ) }
    dend_26 { pt3dadd( -108.191, -76.1073, -24.6829, 0.29 ) }
    dend_26 { pt3dadd( -108.795, -75.8262, -24.7702, 0.29 ) }
    dend_26 { pt3dadd( -109.729, -75.3723, -24.8926, 0.37 ) }
    dend_26 { pt3dadd( -110.335, -75.0632, -24.9553, 0.44 ) }
    dend_26 { pt3dadd( -111.206, -74.6446, -25.1255, 0.44 ) }
    dend_26 { pt3dadd( -112.255, -74.1782, -25.3809, 1.4 ) }
    dend_26 { pt3dadd( -112.863, -73.9172, -25.5417, 1.92 ) }
    dend_26 { pt3dadd( -113.126, -73.8101, -25.6177, 2.28 ) }
    dend_26 { pt3dadd( -113.705, -73.5988, -25.8099, 2.28 ) }
    dend_26 { pt3dadd( -116.051, -72.7883, -26.6734, 0.29 ) }
    dend_26 { pt3dadd( -116.455, -72.6489, -26.8389, 0.52 ) }
    dend_26 { pt3dadd( -116.961, -72.469, -27.0632, 0.52 ) }
    dend_26 { pt3dadd( -117.524, -72.2678, -27.2983, 0.74 ) }
    dend_26 { pt3dadd( -118.002, -72.0941, -27.4955, 0.74 ) }
    dend_26 { pt3dadd( -118.635, -71.8714, -27.7644, 0.44 ) }
    dend_26 { pt3dadd( -119.333, -71.6273, -28.0316, 0.37 ) }
    dend_26 { pt3dadd( -119.937, -71.4315, -28.3066, 0.81 ) }
    dend_26 { pt3dadd( -120.363, -71.304, -28.5245, 0.96 ) }
    dend_26 { pt3dadd( -120.995, -71.118, -28.8921, 0.96 ) }
    dend_26 { pt3dadd( -121.757, -70.9082, -29.3822, 0.66 ) }
    dend_26 { pt3dadd( -122.39, -70.7578, -29.8209, 0.29 ) }
    dend_26 { pt3dadd( -123.099, -70.6032, -30.2974, 0.66 ) }
    dend_26 { pt3dadd( -123.549, -70.5043, -30.5806, 0.66 ) }
    dend_26 { pt3dadd( -124.498, -70.3024, -31.1111, 0.52 ) }
    dend_26 { pt3dadd( -125.127, -70.1592, -31.3979, 0.74 ) }
    dend_26 { pt3dadd( -126.454, -69.8427, -31.9243, 0.88 ) }
    dend_26 { pt3dadd( -127.088, -69.679, -32.1752, 1.11 ) }
    dend_26 { pt3dadd( -127.538, -69.5564, -32.3526, 1.33 ) }
    dend_26 { pt3dadd( -128.307, -69.3121, -32.6421, 0.44 ) }
    dend_26 { pt3dadd( -129.117, -68.9918, -32.9159, 0.44 ) }
    dend_26 { pt3dadd( -129.847, -68.6349, -33.1562, 0.29 ) }
    dend_26 { pt3dadd( -130.934, -68.0075, -33.5873, 0.96 ) }
    dend_26 { pt3dadd( -131.408, -67.7221, -33.8249, 1.18 ) }
    dend_26 { pt3dadd( -131.995, -67.3621, -34.1534, 2.21 ) }
    dend_26 { pt3dadd( -132.333, -67.1543, -34.3559, 2.43 ) }
    dend_26 { pt3dadd( -132.997, -66.7598, -34.7841, 2.43 ) }
    dend_26 { pt3dadd( -133.938, -66.2587, -35.3801, 2.21 ) }
    dend_26 { pt3dadd( -135.138, -65.7315, -36.0944, 0.29 ) }
    dend_26 { pt3dadd( -135.791, -65.4961, -36.4595, 0.44 ) }
    dend_26 { pt3dadd( -136.216, -65.3647, -36.6693, 0.52 ) }
    dend_26 { pt3dadd( -137.731, -64.9364, -37.3431, 0.29 ) }
    dend_26 { pt3dadd( -138.507, -64.7344, -37.6453, 0.29 ) }
    dend_26 { pt3dadd( -139.157, -64.5789, -37.8513, 0.29 ) }
    dend_26 { pt3dadd( -139.93, -64.4158, -38.079, 0.29 ) }
    dend_26 { pt3dadd( -141.044, -64.1923, -38.3857, 0.96 ) }
    dend_26 { pt3dadd( -141.547, -64.0855, -38.5066, 1.47 ) }
    dend_26 { pt3dadd( -142.018, -63.974, -38.5947, 1.47 ) }
    dend_26 { pt3dadd( -143.116, -63.6272, -38.799, 0.29 ) }
    dend_26 { pt3dadd( -143.553, -63.4596, -38.8823, 0.29 ) }
    dend_26 { pt3dadd( -144.291, -63.1276, -39.0471, 0.74 ) }
    dend_26 { pt3dadd( -144.674, -62.9373, -39.1386, 0.81 ) }
    dend_26 { pt3dadd( -144.923, -62.8005, -39.1936, 0.81 ) }
    dend_26 { pt3dadd( -145.336, -62.5426, -39.2855, 0.29 ) }
    dend_26 { pt3dadd( -145.686, -62.2931, -39.3738, 0.22 ) }
    dend_26 { pt3dadd( -146.474, -61.7019, -39.6123, 0.22 ) }
    dend_26 { pt3dadd( -147.358, -61.0507, -39.9097, 0.22 ) }
    dend_26 { pt3dadd( -147.976, -60.6184, -40.1094, 0.88 ) }
    dend_26 { pt3dadd( -148.494, -60.2676, -40.2644, 1.11 ) }
    dend_26 { pt3dadd( -148.715, -60.1221, -40.3237, 1.4 ) }
    dend_26 { pt3dadd( -149.202, -59.8102, -40.4282, 1.4 ) }
    dend_26 { pt3dadd( -149.697, -59.5042, -40.4951, 0.96 ) }
    dend_26 { pt3dadd( -150.722, -58.9222, -40.5943, 0.29 ) }
    dend_26 { pt3dadd( -151.168, -58.6866, -40.6214, 0.59 ) }
    dend_26 { pt3dadd( -151.467, -58.5295, -40.6287, 0.59 ) }
    dend_26 { pt3dadd( -151.891, -58.3072, -40.6273, 0.37 ) }
    dend_26 { pt3dadd( -153.117, -57.6557, -40.5932, 0.22 ) }
    dend_26 { pt3dadd( -153.873, -57.2496, -40.5726, 0.22 ) }
    dend_26 { pt3dadd( -154.385, -56.9712, -40.5592, 0.22 ) }
    dend_26 { pt3dadd( -155.409, -56.3914, -40.5334, 1.25 ) }
    dend_26 { pt3dadd( -155.915, -56.0839, -40.521, 1.69 ) }
    dend_26 { pt3dadd( -156.284, -55.8414, -40.5124, 1.92 ) }
    dend_26 { pt3dadd( -156.77, -55.4937, -40.4997, 1.62 ) }
    dend_26 { pt3dadd( -157.599, -54.8943, -40.4779, 0.81 ) }
    dend_26 { pt3dadd( -158.127, -54.5117, -40.4639, 0.81 ) }
    dend_26 { pt3dadd( -159.051, -53.8639, -40.4054, 0.37 ) }
    dend_26 { pt3dadd( -159.688, -53.4302, -40.3484, 0.37 ) }
    dend_26 { pt3dadd( -160.066, -53.1879, -40.3078, 0.37 ) }
    dend_26 { pt3dadd( -160.855, -52.7173, -40.2114, 0.29 ) }
    dend_26 { pt3dadd( -161.644, -52.2642, -40.103, 0.29 ) }
    dend_26 { pt3dadd( -162.633, -51.7057, -39.9278, 0.29 ) }
    dend_26 { pt3dadd( -163.116, -51.4339, -39.8194, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( -163.461, -51.2355, -39.7308, 0.44 ) }
    dend_26 { pt3dadd( -163.913, -50.9689, -39.6076, 0.29 ) }
    dend_26 { pt3dadd( -164.891, -50.3986, -39.3359, 1.4 ) }
    dend_26 { pt3dadd( -165.576, -50.0479, -39.1577, 1.77 ) }
    dend_26 { pt3dadd( -165.874, -49.9121, -39.0907, 1.77 ) }
    dend_26 { pt3dadd( -166.667, -49.5786, -38.9285, 0.66 ) }
    dend_26 { pt3dadd( -167.264, -49.3338, -38.8206, 0.66 ) }
    dend_26 { pt3dadd( -167.835, -49.1116, -38.7264, 0.81 ) }
    dend_26 { pt3dadd( -168.51, -48.8627, -38.6608, 0.81 ) }
    dend_26 { pt3dadd( -169.39, -48.5172, -38.6449, 0.37 ) }
    dend_26 { pt3dadd( -170.501, -48.0322, -38.6765, 0.29 ) }
    dend_26 { pt3dadd( -171.13, -47.7378, -38.719, 0.29 ) }
    dend_26 { pt3dadd( -171.81, -47.3996, -38.7858, 1.11 ) }
    dend_26 { pt3dadd( -172.705, -46.9126, -38.9031, 1.77 ) }
    dend_26 { pt3dadd( -173.397, -46.5083, -39.0231, 0.88 ) }
    dend_26 { pt3dadd( -174.266, -45.987, -39.1966, 0.29 ) }
    dend_26 { pt3dadd( -175.584, -45.2096, -39.4728, 0.29 ) }
    dend_26 { pt3dadd( -176.277, -44.813, -39.6142, 0.66 ) }
    dend_26 { pt3dadd( -176.801, -44.5311, -39.7121, 0.88 ) }
    dend_26 { pt3dadd( -177.88, -43.964, -39.8919, 0.29 ) }
    dend_26 { pt3dadd( -178.589, -43.6, -40.0129, 0.29 ) }
    dend_26 { pt3dadd( -179.205, -43.3003, -40.1261, 0.66 ) }
    dend_26 { pt3dadd( -179.721, -43.0506, -40.2478, 0.66 ) }
    dend_26 { pt3dadd( -180.445, -42.7092, -40.4422, 0.29 ) }
    dend_26 { pt3dadd( -181.086, -42.4195, -40.6251, 0.88 ) }
    dend_26 { pt3dadd( -181.508, -42.2238, -40.7503, 0.88 ) }
    dend_26 { pt3dadd( -182.332, -41.7992, -41.0036, 0.29 ) }
    dend_26 { pt3dadd( -183.269, -41.224, -41.2209, 0.59 ) }
    dend_26 { pt3dadd( -183.549, -41.0033, -41.259, 0.59 ) }
    dend_26 { pt3dadd( -183.937, -40.6438, -41.2687, 0.59 ) }
    dend_26 { pt3dadd( -184.533, -40.0572, -41.2146, 0.37 ) }
    dend_26 { pt3dadd( -185.169, -39.3803, -41.0988, 0.29 ) }
    dend_26 { pt3dadd( -186.042, -38.3875, -40.8664, 0.29 ) }
    dend_26 { pt3dadd( -186.838, -37.4347, -40.5985, 1.25 ) }
    dend_26 { pt3dadd( -187.321, -36.8162, -40.4378, 1.4 ) }
    dend_26 { pt3dadd( -187.627, -36.4016, -40.344, 1.4 ) }
    dend_26 { pt3dadd( -188.019, -35.8514, -40.241, 1.03 ) }
    dend_26 { pt3dadd( -188.496, -35.1782, -40.1486, 0.29 ) }
    dend_26 { pt3dadd( -189.101, -34.304, -40.0859, 0.29 ) }
    dend_26 { pt3dadd( -189.615, -33.5127, -40.0452, 0.29 ) }
    dend_26 { pt3dadd( -190.248, -32.4362, -40.0117, 1.11 ) }
    dend_26 { pt3dadd( -190.477, -32.0364, -40.0041, 1.55 ) }
    dend_26 { pt3dadd( -190.884, -31.3095, -39.9937, 0.66 ) }
    dend_26 { pt3dadd( -191.529, -30.1388, -39.9727, 0.29 ) }
    dend_26 { pt3dadd( -192.389, -28.6139, -39.9419, 0.29 ) }
    dend_26 { pt3dadd( -192.922, -27.6787, -39.9192, 0.29 ) }
    dend_26 { pt3dadd( -193.559, -26.5488, -39.8882, 0.44 ) }
    dend_26 { pt3dadd( -193.911, -25.9178, -39.868, 0.44 ) }
    dend_26 { pt3dadd( -194.295, -25.2301, -39.8464, 0.59 ) }
    dend_26 { pt3dadd( -194.813, -24.2985, -39.8174, 0.29 ) }
    dend_26 { pt3dadd( -195.195, -23.5722, -39.7914, 0.29 ) }
    dend_26 { pt3dadd( -195.52, -22.8736, -39.7681, 0.44 ) }
    dend_26 { pt3dadd( -195.801, -22.1517, -39.7533, 0.29 ) }
    dend_26 { pt3dadd( -196.083, -21.421, -39.7457, 0.59 ) }
    dend_26 { pt3dadd( -196.434, -20.5745, -39.7442, 1.03 ) }
    dend_26 { pt3dadd( -196.635, -20.1277, -39.7473, 1.03 ) }
    dend_26 { pt3dadd( -197.201, -19.0665, -39.7642, 0.22 ) }
    dend_26 { pt3dadd( -197.81, -18.1297, -39.7889, 0.22 ) }
    dend_26 { pt3dadd( -198.384, -17.3434, -39.8177, 0.22 ) }
    dend_26 { pt3dadd( -198.856, -16.7921, -39.8448, 0.29 ) }
    dend_26 { pt3dadd( -199.169, -16.5064, -39.8629, 0.29 ) }
    dend_26 { pt3dadd( -199.577, -16.239, -39.8819, 0.52 ) }
    dend_26 { pt3dadd( -199.839, -16.1621, -39.8864, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 63/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -18.8192, -65.1817, -10.0785, 0.88 ) }
    dend_21 { pt3dadd( -19.4947, -66.5597, -10.4694, 0.88 ) }
    dend_21 { pt3dadd( -20.0011, -67.6942, -10.7921, 0.88 ) }
    dend_21 { pt3dadd( -20.4475, -68.791, -11.1353, 0.88 ) }
    dend_21 { pt3dadd( -20.8258, -69.7894, -11.4515, 1.03 ) }
    dend_21 { pt3dadd( -21.1764, -70.7861, -11.7657, 1.03 ) }
    dend_21 { pt3dadd( -21.5008, -71.7345, -12.0605, 0.96 ) }
    dend_21 { pt3dadd( -21.852, -72.8214, -12.4517, 0.96 ) }
    dend_21 { pt3dadd( -22.111, -73.6519, -12.7486, 1.11 ) }
    dend_21 { pt3dadd( -22.3462, -74.3572, -12.9917, 1.11 ) }
    dend_21 { pt3dadd( -22.6684, -75.1814, -13.2676, 1.18 ) }
    dend_21 { pt3dadd( -23.1938, -76.296, -13.6431, 1.18 ) }
    dend_21 { pt3dadd( -23.7595, -77.4144, -14.0299, 1.11 ) }
    dend_21 { pt3dadd( -24.1255, -78.0599, -14.2642, 1.25 ) }
    dend_21 { pt3dadd( -24.7068, -78.9879, -14.5941, 1.25 ) }
    dend_21 { pt3dadd( -25.2804, -79.8158, -14.9144, 1.47 ) }
    dend_21 { pt3dadd( -25.861, -80.5548, -15.2193, 1.69 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 80/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 166.282, 163.546, -68.2354, 0.88 ) }
    dend_16 { pt3dadd( 166.688, 162.828, -68.1569, 0.88 ) }
    dend_16 { pt3dadd( 166.897, 162.475, -68.1272, 1.11 ) }
    dend_16 { pt3dadd( 167.103, 162.192, -68.1171, 1.25 ) }
    dend_16 { pt3dadd( 167.493, 161.677, -68.1105, 1.03 ) }
    dend_16 { pt3dadd( 168.019, 160.995, -68.1037, 0.15 ) }
    dend_16 { pt3dadd( 168.317, 160.615, -68.0995, 0.37 ) }
    dend_16 { pt3dadd( 168.462, 160.43, -68.1052, 0.37 ) }
    dend_16 { pt3dadd( 169.33, 159.328, -68.1243, 0.15 ) }
    dend_16 { pt3dadd( 169.612, 158.961, -68.1263, 0.29 ) }
    dend_16 { pt3dadd( 169.93, 158.538, -68.1203, 0.15 ) }
    dend_16 { pt3dadd( 170.224, 158.109, -68.0991, 0.15 ) }
    dend_16 { pt3dadd( 170.468, 157.713, -68.0665, 0.15 ) }
    dend_16 { pt3dadd( 170.66, 157.368, -68.0102, 0.22 ) }
    dend_16 { pt3dadd( 170.827, 157.034, -67.9329, 0.22 ) }
    dend_16 { pt3dadd( 171.04, 156.632, -67.8278, 0.29 ) }
    dend_16 { pt3dadd( 171.307, 156.139, -67.7009, 0.29 ) }
    dend_16 { pt3dadd( 171.782, 155.278, -67.4585, 0.15 ) }
    dend_16 { pt3dadd( 172.371, 154.181, -67.1578, 0.59 ) }
    dend_16 { pt3dadd( 172.531, 153.875, -67.0778, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_16 { pt3dadd( 172.718, 153.515, -66.9886, 0.88 ) }
    dend_16 { pt3dadd( 173.265, 152.439, -66.7468, 0.22 ) }
    dend_16 { pt3dadd( 173.678, 151.591, -66.5467, 0.22 ) }
    dend_16 { pt3dadd( 174.181, 150.511, -66.254, 0.22 ) }
    dend_16 { pt3dadd( 174.417, 149.99, -66.1014, 0.59 ) }
    dend_16 { pt3dadd( 174.562, 149.661, -65.9972, 0.74 ) }
    dend_16 { pt3dadd( 174.711, 149.305, -65.8788, 0.52 ) }
    dend_16 { pt3dadd( 175.127, 148.338, -65.5653, 0.22 ) }
    dend_16 { pt3dadd( 175.54, 147.407, -65.304, 1.33 ) }
    dend_16 { pt3dadd( 175.681, 147.089, -65.2232, 1.4 ) }
    dend_16 { pt3dadd( 176.102, 146.07, -65.0226, 0.22 ) }
    dend_16 { pt3dadd( 176.349, 145.488, -64.9311, 0.15 ) }
    dend_16 { pt3dadd( 176.798, 144.405, -64.7574, 0.15 ) }
    dend_16 { pt3dadd( 177.067, 143.684, -64.6591, 0.29 ) }
    dend_16 { pt3dadd( 177.264, 143.068, -64.5778, 0.29 ) }
    dend_16 { pt3dadd( 177.569, 142.02, -64.4233, 0.15 ) }
    dend_16 { pt3dadd( 177.803, 141.138, -64.2785, 0.15 ) }
    dend_16 { pt3dadd( 178.223, 139.414, -63.9814, 0.15 ) }
    dend_16 { pt3dadd( 178.553, 137.839, -63.7125, 0.15 ) }
    dend_16 { pt3dadd( 178.934, 135.905, -63.3996, 0.15 ) }
    dend_16 { pt3dadd( 179.072, 135.121, -63.2868, 0.22 ) }
    dend_16 { pt3dadd( 179.119, 134.797, -63.2488, 0.96 ) }
    dend_16 { pt3dadd( 179.171, 134.293, -63.2115, 1.18 ) }
    dend_16 { pt3dadd( 179.286, 133.067, -63.1933, 0.15 ) }
    dend_16 { pt3dadd( 179.354, 132.479, -63.1861, 0.29 ) }
    dend_16 { pt3dadd( 179.469, 131.612, -63.2085, 0.15 ) }
    dend_16 { pt3dadd( 179.55, 131.099, -63.2372, 0.29 ) }
    dend_16 { pt3dadd( 179.613, 130.721, -63.2598, 0.29 ) }
    dend_16 { pt3dadd( 179.839, 129.458, -63.3444, 0.15 ) }
    dend_16 { pt3dadd( 180.056, 128.398, -63.4279, 0.15 ) }
    dend_16 { pt3dadd( 180.236, 127.618, -63.4987, 0.52 ) }
    dend_16 { pt3dadd( 180.319, 127.341, -63.5293, 0.66 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 166.282, 163.546, -68.2354, 0.22 ) }
    dend_15 { pt3dadd( 167.744, 163.613, -68.3438, 0.22 ) }
    dend_15 { pt3dadd( 168.639, 163.635, -68.3464, 0.52 ) }
    dend_15 { pt3dadd( 168.819, 163.639, -68.3428, 0.52 ) }
    dend_15 { pt3dadd( 170.352, 163.666, -68.2974, 0.22 ) }
    dend_15 { pt3dadd( 170.859, 163.683, -68.2838, 0.59 ) }
    dend_15 { pt3dadd( 171.308, 163.701, -68.2732, 0.59 ) }
    dend_15 { pt3dadd( 173.203, 163.727, -68.2295, 0.22 ) }
    dend_15 { pt3dadd( 173.509, 163.735, -68.2225, 0.44 ) }
    dend_15 { pt3dadd( 173.701, 163.742, -68.2195, 0.44 ) }
    dend_15 { pt3dadd( 175.176, 163.804, -68.2072, 0.15 ) }
    dend_15 { pt3dadd( 175.436, 163.809, -68.2112, 0.37 ) }
    dend_15 { pt3dadd( 175.729, 163.808, -68.2197, 0.37 ) }
    dend_15 { pt3dadd( 176.813, 163.769, -68.2895, 0.15 ) }
    dend_15 { pt3dadd( 177.41, 163.73, -68.3186, 0.15 ) }
    dend_15 { pt3dadd( 177.733, 163.695, -68.3302, 0.29 ) }
    dend_15 { pt3dadd( 178.042, 163.641, -68.337, 0.29 ) }
    dend_15 { pt3dadd( 178.79, 163.438, -68.34, 0.22 ) }
    dend_15 { pt3dadd( 178.983, 163.372, -68.3407, 0.44 ) }
    dend_15 { pt3dadd( 179.815, 163.02, -68.349, 0.22 ) }
    dend_15 { pt3dadd( 180.099, 162.889, -68.3552, 0.44 ) }
    dend_15 { pt3dadd( 180.395, 162.749, -68.3636, 0.44 ) }
    dend_15 { pt3dadd( 182.004, 161.947, -68.4311, 0.22 ) }
    dend_15 { pt3dadd( 183.017, 161.4, -68.5001, 0.22 ) }
    dend_15 { pt3dadd( 183.542, 161.101, -68.5336, 0.37 ) }
    dend_15 { pt3dadd( 183.817, 160.932, -68.5494, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -138.273, 137.926, 133.136, 0.88 ) }
    dend_8 { pt3dadd( -141.74, 139.702, 139.89, 0.88 ) }
    dend_8 { pt3dadd( -145.106, 142.281, 146.448, 0.88 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 61/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -138.273, 137.926, 133.136, 0.22 ) }
    dend_7 { pt3dadd( -143.5, 142.146, 145.651, 0.88 ) }
    dend_7 { pt3dadd( -147.85, 143.85, 159.027, 0.88 ) }
    dend_7 { pt3dadd( -151.284, 142.872, 172.722, 0.88 ) }
    dend_7 { pt3dadd( -154.508, 139.878, 186.175, 0.88 ) }
    dend_7 { pt3dadd( -156.253, 138.154, 200.113, 0.88 ) }
    dend_7 { pt3dadd( -156.438, 138.126, 214.268, 0.88 ) }
    dend_7 { pt3dadd( -158.123, 138.736, 228.314, 0.88 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 69/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 60.3202, -94.8106, -0.545392, 1.11 ) }
    dend_34 { pt3dadd( 61.9837, -94.7159, -0.733339, 1.11 ) }
    dend_34 { pt3dadd( 63.0057, -94.7139, -0.840319, 0.96 ) }
    dend_34 { pt3dadd( 64.0796, -94.7727, -0.944831, 0.81 ) }
    dend_34 { pt3dadd( 64.7627, -94.8748, -1.00707, 0.81 ) }
    dend_34 { pt3dadd( 65.9265, -95.1385, -1.10119, 0.81 ) }
    dend_34 { pt3dadd( 66.6606, -95.3156, -1.15207, 1.03 ) }
    dend_34 { pt3dadd( 67.346, -95.5272, -1.17846, 1.03 ) }
    dend_34 { pt3dadd( 67.8732, -95.689, -1.22151, 1.03 ) }
    dend_34 { pt3dadd( 68.9462, -95.9455, -1.38527, 0.59 ) }
    dend_34 { pt3dadd( 69.6498, -95.971, -1.59541, 0.59 ) }
    dend_34 { pt3dadd( 70.3475, -95.8828, -1.89422, 0.81 ) }
    dend_34 { pt3dadd( 70.9923, -95.7594, -2.26697, 0.81 ) }
    dend_34 { pt3dadd( 71.7515, -95.6297, -2.77131, 0.66 ) }
    dend_34 { pt3dadd( 72.4972, -95.5573, -3.30564, 0.66 ) }
    dend_34 { pt3dadd( 73.472, -95.6566, -4.05285, 0.74 ) }
    dend_34 { pt3dadd( 74.2984, -96.0324, -4.63142, 0.88 ) }
    dend_34 { pt3dadd( 74.9538, -96.536, -5.01696, 0.88 ) }
    dend_34 { pt3dadd( 75.5213, -97.0775, -5.28964, 0.81 ) }
    dend_34 { pt3dadd( 76.0507, -97.6192, -5.51021, 0.81 ) }
    dend_34 { pt3dadd( 77.0734, -98.6736, -5.86595, 0.59 ) }
    dend_34 { pt3dadd( 78.0811, -99.6662, -6.17254, 0.52 ) }
    dend_34 { pt3dadd( 78.8659, -100.35, -6.41124, 0.66 ) }
    dend_34 { pt3dadd( 79.4429, -100.789, -6.585, 0.66 ) }
    dend_34 { pt3dadd( 80.2312, -101.322, -6.83141, 0.81 ) }
    dend_34 { pt3dadd( 80.7417, -101.643, -7.00995, 0.81 ) }
    dend_34 { pt3dadd( 81.6362, -102.173, -7.35826, 0.66 ) }
    dend_34 { pt3dadd( 82.2488, -102.564, -7.65242, 0.81 ) }
    dend_34 { pt3dadd( 82.9461, -103.06, -7.97878, 0.81 ) }
    dend_34 { pt3dadd( 83.674, -103.615, -8.29953, 0.88 ) }
    dend_34 { pt3dadd( 84.3497, -104.157, -8.57495, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_34 { pt3dadd( 84.9936, -104.664, -8.81819, 0.52 ) }
    dend_34 { pt3dadd( 85.9189, -105.394, -9.2032, 0.88 ) }
    dend_34 { pt3dadd( 86.5579, -105.935, -9.52453, 0.88 ) }
    dend_34 { pt3dadd( 87.0465, -106.402, -9.82112, 1.03 ) }
    dend_34 { pt3dadd( 87.567, -107.003, -10.2084, 0.81 ) }
    dend_34 { pt3dadd( 87.9455, -107.512, -10.5204, 0.59 ) }
    dend_34 { pt3dadd( 88.772, -108.777, -11.2175, 0.59 ) }
    dend_34 { pt3dadd( 89.2185, -109.535, -11.5738, 0.59 ) }
    dend_34 { pt3dadd( 89.5627, -110.131, -11.8403, 0.66 ) }
    dend_34 { pt3dadd( 90.0607, -110.915, -12.1092, 0.37 ) }
    dend_34 { pt3dadd( 90.4315, -111.4, -12.2384, 0.37 ) }
    dend_34 { pt3dadd( 91.0929, -112.081, -12.4933, 0.66 ) }
    dend_34 { pt3dadd( 91.5059, -112.431, -12.6352, 0.81 ) }
    dend_34 { pt3dadd( 92.0241, -112.82, -12.8754, 0.81 ) }
    dend_34 { pt3dadd( 92.7248, -113.284, -13.3027, 0.44 ) }
    dend_34 { pt3dadd( 93.6812, -113.937, -14.2113, 1.33 ) }
    dend_34 { pt3dadd( 94.8025, -114.756, -15.5078, 1.92 ) }
    dend_34 { pt3dadd( 95.1125, -114.983, -15.9003, 1.84 ) }
    dend_34 { pt3dadd( 95.9821, -115.581, -17.0228, 0.81 ) }
    dend_34 { pt3dadd( 96.5664, -115.93, -17.756, 0.88 ) }
    dend_34 { pt3dadd( 98.3647, -116.773, -19.9036, 0.52 ) }
    dend_34 { pt3dadd( 98.827, -116.922, -20.3825, 0.52 ) }
    dend_34 { pt3dadd( 99.3895, -117.036, -20.867, 0.52 ) }
    dend_34 { pt3dadd( 100.046, -117.101, -21.3221, 0.52 ) }
    dend_34 { pt3dadd( 100.784, -117.105, -21.6883, 1.18 ) }
    dend_34 { pt3dadd( 101.621, -117.064, -21.9602, 1.69 ) }
    dend_34 { pt3dadd( 102.155, -116.996, -22.0551, 1.92 ) }
    dend_34 { pt3dadd( 102.616, -116.931, -22.1526, 1.69 ) }
    dend_34 { pt3dadd( 103.708, -116.818, -22.3818, 0.81 ) }
    dend_34 { pt3dadd( 104.876, -116.727, -22.6149, 0.52 ) }
    dend_34 { pt3dadd( 105.547, -116.681, -22.7369, 0.81 ) }
    dend_34 { pt3dadd( 106.014, -116.651, -22.8162, 0.81 ) }
    dend_34 { pt3dadd( 107.502, -116.547, -23.0902, 0.37 ) }
    dend_34 { pt3dadd( 108.794, -116.437, -23.3262, 0.29 ) }
    dend_34 { pt3dadd( 109.76, -116.314, -23.5383, 0.52 ) }
    dend_34 { pt3dadd( 110.557, -116.171, -23.7167, 0.88 ) }
    dend_34 { pt3dadd( 110.945, -116.071, -23.8207, 1.18 ) }
    dend_34 { pt3dadd( 111.283, -115.949, -23.9389, 1.4 ) }
    dend_34 { pt3dadd( 112.031, -115.571, -24.264, 0.88 ) }
    dend_34 { pt3dadd( 113.235, -114.825, -24.8841, 0.44 ) }
    dend_34 { pt3dadd( 113.742, -114.489, -25.159, 0.44 ) }
    dend_34 { pt3dadd( 114.411, -114.043, -25.5182, 1.18 ) }
    dend_34 { pt3dadd( 115.315, -113.485, -25.9332, 1.4 ) }
    dend_34 { pt3dadd( 115.853, -113.191, -26.1457, 1.4 ) }
    dend_34 { pt3dadd( 116.387, -112.939, -26.3256, 1.18 ) }
    dend_34 { pt3dadd( 116.691, -112.816, -26.4003, 1.18 ) }
    dend_34 { pt3dadd( 117.956, -112.373, -26.6634, 0.29 ) }
    dend_34 { pt3dadd( 118.988, -112.039, -26.8081, 0.29 ) }
    dend_34 { pt3dadd( 119.879, -111.745, -26.8906, 0.29 ) }
    dend_34 { pt3dadd( 120.558, -111.502, -26.9455, 0.44 ) }
    dend_34 { pt3dadd( 121.173, -111.25, -26.9873, 0.37 ) }
    dend_34 { pt3dadd( 121.558, -111.076, -27.0024, 0.37 ) }
    dend_34 { pt3dadd( 122.606, -110.555, -26.9927, 1.33 ) }
    dend_34 { pt3dadd( 123.086, -110.27, -26.9792, 1.77 ) }
    dend_34 { pt3dadd( 123.685, -109.882, -26.943, 1.55 ) }
    dend_34 { pt3dadd( 124.318, -109.463, -26.8912, 0.74 ) }
    dend_34 { pt3dadd( 124.952, -109.045, -26.8352, 0.52 ) }
    dend_34 { pt3dadd( 125.607, -108.626, -26.794, 0.29 ) }
    dend_34 { pt3dadd( 126.134, -108.298, -26.766, 0.29 ) }
    dend_34 { pt3dadd( 126.61, -108.01, -26.7395, 0.66 ) }
    dend_34 { pt3dadd( 127.182, -107.667, -26.7148, 0.66 ) }
    dend_34 { pt3dadd( 127.96, -107.22, -26.7112, 0.29 ) }
    dend_34 { pt3dadd( 128.916, -106.698, -26.731, 0.29 ) }
    dend_34 { pt3dadd( 129.649, -106.315, -26.7555, 0.29 ) }
    dend_34 { pt3dadd( 130.169, -106.057, -26.7719, 0.44 ) }
    dend_34 { pt3dadd( 130.932, -105.657, -26.8181, 1.33 ) }
    dend_34 { pt3dadd( 131.89, -105.134, -26.8907, 2.36 ) }
    dend_34 { pt3dadd( 132.19, -104.968, -26.9153, 2.36 ) }
    dend_34 { pt3dadd( 132.783, -104.632, -26.9493, 2.06 ) }
    dend_34 { pt3dadd( 133.626, -104.177, -26.9923, 0.66 ) }
    dend_34 { pt3dadd( 134.48, -103.715, -27.0238, 0.29 ) }
    dend_34 { pt3dadd( 135.087, -103.376, -27.0284, 0.29 ) }
    dend_34 { pt3dadd( 135.924, -102.882, -26.996, 0.52 ) }
    dend_34 { pt3dadd( 136.457, -102.561, -26.9635, 0.66 ) }
    dend_34 { pt3dadd( 137.046, -102.206, -26.9039, 0.29 ) }
    dend_34 { pt3dadd( 137.328, -102.027, -26.8591, 0.29 ) }
    dend_34 { pt3dadd( 137.999, -101.571, -26.6906, 0.88 ) }
    dend_34 { pt3dadd( 138.407, -101.267, -26.5734, 1.03 ) }
    dend_34 { pt3dadd( 139.019, -100.782, -26.3824, 1.03 ) }
    dend_34 { pt3dadd( 139.449, -100.453, -26.2554, 0.74 ) }
    dend_34 { pt3dadd( 139.804, -100.206, -26.1509, 0.44 ) }
    dend_34 { pt3dadd( 140.35, -99.8851, -25.9975, 0.37 ) }
    dend_34 { pt3dadd( 140.927, -99.6108, -25.8717, 0.37 ) }
    dend_34 { pt3dadd( 141.491, -99.3664, -25.7932, 0.59 ) }
    dend_34 { pt3dadd( 142.114, -99.0891, -25.7458, 0.81 ) }
    dend_34 { pt3dadd( 142.478, -98.9031, -25.7367, 0.81 ) }
    dend_34 { pt3dadd( 142.792, -98.7048, -25.7386, 0.81 ) }
    dend_34 { pt3dadd( 143.654, -98.034, -25.7654, 0.37 ) }
    dend_34 { pt3dadd( 144.385, -97.3448, -25.7831, 0.37 ) }
    dend_34 { pt3dadd( 144.896, -96.7776, -25.7863, 0.74 ) }
    dend_34 { pt3dadd( 145.445, -96.1097, -25.7795, 1.11 ) }
    dend_34 { pt3dadd( 146.025, -95.3774, -25.7544, 0.66 ) }
    dend_34 { pt3dadd( 146.421, -94.8719, -25.7214, 0.66 ) }
    dend_34 { pt3dadd( 146.882, -94.3006, -25.6579, 0.81 ) }
    dend_34 { pt3dadd( 147.329, -93.7935, -25.5784, 1.03 ) }
    dend_34 { pt3dadd( 147.828, -93.2699, -25.4818, 0.88 ) }
    dend_34 { pt3dadd( 148.383, -92.6999, -25.3648, 0.66 ) }
    dend_34 { pt3dadd( 148.853, -92.1917, -25.2554, 0.29 ) }
    dend_34 { pt3dadd( 149.374, -91.5951, -25.1134, 0.22 ) }
    dend_34 { pt3dadd( 149.83, -91.0541, -24.9715, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_34 { pt3dadd( 150.146, -90.6547, -24.8535, 0.37 ) }
    dend_34 { pt3dadd( 150.596, -90.065, -24.6701, 0.37 ) }
    dend_34 { pt3dadd( 150.992, -89.5697, -24.5108, 0.81 ) }
    dend_34 { pt3dadd( 151.381, -89.0852, -24.3615, 0.81 ) }
    dend_34 { pt3dadd( 151.888, -88.4521, -24.1823, 0.88 ) }
    dend_34 { pt3dadd( 152.523, -87.6658, -23.9838, 0.29 ) }
    dend_34 { pt3dadd( 152.969, -87.1157, -23.8517, 0.29 ) }
    dend_34 { pt3dadd( 153.371, -86.6335, -23.7612, 0.37 ) }
    dend_34 { pt3dadd( 154.093, -85.768, -23.6335, 0.52 ) }
    dend_34 { pt3dadd( 154.589, -85.1486, -23.5675, 0.66 ) }
    dend_34 { pt3dadd( 154.952, -84.6839, -23.5292, 0.59 ) }
    dend_34 { pt3dadd( 155.424, -84.0785, -23.4958, 1.62 ) }
    dend_34 { pt3dadd( 156.091, -83.1788, -23.4501, 1.99 ) }
    dend_34 { pt3dadd( 156.712, -82.3354, -23.4187, 1.69 ) }
    dend_34 { pt3dadd( 157.158, -81.8129, -23.408, 1.77 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 15/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 60.3202, -94.8106, -0.545392, 0.74 ) }
    dend_29 { pt3dadd( 60.8807, -97.0838, -0.318703, 0.74 ) }
    dend_29 { pt3dadd( 61.2583, -98.4219, -0.185362, 0.74 ) }
    dend_29 { pt3dadd( 61.6923, -99.7643, -0.0582394, 0.74 ) }
    dend_29 { pt3dadd( 62.1528, -101.031, 0.0556843, 0.74 ) }
    dend_29 { pt3dadd( 62.73, -102.449, 0.199814, 0.74 ) }
    dend_29 { pt3dadd( 63.0888, -103.276, 0.286929, 0.88 ) }
    dend_29 { pt3dadd( 63.5098, -104.071, 0.370108, 0.88 ) }
    dend_29 { pt3dadd( 64.1726, -105.235, 0.499056, 0.59 ) }
    dend_29 { pt3dadd( 64.6815, -106.139, 0.589947, 0.37 ) }
    dend_29 { pt3dadd( 65.2724, -107.223, 0.676985, 0.37 ) }
    dend_29 { pt3dadd( 65.7356, -108.097, 0.725119, 0.59 ) }
    dend_29 { pt3dadd( 66.1911, -109.011, 0.768293, 0.66 ) }
    dend_29 { pt3dadd( 66.6474, -110.071, 0.798811, 0.66 ) }
    dend_29 { pt3dadd( 67.0327, -111.149, 0.80565, 0.81 ) }
    dend_29 { pt3dadd( 67.2393, -111.852, 0.793677, 0.81 ) }
    dend_29 { pt3dadd( 67.4103, -112.579, 0.763598, 0.52 ) }
    dend_29 { pt3dadd( 67.5436, -113.225, 0.725649, 0.52 ) }
    dend_29 { pt3dadd( 67.8394, -114.886, 0.60842, 0.74 ) }
    dend_29 { pt3dadd( 68.0298, -116.092, 0.542225, 0.96 ) }
    dend_29 { pt3dadd( 68.1787, -117.134, 0.512378, 0.96 ) }
    dend_29 { pt3dadd( 68.2881, -117.981, 0.510403, 0.96 ) }
    dend_29 { pt3dadd( 68.3911, -119.028, 0.528899, 0.66 ) }
    dend_29 { pt3dadd( 68.4195, -119.675, 0.552329, 0.66 ) }
    dend_29 { pt3dadd( 68.3749, -120.681, 0.610119, 1.11 ) }
    dend_29 { pt3dadd( 68.2742, -121.339, 0.647713, 1.11 ) }
    dend_29 { pt3dadd( 68.0015, -122.357, 0.693649, 0.81 ) }
    dend_29 { pt3dadd( 67.57, -123.555, 0.720553, 0.44 ) }
    dend_29 { pt3dadd( 67.0848, -124.67, 0.715223, 0.44 ) }
    dend_29 { pt3dadd( 66.7224, -125.452, 0.676558, 0.44 ) }
    dend_29 { pt3dadd( 66.2785, -126.39, 0.585378, 0.66 ) }
    dend_29 { pt3dadd( 65.918, -127.176, 0.492789, 0.44 ) }
    dend_29 { pt3dadd( 65.4596, -128.195, 0.368187, 0.81 ) }
    dend_29 { pt3dadd( 65.1671, -128.898, 0.289589, 0.96 ) }
    dend_29 { pt3dadd( 64.8947, -129.656, 0.214755, 0.52 ) }
    dend_29 { pt3dadd( 64.6518, -130.448, 0.130848, 0.44 ) }
    dend_29 { pt3dadd( 64.3263, -131.633, -0.0300077, 0.37 ) }
    dend_29 { pt3dadd( 64.0896, -132.56, -0.179512, 0.37 ) }
    dend_29 { pt3dadd( 63.8324, -133.579, -0.350884, 0.52 ) }
    dend_29 { pt3dadd( 63.5305, -134.848, -0.566998, 0.59 ) }
    dend_29 { pt3dadd( 63.2588, -136.069, -0.77787, 0.59 ) }
    dend_29 { pt3dadd( 63.0469, -137.206, -0.973229, 0.66 ) }
    dend_29 { pt3dadd( 62.886, -138.444, -1.18014, 0.74 ) }
    dend_29 { pt3dadd( 62.8259, -139.288, -1.3008, 0.59 ) }
    dend_29 { pt3dadd( 62.7938, -140.167, -1.39719, 0.44 ) }
    dend_29 { pt3dadd( 62.7835, -140.503, -1.40967, 0.74 ) }
    dend_29 { pt3dadd( 62.7751, -141.087, -1.38068, 0.74 ) }
    dend_29 { pt3dadd( 62.7923, -141.801, -1.30612, 0.44 ) }
    dend_29 { pt3dadd( 62.8679, -142.865, -1.18662, 0.29 ) }
    dend_29 { pt3dadd( 62.9727, -143.659, -1.10254, 0.37 ) }
    dend_29 { pt3dadd( 63.0962, -144.38, -1.02612, 0.59 ) }
    dend_29 { pt3dadd( 63.2872, -145.362, -0.931499, 0.59 ) }
    dend_29 { pt3dadd( 63.5002, -146.354, -0.899549, 0.74 ) }
    dend_29 { pt3dadd( 63.6183, -146.889, -0.887928, 0.81 ) }
    dend_29 { pt3dadd( 63.8403, -147.888, -0.907026, 0.66 ) }
    dend_29 { pt3dadd( 63.9713, -148.523, -0.939392, 0.66 ) }
    dend_29 { pt3dadd( 64.0651, -149.034, -0.978998, 0.66 ) }
    dend_29 { pt3dadd( 64.262, -150.409, -1.09569, 0.59 ) }
    dend_29 { pt3dadd( 64.4, -151.836, -1.22632, 0.66 ) }
    dend_29 { pt3dadd( 64.4575, -152.876, -1.32537, 0.74 ) }
    dend_29 { pt3dadd( 64.4679, -153.85, -1.41879, 0.74 ) }
    dend_29 { pt3dadd( 64.4746, -154.445, -1.46804, 0.74 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 77/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -25.861, -80.5548, -15.2193, 0.81 ) }
    dend_25 { pt3dadd( -25.0356, -81.5198, -15.435, 0.81 ) }
    dend_25 { pt3dadd( -24.7394, -82.0199, -15.514, 0.74 ) }
    dend_25 { pt3dadd( -24.4925, -82.5942, -15.5437, 0.59 ) }
    dend_25 { pt3dadd( -24.353, -82.9848, -15.5242, 0.59 ) }
    dend_25 { pt3dadd( -24.1589, -83.6275, -15.4569, 0.74 ) }
    dend_25 { pt3dadd( -23.9596, -84.4216, -15.3732, 0.66 ) }
    dend_25 { pt3dadd( -23.8587, -85.1948, -15.2684, 0.66 ) }
    dend_25 { pt3dadd( -23.7658, -85.906, -15.1887, 0.74 ) }
    dend_25 { pt3dadd( -23.6525, -86.6774, -15.0865, 0.74 ) }
    dend_25 { pt3dadd( -23.5514, -87.1951, -15.0206, 0.81 ) }
    dend_25 { pt3dadd( -23.2939, -88.2323, -14.8851, 0.96 ) }
    dend_25 { pt3dadd( -23.156, -88.7122, -14.8359, 1.18 ) }
    dend_25 { pt3dadd( -22.806, -89.9364, -14.752, 0.52 ) }
    dend_25 { pt3dadd( -22.5692, -90.7327, -14.7376, 0.74 ) }
    dend_25 { pt3dadd( -22.3103, -91.4512, -14.7619, 0.88 ) }
    dend_25 { pt3dadd( -22.0114, -92.0768, -14.821, 0.59 ) }
    dend_25 { pt3dadd( -21.684, -92.6549, -14.8959, 0.59 ) }
    dend_25 { pt3dadd( -21.3518, -93.2119, -14.9867, 1.18 ) }
    dend_25 { pt3dadd( -20.9948, -93.848, -15.1, 1.18 ) }
    dend_25 { pt3dadd( -20.3187, -95.1163, -15.3354, 0.59 ) }
    dend_25 { pt3dadd( -19.829, -96.099, -15.4956, 0.74 ) }
    dend_25 { pt3dadd( -19.5567, -96.6558, -15.6137, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_25 { pt3dadd( -19.2105, -97.4349, -15.8123, 0.66 ) }
    dend_25 { pt3dadd( -18.9454, -98.2135, -16.0411, 0.88 ) }
    dend_25 { pt3dadd( -18.8594, -98.7153, -16.2019, 1.03 ) }
    dend_25 { pt3dadd( -18.8646, -99.2902, -16.4168, 0.74 ) }
    dend_25 { pt3dadd( -18.9649, -100.522, -16.9657, 0.44 ) }
    dend_25 { pt3dadd( -18.9777, -100.944, -17.1869, 0.44 ) }
    dend_25 { pt3dadd( -18.96, -101.422, -17.4451, 0.81 ) }
    dend_25 { pt3dadd( -18.8685, -102.036, -17.7292, 1.18 ) }
    dend_25 { pt3dadd( -18.7263, -102.566, -17.8913, 1.18 ) }
    dend_25 { pt3dadd( -18.4408, -103.264, -17.9732, 0.81 ) }
    dend_25 { pt3dadd( -17.9164, -104.293, -17.9032, 0.52 ) }
    dend_25 { pt3dadd( -17.59, -104.842, -17.8079, 0.88 ) }
    dend_25 { pt3dadd( -17.0599, -105.629, -17.6127, 1.03 ) }
    dend_25 { pt3dadd( -16.6582, -106.188, -17.4321, 1.03 ) }
    dend_25 { pt3dadd( -16.277, -106.725, -17.2299, 1.25 ) }
    dend_25 { pt3dadd( -16.058, -107.057, -17.0985, 1.92 ) }
    dend_25 { pt3dadd( -15.7944, -107.508, -16.9388, 1.55 ) }
    dend_25 { pt3dadd( -15.311, -108.545, -16.6363, 0.52 ) }
    dend_25 { pt3dadd( -15.1614, -108.974, -16.5551, 0.44 ) }
    dend_25 { pt3dadd( -14.9605, -109.646, -16.4838, 0.37 ) }
    dend_25 { pt3dadd( -14.8663, -109.988, -16.4667, 0.52 ) }
    dend_25 { pt3dadd( -14.7542, -110.377, -16.4637, 0.52 ) }
    dend_25 { pt3dadd( -14.4976, -111.234, -16.4787, 0.44 ) }
    dend_25 { pt3dadd( -14.2201, -112.167, -16.4917, 0.96 ) }
    dend_25 { pt3dadd( -13.9565, -113.101, -16.4722, 1.69 ) }
    dend_25 { pt3dadd( -13.762, -113.778, -16.4507, 1.92 ) }
    dend_25 { pt3dadd( -13.5582, -114.515, -16.4122, 1.92 ) }
    dend_25 { pt3dadd( -13.3736, -115.27, -16.3738, 1.92 ) }
    dend_25 { pt3dadd( -13.2217, -115.995, -16.3427, 1.62 ) }
    dend_25 { pt3dadd( -13.0819, -117.091, -16.2635, 0.37 ) }
    dend_25 { pt3dadd( -13.0056, -118.474, -16.146, 0.29 ) }
    dend_25 { pt3dadd( -12.9988, -118.851, -16.1153, 0.29 ) }
    dend_25 { pt3dadd( -12.9986, -119.335, -16.0771, 0.29 ) }
    dend_25 { pt3dadd( -12.9931, -119.604, -16.0519, 0.29 ) }
    dend_25 { pt3dadd( -12.9327, -120.343, -16.0161, 0.88 ) }
    dend_25 { pt3dadd( -12.8763, -120.775, -16.0199, 1.11 ) }
    dend_25 { pt3dadd( -12.8341, -121.085, -16.0248, 1.11 ) }
    dend_25 { pt3dadd( -12.7345, -121.75, -16.0632, 0.29 ) }
    dend_25 { pt3dadd( -12.653, -122.372, -16.1135, 0.29 ) }
    dend_25 { pt3dadd( -12.5713, -123.308, -16.2259, 0.44 ) }
    dend_25 { pt3dadd( -12.5418, -123.847, -16.3201, 0.66 ) }
    dend_25 { pt3dadd( -12.5336, -124.247, -16.4026, 0.66 ) }
    dend_25 { pt3dadd( -12.55, -124.925, -16.5632, 0.37 ) }
    dend_25 { pt3dadd( -12.6126, -125.804, -16.7874, 0.37 ) }
    dend_25 { pt3dadd( -12.6842, -126.629, -16.9688, 0.59 ) }
    dend_25 { pt3dadd( -12.7427, -127.355, -17.0797, 1.03 ) }
    dend_25 { pt3dadd( -12.7625, -127.715, -17.1206, 1.03 ) }
    dend_25 { pt3dadd( -12.7877, -128.395, -17.1728, 0.74 ) }
    dend_25 { pt3dadd( -12.7831, -129.086, -17.213, 0.29 ) }
    dend_25 { pt3dadd( -12.7407, -129.83, -17.2459, 0.29 ) }
    dend_25 { pt3dadd( -12.673, -130.634, -17.2568, 1.25 ) }
    dend_25 { pt3dadd( -12.6214, -131.166, -17.2466, 2.06 ) }
    dend_25 { pt3dadd( -12.5812, -131.539, -17.2346, 2.06 ) }
    dend_25 { pt3dadd( -12.5001, -132.344, -17.2059, 1.4 ) }
    dend_25 { pt3dadd( -12.4463, -133.208, -17.192, 0.81 ) }
    dend_25 { pt3dadd( -12.4444, -133.847, -17.206, 0.44 ) }
    dend_25 { pt3dadd( -12.4599, -134.379, -17.2169, 0.59 ) }
    dend_25 { pt3dadd( -12.4763, -134.868, -17.2171, 0.59 ) }
    dend_25 { pt3dadd( -12.49, -135.491, -17.1888, 0.59 ) }
    dend_25 { pt3dadd( -12.491, -136.199, -17.1026, 0.44 ) }
    dend_25 { pt3dadd( -12.4646, -136.786, -16.9933, 0.29 ) }
    dend_25 { pt3dadd( -12.4162, -137.283, -16.8985, 0.74 ) }
    dend_25 { pt3dadd( -12.3446, -137.807, -16.804, 0.74 ) }
    dend_25 { pt3dadd( -12.2248, -138.427, -16.7034, 0.52 ) }
    dend_25 { pt3dadd( -12.103, -138.901, -16.6269, 0.52 ) }
    dend_25 { pt3dadd( -11.9708, -139.353, -16.5523, 0.44 ) }
    dend_25 { pt3dadd( -11.7852, -140.023, -16.4487, 0.44 ) }
    dend_25 { pt3dadd( -11.6666, -140.572, -16.3894, 0.37 ) }
    dend_25 { pt3dadd( -11.5664, -141.154, -16.357, 0.37 ) }
    dend_25 { pt3dadd( -11.5086, -141.534, -16.3414, 0.59 ) }
    dend_25 { pt3dadd( -11.3923, -142.249, -16.2975, 0.59 ) }
    dend_25 { pt3dadd( -11.3017, -142.663, -16.26, 0.59 ) }
    dend_25 { pt3dadd( -11.1324, -143.293, -16.1713, 0.37 ) }
    dend_25 { pt3dadd( -10.9006, -144.048, -16.0425, 0.29 ) }
    dend_25 { pt3dadd( -10.75, -144.506, -15.957, 1.18 ) }
    dend_25 { pt3dadd( -10.5861, -144.908, -15.906, 1.4 ) }
    dend_25 { pt3dadd( -10.3573, -145.413, -15.866, 1.4 ) }
    dend_25 { pt3dadd( -10.1908, -145.764, -15.844, 1.4 ) }
    dend_25 { pt3dadd( -9.97484, -146.189, -15.8138, 0.88 ) }
    dend_25 { pt3dadd( -9.75662, -146.611, -15.7667, 0.66 ) }
    dend_25 { pt3dadd( -9.19304, -147.719, -15.6138, 0.37 ) }
    dend_25 { pt3dadd( -8.86861, -148.391, -15.4958, 0.29 ) }
    dend_25 { pt3dadd( -8.69448, -148.777, -15.4077, 0.29 ) }
    dend_25 { pt3dadd( -8.5552, -149.087, -15.3225, 0.29 ) }
    dend_25 { pt3dadd( -8.2665, -149.753, -15.0979, 1.03 ) }
    dend_25 { pt3dadd( -8.09523, -150.141, -14.9208, 1.47 ) }
    dend_25 { pt3dadd( -7.94997, -150.46, -14.7294, 1.62 ) }
    dend_25 { pt3dadd( -7.78194, -150.814, -14.5094, 1.33 ) }
    dend_25 { pt3dadd( -7.61462, -151.194, -14.2824, 0.81 ) }
    dend_25 { pt3dadd( -7.45454, -151.615, -14.0528, 0.44 ) }
    dend_25 { pt3dadd( -7.21616, -152.326, -13.6992, 0.29 ) }
    dend_25 { pt3dadd( -7.05925, -152.868, -13.4554, 0.88 ) }
    dend_25 { pt3dadd( -6.91327, -153.486, -13.2087, 0.96 ) }
    dend_25 { pt3dadd( -6.82397, -153.931, -13.0548, 1.25 ) }
    dend_25 { pt3dadd( -6.76328, -154.335, -12.9366, 1.4 ) }
    dend_25 { pt3dadd( -6.72736, -154.716, -12.8455, 1.4 ) }
    dend_25 { pt3dadd( -6.70932, -155.297, -12.7394, 1.03 ) }
    dend_25 { pt3dadd( -6.71473, -156.035, -12.6426, 0.29 ) }
    dend_25 { pt3dadd( -6.76081, -157.001, -12.5612, 0.29 ) }
    dend_25 { pt3dadd( -6.82537, -157.651, -12.5354, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_25 { pt3dadd( -6.886, -158.069, -12.5331, 0.44 ) }
    dend_25 { pt3dadd( -7.00026, -158.626, -12.5543, 0.44 ) }
    dend_25 { pt3dadd( -7.14277, -159.19, -12.6169, 0.52 ) }
    dend_25 { pt3dadd( -7.32125, -159.794, -12.7261, 0.44 ) }
    dend_25 { pt3dadd( -7.47353, -160.295, -12.8421, 0.29 ) }
    dend_25 { pt3dadd( -7.56142, -160.604, -12.9237, 0.44 ) }
    dend_25 { pt3dadd( -7.71244, -161.18, -13.0776, 0.44 ) }
    dend_25 { pt3dadd( -7.89592, -162.048, -13.322, 1.55 ) }
    dend_25 { pt3dadd( -8.00059, -162.722, -13.4992, 2.43 ) }
    dend_25 { pt3dadd( -8.04041, -163.131, -13.5993, 2.73 ) }
    dend_25 { pt3dadd( -8.0574, -163.454, -13.6677, 2.43 ) }
    dend_25 { pt3dadd( -8.07613, -164.182, -13.7938, 1.69 ) }
    dend_25 { pt3dadd( -8.09227, -165.365, -13.9547, 0.52 ) }
    dend_25 { pt3dadd( -8.10295, -165.74, -13.9905, 0.52 ) }
    dend_25 { pt3dadd( -8.12074, -166.061, -14.0155, 0.88 ) }
    dend_25 { pt3dadd( -8.16605, -166.644, -14.0804, 0.59 ) }
    dend_25 { pt3dadd( -8.20011, -167.129, -14.1388, 0.59 ) }
    dend_25 { pt3dadd( -8.25316, -167.82, -14.2348, 0.66 ) }
    dend_25 { pt3dadd( -8.28193, -168.17, -14.2826, 0.66 ) }
    dend_25 { pt3dadd( -8.30201, -168.587, -14.3431, 0.52 ) }
    dend_25 { pt3dadd( -8.2981, -169.461, -14.4768, 0.29 ) }
    dend_25 { pt3dadd( -8.2652, -170.06, -14.5593, 0.29 ) }
    dend_25 { pt3dadd( -8.25147, -170.206, -14.5743, 0.59 ) }
    dend_25 { pt3dadd( -8.19848, -170.683, -14.6015, 0.59 ) }
    dend_25 { pt3dadd( -8.15577, -171.159, -14.6147, 0.29 ) }
    dend_25 { pt3dadd( -8.11516, -171.919, -14.6351, 0.29 ) }
    dend_25 { pt3dadd( -8.10249, -172.466, -14.6241, 0.74 ) }
    dend_25 { pt3dadd( -8.09811, -172.818, -14.6455, 0.74 ) }
    dend_25 { pt3dadd( -8.10326, -173.246, -14.6945, 0.74 ) }
    dend_25 { pt3dadd( -8.13008, -173.687, -14.7703, 0.59 ) }
    dend_25 { pt3dadd( -8.19197, -174.4, -14.9114, 0.29 ) }
    dend_25 { pt3dadd( -8.2791, -175.354, -15.097, 0.29 ) }
    dend_25 { pt3dadd( -8.36715, -176.31, -15.2848, 0.37 ) }
    dend_25 { pt3dadd( -8.40086, -176.652, -15.3481, 0.37 ) }
    dend_25 { pt3dadd( -8.46036, -177.214, -15.4369, 0.29 ) }
    dend_25 { pt3dadd( -8.53026, -177.847, -15.5161, 0.44 ) }
    dend_25 { pt3dadd( -8.56668, -178.13, -15.5344, 0.59 ) }
    dend_25 { pt3dadd( -8.61644, -178.516, -15.5358, 0.44 ) }
    dend_25 { pt3dadd( -8.63901, -178.922, -15.4891, 0.37 ) }
    dend_25 { pt3dadd( -8.63527, -179.395, -15.4211, 0.37 ) }
    dend_25 { pt3dadd( -8.61219, -179.811, -15.3528, 0.52 ) }
    dend_25 { pt3dadd( -8.5754, -180.226, -15.2929, 0.74 ) }
    dend_25 { pt3dadd( -8.49319, -180.828, -15.2352, 0.29 ) }
    dend_25 { pt3dadd( -8.35148, -181.649, -15.1839, 1.11 ) }
    dend_25 { pt3dadd( -8.29236, -181.962, -15.1725, 1.33 ) }
    dend_25 { pt3dadd( -8.23355, -182.28, -15.1698, 1.33 ) }
    dend_25 { pt3dadd( -8.15528, -182.801, -15.1868, 1.03 ) }
    dend_25 { pt3dadd( -8.07913, -183.558, -15.2615, 0.59 ) }
    dend_25 { pt3dadd( -8.07283, -183.982, -15.3388, 0.37 ) }
    dend_25 { pt3dadd( -8.1194, -184.438, -15.4546, 0.59 ) }
    dend_25 { pt3dadd( -8.15199, -184.653, -15.5192, 0.59 ) }
    dend_25 { pt3dadd( -8.24763, -185.096, -15.6666, 0.29 ) }
    dend_25 { pt3dadd( -8.36961, -185.5, -15.8025, 0.29 ) }
    dend_25 { pt3dadd( -8.48176, -185.834, -15.9022, 0.29 ) }
    dend_25 { pt3dadd( -8.53568, -186.161, -16.0094, 0.29 ) }
    dend_25 { pt3dadd( -8.5811, -186.758, -16.235, 0.88 ) }
    dend_25 { pt3dadd( -8.58623, -186.941, -16.303, 1.18 ) }
    dend_25 { pt3dadd( -8.58185, -187.14, -16.3766, 1.18 ) }
    dend_25 { pt3dadd( -8.5624, -187.635, -16.5606, 0.74 ) }
    dend_25 { pt3dadd( -8.50677, -188.65, -16.943, 0.29 ) }
    dend_25 { pt3dadd( -8.48845, -189.119, -17.117, 0.29 ) }
    dend_25 { pt3dadd( -8.48624, -189.705, -17.3282, 0.29 ) }
    dend_25 { pt3dadd( -8.49599, -190.38, -17.5709, 0.96 ) }
    dend_25 { pt3dadd( -8.51215, -190.741, -17.697, 1.11 ) }
    dend_25 { pt3dadd( -8.56156, -191.35, -17.8877, 0.74 ) }
    dend_25 { pt3dadd( -8.60893, -191.874, -18.0101, 0.59 ) }
    dend_25 { pt3dadd( -8.62674, -192.139, -18.057, 0.81 ) }
    dend_25 { pt3dadd( -8.66994, -192.711, -18.144, 0.81 ) }
    dend_25 { pt3dadd( -8.72187, -193.198, -18.2072, 0.44 ) }
    dend_25 { pt3dadd( -8.80171, -193.866, -18.3019, 0.29 ) }
    dend_25 { pt3dadd( -8.89069, -194.56, -18.4273, 0.29 ) }
    dend_25 { pt3dadd( -8.99191, -195.415, -18.6053, 1.62 ) }
    dend_25 { pt3dadd( -9.02663, -195.789, -18.6774, 1.84 ) }
    dend_25 { pt3dadd( -9.04283, -196.129, -18.7247, 1.99 ) }
    dend_25 { pt3dadd( -9.03728, -196.724, -18.8223, 1.77 ) }
    dend_25 { pt3dadd( -9.02091, -197.294, -18.9357, 1.11 ) }
    dend_25 { pt3dadd( -9.00357, -197.936, -19.0737, 0.44 ) }
    dend_25 { pt3dadd( -8.9767, -198.546, -19.2026, 0.44 ) }
    dend_25 { pt3dadd( -8.93825, -199.324, -19.3373, 0.37 ) }
    dend_25 { pt3dadd( -8.8863, -200.36, -19.4503, 0.29 ) }
    dend_25 { pt3dadd( -8.8698, -200.709, -19.4782, 0.29 ) }
    dend_25 { pt3dadd( -8.84133, -201.437, -19.5255, 0.66 ) }
    dend_25 { pt3dadd( -8.82528, -201.905, -19.5696, 0.81 ) }
    dend_25 { pt3dadd( -8.80412, -202.49, -19.6373, 0.37 ) }
    dend_25 { pt3dadd( -8.77267, -203.345, -19.702, 0.29 ) }
    dend_25 { pt3dadd( -8.70606, -204.512, -19.6992, 1.4 ) }
    dend_25 { pt3dadd( -8.67711, -204.901, -19.6797, 1.99 ) }
    dend_25 { pt3dadd( -8.64597, -205.36, -19.6358, 2.21 ) }
    dend_25 { pt3dadd( -8.62635, -205.943, -19.5517, 1.47 ) }
    dend_25 { pt3dadd( -8.63509, -206.923, -19.3265, 0.29 ) }
    dend_25 { pt3dadd( -8.65336, -207.41, -19.1532, 0.29 ) }
    dend_25 { pt3dadd( -8.6849, -208.092, -18.7758, 0.52 ) }
    dend_25 { pt3dadd( -8.694, -208.442, -18.5393, 0.66 ) }
    dend_25 { pt3dadd( -8.69536, -208.919, -18.1517, 0.44 ) }
    dend_25 { pt3dadd( -8.68047, -209.594, -17.5521, 0.37 ) }
    dend_25 { pt3dadd( -8.63691, -210.057, -17.1256, 0.37 ) }
    dend_25 { pt3dadd( -8.56624, -210.732, -16.4053, 1.25 ) }
    dend_25 { pt3dadd( -8.5364, -210.956, -16.1474, 1.84 ) }
    dend_25 { pt3dadd( -8.4926, -211.359, -15.6472, 1.92 ) }
    dend_25 { pt3dadd( -8.44, -211.834, -15.0123, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_25 { pt3dadd( -8.39464, -212.251, -14.4484, 1.11 ) }
    dend_25 { pt3dadd( -8.2988, -213.288, -13.11, 0.29 ) }
    dend_25 { pt3dadd( -8.26716, -213.741, -12.5287, 0.29 ) }
    dend_25 { pt3dadd( -8.22249, -214.362, -11.6865, 0.29 ) }
    dend_25 { pt3dadd( -8.19588, -214.714, -11.1898, 0.29 ) }
    dend_25 { pt3dadd( -8.15159, -215.133, -10.5924, 0.52 ) }
    dend_25 { pt3dadd( -8.11122, -215.423, -10.2052, 0.66 ) }
    dend_25 { pt3dadd( -7.96835, -216.155, -9.30538, 0.29 ) }
    dend_25 { pt3dadd( -7.86568, -216.649, -8.68652, 1.11 ) }
    dend_25 { pt3dadd( -7.78389, -217.025, -8.2242, 1.11 ) }
    dend_25 { pt3dadd( -7.64861, -217.891, -7.14834, 0.22 ) }
    dend_25 { pt3dadd( -7.61359, -218.166, -6.79292, 0.44 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -25.861, -80.5548, -15.2193, 0.96 ) }
    dend_22 { pt3dadd( -26.9896, -81.7546, -15.4542, 0.96 ) }
    dend_22 { pt3dadd( -27.9265, -82.7073, -15.6654, 0.96 ) }
    dend_22 { pt3dadd( -28.7285, -83.4607, -15.8398, 1.18 ) }
    dend_22 { pt3dadd( -29.452, -84.0928, -16.0358, 1.18 ) }
    dend_22 { pt3dadd( -30.5294, -84.9635, -16.395, 0.74 ) }
    dend_22 { pt3dadd( -31.3298, -85.5493, -16.7102, 0.74 ) }
    dend_22 { pt3dadd( -31.9008, -85.9341, -17.0093, 0.74 ) }
    dend_22 { pt3dadd( -32.4032, -86.233, -17.3383, 0.74 ) }
    dend_22 { pt3dadd( -33.3388, -86.7968, -18.0128, 0.66 ) }
    dend_22 { pt3dadd( -33.7435, -87.1148, -18.3274, 0.66 ) }
    dend_22 { pt3dadd( -34.2426, -87.6449, -18.7089, 0.66 ) }
    dend_22 { pt3dadd( -34.6526, -88.1708, -18.9985, 0.81 ) }
    dend_22 { pt3dadd( -35.0854, -88.7464, -19.2688, 0.96 ) }
    dend_22 { pt3dadd( -35.738, -89.5981, -19.6238, 1.11 ) }
    dend_22 { pt3dadd( -36.426, -90.4403, -19.9243, 1.11 ) }
    dend_22 { pt3dadd( -36.9819, -91.1269, -20.1551, 1.33 ) }
    dend_22 { pt3dadd( -37.4649, -91.7103, -20.3579, 1.47 ) }
    dend_22 { pt3dadd( -38.1707, -92.4656, -20.6637, 1.47 ) }
    dend_22 { pt3dadd( -38.8153, -93.0538, -20.9509, 1.4 ) }
    dend_22 { pt3dadd( -39.5471, -93.5744, -21.2727, 1.25 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 33/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 157.158, -81.8129, -23.408, 0.52 ) }
    dend_36 { pt3dadd( 157.909, -81.2249, -23.1228, 0.52 ) }
    dend_36 { pt3dadd( 158.336, -80.8329, -22.9485, 0.29 ) }
    dend_36 { pt3dadd( 158.797, -80.3698, -22.7136, 0.22 ) }
    dend_36 { pt3dadd( 159.283, -79.852, -22.5012, 0.22 ) }
    dend_36 { pt3dadd( 159.727, -79.3685, -22.335, 0.22 ) }
    dend_36 { pt3dadd( 160.191, -78.8315, -22.167, 0.22 ) }
    dend_36 { pt3dadd( 160.645, -78.241, -21.9922, 0.88 ) }
    dend_36 { pt3dadd( 160.987, -77.7402, -21.8545, 1.18 ) }
    dend_36 { pt3dadd( 161.579, -76.79, -21.5966, 1.47 ) }
    dend_36 { pt3dadd( 161.782, -76.4468, -21.5008, 1.55 ) }
    dend_36 { pt3dadd( 162.481, -75.2629, -21.1687, 0.22 ) }
    dend_36 { pt3dadd( 162.885, -74.634, -20.9944, 0.22 ) }
    dend_36 { pt3dadd( 163.411, -73.8992, -20.7567, 0.88 ) }
    dend_36 { pt3dadd( 163.788, -73.402, -20.5831, 1.4 ) }
    dend_36 { pt3dadd( 164.016, -73.1149, -20.4628, 1.25 ) }
    dend_36 { pt3dadd( 164.384, -72.6707, -20.2724, 0.81 ) }
    dend_36 { pt3dadd( 165.033, -71.9331, -19.9571, 0.22 ) }
    dend_36 { pt3dadd( 165.972, -70.9175, -19.5221, 0.22 ) }
    dend_36 { pt3dadd( 166.551, -70.3358, -19.2678, 0.66 ) }
    dend_36 { pt3dadd( 166.921, -69.975, -19.1074, 0.81 ) }
    dend_36 { pt3dadd( 167.154, -69.7405, -19.0017, 0.66 ) }
    dend_36 { pt3dadd( 167.372, -69.5054, -18.8893, 0.52 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 56/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 157.158, -81.8129, -23.408, 0.29 ) }
    dend_35 { pt3dadd( 157.143, -80.5467, -22.597, 0.29 ) }
    dend_35 { pt3dadd( 157.145, -79.6536, -22.0213, 0.29 ) }
    dend_35 { pt3dadd( 157.136, -78.9896, -21.5925, 0.52 ) }
    dend_35 { pt3dadd( 157.123, -78.6121, -21.3458, 0.66 ) }
    dend_35 { pt3dadd( 157.096, -77.9001, -20.8742, 0.22 ) }
    dend_35 { pt3dadd( 157.076, -77.432, -20.5637, 0.59 ) }
    dend_35 { pt3dadd( 157.045, -76.9516, -20.2368, 0.74 ) }
    dend_35 { pt3dadd( 157.015, -76.5571, -19.9591, 0.81 ) }
    dend_35 { pt3dadd( 156.977, -75.9657, -19.5255, 0.52 ) }
    dend_35 { pt3dadd( 156.945, -75.2667, -18.9925, 0.22 ) }
    dend_35 { pt3dadd( 156.932, -74.791, -18.6183, 0.29 ) }
    dend_35 { pt3dadd( 156.941, -74.4055, -18.306, 0.29 ) }
    dend_35 { pt3dadd( 156.976, -74.0302, -17.9949, 0.15 ) }
    dend_35 { pt3dadd( 157.063, -73.5395, -17.5805, 0.29 ) }
    dend_35 { pt3dadd( 157.141, -73.1987, -17.2929, 0.37 ) }
    dend_35 { pt3dadd( 157.24, -72.7971, -16.9595, 0.22 ) }
    dend_35 { pt3dadd( 157.376, -72.2502, -16.5201, 0.22 ) }
    dend_35 { pt3dadd( 157.485, -71.7666, -16.1517, 0.74 ) }
    dend_35 { pt3dadd( 157.557, -71.4046, -15.8848, 0.88 ) }
    dend_35 { pt3dadd( 157.636, -70.9611, -15.5638, 0.52 ) }
    dend_35 { pt3dadd( 157.76, -70.2234, -15.0397, 0.22 ) }
    dend_35 { pt3dadd( 157.822, -69.7659, -14.7216, 0.44 ) }
    dend_35 { pt3dadd( 157.843, -69.4871, -14.5362, 0.44 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 80/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 64.4746, -154.445, -1.46804, 0.37 ) }
    dend_31 { pt3dadd( 64.9041, -155.186, -1.54946, 0.37 ) }
    dend_31 { pt3dadd( 65.2447, -155.725, -1.59669, 0.52 ) }
    dend_31 { pt3dadd( 65.5412, -156.166, -1.62797, 0.59 ) }
    dend_31 { pt3dadd( 66.0056, -156.848, -1.66742, 0.22 ) }
    dend_31 { pt3dadd( 66.2965, -157.265, -1.68741, 0.22 ) }
    dend_31 { pt3dadd( 66.5607, -157.638, -1.70279, 0.44 ) }
    dend_31 { pt3dadd( 66.8956, -158.077, -1.69907, 0.44 ) }
    dend_31 { pt3dadd( 67.2131, -158.453, -1.69498, 0.37 ) }
    dend_31 { pt3dadd( 67.5929, -158.849, -1.68953, 0.29 ) }
    dend_31 { pt3dadd( 67.9828, -159.208, -1.68808, 0.52 ) }
    dend_31 { pt3dadd( 68.253, -159.441, -1.68973, 0.74 ) }
    dend_31 { pt3dadd( 68.6626, -159.8, -1.69685, 0.74 ) }
    dend_31 { pt3dadd( 69.1104, -160.203, -1.70751, 0.44 ) }
    dend_31 { pt3dadd( 69.3836, -160.449, -1.71513, 0.44 ) }
    dend_31 { pt3dadd( 69.8843, -160.892, -1.72945, 0.29 ) }
    dend_31 { pt3dadd( 70.2592, -161.231, -1.74585, 0.29 ) }
    dend_31 { pt3dadd( 70.4799, -161.436, -1.75781, 0.66 ) }
    dend_31 { pt3dadd( 70.7343, -161.688, -1.77074, 0.81 ) }
    dend_31 { pt3dadd( 70.9049, -161.854, -1.77764, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_31 { pt3dadd( 71.4887, -162.375, -1.79144, 0.29 ) }
    dend_31 { pt3dadd( 71.916, -162.704, -1.79366, 0.29 ) }
    dend_31 { pt3dadd( 72.2545, -162.938, -1.79321, 0.44 ) }
    dend_31 { pt3dadd( 72.7954, -163.29, -1.78976, 0.29 ) }
    dend_31 { pt3dadd( 73.2403, -163.563, -1.77819, 0.37 ) }
    dend_31 { pt3dadd( 73.9382, -163.959, -1.7557, 0.37 ) }
    dend_31 { pt3dadd( 74.5206, -164.262, -1.73251, 0.37 ) }
    dend_31 { pt3dadd( 74.863, -164.42, -1.71641, 0.59 ) }
    dend_31 { pt3dadd( 75.1037, -164.515, -1.7066, 0.59 ) }
    dend_31 { pt3dadd( 75.7574, -164.741, -1.67543, 0.29 ) }
    dend_31 { pt3dadd( 76.3996, -164.948, -1.63677, 1.25 ) }
    dend_31 { pt3dadd( 76.7177, -165.045, -1.6149, 1.55 ) }
    dend_31 { pt3dadd( 77.1762, -165.176, -1.57741, 1.55 ) }
    dend_31 { pt3dadd( 78.2621, -165.477, -1.47156, 0.29 ) }
    dend_31 { pt3dadd( 78.9519, -165.685, -1.39816, 0.52 ) }
    dend_31 { pt3dadd( 79.4021, -165.826, -1.34794, 0.59 ) }
    dend_31 { pt3dadd( 79.864, -165.989, -1.27541, 0.37 ) }
    dend_31 { pt3dadd( 80.2397, -166.136, -1.20775, 0.22 ) }
    dend_31 { pt3dadd( 80.8435, -166.401, -1.089, 0.22 ) }
    dend_31 { pt3dadd( 81.5455, -166.728, -0.939085, 0.22 ) }
    dend_31 { pt3dadd( 82.0141, -166.954, -0.838254, 0.22 ) }
    dend_31 { pt3dadd( 82.8515, -167.369, -0.649733, 0.59 ) }
    dend_31 { pt3dadd( 83.3538, -167.626, -0.531043, 0.59 ) }
    dend_31 { pt3dadd( 83.7989, -167.864, -0.425977, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 24/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 64.4746, -154.445, -1.46804, 0.59 ) }
    dend_30 { pt3dadd( 64.5852, -155.212, -1.57784, 0.59 ) }
    dend_30 { pt3dadd( 64.7066, -156.185, -1.49454, 0.44 ) }
    dend_30 { pt3dadd( 64.8495, -157.311, -1.34508, 0.29 ) }
    dend_30 { pt3dadd( 65.0348, -158.837, -1.1799, 0.59 ) }
    dend_30 { pt3dadd( 65.1258, -159.603, -1.1126, 0.66 ) }
    dend_30 { pt3dadd( 65.3073, -161.051, -1.00856, 0.44 ) }
    dend_30 { pt3dadd( 65.8196, -164.432, -0.861055, 0.29 ) }
    dend_30 { pt3dadd( 66.0041, -165.489, -0.85399, 0.29 ) }
    dend_30 { pt3dadd( 66.2966, -166.822, -0.895076, 0.59 ) }
    dend_30 { pt3dadd( 66.5321, -167.665, -0.954478, 0.74 ) }
    dend_30 { pt3dadd( 66.7166, -168.246, -1.01537, 0.74 ) }
    dend_30 { pt3dadd( 67.1271, -169.485, -1.18955, 0.44 ) }
    dend_30 { pt3dadd( 67.5253, -170.742, -1.47031, 0.29 ) }
    dend_30 { pt3dadd( 67.805, -171.827, -1.65232, 0.29 ) }
    dend_30 { pt3dadd( 68.0713, -173.033, -1.82898, 0.59 ) }
    dend_30 { pt3dadd( 68.28, -174.067, -1.97976, 0.44 ) }
    dend_30 { pt3dadd( 68.4466, -174.93, -2.09554, 0.44 ) }
    dend_30 { pt3dadd( 68.6136, -175.817, -2.19302, 0.44 ) }
    dend_30 { pt3dadd( 68.8628, -176.934, -2.32131, 0.37 ) }
    dend_30 { pt3dadd( 69.2132, -178.257, -2.47554, 0.37 ) }
    dend_30 { pt3dadd( 69.4431, -178.903, -2.5422, 0.66 ) }
    dend_30 { pt3dadd( 69.7978, -179.56, -2.58425, 0.66 ) }
    dend_30 { pt3dadd( 70.0916, -179.96, -2.59121, 0.52 ) }
    dend_30 { pt3dadd( 70.7101, -180.718, -2.57675, 0.74 ) }
    dend_30 { pt3dadd( 70.9904, -181.05, -2.56095, 0.74 ) }
    dend_30 { pt3dadd( 71.6898, -181.951, -2.50688, 0.29 ) }
    dend_30 { pt3dadd( 72.3755, -182.906, -2.46011, 0.29 ) }
    dend_30 { pt3dadd( 72.8953, -183.636, -2.42756, 0.29 ) }
    dend_30 { pt3dadd( 73.67, -184.729, -2.38324, 0.22 ) }
    dend_30 { pt3dadd( 74.2202, -185.505, -2.35177, 0.22 ) }
    dend_30 { pt3dadd( 74.9949, -186.593, -2.30698, 0.44 ) }
    dend_30 { pt3dadd( 75.5982, -187.437, -2.27179, 0.59 ) }
    dend_30 { pt3dadd( 75.9959, -188.063, -2.25549, 0.59 ) }
    dend_30 { pt3dadd( 81.5703, -199.824, -4.08882, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 59/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -39.5471, -93.5744, -21.2727, 0.88 ) }
    dend_24 { pt3dadd( -39.8947, -93.7663, -21.2796, 0.88 ) }
    dend_24 { pt3dadd( -40.8445, -94.3368, -21.3001, 0.74 ) }
    dend_24 { pt3dadd( -41.7651, -94.9092, -21.3163, 0.88 ) }
    dend_24 { pt3dadd( -42.5136, -95.3871, -21.3704, 0.52 ) }
    dend_24 { pt3dadd( -43.494, -96.0062, -21.4103, 0.66 ) }
    dend_24 { pt3dadd( -44.4082, -96.5678, -21.4305, 0.74 ) }
    dend_24 { pt3dadd( -45.3118, -97.0873, -21.439, 0.88 ) }
    dend_24 { pt3dadd( -46.1437, -97.5211, -21.4363, 1.03 ) }
    dend_24 { pt3dadd( -47.3703, -98.1133, -21.4031, 1.33 ) }
    dend_24 { pt3dadd( -48.5549, -98.6502, -21.3558, 1.4 ) }
    dend_24 { pt3dadd( -49.6844, -99.1172, -21.3069, 0.66 ) }
    dend_24 { pt3dadd( -50.4136, -99.4042, -21.2622, 0.66 ) }
    dend_24 { pt3dadd( -51.1312, -99.7151, -21.1911, 0.59 ) }
    dend_24 { pt3dadd( -51.9537, -100.156, -21.0815, 0.37 ) }
    dend_24 { pt3dadd( -52.4839, -100.506, -20.9977, 0.88 ) }
    dend_24 { pt3dadd( -53.2201, -101.093, -20.929, 0.96 ) }
    dend_24 { pt3dadd( -53.7237, -101.551, -20.875, 0.96 ) }
    dend_24 { pt3dadd( -54.4489, -102.273, -20.7755, 0.66 ) }
    dend_24 { pt3dadd( -54.9883, -102.837, -20.6995, 0.66 ) }
    dend_24 { pt3dadd( -55.7369, -103.612, -20.6144, 0.66 ) }
    dend_24 { pt3dadd( -56.3681, -104.266, -20.5471, 0.74 ) }
    dend_24 { pt3dadd( -56.7785, -104.694, -20.5023, 0.96 ) }
    dend_24 { pt3dadd( -57.5094, -105.456, -20.4325, 0.74 ) }
    dend_24 { pt3dadd( -58.1511, -106.174, -20.3697, 0.74 ) }
    dend_24 { pt3dadd( -58.8837, -107.122, -20.2673, 0.96 ) }
    dend_24 { pt3dadd( -59.3486, -107.833, -20.1773, 1.03 ) }
    dend_24 { pt3dadd( -59.7712, -108.517, -20.0711, 0.81 ) }
    dend_24 { pt3dadd( -60.2358, -109.233, -19.9301, 0.44 ) }
    dend_24 { pt3dadd( -60.9775, -110.339, -19.6593, 0.44 ) }
    dend_24 { pt3dadd( -61.4994, -111.126, -19.411, 0.44 ) }
    dend_24 { pt3dadd( -61.9892, -111.89, -19.1279, 0.44 ) }
    dend_24 { pt3dadd( -62.7491, -113.158, -18.6311, 0.44 ) }
    dend_24 { pt3dadd( -63.3876, -114.352, -18.1732, 0.81 ) }
    dend_24 { pt3dadd( -63.6563, -114.923, -17.9604, 0.81 ) }
    dend_24 { pt3dadd( -63.9673, -115.679, -17.7161, 0.88 ) }
    dend_24 { pt3dadd( -64.1214, -116.097, -17.6056, 0.66 ) }
    dend_24 { pt3dadd( -64.4441, -117.069, -17.4155, 0.37 ) }
    dend_24 { pt3dadd( -64.7485, -117.985, -17.2653, 0.29 ) }
    dend_24 { pt3dadd( -65.0562, -118.628, -17.164, 0.44 ) }
    dend_24 { pt3dadd( -65.6848, -119.357, -17.003, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_24 { pt3dadd( -66.241, -119.786, -16.8692, 0.29 ) }
    dend_24 { pt3dadd( -66.8929, -120.189, -16.689, 0.37 ) }
    dend_24 { pt3dadd( -67.9582, -120.716, -16.3466, 0.37 ) }
    dend_24 { pt3dadd( -68.7216, -121.087, -16.0466, 0.37 ) }
    dend_24 { pt3dadd( -69.6003, -121.558, -15.6622, 0.81 ) }
    dend_24 { pt3dadd( -70.1733, -121.902, -15.4054, 1.03 ) }
    dend_24 { pt3dadd( -70.6674, -122.304, -15.1471, 1.03 ) }
    dend_24 { pt3dadd( -71.0366, -122.699, -14.9224, 0.96 ) }
    dend_24 { pt3dadd( -71.8388, -123.806, -14.3605, 0.52 ) }
    dend_24 { pt3dadd( -72.2265, -124.431, -14.0418, 0.52 ) }
    dend_24 { pt3dadd( -72.7108, -125.266, -13.6066, 1.77 ) }
    dend_24 { pt3dadd( -73.4734, -126.59, -12.9365, 0.66 ) }
    dend_24 { pt3dadd( -73.914, -127.271, -12.6135, 0.66 ) }
    dend_24 { pt3dadd( -74.5465, -128.133, -12.198, 0.59 ) }
    dend_24 { pt3dadd( -75.0978, -128.821, -11.865, 0.74 ) }
    dend_24 { pt3dadd( -75.6002, -129.43, -11.5467, 0.74 ) }
    dend_24 { pt3dadd( -76.0803, -129.978, -11.2549, 0.74 ) }
    dend_24 { pt3dadd( -76.9872, -130.887, -10.7939, 0.37 ) }
    dend_24 { pt3dadd( -78.16, -132.048, -10.2429, 0.37 ) }
    dend_24 { pt3dadd( -78.7419, -132.645, -9.9832, 0.44 ) }
    dend_24 { pt3dadd( -79.319, -133.316, -9.70668, 0.44 ) }
    dend_24 { pt3dadd( -79.9483, -134.115, -9.39687, 0.44 ) }
    dend_24 { pt3dadd( -80.3864, -134.691, -9.18863, 0.66 ) }
    dend_24 { pt3dadd( -80.74, -135.185, -9.03617, 0.74 ) }
    dend_24 { pt3dadd( -81.0976, -135.704, -8.9208, 0.74 ) }
    dend_24 { pt3dadd( -81.8253, -136.758, -8.71437, 0.81 ) }
    dend_24 { pt3dadd( -82.5748, -137.861, -8.53614, 0.44 ) }
    dend_24 { pt3dadd( -83.3043, -138.978, -8.37242, 0.44 ) }
    dend_24 { pt3dadd( -83.9499, -140.034, -8.24335, 0.37 ) }
    dend_24 { pt3dadd( -84.6174, -141.188, -8.09742, 0.37 ) }
    dend_24 { pt3dadd( -85.0108, -141.898, -8.01448, 1.18 ) }
    dend_24 { pt3dadd( -85.3392, -142.503, -7.96231, 1.62 ) }
    dend_24 { pt3dadd( -85.836, -143.46, -7.86661, 1.84 ) }
    dend_24 { pt3dadd( -86.3111, -144.375, -7.75446, 1.03 ) }
    dend_24 { pt3dadd( -86.9101, -145.508, -7.60422, 0.74 ) }
    dend_24 { pt3dadd( -87.166, -146.026, -7.53145, 0.74 ) }
    dend_24 { pt3dadd( -87.6308, -147.098, -7.38097, 0.44 ) }
    dend_24 { pt3dadd( -88.0905, -148.299, -7.2104, 0.59 ) }
    dend_24 { pt3dadd( -88.3618, -149.11, -7.09961, 0.59 ) }
    dend_24 { pt3dadd( -88.6748, -150.121, -6.97624, 0.37 ) }
    dend_24 { pt3dadd( -89.042, -151.358, -6.84749, 0.37 ) }
    dend_24 { pt3dadd( -89.3976, -152.507, -6.72544, 0.37 ) }
    dend_24 { pt3dadd( -89.6579, -153.295, -6.65253, 0.81 ) }
    dend_24 { pt3dadd( -89.933, -153.978, -6.6083, 0.96 ) }
    dend_24 { pt3dadd( -90.321, -154.762, -6.58377, 1.18 ) }
    dend_24 { pt3dadd( -91.0313, -155.974, -6.55515, 0.44 ) }
    dend_24 { pt3dadd( -91.6268, -156.881, -6.5167, 0.44 ) }
    dend_24 { pt3dadd( -92.4556, -158.057, -6.38014, 0.44 ) }
    dend_24 { pt3dadd( -93.1186, -158.936, -6.2214, 0.44 ) }
    dend_24 { pt3dadd( -93.8622, -159.886, -6.01022, 0.59 ) }
    dend_24 { pt3dadd( -94.3811, -160.551, -5.8257, 0.74 ) }
    dend_24 { pt3dadd( -95.0395, -161.403, -5.5571, 0.96 ) }
    dend_24 { pt3dadd( -95.9918, -162.603, -5.14162, 0.59 ) }
    dend_24 { pt3dadd( -96.5709, -163.33, -4.88597, 0.44 ) }
    dend_24 { pt3dadd( -97.1962, -164.165, -4.59662, 0.37 ) }
    dend_24 { pt3dadd( -97.6696, -164.854, -4.36283, 0.52 ) }
    dend_24 { pt3dadd( -98.0811, -165.509, -4.18099, 0.52 ) }
    dend_24 { pt3dadd( -98.8513, -166.815, -3.87713, 0.37 ) }
    dend_24 { pt3dadd( -99.3782, -167.746, -3.67796, 0.59 ) }
    dend_24 { pt3dadd( -99.7547, -168.412, -3.5005, 0.74 ) }
    dend_24 { pt3dadd( -100.273, -169.285, -3.24293, 0.96 ) }
    dend_24 { pt3dadd( -100.567, -169.791, -3.096, 0.88 ) }
    dend_24 { pt3dadd( -100.896, -170.391, -2.92013, 0.81 ) }
    dend_24 { pt3dadd( -101.405, -171.282, -2.62943, 0.88 ) }
    dend_24 { pt3dadd( -102.091, -172.352, -2.27981, 0.37 ) }
    dend_24 { pt3dadd( -102.784, -173.358, -1.96041, 0.37 ) }
    dend_24 { pt3dadd( -103.432, -174.249, -1.6898, 0.37 ) }
    dend_24 { pt3dadd( -104.034, -175.045, -1.44316, 0.66 ) }
    dend_24 { pt3dadd( -104.89, -176.119, -1.10487, 0.52 ) }
    dend_24 { pt3dadd( -105.51, -176.812, -0.879194, 0.37 ) }
    dend_24 { pt3dadd( -106.204, -177.459, -0.672406, 0.59 ) }
    dend_24 { pt3dadd( -106.912, -178.014, -0.452618, 0.59 ) }
    dend_24 { pt3dadd( -107.841, -178.641, -0.126777, 0.29 ) }
    dend_24 { pt3dadd( -108.42, -179.024, 0.118793, 0.29 ) }
    dend_24 { pt3dadd( -109.022, -179.458, 0.400248, 0.29 ) }
    dend_24 { pt3dadd( -110.01, -180.235, 0.912757, 0.37 ) }
    dend_24 { pt3dadd( -111.179, -181.228, 1.54417, 0.52 ) }
    dend_24 { pt3dadd( -112.198, -182.168, 2.11925, 0.74 ) }
    dend_24 { pt3dadd( -113.164, -183.117, 2.66284, 0.59 ) }
    dend_24 { pt3dadd( -113.817, -183.786, 3.00814, 0.44 ) }
    dend_24 { pt3dadd( -114.228, -184.214, 3.1984, 0.44 ) }
    dend_24 { pt3dadd( -114.797, -184.832, 3.42399, 0.37 ) }
    dend_24 { pt3dadd( -115.401, -185.556, 3.59539, 0.52 ) }
    dend_24 { pt3dadd( -116.008, -186.37, 3.74651, 0.74 ) }
    dend_24 { pt3dadd( -116.723, -187.416, 3.93881, 0.44 ) }
    dend_24 { pt3dadd( -117.166, -188.187, 4.10447, 0.37 ) }
    dend_24 { pt3dadd( -117.523, -188.994, 4.32029, 0.37 ) }
    dend_24 { pt3dadd( -117.889, -190.079, 4.63439, 0.59 ) }
    dend_24 { pt3dadd( -118.041, -190.715, 4.8171, 0.59 ) }
    dend_24 { pt3dadd( -118.158, -191.605, 5.07382, 0.59 ) }
    dend_24 { pt3dadd( -118.203, -192.63, 5.38656, 0.66 ) }
    dend_24 { pt3dadd( -118.21, -194.069, 5.81927, 0.66 ) }
    dend_24 { pt3dadd( -118.209, -195.21, 6.13028, 0.37 ) }
    dend_24 { pt3dadd( -118.197, -195.931, 6.30272, 0.37 ) }
    dend_24 { pt3dadd( -118.127, -196.824, 6.49058, 0.37 ) }
    dend_24 { pt3dadd( -118.028, -197.442, 6.61968, 0.37 ) }
    dend_24 { pt3dadd( -117.79, -198.601, 6.84875, 0.59 ) }
    dend_24 { pt3dadd( -117.644, -199.164, 6.93596, 0.74 ) }
    dend_24 { pt3dadd( -117.421, -199.932, 7.06654, 0.74 ) }
    dend_24 { pt3dadd( -117.139, -201.124, 7.27596, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_24 { pt3dadd( -117.039, -201.747, 7.37898, 0.44 ) }
    dend_24 { pt3dadd( -124.37, -209.797, 7.34552, 0.44 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -39.5471, -93.5744, -21.2727, 0.81 ) }
    dend_23 { pt3dadd( -41.6291, -95.8109, -23.2799, 0.81 ) }
    dend_23 { pt3dadd( -42.4472, -96.5667, -24.0754, 0.74 ) }
    dend_23 { pt3dadd( -42.9345, -96.9289, -24.5559, 0.81 ) }
    dend_23 { pt3dadd( -43.5257, -97.2775, -25.1539, 0.59 ) }
    dend_23 { pt3dadd( -44.3538, -97.6848, -25.948, 0.44 ) }
    dend_23 { pt3dadd( -44.68, -97.8226, -26.2363, 0.44 ) }
    dend_23 { pt3dadd( -45.9446, -98.0806, -26.957, 0.52 ) }
    dend_23 { pt3dadd( -46.5804, -98.1078, -27.3649, 0.74 ) }
    dend_23 { pt3dadd( -47.2948, -98.1271, -27.848, 0.59 ) }
    dend_23 { pt3dadd( -47.9826, -98.1611, -28.3061, 0.59 ) }
    dend_23 { pt3dadd( -48.5447, -98.2251, -28.663, 1.03 ) }
    dend_23 { pt3dadd( -49.1844, -98.3559, -28.9927, 1.18 ) }
    dend_23 { pt3dadd( -49.8438, -98.5347, -29.2439, 1.18 ) }
    dend_23 { pt3dadd( -50.6883, -98.7758, -29.546, 0.52 ) }
    dend_23 { pt3dadd( -51.3503, -98.9487, -29.7956, 0.37 ) }
    dend_23 { pt3dadd( -51.882, -99.0661, -30.0168, 0.29 ) }
    dend_23 { pt3dadd( -52.4214, -99.1705, -30.2629, 0.29 ) }
    dend_23 { pt3dadd( -53.005, -99.2658, -30.5366, 0.88 ) }
    dend_23 { pt3dadd( -53.73, -99.3437, -30.8785, 1.11 ) }
    dend_23 { pt3dadd( -54.3459, -99.347, -31.234, 1.4 ) }
    dend_23 { pt3dadd( -54.8202, -99.3646, -31.5853, 1.55 ) }
    dend_23 { pt3dadd( -55.1851, -99.4112, -31.9318, 1.55 ) }
    dend_23 { pt3dadd( -55.797, -99.5467, -32.5872, 0.59 ) }
    dend_23 { pt3dadd( -56.1393, -99.6495, -32.9631, 0.59 ) }
    dend_23 { pt3dadd( -57.0605, -99.9908, -33.9265, 0.44 ) }
    dend_23 { pt3dadd( -58.1094, -100.421, -35.0155, 0.29 ) }
    dend_23 { pt3dadd( -59.0353, -100.847, -36.0599, 0.52 ) }
    dend_23 { pt3dadd( -59.4111, -101.043, -36.5907, 0.66 ) }
    dend_23 { pt3dadd( -59.822, -101.282, -37.2485, 0.66 ) }
    dend_23 { pt3dadd( -60.0939, -101.459, -37.7026, 0.44 ) }
    dend_23 { pt3dadd( -60.7532, -101.887, -38.8237, 0.37 ) }
    dend_23 { pt3dadd( -62.1857, -102.734, -41.2988, 2.8 ) }
    dend_23 { pt3dadd( -63.9305, -103.741, -44.574, 0.74 ) }
    dend_23 { pt3dadd( -64.6702, -104.153, -46.1004, 0.74 ) }
    dend_23 { pt3dadd( -65.2483, -104.443, -47.4428, 0.52 ) }
    dend_23 { pt3dadd( -65.8823, -104.697, -49.0474, 1.11 ) }
    dend_23 { pt3dadd( -66.1402, -104.76, -49.7265, 1.25 ) }
    dend_23 { pt3dadd( -67.1969, -104.706, -52.6693, 0.37 ) }
    dend_23 { pt3dadd( -67.8619, -104.453, -54.5601, 1.03 ) }
    dend_23 { pt3dadd( -68.5216, -103.984, -56.5744, 1.25 ) }
    dend_23 { pt3dadd( -68.8957, -103.605, -57.7996, 0.37 ) }
    dend_23 { pt3dadd( -69.1704, -103.277, -58.7065, 1.84 ) }
    dend_23 { pt3dadd( -69.6949, -102.619, -60.3115, 0.52 ) }
    dend_23 { pt3dadd( -69.8399, -102.427, -60.6799, 0.37 ) }
    dend_23 { pt3dadd( -70.2106, -101.98, -61.4825, 0.74 ) }
    dend_23 { pt3dadd( -70.8758, -101.338, -62.7033, 0.44 ) }
    dend_23 { pt3dadd( -71.4889, -100.896, -63.6714, 0.44 ) }
    dend_23 { pt3dadd( -71.9542, -100.648, -64.2938, 0.44 ) }
    dend_23 { pt3dadd( -72.4562, -100.448, -64.8544, 1.11 ) }
    dend_23 { pt3dadd( -72.917, -100.287, -65.3223, 1.55 ) }
    dend_23 { pt3dadd( -73.4432, -100.125, -65.804, 1.69 ) }
    dend_23 { pt3dadd( -75.0272, -99.7066, -67.0653, 0.29 ) }
    dend_23 { pt3dadd( -75.7964, -99.5328, -67.6415, 0.44 ) }
    dend_23 { pt3dadd( -76.3835, -99.4124, -68.0924, 0.44 ) }
    dend_23 { pt3dadd( -76.8768, -99.3161, -68.4834, 1.33 ) }
    dend_23 { pt3dadd( -77.3588, -99.2171, -68.8548, 1.55 ) }
    dend_23 { pt3dadd( -78.4427, -98.9872, -69.6872, 0.29 ) }
    dend_23 { pt3dadd( -78.9423, -98.8837, -70.0655, 0.52 ) }
    dend_23 { pt3dadd( -79.7753, -98.7311, -70.695, 0.29 ) }
    dend_23 { pt3dadd( -80.2551, -98.6215, -71.0776, 1.03 ) }
    dend_23 { pt3dadd( -80.6684, -98.5117, -71.42, 1.18 ) }
    dend_23 { pt3dadd( -81.0549, -98.3904, -71.7412, 1.18 ) }
    dend_23 { pt3dadd( -81.9987, -98.0569, -72.5637, 0.29 ) }
    dend_23 { pt3dadd( -82.6565, -97.8385, -73.1483, 0.29 ) }
    dend_23 { pt3dadd( -83.7432, -97.51, -74.06, 0.88 ) }
    dend_23 { pt3dadd( -84.2799, -97.3559, -74.51, 0.66 ) }
    dend_23 { pt3dadd( -84.6441, -97.2539, -74.8176, 0.66 ) }
    dend_23 { pt3dadd( -85.0781, -97.1214, -75.1714, 0.44 ) }
    dend_23 { pt3dadd( -85.6412, -96.9482, -75.6325, 0.29 ) }
    dend_23 { pt3dadd( -86.226, -96.7748, -76.0843, 0.74 ) }
    dend_23 { pt3dadd( -86.4803, -96.7077, -76.2699, 0.88 ) }
    dend_23 { pt3dadd( -87.6163, -96.3732, -77.0819, 0.29 ) }
    dend_23 { pt3dadd( -88.3843, -96.1341, -77.6052, 1.47 ) }
    dend_23 { pt3dadd( -89.0046, -95.9314, -78.0044, 1.92 ) }
    dend_23 { pt3dadd( -89.5809, -95.7423, -78.356, 1.92 ) }
    dend_23 { pt3dadd( -90.8793, -95.3257, -79.1091, 0.22 ) }
    dend_23 { pt3dadd( -91.802, -95.0423, -79.5952, 0.22 ) }
    dend_23 { pt3dadd( -92.416, -94.862, -79.8724, 0.59 ) }
    dend_23 { pt3dadd( -92.7493, -94.7685, -80.0043, 0.59 ) }
    dend_23 { pt3dadd( -93.6908, -94.4867, -80.3153, 0.22 ) }
    dend_23 { pt3dadd( -94.3626, -94.2679, -80.4984, 0.81 ) }
    dend_23 { pt3dadd( -94.661, -94.1598, -80.5716, 1.03 ) }
    dend_23 { pt3dadd( -95.0107, -94.0211, -80.6575, 1.03 ) }
    dend_23 { pt3dadd( -95.9651, -93.6015, -80.9129, 0.22 ) }
    dend_23 { pt3dadd( -96.4667, -93.3692, -81.0449, 0.44 ) }
    dend_23 { pt3dadd( -98.1115, -92.5457, -81.4825, 0.22 ) }
    dend_23 { pt3dadd( -98.6318, -92.2741, -81.6315, 0.22 ) }
    dend_23 { pt3dadd( -99.3362, -91.8986, -81.8381, 1.03 ) }
    dend_23 { pt3dadd( -99.8248, -91.6316, -81.9824, 1.25 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 92/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 83.7989, -167.864, -0.425977, 0.22 ) }
    dend_33 { pt3dadd( 85.1784, -168.896, -0.381284, 0.22 ) }
    dend_33 { pt3dadd( 85.7765, -169.343, -0.361906, 0.22 ) }
    dend_33 { pt3dadd( 86.2174, -169.673, -0.347624, 0.44 ) }
    dend_33 { pt3dadd( 86.528, -169.905, -0.337563, 0.44 ) }
    dend_33 { pt3dadd( 96.1135, -176.571, 1.2543, 0.44 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 98/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 83.7989, -167.864, -0.425977, 0.59 ) }
    dend_32 { pt3dadd( 84.8863, -167.551, -0.166711, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_32 { pt3dadd( 85.4816, -167.38, -0.0248079, 0.66 ) }
    dend_32 { pt3dadd( 85.7302, -167.308, 0.0344618, 0.66 ) }
    dend_32 { pt3dadd( 96.6956, -164.566, 3.90685, 0.66 ) }
    dend_32 { pt3dadd( 107.515, -162.076, 8.31449, 0.66 ) }
    dend_32 { pt3dadd( 117.374, -159.741, 14.6451, 0.66 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
    ModelViewParmSubset_2 = new SectionList()
    dend_46 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_47 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_45 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_56 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_51 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_49 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_38 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_11 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_60 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_57 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_42 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_39 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_13 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_9 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_6 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_4 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_62 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_37 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_28 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_26 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_7 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_34 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_29 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_25 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_30 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_24 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_23 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_17 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_18 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_19 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_46 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_27 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_20 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_50 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_21 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_22 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_12 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_53 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_52 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_55 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_31 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_33 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_61 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_32 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_59 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_58 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_44 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_35 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_36 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_41 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_40 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_15 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_59, dend_59, dend_58, dend_58, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_43, dend_41, dend_41, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_32 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_47 nseg = 5
    dend_45 nseg = 17
    dend_10 nseg = 5
    dend_56 nseg = 3
    dend_51 nseg = 5
    dend_49 nseg = 7
    dend_48 nseg = 5
    dend_38 nseg = 7
    dend_11 nseg = 9
    dend_5 nseg = 5
    dend_2 nseg = 7
    dend_60 nseg = 3
    dend_57 nseg = 5
    dend_42 nseg = 3
    dend_39 nseg = 5
    dend_14 nseg = 7
    dend_13 nseg = 9
    dend_9 nseg = 5
    dend_6 nseg = 5
    dend_4 nseg = 3
    dend_3 nseg = 3
    dend_62 nseg = 3
    dend_54 nseg = 3
    dend_37 nseg = 9
    dend_28 nseg = 3
    dend_26 nseg = 11
    dend_7 nseg = 5
    dend_34 nseg = 7
    dend_29 nseg = 3
    dend_25 nseg = 7
    dend_30 nseg = 3
    dend_24 nseg = 7
    dend_23 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_BTC_07c7c10a30_0_0


