// Cell: cNAC187_L5_ChC_b51988187a_0_0
/*
{
  "id" : "cNAC187_L5_ChC_b51988187a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.44259, -9.54825, -1.27888, 2.30647", "-1.2819, -8.63231, -1.15821, 3.63473", "-1.1212, -7.71637, -1.03754, 6.81375", "-0.960502, -6.80044, -0.916865, 9.18535", "-0.799804, -5.8845, -0.796194, 10.2157", "-0.639107, -4.96856, -0.675522, 11.1797", "-0.478409, -4.05262, -0.554851, 12.0566", "-0.317712, -3.13668, -0.43418, 12.6775", "-0.157014, -2.22074, -0.313508, 13.0617", "0.00368301, -1.3048, -0.192837, 13.2009", "0.16438, -0.388856, -0.0721652, 13.2418", "0.325078, 0.527084, 0.0485063, 12.889", "0.485775, 1.44302, 0.169178, 12.4912", "0.646473, 2.35896, 0.289849, 12.2347", "0.80717, 3.2749, 0.410521, 12.0486", "0.967868, 4.19084, 0.531192, 11.9346", "1.12856, 5.10678, 0.651864, 11.8925", "1.28926, 6.02272, 0.772535, 11.1454", "1.44996, 6.93866, 0.893206, 8.66152", "1.61066, 7.8546, 1.01388, 5.25757", "1.77135, 8.77054, 1.13455, 3.12251" ]
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.66144, -7.4365, -8.0337, 1.77", "-3.66144, -7.4365, -8.0337, 1.77", "-3.21323, -8.95988, -8.24326, 1.77", "-2.87187, -10.0939, -8.41019, 1.77", "-2.35013, -11.8714, -8.65655, 1.55", "-2.04369, -13.0501, -8.8522, 1.69", "-1.83392, -13.9659, -9.02269, 1.77", "-1.65014, -14.8569, -9.2289, 1.77", "-1.41683, -16.0513, -9.57553, 1.25", "-1.03864, -17.8835, -10.0428, 0.74", "-1.76562, -17.0852, -10.8434, 0.74", "-2.33253, -16.803, -11.6953, 0.74", "-3.32658, -16.4193, -13.2268, 1.18", "-3.86095, -16.323, -14.1, 1.18", "-4.66248, -16.1293, -15.307, 0.52", "-5.61097, -15.7767, -16.6037, 0.52", "-6.68913, -15.8278, -18.2426, 0.74", "-7.14347, -16.0844, -19.3574, 0.74", "-7.36023, -16.48, -20.3302, 0.74", "-7.71006, -16.9898, -21.7985, 1.11", "-8.02234, -17.256, -22.7383, 1.69", "-8.53343, -17.4392, -23.6872, 1.77", "-9.69775, -17.7916, -25.7842, 1.33", "-10.3175, -18.107, -27.0625, 1.4", "-10.6825, -18.5271, -28.0226, 1.55", "-10.8901, -19.226, -29.028, 1.33", "-10.9127, -20.4308, -30.3042, 0.74", "-10.7185, -21.4173, -31.0457, 1.03", "-10.4347, -22.2456, -31.5145, 1.47", "-10.1337, -22.7899, -31.8512, 1.62", "-9.65679, -23.44, -32.3156, 1.62", "-9.11635, -23.9625, -32.743, 0.52", "-8.47396, -24.4539, -33.2145, 0.52", "-8.31413, -24.7107, -33.6198, 0.52", "-8.34662, -25.2365, -34.6694, 0.66", "-8.55442, -25.7526, -35.7786, 0.74", "-8.89332, -25.9633, -36.5609, 0.44", "-9.47726, -25.9607, -37.3887, 0.44", "-10.338, -25.8523, -38.4412, 0.44", "-10.9499, -25.9161, -39.3776, 0.44", "-11.2901, -26.0419, -40.0417, 0.44", "-11.9226, -26.4617, -41.3322, 0.66", "-12.2315, -27.1136, -42.6361, 1.11", "-12.3913, -27.3525, -43.0889, 0.96", "-12.809, -27.8563, -44.1271, 1.18", "-12.9715, -28.072, -44.5329, 1.69", "-13.2357, -28.4038, -45.1211, 1.69", "-14.2423, -29.5785, -47.0893, 0.88", "-14.8572, -30.1374, -48.1171, 2.14", "-16.2518, -30.8927, -50.0163, 2.28", "-16.4477, -30.9473, -50.2336, 2.28", "-17.579, -31.0545, -51.289, 0.44", "-18.2249, -31.0013, -51.7637, 0.44", "-18.9878, -30.8418, -52.2013, 0.81", "-19.7705, -30.6377, -52.6687, 0.81", "-20.1273, -30.5874, -52.9244, 0.96", "-20.8362, -30.6528, -53.5476, 0.66", "-21.549, -30.9012, -54.2795, 1.99", "-22.0828, -31.1986, -54.897, 2.21", "-22.6041, -31.5905, -55.5419, 2.5", "-24.0384, -32.9359, -57.4537, 0.66", "-24.7819, -33.8137, -58.5827, 0.66", "-25.2412, -34.4961, -59.3584, 0.66", "-25.7141, -35.3077, -60.1885, 1.55", "-25.9338, -35.7069, -60.5561, 2.21", "-26.1457, -36.1239, -60.9069, 2.21", "-26.7302, -37.4497, -61.9618, 0.29", "-27.0428, -38.3048, -62.6951, 0.29", "-27.2473, -38.8953, -63.1915, 1.55", "-27.5021, -39.6078, -63.7773, 1.99", "-27.7365, -40.2455, -64.3141, 2.36", "-28.3956, -41.9801, -65.8187, 0.59", "-28.7232, -42.8692, -66.6421, 1.84", "-28.8521, -43.2819, -67.0709, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-6.50143, -1.72726, 2.1563, 1.92", "-6.50143, -1.72726, 2.1563, 1.92", "-7.03234, -2.69053, 2.11407, 1.92", "-7.93543, -4.60062, 2.02223, 1.92", "-8.86669, -6.34322, 1.92959, 2.14", "-9.58455, -7.52172, 1.85124, 2.36", "-10.6018, -8.94776, 1.74322, 2.28", "-11.7193, -10.2644, 1.61967, 2.36", "-12.9698, -11.4827, 1.45927, 2.36", "-14.9105, -12.8486, 1.23031, 1.77", "-15.9779, -13.298, 1.15009, 1.77", "-17.6517, -13.6644, 1.10548, 1.99", "-19.1432, -13.8148, 1.20017, 1.99", "-19.8812, -13.8422, 1.29129, 1.99", "-20.9812, -13.8969, 1.48755, 1.77", "-22.6839, -14.2011, 1.92805, 1.47", "-23.9129, -14.6511, 2.27577, 1.47", "-25.4619, -15.5678, 2.66718, 1.33", "-26.166, -16.1285, 2.7983, 1.99", "-27.3629, -17.2749, 2.92967, 1.99", "-28.7414, -18.7647, 2.94727, 1.77", "-30.2663, -20.5848, 2.81309, 1.92", "-31.6764, -22.3148, 2.5254, 1.69", "-32.5434, -23.3192, 2.24656, 1.69", "-33.6298, -24.4503, 1.83581, 1.84", "-34.6208, -25.3964, 1.45735, 1.84", "-35.9035, -26.5779, 0.987433, 1.69", "-37.3133, -27.8942, 0.547607, 1.55", "-38.737, -29.3188, 0.21536, 1.4", "-39.9034, -30.4914, -0.0214145, 1.25", "-41.1239, -31.774, -0.241272, 1.33", "-42.2797, -33.1074, -0.369163, 1.47", "-43.3617, -34.522, -0.317295, 1.62", "-44.1268, -35.8452, -0.0478092, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.448551, -8.92275, -4.9037, 3.61", "0.448551, -8.92275, -4.9037, 3.61", "0.709916, -10.8169, -4.81754, 2.95", "1.08452, -13.7565, -4.68791, 2.8", "1.30052, -15.7265, -4.56439, 2.8", "1.48865, -17.9293, -4.40874, 3.02", "1.57866, -19.3913, -4.30454, 3.02", "1.61632, -20.8254, -4.19686, 3.02", "1.58002, -22.9862, -4.03171, 3.02", "1.43279, -25.2722, -3.8501, 2.36", "1.03769, -29.2708, -3.65162, 2.36", "0.752471, -31.5108, -3.63225, 2.43", "0.424349, -33.6789, -3.68171, 2.43", "-0.00453199, -36.2202, -3.82208, 2.43", "-0.671367, -39.729, -4.10856, 2.28", "-1.38992, -43.3291, -4.48333, 2.14", "-2.39311, -48.0984, -5.06968, 2.06", "-3.08935, -51.4084, -5.52767, 2.43", "-3.52913, -53.5163, -5.86008, 2.58", "-4.00069, -55.7376, -6.25773, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.381405, 7.80525, -7.5337, 1.62", "-0.514738, 9.03869, -7.62519, 1.62", "-0.725581, 10.8534, -7.67838, 1.92", "-1.04355, 13.2774, -7.77038, 1.33", "-1.44457, 15.8866, -7.90589, 1.69", "-1.77348, 17.8171, -7.97485, 2.21", "-2.05541, 19.431, -7.96298, 2.21", "-2.39486, 21.2477, -7.88061, 1.99", "-2.71343, 22.7926, -7.75556, 1.77", "-3.09171, 24.5111, -7.57171, 1.99", "-3.50197, 26.3301, -7.36969, 1.99", "-4.20324, 29.5256, -7.07513, 1.11", "-4.63613, 31.5233, -6.94878, 1.11", "-5.10001, 33.5333, -6.89861, 1.25", "-5.54227, 35.221, -6.88999, 1.4", "-6.12118, 37.0656, -6.98999, 0.81", "-6.80297, 38.8128, -7.24561, 0.74", "-7.34477, 39.9553, -7.51774, 0.74", "-8.01264, 41.1946, -7.88584, 0.74", "-8.78879, 42.5444, -8.3539, 0.96", "-9.52053, 43.8149, -8.82663, 0.96", "-10.284, 45.0906, -9.31283, 1.55", "-11.1463, 46.5208, -9.87766, 2.06", "-11.8759, 47.8231, -10.4044, 2.43", "-12.7126, 49.5768, -11.1195, 2.36", "-13.66, 51.9657, -12.0686, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.32144, 8.54325, 0.346303, 2.5", "-2.38416, 8.68515, 0.347016, 2.5", "-3.37863, 10.6732, 0.308587, 1.77", "-4.07276, 12.0166, 0.31569, 1.55", "-4.88688, 13.5457, 0.381988, 1.55", "-5.5072, 14.7124, 0.474474, 1.33", "-6.45368, 16.5222, 0.671273, 1.33", "-7.04556, 17.6278, 0.822695, 1.55", "-7.93856, 19.2657, 1.08003, 1.55", "-8.866, 21.0469, 1.36548, 1.62", "-9.60646, 22.6343, 1.60522, 1.4", "-10.2969, 24.3815, 1.83936, 1.4", "-10.6896, 25.4548, 1.98478, 1.4", "-11.3003, 27.1808, 2.20583, 1.4", "-11.88, 28.9051, 2.36013, 1.4", "-12.5319, 31.0363, 2.46474, 1.77", "-13.0807, 32.9484, 2.4843, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.82855, 4.29975, 1.3463, 2.58", "6.87766, 4.34886, 1.35076, 2.58", "7.49661, 4.98356, 1.4154, 2.58", "8.19889, 5.71119, 1.51045, 1.84", "8.71877, 6.23911, 1.59479, 2.06", "9.39001, 6.91883, 1.7209, 2.06", "9.83359, 7.35757, 1.83292, 2.58", "10.3259, 7.84125, 1.98569, 2.58", "10.6513, 8.16627, 2.10913, 2.58", "11.2289, 8.71714, 2.35588, 2.58", "11.6352, 9.07717, 2.53911, 2.43", "12.4864, 9.78766, 2.95613, 2.21", "13.1073, 10.276, 3.27293, 1.99", "13.6056, 10.6449, 3.51179, 1.99", "14.2519, 11.0531, 3.79092, 1.69", "14.7921, 11.2866, 3.99581, 1.69", "15.7487, 11.421, 4.31025, 2.06", "16.3491, 11.3134, 4.47374, 2.06", "17.7677, 10.6797, 4.8533, 1.69", "18.7435, 10.1312, 5.09989, 1.92", "20.2689, 9.06837, 5.45817, 1.92", "21.7215, 7.84522, 5.76787, 2.06", "22.4662, 7.08307, 5.90798, 2.28", "23.0248, 6.38868, 6.0206, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.77135, 8.77054, 1.13455, 0.834557", "4.36343, 23.5449, 1.13455, 0.834557", "6.95552, 38.3192, 1.13455, 0.834557" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-28.8521, -43.2819, -67.0709, 0.96", "-28.5993, -43.9092, -71.1243, 0.96", "-28.5261, -44.088, -71.903, 0.96", "-28.4027, -44.3587, -72.8474, 0.96", "-28.204, -44.7581, -74.0842, 1.55", "-28.0233, -45.118, -75.0455, 0.22", "-27.7875, -45.5694, -76.032, 0.22", "-27.6017, -45.9123, -76.4855, 1.11", "-27.4208, -46.2464, -76.872, 1.4", "-27.1361, -46.6949, -77.3524, 1.4", "-26.4523, -47.6496, -78.3191, 0.22", "-25.6725, -48.5912, -79.292, 0.22", "-25.3948, -48.889, -79.6107, 0.74", "-25.2378, -49.0459, -79.7757, 0.74", "-24.3721, -49.8792, -80.6229, 0.15", "-24.2309, -50.0073, -80.7473, 0.37", "-23.397, -50.6757, -81.4086, 0.22", "-22.914, -51.028, -81.8004, 0.22", "-22.5288, -51.3098, -82.1108, 0.74", "-22.1527, -51.6122, -82.4091, 0.88", "-22.042, -51.7287, -82.4989, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-28.8521, -43.2819, -67.0709, 2.87", "-29.5068, -43.6936, -67.0952, 2.87", "-31.5433, -45.1748, -67.2959, 0.22", "-33.3274, -46.7813, -67.5697, 0.22", "-34.1757, -47.6153, -67.7156, 1.69", "-34.4391, -47.8905, -67.7638, 2.21", "-34.8637, -48.3527, -67.8443, 2.21", "-36.3749, -50.2342, -68.1544, 0.22", "-37.643, -52.1514, -68.5099, 0.22", "-38.0269, -52.7871, -68.6367, 1.25", "-38.3394, -53.311, -68.7419, 1.25", "-38.7575, -53.9991, -68.8884, 1.25", "-39.6289, -55.3285, -69.1749, 0.15", "-40.1287, -56.0577, -69.3275, 0.15", "-40.5362, -56.5832, -69.4466, 0.96", "-41.0143, -57.1331, -69.5941, 1.18", "-41.2409, -57.3603, -69.6617, 1.18", "-42.7606, -58.6641, -70.1712, 0.22", "-43.1859, -58.9426, -70.3176, 0.52", "-43.5797, -59.1714, -70.4515, 0.52", "-44.6005, -59.726, -70.7842, 0.22", "-45.2374, -60.0625, -70.9969, 1.25", "-46.1611, -60.5942, -71.3014, 1.4", "-47.9078, -61.7902, -71.9675, 0.22", "-49.0595, -62.7709, -72.4562, 0.22", "-49.4772, -63.2172, -72.6585, 0.74", "-49.9804, -63.9135, -72.9411, 0.88", "-50.6119, -65.2283, -73.5384, 0.22", "-50.9836, -66.8361, -74.2253, 0.22", "-51.0447, -67.8494, -74.6501, 1.99", "-51.0192, -68.4589, -74.8884, 2.36", "-50.9708, -69.0517, -75.1244, 2.36", "-50.5581, -72.3436, -76.4587, 0.15", "-50.218, -74.3612, -77.3386, 0.15", "-50.1119, -74.8846, -77.5496, 0.44", "-49.873, -75.8873, -77.9356, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-44.1268, -35.8452, -0.0478092, 0.96", "-45.2325, -36.2586, -0.441773, 0.96", "-46.2855, -36.6897, -0.825239, 1.25", "-47.8028, -37.3104, -1.37115, 1.25", "-50.4448, -38.306, -2.24648, 1.18", "-52.2417, -38.9039, -2.78056, 1.11", "-53.6254, -39.3312, -3.17657, 0.88", "-55.4485, -39.9045, -3.72645, 0.96", "-56.4923, -40.2322, -4.0504, 0.96", "-58.0248, -40.7248, -4.53581, 0.96", "-59.5332, -41.2193, -4.92986, 0.96", "-60.8139, -41.6286, -5.19039, 1.18", "-62.3871, -42.1094, -5.44136, 1.03", "-63.1638, -42.3248, -5.48544, 1.03", "-64.7836, -42.7191, -5.39595, 1.18", "-65.7637, -42.9165, -5.19358, 1.18", "-67.9595, -43.2313, -4.29589, 0.96", "-68.7629, -43.2975, -3.88417, 1.11", "-70.3249, -43.394, -2.99783, 1.11", "-71.5764, -43.506, -2.27295, 1.11", "-73.0485, -43.6986, -1.42221, 1.11", "-75.0144, -44.131, -0.314553, 1.55", "-76.4229, -44.6078, 0.414529, 1.03", "-78.1083, -45.4009, 1.25381, 0.88", "-79.5466, -46.297, 1.91301, 0.74", "-80.3706, -46.9588, 2.25828, 0.74", "-81.4356, -48.0329, 2.61013, 0.74", "-82.4942, -49.3288, 2.84595, 0.66", "-83.4416, -50.6669, 3.00094, 0.88", "-84.0606, -51.6422, 3.05573, 1.03", "-84.7055, -52.7896, 3.08137, 1.03", "-85.5302, -54.2675, 3.09092, 0.88", "-86.5605, -56.0032, 3.08167, 0.88", "-87.1456, -56.8726, 3.06534, 0.88", "-88.0165, -57.9403, 3.05072, 0.88", "-89.7182, -59.6499, 3.04482, 0.88", "-90.7166, -60.4238, 3.05145, 0.88", "-92.1509, -61.2357, 3.07481, 0.88", "-93.1192, -61.6079, 3.09193, 0.96", "-94.2618, -61.9306, 3.08305, 0.96", "-95.3011, -62.1396, 3.08131, 0.96", "-96.4651, -62.3359, 3.09136, 0.52", "-97.2583, -62.6114, 3.11022, 0.52", "-97.8514, -63.1083, 3.17122, 0.52", "-98.4201, -64.0433, 3.36107, 0.81", "-98.8504, -65.0349, 3.6127, 0.96", "-99.1543, -66.1816, 3.9156, 0.96", "-99.4737, -68.237, 4.46211, 0.81", "-99.5701, -69.2434, 4.73828, 0.81", "-99.6389, -70.5196, 5.13954, 1.11", "-99.7206, -71.2438, 5.42257, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-44.1268, -35.8452, -0.0478092, 1.33", "-45.0994, -36.0728, 0.737865, 1.33", "-46.0392, -36.3294, 1.39413, 1.18", "-47.8034, -36.7742, 2.56567, 0.88", "-48.6555, -36.9519, 3.081, 0.74", "-49.9051, -37.1527, 3.746, 0.74", "-51.1754, -37.2792, 4.41259, 0.74", "-52.1337, -37.35, 4.87821, 0.59", "-53.2602, -37.3712, 5.41356, 0.59", "-54.1471, -37.3293, 5.83641, 0.52", "-55.0424, -37.1794, 6.32849, 0.52", "-56.7307, -36.6719, 7.38383, 0.74", "-57.8019, -36.2486, 8.12726, 0.59", "-58.7897, -35.8439, 8.84078, 0.44", "-59.8558, -35.4683, 9.64177, 0.37", "-60.71, -35.2617, 10.297, 0.66", "-61.4734, -35.2067, 10.7898, 0.66", "-61.9706, -35.2554, 11.0087, 0.66", "-62.6278, -35.3627, 11.2628, 0.44", "-63.3899, -35.542, 11.5236, 0.44", "-64.7486, -35.8707, 11.9552, 0.44", "-66.6246, -36.3692, 12.5588, 0.74", "-67.7365, -36.7062, 12.9137, 0.74", "-69.272, -37.1573, 13.3837, 0.52", "-70.7076, -37.5593, 13.8059, 0.59", "-71.9395, -37.8965, 14.147, 0.44", "-73.6518, -38.4369, 14.6231, 0.37", "-74.8839, -38.9392, 14.9759, 0.37", "-76.2243, -39.6805, 15.3342, 0.29", "-76.8602, -40.1692, 15.4925, 0.29", "-77.6101, -40.9131, 15.7425, 0.29", "-78.2507, -41.6219, 16.0093, 0.37", "-78.9762, -42.4506, 16.3802, 0.37", "-79.7131, -43.2486, 16.8176, 0.37", "-80.5064, -44.1871, 17.3571, 0.66", "-81.298, -45.0977, 17.9194, 0.81", "-81.9094, -45.7234, 18.3546, 0.81", "-82.8051, -46.4645, 18.9464, 0.22", "-83.9077, -47.2162, 19.6436, 0.22", "-94.6823, -48.6741, 24.5384, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-4.00069, -55.7376, -6.25773, 1.55", "-3.59739, -56.969, -6.22937, 1.55", "-3.19623, -58.2234, -6.19827, 1.55", "-2.85668, -59.3258, -6.17483, 1.55", "-2.48413, -60.5767, -6.14218, 1.69", "-2.21751, -61.5368, -6.11171, 1.69", "-2.04056, -62.2552, -6.08793, 1.69", "-1.80113, -63.4484, -6.04571, 1.55", "-1.54565, -65.0107, -5.9924, 1.47", "-1.40139, -66.3136, -5.93558, 1.33", "-1.34404, -67.5638, -5.8694, 1.33", "-1.38055, -69.2259, -5.77256, 1.33", "-1.49976, -70.4462, -5.68442, 1.11", "-1.64049, -71.2158, -5.61686, 1.11", "-2.06733, -72.8944, -5.4476, 1.25", "-2.41467, -74.0099, -5.32697, 1.25", "-2.76739, -75.0143, -5.21467, 1.25", "-3.29224, -76.4096, -5.06801, 1.4", "-3.82984, -77.7862, -4.93815, 1.4", "-4.254, -78.9032, -4.85795, 1.55", "-4.52385, -79.7261, -4.83456, 1.55", "-4.84753, -80.9445, -4.84044, 1.33", "-5.16091, -82.4674, -4.90816, 0.96", "-5.25045, -83.0715, -4.96206, 0.81", "-5.32039, -83.7512, -5.02946, 0.81", "-5.42428, -85.3222, -5.17955, 0.96", "-5.45935, -86.4103, -5.26881, 1.33", "-5.47891, -87.6111, -5.34698, 1.69", "-5.49818, -88.3388, -5.37732, 1.84", "-5.53673, -89.1639, -5.38822, 1.99", "-5.62695, -90.1402, -5.36835, 2.06", "-5.71807, -90.975, -5.33043, 2.06", "-5.81021, -91.8244, -5.25938, 1.84", "-5.89666, -92.7309, -5.14427, 1.62", "-5.97946, -93.8201, -4.97092, 1.18", "-6.0239, -94.6923, -4.82148, 0.88", "-6.07107, -95.8843, -4.59869, 0.88", "-6.09641, -96.7045, -4.41736, 1.03", "-6.12409, -97.5483, -4.20612, 1.11", "-6.15782, -98.1491, -4.04761, 1.11", "-6.31445, -99.6479, -3.64861, 1.03", "-6.46269, -100.626, -3.38846, 1.18", "-6.603, -101.424, -3.1885, 1.25", "-6.83333, -102.639, -2.91392, 1.18", "-7.06205, -103.741, -2.69704, 1.03", "-7.31927, -104.841, -2.51236, 0.96", "-7.62979, -106.032, -2.35405, 0.88", "-7.86437, -106.827, -2.28667, 0.88", "-8.27957, -108.024, -2.28361, 1.25", "-8.74561, -109.219, -2.35879, 1.55", "-9.11058, -110.132, -2.45559, 1.62", "-9.38436, -110.863, -2.54915, 1.62", "-9.70559, -111.821, -2.67783, 1.4", "-10.1052, -113.177, -2.84356, 1.11", "-10.4359, -114.575, -2.98795, 1.11", "-10.7151, -116.12, -3.09197, 1.11", "-10.9558, -117.768, -3.1661, 1.11", "-11.1105, -118.973, -3.19718, 1.4", "-11.2534, -120.222, -3.21137, 1.4", "-11.4608, -122.17, -3.20539, 1.25", "-11.6734, -124.165, -3.20508, 1.25", "-11.8244, -125.477, -3.20725, 1.62", "-11.9735, -126.626, -3.22046, 1.77", "-12.1749, -128.164, -3.26188, 1.33", "-12.3508, -129.558, -3.30834, 0.88", "-12.5152, -131.111, -3.37718, 1.25", "-12.5829, -131.88, -3.42194, 1.84", "-12.6357, -132.742, -3.48541, 2.28", "-12.6679, -133.634, -3.56982, 2.43" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-4.00069, -55.7376, -6.25773, 2.14", "-3.88497, -56.331, -6.43439, 2.14", "-3.66968, -57.2705, -6.67355, 2.14", "-3.30152, -58.8768, -7.08252, 1.69", "-2.99304, -60.2228, -7.4252, 1.84", "-2.69335, -61.5304, -7.75811, 1.99", "-2.45092, -62.5882, -8.02742, 2.36", "-2.25426, -63.3646, -8.19502, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-13.66, 51.9657, -12.0686, 1.25", "-13.398, 52.7568, -12.3465, 1.25", "-13.1759, 53.2855, -12.5324, 1.03", "-12.8788, 53.9125, -12.7494, 0.81", "-12.543, 54.6153, -12.9799, 0.81", "-12.2441, 55.3207, -13.1903, 1.11", "-12.0529, 55.8354, -13.3296, 1.11", "-11.8406, 56.441, -13.4583, 0.96", "-11.5819, 57.2559, -13.6004, 0.66", "-11.4217, 57.8216, -13.6909, 0.52", "-11.2304, 58.5665, -13.7976, 0.52", "-11.1061, 59.1218, -13.8705, 0.52", "-10.8423, 60.3088, -14.0451, 1.18", "-10.7048, 60.9156, -14.1416, 1.62", "-10.6006, 61.3501, -14.2171, 1.69", "-10.41, 62.067, -14.3677, 1.33", "-10.2956, 62.4192, -14.4612, 0.74", "-10.0922, 62.9555, -14.6328, 0.59", "-9.75716, 63.7994, -14.9572, 0.66", "-9.58635, 64.2558, -15.1427, 0.44", "-9.47705, 64.5984, -15.2778, 0.44", "-9.30631, 65.2292, -15.5207, 0.37", "-9.15916, 65.7602, -15.721, 0.37", "-9.03371, 66.1455, -15.8595, 0.37", "-8.79119, 66.7475, -16.1, 0.37", "-8.55708, 67.2817, -16.3293, 0.44", "-8.35563, 67.8027, -16.5663, 0.44", "-8.09252, 68.6493, -16.9645, 0.81", "-7.92991, 69.249, -17.249, 1.03", "-7.77791, 69.7898, -17.5157, 1.03", "-7.64324, 70.281, -17.7777, 0.81", "-7.46898, 70.9977, -18.1884, 0.29", "-7.3985, 71.355, -18.3978, 0.29", "-7.27019, 72.2228, -18.8901, 1.77", "-7.23198, 72.5124, -19.0497, 2.36", "-7.17075, 72.914, -19.2561, 2.36", "-7.03276, 73.6781, -19.6304, 2.28", "-6.83176, 74.5945, -20.0522, 0.66", "-6.71644, 75.0954, -20.2842, 0.88", "-6.59846, 75.6168, -20.5279, 0.88", "-6.46246, 76.2027, -20.7879, 0.37", "-6.3684, 76.5986, -20.958, 0.37", "-6.17635, 77.4253, -21.293, 0.37", "-6.03758, 78.05, -21.535, 1.11", "-5.93478, 78.5501, -21.7204, 1.47", "-5.86982, 78.9089, -21.8448, 1.69", "-5.77744, 79.5176, -22.0384, 1.33", "-5.69405, 80.1889, -22.2304, 0.44", "-5.64962, 80.9077, -22.405, 0.29", "-5.63459, 81.4737, -22.5341, 0.52", "-5.63407, 81.8977, -22.6267, 0.52", "-5.65149, 82.61, -22.7941, 0.29", "-5.65955, 83.3424, -22.9724, 0.29", "-5.65268, 84.6307, -23.313, 1.18", "-5.64314, 85.1146, -23.4427, 1.62", "-5.63113, 85.6303, -23.5722, 1.84", "-5.61148, 86.282, -23.725, 1.33", "-5.55568, 88.1421, -24.1448, 0.22", "-5.51216, 89.3332, -24.4036, 0.22", "-5.46956, 90.4104, -24.6215, 0.22", "-5.43407, 91.551, -24.8279, 0.74", "-5.41949, 92.1734, -24.9336, 1.03", "-5.41674, 92.4674, -24.9788, 1.03", "-5.45302, 93.4069, -25.1332, 0.15", "-5.47768, 93.7671, -25.2069, 0.15", "-5.51568, 94.1786, -25.3177, 0.44", "-5.55494, 94.5693, -25.4406, 0.66", "-5.59069, 94.9293, -25.555, 0.66", "-5.66246, 95.9653, -25.8864, 1.55", "-5.69149, 96.7261, -26.1256, 2.58", "-5.69795, 97.3872, -26.3363, 2.58", "-5.64137, 98.8515, -26.7912, 0.29", "-5.53762, 99.8278, -27.0646, 0.29", "-5.30108, 101.226, -27.4057, 0.29", "-5.09384, 102.102, -27.5888, 0.96", "-4.96334, 102.552, -27.666, 0.96", "-4.4551, 104.013, -27.87, 0.22", "-3.84521, 105.569, -28.0357, 0.22", "-3.43221, 106.545, -28.1144, 1.77", "-3.26024, 106.927, -28.1361, 2.36", "-3.04586, 107.393, -28.1593, 2.5", "-2.35095, 108.9, -28.224, 0.15", "-2.0053, 109.658, -28.2609, 0.29", "-1.77966, 110.166, -28.2944, 0.29", "-1.50226, 110.813, -28.368, 0.15", "-1.23847, 111.476, -28.4799, 1.18", "-1.0792, 111.886, -28.5699, 1.55", "-0.906379, 112.34, -28.6867, 1.18", "-0.782625, 112.667, -28.7808, 0.74", "-0.430173, 113.684, -29.073, 0.22", "-0.17467, 114.48, -29.2994, 0.22", "0.240419, 115.875, -29.6599, 0.22", "0.451495, 116.628, -29.8353, 0.81", "0.531248, 116.931, -29.8983, 0.81", "1.00154, 118.831, -30.2283, 0.22", "1.22348, 119.79, -30.3385, 0.22", "1.39736, 120.659, -30.4227, 1.25", "1.42826, 120.891, -30.4408, 1.69", "1.45111, 121.154, -30.4575, 1.69", "1.48231, 121.716, -30.4851, 1.33", "1.48798, 122.208, -30.5106, 0.59", "1.47701, 123.233, -30.5845, 0.22", "1.46601, 124.691, -30.7356, 0.22", "1.45766, 125.587, -30.8387, 1.03", "1.45259, 125.965, -30.8842, 1.03", "1.45887, 126.36, -30.9342, 1.03", "1.49009, 126.943, -31.008, 0.52", "1.61337, 128.249, -31.159, 0.22", "1.71917, 128.875, -31.2405, 0.59", "1.81083, 129.274, -31.2955, 0.59", "2.29521, 131.025, -31.54, 0.22", "2.475, 131.566, -31.6161, 0.66", "2.62859, 131.951, -31.6749, 0.66", "3.0162, 132.842, -31.8255, 0.15", "3.23853, 133.337, -31.9181, 0.81", "3.38946, 133.677, -31.9875, 0.81", "3.60279, 134.178, -32.1007, 0.81", "3.97827, 135.136, -32.3266, 0.22", "4.33865, 136.109, -32.5765, 1.33", "4.48123, 136.517, -32.6873, 1.55", "4.5651, 136.756, -32.7536, 1.55", "4.65333, 137.008, -32.8276, 1.03", "5.06979, 138.155, -33.1866, 0.22", "5.4641, 139.174, -33.5258, 0.22", "5.68692, 139.706, -33.7208, 0.22", "5.94801, 140.336, -33.9529, 1.25", "6.10542, 140.744, -34.1032, 1.77", "6.23499, 141.114, -34.2402, 1.77", "6.33563, 141.426, -34.3611, 1.18", "6.48314, 141.921, -34.5561, 0.66", "6.92199, 143.427, -35.183, 0.22", "7.21283, 144.431, -35.6327, 0.22", "7.41748, 145.115, -35.9398, 1.11", "7.56504, 145.554, -36.1361, 1.4", "7.71285, 145.943, -36.3128, 1.4", "7.90373, 146.391, -36.5355, 0.96", "8.48841, 147.654, -37.2133, 0.22", "9.1487, 148.962, -37.9342, 0.22", "9.67934, 149.963, -38.4848, 1.77", "9.87196, 150.316, -38.6742, 2.65", "10.1835, 150.868, -38.9622, 2.95" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-13.66, 51.9657, -12.0686, 0.66", "-15.5859, 52.9859, -12.1067, 0.66", "-16.3542, 53.3561, -12.1185, 0.66", "-17.2551, 53.7546, -12.1241, 0.66", "-18.2855, 54.1642, -12.1315, 1.11", "-18.9262, 54.3876, -12.1399, 1.33", "-19.8923, 54.7125, -12.1553, 1.33", "-20.9422, 55.0315, -12.1697, 0.96", "-21.6634, 55.2566, -12.1559, 0.88", "-22.5215, 55.5264, -12.1118, 0.88", "-23.5352, 55.8439, -12.009, 0.37", "-24.055, 56.0023, -11.9325, 0.37", "-24.9387, 56.2717, -11.7686, 0.81", "-25.6998, 56.514, -11.6052, 0.88", "-26.4031, 56.7445, -11.4432, 0.81", "-27.1439, 56.9932, -11.2606, 0.29", "-27.6176, 57.1449, -11.1499, 0.29", "-28.4473, 57.3526, -10.9941, 0.74", "-29.0693, 57.4876, -10.9047, 0.74", "-29.4247, 57.5807, -10.8495, 0.74", "-29.8313, 57.722, -10.7563, 0.74", "-30.3259, 57.9193, -10.6121, 0.59", "-30.8038, 58.1048, -10.439, 0.59", "-31.219, 58.2526, -10.2503, 0.37", "-32.342, 58.5839, -9.71293, 0.37", "-33.1346, 58.7627, -9.32481, 0.37", "-33.5594, 58.8323, -9.11595, 0.22", "-34.2776, 58.9106, -8.77186, 0.22", "-34.6687, 58.9274, -8.60593, 0.22", "-35.8285, 58.9481, -8.17507, 1.03", "-36.4077, 58.9708, -7.99701, 1.4", "-36.7547, 59.0039, -7.89791, 1.4", "-37.5978, 59.1393, -7.67255, 0.81", "-38.6796, 59.3622, -7.41938, 0.22", "-39.2652, 59.4914, -7.29397, 0.22", "-40.4501, 59.7695, -7.06915, 1.11", "-41.0571, 59.9195, -6.96951, 1.4", "-41.4893, 60.0276, -6.90717, 1.4", "-42.5008, 60.2777, -6.78217, 0.66", "-43.4535, 60.5008, -6.67526, 0.52", "-44.6096, 60.7365, -6.55945, 0.74", "-45.3615, 60.884, -6.49321, 0.88", "-46.4293, 61.1063, -6.40874, 0.66", "-47.1874, 61.2725, -6.35429, 0.66", "-47.8095, 61.4164, -6.31651, 0.66", "-48.9786, 61.7099, -6.24204, 0.29", "-49.9121, 61.9641, -6.15849, 1.03", "-50.7019, 62.192, -6.06151, 1.25", "-50.9505, 62.2765, -6.01109, 1.25", "-51.5831, 62.5352, -5.83653, 0.81", "-52.3349, 62.8786, -5.57466, 0.29", "-52.8151, 63.1185, -5.3678, 0.52", "-53.1328, 63.2924, -5.21967, 0.66", "-54.289, 63.9555, -4.68428, 0.22", "-54.9451, 64.3389, -4.39984, 0.22", "-55.4864, 64.654, -4.19223, 0.22", "-56.2204, 65.0828, -3.97022, 0.22", "-57.2149, 65.6664, -3.71983, 0.59", "-57.7871, 66.006, -3.60349, 0.81", "-58.3236, 66.3428, -3.54048, 0.81", "-59.1475, 66.9006, -3.48232, 0.52", "-60.2573, 67.7045, -3.44939, 1.03", "-60.9227, 68.2052, -3.45155, 1.18", "-61.4167, 68.5936, -3.46765, 1.25", "-62.5174, 69.496, -3.5291, 0.29", "-63.5132, 70.336, -3.60402, 0.74", "-63.8875, 70.656, -3.63911, 0.96", "-64.2163, 70.9343, -3.67876, 0.96", "-65.315, 71.8309, -3.83007, 0.22", "-65.7525, 72.1682, -3.89222, 0.22", "-66.3533, 72.6003, -3.96954, 0.66", "-66.7644, 72.8827, -4.03097, 0.88", "-67.2529, 73.2025, -4.10273, 0.44", "-67.8901, 73.6102, -4.18981, 0.37", "-68.2744, 73.8513, -4.23317, 0.44", "-68.7856, 74.1841, -4.28988, 0.44", "-69.1534, 74.4267, -4.33099, 0.44", "-69.8607, 74.9034, -4.4024, 0.22", "-70.3207, 75.2246, -4.43484, 0.22", "-70.8634, 75.6371, -4.46179, 0.29", "-71.1795, 75.8953, -4.46575, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-13.0807, 32.9484, 2.4843, 1.47", "-12.6462, 33.8153, 2.52023, 1.47", "-12.2519, 34.7614, 2.55945, 0.81", "-12.0054, 35.4546, 2.58979, 0.81", "-11.7424, 36.4261, 2.63185, 0.81", "-11.4708, 37.6095, 2.68449, 0.81", "-11.2159, 38.9163, 2.74445, 0.81", "-11.046, 40.2222, 2.79898, 1.03", "-10.9354, 41.3975, 2.84853, 1.03", "-10.797, 43.1976, 2.91834, 1.18", "-10.7175, 44.3125, 2.96649, 1.18", "-10.6686, 46.2523, 3.03637, 1.18", "-10.6801, 47.6331, 3.07758, 1.4", "-10.6786, 48.6117, 3.10482, 1.4", "-10.6833, 49.3084, 3.12024, 1.4" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-13.0807, 32.9484, 2.4843, 0.96", "-15.1404, 33.8271, 2.05215, 0.96", "-15.8771, 34.1642, 1.91441, 0.96", "-16.8981, 34.6414, 1.72401, 0.96", "-17.9617, 35.1559, 1.51441, 0.81", "-18.8772, 35.6168, 1.33469, 0.81", "-20.1381, 36.272, 1.09983, 1.03", "-20.9906, 36.7561, 0.940414, 1.03", "-21.7803, 37.2912, 0.788267, 1.03", "-22.7594, 38.0644, 0.593338, 0.81", "-23.475, 38.6573, 0.450826, 0.81", "-24.2588, 39.3319, 0.304266, 0.81", "-25.1802, 40.1787, 0.127798, 0.52", "-26.0247, 41.0444, -0.0295032, 0.52", "-26.4961, 41.5777, -0.101955, 0.52", "-27.1669, 42.4024, -0.188409, 0.52", "-27.9971, 43.4699, -0.287571, 0.52", "-28.4311, 44.0563, -0.332203, 0.52", "-28.8669, 44.6674, -0.36022, 0.52", "-29.3738, 45.4001, -0.373457, 0.66", "-29.8394, 46.1303, -0.37412, 0.88", "-30.2884, 46.9171, -0.369456, 0.88", "-30.7864, 47.8437, -0.368022, 0.59", "-31.2931, 48.7621, -0.375448, 0.88", "-31.6607, 49.4223, -0.388585, 0.88", "-31.9624, 50.0118, -0.409935, 0.96", "-32.2303, 50.5509, -0.440595, 0.96", "-32.475, 51.0206, -0.47585, 0.96", "-32.919, 51.7844, -0.545804, 0.74", "-33.6317, 52.9025, -0.666421, 1.25", "-34.1305, 53.6441, -0.754639, 1.25", "-34.6994, 54.4705, -0.855035, 0.29", "-35.0765, 55.0213, -0.915826, 0.29", "-35.4553, 55.5812, -0.966761, 0.66", "-35.7936, 56.0895, -0.998447, 0.81", "-36.073, 56.5224, -1.01105, 0.81", "-36.5285, 57.2977, -1.005, 0.37", "-36.9595, 58.1581, -1.02966, 0.37", "-37.2122, 58.7209, -1.06898, 1.03", "-37.43, 59.218, -1.11948, 1.25", "-37.7154, 59.8239, -1.19656, 1.25", "-37.9682, 60.3015, -1.2714, 0.81", "-38.5218, 61.2437, -1.43571, 0.59", "-38.856, 61.7791, -1.53315, 0.44", "-39.3181, 62.5374, -1.64661, 0.88", "-39.6684, 63.1246, -1.71247, 0.88", "-40.2573, 64.1591, -1.77388, 0.59", "-40.6329, 64.8512, -1.80017, 0.59", "-41.2059, 65.979, -1.81181, 0.44", "-41.8257, 67.2826, -1.81774, 1.03", "-42.313, 68.3961, -1.804, 1.55", "-42.5807, 69.0913, -1.77899, 1.62", "-42.932, 70.1138, -1.72524, 1.11", "-43.2836, 71.2398, -1.65499, 0.59", "-43.5071, 72.0208, -1.59062, 0.59", "-43.8527, 73.3294, -1.46115, 0.59", "-44.1924, 74.6353, -1.31301, 0.52", "-44.4165, 75.4911, -1.19676, 0.52", "-44.6982, 76.5603, -1.01259, 0.52", "-45.0028, 77.6761, -0.810001, 0.52", "-45.3647, 78.8953, -0.591979, 0.37", "-45.9258, 80.5102, -0.30693, 1.55", "-46.1468, 81.0395, -0.216131, 1.92", "-46.3833, 81.5177, -0.138259, 1.92", "-46.6149, 81.9222, -0.0826475, 1.92", "-47.1282, 82.6803, 0.00409342, 0.88", "-47.8328, 83.6341, 0.090464, 0.44", "-48.3707, 84.3375, 0.143085, 0.44", "-48.9519, 85.0978, 0.183715, 0.44", "-49.76, 86.1812, 0.23376, 0.37", "-50.1904, 86.7713, 0.258474, 0.37", "-51.0752, 88.0392, 0.306937, 0.74", "-51.4257, 88.562, 0.331161, 0.74", "-51.8575, 89.2354, 0.362166, 0.52", "-52.4322, 90.1658, 0.385383, 1.25", "-52.8359, 90.8167, 0.37656, 1.47", "-53.1083, 91.2573, 0.355455, 1.47", "-53.4909, 91.7961, 0.298279, 0.81", "-54.0191, 92.4635, 0.197476, 0.59", "-54.5579, 93.0707, 0.065518, 0.88", "-55.018, 93.5549, -0.0628042, 1.18", "-55.3066, 93.8513, -0.149731, 1.18", "-56.0106, 94.6098, -0.34399, 0.96", "-56.7506, 95.4818, -0.512726, 0.52", "-57.1658, 96.0363, -0.560697, 0.37", "-57.7425, 96.9128, -0.550273, 0.37", "-58.2742, 97.8365, -0.477971, 0.37", "-58.7453, 98.7705, -0.362848, 0.37", "-59.0553, 99.502, -0.242375, 0.81", "-59.4829, 100.684, -0.0309999, 1.84", "-59.652, 101.162, 0.0547562, 1.92", "-59.7836, 101.505, 0.109269, 1.92", "-60.0255, 102.142, 0.189269, 1.62", "-60.3676, 103.039, 0.250483, 0.88", "-60.7187, 104.003, 0.280776, 0.29", "-61.2623, 105.502, 0.296283, 0.29", "-61.6762, 106.579, 0.308987, 0.29", "-61.9485, 107.206, 0.327765, 0.29", "-62.0944, 107.497, 0.342287, 0.29", "-62.4742, 108.133, 0.388505, 0.66", "-62.9631, 108.828, 0.454919, 0.81", "-63.3203, 109.285, 0.505455, 0.81", "-64.0062, 110.147, 0.599119, 0.37", "-64.5476, 110.809, 0.672546, 0.37", "-65.0599, 111.442, 0.741622, 0.81", "-65.42, 111.894, 0.793491, 0.81", "-65.9282, 112.545, 0.874049, 0.37", "-66.4324, 113.15, 0.958948, 0.37", "-66.9484, 113.713, 1.05251, 0.88", "-67.5832, 114.373, 1.17117, 1.47", "-68.0616, 114.866, 1.2575, 1.69", "-68.4502, 115.269, 1.32256, 1.69", "-69.5107, 116.346, 1.49218, 0.37", "-69.8746, 116.721, 1.54832, 0.37", "-70.5551, 117.472, 1.64148, 0.37", "-71.336, 118.404, 1.73442, 0.81", "-71.8371, 119.088, 1.78308, 1.33", "-72.1388, 119.544, 1.80383, 1.33", "-72.5421, 120.186, 1.82293, 0.81", "-73.3602, 121.443, 1.84854, 0.52", "-74.0466, 122.412, 1.86233, 0.52", "-74.8235, 123.484, 1.86851, 0.52", "-75.2533, 124.074, 1.86769, 0.52", "-75.8066, 124.839, 1.86066, 0.52", "-76.4288, 125.695, 1.84407, 0.52", "-77.4913, 127.136, 1.8058, 0.52", "-77.8767, 127.656, 1.79079, 0.52", "-78.8352, 128.928, 1.75839, 1.25", "-79.1057, 129.289, 1.75139, 1.47", "-79.4618, 129.757, 1.73764, 1.47", "-79.9868, 130.405, 1.71331, 0.88", "-80.6295, 131.12, 1.68433, 0.29", "-80.8979, 131.384, 1.6763, 0.29", "-81.4548, 131.884, 1.66994, 0.44", "-81.8966, 132.267, 1.6756, 0.44", "-82.312, 132.616, 1.69197, 0.44", "-82.5566, 132.831, 1.692, 0.44", "-82.9004, 133.153, 1.70803, 0.29", "-83.3352, 133.69, 1.75478, 0.29", "-83.4818, 133.898, 1.78477, 0.44", "-83.6586, 134.161, 1.83364, 0.44", "-84.1246, 134.842, 1.97741, 0.37", "-84.7557, 135.725, 2.18247, 0.44", "-85.7967, 137.126, 2.43815, 2.28", "-86.2182, 137.68, 2.51284, 2.5", "-86.5445, 138.119, 2.54736, 2.5", "-87.0778, 138.839, 2.56861, 1.92", "-87.6156, 139.565, 2.53756, 0.81", "-88.322, 140.555, 2.37193, 0.52", "-88.6182, 141.01, 2.26714, 0.52", "-89.2452, 142.064, 1.99701, 0.88", "-89.5928, 142.716, 1.82555, 0.88", "-89.9739, 143.508, 1.62348, 0.66", "-90.2627, 144.162, 1.46202, 0.44", "-90.6491, 145.117, 1.25477, 0.29", "-91.0642, 146.219, 1.003, 0.29", "-91.4969, 147.479, 0.689243, 0.29", "-91.6976, 148.104, 0.522176, 0.29", "-92.0625, 149.258, 0.15706, 0.52", "-92.3265, 150.046, -0.130293, 0.88", "-92.5607, 150.689, -0.409493, 0.88", "-92.853, 151.389, -0.752156, 0.44", "-93.4444, 152.487, -1.34093, 1.11", "-94.0891, 153.428, -1.87383, 2.43", "-94.6341, 154.055, -2.2448, 2.43", "-95.0239, 154.414, -2.46333, 2.43", "-95.5803, 154.833, -2.69921, 1.69", "-96.3886, 155.356, -2.97859, 0.59", "-97.2893, 155.849, -3.20761, 0.74", "-97.5932, 156.0, -3.25415, 0.74", "-98.1032, 156.24, -3.32027, 0.52", "-98.8879, 156.613, -3.39416, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "23.0248, 6.38868, 6.0206, 1.99", "24.8081, 6.66269, 5.96758, 1.99", "25.8465, 7.06285, 6.08298, 1.99", "26.5663, 7.61517, 6.28415, 1.69", "27.5783, 8.3916, 6.56695, 1.69", "28.0045, 8.71862, 6.68607, 1.69", "28.7127, 9.26198, 6.88397, 1.69", "29.1548, 9.81586, 7.0451, 1.92", "29.7953, 10.9349, 7.46249, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "23.0248, 6.38868, 6.0206, 0.74", "23.6339, 7.88296, 6.11298, 0.74", "23.8638, 8.52979, 6.14113, 0.74", "24.185, 9.54361, 6.16855, 0.74", "24.4376, 10.4157, 6.18277, 0.44", "24.6329, 11.1552, 6.19577, 0.44", "24.8971, 12.2525, 6.215, 0.66", "24.9992, 12.7803, 6.21395, 0.88", "25.1316, 13.5498, 6.22981, 0.88", "25.2414, 14.2635, 6.26994, 1.03", "25.4082, 15.2897, 6.3539, 0.96", "25.5374, 16.0184, 6.42543, 0.52", "25.6588, 16.6045, 6.48922, 0.52", "25.7994, 17.3846, 6.57627, 0.88", "25.9143, 18.0207, 6.64985, 0.66", "26.0455, 18.7333, 6.73847, 0.88", "26.1614, 19.37, 6.82156, 0.88", "26.3223, 20.3116, 6.95378, 0.29", "26.4349, 21.0724, 7.05675, 0.29", "26.5067, 21.5958, 7.11948, 0.29", "26.6276, 22.4884, 7.23133, 0.44", "26.7112, 23.0225, 7.3117, 0.74", "26.8347, 23.6654, 7.41568, 0.88", "26.9236, 24.0547, 7.48512, 1.11", "27.0023, 24.3623, 7.53904, 1.11", "27.1549, 25.0598, 7.63996, 0.29", "27.3189, 25.7443, 7.71012, 0.29", "27.5039, 26.3889, 7.76175, 0.29", "29.1929, 33.5375, 9.80654, 0.29", "31.8074, 40.4964, 11.4736, 0.29", "33.6869, 47.842, 12.3919, 0.29", "34.929, 55.3729, 12.8631, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.95552, 38.3192, 1.13455, 0.59", "9.5476, 53.0936, 1.13455, 0.59", "12.1397, 67.8679, 1.13455, 0.59" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-99.7206, -71.2438, 5.42257, 0.44", "-101.876, -72.1928, 6.34523, 0.44", "-102.968, -72.7591, 6.79652, 0.29", "-104.123, -73.4161, 7.2296, 0.29", "-104.801, -73.8166, 7.46907, 0.29", "-106.245, -74.653, 7.94492, 0.37", "-106.904, -75.0148, 8.16759, 0.37", "-107.918, -75.5352, 8.42333, 0.29", "-108.885, -76.1106, 8.68571, 0.29", "-109.623, -76.6142, 8.89565, 0.29", "-110.135, -76.9829, 9.03965, 0.29", "-110.934, -77.5408, 9.25959, 0.29", "-111.724, -78.0182, 9.46355, 0.44", "-112.815, -78.6022, 9.7435, 0.44", "-113.391, -78.932, 9.91867, 0.44", "-114.228, -79.481, 10.2203, 0.66", "-115.057, -80.1477, 10.5818, 0.66", "-115.479, -80.5929, 10.8183, 0.52", "-116.183, -81.6728, 11.4166, 0.44", "-116.444, -82.4338, 11.8422, 0.66", "-116.571, -83.2305, 12.2901, 0.66", "-116.638, -84.1519, 12.8053, 0.52", "-116.717, -85.3742, 13.4997, 0.52", "-116.752, -86.4905, 14.1202, 0.44", "-116.755, -87.47, 14.6569, 0.37", "-116.813, -88.9919, 15.4887, 0.37", "-116.919, -90.19, 16.1667, 0.29", "-117.132, -91.3989, 16.9164, 0.29", "-125.04, -99.625, 19.1671, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-99.7206, -71.2438, 5.42257, 1.11", "-100.663, -71.6794, 5.63503, 1.11", "-101.397, -72.0881, 5.77693, 1.11", "-102.885, -72.9743, 6.06586, 0.88", "-104.02, -73.614, 6.2877, 0.88", "-105.746, -74.5112, 6.62712, 0.88", "-107.549, -75.362, 6.972, 0.88", "-108.537, -75.8215, 7.15883, 0.88", "-109.458, -76.2349, 7.30861, 0.81", "-110.496, -76.6792, 7.45029, 0.81", "-111.247, -76.9674, 7.55002, 0.81", "-112.581, -77.4294, 7.73372, 0.96", "-113.278, -77.6936, 7.82185, 0.96", "-113.991, -78.041, 7.88658, 0.96", "-114.668, -78.4841, 7.912, 0.96", "-115.551, -79.1778, 7.92028, 0.96", "-115.845, -79.42, 7.91491, 0.96", "-116.749, -80.1409, 7.87439, 0.88", "-117.886, -80.9308, 7.80192, 0.88", "-118.701, -81.472, 7.74146, 1.11", "-119.524, -82.0197, 7.67649, 1.11", "-120.477, -82.6762, 7.58035, 0.96", "-121.281, -83.2858, 7.51738, 0.96", "-122.381, -84.213, 7.46134, 0.88", "-123.644, -85.3807, 7.37515, 0.88", "-124.621, -86.3213, 7.2571, 0.96", "-125.406, -87.0823, 7.12441, 0.96", "-126.528, -88.1276, 6.90268, 0.88", "-127.063, -88.5916, 6.77308, 0.74", "-128.27, -89.5563, 6.44007, 0.96", "-129.339, -90.3203, 6.14046, 1.11", "-130.209, -90.9101, 5.91303, 1.25", "-130.963, -91.4259, 5.73702, 1.25", "-132.176, -92.2813, 5.47948, 1.03", "-133.805, -93.5245, 5.2165, 0.88", "-134.98, -94.5225, 5.07757, 0.88", "-136.162, -95.604, 4.95505, 0.88", "-137.149, -96.5183, 4.84954, 0.88", "-138.102, -97.3642, 4.75186, 1.33", "-138.852, -97.9655, 4.68995, 1.33", "-139.746, -98.6312, 4.61526, 1.18", "-140.376, -99.0709, 4.55916, 0.96", "-141.511, -99.8048, 4.47413, 0.96", "-142.556, -100.405, 4.42029, 0.96", "-143.961, -101.103, 4.40427, 0.88", "-145.175, -101.582, 4.45794, 0.81", "-145.855, -101.783, 4.53293, 0.81", "-146.646, -101.986, 4.64731, 0.74", "-147.231, -102.159, 4.74089, 0.74", "-147.976, -102.45, 4.86246, 0.74", "-149.041, -103.018, 5.02761, 0.74", "-149.634, -103.468, 5.09932, 1.11", "-150.539, -104.427, 5.15863, 1.11", "-151.648, -105.86, 5.172, 0.88", "-152.367, -106.926, 5.15451, 0.88", "-152.918, -107.821, 5.12435, 0.88", "-153.676, -109.069, 5.07226, 0.81", "-154.727, -110.676, 4.96275, 0.81", "-155.269, -111.427, 4.89422, 1.18", "-155.871, -112.228, 4.78847, 1.33", "-156.526, -113.035, 4.65811, 1.33", "-157.605, -114.243, 4.43571, 0.88", "-158.68, -115.34, 4.19269, 0.81", "-159.809, -116.401, 3.9418, 0.81", "-161.153, -117.598, 3.62993, 0.81", "-162.174, -118.464, 3.36727, 0.81", "-163.138, -119.255, 3.11266, 1.11", "-163.724, -119.728, 2.95105, 1.25", "-164.424, -120.291, 2.75908, 2.14", "-165.101, -120.865, 2.54862, 2.5", "-166.028, -121.639, 2.26117, 1.92", "-167.368, -122.915, 1.76988, 1.11", "-167.943, -123.535, 1.52862, 0.96", "-168.73, -124.467, 1.17678, 1.4", "-169.742, -125.72, 0.666526, 1.69" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-12.6679, -133.634, -3.56982, 0.37", "-11.7636, -136.057, -2.73087, 0.37", "-11.5093, -136.683, -2.54078, 0.52", "-11.1923, -137.449, -2.33858, 0.66", "-10.8365, -138.323, -2.12764, 0.37", "-10.5699, -138.968, -1.98037, 0.44", "-10.2582, -139.72, -1.82007, 0.44", "-9.88201, -140.616, -1.71606, 0.29", "-9.49944, -141.457, -1.61678, 0.29", "-9.12238, -142.163, -1.53632, 0.59", "-8.73982, -142.772, -1.48392, 0.59", "-8.27153, -143.407, -1.44882, 0.37", "-7.76513, -144.006, -1.43891, 0.66", "-7.26979, -144.512, -1.44847, 0.52", "-6.51329, -145.188, -1.49286, 0.37", "-5.93383, -145.663, -1.54754, 0.37", "-5.06264, -146.364, -1.65623, 0.37", "-4.21581, -147.038, -1.78458, 1.03", "-3.60136, -147.531, -1.89436, 1.18", "-3.02377, -148.004, -2.01723, 0.81", "-2.56973, -148.386, -2.12767, 0.52", "-1.72037, -149.106, -2.33556, 0.52", "-0.915104, -149.816, -2.5363, 0.59", "-0.217353, -150.486, -2.73915, 0.59", "0.346465, -151.089, -2.92359, 0.81", "0.802223, -151.614, -3.08301, 0.81", "1.29995, -152.222, -3.2696, 0.66", "1.65626, -152.687, -3.41393, 0.29", "2.46591, -153.816, -3.7611, 0.52", "3.15339, -154.801, -4.06324, 1.03", "3.39847, -155.161, -4.17668, 1.47", "3.84748, -155.79, -4.38552, 1.62", "4.45578, -156.553, -4.66285, 1.03", "5.05275, -157.211, -4.90941, 0.29", "5.6395, -157.783, -5.12439, 0.29", "6.32932, -158.398, -5.37339, 0.37", "7.0483, -159.031, -5.63188, 0.66", "7.42012, -159.354, -5.76019, 0.81", "8.01233, -159.849, -5.94685, 0.96", "8.46212, -160.216, -6.07671, 0.44", "8.82165, -160.504, -6.1684, 0.29", "9.52355, -161.049, -6.31879, 0.29", "10.0526, -161.505, -6.42458, 0.59", "10.5582, -161.997, -6.51909, 0.74", "10.9611, -162.434, -6.59097, 0.74", "11.4981, -163.086, -6.68634, 0.74", "11.9239, -163.657, -6.76813, 0.44", "12.4848, -164.475, -6.88336, 0.29", "12.8131, -164.989, -6.95852, 0.66", "13.2189, -165.643, -7.06248, 0.88", "13.5969, -166.247, -7.16452, 0.96", "14.1435, -167.093, -7.30323, 0.66", "14.7084, -167.96, -7.43989, 0.37", "15.3814, -168.938, -7.59343, 0.74", "15.7577, -169.467, -7.6767, 0.81", "16.1927, -170.086, -7.76873, 0.37", "16.7728, -170.951, -7.88732, 0.37", "17.2696, -171.728, -7.98727, 0.37", "17.6805, -172.393, -8.0721, 0.37", "18.0086, -172.951, -8.14378, 0.52", "18.3986, -173.61, -8.23802, 0.52", "18.8001, -174.28, -8.34702, 0.37", "19.2095, -174.985, -8.47445, 0.37", "19.6904, -175.789, -8.62363, 0.81", "19.9841, -176.23, -8.71184, 0.88", "20.49, -176.904, -8.85999, 0.59", "20.9317, -177.442, -8.98513, 0.37", "21.3864, -177.952, -9.11101, 0.37", "21.9713, -178.566, -9.26547, 0.44", "23.1784, -179.74, -9.57052, 0.44", "23.9741, -180.426, -9.76381, 1.18", "24.5766, -180.905, -9.90409, 1.47", "25.2438, -181.407, -10.0674, 1.47", "26.2248, -182.137, -10.3229, 1.18", "26.9822, -182.741, -10.5424, 0.29", "27.4499, -183.15, -10.6956, 0.29", "27.802, -183.484, -10.8312, 0.29", "28.4202, -184.137, -11.1296, 0.59", "29.0065, -184.845, -11.4704, 0.66", "29.3208, -185.289, -11.6925, 0.74", "29.6372, -185.805, -11.941, 0.59", "29.9794, -186.442, -12.2277, 0.44", "30.3827, -187.256, -12.5861, 0.29", "30.6132, -187.806, -12.8075, 0.37", "30.941, -188.729, -13.1543, 0.52", "31.1572, -189.436, -13.3812, 1.03", "31.3615, -190.176, -13.6121, 1.55", "31.5398, -190.817, -13.8031, 1.55", "31.9817, -192.435, -14.2781, 0.44", "32.2875, -193.49, -14.6034, 0.37", "33.0826, -195.845, -15.4202, 0.29", "33.2915, -196.345, -15.615, 0.29", "33.9745, -197.634, -16.1736, 1.47", "34.2635, -198.052, -16.3844, 1.92", "34.8668, -198.723, -16.799, 2.06", "35.7947, -199.549, -17.4599, 0.81", "37.0137, -200.419, -18.3886, 0.29", "37.7821, -200.932, -19.0021, 0.29", "38.7914, -201.579, -19.7953, 0.44", "39.291, -201.903, -20.1603, 0.52", "40.4872, -202.704, -20.9509, 0.29", "41.3782, -203.328, -21.451, 0.88", "41.9055, -203.713, -21.672, 0.74", "43.1703, -204.714, -21.9723, 0.29", "44.0729, -205.451, -22.0372, 0.29", "44.9635, -206.194, -22.0061, 0.59", "45.5434, -206.687, -21.936, 0.66", "46.6439, -207.648, -21.7637, 0.29", "47.7408, -208.657, -21.5969, 0.29", "48.4502, -209.382, -21.528, 0.29", "49.092, -210.132, -21.499, 1.03", "49.5518, -210.72, -21.5103, 1.47", "49.9621, -211.288, -21.5573, 1.18", "50.7029, -212.394, -21.7119, 0.22", "51.3603, -213.415, -21.8828, 0.22", "52.1951, -214.733, -22.1362, 0.22", "52.5523, -215.276, -22.246, 0.52", "53.1705, -216.182, -22.4384, 0.29", "53.7567, -217.019, -22.629, 0.29", "54.1294, -217.524, -22.7614, 0.88", "54.6436, -218.202, -22.9207, 0.88", "55.403, -219.227, -23.1353, 0.29", "55.7504, -219.702, -23.214, 0.29", "56.3649, -220.521, -23.2909, 0.96", "56.8014, -221.062, -23.2913, 1.4", "57.2679, -221.611, -23.2511, 1.77", "57.5627, -221.934, -23.2062, 1.77", "58.7234, -223.128, -23.0061, 0.22", "59.9196, -224.272, -22.7642, 0.22", "60.864, -225.098, -22.5791, 0.88", "61.2906, -225.455, -22.5072, 1.33", "61.7277, -225.808, -22.4576, 1.33", "62.7254, -226.59, -22.3751, 0.22", "63.9601, -227.53, -22.3261, 0.22", "65.2668, -228.543, -22.3466, 0.22", "66.4476, -229.507, -22.4313, 0.22", "67.132, -230.095, -22.5052, 0.74", "67.499, -230.433, -22.5585, 0.88", "67.9249, -230.863, -22.6435, 0.52", "68.6623, -231.731, -22.8487, 0.22", "69.0278, -232.226, -22.9672, 0.88", "69.4256, -232.811, -23.093, 1.33", "69.7391, -233.298, -23.1842, 1.33", "70.4646, -234.489, -23.3761, 0.29", "71.3031, -235.948, -23.5611, 0.29", "71.7068, -236.674, -23.6245, 0.44", "72.0573, -237.312, -23.6564, 0.59", "72.3769, -237.897, -23.6663, 0.59", "72.889, -238.833, -23.654, 0.22", "73.4083, -239.794, -23.6237, 0.22", "73.7313, -240.38, -23.6051, 0.74", "73.9264, -240.729, -23.6006, 0.88", "74.187, -241.176, -23.6131, 0.88", "74.7097, -242.049, -23.6435, 0.22", "75.6383, -243.529, -23.7254, 0.22", "76.0536, -244.178, -23.7838, 0.52", "76.3229, -244.601, -23.8355, 0.66", "76.7441, -245.259, -23.9302, 0.44", "82.9962, -251.952, -26.7418, 0.44" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-12.6679, -133.634, -3.56982, 2.28", "-13.1344, -134.765, -3.27138, 2.28", "-13.5669, -135.732, -2.95306, 1.62", "-14.1239, -136.881, -2.55427, 1.33", "-14.69, -137.961, -2.18205, 0.88", "-14.971, -138.458, -2.01285, 0.88", "-15.4224, -139.187, -1.7632, 1.03", "-16.3355, -140.488, -1.30726, 1.03", "-17.1342, -141.479, -0.950313, 0.96", "-17.7791, -142.194, -0.705503, 0.88", "-18.3403, -142.802, -0.535236, 1.11", "-18.9671, -143.536, -0.405772, 1.33", "-19.4707, -144.235, -0.361923, 1.55", "-19.8857, -144.948, -0.390672, 1.25", "-20.1976, -145.67, -0.474484, 0.96", "-20.4811, -146.664, -0.640482, 0.88", "-20.7134, -147.899, -0.892963, 0.88", "-20.8792, -149.221, -1.18151, 0.88", "-20.984, -150.385, -1.43758, 1.03", "-21.0521, -151.473, -1.67205, 1.03", "-21.1127, -152.755, -1.92681, 1.03", "-21.1524, -153.925, -2.13644, 1.25", "-21.1693, -155.275, -2.34394, 1.55", "-21.15, -156.309, -2.47686, 1.55", "-21.0705, -157.735, -2.63466, 1.33", "-20.9756, -158.901, -2.7486, 1.33", "-20.8899, -159.943, -2.83736, 1.11", "-20.7809, -161.059, -2.88785, 1.11", "-20.6742, -162.287, -2.89989, 0.96", "-20.6193, -163.2, -2.87928, 0.96", "-20.5752, -164.523, -2.79269, 0.88", "-20.5548, -166.269, -2.62627, 0.88", "-20.5628, -167.784, -2.43762, 1.03", "-20.5886, -169.133, -2.23615, 1.25", "-20.6327, -170.416, -2.0213, 1.33", "-20.6798, -171.426, -1.83894, 1.62", "-20.7172, -172.465, -1.64108, 2.5", "-20.7195, -173.029, -1.5398, 2.8", "-20.716, -173.726, -1.44854, 3.02", "-20.6848, -174.38, -1.36541, 3.02", "-20.6599, -174.818, -1.31288, 3.32" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-2.25426, -63.3646, -8.19502, 0.81", "-2.48951, -65.0036, -8.07422, 0.81", "-2.71598, -66.1092, -7.92685, 0.66", "-3.03971, -67.3469, -7.72269, 0.66", "-3.42534, -68.6446, -7.49169, 0.52", "-3.58691, -69.1633, -7.39802, 0.52", "-4.01687, -70.5298, -7.15461, 0.74", "-4.42861, -71.9193, -6.85458, 0.74", "-4.80273, -73.0694, -6.60724, 0.88", "-5.25551, -74.317, -6.35442, 0.59", "-5.56357, -75.13, -6.21829, 1.03", "-5.84401, -75.9274, -6.09957, 1.25", "-6.11089, -76.863, -5.98237, 1.03", "-6.37878, -78.0692, -5.85985, 0.66", "-6.57562, -79.0524, -5.77103, 0.66", "-6.78134, -80.0669, -5.69435, 0.81", "-7.014, -81.2539, -5.64105, 0.81", "-7.18487, -82.2462, -5.64705, 0.66", "-7.32203, -83.2955, -5.71388, 0.52", "-7.38844, -83.9175, -5.79675, 0.52", "-7.46691, -84.6795, -5.9205, 0.52", "-7.59181, -85.7655, -6.12115, 0.66", "-7.72446, -86.7521, -6.30811, 0.66", "-7.88899, -87.795, -6.50852, 0.59", "-8.09282, -88.9392, -6.71154, 1.18", "-8.26002, -89.9356, -6.88137, 1.55", "-8.4343, -90.8891, -7.0202, 1.99", "-8.71602, -92.0449, -7.14211, 2.73", "-8.9784, -92.9007, -7.19805, 2.87", "-9.2675, -93.6997, -7.23874, 3.02" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-2.25426, -63.3646, -8.19502, 0.52", "-1.84684, -64.6667, -9.47819, 0.52", "-1.75485, -64.9741, -9.74872, 0.52", "-1.42482, -65.9892, -10.6483, 0.52", "-1.14313, -66.7411, -11.3296, 0.66", "-0.945809, -67.2008, -11.7357, 0.66", "-0.755479, -67.5886, -12.076, 0.44", "-0.533166, -68.1248, -12.5333, 0.88", "-0.330851, -68.6291, -12.9251, 1.33", "-0.0988067, -69.1728, -13.3136, 1.47", "0.153013, -69.8016, -13.83, 1.03", "0.40371, -70.78, -14.7213, 0.44", "0.368898, -71.3776, -15.3441, 0.44", "0.112983, -72.0622, -16.2168, 0.37", "-0.170551, -72.5578, -16.9547, 0.37", "-0.563997, -73.1921, -18.0657, 0.37", "-0.814085, -73.6059, -18.9148, 0.74", "-0.955794, -73.8862, -19.5627, 0.96", "-1.07459, -74.2756, -20.4644, 0.96", "-1.20567, -74.9829, -22.0517, 0.44", "-1.22731, -75.4705, -23.067, 1.33", "-1.19449, -76.1422, -24.3491, 1.55", "-1.15073, -76.7615, -25.4673, 1.33", "-1.06774, -77.6088, -26.8709, 0.81", "-1.01526, -77.9729, -27.4149, 1.25", "-0.917671, -78.4253, -28.0122, 0.88", "-0.806387, -78.9352, -28.5886, 0.37", "-0.70491, -79.3863, -29.0117, 0.81", "-0.600702, -79.8708, -29.4112, 1.03", "-0.52434, -80.1626, -29.6274, 1.03", "-0.216897, -81.1746, -30.351, 0.29", "-0.0431457, -81.6887, -30.6994, 0.29", "0.220018, -82.3551, -31.1252, 1.84", "0.484647, -82.9158, -31.4922, 2.14", "1.24174, -84.2976, -32.4619, 0.29", "1.64415, -84.9303, -32.9305, 0.81", "2.06345, -85.4977, -33.371, 0.81", "2.50699, -86.0254, -33.8165, 0.52", "3.11555, -86.6744, -34.4358, 1.25", "3.51293, -87.0677, -34.8521, 1.4", "4.53517, -88.0397, -35.9227, 0.22", "5.1705, -88.6314, -36.5558, 0.22", "5.89515, -89.3087, -37.2421, 1.4", "6.35114, -89.7601, -37.6531, 2.21", "6.56199, -89.9847, -37.827, 2.21", "7.94181, -91.5742, -38.8694, 0.22", "8.31304, -92.0229, -39.1385, 0.74", "8.64007, -92.4394, -39.3827, 1.03", "9.16595, -93.1617, -39.7871, 0.59", "10.3901, -94.947, -40.747, 0.22", "11.9341, -97.2682, -42.0026, 0.22", "12.4667, -98.0934, -42.4726, 0.81", "12.8599, -98.7032, -42.8328, 0.96", "14.128, -100.69, -44.0448, 0.22", "14.9139, -101.916, -44.8441, 0.22", "15.3409, -102.593, -45.3232, 0.88", "15.755, -103.248, -45.8328, 0.88", "16.9146, -105.08, -47.3111, 0.15", "17.8013, -106.418, -48.3711, 0.15", "18.3222, -107.173, -48.9831, 0.15", "18.7969, -107.862, -49.5309, 1.62", "19.0937, -108.307, -49.865, 1.92", "19.3326, -108.664, -50.1094, 1.92", "20.8932, -111.043, -51.6154, 0.22", "21.2314, -111.552, -51.9146, 0.66", "21.4895, -111.948, -52.1353, 0.88", "21.7541, -112.351, -52.3633, 0.88", "22.5807, -113.668, -53.2048, 0.15", "23.1604, -114.735, -53.9931, 0.15", "23.4462, -115.385, -54.525, 0.81", "23.6057, -115.851, -54.9095, 1.03", "23.7127, -116.273, -55.2592, 1.03", "23.9344, -117.697, -56.4486, 0.22", "24.0122, -119.245, -57.7654, 0.22", "24.0137, -119.875, -58.333, 0.22", "23.9945, -120.787, -59.1983, 1.03", "23.9859, -121.261, -59.6525, 1.62", "23.9737, -121.739, -60.1363, 1.62", "23.9609, -122.544, -61.0063, 1.03", "23.9569, -124.192, -62.8799, 0.22", "23.9368, -124.961, -63.8484, 0.44", "23.935, -125.383, -64.4109, 0.44", "23.9422, -126.314, -65.6633, 0.66", "23.9589, -126.783, -66.2792, 0.96", "23.9934, -127.324, -66.979, 0.37", "24.1598, -129.06, -69.1458, 0.66", "24.2104, -129.416, -69.5815, 0.66", "24.4221, -130.709, -71.1816, 0.22", "24.5693, -131.392, -71.9975, 0.22", "24.7263, -131.999, -72.7129, 0.81", "24.9121, -132.545, -73.3439, 0.96", "25.0791, -132.9, -73.6658, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "10.1835, 150.868, -38.9622, 0.37", "11.9831, 150.102, -35.9931, 0.37", "12.3503, 149.946, -35.3872, 0.37" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "10.1835, 150.868, -38.9622, 0.22", "11.4371, 153.484, -39.4363, 0.22", "12.071, 154.903, -39.75, 0.22", "12.5537, 156.026, -40.0217, 0.74", "12.7234, 156.442, -40.1255, 0.74", "13.5098, 158.371, -40.606, 0.15", "14.0186, 159.619, -40.917, 0.15", "14.3762, 160.511, -41.2435, 0.66", "14.5589, 161.066, -41.4214, 0.88", "14.7569, 161.704, -41.5877, 0.29" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-10.6833, 49.3084, 3.12024, 0.66", "-10.9095, 51.2271, 2.9947, 0.66", "-10.9578, 51.948, 2.99859, 0.96", "-11.0173, 52.7923, 3.0184, 0.96", "-11.0983, 53.9444, 3.06128, 0.59", "-11.1635, 54.9639, 3.11135, 0.59", "-11.2272, 56.168, 3.18469, 0.59", "-11.3083, 57.9114, 3.35716, 0.59", "-11.3261, 58.7325, 3.45278, 0.52", "-11.3321, 59.9574, 3.61178, 0.88", "-11.3341, 60.8458, 3.72106, 1.11", "-11.3493, 61.9079, 3.8302, 1.11", "-11.3821, 63.1317, 3.9493, 0.74", "-11.4419, 64.4158, 4.06256, 0.74", "-11.5351, 66.0594, 4.20471, 0.74", "-11.6159, 67.1948, 4.28715, 0.52", "-11.7168, 68.4116, 4.34879, 0.52", "-11.7941, 69.2894, 4.37828, 0.96", "-11.8994, 70.5882, 4.39578, 1.11", "-12.0463, 72.5172, 4.39021, 1.11", "-12.1343, 73.7861, 4.37235, 1.11", "-12.2086, 75.0492, 4.37158, 0.81", "-12.2604, 76.158, 4.38606, 0.74", "-12.2966, 77.3112, 4.42215, 0.74", "-12.3125, 78.3897, 4.4834, 0.44", "-12.3277, 79.3, 4.55498, 0.44", "-12.3757, 80.7944, 4.70706, 0.74", "-12.4177, 81.8241, 4.83111, 0.74", "-12.4604, 82.9176, 4.97432, 0.37", "-12.479, 84.0506, 5.14328, 0.74", "-12.4665, 85.0427, 5.26399, 0.96", "-12.4231, 86.184, 5.36675, 0.96", "-12.3404, 87.4455, 5.42609, 0.81", "-12.237, 88.6324, 5.45424, 0.52", "-12.1018, 89.8748, 5.46432, 0.52", "-11.8763, 91.5054, 5.47285, 1.03", "-11.7368, 92.3719, 5.47761, 1.55", "-11.6007, 93.1555, 5.4787, 1.69", "-11.5112, 93.666, 5.48021, 1.69", "-11.2941, 94.9262, 5.50607, 0.37", "-11.124, 95.9765, 5.5651, 0.44", "-11.0317, 96.519, 5.63506, 0.44", "-10.9165, 97.1413, 5.74043, 0.44", "-10.7172, 98.168, 5.94542, 0.29", "-10.6202, 98.6035, 6.04146, 0.59", "-10.4271, 99.3406, 6.2214, 0.44", "-10.1127, 100.499, 6.51457, 0.29", "-9.83862, 101.574, 6.78214, 1.18", "-9.70172, 102.152, 6.92359, 1.18", "-9.50141, 103.021, 7.13118, 0.52", "-9.3106, 103.855, 7.3295, 0.29", "-9.09872, 104.804, 7.5831, 0.29", "-8.94187, 105.66, 7.8474, 0.29", "-8.86728, 106.219, 8.03511, 0.29", "-8.76883, 107.33, 8.42686, 0.81", "-8.70924, 108.303, 8.785, 0.44", "-8.63417, 109.234, 9.12997, 0.22", "-8.51534, 110.173, 9.48601, 0.44", "-8.46411, 110.532, 9.62916, 0.44", "-8.36108, 111.302, 9.93701, 0.29", "-8.28447, 111.998, 10.2125, 0.29", "-8.16722, 112.951, 10.5717, 0.29", "-8.07803, 113.561, 10.7834, 0.29", "-7.95382, 114.347, 11.05, 0.66", "-7.85958, 114.985, 11.2704, 0.66", "-7.73591, 115.795, 11.528, 0.74", "-7.63692, 116.679, 11.7954, 0.37", "-7.58069, 117.371, 11.9977, 0.37", "-7.49372, 118.342, 12.2514, 0.52", "-7.41203, 119.078, 12.4193, 0.59", "-7.27848, 120.198, 12.6619, 0.44", "-7.1778, 120.989, 12.8277, 0.29", "-7.10225, 121.542, 12.9492, 0.29", "-6.94393, 122.765, 13.2303, 1.11", "-6.8589, 123.464, 13.3976, 1.25", "-6.80184, 123.963, 13.5214, 1.25", "-6.66711, 125.009, 13.7896, 0.66", "-6.55832, 125.633, 13.9426, 0.29", "-6.35576, 126.604, 14.184, 0.29", "-6.14905, 127.471, 14.4034, 0.29", "-5.939, 128.254, 14.6064, 0.29", "-5.59565, 129.424, 14.9125, 0.96", "-5.4413, 129.933, 15.0381, 1.47", "-5.31684, 130.369, 15.1338, 1.47", "-5.24979, 130.628, 15.1826, 1.47", "-5.08034, 131.384, 15.3126, 0.74", "-4.90743, 132.254, 15.4584, 0.29", "-4.75685, 133.146, 15.6021, 0.52", "-4.61924, 133.97, 15.7398, 0.74", "-4.42526, 135.015, 15.9335, 0.44", "-4.25318, 135.845, 16.1019, 0.29", "-4.11841, 136.426, 16.2297, 0.29", "-3.90585, 137.221, 16.424, 0.66", "-3.73694, 137.788, 16.5705, 0.74", "-3.48869, 138.587, 16.7805, 0.74", "-3.21959, 139.482, 17.0185, 0.29", "-2.99568, 140.283, 17.2284, 0.29", "-2.58141, 141.897, 17.6408, 0.29", "-2.35465, 142.996, 17.9554, 0.52", "-2.2464, 143.659, 18.1591, 1.18", "-2.17728, 144.233, 18.3427, 1.4", "-2.10368, 145.168, 18.6472, 1.4", "-2.0733, 145.903, 18.8862, 0.66", "-2.02446, 147.625, 19.441, 0.29", "-1.97115, 148.711, 19.7766, 0.29", "-1.90422, 149.368, 19.956, 0.37", "-1.77014, 150.256, 20.1663, 0.37", "-1.59063, 151.174, 20.3612, 0.37", "-1.19771, 152.803, 20.6686, 0.37", "-0.675981, 154.574, 20.9495, 0.37", "-0.120243, 156.292, 21.225, 1.33", "0.179979, 157.116, 21.3553, 1.99", "0.436297, 157.769, 21.4561, 1.99", "0.547054, 158.045, 21.4964, 1.99", "0.753313, 158.556, 21.572, 1.99", "1.17854, 159.619, 21.749, 0.59", "1.66046, 160.849, 21.9979, 0.29", "1.98471, 161.704, 22.2176, 0.59", "2.23042, 162.363, 22.4077, 0.59", "2.73394, 163.74, 22.8445, 0.37", "2.99551, 164.504, 23.1021, 0.37", "3.3811, 165.739, 23.54, 0.37", "3.79192, 167.226, 24.0832, 0.74", "3.9359, 167.839, 24.2948, 0.74", "4.05191, 168.476, 24.5042, 0.88", "4.16948, 169.403, 24.7888, 0.44", "4.31569, 171.015, 25.2139, 0.29", "4.37428, 171.886, 25.3793, 0.52", "4.46935, 173.516, 25.5718, 1.25", "4.50257, 174.213, 25.6288, 1.62", "4.52942, 174.674, 25.6444, 1.62", "4.59634, 175.624, 25.6363, 0.96", "4.72966, 177.048, 25.5693, 0.29", "4.8329, 177.866, 25.5243, 0.29", "4.98134, 178.859, 25.4882, 0.29", "5.1283, 179.897, 25.4807, 0.74", "5.18076, 180.366, 25.494, 0.96", "5.22592, 180.908, 25.5303, 0.96", "5.31777, 182.279, 25.6494, 0.52", "5.44532, 184.172, 25.8035, 0.37", "5.5276, 185.471, 25.9111, 0.29", "5.59377, 186.697, 25.9998, 0.66", "5.63905, 187.521, 26.0421, 0.66", "5.72159, 189.071, 26.0882, 0.29", "5.7643, 189.841, 26.1053, 0.29", "5.88662, 191.871, 26.1494, 0.29", "6.04274, 194.077, 26.2174, 1.99", "6.07665, 194.577, 26.2401, 2.28", "6.11214, 195.284, 26.2839, 1.55", "6.13017, 196.055, 26.3624, 0.88", "6.1155, 197.307, 26.5456, 0.22", "6.08878, 197.891, 26.6504, 0.22", "6.01447, 198.955, 26.8716, 0.66", "5.96711, 199.628, 27.0114, 0.66", "5.89945, 200.767, 27.2414, 0.29", "5.81345, 202.593, 27.5794, 0.22", "5.79501, 203.519, 27.7498, 0.22", "5.80387, 204.499, 27.9267, 0.52", "5.87733, 205.724, 28.1504, 0.44", "5.99251, 206.791, 28.3477, 0.44", "6.18, 208.022, 28.5698, 0.44", "6.55743, 209.929, 28.929, 0.22", "6.8739, 211.346, 29.2058, 0.66", "7.16056, 212.492, 29.4392, 1.77", "7.32699, 213.097, 29.5681, 1.77", "7.49037, 213.639, 29.6904, 1.77", "7.76164, 214.429, 29.8868, 0.88", "8.07408, 215.303, 30.1491, 0.29", "8.28398, 215.894, 30.3509, 0.52", "8.79832, 217.418, 30.8986, 0.22", "9.09503, 218.288, 31.2075, 0.52", "9.4379, 219.268, 31.5456, 0.52", "10.1912, 221.428, 32.2582, 0.22", "10.7724, 223.083, 32.7771, 0.37", "11.1501, 224.173, 33.1115, 0.37", "11.5619, 225.388, 33.4681, 1.92", "11.7464, 225.948, 33.6198, 2.21", "11.9317, 226.532, 33.7503, 2.21", "12.1739, 227.228, 33.8255, 1.18" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-10.6833, 49.3084, 3.12024, 0.66", "-10.349, 50.8563, 3.69138, 0.66", "-10.1405, 51.7996, 4.03281, 0.81", "-9.99762, 52.4998, 4.30224, 0.37", "-9.84237, 53.3435, 4.62457, 0.29", "-9.57251, 54.7585, 5.15853, 0.29", "-9.39522, 55.586, 5.47921, 0.29", "-9.17436, 56.3815, 5.78663, 0.29", "-8.82521, 57.4256, 6.23501, 0.29", "-8.51029, 58.2804, 6.62071, 0.29", "-8.19617, 59.1317, 7.00454, 0.74", "-7.9796, 59.7029, 7.2723, 0.74", "-7.56215, 60.6674, 7.75137, 0.29", "-7.31591, 61.2203, 8.03635, 0.37", "-6.74798, 62.5084, 8.68489, 0.37", "-6.45287, 63.2375, 9.04546, 0.37", "-6.15836, 64.1013, 9.44611, 0.37", "-6.04312, 64.5005, 9.62082, 0.37", "-5.86795, 65.23, 9.9279, 0.22", "-5.7154, 65.9391, 10.2182, 0.22", "-5.57418, 66.4982, 10.45, 0.66", "-5.4099, 67.1751, 10.6923, 0.96", "-3.40309, 75.3294, 12.9181, 0.96", "-0.304656, 82.2464, 17.0695, 0.96", "1.59447, 89.231, 21.7992, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "29.7953, 10.9349, 7.46249, 0.66", "30.7366, 9.23972, 7.04786, 0.66", "31.0027, 8.7056, 6.88312, 0.66", "31.4402, 7.88069, 6.65389, 0.88", "32.2289, 6.54478, 6.33356, 0.88", "32.7944, 5.69051, 6.16282, 0.88", "33.3374, 4.98019, 6.04378, 1.03", "33.9739, 4.21243, 5.92382, 1.03", "34.8864, 3.60637, 5.9771, 0.88", "35.6078, 3.45467, 6.13461, 0.88", "36.2278, 3.39433, 6.30659, 0.88", "37.212, 3.26208, 6.6014, 0.81", "38.3509, 2.9554, 6.94231, 0.81", "39.0781, 2.62271, 7.11586, 0.81", "40.0051, 1.99481, 7.22483, 0.74", "40.9956, 1.18838, 7.2664, 0.88", "41.876, 0.385973, 7.24022, 0.88", "42.8213, -0.580881, 7.14444, 0.52", "43.295, -1.07262, 7.05461, 0.52", "43.8722, -1.575, 6.89665, 0.52", "44.6115, -2.06714, 6.67247, 0.52", "45.4557, -2.46303, 6.40977, 0.74", "46.3123, -2.76836, 6.1377, 0.74", "47.3985, -3.07777, 5.79111, 0.74", "48.8332, -3.42853, 5.34972, 0.74", "49.8276, -3.6419, 5.04209, 0.74", "50.6145, -3.77142, 4.81136, 0.74", "51.4681, -3.82655, 4.58837, 0.74", "51.9679, -3.82352, 4.4859, 0.88", "53.3776, -3.70919, 4.24605, 0.88", "54.5789, -3.57579, 4.07269, 0.88", "56.0674, -3.4267, 3.87254, 0.66", "57.1574, -3.3447, 3.74707, 0.66", "59.965, -3.17296, 3.4885, 0.59", "60.9394, -3.12515, 3.41444, 0.52", "62.4141, -3.02436, 3.33284, 0.52", "63.3012, -2.91782, 3.30797, 0.52", "64.263, -2.71158, 3.30319, 0.52", "65.4103, -2.39029, 3.31851, 0.52", "66.1769, -2.159, 3.3421, 0.52", "67.4309, -1.83924, 3.38333, 0.52", "68.7916, -1.49411, 3.43766, 0.52", "70.0689, -1.213, 3.48926, 0.52", "71.2613, -1.05194, 3.52887, 0.52", "72.6264, -1.0376, 3.56047, 0.52", "73.5707, -1.18679, 3.57721, 0.52", "74.4545, -1.44511, 3.62835, 0.52", "75.0503, -1.64479, 3.69434, 0.52", "75.8025, -1.88497, 3.81309, 0.52", "77.3266, -2.29419, 4.15576, 0.29", "80.0487, -2.83468, 4.92548, 0.29", "82.5147, -3.16651, 5.72214, 0.29", "83.7711, -3.24426, 6.18534, 0.29", "84.6724, -3.25975, 6.54168, 0.44", "85.6258, -3.20591, 6.96726, 0.59", "86.2242, -3.10215, 7.30952, 0.59", "87.1913, -2.60685, 8.09259, 0.59", "87.6961, -2.11162, 8.58604, 0.59", "97.8851, -5.22064, 9.55804, 0.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "29.7953, 10.9349, 7.46249, 1.11", "31.0587, 10.6845, 7.32599, 1.11", "31.8419, 10.4327, 7.2098, 1.11", "32.7366, 10.199, 7.00685, 1.25", "33.4283, 10.091, 6.83908, 1.47", "34.368, 10.0512, 6.61817, 1.4", "35.203, 10.0978, 6.43074, 1.4", "36.1423, 10.2029, 6.18576, 1.18", "37.4072, 10.596, 5.86002, 1.18", "38.2667, 11.0642, 5.64745, 1.18", "38.9976, 11.5384, 5.46593, 1.18", "39.4317, 11.8248, 5.35846, 0.88", "39.8689, 12.0626, 5.24735, 0.88", "40.5654, 12.2764, 5.05672, 0.88", "41.6457, 12.3285, 4.74306, 1.11", "42.472, 12.2453, 4.47863, 1.11", "43.3111, 12.098, 4.19379, 1.11", "44.262, 11.8789, 3.86226, 1.25", "45.2339, 11.6056, 3.518, 1.33", "45.6842, 11.4585, 3.35929, 1.47", "46.4278, 11.2217, 3.11653, 1.77" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-169.742, -125.72, 0.666526, 0.59", "-169.834, -127.177, -0.157438, 0.59", "-169.858, -127.802, -0.482494, 0.59", "-169.859, -128.356, -0.755097, 0.52", "-169.846, -129.001, -1.05466, 0.52", "-169.847, -129.705, -1.36423, 0.88", "-169.851, -130.488, -1.69842, 1.03", "-169.85, -130.971, -1.86393, 1.03", "-169.821, -131.828, -2.14923, 1.03", "-169.772, -132.567, -2.39146, 0.29", "-169.741, -133.095, -2.56014, 0.29", "-169.726, -133.532, -2.69405, 0.29", "-169.742, -134.36, -2.94007, 0.59", "-169.782, -135.05, -3.10537, 0.74", "-169.833, -135.551, -3.19943, 0.88", "-169.898, -136.039, -3.27689, 0.88", "-169.966, -136.497, -3.33393, 0.88", "-170.087, -137.113, -3.3909, 0.81", "-170.396, -138.446, -3.49528, 0.37", "-170.56, -139.168, -3.54664, 1.03", "-170.718, -139.896, -3.5713, 1.33", "-170.865, -140.567, -3.57605, 1.33", "-171.067, -141.43, -3.5643, 1.03", "-171.249, -142.156, -3.54711, 0.74", "-171.424, -142.78, -3.54579, 0.37", "-171.654, -143.617, -3.50261, 0.74", "-171.791, -144.102, -3.4647, 0.74", "-171.954, -144.684, -3.45561, 0.59", "-172.065, -145.117, -3.47983, 0.37", "-172.214, -145.727, -3.57347, 0.37", "-172.479, -146.689, -3.83815, 0.66", "-172.694, -147.345, -4.09211, 0.74", "-173.11, -148.429, -4.58148, 0.52", "-173.295, -148.873, -4.80489, 0.52", "-173.549, -149.395, -5.07544, 1.33", "-173.885, -150.039, -5.42592, 1.55", "-174.326, -150.891, -5.86747, 1.99", "-174.597, -151.414, -6.09488, 2.21", "-174.953, -152.08, -6.33127, 1.99", "-175.402, -152.886, -6.60685, 1.11", "-175.886, -153.806, -6.9372, 0.37", "-176.254, -154.59, -7.23152, 1.11", "-176.426, -154.986, -7.38765, 1.25", "-176.644, -155.497, -7.59005, 1.25", "-177.14, -156.611, -8.06123, 0.29", "-177.464, -157.314, -8.37536, 0.29", "-177.789, -157.958, -8.65951, 0.44", "-178.141, -158.624, -8.95578, 0.59", "-178.562, -159.412, -9.29537, 0.88", "-178.914, -160.072, -9.56585, 0.96", "-179.288, -160.713, -9.80109, 0.66", "-179.783, -161.489, -10.0338, 0.37", "-180.157, -162.047, -10.1838, 0.29", "-180.562, -162.639, -10.3071, 0.29", "-180.908, -163.167, -10.3931, 0.29", "-181.379, -163.888, -10.4776, 0.29", "-182.086, -164.881, -10.5734, 0.74", "-182.628, -165.58, -10.5949, 1.03", "-183.295, -166.402, -10.5788, 2.28", "-183.816, -167.007, -10.5383, 2.8", "-184.318, -167.58, -10.4957, 3.09", "-185.127, -168.532, -10.4414, 1.84", "-186.067, -169.62, -10.3818, 0.29", "-186.526, -170.182, -10.3581, 0.29", "-187.131, -170.976, -10.3542, 0.29", "-187.737, -171.847, -10.3668, 0.29", "-188.148, -172.568, -10.4013, 0.88", "-188.463, -173.212, -10.4513, 1.11", "-188.714, -173.759, -10.5195, 0.81", "-188.916, -174.233, -10.5819, 0.52", "-189.222, -175.029, -10.6939, 0.29", "-189.561, -175.974, -10.8257, 0.29", "-189.832, -176.783, -10.942, 0.29", "-189.984, -177.22, -11.0038, 0.29", "-190.273, -178.09, -11.1296, 0.81", "-190.516, -178.898, -11.2512, 1.11", "-190.689, -179.532, -11.351, 0.88", "-190.932, -180.431, -11.4955, 0.29", "-191.222, -181.528, -11.671, 0.29", "-191.517, -182.498, -11.8513, 0.29", "-191.633, -182.849, -11.9234, 0.29", "-191.913, -183.682, -12.1145, 0.74", "-192.119, -184.273, -12.2638, 0.74", "-192.403, -185.102, -12.489, 0.44", "-192.725, -186.062, -12.7657, 0.29", "-192.891, -186.537, -12.9061, 0.29", "-193.108, -187.207, -13.0808, 0.29", "-193.32, -188.024, -13.2666, 0.29", "-193.418, -188.504, -13.3521, 0.74", "-193.496, -188.956, -13.4094, 0.74", "-193.621, -189.786, -13.4659, 0.44", "-193.773, -190.729, -13.5106, 0.29", "-193.909, -191.554, -13.5203, 0.74", "-194.009, -192.135, -13.5198, 1.11", "-194.109, -192.624, -13.5172, 1.69", "-194.199, -193.033, -13.5184, 1.92", "-194.334, -193.622, -13.5331, 1.92", "-194.534, -194.497, -13.5921, 1.62", "-194.78, -195.551, -13.6832, 0.29", "-194.975, -196.39, -13.7729, 0.22", "-195.151, -197.081, -13.8519, 0.22", "-195.406, -198.01, -13.9723, 0.59", "-195.636, -198.775, -14.0833, 0.74", "-195.814, -199.308, -14.1612, 0.74", "-196.062, -199.994, -14.2495, 0.44", "-196.3, -200.577, -14.3144, 0.29", "-196.579, -201.167, -14.3463, 0.29", "-197.23, -202.366, -14.332, 0.44", "-197.615, -202.983, -14.3097, 0.59", "-198.004, -203.556, -14.2837, 0.59", "-198.472, -204.204, -14.2703, 0.52", "-199.199, -205.164, -14.2756, 1.33", "-199.808, -205.931, -14.303, 2.06", "-200.387, -206.661, -14.3623, 2.21", "-200.814, -207.237, -14.4448, 2.21", "-201.445, -208.163, -14.6338, 0.81", "-201.839, -208.82, -14.8187, 0.29", "-202.149, -209.407, -15.0283, 0.44", "-202.347, -209.851, -15.2016, 0.44", "-202.6, -210.506, -15.4577, 0.29", "-202.791, -210.993, -15.661, 0.29", "-203.032, -211.598, -15.9118, 0.29", "-203.208, -211.993, -16.069, 0.74", "-203.389, -212.356, -16.1916, 0.88", "-203.619, -212.791, -16.3126, 0.88", "-203.987, -213.51, -16.4695, 0.29", "-204.343, -214.247, -16.575, 0.29", "-204.661, -215.014, -16.6276, 0.29", "-204.999, -215.954, -16.659, 0.52", "-205.146, -216.4, -16.6605, 0.52", "-205.383, -217.226, -16.6371, 0.29", "-205.51, -217.808, -16.5962, 0.29", "-205.692, -219.005, -16.4796, 0.59", "-205.769, -219.692, -16.3909, 0.29", "-205.818, -220.151, -16.3105, 0.29", "-205.908, -220.792, -16.1628, 0.74", "-206.105, -221.647, -15.9029, 0.88", "-206.332, -222.29, -15.6679, 0.29", "-206.618, -222.883, -15.4128, 0.29", "-207.046, -223.615, -15.0897, 0.96", "-207.416, -224.181, -14.8652, 1.11", "-207.91, -224.87, -14.6583, 1.11", "-208.455, -225.631, -14.5076, 0.29", "-208.814, -226.185, -14.4472, 0.22", "-209.108, -226.724, -14.4472, 0.44", "-209.395, -227.348, -14.5051, 0.44", "-209.802, -228.373, -14.6926, 0.22", "-210.036, -229.002, -14.8506, 0.22", "-210.202, -229.462, -14.9969, 0.22", "-210.394, -229.976, -15.1804, 0.59", "-210.532, -230.346, -15.3156, 0.74", "-210.956, -231.424, -15.7397, 0.29", "-211.188, -231.993, -15.9744, 0.29", "-211.483, -232.698, -16.2719, 0.44", "-211.755, -233.373, -16.5595, 0.44", "-212.097, -234.275, -16.931, 0.52", "-212.288, -234.793, -17.134, 0.96", "-212.481, -235.315, -17.3197, 1.4", "-212.695, -235.843, -17.5027, 1.4", "-213.227, -237.087, -17.8447, 0.29", "-213.77, -238.319, -18.0997, 0.22", "-214.043, -238.932, -18.1815, 0.37", "-214.483, -239.923, -18.2469, 0.37", "-214.927, -240.908, -18.2569, 0.29", "-215.532, -242.212, -18.2008, 0.74", "-215.863, -242.885, -18.1339, 1.11", "-216.247, -243.599, -18.0415, 1.25", "-216.659, -244.299, -17.9481, 1.11", "-217.062, -244.936, -17.8698, 0.59", "-217.603, -245.743, -17.8023, 0.29", "-217.94, -246.213, -17.8132, 0.29", "-218.582, -247.097, -17.8747, 0.22", "-219.011, -247.696, -17.9372, 0.22", "-219.251, -248.037, -17.9775, 0.66", "-219.621, -248.571, -18.0424, 0.66", "-220.366, -249.692, -18.1614, 0.29", "-220.816, -250.37, -18.2212, 0.29", "-221.288, -251.049, -18.2668, 0.29", "-221.783, -251.719, -18.3031, 0.66", "-222.181, -252.228, -18.3272, 0.66", "-222.824, -253.01, -18.3617, 0.22", "-223.268, -253.532, -18.3873, 0.22", "-224.018, -254.403, -18.4412, 0.22", "-225.339, -255.932, -18.5808, 0.22", "-225.74, -256.42, -18.6525, 0.22", "-226.161, -256.969, -18.7638, 1.11", "-226.393, -257.304, -18.8576, 1.11", "-226.504, -257.498, -18.9223, 1.11", "-226.733, -258.003, -19.1137, 0.66", "-227.028, -258.834, -19.4656, 0.22", "-227.174, -259.347, -19.687, 0.52", "-227.425, -260.527, -20.2051, 0.22", "-227.62, -261.49, -20.6199, 0.22", "-227.703, -261.903, -20.7932, 0.59", "-227.806, -262.431, -21.0058, 0.59", "-227.954, -263.195, -21.315, 0.52", "-228.159, -264.319, -21.7786, 0.22", "-228.267, -264.976, -22.0559, 0.22", "-228.318, -265.369, -22.2246, 0.22", "-228.365, -265.814, -22.4194, 0.66", "-228.396, -266.469, -22.669, 0.81", "-228.358, -267.21, -22.9012, 0.59", "-228.138, -268.313, -23.1431, 1.25", "-227.924, -268.915, -23.235, 1.69", "-227.764, -269.221, -23.2636, 1.92", "-227.035, -270.233, -23.3027, 1.18", "-226.29, -271.025, -23.2754, 0.22", "-225.388, -271.777, -23.2153, 0.22", "-224.765, -272.204, -23.1685, 0.22", "-223.981, -272.685, -23.1319, 0.22", "-223.417, -273.01, -23.1301, 0.66", "-223.004, -273.242, -23.1605, 0.66", "-221.892, -273.859, -23.2942, 0.22", "-221.472, -274.096, -23.3631, 0.37", "-221.05, -274.382, -23.4483, 0.37", "-220.713, -274.661, -23.5231, 0.22", "-220.205, -275.145, -23.6483, 0.22", "-223.682, -283.041, -24.8488, 0.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-169.742, -125.72, 0.666526, 0.37", "-171.071, -125.453, 1.169, 0.37", "-171.636, -125.363, 1.35027, 0.37", "-172.864, -125.205, 1.64781, 0.29", "-173.807, -125.114, 1.8346, 0.44", "-174.723, -125.054, 1.98753, 0.66", "-175.253, -125.033, 2.05732, 0.81", "-175.718, -125.029, 2.08847, 0.81", "-177.178, -125.05, 2.11355, 0.22", "-177.641, -125.065, 2.09581, 0.22", "-178.472, -125.096, 2.06114, 0.74", "-179.155, -125.118, 2.02782, 0.88", "-180.298, -125.156, 1.93996, 0.22", "-180.774, -125.157, 1.86673, 0.22", "-181.222, -125.156, 1.76328, 0.22", "-181.737, -125.158, 1.61537, 0.74", "-182.289, -125.182, 1.41632, 0.88", "-182.907, -125.261, 1.11258, 0.88", "-184.299, -125.578, 0.225828, 0.22", "-184.798, -125.724, -0.135019, 0.22", "-185.213, -125.854, -0.462892, 0.74", "-185.745, -126.039, -0.957944, 0.74", "-186.84, -126.453, -1.912, 0.29", "-187.178, -126.586, -2.18577, 0.29", "-187.727, -126.811, -2.59291, 0.88", "-188.378, -127.048, -3.03896, 1.03", "-190.33, -127.647, -4.2652, 0.22", "-192.17, -128.158, -5.32262, 0.22", "-192.908, -128.341, -5.69011, 0.22", "-193.343, -128.445, -5.89189, 1.11", "-193.866, -128.574, -6.1157, 1.11", "-194.419, -128.713, -6.30248, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-20.6599, -174.818, -1.31288, 0.81", "-19.6504, -175.39, -1.67886, 0.81", "-18.8366, -175.8, -1.98697, 0.52", "-17.6796, -176.336, -2.44103, 0.52", "-17.1755, -176.578, -2.64418, 0.37", "-16.1698, -177.078, -3.0555, 0.37", "-15.7707, -177.284, -3.21983, 0.66", "-15.4181, -177.468, -3.37896, 0.88", "-15.1243, -177.624, -3.50832, 0.88", "-14.3744, -178.11, -3.84135, 0.59", "-13.71, -178.636, -4.13819, 0.66", "-13.0484, -179.24, -4.43199, 0.74", "-12.6433, -179.608, -4.61044, 0.74", "-12.3283, -179.87, -4.74756, 0.52", "-11.8142, -180.251, -4.97171, 0.29", "-11.2614, -180.573, -5.2004, 0.96", "-10.7559, -180.82, -5.39837, 1.03", "-10.42, -180.968, -5.52035, 1.03", "-9.65094, -181.289, -5.77822, 0.66", "-9.32827, -181.428, -5.88797, 0.52", "-8.58768, -181.759, -6.14225, 0.59", "-7.85493, -182.133, -6.39687, 0.59", "-7.18322, -182.526, -6.63716, 0.52", "-6.62983, -182.893, -6.84293, 0.52", "-6.05272, -183.318, -7.0664, 0.96", "-5.69602, -183.589, -7.21665, 1.18", "-5.11016, -184.027, -7.48396, 0.66", "-4.42028, -184.5, -7.8048, 0.37", "-3.98913, -184.767, -8.00808, 0.37", "-3.09693, -185.261, -8.43288, 0.88", "-2.30017, -185.68, -8.78629, 1.03", "-1.69129, -185.999, -9.04495, 0.81", "-1.12576, -186.294, -9.26954, 0.52", "-0.456631, -186.642, -9.51601, 0.52", "0.0713904, -186.928, -9.69323, 0.52", "0.804851, -187.382, -9.91837, 0.52", "1.42668, -187.814, -10.0933, 1.33", "1.816, -188.114, -10.1987, 1.69", "2.2632, -188.503, -10.316, 1.69", "2.98965, -189.197, -10.5672, 1.11", "3.75947, -189.965, -10.8973, 0.44", "4.24318, -190.441, -11.1589, 0.44", "4.62645, -190.81, -11.3978, 0.29", "5.05165, -191.212, -11.7093, 0.29", "5.99619, -192.072, -12.4824, 1.03", "6.26593, -192.307, -12.7265, 1.4", "6.55096, -192.563, -13.0106, 1.4", "7.4422, -193.463, -13.9722, 0.22", "7.91216, -193.967, -14.4869, 0.52", "8.14477, -194.227, -14.7356, 0.52", "8.54787, -194.72, -15.1475, 0.29", "9.1096, -195.436, -15.7293, 0.29", "9.45617, -195.88, -16.0772, 0.29", "9.80473, -196.354, -16.4331, 0.66", "10.0674, -196.71, -16.6749, 0.81", "10.2604, -196.97, -16.8433, 0.81", "10.5922, -197.376, -17.1011, 0.59", "10.9739, -197.79, -17.3804, 0.29", "11.344, -198.202, -17.6249, 0.29", "11.7653, -198.742, -17.8752, 0.66", "12.0919, -199.222, -18.0299, 0.66", "12.5314, -199.964, -18.1765, 0.29", "12.7818, -200.446, -18.2191, 0.29", "13.2037, -201.33, -18.2309, 0.66", "13.4973, -201.959, -18.1982, 0.66", "13.862, -202.783, -18.1071, 0.44", "14.2057, -203.625, -17.9762, 1.47", "14.459, -204.305, -17.8504, 1.84", "14.5978, -204.704, -17.774, 1.84", "14.678, -204.951, -17.7365, 1.84", "14.8864, -205.584, -17.6536, 1.33", "15.1535, -206.345, -17.5754, 0.52", "15.3002, -206.745, -17.5411, 0.52", "15.5021, -207.289, -17.4963, 0.52", "15.827, -208.158, -17.4177, 0.29", "16.001, -208.607, -17.3733, 0.29", "16.2663, -209.248, -17.3007, 0.29", "16.5282, -209.838, -17.2274, 0.44", "16.9227, -210.631, -17.1366, 0.44", "17.2886, -211.275, -17.0869, 0.44", "17.5711, -211.723, -17.0771, 1.33", "17.8966, -212.236, -17.0988, 1.84", "18.2127, -212.689, -17.1464, 1.84", "18.7469, -213.389, -17.2528, 0.96", "19.4494, -214.243, -17.4217, 0.22", "20.0486, -214.931, -17.5841, 0.22", "20.8977, -215.856, -17.8382, 0.22", "21.4118, -216.374, -18.0002, 0.22", "21.9982, -216.904, -18.1915, 0.22", "22.5162, -217.329, -18.3731, 0.44", "23.1321, -217.791, -18.6099, 0.88", "23.7205, -218.217, -18.8631, 1.03", "24.1036, -218.492, -19.038, 1.03", "24.548, -218.837, -19.2485, 0.88", "24.9912, -219.162, -19.4641, 0.29", "25.3141, -219.381, -19.6101, 0.29", "25.8185, -219.687, -19.8044, 0.29", "26.4641, -220.04, -20.0169, 0.37", "26.9594, -220.284, -20.1498, 0.37", "27.4003, -220.475, -20.247, 0.29", "28.257, -220.796, -20.4011, 0.29", "28.9297, -221.027, -20.5189, 0.81", "29.3062, -221.155, -20.5895, 0.81", "30.0289, -221.445, -20.7255, 0.59", "30.5559, -221.718, -20.8145, 0.29", "31.0078, -221.999, -20.8808, 0.29", "31.4819, -222.333, -20.9391, 0.66", "31.8329, -222.595, -20.9669, 0.66", "32.8831, -223.399, -21.0011, 0.29", "33.5533, -223.906, -20.9809, 0.29", "34.2533, -224.433, -20.9043, 0.29", "34.7874, -224.839, -20.8059, 0.29", "35.3207, -225.235, -20.6693, 0.88", "35.5617, -225.412, -20.6034, 0.88", "36.2071, -225.887, -20.4017, 0.66", "37.0971, -226.529, -20.0849, 0.29", "37.5572, -226.866, -19.9002, 0.29", "38.1004, -227.28, -19.6779, 0.66", "38.5528, -227.641, -19.5132, 0.44", "44.7482, -233.109, -19.8867, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-20.6599, -174.818, -1.31288, 2.14", "-21.3341, -176.532, -1.52886, 2.14", "-21.885, -178.096, -1.7021, 1.33", "-22.3766, -179.635, -1.84747, 1.03", "-22.694, -180.805, -1.9386, 1.03", "-22.8916, -181.602, -1.99536, 1.25", "-23.076, -182.382, -2.04637, 1.25", "-23.3446, -183.856, -2.12332, 0.96", "-23.5317, -185.05, -2.15708, 0.96", "-23.8714, -187.144, -2.19481, 0.88", "-24.0726, -188.379, -2.19052, 0.88", "-24.2325, -189.549, -2.17198, 0.96", "-24.3743, -190.884, -2.13628, 0.96", "-24.4692, -192.025, -2.08439, 0.74", "-24.5408, -193.125, -2.01723, 0.52", "-24.5871, -194.038, -1.94401, 0.52", "-24.6322, -195.16, -1.83676, 0.37", "-24.6637, -196.054, -1.74874, 0.74", "-24.7157, -197.025, -1.64818, 0.74", "-24.7836, -198.118, -1.5202, 1.03", "-24.8375, -198.813, -1.43287, 1.18", "-24.9269, -199.775, -1.31724, 1.33", "-25.0106, -200.499, -1.2249, 1.33", "-25.0832, -201.272, -1.09155, 1.18", "-25.167, -202.4, -0.785386, 0.96", "-25.2155, -203.263, -0.462692, 0.81", "-25.2435, -204.134, -0.0750309, 0.81", "-25.2353, -205.092, 0.392571, 0.81", "-25.2122, -205.929, 0.811186, 0.59", "-25.1587, -207.313, 1.47133, 0.66", "-25.1617, -207.904, 1.72739, 0.66", "-25.2507, -208.96, 2.09982, 1.18", "-25.4991, -210.047, 2.34053, 1.47", "-25.8597, -210.982, 2.42727, 1.55", "-26.2385, -211.66, 2.42259, 1.55", "-26.8975, -212.571, 2.35637, 1.4", "-27.8336, -213.624, 2.27771, 1.18", "-28.9627, -214.736, 2.20565, 0.66", "-29.9067, -215.605, 2.17044, 0.74", "-31.1354, -216.697, 2.16164, 1.18", "-32.1506, -217.574, 2.20163, 1.25", "-33.2121, -218.477, 2.3068, 1.25", "-34.1072, -219.225, 2.46413, 1.25", "-35.0132, -219.921, 2.67699, 1.33", "-35.5334, -220.272, 2.83224, 1.33", "-36.3657, -220.751, 3.15965, 1.03", "-37.0768, -221.093, 3.50465, 0.74", "-37.6414, -221.326, 3.80897, 0.59", "-38.381, -221.633, 4.23483, 0.59", "-39.1168, -221.988, 4.67543, 0.88", "-39.843, -222.468, 5.14733, 1.18", "-40.5094, -223.054, 5.64057, 1.18", "-41.0867, -223.681, 6.11592, 1.18", "-41.624, -224.378, 6.5744, 1.18", "-42.0367, -224.985, 6.92448, 1.18", "-42.6092, -225.918, 7.4018, 0.81", "-42.9538, -226.535, 7.67823, 0.59", "-43.2729, -227.18, 7.9204, 0.52", "-43.8899, -228.552, 8.35066, 0.96", "-44.2492, -229.473, 8.57508, 1.18", "-44.5534, -230.329, 8.73563, 1.18", "-44.9522, -231.496, 8.89587, 0.88", "-45.3445, -232.672, 9.01917, 0.59", "-45.668, -233.731, 9.11114, 0.59", "-46.0214, -234.963, 9.21023, 0.59", "-46.3504, -236.114, 9.30417, 0.74", "-46.7342, -237.401, 9.41596, 1.33", "-47.0797, -238.518, 9.51768, 1.69", "-47.5233, -239.899, 9.64847, 1.77", "-47.7775, -240.711, 9.72173, 1.77", "-48.0958, -241.734, 9.78777, 1.77", "-48.3636, -242.717, 9.81364, 1.47", "-48.6208, -243.808, 9.80021, 1.03", "-48.8596, -244.882, 9.75639, 1.03", "-49.1413, -246.136, 9.67545, 1.03", "-49.4186, -247.436, 9.58505, 1.11", "-49.6612, -248.661, 9.50545, 1.33", "-49.8392, -249.778, 9.44241, 1.03", "-50.0049, -251.292, 9.37012, 0.81", "-50.0774, -252.353, 9.33241, 1.03", "-50.1179, -253.688, 9.30327, 0.81", "-50.1187, -254.416, 9.29919, 0.81", "-50.0803, -256.387, 9.29032, 0.74", "-50.0035, -258.368, 9.28273, 0.74", "-49.909, -259.961, 9.27196, 0.74", "-49.7745, -262.288, 9.25792, 0.74", "-49.7195, -263.893, 9.24656, 0.74", "-49.7237, -264.935, 9.2472, 1.18", "-49.8031, -266.004, 9.27452, 1.4", "-49.9977, -267.112, 9.3477, 1.4", "-50.3141, -268.16, 9.47134, 1.47", "-50.8638, -269.314, 9.67872, 1.55", "-51.3091, -270.003, 9.83629, 1.55", "-52.1606, -271.073, 10.1354, 1.11", "-53.2949, -272.272, 10.5393, 0.88", "-54.123, -273.049, 10.8635, 0.88", "-55.0725, -273.845, 11.2634, 1.03", "-55.7295, -274.363, 11.5464, 1.03", "-56.2493, -274.784, 11.7781, 1.03", "-57.0016, -275.493, 12.157, 0.81", "-57.858, -276.499, 12.6289, 0.59", "-58.7837, -277.885, 13.174, 0.59", "-59.3584, -278.964, 13.5368, 0.88", "-59.7804, -279.965, 13.8294, 0.88", "-60.3114, -281.538, 14.2174, 0.74", "-60.5986, -282.622, 14.4387, 0.96", "-60.8299, -283.69, 14.5969, 1.11", "-60.9634, -284.457, 14.687, 1.11", "-61.097, -285.265, 14.7531, 0.88", "-61.3076, -286.374, 14.7874, 0.66", "-61.4773, -287.153, 14.7911, 0.66", "-61.7595, -288.463, 14.7997, 0.96", "-61.9675, -289.464, 14.8007, 0.96", "-62.2232, -290.745, 14.7936, 0.66", "-62.4567, -291.914, 14.7852, 0.74", "-62.8159, -293.791, 14.7891, 0.96", "-63.0089, -294.874, 14.8193, 0.96", "-63.2027, -296.005, 14.8555, 0.96", "-63.4403, -297.301, 14.8798, 0.66", "-63.8045, -299.212, 14.8833, 0.66", "-64.1222, -301.038, 14.8266, 0.66", "-64.2968, -302.128, 14.7553, 0.81", "-64.5739, -304.035, 14.5823, 0.74", "-64.769, -305.546, 14.4059, 0.74", "-64.9366, -307.139, 14.1823, 0.96", "-65.05, -308.477, 13.9709, 0.96", "-65.1213, -309.364, 13.8376, 1.62", "-65.1797, -309.852, 13.79, 1.62", "-65.2814, -310.494, 13.788, 1.62", "-65.4573, -311.435, 13.8428, 1.4", "-65.6774, -312.417, 13.9425, 0.88", "-65.9711, -313.675, 14.1012, 0.59", "-66.3567, -315.386, 14.3342, 0.81", "-66.6655, -316.763, 14.5332, 0.96", "-66.9029, -317.875, 14.6836, 0.96", "-67.1703, -319.217, 14.8373, 1.11", "-67.3481, -320.095, 14.9271, 1.11", "-67.5011, -320.773, 14.9902, 1.33", "-67.6638, -321.433, 15.049, 1.33", "-67.9931, -322.507, 15.1789, 1.03", "-68.396, -323.565, 15.3492, 0.66", "-68.7337, -324.354, 15.4978, 0.37", "-68.9894, -324.93, 15.6118, 0.37", "-69.2988, -325.685, 15.7565, 0.37", "-69.5756, -326.402, 15.8923, 1.03", "-69.8744, -327.2, 16.0408, 1.25", "-70.0665, -327.794, 16.1437, 1.25", "-70.3688, -328.904, 16.3127, 0.96", "-70.701, -330.3, 16.4988, 0.52", "-70.9862, -331.557, 16.6492, 0.52", "-71.358, -333.309, 16.8324, 0.52", "-71.6202, -334.736, 16.9599, 0.81", "-71.8025, -335.777, 17.0534, 1.03", "-71.9744, -336.718, 17.1425, 1.03", "-72.114, -337.443, 17.213, 0.81", "-72.3008, -338.317, 17.2994, 0.81", "-72.6076, -339.543, 17.4223, 0.59", "-73.0119, -340.828, 17.5613, 0.44", "-73.6525, -342.443, 17.7818, 0.88", "-73.986, -343.134, 17.8975, 0.88", "-74.492, -344.027, 18.0733, 0.59", "-75.0334, -344.786, 18.2651, 0.59", "-75.9075, -345.736, 18.5628, 0.59", "-76.8627, -346.566, 18.8728, 0.81", "-77.4117, -346.961, 19.0496, 0.81", "-77.8566, -347.245, 19.1917, 0.81", "-78.8667, -347.792, 19.5071, 0.59", "-79.9811, -348.279, 19.8501, 0.88", "-81.0938, -348.668, 20.1844, 1.03", "-82.1603, -348.981, 20.4961, 1.03", "-83.042, -349.188, 20.7581, 0.59", "-83.8345, -349.35, 21.0048, 0.59", "-84.5048, -349.49, 21.2234, 0.59", "-85.0751, -349.607, 21.4296, 0.59", "-85.6793, -349.762, 21.6566, 0.59", "-86.4646, -350.007, 21.9658, 0.44", "-87.6335, -350.464, 22.4439, 0.81", "-88.6015, -350.925, 22.859, 1.11", "-89.6475, -351.517, 23.3332, 0.81", "-90.6868, -352.209, 23.8221, 0.66", "-91.1604, -352.569, 24.0492, 0.66", "-91.7276, -353.063, 24.3248, 0.52", "-92.3716, -353.683, 24.6478, 0.52", "-93.0192, -354.388, 24.9796, 0.52", "-93.6662, -355.147, 25.3171, 0.52", "-94.0542, -355.65, 25.5239, 1.11", "-94.9141, -356.878, 25.9739, 1.4", "-95.3784, -357.615, 26.2121, 1.84", "-95.8909, -358.508, 26.4564, 2.43" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.2675, -93.6997, -7.23874, 0.66", "-9.24826, -95.2202, -7.23421, 0.66", "-9.25196, -96.1579, -7.22951, 0.37", "-9.2575, -96.7839, -7.24838, 0.81", "-9.257, -97.5918, -7.29294, 1.03", "-9.25901, -98.294, -7.33641, 1.11", "-9.26997, -99.0435, -7.39209, 0.88", "-9.29618, -99.906, -7.48358, 0.59", "-9.31688, -100.908, -7.62781, 0.29", "-9.31992, -101.633, -7.75862, 0.29", "-9.30975, -101.965, -7.83144, 0.29", "-9.24828, -102.708, -8.0415, 0.74", "-9.14623, -103.396, -8.28044, 1.11", "-9.05668, -103.829, -8.44723, 1.11", "-8.90666, -104.465, -8.70227, 1.11", "-8.70387, -105.202, -8.97856, 0.81", "-8.34651, -106.42, -9.38298, 0.44", "-8.00352, -107.58, -9.7083, 0.59", "-7.81181, -108.281, -9.86888, 0.88", "-7.63387, -109.021, -9.99437, 0.88", "-7.41708, -110.085, -10.117, 0.81", "-7.24031, -111.133, -10.1729, 0.44", "-7.12681, -111.963, -10.1643, 1.03", "-7.04994, -112.66, -10.1365, 0.74", "-6.97118, -113.533, -10.101, 0.52", "-6.92189, -114.21, -10.0809, 0.88", "-6.90224, -114.831, -10.0932, 1.18", "-6.89015, -115.369, -10.1131, 1.18", "-6.88533, -115.985, -10.1395, 0.88", "-6.88557, -117.057, -10.1951, 0.29", "-6.89538, -117.868, -10.2447, 0.29", "-6.92676, -119.028, -10.3356, 1.03", "-6.94838, -119.798, -10.4095, 1.47", "-6.96321, -120.284, -10.4566, 1.47", "-6.97635, -120.818, -10.5104, 1.47", "-6.97842, -121.614, -10.5964, 1.25", "-6.9632, -122.588, -10.6969, 0.44", "-6.92906, -123.392, -10.7745, 0.44", "-6.89006, -124.176, -10.8577, 0.44", "-6.86554, -124.578, -10.904, 0.59", "-6.806, -125.524, -11.015, 0.59", "-6.75013, -126.244, -11.1078, 0.37", "-6.70215, -126.845, -11.1858, 0.81", "-6.65586, -127.396, -11.2501, 1.03", "-6.62146, -127.799, -11.2903, 1.03", "-6.58506, -128.299, -11.3258, 0.59", "-6.51723, -129.115, -11.3727, 0.22", "-6.45751, -129.625, -11.406, 0.22", "-6.37158, -130.227, -11.45, 0.22", "-6.26782, -130.874, -11.5009, 0.66", "-6.13349, -131.648, -11.5692, 0.88", "-5.91613, -132.774, -11.6827, 0.88", "-5.65553, -134.084, -11.8216, 0.96", "-5.46302, -135.069, -11.942, 1.18", "-5.32564, -135.868, -12.0489, 0.66", "-5.21987, -136.524, -12.1374, 0.52", "-5.04617, -137.777, -12.3068, 0.52", "-4.93397, -138.745, -12.4366, 0.81", "-4.8342, -139.723, -12.5712, 0.52", "-4.75788, -140.454, -12.6702, 0.52", "-4.66918, -141.318, -12.805, 1.47", "-4.57784, -142.202, -12.9656, 1.77", "-4.50897, -142.882, -13.1182, 1.77", "-4.46221, -143.273, -13.2201, 1.77", "-4.36764, -143.918, -13.4017, 1.25", "-4.24464, -144.664, -13.62, 0.81", "-4.10098, -145.571, -13.8868, 0.44", "-3.91325, -146.707, -14.2191, 0.37", "-3.79592, -147.406, -14.4187, 0.52", "-3.64068, -148.25, -14.659, 0.52", "-3.51348, -148.882, -14.8388, 0.66", "-3.33104, -149.713, -15.0826, 0.66", "-3.09942, -150.773, -15.4363, 0.88", "-2.89982, -151.661, -15.7688, 1.25", "-2.78906, -152.16, -15.9828, 1.25", "-2.68954, -152.588, -16.1882, 1.25", "-2.48909, -153.427, -16.6279, 1.11", "-2.31015, -154.165, -17.0416, 0.74", "-2.15315, -154.812, -17.4249, 0.29", "-2.06491, -155.195, -17.659, 0.29", "-1.8575, -156.131, -18.2142, 0.44", "-1.73932, -156.669, -18.5091, 0.88", "-1.63869, -157.16, -18.7402, 1.33", "-1.52297, -157.744, -18.9706, 1.47", "-1.40356, -158.38, -19.1789, 1.47", "-1.2973, -158.947, -19.3368, 1.25", "-1.15091, -159.723, -19.5234, 0.44", "-0.914506, -160.864, -19.7312, 0.29", "-0.719055, -161.77, -19.8415, 0.29", "-0.518989, -162.698, -19.9055, 0.29", "-0.363576, -163.439, -19.9218, 0.74", "-0.262233, -163.965, -19.9101, 0.88", "-0.0895555, -165.037, -19.8337, 0.96", "0.0119367, -165.956, -19.7335, 1.03", "0.0419958, -166.651, -19.6484, 1.03", "0.0378714, -167.345, -19.55, 0.59", "0.0161085, -168.088, -19.4448, 0.22", "-0.00369713, -168.555, -19.3911, 0.22", "-0.0638776, -169.631, -19.3227, 0.96", "-0.104816, -170.267, -19.2993, 1.11", "-0.133612, -170.967, -19.2631, 1.11", "-0.133451, -171.635, -19.216, 0.59", "-0.107407, -172.314, -19.1621, 0.29", "-0.063158, -172.893, -19.1085, 0.29", "-0.0181348, -173.376, -19.0524, 0.29", "0.0928864, -174.423, -18.9147, 0.44", "0.197635, -175.31, -18.778, 0.66", "0.313514, -176.248, -18.626, 0.66", "0.401721, -176.925, -18.5245, 0.81", "0.497474, -177.677, -18.4288, 0.81", "0.58687, -178.395, -18.3509, 0.52", "0.671805, -179.308, -18.267, 0.66", "0.723043, -179.985, -18.2053, 0.66", "0.755481, -181.126, -18.1383, 0.37", "0.742198, -182.136, -18.115, 0.37", "0.697744, -182.943, -18.1212, 1.03", "0.614059, -183.754, -18.1723, 1.47", "0.490441, -184.55, -18.2602, 1.62", "0.192231, -185.972, -18.4761, 0.88", "-0.0846083, -186.897, -18.6617, 0.59", "-0.365462, -187.604, -18.8339, 0.37", "-0.928132, -188.744, -19.1298, 0.29", "-1.11748, -189.082, -19.2058, 0.29", "-1.4161, -189.567, -19.2872, 0.29", "-1.96425, -190.47, -19.3773, 0.29", "-2.50575, -191.323, -19.4521, 0.59", "-3.06418, -192.228, -19.5202, 0.59", "-3.41234, -192.788, -19.5556, 0.44", "-3.84888, -193.461, -19.6027, 0.44", "-4.15365, -193.871, -19.6542, 0.29", "-4.62068, -194.456, -19.7683, 1.4", "-5.34319, -195.128, -19.9681, 1.62", "-6.02784, -195.593, -20.1404, 1.4", "-6.69917, -195.932, -20.2857, 1.11", "-7.81498, -196.393, -20.4858, 0.81", "-8.43366, -196.631, -20.5921, 0.59", "-9.12159, -196.915, -20.7299, 0.74", "-9.78669, -197.255, -20.8854, 0.81", "-10.3067, -197.679, -21.0369, 0.52", "-10.693, -198.104, -21.1762, 0.52", "-11.0393, -198.576, -21.3014, 0.74", "-11.5223, -199.248, -21.4968, 0.74", "-11.7742, -199.663, -21.6097, 0.74", "-12.0388, -200.132, -21.7543, 0.52", "-12.4204, -200.87, -21.9559, 0.52", "-12.6234, -201.276, -22.0547, 0.52", "-12.9924, -202.073, -22.2073, 1.69", "-13.2035, -202.6, -22.2789, 2.14", "-13.5672, -203.713, -22.3917, 1.55", "-13.8816, -204.88, -22.4753, 0.29", "-14.0372, -205.562, -22.5078, 0.29", "-14.2285, -206.5, -22.5336, 0.44", "-14.3937, -207.395, -22.5315, 0.59", "-14.5318, -208.189, -22.5129, 0.59", "-14.6587, -208.998, -22.4667, 0.29", "-14.7281, -209.434, -22.4422, 0.29", "-14.8233, -210.041, -22.4089, 0.96", "-14.8989, -210.574, -22.3837, 1.03", "-14.9883, -211.314, -22.3608, 0.52", "-15.0787, -212.276, -22.3495, 0.29", "-15.1158, -212.822, -22.3508, 0.81", "-15.1469, -213.456, -22.3559, 0.96", "-15.1672, -213.945, -22.3625, 0.96", "-15.2022, -214.801, -22.3766, 0.29", "-15.2557, -215.779, -22.384, 0.29", "-15.3357, -216.803, -22.4107, 1.47", "-15.3994, -217.52, -22.4411, 1.92", "-15.429, -217.868, -22.4608, 1.92", "-15.4976, -218.735, -22.506, 1.33", "-15.5662, -219.698, -22.5649, 0.29", "-15.6336, -220.68, -22.6344, 0.29", "-15.6846, -221.464, -22.7024, 0.29", "-15.7946, -223.165, -22.8659, 0.29", "-15.857, -224.323, -22.9752, 1.4", "-15.8847, -225.028, -23.04, 2.14", "-15.8926, -225.335, -23.0673, 2.28", "-15.8957, -225.837, -23.1055, 2.28", "-15.8947, -226.356, -23.1298, 1.92", "-15.8776, -227.11, -23.1083, 0.88", "-15.8284, -228.261, -23.0125, 0.29", "-15.7836, -228.965, -22.9216, 0.29", "-15.7212, -229.753, -22.7983, 0.29", "-15.6112, -230.987, -22.5818, 0.29", "-15.4931, -232.25, -22.361, 0.96", "-15.4121, -233.096, -22.2235, 1.62", "-15.3654, -233.574, -22.1496, 1.62", "-15.3255, -234.025, -22.0891, 1.62", "-15.2586, -234.996, -21.9929, 1.11", "-15.2217, -236.185, -21.9733, 0.29", "-15.2285, -237.072, -22.006, 0.29", "-15.2501, -237.774, -22.0467, 0.59", "-15.27, -238.123, -22.071, 0.66", "-15.3034, -238.545, -22.1017, 0.66", "-15.4223, -239.708, -22.1824, 0.29", "-15.6095, -241.056, -22.2838, 0.29", "-15.7851, -242.102, -22.3593, 0.96", "-15.9512, -242.927, -22.4037, 1.4", "-16.0857, -243.546, -22.4234, 1.4", "-16.2277, -244.187, -22.4311, 1.4", "-16.4147, -245.034, -22.4192, 0.88", "-16.6447, -246.071, -22.3967, 0.29", "-16.8462, -247.018, -22.3653, 0.29", "-17.0569, -247.976, -22.3227, 0.44", "-17.199, -248.583, -22.2827, 0.66", "-17.3167, -249.071, -22.2367, 0.66", "-17.5172, -249.941, -22.1215, 0.29", "-17.6339, -250.464, -22.0496, 0.29", "-17.7961, -251.131, -21.9817, 0.29", "-18.058, -252.046, -21.9344, 0.29", "-18.2302, -252.568, -21.9344, 0.52", "-18.4784, -253.292, -21.9702, 0.66", "-18.6752, -254.011, -22.0144, 0.66", "-18.8869, -255.125, -22.108, 1.4", "-18.9795, -256.096, -22.2314, 2.28", "-18.9963, -257.059, -22.3906, 2.5", "-18.9558, -257.598, -22.4867, 2.5", "-18.5948, -259.471, -22.8492, 0.22", "-18.3591, -260.223, -22.9941, 0.22", "-17.9325, -261.171, -23.1775, 0.37", "-17.606, -261.727, -23.2864, 0.44", "-17.0297, -262.54, -23.5538, 0.29", "-16.4427, -263.284, -23.9473, 0.88", "-16.1469, -263.627, -24.2682, 1.4", "-15.947, -263.872, -24.5653, 1.4", "-15.7172, -264.222, -25.0345, 1.11", "-15.1275, -265.435, -26.719, 0.29", "-14.9788, -265.876, -27.3203, 0.29", "-14.8001, -266.654, -28.3161, 0.81", "-14.7326, -267.167, -28.8523, 0.81", "-14.6597, -268.267, -29.7846, 0.22", "-14.6476, -268.732, -30.1007, 0.22", "-14.6352, -269.457, -30.4515, 0.44", "-14.632, -269.868, -30.6126, 0.59", "-14.6221, -271.595, -31.1583, 0.22", "-14.6252, -272.199, -31.3353, 0.74", "-14.632, -272.736, -31.4805, 1.03", "-14.6288, -273.311, -31.628, 1.03", "-14.6199, -273.873, -31.7652, 0.74", "-14.6075, -274.396, -31.8922, 0.37", "-14.5642, -275.722, -32.2262, 0.22", "-14.5348, -277.043, -32.5575, 0.22", "-14.5235, -278.037, -32.7971, 0.88", "-14.5219, -278.772, -32.9694, 1.62", "-14.5259, -279.177, -33.062, 1.84", "-14.5398, -279.665, -33.1668, 1.84", "-14.5883, -280.673, -33.3629, 0.52", "-14.6605, -281.525, -33.5109, 0.22", "-14.7478, -282.21, -33.618, 0.22", "-14.8449, -282.801, -33.6996, 0.37", "-14.8887, -283.032, -33.7215, 0.37", "-15.0225, -283.603, -33.7617, 0.22", "-15.1489, -284.069, -33.7828, 0.74", "-15.3045, -284.598, -33.8049, 0.74", "-15.4518, -285.078, -33.8167, 0.59", "-15.7859, -286.118, -33.8238, 0.22", "-15.9501, -286.599, -33.812, 0.22", "-16.1819, -287.244, -33.7521, 0.59", "-16.3548, -287.71, -33.6723, 0.59", "-16.5216, -288.19, -33.5449, 0.29", "-16.6968, -288.682, -33.3832, 0.22", "-16.986, -289.362, -33.1507, 0.37", "-17.3873, -290.181, -32.8572, 0.44", "-17.8064, -290.768, -32.6497, 0.59", "-18.4099, -291.371, -32.4544, 0.37", "-18.8208, -291.639, -32.3747, 0.22", "-19.9423, -292.072, -32.2693, 2.21", "-20.4006, -292.131, -32.2655, 2.5", "-22.2901, -291.927, -32.3578, 0.22", "-22.8936, -291.756, -32.4077, 0.22", "-23.7494, -291.363, -32.5316, 0.66", "-24.1752, -291.105, -32.6147, 0.66", "-24.7969, -290.66, -32.7586, 0.37", "-25.6857, -290.003, -33.0007, 1.92", "-26.0038, -289.77, -33.0941, 1.92", "-27.6455, -288.79, -33.6261, 0.44", "-28.3724, -288.445, -33.87, 0.59", "-28.7965, -288.3, -33.9935, 0.37", "-29.4211, -288.189, -34.1243, 0.37", "-30.0551, -288.14, -34.2413, 0.22", "-31.5153, -288.164, -34.4161, 0.29", "-31.9907, -288.25, -34.4111, 0.22", "-32.7474, -288.429, -34.3577, 0.22", "-33.7796, -288.672, -34.2558, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-9.2675, -93.6997, -7.23874, 0.74", "-10.965, -95.4208, -6.14469, 0.74", "-11.6414, -96.041, -5.70765, 0.74", "-12.6444, -96.8285, -5.09969, 0.74", "-13.3633, -97.2983, -4.68759, 0.52", "-14.1461, -97.6525, -4.29209, 0.52", "-14.9254, -97.9006, -3.94298, 0.88", "-15.6591, -97.8904, -3.73915, 0.88", "-16.9159, -97.6629, -3.51294, 0.59", "-17.7312, -97.4517, -3.41078, 0.37", "-19.0222, -97.165, -3.31562, 0.37", "-19.8334, -97.0754, -3.31609, 1.11", "-20.5315, -97.1451, -3.36664, 1.47", "-21.202, -97.3209, -3.42389, 1.47", "-21.6803, -97.4943, -3.45254, 1.47", "-22.7606, -97.9021, -3.49183, 0.96", "-23.7103, -98.1992, -3.49068, 0.59", "-24.5566, -98.3797, -3.42831, 0.59", "-25.3908, -98.5009, -3.27864, 0.59", "-26.2567, -98.6237, -3.09422, 0.81", "-27.0694, -98.7431, -2.90077, 0.81", "-27.6827, -98.8355, -2.71179, 0.81", "-28.3951, -98.9756, -2.46803, 0.81", "-29.2128, -99.4096, -2.31776, 0.22", "-29.8261, -100.323, -2.46503, 0.22", "-30.2489, -101.049, -2.64987, 0.66", "-30.4894, -101.481, -2.78266, 0.88", "-30.8499, -102.106, -3.00234, 0.88", "-31.4111, -102.836, -3.35992, 0.44", "-32.242, -103.562, -3.80148, 1.4", "-33.0149, -103.959, -4.13799, 2.14", "-33.3646, -104.061, -4.27966, 2.58", "-34.0967, -104.148, -4.54473, 2.36", "-36.0932, -104.188, -5.24281, 1.69", "-37.1375, -104.143, -5.5825, 0.37", "-38.3736, -104.038, -5.90358, 0.37", "-39.3566, -103.945, -6.10505, 0.37", "-41.2874, -103.823, -6.40685, 1.92", "-42.0668, -103.814, -6.50023, 2.14", "-42.8273, -103.871, -6.56268, 2.5", "-45.0752, -104.26, -6.79613, 0.44", "-45.7759, -104.443, -6.88249, 0.44", "-46.8673, -104.747, -7.05706, 0.44", "-47.8841, -104.992, -7.26007, 0.44", "-48.9457, -105.178, -7.49205, 1.4", "-50.1207, -105.336, -7.7728, 2.06", "-51.1987, -105.463, -8.07901, 2.06", "-52.5416, -105.548, -8.49399, 0.66", "-53.627, -105.582, -8.88248, 0.81", "-54.8281, -105.611, -9.37635, 0.52", "-55.8626, -105.68, -9.91385, 1.77", "-56.6024, -105.789, -10.3996, 2.28", "-58.85, -106.384, -12.2485, 1.33", "-59.637, -106.724, -13.0505, 1.77", "-60.1018, -106.966, -13.5936, 1.77", "-60.9597, -107.454, -14.6683, 0.74", "-61.6274, -107.852, -15.5331, 0.52", "-62.6101, -108.491, -16.7758, 0.52", "-63.6038, -109.262, -18.0303, 0.88", "-64.5859, -110.012, -19.1255, 1.47", "-65.57, -110.764, -20.1073, 0.22", "-66.0674, -111.158, -20.5613, 0.22", "-66.6853, -111.699, -21.0897, 0.81", "-67.2588, -112.29, -21.5596, 0.96", "-67.9452, -113.083, -22.094, 1.55", "-68.546, -113.877, -22.5385, 1.55", "-69.1829, -114.743, -22.9931, 0.37", "-69.6448, -115.359, -23.3227, 0.74", "-70.2544, -116.118, -23.7623, 0.81", "-71.0637, -117.114, -24.3932, 0.29", "-71.429, -117.59, -24.7133, 0.96", "-71.9258, -118.285, -25.197, 1.33", "-72.5577, -119.255, -25.9085, 0.74", "-73.0105, -120.06, -26.5219, 0.59", "-73.5812, -121.325, -27.5113, 0.29", "-73.8199, -122.14, -28.1391, 0.29", "-73.9512, -122.887, -28.7328, 0.29", "-73.9678, -123.458, -29.1773, 1.18", "-73.9157, -123.99, -29.6031, 1.69", "-73.7473, -124.756, -30.231, 1.33", "-73.4377, -125.827, -31.144, 0.22", "-73.2945, -126.316, -31.5731, 0.22", "-73.1352, -126.951, -32.1148, 0.96", "-73.0514, -127.404, -32.4783, 1.11", "-72.9286, -128.277, -33.1381, 0.52", "-72.7804, -129.694, -34.1415, 0.22", "-72.7291, -130.369, -34.599, 0.22", "-72.698, -131.112, -35.0856, 0.88", "-72.7043, -131.654, -35.452, 1.03", "-72.7564, -132.591, -36.1112, 0.22", "-72.7875, -133.022, -36.4275, 0.22", "-72.828, -133.65, -36.9089, 0.66", "-72.8563, -134.346, -37.451, 0.74", "-72.8728, -135.963, -38.6919, 0.22", "-72.8534, -137.145, -39.5225, 0.22", "-72.8449, -138.662, -40.4483, 0.96", "-72.8481, -139.241, -40.7567, 1.25", "-72.8766, -140.025, -41.0872, 1.25", "-72.9378, -141.201, -41.4552, 0.66", "-73.0684, -142.664, -41.7686, 0.15", "-73.2852, -143.93, -41.9394, 0.37", "-73.4402, -144.523, -41.9971, 0.37", "-74.1542, -146.696, -42.1768, 0.22", "-74.292, -147.033, -42.2062, 0.74", "-74.6317, -147.752, -42.2829, 0.88", "-75.8114, -150.034, -42.5538, 0.22", "-76.2665, -150.892, -42.6536, 0.74", "-76.7149, -151.726, -42.74, 0.74", "-77.7023, -153.538, -42.9354, 0.22", "-78.5163, -155.059, -43.0869, 0.22", "-79.3888, -156.811, -43.2023, 0.22", "-80.1329, -158.469, -43.2514, 0.22", "-80.4971, -159.374, -43.243, 0.88", "-80.7503, -160.091, -43.2135, 1.11", "-80.9504, -160.82, -43.1617, 1.11", "-81.3259, -162.599, -43.0099, 0.15", "-81.5528, -164.039, -42.8985, 0.15", "-81.6523, -164.837, -42.8412, 0.81", "-81.7258, -165.533, -42.7955, 0.96", "-82.1088, -168.124, -42.8867, 0.22", "-82.2881, -169.34, -42.9653, 0.22", "-82.5113, -170.679, -43.1293, 0.22", "-82.6092, -171.214, -43.2198, 1.18", "-82.7166, -171.724, -43.3349, 1.18", "-83.7892, -175.466, -44.6107, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "12.3503, 149.946, -35.3872, 0.37", "12.7712, 149.235, -34.8317, 0.37", "13.1182, 148.701, -34.4284, 0.52", "13.6122, 147.979, -33.8827, 0.74", "14.0149, 147.406, -33.4627, 1.11", "14.251, 147.084, -33.2218, 1.11", "14.5934, 146.618, -32.8689, 0.81", "15.372, 145.619, -32.0194, 0.22", "15.7453, 145.131, -31.6086, 0.22", "15.9798, 144.799, -31.3609, 0.66", "16.2174, 144.425, -31.1067, 0.66", "16.4461, 144.034, -30.8582, 0.66", "16.865, 143.249, -30.3649, 0.44", "17.2397, 142.468, -29.8825, 0.22", "17.6235, 141.596, -29.3726, 0.22", "17.7963, 141.171, -29.1358, 0.44", "17.9067, 140.874, -28.9947, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "12.3503, 149.946, -35.3872, 0.22", "13.8801, 150.148, -34.916, 0.22", "14.2337, 150.217, -34.8254, 0.44", "15.8562, 150.63, -34.4363, 0.22", "16.559, 150.829, -34.2927, 0.59", "17.1051, 150.988, -34.2091, 0.59", "19.4474, 151.667, -33.8503, 0.22", "22.1699, 152.488, -33.5047, 0.22", "23.1492, 152.807, -33.405, 0.66", "23.9229, 153.088, -33.3605, 0.81", "25.1011, 153.535, -33.3279, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "12.1739, 227.228, 33.8255, 0.59", "13.3361, 228.271, 34.7837, 0.59", "13.7014, 228.624, 35.1053, 0.44", "14.4798, 229.405, 35.7611, 0.22", "15.1473, 230.134, 36.3287, 0.81", "15.5109, 230.537, 36.6205, 0.96", "15.6832, 230.728, 36.7515, 0.96", "16.2314, 231.406, 37.1487, 0.22", "17.0887, 232.512, 37.646, 0.22", "17.8575, 233.557, 37.9957, 1.11", "18.2605, 234.145, 38.1498, 1.47", "18.4541, 234.437, 38.1977, 1.47", "19.2397, 235.726, 38.3011, 0.22", "19.9074, 236.916, 38.2965, 0.22", "20.2708, 237.623, 38.2514, 0.66", "20.4488, 237.975, 38.2126, 0.66", "21.231, 239.663, 37.9608, 0.22", "21.8932, 241.208, 37.6821, 0.22", "22.2499, 242.092, 37.4871, 0.22", "22.644, 243.12, 37.2378, 1.47", "22.8455, 243.709, 37.0817, 1.47", "23.4158, 245.704, 36.5217, 0.22", "23.5672, 246.354, 36.3238, 0.81", "23.6638, 246.902, 36.14, 0.81", "23.8183, 248.246, 35.6596, 0.22", "23.893, 249.314, 35.2512, 0.22", "23.932, 250.427, 34.803, 1.47", "23.9486, 250.889, 34.5977, 1.84", "23.9974, 252.569, 33.8206, 0.22", "24.0143, 253.858, 33.2033, 0.22", "24.0129, 254.306, 32.9704, 0.22", "24.0304, 255.479, 32.316, 1.55", "24.0489, 256.189, 31.887, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "12.1739, 227.228, 33.8255, 0.22", "12.8773, 229.283, 34.1748, 0.22", "13.2701, 230.397, 34.3862, 0.22", "13.5776, 231.258, 34.5603, 0.96", "13.7105, 231.633, 34.6398, 1.18", "13.8469, 232.019, 34.7256, 1.18", "14.0646, 232.651, 34.8694, 0.22", "14.2198, 233.099, 34.9882, 0.44", "14.2948, 233.328, 35.044, 0.44", "14.4956, 233.991, 35.1943, 0.22", "14.6651, 234.574, 35.3235, 0.44", "14.8497, 235.22, 35.4657, 0.44", "15.3824, 237.197, 35.891, 0.22", "15.8284, 238.866, 36.2323, 0.22", "16.0, 239.493, 36.3539, 0.66", "16.0966, 239.838, 36.4168, 0.74", "16.2615, 240.388, 36.5043, 0.22", "16.6912, 241.734, 36.6979, 0.22", "16.9493, 242.527, 36.8011, 1.03", "17.1238, 243.053, 36.8639, 1.25", "17.2566, 243.451, 36.9084, 1.25", "17.7069, 244.792, 37.0501, 0.22", "18.4579, 246.997, 37.2775, 0.22", "18.7143, 247.74, 37.3561, 0.74", "18.8539, 248.167, 37.4092, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "1.59447, 89.231, 21.7992, 0.37", "3.25833, 96.0975, 26.5878, 0.37", "5.53022, 102.499, 31.7264, 0.37", "6.0616, 108.429, 37.8001, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "1.59447, 89.231, 21.7992, 0.22", "5.85634, 99.2387, 21.8841, 0.37", "10.7585, 108.842, 20.6426, 0.37", "16.0909, 118.111, 18.8803, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "97.8851, -5.22064, 9.55804, 0.37", "109.152, -7.60067, 9.45891, 0.37", "120.637, -8.1313, 9.68801, 0.37", "132.018, -7.62768, 11.2399, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "97.8851, -5.22064, 9.55804, 0.22", "103.884, -6.64479, 9.66573, 0.37", "110.034, -6.93288, 9.56044, 0.37", "116.152, -7.60563, 9.77835, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "46.4278, 11.2217, 3.11653, 0.52", "47.9807, 11.3949, 3.47863, 0.52", "48.5863, 11.4335, 3.60965, 0.52", "49.2216, 11.4337, 3.77181, 0.52", "50.4451, 11.3995, 4.10578, 0.52", "51.1792, 11.3545, 4.30966, 0.88", "52.3024, 11.2711, 4.60292, 0.88", "53.1335, 11.2119, 4.80852, 0.88", "54.0229, 11.0526, 4.98119, 0.81", "54.5929, 10.8576, 5.00491, 0.81", "55.4475, 10.4053, 4.90503, 0.59", "56.1249, 9.93976, 4.70792, 0.59", "56.8422, 9.38068, 4.37445, 0.59", "57.5426, 8.81958, 3.95078, 0.74", "58.6248, 7.88685, 3.16175, 0.66", "59.0665, 7.47025, 2.80261, 0.66", "59.7324, 6.78277, 2.21254, 0.52", "60.1828, 6.31015, 1.8002, 0.52", "60.7618, 5.73349, 1.27361, 0.81", "61.4801, 5.02311, 0.608769, 0.81", "61.9565, 4.52115, 0.161655, 0.81", "62.5296, 3.85431, -0.422027, 0.81", "63.2141, 2.95606, -1.17865, 0.88", "63.7588, 2.14825, -1.83317, 1.11", "64.0916, 1.61497, -2.26267, 1.11", "64.7015, 0.529715, -3.11271, 0.88", "65.1178, -0.362279, -3.74885, 0.96", "65.3881, -1.08701, -4.19864, 0.96", "65.5784, -1.71472, -4.53772, 0.96", "65.7375, -2.30112, -4.82626, 0.66", "65.998, -3.25849, -5.2361, 0.66", "66.3919, -4.5477, -5.71339, 0.81", "66.7955, -5.57868, -6.06128, 1.11", "67.3529, -6.74812, -6.42194, 0.96", "67.831, -7.56597, -6.69626, 0.81", "68.5513, -8.57847, -7.07001, 0.81", "69.4417, -9.59201, -7.49969, 0.59", "70.2068, -10.3239, -7.86579, 0.37", "70.9147, -10.9254, -8.21539, 0.37", "71.9622, -11.7656, -8.76853, 0.59", "72.5318, -12.2131, -9.1155, 0.88", "72.8438, -12.4623, -9.34007, 1.11", "73.2422, -12.8129, -9.64899, 1.11", "73.7712, -13.32, -10.0568, 0.74", "74.1968, -13.7047, -10.3712, 0.74", "74.6161, -14.0952, -10.6985, 0.74", "75.2471, -14.6997, -11.2543, 0.74", "75.879, -15.3176, -11.8806, 0.74", "76.4503, -15.8685, -12.4663, 0.66", "76.9892, -16.3717, -13.0323, 0.66", "77.7, -17.0169, -13.8008, 0.96", "78.5296, -17.7796, -14.7606, 1.4", "78.9443, -18.189, -15.3041, 1.62", "79.3625, -18.6327, -15.9211, 1.77" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "46.4278, 11.2217, 3.11653, 0.88", "47.3573, 12.1476, 3.56193, 0.88", "48.2058, 12.8797, 3.95764, 0.88", "49.1765, 13.5736, 4.36837, 0.88", "50.2421, 14.2119, 4.76644, 0.88", "51.517, 14.8648, 5.21118, 0.74", "52.3283, 15.2481, 5.49314, 0.74", "53.4879, 15.697, 5.89361, 0.88", "54.5371, 16.0314, 6.2335, 0.88", "55.4081, 16.275, 6.48942, 0.88", "56.2544, 16.5043, 6.72421, 0.66", "56.8455, 16.6955, 6.88592, 0.66", "57.628, 17.0662, 7.09502, 0.88", "58.0894, 17.3645, 7.2224, 0.88", "58.5261, 17.7029, 7.3459, 0.88", "58.968, 18.0633, 7.46808, 0.88", "59.7924, 18.7192, 7.69075, 0.59", "60.3824, 19.1506, 7.87775, 0.59", "60.8356, 19.4822, 8.05906, 0.81", "61.4289, 19.9468, 8.34791, 0.81", "61.8803, 20.3421, 8.60838, 0.81", "62.3881, 20.82, 8.93078, 0.66", "63.1156, 21.5243, 9.41577, 0.59", "63.8764, 22.4076, 9.98765, 0.59", "64.2792, 22.9639, 10.3115, 0.59", "64.7302, 23.6785, 10.6763, 0.44", "65.0105, 24.1439, 10.8798, 0.44", "65.3114, 24.6458, 11.066, 0.44", "66.0618, 25.8737, 11.4654, 0.44", "66.6599, 26.8011, 11.7557, 0.66", "67.1609, 27.5601, 11.9884, 0.66", "67.7806, 28.4915, 12.2661, 0.74", "68.2641, 29.2194, 12.4786, 0.96", "68.6374, 29.7633, 12.6343, 0.96", "69.1952, 30.4909, 12.8354, 0.66", "69.7447, 31.1723, 13.0213, 0.66", "70.6188, 32.2344, 13.3082, 0.59", "71.4273, 33.2349, 13.6037, 0.59", "71.9497, 33.8896, 13.8123, 0.81", "72.3452, 34.3976, 13.9839, 0.81", "73.0247, 35.2308, 14.2747, 0.52", "73.5555, 35.8213, 14.4838, 0.52", "74.2657, 36.5534, 14.755, 0.52", "74.8652, 37.154, 14.9802, 0.52", "75.4406, 37.7188, 15.1884, 0.37", "76.4682, 38.7053, 15.543, 0.37", "77.1449, 39.3461, 15.7627, 0.59", "77.5782, 39.7331, 15.8839, 0.59", "78.4989, 40.5352, 16.1029, 0.74", "78.979, 40.9583, 16.2179, 0.74", "79.3864, 41.3312, 16.3259, 0.74", "79.9632, 41.9209, 16.5181, 0.74", "80.3466, 42.3495, 16.6248, 0.44", "80.8916, 42.9695, 16.6966, 0.44", "81.3605, 43.4792, 16.6985, 0.81", "82.1489, 44.2975, 16.6326, 0.81", "82.7284, 44.8688, 16.5295, 0.66", "83.7405, 45.833, 16.3025, 0.52", "84.508, 46.5899, 16.0849, 0.44", "85.0133, 47.0867, 15.8985, 0.44", "85.4529, 47.5254, 15.7043, 0.44", "85.7951, 47.867, 15.5219, 0.44", "86.3702, 48.4057, 15.2208, 0.74", "86.8798, 48.8315, 15.0787, 0.59", "87.2235, 49.147, 15.0229, 0.59", "93.7688, 55.7574, 18.5834, 0.59", "100.542, 62.2219, 21.9607, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-95.8909, -358.508, 26.4564, 0.52", "-96.4961, -360.1, 26.5592, 0.52", "-96.747, -360.744, 26.6104, 0.29", "-97.0965, -361.585, 26.6807, 0.44", "-97.4283, -362.367, 26.7438, 0.44", "-97.6934, -362.972, 26.7926, 0.29", "-98.1027, -363.853, 26.859, 0.29", "-98.5276, -364.689, 26.9241, 0.81", "-98.8586, -365.33, 26.9513, 1.18", "-99.0358, -365.68, 26.9566, 1.4", "-99.3174, -366.261, 26.9555, 1.4", "-99.5669, -366.82, 26.9451, 1.11", "-100.064, -368.03, 26.9136, 0.52", "-100.397, -368.981, 26.8828, 0.44", "-100.628, -369.745, 26.8556, 0.74", "-100.889, -370.666, 26.8277, 0.81", "-101.074, -371.361, 26.8059, 0.81", "-101.253, -372.097, 26.7773, 0.74", "-101.458, -373.074, 26.7708, 0.22", "-101.545, -373.526, 26.7721, 0.22", "-101.683, -374.321, 26.7652, 0.22", "-101.772, -375.01, 26.7678, 0.66", "-101.835, -375.732, 26.7895, 0.81", "-101.892, -376.893, 26.8507, 0.66", "-101.893, -377.952, 26.9335, 0.22", "-101.841, -378.899, 27.0233, 0.22", "-101.761, -379.59, 27.0984, 0.22", "-101.661, -380.261, 27.1992, 0.96", "-101.612, -380.606, 27.2603, 1.18", "-101.544, -381.118, 27.3521, 1.18", "-101.481, -381.541, 27.4515, 1.18", "-101.393, -382.345, 27.6396, 0.74", "-101.323, -383.562, 27.9099, 0.22", "-101.316, -383.963, 27.9978, 0.22", "-101.319, -384.43, 28.1019, 0.44", "-101.329, -384.834, 28.1845, 0.44", "-101.353, -385.89, 28.3733, 0.22", "-101.368, -386.554, 28.4684, 0.96", "-101.369, -387.061, 28.5159, 1.18", "-101.364, -387.547, 28.5525, 1.25", "-101.354, -388.471, 28.6118, 0.96", "-101.378, -389.798, 28.6949, 0.29", "-101.425, -390.842, 28.7565, 0.22", "-101.519, -392.019, 28.8179, 0.22", "-101.59, -392.625, 28.8507, 0.81", "-101.674, -393.117, 28.8796, 0.96", "-102.062, -394.828, 29.0053, 0.22", "-102.214, -395.363, 29.0532, 0.22", "-102.481, -396.213, 29.1437, 0.59", "-102.687, -396.836, 29.2201, 0.59", "-102.986, -397.771, 29.3355, 0.52", "-103.212, -398.54, 29.4307, 0.52", "-103.483, -399.586, 29.5714, 0.52", "-103.584, -399.998, 29.6306, 0.96", "-103.744, -400.703, 29.7341, 0.96", "-103.914, -401.497, 29.8522, 0.59", "-104.186, -402.84, 30.0891, 0.22", "-104.454, -404.227, 30.3378, 0.22", "-104.576, -404.877, 30.4585, 0.22", "-104.691, -405.454, 30.5729, 0.96", "-104.771, -405.848, 30.6569, 1.18", "-104.933, -406.632, 30.845, 0.52", "-105.576, -416.202, 30.3688, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-95.8909, -358.508, 26.4564, 0.29", "-97.4497, -357.939, 27.6033, 0.29", "-98.2947, -357.909, 28.1784, 0.37", "-98.6843, -358.019, 28.4245, 0.37", "-99.5649, -358.441, 29.0031, 0.37", "-100.455, -358.904, 29.4589, 0.52", "-101.25, -359.324, 29.8088, 0.59", "-102.359, -360.024, 30.1931, 0.59", "-103.361, -360.683, 30.486, 0.37", "-104.3, -361.303, 30.7221, 0.37", "-105.993, -362.417, 31.0747, 0.37", "-106.778, -362.883, 31.2226, 0.37", "-107.508, -363.279, 31.3553, 0.29", "-108.089, -363.569, 31.4678, 0.29", "-108.738, -363.889, 31.6112, 0.81", "-109.251, -364.17, 31.7448, 0.81", "-109.919, -364.647, 32.0133, 0.81", "-111.027, -365.581, 32.5023, 0.29", "-111.545, -366.084, 32.7508, 0.66", "-111.921, -366.492, 32.9556, 0.66", "-112.262, -366.899, 33.1598, 0.66", "-113.471, -368.457, 33.933, 0.29", "-114.008, -369.18, 34.2714, 0.44", "-114.474, -369.804, 34.562, 0.29", "-115.038, -370.522, 34.8951, 0.74", "-115.465, -371.008, 35.1115, 0.74", "-116.19, -371.705, 35.4264, 0.52", "-117.506, -372.765, 35.9128, 0.29", "-118.301, -373.335, 36.1792, 0.52", "-118.851, -373.686, 36.33, 0.52", "-120.039, -374.363, 36.568, 0.29", "-120.933, -374.817, 36.7239, 0.29", "-121.481, -375.054, 36.8088, 0.59", "-122.139, -375.299, 36.8873, 0.59", "-123.337, -375.721, 37.0023, 0.22", "-124.006, -375.949, 37.079, 0.29", "-125.0, -376.299, 37.2268, 0.29", "-125.468, -376.474, 37.2996, 0.29", "-126.661, -376.977, 37.4915, 0.37", "-127.531, -377.467, 37.7091, 0.37", "-128.385, -378.086, 38.0233, 0.52", "-129.337, -378.938, 38.4485, 1.55", "-129.896, -379.531, 38.7242, 1.92", "-130.418, -380.153, 39.0107, 1.92", "-131.585, -381.704, 39.7514, 0.29", "-132.338, -382.798, 40.2536, 0.29", "-132.932, -383.744, 40.6793, 0.29", "-133.397, -384.512, 41.0329, 0.74", "-133.627, -384.896, 41.21, 0.96", "-133.835, -385.223, 41.3623, 1.11", "-134.438, -386.189, 41.797, 0.52", "-134.8, -386.839, 42.1049, 0.29", "-135.314, -387.782, 42.5919, 0.22", "-135.663, -388.396, 42.9351, 0.44", "-135.963, -388.896, 43.2335, 0.44", "-136.786, -390.268, 44.0765, 0.22", "-137.281, -391.084, 44.5998, 0.22", "-137.76, -391.839, 45.1007, 1.25", "-138.195, -392.522, 45.5756, 1.55", "-138.406, -392.833, 45.8003, 1.62" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "79.3625, -18.6327, -15.9211, 0.74", "80.5019, -19.505, -15.5177, 0.74", "80.8316, -19.76, -15.4258, 0.74", "81.3939, -20.2044, -15.3231, 0.59", "82.0515, -20.7377, -15.2785, 0.59", "82.6602, -21.2454, -15.2987, 0.59", "82.9638, -21.5011, -15.3242, 0.59", "83.5587, -22.0197, -15.4479, 0.59", "84.0644, -22.4657, -15.5877, 0.81", "84.7353, -23.0513, -15.7731, 0.81", "85.2893, -23.5154, -15.9171, 0.37", "85.8647, -23.9703, -16.045, 0.37", "86.5379, -24.4998, -16.1835, 0.37", "87.225, -25.0546, -16.305, 0.37", "87.8836, -25.5764, -16.3896, 0.37", "88.875, -26.3475, -16.4669, 0.22", "89.9334, -27.1604, -16.5179, 0.22", "95.5135, -32.4974, -18.0123, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "79.3625, -18.6327, -15.9211, 0.37", "79.3708, -19.3208, -17.0787, 0.37", "79.4343, -19.7828, -17.78, 0.37", "79.5369, -20.2249, -18.4192, 0.37", "79.6935, -20.7221, -19.0318, 0.37", "79.8584, -21.1624, -19.5465, 0.37", "80.0824, -21.6906, -20.133, 0.29", "80.4787, -22.4173, -20.9735, 0.22", "80.9333, -23.1545, -21.9014, 0.22", "81.5401, -24.0272, -23.1048, 0.22", "81.7689, -24.3322, -23.5703, 1.18", "81.9353, -24.5549, -23.9862, 1.4", "82.263, -25.1331, -25.3934, 1.4", "82.3415, -25.5188, -26.6331, 0.44", "82.312, -25.6422, -27.0644, 0.44", "82.2005, -25.8244, -27.7263, 0.29", "81.942, -26.1704, -28.7848, 0.29", "81.5554, -26.64, -30.0887, 0.22", "81.2094, -27.0711, -31.0109, 0.22", "80.9577, -27.3422, -31.5501, 1.03", "80.8224, -27.489, -31.8138, 1.33", "80.6245, -27.7112, -32.1641, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-138.406, -392.833, 45.8003, 0.29", "-139.009, -392.271, 45.9531, 0.29", "-139.144, -392.147, 45.9832, 0.52", "-139.353, -391.952, 46.0234, 0.59", "-140.557, -390.845, 46.1795, 0.22", "-140.897, -390.539, 46.212, 0.22", "-141.367, -390.126, 46.2454, 0.66", "-141.62, -389.903, 46.2457, 0.66", "-142.7, -388.997, 46.2143, 0.22", "-143.147, -388.641, 46.1904, 0.22", "-143.557, -388.344, 46.1656, 0.52", "-143.848, -388.148, 46.1488, 0.66", "-144.645, -387.653, 46.1072, 0.22", "-146.224, -386.694, 46.0294, 0.22", "-147.242, -386.107, 45.9857, 0.22", "-148.182, -385.568, 45.967, 1.18", "-148.446, -385.42, 45.962, 1.4", "-148.851, -385.2, 45.9574, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-138.406, -392.833, 45.8003, 0.22", "-139.184, -394.282, 46.184, 0.22", "-139.78, -395.475, 46.5517, 0.22", "-140.027, -396.012, 46.7202, 0.44", "-140.132, -396.247, 46.7946, 0.44", "-141.088, -398.505, 47.4908, 0.22", "-141.535, -399.562, 47.8167, 0.44", "-141.91, -400.45, 48.1017, 0.22", "-142.136, -401.05, 48.2953, 0.59", "-142.32, -401.569, 48.467, 0.66", "-142.45, -401.969, 48.6021, 0.44", "-144.678, -411.223, 51.6782, 0.44" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_ChC_b51988187a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_49(0), soma_0(0.49999994654580493)
    connect dend_42(0), soma_0(0.49999994654580493)
    connect dend_27(0), soma_0(0.49999994654580493)
    connect dend_20(0), soma_0(0.49999994654580493)
    connect dend_11(0), soma_0(0.49999994654580493)
    connect dend_0(0), soma_0(0.49999994654580493)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.44259, -9.54825, -1.27888, 2.30647 ) }
    soma_0 { pt3dadd( -1.2819, -8.63231, -1.15821, 3.63473 ) }
    soma_0 { pt3dadd( -1.1212, -7.71637, -1.03754, 6.81375 ) }
    soma_0 { pt3dadd( -0.960502, -6.80044, -0.916865, 9.18535 ) }
    soma_0 { pt3dadd( -0.799804, -5.8845, -0.796194, 10.2157 ) }
    soma_0 { pt3dadd( -0.639107, -4.96856, -0.675522, 11.1797 ) }
    soma_0 { pt3dadd( -0.478409, -4.05262, -0.554851, 12.0566 ) }
    soma_0 { pt3dadd( -0.317712, -3.13668, -0.43418, 12.6775 ) }
    soma_0 { pt3dadd( -0.157014, -2.22074, -0.313508, 13.0617 ) }
    soma_0 { pt3dadd( 0.00368301, -1.3048, -0.192837, 13.2009 ) }
    soma_0 { pt3dadd( 0.16438, -0.388856, -0.0721652, 13.2418 ) }
    soma_0 { pt3dadd( 0.325078, 0.527084, 0.0485063, 12.889 ) }
    soma_0 { pt3dadd( 0.485775, 1.44302, 0.169178, 12.4912 ) }
    soma_0 { pt3dadd( 0.646473, 2.35896, 0.289849, 12.2347 ) }
    soma_0 { pt3dadd( 0.80717, 3.2749, 0.410521, 12.0486 ) }
    soma_0 { pt3dadd( 0.967868, 4.19084, 0.531192, 11.9346 ) }
    soma_0 { pt3dadd( 1.12856, 5.10678, 0.651864, 11.8925 ) }
    soma_0 { pt3dadd( 1.28926, 6.02272, 0.772535, 11.1454 ) }
    soma_0 { pt3dadd( 1.44996, 6.93866, 0.893206, 8.66152 ) }
    soma_0 { pt3dadd( 1.61066, 7.8546, 1.01388, 5.25757 ) }
    soma_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 3.12251 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.66144, -7.4365, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.66144, -7.4365, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.21323, -8.95988, -8.24326, 1.77 ) }
    dend_49 { pt3dadd( -2.87187, -10.0939, -8.41019, 1.77 ) }
    dend_49 { pt3dadd( -2.35013, -11.8714, -8.65655, 1.55 ) }
    dend_49 { pt3dadd( -2.04369, -13.0501, -8.8522, 1.69 ) }
    dend_49 { pt3dadd( -1.83392, -13.9659, -9.02269, 1.77 ) }
    dend_49 { pt3dadd( -1.65014, -14.8569, -9.2289, 1.77 ) }
    dend_49 { pt3dadd( -1.41683, -16.0513, -9.57553, 1.25 ) }
    dend_49 { pt3dadd( -1.03864, -17.8835, -10.0428, 0.74 ) }
    dend_49 { pt3dadd( -1.76562, -17.0852, -10.8434, 0.74 ) }
    dend_49 { pt3dadd( -2.33253, -16.803, -11.6953, 0.74 ) }
    dend_49 { pt3dadd( -3.32658, -16.4193, -13.2268, 1.18 ) }
    dend_49 { pt3dadd( -3.86095, -16.323, -14.1, 1.18 ) }
    dend_49 { pt3dadd( -4.66248, -16.1293, -15.307, 0.52 ) }
    dend_49 { pt3dadd( -5.61097, -15.7767, -16.6037, 0.52 ) }
    dend_49 { pt3dadd( -6.68913, -15.8278, -18.2426, 0.74 ) }
    dend_49 { pt3dadd( -7.14347, -16.0844, -19.3574, 0.74 ) }
    dend_49 { pt3dadd( -7.36023, -16.48, -20.3302, 0.74 ) }
    dend_49 { pt3dadd( -7.71006, -16.9898, -21.7985, 1.11 ) }
    dend_49 { pt3dadd( -8.02234, -17.256, -22.7383, 1.69 ) }
    dend_49 { pt3dadd( -8.53343, -17.4392, -23.6872, 1.77 ) }
    dend_49 { pt3dadd( -9.69775, -17.7916, -25.7842, 1.33 ) }
    dend_49 { pt3dadd( -10.3175, -18.107, -27.0625, 1.4 ) }
    dend_49 { pt3dadd( -10.6825, -18.5271, -28.0226, 1.55 ) }
    dend_49 { pt3dadd( -10.8901, -19.226, -29.028, 1.33 ) }
    dend_49 { pt3dadd( -10.9127, -20.4308, -30.3042, 0.74 ) }
    dend_49 { pt3dadd( -10.7185, -21.4173, -31.0457, 1.03 ) }
    dend_49 { pt3dadd( -10.4347, -22.2456, -31.5145, 1.47 ) }
    dend_49 { pt3dadd( -10.1337, -22.7899, -31.8512, 1.62 ) }
    dend_49 { pt3dadd( -9.65679, -23.44, -32.3156, 1.62 ) }
    dend_49 { pt3dadd( -9.11635, -23.9625, -32.743, 0.52 ) }
    dend_49 { pt3dadd( -8.47396, -24.4539, -33.2145, 0.52 ) }
    dend_49 { pt3dadd( -8.31413, -24.7107, -33.6198, 0.52 ) }
    dend_49 { pt3dadd( -8.34662, -25.2365, -34.6694, 0.66 ) }
    dend_49 { pt3dadd( -8.55442, -25.7526, -35.7786, 0.74 ) }
    dend_49 { pt3dadd( -8.89332, -25.9633, -36.5609, 0.44 ) }
    dend_49 { pt3dadd( -9.47726, -25.9607, -37.3887, 0.44 ) }
    dend_49 { pt3dadd( -10.338, -25.8523, -38.4412, 0.44 ) }
    dend_49 { pt3dadd( -10.9499, -25.9161, -39.3776, 0.44 ) }
    dend_49 { pt3dadd( -11.2901, -26.0419, -40.0417, 0.44 ) }
    dend_49 { pt3dadd( -11.9226, -26.4617, -41.3322, 0.66 ) }
    dend_49 { pt3dadd( -12.2315, -27.1136, -42.6361, 1.11 ) }
    dend_49 { pt3dadd( -12.3913, -27.3525, -43.0889, 0.96 ) }
    dend_49 { pt3dadd( -12.809, -27.8563, -44.1271, 1.18 ) }
    dend_49 { pt3dadd( -12.9715, -28.072, -44.5329, 1.69 ) }
    dend_49 { pt3dadd( -13.2357, -28.4038, -45.1211, 1.69 ) }
    dend_49 { pt3dadd( -14.2423, -29.5785, -47.0893, 0.88 ) }
    dend_49 { pt3dadd( -14.8572, -30.1374, -48.1171, 2.14 ) }
    dend_49 { pt3dadd( -16.2518, -30.8927, -50.0163, 2.28 ) }
    dend_49 { pt3dadd( -16.4477, -30.9473, -50.2336, 2.28 ) }
    dend_49 { pt3dadd( -17.579, -31.0545, -51.289, 0.44 ) }
    dend_49 { pt3dadd( -18.2249, -31.0013, -51.7637, 0.44 ) }
    dend_49 { pt3dadd( -18.9878, -30.8418, -52.2013, 0.81 ) }
    dend_49 { pt3dadd( -19.7705, -30.6377, -52.6687, 0.81 ) }
    dend_49 { pt3dadd( -20.1273, -30.5874, -52.9244, 0.96 ) }
    dend_49 { pt3dadd( -20.8362, -30.6528, -53.5476, 0.66 ) }
    dend_49 { pt3dadd( -21.549, -30.9012, -54.2795, 1.99 ) }
    dend_49 { pt3dadd( -22.0828, -31.1986, -54.897, 2.21 ) }
    dend_49 { pt3dadd( -22.6041, -31.5905, -55.5419, 2.5 ) }
    dend_49 { pt3dadd( -24.0384, -32.9359, -57.4537, 0.66 ) }
    dend_49 { pt3dadd( -24.7819, -33.8137, -58.5827, 0.66 ) }
    dend_49 { pt3dadd( -25.2412, -34.4961, -59.3584, 0.66 ) }
    dend_49 { pt3dadd( -25.7141, -35.3077, -60.1885, 1.55 ) }
    dend_49 { pt3dadd( -25.9338, -35.7069, -60.5561, 2.21 ) }
    dend_49 { pt3dadd( -26.1457, -36.1239, -60.9069, 2.21 ) }
    dend_49 { pt3dadd( -26.7302, -37.4497, -61.9618, 0.29 ) }
    dend_49 { pt3dadd( -27.0428, -38.3048, -62.6951, 0.29 ) }
    dend_49 { pt3dadd( -27.2473, -38.8953, -63.1915, 1.55 ) }
    dend_49 { pt3dadd( -27.5021, -39.6078, -63.7773, 1.99 ) }
    dend_49 { pt3dadd( -27.7365, -40.2455, -64.3141, 2.36 ) }
    dend_49 { pt3dadd( -28.3956, -41.9801, -65.8187, 0.59 ) }
    dend_49 { pt3dadd( -28.7232, -42.8692, -66.6421, 1.84 ) }
    dend_49 { pt3dadd( -28.8521, -43.2819, -67.0709, 1.84 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 95/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -6.50143, -1.72726, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.50143, -1.72726, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -7.03234, -2.69053, 2.11407, 1.92 ) }
    dend_42 { pt3dadd( -7.93543, -4.60062, 2.02223, 1.92 ) }
    dend_42 { pt3dadd( -8.86669, -6.34322, 1.92959, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( -9.58455, -7.52172, 1.85124, 2.36 ) }
    dend_42 { pt3dadd( -10.6018, -8.94776, 1.74322, 2.28 ) }
    dend_42 { pt3dadd( -11.7193, -10.2644, 1.61967, 2.36 ) }
    dend_42 { pt3dadd( -12.9698, -11.4827, 1.45927, 2.36 ) }
    dend_42 { pt3dadd( -14.9105, -12.8486, 1.23031, 1.77 ) }
    dend_42 { pt3dadd( -15.9779, -13.298, 1.15009, 1.77 ) }
    dend_42 { pt3dadd( -17.6517, -13.6644, 1.10548, 1.99 ) }
    dend_42 { pt3dadd( -19.1432, -13.8148, 1.20017, 1.99 ) }
    dend_42 { pt3dadd( -19.8812, -13.8422, 1.29129, 1.99 ) }
    dend_42 { pt3dadd( -20.9812, -13.8969, 1.48755, 1.77 ) }
    dend_42 { pt3dadd( -22.6839, -14.2011, 1.92805, 1.47 ) }
    dend_42 { pt3dadd( -23.9129, -14.6511, 2.27577, 1.47 ) }
    dend_42 { pt3dadd( -25.4619, -15.5678, 2.66718, 1.33 ) }
    dend_42 { pt3dadd( -26.166, -16.1285, 2.7983, 1.99 ) }
    dend_42 { pt3dadd( -27.3629, -17.2749, 2.92967, 1.99 ) }
    dend_42 { pt3dadd( -28.7414, -18.7647, 2.94727, 1.77 ) }
    dend_42 { pt3dadd( -30.2663, -20.5848, 2.81309, 1.92 ) }
    dend_42 { pt3dadd( -31.6764, -22.3148, 2.5254, 1.69 ) }
    dend_42 { pt3dadd( -32.5434, -23.3192, 2.24656, 1.69 ) }
    dend_42 { pt3dadd( -33.6298, -24.4503, 1.83581, 1.84 ) }
    dend_42 { pt3dadd( -34.6208, -25.3964, 1.45735, 1.84 ) }
    dend_42 { pt3dadd( -35.9035, -26.5779, 0.987433, 1.69 ) }
    dend_42 { pt3dadd( -37.3133, -27.8942, 0.547607, 1.55 ) }
    dend_42 { pt3dadd( -38.737, -29.3188, 0.21536, 1.4 ) }
    dend_42 { pt3dadd( -39.9034, -30.4914, -0.0214145, 1.25 ) }
    dend_42 { pt3dadd( -41.1239, -31.774, -0.241272, 1.33 ) }
    dend_42 { pt3dadd( -42.2797, -33.1074, -0.369163, 1.47 ) }
    dend_42 { pt3dadd( -43.3617, -34.522, -0.317295, 1.62 ) }
    dend_42 { pt3dadd( -44.1268, -35.8452, -0.0478092, 1.77 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 29/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.448551, -8.92275, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.448551, -8.92275, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.709916, -10.8169, -4.81754, 2.95 ) }
    dend_27 { pt3dadd( 1.08452, -13.7565, -4.68791, 2.8 ) }
    dend_27 { pt3dadd( 1.30052, -15.7265, -4.56439, 2.8 ) }
    dend_27 { pt3dadd( 1.48865, -17.9293, -4.40874, 3.02 ) }
    dend_27 { pt3dadd( 1.57866, -19.3913, -4.30454, 3.02 ) }
    dend_27 { pt3dadd( 1.61632, -20.8254, -4.19686, 3.02 ) }
    dend_27 { pt3dadd( 1.58002, -22.9862, -4.03171, 3.02 ) }
    dend_27 { pt3dadd( 1.43279, -25.2722, -3.8501, 2.36 ) }
    dend_27 { pt3dadd( 1.03769, -29.2708, -3.65162, 2.36 ) }
    dend_27 { pt3dadd( 0.752471, -31.5108, -3.63225, 2.43 ) }
    dend_27 { pt3dadd( 0.424349, -33.6789, -3.68171, 2.43 ) }
    dend_27 { pt3dadd( -0.00453199, -36.2202, -3.82208, 2.43 ) }
    dend_27 { pt3dadd( -0.671367, -39.729, -4.10856, 2.28 ) }
    dend_27 { pt3dadd( -1.38992, -43.3291, -4.48333, 2.14 ) }
    dend_27 { pt3dadd( -2.39311, -48.0984, -5.06968, 2.06 ) }
    dend_27 { pt3dadd( -3.08935, -51.4084, -5.52767, 2.43 ) }
    dend_27 { pt3dadd( -3.52913, -53.5163, -5.86008, 2.58 ) }
    dend_27 { pt3dadd( -4.00069, -55.7376, -6.25773, 2.58 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 49/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.381405, 7.80525, -7.5337, 1.62 ) }
    dend_20 { pt3dadd( -0.514738, 9.03869, -7.62519, 1.62 ) }
    dend_20 { pt3dadd( -0.725581, 10.8534, -7.67838, 1.92 ) }
    dend_20 { pt3dadd( -1.04355, 13.2774, -7.77038, 1.33 ) }
    dend_20 { pt3dadd( -1.44457, 15.8866, -7.90589, 1.69 ) }
    dend_20 { pt3dadd( -1.77348, 17.8171, -7.97485, 2.21 ) }
    dend_20 { pt3dadd( -2.05541, 19.431, -7.96298, 2.21 ) }
    dend_20 { pt3dadd( -2.39486, 21.2477, -7.88061, 1.99 ) }
    dend_20 { pt3dadd( -2.71343, 22.7926, -7.75556, 1.77 ) }
    dend_20 { pt3dadd( -3.09171, 24.5111, -7.57171, 1.99 ) }
    dend_20 { pt3dadd( -3.50197, 26.3301, -7.36969, 1.99 ) }
    dend_20 { pt3dadd( -4.20324, 29.5256, -7.07513, 1.11 ) }
    dend_20 { pt3dadd( -4.63613, 31.5233, -6.94878, 1.11 ) }
    dend_20 { pt3dadd( -5.10001, 33.5333, -6.89861, 1.25 ) }
    dend_20 { pt3dadd( -5.54227, 35.221, -6.88999, 1.4 ) }
    dend_20 { pt3dadd( -6.12118, 37.0656, -6.98999, 0.81 ) }
    dend_20 { pt3dadd( -6.80297, 38.8128, -7.24561, 0.74 ) }
    dend_20 { pt3dadd( -7.34477, 39.9553, -7.51774, 0.74 ) }
    dend_20 { pt3dadd( -8.01264, 41.1946, -7.88584, 0.74 ) }
    dend_20 { pt3dadd( -8.78879, 42.5444, -8.3539, 0.96 ) }
    dend_20 { pt3dadd( -9.52053, 43.8149, -8.82663, 0.96 ) }
    dend_20 { pt3dadd( -10.284, 45.0906, -9.31283, 1.55 ) }
    dend_20 { pt3dadd( -11.1463, 46.5208, -9.87766, 2.06 ) }
    dend_20 { pt3dadd( -11.8759, 47.8231, -10.4044, 2.43 ) }
    dend_20 { pt3dadd( -12.7126, 49.5768, -11.1195, 2.36 ) }
    dend_20 { pt3dadd( -13.66, 51.9657, -12.0686, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.32144, 8.54325, 0.346303, 2.5 ) }
    dend_11 { pt3dadd( -2.38416, 8.68515, 0.347016, 2.5 ) }
    dend_11 { pt3dadd( -3.37863, 10.6732, 0.308587, 1.77 ) }
    dend_11 { pt3dadd( -4.07276, 12.0166, 0.31569, 1.55 ) }
    dend_11 { pt3dadd( -4.88688, 13.5457, 0.381988, 1.55 ) }
    dend_11 { pt3dadd( -5.5072, 14.7124, 0.474474, 1.33 ) }
    dend_11 { pt3dadd( -6.45368, 16.5222, 0.671273, 1.33 ) }
    dend_11 { pt3dadd( -7.04556, 17.6278, 0.822695, 1.55 ) }
    dend_11 { pt3dadd( -7.93856, 19.2657, 1.08003, 1.55 ) }
    dend_11 { pt3dadd( -8.866, 21.0469, 1.36548, 1.62 ) }
    dend_11 { pt3dadd( -9.60646, 22.6343, 1.60522, 1.4 ) }
    dend_11 { pt3dadd( -10.2969, 24.3815, 1.83936, 1.4 ) }
    dend_11 { pt3dadd( -10.6896, 25.4548, 1.98478, 1.4 ) }
    dend_11 { pt3dadd( -11.3003, 27.1808, 2.20583, 1.4 ) }
    dend_11 { pt3dadd( -11.88, 28.9051, 2.36013, 1.4 ) }
    dend_11 { pt3dadd( -12.5319, 31.0363, 2.46474, 1.77 ) }
    dend_11 { pt3dadd( -13.0807, 32.9484, 2.4843, 2.73 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.82855, 4.29975, 1.3463, 2.58 ) }
    dend_0 { pt3dadd( 6.87766, 4.34886, 1.35076, 2.58 ) }
    dend_0 { pt3dadd( 7.49661, 4.98356, 1.4154, 2.58 ) }
    dend_0 { pt3dadd( 8.19889, 5.71119, 1.51045, 1.84 ) }
    dend_0 { pt3dadd( 8.71877, 6.23911, 1.59479, 2.06 ) }
    dend_0 { pt3dadd( 9.39001, 6.91883, 1.7209, 2.06 ) }
    dend_0 { pt3dadd( 9.83359, 7.35757, 1.83292, 2.58 ) }
    dend_0 { pt3dadd( 10.3259, 7.84125, 1.98569, 2.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 10.6513, 8.16627, 2.10913, 2.58 ) }
    dend_0 { pt3dadd( 11.2289, 8.71714, 2.35588, 2.58 ) }
    dend_0 { pt3dadd( 11.6352, 9.07717, 2.53911, 2.43 ) }
    dend_0 { pt3dadd( 12.4864, 9.78766, 2.95613, 2.21 ) }
    dend_0 { pt3dadd( 13.1073, 10.276, 3.27293, 1.99 ) }
    dend_0 { pt3dadd( 13.6056, 10.6449, 3.51179, 1.99 ) }
    dend_0 { pt3dadd( 14.2519, 11.0531, 3.79092, 1.69 ) }
    dend_0 { pt3dadd( 14.7921, 11.2866, 3.99581, 1.69 ) }
    dend_0 { pt3dadd( 15.7487, 11.421, 4.31025, 2.06 ) }
    dend_0 { pt3dadd( 16.3491, 11.3134, 4.47374, 2.06 ) }
    dend_0 { pt3dadd( 17.7677, 10.6797, 4.8533, 1.69 ) }
    dend_0 { pt3dadd( 18.7435, 10.1312, 5.09989, 1.92 ) }
    dend_0 { pt3dadd( 20.2689, 9.06837, 5.45817, 1.92 ) }
    dend_0 { pt3dadd( 21.7215, 7.84522, 5.76787, 2.06 ) }
    dend_0 { pt3dadd( 22.4662, 7.08307, 5.90798, 2.28 ) }
    dend_0 { pt3dadd( 23.0248, 6.38868, 6.0206, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 16/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 0.834557 ) }
    axon_0 { pt3dadd( 4.36343, 23.5449, 1.13455, 0.834557 ) }
    axon_0 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.834557 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 19/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -28.8521, -43.2819, -67.0709, 0.96 ) }
    dend_51 { pt3dadd( -28.5993, -43.9092, -71.1243, 0.96 ) }
    dend_51 { pt3dadd( -28.5261, -44.088, -71.903, 0.96 ) }
    dend_51 { pt3dadd( -28.4027, -44.3587, -72.8474, 0.96 ) }
    dend_51 { pt3dadd( -28.204, -44.7581, -74.0842, 1.55 ) }
    dend_51 { pt3dadd( -28.0233, -45.118, -75.0455, 0.22 ) }
    dend_51 { pt3dadd( -27.7875, -45.5694, -76.032, 0.22 ) }
    dend_51 { pt3dadd( -27.6017, -45.9123, -76.4855, 1.11 ) }
    dend_51 { pt3dadd( -27.4208, -46.2464, -76.872, 1.4 ) }
    dend_51 { pt3dadd( -27.1361, -46.6949, -77.3524, 1.4 ) }
    dend_51 { pt3dadd( -26.4523, -47.6496, -78.3191, 0.22 ) }
    dend_51 { pt3dadd( -25.6725, -48.5912, -79.292, 0.22 ) }
    dend_51 { pt3dadd( -25.3948, -48.889, -79.6107, 0.74 ) }
    dend_51 { pt3dadd( -25.2378, -49.0459, -79.7757, 0.74 ) }
    dend_51 { pt3dadd( -24.3721, -49.8792, -80.6229, 0.15 ) }
    dend_51 { pt3dadd( -24.2309, -50.0073, -80.7473, 0.37 ) }
    dend_51 { pt3dadd( -23.397, -50.6757, -81.4086, 0.22 ) }
    dend_51 { pt3dadd( -22.914, -51.028, -81.8004, 0.22 ) }
    dend_51 { pt3dadd( -22.5288, -51.3098, -82.1108, 0.74 ) }
    dend_51 { pt3dadd( -22.1527, -51.6122, -82.4091, 0.88 ) }
    dend_51 { pt3dadd( -22.042, -51.7287, -82.4989, 0.88 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 40/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -28.8521, -43.2819, -67.0709, 2.87 ) }
    dend_50 { pt3dadd( -29.5068, -43.6936, -67.0952, 2.87 ) }
    dend_50 { pt3dadd( -31.5433, -45.1748, -67.2959, 0.22 ) }
    dend_50 { pt3dadd( -33.3274, -46.7813, -67.5697, 0.22 ) }
    dend_50 { pt3dadd( -34.1757, -47.6153, -67.7156, 1.69 ) }
    dend_50 { pt3dadd( -34.4391, -47.8905, -67.7638, 2.21 ) }
    dend_50 { pt3dadd( -34.8637, -48.3527, -67.8443, 2.21 ) }
    dend_50 { pt3dadd( -36.3749, -50.2342, -68.1544, 0.22 ) }
    dend_50 { pt3dadd( -37.643, -52.1514, -68.5099, 0.22 ) }
    dend_50 { pt3dadd( -38.0269, -52.7871, -68.6367, 1.25 ) }
    dend_50 { pt3dadd( -38.3394, -53.311, -68.7419, 1.25 ) }
    dend_50 { pt3dadd( -38.7575, -53.9991, -68.8884, 1.25 ) }
    dend_50 { pt3dadd( -39.6289, -55.3285, -69.1749, 0.15 ) }
    dend_50 { pt3dadd( -40.1287, -56.0577, -69.3275, 0.15 ) }
    dend_50 { pt3dadd( -40.5362, -56.5832, -69.4466, 0.96 ) }
    dend_50 { pt3dadd( -41.0143, -57.1331, -69.5941, 1.18 ) }
    dend_50 { pt3dadd( -41.2409, -57.3603, -69.6617, 1.18 ) }
    dend_50 { pt3dadd( -42.7606, -58.6641, -70.1712, 0.22 ) }
    dend_50 { pt3dadd( -43.1859, -58.9426, -70.3176, 0.52 ) }
    dend_50 { pt3dadd( -43.5797, -59.1714, -70.4515, 0.52 ) }
    dend_50 { pt3dadd( -44.6005, -59.726, -70.7842, 0.22 ) }
    dend_50 { pt3dadd( -45.2374, -60.0625, -70.9969, 1.25 ) }
    dend_50 { pt3dadd( -46.1611, -60.5942, -71.3014, 1.4 ) }
    dend_50 { pt3dadd( -47.9078, -61.7902, -71.9675, 0.22 ) }
    dend_50 { pt3dadd( -49.0595, -62.7709, -72.4562, 0.22 ) }
    dend_50 { pt3dadd( -49.4772, -63.2172, -72.6585, 0.74 ) }
    dend_50 { pt3dadd( -49.9804, -63.9135, -72.9411, 0.88 ) }
    dend_50 { pt3dadd( -50.6119, -65.2283, -73.5384, 0.22 ) }
    dend_50 { pt3dadd( -50.9836, -66.8361, -74.2253, 0.22 ) }
    dend_50 { pt3dadd( -51.0447, -67.8494, -74.6501, 1.99 ) }
    dend_50 { pt3dadd( -51.0192, -68.4589, -74.8884, 2.36 ) }
    dend_50 { pt3dadd( -50.9708, -69.0517, -75.1244, 2.36 ) }
    dend_50 { pt3dadd( -50.5581, -72.3436, -76.4587, 0.15 ) }
    dend_50 { pt3dadd( -50.218, -74.3612, -77.3386, 0.15 ) }
    dend_50 { pt3dadd( -50.1119, -74.8846, -77.5496, 0.44 ) }
    dend_50 { pt3dadd( -49.873, -75.8873, -77.9356, 0.44 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 76/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -44.1268, -35.8452, -0.0478092, 0.96 ) }
    dend_44 { pt3dadd( -45.2325, -36.2586, -0.441773, 0.96 ) }
    dend_44 { pt3dadd( -46.2855, -36.6897, -0.825239, 1.25 ) }
    dend_44 { pt3dadd( -47.8028, -37.3104, -1.37115, 1.25 ) }
    dend_44 { pt3dadd( -50.4448, -38.306, -2.24648, 1.18 ) }
    dend_44 { pt3dadd( -52.2417, -38.9039, -2.78056, 1.11 ) }
    dend_44 { pt3dadd( -53.6254, -39.3312, -3.17657, 0.88 ) }
    dend_44 { pt3dadd( -55.4485, -39.9045, -3.72645, 0.96 ) }
    dend_44 { pt3dadd( -56.4923, -40.2322, -4.0504, 0.96 ) }
    dend_44 { pt3dadd( -58.0248, -40.7248, -4.53581, 0.96 ) }
    dend_44 { pt3dadd( -59.5332, -41.2193, -4.92986, 0.96 ) }
    dend_44 { pt3dadd( -60.8139, -41.6286, -5.19039, 1.18 ) }
    dend_44 { pt3dadd( -62.3871, -42.1094, -5.44136, 1.03 ) }
    dend_44 { pt3dadd( -63.1638, -42.3248, -5.48544, 1.03 ) }
    dend_44 { pt3dadd( -64.7836, -42.7191, -5.39595, 1.18 ) }
    dend_44 { pt3dadd( -65.7637, -42.9165, -5.19358, 1.18 ) }
    dend_44 { pt3dadd( -67.9595, -43.2313, -4.29589, 0.96 ) }
    dend_44 { pt3dadd( -68.7629, -43.2975, -3.88417, 1.11 ) }
    dend_44 { pt3dadd( -70.3249, -43.394, -2.99783, 1.11 ) }
    dend_44 { pt3dadd( -71.5764, -43.506, -2.27295, 1.11 ) }
    dend_44 { pt3dadd( -73.0485, -43.6986, -1.42221, 1.11 ) }
    dend_44 { pt3dadd( -75.0144, -44.131, -0.314553, 1.55 ) }
    dend_44 { pt3dadd( -76.4229, -44.6078, 0.414529, 1.03 ) }
    dend_44 { pt3dadd( -78.1083, -45.4009, 1.25381, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( -79.5466, -46.297, 1.91301, 0.74 ) }
    dend_44 { pt3dadd( -80.3706, -46.9588, 2.25828, 0.74 ) }
    dend_44 { pt3dadd( -81.4356, -48.0329, 2.61013, 0.74 ) }
    dend_44 { pt3dadd( -82.4942, -49.3288, 2.84595, 0.66 ) }
    dend_44 { pt3dadd( -83.4416, -50.6669, 3.00094, 0.88 ) }
    dend_44 { pt3dadd( -84.0606, -51.6422, 3.05573, 1.03 ) }
    dend_44 { pt3dadd( -84.7055, -52.7896, 3.08137, 1.03 ) }
    dend_44 { pt3dadd( -85.5302, -54.2675, 3.09092, 0.88 ) }
    dend_44 { pt3dadd( -86.5605, -56.0032, 3.08167, 0.88 ) }
    dend_44 { pt3dadd( -87.1456, -56.8726, 3.06534, 0.88 ) }
    dend_44 { pt3dadd( -88.0165, -57.9403, 3.05072, 0.88 ) }
    dend_44 { pt3dadd( -89.7182, -59.6499, 3.04482, 0.88 ) }
    dend_44 { pt3dadd( -90.7166, -60.4238, 3.05145, 0.88 ) }
    dend_44 { pt3dadd( -92.1509, -61.2357, 3.07481, 0.88 ) }
    dend_44 { pt3dadd( -93.1192, -61.6079, 3.09193, 0.96 ) }
    dend_44 { pt3dadd( -94.2618, -61.9306, 3.08305, 0.96 ) }
    dend_44 { pt3dadd( -95.3011, -62.1396, 3.08131, 0.96 ) }
    dend_44 { pt3dadd( -96.4651, -62.3359, 3.09136, 0.52 ) }
    dend_44 { pt3dadd( -97.2583, -62.6114, 3.11022, 0.52 ) }
    dend_44 { pt3dadd( -97.8514, -63.1083, 3.17122, 0.52 ) }
    dend_44 { pt3dadd( -98.4201, -64.0433, 3.36107, 0.81 ) }
    dend_44 { pt3dadd( -98.8504, -65.0349, 3.6127, 0.96 ) }
    dend_44 { pt3dadd( -99.1543, -66.1816, 3.9156, 0.96 ) }
    dend_44 { pt3dadd( -99.4737, -68.237, 4.46211, 0.81 ) }
    dend_44 { pt3dadd( -99.5701, -69.2434, 4.73828, 0.81 ) }
    dend_44 { pt3dadd( -99.6389, -70.5196, 5.13954, 1.11 ) }
    dend_44 { pt3dadd( -99.7206, -71.2438, 5.42257, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 27/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -44.1268, -35.8452, -0.0478092, 1.33 ) }
    dend_43 { pt3dadd( -45.0994, -36.0728, 0.737865, 1.33 ) }
    dend_43 { pt3dadd( -46.0392, -36.3294, 1.39413, 1.18 ) }
    dend_43 { pt3dadd( -47.8034, -36.7742, 2.56567, 0.88 ) }
    dend_43 { pt3dadd( -48.6555, -36.9519, 3.081, 0.74 ) }
    dend_43 { pt3dadd( -49.9051, -37.1527, 3.746, 0.74 ) }
    dend_43 { pt3dadd( -51.1754, -37.2792, 4.41259, 0.74 ) }
    dend_43 { pt3dadd( -52.1337, -37.35, 4.87821, 0.59 ) }
    dend_43 { pt3dadd( -53.2602, -37.3712, 5.41356, 0.59 ) }
    dend_43 { pt3dadd( -54.1471, -37.3293, 5.83641, 0.52 ) }
    dend_43 { pt3dadd( -55.0424, -37.1794, 6.32849, 0.52 ) }
    dend_43 { pt3dadd( -56.7307, -36.6719, 7.38383, 0.74 ) }
    dend_43 { pt3dadd( -57.8019, -36.2486, 8.12726, 0.59 ) }
    dend_43 { pt3dadd( -58.7897, -35.8439, 8.84078, 0.44 ) }
    dend_43 { pt3dadd( -59.8558, -35.4683, 9.64177, 0.37 ) }
    dend_43 { pt3dadd( -60.71, -35.2617, 10.297, 0.66 ) }
    dend_43 { pt3dadd( -61.4734, -35.2067, 10.7898, 0.66 ) }
    dend_43 { pt3dadd( -61.9706, -35.2554, 11.0087, 0.66 ) }
    dend_43 { pt3dadd( -62.6278, -35.3627, 11.2628, 0.44 ) }
    dend_43 { pt3dadd( -63.3899, -35.542, 11.5236, 0.44 ) }
    dend_43 { pt3dadd( -64.7486, -35.8707, 11.9552, 0.44 ) }
    dend_43 { pt3dadd( -66.6246, -36.3692, 12.5588, 0.74 ) }
    dend_43 { pt3dadd( -67.7365, -36.7062, 12.9137, 0.74 ) }
    dend_43 { pt3dadd( -69.272, -37.1573, 13.3837, 0.52 ) }
    dend_43 { pt3dadd( -70.7076, -37.5593, 13.8059, 0.59 ) }
    dend_43 { pt3dadd( -71.9395, -37.8965, 14.147, 0.44 ) }
    dend_43 { pt3dadd( -73.6518, -38.4369, 14.6231, 0.37 ) }
    dend_43 { pt3dadd( -74.8839, -38.9392, 14.9759, 0.37 ) }
    dend_43 { pt3dadd( -76.2243, -39.6805, 15.3342, 0.29 ) }
    dend_43 { pt3dadd( -76.8602, -40.1692, 15.4925, 0.29 ) }
    dend_43 { pt3dadd( -77.6101, -40.9131, 15.7425, 0.29 ) }
    dend_43 { pt3dadd( -78.2507, -41.6219, 16.0093, 0.37 ) }
    dend_43 { pt3dadd( -78.9762, -42.4506, 16.3802, 0.37 ) }
    dend_43 { pt3dadd( -79.7131, -43.2486, 16.8176, 0.37 ) }
    dend_43 { pt3dadd( -80.5064, -44.1871, 17.3571, 0.66 ) }
    dend_43 { pt3dadd( -81.298, -45.0977, 17.9194, 0.81 ) }
    dend_43 { pt3dadd( -81.9094, -45.7234, 18.3546, 0.81 ) }
    dend_43 { pt3dadd( -82.8051, -46.4645, 18.9464, 0.22 ) }
    dend_43 { pt3dadd( -83.9077, -47.2162, 19.6436, 0.22 ) }
    dend_43 { pt3dadd( -94.6823, -48.6741, 24.5384, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 67/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -4.00069, -55.7376, -6.25773, 1.55 ) }
    dend_33 { pt3dadd( -3.59739, -56.969, -6.22937, 1.55 ) }
    dend_33 { pt3dadd( -3.19623, -58.2234, -6.19827, 1.55 ) }
    dend_33 { pt3dadd( -2.85668, -59.3258, -6.17483, 1.55 ) }
    dend_33 { pt3dadd( -2.48413, -60.5767, -6.14218, 1.69 ) }
    dend_33 { pt3dadd( -2.21751, -61.5368, -6.11171, 1.69 ) }
    dend_33 { pt3dadd( -2.04056, -62.2552, -6.08793, 1.69 ) }
    dend_33 { pt3dadd( -1.80113, -63.4484, -6.04571, 1.55 ) }
    dend_33 { pt3dadd( -1.54565, -65.0107, -5.9924, 1.47 ) }
    dend_33 { pt3dadd( -1.40139, -66.3136, -5.93558, 1.33 ) }
    dend_33 { pt3dadd( -1.34404, -67.5638, -5.8694, 1.33 ) }
    dend_33 { pt3dadd( -1.38055, -69.2259, -5.77256, 1.33 ) }
    dend_33 { pt3dadd( -1.49976, -70.4462, -5.68442, 1.11 ) }
    dend_33 { pt3dadd( -1.64049, -71.2158, -5.61686, 1.11 ) }
    dend_33 { pt3dadd( -2.06733, -72.8944, -5.4476, 1.25 ) }
    dend_33 { pt3dadd( -2.41467, -74.0099, -5.32697, 1.25 ) }
    dend_33 { pt3dadd( -2.76739, -75.0143, -5.21467, 1.25 ) }
    dend_33 { pt3dadd( -3.29224, -76.4096, -5.06801, 1.4 ) }
    dend_33 { pt3dadd( -3.82984, -77.7862, -4.93815, 1.4 ) }
    dend_33 { pt3dadd( -4.254, -78.9032, -4.85795, 1.55 ) }
    dend_33 { pt3dadd( -4.52385, -79.7261, -4.83456, 1.55 ) }
    dend_33 { pt3dadd( -4.84753, -80.9445, -4.84044, 1.33 ) }
    dend_33 { pt3dadd( -5.16091, -82.4674, -4.90816, 0.96 ) }
    dend_33 { pt3dadd( -5.25045, -83.0715, -4.96206, 0.81 ) }
    dend_33 { pt3dadd( -5.32039, -83.7512, -5.02946, 0.81 ) }
    dend_33 { pt3dadd( -5.42428, -85.3222, -5.17955, 0.96 ) }
    dend_33 { pt3dadd( -5.45935, -86.4103, -5.26881, 1.33 ) }
    dend_33 { pt3dadd( -5.47891, -87.6111, -5.34698, 1.69 ) }
    dend_33 { pt3dadd( -5.49818, -88.3388, -5.37732, 1.84 ) }
    dend_33 { pt3dadd( -5.53673, -89.1639, -5.38822, 1.99 ) }
    dend_33 { pt3dadd( -5.62695, -90.1402, -5.36835, 2.06 ) }
    dend_33 { pt3dadd( -5.71807, -90.975, -5.33043, 2.06 ) }
    dend_33 { pt3dadd( -5.81021, -91.8244, -5.25938, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( -5.89666, -92.7309, -5.14427, 1.62 ) }
    dend_33 { pt3dadd( -5.97946, -93.8201, -4.97092, 1.18 ) }
    dend_33 { pt3dadd( -6.0239, -94.6923, -4.82148, 0.88 ) }
    dend_33 { pt3dadd( -6.07107, -95.8843, -4.59869, 0.88 ) }
    dend_33 { pt3dadd( -6.09641, -96.7045, -4.41736, 1.03 ) }
    dend_33 { pt3dadd( -6.12409, -97.5483, -4.20612, 1.11 ) }
    dend_33 { pt3dadd( -6.15782, -98.1491, -4.04761, 1.11 ) }
    dend_33 { pt3dadd( -6.31445, -99.6479, -3.64861, 1.03 ) }
    dend_33 { pt3dadd( -6.46269, -100.626, -3.38846, 1.18 ) }
    dend_33 { pt3dadd( -6.603, -101.424, -3.1885, 1.25 ) }
    dend_33 { pt3dadd( -6.83333, -102.639, -2.91392, 1.18 ) }
    dend_33 { pt3dadd( -7.06205, -103.741, -2.69704, 1.03 ) }
    dend_33 { pt3dadd( -7.31927, -104.841, -2.51236, 0.96 ) }
    dend_33 { pt3dadd( -7.62979, -106.032, -2.35405, 0.88 ) }
    dend_33 { pt3dadd( -7.86437, -106.827, -2.28667, 0.88 ) }
    dend_33 { pt3dadd( -8.27957, -108.024, -2.28361, 1.25 ) }
    dend_33 { pt3dadd( -8.74561, -109.219, -2.35879, 1.55 ) }
    dend_33 { pt3dadd( -9.11058, -110.132, -2.45559, 1.62 ) }
    dend_33 { pt3dadd( -9.38436, -110.863, -2.54915, 1.62 ) }
    dend_33 { pt3dadd( -9.70559, -111.821, -2.67783, 1.4 ) }
    dend_33 { pt3dadd( -10.1052, -113.177, -2.84356, 1.11 ) }
    dend_33 { pt3dadd( -10.4359, -114.575, -2.98795, 1.11 ) }
    dend_33 { pt3dadd( -10.7151, -116.12, -3.09197, 1.11 ) }
    dend_33 { pt3dadd( -10.9558, -117.768, -3.1661, 1.11 ) }
    dend_33 { pt3dadd( -11.1105, -118.973, -3.19718, 1.4 ) }
    dend_33 { pt3dadd( -11.2534, -120.222, -3.21137, 1.4 ) }
    dend_33 { pt3dadd( -11.4608, -122.17, -3.20539, 1.25 ) }
    dend_33 { pt3dadd( -11.6734, -124.165, -3.20508, 1.25 ) }
    dend_33 { pt3dadd( -11.8244, -125.477, -3.20725, 1.62 ) }
    dend_33 { pt3dadd( -11.9735, -126.626, -3.22046, 1.77 ) }
    dend_33 { pt3dadd( -12.1749, -128.164, -3.26188, 1.33 ) }
    dend_33 { pt3dadd( -12.3508, -129.558, -3.30834, 0.88 ) }
    dend_33 { pt3dadd( -12.5152, -131.111, -3.37718, 1.25 ) }
    dend_33 { pt3dadd( -12.5829, -131.88, -3.42194, 1.84 ) }
    dend_33 { pt3dadd( -12.6357, -132.742, -3.48541, 2.28 ) }
    dend_33 { pt3dadd( -12.6679, -133.634, -3.56982, 2.43 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 36/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -4.00069, -55.7376, -6.25773, 2.14 ) }
    dend_28 { pt3dadd( -3.88497, -56.331, -6.43439, 2.14 ) }
    dend_28 { pt3dadd( -3.66968, -57.2705, -6.67355, 2.14 ) }
    dend_28 { pt3dadd( -3.30152, -58.8768, -7.08252, 1.69 ) }
    dend_28 { pt3dadd( -2.99304, -60.2228, -7.4252, 1.84 ) }
    dend_28 { pt3dadd( -2.69335, -61.5304, -7.75811, 1.99 ) }
    dend_28 { pt3dadd( -2.45092, -62.5882, -8.02742, 2.36 ) }
    dend_28 { pt3dadd( -2.25426, -63.3646, -8.19502, 2.5 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 44/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -13.66, 51.9657, -12.0686, 1.25 ) }
    dend_22 { pt3dadd( -13.398, 52.7568, -12.3465, 1.25 ) }
    dend_22 { pt3dadd( -13.1759, 53.2855, -12.5324, 1.03 ) }
    dend_22 { pt3dadd( -12.8788, 53.9125, -12.7494, 0.81 ) }
    dend_22 { pt3dadd( -12.543, 54.6153, -12.9799, 0.81 ) }
    dend_22 { pt3dadd( -12.2441, 55.3207, -13.1903, 1.11 ) }
    dend_22 { pt3dadd( -12.0529, 55.8354, -13.3296, 1.11 ) }
    dend_22 { pt3dadd( -11.8406, 56.441, -13.4583, 0.96 ) }
    dend_22 { pt3dadd( -11.5819, 57.2559, -13.6004, 0.66 ) }
    dend_22 { pt3dadd( -11.4217, 57.8216, -13.6909, 0.52 ) }
    dend_22 { pt3dadd( -11.2304, 58.5665, -13.7976, 0.52 ) }
    dend_22 { pt3dadd( -11.1061, 59.1218, -13.8705, 0.52 ) }
    dend_22 { pt3dadd( -10.8423, 60.3088, -14.0451, 1.18 ) }
    dend_22 { pt3dadd( -10.7048, 60.9156, -14.1416, 1.62 ) }
    dend_22 { pt3dadd( -10.6006, 61.3501, -14.2171, 1.69 ) }
    dend_22 { pt3dadd( -10.41, 62.067, -14.3677, 1.33 ) }
    dend_22 { pt3dadd( -10.2956, 62.4192, -14.4612, 0.74 ) }
    dend_22 { pt3dadd( -10.0922, 62.9555, -14.6328, 0.59 ) }
    dend_22 { pt3dadd( -9.75716, 63.7994, -14.9572, 0.66 ) }
    dend_22 { pt3dadd( -9.58635, 64.2558, -15.1427, 0.44 ) }
    dend_22 { pt3dadd( -9.47705, 64.5984, -15.2778, 0.44 ) }
    dend_22 { pt3dadd( -9.30631, 65.2292, -15.5207, 0.37 ) }
    dend_22 { pt3dadd( -9.15916, 65.7602, -15.721, 0.37 ) }
    dend_22 { pt3dadd( -9.03371, 66.1455, -15.8595, 0.37 ) }
    dend_22 { pt3dadd( -8.79119, 66.7475, -16.1, 0.37 ) }
    dend_22 { pt3dadd( -8.55708, 67.2817, -16.3293, 0.44 ) }
    dend_22 { pt3dadd( -8.35563, 67.8027, -16.5663, 0.44 ) }
    dend_22 { pt3dadd( -8.09252, 68.6493, -16.9645, 0.81 ) }
    dend_22 { pt3dadd( -7.92991, 69.249, -17.249, 1.03 ) }
    dend_22 { pt3dadd( -7.77791, 69.7898, -17.5157, 1.03 ) }
    dend_22 { pt3dadd( -7.64324, 70.281, -17.7777, 0.81 ) }
    dend_22 { pt3dadd( -7.46898, 70.9977, -18.1884, 0.29 ) }
    dend_22 { pt3dadd( -7.3985, 71.355, -18.3978, 0.29 ) }
    dend_22 { pt3dadd( -7.27019, 72.2228, -18.8901, 1.77 ) }
    dend_22 { pt3dadd( -7.23198, 72.5124, -19.0497, 2.36 ) }
    dend_22 { pt3dadd( -7.17075, 72.914, -19.2561, 2.36 ) }
    dend_22 { pt3dadd( -7.03276, 73.6781, -19.6304, 2.28 ) }
    dend_22 { pt3dadd( -6.83176, 74.5945, -20.0522, 0.66 ) }
    dend_22 { pt3dadd( -6.71644, 75.0954, -20.2842, 0.88 ) }
    dend_22 { pt3dadd( -6.59846, 75.6168, -20.5279, 0.88 ) }
    dend_22 { pt3dadd( -6.46246, 76.2027, -20.7879, 0.37 ) }
    dend_22 { pt3dadd( -6.3684, 76.5986, -20.958, 0.37 ) }
    dend_22 { pt3dadd( -6.17635, 77.4253, -21.293, 0.37 ) }
    dend_22 { pt3dadd( -6.03758, 78.05, -21.535, 1.11 ) }
    dend_22 { pt3dadd( -5.93478, 78.5501, -21.7204, 1.47 ) }
    dend_22 { pt3dadd( -5.86982, 78.9089, -21.8448, 1.69 ) }
    dend_22 { pt3dadd( -5.77744, 79.5176, -22.0384, 1.33 ) }
    dend_22 { pt3dadd( -5.69405, 80.1889, -22.2304, 0.44 ) }
    dend_22 { pt3dadd( -5.64962, 80.9077, -22.405, 0.29 ) }
    dend_22 { pt3dadd( -5.63459, 81.4737, -22.5341, 0.52 ) }
    dend_22 { pt3dadd( -5.63407, 81.8977, -22.6267, 0.52 ) }
    dend_22 { pt3dadd( -5.65149, 82.61, -22.7941, 0.29 ) }
    dend_22 { pt3dadd( -5.65955, 83.3424, -22.9724, 0.29 ) }
    dend_22 { pt3dadd( -5.65268, 84.6307, -23.313, 1.18 ) }
    dend_22 { pt3dadd( -5.64314, 85.1146, -23.4427, 1.62 ) }
    dend_22 { pt3dadd( -5.63113, 85.6303, -23.5722, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( -5.61148, 86.282, -23.725, 1.33 ) }
    dend_22 { pt3dadd( -5.55568, 88.1421, -24.1448, 0.22 ) }
    dend_22 { pt3dadd( -5.51216, 89.3332, -24.4036, 0.22 ) }
    dend_22 { pt3dadd( -5.46956, 90.4104, -24.6215, 0.22 ) }
    dend_22 { pt3dadd( -5.43407, 91.551, -24.8279, 0.74 ) }
    dend_22 { pt3dadd( -5.41949, 92.1734, -24.9336, 1.03 ) }
    dend_22 { pt3dadd( -5.41674, 92.4674, -24.9788, 1.03 ) }
    dend_22 { pt3dadd( -5.45302, 93.4069, -25.1332, 0.15 ) }
    dend_22 { pt3dadd( -5.47768, 93.7671, -25.2069, 0.15 ) }
    dend_22 { pt3dadd( -5.51568, 94.1786, -25.3177, 0.44 ) }
    dend_22 { pt3dadd( -5.55494, 94.5693, -25.4406, 0.66 ) }
    dend_22 { pt3dadd( -5.59069, 94.9293, -25.555, 0.66 ) }
    dend_22 { pt3dadd( -5.66246, 95.9653, -25.8864, 1.55 ) }
    dend_22 { pt3dadd( -5.69149, 96.7261, -26.1256, 2.58 ) }
    dend_22 { pt3dadd( -5.69795, 97.3872, -26.3363, 2.58 ) }
    dend_22 { pt3dadd( -5.64137, 98.8515, -26.7912, 0.29 ) }
    dend_22 { pt3dadd( -5.53762, 99.8278, -27.0646, 0.29 ) }
    dend_22 { pt3dadd( -5.30108, 101.226, -27.4057, 0.29 ) }
    dend_22 { pt3dadd( -5.09384, 102.102, -27.5888, 0.96 ) }
    dend_22 { pt3dadd( -4.96334, 102.552, -27.666, 0.96 ) }
    dend_22 { pt3dadd( -4.4551, 104.013, -27.87, 0.22 ) }
    dend_22 { pt3dadd( -3.84521, 105.569, -28.0357, 0.22 ) }
    dend_22 { pt3dadd( -3.43221, 106.545, -28.1144, 1.77 ) }
    dend_22 { pt3dadd( -3.26024, 106.927, -28.1361, 2.36 ) }
    dend_22 { pt3dadd( -3.04586, 107.393, -28.1593, 2.5 ) }
    dend_22 { pt3dadd( -2.35095, 108.9, -28.224, 0.15 ) }
    dend_22 { pt3dadd( -2.0053, 109.658, -28.2609, 0.29 ) }
    dend_22 { pt3dadd( -1.77966, 110.166, -28.2944, 0.29 ) }
    dend_22 { pt3dadd( -1.50226, 110.813, -28.368, 0.15 ) }
    dend_22 { pt3dadd( -1.23847, 111.476, -28.4799, 1.18 ) }
    dend_22 { pt3dadd( -1.0792, 111.886, -28.5699, 1.55 ) }
    dend_22 { pt3dadd( -0.906379, 112.34, -28.6867, 1.18 ) }
    dend_22 { pt3dadd( -0.782625, 112.667, -28.7808, 0.74 ) }
    dend_22 { pt3dadd( -0.430173, 113.684, -29.073, 0.22 ) }
    dend_22 { pt3dadd( -0.17467, 114.48, -29.2994, 0.22 ) }
    dend_22 { pt3dadd( 0.240419, 115.875, -29.6599, 0.22 ) }
    dend_22 { pt3dadd( 0.451495, 116.628, -29.8353, 0.81 ) }
    dend_22 { pt3dadd( 0.531248, 116.931, -29.8983, 0.81 ) }
    dend_22 { pt3dadd( 1.00154, 118.831, -30.2283, 0.22 ) }
    dend_22 { pt3dadd( 1.22348, 119.79, -30.3385, 0.22 ) }
    dend_22 { pt3dadd( 1.39736, 120.659, -30.4227, 1.25 ) }
    dend_22 { pt3dadd( 1.42826, 120.891, -30.4408, 1.69 ) }
    dend_22 { pt3dadd( 1.45111, 121.154, -30.4575, 1.69 ) }
    dend_22 { pt3dadd( 1.48231, 121.716, -30.4851, 1.33 ) }
    dend_22 { pt3dadd( 1.48798, 122.208, -30.5106, 0.59 ) }
    dend_22 { pt3dadd( 1.47701, 123.233, -30.5845, 0.22 ) }
    dend_22 { pt3dadd( 1.46601, 124.691, -30.7356, 0.22 ) }
    dend_22 { pt3dadd( 1.45766, 125.587, -30.8387, 1.03 ) }
    dend_22 { pt3dadd( 1.45259, 125.965, -30.8842, 1.03 ) }
    dend_22 { pt3dadd( 1.45887, 126.36, -30.9342, 1.03 ) }
    dend_22 { pt3dadd( 1.49009, 126.943, -31.008, 0.52 ) }
    dend_22 { pt3dadd( 1.61337, 128.249, -31.159, 0.22 ) }
    dend_22 { pt3dadd( 1.71917, 128.875, -31.2405, 0.59 ) }
    dend_22 { pt3dadd( 1.81083, 129.274, -31.2955, 0.59 ) }
    dend_22 { pt3dadd( 2.29521, 131.025, -31.54, 0.22 ) }
    dend_22 { pt3dadd( 2.475, 131.566, -31.6161, 0.66 ) }
    dend_22 { pt3dadd( 2.62859, 131.951, -31.6749, 0.66 ) }
    dend_22 { pt3dadd( 3.0162, 132.842, -31.8255, 0.15 ) }
    dend_22 { pt3dadd( 3.23853, 133.337, -31.9181, 0.81 ) }
    dend_22 { pt3dadd( 3.38946, 133.677, -31.9875, 0.81 ) }
    dend_22 { pt3dadd( 3.60279, 134.178, -32.1007, 0.81 ) }
    dend_22 { pt3dadd( 3.97827, 135.136, -32.3266, 0.22 ) }
    dend_22 { pt3dadd( 4.33865, 136.109, -32.5765, 1.33 ) }
    dend_22 { pt3dadd( 4.48123, 136.517, -32.6873, 1.55 ) }
    dend_22 { pt3dadd( 4.5651, 136.756, -32.7536, 1.55 ) }
    dend_22 { pt3dadd( 4.65333, 137.008, -32.8276, 1.03 ) }
    dend_22 { pt3dadd( 5.06979, 138.155, -33.1866, 0.22 ) }
    dend_22 { pt3dadd( 5.4641, 139.174, -33.5258, 0.22 ) }
    dend_22 { pt3dadd( 5.68692, 139.706, -33.7208, 0.22 ) }
    dend_22 { pt3dadd( 5.94801, 140.336, -33.9529, 1.25 ) }
    dend_22 { pt3dadd( 6.10542, 140.744, -34.1032, 1.77 ) }
    dend_22 { pt3dadd( 6.23499, 141.114, -34.2402, 1.77 ) }
    dend_22 { pt3dadd( 6.33563, 141.426, -34.3611, 1.18 ) }
    dend_22 { pt3dadd( 6.48314, 141.921, -34.5561, 0.66 ) }
    dend_22 { pt3dadd( 6.92199, 143.427, -35.183, 0.22 ) }
    dend_22 { pt3dadd( 7.21283, 144.431, -35.6327, 0.22 ) }
    dend_22 { pt3dadd( 7.41748, 145.115, -35.9398, 1.11 ) }
    dend_22 { pt3dadd( 7.56504, 145.554, -36.1361, 1.4 ) }
    dend_22 { pt3dadd( 7.71285, 145.943, -36.3128, 1.4 ) }
    dend_22 { pt3dadd( 7.90373, 146.391, -36.5355, 0.96 ) }
    dend_22 { pt3dadd( 8.48841, 147.654, -37.2133, 0.22 ) }
    dend_22 { pt3dadd( 9.1487, 148.962, -37.9342, 0.22 ) }
    dend_22 { pt3dadd( 9.67934, 149.963, -38.4848, 1.77 ) }
    dend_22 { pt3dadd( 9.87196, 150.316, -38.6742, 2.65 ) }
    dend_22 { pt3dadd( 10.1835, 150.868, -38.9622, 2.95 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 85/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -13.66, 51.9657, -12.0686, 0.66 ) }
    dend_21 { pt3dadd( -15.5859, 52.9859, -12.1067, 0.66 ) }
    dend_21 { pt3dadd( -16.3542, 53.3561, -12.1185, 0.66 ) }
    dend_21 { pt3dadd( -17.2551, 53.7546, -12.1241, 0.66 ) }
    dend_21 { pt3dadd( -18.2855, 54.1642, -12.1315, 1.11 ) }
    dend_21 { pt3dadd( -18.9262, 54.3876, -12.1399, 1.33 ) }
    dend_21 { pt3dadd( -19.8923, 54.7125, -12.1553, 1.33 ) }
    dend_21 { pt3dadd( -20.9422, 55.0315, -12.1697, 0.96 ) }
    dend_21 { pt3dadd( -21.6634, 55.2566, -12.1559, 0.88 ) }
    dend_21 { pt3dadd( -22.5215, 55.5264, -12.1118, 0.88 ) }
    dend_21 { pt3dadd( -23.5352, 55.8439, -12.009, 0.37 ) }
    dend_21 { pt3dadd( -24.055, 56.0023, -11.9325, 0.37 ) }
    dend_21 { pt3dadd( -24.9387, 56.2717, -11.7686, 0.81 ) }
    dend_21 { pt3dadd( -25.6998, 56.514, -11.6052, 0.88 ) }
    dend_21 { pt3dadd( -26.4031, 56.7445, -11.4432, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -27.1439, 56.9932, -11.2606, 0.29 ) }
    dend_21 { pt3dadd( -27.6176, 57.1449, -11.1499, 0.29 ) }
    dend_21 { pt3dadd( -28.4473, 57.3526, -10.9941, 0.74 ) }
    dend_21 { pt3dadd( -29.0693, 57.4876, -10.9047, 0.74 ) }
    dend_21 { pt3dadd( -29.4247, 57.5807, -10.8495, 0.74 ) }
    dend_21 { pt3dadd( -29.8313, 57.722, -10.7563, 0.74 ) }
    dend_21 { pt3dadd( -30.3259, 57.9193, -10.6121, 0.59 ) }
    dend_21 { pt3dadd( -30.8038, 58.1048, -10.439, 0.59 ) }
    dend_21 { pt3dadd( -31.219, 58.2526, -10.2503, 0.37 ) }
    dend_21 { pt3dadd( -32.342, 58.5839, -9.71293, 0.37 ) }
    dend_21 { pt3dadd( -33.1346, 58.7627, -9.32481, 0.37 ) }
    dend_21 { pt3dadd( -33.5594, 58.8323, -9.11595, 0.22 ) }
    dend_21 { pt3dadd( -34.2776, 58.9106, -8.77186, 0.22 ) }
    dend_21 { pt3dadd( -34.6687, 58.9274, -8.60593, 0.22 ) }
    dend_21 { pt3dadd( -35.8285, 58.9481, -8.17507, 1.03 ) }
    dend_21 { pt3dadd( -36.4077, 58.9708, -7.99701, 1.4 ) }
    dend_21 { pt3dadd( -36.7547, 59.0039, -7.89791, 1.4 ) }
    dend_21 { pt3dadd( -37.5978, 59.1393, -7.67255, 0.81 ) }
    dend_21 { pt3dadd( -38.6796, 59.3622, -7.41938, 0.22 ) }
    dend_21 { pt3dadd( -39.2652, 59.4914, -7.29397, 0.22 ) }
    dend_21 { pt3dadd( -40.4501, 59.7695, -7.06915, 1.11 ) }
    dend_21 { pt3dadd( -41.0571, 59.9195, -6.96951, 1.4 ) }
    dend_21 { pt3dadd( -41.4893, 60.0276, -6.90717, 1.4 ) }
    dend_21 { pt3dadd( -42.5008, 60.2777, -6.78217, 0.66 ) }
    dend_21 { pt3dadd( -43.4535, 60.5008, -6.67526, 0.52 ) }
    dend_21 { pt3dadd( -44.6096, 60.7365, -6.55945, 0.74 ) }
    dend_21 { pt3dadd( -45.3615, 60.884, -6.49321, 0.88 ) }
    dend_21 { pt3dadd( -46.4293, 61.1063, -6.40874, 0.66 ) }
    dend_21 { pt3dadd( -47.1874, 61.2725, -6.35429, 0.66 ) }
    dend_21 { pt3dadd( -47.8095, 61.4164, -6.31651, 0.66 ) }
    dend_21 { pt3dadd( -48.9786, 61.7099, -6.24204, 0.29 ) }
    dend_21 { pt3dadd( -49.9121, 61.9641, -6.15849, 1.03 ) }
    dend_21 { pt3dadd( -50.7019, 62.192, -6.06151, 1.25 ) }
    dend_21 { pt3dadd( -50.9505, 62.2765, -6.01109, 1.25 ) }
    dend_21 { pt3dadd( -51.5831, 62.5352, -5.83653, 0.81 ) }
    dend_21 { pt3dadd( -52.3349, 62.8786, -5.57466, 0.29 ) }
    dend_21 { pt3dadd( -52.8151, 63.1185, -5.3678, 0.52 ) }
    dend_21 { pt3dadd( -53.1328, 63.2924, -5.21967, 0.66 ) }
    dend_21 { pt3dadd( -54.289, 63.9555, -4.68428, 0.22 ) }
    dend_21 { pt3dadd( -54.9451, 64.3389, -4.39984, 0.22 ) }
    dend_21 { pt3dadd( -55.4864, 64.654, -4.19223, 0.22 ) }
    dend_21 { pt3dadd( -56.2204, 65.0828, -3.97022, 0.22 ) }
    dend_21 { pt3dadd( -57.2149, 65.6664, -3.71983, 0.59 ) }
    dend_21 { pt3dadd( -57.7871, 66.006, -3.60349, 0.81 ) }
    dend_21 { pt3dadd( -58.3236, 66.3428, -3.54048, 0.81 ) }
    dend_21 { pt3dadd( -59.1475, 66.9006, -3.48232, 0.52 ) }
    dend_21 { pt3dadd( -60.2573, 67.7045, -3.44939, 1.03 ) }
    dend_21 { pt3dadd( -60.9227, 68.2052, -3.45155, 1.18 ) }
    dend_21 { pt3dadd( -61.4167, 68.5936, -3.46765, 1.25 ) }
    dend_21 { pt3dadd( -62.5174, 69.496, -3.5291, 0.29 ) }
    dend_21 { pt3dadd( -63.5132, 70.336, -3.60402, 0.74 ) }
    dend_21 { pt3dadd( -63.8875, 70.656, -3.63911, 0.96 ) }
    dend_21 { pt3dadd( -64.2163, 70.9343, -3.67876, 0.96 ) }
    dend_21 { pt3dadd( -65.315, 71.8309, -3.83007, 0.22 ) }
    dend_21 { pt3dadd( -65.7525, 72.1682, -3.89222, 0.22 ) }
    dend_21 { pt3dadd( -66.3533, 72.6003, -3.96954, 0.66 ) }
    dend_21 { pt3dadd( -66.7644, 72.8827, -4.03097, 0.88 ) }
    dend_21 { pt3dadd( -67.2529, 73.2025, -4.10273, 0.44 ) }
    dend_21 { pt3dadd( -67.8901, 73.6102, -4.18981, 0.37 ) }
    dend_21 { pt3dadd( -68.2744, 73.8513, -4.23317, 0.44 ) }
    dend_21 { pt3dadd( -68.7856, 74.1841, -4.28988, 0.44 ) }
    dend_21 { pt3dadd( -69.1534, 74.4267, -4.33099, 0.44 ) }
    dend_21 { pt3dadd( -69.8607, 74.9034, -4.4024, 0.22 ) }
    dend_21 { pt3dadd( -70.3207, 75.2246, -4.43484, 0.22 ) }
    dend_21 { pt3dadd( -70.8634, 75.6371, -4.46179, 0.29 ) }
    dend_21 { pt3dadd( -71.1795, 75.8953, -4.46575, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -13.0807, 32.9484, 2.4843, 1.47 ) }
    dend_13 { pt3dadd( -12.6462, 33.8153, 2.52023, 1.47 ) }
    dend_13 { pt3dadd( -12.2519, 34.7614, 2.55945, 0.81 ) }
    dend_13 { pt3dadd( -12.0054, 35.4546, 2.58979, 0.81 ) }
    dend_13 { pt3dadd( -11.7424, 36.4261, 2.63185, 0.81 ) }
    dend_13 { pt3dadd( -11.4708, 37.6095, 2.68449, 0.81 ) }
    dend_13 { pt3dadd( -11.2159, 38.9163, 2.74445, 0.81 ) }
    dend_13 { pt3dadd( -11.046, 40.2222, 2.79898, 1.03 ) }
    dend_13 { pt3dadd( -10.9354, 41.3975, 2.84853, 1.03 ) }
    dend_13 { pt3dadd( -10.797, 43.1976, 2.91834, 1.18 ) }
    dend_13 { pt3dadd( -10.7175, 44.3125, 2.96649, 1.18 ) }
    dend_13 { pt3dadd( -10.6686, 46.2523, 3.03637, 1.18 ) }
    dend_13 { pt3dadd( -10.6801, 47.6331, 3.07758, 1.4 ) }
    dend_13 { pt3dadd( -10.6786, 48.6117, 3.10482, 1.4 ) }
    dend_13 { pt3dadd( -10.6833, 49.3084, 3.12024, 1.4 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 81/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -13.0807, 32.9484, 2.4843, 0.96 ) }
    dend_12 { pt3dadd( -15.1404, 33.8271, 2.05215, 0.96 ) }
    dend_12 { pt3dadd( -15.8771, 34.1642, 1.91441, 0.96 ) }
    dend_12 { pt3dadd( -16.8981, 34.6414, 1.72401, 0.96 ) }
    dend_12 { pt3dadd( -17.9617, 35.1559, 1.51441, 0.81 ) }
    dend_12 { pt3dadd( -18.8772, 35.6168, 1.33469, 0.81 ) }
    dend_12 { pt3dadd( -20.1381, 36.272, 1.09983, 1.03 ) }
    dend_12 { pt3dadd( -20.9906, 36.7561, 0.940414, 1.03 ) }
    dend_12 { pt3dadd( -21.7803, 37.2912, 0.788267, 1.03 ) }
    dend_12 { pt3dadd( -22.7594, 38.0644, 0.593338, 0.81 ) }
    dend_12 { pt3dadd( -23.475, 38.6573, 0.450826, 0.81 ) }
    dend_12 { pt3dadd( -24.2588, 39.3319, 0.304266, 0.81 ) }
    dend_12 { pt3dadd( -25.1802, 40.1787, 0.127798, 0.52 ) }
    dend_12 { pt3dadd( -26.0247, 41.0444, -0.0295032, 0.52 ) }
    dend_12 { pt3dadd( -26.4961, 41.5777, -0.101955, 0.52 ) }
    dend_12 { pt3dadd( -27.1669, 42.4024, -0.188409, 0.52 ) }
    dend_12 { pt3dadd( -27.9971, 43.4699, -0.287571, 0.52 ) }
    dend_12 { pt3dadd( -28.4311, 44.0563, -0.332203, 0.52 ) }
    dend_12 { pt3dadd( -28.8669, 44.6674, -0.36022, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -29.3738, 45.4001, -0.373457, 0.66 ) }
    dend_12 { pt3dadd( -29.8394, 46.1303, -0.37412, 0.88 ) }
    dend_12 { pt3dadd( -30.2884, 46.9171, -0.369456, 0.88 ) }
    dend_12 { pt3dadd( -30.7864, 47.8437, -0.368022, 0.59 ) }
    dend_12 { pt3dadd( -31.2931, 48.7621, -0.375448, 0.88 ) }
    dend_12 { pt3dadd( -31.6607, 49.4223, -0.388585, 0.88 ) }
    dend_12 { pt3dadd( -31.9624, 50.0118, -0.409935, 0.96 ) }
    dend_12 { pt3dadd( -32.2303, 50.5509, -0.440595, 0.96 ) }
    dend_12 { pt3dadd( -32.475, 51.0206, -0.47585, 0.96 ) }
    dend_12 { pt3dadd( -32.919, 51.7844, -0.545804, 0.74 ) }
    dend_12 { pt3dadd( -33.6317, 52.9025, -0.666421, 1.25 ) }
    dend_12 { pt3dadd( -34.1305, 53.6441, -0.754639, 1.25 ) }
    dend_12 { pt3dadd( -34.6994, 54.4705, -0.855035, 0.29 ) }
    dend_12 { pt3dadd( -35.0765, 55.0213, -0.915826, 0.29 ) }
    dend_12 { pt3dadd( -35.4553, 55.5812, -0.966761, 0.66 ) }
    dend_12 { pt3dadd( -35.7936, 56.0895, -0.998447, 0.81 ) }
    dend_12 { pt3dadd( -36.073, 56.5224, -1.01105, 0.81 ) }
    dend_12 { pt3dadd( -36.5285, 57.2977, -1.005, 0.37 ) }
    dend_12 { pt3dadd( -36.9595, 58.1581, -1.02966, 0.37 ) }
    dend_12 { pt3dadd( -37.2122, 58.7209, -1.06898, 1.03 ) }
    dend_12 { pt3dadd( -37.43, 59.218, -1.11948, 1.25 ) }
    dend_12 { pt3dadd( -37.7154, 59.8239, -1.19656, 1.25 ) }
    dend_12 { pt3dadd( -37.9682, 60.3015, -1.2714, 0.81 ) }
    dend_12 { pt3dadd( -38.5218, 61.2437, -1.43571, 0.59 ) }
    dend_12 { pt3dadd( -38.856, 61.7791, -1.53315, 0.44 ) }
    dend_12 { pt3dadd( -39.3181, 62.5374, -1.64661, 0.88 ) }
    dend_12 { pt3dadd( -39.6684, 63.1246, -1.71247, 0.88 ) }
    dend_12 { pt3dadd( -40.2573, 64.1591, -1.77388, 0.59 ) }
    dend_12 { pt3dadd( -40.6329, 64.8512, -1.80017, 0.59 ) }
    dend_12 { pt3dadd( -41.2059, 65.979, -1.81181, 0.44 ) }
    dend_12 { pt3dadd( -41.8257, 67.2826, -1.81774, 1.03 ) }
    dend_12 { pt3dadd( -42.313, 68.3961, -1.804, 1.55 ) }
    dend_12 { pt3dadd( -42.5807, 69.0913, -1.77899, 1.62 ) }
    dend_12 { pt3dadd( -42.932, 70.1138, -1.72524, 1.11 ) }
    dend_12 { pt3dadd( -43.2836, 71.2398, -1.65499, 0.59 ) }
    dend_12 { pt3dadd( -43.5071, 72.0208, -1.59062, 0.59 ) }
    dend_12 { pt3dadd( -43.8527, 73.3294, -1.46115, 0.59 ) }
    dend_12 { pt3dadd( -44.1924, 74.6353, -1.31301, 0.52 ) }
    dend_12 { pt3dadd( -44.4165, 75.4911, -1.19676, 0.52 ) }
    dend_12 { pt3dadd( -44.6982, 76.5603, -1.01259, 0.52 ) }
    dend_12 { pt3dadd( -45.0028, 77.6761, -0.810001, 0.52 ) }
    dend_12 { pt3dadd( -45.3647, 78.8953, -0.591979, 0.37 ) }
    dend_12 { pt3dadd( -45.9258, 80.5102, -0.30693, 1.55 ) }
    dend_12 { pt3dadd( -46.1468, 81.0395, -0.216131, 1.92 ) }
    dend_12 { pt3dadd( -46.3833, 81.5177, -0.138259, 1.92 ) }
    dend_12 { pt3dadd( -46.6149, 81.9222, -0.0826475, 1.92 ) }
    dend_12 { pt3dadd( -47.1282, 82.6803, 0.00409342, 0.88 ) }
    dend_12 { pt3dadd( -47.8328, 83.6341, 0.090464, 0.44 ) }
    dend_12 { pt3dadd( -48.3707, 84.3375, 0.143085, 0.44 ) }
    dend_12 { pt3dadd( -48.9519, 85.0978, 0.183715, 0.44 ) }
    dend_12 { pt3dadd( -49.76, 86.1812, 0.23376, 0.37 ) }
    dend_12 { pt3dadd( -50.1904, 86.7713, 0.258474, 0.37 ) }
    dend_12 { pt3dadd( -51.0752, 88.0392, 0.306937, 0.74 ) }
    dend_12 { pt3dadd( -51.4257, 88.562, 0.331161, 0.74 ) }
    dend_12 { pt3dadd( -51.8575, 89.2354, 0.362166, 0.52 ) }
    dend_12 { pt3dadd( -52.4322, 90.1658, 0.385383, 1.25 ) }
    dend_12 { pt3dadd( -52.8359, 90.8167, 0.37656, 1.47 ) }
    dend_12 { pt3dadd( -53.1083, 91.2573, 0.355455, 1.47 ) }
    dend_12 { pt3dadd( -53.4909, 91.7961, 0.298279, 0.81 ) }
    dend_12 { pt3dadd( -54.0191, 92.4635, 0.197476, 0.59 ) }
    dend_12 { pt3dadd( -54.5579, 93.0707, 0.065518, 0.88 ) }
    dend_12 { pt3dadd( -55.018, 93.5549, -0.0628042, 1.18 ) }
    dend_12 { pt3dadd( -55.3066, 93.8513, -0.149731, 1.18 ) }
    dend_12 { pt3dadd( -56.0106, 94.6098, -0.34399, 0.96 ) }
    dend_12 { pt3dadd( -56.7506, 95.4818, -0.512726, 0.52 ) }
    dend_12 { pt3dadd( -57.1658, 96.0363, -0.560697, 0.37 ) }
    dend_12 { pt3dadd( -57.7425, 96.9128, -0.550273, 0.37 ) }
    dend_12 { pt3dadd( -58.2742, 97.8365, -0.477971, 0.37 ) }
    dend_12 { pt3dadd( -58.7453, 98.7705, -0.362848, 0.37 ) }
    dend_12 { pt3dadd( -59.0553, 99.502, -0.242375, 0.81 ) }
    dend_12 { pt3dadd( -59.4829, 100.684, -0.0309999, 1.84 ) }
    dend_12 { pt3dadd( -59.652, 101.162, 0.0547562, 1.92 ) }
    dend_12 { pt3dadd( -59.7836, 101.505, 0.109269, 1.92 ) }
    dend_12 { pt3dadd( -60.0255, 102.142, 0.189269, 1.62 ) }
    dend_12 { pt3dadd( -60.3676, 103.039, 0.250483, 0.88 ) }
    dend_12 { pt3dadd( -60.7187, 104.003, 0.280776, 0.29 ) }
    dend_12 { pt3dadd( -61.2623, 105.502, 0.296283, 0.29 ) }
    dend_12 { pt3dadd( -61.6762, 106.579, 0.308987, 0.29 ) }
    dend_12 { pt3dadd( -61.9485, 107.206, 0.327765, 0.29 ) }
    dend_12 { pt3dadd( -62.0944, 107.497, 0.342287, 0.29 ) }
    dend_12 { pt3dadd( -62.4742, 108.133, 0.388505, 0.66 ) }
    dend_12 { pt3dadd( -62.9631, 108.828, 0.454919, 0.81 ) }
    dend_12 { pt3dadd( -63.3203, 109.285, 0.505455, 0.81 ) }
    dend_12 { pt3dadd( -64.0062, 110.147, 0.599119, 0.37 ) }
    dend_12 { pt3dadd( -64.5476, 110.809, 0.672546, 0.37 ) }
    dend_12 { pt3dadd( -65.0599, 111.442, 0.741622, 0.81 ) }
    dend_12 { pt3dadd( -65.42, 111.894, 0.793491, 0.81 ) }
    dend_12 { pt3dadd( -65.9282, 112.545, 0.874049, 0.37 ) }
    dend_12 { pt3dadd( -66.4324, 113.15, 0.958948, 0.37 ) }
    dend_12 { pt3dadd( -66.9484, 113.713, 1.05251, 0.88 ) }
    dend_12 { pt3dadd( -67.5832, 114.373, 1.17117, 1.47 ) }
    dend_12 { pt3dadd( -68.0616, 114.866, 1.2575, 1.69 ) }
    dend_12 { pt3dadd( -68.4502, 115.269, 1.32256, 1.69 ) }
    dend_12 { pt3dadd( -69.5107, 116.346, 1.49218, 0.37 ) }
    dend_12 { pt3dadd( -69.8746, 116.721, 1.54832, 0.37 ) }
    dend_12 { pt3dadd( -70.5551, 117.472, 1.64148, 0.37 ) }
    dend_12 { pt3dadd( -71.336, 118.404, 1.73442, 0.81 ) }
    dend_12 { pt3dadd( -71.8371, 119.088, 1.78308, 1.33 ) }
    dend_12 { pt3dadd( -72.1388, 119.544, 1.80383, 1.33 ) }
    dend_12 { pt3dadd( -72.5421, 120.186, 1.82293, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -73.3602, 121.443, 1.84854, 0.52 ) }
    dend_12 { pt3dadd( -74.0466, 122.412, 1.86233, 0.52 ) }
    dend_12 { pt3dadd( -74.8235, 123.484, 1.86851, 0.52 ) }
    dend_12 { pt3dadd( -75.2533, 124.074, 1.86769, 0.52 ) }
    dend_12 { pt3dadd( -75.8066, 124.839, 1.86066, 0.52 ) }
    dend_12 { pt3dadd( -76.4288, 125.695, 1.84407, 0.52 ) }
    dend_12 { pt3dadd( -77.4913, 127.136, 1.8058, 0.52 ) }
    dend_12 { pt3dadd( -77.8767, 127.656, 1.79079, 0.52 ) }
    dend_12 { pt3dadd( -78.8352, 128.928, 1.75839, 1.25 ) }
    dend_12 { pt3dadd( -79.1057, 129.289, 1.75139, 1.47 ) }
    dend_12 { pt3dadd( -79.4618, 129.757, 1.73764, 1.47 ) }
    dend_12 { pt3dadd( -79.9868, 130.405, 1.71331, 0.88 ) }
    dend_12 { pt3dadd( -80.6295, 131.12, 1.68433, 0.29 ) }
    dend_12 { pt3dadd( -80.8979, 131.384, 1.6763, 0.29 ) }
    dend_12 { pt3dadd( -81.4548, 131.884, 1.66994, 0.44 ) }
    dend_12 { pt3dadd( -81.8966, 132.267, 1.6756, 0.44 ) }
    dend_12 { pt3dadd( -82.312, 132.616, 1.69197, 0.44 ) }
    dend_12 { pt3dadd( -82.5566, 132.831, 1.692, 0.44 ) }
    dend_12 { pt3dadd( -82.9004, 133.153, 1.70803, 0.29 ) }
    dend_12 { pt3dadd( -83.3352, 133.69, 1.75478, 0.29 ) }
    dend_12 { pt3dadd( -83.4818, 133.898, 1.78477, 0.44 ) }
    dend_12 { pt3dadd( -83.6586, 134.161, 1.83364, 0.44 ) }
    dend_12 { pt3dadd( -84.1246, 134.842, 1.97741, 0.37 ) }
    dend_12 { pt3dadd( -84.7557, 135.725, 2.18247, 0.44 ) }
    dend_12 { pt3dadd( -85.7967, 137.126, 2.43815, 2.28 ) }
    dend_12 { pt3dadd( -86.2182, 137.68, 2.51284, 2.5 ) }
    dend_12 { pt3dadd( -86.5445, 138.119, 2.54736, 2.5 ) }
    dend_12 { pt3dadd( -87.0778, 138.839, 2.56861, 1.92 ) }
    dend_12 { pt3dadd( -87.6156, 139.565, 2.53756, 0.81 ) }
    dend_12 { pt3dadd( -88.322, 140.555, 2.37193, 0.52 ) }
    dend_12 { pt3dadd( -88.6182, 141.01, 2.26714, 0.52 ) }
    dend_12 { pt3dadd( -89.2452, 142.064, 1.99701, 0.88 ) }
    dend_12 { pt3dadd( -89.5928, 142.716, 1.82555, 0.88 ) }
    dend_12 { pt3dadd( -89.9739, 143.508, 1.62348, 0.66 ) }
    dend_12 { pt3dadd( -90.2627, 144.162, 1.46202, 0.44 ) }
    dend_12 { pt3dadd( -90.6491, 145.117, 1.25477, 0.29 ) }
    dend_12 { pt3dadd( -91.0642, 146.219, 1.003, 0.29 ) }
    dend_12 { pt3dadd( -91.4969, 147.479, 0.689243, 0.29 ) }
    dend_12 { pt3dadd( -91.6976, 148.104, 0.522176, 0.29 ) }
    dend_12 { pt3dadd( -92.0625, 149.258, 0.15706, 0.52 ) }
    dend_12 { pt3dadd( -92.3265, 150.046, -0.130293, 0.88 ) }
    dend_12 { pt3dadd( -92.5607, 150.689, -0.409493, 0.88 ) }
    dend_12 { pt3dadd( -92.853, 151.389, -0.752156, 0.44 ) }
    dend_12 { pt3dadd( -93.4444, 152.487, -1.34093, 1.11 ) }
    dend_12 { pt3dadd( -94.0891, 153.428, -1.87383, 2.43 ) }
    dend_12 { pt3dadd( -94.6341, 154.055, -2.2448, 2.43 ) }
    dend_12 { pt3dadd( -95.0239, 154.414, -2.46333, 2.43 ) }
    dend_12 { pt3dadd( -95.5803, 154.833, -2.69921, 1.69 ) }
    dend_12 { pt3dadd( -96.3886, 155.356, -2.97859, 0.59 ) }
    dend_12 { pt3dadd( -97.2893, 155.849, -3.20761, 0.74 ) }
    dend_12 { pt3dadd( -97.5932, 156.0, -3.25415, 0.74 ) }
    dend_12 { pt3dadd( -98.1032, 156.24, -3.32027, 0.52 ) }
    dend_12 { pt3dadd( -98.8879, 156.613, -3.39416, 0.52 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 23.0248, 6.38868, 6.0206, 1.99 ) }
    dend_2 { pt3dadd( 24.8081, 6.66269, 5.96758, 1.99 ) }
    dend_2 { pt3dadd( 25.8465, 7.06285, 6.08298, 1.99 ) }
    dend_2 { pt3dadd( 26.5663, 7.61517, 6.28415, 1.69 ) }
    dend_2 { pt3dadd( 27.5783, 8.3916, 6.56695, 1.69 ) }
    dend_2 { pt3dadd( 28.0045, 8.71862, 6.68607, 1.69 ) }
    dend_2 { pt3dadd( 28.7127, 9.26198, 6.88397, 1.69 ) }
    dend_2 { pt3dadd( 29.1548, 9.81586, 7.0451, 1.92 ) }
    dend_2 { pt3dadd( 29.7953, 10.9349, 7.46249, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 62/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 23.0248, 6.38868, 6.0206, 0.74 ) }
    dend_1 { pt3dadd( 23.6339, 7.88296, 6.11298, 0.74 ) }
    dend_1 { pt3dadd( 23.8638, 8.52979, 6.14113, 0.74 ) }
    dend_1 { pt3dadd( 24.185, 9.54361, 6.16855, 0.74 ) }
    dend_1 { pt3dadd( 24.4376, 10.4157, 6.18277, 0.44 ) }
    dend_1 { pt3dadd( 24.6329, 11.1552, 6.19577, 0.44 ) }
    dend_1 { pt3dadd( 24.8971, 12.2525, 6.215, 0.66 ) }
    dend_1 { pt3dadd( 24.9992, 12.7803, 6.21395, 0.88 ) }
    dend_1 { pt3dadd( 25.1316, 13.5498, 6.22981, 0.88 ) }
    dend_1 { pt3dadd( 25.2414, 14.2635, 6.26994, 1.03 ) }
    dend_1 { pt3dadd( 25.4082, 15.2897, 6.3539, 0.96 ) }
    dend_1 { pt3dadd( 25.5374, 16.0184, 6.42543, 0.52 ) }
    dend_1 { pt3dadd( 25.6588, 16.6045, 6.48922, 0.52 ) }
    dend_1 { pt3dadd( 25.7994, 17.3846, 6.57627, 0.88 ) }
    dend_1 { pt3dadd( 25.9143, 18.0207, 6.64985, 0.66 ) }
    dend_1 { pt3dadd( 26.0455, 18.7333, 6.73847, 0.88 ) }
    dend_1 { pt3dadd( 26.1614, 19.37, 6.82156, 0.88 ) }
    dend_1 { pt3dadd( 26.3223, 20.3116, 6.95378, 0.29 ) }
    dend_1 { pt3dadd( 26.4349, 21.0724, 7.05675, 0.29 ) }
    dend_1 { pt3dadd( 26.5067, 21.5958, 7.11948, 0.29 ) }
    dend_1 { pt3dadd( 26.6276, 22.4884, 7.23133, 0.44 ) }
    dend_1 { pt3dadd( 26.7112, 23.0225, 7.3117, 0.74 ) }
    dend_1 { pt3dadd( 26.8347, 23.6654, 7.41568, 0.88 ) }
    dend_1 { pt3dadd( 26.9236, 24.0547, 7.48512, 1.11 ) }
    dend_1 { pt3dadd( 27.0023, 24.3623, 7.53904, 1.11 ) }
    dend_1 { pt3dadd( 27.1549, 25.0598, 7.63996, 0.29 ) }
    dend_1 { pt3dadd( 27.3189, 25.7443, 7.71012, 0.29 ) }
    dend_1 { pt3dadd( 27.5039, 26.3889, 7.76175, 0.29 ) }
    dend_1 { pt3dadd( 29.1929, 33.5375, 9.80654, 0.29 ) }
    dend_1 { pt3dadd( 31.8074, 40.4964, 11.4736, 0.29 ) }
    dend_1 { pt3dadd( 33.6869, 47.842, 12.3919, 0.29 ) }
    dend_1 { pt3dadd( 34.929, 55.3729, 12.8631, 0.29 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 94/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 9.5476, 53.0936, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 12.1397, 67.8679, 1.13455, 0.59 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 97/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -99.7206, -71.2438, 5.42257, 0.44 ) }
    dend_48 { pt3dadd( -101.876, -72.1928, 6.34523, 0.44 ) }
    dend_48 { pt3dadd( -102.968, -72.7591, 6.79652, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -104.123, -73.4161, 7.2296, 0.29 ) }
    dend_48 { pt3dadd( -104.801, -73.8166, 7.46907, 0.29 ) }
    dend_48 { pt3dadd( -106.245, -74.653, 7.94492, 0.37 ) }
    dend_48 { pt3dadd( -106.904, -75.0148, 8.16759, 0.37 ) }
    dend_48 { pt3dadd( -107.918, -75.5352, 8.42333, 0.29 ) }
    dend_48 { pt3dadd( -108.885, -76.1106, 8.68571, 0.29 ) }
    dend_48 { pt3dadd( -109.623, -76.6142, 8.89565, 0.29 ) }
    dend_48 { pt3dadd( -110.135, -76.9829, 9.03965, 0.29 ) }
    dend_48 { pt3dadd( -110.934, -77.5408, 9.25959, 0.29 ) }
    dend_48 { pt3dadd( -111.724, -78.0182, 9.46355, 0.44 ) }
    dend_48 { pt3dadd( -112.815, -78.6022, 9.7435, 0.44 ) }
    dend_48 { pt3dadd( -113.391, -78.932, 9.91867, 0.44 ) }
    dend_48 { pt3dadd( -114.228, -79.481, 10.2203, 0.66 ) }
    dend_48 { pt3dadd( -115.057, -80.1477, 10.5818, 0.66 ) }
    dend_48 { pt3dadd( -115.479, -80.5929, 10.8183, 0.52 ) }
    dend_48 { pt3dadd( -116.183, -81.6728, 11.4166, 0.44 ) }
    dend_48 { pt3dadd( -116.444, -82.4338, 11.8422, 0.66 ) }
    dend_48 { pt3dadd( -116.571, -83.2305, 12.2901, 0.66 ) }
    dend_48 { pt3dadd( -116.638, -84.1519, 12.8053, 0.52 ) }
    dend_48 { pt3dadd( -116.717, -85.3742, 13.4997, 0.52 ) }
    dend_48 { pt3dadd( -116.752, -86.4905, 14.1202, 0.44 ) }
    dend_48 { pt3dadd( -116.755, -87.47, 14.6569, 0.37 ) }
    dend_48 { pt3dadd( -116.813, -88.9919, 15.4887, 0.37 ) }
    dend_48 { pt3dadd( -116.919, -90.19, 16.1667, 0.29 ) }
    dend_48 { pt3dadd( -117.132, -91.3989, 16.9164, 0.29 ) }
    dend_48 { pt3dadd( -125.04, -99.625, 19.1671, 0.29 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 26/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -99.7206, -71.2438, 5.42257, 1.11 ) }
    dend_45 { pt3dadd( -100.663, -71.6794, 5.63503, 1.11 ) }
    dend_45 { pt3dadd( -101.397, -72.0881, 5.77693, 1.11 ) }
    dend_45 { pt3dadd( -102.885, -72.9743, 6.06586, 0.88 ) }
    dend_45 { pt3dadd( -104.02, -73.614, 6.2877, 0.88 ) }
    dend_45 { pt3dadd( -105.746, -74.5112, 6.62712, 0.88 ) }
    dend_45 { pt3dadd( -107.549, -75.362, 6.972, 0.88 ) }
    dend_45 { pt3dadd( -108.537, -75.8215, 7.15883, 0.88 ) }
    dend_45 { pt3dadd( -109.458, -76.2349, 7.30861, 0.81 ) }
    dend_45 { pt3dadd( -110.496, -76.6792, 7.45029, 0.81 ) }
    dend_45 { pt3dadd( -111.247, -76.9674, 7.55002, 0.81 ) }
    dend_45 { pt3dadd( -112.581, -77.4294, 7.73372, 0.96 ) }
    dend_45 { pt3dadd( -113.278, -77.6936, 7.82185, 0.96 ) }
    dend_45 { pt3dadd( -113.991, -78.041, 7.88658, 0.96 ) }
    dend_45 { pt3dadd( -114.668, -78.4841, 7.912, 0.96 ) }
    dend_45 { pt3dadd( -115.551, -79.1778, 7.92028, 0.96 ) }
    dend_45 { pt3dadd( -115.845, -79.42, 7.91491, 0.96 ) }
    dend_45 { pt3dadd( -116.749, -80.1409, 7.87439, 0.88 ) }
    dend_45 { pt3dadd( -117.886, -80.9308, 7.80192, 0.88 ) }
    dend_45 { pt3dadd( -118.701, -81.472, 7.74146, 1.11 ) }
    dend_45 { pt3dadd( -119.524, -82.0197, 7.67649, 1.11 ) }
    dend_45 { pt3dadd( -120.477, -82.6762, 7.58035, 0.96 ) }
    dend_45 { pt3dadd( -121.281, -83.2858, 7.51738, 0.96 ) }
    dend_45 { pt3dadd( -122.381, -84.213, 7.46134, 0.88 ) }
    dend_45 { pt3dadd( -123.644, -85.3807, 7.37515, 0.88 ) }
    dend_45 { pt3dadd( -124.621, -86.3213, 7.2571, 0.96 ) }
    dend_45 { pt3dadd( -125.406, -87.0823, 7.12441, 0.96 ) }
    dend_45 { pt3dadd( -126.528, -88.1276, 6.90268, 0.88 ) }
    dend_45 { pt3dadd( -127.063, -88.5916, 6.77308, 0.74 ) }
    dend_45 { pt3dadd( -128.27, -89.5563, 6.44007, 0.96 ) }
    dend_45 { pt3dadd( -129.339, -90.3203, 6.14046, 1.11 ) }
    dend_45 { pt3dadd( -130.209, -90.9101, 5.91303, 1.25 ) }
    dend_45 { pt3dadd( -130.963, -91.4259, 5.73702, 1.25 ) }
    dend_45 { pt3dadd( -132.176, -92.2813, 5.47948, 1.03 ) }
    dend_45 { pt3dadd( -133.805, -93.5245, 5.2165, 0.88 ) }
    dend_45 { pt3dadd( -134.98, -94.5225, 5.07757, 0.88 ) }
    dend_45 { pt3dadd( -136.162, -95.604, 4.95505, 0.88 ) }
    dend_45 { pt3dadd( -137.149, -96.5183, 4.84954, 0.88 ) }
    dend_45 { pt3dadd( -138.102, -97.3642, 4.75186, 1.33 ) }
    dend_45 { pt3dadd( -138.852, -97.9655, 4.68995, 1.33 ) }
    dend_45 { pt3dadd( -139.746, -98.6312, 4.61526, 1.18 ) }
    dend_45 { pt3dadd( -140.376, -99.0709, 4.55916, 0.96 ) }
    dend_45 { pt3dadd( -141.511, -99.8048, 4.47413, 0.96 ) }
    dend_45 { pt3dadd( -142.556, -100.405, 4.42029, 0.96 ) }
    dend_45 { pt3dadd( -143.961, -101.103, 4.40427, 0.88 ) }
    dend_45 { pt3dadd( -145.175, -101.582, 4.45794, 0.81 ) }
    dend_45 { pt3dadd( -145.855, -101.783, 4.53293, 0.81 ) }
    dend_45 { pt3dadd( -146.646, -101.986, 4.64731, 0.74 ) }
    dend_45 { pt3dadd( -147.231, -102.159, 4.74089, 0.74 ) }
    dend_45 { pt3dadd( -147.976, -102.45, 4.86246, 0.74 ) }
    dend_45 { pt3dadd( -149.041, -103.018, 5.02761, 0.74 ) }
    dend_45 { pt3dadd( -149.634, -103.468, 5.09932, 1.11 ) }
    dend_45 { pt3dadd( -150.539, -104.427, 5.15863, 1.11 ) }
    dend_45 { pt3dadd( -151.648, -105.86, 5.172, 0.88 ) }
    dend_45 { pt3dadd( -152.367, -106.926, 5.15451, 0.88 ) }
    dend_45 { pt3dadd( -152.918, -107.821, 5.12435, 0.88 ) }
    dend_45 { pt3dadd( -153.676, -109.069, 5.07226, 0.81 ) }
    dend_45 { pt3dadd( -154.727, -110.676, 4.96275, 0.81 ) }
    dend_45 { pt3dadd( -155.269, -111.427, 4.89422, 1.18 ) }
    dend_45 { pt3dadd( -155.871, -112.228, 4.78847, 1.33 ) }
    dend_45 { pt3dadd( -156.526, -113.035, 4.65811, 1.33 ) }
    dend_45 { pt3dadd( -157.605, -114.243, 4.43571, 0.88 ) }
    dend_45 { pt3dadd( -158.68, -115.34, 4.19269, 0.81 ) }
    dend_45 { pt3dadd( -159.809, -116.401, 3.9418, 0.81 ) }
    dend_45 { pt3dadd( -161.153, -117.598, 3.62993, 0.81 ) }
    dend_45 { pt3dadd( -162.174, -118.464, 3.36727, 0.81 ) }
    dend_45 { pt3dadd( -163.138, -119.255, 3.11266, 1.11 ) }
    dend_45 { pt3dadd( -163.724, -119.728, 2.95105, 1.25 ) }
    dend_45 { pt3dadd( -164.424, -120.291, 2.75908, 2.14 ) }
    dend_45 { pt3dadd( -165.101, -120.865, 2.54862, 2.5 ) }
    dend_45 { pt3dadd( -166.028, -121.639, 2.26117, 1.92 ) }
    dend_45 { pt3dadd( -167.368, -122.915, 1.76988, 1.11 ) }
    dend_45 { pt3dadd( -167.943, -123.535, 1.52862, 0.96 ) }
    dend_45 { pt3dadd( -168.73, -124.467, 1.17678, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_45 { pt3dadd( -169.742, -125.72, 0.666526, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -12.6679, -133.634, -3.56982, 0.37 ) }
    dend_41 { pt3dadd( -11.7636, -136.057, -2.73087, 0.37 ) }
    dend_41 { pt3dadd( -11.5093, -136.683, -2.54078, 0.52 ) }
    dend_41 { pt3dadd( -11.1923, -137.449, -2.33858, 0.66 ) }
    dend_41 { pt3dadd( -10.8365, -138.323, -2.12764, 0.37 ) }
    dend_41 { pt3dadd( -10.5699, -138.968, -1.98037, 0.44 ) }
    dend_41 { pt3dadd( -10.2582, -139.72, -1.82007, 0.44 ) }
    dend_41 { pt3dadd( -9.88201, -140.616, -1.71606, 0.29 ) }
    dend_41 { pt3dadd( -9.49944, -141.457, -1.61678, 0.29 ) }
    dend_41 { pt3dadd( -9.12238, -142.163, -1.53632, 0.59 ) }
    dend_41 { pt3dadd( -8.73982, -142.772, -1.48392, 0.59 ) }
    dend_41 { pt3dadd( -8.27153, -143.407, -1.44882, 0.37 ) }
    dend_41 { pt3dadd( -7.76513, -144.006, -1.43891, 0.66 ) }
    dend_41 { pt3dadd( -7.26979, -144.512, -1.44847, 0.52 ) }
    dend_41 { pt3dadd( -6.51329, -145.188, -1.49286, 0.37 ) }
    dend_41 { pt3dadd( -5.93383, -145.663, -1.54754, 0.37 ) }
    dend_41 { pt3dadd( -5.06264, -146.364, -1.65623, 0.37 ) }
    dend_41 { pt3dadd( -4.21581, -147.038, -1.78458, 1.03 ) }
    dend_41 { pt3dadd( -3.60136, -147.531, -1.89436, 1.18 ) }
    dend_41 { pt3dadd( -3.02377, -148.004, -2.01723, 0.81 ) }
    dend_41 { pt3dadd( -2.56973, -148.386, -2.12767, 0.52 ) }
    dend_41 { pt3dadd( -1.72037, -149.106, -2.33556, 0.52 ) }
    dend_41 { pt3dadd( -0.915104, -149.816, -2.5363, 0.59 ) }
    dend_41 { pt3dadd( -0.217353, -150.486, -2.73915, 0.59 ) }
    dend_41 { pt3dadd( 0.346465, -151.089, -2.92359, 0.81 ) }
    dend_41 { pt3dadd( 0.802223, -151.614, -3.08301, 0.81 ) }
    dend_41 { pt3dadd( 1.29995, -152.222, -3.2696, 0.66 ) }
    dend_41 { pt3dadd( 1.65626, -152.687, -3.41393, 0.29 ) }
    dend_41 { pt3dadd( 2.46591, -153.816, -3.7611, 0.52 ) }
    dend_41 { pt3dadd( 3.15339, -154.801, -4.06324, 1.03 ) }
    dend_41 { pt3dadd( 3.39847, -155.161, -4.17668, 1.47 ) }
    dend_41 { pt3dadd( 3.84748, -155.79, -4.38552, 1.62 ) }
    dend_41 { pt3dadd( 4.45578, -156.553, -4.66285, 1.03 ) }
    dend_41 { pt3dadd( 5.05275, -157.211, -4.90941, 0.29 ) }
    dend_41 { pt3dadd( 5.6395, -157.783, -5.12439, 0.29 ) }
    dend_41 { pt3dadd( 6.32932, -158.398, -5.37339, 0.37 ) }
    dend_41 { pt3dadd( 7.0483, -159.031, -5.63188, 0.66 ) }
    dend_41 { pt3dadd( 7.42012, -159.354, -5.76019, 0.81 ) }
    dend_41 { pt3dadd( 8.01233, -159.849, -5.94685, 0.96 ) }
    dend_41 { pt3dadd( 8.46212, -160.216, -6.07671, 0.44 ) }
    dend_41 { pt3dadd( 8.82165, -160.504, -6.1684, 0.29 ) }
    dend_41 { pt3dadd( 9.52355, -161.049, -6.31879, 0.29 ) }
    dend_41 { pt3dadd( 10.0526, -161.505, -6.42458, 0.59 ) }
    dend_41 { pt3dadd( 10.5582, -161.997, -6.51909, 0.74 ) }
    dend_41 { pt3dadd( 10.9611, -162.434, -6.59097, 0.74 ) }
    dend_41 { pt3dadd( 11.4981, -163.086, -6.68634, 0.74 ) }
    dend_41 { pt3dadd( 11.9239, -163.657, -6.76813, 0.44 ) }
    dend_41 { pt3dadd( 12.4848, -164.475, -6.88336, 0.29 ) }
    dend_41 { pt3dadd( 12.8131, -164.989, -6.95852, 0.66 ) }
    dend_41 { pt3dadd( 13.2189, -165.643, -7.06248, 0.88 ) }
    dend_41 { pt3dadd( 13.5969, -166.247, -7.16452, 0.96 ) }
    dend_41 { pt3dadd( 14.1435, -167.093, -7.30323, 0.66 ) }
    dend_41 { pt3dadd( 14.7084, -167.96, -7.43989, 0.37 ) }
    dend_41 { pt3dadd( 15.3814, -168.938, -7.59343, 0.74 ) }
    dend_41 { pt3dadd( 15.7577, -169.467, -7.6767, 0.81 ) }
    dend_41 { pt3dadd( 16.1927, -170.086, -7.76873, 0.37 ) }
    dend_41 { pt3dadd( 16.7728, -170.951, -7.88732, 0.37 ) }
    dend_41 { pt3dadd( 17.2696, -171.728, -7.98727, 0.37 ) }
    dend_41 { pt3dadd( 17.6805, -172.393, -8.0721, 0.37 ) }
    dend_41 { pt3dadd( 18.0086, -172.951, -8.14378, 0.52 ) }
    dend_41 { pt3dadd( 18.3986, -173.61, -8.23802, 0.52 ) }
    dend_41 { pt3dadd( 18.8001, -174.28, -8.34702, 0.37 ) }
    dend_41 { pt3dadd( 19.2095, -174.985, -8.47445, 0.37 ) }
    dend_41 { pt3dadd( 19.6904, -175.789, -8.62363, 0.81 ) }
    dend_41 { pt3dadd( 19.9841, -176.23, -8.71184, 0.88 ) }
    dend_41 { pt3dadd( 20.49, -176.904, -8.85999, 0.59 ) }
    dend_41 { pt3dadd( 20.9317, -177.442, -8.98513, 0.37 ) }
    dend_41 { pt3dadd( 21.3864, -177.952, -9.11101, 0.37 ) }
    dend_41 { pt3dadd( 21.9713, -178.566, -9.26547, 0.44 ) }
    dend_41 { pt3dadd( 23.1784, -179.74, -9.57052, 0.44 ) }
    dend_41 { pt3dadd( 23.9741, -180.426, -9.76381, 1.18 ) }
    dend_41 { pt3dadd( 24.5766, -180.905, -9.90409, 1.47 ) }
    dend_41 { pt3dadd( 25.2438, -181.407, -10.0674, 1.47 ) }
    dend_41 { pt3dadd( 26.2248, -182.137, -10.3229, 1.18 ) }
    dend_41 { pt3dadd( 26.9822, -182.741, -10.5424, 0.29 ) }
    dend_41 { pt3dadd( 27.4499, -183.15, -10.6956, 0.29 ) }
    dend_41 { pt3dadd( 27.802, -183.484, -10.8312, 0.29 ) }
    dend_41 { pt3dadd( 28.4202, -184.137, -11.1296, 0.59 ) }
    dend_41 { pt3dadd( 29.0065, -184.845, -11.4704, 0.66 ) }
    dend_41 { pt3dadd( 29.3208, -185.289, -11.6925, 0.74 ) }
    dend_41 { pt3dadd( 29.6372, -185.805, -11.941, 0.59 ) }
    dend_41 { pt3dadd( 29.9794, -186.442, -12.2277, 0.44 ) }
    dend_41 { pt3dadd( 30.3827, -187.256, -12.5861, 0.29 ) }
    dend_41 { pt3dadd( 30.6132, -187.806, -12.8075, 0.37 ) }
    dend_41 { pt3dadd( 30.941, -188.729, -13.1543, 0.52 ) }
    dend_41 { pt3dadd( 31.1572, -189.436, -13.3812, 1.03 ) }
    dend_41 { pt3dadd( 31.3615, -190.176, -13.6121, 1.55 ) }
    dend_41 { pt3dadd( 31.5398, -190.817, -13.8031, 1.55 ) }
    dend_41 { pt3dadd( 31.9817, -192.435, -14.2781, 0.44 ) }
    dend_41 { pt3dadd( 32.2875, -193.49, -14.6034, 0.37 ) }
    dend_41 { pt3dadd( 33.0826, -195.845, -15.4202, 0.29 ) }
    dend_41 { pt3dadd( 33.2915, -196.345, -15.615, 0.29 ) }
    dend_41 { pt3dadd( 33.9745, -197.634, -16.1736, 1.47 ) }
    dend_41 { pt3dadd( 34.2635, -198.052, -16.3844, 1.92 ) }
    dend_41 { pt3dadd( 34.8668, -198.723, -16.799, 2.06 ) }
    dend_41 { pt3dadd( 35.7947, -199.549, -17.4599, 0.81 ) }
    dend_41 { pt3dadd( 37.0137, -200.419, -18.3886, 0.29 ) }
    dend_41 { pt3dadd( 37.7821, -200.932, -19.0021, 0.29 ) }
    dend_41 { pt3dadd( 38.7914, -201.579, -19.7953, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 39.291, -201.903, -20.1603, 0.52 ) }
    dend_41 { pt3dadd( 40.4872, -202.704, -20.9509, 0.29 ) }
    dend_41 { pt3dadd( 41.3782, -203.328, -21.451, 0.88 ) }
    dend_41 { pt3dadd( 41.9055, -203.713, -21.672, 0.74 ) }
    dend_41 { pt3dadd( 43.1703, -204.714, -21.9723, 0.29 ) }
    dend_41 { pt3dadd( 44.0729, -205.451, -22.0372, 0.29 ) }
    dend_41 { pt3dadd( 44.9635, -206.194, -22.0061, 0.59 ) }
    dend_41 { pt3dadd( 45.5434, -206.687, -21.936, 0.66 ) }
    dend_41 { pt3dadd( 46.6439, -207.648, -21.7637, 0.29 ) }
    dend_41 { pt3dadd( 47.7408, -208.657, -21.5969, 0.29 ) }
    dend_41 { pt3dadd( 48.4502, -209.382, -21.528, 0.29 ) }
    dend_41 { pt3dadd( 49.092, -210.132, -21.499, 1.03 ) }
    dend_41 { pt3dadd( 49.5518, -210.72, -21.5103, 1.47 ) }
    dend_41 { pt3dadd( 49.9621, -211.288, -21.5573, 1.18 ) }
    dend_41 { pt3dadd( 50.7029, -212.394, -21.7119, 0.22 ) }
    dend_41 { pt3dadd( 51.3603, -213.415, -21.8828, 0.22 ) }
    dend_41 { pt3dadd( 52.1951, -214.733, -22.1362, 0.22 ) }
    dend_41 { pt3dadd( 52.5523, -215.276, -22.246, 0.52 ) }
    dend_41 { pt3dadd( 53.1705, -216.182, -22.4384, 0.29 ) }
    dend_41 { pt3dadd( 53.7567, -217.019, -22.629, 0.29 ) }
    dend_41 { pt3dadd( 54.1294, -217.524, -22.7614, 0.88 ) }
    dend_41 { pt3dadd( 54.6436, -218.202, -22.9207, 0.88 ) }
    dend_41 { pt3dadd( 55.403, -219.227, -23.1353, 0.29 ) }
    dend_41 { pt3dadd( 55.7504, -219.702, -23.214, 0.29 ) }
    dend_41 { pt3dadd( 56.3649, -220.521, -23.2909, 0.96 ) }
    dend_41 { pt3dadd( 56.8014, -221.062, -23.2913, 1.4 ) }
    dend_41 { pt3dadd( 57.2679, -221.611, -23.2511, 1.77 ) }
    dend_41 { pt3dadd( 57.5627, -221.934, -23.2062, 1.77 ) }
    dend_41 { pt3dadd( 58.7234, -223.128, -23.0061, 0.22 ) }
    dend_41 { pt3dadd( 59.9196, -224.272, -22.7642, 0.22 ) }
    dend_41 { pt3dadd( 60.864, -225.098, -22.5791, 0.88 ) }
    dend_41 { pt3dadd( 61.2906, -225.455, -22.5072, 1.33 ) }
    dend_41 { pt3dadd( 61.7277, -225.808, -22.4576, 1.33 ) }
    dend_41 { pt3dadd( 62.7254, -226.59, -22.3751, 0.22 ) }
    dend_41 { pt3dadd( 63.9601, -227.53, -22.3261, 0.22 ) }
    dend_41 { pt3dadd( 65.2668, -228.543, -22.3466, 0.22 ) }
    dend_41 { pt3dadd( 66.4476, -229.507, -22.4313, 0.22 ) }
    dend_41 { pt3dadd( 67.132, -230.095, -22.5052, 0.74 ) }
    dend_41 { pt3dadd( 67.499, -230.433, -22.5585, 0.88 ) }
    dend_41 { pt3dadd( 67.9249, -230.863, -22.6435, 0.52 ) }
    dend_41 { pt3dadd( 68.6623, -231.731, -22.8487, 0.22 ) }
    dend_41 { pt3dadd( 69.0278, -232.226, -22.9672, 0.88 ) }
    dend_41 { pt3dadd( 69.4256, -232.811, -23.093, 1.33 ) }
    dend_41 { pt3dadd( 69.7391, -233.298, -23.1842, 1.33 ) }
    dend_41 { pt3dadd( 70.4646, -234.489, -23.3761, 0.29 ) }
    dend_41 { pt3dadd( 71.3031, -235.948, -23.5611, 0.29 ) }
    dend_41 { pt3dadd( 71.7068, -236.674, -23.6245, 0.44 ) }
    dend_41 { pt3dadd( 72.0573, -237.312, -23.6564, 0.59 ) }
    dend_41 { pt3dadd( 72.3769, -237.897, -23.6663, 0.59 ) }
    dend_41 { pt3dadd( 72.889, -238.833, -23.654, 0.22 ) }
    dend_41 { pt3dadd( 73.4083, -239.794, -23.6237, 0.22 ) }
    dend_41 { pt3dadd( 73.7313, -240.38, -23.6051, 0.74 ) }
    dend_41 { pt3dadd( 73.9264, -240.729, -23.6006, 0.88 ) }
    dend_41 { pt3dadd( 74.187, -241.176, -23.6131, 0.88 ) }
    dend_41 { pt3dadd( 74.7097, -242.049, -23.6435, 0.22 ) }
    dend_41 { pt3dadd( 75.6383, -243.529, -23.7254, 0.22 ) }
    dend_41 { pt3dadd( 76.0536, -244.178, -23.7838, 0.52 ) }
    dend_41 { pt3dadd( 76.3229, -244.601, -23.8355, 0.66 ) }
    dend_41 { pt3dadd( 76.7441, -245.259, -23.9302, 0.44 ) }
    dend_41 { pt3dadd( 82.9962, -251.952, -26.7418, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 60/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -12.6679, -133.634, -3.56982, 2.28 ) }
    dend_34 { pt3dadd( -13.1344, -134.765, -3.27138, 2.28 ) }
    dend_34 { pt3dadd( -13.5669, -135.732, -2.95306, 1.62 ) }
    dend_34 { pt3dadd( -14.1239, -136.881, -2.55427, 1.33 ) }
    dend_34 { pt3dadd( -14.69, -137.961, -2.18205, 0.88 ) }
    dend_34 { pt3dadd( -14.971, -138.458, -2.01285, 0.88 ) }
    dend_34 { pt3dadd( -15.4224, -139.187, -1.7632, 1.03 ) }
    dend_34 { pt3dadd( -16.3355, -140.488, -1.30726, 1.03 ) }
    dend_34 { pt3dadd( -17.1342, -141.479, -0.950313, 0.96 ) }
    dend_34 { pt3dadd( -17.7791, -142.194, -0.705503, 0.88 ) }
    dend_34 { pt3dadd( -18.3403, -142.802, -0.535236, 1.11 ) }
    dend_34 { pt3dadd( -18.9671, -143.536, -0.405772, 1.33 ) }
    dend_34 { pt3dadd( -19.4707, -144.235, -0.361923, 1.55 ) }
    dend_34 { pt3dadd( -19.8857, -144.948, -0.390672, 1.25 ) }
    dend_34 { pt3dadd( -20.1976, -145.67, -0.474484, 0.96 ) }
    dend_34 { pt3dadd( -20.4811, -146.664, -0.640482, 0.88 ) }
    dend_34 { pt3dadd( -20.7134, -147.899, -0.892963, 0.88 ) }
    dend_34 { pt3dadd( -20.8792, -149.221, -1.18151, 0.88 ) }
    dend_34 { pt3dadd( -20.984, -150.385, -1.43758, 1.03 ) }
    dend_34 { pt3dadd( -21.0521, -151.473, -1.67205, 1.03 ) }
    dend_34 { pt3dadd( -21.1127, -152.755, -1.92681, 1.03 ) }
    dend_34 { pt3dadd( -21.1524, -153.925, -2.13644, 1.25 ) }
    dend_34 { pt3dadd( -21.1693, -155.275, -2.34394, 1.55 ) }
    dend_34 { pt3dadd( -21.15, -156.309, -2.47686, 1.55 ) }
    dend_34 { pt3dadd( -21.0705, -157.735, -2.63466, 1.33 ) }
    dend_34 { pt3dadd( -20.9756, -158.901, -2.7486, 1.33 ) }
    dend_34 { pt3dadd( -20.8899, -159.943, -2.83736, 1.11 ) }
    dend_34 { pt3dadd( -20.7809, -161.059, -2.88785, 1.11 ) }
    dend_34 { pt3dadd( -20.6742, -162.287, -2.89989, 0.96 ) }
    dend_34 { pt3dadd( -20.6193, -163.2, -2.87928, 0.96 ) }
    dend_34 { pt3dadd( -20.5752, -164.523, -2.79269, 0.88 ) }
    dend_34 { pt3dadd( -20.5548, -166.269, -2.62627, 0.88 ) }
    dend_34 { pt3dadd( -20.5628, -167.784, -2.43762, 1.03 ) }
    dend_34 { pt3dadd( -20.5886, -169.133, -2.23615, 1.25 ) }
    dend_34 { pt3dadd( -20.6327, -170.416, -2.0213, 1.33 ) }
    dend_34 { pt3dadd( -20.6798, -171.426, -1.83894, 1.62 ) }
    dend_34 { pt3dadd( -20.7172, -172.465, -1.64108, 2.5 ) }
    dend_34 { pt3dadd( -20.7195, -173.029, -1.5398, 2.8 ) }
    dend_34 { pt3dadd( -20.716, -173.726, -1.44854, 3.02 ) }
    dend_34 { pt3dadd( -20.6848, -174.38, -1.36541, 3.02 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( -20.6599, -174.818, -1.31288, 3.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -2.25426, -63.3646, -8.19502, 0.81 ) }
    dend_30 { pt3dadd( -2.48951, -65.0036, -8.07422, 0.81 ) }
    dend_30 { pt3dadd( -2.71598, -66.1092, -7.92685, 0.66 ) }
    dend_30 { pt3dadd( -3.03971, -67.3469, -7.72269, 0.66 ) }
    dend_30 { pt3dadd( -3.42534, -68.6446, -7.49169, 0.52 ) }
    dend_30 { pt3dadd( -3.58691, -69.1633, -7.39802, 0.52 ) }
    dend_30 { pt3dadd( -4.01687, -70.5298, -7.15461, 0.74 ) }
    dend_30 { pt3dadd( -4.42861, -71.9193, -6.85458, 0.74 ) }
    dend_30 { pt3dadd( -4.80273, -73.0694, -6.60724, 0.88 ) }
    dend_30 { pt3dadd( -5.25551, -74.317, -6.35442, 0.59 ) }
    dend_30 { pt3dadd( -5.56357, -75.13, -6.21829, 1.03 ) }
    dend_30 { pt3dadd( -5.84401, -75.9274, -6.09957, 1.25 ) }
    dend_30 { pt3dadd( -6.11089, -76.863, -5.98237, 1.03 ) }
    dend_30 { pt3dadd( -6.37878, -78.0692, -5.85985, 0.66 ) }
    dend_30 { pt3dadd( -6.57562, -79.0524, -5.77103, 0.66 ) }
    dend_30 { pt3dadd( -6.78134, -80.0669, -5.69435, 0.81 ) }
    dend_30 { pt3dadd( -7.014, -81.2539, -5.64105, 0.81 ) }
    dend_30 { pt3dadd( -7.18487, -82.2462, -5.64705, 0.66 ) }
    dend_30 { pt3dadd( -7.32203, -83.2955, -5.71388, 0.52 ) }
    dend_30 { pt3dadd( -7.38844, -83.9175, -5.79675, 0.52 ) }
    dend_30 { pt3dadd( -7.46691, -84.6795, -5.9205, 0.52 ) }
    dend_30 { pt3dadd( -7.59181, -85.7655, -6.12115, 0.66 ) }
    dend_30 { pt3dadd( -7.72446, -86.7521, -6.30811, 0.66 ) }
    dend_30 { pt3dadd( -7.88899, -87.795, -6.50852, 0.59 ) }
    dend_30 { pt3dadd( -8.09282, -88.9392, -6.71154, 1.18 ) }
    dend_30 { pt3dadd( -8.26002, -89.9356, -6.88137, 1.55 ) }
    dend_30 { pt3dadd( -8.4343, -90.8891, -7.0202, 1.99 ) }
    dend_30 { pt3dadd( -8.71602, -92.0449, -7.14211, 2.73 ) }
    dend_30 { pt3dadd( -8.9784, -92.9007, -7.19805, 2.87 ) }
    dend_30 { pt3dadd( -9.2675, -93.6997, -7.23874, 3.02 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -2.25426, -63.3646, -8.19502, 0.52 ) }
    dend_29 { pt3dadd( -1.84684, -64.6667, -9.47819, 0.52 ) }
    dend_29 { pt3dadd( -1.75485, -64.9741, -9.74872, 0.52 ) }
    dend_29 { pt3dadd( -1.42482, -65.9892, -10.6483, 0.52 ) }
    dend_29 { pt3dadd( -1.14313, -66.7411, -11.3296, 0.66 ) }
    dend_29 { pt3dadd( -0.945809, -67.2008, -11.7357, 0.66 ) }
    dend_29 { pt3dadd( -0.755479, -67.5886, -12.076, 0.44 ) }
    dend_29 { pt3dadd( -0.533166, -68.1248, -12.5333, 0.88 ) }
    dend_29 { pt3dadd( -0.330851, -68.6291, -12.9251, 1.33 ) }
    dend_29 { pt3dadd( -0.0988067, -69.1728, -13.3136, 1.47 ) }
    dend_29 { pt3dadd( 0.153013, -69.8016, -13.83, 1.03 ) }
    dend_29 { pt3dadd( 0.40371, -70.78, -14.7213, 0.44 ) }
    dend_29 { pt3dadd( 0.368898, -71.3776, -15.3441, 0.44 ) }
    dend_29 { pt3dadd( 0.112983, -72.0622, -16.2168, 0.37 ) }
    dend_29 { pt3dadd( -0.170551, -72.5578, -16.9547, 0.37 ) }
    dend_29 { pt3dadd( -0.563997, -73.1921, -18.0657, 0.37 ) }
    dend_29 { pt3dadd( -0.814085, -73.6059, -18.9148, 0.74 ) }
    dend_29 { pt3dadd( -0.955794, -73.8862, -19.5627, 0.96 ) }
    dend_29 { pt3dadd( -1.07459, -74.2756, -20.4644, 0.96 ) }
    dend_29 { pt3dadd( -1.20567, -74.9829, -22.0517, 0.44 ) }
    dend_29 { pt3dadd( -1.22731, -75.4705, -23.067, 1.33 ) }
    dend_29 { pt3dadd( -1.19449, -76.1422, -24.3491, 1.55 ) }
    dend_29 { pt3dadd( -1.15073, -76.7615, -25.4673, 1.33 ) }
    dend_29 { pt3dadd( -1.06774, -77.6088, -26.8709, 0.81 ) }
    dend_29 { pt3dadd( -1.01526, -77.9729, -27.4149, 1.25 ) }
    dend_29 { pt3dadd( -0.917671, -78.4253, -28.0122, 0.88 ) }
    dend_29 { pt3dadd( -0.806387, -78.9352, -28.5886, 0.37 ) }
    dend_29 { pt3dadd( -0.70491, -79.3863, -29.0117, 0.81 ) }
    dend_29 { pt3dadd( -0.600702, -79.8708, -29.4112, 1.03 ) }
    dend_29 { pt3dadd( -0.52434, -80.1626, -29.6274, 1.03 ) }
    dend_29 { pt3dadd( -0.216897, -81.1746, -30.351, 0.29 ) }
    dend_29 { pt3dadd( -0.0431457, -81.6887, -30.6994, 0.29 ) }
    dend_29 { pt3dadd( 0.220018, -82.3551, -31.1252, 1.84 ) }
    dend_29 { pt3dadd( 0.484647, -82.9158, -31.4922, 2.14 ) }
    dend_29 { pt3dadd( 1.24174, -84.2976, -32.4619, 0.29 ) }
    dend_29 { pt3dadd( 1.64415, -84.9303, -32.9305, 0.81 ) }
    dend_29 { pt3dadd( 2.06345, -85.4977, -33.371, 0.81 ) }
    dend_29 { pt3dadd( 2.50699, -86.0254, -33.8165, 0.52 ) }
    dend_29 { pt3dadd( 3.11555, -86.6744, -34.4358, 1.25 ) }
    dend_29 { pt3dadd( 3.51293, -87.0677, -34.8521, 1.4 ) }
    dend_29 { pt3dadd( 4.53517, -88.0397, -35.9227, 0.22 ) }
    dend_29 { pt3dadd( 5.1705, -88.6314, -36.5558, 0.22 ) }
    dend_29 { pt3dadd( 5.89515, -89.3087, -37.2421, 1.4 ) }
    dend_29 { pt3dadd( 6.35114, -89.7601, -37.6531, 2.21 ) }
    dend_29 { pt3dadd( 6.56199, -89.9847, -37.827, 2.21 ) }
    dend_29 { pt3dadd( 7.94181, -91.5742, -38.8694, 0.22 ) }
    dend_29 { pt3dadd( 8.31304, -92.0229, -39.1385, 0.74 ) }
    dend_29 { pt3dadd( 8.64007, -92.4394, -39.3827, 1.03 ) }
    dend_29 { pt3dadd( 9.16595, -93.1617, -39.7871, 0.59 ) }
    dend_29 { pt3dadd( 10.3901, -94.947, -40.747, 0.22 ) }
    dend_29 { pt3dadd( 11.9341, -97.2682, -42.0026, 0.22 ) }
    dend_29 { pt3dadd( 12.4667, -98.0934, -42.4726, 0.81 ) }
    dend_29 { pt3dadd( 12.8599, -98.7032, -42.8328, 0.96 ) }
    dend_29 { pt3dadd( 14.128, -100.69, -44.0448, 0.22 ) }
    dend_29 { pt3dadd( 14.9139, -101.916, -44.8441, 0.22 ) }
    dend_29 { pt3dadd( 15.3409, -102.593, -45.3232, 0.88 ) }
    dend_29 { pt3dadd( 15.755, -103.248, -45.8328, 0.88 ) }
    dend_29 { pt3dadd( 16.9146, -105.08, -47.3111, 0.15 ) }
    dend_29 { pt3dadd( 17.8013, -106.418, -48.3711, 0.15 ) }
    dend_29 { pt3dadd( 18.3222, -107.173, -48.9831, 0.15 ) }
    dend_29 { pt3dadd( 18.7969, -107.862, -49.5309, 1.62 ) }
    dend_29 { pt3dadd( 19.0937, -108.307, -49.865, 1.92 ) }
    dend_29 { pt3dadd( 19.3326, -108.664, -50.1094, 1.92 ) }
    dend_29 { pt3dadd( 20.8932, -111.043, -51.6154, 0.22 ) }
    dend_29 { pt3dadd( 21.2314, -111.552, -51.9146, 0.66 ) }
    dend_29 { pt3dadd( 21.4895, -111.948, -52.1353, 0.88 ) }
    dend_29 { pt3dadd( 21.7541, -112.351, -52.3633, 0.88 ) }
    dend_29 { pt3dadd( 22.5807, -113.668, -53.2048, 0.15 ) }
    dend_29 { pt3dadd( 23.1604, -114.735, -53.9931, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_29 { pt3dadd( 23.4462, -115.385, -54.525, 0.81 ) }
    dend_29 { pt3dadd( 23.6057, -115.851, -54.9095, 1.03 ) }
    dend_29 { pt3dadd( 23.7127, -116.273, -55.2592, 1.03 ) }
    dend_29 { pt3dadd( 23.9344, -117.697, -56.4486, 0.22 ) }
    dend_29 { pt3dadd( 24.0122, -119.245, -57.7654, 0.22 ) }
    dend_29 { pt3dadd( 24.0137, -119.875, -58.333, 0.22 ) }
    dend_29 { pt3dadd( 23.9945, -120.787, -59.1983, 1.03 ) }
    dend_29 { pt3dadd( 23.9859, -121.261, -59.6525, 1.62 ) }
    dend_29 { pt3dadd( 23.9737, -121.739, -60.1363, 1.62 ) }
    dend_29 { pt3dadd( 23.9609, -122.544, -61.0063, 1.03 ) }
    dend_29 { pt3dadd( 23.9569, -124.192, -62.8799, 0.22 ) }
    dend_29 { pt3dadd( 23.9368, -124.961, -63.8484, 0.44 ) }
    dend_29 { pt3dadd( 23.935, -125.383, -64.4109, 0.44 ) }
    dend_29 { pt3dadd( 23.9422, -126.314, -65.6633, 0.66 ) }
    dend_29 { pt3dadd( 23.9589, -126.783, -66.2792, 0.96 ) }
    dend_29 { pt3dadd( 23.9934, -127.324, -66.979, 0.37 ) }
    dend_29 { pt3dadd( 24.1598, -129.06, -69.1458, 0.66 ) }
    dend_29 { pt3dadd( 24.2104, -129.416, -69.5815, 0.66 ) }
    dend_29 { pt3dadd( 24.4221, -130.709, -71.1816, 0.22 ) }
    dend_29 { pt3dadd( 24.5693, -131.392, -71.9975, 0.22 ) }
    dend_29 { pt3dadd( 24.7263, -131.999, -72.7129, 0.81 ) }
    dend_29 { pt3dadd( 24.9121, -132.545, -73.3439, 0.96 ) }
    dend_29 { pt3dadd( 25.0791, -132.9, -73.6658, 0.96 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 10.1835, 150.868, -38.9622, 0.37 ) }
    dend_24 { pt3dadd( 11.9831, 150.102, -35.9931, 0.37 ) }
    dend_24 { pt3dadd( 12.3503, 149.946, -35.3872, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 10.1835, 150.868, -38.9622, 0.22 ) }
    dend_23 { pt3dadd( 11.4371, 153.484, -39.4363, 0.22 ) }
    dend_23 { pt3dadd( 12.071, 154.903, -39.75, 0.22 ) }
    dend_23 { pt3dadd( 12.5537, 156.026, -40.0217, 0.74 ) }
    dend_23 { pt3dadd( 12.7234, 156.442, -40.1255, 0.74 ) }
    dend_23 { pt3dadd( 13.5098, 158.371, -40.606, 0.15 ) }
    dend_23 { pt3dadd( 14.0186, 159.619, -40.917, 0.15 ) }
    dend_23 { pt3dadd( 14.3762, 160.511, -41.2435, 0.66 ) }
    dend_23 { pt3dadd( 14.5589, 161.066, -41.4214, 0.88 ) }
    dend_23 { pt3dadd( 14.7569, 161.704, -41.5877, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 36/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -10.6833, 49.3084, 3.12024, 0.66 ) }
    dend_17 { pt3dadd( -10.9095, 51.2271, 2.9947, 0.66 ) }
    dend_17 { pt3dadd( -10.9578, 51.948, 2.99859, 0.96 ) }
    dend_17 { pt3dadd( -11.0173, 52.7923, 3.0184, 0.96 ) }
    dend_17 { pt3dadd( -11.0983, 53.9444, 3.06128, 0.59 ) }
    dend_17 { pt3dadd( -11.1635, 54.9639, 3.11135, 0.59 ) }
    dend_17 { pt3dadd( -11.2272, 56.168, 3.18469, 0.59 ) }
    dend_17 { pt3dadd( -11.3083, 57.9114, 3.35716, 0.59 ) }
    dend_17 { pt3dadd( -11.3261, 58.7325, 3.45278, 0.52 ) }
    dend_17 { pt3dadd( -11.3321, 59.9574, 3.61178, 0.88 ) }
    dend_17 { pt3dadd( -11.3341, 60.8458, 3.72106, 1.11 ) }
    dend_17 { pt3dadd( -11.3493, 61.9079, 3.8302, 1.11 ) }
    dend_17 { pt3dadd( -11.3821, 63.1317, 3.9493, 0.74 ) }
    dend_17 { pt3dadd( -11.4419, 64.4158, 4.06256, 0.74 ) }
    dend_17 { pt3dadd( -11.5351, 66.0594, 4.20471, 0.74 ) }
    dend_17 { pt3dadd( -11.6159, 67.1948, 4.28715, 0.52 ) }
    dend_17 { pt3dadd( -11.7168, 68.4116, 4.34879, 0.52 ) }
    dend_17 { pt3dadd( -11.7941, 69.2894, 4.37828, 0.96 ) }
    dend_17 { pt3dadd( -11.8994, 70.5882, 4.39578, 1.11 ) }
    dend_17 { pt3dadd( -12.0463, 72.5172, 4.39021, 1.11 ) }
    dend_17 { pt3dadd( -12.1343, 73.7861, 4.37235, 1.11 ) }
    dend_17 { pt3dadd( -12.2086, 75.0492, 4.37158, 0.81 ) }
    dend_17 { pt3dadd( -12.2604, 76.158, 4.38606, 0.74 ) }
    dend_17 { pt3dadd( -12.2966, 77.3112, 4.42215, 0.74 ) }
    dend_17 { pt3dadd( -12.3125, 78.3897, 4.4834, 0.44 ) }
    dend_17 { pt3dadd( -12.3277, 79.3, 4.55498, 0.44 ) }
    dend_17 { pt3dadd( -12.3757, 80.7944, 4.70706, 0.74 ) }
    dend_17 { pt3dadd( -12.4177, 81.8241, 4.83111, 0.74 ) }
    dend_17 { pt3dadd( -12.4604, 82.9176, 4.97432, 0.37 ) }
    dend_17 { pt3dadd( -12.479, 84.0506, 5.14328, 0.74 ) }
    dend_17 { pt3dadd( -12.4665, 85.0427, 5.26399, 0.96 ) }
    dend_17 { pt3dadd( -12.4231, 86.184, 5.36675, 0.96 ) }
    dend_17 { pt3dadd( -12.3404, 87.4455, 5.42609, 0.81 ) }
    dend_17 { pt3dadd( -12.237, 88.6324, 5.45424, 0.52 ) }
    dend_17 { pt3dadd( -12.1018, 89.8748, 5.46432, 0.52 ) }
    dend_17 { pt3dadd( -11.8763, 91.5054, 5.47285, 1.03 ) }
    dend_17 { pt3dadd( -11.7368, 92.3719, 5.47761, 1.55 ) }
    dend_17 { pt3dadd( -11.6007, 93.1555, 5.4787, 1.69 ) }
    dend_17 { pt3dadd( -11.5112, 93.666, 5.48021, 1.69 ) }
    dend_17 { pt3dadd( -11.2941, 94.9262, 5.50607, 0.37 ) }
    dend_17 { pt3dadd( -11.124, 95.9765, 5.5651, 0.44 ) }
    dend_17 { pt3dadd( -11.0317, 96.519, 5.63506, 0.44 ) }
    dend_17 { pt3dadd( -10.9165, 97.1413, 5.74043, 0.44 ) }
    dend_17 { pt3dadd( -10.7172, 98.168, 5.94542, 0.29 ) }
    dend_17 { pt3dadd( -10.6202, 98.6035, 6.04146, 0.59 ) }
    dend_17 { pt3dadd( -10.4271, 99.3406, 6.2214, 0.44 ) }
    dend_17 { pt3dadd( -10.1127, 100.499, 6.51457, 0.29 ) }
    dend_17 { pt3dadd( -9.83862, 101.574, 6.78214, 1.18 ) }
    dend_17 { pt3dadd( -9.70172, 102.152, 6.92359, 1.18 ) }
    dend_17 { pt3dadd( -9.50141, 103.021, 7.13118, 0.52 ) }
    dend_17 { pt3dadd( -9.3106, 103.855, 7.3295, 0.29 ) }
    dend_17 { pt3dadd( -9.09872, 104.804, 7.5831, 0.29 ) }
    dend_17 { pt3dadd( -8.94187, 105.66, 7.8474, 0.29 ) }
    dend_17 { pt3dadd( -8.86728, 106.219, 8.03511, 0.29 ) }
    dend_17 { pt3dadd( -8.76883, 107.33, 8.42686, 0.81 ) }
    dend_17 { pt3dadd( -8.70924, 108.303, 8.785, 0.44 ) }
    dend_17 { pt3dadd( -8.63417, 109.234, 9.12997, 0.22 ) }
    dend_17 { pt3dadd( -8.51534, 110.173, 9.48601, 0.44 ) }
    dend_17 { pt3dadd( -8.46411, 110.532, 9.62916, 0.44 ) }
    dend_17 { pt3dadd( -8.36108, 111.302, 9.93701, 0.29 ) }
    dend_17 { pt3dadd( -8.28447, 111.998, 10.2125, 0.29 ) }
    dend_17 { pt3dadd( -8.16722, 112.951, 10.5717, 0.29 ) }
    dend_17 { pt3dadd( -8.07803, 113.561, 10.7834, 0.29 ) }
    dend_17 { pt3dadd( -7.95382, 114.347, 11.05, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( -7.85958, 114.985, 11.2704, 0.66 ) }
    dend_17 { pt3dadd( -7.73591, 115.795, 11.528, 0.74 ) }
    dend_17 { pt3dadd( -7.63692, 116.679, 11.7954, 0.37 ) }
    dend_17 { pt3dadd( -7.58069, 117.371, 11.9977, 0.37 ) }
    dend_17 { pt3dadd( -7.49372, 118.342, 12.2514, 0.52 ) }
    dend_17 { pt3dadd( -7.41203, 119.078, 12.4193, 0.59 ) }
    dend_17 { pt3dadd( -7.27848, 120.198, 12.6619, 0.44 ) }
    dend_17 { pt3dadd( -7.1778, 120.989, 12.8277, 0.29 ) }
    dend_17 { pt3dadd( -7.10225, 121.542, 12.9492, 0.29 ) }
    dend_17 { pt3dadd( -6.94393, 122.765, 13.2303, 1.11 ) }
    dend_17 { pt3dadd( -6.8589, 123.464, 13.3976, 1.25 ) }
    dend_17 { pt3dadd( -6.80184, 123.963, 13.5214, 1.25 ) }
    dend_17 { pt3dadd( -6.66711, 125.009, 13.7896, 0.66 ) }
    dend_17 { pt3dadd( -6.55832, 125.633, 13.9426, 0.29 ) }
    dend_17 { pt3dadd( -6.35576, 126.604, 14.184, 0.29 ) }
    dend_17 { pt3dadd( -6.14905, 127.471, 14.4034, 0.29 ) }
    dend_17 { pt3dadd( -5.939, 128.254, 14.6064, 0.29 ) }
    dend_17 { pt3dadd( -5.59565, 129.424, 14.9125, 0.96 ) }
    dend_17 { pt3dadd( -5.4413, 129.933, 15.0381, 1.47 ) }
    dend_17 { pt3dadd( -5.31684, 130.369, 15.1338, 1.47 ) }
    dend_17 { pt3dadd( -5.24979, 130.628, 15.1826, 1.47 ) }
    dend_17 { pt3dadd( -5.08034, 131.384, 15.3126, 0.74 ) }
    dend_17 { pt3dadd( -4.90743, 132.254, 15.4584, 0.29 ) }
    dend_17 { pt3dadd( -4.75685, 133.146, 15.6021, 0.52 ) }
    dend_17 { pt3dadd( -4.61924, 133.97, 15.7398, 0.74 ) }
    dend_17 { pt3dadd( -4.42526, 135.015, 15.9335, 0.44 ) }
    dend_17 { pt3dadd( -4.25318, 135.845, 16.1019, 0.29 ) }
    dend_17 { pt3dadd( -4.11841, 136.426, 16.2297, 0.29 ) }
    dend_17 { pt3dadd( -3.90585, 137.221, 16.424, 0.66 ) }
    dend_17 { pt3dadd( -3.73694, 137.788, 16.5705, 0.74 ) }
    dend_17 { pt3dadd( -3.48869, 138.587, 16.7805, 0.74 ) }
    dend_17 { pt3dadd( -3.21959, 139.482, 17.0185, 0.29 ) }
    dend_17 { pt3dadd( -2.99568, 140.283, 17.2284, 0.29 ) }
    dend_17 { pt3dadd( -2.58141, 141.897, 17.6408, 0.29 ) }
    dend_17 { pt3dadd( -2.35465, 142.996, 17.9554, 0.52 ) }
    dend_17 { pt3dadd( -2.2464, 143.659, 18.1591, 1.18 ) }
    dend_17 { pt3dadd( -2.17728, 144.233, 18.3427, 1.4 ) }
    dend_17 { pt3dadd( -2.10368, 145.168, 18.6472, 1.4 ) }
    dend_17 { pt3dadd( -2.0733, 145.903, 18.8862, 0.66 ) }
    dend_17 { pt3dadd( -2.02446, 147.625, 19.441, 0.29 ) }
    dend_17 { pt3dadd( -1.97115, 148.711, 19.7766, 0.29 ) }
    dend_17 { pt3dadd( -1.90422, 149.368, 19.956, 0.37 ) }
    dend_17 { pt3dadd( -1.77014, 150.256, 20.1663, 0.37 ) }
    dend_17 { pt3dadd( -1.59063, 151.174, 20.3612, 0.37 ) }
    dend_17 { pt3dadd( -1.19771, 152.803, 20.6686, 0.37 ) }
    dend_17 { pt3dadd( -0.675981, 154.574, 20.9495, 0.37 ) }
    dend_17 { pt3dadd( -0.120243, 156.292, 21.225, 1.33 ) }
    dend_17 { pt3dadd( 0.179979, 157.116, 21.3553, 1.99 ) }
    dend_17 { pt3dadd( 0.436297, 157.769, 21.4561, 1.99 ) }
    dend_17 { pt3dadd( 0.547054, 158.045, 21.4964, 1.99 ) }
    dend_17 { pt3dadd( 0.753313, 158.556, 21.572, 1.99 ) }
    dend_17 { pt3dadd( 1.17854, 159.619, 21.749, 0.59 ) }
    dend_17 { pt3dadd( 1.66046, 160.849, 21.9979, 0.29 ) }
    dend_17 { pt3dadd( 1.98471, 161.704, 22.2176, 0.59 ) }
    dend_17 { pt3dadd( 2.23042, 162.363, 22.4077, 0.59 ) }
    dend_17 { pt3dadd( 2.73394, 163.74, 22.8445, 0.37 ) }
    dend_17 { pt3dadd( 2.99551, 164.504, 23.1021, 0.37 ) }
    dend_17 { pt3dadd( 3.3811, 165.739, 23.54, 0.37 ) }
    dend_17 { pt3dadd( 3.79192, 167.226, 24.0832, 0.74 ) }
    dend_17 { pt3dadd( 3.9359, 167.839, 24.2948, 0.74 ) }
    dend_17 { pt3dadd( 4.05191, 168.476, 24.5042, 0.88 ) }
    dend_17 { pt3dadd( 4.16948, 169.403, 24.7888, 0.44 ) }
    dend_17 { pt3dadd( 4.31569, 171.015, 25.2139, 0.29 ) }
    dend_17 { pt3dadd( 4.37428, 171.886, 25.3793, 0.52 ) }
    dend_17 { pt3dadd( 4.46935, 173.516, 25.5718, 1.25 ) }
    dend_17 { pt3dadd( 4.50257, 174.213, 25.6288, 1.62 ) }
    dend_17 { pt3dadd( 4.52942, 174.674, 25.6444, 1.62 ) }
    dend_17 { pt3dadd( 4.59634, 175.624, 25.6363, 0.96 ) }
    dend_17 { pt3dadd( 4.72966, 177.048, 25.5693, 0.29 ) }
    dend_17 { pt3dadd( 4.8329, 177.866, 25.5243, 0.29 ) }
    dend_17 { pt3dadd( 4.98134, 178.859, 25.4882, 0.29 ) }
    dend_17 { pt3dadd( 5.1283, 179.897, 25.4807, 0.74 ) }
    dend_17 { pt3dadd( 5.18076, 180.366, 25.494, 0.96 ) }
    dend_17 { pt3dadd( 5.22592, 180.908, 25.5303, 0.96 ) }
    dend_17 { pt3dadd( 5.31777, 182.279, 25.6494, 0.52 ) }
    dend_17 { pt3dadd( 5.44532, 184.172, 25.8035, 0.37 ) }
    dend_17 { pt3dadd( 5.5276, 185.471, 25.9111, 0.29 ) }
    dend_17 { pt3dadd( 5.59377, 186.697, 25.9998, 0.66 ) }
    dend_17 { pt3dadd( 5.63905, 187.521, 26.0421, 0.66 ) }
    dend_17 { pt3dadd( 5.72159, 189.071, 26.0882, 0.29 ) }
    dend_17 { pt3dadd( 5.7643, 189.841, 26.1053, 0.29 ) }
    dend_17 { pt3dadd( 5.88662, 191.871, 26.1494, 0.29 ) }
    dend_17 { pt3dadd( 6.04274, 194.077, 26.2174, 1.99 ) }
    dend_17 { pt3dadd( 6.07665, 194.577, 26.2401, 2.28 ) }
    dend_17 { pt3dadd( 6.11214, 195.284, 26.2839, 1.55 ) }
    dend_17 { pt3dadd( 6.13017, 196.055, 26.3624, 0.88 ) }
    dend_17 { pt3dadd( 6.1155, 197.307, 26.5456, 0.22 ) }
    dend_17 { pt3dadd( 6.08878, 197.891, 26.6504, 0.22 ) }
    dend_17 { pt3dadd( 6.01447, 198.955, 26.8716, 0.66 ) }
    dend_17 { pt3dadd( 5.96711, 199.628, 27.0114, 0.66 ) }
    dend_17 { pt3dadd( 5.89945, 200.767, 27.2414, 0.29 ) }
    dend_17 { pt3dadd( 5.81345, 202.593, 27.5794, 0.22 ) }
    dend_17 { pt3dadd( 5.79501, 203.519, 27.7498, 0.22 ) }
    dend_17 { pt3dadd( 5.80387, 204.499, 27.9267, 0.52 ) }
    dend_17 { pt3dadd( 5.87733, 205.724, 28.1504, 0.44 ) }
    dend_17 { pt3dadd( 5.99251, 206.791, 28.3477, 0.44 ) }
    dend_17 { pt3dadd( 6.18, 208.022, 28.5698, 0.44 ) }
    dend_17 { pt3dadd( 6.55743, 209.929, 28.929, 0.22 ) }
    dend_17 { pt3dadd( 6.8739, 211.346, 29.2058, 0.66 ) }
    dend_17 { pt3dadd( 7.16056, 212.492, 29.4392, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_17 { pt3dadd( 7.32699, 213.097, 29.5681, 1.77 ) }
    dend_17 { pt3dadd( 7.49037, 213.639, 29.6904, 1.77 ) }
    dend_17 { pt3dadd( 7.76164, 214.429, 29.8868, 0.88 ) }
    dend_17 { pt3dadd( 8.07408, 215.303, 30.1491, 0.29 ) }
    dend_17 { pt3dadd( 8.28398, 215.894, 30.3509, 0.52 ) }
    dend_17 { pt3dadd( 8.79832, 217.418, 30.8986, 0.22 ) }
    dend_17 { pt3dadd( 9.09503, 218.288, 31.2075, 0.52 ) }
    dend_17 { pt3dadd( 9.4379, 219.268, 31.5456, 0.52 ) }
    dend_17 { pt3dadd( 10.1912, 221.428, 32.2582, 0.22 ) }
    dend_17 { pt3dadd( 10.7724, 223.083, 32.7771, 0.37 ) }
    dend_17 { pt3dadd( 11.1501, 224.173, 33.1115, 0.37 ) }
    dend_17 { pt3dadd( 11.5619, 225.388, 33.4681, 1.92 ) }
    dend_17 { pt3dadd( 11.7464, 225.948, 33.6198, 2.21 ) }
    dend_17 { pt3dadd( 11.9317, 226.532, 33.7503, 2.21 ) }
    dend_17 { pt3dadd( 12.1739, 227.228, 33.8255, 1.18 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 15/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -10.6833, 49.3084, 3.12024, 0.66 ) }
    dend_14 { pt3dadd( -10.349, 50.8563, 3.69138, 0.66 ) }
    dend_14 { pt3dadd( -10.1405, 51.7996, 4.03281, 0.81 ) }
    dend_14 { pt3dadd( -9.99762, 52.4998, 4.30224, 0.37 ) }
    dend_14 { pt3dadd( -9.84237, 53.3435, 4.62457, 0.29 ) }
    dend_14 { pt3dadd( -9.57251, 54.7585, 5.15853, 0.29 ) }
    dend_14 { pt3dadd( -9.39522, 55.586, 5.47921, 0.29 ) }
    dend_14 { pt3dadd( -9.17436, 56.3815, 5.78663, 0.29 ) }
    dend_14 { pt3dadd( -8.82521, 57.4256, 6.23501, 0.29 ) }
    dend_14 { pt3dadd( -8.51029, 58.2804, 6.62071, 0.29 ) }
    dend_14 { pt3dadd( -8.19617, 59.1317, 7.00454, 0.74 ) }
    dend_14 { pt3dadd( -7.9796, 59.7029, 7.2723, 0.74 ) }
    dend_14 { pt3dadd( -7.56215, 60.6674, 7.75137, 0.29 ) }
    dend_14 { pt3dadd( -7.31591, 61.2203, 8.03635, 0.37 ) }
    dend_14 { pt3dadd( -6.74798, 62.5084, 8.68489, 0.37 ) }
    dend_14 { pt3dadd( -6.45287, 63.2375, 9.04546, 0.37 ) }
    dend_14 { pt3dadd( -6.15836, 64.1013, 9.44611, 0.37 ) }
    dend_14 { pt3dadd( -6.04312, 64.5005, 9.62082, 0.37 ) }
    dend_14 { pt3dadd( -5.86795, 65.23, 9.9279, 0.22 ) }
    dend_14 { pt3dadd( -5.7154, 65.9391, 10.2182, 0.22 ) }
    dend_14 { pt3dadd( -5.57418, 66.4982, 10.45, 0.66 ) }
    dend_14 { pt3dadd( -5.4099, 67.1751, 10.6923, 0.96 ) }
    dend_14 { pt3dadd( -3.40309, 75.3294, 12.9181, 0.96 ) }
    dend_14 { pt3dadd( -0.304656, 82.2464, 17.0695, 0.96 ) }
    dend_14 { pt3dadd( 1.59447, 89.231, 21.7992, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 29.7953, 10.9349, 7.46249, 0.66 ) }
    dend_8 { pt3dadd( 30.7366, 9.23972, 7.04786, 0.66 ) }
    dend_8 { pt3dadd( 31.0027, 8.7056, 6.88312, 0.66 ) }
    dend_8 { pt3dadd( 31.4402, 7.88069, 6.65389, 0.88 ) }
    dend_8 { pt3dadd( 32.2289, 6.54478, 6.33356, 0.88 ) }
    dend_8 { pt3dadd( 32.7944, 5.69051, 6.16282, 0.88 ) }
    dend_8 { pt3dadd( 33.3374, 4.98019, 6.04378, 1.03 ) }
    dend_8 { pt3dadd( 33.9739, 4.21243, 5.92382, 1.03 ) }
    dend_8 { pt3dadd( 34.8864, 3.60637, 5.9771, 0.88 ) }
    dend_8 { pt3dadd( 35.6078, 3.45467, 6.13461, 0.88 ) }
    dend_8 { pt3dadd( 36.2278, 3.39433, 6.30659, 0.88 ) }
    dend_8 { pt3dadd( 37.212, 3.26208, 6.6014, 0.81 ) }
    dend_8 { pt3dadd( 38.3509, 2.9554, 6.94231, 0.81 ) }
    dend_8 { pt3dadd( 39.0781, 2.62271, 7.11586, 0.81 ) }
    dend_8 { pt3dadd( 40.0051, 1.99481, 7.22483, 0.74 ) }
    dend_8 { pt3dadd( 40.9956, 1.18838, 7.2664, 0.88 ) }
    dend_8 { pt3dadd( 41.876, 0.385973, 7.24022, 0.88 ) }
    dend_8 { pt3dadd( 42.8213, -0.580881, 7.14444, 0.52 ) }
    dend_8 { pt3dadd( 43.295, -1.07262, 7.05461, 0.52 ) }
    dend_8 { pt3dadd( 43.8722, -1.575, 6.89665, 0.52 ) }
    dend_8 { pt3dadd( 44.6115, -2.06714, 6.67247, 0.52 ) }
    dend_8 { pt3dadd( 45.4557, -2.46303, 6.40977, 0.74 ) }
    dend_8 { pt3dadd( 46.3123, -2.76836, 6.1377, 0.74 ) }
    dend_8 { pt3dadd( 47.3985, -3.07777, 5.79111, 0.74 ) }
    dend_8 { pt3dadd( 48.8332, -3.42853, 5.34972, 0.74 ) }
    dend_8 { pt3dadd( 49.8276, -3.6419, 5.04209, 0.74 ) }
    dend_8 { pt3dadd( 50.6145, -3.77142, 4.81136, 0.74 ) }
    dend_8 { pt3dadd( 51.4681, -3.82655, 4.58837, 0.74 ) }
    dend_8 { pt3dadd( 51.9679, -3.82352, 4.4859, 0.88 ) }
    dend_8 { pt3dadd( 53.3776, -3.70919, 4.24605, 0.88 ) }
    dend_8 { pt3dadd( 54.5789, -3.57579, 4.07269, 0.88 ) }
    dend_8 { pt3dadd( 56.0674, -3.4267, 3.87254, 0.66 ) }
    dend_8 { pt3dadd( 57.1574, -3.3447, 3.74707, 0.66 ) }
    dend_8 { pt3dadd( 59.965, -3.17296, 3.4885, 0.59 ) }
    dend_8 { pt3dadd( 60.9394, -3.12515, 3.41444, 0.52 ) }
    dend_8 { pt3dadd( 62.4141, -3.02436, 3.33284, 0.52 ) }
    dend_8 { pt3dadd( 63.3012, -2.91782, 3.30797, 0.52 ) }
    dend_8 { pt3dadd( 64.263, -2.71158, 3.30319, 0.52 ) }
    dend_8 { pt3dadd( 65.4103, -2.39029, 3.31851, 0.52 ) }
    dend_8 { pt3dadd( 66.1769, -2.159, 3.3421, 0.52 ) }
    dend_8 { pt3dadd( 67.4309, -1.83924, 3.38333, 0.52 ) }
    dend_8 { pt3dadd( 68.7916, -1.49411, 3.43766, 0.52 ) }
    dend_8 { pt3dadd( 70.0689, -1.213, 3.48926, 0.52 ) }
    dend_8 { pt3dadd( 71.2613, -1.05194, 3.52887, 0.52 ) }
    dend_8 { pt3dadd( 72.6264, -1.0376, 3.56047, 0.52 ) }
    dend_8 { pt3dadd( 73.5707, -1.18679, 3.57721, 0.52 ) }
    dend_8 { pt3dadd( 74.4545, -1.44511, 3.62835, 0.52 ) }
    dend_8 { pt3dadd( 75.0503, -1.64479, 3.69434, 0.52 ) }
    dend_8 { pt3dadd( 75.8025, -1.88497, 3.81309, 0.52 ) }
    dend_8 { pt3dadd( 77.3266, -2.29419, 4.15576, 0.29 ) }
    dend_8 { pt3dadd( 80.0487, -2.83468, 4.92548, 0.29 ) }
    dend_8 { pt3dadd( 82.5147, -3.16651, 5.72214, 0.29 ) }
    dend_8 { pt3dadd( 83.7711, -3.24426, 6.18534, 0.29 ) }
    dend_8 { pt3dadd( 84.6724, -3.25975, 6.54168, 0.44 ) }
    dend_8 { pt3dadd( 85.6258, -3.20591, 6.96726, 0.59 ) }
    dend_8 { pt3dadd( 86.2242, -3.10215, 7.30952, 0.59 ) }
    dend_8 { pt3dadd( 87.1913, -2.60685, 8.09259, 0.59 ) }
    dend_8 { pt3dadd( 87.6961, -2.11162, 8.58604, 0.59 ) }
    dend_8 { pt3dadd( 97.8851, -5.22064, 9.55804, 0.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 29.7953, 10.9349, 7.46249, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_3 { pt3dadd( 31.0587, 10.6845, 7.32599, 1.11 ) }
    dend_3 { pt3dadd( 31.8419, 10.4327, 7.2098, 1.11 ) }
    dend_3 { pt3dadd( 32.7366, 10.199, 7.00685, 1.25 ) }
    dend_3 { pt3dadd( 33.4283, 10.091, 6.83908, 1.47 ) }
    dend_3 { pt3dadd( 34.368, 10.0512, 6.61817, 1.4 ) }
    dend_3 { pt3dadd( 35.203, 10.0978, 6.43074, 1.4 ) }
    dend_3 { pt3dadd( 36.1423, 10.2029, 6.18576, 1.18 ) }
    dend_3 { pt3dadd( 37.4072, 10.596, 5.86002, 1.18 ) }
    dend_3 { pt3dadd( 38.2667, 11.0642, 5.64745, 1.18 ) }
    dend_3 { pt3dadd( 38.9976, 11.5384, 5.46593, 1.18 ) }
    dend_3 { pt3dadd( 39.4317, 11.8248, 5.35846, 0.88 ) }
    dend_3 { pt3dadd( 39.8689, 12.0626, 5.24735, 0.88 ) }
    dend_3 { pt3dadd( 40.5654, 12.2764, 5.05672, 0.88 ) }
    dend_3 { pt3dadd( 41.6457, 12.3285, 4.74306, 1.11 ) }
    dend_3 { pt3dadd( 42.472, 12.2453, 4.47863, 1.11 ) }
    dend_3 { pt3dadd( 43.3111, 12.098, 4.19379, 1.11 ) }
    dend_3 { pt3dadd( 44.262, 11.8789, 3.86226, 1.25 ) }
    dend_3 { pt3dadd( 45.2339, 11.6056, 3.518, 1.33 ) }
    dend_3 { pt3dadd( 45.6842, 11.4585, 3.35929, 1.47 ) }
    dend_3 { pt3dadd( 46.4278, 11.2217, 3.11653, 1.77 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -169.742, -125.72, 0.666526, 0.59 ) }
    dend_47 { pt3dadd( -169.834, -127.177, -0.157438, 0.59 ) }
    dend_47 { pt3dadd( -169.858, -127.802, -0.482494, 0.59 ) }
    dend_47 { pt3dadd( -169.859, -128.356, -0.755097, 0.52 ) }
    dend_47 { pt3dadd( -169.846, -129.001, -1.05466, 0.52 ) }
    dend_47 { pt3dadd( -169.847, -129.705, -1.36423, 0.88 ) }
    dend_47 { pt3dadd( -169.851, -130.488, -1.69842, 1.03 ) }
    dend_47 { pt3dadd( -169.85, -130.971, -1.86393, 1.03 ) }
    dend_47 { pt3dadd( -169.821, -131.828, -2.14923, 1.03 ) }
    dend_47 { pt3dadd( -169.772, -132.567, -2.39146, 0.29 ) }
    dend_47 { pt3dadd( -169.741, -133.095, -2.56014, 0.29 ) }
    dend_47 { pt3dadd( -169.726, -133.532, -2.69405, 0.29 ) }
    dend_47 { pt3dadd( -169.742, -134.36, -2.94007, 0.59 ) }
    dend_47 { pt3dadd( -169.782, -135.05, -3.10537, 0.74 ) }
    dend_47 { pt3dadd( -169.833, -135.551, -3.19943, 0.88 ) }
    dend_47 { pt3dadd( -169.898, -136.039, -3.27689, 0.88 ) }
    dend_47 { pt3dadd( -169.966, -136.497, -3.33393, 0.88 ) }
    dend_47 { pt3dadd( -170.087, -137.113, -3.3909, 0.81 ) }
    dend_47 { pt3dadd( -170.396, -138.446, -3.49528, 0.37 ) }
    dend_47 { pt3dadd( -170.56, -139.168, -3.54664, 1.03 ) }
    dend_47 { pt3dadd( -170.718, -139.896, -3.5713, 1.33 ) }
    dend_47 { pt3dadd( -170.865, -140.567, -3.57605, 1.33 ) }
    dend_47 { pt3dadd( -171.067, -141.43, -3.5643, 1.03 ) }
    dend_47 { pt3dadd( -171.249, -142.156, -3.54711, 0.74 ) }
    dend_47 { pt3dadd( -171.424, -142.78, -3.54579, 0.37 ) }
    dend_47 { pt3dadd( -171.654, -143.617, -3.50261, 0.74 ) }
    dend_47 { pt3dadd( -171.791, -144.102, -3.4647, 0.74 ) }
    dend_47 { pt3dadd( -171.954, -144.684, -3.45561, 0.59 ) }
    dend_47 { pt3dadd( -172.065, -145.117, -3.47983, 0.37 ) }
    dend_47 { pt3dadd( -172.214, -145.727, -3.57347, 0.37 ) }
    dend_47 { pt3dadd( -172.479, -146.689, -3.83815, 0.66 ) }
    dend_47 { pt3dadd( -172.694, -147.345, -4.09211, 0.74 ) }
    dend_47 { pt3dadd( -173.11, -148.429, -4.58148, 0.52 ) }
    dend_47 { pt3dadd( -173.295, -148.873, -4.80489, 0.52 ) }
    dend_47 { pt3dadd( -173.549, -149.395, -5.07544, 1.33 ) }
    dend_47 { pt3dadd( -173.885, -150.039, -5.42592, 1.55 ) }
    dend_47 { pt3dadd( -174.326, -150.891, -5.86747, 1.99 ) }
    dend_47 { pt3dadd( -174.597, -151.414, -6.09488, 2.21 ) }
    dend_47 { pt3dadd( -174.953, -152.08, -6.33127, 1.99 ) }
    dend_47 { pt3dadd( -175.402, -152.886, -6.60685, 1.11 ) }
    dend_47 { pt3dadd( -175.886, -153.806, -6.9372, 0.37 ) }
    dend_47 { pt3dadd( -176.254, -154.59, -7.23152, 1.11 ) }
    dend_47 { pt3dadd( -176.426, -154.986, -7.38765, 1.25 ) }
    dend_47 { pt3dadd( -176.644, -155.497, -7.59005, 1.25 ) }
    dend_47 { pt3dadd( -177.14, -156.611, -8.06123, 0.29 ) }
    dend_47 { pt3dadd( -177.464, -157.314, -8.37536, 0.29 ) }
    dend_47 { pt3dadd( -177.789, -157.958, -8.65951, 0.44 ) }
    dend_47 { pt3dadd( -178.141, -158.624, -8.95578, 0.59 ) }
    dend_47 { pt3dadd( -178.562, -159.412, -9.29537, 0.88 ) }
    dend_47 { pt3dadd( -178.914, -160.072, -9.56585, 0.96 ) }
    dend_47 { pt3dadd( -179.288, -160.713, -9.80109, 0.66 ) }
    dend_47 { pt3dadd( -179.783, -161.489, -10.0338, 0.37 ) }
    dend_47 { pt3dadd( -180.157, -162.047, -10.1838, 0.29 ) }
    dend_47 { pt3dadd( -180.562, -162.639, -10.3071, 0.29 ) }
    dend_47 { pt3dadd( -180.908, -163.167, -10.3931, 0.29 ) }
    dend_47 { pt3dadd( -181.379, -163.888, -10.4776, 0.29 ) }
    dend_47 { pt3dadd( -182.086, -164.881, -10.5734, 0.74 ) }
    dend_47 { pt3dadd( -182.628, -165.58, -10.5949, 1.03 ) }
    dend_47 { pt3dadd( -183.295, -166.402, -10.5788, 2.28 ) }
    dend_47 { pt3dadd( -183.816, -167.007, -10.5383, 2.8 ) }
    dend_47 { pt3dadd( -184.318, -167.58, -10.4957, 3.09 ) }
    dend_47 { pt3dadd( -185.127, -168.532, -10.4414, 1.84 ) }
    dend_47 { pt3dadd( -186.067, -169.62, -10.3818, 0.29 ) }
    dend_47 { pt3dadd( -186.526, -170.182, -10.3581, 0.29 ) }
    dend_47 { pt3dadd( -187.131, -170.976, -10.3542, 0.29 ) }
    dend_47 { pt3dadd( -187.737, -171.847, -10.3668, 0.29 ) }
    dend_47 { pt3dadd( -188.148, -172.568, -10.4013, 0.88 ) }
    dend_47 { pt3dadd( -188.463, -173.212, -10.4513, 1.11 ) }
    dend_47 { pt3dadd( -188.714, -173.759, -10.5195, 0.81 ) }
    dend_47 { pt3dadd( -188.916, -174.233, -10.5819, 0.52 ) }
    dend_47 { pt3dadd( -189.222, -175.029, -10.6939, 0.29 ) }
    dend_47 { pt3dadd( -189.561, -175.974, -10.8257, 0.29 ) }
    dend_47 { pt3dadd( -189.832, -176.783, -10.942, 0.29 ) }
    dend_47 { pt3dadd( -189.984, -177.22, -11.0038, 0.29 ) }
    dend_47 { pt3dadd( -190.273, -178.09, -11.1296, 0.81 ) }
    dend_47 { pt3dadd( -190.516, -178.898, -11.2512, 1.11 ) }
    dend_47 { pt3dadd( -190.689, -179.532, -11.351, 0.88 ) }
    dend_47 { pt3dadd( -190.932, -180.431, -11.4955, 0.29 ) }
    dend_47 { pt3dadd( -191.222, -181.528, -11.671, 0.29 ) }
    dend_47 { pt3dadd( -191.517, -182.498, -11.8513, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_47 { pt3dadd( -191.633, -182.849, -11.9234, 0.29 ) }
    dend_47 { pt3dadd( -191.913, -183.682, -12.1145, 0.74 ) }
    dend_47 { pt3dadd( -192.119, -184.273, -12.2638, 0.74 ) }
    dend_47 { pt3dadd( -192.403, -185.102, -12.489, 0.44 ) }
    dend_47 { pt3dadd( -192.725, -186.062, -12.7657, 0.29 ) }
    dend_47 { pt3dadd( -192.891, -186.537, -12.9061, 0.29 ) }
    dend_47 { pt3dadd( -193.108, -187.207, -13.0808, 0.29 ) }
    dend_47 { pt3dadd( -193.32, -188.024, -13.2666, 0.29 ) }
    dend_47 { pt3dadd( -193.418, -188.504, -13.3521, 0.74 ) }
    dend_47 { pt3dadd( -193.496, -188.956, -13.4094, 0.74 ) }
    dend_47 { pt3dadd( -193.621, -189.786, -13.4659, 0.44 ) }
    dend_47 { pt3dadd( -193.773, -190.729, -13.5106, 0.29 ) }
    dend_47 { pt3dadd( -193.909, -191.554, -13.5203, 0.74 ) }
    dend_47 { pt3dadd( -194.009, -192.135, -13.5198, 1.11 ) }
    dend_47 { pt3dadd( -194.109, -192.624, -13.5172, 1.69 ) }
    dend_47 { pt3dadd( -194.199, -193.033, -13.5184, 1.92 ) }
    dend_47 { pt3dadd( -194.334, -193.622, -13.5331, 1.92 ) }
    dend_47 { pt3dadd( -194.534, -194.497, -13.5921, 1.62 ) }
    dend_47 { pt3dadd( -194.78, -195.551, -13.6832, 0.29 ) }
    dend_47 { pt3dadd( -194.975, -196.39, -13.7729, 0.22 ) }
    dend_47 { pt3dadd( -195.151, -197.081, -13.8519, 0.22 ) }
    dend_47 { pt3dadd( -195.406, -198.01, -13.9723, 0.59 ) }
    dend_47 { pt3dadd( -195.636, -198.775, -14.0833, 0.74 ) }
    dend_47 { pt3dadd( -195.814, -199.308, -14.1612, 0.74 ) }
    dend_47 { pt3dadd( -196.062, -199.994, -14.2495, 0.44 ) }
    dend_47 { pt3dadd( -196.3, -200.577, -14.3144, 0.29 ) }
    dend_47 { pt3dadd( -196.579, -201.167, -14.3463, 0.29 ) }
    dend_47 { pt3dadd( -197.23, -202.366, -14.332, 0.44 ) }
    dend_47 { pt3dadd( -197.615, -202.983, -14.3097, 0.59 ) }
    dend_47 { pt3dadd( -198.004, -203.556, -14.2837, 0.59 ) }
    dend_47 { pt3dadd( -198.472, -204.204, -14.2703, 0.52 ) }
    dend_47 { pt3dadd( -199.199, -205.164, -14.2756, 1.33 ) }
    dend_47 { pt3dadd( -199.808, -205.931, -14.303, 2.06 ) }
    dend_47 { pt3dadd( -200.387, -206.661, -14.3623, 2.21 ) }
    dend_47 { pt3dadd( -200.814, -207.237, -14.4448, 2.21 ) }
    dend_47 { pt3dadd( -201.445, -208.163, -14.6338, 0.81 ) }
    dend_47 { pt3dadd( -201.839, -208.82, -14.8187, 0.29 ) }
    dend_47 { pt3dadd( -202.149, -209.407, -15.0283, 0.44 ) }
    dend_47 { pt3dadd( -202.347, -209.851, -15.2016, 0.44 ) }
    dend_47 { pt3dadd( -202.6, -210.506, -15.4577, 0.29 ) }
    dend_47 { pt3dadd( -202.791, -210.993, -15.661, 0.29 ) }
    dend_47 { pt3dadd( -203.032, -211.598, -15.9118, 0.29 ) }
    dend_47 { pt3dadd( -203.208, -211.993, -16.069, 0.74 ) }
    dend_47 { pt3dadd( -203.389, -212.356, -16.1916, 0.88 ) }
    dend_47 { pt3dadd( -203.619, -212.791, -16.3126, 0.88 ) }
    dend_47 { pt3dadd( -203.987, -213.51, -16.4695, 0.29 ) }
    dend_47 { pt3dadd( -204.343, -214.247, -16.575, 0.29 ) }
    dend_47 { pt3dadd( -204.661, -215.014, -16.6276, 0.29 ) }
    dend_47 { pt3dadd( -204.999, -215.954, -16.659, 0.52 ) }
    dend_47 { pt3dadd( -205.146, -216.4, -16.6605, 0.52 ) }
    dend_47 { pt3dadd( -205.383, -217.226, -16.6371, 0.29 ) }
    dend_47 { pt3dadd( -205.51, -217.808, -16.5962, 0.29 ) }
    dend_47 { pt3dadd( -205.692, -219.005, -16.4796, 0.59 ) }
    dend_47 { pt3dadd( -205.769, -219.692, -16.3909, 0.29 ) }
    dend_47 { pt3dadd( -205.818, -220.151, -16.3105, 0.29 ) }
    dend_47 { pt3dadd( -205.908, -220.792, -16.1628, 0.74 ) }
    dend_47 { pt3dadd( -206.105, -221.647, -15.9029, 0.88 ) }
    dend_47 { pt3dadd( -206.332, -222.29, -15.6679, 0.29 ) }
    dend_47 { pt3dadd( -206.618, -222.883, -15.4128, 0.29 ) }
    dend_47 { pt3dadd( -207.046, -223.615, -15.0897, 0.96 ) }
    dend_47 { pt3dadd( -207.416, -224.181, -14.8652, 1.11 ) }
    dend_47 { pt3dadd( -207.91, -224.87, -14.6583, 1.11 ) }
    dend_47 { pt3dadd( -208.455, -225.631, -14.5076, 0.29 ) }
    dend_47 { pt3dadd( -208.814, -226.185, -14.4472, 0.22 ) }
    dend_47 { pt3dadd( -209.108, -226.724, -14.4472, 0.44 ) }
    dend_47 { pt3dadd( -209.395, -227.348, -14.5051, 0.44 ) }
    dend_47 { pt3dadd( -209.802, -228.373, -14.6926, 0.22 ) }
    dend_47 { pt3dadd( -210.036, -229.002, -14.8506, 0.22 ) }
    dend_47 { pt3dadd( -210.202, -229.462, -14.9969, 0.22 ) }
    dend_47 { pt3dadd( -210.394, -229.976, -15.1804, 0.59 ) }
    dend_47 { pt3dadd( -210.532, -230.346, -15.3156, 0.74 ) }
    dend_47 { pt3dadd( -210.956, -231.424, -15.7397, 0.29 ) }
    dend_47 { pt3dadd( -211.188, -231.993, -15.9744, 0.29 ) }
    dend_47 { pt3dadd( -211.483, -232.698, -16.2719, 0.44 ) }
    dend_47 { pt3dadd( -211.755, -233.373, -16.5595, 0.44 ) }
    dend_47 { pt3dadd( -212.097, -234.275, -16.931, 0.52 ) }
    dend_47 { pt3dadd( -212.288, -234.793, -17.134, 0.96 ) }
    dend_47 { pt3dadd( -212.481, -235.315, -17.3197, 1.4 ) }
    dend_47 { pt3dadd( -212.695, -235.843, -17.5027, 1.4 ) }
    dend_47 { pt3dadd( -213.227, -237.087, -17.8447, 0.29 ) }
    dend_47 { pt3dadd( -213.77, -238.319, -18.0997, 0.22 ) }
    dend_47 { pt3dadd( -214.043, -238.932, -18.1815, 0.37 ) }
    dend_47 { pt3dadd( -214.483, -239.923, -18.2469, 0.37 ) }
    dend_47 { pt3dadd( -214.927, -240.908, -18.2569, 0.29 ) }
    dend_47 { pt3dadd( -215.532, -242.212, -18.2008, 0.74 ) }
    dend_47 { pt3dadd( -215.863, -242.885, -18.1339, 1.11 ) }
    dend_47 { pt3dadd( -216.247, -243.599, -18.0415, 1.25 ) }
    dend_47 { pt3dadd( -216.659, -244.299, -17.9481, 1.11 ) }
    dend_47 { pt3dadd( -217.062, -244.936, -17.8698, 0.59 ) }
    dend_47 { pt3dadd( -217.603, -245.743, -17.8023, 0.29 ) }
    dend_47 { pt3dadd( -217.94, -246.213, -17.8132, 0.29 ) }
    dend_47 { pt3dadd( -218.582, -247.097, -17.8747, 0.22 ) }
    dend_47 { pt3dadd( -219.011, -247.696, -17.9372, 0.22 ) }
    dend_47 { pt3dadd( -219.251, -248.037, -17.9775, 0.66 ) }
    dend_47 { pt3dadd( -219.621, -248.571, -18.0424, 0.66 ) }
    dend_47 { pt3dadd( -220.366, -249.692, -18.1614, 0.29 ) }
    dend_47 { pt3dadd( -220.816, -250.37, -18.2212, 0.29 ) }
    dend_47 { pt3dadd( -221.288, -251.049, -18.2668, 0.29 ) }
    dend_47 { pt3dadd( -221.783, -251.719, -18.3031, 0.66 ) }
    dend_47 { pt3dadd( -222.181, -252.228, -18.3272, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_47 { pt3dadd( -222.824, -253.01, -18.3617, 0.22 ) }
    dend_47 { pt3dadd( -223.268, -253.532, -18.3873, 0.22 ) }
    dend_47 { pt3dadd( -224.018, -254.403, -18.4412, 0.22 ) }
    dend_47 { pt3dadd( -225.339, -255.932, -18.5808, 0.22 ) }
    dend_47 { pt3dadd( -225.74, -256.42, -18.6525, 0.22 ) }
    dend_47 { pt3dadd( -226.161, -256.969, -18.7638, 1.11 ) }
    dend_47 { pt3dadd( -226.393, -257.304, -18.8576, 1.11 ) }
    dend_47 { pt3dadd( -226.504, -257.498, -18.9223, 1.11 ) }
    dend_47 { pt3dadd( -226.733, -258.003, -19.1137, 0.66 ) }
    dend_47 { pt3dadd( -227.028, -258.834, -19.4656, 0.22 ) }
    dend_47 { pt3dadd( -227.174, -259.347, -19.687, 0.52 ) }
    dend_47 { pt3dadd( -227.425, -260.527, -20.2051, 0.22 ) }
    dend_47 { pt3dadd( -227.62, -261.49, -20.6199, 0.22 ) }
    dend_47 { pt3dadd( -227.703, -261.903, -20.7932, 0.59 ) }
    dend_47 { pt3dadd( -227.806, -262.431, -21.0058, 0.59 ) }
    dend_47 { pt3dadd( -227.954, -263.195, -21.315, 0.52 ) }
    dend_47 { pt3dadd( -228.159, -264.319, -21.7786, 0.22 ) }
    dend_47 { pt3dadd( -228.267, -264.976, -22.0559, 0.22 ) }
    dend_47 { pt3dadd( -228.318, -265.369, -22.2246, 0.22 ) }
    dend_47 { pt3dadd( -228.365, -265.814, -22.4194, 0.66 ) }
    dend_47 { pt3dadd( -228.396, -266.469, -22.669, 0.81 ) }
    dend_47 { pt3dadd( -228.358, -267.21, -22.9012, 0.59 ) }
    dend_47 { pt3dadd( -228.138, -268.313, -23.1431, 1.25 ) }
    dend_47 { pt3dadd( -227.924, -268.915, -23.235, 1.69 ) }
    dend_47 { pt3dadd( -227.764, -269.221, -23.2636, 1.92 ) }
    dend_47 { pt3dadd( -227.035, -270.233, -23.3027, 1.18 ) }
    dend_47 { pt3dadd( -226.29, -271.025, -23.2754, 0.22 ) }
    dend_47 { pt3dadd( -225.388, -271.777, -23.2153, 0.22 ) }
    dend_47 { pt3dadd( -224.765, -272.204, -23.1685, 0.22 ) }
    dend_47 { pt3dadd( -223.981, -272.685, -23.1319, 0.22 ) }
    dend_47 { pt3dadd( -223.417, -273.01, -23.1301, 0.66 ) }
    dend_47 { pt3dadd( -223.004, -273.242, -23.1605, 0.66 ) }
    dend_47 { pt3dadd( -221.892, -273.859, -23.2942, 0.22 ) }
    dend_47 { pt3dadd( -221.472, -274.096, -23.3631, 0.37 ) }
    dend_47 { pt3dadd( -221.05, -274.382, -23.4483, 0.37 ) }
    dend_47 { pt3dadd( -220.713, -274.661, -23.5231, 0.22 ) }
    dend_47 { pt3dadd( -220.205, -275.145, -23.6483, 0.22 ) }
    dend_47 { pt3dadd( -223.682, -283.041, -24.8488, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 38/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -169.742, -125.72, 0.666526, 0.37 ) }
    dend_46 { pt3dadd( -171.071, -125.453, 1.169, 0.37 ) }
    dend_46 { pt3dadd( -171.636, -125.363, 1.35027, 0.37 ) }
    dend_46 { pt3dadd( -172.864, -125.205, 1.64781, 0.29 ) }
    dend_46 { pt3dadd( -173.807, -125.114, 1.8346, 0.44 ) }
    dend_46 { pt3dadd( -174.723, -125.054, 1.98753, 0.66 ) }
    dend_46 { pt3dadd( -175.253, -125.033, 2.05732, 0.81 ) }
    dend_46 { pt3dadd( -175.718, -125.029, 2.08847, 0.81 ) }
    dend_46 { pt3dadd( -177.178, -125.05, 2.11355, 0.22 ) }
    dend_46 { pt3dadd( -177.641, -125.065, 2.09581, 0.22 ) }
    dend_46 { pt3dadd( -178.472, -125.096, 2.06114, 0.74 ) }
    dend_46 { pt3dadd( -179.155, -125.118, 2.02782, 0.88 ) }
    dend_46 { pt3dadd( -180.298, -125.156, 1.93996, 0.22 ) }
    dend_46 { pt3dadd( -180.774, -125.157, 1.86673, 0.22 ) }
    dend_46 { pt3dadd( -181.222, -125.156, 1.76328, 0.22 ) }
    dend_46 { pt3dadd( -181.737, -125.158, 1.61537, 0.74 ) }
    dend_46 { pt3dadd( -182.289, -125.182, 1.41632, 0.88 ) }
    dend_46 { pt3dadd( -182.907, -125.261, 1.11258, 0.88 ) }
    dend_46 { pt3dadd( -184.299, -125.578, 0.225828, 0.22 ) }
    dend_46 { pt3dadd( -184.798, -125.724, -0.135019, 0.22 ) }
    dend_46 { pt3dadd( -185.213, -125.854, -0.462892, 0.74 ) }
    dend_46 { pt3dadd( -185.745, -126.039, -0.957944, 0.74 ) }
    dend_46 { pt3dadd( -186.84, -126.453, -1.912, 0.29 ) }
    dend_46 { pt3dadd( -187.178, -126.586, -2.18577, 0.29 ) }
    dend_46 { pt3dadd( -187.727, -126.811, -2.59291, 0.88 ) }
    dend_46 { pt3dadd( -188.378, -127.048, -3.03896, 1.03 ) }
    dend_46 { pt3dadd( -190.33, -127.647, -4.2652, 0.22 ) }
    dend_46 { pt3dadd( -192.17, -128.158, -5.32262, 0.22 ) }
    dend_46 { pt3dadd( -192.908, -128.341, -5.69011, 0.22 ) }
    dend_46 { pt3dadd( -193.343, -128.445, -5.89189, 1.11 ) }
    dend_46 { pt3dadd( -193.866, -128.574, -6.1157, 1.11 ) }
    dend_46 { pt3dadd( -194.419, -128.713, -6.30248, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 70/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -20.6599, -174.818, -1.31288, 0.81 ) }
    dend_40 { pt3dadd( -19.6504, -175.39, -1.67886, 0.81 ) }
    dend_40 { pt3dadd( -18.8366, -175.8, -1.98697, 0.52 ) }
    dend_40 { pt3dadd( -17.6796, -176.336, -2.44103, 0.52 ) }
    dend_40 { pt3dadd( -17.1755, -176.578, -2.64418, 0.37 ) }
    dend_40 { pt3dadd( -16.1698, -177.078, -3.0555, 0.37 ) }
    dend_40 { pt3dadd( -15.7707, -177.284, -3.21983, 0.66 ) }
    dend_40 { pt3dadd( -15.4181, -177.468, -3.37896, 0.88 ) }
    dend_40 { pt3dadd( -15.1243, -177.624, -3.50832, 0.88 ) }
    dend_40 { pt3dadd( -14.3744, -178.11, -3.84135, 0.59 ) }
    dend_40 { pt3dadd( -13.71, -178.636, -4.13819, 0.66 ) }
    dend_40 { pt3dadd( -13.0484, -179.24, -4.43199, 0.74 ) }
    dend_40 { pt3dadd( -12.6433, -179.608, -4.61044, 0.74 ) }
    dend_40 { pt3dadd( -12.3283, -179.87, -4.74756, 0.52 ) }
    dend_40 { pt3dadd( -11.8142, -180.251, -4.97171, 0.29 ) }
    dend_40 { pt3dadd( -11.2614, -180.573, -5.2004, 0.96 ) }
    dend_40 { pt3dadd( -10.7559, -180.82, -5.39837, 1.03 ) }
    dend_40 { pt3dadd( -10.42, -180.968, -5.52035, 1.03 ) }
    dend_40 { pt3dadd( -9.65094, -181.289, -5.77822, 0.66 ) }
    dend_40 { pt3dadd( -9.32827, -181.428, -5.88797, 0.52 ) }
    dend_40 { pt3dadd( -8.58768, -181.759, -6.14225, 0.59 ) }
    dend_40 { pt3dadd( -7.85493, -182.133, -6.39687, 0.59 ) }
    dend_40 { pt3dadd( -7.18322, -182.526, -6.63716, 0.52 ) }
    dend_40 { pt3dadd( -6.62983, -182.893, -6.84293, 0.52 ) }
    dend_40 { pt3dadd( -6.05272, -183.318, -7.0664, 0.96 ) }
    dend_40 { pt3dadd( -5.69602, -183.589, -7.21665, 1.18 ) }
    dend_40 { pt3dadd( -5.11016, -184.027, -7.48396, 0.66 ) }
    dend_40 { pt3dadd( -4.42028, -184.5, -7.8048, 0.37 ) }
    dend_40 { pt3dadd( -3.98913, -184.767, -8.00808, 0.37 ) }
    dend_40 { pt3dadd( -3.09693, -185.261, -8.43288, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_40 { pt3dadd( -2.30017, -185.68, -8.78629, 1.03 ) }
    dend_40 { pt3dadd( -1.69129, -185.999, -9.04495, 0.81 ) }
    dend_40 { pt3dadd( -1.12576, -186.294, -9.26954, 0.52 ) }
    dend_40 { pt3dadd( -0.456631, -186.642, -9.51601, 0.52 ) }
    dend_40 { pt3dadd( 0.0713904, -186.928, -9.69323, 0.52 ) }
    dend_40 { pt3dadd( 0.804851, -187.382, -9.91837, 0.52 ) }
    dend_40 { pt3dadd( 1.42668, -187.814, -10.0933, 1.33 ) }
    dend_40 { pt3dadd( 1.816, -188.114, -10.1987, 1.69 ) }
    dend_40 { pt3dadd( 2.2632, -188.503, -10.316, 1.69 ) }
    dend_40 { pt3dadd( 2.98965, -189.197, -10.5672, 1.11 ) }
    dend_40 { pt3dadd( 3.75947, -189.965, -10.8973, 0.44 ) }
    dend_40 { pt3dadd( 4.24318, -190.441, -11.1589, 0.44 ) }
    dend_40 { pt3dadd( 4.62645, -190.81, -11.3978, 0.29 ) }
    dend_40 { pt3dadd( 5.05165, -191.212, -11.7093, 0.29 ) }
    dend_40 { pt3dadd( 5.99619, -192.072, -12.4824, 1.03 ) }
    dend_40 { pt3dadd( 6.26593, -192.307, -12.7265, 1.4 ) }
    dend_40 { pt3dadd( 6.55096, -192.563, -13.0106, 1.4 ) }
    dend_40 { pt3dadd( 7.4422, -193.463, -13.9722, 0.22 ) }
    dend_40 { pt3dadd( 7.91216, -193.967, -14.4869, 0.52 ) }
    dend_40 { pt3dadd( 8.14477, -194.227, -14.7356, 0.52 ) }
    dend_40 { pt3dadd( 8.54787, -194.72, -15.1475, 0.29 ) }
    dend_40 { pt3dadd( 9.1096, -195.436, -15.7293, 0.29 ) }
    dend_40 { pt3dadd( 9.45617, -195.88, -16.0772, 0.29 ) }
    dend_40 { pt3dadd( 9.80473, -196.354, -16.4331, 0.66 ) }
    dend_40 { pt3dadd( 10.0674, -196.71, -16.6749, 0.81 ) }
    dend_40 { pt3dadd( 10.2604, -196.97, -16.8433, 0.81 ) }
    dend_40 { pt3dadd( 10.5922, -197.376, -17.1011, 0.59 ) }
    dend_40 { pt3dadd( 10.9739, -197.79, -17.3804, 0.29 ) }
    dend_40 { pt3dadd( 11.344, -198.202, -17.6249, 0.29 ) }
    dend_40 { pt3dadd( 11.7653, -198.742, -17.8752, 0.66 ) }
    dend_40 { pt3dadd( 12.0919, -199.222, -18.0299, 0.66 ) }
    dend_40 { pt3dadd( 12.5314, -199.964, -18.1765, 0.29 ) }
    dend_40 { pt3dadd( 12.7818, -200.446, -18.2191, 0.29 ) }
    dend_40 { pt3dadd( 13.2037, -201.33, -18.2309, 0.66 ) }
    dend_40 { pt3dadd( 13.4973, -201.959, -18.1982, 0.66 ) }
    dend_40 { pt3dadd( 13.862, -202.783, -18.1071, 0.44 ) }
    dend_40 { pt3dadd( 14.2057, -203.625, -17.9762, 1.47 ) }
    dend_40 { pt3dadd( 14.459, -204.305, -17.8504, 1.84 ) }
    dend_40 { pt3dadd( 14.5978, -204.704, -17.774, 1.84 ) }
    dend_40 { pt3dadd( 14.678, -204.951, -17.7365, 1.84 ) }
    dend_40 { pt3dadd( 14.8864, -205.584, -17.6536, 1.33 ) }
    dend_40 { pt3dadd( 15.1535, -206.345, -17.5754, 0.52 ) }
    dend_40 { pt3dadd( 15.3002, -206.745, -17.5411, 0.52 ) }
    dend_40 { pt3dadd( 15.5021, -207.289, -17.4963, 0.52 ) }
    dend_40 { pt3dadd( 15.827, -208.158, -17.4177, 0.29 ) }
    dend_40 { pt3dadd( 16.001, -208.607, -17.3733, 0.29 ) }
    dend_40 { pt3dadd( 16.2663, -209.248, -17.3007, 0.29 ) }
    dend_40 { pt3dadd( 16.5282, -209.838, -17.2274, 0.44 ) }
    dend_40 { pt3dadd( 16.9227, -210.631, -17.1366, 0.44 ) }
    dend_40 { pt3dadd( 17.2886, -211.275, -17.0869, 0.44 ) }
    dend_40 { pt3dadd( 17.5711, -211.723, -17.0771, 1.33 ) }
    dend_40 { pt3dadd( 17.8966, -212.236, -17.0988, 1.84 ) }
    dend_40 { pt3dadd( 18.2127, -212.689, -17.1464, 1.84 ) }
    dend_40 { pt3dadd( 18.7469, -213.389, -17.2528, 0.96 ) }
    dend_40 { pt3dadd( 19.4494, -214.243, -17.4217, 0.22 ) }
    dend_40 { pt3dadd( 20.0486, -214.931, -17.5841, 0.22 ) }
    dend_40 { pt3dadd( 20.8977, -215.856, -17.8382, 0.22 ) }
    dend_40 { pt3dadd( 21.4118, -216.374, -18.0002, 0.22 ) }
    dend_40 { pt3dadd( 21.9982, -216.904, -18.1915, 0.22 ) }
    dend_40 { pt3dadd( 22.5162, -217.329, -18.3731, 0.44 ) }
    dend_40 { pt3dadd( 23.1321, -217.791, -18.6099, 0.88 ) }
    dend_40 { pt3dadd( 23.7205, -218.217, -18.8631, 1.03 ) }
    dend_40 { pt3dadd( 24.1036, -218.492, -19.038, 1.03 ) }
    dend_40 { pt3dadd( 24.548, -218.837, -19.2485, 0.88 ) }
    dend_40 { pt3dadd( 24.9912, -219.162, -19.4641, 0.29 ) }
    dend_40 { pt3dadd( 25.3141, -219.381, -19.6101, 0.29 ) }
    dend_40 { pt3dadd( 25.8185, -219.687, -19.8044, 0.29 ) }
    dend_40 { pt3dadd( 26.4641, -220.04, -20.0169, 0.37 ) }
    dend_40 { pt3dadd( 26.9594, -220.284, -20.1498, 0.37 ) }
    dend_40 { pt3dadd( 27.4003, -220.475, -20.247, 0.29 ) }
    dend_40 { pt3dadd( 28.257, -220.796, -20.4011, 0.29 ) }
    dend_40 { pt3dadd( 28.9297, -221.027, -20.5189, 0.81 ) }
    dend_40 { pt3dadd( 29.3062, -221.155, -20.5895, 0.81 ) }
    dend_40 { pt3dadd( 30.0289, -221.445, -20.7255, 0.59 ) }
    dend_40 { pt3dadd( 30.5559, -221.718, -20.8145, 0.29 ) }
    dend_40 { pt3dadd( 31.0078, -221.999, -20.8808, 0.29 ) }
    dend_40 { pt3dadd( 31.4819, -222.333, -20.9391, 0.66 ) }
    dend_40 { pt3dadd( 31.8329, -222.595, -20.9669, 0.66 ) }
    dend_40 { pt3dadd( 32.8831, -223.399, -21.0011, 0.29 ) }
    dend_40 { pt3dadd( 33.5533, -223.906, -20.9809, 0.29 ) }
    dend_40 { pt3dadd( 34.2533, -224.433, -20.9043, 0.29 ) }
    dend_40 { pt3dadd( 34.7874, -224.839, -20.8059, 0.29 ) }
    dend_40 { pt3dadd( 35.3207, -225.235, -20.6693, 0.88 ) }
    dend_40 { pt3dadd( 35.5617, -225.412, -20.6034, 0.88 ) }
    dend_40 { pt3dadd( 36.2071, -225.887, -20.4017, 0.66 ) }
    dend_40 { pt3dadd( 37.0971, -226.529, -20.0849, 0.29 ) }
    dend_40 { pt3dadd( 37.5572, -226.866, -19.9002, 0.29 ) }
    dend_40 { pt3dadd( 38.1004, -227.28, -19.6779, 0.66 ) }
    dend_40 { pt3dadd( 38.5528, -227.641, -19.5132, 0.44 ) }
    dend_40 { pt3dadd( 44.7482, -233.109, -19.8867, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 90/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -20.6599, -174.818, -1.31288, 2.14 ) }
    dend_35 { pt3dadd( -21.3341, -176.532, -1.52886, 2.14 ) }
    dend_35 { pt3dadd( -21.885, -178.096, -1.7021, 1.33 ) }
    dend_35 { pt3dadd( -22.3766, -179.635, -1.84747, 1.03 ) }
    dend_35 { pt3dadd( -22.694, -180.805, -1.9386, 1.03 ) }
    dend_35 { pt3dadd( -22.8916, -181.602, -1.99536, 1.25 ) }
    dend_35 { pt3dadd( -23.076, -182.382, -2.04637, 1.25 ) }
    dend_35 { pt3dadd( -23.3446, -183.856, -2.12332, 0.96 ) }
    dend_35 { pt3dadd( -23.5317, -185.05, -2.15708, 0.96 ) }
    dend_35 { pt3dadd( -23.8714, -187.144, -2.19481, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( -24.0726, -188.379, -2.19052, 0.88 ) }
    dend_35 { pt3dadd( -24.2325, -189.549, -2.17198, 0.96 ) }
    dend_35 { pt3dadd( -24.3743, -190.884, -2.13628, 0.96 ) }
    dend_35 { pt3dadd( -24.4692, -192.025, -2.08439, 0.74 ) }
    dend_35 { pt3dadd( -24.5408, -193.125, -2.01723, 0.52 ) }
    dend_35 { pt3dadd( -24.5871, -194.038, -1.94401, 0.52 ) }
    dend_35 { pt3dadd( -24.6322, -195.16, -1.83676, 0.37 ) }
    dend_35 { pt3dadd( -24.6637, -196.054, -1.74874, 0.74 ) }
    dend_35 { pt3dadd( -24.7157, -197.025, -1.64818, 0.74 ) }
    dend_35 { pt3dadd( -24.7836, -198.118, -1.5202, 1.03 ) }
    dend_35 { pt3dadd( -24.8375, -198.813, -1.43287, 1.18 ) }
    dend_35 { pt3dadd( -24.9269, -199.775, -1.31724, 1.33 ) }
    dend_35 { pt3dadd( -25.0106, -200.499, -1.2249, 1.33 ) }
    dend_35 { pt3dadd( -25.0832, -201.272, -1.09155, 1.18 ) }
    dend_35 { pt3dadd( -25.167, -202.4, -0.785386, 0.96 ) }
    dend_35 { pt3dadd( -25.2155, -203.263, -0.462692, 0.81 ) }
    dend_35 { pt3dadd( -25.2435, -204.134, -0.0750309, 0.81 ) }
    dend_35 { pt3dadd( -25.2353, -205.092, 0.392571, 0.81 ) }
    dend_35 { pt3dadd( -25.2122, -205.929, 0.811186, 0.59 ) }
    dend_35 { pt3dadd( -25.1587, -207.313, 1.47133, 0.66 ) }
    dend_35 { pt3dadd( -25.1617, -207.904, 1.72739, 0.66 ) }
    dend_35 { pt3dadd( -25.2507, -208.96, 2.09982, 1.18 ) }
    dend_35 { pt3dadd( -25.4991, -210.047, 2.34053, 1.47 ) }
    dend_35 { pt3dadd( -25.8597, -210.982, 2.42727, 1.55 ) }
    dend_35 { pt3dadd( -26.2385, -211.66, 2.42259, 1.55 ) }
    dend_35 { pt3dadd( -26.8975, -212.571, 2.35637, 1.4 ) }
    dend_35 { pt3dadd( -27.8336, -213.624, 2.27771, 1.18 ) }
    dend_35 { pt3dadd( -28.9627, -214.736, 2.20565, 0.66 ) }
    dend_35 { pt3dadd( -29.9067, -215.605, 2.17044, 0.74 ) }
    dend_35 { pt3dadd( -31.1354, -216.697, 2.16164, 1.18 ) }
    dend_35 { pt3dadd( -32.1506, -217.574, 2.20163, 1.25 ) }
    dend_35 { pt3dadd( -33.2121, -218.477, 2.3068, 1.25 ) }
    dend_35 { pt3dadd( -34.1072, -219.225, 2.46413, 1.25 ) }
    dend_35 { pt3dadd( -35.0132, -219.921, 2.67699, 1.33 ) }
    dend_35 { pt3dadd( -35.5334, -220.272, 2.83224, 1.33 ) }
    dend_35 { pt3dadd( -36.3657, -220.751, 3.15965, 1.03 ) }
    dend_35 { pt3dadd( -37.0768, -221.093, 3.50465, 0.74 ) }
    dend_35 { pt3dadd( -37.6414, -221.326, 3.80897, 0.59 ) }
    dend_35 { pt3dadd( -38.381, -221.633, 4.23483, 0.59 ) }
    dend_35 { pt3dadd( -39.1168, -221.988, 4.67543, 0.88 ) }
    dend_35 { pt3dadd( -39.843, -222.468, 5.14733, 1.18 ) }
    dend_35 { pt3dadd( -40.5094, -223.054, 5.64057, 1.18 ) }
    dend_35 { pt3dadd( -41.0867, -223.681, 6.11592, 1.18 ) }
    dend_35 { pt3dadd( -41.624, -224.378, 6.5744, 1.18 ) }
    dend_35 { pt3dadd( -42.0367, -224.985, 6.92448, 1.18 ) }
    dend_35 { pt3dadd( -42.6092, -225.918, 7.4018, 0.81 ) }
    dend_35 { pt3dadd( -42.9538, -226.535, 7.67823, 0.59 ) }
    dend_35 { pt3dadd( -43.2729, -227.18, 7.9204, 0.52 ) }
    dend_35 { pt3dadd( -43.8899, -228.552, 8.35066, 0.96 ) }
    dend_35 { pt3dadd( -44.2492, -229.473, 8.57508, 1.18 ) }
    dend_35 { pt3dadd( -44.5534, -230.329, 8.73563, 1.18 ) }
    dend_35 { pt3dadd( -44.9522, -231.496, 8.89587, 0.88 ) }
    dend_35 { pt3dadd( -45.3445, -232.672, 9.01917, 0.59 ) }
    dend_35 { pt3dadd( -45.668, -233.731, 9.11114, 0.59 ) }
    dend_35 { pt3dadd( -46.0214, -234.963, 9.21023, 0.59 ) }
    dend_35 { pt3dadd( -46.3504, -236.114, 9.30417, 0.74 ) }
    dend_35 { pt3dadd( -46.7342, -237.401, 9.41596, 1.33 ) }
    dend_35 { pt3dadd( -47.0797, -238.518, 9.51768, 1.69 ) }
    dend_35 { pt3dadd( -47.5233, -239.899, 9.64847, 1.77 ) }
    dend_35 { pt3dadd( -47.7775, -240.711, 9.72173, 1.77 ) }
    dend_35 { pt3dadd( -48.0958, -241.734, 9.78777, 1.77 ) }
    dend_35 { pt3dadd( -48.3636, -242.717, 9.81364, 1.47 ) }
    dend_35 { pt3dadd( -48.6208, -243.808, 9.80021, 1.03 ) }
    dend_35 { pt3dadd( -48.8596, -244.882, 9.75639, 1.03 ) }
    dend_35 { pt3dadd( -49.1413, -246.136, 9.67545, 1.03 ) }
    dend_35 { pt3dadd( -49.4186, -247.436, 9.58505, 1.11 ) }
    dend_35 { pt3dadd( -49.6612, -248.661, 9.50545, 1.33 ) }
    dend_35 { pt3dadd( -49.8392, -249.778, 9.44241, 1.03 ) }
    dend_35 { pt3dadd( -50.0049, -251.292, 9.37012, 0.81 ) }
    dend_35 { pt3dadd( -50.0774, -252.353, 9.33241, 1.03 ) }
    dend_35 { pt3dadd( -50.1179, -253.688, 9.30327, 0.81 ) }
    dend_35 { pt3dadd( -50.1187, -254.416, 9.29919, 0.81 ) }
    dend_35 { pt3dadd( -50.0803, -256.387, 9.29032, 0.74 ) }
    dend_35 { pt3dadd( -50.0035, -258.368, 9.28273, 0.74 ) }
    dend_35 { pt3dadd( -49.909, -259.961, 9.27196, 0.74 ) }
    dend_35 { pt3dadd( -49.7745, -262.288, 9.25792, 0.74 ) }
    dend_35 { pt3dadd( -49.7195, -263.893, 9.24656, 0.74 ) }
    dend_35 { pt3dadd( -49.7237, -264.935, 9.2472, 1.18 ) }
    dend_35 { pt3dadd( -49.8031, -266.004, 9.27452, 1.4 ) }
    dend_35 { pt3dadd( -49.9977, -267.112, 9.3477, 1.4 ) }
    dend_35 { pt3dadd( -50.3141, -268.16, 9.47134, 1.47 ) }
    dend_35 { pt3dadd( -50.8638, -269.314, 9.67872, 1.55 ) }
    dend_35 { pt3dadd( -51.3091, -270.003, 9.83629, 1.55 ) }
    dend_35 { pt3dadd( -52.1606, -271.073, 10.1354, 1.11 ) }
    dend_35 { pt3dadd( -53.2949, -272.272, 10.5393, 0.88 ) }
    dend_35 { pt3dadd( -54.123, -273.049, 10.8635, 0.88 ) }
    dend_35 { pt3dadd( -55.0725, -273.845, 11.2634, 1.03 ) }
    dend_35 { pt3dadd( -55.7295, -274.363, 11.5464, 1.03 ) }
    dend_35 { pt3dadd( -56.2493, -274.784, 11.7781, 1.03 ) }
    dend_35 { pt3dadd( -57.0016, -275.493, 12.157, 0.81 ) }
    dend_35 { pt3dadd( -57.858, -276.499, 12.6289, 0.59 ) }
    dend_35 { pt3dadd( -58.7837, -277.885, 13.174, 0.59 ) }
    dend_35 { pt3dadd( -59.3584, -278.964, 13.5368, 0.88 ) }
    dend_35 { pt3dadd( -59.7804, -279.965, 13.8294, 0.88 ) }
    dend_35 { pt3dadd( -60.3114, -281.538, 14.2174, 0.74 ) }
    dend_35 { pt3dadd( -60.5986, -282.622, 14.4387, 0.96 ) }
    dend_35 { pt3dadd( -60.8299, -283.69, 14.5969, 1.11 ) }
    dend_35 { pt3dadd( -60.9634, -284.457, 14.687, 1.11 ) }
    dend_35 { pt3dadd( -61.097, -285.265, 14.7531, 0.88 ) }
    dend_35 { pt3dadd( -61.3076, -286.374, 14.7874, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_35 { pt3dadd( -61.4773, -287.153, 14.7911, 0.66 ) }
    dend_35 { pt3dadd( -61.7595, -288.463, 14.7997, 0.96 ) }
    dend_35 { pt3dadd( -61.9675, -289.464, 14.8007, 0.96 ) }
    dend_35 { pt3dadd( -62.2232, -290.745, 14.7936, 0.66 ) }
    dend_35 { pt3dadd( -62.4567, -291.914, 14.7852, 0.74 ) }
    dend_35 { pt3dadd( -62.8159, -293.791, 14.7891, 0.96 ) }
    dend_35 { pt3dadd( -63.0089, -294.874, 14.8193, 0.96 ) }
    dend_35 { pt3dadd( -63.2027, -296.005, 14.8555, 0.96 ) }
    dend_35 { pt3dadd( -63.4403, -297.301, 14.8798, 0.66 ) }
    dend_35 { pt3dadd( -63.8045, -299.212, 14.8833, 0.66 ) }
    dend_35 { pt3dadd( -64.1222, -301.038, 14.8266, 0.66 ) }
    dend_35 { pt3dadd( -64.2968, -302.128, 14.7553, 0.81 ) }
    dend_35 { pt3dadd( -64.5739, -304.035, 14.5823, 0.74 ) }
    dend_35 { pt3dadd( -64.769, -305.546, 14.4059, 0.74 ) }
    dend_35 { pt3dadd( -64.9366, -307.139, 14.1823, 0.96 ) }
    dend_35 { pt3dadd( -65.05, -308.477, 13.9709, 0.96 ) }
    dend_35 { pt3dadd( -65.1213, -309.364, 13.8376, 1.62 ) }
    dend_35 { pt3dadd( -65.1797, -309.852, 13.79, 1.62 ) }
    dend_35 { pt3dadd( -65.2814, -310.494, 13.788, 1.62 ) }
    dend_35 { pt3dadd( -65.4573, -311.435, 13.8428, 1.4 ) }
    dend_35 { pt3dadd( -65.6774, -312.417, 13.9425, 0.88 ) }
    dend_35 { pt3dadd( -65.9711, -313.675, 14.1012, 0.59 ) }
    dend_35 { pt3dadd( -66.3567, -315.386, 14.3342, 0.81 ) }
    dend_35 { pt3dadd( -66.6655, -316.763, 14.5332, 0.96 ) }
    dend_35 { pt3dadd( -66.9029, -317.875, 14.6836, 0.96 ) }
    dend_35 { pt3dadd( -67.1703, -319.217, 14.8373, 1.11 ) }
    dend_35 { pt3dadd( -67.3481, -320.095, 14.9271, 1.11 ) }
    dend_35 { pt3dadd( -67.5011, -320.773, 14.9902, 1.33 ) }
    dend_35 { pt3dadd( -67.6638, -321.433, 15.049, 1.33 ) }
    dend_35 { pt3dadd( -67.9931, -322.507, 15.1789, 1.03 ) }
    dend_35 { pt3dadd( -68.396, -323.565, 15.3492, 0.66 ) }
    dend_35 { pt3dadd( -68.7337, -324.354, 15.4978, 0.37 ) }
    dend_35 { pt3dadd( -68.9894, -324.93, 15.6118, 0.37 ) }
    dend_35 { pt3dadd( -69.2988, -325.685, 15.7565, 0.37 ) }
    dend_35 { pt3dadd( -69.5756, -326.402, 15.8923, 1.03 ) }
    dend_35 { pt3dadd( -69.8744, -327.2, 16.0408, 1.25 ) }
    dend_35 { pt3dadd( -70.0665, -327.794, 16.1437, 1.25 ) }
    dend_35 { pt3dadd( -70.3688, -328.904, 16.3127, 0.96 ) }
    dend_35 { pt3dadd( -70.701, -330.3, 16.4988, 0.52 ) }
    dend_35 { pt3dadd( -70.9862, -331.557, 16.6492, 0.52 ) }
    dend_35 { pt3dadd( -71.358, -333.309, 16.8324, 0.52 ) }
    dend_35 { pt3dadd( -71.6202, -334.736, 16.9599, 0.81 ) }
    dend_35 { pt3dadd( -71.8025, -335.777, 17.0534, 1.03 ) }
    dend_35 { pt3dadd( -71.9744, -336.718, 17.1425, 1.03 ) }
    dend_35 { pt3dadd( -72.114, -337.443, 17.213, 0.81 ) }
    dend_35 { pt3dadd( -72.3008, -338.317, 17.2994, 0.81 ) }
    dend_35 { pt3dadd( -72.6076, -339.543, 17.4223, 0.59 ) }
    dend_35 { pt3dadd( -73.0119, -340.828, 17.5613, 0.44 ) }
    dend_35 { pt3dadd( -73.6525, -342.443, 17.7818, 0.88 ) }
    dend_35 { pt3dadd( -73.986, -343.134, 17.8975, 0.88 ) }
    dend_35 { pt3dadd( -74.492, -344.027, 18.0733, 0.59 ) }
    dend_35 { pt3dadd( -75.0334, -344.786, 18.2651, 0.59 ) }
    dend_35 { pt3dadd( -75.9075, -345.736, 18.5628, 0.59 ) }
    dend_35 { pt3dadd( -76.8627, -346.566, 18.8728, 0.81 ) }
    dend_35 { pt3dadd( -77.4117, -346.961, 19.0496, 0.81 ) }
    dend_35 { pt3dadd( -77.8566, -347.245, 19.1917, 0.81 ) }
    dend_35 { pt3dadd( -78.8667, -347.792, 19.5071, 0.59 ) }
    dend_35 { pt3dadd( -79.9811, -348.279, 19.8501, 0.88 ) }
    dend_35 { pt3dadd( -81.0938, -348.668, 20.1844, 1.03 ) }
    dend_35 { pt3dadd( -82.1603, -348.981, 20.4961, 1.03 ) }
    dend_35 { pt3dadd( -83.042, -349.188, 20.7581, 0.59 ) }
    dend_35 { pt3dadd( -83.8345, -349.35, 21.0048, 0.59 ) }
    dend_35 { pt3dadd( -84.5048, -349.49, 21.2234, 0.59 ) }
    dend_35 { pt3dadd( -85.0751, -349.607, 21.4296, 0.59 ) }
    dend_35 { pt3dadd( -85.6793, -349.762, 21.6566, 0.59 ) }
    dend_35 { pt3dadd( -86.4646, -350.007, 21.9658, 0.44 ) }
    dend_35 { pt3dadd( -87.6335, -350.464, 22.4439, 0.81 ) }
    dend_35 { pt3dadd( -88.6015, -350.925, 22.859, 1.11 ) }
    dend_35 { pt3dadd( -89.6475, -351.517, 23.3332, 0.81 ) }
    dend_35 { pt3dadd( -90.6868, -352.209, 23.8221, 0.66 ) }
    dend_35 { pt3dadd( -91.1604, -352.569, 24.0492, 0.66 ) }
    dend_35 { pt3dadd( -91.7276, -353.063, 24.3248, 0.52 ) }
    dend_35 { pt3dadd( -92.3716, -353.683, 24.6478, 0.52 ) }
    dend_35 { pt3dadd( -93.0192, -354.388, 24.9796, 0.52 ) }
    dend_35 { pt3dadd( -93.6662, -355.147, 25.3171, 0.52 ) }
    dend_35 { pt3dadd( -94.0542, -355.65, 25.5239, 1.11 ) }
    dend_35 { pt3dadd( -94.9141, -356.878, 25.9739, 1.4 ) }
    dend_35 { pt3dadd( -95.3784, -357.615, 26.2121, 1.84 ) }
    dend_35 { pt3dadd( -95.8909, -358.508, 26.4564, 2.43 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 79/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.2675, -93.6997, -7.23874, 0.66 ) }
    dend_32 { pt3dadd( -9.24826, -95.2202, -7.23421, 0.66 ) }
    dend_32 { pt3dadd( -9.25196, -96.1579, -7.22951, 0.37 ) }
    dend_32 { pt3dadd( -9.2575, -96.7839, -7.24838, 0.81 ) }
    dend_32 { pt3dadd( -9.257, -97.5918, -7.29294, 1.03 ) }
    dend_32 { pt3dadd( -9.25901, -98.294, -7.33641, 1.11 ) }
    dend_32 { pt3dadd( -9.26997, -99.0435, -7.39209, 0.88 ) }
    dend_32 { pt3dadd( -9.29618, -99.906, -7.48358, 0.59 ) }
    dend_32 { pt3dadd( -9.31688, -100.908, -7.62781, 0.29 ) }
    dend_32 { pt3dadd( -9.31992, -101.633, -7.75862, 0.29 ) }
    dend_32 { pt3dadd( -9.30975, -101.965, -7.83144, 0.29 ) }
    dend_32 { pt3dadd( -9.24828, -102.708, -8.0415, 0.74 ) }
    dend_32 { pt3dadd( -9.14623, -103.396, -8.28044, 1.11 ) }
    dend_32 { pt3dadd( -9.05668, -103.829, -8.44723, 1.11 ) }
    dend_32 { pt3dadd( -8.90666, -104.465, -8.70227, 1.11 ) }
    dend_32 { pt3dadd( -8.70387, -105.202, -8.97856, 0.81 ) }
    dend_32 { pt3dadd( -8.34651, -106.42, -9.38298, 0.44 ) }
    dend_32 { pt3dadd( -8.00352, -107.58, -9.7083, 0.59 ) }
    dend_32 { pt3dadd( -7.81181, -108.281, -9.86888, 0.88 ) }
    dend_32 { pt3dadd( -7.63387, -109.021, -9.99437, 0.88 ) }
    dend_32 { pt3dadd( -7.41708, -110.085, -10.117, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -7.24031, -111.133, -10.1729, 0.44 ) }
    dend_32 { pt3dadd( -7.12681, -111.963, -10.1643, 1.03 ) }
    dend_32 { pt3dadd( -7.04994, -112.66, -10.1365, 0.74 ) }
    dend_32 { pt3dadd( -6.97118, -113.533, -10.101, 0.52 ) }
    dend_32 { pt3dadd( -6.92189, -114.21, -10.0809, 0.88 ) }
    dend_32 { pt3dadd( -6.90224, -114.831, -10.0932, 1.18 ) }
    dend_32 { pt3dadd( -6.89015, -115.369, -10.1131, 1.18 ) }
    dend_32 { pt3dadd( -6.88533, -115.985, -10.1395, 0.88 ) }
    dend_32 { pt3dadd( -6.88557, -117.057, -10.1951, 0.29 ) }
    dend_32 { pt3dadd( -6.89538, -117.868, -10.2447, 0.29 ) }
    dend_32 { pt3dadd( -6.92676, -119.028, -10.3356, 1.03 ) }
    dend_32 { pt3dadd( -6.94838, -119.798, -10.4095, 1.47 ) }
    dend_32 { pt3dadd( -6.96321, -120.284, -10.4566, 1.47 ) }
    dend_32 { pt3dadd( -6.97635, -120.818, -10.5104, 1.47 ) }
    dend_32 { pt3dadd( -6.97842, -121.614, -10.5964, 1.25 ) }
    dend_32 { pt3dadd( -6.9632, -122.588, -10.6969, 0.44 ) }
    dend_32 { pt3dadd( -6.92906, -123.392, -10.7745, 0.44 ) }
    dend_32 { pt3dadd( -6.89006, -124.176, -10.8577, 0.44 ) }
    dend_32 { pt3dadd( -6.86554, -124.578, -10.904, 0.59 ) }
    dend_32 { pt3dadd( -6.806, -125.524, -11.015, 0.59 ) }
    dend_32 { pt3dadd( -6.75013, -126.244, -11.1078, 0.37 ) }
    dend_32 { pt3dadd( -6.70215, -126.845, -11.1858, 0.81 ) }
    dend_32 { pt3dadd( -6.65586, -127.396, -11.2501, 1.03 ) }
    dend_32 { pt3dadd( -6.62146, -127.799, -11.2903, 1.03 ) }
    dend_32 { pt3dadd( -6.58506, -128.299, -11.3258, 0.59 ) }
    dend_32 { pt3dadd( -6.51723, -129.115, -11.3727, 0.22 ) }
    dend_32 { pt3dadd( -6.45751, -129.625, -11.406, 0.22 ) }
    dend_32 { pt3dadd( -6.37158, -130.227, -11.45, 0.22 ) }
    dend_32 { pt3dadd( -6.26782, -130.874, -11.5009, 0.66 ) }
    dend_32 { pt3dadd( -6.13349, -131.648, -11.5692, 0.88 ) }
    dend_32 { pt3dadd( -5.91613, -132.774, -11.6827, 0.88 ) }
    dend_32 { pt3dadd( -5.65553, -134.084, -11.8216, 0.96 ) }
    dend_32 { pt3dadd( -5.46302, -135.069, -11.942, 1.18 ) }
    dend_32 { pt3dadd( -5.32564, -135.868, -12.0489, 0.66 ) }
    dend_32 { pt3dadd( -5.21987, -136.524, -12.1374, 0.52 ) }
    dend_32 { pt3dadd( -5.04617, -137.777, -12.3068, 0.52 ) }
    dend_32 { pt3dadd( -4.93397, -138.745, -12.4366, 0.81 ) }
    dend_32 { pt3dadd( -4.8342, -139.723, -12.5712, 0.52 ) }
    dend_32 { pt3dadd( -4.75788, -140.454, -12.6702, 0.52 ) }
    dend_32 { pt3dadd( -4.66918, -141.318, -12.805, 1.47 ) }
    dend_32 { pt3dadd( -4.57784, -142.202, -12.9656, 1.77 ) }
    dend_32 { pt3dadd( -4.50897, -142.882, -13.1182, 1.77 ) }
    dend_32 { pt3dadd( -4.46221, -143.273, -13.2201, 1.77 ) }
    dend_32 { pt3dadd( -4.36764, -143.918, -13.4017, 1.25 ) }
    dend_32 { pt3dadd( -4.24464, -144.664, -13.62, 0.81 ) }
    dend_32 { pt3dadd( -4.10098, -145.571, -13.8868, 0.44 ) }
    dend_32 { pt3dadd( -3.91325, -146.707, -14.2191, 0.37 ) }
    dend_32 { pt3dadd( -3.79592, -147.406, -14.4187, 0.52 ) }
    dend_32 { pt3dadd( -3.64068, -148.25, -14.659, 0.52 ) }
    dend_32 { pt3dadd( -3.51348, -148.882, -14.8388, 0.66 ) }
    dend_32 { pt3dadd( -3.33104, -149.713, -15.0826, 0.66 ) }
    dend_32 { pt3dadd( -3.09942, -150.773, -15.4363, 0.88 ) }
    dend_32 { pt3dadd( -2.89982, -151.661, -15.7688, 1.25 ) }
    dend_32 { pt3dadd( -2.78906, -152.16, -15.9828, 1.25 ) }
    dend_32 { pt3dadd( -2.68954, -152.588, -16.1882, 1.25 ) }
    dend_32 { pt3dadd( -2.48909, -153.427, -16.6279, 1.11 ) }
    dend_32 { pt3dadd( -2.31015, -154.165, -17.0416, 0.74 ) }
    dend_32 { pt3dadd( -2.15315, -154.812, -17.4249, 0.29 ) }
    dend_32 { pt3dadd( -2.06491, -155.195, -17.659, 0.29 ) }
    dend_32 { pt3dadd( -1.8575, -156.131, -18.2142, 0.44 ) }
    dend_32 { pt3dadd( -1.73932, -156.669, -18.5091, 0.88 ) }
    dend_32 { pt3dadd( -1.63869, -157.16, -18.7402, 1.33 ) }
    dend_32 { pt3dadd( -1.52297, -157.744, -18.9706, 1.47 ) }
    dend_32 { pt3dadd( -1.40356, -158.38, -19.1789, 1.47 ) }
    dend_32 { pt3dadd( -1.2973, -158.947, -19.3368, 1.25 ) }
    dend_32 { pt3dadd( -1.15091, -159.723, -19.5234, 0.44 ) }
    dend_32 { pt3dadd( -0.914506, -160.864, -19.7312, 0.29 ) }
    dend_32 { pt3dadd( -0.719055, -161.77, -19.8415, 0.29 ) }
    dend_32 { pt3dadd( -0.518989, -162.698, -19.9055, 0.29 ) }
    dend_32 { pt3dadd( -0.363576, -163.439, -19.9218, 0.74 ) }
    dend_32 { pt3dadd( -0.262233, -163.965, -19.9101, 0.88 ) }
    dend_32 { pt3dadd( -0.0895555, -165.037, -19.8337, 0.96 ) }
    dend_32 { pt3dadd( 0.0119367, -165.956, -19.7335, 1.03 ) }
    dend_32 { pt3dadd( 0.0419958, -166.651, -19.6484, 1.03 ) }
    dend_32 { pt3dadd( 0.0378714, -167.345, -19.55, 0.59 ) }
    dend_32 { pt3dadd( 0.0161085, -168.088, -19.4448, 0.22 ) }
    dend_32 { pt3dadd( -0.00369713, -168.555, -19.3911, 0.22 ) }
    dend_32 { pt3dadd( -0.0638776, -169.631, -19.3227, 0.96 ) }
    dend_32 { pt3dadd( -0.104816, -170.267, -19.2993, 1.11 ) }
    dend_32 { pt3dadd( -0.133612, -170.967, -19.2631, 1.11 ) }
    dend_32 { pt3dadd( -0.133451, -171.635, -19.216, 0.59 ) }
    dend_32 { pt3dadd( -0.107407, -172.314, -19.1621, 0.29 ) }
    dend_32 { pt3dadd( -0.063158, -172.893, -19.1085, 0.29 ) }
    dend_32 { pt3dadd( -0.0181348, -173.376, -19.0524, 0.29 ) }
    dend_32 { pt3dadd( 0.0928864, -174.423, -18.9147, 0.44 ) }
    dend_32 { pt3dadd( 0.197635, -175.31, -18.778, 0.66 ) }
    dend_32 { pt3dadd( 0.313514, -176.248, -18.626, 0.66 ) }
    dend_32 { pt3dadd( 0.401721, -176.925, -18.5245, 0.81 ) }
    dend_32 { pt3dadd( 0.497474, -177.677, -18.4288, 0.81 ) }
    dend_32 { pt3dadd( 0.58687, -178.395, -18.3509, 0.52 ) }
    dend_32 { pt3dadd( 0.671805, -179.308, -18.267, 0.66 ) }
    dend_32 { pt3dadd( 0.723043, -179.985, -18.2053, 0.66 ) }
    dend_32 { pt3dadd( 0.755481, -181.126, -18.1383, 0.37 ) }
    dend_32 { pt3dadd( 0.742198, -182.136, -18.115, 0.37 ) }
    dend_32 { pt3dadd( 0.697744, -182.943, -18.1212, 1.03 ) }
    dend_32 { pt3dadd( 0.614059, -183.754, -18.1723, 1.47 ) }
    dend_32 { pt3dadd( 0.490441, -184.55, -18.2602, 1.62 ) }
    dend_32 { pt3dadd( 0.192231, -185.972, -18.4761, 0.88 ) }
    dend_32 { pt3dadd( -0.0846083, -186.897, -18.6617, 0.59 ) }
    dend_32 { pt3dadd( -0.365462, -187.604, -18.8339, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_32 { pt3dadd( -0.928132, -188.744, -19.1298, 0.29 ) }
    dend_32 { pt3dadd( -1.11748, -189.082, -19.2058, 0.29 ) }
    dend_32 { pt3dadd( -1.4161, -189.567, -19.2872, 0.29 ) }
    dend_32 { pt3dadd( -1.96425, -190.47, -19.3773, 0.29 ) }
    dend_32 { pt3dadd( -2.50575, -191.323, -19.4521, 0.59 ) }
    dend_32 { pt3dadd( -3.06418, -192.228, -19.5202, 0.59 ) }
    dend_32 { pt3dadd( -3.41234, -192.788, -19.5556, 0.44 ) }
    dend_32 { pt3dadd( -3.84888, -193.461, -19.6027, 0.44 ) }
    dend_32 { pt3dadd( -4.15365, -193.871, -19.6542, 0.29 ) }
    dend_32 { pt3dadd( -4.62068, -194.456, -19.7683, 1.4 ) }
    dend_32 { pt3dadd( -5.34319, -195.128, -19.9681, 1.62 ) }
    dend_32 { pt3dadd( -6.02784, -195.593, -20.1404, 1.4 ) }
    dend_32 { pt3dadd( -6.69917, -195.932, -20.2857, 1.11 ) }
    dend_32 { pt3dadd( -7.81498, -196.393, -20.4858, 0.81 ) }
    dend_32 { pt3dadd( -8.43366, -196.631, -20.5921, 0.59 ) }
    dend_32 { pt3dadd( -9.12159, -196.915, -20.7299, 0.74 ) }
    dend_32 { pt3dadd( -9.78669, -197.255, -20.8854, 0.81 ) }
    dend_32 { pt3dadd( -10.3067, -197.679, -21.0369, 0.52 ) }
    dend_32 { pt3dadd( -10.693, -198.104, -21.1762, 0.52 ) }
    dend_32 { pt3dadd( -11.0393, -198.576, -21.3014, 0.74 ) }
    dend_32 { pt3dadd( -11.5223, -199.248, -21.4968, 0.74 ) }
    dend_32 { pt3dadd( -11.7742, -199.663, -21.6097, 0.74 ) }
    dend_32 { pt3dadd( -12.0388, -200.132, -21.7543, 0.52 ) }
    dend_32 { pt3dadd( -12.4204, -200.87, -21.9559, 0.52 ) }
    dend_32 { pt3dadd( -12.6234, -201.276, -22.0547, 0.52 ) }
    dend_32 { pt3dadd( -12.9924, -202.073, -22.2073, 1.69 ) }
    dend_32 { pt3dadd( -13.2035, -202.6, -22.2789, 2.14 ) }
    dend_32 { pt3dadd( -13.5672, -203.713, -22.3917, 1.55 ) }
    dend_32 { pt3dadd( -13.8816, -204.88, -22.4753, 0.29 ) }
    dend_32 { pt3dadd( -14.0372, -205.562, -22.5078, 0.29 ) }
    dend_32 { pt3dadd( -14.2285, -206.5, -22.5336, 0.44 ) }
    dend_32 { pt3dadd( -14.3937, -207.395, -22.5315, 0.59 ) }
    dend_32 { pt3dadd( -14.5318, -208.189, -22.5129, 0.59 ) }
    dend_32 { pt3dadd( -14.6587, -208.998, -22.4667, 0.29 ) }
    dend_32 { pt3dadd( -14.7281, -209.434, -22.4422, 0.29 ) }
    dend_32 { pt3dadd( -14.8233, -210.041, -22.4089, 0.96 ) }
    dend_32 { pt3dadd( -14.8989, -210.574, -22.3837, 1.03 ) }
    dend_32 { pt3dadd( -14.9883, -211.314, -22.3608, 0.52 ) }
    dend_32 { pt3dadd( -15.0787, -212.276, -22.3495, 0.29 ) }
    dend_32 { pt3dadd( -15.1158, -212.822, -22.3508, 0.81 ) }
    dend_32 { pt3dadd( -15.1469, -213.456, -22.3559, 0.96 ) }
    dend_32 { pt3dadd( -15.1672, -213.945, -22.3625, 0.96 ) }
    dend_32 { pt3dadd( -15.2022, -214.801, -22.3766, 0.29 ) }
    dend_32 { pt3dadd( -15.2557, -215.779, -22.384, 0.29 ) }
    dend_32 { pt3dadd( -15.3357, -216.803, -22.4107, 1.47 ) }
    dend_32 { pt3dadd( -15.3994, -217.52, -22.4411, 1.92 ) }
    dend_32 { pt3dadd( -15.429, -217.868, -22.4608, 1.92 ) }
    dend_32 { pt3dadd( -15.4976, -218.735, -22.506, 1.33 ) }
    dend_32 { pt3dadd( -15.5662, -219.698, -22.5649, 0.29 ) }
    dend_32 { pt3dadd( -15.6336, -220.68, -22.6344, 0.29 ) }
    dend_32 { pt3dadd( -15.6846, -221.464, -22.7024, 0.29 ) }
    dend_32 { pt3dadd( -15.7946, -223.165, -22.8659, 0.29 ) }
    dend_32 { pt3dadd( -15.857, -224.323, -22.9752, 1.4 ) }
    dend_32 { pt3dadd( -15.8847, -225.028, -23.04, 2.14 ) }
    dend_32 { pt3dadd( -15.8926, -225.335, -23.0673, 2.28 ) }
    dend_32 { pt3dadd( -15.8957, -225.837, -23.1055, 2.28 ) }
    dend_32 { pt3dadd( -15.8947, -226.356, -23.1298, 1.92 ) }
    dend_32 { pt3dadd( -15.8776, -227.11, -23.1083, 0.88 ) }
    dend_32 { pt3dadd( -15.8284, -228.261, -23.0125, 0.29 ) }
    dend_32 { pt3dadd( -15.7836, -228.965, -22.9216, 0.29 ) }
    dend_32 { pt3dadd( -15.7212, -229.753, -22.7983, 0.29 ) }
    dend_32 { pt3dadd( -15.6112, -230.987, -22.5818, 0.29 ) }
    dend_32 { pt3dadd( -15.4931, -232.25, -22.361, 0.96 ) }
    dend_32 { pt3dadd( -15.4121, -233.096, -22.2235, 1.62 ) }
    dend_32 { pt3dadd( -15.3654, -233.574, -22.1496, 1.62 ) }
    dend_32 { pt3dadd( -15.3255, -234.025, -22.0891, 1.62 ) }
    dend_32 { pt3dadd( -15.2586, -234.996, -21.9929, 1.11 ) }
    dend_32 { pt3dadd( -15.2217, -236.185, -21.9733, 0.29 ) }
    dend_32 { pt3dadd( -15.2285, -237.072, -22.006, 0.29 ) }
    dend_32 { pt3dadd( -15.2501, -237.774, -22.0467, 0.59 ) }
    dend_32 { pt3dadd( -15.27, -238.123, -22.071, 0.66 ) }
    dend_32 { pt3dadd( -15.3034, -238.545, -22.1017, 0.66 ) }
    dend_32 { pt3dadd( -15.4223, -239.708, -22.1824, 0.29 ) }
    dend_32 { pt3dadd( -15.6095, -241.056, -22.2838, 0.29 ) }
    dend_32 { pt3dadd( -15.7851, -242.102, -22.3593, 0.96 ) }
    dend_32 { pt3dadd( -15.9512, -242.927, -22.4037, 1.4 ) }
    dend_32 { pt3dadd( -16.0857, -243.546, -22.4234, 1.4 ) }
    dend_32 { pt3dadd( -16.2277, -244.187, -22.4311, 1.4 ) }
    dend_32 { pt3dadd( -16.4147, -245.034, -22.4192, 0.88 ) }
    dend_32 { pt3dadd( -16.6447, -246.071, -22.3967, 0.29 ) }
    dend_32 { pt3dadd( -16.8462, -247.018, -22.3653, 0.29 ) }
    dend_32 { pt3dadd( -17.0569, -247.976, -22.3227, 0.44 ) }
    dend_32 { pt3dadd( -17.199, -248.583, -22.2827, 0.66 ) }
    dend_32 { pt3dadd( -17.3167, -249.071, -22.2367, 0.66 ) }
    dend_32 { pt3dadd( -17.5172, -249.941, -22.1215, 0.29 ) }
    dend_32 { pt3dadd( -17.6339, -250.464, -22.0496, 0.29 ) }
    dend_32 { pt3dadd( -17.7961, -251.131, -21.9817, 0.29 ) }
    dend_32 { pt3dadd( -18.058, -252.046, -21.9344, 0.29 ) }
    dend_32 { pt3dadd( -18.2302, -252.568, -21.9344, 0.52 ) }
    dend_32 { pt3dadd( -18.4784, -253.292, -21.9702, 0.66 ) }
    dend_32 { pt3dadd( -18.6752, -254.011, -22.0144, 0.66 ) }
    dend_32 { pt3dadd( -18.8869, -255.125, -22.108, 1.4 ) }
    dend_32 { pt3dadd( -18.9795, -256.096, -22.2314, 2.28 ) }
    dend_32 { pt3dadd( -18.9963, -257.059, -22.3906, 2.5 ) }
    dend_32 { pt3dadd( -18.9558, -257.598, -22.4867, 2.5 ) }
    dend_32 { pt3dadd( -18.5948, -259.471, -22.8492, 0.22 ) }
    dend_32 { pt3dadd( -18.3591, -260.223, -22.9941, 0.22 ) }
    dend_32 { pt3dadd( -17.9325, -261.171, -23.1775, 0.37 ) }
    dend_32 { pt3dadd( -17.606, -261.727, -23.2864, 0.44 ) }
    dend_32 { pt3dadd( -17.0297, -262.54, -23.5538, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( -16.4427, -263.284, -23.9473, 0.88 ) }
    dend_32 { pt3dadd( -16.1469, -263.627, -24.2682, 1.4 ) }
    dend_32 { pt3dadd( -15.947, -263.872, -24.5653, 1.4 ) }
    dend_32 { pt3dadd( -15.7172, -264.222, -25.0345, 1.11 ) }
    dend_32 { pt3dadd( -15.1275, -265.435, -26.719, 0.29 ) }
    dend_32 { pt3dadd( -14.9788, -265.876, -27.3203, 0.29 ) }
    dend_32 { pt3dadd( -14.8001, -266.654, -28.3161, 0.81 ) }
    dend_32 { pt3dadd( -14.7326, -267.167, -28.8523, 0.81 ) }
    dend_32 { pt3dadd( -14.6597, -268.267, -29.7846, 0.22 ) }
    dend_32 { pt3dadd( -14.6476, -268.732, -30.1007, 0.22 ) }
    dend_32 { pt3dadd( -14.6352, -269.457, -30.4515, 0.44 ) }
    dend_32 { pt3dadd( -14.632, -269.868, -30.6126, 0.59 ) }
    dend_32 { pt3dadd( -14.6221, -271.595, -31.1583, 0.22 ) }
    dend_32 { pt3dadd( -14.6252, -272.199, -31.3353, 0.74 ) }
    dend_32 { pt3dadd( -14.632, -272.736, -31.4805, 1.03 ) }
    dend_32 { pt3dadd( -14.6288, -273.311, -31.628, 1.03 ) }
    dend_32 { pt3dadd( -14.6199, -273.873, -31.7652, 0.74 ) }
    dend_32 { pt3dadd( -14.6075, -274.396, -31.8922, 0.37 ) }
    dend_32 { pt3dadd( -14.5642, -275.722, -32.2262, 0.22 ) }
    dend_32 { pt3dadd( -14.5348, -277.043, -32.5575, 0.22 ) }
    dend_32 { pt3dadd( -14.5235, -278.037, -32.7971, 0.88 ) }
    dend_32 { pt3dadd( -14.5219, -278.772, -32.9694, 1.62 ) }
    dend_32 { pt3dadd( -14.5259, -279.177, -33.062, 1.84 ) }
    dend_32 { pt3dadd( -14.5398, -279.665, -33.1668, 1.84 ) }
    dend_32 { pt3dadd( -14.5883, -280.673, -33.3629, 0.52 ) }
    dend_32 { pt3dadd( -14.6605, -281.525, -33.5109, 0.22 ) }
    dend_32 { pt3dadd( -14.7478, -282.21, -33.618, 0.22 ) }
    dend_32 { pt3dadd( -14.8449, -282.801, -33.6996, 0.37 ) }
    dend_32 { pt3dadd( -14.8887, -283.032, -33.7215, 0.37 ) }
    dend_32 { pt3dadd( -15.0225, -283.603, -33.7617, 0.22 ) }
    dend_32 { pt3dadd( -15.1489, -284.069, -33.7828, 0.74 ) }
    dend_32 { pt3dadd( -15.3045, -284.598, -33.8049, 0.74 ) }
    dend_32 { pt3dadd( -15.4518, -285.078, -33.8167, 0.59 ) }
    dend_32 { pt3dadd( -15.7859, -286.118, -33.8238, 0.22 ) }
    dend_32 { pt3dadd( -15.9501, -286.599, -33.812, 0.22 ) }
    dend_32 { pt3dadd( -16.1819, -287.244, -33.7521, 0.59 ) }
    dend_32 { pt3dadd( -16.3548, -287.71, -33.6723, 0.59 ) }
    dend_32 { pt3dadd( -16.5216, -288.19, -33.5449, 0.29 ) }
    dend_32 { pt3dadd( -16.6968, -288.682, -33.3832, 0.22 ) }
    dend_32 { pt3dadd( -16.986, -289.362, -33.1507, 0.37 ) }
    dend_32 { pt3dadd( -17.3873, -290.181, -32.8572, 0.44 ) }
    dend_32 { pt3dadd( -17.8064, -290.768, -32.6497, 0.59 ) }
    dend_32 { pt3dadd( -18.4099, -291.371, -32.4544, 0.37 ) }
    dend_32 { pt3dadd( -18.8208, -291.639, -32.3747, 0.22 ) }
    dend_32 { pt3dadd( -19.9423, -292.072, -32.2693, 2.21 ) }
    dend_32 { pt3dadd( -20.4006, -292.131, -32.2655, 2.5 ) }
    dend_32 { pt3dadd( -22.2901, -291.927, -32.3578, 0.22 ) }
    dend_32 { pt3dadd( -22.8936, -291.756, -32.4077, 0.22 ) }
    dend_32 { pt3dadd( -23.7494, -291.363, -32.5316, 0.66 ) }
    dend_32 { pt3dadd( -24.1752, -291.105, -32.6147, 0.66 ) }
    dend_32 { pt3dadd( -24.7969, -290.66, -32.7586, 0.37 ) }
    dend_32 { pt3dadd( -25.6857, -290.003, -33.0007, 1.92 ) }
    dend_32 { pt3dadd( -26.0038, -289.77, -33.0941, 1.92 ) }
    dend_32 { pt3dadd( -27.6455, -288.79, -33.6261, 0.44 ) }
    dend_32 { pt3dadd( -28.3724, -288.445, -33.87, 0.59 ) }
    dend_32 { pt3dadd( -28.7965, -288.3, -33.9935, 0.37 ) }
    dend_32 { pt3dadd( -29.4211, -288.189, -34.1243, 0.37 ) }
    dend_32 { pt3dadd( -30.0551, -288.14, -34.2413, 0.22 ) }
    dend_32 { pt3dadd( -31.5153, -288.164, -34.4161, 0.29 ) }
    dend_32 { pt3dadd( -31.9907, -288.25, -34.4111, 0.22 ) }
    dend_32 { pt3dadd( -32.7474, -288.429, -34.3577, 0.22 ) }
    dend_32 { pt3dadd( -33.7796, -288.672, -34.2558, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 62/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -9.2675, -93.6997, -7.23874, 0.74 ) }
    dend_31 { pt3dadd( -10.965, -95.4208, -6.14469, 0.74 ) }
    dend_31 { pt3dadd( -11.6414, -96.041, -5.70765, 0.74 ) }
    dend_31 { pt3dadd( -12.6444, -96.8285, -5.09969, 0.74 ) }
    dend_31 { pt3dadd( -13.3633, -97.2983, -4.68759, 0.52 ) }
    dend_31 { pt3dadd( -14.1461, -97.6525, -4.29209, 0.52 ) }
    dend_31 { pt3dadd( -14.9254, -97.9006, -3.94298, 0.88 ) }
    dend_31 { pt3dadd( -15.6591, -97.8904, -3.73915, 0.88 ) }
    dend_31 { pt3dadd( -16.9159, -97.6629, -3.51294, 0.59 ) }
    dend_31 { pt3dadd( -17.7312, -97.4517, -3.41078, 0.37 ) }
    dend_31 { pt3dadd( -19.0222, -97.165, -3.31562, 0.37 ) }
    dend_31 { pt3dadd( -19.8334, -97.0754, -3.31609, 1.11 ) }
    dend_31 { pt3dadd( -20.5315, -97.1451, -3.36664, 1.47 ) }
    dend_31 { pt3dadd( -21.202, -97.3209, -3.42389, 1.47 ) }
    dend_31 { pt3dadd( -21.6803, -97.4943, -3.45254, 1.47 ) }
    dend_31 { pt3dadd( -22.7606, -97.9021, -3.49183, 0.96 ) }
    dend_31 { pt3dadd( -23.7103, -98.1992, -3.49068, 0.59 ) }
    dend_31 { pt3dadd( -24.5566, -98.3797, -3.42831, 0.59 ) }
    dend_31 { pt3dadd( -25.3908, -98.5009, -3.27864, 0.59 ) }
    dend_31 { pt3dadd( -26.2567, -98.6237, -3.09422, 0.81 ) }
    dend_31 { pt3dadd( -27.0694, -98.7431, -2.90077, 0.81 ) }
    dend_31 { pt3dadd( -27.6827, -98.8355, -2.71179, 0.81 ) }
    dend_31 { pt3dadd( -28.3951, -98.9756, -2.46803, 0.81 ) }
    dend_31 { pt3dadd( -29.2128, -99.4096, -2.31776, 0.22 ) }
    dend_31 { pt3dadd( -29.8261, -100.323, -2.46503, 0.22 ) }
    dend_31 { pt3dadd( -30.2489, -101.049, -2.64987, 0.66 ) }
    dend_31 { pt3dadd( -30.4894, -101.481, -2.78266, 0.88 ) }
    dend_31 { pt3dadd( -30.8499, -102.106, -3.00234, 0.88 ) }
    dend_31 { pt3dadd( -31.4111, -102.836, -3.35992, 0.44 ) }
    dend_31 { pt3dadd( -32.242, -103.562, -3.80148, 1.4 ) }
    dend_31 { pt3dadd( -33.0149, -103.959, -4.13799, 2.14 ) }
    dend_31 { pt3dadd( -33.3646, -104.061, -4.27966, 2.58 ) }
    dend_31 { pt3dadd( -34.0967, -104.148, -4.54473, 2.36 ) }
    dend_31 { pt3dadd( -36.0932, -104.188, -5.24281, 1.69 ) }
    dend_31 { pt3dadd( -37.1375, -104.143, -5.5825, 0.37 ) }
    dend_31 { pt3dadd( -38.3736, -104.038, -5.90358, 0.37 ) }
    dend_31 { pt3dadd( -39.3566, -103.945, -6.10505, 0.37 ) }
    dend_31 { pt3dadd( -41.2874, -103.823, -6.40685, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -42.0668, -103.814, -6.50023, 2.14 ) }
    dend_31 { pt3dadd( -42.8273, -103.871, -6.56268, 2.5 ) }
    dend_31 { pt3dadd( -45.0752, -104.26, -6.79613, 0.44 ) }
    dend_31 { pt3dadd( -45.7759, -104.443, -6.88249, 0.44 ) }
    dend_31 { pt3dadd( -46.8673, -104.747, -7.05706, 0.44 ) }
    dend_31 { pt3dadd( -47.8841, -104.992, -7.26007, 0.44 ) }
    dend_31 { pt3dadd( -48.9457, -105.178, -7.49205, 1.4 ) }
    dend_31 { pt3dadd( -50.1207, -105.336, -7.7728, 2.06 ) }
    dend_31 { pt3dadd( -51.1987, -105.463, -8.07901, 2.06 ) }
    dend_31 { pt3dadd( -52.5416, -105.548, -8.49399, 0.66 ) }
    dend_31 { pt3dadd( -53.627, -105.582, -8.88248, 0.81 ) }
    dend_31 { pt3dadd( -54.8281, -105.611, -9.37635, 0.52 ) }
    dend_31 { pt3dadd( -55.8626, -105.68, -9.91385, 1.77 ) }
    dend_31 { pt3dadd( -56.6024, -105.789, -10.3996, 2.28 ) }
    dend_31 { pt3dadd( -58.85, -106.384, -12.2485, 1.33 ) }
    dend_31 { pt3dadd( -59.637, -106.724, -13.0505, 1.77 ) }
    dend_31 { pt3dadd( -60.1018, -106.966, -13.5936, 1.77 ) }
    dend_31 { pt3dadd( -60.9597, -107.454, -14.6683, 0.74 ) }
    dend_31 { pt3dadd( -61.6274, -107.852, -15.5331, 0.52 ) }
    dend_31 { pt3dadd( -62.6101, -108.491, -16.7758, 0.52 ) }
    dend_31 { pt3dadd( -63.6038, -109.262, -18.0303, 0.88 ) }
    dend_31 { pt3dadd( -64.5859, -110.012, -19.1255, 1.47 ) }
    dend_31 { pt3dadd( -65.57, -110.764, -20.1073, 0.22 ) }
    dend_31 { pt3dadd( -66.0674, -111.158, -20.5613, 0.22 ) }
    dend_31 { pt3dadd( -66.6853, -111.699, -21.0897, 0.81 ) }
    dend_31 { pt3dadd( -67.2588, -112.29, -21.5596, 0.96 ) }
    dend_31 { pt3dadd( -67.9452, -113.083, -22.094, 1.55 ) }
    dend_31 { pt3dadd( -68.546, -113.877, -22.5385, 1.55 ) }
    dend_31 { pt3dadd( -69.1829, -114.743, -22.9931, 0.37 ) }
    dend_31 { pt3dadd( -69.6448, -115.359, -23.3227, 0.74 ) }
    dend_31 { pt3dadd( -70.2544, -116.118, -23.7623, 0.81 ) }
    dend_31 { pt3dadd( -71.0637, -117.114, -24.3932, 0.29 ) }
    dend_31 { pt3dadd( -71.429, -117.59, -24.7133, 0.96 ) }
    dend_31 { pt3dadd( -71.9258, -118.285, -25.197, 1.33 ) }
    dend_31 { pt3dadd( -72.5577, -119.255, -25.9085, 0.74 ) }
    dend_31 { pt3dadd( -73.0105, -120.06, -26.5219, 0.59 ) }
    dend_31 { pt3dadd( -73.5812, -121.325, -27.5113, 0.29 ) }
    dend_31 { pt3dadd( -73.8199, -122.14, -28.1391, 0.29 ) }
    dend_31 { pt3dadd( -73.9512, -122.887, -28.7328, 0.29 ) }
    dend_31 { pt3dadd( -73.9678, -123.458, -29.1773, 1.18 ) }
    dend_31 { pt3dadd( -73.9157, -123.99, -29.6031, 1.69 ) }
    dend_31 { pt3dadd( -73.7473, -124.756, -30.231, 1.33 ) }
    dend_31 { pt3dadd( -73.4377, -125.827, -31.144, 0.22 ) }
    dend_31 { pt3dadd( -73.2945, -126.316, -31.5731, 0.22 ) }
    dend_31 { pt3dadd( -73.1352, -126.951, -32.1148, 0.96 ) }
    dend_31 { pt3dadd( -73.0514, -127.404, -32.4783, 1.11 ) }
    dend_31 { pt3dadd( -72.9286, -128.277, -33.1381, 0.52 ) }
    dend_31 { pt3dadd( -72.7804, -129.694, -34.1415, 0.22 ) }
    dend_31 { pt3dadd( -72.7291, -130.369, -34.599, 0.22 ) }
    dend_31 { pt3dadd( -72.698, -131.112, -35.0856, 0.88 ) }
    dend_31 { pt3dadd( -72.7043, -131.654, -35.452, 1.03 ) }
    dend_31 { pt3dadd( -72.7564, -132.591, -36.1112, 0.22 ) }
    dend_31 { pt3dadd( -72.7875, -133.022, -36.4275, 0.22 ) }
    dend_31 { pt3dadd( -72.828, -133.65, -36.9089, 0.66 ) }
    dend_31 { pt3dadd( -72.8563, -134.346, -37.451, 0.74 ) }
    dend_31 { pt3dadd( -72.8728, -135.963, -38.6919, 0.22 ) }
    dend_31 { pt3dadd( -72.8534, -137.145, -39.5225, 0.22 ) }
    dend_31 { pt3dadd( -72.8449, -138.662, -40.4483, 0.96 ) }
    dend_31 { pt3dadd( -72.8481, -139.241, -40.7567, 1.25 ) }
    dend_31 { pt3dadd( -72.8766, -140.025, -41.0872, 1.25 ) }
    dend_31 { pt3dadd( -72.9378, -141.201, -41.4552, 0.66 ) }
    dend_31 { pt3dadd( -73.0684, -142.664, -41.7686, 0.15 ) }
    dend_31 { pt3dadd( -73.2852, -143.93, -41.9394, 0.37 ) }
    dend_31 { pt3dadd( -73.4402, -144.523, -41.9971, 0.37 ) }
    dend_31 { pt3dadd( -74.1542, -146.696, -42.1768, 0.22 ) }
    dend_31 { pt3dadd( -74.292, -147.033, -42.2062, 0.74 ) }
    dend_31 { pt3dadd( -74.6317, -147.752, -42.2829, 0.88 ) }
    dend_31 { pt3dadd( -75.8114, -150.034, -42.5538, 0.22 ) }
    dend_31 { pt3dadd( -76.2665, -150.892, -42.6536, 0.74 ) }
    dend_31 { pt3dadd( -76.7149, -151.726, -42.74, 0.74 ) }
    dend_31 { pt3dadd( -77.7023, -153.538, -42.9354, 0.22 ) }
    dend_31 { pt3dadd( -78.5163, -155.059, -43.0869, 0.22 ) }
    dend_31 { pt3dadd( -79.3888, -156.811, -43.2023, 0.22 ) }
    dend_31 { pt3dadd( -80.1329, -158.469, -43.2514, 0.22 ) }
    dend_31 { pt3dadd( -80.4971, -159.374, -43.243, 0.88 ) }
    dend_31 { pt3dadd( -80.7503, -160.091, -43.2135, 1.11 ) }
    dend_31 { pt3dadd( -80.9504, -160.82, -43.1617, 1.11 ) }
    dend_31 { pt3dadd( -81.3259, -162.599, -43.0099, 0.15 ) }
    dend_31 { pt3dadd( -81.5528, -164.039, -42.8985, 0.15 ) }
    dend_31 { pt3dadd( -81.6523, -164.837, -42.8412, 0.81 ) }
    dend_31 { pt3dadd( -81.7258, -165.533, -42.7955, 0.96 ) }
    dend_31 { pt3dadd( -82.1088, -168.124, -42.8867, 0.22 ) }
    dend_31 { pt3dadd( -82.2881, -169.34, -42.9653, 0.22 ) }
    dend_31 { pt3dadd( -82.5113, -170.679, -43.1293, 0.22 ) }
    dend_31 { pt3dadd( -82.6092, -171.214, -43.2198, 1.18 ) }
    dend_31 { pt3dadd( -82.7166, -171.724, -43.3349, 1.18 ) }
    dend_31 { pt3dadd( -83.7892, -175.466, -44.6107, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 12.3503, 149.946, -35.3872, 0.37 ) }
    dend_26 { pt3dadd( 12.7712, 149.235, -34.8317, 0.37 ) }
    dend_26 { pt3dadd( 13.1182, 148.701, -34.4284, 0.52 ) }
    dend_26 { pt3dadd( 13.6122, 147.979, -33.8827, 0.74 ) }
    dend_26 { pt3dadd( 14.0149, 147.406, -33.4627, 1.11 ) }
    dend_26 { pt3dadd( 14.251, 147.084, -33.2218, 1.11 ) }
    dend_26 { pt3dadd( 14.5934, 146.618, -32.8689, 0.81 ) }
    dend_26 { pt3dadd( 15.372, 145.619, -32.0194, 0.22 ) }
    dend_26 { pt3dadd( 15.7453, 145.131, -31.6086, 0.22 ) }
    dend_26 { pt3dadd( 15.9798, 144.799, -31.3609, 0.66 ) }
    dend_26 { pt3dadd( 16.2174, 144.425, -31.1067, 0.66 ) }
    dend_26 { pt3dadd( 16.4461, 144.034, -30.8582, 0.66 ) }
    dend_26 { pt3dadd( 16.865, 143.249, -30.3649, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( 17.2397, 142.468, -29.8825, 0.22 ) }
    dend_26 { pt3dadd( 17.6235, 141.596, -29.3726, 0.22 ) }
    dend_26 { pt3dadd( 17.7963, 141.171, -29.1358, 0.44 ) }
    dend_26 { pt3dadd( 17.9067, 140.874, -28.9947, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 12.3503, 149.946, -35.3872, 0.22 ) }
    dend_25 { pt3dadd( 13.8801, 150.148, -34.916, 0.22 ) }
    dend_25 { pt3dadd( 14.2337, 150.217, -34.8254, 0.44 ) }
    dend_25 { pt3dadd( 15.8562, 150.63, -34.4363, 0.22 ) }
    dend_25 { pt3dadd( 16.559, 150.829, -34.2927, 0.59 ) }
    dend_25 { pt3dadd( 17.1051, 150.988, -34.2091, 0.59 ) }
    dend_25 { pt3dadd( 19.4474, 151.667, -33.8503, 0.22 ) }
    dend_25 { pt3dadd( 22.1699, 152.488, -33.5047, 0.22 ) }
    dend_25 { pt3dadd( 23.1492, 152.807, -33.405, 0.66 ) }
    dend_25 { pt3dadd( 23.9229, 153.088, -33.3605, 0.81 ) }
    dend_25 { pt3dadd( 25.1011, 153.535, -33.3279, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 12.1739, 227.228, 33.8255, 0.59 ) }
    dend_19 { pt3dadd( 13.3361, 228.271, 34.7837, 0.59 ) }
    dend_19 { pt3dadd( 13.7014, 228.624, 35.1053, 0.44 ) }
    dend_19 { pt3dadd( 14.4798, 229.405, 35.7611, 0.22 ) }
    dend_19 { pt3dadd( 15.1473, 230.134, 36.3287, 0.81 ) }
    dend_19 { pt3dadd( 15.5109, 230.537, 36.6205, 0.96 ) }
    dend_19 { pt3dadd( 15.6832, 230.728, 36.7515, 0.96 ) }
    dend_19 { pt3dadd( 16.2314, 231.406, 37.1487, 0.22 ) }
    dend_19 { pt3dadd( 17.0887, 232.512, 37.646, 0.22 ) }
    dend_19 { pt3dadd( 17.8575, 233.557, 37.9957, 1.11 ) }
    dend_19 { pt3dadd( 18.2605, 234.145, 38.1498, 1.47 ) }
    dend_19 { pt3dadd( 18.4541, 234.437, 38.1977, 1.47 ) }
    dend_19 { pt3dadd( 19.2397, 235.726, 38.3011, 0.22 ) }
    dend_19 { pt3dadd( 19.9074, 236.916, 38.2965, 0.22 ) }
    dend_19 { pt3dadd( 20.2708, 237.623, 38.2514, 0.66 ) }
    dend_19 { pt3dadd( 20.4488, 237.975, 38.2126, 0.66 ) }
    dend_19 { pt3dadd( 21.231, 239.663, 37.9608, 0.22 ) }
    dend_19 { pt3dadd( 21.8932, 241.208, 37.6821, 0.22 ) }
    dend_19 { pt3dadd( 22.2499, 242.092, 37.4871, 0.22 ) }
    dend_19 { pt3dadd( 22.644, 243.12, 37.2378, 1.47 ) }
    dend_19 { pt3dadd( 22.8455, 243.709, 37.0817, 1.47 ) }
    dend_19 { pt3dadd( 23.4158, 245.704, 36.5217, 0.22 ) }
    dend_19 { pt3dadd( 23.5672, 246.354, 36.3238, 0.81 ) }
    dend_19 { pt3dadd( 23.6638, 246.902, 36.14, 0.81 ) }
    dend_19 { pt3dadd( 23.8183, 248.246, 35.6596, 0.22 ) }
    dend_19 { pt3dadd( 23.893, 249.314, 35.2512, 0.22 ) }
    dend_19 { pt3dadd( 23.932, 250.427, 34.803, 1.47 ) }
    dend_19 { pt3dadd( 23.9486, 250.889, 34.5977, 1.84 ) }
    dend_19 { pt3dadd( 23.9974, 252.569, 33.8206, 0.22 ) }
    dend_19 { pt3dadd( 24.0143, 253.858, 33.2033, 0.22 ) }
    dend_19 { pt3dadd( 24.0129, 254.306, 32.9704, 0.22 ) }
    dend_19 { pt3dadd( 24.0304, 255.479, 32.316, 1.55 ) }
    dend_19 { pt3dadd( 24.0489, 256.189, 31.887, 2.06 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 48/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 12.1739, 227.228, 33.8255, 0.22 ) }
    dend_18 { pt3dadd( 12.8773, 229.283, 34.1748, 0.22 ) }
    dend_18 { pt3dadd( 13.2701, 230.397, 34.3862, 0.22 ) }
    dend_18 { pt3dadd( 13.5776, 231.258, 34.5603, 0.96 ) }
    dend_18 { pt3dadd( 13.7105, 231.633, 34.6398, 1.18 ) }
    dend_18 { pt3dadd( 13.8469, 232.019, 34.7256, 1.18 ) }
    dend_18 { pt3dadd( 14.0646, 232.651, 34.8694, 0.22 ) }
    dend_18 { pt3dadd( 14.2198, 233.099, 34.9882, 0.44 ) }
    dend_18 { pt3dadd( 14.2948, 233.328, 35.044, 0.44 ) }
    dend_18 { pt3dadd( 14.4956, 233.991, 35.1943, 0.22 ) }
    dend_18 { pt3dadd( 14.6651, 234.574, 35.3235, 0.44 ) }
    dend_18 { pt3dadd( 14.8497, 235.22, 35.4657, 0.44 ) }
    dend_18 { pt3dadd( 15.3824, 237.197, 35.891, 0.22 ) }
    dend_18 { pt3dadd( 15.8284, 238.866, 36.2323, 0.22 ) }
    dend_18 { pt3dadd( 16.0, 239.493, 36.3539, 0.66 ) }
    dend_18 { pt3dadd( 16.0966, 239.838, 36.4168, 0.74 ) }
    dend_18 { pt3dadd( 16.2615, 240.388, 36.5043, 0.22 ) }
    dend_18 { pt3dadd( 16.6912, 241.734, 36.6979, 0.22 ) }
    dend_18 { pt3dadd( 16.9493, 242.527, 36.8011, 1.03 ) }
    dend_18 { pt3dadd( 17.1238, 243.053, 36.8639, 1.25 ) }
    dend_18 { pt3dadd( 17.2566, 243.451, 36.9084, 1.25 ) }
    dend_18 { pt3dadd( 17.7069, 244.792, 37.0501, 0.22 ) }
    dend_18 { pt3dadd( 18.4579, 246.997, 37.2775, 0.22 ) }
    dend_18 { pt3dadd( 18.7143, 247.74, 37.3561, 0.74 ) }
    dend_18 { pt3dadd( 18.8539, 248.167, 37.4092, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 73/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 1.59447, 89.231, 21.7992, 0.37 ) }
    dend_16 { pt3dadd( 3.25833, 96.0975, 26.5878, 0.37 ) }
    dend_16 { pt3dadd( 5.53022, 102.499, 31.7264, 0.37 ) }
    dend_16 { pt3dadd( 6.0616, 108.429, 37.8001, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 1.59447, 89.231, 21.7992, 0.22 ) }
    dend_15 { pt3dadd( 5.85634, 99.2387, 21.8841, 0.37 ) }
    dend_15 { pt3dadd( 10.7585, 108.842, 20.6426, 0.37 ) }
    dend_15 { pt3dadd( 16.0909, 118.111, 18.8803, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 81/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 97.8851, -5.22064, 9.55804, 0.37 ) }
    dend_10 { pt3dadd( 109.152, -7.60067, 9.45891, 0.37 ) }
    dend_10 { pt3dadd( 120.637, -8.1313, 9.68801, 0.37 ) }
    dend_10 { pt3dadd( 132.018, -7.62768, 11.2399, 0.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 97.8851, -5.22064, 9.55804, 0.22 ) }
    dend_9 { pt3dadd( 103.884, -6.64479, 9.66573, 0.37 ) }
    dend_9 { pt3dadd( 110.034, -6.93288, 9.56044, 0.37 ) }
    dend_9 { pt3dadd( 116.152, -7.60563, 9.77835, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 89/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 46.4278, 11.2217, 3.11653, 0.52 ) }
    dend_5 { pt3dadd( 47.9807, 11.3949, 3.47863, 0.52 ) }
    dend_5 { pt3dadd( 48.5863, 11.4335, 3.60965, 0.52 ) }
    dend_5 { pt3dadd( 49.2216, 11.4337, 3.77181, 0.52 ) }
    dend_5 { pt3dadd( 50.4451, 11.3995, 4.10578, 0.52 ) }
    dend_5 { pt3dadd( 51.1792, 11.3545, 4.30966, 0.88 ) }
    dend_5 { pt3dadd( 52.3024, 11.2711, 4.60292, 0.88 ) }
    dend_5 { pt3dadd( 53.1335, 11.2119, 4.80852, 0.88 ) }
    dend_5 { pt3dadd( 54.0229, 11.0526, 4.98119, 0.81 ) }
    dend_5 { pt3dadd( 54.5929, 10.8576, 5.00491, 0.81 ) }
    dend_5 { pt3dadd( 55.4475, 10.4053, 4.90503, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_5 { pt3dadd( 56.1249, 9.93976, 4.70792, 0.59 ) }
    dend_5 { pt3dadd( 56.8422, 9.38068, 4.37445, 0.59 ) }
    dend_5 { pt3dadd( 57.5426, 8.81958, 3.95078, 0.74 ) }
    dend_5 { pt3dadd( 58.6248, 7.88685, 3.16175, 0.66 ) }
    dend_5 { pt3dadd( 59.0665, 7.47025, 2.80261, 0.66 ) }
    dend_5 { pt3dadd( 59.7324, 6.78277, 2.21254, 0.52 ) }
    dend_5 { pt3dadd( 60.1828, 6.31015, 1.8002, 0.52 ) }
    dend_5 { pt3dadd( 60.7618, 5.73349, 1.27361, 0.81 ) }
    dend_5 { pt3dadd( 61.4801, 5.02311, 0.608769, 0.81 ) }
    dend_5 { pt3dadd( 61.9565, 4.52115, 0.161655, 0.81 ) }
    dend_5 { pt3dadd( 62.5296, 3.85431, -0.422027, 0.81 ) }
    dend_5 { pt3dadd( 63.2141, 2.95606, -1.17865, 0.88 ) }
    dend_5 { pt3dadd( 63.7588, 2.14825, -1.83317, 1.11 ) }
    dend_5 { pt3dadd( 64.0916, 1.61497, -2.26267, 1.11 ) }
    dend_5 { pt3dadd( 64.7015, 0.529715, -3.11271, 0.88 ) }
    dend_5 { pt3dadd( 65.1178, -0.362279, -3.74885, 0.96 ) }
    dend_5 { pt3dadd( 65.3881, -1.08701, -4.19864, 0.96 ) }
    dend_5 { pt3dadd( 65.5784, -1.71472, -4.53772, 0.96 ) }
    dend_5 { pt3dadd( 65.7375, -2.30112, -4.82626, 0.66 ) }
    dend_5 { pt3dadd( 65.998, -3.25849, -5.2361, 0.66 ) }
    dend_5 { pt3dadd( 66.3919, -4.5477, -5.71339, 0.81 ) }
    dend_5 { pt3dadd( 66.7955, -5.57868, -6.06128, 1.11 ) }
    dend_5 { pt3dadd( 67.3529, -6.74812, -6.42194, 0.96 ) }
    dend_5 { pt3dadd( 67.831, -7.56597, -6.69626, 0.81 ) }
    dend_5 { pt3dadd( 68.5513, -8.57847, -7.07001, 0.81 ) }
    dend_5 { pt3dadd( 69.4417, -9.59201, -7.49969, 0.59 ) }
    dend_5 { pt3dadd( 70.2068, -10.3239, -7.86579, 0.37 ) }
    dend_5 { pt3dadd( 70.9147, -10.9254, -8.21539, 0.37 ) }
    dend_5 { pt3dadd( 71.9622, -11.7656, -8.76853, 0.59 ) }
    dend_5 { pt3dadd( 72.5318, -12.2131, -9.1155, 0.88 ) }
    dend_5 { pt3dadd( 72.8438, -12.4623, -9.34007, 1.11 ) }
    dend_5 { pt3dadd( 73.2422, -12.8129, -9.64899, 1.11 ) }
    dend_5 { pt3dadd( 73.7712, -13.32, -10.0568, 0.74 ) }
    dend_5 { pt3dadd( 74.1968, -13.7047, -10.3712, 0.74 ) }
    dend_5 { pt3dadd( 74.6161, -14.0952, -10.6985, 0.74 ) }
    dend_5 { pt3dadd( 75.2471, -14.6997, -11.2543, 0.74 ) }
    dend_5 { pt3dadd( 75.879, -15.3176, -11.8806, 0.74 ) }
    dend_5 { pt3dadd( 76.4503, -15.8685, -12.4663, 0.66 ) }
    dend_5 { pt3dadd( 76.9892, -16.3717, -13.0323, 0.66 ) }
    dend_5 { pt3dadd( 77.7, -17.0169, -13.8008, 0.96 ) }
    dend_5 { pt3dadd( 78.5296, -17.7796, -14.7606, 1.4 ) }
    dend_5 { pt3dadd( 78.9443, -18.189, -15.3041, 1.62 ) }
    dend_5 { pt3dadd( 79.3625, -18.6327, -15.9211, 1.77 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 46.4278, 11.2217, 3.11653, 0.88 ) }
    dend_4 { pt3dadd( 47.3573, 12.1476, 3.56193, 0.88 ) }
    dend_4 { pt3dadd( 48.2058, 12.8797, 3.95764, 0.88 ) }
    dend_4 { pt3dadd( 49.1765, 13.5736, 4.36837, 0.88 ) }
    dend_4 { pt3dadd( 50.2421, 14.2119, 4.76644, 0.88 ) }
    dend_4 { pt3dadd( 51.517, 14.8648, 5.21118, 0.74 ) }
    dend_4 { pt3dadd( 52.3283, 15.2481, 5.49314, 0.74 ) }
    dend_4 { pt3dadd( 53.4879, 15.697, 5.89361, 0.88 ) }
    dend_4 { pt3dadd( 54.5371, 16.0314, 6.2335, 0.88 ) }
    dend_4 { pt3dadd( 55.4081, 16.275, 6.48942, 0.88 ) }
    dend_4 { pt3dadd( 56.2544, 16.5043, 6.72421, 0.66 ) }
    dend_4 { pt3dadd( 56.8455, 16.6955, 6.88592, 0.66 ) }
    dend_4 { pt3dadd( 57.628, 17.0662, 7.09502, 0.88 ) }
    dend_4 { pt3dadd( 58.0894, 17.3645, 7.2224, 0.88 ) }
    dend_4 { pt3dadd( 58.5261, 17.7029, 7.3459, 0.88 ) }
    dend_4 { pt3dadd( 58.968, 18.0633, 7.46808, 0.88 ) }
    dend_4 { pt3dadd( 59.7924, 18.7192, 7.69075, 0.59 ) }
    dend_4 { pt3dadd( 60.3824, 19.1506, 7.87775, 0.59 ) }
    dend_4 { pt3dadd( 60.8356, 19.4822, 8.05906, 0.81 ) }
    dend_4 { pt3dadd( 61.4289, 19.9468, 8.34791, 0.81 ) }
    dend_4 { pt3dadd( 61.8803, 20.3421, 8.60838, 0.81 ) }
    dend_4 { pt3dadd( 62.3881, 20.82, 8.93078, 0.66 ) }
    dend_4 { pt3dadd( 63.1156, 21.5243, 9.41577, 0.59 ) }
    dend_4 { pt3dadd( 63.8764, 22.4076, 9.98765, 0.59 ) }
    dend_4 { pt3dadd( 64.2792, 22.9639, 10.3115, 0.59 ) }
    dend_4 { pt3dadd( 64.7302, 23.6785, 10.6763, 0.44 ) }
    dend_4 { pt3dadd( 65.0105, 24.1439, 10.8798, 0.44 ) }
    dend_4 { pt3dadd( 65.3114, 24.6458, 11.066, 0.44 ) }
    dend_4 { pt3dadd( 66.0618, 25.8737, 11.4654, 0.44 ) }
    dend_4 { pt3dadd( 66.6599, 26.8011, 11.7557, 0.66 ) }
    dend_4 { pt3dadd( 67.1609, 27.5601, 11.9884, 0.66 ) }
    dend_4 { pt3dadd( 67.7806, 28.4915, 12.2661, 0.74 ) }
    dend_4 { pt3dadd( 68.2641, 29.2194, 12.4786, 0.96 ) }
    dend_4 { pt3dadd( 68.6374, 29.7633, 12.6343, 0.96 ) }
    dend_4 { pt3dadd( 69.1952, 30.4909, 12.8354, 0.66 ) }
    dend_4 { pt3dadd( 69.7447, 31.1723, 13.0213, 0.66 ) }
    dend_4 { pt3dadd( 70.6188, 32.2344, 13.3082, 0.59 ) }
    dend_4 { pt3dadd( 71.4273, 33.2349, 13.6037, 0.59 ) }
    dend_4 { pt3dadd( 71.9497, 33.8896, 13.8123, 0.81 ) }
    dend_4 { pt3dadd( 72.3452, 34.3976, 13.9839, 0.81 ) }
    dend_4 { pt3dadd( 73.0247, 35.2308, 14.2747, 0.52 ) }
    dend_4 { pt3dadd( 73.5555, 35.8213, 14.4838, 0.52 ) }
    dend_4 { pt3dadd( 74.2657, 36.5534, 14.755, 0.52 ) }
    dend_4 { pt3dadd( 74.8652, 37.154, 14.9802, 0.52 ) }
    dend_4 { pt3dadd( 75.4406, 37.7188, 15.1884, 0.37 ) }
    dend_4 { pt3dadd( 76.4682, 38.7053, 15.543, 0.37 ) }
    dend_4 { pt3dadd( 77.1449, 39.3461, 15.7627, 0.59 ) }
    dend_4 { pt3dadd( 77.5782, 39.7331, 15.8839, 0.59 ) }
    dend_4 { pt3dadd( 78.4989, 40.5352, 16.1029, 0.74 ) }
    dend_4 { pt3dadd( 78.979, 40.9583, 16.2179, 0.74 ) }
    dend_4 { pt3dadd( 79.3864, 41.3312, 16.3259, 0.74 ) }
    dend_4 { pt3dadd( 79.9632, 41.9209, 16.5181, 0.74 ) }
    dend_4 { pt3dadd( 80.3466, 42.3495, 16.6248, 0.44 ) }
    dend_4 { pt3dadd( 80.8916, 42.9695, 16.6966, 0.44 ) }
    dend_4 { pt3dadd( 81.3605, 43.4792, 16.6985, 0.81 ) }
    dend_4 { pt3dadd( 82.1489, 44.2975, 16.6326, 0.81 ) }
    dend_4 { pt3dadd( 82.7284, 44.8688, 16.5295, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( 83.7405, 45.833, 16.3025, 0.52 ) }
    dend_4 { pt3dadd( 84.508, 46.5899, 16.0849, 0.44 ) }
    dend_4 { pt3dadd( 85.0133, 47.0867, 15.8985, 0.44 ) }
    dend_4 { pt3dadd( 85.4529, 47.5254, 15.7043, 0.44 ) }
    dend_4 { pt3dadd( 85.7951, 47.867, 15.5219, 0.44 ) }
    dend_4 { pt3dadd( 86.3702, 48.4057, 15.2208, 0.74 ) }
    dend_4 { pt3dadd( 86.8798, 48.8315, 15.0787, 0.59 ) }
    dend_4 { pt3dadd( 87.2235, 49.147, 15.0229, 0.59 ) }
    dend_4 { pt3dadd( 93.7688, 55.7574, 18.5834, 0.59 ) }
    dend_4 { pt3dadd( 100.542, 62.2219, 21.9607, 0.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -95.8909, -358.508, 26.4564, 0.52 ) }
    dend_39 { pt3dadd( -96.4961, -360.1, 26.5592, 0.52 ) }
    dend_39 { pt3dadd( -96.747, -360.744, 26.6104, 0.29 ) }
    dend_39 { pt3dadd( -97.0965, -361.585, 26.6807, 0.44 ) }
    dend_39 { pt3dadd( -97.4283, -362.367, 26.7438, 0.44 ) }
    dend_39 { pt3dadd( -97.6934, -362.972, 26.7926, 0.29 ) }
    dend_39 { pt3dadd( -98.1027, -363.853, 26.859, 0.29 ) }
    dend_39 { pt3dadd( -98.5276, -364.689, 26.9241, 0.81 ) }
    dend_39 { pt3dadd( -98.8586, -365.33, 26.9513, 1.18 ) }
    dend_39 { pt3dadd( -99.0358, -365.68, 26.9566, 1.4 ) }
    dend_39 { pt3dadd( -99.3174, -366.261, 26.9555, 1.4 ) }
    dend_39 { pt3dadd( -99.5669, -366.82, 26.9451, 1.11 ) }
    dend_39 { pt3dadd( -100.064, -368.03, 26.9136, 0.52 ) }
    dend_39 { pt3dadd( -100.397, -368.981, 26.8828, 0.44 ) }
    dend_39 { pt3dadd( -100.628, -369.745, 26.8556, 0.74 ) }
    dend_39 { pt3dadd( -100.889, -370.666, 26.8277, 0.81 ) }
    dend_39 { pt3dadd( -101.074, -371.361, 26.8059, 0.81 ) }
    dend_39 { pt3dadd( -101.253, -372.097, 26.7773, 0.74 ) }
    dend_39 { pt3dadd( -101.458, -373.074, 26.7708, 0.22 ) }
    dend_39 { pt3dadd( -101.545, -373.526, 26.7721, 0.22 ) }
    dend_39 { pt3dadd( -101.683, -374.321, 26.7652, 0.22 ) }
    dend_39 { pt3dadd( -101.772, -375.01, 26.7678, 0.66 ) }
    dend_39 { pt3dadd( -101.835, -375.732, 26.7895, 0.81 ) }
    dend_39 { pt3dadd( -101.892, -376.893, 26.8507, 0.66 ) }
    dend_39 { pt3dadd( -101.893, -377.952, 26.9335, 0.22 ) }
    dend_39 { pt3dadd( -101.841, -378.899, 27.0233, 0.22 ) }
    dend_39 { pt3dadd( -101.761, -379.59, 27.0984, 0.22 ) }
    dend_39 { pt3dadd( -101.661, -380.261, 27.1992, 0.96 ) }
    dend_39 { pt3dadd( -101.612, -380.606, 27.2603, 1.18 ) }
    dend_39 { pt3dadd( -101.544, -381.118, 27.3521, 1.18 ) }
    dend_39 { pt3dadd( -101.481, -381.541, 27.4515, 1.18 ) }
    dend_39 { pt3dadd( -101.393, -382.345, 27.6396, 0.74 ) }
    dend_39 { pt3dadd( -101.323, -383.562, 27.9099, 0.22 ) }
    dend_39 { pt3dadd( -101.316, -383.963, 27.9978, 0.22 ) }
    dend_39 { pt3dadd( -101.319, -384.43, 28.1019, 0.44 ) }
    dend_39 { pt3dadd( -101.329, -384.834, 28.1845, 0.44 ) }
    dend_39 { pt3dadd( -101.353, -385.89, 28.3733, 0.22 ) }
    dend_39 { pt3dadd( -101.368, -386.554, 28.4684, 0.96 ) }
    dend_39 { pt3dadd( -101.369, -387.061, 28.5159, 1.18 ) }
    dend_39 { pt3dadd( -101.364, -387.547, 28.5525, 1.25 ) }
    dend_39 { pt3dadd( -101.354, -388.471, 28.6118, 0.96 ) }
    dend_39 { pt3dadd( -101.378, -389.798, 28.6949, 0.29 ) }
    dend_39 { pt3dadd( -101.425, -390.842, 28.7565, 0.22 ) }
    dend_39 { pt3dadd( -101.519, -392.019, 28.8179, 0.22 ) }
    dend_39 { pt3dadd( -101.59, -392.625, 28.8507, 0.81 ) }
    dend_39 { pt3dadd( -101.674, -393.117, 28.8796, 0.96 ) }
    dend_39 { pt3dadd( -102.062, -394.828, 29.0053, 0.22 ) }
    dend_39 { pt3dadd( -102.214, -395.363, 29.0532, 0.22 ) }
    dend_39 { pt3dadd( -102.481, -396.213, 29.1437, 0.59 ) }
    dend_39 { pt3dadd( -102.687, -396.836, 29.2201, 0.59 ) }
    dend_39 { pt3dadd( -102.986, -397.771, 29.3355, 0.52 ) }
    dend_39 { pt3dadd( -103.212, -398.54, 29.4307, 0.52 ) }
    dend_39 { pt3dadd( -103.483, -399.586, 29.5714, 0.52 ) }
    dend_39 { pt3dadd( -103.584, -399.998, 29.6306, 0.96 ) }
    dend_39 { pt3dadd( -103.744, -400.703, 29.7341, 0.96 ) }
    dend_39 { pt3dadd( -103.914, -401.497, 29.8522, 0.59 ) }
    dend_39 { pt3dadd( -104.186, -402.84, 30.0891, 0.22 ) }
    dend_39 { pt3dadd( -104.454, -404.227, 30.3378, 0.22 ) }
    dend_39 { pt3dadd( -104.576, -404.877, 30.4585, 0.22 ) }
    dend_39 { pt3dadd( -104.691, -405.454, 30.5729, 0.96 ) }
    dend_39 { pt3dadd( -104.771, -405.848, 30.6569, 1.18 ) }
    dend_39 { pt3dadd( -104.933, -406.632, 30.845, 0.52 ) }
    dend_39 { pt3dadd( -105.576, -416.202, 30.3688, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -95.8909, -358.508, 26.4564, 0.29 ) }
    dend_36 { pt3dadd( -97.4497, -357.939, 27.6033, 0.29 ) }
    dend_36 { pt3dadd( -98.2947, -357.909, 28.1784, 0.37 ) }
    dend_36 { pt3dadd( -98.6843, -358.019, 28.4245, 0.37 ) }
    dend_36 { pt3dadd( -99.5649, -358.441, 29.0031, 0.37 ) }
    dend_36 { pt3dadd( -100.455, -358.904, 29.4589, 0.52 ) }
    dend_36 { pt3dadd( -101.25, -359.324, 29.8088, 0.59 ) }
    dend_36 { pt3dadd( -102.359, -360.024, 30.1931, 0.59 ) }
    dend_36 { pt3dadd( -103.361, -360.683, 30.486, 0.37 ) }
    dend_36 { pt3dadd( -104.3, -361.303, 30.7221, 0.37 ) }
    dend_36 { pt3dadd( -105.993, -362.417, 31.0747, 0.37 ) }
    dend_36 { pt3dadd( -106.778, -362.883, 31.2226, 0.37 ) }
    dend_36 { pt3dadd( -107.508, -363.279, 31.3553, 0.29 ) }
    dend_36 { pt3dadd( -108.089, -363.569, 31.4678, 0.29 ) }
    dend_36 { pt3dadd( -108.738, -363.889, 31.6112, 0.81 ) }
    dend_36 { pt3dadd( -109.251, -364.17, 31.7448, 0.81 ) }
    dend_36 { pt3dadd( -109.919, -364.647, 32.0133, 0.81 ) }
    dend_36 { pt3dadd( -111.027, -365.581, 32.5023, 0.29 ) }
    dend_36 { pt3dadd( -111.545, -366.084, 32.7508, 0.66 ) }
    dend_36 { pt3dadd( -111.921, -366.492, 32.9556, 0.66 ) }
    dend_36 { pt3dadd( -112.262, -366.899, 33.1598, 0.66 ) }
    dend_36 { pt3dadd( -113.471, -368.457, 33.933, 0.29 ) }
    dend_36 { pt3dadd( -114.008, -369.18, 34.2714, 0.44 ) }
    dend_36 { pt3dadd( -114.474, -369.804, 34.562, 0.29 ) }
    dend_36 { pt3dadd( -115.038, -370.522, 34.8951, 0.74 ) }
    dend_36 { pt3dadd( -115.465, -371.008, 35.1115, 0.74 ) }
    dend_36 { pt3dadd( -116.19, -371.705, 35.4264, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_36 { pt3dadd( -117.506, -372.765, 35.9128, 0.29 ) }
    dend_36 { pt3dadd( -118.301, -373.335, 36.1792, 0.52 ) }
    dend_36 { pt3dadd( -118.851, -373.686, 36.33, 0.52 ) }
    dend_36 { pt3dadd( -120.039, -374.363, 36.568, 0.29 ) }
    dend_36 { pt3dadd( -120.933, -374.817, 36.7239, 0.29 ) }
    dend_36 { pt3dadd( -121.481, -375.054, 36.8088, 0.59 ) }
    dend_36 { pt3dadd( -122.139, -375.299, 36.8873, 0.59 ) }
    dend_36 { pt3dadd( -123.337, -375.721, 37.0023, 0.22 ) }
    dend_36 { pt3dadd( -124.006, -375.949, 37.079, 0.29 ) }
    dend_36 { pt3dadd( -125.0, -376.299, 37.2268, 0.29 ) }
    dend_36 { pt3dadd( -125.468, -376.474, 37.2996, 0.29 ) }
    dend_36 { pt3dadd( -126.661, -376.977, 37.4915, 0.37 ) }
    dend_36 { pt3dadd( -127.531, -377.467, 37.7091, 0.37 ) }
    dend_36 { pt3dadd( -128.385, -378.086, 38.0233, 0.52 ) }
    dend_36 { pt3dadd( -129.337, -378.938, 38.4485, 1.55 ) }
    dend_36 { pt3dadd( -129.896, -379.531, 38.7242, 1.92 ) }
    dend_36 { pt3dadd( -130.418, -380.153, 39.0107, 1.92 ) }
    dend_36 { pt3dadd( -131.585, -381.704, 39.7514, 0.29 ) }
    dend_36 { pt3dadd( -132.338, -382.798, 40.2536, 0.29 ) }
    dend_36 { pt3dadd( -132.932, -383.744, 40.6793, 0.29 ) }
    dend_36 { pt3dadd( -133.397, -384.512, 41.0329, 0.74 ) }
    dend_36 { pt3dadd( -133.627, -384.896, 41.21, 0.96 ) }
    dend_36 { pt3dadd( -133.835, -385.223, 41.3623, 1.11 ) }
    dend_36 { pt3dadd( -134.438, -386.189, 41.797, 0.52 ) }
    dend_36 { pt3dadd( -134.8, -386.839, 42.1049, 0.29 ) }
    dend_36 { pt3dadd( -135.314, -387.782, 42.5919, 0.22 ) }
    dend_36 { pt3dadd( -135.663, -388.396, 42.9351, 0.44 ) }
    dend_36 { pt3dadd( -135.963, -388.896, 43.2335, 0.44 ) }
    dend_36 { pt3dadd( -136.786, -390.268, 44.0765, 0.22 ) }
    dend_36 { pt3dadd( -137.281, -391.084, 44.5998, 0.22 ) }
    dend_36 { pt3dadd( -137.76, -391.839, 45.1007, 1.25 ) }
    dend_36 { pt3dadd( -138.195, -392.522, 45.5756, 1.55 ) }
    dend_36 { pt3dadd( -138.406, -392.833, 45.8003, 1.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 79.3625, -18.6327, -15.9211, 0.74 ) }
    dend_7 { pt3dadd( 80.5019, -19.505, -15.5177, 0.74 ) }
    dend_7 { pt3dadd( 80.8316, -19.76, -15.4258, 0.74 ) }
    dend_7 { pt3dadd( 81.3939, -20.2044, -15.3231, 0.59 ) }
    dend_7 { pt3dadd( 82.0515, -20.7377, -15.2785, 0.59 ) }
    dend_7 { pt3dadd( 82.6602, -21.2454, -15.2987, 0.59 ) }
    dend_7 { pt3dadd( 82.9638, -21.5011, -15.3242, 0.59 ) }
    dend_7 { pt3dadd( 83.5587, -22.0197, -15.4479, 0.59 ) }
    dend_7 { pt3dadd( 84.0644, -22.4657, -15.5877, 0.81 ) }
    dend_7 { pt3dadd( 84.7353, -23.0513, -15.7731, 0.81 ) }
    dend_7 { pt3dadd( 85.2893, -23.5154, -15.9171, 0.37 ) }
    dend_7 { pt3dadd( 85.8647, -23.9703, -16.045, 0.37 ) }
    dend_7 { pt3dadd( 86.5379, -24.4998, -16.1835, 0.37 ) }
    dend_7 { pt3dadd( 87.225, -25.0546, -16.305, 0.37 ) }
    dend_7 { pt3dadd( 87.8836, -25.5764, -16.3896, 0.37 ) }
    dend_7 { pt3dadd( 88.875, -26.3475, -16.4669, 0.22 ) }
    dend_7 { pt3dadd( 89.9334, -27.1604, -16.5179, 0.22 ) }
    dend_7 { pt3dadd( 95.5135, -32.4974, -18.0123, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 79.3625, -18.6327, -15.9211, 0.37 ) }
    dend_6 { pt3dadd( 79.3708, -19.3208, -17.0787, 0.37 ) }
    dend_6 { pt3dadd( 79.4343, -19.7828, -17.78, 0.37 ) }
    dend_6 { pt3dadd( 79.5369, -20.2249, -18.4192, 0.37 ) }
    dend_6 { pt3dadd( 79.6935, -20.7221, -19.0318, 0.37 ) }
    dend_6 { pt3dadd( 79.8584, -21.1624, -19.5465, 0.37 ) }
    dend_6 { pt3dadd( 80.0824, -21.6906, -20.133, 0.29 ) }
    dend_6 { pt3dadd( 80.4787, -22.4173, -20.9735, 0.22 ) }
    dend_6 { pt3dadd( 80.9333, -23.1545, -21.9014, 0.22 ) }
    dend_6 { pt3dadd( 81.5401, -24.0272, -23.1048, 0.22 ) }
    dend_6 { pt3dadd( 81.7689, -24.3322, -23.5703, 1.18 ) }
    dend_6 { pt3dadd( 81.9353, -24.5549, -23.9862, 1.4 ) }
    dend_6 { pt3dadd( 82.263, -25.1331, -25.3934, 1.4 ) }
    dend_6 { pt3dadd( 82.3415, -25.5188, -26.6331, 0.44 ) }
    dend_6 { pt3dadd( 82.312, -25.6422, -27.0644, 0.44 ) }
    dend_6 { pt3dadd( 82.2005, -25.8244, -27.7263, 0.29 ) }
    dend_6 { pt3dadd( 81.942, -26.1704, -28.7848, 0.29 ) }
    dend_6 { pt3dadd( 81.5554, -26.64, -30.0887, 0.22 ) }
    dend_6 { pt3dadd( 81.2094, -27.0711, -31.0109, 0.22 ) }
    dend_6 { pt3dadd( 80.9577, -27.3422, -31.5501, 1.03 ) }
    dend_6 { pt3dadd( 80.8224, -27.489, -31.8138, 1.33 ) }
    dend_6 { pt3dadd( 80.6245, -27.7112, -32.1641, 1.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 73/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -138.406, -392.833, 45.8003, 0.29 ) }
    dend_38 { pt3dadd( -139.009, -392.271, 45.9531, 0.29 ) }
    dend_38 { pt3dadd( -139.144, -392.147, 45.9832, 0.52 ) }
    dend_38 { pt3dadd( -139.353, -391.952, 46.0234, 0.59 ) }
    dend_38 { pt3dadd( -140.557, -390.845, 46.1795, 0.22 ) }
    dend_38 { pt3dadd( -140.897, -390.539, 46.212, 0.22 ) }
    dend_38 { pt3dadd( -141.367, -390.126, 46.2454, 0.66 ) }
    dend_38 { pt3dadd( -141.62, -389.903, 46.2457, 0.66 ) }
    dend_38 { pt3dadd( -142.7, -388.997, 46.2143, 0.22 ) }
    dend_38 { pt3dadd( -143.147, -388.641, 46.1904, 0.22 ) }
    dend_38 { pt3dadd( -143.557, -388.344, 46.1656, 0.52 ) }
    dend_38 { pt3dadd( -143.848, -388.148, 46.1488, 0.66 ) }
    dend_38 { pt3dadd( -144.645, -387.653, 46.1072, 0.22 ) }
    dend_38 { pt3dadd( -146.224, -386.694, 46.0294, 0.22 ) }
    dend_38 { pt3dadd( -147.242, -386.107, 45.9857, 0.22 ) }
    dend_38 { pt3dadd( -148.182, -385.568, 45.967, 1.18 ) }
    dend_38 { pt3dadd( -148.446, -385.42, 45.962, 1.4 ) }
    dend_38 { pt3dadd( -148.851, -385.2, 45.9574, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 91/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -138.406, -392.833, 45.8003, 0.22 ) }
    dend_37 { pt3dadd( -139.184, -394.282, 46.184, 0.22 ) }
    dend_37 { pt3dadd( -139.78, -395.475, 46.5517, 0.22 ) }
    dend_37 { pt3dadd( -140.027, -396.012, 46.7202, 0.44 ) }
    dend_37 { pt3dadd( -140.132, -396.247, 46.7946, 0.44 ) }
    dend_37 { pt3dadd( -141.088, -398.505, 47.4908, 0.22 ) }
    dend_37 { pt3dadd( -141.535, -399.562, 47.8167, 0.44 ) }
    dend_37 { pt3dadd( -141.91, -400.45, 48.1017, 0.22 ) }
    dend_37 { pt3dadd( -142.136, -401.05, 48.2953, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_37 { pt3dadd( -142.32, -401.569, 48.467, 0.66 ) }
    dend_37 { pt3dadd( -142.45, -401.969, 48.6021, 0.44 ) }
    dend_37 { pt3dadd( -144.678, -411.223, 51.6782, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_49 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_44 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_48 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_45 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_34 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_17 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_47 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_40 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_32 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_31 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_39 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_36 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_11 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_13 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_6 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_7 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_10 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_26 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_25 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_46 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 5
    dend_42 nseg = 3
    dend_27 nseg = 3
    dend_20 nseg = 3
    dend_50 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 3
    dend_33 nseg = 5
    dend_22 nseg = 5
    dend_21 nseg = 3
    dend_12 nseg = 7
    dend_1 nseg = 3
    dend_48 nseg = 3
    dend_45 nseg = 5
    dend_41 nseg = 7
    dend_34 nseg = 3
    dend_29 nseg = 5
    dend_17 nseg = 9
    dend_14 nseg = 3
    dend_8 nseg = 3
    dend_47 nseg = 9
    dend_40 nseg = 5
    dend_35 nseg = 11
    dend_32 nseg = 11
    dend_31 nseg = 7
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_39 nseg = 3
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_ChC_b51988187a_0_0


