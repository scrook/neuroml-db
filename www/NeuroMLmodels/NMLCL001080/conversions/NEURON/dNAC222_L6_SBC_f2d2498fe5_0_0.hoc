// Cell: dNAC222_L6_SBC_f2d2498fe5_0_0
/*
{
  "id" : "dNAC222_L6_SBC_f2d2498fe5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.488402, 10.6886, -0.10439, 2.1741", "0.446743, 9.60874, -0.0969525, 3.70718", "0.405084, 8.52883, -0.0895152, 5.34259", "0.363425, 7.44892, -0.0820778, 6.31081", "0.321766, 6.36901, -0.0746405, 7.2239", "0.280106, 5.2891, -0.0672032, 7.79497", "0.238447, 4.20919, -0.0597659, 8.16787", "0.196788, 3.12928, -0.0523285, 8.65603", "0.155129, 2.04937, -0.0448912, 9.27596", "0.11347, 0.969459, -0.0374539, 9.68183", "0.0718107, -0.110451, -0.0300165, 9.60108", "0.0301515, -1.19036, -0.0225792, 9.40911", "-0.0115077, -2.27027, -0.0151419, 8.85229", "-0.0531668, -3.35018, -0.00770454, 8.34531", "-0.094826, -4.43009, -2.67214E-4, 7.89073", "-0.136485, -5.51, 0.00717012, 7.34681", "-0.178144, -6.58991, 0.0146074, 6.74183", "-0.219803, -7.66982, 0.0220448, 6.06339", "-0.261463, -8.74973, 0.0294821, 5.33412", "-0.303122, -9.82964, 0.0369194, 3.6506", "-0.344781, -10.9096, 0.0443568, 2.18196" ]
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "1.87458, 3.07242, 11.4844, 0.81", "1.43568, 3.92707, 11.4844, 0.81", "0.949926, 4.87297, 11.4844, 0.81", "0.232837, 6.26933, 11.4844, 0.81", "-0.328807, 7.363, 11.4844, 0.81", "-1.00592, 8.68152, 11.4844, 1.4", "-1.17912, 9.01879, 11.4844, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-1.37542, -9.69758, 0.224411, 4.05", "-1.37542, -9.69758, 0.224411, 4.05", "-1.77321, -11.0327, 0.232399, 3.61", "-2.32462, -12.9857, 0.189482, 2.87", "-2.791, -14.8016, 0.0522682, 2.36", "-3.19946, -16.5686, -0.0883835, 2.36", "-3.58851, -18.4257, -0.217756, 2.65", "-3.90523, -20.0119, -0.338033, 2.65", "-4.16786, -21.4621, -0.464908, 2.8", "-4.51667, -23.7169, -0.691554, 2.43", "-4.78094, -25.7181, -0.920014, 2.28", "-5.01439, -27.8655, -1.19108, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.565422, 10.3624, -2.89559, 3.17", "-0.565422, 10.3624, -2.89559, 3.17", "-2.22607, 12.0584, -3.01303, 2.8", "-3.84465, 13.6342, -3.12102, 2.8", "-5.3066, 15.0276, -3.21229, 2.8", "-7.17328, 16.8265, -3.3106, 2.8", "-8.59632, 18.2772, -3.37642, 2.58", "-9.59007, 19.3431, -3.41499, 2.58", "-10.4296, 20.3108, -3.43976, 2.36", "-11.1844, 21.3427, -3.45084, 1.92", "-12.1243, 23.1401, -3.4532, 1.92", "-12.6462, 24.9483, -3.43843, 1.92", "-12.8372, 26.5512, -3.42844, 1.92", "-12.8078, 27.9273, -3.42496, 2.21", "-12.5987, 29.3903, -3.50587, 2.21", "-12.3006, 30.6068, -3.63681, 1.84", "-11.7272, 32.3708, -3.91079, 1.84", "-11.3211, 33.5077, -4.12257, 1.84", "-10.8573, 34.7828, -4.41839, 1.84", "-10.0161, 37.2525, -5.10264, 1.69", "-9.71988, 38.2671, -5.42169, 1.69", "-9.34931, 39.7909, -6.02368, 1.69", "-9.09708, 41.1993, -6.6871, 1.84", "-8.94302, 42.4007, -7.31138, 1.99", "-8.86642, 43.5701, -7.94978, 1.99", "-8.81935, 44.8898, -8.67871, 1.99", "-8.80042, 46.8532, -9.88817, 2.14", "-8.81939, 47.8888, -10.6139, 2.14", "-8.86203, 48.8134, -11.3267, 2.14", "-8.92703, 49.734, -12.0372, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.344781, -10.9096, 0.0443568, 0.553183", "-0.922998, -25.8985, 0.0443568, 0.553183", "-1.50121, -40.8873, 0.0443568, 0.553183" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-1.17912, 9.01879, 11.4844, 0.81", "-3.33449, 10.5567, 10.5426, 0.81", "-4.37781, 11.3329, 10.1503, 0.81", "-5.18407, 11.9261, 9.90444, 1.03", "-5.93916, 12.4643, 9.72188, 1.03", "-6.88919, 13.113, 9.54448, 0.59", "-7.84461, 13.7366, 9.41806, 0.37", "-8.70753, 14.3021, 9.44816, 0.37", "-9.49284, 14.7839, 9.49352, 0.59", "-10.1403, 15.1728, 9.52871, 0.59", "-10.7524, 15.5179, 9.56358, 0.66", "-11.6204, 15.9759, 9.56038, 0.59", "-12.5147, 16.4008, 9.4631, 0.44", "-13.6762, 16.9257, 9.15301, 0.44", "-14.2442, 17.191, 8.93828, 0.96", "-15.0273, 17.5765, 8.5983, 1.33", "-15.7226, 17.9491, 8.27124, 1.55", "-16.9033, 18.6439, 7.68679, 1.03", "-18.4989, 19.7252, 6.91494, 0.52", "-18.8854, 20.0459, 6.73417, 0.88", "-19.5842, 20.7454, 6.41625, 0.52", "-20.1, 21.396, 6.19369, 0.52", "-20.4823, 21.9868, 6.04768, 0.52", "-21.0932, 23.0649, 5.83416, 0.88", "-21.7171, 24.1904, 5.62565, 0.74", "-22.1165, 24.8266, 5.49927, 0.59", "-23.082, 26.1032, 5.22566, 0.59", "-23.8019, 26.8381, 5.0759, 1.25", "-24.6993, 27.5126, 4.94682, 1.4", "-25.477, 27.906, 4.89937, 1.18", "-26.372, 28.2311, 4.91422, 0.88", "-27.4774, 28.5514, 4.97727, 0.66", "-28.28, 28.7398, 5.05926, 0.66", "-28.8742, 28.8914, 5.14095, 0.66", "-29.7775, 29.2345, 5.31181, 0.59", "-30.4081, 29.6421, 5.45368, 0.59", "-30.9706, 30.2563, 5.6103, 0.74", "-31.1786, 30.5763, 5.68853, 0.88", "-31.4285, 31.0256, 5.81276, 0.88", "-31.7287, 31.5946, 5.99576, 1.03", "-32.107, 32.2557, 6.24909, 0.66", "-32.7387, 33.2365, 6.69362, 0.44", "-33.2531, 33.9908, 7.06954, 0.44", "-33.7588, 34.7067, 7.35712, 0.59", "-34.0365, 35.0988, 7.45912, 0.96", "-34.632, 36.0186, 7.5562, 1.18", "-34.9039, 36.5284, 7.52803, 1.18", "-35.2661, 37.3937, 7.36274, 0.74", "-35.8374, 39.1643, 6.93426, 0.37", "-36.0941, 40.0613, 6.70411, 0.29", "-36.3491, 40.9898, 6.47819, 0.29", "-36.6185, 41.9635, 6.25653, 0.37", "-36.8594, 42.6782, 6.13268, 0.37", "-37.3152, 43.7096, 6.06968, 0.29", "-37.7172, 44.4146, 6.15983, 0.37", "-38.0822, 44.9358, 6.28554, 0.74", "-38.3622, 45.2781, 6.3924, 0.74", "-38.7609, 45.725, 6.5263, 0.44", "-39.3677, 46.4616, 6.68361, 0.66", "-39.9307, 47.1985, 6.74057, 1.25", "-40.2627, 47.6533, 6.74299, 1.47", "-40.6388, 48.1572, 6.7259, 1.47", "-41.3298, 49.041, 6.67159, 1.11", "-42.2528, 50.1795, 6.57127, 0.29", "-42.9394, 50.9967, 6.4861, 0.66", "-43.3369, 51.4475, 6.42913, 0.52", "-44.0115, 52.1507, 6.31168, 0.52", "-44.8722, 52.9703, 6.17776, 0.66", "-45.9003, 53.8922, 6.06108, 0.88", "-46.4255, 54.3237, 6.01846, 1.47", "-47.0814, 54.8732, 5.98859, 1.47", "-47.8387, 55.5254, 5.96283, 0.74", "-48.5783, 56.129, 5.93875, 0.74", "-49.2553, 56.6246, 5.94136, 0.74", "-50.0222, 57.1218, 5.98105, 0.37", "-50.9294, 57.6837, 6.06753, 0.37", "-51.6548, 58.1308, 6.16011, 0.29", "-52.3303, 58.5644, 6.24509, 0.29", "-53.1599, 59.1144, 6.31024, 0.29", "-53.6467, 59.4607, 6.32626, 0.29", "-54.373, 60.0635, 6.25008, 0.88", "-54.8106, 60.4961, 6.1411, 1.47", "-55.1926, 60.9668, 5.9883, 1.47", "-55.4781, 61.3986, 5.84668, 1.47", "-55.8359, 62.0514, 5.62547, 1.18", "-56.4497, 63.342, 5.20865, 0.37", "-56.7524, 64.059, 5.01246, 0.37", "-57.0609, 64.7735, 4.88698, 0.37", "-57.298, 65.2733, 4.84652, 0.96", "-57.6175, 65.8867, 4.85294, 1.03", "-57.8099, 66.2266, 4.89964, 1.03", "-58.3618, 67.1313, 5.0988, 0.37", "-58.9481, 68.0022, 5.25202, 0.37", "-59.2955, 68.494, 5.31072, 0.29", "-59.7179, 69.0395, 5.26167, 0.29", "-60.3651, 69.8446, 5.07278, 0.29", "-60.8217, 70.4349, 4.85378, 0.29", "-61.4397, 71.2469, 4.47528, 1.18", "-61.7326, 71.6644, 4.26285, 1.47", "-62.9363, 73.503, 3.21867, 0.22", "-63.0619, 73.7026, 3.0931, 0.44", "-63.5214, 74.489, 2.56915, 0.66", "-63.8994, 75.2017, 2.11604, 0.22", "-64.2427, 75.9015, 1.69521, 0.22", "-64.8387, 77.1482, 0.973306, 0.88", "-65.1415, 77.8127, 0.620601, 0.88", "-65.4522, 78.4373, 0.272229, 0.88", "-66.0412, 79.4854, -0.366202, 0.37", "-66.51, 80.1999, -0.858613, 0.37", "-66.7493, 80.4905, -1.07526, 0.88", "-67.1182, 80.8671, -1.3492, 0.88", "-67.7525, 81.4215, -1.79266, 0.52", "-68.3508, 81.8705, -2.19325, 0.29", "-69.0459, 82.3476, -2.65392, 0.29", "-69.8392, 82.8886, -3.15416, 1.11", "-70.328, 83.2639, -3.49412, 1.33", "-70.8786, 83.7198, -3.91344, 1.55", "-71.4029, 84.1771, -4.34057, 1.55", "-72.1525, 84.8519, -4.98512, 0.52", "-72.8578, 85.4859, -5.58846, 0.44", "-74.0309, 86.505, -6.52365, 1.47", "-74.5952, 86.9983, -6.93484, 1.47", "-75.879, 88.1482, -7.76447, 0.44", "-76.5673, 88.7706, -8.18094, 0.44", "-77.4251, 89.5656, -8.6857, 0.44", "-78.2473, 90.353, -9.15654, 0.37", "-79.0136, 91.1054, -9.54236, 0.37", "-80.154, 92.3858, -10.0647, 1.47", "-80.5325, 92.9136, -10.2149, 1.77", "-81.3752, 94.3246, -10.4994, 0.29", "-81.7317, 95.027, -10.5998, 1.03", "-81.9165, 95.4472, -10.6305, 1.03", "-82.5146, 96.9504, -10.6115, 0.66", "-83.1912, 98.8011, -10.4047, 0.29", "-83.5255, 99.7366, -10.2176, 1.03", "-83.6637, 100.124, -10.1039, 1.25", "-84.0515, 101.116, -9.77244, 0.22", "-84.2619, 101.58, -9.61177, 0.44", "-84.7129, 102.415, -9.31471, 0.22", "-85.0907, 103.055, -9.04433, 0.52", "-85.3753, 103.526, -8.83762, 0.52", "-86.0653, 104.727, -8.32226, 0.22", "-86.4162, 105.389, -8.05252, 0.29", "-86.7545, 106.073, -7.78769, 0.29", "-87.4146, 107.455, -7.27869, 1.11", "-87.629, 107.923, -7.13148, 1.33", "-87.998, 108.803, -6.8891, 0.29", "-88.3271, 109.695, -6.67458, 0.29", "-88.447, 110.057, -6.60268, 0.44", "-88.7681, 111.067, -6.45034, 0.22", "-89.1055, 112.101, -6.33849, 0.66", "-89.2212, 112.415, -6.3027, 1.18", "-89.415, 112.855, -6.24851, 1.18", "-89.5722, 113.203, -6.20538, 0.74", "-90.1491, 114.508, -6.05128, 0.22", "-90.3706, 115.021, -5.99783, 0.66", "-90.7847, 115.89, -5.87621, 0.22", "-91.0065, 116.309, -5.80534, 0.52" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-1.17912, 9.01879, 11.4844, 0.44", "-1.27492, 10.1333, 10.6865, 0.44", "-1.35496, 10.7469, 10.2576, 0.44", "-1.45625, 11.4914, 9.75364, 0.96", "-1.50593, 11.982, 9.42746, 0.96", "-1.6273, 13.3424, 8.64102, 0.52", "-1.67745, 13.8446, 8.40806, 0.52", "-1.7492, 14.3049, 8.21817, 0.66", "-1.90127, 14.932, 8.08373, 0.37", "-2.01947, 15.4114, 8.12727, 0.37", "-2.19326, 16.4044, 8.34821, 0.37", "-2.30152, 17.3486, 8.60362, 0.59", "-2.35092, 17.8951, 8.72643, 0.81", "-2.39441, 18.4347, 8.83161, 0.81", "-2.51842, 19.8458, 9.12322, 0.29", "-2.62428, 20.8863, 9.2887, 0.29", "-2.69616, 21.718, 9.37951, 0.29", "-2.72896, 22.4083, 9.42182, 0.29", "-2.74198, 23.0408, 9.45051, 0.88", "-2.76293, 23.8483, 9.46797, 0.88", "-2.86347, 24.4855, 9.50306, 0.52", "-3.06437, 25.1372, 9.66727, 0.37" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.01439, -27.8655, -1.19108, 1.77", "-4.67077, -29.3092, -1.17205, 1.77", "-4.47684, -30.0286, -1.11331, 1.77", "-4.18913, -30.8148, -1.23596, 1.77", "-3.76282, -31.6641, -1.54044, 1.77", "-3.27077, -32.6445, -1.89187, 1.92", "-2.89406, -33.3951, -2.16092, 2.14", "-2.31456, -34.3445, -2.55915, 2.36", "-0.520282, -36.9121, -4.0692, 1.77", "0.183274, -37.7528, -4.80648, 1.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-5.01439, -27.8655, -1.19108, 0.81", "-4.02646, -29.1045, -0.712667, 0.81", "-2.37724, -30.8015, -0.171637, 0.66", "-1.67282, -31.3796, -0.0200847, 0.88", "-0.501679, -32.1995, 0.127266, 0.59", "0.693705, -32.9444, 0.155478, 0.88", "2.00189, -33.6881, 0.0566846, 1.18", "3.06933, -34.1996, -0.244715, 0.81", "4.32469, -34.6732, -0.761788, 0.66", "5.19018, -34.9645, -1.15751, 0.59", "6.38264, -35.3435, -1.742, 0.88", "7.44481, -35.6885, -2.29502, 0.74", "8.55045, -36.1029, -2.90232, 0.59", "9.68952, -36.5856, -3.54704, 0.74", "10.6986, -37.0629, -4.10566, 0.74", "11.3122, -37.3816, -4.42462, 0.88", "11.99, -37.7813, -4.74728, 0.88", "12.8515, -38.3655, -5.14403, 0.66", "13.6961, -39.0724, -5.56406, 0.66", "14.1727, -39.619, -5.85226, 0.52", "14.6597, -40.403, -6.19942, 0.52", "14.9057, -41.0051, -6.38216, 0.96", "15.0382, -41.4361, -6.45902, 1.18", "15.305, -42.3956, -6.55375, 1.03", "15.4753, -42.912, -6.53999, 1.18", "15.7943, -43.6084, -6.439, 1.03", "16.4642, -44.6649, -6.15854, 0.37", "17.1573, -45.516, -5.82769, 0.74", "17.5895, -45.9784, -5.58236, 0.88", "18.5939, -46.983, -4.9366, 0.59", "19.1171, -47.5121, -4.57555, 0.59", "19.7252, -48.1643, -4.13159, 0.88", "20.4422, -49.0202, -3.5858, 0.74", "21.0473, -49.8565, -3.101, 1.25", "21.4223, -50.413, -2.83319, 1.25", "21.8608, -51.0866, -2.60021, 0.81", "22.2939, -51.785, -2.41486, 0.59", "22.7971, -52.603, -2.26381, 0.59", "23.2348, -53.2778, -2.22064, 0.59", "24.0065, -54.3198, -2.23699, 0.44", "24.5463, -54.9349, -2.25659, 0.52", "25.1292, -55.4989, -2.28415, 0.44", "25.8443, -56.1216, -2.32405, 0.44", "26.4179, -56.6141, -2.35583, 0.52", "27.1275, -57.2651, -2.3766, 0.66", "27.7611, -57.8973, -2.40529, 0.66", "28.5665, -58.799, -2.42958, 0.52", "28.9361, -59.2398, -2.40394, 0.81", "29.3664, -59.8237, -2.32125, 0.81", "29.8207, -60.5269, -2.18501, 0.66", "30.4772, -61.6819, -1.94897, 0.52", "31.0537, -62.8108, -1.70413, 0.52", "31.5556, -63.8626, -1.44571, 1.18", "31.8103, -64.3884, -1.30439, 1.4", "32.2508, -65.2337, -1.05456, 1.25", "32.7956, -66.2028, -0.706709, 1.03", "32.9939, -66.5237, -0.558476, 1.03" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.92703, 49.734, -12.0372, 1.33", "-9.84414, 51.2214, -12.2102, 1.33", "-10.7606, 52.8791, -12.3446, 1.33", "-11.6126, 54.542, -12.3633, 1.33", "-12.5178, 56.4749, -12.2557, 1.33", "-13.4366, 58.648, -12.0354, 1.47", "-14.0334, 60.249, -11.8171, 1.69", "-14.4057, 61.6059, -11.5543, 1.77", "-14.725, 63.1652, -11.167, 1.99", "-14.9689, 64.733, -10.7518, 2.14", "-15.2187, 66.6201, -10.2472, 1.84", "-15.5335, 68.8429, -9.69177, 1.84", "-15.8738, 70.7737, -9.29534, 1.84", "-16.1571, 72.0865, -9.11748, 1.92", "-16.5721, 73.7241, -9.00429, 1.92", "-17.0129, 75.2969, -8.94434, 1.92", "-17.5184, 76.8934, -8.92386, 1.62", "-18.2293, 78.8295, -8.9689, 1.62", "-18.9707, 80.629, -9.06707, 1.77", "-19.6527, 82.1968, -9.19806, 2.14" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-8.92703, 49.734, -12.0372, 0.66", "-7.94948, 51.4897, -12.2417, 0.66", "-7.33062, 52.4315, -12.2687, 0.66", "-7.08145, 52.7719, -12.2448, 0.96", "-6.59347, 53.4106, -12.1354, 0.96", "-6.22308, 53.9265, -11.959, 0.74", "-5.95666, 54.3396, -11.7908, 0.66", "-5.52494, 54.9923, -11.4149, 0.66", "-5.15354, 55.5413, -11.0991, 0.66", "-4.78562, 56.0601, -10.8269, 0.66", "-3.7635, 57.3567, -10.2808, 0.88", "-3.02998, 58.1816, -10.0357, 0.29", "-2.39651, 58.7873, -9.96884, 0.29", "-1.48015, 59.4142, -10.1561, 1.18", "-1.03391, 59.6384, -10.3455, 1.62", "0.0960168, 60.0933, -10.9586, 0.81", "0.771545, 60.319, -11.378, 0.81", "1.42839, 60.4943, -11.809, 1.03", "2.43194, 60.7435, -12.5138, 0.44", "3.28184, 60.9583, -13.1452, 0.44", "3.8251, 61.1226, -13.5404, 1.18", "4.24936, 61.2935, -13.8137, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.50121, -40.8873, 0.0443568, 0.15", "-2.07943, -55.8762, 0.0443568, 0.15", "-2.65765, -70.865, 0.0443568, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.183274, -37.7528, -4.80648, 1.03", "0.106563, -39.6435, -8.13574, 1.03", "-0.391492, -41.0906, -10.5707, 0.81", "-0.753003, -41.7199, -11.6307, 0.81", "-1.26678, -42.3421, -12.7759, 0.81", "-1.74681, -42.7945, -13.716, 1.11", "-2.3205, -43.1941, -14.681, 1.11", "-3.27973, -43.465, -15.6653, 1.4", "-3.97828, -43.541, -16.2669, 1.4", "-5.13257, -43.5027, -17.369, 1.11", "-5.71098, -43.3391, -18.0069, 1.33", "-6.68982, -42.747, -19.2549, 1.03", "-7.14691, -42.2256, -20.261, 0.81", "-7.38204, -41.8715, -20.9849, 0.81", "-7.86176, -41.1538, -22.7745, 0.81", "-8.30961, -40.5701, -24.7369, 1.03", "-8.64244, -40.273, -26.2806, 1.33", "-9.71009, -39.9615, -31.4461, 1.03", "-10.1189, -40.1183, -33.1358, 1.03", "-10.7534, -40.6364, -35.0979, 1.33", "-11.36, -41.2655, -36.4616, 1.33", "-11.9404, -41.9265, -37.4609, 1.47", "-13.047, -43.0947, -38.791, 1.11", "-14.0878, -44.0133, -39.5918, 0.88", "-14.8773, -44.5709, -40.1384, 1.55", "-15.7364, -44.9993, -40.7087, 1.84", "-16.6645, -45.2614, -41.3326, 1.99", "-18.2753, -45.3278, -42.4006, 1.18", "-19.3565, -45.0927, -43.0911, 0.88", "-20.4462, -44.5812, -43.7896, 1.25", "-21.2695, -43.9318, -44.3344, 1.47", "-22.1496, -42.9197, -45.1017, 1.18", "-22.8379, -41.8846, -46.4312, 0.96", "-22.9417, -41.6482, -47.111, 1.18", "-22.9938, -41.5189, -47.8368, 1.18", "-23.1231, -41.3629, -49.3784, 0.74", "-23.4646, -41.2399, -52.3944, 0.74", "-24.0118, -41.2497, -57.9286, 1.47", "-24.3106, -41.3658, -61.2523, 1.99", "-24.5725, -41.557, -64.179, 1.47", "-24.7281, -41.7263, -65.8814, 1.62", "-24.96, -42.0733, -68.3419, 1.33" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "0.183274, -37.7528, -4.80648, 0.88", "1.15148, -38.3193, -5.11822, 0.88", "1.88343, -38.836, -5.45327, 1.03", "2.55077, -39.4535, -5.85998, 1.03", "3.07914, -40.1413, -6.31325, 0.88", "3.5404, -40.9673, -6.84183, 0.81", "3.95634, -41.9792, -7.52197, 1.03", "4.02523, -42.5531, -7.94779, 1.33", "3.92016, -43.3809, -8.71298, 0.88", "3.63206, -44.2283, -9.65276, 0.66", "3.44967, -44.6515, -10.2332, 0.96", "3.29882, -45.1189, -11.0589, 0.66", "3.29529, -45.4806, -11.8478, 0.74", "3.67671, -46.1582, -13.6133, 0.88", "3.97193, -46.3724, -14.2273, 1.11", "5.02704, -46.9394, -15.8053, 0.88", "6.24673, -47.597, -17.5004, 0.74", "7.15574, -48.1442, -18.6758, 0.74", "7.86109, -48.6264, -19.5711, 0.74", "8.4844, -49.1235, -20.3598, 0.66", "9.56874, -50.1471, -21.7886, 0.96", "10.2872, -50.9875, -22.756, 1.25", "10.9359, -51.8705, -23.6354, 0.81", "11.6798, -52.9429, -24.6371, 0.74", "12.1693, -53.6033, -25.2042, 0.88", "12.9027, -54.4422, -25.7612, 0.59", "13.8165, -55.2434, -26.049, 0.59", "14.6882, -55.8694, -26.12, 1.18", "15.1156, -56.1324, -26.0534, 1.62", "15.5656, -56.3825, -25.9003, 1.84", "16.7745, -56.9837, -25.3738, 1.18", "17.7192, -57.3945, -25.0045, 0.81", "18.1243, -57.5551, -24.8874, 0.96", "19.2326, -57.9798, -24.7792, 0.59", "19.636, -58.1414, -24.8133, 0.66", "20.3983, -58.4761, -24.99, 0.52", "21.9879, -59.2984, -25.6746, 1.18", "22.5953, -59.6824, -26.0204, 1.25", "23.7087, -60.4403, -26.9028, 0.88", "24.1865, -60.7683, -27.3381, 0.88", "24.8376, -61.2015, -27.9413, 0.66", "26.0763, -61.9216, -29.0979, 1.47", "26.6489, -62.1973, -29.6237, 1.69", "29.3525, -63.2594, -32.0623, 0.81", "29.9492, -63.4539, -32.5751, 0.81", "30.6934, -63.6592, -33.1706, 0.66", "32.4355, -64.0478, -34.4057, 1.03", "33.0218, -64.1514, -34.7352, 1.03", "33.7964, -64.3083, -35.0492, 1.33", "35.0215, -64.6822, -35.2205, 0.88", "35.9088, -65.07, -35.2486, 0.88", "36.5835, -65.4768, -35.1639, 0.74", "36.8442, -65.6678, -35.0889, 0.88", "37.613, -66.2636, -34.8132, 0.44", "38.2587, -66.7598, -34.5424, 1.77", "38.6071, -67.0358, -34.3733, 2.06", "38.9995, -67.4216, -34.1461, 2.06" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-19.6527, 82.1968, -9.19806, 1.25", "-19.1061, 83.8901, -10.874, 1.25", "-18.8387, 84.6081, -11.4725, 1.4", "-18.4039, 85.9139, -12.367, 1.11", "-17.9161, 87.6271, -13.3511, 1.33", "-17.6266, 88.8483, -13.9565, 1.25", "-17.276, 90.5463, -14.7224, 1.25", "-16.8828, 92.4728, -15.4523, 1.47", "-16.5086, 94.3233, -16.0727, 1.69", "-16.2082, 95.9717, -16.4928, 1.84", "-16.0162, 97.409, -16.7417, 2.14", "-15.9494, 98.832, -16.9314, 2.14" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-19.6527, 82.1968, -9.19806, 0.96", "-20.2439, 83.0188, -8.96073, 0.96", "-20.6605, 83.5628, -8.89086, 0.81", "-21.4618, 84.5086, -8.90955, 0.66", "-21.917, 84.9786, -8.99751, 0.59", "-22.4796, 85.4927, -9.1666, 0.59", "-23.2044, 86.0811, -9.45367, 0.74", "-23.8094, 86.465, -9.80522, 0.74", "-24.3033, 86.7269, -10.1617, 1.11", "-24.8995, 87.0035, -10.6452, 0.74", "-25.3196, 87.1989, -10.9915, 1.25", "-25.942, 87.5307, -11.5032, 0.96", "-26.6202, 87.9911, -11.9995, 0.44", "-26.8614, 88.2266, -12.1702, 0.44", "-27.0874, 88.5629, -12.3299, 0.74", "-27.3104, 89.0725, -12.4762, 0.74", "-27.5211, 89.665, -12.5224, 0.74", "-27.7585, 90.3708, -12.3966, 0.59", "-27.9384, 90.8865, -12.181, 0.59", "-28.1247, 91.4009, -11.8519, 0.88", "-28.2833, 91.8649, -11.5042, 0.66", "-28.7033, 92.946, -10.5, 0.66", "-29.0406, 93.7073, -9.70541, 0.96", "-29.2335, 94.0997, -9.2744, 0.66", "-29.5056, 94.5875, -8.72136, 0.52", "-29.8612, 95.1579, -8.08663, 0.88", "-30.3876, 95.9692, -7.29939, 0.59", "-30.6633, 96.3961, -6.99484, 0.59", "-30.9338, 96.782, -6.77854, 0.59", "-31.4492, 97.4304, -6.46313, 0.59", "-31.9455, 97.9905, -6.21542, 1.11", "-32.6135, 98.6965, -5.92387, 0.59", "-33.0273, 99.1358, -5.79031, 0.59", "-33.5259, 99.6411, -5.64196, 0.81", "-34.0237, 100.142, -5.51156, 0.81", "-34.5407, 100.667, -5.41796, 0.96", "-35.0032, 101.122, -5.35659, 1.03", "-35.4621, 101.528, -5.31461, 1.33", "-35.9473, 101.921, -5.26059, 1.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "4.24936, 61.2935, -13.8137, 0.88", "5.063, 61.5134, -13.986, 0.88", "5.72213, 61.6329, -14.1276, 0.66", "6.21608, 61.6924, -14.2354, 1.03", "6.78104, 61.7601, -14.3784, 1.18", "7.27024, 61.8403, -14.5295, 1.18", "7.64319, 61.9232, -14.6661, 0.81", "8.10619, 62.0523, -14.8821, 0.44", "8.61483, 62.2601, -15.1735, 0.44", "9.16921, 62.6184, -15.5525, 0.44", "9.67033, 63.0723, -15.9299, 0.59", "10.0094, 63.434, -16.1869, 0.81", "10.2745, 63.7233, -16.3765, 0.81", "10.6073, 64.0805, -16.5924, 0.66", "11.0308, 64.4785, -16.8221, 0.66", "11.5676, 64.8641, -17.0385, 0.66", "12.0537, 65.1021, -17.1862, 0.88", "12.5872, 65.2762, -17.3237, 0.52", "12.9811, 65.3514, -17.4183, 0.96", "13.4741, 65.3706, -17.5355, 0.96", "13.8597, 65.3221, -17.6262, 1.11", "14.3536, 65.1649, -17.7563, 1.18", "14.7108, 64.9855, -17.8585, 1.18", "15.1297, 64.6885, -18.0066, 0.66", "15.6934, 64.1635, -18.2615, 0.96", "16.213, 63.5338, -18.5619, 0.44", "16.7713, 62.7118, -18.9919, 0.37", "17.0598, 62.2436, -19.2658, 1.18", "17.369, 61.7278, -19.6035, 1.33", "17.6002, 61.3367, -19.8911, 1.33", "17.9717, 60.6732, -20.4677, 0.59", "18.2904, 60.0439, -21.1039, 0.37", "18.4809, 59.6114, -21.5837, 0.37", "18.5972, 59.2712, -22.0005, 0.37", "18.6942, 58.9132, -22.4599, 0.37", "18.7987, 58.3329, -23.2357, 0.52", "18.8491, 57.8533, -23.8926, 0.52", "18.8738, 57.4008, -24.4741, 0.52", "18.9275, 56.435, -25.5504, 0.96", "18.9947, 55.7976, -26.1719, 1.47", "19.1036, 55.2674, -26.6369, 1.69", "19.2266, 54.9044, -26.9228, 1.92", "19.436, 54.4549, -27.2517, 1.92", "20.028, 53.4494, -27.9213, 0.74", "20.5512, 52.7037, -28.3396, 0.37", "20.9307, 52.2423, -28.5853, 0.88", "21.2078, 51.9681, -28.7328, 1.11", "21.4648, 51.7517, -28.8597, 1.11", "21.8225, 51.4845, -29.0277, 1.33", "22.0405, 51.3308, -29.1252, 1.33", "22.4119, 51.0054, -29.2702, 0.81", "22.7025, 50.578, -29.4035, 0.44", "22.9375, 50.0574, -29.5693, 0.37", "23.1745, 49.4087, -29.8086, 0.37", "23.3084, 49.0064, -29.981, 1.18", "23.454, 48.5567, -30.1985, 1.4", "23.7637, 47.6185, -30.7399, 0.29", "24.0999, 46.789, -31.3552, 0.66", "24.4249, 46.1801, -31.9332, 1.11", "24.6648, 45.7923, -32.3651, 1.62", "24.7745, 45.615, -32.5722, 1.84", "25.0568, 45.1638, -33.1051, 1.84", "25.4359, 44.504, -33.8833, 0.81", "25.7263, 43.9398, -34.5012, 0.44", "25.9201, 43.531, -34.908, 0.44", "26.2324, 42.8968, -35.4796, 0.44", "26.4563, 42.4735, -35.824, 0.59", "27.0166, 41.5501, -36.4834, 0.52", "27.3448, 41.0988, -36.775, 0.37", "27.6643, 40.7613, -37.0303, 0.96", "28.1334, 40.345, -37.4053, 1.62", "28.3526, 40.1648, -37.5772, 1.99", "28.7734, 39.8002, -37.9132, 1.99", "29.0392, 39.5588, -38.1129, 1.47", "29.9932, 38.5883, -38.8629, 0.52", "30.57, 37.9936, -39.3151, 0.52", "31.0181, 37.5375, -39.6575, 0.88", "31.4831, 37.0902, -39.991, 0.59", "31.8884, 36.72, -40.2541, 0.37", "32.2307, 36.4295, -40.4269, 0.37", "32.727, 36.058, -40.5631, 0.74", "33.0364, 35.8343, -40.6488, 0.74", "33.3029, 35.6213, -40.7541, 0.37", "33.4749, 35.451, -40.8523, 0.37", "33.837, 35.0024, -41.1363, 0.81", "33.9684, 34.7847, -41.2783, 1.03", "34.4185, 33.8629, -41.8631, 0.37", "34.7019, 33.2128, -42.2748, 1.18", "34.9084, 32.6991, -42.5993, 1.47", "35.1666, 32.0831, -42.9948, 0.66", "35.5202, 31.3542, -43.5057, 0.29", "35.6942, 31.0589, -43.7171, 1.25", "35.903, 30.7634, -43.9438, 1.55", "36.1349, 30.4932, -44.1784, 1.55", "36.8012, 29.8698, -44.7929, 0.44", "37.6045, 29.2784, -45.4835, 1.18", "38.2357, 28.8919, -45.993, 1.84", "38.9928, 28.4746, -46.5897, 2.06", "39.8934, 28.0283, -47.3058, 0.29", "40.4377, 27.7842, -47.7473, 0.29", "41.0431, 27.5104, -48.2421, 1.18", "41.5402, 27.251, -48.6375, 0.88", "41.8633, 27.0719, -48.8858, 0.52", "42.5551, 26.6728, -49.3677, 0.52", "42.9644, 26.4127, -49.655, 0.52", "43.5646, 25.9949, -50.0659, 0.29", "44.0554, 25.6359, -50.3699, 0.29", "44.5246, 25.2983, -50.645, 0.66", "44.9535, 24.9761, -50.8779, 0.81", "45.1264, 24.8391, -50.9594, 0.81", "45.792, 24.3051, -51.2834, 0.29", "46.2904, 23.9212, -51.5381, 0.96", "46.7433, 23.5813, -51.7938, 1.03", "47.2624, 23.1786, -52.1002, 0.29", "47.5726, 22.9413, -52.2828, 0.29", "48.0652, 22.5896, -52.5626, 0.96", "48.5704, 22.2626, -52.8258, 0.96", "49.2588, 21.8708, -53.1584, 0.37", "49.9553, 21.5257, -53.4507, 0.66", "50.256, 21.3804, -53.5693, 0.96", "50.9865, 21.0087, -53.8367, 0.29", "51.7445, 20.6077, -54.0848, 1.03", "52.0167, 20.4659, -54.1719, 1.33", "52.7268, 20.1247, -54.3826, 0.37", "53.4055, 19.8618, -54.5953, 0.37", "53.9916, 19.6752, -54.8069, 0.37", "54.3574, 19.5837, -54.9544, 0.74", "54.9439, 19.4529, -55.208, 0.74", "55.3749, 19.3544, -55.4024, 0.37", "55.9298, 19.2424, -55.6598, 0.29", "56.5083, 19.1614, -55.9229, 0.29", "56.9763, 19.115, -56.1307, 0.88", "57.4794, 19.0735, -56.3453, 1.25", "58.0706, 19.0295, -56.5933, 1.18", "58.8529, 18.9823, -56.9211, 0.29", "59.4185, 18.9711, -57.1607, 0.74", "59.8941, 18.9757, -57.3602, 0.74", "60.4456, 18.9891, -57.6181, 0.37", "61.1198, 19.0051, -57.9727, 0.96", "61.5117, 19.0031, -58.1904, 1.33", "61.9005, 18.9675, -58.4237, 1.33", "62.5275, 18.8415, -58.8057, 0.37", "63.1901, 18.6448, -59.2104, 0.44", "63.6475, 18.4799, -59.4845, 0.44", "64.1584, 18.2857, -59.7688, 0.44", "64.898, 18.0028, -60.1529, 0.96", "65.3762, 17.808, -60.3785, 1.03", "65.716, 17.6605, -60.5204, 0.81", "66.1681, 17.4451, -60.6853, 0.52", "66.705, 17.169, -60.8664, 0.29", "66.9911, 17.0207, -60.9685, 0.29", "67.504, 16.775, -61.1062, 0.88", "67.9935, 16.5478, -61.2076, 1.25", "68.1935, 16.4471, -61.2396, 1.25", "68.8726, 16.0433, -61.3299, 0.29", "69.3511, 15.6999, -61.3904, 0.29", "70.1577, 15.0634, -61.4904, 0.29", "70.438, 14.8387, -61.53, 0.29", "71.0282, 14.3752, -61.6366, 0.96", "71.482, 14.0506, -61.7411, 0.96", "71.9873, 13.7265, -61.8939, 0.44", "72.3226, 13.5372, -62.0198, 0.37", "72.7172, 13.3526, -62.2191, 0.81", "73.3045, 13.1531, -62.5586, 0.29", "73.7749, 13.0142, -62.863, 0.29", "74.1952, 12.88, -63.1499, 0.74", "74.6809, 12.6912, -63.5061, 0.96", "75.1794, 12.4469, -63.8931, 0.96", "75.8465, 12.0579, -64.415, 0.44", "76.3819, 11.689, -64.861, 0.29", "76.8187, 11.3357, -65.2412, 0.29", "77.2214, 10.9723, -65.5849, 0.96", "77.4417, 10.7634, -65.7644, 1.11", "77.8286, 10.4107, -66.0453, 1.18", "78.4772, 9.84137, -66.5186, 0.37", "78.8447, 9.55707, -66.7982, 0.37", "79.3851, 9.17203, -67.2356, 0.29", "79.9048, 8.83265, -67.6691, 0.29", "80.4051, 8.53038, -68.0956, 0.96", "81.1867, 8.10727, -68.7552, 0.44", "81.5643, 7.93309, -69.0506, 1.03", "81.8669, 7.81061, -69.2731, 1.03", "82.5316, 7.58653, -69.7447, 0.29", "82.8769, 7.49695, -69.9638, 0.29", "83.2916, 7.42476, -70.2079, 0.96", "83.8248, 7.36348, -70.4964, 0.96", "84.1546, 7.32621, -70.677, 0.37", "84.7021, 7.25587, -70.9866, 0.22", "85.3079, 7.15355, -71.3487, 1.11", "85.9741, 7.04732, -71.7619, 1.11", "86.8776, 6.91206, -72.3529, 0.44", "87.3016, 6.85024, -72.6466, 1.03", "87.5876, 6.79718, -72.8531, 1.03", "88.1791, 6.61666, -73.2924, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "4.24936, 61.2935, -13.8137, 0.29", "4.65147, 62.7839, -14.2365, 0.29", "4.84826, 63.4837, -14.4615, 0.29", "5.21863, 64.827, -14.889, 0.29", "5.47411, 65.755, -15.1886, 0.81", "5.62492, 66.2995, -15.3733, 0.81", "5.92364, 67.4276, -15.7564, 0.29", "6.22061, 68.4742, -16.1406, 0.29", "6.49385, 69.4704, -16.517, 0.88", "6.57006, 69.7773, -16.6316, 0.88", "6.77551, 70.6523, -16.9744, 0.22", "7.02964, 71.7313, -17.3962, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-24.96, -42.0733, -68.3419, 0.88", "-24.7514, -41.1514, -77.2166, 0.88", "-24.7841, -41.0568, -78.3861, 0.52", "-24.8213, -41.0232, -78.9064, 0.52", "-24.9684, -40.9618, -80.1296, 0.52", "-25.1921, -40.9306, -81.3399, 0.52", "-25.4425, -40.9351, -82.273, 1.03", "-25.8209, -41.0553, -82.5041, 1.62", "-26.0163, -41.1226, -82.6085, 1.99", "-26.5049, -41.2633, -82.8444, 2.14", "-27.3366, -41.3797, -83.2574, 1.55", "-28.0483, -41.3656, -83.7576, 0.74", "-28.6509, -41.2748, -84.3922, 0.37", "-29.1678, -41.1678, -85.0792, 0.37", "-29.4848, -41.1309, -85.6444, 0.37", "-30.1428, -41.1168, -87.1036, 0.74", "-30.7643, -41.1582, -88.6396, 1.4", "-31.0913, -41.209, -89.4551, 1.92", "-31.2545, -41.2481, -89.8524, 2.21", "-32.1521, -41.4991, -92.1458, 0.52", "-32.4196, -41.581, -92.8714, 0.52", "-32.7465, -41.6874, -93.7974, 0.52", "-32.9757, -41.7221, -94.5045, 0.59", "-33.1275, -41.7014, -95.058, 0.59", "-33.6027, -41.4319, -96.9802, 1.69", "-34.0046, -40.9616, -98.7047, 2.06", "-34.3447, -40.4653, -100.151, 1.03", "-34.5027, -40.1906, -100.851, 0.29", "-34.6852, -39.9047, -101.568, 0.29", "-34.9739, -39.5738, -102.402, 1.25", "-35.1995, -39.4163, -102.856, 1.62", "-35.5453, -39.2469, -103.449, 1.92", "-36.5889, -38.9509, -105.186, 0.81", "-37.1213, -38.9412, -106.042, 1.11", "-37.3761, -38.9774, -106.493, 1.11", "-37.9123, -39.0969, -107.598, 0.37", "-38.2299, -39.1725, -108.334, 0.29", "-38.58, -39.2742, -109.165, 0.29", "-38.974, -39.3874, -110.009, 0.29", "-39.714, -39.5402, -111.704, 1.33", "-39.9825, -39.5669, -112.396, 1.55", "-40.2116, -39.553, -113.085, 1.77" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-24.96, -42.0733, -68.3419, 1.18", "-26.2528, -42.735, -69.525, 1.18", "-27.8353, -43.6053, -70.8325, 0.52", "-28.7671, -44.1056, -71.5631, 0.52", "-31.0098, -45.2555, -73.0161, 0.88", "-32.4501, -45.9734, -73.8008, 1.18", "-33.5279, -46.534, -74.3249, 1.18", "-34.8573, -47.3006, -74.8503, 1.25", "-36.0579, -48.0587, -75.2532, 1.11", "-38.1186, -49.4315, -75.6854, 0.88", "-39.4222, -50.3097, -75.804, 0.59", "-40.5131, -51.0389, -75.8709, 0.44", "-41.3211, -51.5603, -75.9044, 0.29", "-42.2197, -52.1094, -75.9277, 0.29", "-43.2534, -52.7077, -75.9855, 0.88", "-44.1839, -53.1628, -76.1487, 1.25", "-44.7314, -53.389, -76.2828, 1.47", "-45.6031, -53.7072, -76.5304, 1.47", "-46.3248, -53.9819, -76.7692, 1.33", "-47.396, -54.443, -77.1707, 0.59", "-48.4719, -54.9767, -77.6327, 0.44", "-49.8071, -55.6987, -78.2479, 0.37", "-50.6182, -56.1461, -78.6325, 0.96", "-51.656, -56.7119, -79.1307, 0.59", "-53.0916, -57.4613, -79.8163, 0.52", "-53.9135, -57.8456, -80.2042, 0.52", "-54.7809, -58.1759, -80.6115, 1.11", "-55.5626, -58.3883, -80.9694, 1.99", "-56.4151, -58.5343, -81.3508, 2.28", "-57.3195, -58.5982, -81.7558, 1.99", "-58.4262, -58.5824, -82.2562, 1.69", "-59.4527, -58.5196, -82.7488, 1.4", "-60.2634, -58.4731, -83.1686, 0.66", "-61.2151, -58.4608, -83.6953, 0.52", "-62.1521, -58.529, -84.2458, 0.52", "-62.8629, -58.7074, -84.6883, 0.29", "-63.5422, -59.149, -85.1316, 0.29", "-64.3192, -59.999, -85.5989, 0.81", "-64.7486, -60.5641, -85.7986, 1.11", "-65.3647, -61.4214, -85.9719, 0.96", "-66.1777, -62.4479, -85.9986, 0.74", "-66.9758, -63.2333, -85.9322, 0.37", "-68.1666, -64.0035, -85.6977, 1.11", "-68.9664, -64.4003, -85.5112, 1.84", "-69.8741, -64.727, -85.2767, 2.36", "-71.4293, -65.0641, -84.8351, 2.58", "-73.0626, -65.2021, -84.3382, 0.59", "-74.4664, -65.1691, -83.8743, 0.81" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "38.9995, -67.4216, -34.1461, 0.74", "40.443, -68.5313, -34.1685, 0.74", "41.548, -69.3168, -34.3149, 0.66", "42.2417, -69.7857, -34.4553, 1.11", "42.8265, -70.154, -34.6085, 1.11", "44.0647, -70.8559, -34.9791, 0.88", "44.9829, -71.3306, -35.2822, 0.59", "45.9347, -71.7864, -35.6885, 1.11", "46.2392, -71.9179, -35.8428, 1.47", "46.8672, -72.1474, -36.1729, 1.69", "47.7237, -72.4062, -36.61, 1.69", "48.7903, -72.6285, -37.0833, 1.77", "49.4091, -72.7385, -37.3513, 1.77" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "38.9995, -67.4216, -34.1461, 0.37", "39.4841, -68.0678, -35.3616, 0.37", "39.8713, -68.6567, -36.5837, 1.03", "40.2742, -69.3879, -38.1469, 1.25", "40.6637, -70.1989, -40.2291, 0.66", "40.7654, -70.4309, -40.94, 0.81", "41.0907, -71.1108, -43.47, 1.11", "41.1707, -71.2951, -44.4842, 1.4", "41.1908, -71.4338, -45.5851, 0.88", "41.099, -71.5837, -48.0656, 0.22", "40.9396, -71.6303, -50.3603, 0.37", "40.7505, -71.6516, -52.9143, 1.03", "40.6618, -71.6578, -54.2531, 1.69", "40.6867, -71.7064, -55.1977, 1.69", "40.928, -72.1317, -59.5956, 0.15", "41.0512, -72.2755, -60.4135, 0.15", "41.2146, -72.4405, -61.1175, 1.18", "41.5275, -72.7483, -62.1648, 1.47", "42.8164, -74.0197, -65.8263, 0.88", "43.5236, -74.732, -67.5993, 1.55", "45.0439, -76.2838, -70.9296, 0.81", "45.6033, -76.8634, -72.1804, 0.37", "45.8764, -77.1773, -72.8508, 0.52", "46.144, -77.582, -73.6389, 0.52", "46.2635, -77.9703, -74.1715, 0.37", "46.313, -78.6256, -74.8227, 0.37", "46.0745, -79.2717, -75.27, 0.81", "45.8214, -79.8449, -75.626, 1.11", "45.471, -80.7653, -76.0908, 1.25", "45.0768, -82.0384, -76.6764, 0.29", "44.8678, -82.7658, -76.9896, 0.29", "44.4601, -84.0425, -77.5255, 1.55", "44.2069, -84.7263, -77.8238, 1.77", "43.5299, -86.3066, -78.5701, 0.29", "42.8837, -87.5061, -79.2145, 0.22", "41.9609, -88.7507, -80.0383, 0.22", "41.0748, -89.6707, -80.7516, 0.66", "40.4333, -90.1705, -81.2345, 1.4", "40.2969, -90.2528, -81.3305, 1.92", "39.5214, -90.62, -81.8345, 1.62", "38.6168, -91.0201, -82.3748, 0.52", "37.8061, -91.3847, -82.8697, 0.29", "36.899, -91.8368, -83.4459, 0.52", "36.5036, -92.0411, -83.6988, 0.52", "35.6734, -92.4917, -84.2336, 0.37", "35.3149, -92.687, -84.4616, 0.88", "34.7764, -92.9711, -84.8222, 0.88", "34.1665, -93.2785, -85.2496, 0.44", "33.5181, -93.6268, -85.7248, 0.22", "33.0274, -93.9261, -86.1107, 0.96", "32.4108, -94.3641, -86.6669, 0.96", "31.394, -95.2403, -87.6907, 0.29", "30.9719, -95.679, -88.1703, 1.25", "30.5931, -96.0914, -88.6236, 1.25", "30.1448, -96.613, -89.1993, 0.96", "29.6286, -97.2972, -89.9495, 0.96", "28.9823, -98.3976, -91.1088, 0.29", "28.5975, -99.2354, -91.9467, 0.29", "28.3324, -99.9576, -92.6504, 0.66", "28.1478, -100.601, -93.2848, 0.37", "27.9605, -101.446, -94.2223, 0.96", "27.8919, -102.137, -95.1026, 1.18", "27.9039, -102.474, -95.5952, 0.81", "27.9824, -103.241, -96.8154, 0.52", "28.0376, -104.013, -98.0353, 0.44", "28.0614, -105.109, -99.8277, 0.96", "28.023, -106.487, -102.256, 0.37", "27.9792, -107.187, -103.529, 0.37", "27.9438, -108.146, -105.272, 0.37", "27.9177, -109.061, -106.823, 1.18", "27.9119, -109.629, -107.673, 1.47", "27.9187, -110.155, -108.369, 1.47", "28.0062, -111.849, -110.358, 0.74", "28.1299, -112.931, -111.492, 0.29", "28.2966, -113.904, -112.399, 0.29", "28.6093, -115.403, -113.666, 0.96", "28.7228, -115.977, -114.08, 1.11", "28.939, -117.045, -114.721, 0.29", "29.1723, -118.022, -115.18, 0.29", "29.4382, -118.953, -115.526, 0.44", "29.6781, -119.63, -115.725, 0.29", "29.9081, -120.341, -115.867, 1.03", "30.1008, -121.028, -115.99, 1.03", "30.4686, -122.436, -116.243, 0.29", "30.7895, -123.535, -116.393, 1.11", "30.9377, -124.02, -116.445, 1.25", "31.3244, -125.403, -116.562, 0.22", "31.4038, -125.788, -116.587, 0.74", "31.4577, -126.161, -116.612, 0.74", "31.5399, -127.164, -116.667, 0.22", "31.5781, -127.847, -116.711, 0.66", "31.6214, -128.449, -116.747, 0.66", "31.6946, -129.278, -116.79, 0.22", "31.7311, -129.861, -116.829, 0.81", "31.7566, -130.78, -116.907, 0.22", "31.742, -131.969, -117.029, 0.52", "31.7132, -132.716, -117.112, 0.66", "31.6905, -133.141, -117.161, 0.66", "31.6346, -134.167, -117.27, 0.29", "31.5334, -135.669, -117.43, 0.29", "31.4804, -136.457, -117.512, 0.81", "31.4592, -136.754, -117.543, 0.81", "31.3761, -137.94, -117.663, 0.29", "31.3109, -138.969, -117.76, 0.66" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-15.9494, 98.832, -16.9314, 1.25", "-15.3049, 100.94, -15.7814, 1.25", "-15.1362, 101.624, -15.6847, 1.25", "-14.9893, 102.628, -15.823, 1.03", "-14.9407, 103.146, -15.9616, 1.11", "-14.8759, 104.072, -16.2633, 1.11", "-14.8264, 105.041, -16.5967, 1.03", "-14.8029, 106.371, -17.2209, 0.96", "-14.8284, 107.538, -17.8054, 1.18", "-14.8924, 108.526, -18.3164, 1.18", "-14.9809, 109.455, -18.7863, 1.4", "-15.1093, 110.514, -19.2766, 1.55", "-15.2833, 111.776, -19.8029, 1.18", "-15.4131, 112.717, -20.1528, 0.96", "-15.5644, 113.88, -20.5652, 1.25", "-15.6945, 114.778, -20.8648, 1.25", "-15.8178, 115.589, -21.1166, 1.03", "-16.0004, 116.761, -21.433, 1.03", "-16.1362, 117.55, -21.6019, 1.03", "-16.3509, 118.795, -21.8128, 1.03", "-16.5787, 120.229, -21.9867, 1.03", "-16.6756, 120.874, -22.0431, 1.33", "-16.8811, 122.328, -22.137, 1.62", "-17.0383, 123.504, -22.1851, 1.11", "-17.1797, 124.649, -22.1321, 1.4", "-17.2742, 125.544, -22.0327, 1.25", "-17.3445, 126.623, -21.8744, 1.55", "-17.3513, 126.843, -21.8387, 1.47", "-17.3462, 128.246, -21.6001, 1.62", "-17.3114, 130.125, -21.2823, 1.47", "-17.3164, 130.902, -21.1648, 1.55", "-17.342, 131.626, -21.0878, 1.11", "-17.4059, 132.959, -21.0034, 0.88", "-17.449, 133.861, -20.9926, 0.88", "-17.4742, 134.71, -21.0408, 0.88", "-17.4588, 135.912, -21.2008, 0.88", "-17.3826, 136.825, -21.334, 1.18", "-17.2156, 137.878, -21.5223, 1.18", "-17.0297, 138.647, -21.6806, 1.33", "-16.7593, 139.537, -21.8434, 1.33", "-16.276, 140.936, -22.0305, 1.11", "-15.7607, 142.341, -22.1374, 0.88", "-15.4159, 143.309, -22.1442, 0.88", "-15.057, 144.431, -22.0869, 1.03", "-14.775, 145.553, -21.9772, 1.33", "-14.5976, 146.608, -21.8347, 1.33", "-14.5318, 147.492, -21.705, 1.47", "-14.539, 148.326, -21.5549, 1.4", "-14.5891, 149.097, -21.4, 1.4", "-14.6805, 149.961, -21.2399, 1.18", "-14.802, 150.966, -21.0892, 1.18", "-14.8817, 151.665, -20.9904, 1.03", "-14.9705, 152.718, -20.8529, 1.03", "-14.9934, 153.686, -20.7543, 0.88", "-14.9526, 154.72, -20.7548, 1.03", "-14.8765, 155.667, -20.8188, 0.96", "-14.799, 156.39, -20.9323, 0.96", "-14.6849, 157.368, -21.1638, 0.96", "-14.5401, 158.638, -21.6239, 0.96", "-14.3508, 160.525, -22.6105, 0.81", "-14.2936, 161.67, -23.3645, 1.03", "-14.3014, 162.366, -23.8786, 1.03", "-14.35, 163.363, -24.6141, 0.88", "-14.4507, 164.803, -25.6405, 1.03", "-14.5826, 166.374, -26.6677, 1.03", "-14.6474, 167.297, -27.1595, 1.25", "-14.7443, 168.52, -27.7035, 1.25", "-14.9113, 170.265, -28.2819, 1.03", "-15.007, 171.178, -28.4933, 1.03", "-15.1208, 172.426, -28.7088, 1.03", "-15.2098, 174.041, -28.9338, 1.03", "-15.2102, 175.755, -29.1784, 0.88", "-15.124, 177.251, -29.4152, 0.88", "-14.9931, 178.557, -29.6328, 0.88", "-14.6767, 180.969, -30.03, 0.74", "-14.4219, 182.541, -30.2763, 0.74", "-14.1164, 184.174, -30.4947, 0.74", "-13.8539, 185.514, -30.6819, 0.74", "-13.663, 186.918, -30.9475, 0.74", "-13.6611, 188.37, -31.3736, 0.74", "-13.7688, 189.054, -31.6373, 0.88", "-13.974, 189.841, -32.0302, 1.03", "-14.3518, 191.223, -32.7767, 0.74", "-14.82, 193.168, -33.8238, 0.74", "-15.1238, 194.828, -34.7093, 0.59", "-15.2133, 195.581, -35.0826, 0.88", "-15.301, 196.871, -35.6577, 1.11", "-15.313, 198.74, -36.3657, 1.55", "-15.2393, 200.26, -36.7873, 1.33", "-15.1223, 201.57, -37.054, 1.11", "-14.9432, 203.228, -37.3423, 1.11", "-14.78, 204.551, -37.5631, 1.11", "-14.57, 205.889, -37.7631, 1.03", "-14.2573, 207.415, -37.9733, 0.88", "-14.0336, 208.24, -38.0796, 1.18", "-13.8631, 208.759, -38.1309, 1.4", "-13.5968, 209.511, -38.1809, 1.25", "-13.3038, 210.384, -38.2323, 1.25", "-13.1564, 210.929, -38.2821, 1.11", "-13.0332, 211.553, -38.3586, 0.96", "-12.9671, 212.347, -38.4553, 0.96", "-12.9656, 212.902, -38.5257, 0.88", "-13.0058, 213.997, -38.6606, 0.66", "-13.0278, 214.712, -38.7126, 0.81", "-13.0231, 215.472, -38.7252, 0.81", "-12.9645, 216.362, -38.6778, 0.74", "-12.7294, 218.111, -38.4845, 0.88", "-12.6385, 218.585, -38.4002, 1.18", "-12.3108, 219.816, -38.1112, 1.18", "-12.0792, 220.514, -37.9159, 1.18", "-11.7903, 221.252, -37.7018, 1.11", "-11.4196, 222.096, -37.4655, 0.96", "-11.1622, 222.677, -37.3074, 0.96", "-10.8717, 223.383, -37.1692, 0.81", "-10.5973, 224.111, -37.0916, 1.11", "-10.4528, 224.523, -37.0931, 1.47", "-10.1673, 225.414, -37.2107, 1.03", "-9.95176, 226.155, -37.3794, 1.03", "-9.73401, 226.962, -37.6398, 1.25", "-9.60922, 227.523, -37.8276, 1.25", "-9.3647, 228.89, -38.2399, 0.88", "-9.2698, 229.611, -38.3995, 0.88", "-9.19534, 230.538, -38.5308, 1.18", "-9.1482, 231.555, -38.5905, 0.96", "-9.1055, 232.697, -38.5365, 0.81", "-9.05997, 233.703, -38.3911, 1.25", "-9.00717, 234.512, -38.1987, 0.66", "-8.93463, 235.328, -37.9683, 0.96", "-8.85132, 236.075, -37.7661, 1.25", "-8.75328, 236.805, -37.5915, 0.96", "-8.63392, 237.508, -37.4868, 0.96", "-8.47373, 238.307, -37.4019, 1.25", "-8.33095, 238.924, -37.3432, 1.55", "-8.13843, 239.663, -37.2721, 1.55", "-7.98465, 240.199, -37.228, 1.25", "-7.77213, 240.98, -37.2023, 0.96" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-15.9494, 98.832, -16.9314, 0.59", "-16.0564, 103.072, -19.1867, 0.59", "-16.1217, 104.651, -19.96, 0.88", "-16.2145, 106.536, -20.7731, 1.18", "-16.2874, 108.913, -21.6764, 1.18", "-16.2778, 110.573, -22.3234, 0.96", "-16.2415, 112.427, -23.0427, 0.59", "-16.2114, 113.627, -23.4096, 0.96", "-16.1601, 115.584, -24.0093, 0.96", "-16.1407, 117.903, -24.7646, 0.96", "-16.1985, 120.079, -25.5036, 0.52", "-16.329, 121.664, -26.0471, 0.37", "-16.5305, 122.69, -26.4144, 0.37", "-16.9007, 123.727, -26.7669, 0.81", "-17.4105, 124.595, -27.0954, 1.18", "-17.8038, 125.194, -27.3332, 1.18", "-18.4309, 126.265, -27.7241, 0.66", "-18.8699, 127.221, -28.0914, 0.66", "-19.3937, 128.811, -28.683, 0.59", "-19.805, 130.768, -29.3847, 0.88", "-20.1585, 133.569, -30.3544, 1.11", "-20.2552, 135.128, -30.8674, 1.11", "-20.266, 136.467, -31.2505, 1.11", "-20.2254, 138.085, -31.5893, 0.37", "-20.1709, 139.847, -31.7658, 0.37", "-20.1704, 141.033, -31.7193, 0.74", "-20.1922, 141.415, -31.6732, 0.88", "-20.3212, 143.129, -31.3929, 0.88", "-20.3905, 144.434, -31.1153, 0.66", "-20.405, 146.223, -30.6816, 0.52", "-20.3588, 147.053, -30.524, 0.52", "-20.166, 148.621, -30.3703, 0.96", "-19.9672, 149.672, -30.3886, 0.96", "-19.7591, 150.533, -30.4984, 1.18", "-19.5857, 151.24, -30.6407, 1.18", "-19.1895, 153.093, -31.078, 0.66", "-19.0597, 154.132, -31.3183, 0.88", "-19.0342, 155.518, -31.5995, 0.88", "-19.0982, 156.604, -31.8412, 0.44", "-19.2089, 157.796, -32.0998, 0.74", "-19.2811, 158.529, -32.2428, 0.74", "-19.353, 159.509, -32.3939, 0.52", "-19.3753, 160.731, -32.5859, 0.37", "-19.3313, 161.757, -32.7454, 0.37", "-19.1833, 163.011, -32.9317, 0.74", "-19.0384, 163.807, -33.0435, 0.74", "-18.8172, 164.874, -33.1864, 0.66", "-18.4404, 166.603, -33.3999, 0.74", "-18.3216, 167.123, -33.4589, 1.4", "-18.0194, 168.218, -33.5734, 1.4", "-17.6991, 169.232, -33.7309, 1.33", "-17.0356, 171.025, -34.1053, 0.44", "-16.3716, 172.564, -34.5043, 0.44", "-15.9205, 173.579, -34.8117, 0.37", "-15.1572, 175.415, -35.4246, 0.37", "-14.5743, 176.953, -35.9707, 0.59", "-14.2774, 177.913, -36.3249, 0.59", "-14.0945, 178.8, -36.6562, 0.29", "-14.0772, 180.996, -37.3588, 0.88", "-14.2499, 182.056, -37.613, 1.77", "-14.4952, 183.026, -37.7699, 2.06", "-14.7288, 183.881, -37.8522, 1.69", "-15.0765, 185.112, -37.9735, 1.18", "-15.6096, 186.991, -38.1958, 0.44", "-16.0887, 188.671, -38.4092, 0.37", "-16.627, 190.568, -38.668, 0.74", "-16.8592, 191.338, -38.7842, 0.74", "-17.3728, 193.009, -39.0815, 0.52", "-17.7487, 194.228, -39.2579, 0.44", "-17.9793, 195.0, -39.3253, 0.66", "-18.2229, 195.757, -39.3281, 0.66", "-18.5871, 196.773, -39.2818, 0.37", "-18.8627, 197.549, -39.194, 0.37", "-19.6016, 199.849, -38.6716, 0.59", "-20.0071, 201.476, -38.1888, 1.03", "-20.1688, 202.392, -37.8919, 1.4" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-35.9473, 101.921, -5.26059, 0.29", "-36.317, 103.22, -4.95378, 0.29", "-36.5434, 103.833, -4.83173, 0.44", "-36.8022, 104.276, -4.74729, 0.66", "-37.2343, 104.729, -4.63359, 0.29", "-37.7332, 105.126, -4.52556, 0.29", "-38.0111, 105.33, -4.47029, 0.74", "-38.4008, 105.535, -4.40261, 0.88", "-39.2782, 105.962, -4.28786, 0.44", "-40.1167, 106.39, -4.20591, 0.52", "-40.3542, 106.533, -4.18146, 0.81", "-40.7502, 106.854, -4.10685, 0.44", "-41.1153, 107.223, -3.97965, 0.88", "-41.5021, 107.682, -3.76971, 0.59", "-41.8005, 108.168, -3.56146, 0.29", "-42.0027, 108.594, -3.38786, 0.29", "-42.3161, 109.342, -3.09012, 0.96", "-42.5844, 110.015, -2.82504, 1.18", "-42.8495, 110.712, -2.5438, 0.81", "-43.1875, 111.68, -2.18823, 0.52", "-43.3603, 112.19, -2.01876, 0.52", "-43.6082, 112.963, -1.82809, 0.44", "-43.8003, 113.577, -1.71086, 0.66", "-44.0251, 114.261, -1.56891, 0.88", "-44.1704, 114.668, -1.47764, 0.52", "-44.3642, 115.165, -1.33615, 0.29", "-44.638, 115.859, -1.14018, 0.29", "-44.9982, 116.786, -0.88166, 0.52", "-45.3016, 117.499, -0.712041, 0.81", "-45.5732, 118.153, -0.598984, 0.22", "-45.7646, 118.648, -0.522598, 0.22", "-46.0793, 119.469, -0.418028, 0.37", "-46.2493, 119.894, -0.380006, 0.37", "-46.6315, 120.787, -0.333913, 0.37", "-47.0216, 121.642, -0.305905, 0.29", "-47.4176, 122.529, -0.252966, 0.52", "-47.611, 122.997, -0.21548, 0.88", "-47.9416, 123.957, -0.104154, 0.59", "-48.0827, 124.463, -0.0344982, 0.44", "-48.212, 125.087, 0.0766227, 0.22", "-48.4311, 126.335, 0.318993, 0.22", "-48.4968, 126.898, 0.428157, 0.81", "-48.515, 127.37, 0.508497, 1.33", "-48.5113, 127.836, 0.567455, 1.33", "-48.4741, 128.689, 0.655245, 0.59", "-48.4181, 129.254, 0.702862, 0.81", "-48.3361, 129.779, 0.740153, 0.81", "-48.1649, 130.598, 0.769393, 0.52", "-47.9058, 131.641, 0.767574, 0.22", "-47.6747, 132.468, 0.745348, 0.22", "-47.3617, 133.467, 0.701719, 0.59", "-47.1478, 134.093, 0.682181, 0.81", "-46.8425, 134.976, 0.652903, 0.29", "-46.6346, 135.615, 0.651101, 0.22", "-46.5395, 135.944, 0.64829, 0.59", "-46.5023, 136.196, 0.634255, 0.59", "-46.5486, 136.845, 0.53501, 0.22", "-46.6754, 137.426, 0.371664, 0.29", "-46.7926, 137.818, 0.216245, 0.81", "-46.8704, 138.088, 0.075047, 1.11", "-46.9219, 138.299, -0.0428197, 1.11", "-47.1115, 139.329, -0.607403, 0.37", "-47.1692, 139.806, -0.828645, 0.96", "-47.2214, 140.475, -1.07933, 0.88", "-47.262, 141.007, -1.26141, 0.88", "-47.3442, 141.719, -1.48773, 0.52", "-47.4239, 142.245, -1.64052, 0.74", "-47.6018, 143.181, -1.88078, 0.29", "-47.7877, 144.046, -2.12778, 0.59", "-47.9318, 144.636, -2.31896, 0.59", "-48.0652, 145.39, -2.627, 0.29", "-48.1217, 146.009, -2.95193, 1.18", "-48.121, 146.299, -3.12258, 1.47", "-48.0499, 146.997, -3.5597, 1.18", "-47.9499, 147.678, -3.96848, 0.44", "-47.7403, 148.849, -4.62071, 0.22", "-47.6313, 149.308, -4.87286, 0.22", "-47.4016, 150.23, -5.3262, 1.18", "-47.3407, 150.463, -5.42611, 1.4", "-47.0526, 151.521, -5.77239, 0.44", "-46.8739, 152.126, -5.92729, 0.66", "-46.7312, 152.698, -6.03672, 0.66", "-46.4874, 153.511, -6.17479, 0.22", "-46.3516, 153.862, -6.23278, 0.59", "-46.1115, 154.398, -6.31854, 0.52", "-45.8054, 155.014, -6.40097, 0.96", "-45.5296, 155.588, -6.51042, 0.59", "-45.2717, 156.139, -6.6367, 0.37", "-44.9962, 156.699, -6.77999, 0.59", "-44.8054, 157.081, -6.85986, 0.81", "-44.3663, 157.985, -7.04305, 0.22", "-44.0155, 158.757, -7.17032, 0.59", "-43.8081, 159.244, -7.24177, 0.52", "-43.5971, 159.821, -7.32902, 0.22", "-43.3049, 160.71, -7.46276, 0.22", "-43.006, 161.694, -7.61707, 0.88", "-42.8549, 162.258, -7.70658, 1.69", "-42.7908, 162.571, -7.74793, 1.92", "-42.7021, 163.165, -7.85368, 1.25" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-35.9473, 101.921, -5.26059, 0.52", "-37.174, 102.168, -5.43519, 0.52", "-37.9669, 102.313, -5.5448, 0.59", "-38.8261, 102.463, -5.65871, 0.44", "-39.4167, 102.583, -5.73239, 0.59", "-40.0853, 102.754, -5.80421, 0.59", "-40.8967, 103.009, -5.87943, 0.52", "-41.4166, 103.201, -5.91526, 0.74", "-42.0861, 103.496, -5.94755, 0.37", "-42.5903, 103.742, -5.95472, 0.37", "-43.2387, 104.07, -5.9519, 0.37", "-43.8093, 104.34, -5.93658, 0.52", "-44.5302, 104.583, -5.92851, 0.52", "-45.09, 104.653, -5.94705, 0.29", "-45.8457, 104.629, -6.03159, 0.81", "-46.2996, 104.579, -6.10687, 1.11", "-46.9248, 104.499, -6.23431, 1.25", "-47.8918, 104.386, -6.45279, 0.66", "-48.724, 104.314, -6.66428, 0.37", "-49.9045, 104.29, -7.03285, 0.37", "-50.6751, 104.34, -7.33186, 0.29", "-51.6749, 104.48, -7.7811, 0.66", "-52.0547, 104.567, -7.98233, 0.88", "-52.5815, 104.735, -8.337, 0.59", "-53.3734, 105.014, -8.99183, 0.37", "-53.9001, 105.186, -9.50445, 0.37", "-54.2858, 105.289, -9.92646, 0.96", "-54.8801, 105.396, -10.6645, 1.18", "-55.8836, 105.497, -11.9476, 0.59", "-56.2572, 105.509, -12.4257, 0.44", "-56.6836, 105.487, -12.9376, 0.29", "-57.195, 105.429, -13.5004, 0.15", "-58.0409, 105.283, -14.365, 0.88", "-58.4496, 105.207, -14.7225, 1.18", "-59.0435, 105.124, -15.1695, 0.44", "-59.6158, 105.089, -15.5555, 0.37", "-60.1514, 105.096, -15.8628, 0.96", "-61.0593, 105.178, -16.2616, 1.25", "-62.0539, 105.352, -16.5595, 0.44", "-62.7062, 105.51, -16.6824, 0.44", "-63.5554, 105.757, -16.7644, 1.03", "-64.2633, 105.998, -16.7584, 0.88", "-65.1959, 106.345, -16.6991, 0.74", "-66.6312, 106.925, -16.4957, 0.37", "-67.6008, 107.323, -16.2963, 0.88", "-67.9146, 107.45, -16.212, 1.18", "-68.729, 107.809, -15.9485, 1.18" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "88.1791, 6.61666, -73.2924, 0.29", "88.9265, 9.87719, -77.7721, 0.29", "89.1236, 10.8222, -78.8778, 0.52", "89.177, 11.1413, -79.1872, 0.52", "89.3103, 12.2989, -80.106, 0.29", "89.3881, 13.3905, -80.8365, 0.96", "89.4154, 13.739, -81.0481, 1.33", "89.449, 14.2217, -81.1614, 1.33", "89.5387, 15.194, -81.3956, 0.59", "89.6943, 16.0821, -81.6966, 0.37", "89.9827, 16.8816, -82.1597, 0.22", "90.657, 17.6926, -82.9913, 0.22", "91.008, 17.8953, -83.3675, 0.59", "91.6467, 18.072, -84.0083, 0.59", "92.2113, 18.1191, -84.5378, 0.37", "92.9311, 18.0953, -85.1766, 0.96", "93.6413, 18.0258, -85.7692, 0.96", "94.5696, 17.8957, -86.5391, 0.44", "95.0379, 17.8262, -86.9297, 0.52", "95.639, 17.7208, -87.4466, 0.22", "96.0499, 17.6573, -87.8162, 0.74", "96.9425, 17.555, -88.63, 0.29", "97.3553, 17.5379, -89.0112, 0.29", "98.0012, 17.5777, -89.6225, 0.88", "98.7718, 17.6856, -90.3588, 0.37", "100.083, 17.9854, -91.6098, 0.96", "100.669, 18.1834, -92.1654, 1.4", "101.208, 18.4461, -92.6682, 0.59", "102.077, 19.0207, -93.4506, 0.22", "102.861, 19.695, -94.1169, 0.22", "103.517, 20.4356, -94.632, 1.11", "104.001, 21.1802, -94.9811, 1.33", "104.456, 22.0487, -95.3025, 1.33", "104.772, 22.7419, -95.5017, 1.33", "105.038, 23.4088, -95.6361, 0.59", "105.47, 24.565, -95.8244, 0.22", "106.02, 25.8514, -96.0151, 1.4", "106.337, 26.4455, -96.1198, 1.69", "107.052, 27.5736, -96.3758, 0.29", "107.401, 28.0278, -96.5552, 0.66", "107.954, 28.6025, -96.9602, 0.66", "108.793, 29.1647, -97.8966, 0.22", "109.357, 29.3238, -98.9716, 1.03", "109.523, 29.2962, -99.6171, 1.03", "109.663, 28.9994, -101.905, 0.74", "109.678, 28.772, -103.247, 1.03", "109.585, 28.3488, -105.244, 1.11", "109.354, 27.8581, -107.24, 1.11", "108.986, 27.291, -109.295, 0.74", "108.535, 26.7453, -111.205, 0.96" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "88.1791, 6.61666, -73.2924, 0.37", "89.8135, 5.60678, -73.5697, 0.37", "90.4269, 5.34547, -73.5352, 0.44", "90.8184, 5.24833, -73.3962, 0.44", "92.0755, 5.07857, -72.7639, 0.74", "92.2598, 5.07526, -72.6636, 0.88", "92.907, 5.11343, -72.32, 0.37", "93.7455, 5.24294, -71.8135, 0.37", "95.041, 5.49055, -71.0047, 0.88", "95.4932, 5.59031, -70.7173, 1.03", "96.1826, 5.75385, -70.285, 0.29", "96.8409, 5.93049, -69.853, 0.29", "97.3672, 6.09445, -69.4885, 0.29", "98.3786, 6.43241, -68.8871, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-40.2116, -39.553, -113.085, 0.74", "-41.2605, -38.8558, -114.438, 0.74", "-42.0972, -38.3545, -115.466, 1.03", "-43.441, -37.6291, -117.211, 0.37", "-44.118, -37.3123, -118.165, 0.22", "-44.9137, -36.9986, -119.385, 1.4", "-45.463, -36.8092, -120.265, 1.55", "-46.1684, -36.6539, -121.489, 1.55", "-47.3329, -36.517, -123.661, 0.81", "-48.1667, -36.5047, -125.261, 0.52", "-48.8812, -36.5604, -126.621, 0.88", "-49.6866, -36.6584, -128.182, 0.22", "-50.2965, -36.7189, -129.389, 0.74", "-50.8228, -36.7133, -130.452, 0.74", "-51.1824, -36.6369, -131.35, 0.74", "-51.6996, -36.426, -132.979, 0.44", "-52.0765, -36.238, -134.376, 0.22", "-52.2386, -36.1529, -135.188, 0.81", "-52.4621, -36.0396, -136.387, 0.81", "-53.2817, -35.6163, -140.819, 0.52", "-53.6249, -35.4624, -142.532, 1.03", "-53.9567, -35.3759, -143.885, 1.4", "-54.5922, -35.294, -146.026, 1.18", "-55.0084, -35.2712, -147.229, 0.66", "-55.696, -35.2394, -148.982, 1.18", "-56.1347, -35.2049, -149.949, 1.55", "-57.1428, -35.0993, -152.251, 0.52", "-57.5363, -35.0578, -153.242, 1.18", "-58.0615, -35.0191, -154.678, 1.18", "-58.9007, -34.9741, -157.392, 0.29", "-59.179, -34.9718, -158.506, 0.29", "-59.4707, -34.9702, -159.872, 0.29", "-59.7671, -34.9478, -161.442, 0.59", "-60.0255, -34.9196, -162.876, 0.59", "-60.225, -34.8729, -163.918, 0.44", "-60.7293, -34.6922, -166.328, 1.03", "-60.9582, -34.5638, -167.554, 1.33", "-61.4957, -34.1995, -170.355, 0.29", "-61.7503, -34.0068, -171.543, 0.29", "-62.0043, -33.8058, -172.586, 0.96", "-62.3893, -33.5115, -173.895, 0.96", "-63.9358, -32.3459, -177.775, 0.29", "-64.281, -32.0765, -178.427, 0.29", "-64.9787, -31.5723, -179.396, 1.03", "-65.7487, -31.0663, -180.22, 1.33", "-66.786, -30.4313, -181.089, 0.74", "-68.3081, -29.5264, -182.115, 0.37", "-70.2356, -28.4149, -183.153, 0.29", "-71.3693, -27.7739, -183.784, 0.22", "-72.5873, -27.1152, -184.462, 0.22", "-73.8215, -26.4232, -185.161, 0.52", "-74.7153, -25.9034, -185.682, 0.96", "-75.4756, -25.448, -186.161, 1.18", "-76.2499, -25.0043, -186.665, 1.18", "-77.3241, -24.3447, -187.381, 0.74", "-78.3159, -23.7443, -188.029, 0.22", "-78.8277, -23.4464, -188.339, 0.44", "-79.5274, -23.0412, -188.714, 0.44", "-80.3992, -22.4936, -189.159, 0.22", "-81.2892, -21.8816, -189.591, 0.22", "-81.8815, -21.435, -189.871, 0.88", "-82.5307, -20.93, -190.161, 1.25", "-82.8385, -20.6565, -190.289, 1.25", "-84.2374, -19.2391, -190.84, 0.22", "-84.9351, -18.4418, -191.113, 0.22", "-85.6292, -17.564, -191.39, 0.88", "-86.1917, -16.77, -191.625, 1.25", "-86.9973, -15.5062, -191.973, 0.22", "-87.9179, -13.9253, -192.384, 0.22", "-88.6137, -12.5863, -192.724, 0.88", "-89.0011, -11.7438, -192.927, 0.88", "-89.3476, -10.9242, -193.072, 0.37", "-89.8499, -9.60522, -193.205, 0.15", "-90.2962, -8.27245, -193.253, 0.96", "-90.5967, -7.27471, -193.241, 1.18", "-91.3938, -4.71263, -193.047, 0.22", "-92.1798, -2.37393, -192.761, 0.81", "-92.5907, -1.14846, -192.565, 0.74", "-93.1115, 0.455345, -192.23, 0.29", "-93.2884, 1.00581, -192.094, 0.29", "-93.7862, 2.53569, -191.67, 0.52", "-94.0219, 3.29357, -191.446, 0.66", "-94.3515, 4.73171, -191.113, 0.22", "-94.4591, 5.4666, -190.974, 0.22", "-94.503, 6.72585, -190.761, 0.81", "-94.4368, 7.43421, -190.674, 1.11", "-94.1667, 8.49907, -190.614, 1.11", "-93.5542, 10.0762, -190.628, 0.22", "-93.1441, 10.8961, -190.699, 0.59", "-92.8782, 11.3968, -190.767, 0.59", "-92.344, 12.4072, -190.927, 0.29", "-91.5663, 13.9917, -191.26, 0.22", "-90.8138, 15.5719, -191.653, 0.88", "-90.2224, 16.992, -192.018, 1.11", "-89.4055, 19.2505, -192.557, 0.22", "-89.0623, 20.2948, -192.785, 0.52", "-88.5655, 21.9618, -193.185, 0.22", "-88.0645, 23.8514, -193.7, 0.22", "-87.5998, 25.7731, -194.272, 0.66", "-87.222, 27.3332, -194.8, 0.66", "-86.7793, 29.0222, -195.508, 0.88", "-86.2333, 30.9899, -196.426, 0.66", "-85.8822, 32.245, -197.056, 0.44", "-85.5757, 33.3692, -197.682, 0.66", "-85.4182, 33.8622, -197.997, 0.66", "-84.7216, 35.9262, -199.487, 0.22", "-84.2434, 37.3889, -200.585, 0.22", "-84.0037, 38.1237, -201.08, 1.33" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-40.2116, -39.553, -113.085, 0.44", "-40.8637, -40.4224, -113.686, 0.44", "-41.3385, -41.1046, -114.185, 0.29", "-41.5501, -41.4277, -114.442, 0.66", "-41.7536, -41.7569, -114.74, 0.66", "-42.0756, -42.3315, -115.344, 0.29", "-42.234, -42.6144, -115.67, 0.59", "-42.4575, -43.087, -116.245, 0.37", "-42.6821, -43.6263, -116.949, 1.18", "-42.8423, -44.1327, -117.618, 1.62", "-42.9087, -44.7518, -118.427, 1.62", "-42.7951, -45.7583, -119.731, 0.29", "-42.6713, -46.2217, -120.323, 0.29", "-42.5537, -46.5397, -120.715, 0.66", "-42.2983, -47.199, -121.483, 0.52", "-41.8353, -48.5005, -122.893, 1.18", "-41.5451, -49.4182, -123.809, 1.77", "-41.3894, -49.9645, -124.338, 1.77", "-41.126, -51.3641, -125.774, 0.29", "-41.0892, -51.9239, -126.34, 0.29", "-41.1013, -52.4984, -126.901, 0.29", "-41.1381, -53.3736, -127.708, 1.62", "-41.1276, -53.9554, -128.222, 1.69", "-40.8507, -56.3721, -130.267, 0.29", "-40.6873, -57.1267, -130.875, 0.29", "-40.4896, -57.7522, -131.355, 0.29", "-39.9211, -59.1619, -132.349, 1.25", "-39.3481, -60.2831, -133.053, 0.66", "-38.7783, -61.1955, -133.51, 0.29", "-38.3174, -61.8115, -133.716, 1.03", "-37.9096, -62.2984, -133.869, 1.03", "-37.4191, -62.8784, -134.017, 0.44", "-36.7669, -63.6401, -134.137, 0.29", "-36.3704, -64.1039, -134.198, 0.88", "-36.1267, -64.401, -134.236, 1.33", "-34.8463, -66.1298, -134.579, 0.29", "-34.4765, -66.7276, -134.729, 0.96", "-34.2957, -67.091, -134.836, 0.81", "-34.0291, -67.7728, -135.079, 0.37", "-33.7338, -68.6501, -135.434, 0.66", "-33.3925, -69.7628, -135.909, 0.52", "-33.1915, -70.4562, -136.219, 0.88", "-33.0155, -70.9791, -136.491, 0.88", "-32.3029, -72.5762, -137.538, 0.44", "-32.0178, -73.1191, -137.975, 0.37", "-31.5716, -73.8606, -138.657, 0.29", "-31.1954, -74.4031, -139.182, 0.96", "-30.5649, -75.2325, -140.033, 1.03", "-29.3022, -76.849, -141.708, 0.74", "-28.5863, -77.789, -142.651, 1.33", "-28.0377, -78.5727, -143.379, 1.11", "-27.5809, -79.3194, -144.002, 0.44", "-27.3108, -79.8623, -144.379, 0.81", "-27.0361, -80.5508, -144.74, 0.88", "-26.6369, -81.7477, -145.21, 0.22", "-26.3583, -82.4959, -145.492, 0.22", "-26.2042, -82.8862, -145.661, 0.59", "-25.9977, -83.4004, -145.919, 0.59", "-25.3993, -84.7905, -146.684, 0.37", "-25.0169, -85.5588, -147.175, 0.59", "-24.4517, -86.6118, -147.909, 0.44", "-24.1288, -87.149, -148.346, 0.74", "-23.9008, -87.5221, -148.678, 0.74", "-23.5236, -88.1772, -149.296, 0.37", "-22.8589, -89.2849, -150.518, 0.96", "-22.5497, -89.7493, -151.111, 0.88", "-21.6392, -91.0908, -153.035, 0.66", "-21.3078, -91.561, -153.764, 0.96", "-21.0003, -91.9962, -154.475, 0.96", "-19.8892, -93.6205, -157.198, 0.66", "-19.1379, -94.8378, -159.15, 0.66", "-18.3029, -96.3174, -161.393, 0.44", "-17.867, -97.2507, -162.647, 0.74", "-17.6718, -97.7575, -163.244, 0.37", "-17.5019, -98.3711, -163.84, 0.81", "-17.3882, -99.5408, -164.65, 0.22", "-17.3816, -100.114, -164.947, 0.81", "-17.4214, -101.244, -165.338, 0.22", "-17.5168, -102.649, -165.714, 0.22", "-17.5562, -103.279, -165.872, 0.88", "-17.5874, -103.754, -165.999, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-74.4664, -65.1691, -83.8743, 0.96", "-75.5284, -66.0572, -85.5473, 0.96", "-76.3053, -66.6534, -86.4834, 0.22", "-76.7033, -66.9588, -86.9629, 0.52", "-77.0164, -67.1991, -87.3402, 0.66", "-77.4842, -67.5582, -87.904, 0.44", "-78.0142, -67.9649, -88.5426, 1.33", "-78.8926, -68.4217, -89.1655, 1.84" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-74.4664, -65.1691, -83.8743, 0.37", "-76.0799, -64.3162, -83.7032, 0.37", "-76.6402, -64.0475, -83.6376, 0.37", "-77.5804, -63.5968, -83.5275, 0.22", "-78.0882, -63.3533, -83.4681, 1.03", "-78.6097, -63.1033, -83.407, 1.77", "-79.2313, -62.8053, -83.3342, 2.14", "-79.6247, -62.6387, -83.3411, 2.14" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "49.4091, -72.7385, -37.3513, 0.44", "50.3797, -72.2958, -37.4004, 0.44", "50.9694, -71.954, -37.4426, 0.22", "51.4961, -71.5301, -37.5498, 0.22", "52.0895, -70.9967, -37.7645, 0.44", "52.2648, -70.8215, -37.8672, 0.81", "52.5425, -70.5274, -38.0592, 0.81", "52.7753, -70.2526, -38.3265, 0.37", "53.1821, -69.6764, -39.0367, 0.44", "53.3375, -69.4029, -39.5858, 0.59", "53.5108, -69.0295, -40.553, 0.15", "53.613, -68.8053, -41.2618, 0.29", "53.7976, -68.433, -42.6349, 1.18", "53.9021, -68.2474, -43.4236, 1.18", "54.3612, -67.5525, -46.5609, 0.74", "54.451, -67.4186, -47.1215, 0.74", "54.5825, -67.2355, -47.8363, 0.96", "54.7081, -67.0623, -48.4252, 0.96", "54.948, -66.7193, -49.2948, 0.52", "55.2643, -66.2169, -50.2081, 0.29", "55.5777, -65.7072, -50.8644, 0.29", "55.9878, -65.0196, -51.665, 1.33", "56.1942, -64.6688, -52.0319, 1.33", "56.6157, -63.9321, -52.7039, 0.44", "57.058, -63.1467, -53.3116, 0.37", "57.4239, -62.485, -53.733, 0.37", "57.5991, -62.1823, -53.8871, 0.37", "57.9313, -61.6294, -54.1112, 0.22", "58.6526, -60.4862, -54.5209, 1.55", "58.9705, -60.0192, -54.6651, 1.77", "59.7176, -58.9303, -55.0017, 0.37", "59.9601, -58.5204, -55.1256, 0.44", "60.1231, -58.1863, -55.2291, 0.44", "60.2751, -57.8205, -55.3509, 0.44", "60.6104, -56.9648, -55.6664, 0.29", "60.8238, -56.3919, -55.9023, 0.22", "61.0663, -55.7358, -56.1909, 0.22", "61.4907, -54.5909, -56.6858, 1.18", "61.7574, -53.8623, -56.9795, 1.4", "61.8545, -53.6031, -57.0759, 1.62", "61.9796, -53.2896, -57.1926, 1.62", "62.3346, -52.5868, -57.4955, 0.96", "62.6323, -52.0886, -57.7317, 0.59", "63.0889, -51.3832, -58.0919, 0.52", "63.5741, -50.6501, -58.4695, 0.37", "63.9619, -50.0913, -58.7672, 1.03", "64.8636, -48.9419, -59.4176, 0.22", "65.1982, -48.5874, -59.6294, 0.66", "65.4639, -48.363, -59.7686, 0.66", "66.1407, -47.9811, -60.0232, 0.29", "66.6992, -47.859, -60.1109, 0.29", "67.4965, -47.9646, -60.1927, 0.29", "68.4069, -48.3657, -60.2833, 1.33", "68.8326, -48.6695, -60.3898, 1.47", "69.5056, -49.2669, -60.6657, 0.74", "70.0379, -49.7872, -60.9648, 0.44", "71.3567, -51.0501, -61.8945, 0.96", "71.7421, -51.3892, -62.2132, 0.74", "72.7119, -52.1655, -63.0812, 0.29", "73.2431, -52.5146, -63.5345, 0.52", "73.9131, -52.8601, -64.042, 0.29", "74.616, -53.1346, -64.4787, 0.66", "75.075, -53.256, -64.6913, 0.66", "75.7082, -53.361, -64.9931, 0.29", "76.7861, -53.4707, -65.5018, 0.96", "77.4748, -53.5517, -65.8373, 0.29", "78.1969, -53.6409, -66.2125, 1.11", "79.3308, -53.7684, -66.8261, 0.37", "80.4757, -53.8636, -67.4645, 0.96", "81.2515, -53.8937, -67.9115, 0.52", "81.9556, -53.9029, -68.3255, 0.96", "82.2201, -53.8987, -68.4761, 0.96", "83.2372, -53.8841, -69.0259, 0.29", "83.7168, -53.8769, -69.25, 0.81", "84.082, -53.862, -69.3861, 0.81", "84.8985, -53.7843, -69.6684, 0.29", "85.5429, -53.6839, -69.8777, 0.81" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "49.4091, -72.7385, -37.3513, 0.74", "50.1417, -74.1198, -36.8649, 0.74", "50.7972, -75.106, -36.4052, 0.81", "51.5645, -76.0753, -35.8715, 0.81", "52.4848, -77.0699, -35.2626, 0.59", "53.2921, -77.8057, -34.7709, 0.37", "53.7914, -78.1862, -34.4767, 0.37", "54.8579, -78.8396, -33.8158, 0.88", "55.302, -79.048, -33.5647, 0.88", "55.8265, -79.2735, -33.278, 0.88", "56.534, -79.6204, -32.9304, 0.29", "57.7408, -80.4125, -32.3745, 0.29", "58.3719, -80.9965, -32.1012, 1.03", "58.7876, -81.4478, -31.9237, 1.33", "59.4898, -82.2293, -31.6048, 1.18", "60.3404, -83.1338, -31.2117, 1.03", "61.0285, -83.787, -30.9024, 0.81", "62.1717, -84.6116, -30.4152, 0.37", "63.4106, -85.224, -29.8945, 0.96", "64.1972, -85.491, -29.5805, 1.18", "65.0476, -85.6669, -29.2358, 1.18", "65.8611, -85.7425, -28.9238, 0.88", "67.1301, -85.7436, -28.5396, 0.44", "67.7442, -85.7022, -28.4506, 0.44", "68.8902, -85.5982, -28.4822, 0.37", "69.8204, -85.5151, -28.6692, 0.37", "71.1478, -85.4334, -29.1374, 0.66", "72.1278, -85.4239, -29.5788, 1.03", "73.3753, -85.4174, -30.258, 0.74", "74.2261, -85.4159, -30.777, 0.52", "75.3014, -85.4106, -31.5229, 0.44", "76.1705, -85.4478, -32.1801, 0.44", "77.0584, -85.5602, -32.8126, 0.37" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-7.77213, 240.98, -37.2023, 0.29", "-8.03025, 243.908, -37.9808, 0.29", "-7.9999, 244.569, -38.0748, 0.29", "-7.95538, 245.273, -38.1104, 0.66", "-7.95888, 246.02, -38.0652, 0.88", "-8.02742, 246.911, -37.9487, 0.88", "-8.23512, 248.456, -37.49, 0.52", "-8.44075, 249.656, -36.7971, 0.66", "-8.61309, 250.381, -36.1843, 0.81", "-8.93803, 251.431, -35.1183, 0.37", "-9.22464, 252.172, -34.2976, 0.52", "-9.92375, 253.672, -32.5315, 0.74", "-10.5035, 254.714, -31.2895, 1.03", "-11.6327, 256.492, -29.1098, 1.03", "-12.1842, 257.324, -28.1005, 0.74", "-12.6222, 258.016, -27.3059, 0.44", "-13.0404, 258.704, -26.5522, 0.44", "-13.7161, 259.841, -25.4249, 0.44", "-14.7335, 261.596, -23.8176, 0.88", "-15.2728, 262.584, -22.9979, 1.18", "-15.6252, 263.29, -22.401, 0.52", "-15.9676, 264.077, -21.7351, 0.52", "-16.3639, 265.201, -20.851, 0.59", "-16.584, 266.007, -20.3192, 0.81", "-16.8318, 267.029, -19.8445, 0.29", "-17.0293, 267.64, -19.6002, 0.29", "-17.3686, 268.337, -19.3152, 0.66", "-17.7839, 268.935, -18.9647, 0.66", "-18.1597, 269.419, -18.5813, 0.37", "-18.5147, 269.889, -18.1235, 0.66", "-18.9538, 270.547, -17.4683, 0.81", "-19.3055, 271.182, -16.8803, 0.74", "-20.1748, 273.186, -15.1538, 0.44", "-20.4346, 274.073, -14.4668, 0.37", "-20.5436, 274.888, -13.944, 0.37", "-20.5342, 276.01, -13.3868, 0.29", "-20.4376, 276.872, -13.0363, 0.15", "-20.3021, 277.545, -12.8395, 0.44", "-20.1982, 277.903, -12.8044, 0.44", "-20.1082, 278.231, -12.7771, 0.44", "-19.7203, 280.399, -12.4165, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-7.77213, 240.98, -37.2023, 0.74", "-7.81642, 242.026, -37.7585, 0.74", "-7.90062, 242.948, -38.2087, 0.74", "-8.09664, 244.436, -38.8915, 0.96", "-8.28736, 245.527, -39.316, 0.96", "-8.57332, 246.822, -39.7228, 0.74", "-9.03091, 248.621, -40.1913, 0.59", "-9.28947, 249.502, -40.3417, 0.81", "-9.63207, 250.674, -40.455, 0.81", "-10.0424, 252.165, -40.4957, 0.81", "-10.4087, 253.811, -40.4579, 0.96", "-10.5886, 254.927, -40.3984, 0.96", "-10.7441, 256.81, -40.2977, 0.74", "-10.7406, 257.844, -40.2501, 1.03", "-10.6695, 258.589, -40.2311, 1.03", "-10.456, 259.852, -40.268, 1.03", "-10.3233, 260.514, -40.3133, 1.03", "-10.1588, 261.516, -40.4209, 1.03", "-10.0968, 262.374, -40.5179, 1.03", "-10.1143, 263.368, -40.6452, 0.96", "-10.2496, 264.466, -40.7922, 0.74", "-10.4345, 265.36, -40.9263, 0.74", "-10.7168, 266.411, -41.078, 0.88", "-11.1539, 267.758, -41.2558, 1.11", "-11.5255, 268.772, -41.39, 1.11", "-12.1593, 270.417, -41.5973, 0.96", "-12.4942, 271.318, -41.6976, 0.96", "-12.8037, 272.2, -41.7737, 0.96", "-13.0666, 272.955, -41.8186, 0.96", "-13.4092, 273.915, -41.8503, 0.81", "-13.8104, 275.079, -41.8612, 0.96", "-14.0868, 275.951, -41.8373, 0.96", "-14.3885, 276.98, -41.7499, 0.96", "-14.5784, 277.755, -41.6529, 1.25", "-14.7628, 278.68, -41.4763, 1.25", "-14.9623, 280.037, -41.1302, 1.11", "-15.056, 281.189, -40.8258, 0.88", "-15.0491, 282.387, -40.5193, 0.74", "-14.9667, 283.201, -40.3451, 1.18", "-14.7864, 284.168, -40.1656, 1.18", "-14.6533, 284.774, -40.053, 1.18", "-14.4245, 285.875, -39.8413, 0.96", "-14.2885, 286.687, -39.7228, 0.81", "-14.1915, 287.58, -39.633, 0.81", "-14.1367, 288.606, -39.5455, 0.81", "-14.1123, 289.897, -39.4592, 0.81", "-14.1341, 290.927, -39.3888, 1.11", "-14.1902, 292.022, -39.3277, 1.11", "-14.2751, 293.18, -39.3577, 0.96", "-14.3849, 294.378, -39.4862, 0.96", "-14.566, 295.993, -39.8144, 0.88", "-14.7514, 297.453, -40.2516, 0.88", "-14.9246, 298.677, -40.7141, 0.88", "-15.1992, 300.568, -41.533, 0.88", "-15.407, 301.977, -42.1809, 1.11", "-15.5781, 303.14, -42.7406, 1.11", "-15.7329, 304.219, -43.2061, 1.11", "-15.865, 305.465, -43.6276, 0.81", "-15.9681, 307.42, -44.086, 1.11", "-15.9571, 308.251, -44.1855, 1.11", "-15.8426, 309.636, -44.286, 1.11", "-15.5777, 311.722, -44.3702, 0.96", "-15.3339, 313.316, -44.406, 0.96", "-15.1621, 314.388, -44.4624, 0.96", "-15.0219, 315.294, -44.5689, 0.96", "-14.7379, 316.978, -44.843, 0.81", "-14.5219, 318.095, -45.0684, 0.81", "-14.2652, 319.391, -45.3798, 0.66", "-13.8792, 321.388, -45.8952, 0.66", "-13.591, 323.031, -46.3184, 0.66", "-13.3217, 325.058, -46.8402, 1.03", "-13.2473, 325.995, -47.0646, 1.03", "-13.1877, 327.812, -47.5415, 0.81", "-13.2085, 328.91, -47.847, 0.81", "-13.2874, 330.05, -48.1698, 0.96", "-13.4632, 331.721, -48.6693, 0.66", "-13.6224, 332.926, -49.0512, 0.88", "-13.791, 334.321, -49.473, 0.88", "-13.9401, 335.833, -49.8784, 0.88", "-14.0644, 337.547, -50.2646, 1.03", "-14.0848, 338.493, -50.47, 1.03", "-14.0631, 339.455, -50.6691, 1.03", "-13.9918, 341.133, -50.9783, 0.81", "-13.9304, 342.73, -51.2146, 0.81", "-13.9137, 343.795, -51.3612, 0.81", "-13.95, 345.989, -51.6346, 0.81", "-14.0659, 347.61, -51.832, 1.25", "-14.1429, 348.187, -51.91, 1.33", "-14.3147, 349.148, -52.065, 1.33", "-14.533, 350.235, -52.2666, 1.18", "-14.7204, 351.153, -52.4647, 0.74", "-15.0084, 352.483, -52.7637, 0.66", "-15.2204, 353.542, -53.0376, 0.96", "-15.378, 354.501, -53.3129, 0.96", "-15.4717, 355.344, -53.5457, 0.66", "-15.5344, 356.479, -53.7942, 0.66", "-15.5762, 357.933, -54.0278, 0.66", "-15.5992, 359.081, -54.1503, 0.96", "-15.6414, 359.985, -54.2333, 0.96", "-15.7295, 360.954, -54.3546, 0.74", "-15.975, 363.096, -54.6969, 0.74", "-16.066, 363.791, -54.8213, 0.88", "-16.3107, 365.589, -55.1916, 0.96", "-16.547, 367.276, -55.5514, 0.81", "-16.7896, 369.008, -55.9397, 0.66", "-16.9746, 370.522, -56.2998, 0.81", "-17.0974, 371.728, -56.5648, 0.96", "-17.2265, 373.55, -56.9153, 0.74", "-17.279, 374.464, -57.0546, 1.03", "-17.3535, 375.642, -57.1454, 1.03", "-17.4926, 377.349, -57.1996, 1.33", "-17.6091, 378.439, -57.2264, 1.55", "-17.8304, 380.221, -57.2699, 0.81", "-18.0167, 381.433, -57.3077, 0.66", "-18.2372, 382.655, -57.3743, 0.66", "-18.4186, 383.538, -57.4548, 0.66", "-18.7006, 384.878, -57.6342, 0.66", "-18.9001, 385.993, -57.8163, 0.66", "-19.0719, 387.205, -58.0041, 1.25", "-19.1248, 387.75, -58.0922, 1.03", "-19.198, 389.225, -58.3482, 0.81", "-19.2192, 390.545, -58.5602, 0.81", "-19.2035, 391.998, -58.7904, 0.66", "-19.1501, 393.225, -58.9686, 0.66", "-19.0635, 394.443, -59.1257, 0.96", "-18.9728, 395.515, -59.2485, 1.4", "-18.8939, 396.376, -59.3349, 1.4", "-18.8461, 397.012, -59.3976, 1.4", "-18.799, 398.146, -59.5123, 0.88", "-18.754, 399.549, -59.6615, 0.74", "-18.7181, 400.467, -59.7669, 0.74", "-18.6601, 401.989, -59.9541, 0.74", "-18.5977, 403.277, -60.1239, 0.66", "-18.5093, 404.723, -60.3308, 0.66", "-18.3682, 406.69, -60.6375, 0.66", "-18.2407, 408.12, -60.8627, 0.74", "-18.1405, 409.005, -61.0037, 0.74", "-17.9943, 410.055, -61.1725, 0.96", "-17.8487, 410.992, -61.3165, 1.11", "-17.7397, 411.695, -61.4263, 1.11", "-17.5905, 412.897, -61.6177, 0.74", "-17.48, 413.935, -61.7962, 0.59", "-17.3458, 415.111, -61.9979, 0.59", "-17.1952, 416.228, -62.2016, 0.88", "-17.1206, 416.778, -62.3124, 1.25", "-17.0157, 417.601, -62.4955, 1.4", "-16.9508, 418.176, -62.6361, 1.4", "-16.8825, 419.044, -62.8592, 0.88", "-16.8351, 420.086, -63.1385, 0.66", "-16.8245, 421.45, -63.506, 0.66", "-16.8404, 422.469, -63.7587, 0.66", "-16.8659, 423.155, -63.9186, 0.52", "-16.9331, 424.465, -64.2056, 0.81", "-16.9965, 425.482, -64.4297, 0.81", "-17.0546, 426.48, -64.6381, 0.66", "-17.1018, 427.996, -64.9354, 0.59", "-17.1092, 428.834, -65.0855, 0.88", "-17.0972, 429.83, -65.2581, 1.11", "-17.0671, 430.821, -65.4203, 1.11", "-17.0312, 431.614, -65.5445, 1.11", "-16.9856, 432.34, -65.6544, 0.88", "-16.9114, 433.218, -65.8005, 0.52", "-16.8242, 434.102, -65.9472, 0.81", "-16.7357, 435.001, -66.0794, 0.81", "-16.6915, 435.533, -66.1394, 0.81", "-16.6245, 436.486, -66.2372, 0.96", "-16.5641, 437.672, -66.3497, 0.59", "-16.526, 438.52, -66.4266, 0.44", "-16.4701, 439.76, -66.5188, 0.44", "-16.4241, 440.704, -66.5787, 1.11", "-16.4068, 441.132, -66.6019, 1.4", "-16.4043, 442.057, -66.6317, 1.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-20.1688, 202.392, -37.8919, 0.29", "-21.0677, 203.783, -38.012, 0.29", "-21.837, 204.954, -38.2311, 0.52", "-22.3945, 205.778, -38.4302, 0.52", "-23.4204, 207.321, -38.844, 0.66", "-23.8221, 207.941, -39.0223, 0.66", "-24.1976, 208.584, -39.1622, 0.37", "-25.0358, 210.423, -39.3693, 0.29", "-25.2451, 211.109, -39.3881, 0.59", "-25.4112, 211.956, -39.3701, 0.81", "-25.4696, 212.482, -39.3241, 0.81", "-25.6263, 214.719, -39.013, 0.74", "-25.6834, 215.925, -38.7839, 0.74", "-25.7547, 217.42, -38.4151, 0.44", "-25.8366, 218.415, -38.1874, 0.29", "-25.9608, 219.408, -37.9968, 0.29", "-26.0754, 220.07, -37.9071, 0.52", "-26.2459, 220.834, -37.8868, 0.52", "-26.4715, 221.755, -37.9218, 0.52", "-26.8676, 223.217, -38.044, 0.74", "-27.1267, 224.106, -38.1566, 0.96", "-27.314, 224.751, -38.2617, 0.96", "-27.5645, 225.669, -38.4337, 0.59", "-27.8412, 226.783, -38.6713, 0.37", "-28.0825, 227.807, -38.9911, 0.22", "-28.2189, 228.483, -39.2534, 0.22", "-28.3191, 229.118, -39.5119, 0.74", "-28.4472, 230.043, -39.9044, 1.03", "-28.5162, 230.536, -40.1086, 1.03", "-28.7766, 232.4, -40.8524, 0.44", "-28.9427, 233.69, -41.3746, 0.44", "-29.0775, 234.861, -41.8039, 0.37", "-29.1953, 235.929, -42.1634, 0.37", "-29.2953, 236.948, -42.4716, 0.37", "-29.3657, 238.037, -42.7456, 0.37", "-29.3778, 239.095, -42.9736, 0.37", "-29.3019, 240.765, -43.3922, 0.88", "-29.2068, 241.607, -43.6203, 1.18", "-29.1035, 242.231, -43.7977, 1.18", "-28.8906, 243.233, -44.0944, 0.74", "-28.5812, 244.529, -44.4702, 0.52", "-28.2927, 245.74, -44.8059, 0.44", "-27.9576, 247.085, -45.177, 0.37", "-27.7703, 247.801, -45.361, 0.37", "-27.4571, 248.915, -45.6161, 0.37", "-27.0456, 250.263, -45.8736, 0.59", "-26.7655, 251.11, -45.9941, 1.03", "-26.4867, 251.902, -46.0878, 1.03", "-26.1892, 252.759, -46.1743, 0.96", "-25.8277, 253.95, -46.26, 0.29", "-25.5709, 255.053, -46.3496, 0.29", "-25.4764, 255.679, -46.4126, 0.52", "-25.4329, 256.277, -46.47, 0.52", "-25.4329, 256.995, -46.5362, 0.29", "-25.4963, 257.987, -46.6343, 0.52", "-25.5986, 259.189, -46.7378, 0.66", "-25.6245, 260.225, -46.808, 0.66", "-25.5729, 261.197, -46.88, 0.52", "-25.5002, 261.861, -46.9465, 0.81", "-25.4028, 262.6, -47.0693, 1.11", "-25.2609, 263.759, -47.3245, 0.15", "-25.1308, 264.871, -47.5984, 0.15", "-25.0376, 265.638, -47.8177, 0.52", "-24.8752, 266.932, -48.2409, 0.59", "-24.6922, 268.371, -48.7457, 0.29", "-24.5669, 269.511, -49.1539, 0.29", "-24.4957, 270.455, -49.5131, 0.96", "-24.4696, 270.978, -49.7042, 0.96", "-24.4071, 271.836, -49.9801, 0.59", "-24.3255, 272.625, -50.2254, 0.22", "-24.2045, 273.748, -50.5438, 0.22", "-24.1178, 274.702, -50.8216, 0.88", "-24.0928, 275.256, -50.9788, 0.88", "-24.094, 275.949, -51.1616, 0.88", "-24.1559, 277.119, -51.4565, 0.29", "-24.2912, 278.282, -51.7246, 0.22", "-24.3845, 278.795, -51.8126, 0.22", "-24.6472, 279.902, -51.9106, 0.81", "-24.777, 280.474, -51.92, 1.11", "-24.8393, 280.809, -51.9095, 1.11", "-24.9213, 281.777, -51.9077, 0.88", "-24.9164, 282.719, -51.974, 0.59", "-24.8413, 283.801, -52.1076, 0.29", "-24.6725, 285.322, -52.3518, 0.29", "-24.5391, 286.541, -52.568, 0.74", "-24.3791, 288.428, -52.9736, 0.52", "-24.3168, 289.592, -53.2927, 1.03", "-24.3155, 290.503, -53.5964, 1.03", "-24.3674, 291.069, -53.7998, 0.74", "-24.6582, 292.275, -54.2522, 0.44", "-25.1094, 293.527, -54.6608, 0.88", "-25.4387, 294.332, -54.8712, 1.18", "-25.6025, 294.732, -54.9832, 1.18", "-25.9463, 295.642, -55.2458, 0.59", "-26.3793, 296.997, -55.6458, 0.29", "-26.732, 298.407, -56.0516, 0.81", "-27.0093, 299.77, -56.4017, 0.52", "-27.1794, 300.664, -56.6199, 0.52", "-27.3453, 301.542, -56.8386, 0.74", "-27.5632, 302.642, -57.0965, 0.74", "-27.827, 303.867, -57.3297, 0.22", "-27.9547, 304.313, -57.411, 0.22", "-28.1904, 305.007, -57.5223, 0.52", "-28.3555, 305.501, -57.5845, 0.52", "-28.6585, 306.453, -57.7191, 0.29", "-28.8971, 307.263, -57.8433, 0.29", "-29.1691, 308.262, -58.0122, 1.03", "-29.366, 309.109, -58.1615, 1.03", "-29.4801, 309.699, -58.2518, 1.03", "-29.6049, 310.569, -58.3569, 0.52", "-29.6592, 311.3, -58.4261, 0.29", "-29.686, 312.057, -58.4608, 0.59", "-29.6745, 312.571, -58.4519, 0.59", "-29.5952, 313.644, -58.4121, 0.22", "-29.4709, 314.728, -58.3668, 0.81", "-29.3571, 315.435, -58.3429, 1.03", "-29.3084, 315.684, -58.3403, 1.03", "-29.106, 316.73, -58.3475, 0.59", "-28.9395, 317.766, -58.3608, 0.37", "-28.8783, 318.35, -58.3572, 0.37", "-28.8653, 319.141, -58.3259, 0.66", "-28.8906, 319.646, -58.2898, 0.66", "-29.0801, 321.073, -58.1611, 0.29", "-29.2272, 321.768, -58.0954, 0.29", "-29.5066, 322.856, -57.9923, 0.74", "-29.7249, 323.683, -57.9142, 0.74", "-29.9568, 324.584, -57.8257, 0.74", "-30.2359, 325.806, -57.7021, 0.29", "-30.4417, 326.896, -57.5935, 0.29", "-30.6161, 328.483, -57.4489, 1.33", "-30.624, 329.282, -57.3709, 1.33", "-30.5429, 330.413, -57.2719, 1.11", "-30.3945, 331.371, -57.1981, 0.59", "-30.1351, 332.384, -57.165, 0.44", "-29.4941, 334.383, -57.2675, 0.29", "-28.9535, 335.779, -57.4904, 0.74", "-28.6365, 336.574, -57.7081, 0.81", "-28.3785, 337.238, -57.966, 0.44", "-27.9282, 338.509, -58.5791, 0.22", "-27.5815, 339.603, -59.19, 0.81", "-27.4422, 340.097, -59.505, 0.81", "-27.1935, 341.094, -60.1759, 0.22", "-27.0054, 341.887, -60.6775, 0.22", "-26.7945, 342.859, -61.2716, 0.81", "-26.7352, 343.138, -61.4238, 0.81", "-26.5014, 344.116, -61.9204, 0.29", "-26.2874, 344.924, -62.3151, 0.88", "-26.0021, 345.824, -62.7325, 0.88", "-25.54, 347.233, -63.3365, 0.22", "-25.2451, 348.228, -63.7121, 0.74", "-25.1622, 348.551, -63.8147, 0.88", "-24.9601, 349.691, -64.1245, 0.15", "-24.8361, 350.637, -64.3477, 0.52", "-24.759, 351.47, -64.525, 0.22", "-24.7202, 352.298, -64.7116, 0.66", "-24.7218, 352.71, -64.8211, 0.88", "-24.8298, 354.379, -65.3072, 0.22", "-24.8941, 354.884, -65.4601, 0.59", "-25.0189, 355.599, -65.6868, 0.44", "-25.2102, 356.589, -65.9748, 0.22", "-25.3277, 357.195, -66.1257, 0.37", "-25.5421, 358.276, -66.33, 0.15", "-25.7573, 359.341, -66.4511, 0.81", "-25.8801, 359.965, -66.4978, 1.11", "-26.0565, 360.943, -66.5349, 1.03", "-26.1992, 361.865, -66.5421, 0.29", "-26.3293, 362.778, -66.5551, 0.29", "-26.4557, 363.61, -66.5729, 0.29", "-26.6936, 365.1, -66.6249, 0.22", "-26.8485, 366.007, -66.6659, 0.74", "-27.2129, 367.991, -66.7949, 0.22", "-27.4509, 369.176, -66.8757, 0.81", "-27.9695, 371.61, -67.0479, 0.22", "-28.0626, 372.035, -67.0789, 0.22", "-28.2526, 372.924, -67.1463, 0.81", "-28.3129, 373.252, -67.1705, 1.03", "-28.4312, 374.032, -67.2187, 0.22", "-28.5253, 374.775, -67.2379, 0.44", "-28.6167, 375.716, -67.2375, 0.22", "-28.678, 376.433, -67.231, 0.44", "-28.7426, 377.345, -67.213, 0.22", "-28.8182, 378.245, -67.1837, 0.44", "-28.9225, 379.183, -67.1281, 0.59", "-29.0907, 380.169, -67.0874, 0.29", "-29.391, 381.435, -67.0833, 0.44", "-29.7743, 382.733, -67.1125, 0.44", "-30.3547, 384.515, -67.1988, 0.81", "-30.6852, 385.495, -67.3105, 0.96", "-31.1439, 386.787, -67.5637, 0.66", "-31.8334, 388.421, -67.972, 0.29", "-32.0919, 388.941, -68.1339, 0.44", "-32.5504, 389.785, -68.4576, 0.15", "-33.226, 390.962, -69.0069, 0.44", "-33.6876, 391.793, -69.432, 0.44", "-34.1536, 392.692, -69.8618, 0.15", "-34.3369, 393.021, -70.0466, 0.74" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-20.1688, 202.392, -37.8919, 0.22", "-19.2284, 203.982, -39.3557, 0.22", "-18.6874, 204.669, -40.0096, 0.22", "-18.164, 205.333, -40.6421, 0.22", "-17.6168, 206.027, -41.3035, 0.22", "-17.1799, 206.581, -41.8316, 0.44", "-16.3399, 207.646, -42.8467, 0.74", "-15.7015, 208.457, -43.4775, 0.88" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-68.729, 107.809, -15.9485, 0.29", "-69.5774, 107.473, -16.4469, 0.29", "-70.0893, 107.27, -16.7476, 0.29", "-70.8438, 106.971, -17.1908, 0.29", "-71.6746, 106.642, -17.679, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-68.729, 107.809, -15.9485, 0.22", "-69.4423, 108.816, -16.047, 0.22", "-69.811, 109.336, -16.0979, 0.66", "-69.9759, 109.569, -16.1207, 0.66", "-70.2869, 110.008, -16.1636, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-84.0037, 38.1237, -201.08, 0.22", "-82.4939, 41.1034, -202.23, 0.22", "-82.129, 41.8235, -202.508, 0.22", "-81.4243, 43.2142, -203.045, 0.88", "-81.1975, 43.6618, -203.217, 0.66", "-81.0021, 44.0475, -203.366, 0.66" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-84.0037, 38.1237, -201.08, 0.22", "-84.5132, 39.503, -202.073, 0.22", "-84.7567, 39.9924, -202.52, 0.44", "-85.2522, 40.8549, -203.431, 0.22", "-85.4537, 41.1723, -203.784, 0.59", "-86.0128, 42.0335, -204.712, 0.29", "-86.7064, 43.1019, -205.863, 0.29", "-87.1026, 43.6157, -206.504, 0.29", "-87.4232, 43.9734, -207.041, 0.59", "-87.8861, 44.4051, -207.853, 0.22", "-88.2773, 44.7445, -208.523, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-78.8926, -68.4217, -89.1655, 0.37", "-78.5565, -69.6507, -90.6299, 0.37", "-78.2947, -70.5136, -91.6295, 0.15", "-78.0374, -71.2556, -92.4103, 0.44", "-77.8068, -71.9061, -93.0539, 0.44", "-77.4738, -72.8399, -93.9384, 0.22", "-77.1963, -73.6523, -94.6702, 1.03", "-77.0922, -73.9872, -94.9213, 1.03", "-76.74, -75.2526, -95.7216, 0.29", "-76.5298, -76.1347, -96.2217, 1.03", "-76.368, -77.0085, -96.6463, 1.03", "-76.244, -77.9147, -97.0303, 0.29", "-76.1062, -79.1786, -97.4967, 0.29", "-76.0433, -79.9075, -97.7234, 0.81", "-76.0057, -80.6397, -97.9137, 0.52", "-75.9489, -82.3184, -98.3001, 0.29", "-75.9243, -83.7285, -98.5967, 0.74", "-75.9304, -84.5607, -98.7216, 1.03", "-75.9809, -86.365, -98.9153, 0.22", "-76.0213, -87.1983, -98.9687, 0.22", "-76.0569, -87.6391, -98.9762, 0.59", "-76.0927, -87.9743, -98.9784, 0.59", "-76.3009, -89.9619, -99.0121, 0.59", "-76.3871, -90.9322, -99.1191, 0.37", "-76.5135, -92.4097, -99.3917, 1.25", "-76.551, -92.9474, -99.5134, 1.47", "-76.6512, -94.3335, -99.8831, 0.37", "-76.7395, -95.2278, -100.185, 1.03", "-76.9376, -96.7379, -100.839, 0.29", "-77.0531, -97.3948, -101.126, 0.44", "-77.1209, -97.8331, -101.282, 0.66", "-77.1761, -98.3049, -101.414, 0.52", "-77.2816, -99.3235, -101.569, 0.29", "-77.3558, -100.303, -101.595, 0.74", "-77.3633, -100.73, -101.534, 0.74", "-77.311, -102.817, -101.156, 0.22", "-77.2696, -103.343, -101.05, 0.44", "-77.1798, -103.99, -100.885, 0.59", "-77.011, -105.098, -100.56, 0.37", "-76.8215, -106.41, -100.175, 0.74", "-76.7517, -107.107, -99.9906, 0.74", "-76.7145, -108.05, -99.8012, 0.29", "-76.6918, -109.662, -99.5558, 1.03", "-76.7059, -111.198, -99.4378, 0.22", "-76.7399, -111.813, -99.4312, 0.88", "-76.9062, -113.557, -99.5702, 0.29", "-77.0394, -114.623, -99.7058, 0.15", "-77.1722, -115.407, -99.8646, 0.74", "-77.4239, -116.533, -100.238, 1.03", "-77.6228, -117.3, -100.569, 1.11", "-78.0367, -118.711, -101.278, 0.22", "-78.1457, -119.063, -101.484, 0.59", "-78.2243, -119.341, -101.658, 0.59", "-78.5982, -120.801, -102.611, 0.22", "-78.6911, -121.311, -102.946, 0.74", "-78.7255, -121.885, -103.273, 0.74", "-78.621, -122.926, -103.701, 0.22", "-78.3254, -124.105, -104.076, 0.59", "-78.1476, -124.567, -104.206, 0.74", "-77.6119, -125.624, -104.482, 0.22", "-76.8966, -126.901, -104.759, 0.88", "-76.0066, -128.318, -105.006, 0.15", "-75.6596, -128.804, -105.056, 0.15", "-75.0594, -129.602, -105.055, 0.74", "-74.6405, -130.144, -105.044, 0.74" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-78.8926, -68.4217, -89.1655, 0.29", "-80.076, -67.8071, -88.7409, 0.29", "-81.1302, -67.3763, -88.4115, 0.29", "-82.2275, -67.0311, -88.0351, 0.29", "-82.7693, -66.8871, -87.8425, 0.29", "-83.9884, -66.6185, -87.3967, 0.52", "-84.7843, -66.4922, -87.1163, 0.74", "-85.5616, -66.4404, -86.8204, 0.37", "-86.593, -66.4494, -86.4508, 0.66", "-86.9978, -66.4852, -86.3298, 1.03", "-87.931, -66.6531, -86.0686, 1.03", "-89.1943, -67.0195, -85.7223, 0.22", "-89.9755, -67.3129, -85.5, 0.22", "-90.7574, -67.7354, -85.2115, 0.44", "-91.239, -68.0597, -85.0036, 0.44", "-91.9498, -68.6135, -84.6408, 0.29", "-92.5562, -69.1764, -84.2874, 1.11", "-92.8508, -69.489, -84.1, 1.25", "-94.0145, -70.8722, -83.3383, 0.66", "-94.6408, -71.6865, -82.9085, 0.22", "-94.9823, -72.1816, -82.6574, 0.22", "-95.3513, -72.8093, -82.3549, 0.22", "-95.6487, -73.3854, -82.12, 0.81", "-95.8801, -73.8627, -81.959, 0.81", "-96.1316, -74.408, -81.8342, 0.29", "-96.5367, -75.2519, -81.6677, 0.88", "-97.2382, -76.4853, -81.4398, 0.22", "-97.5574, -76.926, -81.3633, 0.52", "-98.0815, -77.5384, -81.2664, 0.29", "-98.4894, -77.9494, -81.2248, 0.66", "-99.3237, -78.6826, -81.2144, 0.29", "-99.7381, -79.0339, -81.2658, 0.96", "-99.9942, -79.2489, -81.3158, 0.96", "-100.892, -80.0224, -81.4848, 0.29", "-101.429, -80.51, -81.548, 1.33", "-101.953, -80.9868, -81.5633, 1.55", "-102.857, -81.7635, -81.5059, 0.29", "-103.321, -82.1389, -81.4335, 0.29", "-103.964, -82.6489, -81.2767, 0.52", "-104.792, -83.2573, -81.0464, 0.96", "-105.365, -83.6726, -80.8441, 0.44", "-106.082, -84.2019, -80.5255, 0.29", "-106.998, -84.8736, -80.0201, 0.88", "-107.586, -85.357, -79.6686, 0.96" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-79.6247, -62.6387, -83.3411, 0.29", "-80.0788, -63.3247, -83.9009, 0.29", "-80.6192, -64.1778, -84.2472, 0.29", "-81.1137, -64.9057, -84.4055, 0.81", "-81.5751, -65.512, -84.4589, 0.81", "-82.1187, -66.1255, -84.4021, 0.37", "-83.4826, -67.431, -83.996, 0.37", "-84.1825, -67.9375, -83.5814, 0.59", "-84.6801, -68.228, -83.2414, 0.88", "-85.2619, -68.523, -82.8191, 0.88", "-86.2333, -68.9869, -82.0754, 1.03", "-87.0612, -69.3913, -81.4147, 1.03", "-88.0992, -69.9666, -80.5217, 0.59", "-88.7374, -70.4378, -79.8688, 0.37", "-89.4121, -71.1633, -79.0209, 0.37", "-89.9113, -71.947, -78.2677, 0.66", "-90.22, -72.6347, -77.7342, 0.96", "-90.6884, -73.979, -76.837, 1.03", "-90.9992, -75.0102, -76.1961, 0.44", "-91.2642, -75.8266, -75.6742, 0.44", "-91.4333, -76.3384, -75.3521, 0.66", "-91.6325, -76.8968, -74.9905, 0.88", "-91.8615, -77.5306, -74.3849, 0.88", "-92.0772, -78.2471, -73.4682, 0.44", "-92.2013, -78.8351, -72.5253, 0.74", "-92.2232, -79.3191, -71.6593, 0.74", "-92.1334, -79.8488, -70.6409, 1.03", "-91.591, -81.2357, -67.7289, 0.44", "-91.3689, -81.567, -66.9498, 0.44", "-91.2452, -81.6858, -66.6027, 0.74", "-90.861, -81.9546, -65.616, 0.74", "-90.4847, -82.1455, -64.6106, 0.66", "-90.2519, -82.1828, -63.9863, 0.52", "-89.9794, -82.1248, -63.3062, 0.52", "-89.4995, -81.6818, -61.6063, 1.03", "-89.3195, -81.1042, -60.4561, 0.22", "-89.4222, -80.5061, -59.8853, 0.22", "-90.0177, -79.236, -59.2432, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-79.6247, -62.6387, -83.3411, 0.29", "-80.5198, -61.8991, -83.9, 0.29", "-80.9621, -61.5844, -84.0603, 0.29", "-81.3131, -61.3467, -84.1026, 0.66", "-81.7117, -61.0746, -84.1216, 0.66", "-82.2222, -60.7428, -84.1299, 0.44", "-82.7233, -60.4172, -84.138, 0.29", "-83.7305, -59.8263, -84.093, 0.59", "-84.5825, -59.3398, -83.9676, 1.03", "-85.2704, -58.947, -83.8022, 1.4", "-85.5691, -58.7778, -83.6988, 1.4" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "77.0584, -85.5602, -32.8126, 0.81", "78.0384, -86.1657, -33.7249, 0.81", "78.5662, -86.4987, -34.1787, 1.11", "81.3496, -88.1569, -36.3669, 0.44", "81.855, -88.421, -36.7313, 0.29", "82.4849, -88.7073, -37.1465, 0.29", "83.5989, -89.1709, -37.8496, 0.29", "84.3968, -89.4049, -38.3609, 0.59", "84.941, -89.5572, -38.8324, 0.74", "85.5912, -89.7171, -39.4158, 0.37", "86.313, -89.845, -40.1301, 0.81", "86.6886, -89.8842, -40.5154, 0.96", "88.145, -89.9729, -42.0657, 1.4", "90.871, -90.0415, -45.4423, 0.74", "91.5899, -90.0374, -46.4066, 0.29", "92.2565, -90.0208, -47.3361, 0.29", "92.642, -89.9973, -47.877, 0.66", "94.2054, -89.8606, -49.9726, 1.69", "97.0565, -89.5404, -53.5006, 1.18", "99.0306, -89.3294, -55.7216, 0.74", "100.1, -89.2872, -56.8896, 1.47", "100.511, -89.3105, -57.3081, 1.47", "101.575, -89.4733, -58.303, 0.29", "102.791, -89.8451, -59.1826, 0.29", "103.945, -90.502, -59.6619, 1.11", "104.957, -91.3429, -59.9313, 0.29", "105.579, -92.0005, -60.0455, 1.25", "105.926, -92.4116, -60.104, 1.25", "106.662, -93.355, -60.2225, 0.15", "107.116, -93.8648, -60.2939, 0.59", "107.423, -94.1012, -60.353, 0.59", "108.314, -94.6007, -60.5629, 0.22", "109.358, -95.0652, -60.8084, 1.84", "110.058, -95.3206, -60.9699, 1.84", "111.555, -95.766, -61.2957, 0.22", "112.491, -96.0258, -61.4628, 0.59", "113.61, -96.3538, -61.6206, 0.22", "114.477, -96.6416, -61.7089, 0.22", "115.376, -97.0295, -61.7424, 0.88", "115.864, -97.2799, -61.7368, 1.11", "117.206, -98.079, -61.6585, 0.22", "117.897, -98.5191, -61.5894, 1.33", "118.272, -98.7704, -61.5513, 1.55", "119.295, -99.5487, -61.4412, 0.22", "119.946, -100.101, -61.3667, 0.66", "120.276, -100.409, -61.3346, 0.66", "120.946, -101.091, -61.2954, 0.22", "121.555, -101.729, -61.2838, 0.44", "122.05, -102.259, -61.2963, 0.22", "122.532, -102.767, -61.3338, 0.96", "122.905, -103.162, -61.3354, 1.18", "124.132, -104.509, -61.2555, 0.15", "124.627, -105.046, -61.1874, 0.96", "124.993, -105.42, -61.1608, 0.96", "125.663, -106.085, -61.144, 0.15", "127.012, -107.426, -61.1711, 0.81", "127.716, -108.088, -61.2449, 0.81", "128.676, -108.917, -61.4182, 0.29", "130.279, -110.164, -61.8121, 0.44", "130.915, -110.593, -61.9973, 0.81", "131.415, -110.858, -62.1631, 0.81", "132.657, -111.329, -62.6744, 0.37", "133.494, -111.553, -63.0092, 0.29", "134.394, -111.736, -63.3231, 0.59", "135.295, -111.896, -63.5798, 0.44", "136.444, -112.073, -63.8921, 0.29", "137.871, -112.276, -64.24, 0.59", "138.76, -112.391, -64.488, 0.59", "139.547, -112.477, -64.7492, 0.29", "140.849, -112.586, -65.2157, 0.29", "141.637, -112.645, -65.5173, 0.29", "142.309, -112.701, -65.7421, 0.74", "143.94, -112.822, -66.1944, 0.74", "144.671, -112.889, -66.3873, 0.37", "145.135, -112.936, -66.5026, 1.03", "145.798, -113.005, -66.6531, 1.03", "147.151, -113.205, -66.9599, 0.29", "149.143, -113.603, -67.3629, 1.11", "150.619, -113.987, -67.5699, 0.44", "151.067, -114.123, -67.645, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "77.0584, -85.5602, -32.8126, 0.52", "77.9807, -85.5224, -32.2889, 0.52", "78.5841, -85.4571, -31.9684, 0.52", "79.2043, -85.3659, -31.6458, 0.81", "79.6802, -85.247, -31.4151, 0.81", "80.482, -84.965, -31.0494, 0.29", "81.0936, -84.6774, -30.797, 0.29", "81.6227, -84.2809, -30.6318, 0.88", "82.0504, -83.8333, -30.5259, 1.11", "82.5663, -83.1309, -30.4509, 0.44", "82.9508, -82.4275, -30.4556, 0.37", "83.2902, -81.6081, -30.5349, 0.37", "83.627, -80.5108, -30.6722, 0.66", "83.7863, -79.7948, -30.773, 1.03", "83.8889, -79.0419, -30.8609, 1.03", "83.9426, -77.852, -30.9111, 0.52", "83.9338, -77.4092, -30.8917, 0.37", "83.8969, -76.6749, -30.783, 1.03", "83.8758, -76.2356, -30.6645, 1.03", "83.8828, -75.2788, -30.3296, 0.29", "83.9708, -73.7483, -29.6632, 0.22", "84.0327, -73.2047, -29.3848, 0.66", "84.1049, -72.7425, -29.147, 0.52", "84.2332, -72.0695, -28.8406, 0.37", "84.4499, -71.155, -28.4663, 0.74", "84.625, -70.5679, -28.2374, 0.22", "84.8639, -69.8535, -27.9525, 0.88", "84.966, -69.4915, -27.8032, 0.88", "85.1994, -68.4751, -27.3886, 0.29", "85.285, -67.9545, -27.1888, 0.44", "85.3376, -67.4156, -26.9867, 0.29", "85.3822, -66.811, -26.8081, 0.29", "85.4094, -65.9166, -26.6234, 0.81", "85.4156, -65.2649, -26.5071, 1.03", "85.4114, -64.8131, -26.4444, 1.03", "85.3955, -64.3135, -26.4018, 0.22", "85.36, -63.3264, -26.3205, 0.22", "85.3452, -62.5271, -26.1933, 0.81", "85.3518, -62.1327, -26.0787, 0.81", "85.378, -61.5696, -25.7974, 0.44", "85.4302, -61.025, -25.4333, 0.44", "85.5156, -60.2807, -24.8411, 0.96", "85.5854, -59.5562, -24.1798, 0.96", "85.6253, -59.0748, -23.7372, 1.11", "85.6835, -58.3826, -23.1334, 0.29", "85.7379, -57.8382, -22.6697, 0.81", "85.8236, -57.2429, -22.185, 0.81", "85.9994, -56.4091, -21.5932, 0.44", "86.1752, -55.6058, -21.117, 1.11", "86.31, -55.0326, -20.8102, 1.11", "86.4175, -54.6194, -20.6082, 0.81", "86.5636, -54.1958, -20.3915, 0.52", "86.9814, -53.3681, -19.9414, 0.22", "87.5074, -52.6842, -19.5494, 0.22", "87.9778, -52.3084, -19.3048, 0.59", "88.1768, -52.2138, -19.2341, 0.59", "89.3928, -51.849, -18.9401, 0.52", "90.1265, -51.7242, -18.8053, 0.29", "91.1119, -51.6342, -18.6553, 0.52", "92.0836, -51.5579, -18.5415, 0.44", "92.7434, -51.4931, -18.4859, 0.81", "93.3017, -51.4063, -18.4438, 1.03", "94.3282, -51.1461, -18.3566, 0.29", "94.8276, -50.9743, -18.2702, 0.29", "95.3827, -50.7597, -18.1195, 0.81", "95.7607, -50.6181, -17.986, 0.81", "96.5087, -50.388, -17.6807, 0.52", "97.4483, -50.222, -17.2358, 0.15", "98.1635, -50.2404, -16.8385, 0.44", "98.6135, -50.3454, -16.5021, 0.74", "98.9316, -50.4524, -16.2119, 1.03", "99.2524, -50.5655, -15.8809, 1.03", "99.6969, -50.707, -15.3535, 0.88", "100.245, -50.7805, -14.6349, 0.37", "101.09, -50.5835, -13.5658, 0.81", "101.543, -50.3089, -13.0313, 0.81", "101.958, -49.8918, -12.4942, 0.29", "102.229, -49.5195, -12.1, 0.29", "102.589, -48.9194, -11.5459, 0.15", "102.897, -48.4317, -11.1181, 1.03", "103.098, -48.1642, -10.8626, 1.03", "103.96, -47.2798, -9.80631, 0.52", "104.453, -46.9031, -9.22325, 0.52", "105.02, -46.5975, -8.58747, 0.44", "106.018, -46.2234, -7.53571, 0.88", "106.647, -46.0413, -6.92774, 0.74", "107.287, -45.9003, -6.40265, 0.44", "107.742, -45.8377, -6.10503, 0.37", "108.361, -45.7852, -5.7539, 0.22", "108.904, -45.7766, -5.48653, 0.22", "109.64, -45.7643, -5.16155, 0.44", "110.116, -45.7403, -4.98084, 0.22", "110.753, -45.6888, -4.76072, 0.22", "111.396, -45.6373, -4.57075, 0.44", "112.462, -45.6163, -4.30884, 0.29" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-16.4043, 442.057, -66.6317, 0.74", "-16.1555, 444.228, -67.2895, 0.74", "-16.0711, 445.143, -67.5384, 0.52", "-15.9897, 446.047, -67.7477, 0.37", "-15.883, 447.484, -68.0515, 0.37", "-15.8471, 448.025, -68.1576, 0.59", "-15.7661, 449.176, -68.3625, 0.74", "-15.7265, 449.904, -68.4571, 0.74", "-15.6212, 451.29, -68.6572, 0.37", "-15.5386, 452.3, -68.8136, 0.37", "-15.3985, 454.049, -69.0891, 0.81", "-15.3082, 455.222, -69.2773, 0.96", "-15.2133, 456.416, -69.4627, 0.96", "-15.0895, 457.977, -69.7052, 0.66", "-15.0235, 458.89, -69.8503, 0.44", "-14.9735, 459.601, -69.9542, 0.44", "-14.9034, 460.94, -70.144, 0.44", "-14.868, 462.118, -70.3067, 0.81", "-14.8673, 462.932, -70.4202, 1.03", "-14.8835, 463.778, -70.5394, 1.03", "-14.9325, 465.199, -70.7653, 0.74", "-14.993, 466.304, -70.9618, 0.74", "-15.1286, 468.07, -71.2926, 0.44", "-15.3051, 469.811, -71.6477, 0.44", "-15.388, 470.652, -71.8374, 1.03", "-15.4582, 471.461, -72.0353, 1.18", "-15.5397, 472.761, -72.401, 0.52", "-15.5677, 474.01, -72.8125, 0.74", "-15.556, 475.268, -73.3019, 1.11", "-15.5152, 476.424, -73.7956, 0.44", "-15.4703, 477.45, -74.2629, 0.37", "-15.4038, 478.547, -74.7714, 0.37", "-15.2869, 480.089, -75.4812, 0.59", "-15.1905, 481.215, -75.9745, 0.96", "-15.1215, 482.019, -76.2837, 1.18", "-15.0662, 482.764, -76.518, 1.18", "-14.9323, 484.428, -76.9466, 0.44", "-14.8331, 485.594, -77.1536, 0.37", "-14.7504, 486.431, -77.2486, 0.59", "-14.6172, 487.478, -77.3447, 0.44", "-14.4295, 488.751, -77.486, 0.44", "-14.28, 489.692, -77.6084, 0.74", "-14.1717, 490.394, -77.7166, 0.74", "-14.0953, 490.93, -77.818, 0.74", "-13.9647, 492.009, -78.0571, 0.37", "-13.8346, 493.332, -78.3812, 1.18", "-13.7947, 493.823, -78.5025, 1.18", "-13.7075, 494.891, -78.7322, 0.88", "-13.6052, 495.969, -78.9259, 0.59", "-13.4608, 497.38, -79.1228, 0.88", "-13.3644, 498.413, -79.2352, 1.11", "-13.267, 499.463, -79.3165, 1.11", "-13.1217, 500.882, -79.4127, 0.52", "-12.9415, 502.294, -79.4884, 0.44", "-12.8144, 503.088, -79.5167, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-16.4043, 442.057, -66.6317, 0.29", "-16.5316, 442.735, -66.3426, 0.29", "-16.6483, 443.474, -66.0692, 0.66", "-16.7138, 443.902, -65.9131, 0.66", "-16.7696, 444.286, -65.7694, 0.37", "-16.8651, 444.941, -65.5133, 0.22", "-16.8953, 445.145, -65.4302, 0.66", "-16.9242, 445.412, -65.3188, 0.66", "-17.0031, 446.144, -65.0388, 0.37", "-17.0607, 446.587, -64.8784, 0.37", "-17.15, 447.183, -64.6838, 0.59", "-17.1875, 447.461, -64.6045, 0.37", "-17.2422, 447.89, -64.4937, 0.29", "-17.3041, 448.37, -64.3908, 0.74", "-17.3385, 448.634, -64.35, 0.96", "-17.3862, 448.982, -64.3006, 0.52", "-17.4634, 449.473, -64.2352, 0.44", "-17.5349, 449.929, -64.1622, 0.29", "-17.6257, 450.535, -64.0344, 0.29", "-17.6839, 450.918, -63.9284, 0.66", "-17.7391, 451.323, -63.8, 0.81", "-17.8112, 452.002, -63.5678, 0.29", "-17.8694, 452.861, -63.2587, 0.29", "-17.8833, 453.456, -63.04, 0.29", "-17.8728, 453.973, -62.8603, 0.88", "-17.8532, 454.366, -62.7399, 0.88", "-17.819, 454.83, -62.6151, 0.29", "-17.749, 455.406, -62.4988, 0.29", "-17.7234, 455.586, -62.478, 0.52", "-17.616, 456.224, -62.4438, 0.22", "-17.5303, 456.607, -62.4418, 0.52", "-17.4346, 456.96, -62.4434, 0.52", "-17.1305, 457.888, -62.4497, 0.44", "-16.9418, 458.382, -62.4563, 0.96", "-16.8166, 458.671, -62.4609, 0.96", "-16.5076, 459.317, -62.4649, 0.29", "-16.2355, 459.843, -62.466, 0.22", "-15.9811, 460.318, -62.4612, 0.81", "-15.6795, 460.872, -62.4397, 0.29", "-15.446, 461.306, -62.4148, 0.29", "-15.2374, 461.709, -62.3817, 0.66", "-15.1547, 461.876, -62.3595, 0.81", "-14.912, 462.389, -62.2725, 0.29", "-14.7698, 462.713, -62.206, 0.29", "-14.6736, 462.953, -62.1495, 0.81", "-14.5807, 463.211, -62.0886, 0.81", "-14.4111, 463.738, -61.9842, 0.29", "-14.2269, 464.391, -61.8781, 0.29", "-14.1077, 464.874, -61.8155, 0.88", "-14.0491, 465.131, -61.7899, 1.03", "-13.9598, 465.534, -61.7582, 0.74", "-13.7152, 466.67, -61.6873, 0.22", "-13.6183, 467.106, -61.6652, 0.96", "-13.5315, 467.454, -61.6423, 1.11", "-13.343, 468.182, -61.5851, 0.29", "-13.2357, 468.583, -61.5479, 0.59", "-13.1622, 468.878, -61.5077, 0.59", "-13.0556, 469.338, -61.4231, 0.59", "-12.9314, 469.922, -61.2878, 0.29", "-12.8468, 470.349, -61.1707, 0.44", "-12.7561, 471.018, -60.9501, 0.29", "-12.6953, 471.721, -60.7009, 0.81", "-12.6823, 471.917, -60.6264, 0.81", "-12.6717, 472.174, -60.527, 1.03", "-12.6555, 472.574, -60.369, 0.37", "-12.6142, 473.263, -60.0882, 0.29", "-12.5826, 473.642, -59.9452, 0.29", "-12.5098, 474.369, -59.7104, 0.29", "-12.4716, 474.739, -59.6198, 0.81", "-12.4156, 475.462, -59.4794, 0.37", "-12.3853, 476.039, -59.3595, 0.29", "-12.3434, 476.608, -59.2245, 1.11", "-12.3302, 476.972, -59.1181, 0.66", "-12.3684, 477.678, -58.8575, 0.29", "-12.4543, 478.314, -58.5526, 0.29", "-12.599, 478.997, -58.1268, 0.29", "-12.6812, 479.381, -57.8192, 0.29", "-12.7557, 479.7, -57.5308, 0.29", "-12.8788, 480.146, -57.1072, 0.81", "-12.9715, 480.398, -56.8545, 1.11", "-13.0894, 480.724, -56.5552, 0.88", "-13.4023, 481.688, -55.8136, 0.29", "-13.5087, 482.077, -55.5398, 0.29", "-13.5944, 482.501, -55.2688, 0.74", "-13.708, 483.145, -54.9115, 0.29", "-13.8145, 483.688, -54.6424, 0.29", "-13.9382, 484.295, -54.3743, 0.66", "-13.9849, 484.571, -54.2769, 0.88", "-14.0172, 485.2, -54.0692, 0.22", "-13.9919, 485.622, -53.9512, 0.37", "-13.9877, 485.664, -53.9448, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-85.5691, -58.7778, -83.6988, 0.22", "-86.842, -58.6783, -84.0957, 0.22", "-87.3753, -58.6707, -84.2626, 0.22", "-88.1502, -58.71, -84.5065, 0.37", "-88.9323, -58.7859, -84.7538, 0.22", "-89.9125, -58.9183, -85.0652, 0.22", "-90.9406, -59.0756, -85.3927, 0.81", "-91.4256, -59.1738, -85.5564, 0.81", "-92.0674, -59.3374, -85.784, 0.52", "-92.6273, -59.5101, -85.9956, 0.29", "-93.0904, -59.6642, -86.1786, 0.66", "-93.7468, -59.8785, -86.4693, 0.66", "-94.2603, -60.0228, -86.7175, 0.29", "-94.972, -60.2031, -87.0938, 0.29", "-95.6682, -60.352, -87.4937, 0.96", "-96.3142, -60.4814, -87.9447, 1.03", "-97.1887, -60.6591, -88.6359, 0.22", "-97.4076, -60.7074, -88.8261, 0.22", "-97.8151, -60.811, -89.1977, 0.88", "-98.1556, -60.929, -89.529, 0.88", "-99.0416, -61.3217, -90.478, 0.22", "-99.4801, -61.5599, -91.0137, 0.22", "-99.8515, -61.8061, -91.4949, 0.22", "-100.161, -62.0571, -91.9174, 0.88", "-100.472, -62.4096, -92.397, 1.11", "-100.764, -62.918, -92.9708, 0.88", "-101.035, -63.7726, -93.7496, 0.29", "-101.113, -64.4837, -94.3284, 1.18", "-101.122, -64.8682, -94.6304, 1.33", "-101.068, -65.7877, -95.3342, 0.29", "-100.961, -66.4928, -95.8233, 0.22", "-100.807, -67.1463, -96.1698, 0.22", "-100.509, -68.0219, -96.5013, 0.96" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-85.5691, -58.7778, -83.6988, 0.66", "-87.4307, -58.0806, -82.2795, 0.66", "-88.0073, -57.8086, -81.8173, 0.66", "-88.6889, -57.412, -81.2479, 0.81", "-89.2728, -57.0375, -80.7769, 0.81", "-90.711, -56.1228, -79.7032, 0.96", "-91.8619, -55.4096, -78.9108, 1.33", "-92.5723, -54.9256, -78.5022, 0.44", "-93.1991, -54.4777, -78.1909, 0.44", "-93.7774, -54.048, -78.0032, 0.37", "-94.647, -53.3844, -77.9793, 0.37", "-95.0103, -53.1376, -78.111, 0.37", "-95.6481, -52.7572, -78.4674, 0.29", "-96.3304, -52.4011, -78.865, 0.66", "-96.859, -52.1431, -79.1023, 0.88", "-97.5024, -51.8537, -79.3048, 0.88", "-98.4449, -51.5175, -79.4536, 0.66", "-99.0449, -51.3841, -79.4139, 0.66", "-99.8435, -51.2782, -79.2269, 0.81", "-101.872, -51.0796, -78.5168, 0.81", "-102.755, -50.981, -78.1099, 0.59", "-103.717, -50.827, -77.5715, 0.44", "-104.701, -50.575, -76.9398, 0.44", "-105.244, -50.3682, -76.5824, 0.37", "-105.822, -50.0306, -76.2411, 0.37", "-106.466, -49.4177, -75.983, 0.66", "-106.937, -48.842, -75.9087, 0.66", "-107.456, -48.1534, -76.0101, 0.44", "-107.875, -47.6789, -76.2308, 0.66", "-108.284, -47.3574, -76.5186, 0.66", "-108.909, -47.0434, -76.9829, 0.66", "-110.385, -46.5691, -78.0478, 0.37", "-110.966, -46.4407, -78.4338, 0.66", "-111.819, -46.3132, -78.9653, 0.66", "-112.537, -46.2507, -79.3581, 0.44", "-113.22, -46.2247, -79.6745, 0.37", "-113.773, -46.2214, -79.8427, 0.59", "-114.667, -46.2203, -79.9667, 0.44", "-115.298, -46.225, -80.0232, 0.37", "-116.14, -46.2313, -80.0485, 0.37", "-117.23, -46.2567, -80.0486, 0.37", "-118.665, -46.3028, -80.014, 0.37", "-119.667, -46.3325, -79.9674, 0.29", "-120.205, -46.3363, -79.9409, 0.52", "-121.343, -46.2741, -79.903, 0.29", "-122.285, -46.1847, -79.8645, 0.37", "-122.881, -46.0978, -79.8529, 0.37", "-123.487, -45.9674, -79.9114, 0.96", "-124.241, -45.7396, -80.0437, 0.66", "-124.72, -45.5468, -80.1509, 0.44" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-12.8144, 503.088, -79.5167, 0.52", "-12.7725, 503.904, -79.6503, 0.52", "-12.753, 504.535, -79.752, 1.03", "-12.7435, 505.045, -79.8339, 1.03", "-12.7331, 506.03, -80.0007, 1.11", "-12.7177, 507.169, -80.1832, 0.29", "-12.695, 508.223, -80.3547, 0.29", "-12.6609, 509.209, -80.5279, 0.96", "-12.6455, 509.66, -80.5996, 1.11", "-12.6184, 510.694, -80.7428, 0.66", "-12.6115, 511.851, -80.8819, 0.52", "-12.6309, 512.879, -80.987, 0.52", "-12.6658, 513.95, -81.0745, 0.52", "-12.7105, 514.755, -81.1213, 0.81", "-12.8089, 516.074, -81.1828, 1.11", "-12.8755, 516.805, -81.2069, 1.33", "-13.0716, 518.648, -81.2684, 0.44", "-13.1679, 519.499, -81.295, 0.44", "-13.3187, 520.971, -81.3511, 0.37", "-13.3915, 521.857, -81.3926, 0.96", "-13.4392, 522.794, -81.4504, 1.25", "-13.4483, 523.416, -81.4963, 1.25", "-13.4267, 524.094, -81.552, 1.03", "-13.3939, 524.617, -81.5972, 0.74", "-13.3319, 525.368, -81.6613, 0.52", "-13.2853, 526.06, -81.7128, 0.37", "-13.2445, 526.794, -81.762, 0.37", "-13.21, 527.742, -81.8131, 0.37", "-13.1898, 528.95, -81.8761, 0.66", "-13.1926, 529.619, -81.9123, 0.66", "-13.201, 530.741, -81.9843, 0.66", "-13.2138, 531.707, -82.0486, 0.29", "-13.2233, 532.569, -82.1154, 0.29", "-13.2316, 533.174, -82.1673, 0.81", "-13.2444, 534.24, -82.2714, 1.03", "-13.2561, 535.101, -82.3616, 1.18", "-13.2632, 535.754, -82.4359, 0.81", "-13.2752, 536.65, -82.5508, 0.29", "-13.2864, 537.444, -82.6542, 0.29", "-13.2958, 538.252, -82.7593, 0.96", "-13.3096, 539.171, -82.8779, 1.11", "-13.3142, 539.862, -82.9594, 1.11", "-13.3028, 540.999, -83.0884, 0.74", "-13.2824, 541.981, -83.1868, 0.44", "-13.2479, 542.971, -83.2711, 0.88", "-13.2194, 543.687, -83.3237, 0.88", "-13.1673, 544.704, -83.3943, 0.52", "-13.0989, 545.779, -83.4661, 0.52", "-13.0176, 546.857, -83.5349, 0.52", "-12.9419, 547.989, -83.6136, 0.52", "-12.8995, 548.916, -83.6836, 1.11", "-12.8831, 549.39, -83.7236, 1.11", "-12.8722, 550.28, -83.8056, 0.81", "-12.866, 551.483, -83.9231, 0.29", "-12.8697, 552.623, -84.0449, 0.29", "-12.8802, 553.285, -84.1187, 0.96", "-12.9058, 554.037, -84.1968, 1.11", "-12.9613, 554.828, -84.2728, 1.4" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-12.8144, 503.088, -79.5167, 0.44", "-11.7198, 502.061, -79.0637, 0.44", "-10.9593, 501.347, -78.749, 0.37", "-9.73598, 500.199, -78.2428, 0.29", "-9.15133, 499.65, -78.0009, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-124.72, -45.5468, -80.1509, 0.22", "-123.91, -44.7167, -79.5803, 0.22", "-123.336, -44.128, -79.1755, 0.22", "-122.767, -43.5443, -78.7742, 0.59", "-122.381, -43.1488, -78.5023, 0.59", "-121.875, -42.6302, -78.1458, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-124.72, -45.5468, -80.1509, 0.37", "-125.656, -44.6503, -80.1139, 0.37", "-126.419, -43.9804, -80.113, 0.37", "-127.208, -43.3434, -80.14, 0.22", "-128.053, -42.6608, -80.1689, 0.22", "-128.661, -42.1701, -80.1897, 0.22", "-129.313, -41.6437, -80.2121, 0.22", "-129.537, -41.4854, -80.2284, 0.52", "-130.047, -41.1865, -80.2933, 0.66" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-12.9613, 554.828, -84.2728, 0.22", "-11.9351, 557.151, -86.51, 0.22", "-11.8244, 557.564, -86.9315, 0.29", "-11.7356, 558.278, -87.7302, 0.29", "-11.7591, 558.486, -88.0338, 0.66", "-11.8565, 558.771, -88.5366, 0.66", "-12.0053, 559.125, -89.1602, 0.29", "-12.4119, 559.532, -89.887, 0.88", "-12.6077, 559.719, -90.2106, 0.88", "-13.2712, 560.363, -91.2463, 0.29", "-13.5305, 560.662, -91.6396, 0.29", "-13.8607, 561.179, -92.12, 0.29", "-14.1385, 561.866, -92.5915, 0.66", "-14.3371, 562.542, -92.9852, 0.22", "-14.4801, 563.088, -93.2768, 0.22", "-14.6399, 563.649, -93.5704, 0.22", "-14.9743, 564.639, -94.1284, 0.96", "-15.4284, 565.745, -94.8544, 1.33", "-15.9739, 566.914, -95.7244, 0.29", "-16.1417, 567.267, -95.9995, 0.29", "-16.5169, 568.005, -96.6005, 0.29", "-16.8396, 568.561, -97.0947, 0.29", "-17.2466, 569.073, -97.6233, 0.96", "-17.5216, 569.297, -97.8808, 1.11" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-12.9613, 554.828, -84.2728, 0.29", "-12.8464, 556.846, -84.279, 0.29", "-12.7614, 558.367, -84.2831, 0.29", "-12.6664, 560.532, -84.2923, 0.29", "-12.6065, 562.355, -84.3029, 0.74", "-12.5775, 563.643, -84.3122, 1.03", "-12.5644, 564.534, -84.3198, 1.03", "-12.5446, 566.715, -84.3346, 0.29", "-12.5072, 568.675, -84.3495, 0.29", "-12.4816, 569.652, -84.3538, 0.96", "-12.4503, 570.628, -84.3557, 1.18", "-12.4016, 572.149, -84.3635, 0.59", "-12.3505, 573.583, -84.3629, 0.37", "-12.253, 575.673, -84.3498, 0.37", "-12.1498, 577.369, -84.3298, 0.29", "-12.0204, 579.617, -84.2999, 0.29", "-11.9537, 581.212, -84.2714, 0.88", "-11.938, 581.839, -84.2603, 1.03", "-11.9381, 582.872, -84.2473, 1.03", "-11.9596, 584.242, -84.236, 1.03", "-11.9885, 586.107, -84.2277, 0.44", "-11.9922, 587.905, -84.2207, 0.74", "-11.9925, 588.487, -84.2209, 0.74", "-11.9975, 589.913, -84.2383, 0.44", "-12.0103, 590.751, -84.2518, 0.37", "-12.013, 591.753, -84.2687, 0.74", "-11.9871, 592.59, -84.2812, 0.96", "-11.8971, 594.018, -84.3174, 0.29", "-11.8291, 594.838, -84.3315, 0.29", "-11.7015, 596.077, -84.3486, 0.81", "-11.6456, 596.526, -84.3538, 0.81", "-11.5248, 597.416, -84.371, 0.37", "-11.3697, 598.774, -84.4042, 0.37", "-11.2814, 599.668, -84.4333, 1.03", "-11.2422, 600.458, -84.4682, 1.03", "-11.2266, 602.009, -84.5483, 1.03", "-11.273, 603.449, -84.6338, 0.37", "-11.4199, 605.405, -84.7471, 0.29", "-11.5392, 606.481, -84.805, 0.29", "-11.7389, 607.937, -84.8719, 0.88", "-11.8769, 608.826, -84.9017, 1.25", "-12.0191, 609.612, -84.9149, 1.25", "-12.2426, 610.859, -84.9094, 0.74", "-12.4181, 611.918, -84.8908, 0.74", "-12.7195, 613.859, -84.8352, 1.25", "-12.8628, 614.924, -84.8033, 1.25", "-12.9822, 615.861, -84.7826, 0.52", "-13.1283, 617.105, -84.7635, 0.29", "-13.2367, 618.084, -84.7606, 0.52", "-13.3387, 619.056, -84.7655, 0.81", "-13.5908, 621.451, -84.8085, 0.37", "-13.784, 623.222, -84.8486, 0.37", "-13.8323, 623.672, -84.8609, 1.03", "-13.9355, 624.57, -84.8864, 1.4", "-14.007, 625.176, -84.9039, 1.4", "-14.1919, 626.864, -84.9504, 0.52", "-14.3371, 628.285, -84.9879, 0.52", "-14.4654, 629.716, -85.023, 0.81", "-14.5434, 630.775, -85.0463, 0.81", "-14.6065, 631.844, -85.0673, 0.81", "-14.6699, 633.142, -85.0908, 0.44", "-14.6993, 634.03, -85.1048, 0.44", "-14.7263, 635.36, -85.123, 0.81", "-14.7483, 636.731, -85.1408, 0.88", "-14.7562, 638.233, -85.1579, 1.18", "-14.7618, 639.571, -85.1729, 1.4", "-14.7649, 640.215, -85.1802, 1.4", "-14.759, 641.181, -85.1979, 0.88", "-14.7072, 643.674, -85.2569, 0.37", "-14.6631, 644.961, -85.2931, 0.37", "-14.6191, 645.851, -85.3205, 0.66", "-14.5633, 646.738, -85.3464, 0.96", "-14.4847, 647.804, -85.3731, 0.37", "-14.4157, 648.651, -85.3927, 0.74", "-14.2842, 650.098, -85.4435, 0.37", "-14.1767, 651.36, -85.496, 0.81", "-14.0839, 652.519, -85.5544, 1.03", "-13.9194, 654.783, -85.7186, 0.22", "-13.8147, 656.359, -85.8551, 0.22", "-13.6946, 658.193, -86.041, 0.22", "-13.5869, 659.885, -86.2458, 1.25", "-13.5345, 660.713, -86.3654, 1.33", "-13.454, 662.12, -86.5942, 0.44", "-13.3848, 663.307, -86.8238, 0.44", "-13.2764, 664.763, -87.1251, 0.44", "-13.1718, 665.927, -87.3738, 0.37", "-13.0095, 667.646, -87.7418, 0.37", "-12.9207, 668.525, -87.9119, 0.37", "-12.799, 669.817, -88.1349, 0.74", "-12.721, 670.773, -88.2935, 1.03", "-12.652, 671.777, -88.4389, 0.74", "-12.602, 672.598, -88.5259, 0.29", "-12.5385, 673.833, -88.6112, 0.29", "-12.5116, 674.54, -88.6397, 0.66", "-12.4828, 675.538, -88.6546, 0.66", "-12.4572, 676.963, -88.6766, 0.22", "-12.439, 678.038, -88.6852, 0.52", "-12.4197, 678.788, -88.6913, 0.52", "-12.3476, 681.381, -88.6943, 0.22", "-12.2779, 682.848, -88.6653, 0.59", "-12.2461, 683.383, -88.6453, 0.59", "-12.1497, 684.736, -88.5711, 0.22", "-12.0813, 685.609, -88.5157, 0.81", "-12.0273, 686.243, -88.4715, 0.81", "-11.8581, 687.922, -88.3515, 0.22", "-11.7812, 688.622, -88.3055, 0.59", "-11.7306, 689.012, -88.284, 0.59", "-11.3909, 691.612, -88.1859, 0.22", "-11.2971, 692.429, -88.1669, 0.22", "-11.1578, 693.838, -88.1585, 0.74", "-11.1134, 694.502, -88.1655, 0.81", "-11.0691, 695.475, -88.1756, 0.81", "-11.0246, 697.158, -88.1913, 0.22", "-11.0065, 698.849, -88.2045, 0.22", "-11.0094, 699.913, -88.2111, 0.22", "-11.0346, 701.26, -88.2181, 0.81", "-11.0435, 701.624, -88.2193, 0.81", "-11.0733, 703.84, -88.2345, 0.22", "-11.0718, 703.952, -88.2361, 0.52", "-10.9472, 706.47, -88.2936, 0.29", "-10.8371, 707.889, -88.3365, 0.88", "-10.7541, 708.698, -88.3682, 0.88", "-10.5976, 710.157, -88.4359, 0.22", "-10.5079, 711.086, -88.4846, 0.22", "-10.3966, 712.173, -88.5385, 0.96", "-10.3474, 712.623, -88.5588, 0.96", "-10.1417, 714.424, -88.6258, 0.22", "-10.0388, 715.489, -88.6559, 0.22", "-9.90957, 716.909, -88.6731, 0.88", "-9.7888, 718.341, -88.6772, 0.22", "-9.68224, 719.778, -88.6757, 0.88", "-9.64425, 720.225, -88.6745, 0.88", "-9.49477, 721.72, -88.6671, 0.22", "-9.35649, 722.817, -88.6571, 0.96" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-17.5216, 569.297, -97.8808, 0.37", "-17.9611, 570.166, -98.1068, 0.37", "-18.1032, 570.458, -98.1857, 0.59", "-18.3387, 570.998, -98.3294, 0.59", "-18.513, 571.458, -98.4545, 0.29", "-18.7978, 572.249, -98.6858, 0.29", "-18.9502, 572.68, -98.8207, 0.29", "-19.0808, 573.057, -98.9713, 0.52", "-19.1983, 573.418, -99.1452, 0.22", "-19.344, 573.867, -99.4019, 0.52", "-19.5151, 574.35, -99.6909, 0.81", "-19.64, 574.696, -99.8823, 0.81", "-19.9877, 575.555, -100.324, 0.22", "-20.1819, 575.987, -100.529, 0.81", "-20.4152, 576.456, -100.725, 0.81", "-20.6942, 576.989, -100.902, 0.29", "-21.0975, 577.743, -101.108, 0.29", "-21.4021, 578.272, -101.243, 0.81", "-21.6503, 578.659, -101.346, 1.11", "-21.8799, 579.005, -101.467, 0.74", "-22.1756, 579.473, -101.662, 0.29", "-22.5795, 580.121, -101.973, 0.29", "-22.9079, 580.655, -102.237, 0.29", "-23.3302, 581.394, -102.602, 1.03", "-23.6577, 582.011, -102.891, 1.18", "-24.1984, 583.098, -103.378, 0.29", "-24.3921, 583.526, -103.557, 0.29", "-24.6695, 584.216, -103.824, 1.55", "-24.8082, 584.586, -103.961, 1.33", "-25.0135, 585.111, -104.15, 0.81", "-25.2531, 585.661, -104.357, 0.52", "-25.6276, 586.47, -104.679, 0.29", "-25.9485, 587.161, -104.965, 0.52", "-26.0644, 587.425, -105.072, 0.81", "-26.5091, 588.514, -105.491, 0.22", "-26.7755, 589.27, -105.766, 0.22", "-26.8932, 589.677, -105.889, 0.66", "-26.9865, 590.124, -106.012, 0.66", "-27.0966, 590.983, -106.24, 0.22", "-27.1176, 591.37, -106.365, 0.52", "-27.1227, 591.704, -106.492, 0.52", "-27.1647, 592.422, -106.784, 0.29", "-27.2516, 593.179, -107.106, 0.96", "-27.3202, 593.565, -107.271, 0.96", "-27.584, 594.754, -107.809, 0.22", "-27.8055, 595.598, -108.199, 0.96", "-27.9894, 596.182, -108.474, 0.22", "-28.0982, 596.457, -108.607, 0.59", "-28.2487, 596.762, -108.737, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-17.5216, 569.297, -97.8808, 0.15", "-19.0273, 568.91, -98.2905, 0.15", "-19.4729, 568.805, -98.3967, 0.52", "-19.7642, 568.739, -98.4619, 0.66", "-20.8134, 568.502, -98.6887, 0.22", "-21.7558, 568.281, -98.8791, 0.22", "-22.149, 568.185, -98.9459, 0.59", "-22.7417, 568.062, -99.0322, 0.66", "-23.7954, 567.837, -99.1549, 0.29", "-24.1765, 567.752, -99.1866, 0.81", "-24.9368, 567.568, -99.2381, 0.96", "-25.801, 567.345, -99.3078, 0.15", "-26.686, 567.106, -99.4008, 0.15", "-27.5478, 566.867, -99.5032, 0.15", "-28.2626, 566.666, -99.5898, 0.88", "-28.7832, 566.5, -99.6571, 0.88", "-30.2233, 566.031, -99.8671, 0.22", "-30.7796, 565.84, -99.9601, 0.74", "-31.5446, 565.547, -100.087, 0.74", "-32.4321, 565.17, -100.241, 0.29", "-33.1886, 564.821, -100.367, 0.29" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_54", "dend_27", "dend_0", "dend_56", "dend_55", "dend_29", "dend_28", "dend_6", "dend_1", "dend_37", "dend_30", "dend_12", "dend_7", "dend_3", "dend_2", "dend_49", "dend_38", "dend_32", "dend_31", "dend_16", "dend_13", "dend_11", "dend_8", "dend_5", "dend_4", "dend_51", "dend_50", "dend_46", "dend_39", "dend_36", "dend_33", "dend_26", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_40", "dend_35", "dend_34", "dend_19", "dend_18", "dend_44", "dend_41", "dend_21", "dend_20", "dend_43", "dend_42", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_54", "dend_27", "dend_0", "dend_56", "dend_55", "dend_29", "dend_28", "dend_6", "dend_1", "dend_37", "dend_30", "dend_12", "dend_7", "dend_3", "dend_2", "dend_49", "dend_38", "dend_32", "dend_31", "dend_16", "dend_13", "dend_11", "dend_8", "dend_5", "dend_4", "dend_51", "dend_50", "dend_46", "dend_39", "dend_36", "dend_33", "dend_26", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_40", "dend_35", "dend_34", "dend_19", "dend_18", "dend_44", "dend_41", "dend_21", "dend_20", "dend_43", "dend_42", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L6_SBC_f2d2498fe5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_54, id: dend_54, parent: soma_0
create dend_54
public dend_54
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_37, id: dend_37, parent: dend_29
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_49, id: dend_49, parent: dend_37
create dend_49
public dend_49
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_38
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_16
create dend_26
public dend_26
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_59
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_54(0), soma_0(0.49999773444601353)
    connect dend_27(0), soma_0(0.49999773444601353)
    connect dend_0(0), soma_0(0.49999773444601353)
    connect axon_0(0), soma_0(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_37(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_49(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_26(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.488402, 10.6886, -0.10439, 2.1741 ) }
    soma_0 { pt3dadd( 0.446743, 9.60874, -0.0969525, 3.70718 ) }
    soma_0 { pt3dadd( 0.405084, 8.52883, -0.0895152, 5.34259 ) }
    soma_0 { pt3dadd( 0.363425, 7.44892, -0.0820778, 6.31081 ) }
    soma_0 { pt3dadd( 0.321766, 6.36901, -0.0746405, 7.2239 ) }
    soma_0 { pt3dadd( 0.280106, 5.2891, -0.0672032, 7.79497 ) }
    soma_0 { pt3dadd( 0.238447, 4.20919, -0.0597659, 8.16787 ) }
    soma_0 { pt3dadd( 0.196788, 3.12928, -0.0523285, 8.65603 ) }
    soma_0 { pt3dadd( 0.155129, 2.04937, -0.0448912, 9.27596 ) }
    soma_0 { pt3dadd( 0.11347, 0.969459, -0.0374539, 9.68183 ) }
    soma_0 { pt3dadd( 0.0718107, -0.110451, -0.0300165, 9.60108 ) }
    soma_0 { pt3dadd( 0.0301515, -1.19036, -0.0225792, 9.40911 ) }
    soma_0 { pt3dadd( -0.0115077, -2.27027, -0.0151419, 8.85229 ) }
    soma_0 { pt3dadd( -0.0531668, -3.35018, -0.00770454, 8.34531 ) }
    soma_0 { pt3dadd( -0.094826, -4.43009, -2.67214E-4, 7.89073 ) }
    soma_0 { pt3dadd( -0.136485, -5.51, 0.00717012, 7.34681 ) }
    soma_0 { pt3dadd( -0.178144, -6.58991, 0.0146074, 6.74183 ) }
    soma_0 { pt3dadd( -0.219803, -7.66982, 0.0220448, 6.06339 ) }
    soma_0 { pt3dadd( -0.261463, -8.74973, 0.0294821, 5.33412 ) }
    soma_0 { pt3dadd( -0.303122, -9.82964, 0.0369194, 3.6506 ) }
    soma_0 { pt3dadd( -0.344781, -10.9096, 0.0443568, 2.18196 ) }
    // Section: dend_54, id: dend_54, parent: soma_0 (entry count 21/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 1.87458, 3.07242, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 1.43568, 3.92707, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 0.949926, 4.87297, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 0.232837, 6.26933, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( -0.328807, 7.363, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( -1.00592, 8.68152, 11.4844, 1.4 ) }
    dend_54 { pt3dadd( -1.17912, 9.01879, 11.4844, 1.4 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 28/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -1.37542, -9.69758, 0.224411, 4.05 ) }
    dend_27 { pt3dadd( -1.37542, -9.69758, 0.224411, 4.05 ) }
    dend_27 { pt3dadd( -1.77321, -11.0327, 0.232399, 3.61 ) }
    dend_27 { pt3dadd( -2.32462, -12.9857, 0.189482, 2.87 ) }
    dend_27 { pt3dadd( -2.791, -14.8016, 0.0522682, 2.36 ) }
    dend_27 { pt3dadd( -3.19946, -16.5686, -0.0883835, 2.36 ) }
    dend_27 { pt3dadd( -3.58851, -18.4257, -0.217756, 2.65 ) }
    dend_27 { pt3dadd( -3.90523, -20.0119, -0.338033, 2.65 ) }
    dend_27 { pt3dadd( -4.16786, -21.4621, -0.464908, 2.8 ) }
    dend_27 { pt3dadd( -4.51667, -23.7169, -0.691554, 2.43 ) }
    dend_27 { pt3dadd( -4.78094, -25.7181, -0.920014, 2.28 ) }
    dend_27 { pt3dadd( -5.01439, -27.8655, -1.19108, 2.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 40/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.565422, 10.3624, -2.89559, 3.17 ) }
    dend_0 { pt3dadd( -0.565422, 10.3624, -2.89559, 3.17 ) }
    dend_0 { pt3dadd( -2.22607, 12.0584, -3.01303, 2.8 ) }
    dend_0 { pt3dadd( -3.84465, 13.6342, -3.12102, 2.8 ) }
    dend_0 { pt3dadd( -5.3066, 15.0276, -3.21229, 2.8 ) }
    dend_0 { pt3dadd( -7.17328, 16.8265, -3.3106, 2.8 ) }
    dend_0 { pt3dadd( -8.59632, 18.2772, -3.37642, 2.58 ) }
    dend_0 { pt3dadd( -9.59007, 19.3431, -3.41499, 2.58 ) }
    dend_0 { pt3dadd( -10.4296, 20.3108, -3.43976, 2.36 ) }
    dend_0 { pt3dadd( -11.1844, 21.3427, -3.45084, 1.92 ) }
    dend_0 { pt3dadd( -12.1243, 23.1401, -3.4532, 1.92 ) }
    dend_0 { pt3dadd( -12.6462, 24.9483, -3.43843, 1.92 ) }
    dend_0 { pt3dadd( -12.8372, 26.5512, -3.42844, 1.92 ) }
    dend_0 { pt3dadd( -12.8078, 27.9273, -3.42496, 2.21 ) }
    dend_0 { pt3dadd( -12.5987, 29.3903, -3.50587, 2.21 ) }
    dend_0 { pt3dadd( -12.3006, 30.6068, -3.63681, 1.84 ) }
    dend_0 { pt3dadd( -11.7272, 32.3708, -3.91079, 1.84 ) }
    dend_0 { pt3dadd( -11.3211, 33.5077, -4.12257, 1.84 ) }
    dend_0 { pt3dadd( -10.8573, 34.7828, -4.41839, 1.84 ) }
    dend_0 { pt3dadd( -10.0161, 37.2525, -5.10264, 1.69 ) }
    dend_0 { pt3dadd( -9.71988, 38.2671, -5.42169, 1.69 ) }
    dend_0 { pt3dadd( -9.34931, 39.7909, -6.02368, 1.69 ) }
    dend_0 { pt3dadd( -9.09708, 41.1993, -6.6871, 1.84 ) }
    dend_0 { pt3dadd( -8.94302, 42.4007, -7.31138, 1.99 ) }
    dend_0 { pt3dadd( -8.86642, 43.5701, -7.94978, 1.99 ) }
    dend_0 { pt3dadd( -8.81935, 44.8898, -8.67871, 1.99 ) }
    dend_0 { pt3dadd( -8.80042, 46.8532, -9.88817, 2.14 ) }
    dend_0 { pt3dadd( -8.81939, 47.8888, -10.6139, 2.14 ) }
    dend_0 { pt3dadd( -8.86203, 48.8134, -11.3267, 2.14 ) }
    dend_0 { pt3dadd( -8.92703, 49.734, -12.0372, 2.14 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 70/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.344781, -10.9096, 0.0443568, 0.553183 ) }
    axon_0 { pt3dadd( -0.922998, -25.8985, 0.0443568, 0.553183 ) }
    axon_0 { pt3dadd( -1.50121, -40.8873, 0.0443568, 0.553183 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 73/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -1.17912, 9.01879, 11.4844, 0.81 ) }
    dend_56 { pt3dadd( -3.33449, 10.5567, 10.5426, 0.81 ) }
    dend_56 { pt3dadd( -4.37781, 11.3329, 10.1503, 0.81 ) }
    dend_56 { pt3dadd( -5.18407, 11.9261, 9.90444, 1.03 ) }
    dend_56 { pt3dadd( -5.93916, 12.4643, 9.72188, 1.03 ) }
    dend_56 { pt3dadd( -6.88919, 13.113, 9.54448, 0.59 ) }
    dend_56 { pt3dadd( -7.84461, 13.7366, 9.41806, 0.37 ) }
    dend_56 { pt3dadd( -8.70753, 14.3021, 9.44816, 0.37 ) }
    dend_56 { pt3dadd( -9.49284, 14.7839, 9.49352, 0.59 ) }
    dend_56 { pt3dadd( -10.1403, 15.1728, 9.52871, 0.59 ) }
    dend_56 { pt3dadd( -10.7524, 15.5179, 9.56358, 0.66 ) }
    dend_56 { pt3dadd( -11.6204, 15.9759, 9.56038, 0.59 ) }
    dend_56 { pt3dadd( -12.5147, 16.4008, 9.4631, 0.44 ) }
    dend_56 { pt3dadd( -13.6762, 16.9257, 9.15301, 0.44 ) }
    dend_56 { pt3dadd( -14.2442, 17.191, 8.93828, 0.96 ) }
    dend_56 { pt3dadd( -15.0273, 17.5765, 8.5983, 1.33 ) }
    dend_56 { pt3dadd( -15.7226, 17.9491, 8.27124, 1.55 ) }
    dend_56 { pt3dadd( -16.9033, 18.6439, 7.68679, 1.03 ) }
    dend_56 { pt3dadd( -18.4989, 19.7252, 6.91494, 0.52 ) }
    dend_56 { pt3dadd( -18.8854, 20.0459, 6.73417, 0.88 ) }
    dend_56 { pt3dadd( -19.5842, 20.7454, 6.41625, 0.52 ) }
    dend_56 { pt3dadd( -20.1, 21.396, 6.19369, 0.52 ) }
    dend_56 { pt3dadd( -20.4823, 21.9868, 6.04768, 0.52 ) }
    dend_56 { pt3dadd( -21.0932, 23.0649, 5.83416, 0.88 ) }
    dend_56 { pt3dadd( -21.7171, 24.1904, 5.62565, 0.74 ) }
    dend_56 { pt3dadd( -22.1165, 24.8266, 5.49927, 0.59 ) }
    dend_56 { pt3dadd( -23.082, 26.1032, 5.22566, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_56 { pt3dadd( -23.8019, 26.8381, 5.0759, 1.25 ) }
    dend_56 { pt3dadd( -24.6993, 27.5126, 4.94682, 1.4 ) }
    dend_56 { pt3dadd( -25.477, 27.906, 4.89937, 1.18 ) }
    dend_56 { pt3dadd( -26.372, 28.2311, 4.91422, 0.88 ) }
    dend_56 { pt3dadd( -27.4774, 28.5514, 4.97727, 0.66 ) }
    dend_56 { pt3dadd( -28.28, 28.7398, 5.05926, 0.66 ) }
    dend_56 { pt3dadd( -28.8742, 28.8914, 5.14095, 0.66 ) }
    dend_56 { pt3dadd( -29.7775, 29.2345, 5.31181, 0.59 ) }
    dend_56 { pt3dadd( -30.4081, 29.6421, 5.45368, 0.59 ) }
    dend_56 { pt3dadd( -30.9706, 30.2563, 5.6103, 0.74 ) }
    dend_56 { pt3dadd( -31.1786, 30.5763, 5.68853, 0.88 ) }
    dend_56 { pt3dadd( -31.4285, 31.0256, 5.81276, 0.88 ) }
    dend_56 { pt3dadd( -31.7287, 31.5946, 5.99576, 1.03 ) }
    dend_56 { pt3dadd( -32.107, 32.2557, 6.24909, 0.66 ) }
    dend_56 { pt3dadd( -32.7387, 33.2365, 6.69362, 0.44 ) }
    dend_56 { pt3dadd( -33.2531, 33.9908, 7.06954, 0.44 ) }
    dend_56 { pt3dadd( -33.7588, 34.7067, 7.35712, 0.59 ) }
    dend_56 { pt3dadd( -34.0365, 35.0988, 7.45912, 0.96 ) }
    dend_56 { pt3dadd( -34.632, 36.0186, 7.5562, 1.18 ) }
    dend_56 { pt3dadd( -34.9039, 36.5284, 7.52803, 1.18 ) }
    dend_56 { pt3dadd( -35.2661, 37.3937, 7.36274, 0.74 ) }
    dend_56 { pt3dadd( -35.8374, 39.1643, 6.93426, 0.37 ) }
    dend_56 { pt3dadd( -36.0941, 40.0613, 6.70411, 0.29 ) }
    dend_56 { pt3dadd( -36.3491, 40.9898, 6.47819, 0.29 ) }
    dend_56 { pt3dadd( -36.6185, 41.9635, 6.25653, 0.37 ) }
    dend_56 { pt3dadd( -36.8594, 42.6782, 6.13268, 0.37 ) }
    dend_56 { pt3dadd( -37.3152, 43.7096, 6.06968, 0.29 ) }
    dend_56 { pt3dadd( -37.7172, 44.4146, 6.15983, 0.37 ) }
    dend_56 { pt3dadd( -38.0822, 44.9358, 6.28554, 0.74 ) }
    dend_56 { pt3dadd( -38.3622, 45.2781, 6.3924, 0.74 ) }
    dend_56 { pt3dadd( -38.7609, 45.725, 6.5263, 0.44 ) }
    dend_56 { pt3dadd( -39.3677, 46.4616, 6.68361, 0.66 ) }
    dend_56 { pt3dadd( -39.9307, 47.1985, 6.74057, 1.25 ) }
    dend_56 { pt3dadd( -40.2627, 47.6533, 6.74299, 1.47 ) }
    dend_56 { pt3dadd( -40.6388, 48.1572, 6.7259, 1.47 ) }
    dend_56 { pt3dadd( -41.3298, 49.041, 6.67159, 1.11 ) }
    dend_56 { pt3dadd( -42.2528, 50.1795, 6.57127, 0.29 ) }
    dend_56 { pt3dadd( -42.9394, 50.9967, 6.4861, 0.66 ) }
    dend_56 { pt3dadd( -43.3369, 51.4475, 6.42913, 0.52 ) }
    dend_56 { pt3dadd( -44.0115, 52.1507, 6.31168, 0.52 ) }
    dend_56 { pt3dadd( -44.8722, 52.9703, 6.17776, 0.66 ) }
    dend_56 { pt3dadd( -45.9003, 53.8922, 6.06108, 0.88 ) }
    dend_56 { pt3dadd( -46.4255, 54.3237, 6.01846, 1.47 ) }
    dend_56 { pt3dadd( -47.0814, 54.8732, 5.98859, 1.47 ) }
    dend_56 { pt3dadd( -47.8387, 55.5254, 5.96283, 0.74 ) }
    dend_56 { pt3dadd( -48.5783, 56.129, 5.93875, 0.74 ) }
    dend_56 { pt3dadd( -49.2553, 56.6246, 5.94136, 0.74 ) }
    dend_56 { pt3dadd( -50.0222, 57.1218, 5.98105, 0.37 ) }
    dend_56 { pt3dadd( -50.9294, 57.6837, 6.06753, 0.37 ) }
    dend_56 { pt3dadd( -51.6548, 58.1308, 6.16011, 0.29 ) }
    dend_56 { pt3dadd( -52.3303, 58.5644, 6.24509, 0.29 ) }
    dend_56 { pt3dadd( -53.1599, 59.1144, 6.31024, 0.29 ) }
    dend_56 { pt3dadd( -53.6467, 59.4607, 6.32626, 0.29 ) }
    dend_56 { pt3dadd( -54.373, 60.0635, 6.25008, 0.88 ) }
    dend_56 { pt3dadd( -54.8106, 60.4961, 6.1411, 1.47 ) }
    dend_56 { pt3dadd( -55.1926, 60.9668, 5.9883, 1.47 ) }
    dend_56 { pt3dadd( -55.4781, 61.3986, 5.84668, 1.47 ) }
    dend_56 { pt3dadd( -55.8359, 62.0514, 5.62547, 1.18 ) }
    dend_56 { pt3dadd( -56.4497, 63.342, 5.20865, 0.37 ) }
    dend_56 { pt3dadd( -56.7524, 64.059, 5.01246, 0.37 ) }
    dend_56 { pt3dadd( -57.0609, 64.7735, 4.88698, 0.37 ) }
    dend_56 { pt3dadd( -57.298, 65.2733, 4.84652, 0.96 ) }
    dend_56 { pt3dadd( -57.6175, 65.8867, 4.85294, 1.03 ) }
    dend_56 { pt3dadd( -57.8099, 66.2266, 4.89964, 1.03 ) }
    dend_56 { pt3dadd( -58.3618, 67.1313, 5.0988, 0.37 ) }
    dend_56 { pt3dadd( -58.9481, 68.0022, 5.25202, 0.37 ) }
    dend_56 { pt3dadd( -59.2955, 68.494, 5.31072, 0.29 ) }
    dend_56 { pt3dadd( -59.7179, 69.0395, 5.26167, 0.29 ) }
    dend_56 { pt3dadd( -60.3651, 69.8446, 5.07278, 0.29 ) }
    dend_56 { pt3dadd( -60.8217, 70.4349, 4.85378, 0.29 ) }
    dend_56 { pt3dadd( -61.4397, 71.2469, 4.47528, 1.18 ) }
    dend_56 { pt3dadd( -61.7326, 71.6644, 4.26285, 1.47 ) }
    dend_56 { pt3dadd( -62.9363, 73.503, 3.21867, 0.22 ) }
    dend_56 { pt3dadd( -63.0619, 73.7026, 3.0931, 0.44 ) }
    dend_56 { pt3dadd( -63.5214, 74.489, 2.56915, 0.66 ) }
    dend_56 { pt3dadd( -63.8994, 75.2017, 2.11604, 0.22 ) }
    dend_56 { pt3dadd( -64.2427, 75.9015, 1.69521, 0.22 ) }
    dend_56 { pt3dadd( -64.8387, 77.1482, 0.973306, 0.88 ) }
    dend_56 { pt3dadd( -65.1415, 77.8127, 0.620601, 0.88 ) }
    dend_56 { pt3dadd( -65.4522, 78.4373, 0.272229, 0.88 ) }
    dend_56 { pt3dadd( -66.0412, 79.4854, -0.366202, 0.37 ) }
    dend_56 { pt3dadd( -66.51, 80.1999, -0.858613, 0.37 ) }
    dend_56 { pt3dadd( -66.7493, 80.4905, -1.07526, 0.88 ) }
    dend_56 { pt3dadd( -67.1182, 80.8671, -1.3492, 0.88 ) }
    dend_56 { pt3dadd( -67.7525, 81.4215, -1.79266, 0.52 ) }
    dend_56 { pt3dadd( -68.3508, 81.8705, -2.19325, 0.29 ) }
    dend_56 { pt3dadd( -69.0459, 82.3476, -2.65392, 0.29 ) }
    dend_56 { pt3dadd( -69.8392, 82.8886, -3.15416, 1.11 ) }
    dend_56 { pt3dadd( -70.328, 83.2639, -3.49412, 1.33 ) }
    dend_56 { pt3dadd( -70.8786, 83.7198, -3.91344, 1.55 ) }
    dend_56 { pt3dadd( -71.4029, 84.1771, -4.34057, 1.55 ) }
    dend_56 { pt3dadd( -72.1525, 84.8519, -4.98512, 0.52 ) }
    dend_56 { pt3dadd( -72.8578, 85.4859, -5.58846, 0.44 ) }
    dend_56 { pt3dadd( -74.0309, 86.505, -6.52365, 1.47 ) }
    dend_56 { pt3dadd( -74.5952, 86.9983, -6.93484, 1.47 ) }
    dend_56 { pt3dadd( -75.879, 88.1482, -7.76447, 0.44 ) }
    dend_56 { pt3dadd( -76.5673, 88.7706, -8.18094, 0.44 ) }
    dend_56 { pt3dadd( -77.4251, 89.5656, -8.6857, 0.44 ) }
    dend_56 { pt3dadd( -78.2473, 90.353, -9.15654, 0.37 ) }
    dend_56 { pt3dadd( -79.0136, 91.1054, -9.54236, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_56 { pt3dadd( -80.154, 92.3858, -10.0647, 1.47 ) }
    dend_56 { pt3dadd( -80.5325, 92.9136, -10.2149, 1.77 ) }
    dend_56 { pt3dadd( -81.3752, 94.3246, -10.4994, 0.29 ) }
    dend_56 { pt3dadd( -81.7317, 95.027, -10.5998, 1.03 ) }
    dend_56 { pt3dadd( -81.9165, 95.4472, -10.6305, 1.03 ) }
    dend_56 { pt3dadd( -82.5146, 96.9504, -10.6115, 0.66 ) }
    dend_56 { pt3dadd( -83.1912, 98.8011, -10.4047, 0.29 ) }
    dend_56 { pt3dadd( -83.5255, 99.7366, -10.2176, 1.03 ) }
    dend_56 { pt3dadd( -83.6637, 100.124, -10.1039, 1.25 ) }
    dend_56 { pt3dadd( -84.0515, 101.116, -9.77244, 0.22 ) }
    dend_56 { pt3dadd( -84.2619, 101.58, -9.61177, 0.44 ) }
    dend_56 { pt3dadd( -84.7129, 102.415, -9.31471, 0.22 ) }
    dend_56 { pt3dadd( -85.0907, 103.055, -9.04433, 0.52 ) }
    dend_56 { pt3dadd( -85.3753, 103.526, -8.83762, 0.52 ) }
    dend_56 { pt3dadd( -86.0653, 104.727, -8.32226, 0.22 ) }
    dend_56 { pt3dadd( -86.4162, 105.389, -8.05252, 0.29 ) }
    dend_56 { pt3dadd( -86.7545, 106.073, -7.78769, 0.29 ) }
    dend_56 { pt3dadd( -87.4146, 107.455, -7.27869, 1.11 ) }
    dend_56 { pt3dadd( -87.629, 107.923, -7.13148, 1.33 ) }
    dend_56 { pt3dadd( -87.998, 108.803, -6.8891, 0.29 ) }
    dend_56 { pt3dadd( -88.3271, 109.695, -6.67458, 0.29 ) }
    dend_56 { pt3dadd( -88.447, 110.057, -6.60268, 0.44 ) }
    dend_56 { pt3dadd( -88.7681, 111.067, -6.45034, 0.22 ) }
    dend_56 { pt3dadd( -89.1055, 112.101, -6.33849, 0.66 ) }
    dend_56 { pt3dadd( -89.2212, 112.415, -6.3027, 1.18 ) }
    dend_56 { pt3dadd( -89.415, 112.855, -6.24851, 1.18 ) }
    dend_56 { pt3dadd( -89.5722, 113.203, -6.20538, 0.74 ) }
    dend_56 { pt3dadd( -90.1491, 114.508, -6.05128, 0.22 ) }
    dend_56 { pt3dadd( -90.3706, 115.021, -5.99783, 0.66 ) }
    dend_56 { pt3dadd( -90.7847, 115.89, -5.87621, 0.22 ) }
    dend_56 { pt3dadd( -91.0065, 116.309, -5.80534, 0.52 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 31/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -1.17912, 9.01879, 11.4844, 0.44 ) }
    dend_55 { pt3dadd( -1.27492, 10.1333, 10.6865, 0.44 ) }
    dend_55 { pt3dadd( -1.35496, 10.7469, 10.2576, 0.44 ) }
    dend_55 { pt3dadd( -1.45625, 11.4914, 9.75364, 0.96 ) }
    dend_55 { pt3dadd( -1.50593, 11.982, 9.42746, 0.96 ) }
    dend_55 { pt3dadd( -1.6273, 13.3424, 8.64102, 0.52 ) }
    dend_55 { pt3dadd( -1.67745, 13.8446, 8.40806, 0.52 ) }
    dend_55 { pt3dadd( -1.7492, 14.3049, 8.21817, 0.66 ) }
    dend_55 { pt3dadd( -1.90127, 14.932, 8.08373, 0.37 ) }
    dend_55 { pt3dadd( -2.01947, 15.4114, 8.12727, 0.37 ) }
    dend_55 { pt3dadd( -2.19326, 16.4044, 8.34821, 0.37 ) }
    dend_55 { pt3dadd( -2.30152, 17.3486, 8.60362, 0.59 ) }
    dend_55 { pt3dadd( -2.35092, 17.8951, 8.72643, 0.81 ) }
    dend_55 { pt3dadd( -2.39441, 18.4347, 8.83161, 0.81 ) }
    dend_55 { pt3dadd( -2.51842, 19.8458, 9.12322, 0.29 ) }
    dend_55 { pt3dadd( -2.62428, 20.8863, 9.2887, 0.29 ) }
    dend_55 { pt3dadd( -2.69616, 21.718, 9.37951, 0.29 ) }
    dend_55 { pt3dadd( -2.72896, 22.4083, 9.42182, 0.29 ) }
    dend_55 { pt3dadd( -2.74198, 23.0408, 9.45051, 0.88 ) }
    dend_55 { pt3dadd( -2.76293, 23.8483, 9.46797, 0.88 ) }
    dend_55 { pt3dadd( -2.86347, 24.4855, 9.50306, 0.52 ) }
    dend_55 { pt3dadd( -3.06437, 25.1372, 9.66727, 0.37 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 53/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.01439, -27.8655, -1.19108, 1.77 ) }
    dend_29 { pt3dadd( -4.67077, -29.3092, -1.17205, 1.77 ) }
    dend_29 { pt3dadd( -4.47684, -30.0286, -1.11331, 1.77 ) }
    dend_29 { pt3dadd( -4.18913, -30.8148, -1.23596, 1.77 ) }
    dend_29 { pt3dadd( -3.76282, -31.6641, -1.54044, 1.77 ) }
    dend_29 { pt3dadd( -3.27077, -32.6445, -1.89187, 1.92 ) }
    dend_29 { pt3dadd( -2.89406, -33.3951, -2.16092, 2.14 ) }
    dend_29 { pt3dadd( -2.31456, -34.3445, -2.55915, 2.36 ) }
    dend_29 { pt3dadd( -0.520282, -36.9121, -4.0692, 1.77 ) }
    dend_29 { pt3dadd( 0.183274, -37.7528, -4.80648, 1.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 63/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -5.01439, -27.8655, -1.19108, 0.81 ) }
    dend_28 { pt3dadd( -4.02646, -29.1045, -0.712667, 0.81 ) }
    dend_28 { pt3dadd( -2.37724, -30.8015, -0.171637, 0.66 ) }
    dend_28 { pt3dadd( -1.67282, -31.3796, -0.0200847, 0.88 ) }
    dend_28 { pt3dadd( -0.501679, -32.1995, 0.127266, 0.59 ) }
    dend_28 { pt3dadd( 0.693705, -32.9444, 0.155478, 0.88 ) }
    dend_28 { pt3dadd( 2.00189, -33.6881, 0.0566846, 1.18 ) }
    dend_28 { pt3dadd( 3.06933, -34.1996, -0.244715, 0.81 ) }
    dend_28 { pt3dadd( 4.32469, -34.6732, -0.761788, 0.66 ) }
    dend_28 { pt3dadd( 5.19018, -34.9645, -1.15751, 0.59 ) }
    dend_28 { pt3dadd( 6.38264, -35.3435, -1.742, 0.88 ) }
    dend_28 { pt3dadd( 7.44481, -35.6885, -2.29502, 0.74 ) }
    dend_28 { pt3dadd( 8.55045, -36.1029, -2.90232, 0.59 ) }
    dend_28 { pt3dadd( 9.68952, -36.5856, -3.54704, 0.74 ) }
    dend_28 { pt3dadd( 10.6986, -37.0629, -4.10566, 0.74 ) }
    dend_28 { pt3dadd( 11.3122, -37.3816, -4.42462, 0.88 ) }
    dend_28 { pt3dadd( 11.99, -37.7813, -4.74728, 0.88 ) }
    dend_28 { pt3dadd( 12.8515, -38.3655, -5.14403, 0.66 ) }
    dend_28 { pt3dadd( 13.6961, -39.0724, -5.56406, 0.66 ) }
    dend_28 { pt3dadd( 14.1727, -39.619, -5.85226, 0.52 ) }
    dend_28 { pt3dadd( 14.6597, -40.403, -6.19942, 0.52 ) }
    dend_28 { pt3dadd( 14.9057, -41.0051, -6.38216, 0.96 ) }
    dend_28 { pt3dadd( 15.0382, -41.4361, -6.45902, 1.18 ) }
    dend_28 { pt3dadd( 15.305, -42.3956, -6.55375, 1.03 ) }
    dend_28 { pt3dadd( 15.4753, -42.912, -6.53999, 1.18 ) }
    dend_28 { pt3dadd( 15.7943, -43.6084, -6.439, 1.03 ) }
    dend_28 { pt3dadd( 16.4642, -44.6649, -6.15854, 0.37 ) }
    dend_28 { pt3dadd( 17.1573, -45.516, -5.82769, 0.74 ) }
    dend_28 { pt3dadd( 17.5895, -45.9784, -5.58236, 0.88 ) }
    dend_28 { pt3dadd( 18.5939, -46.983, -4.9366, 0.59 ) }
    dend_28 { pt3dadd( 19.1171, -47.5121, -4.57555, 0.59 ) }
    dend_28 { pt3dadd( 19.7252, -48.1643, -4.13159, 0.88 ) }
    dend_28 { pt3dadd( 20.4422, -49.0202, -3.5858, 0.74 ) }
    dend_28 { pt3dadd( 21.0473, -49.8565, -3.101, 1.25 ) }
    dend_28 { pt3dadd( 21.4223, -50.413, -2.83319, 1.25 ) }
    dend_28 { pt3dadd( 21.8608, -51.0866, -2.60021, 0.81 ) }
    dend_28 { pt3dadd( 22.2939, -51.785, -2.41486, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_28 { pt3dadd( 22.7971, -52.603, -2.26381, 0.59 ) }
    dend_28 { pt3dadd( 23.2348, -53.2778, -2.22064, 0.59 ) }
    dend_28 { pt3dadd( 24.0065, -54.3198, -2.23699, 0.44 ) }
    dend_28 { pt3dadd( 24.5463, -54.9349, -2.25659, 0.52 ) }
    dend_28 { pt3dadd( 25.1292, -55.4989, -2.28415, 0.44 ) }
    dend_28 { pt3dadd( 25.8443, -56.1216, -2.32405, 0.44 ) }
    dend_28 { pt3dadd( 26.4179, -56.6141, -2.35583, 0.52 ) }
    dend_28 { pt3dadd( 27.1275, -57.2651, -2.3766, 0.66 ) }
    dend_28 { pt3dadd( 27.7611, -57.8973, -2.40529, 0.66 ) }
    dend_28 { pt3dadd( 28.5665, -58.799, -2.42958, 0.52 ) }
    dend_28 { pt3dadd( 28.9361, -59.2398, -2.40394, 0.81 ) }
    dend_28 { pt3dadd( 29.3664, -59.8237, -2.32125, 0.81 ) }
    dend_28 { pt3dadd( 29.8207, -60.5269, -2.18501, 0.66 ) }
    dend_28 { pt3dadd( 30.4772, -61.6819, -1.94897, 0.52 ) }
    dend_28 { pt3dadd( 31.0537, -62.8108, -1.70413, 0.52 ) }
    dend_28 { pt3dadd( 31.5556, -63.8626, -1.44571, 1.18 ) }
    dend_28 { pt3dadd( 31.8103, -64.3884, -1.30439, 1.4 ) }
    dend_28 { pt3dadd( 32.2508, -65.2337, -1.05456, 1.25 ) }
    dend_28 { pt3dadd( 32.7956, -66.2028, -0.706709, 1.03 ) }
    dend_28 { pt3dadd( 32.9939, -66.5237, -0.558476, 1.03 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.92703, 49.734, -12.0372, 1.33 ) }
    dend_6 { pt3dadd( -9.84414, 51.2214, -12.2102, 1.33 ) }
    dend_6 { pt3dadd( -10.7606, 52.8791, -12.3446, 1.33 ) }
    dend_6 { pt3dadd( -11.6126, 54.542, -12.3633, 1.33 ) }
    dend_6 { pt3dadd( -12.5178, 56.4749, -12.2557, 1.33 ) }
    dend_6 { pt3dadd( -13.4366, 58.648, -12.0354, 1.47 ) }
    dend_6 { pt3dadd( -14.0334, 60.249, -11.8171, 1.69 ) }
    dend_6 { pt3dadd( -14.4057, 61.6059, -11.5543, 1.77 ) }
    dend_6 { pt3dadd( -14.725, 63.1652, -11.167, 1.99 ) }
    dend_6 { pt3dadd( -14.9689, 64.733, -10.7518, 2.14 ) }
    dend_6 { pt3dadd( -15.2187, 66.6201, -10.2472, 1.84 ) }
    dend_6 { pt3dadd( -15.5335, 68.8429, -9.69177, 1.84 ) }
    dend_6 { pt3dadd( -15.8738, 70.7737, -9.29534, 1.84 ) }
    dend_6 { pt3dadd( -16.1571, 72.0865, -9.11748, 1.92 ) }
    dend_6 { pt3dadd( -16.5721, 73.7241, -9.00429, 1.92 ) }
    dend_6 { pt3dadd( -17.0129, 75.2969, -8.94434, 1.92 ) }
    dend_6 { pt3dadd( -17.5184, 76.8934, -8.92386, 1.62 ) }
    dend_6 { pt3dadd( -18.2293, 78.8295, -8.9689, 1.62 ) }
    dend_6 { pt3dadd( -18.9707, 80.629, -9.06707, 1.77 ) }
    dend_6 { pt3dadd( -19.6527, 82.1968, -9.19806, 2.14 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -8.92703, 49.734, -12.0372, 0.66 ) }
    dend_1 { pt3dadd( -7.94948, 51.4897, -12.2417, 0.66 ) }
    dend_1 { pt3dadd( -7.33062, 52.4315, -12.2687, 0.66 ) }
    dend_1 { pt3dadd( -7.08145, 52.7719, -12.2448, 0.96 ) }
    dend_1 { pt3dadd( -6.59347, 53.4106, -12.1354, 0.96 ) }
    dend_1 { pt3dadd( -6.22308, 53.9265, -11.959, 0.74 ) }
    dend_1 { pt3dadd( -5.95666, 54.3396, -11.7908, 0.66 ) }
    dend_1 { pt3dadd( -5.52494, 54.9923, -11.4149, 0.66 ) }
    dend_1 { pt3dadd( -5.15354, 55.5413, -11.0991, 0.66 ) }
    dend_1 { pt3dadd( -4.78562, 56.0601, -10.8269, 0.66 ) }
    dend_1 { pt3dadd( -3.7635, 57.3567, -10.2808, 0.88 ) }
    dend_1 { pt3dadd( -3.02998, 58.1816, -10.0357, 0.29 ) }
    dend_1 { pt3dadd( -2.39651, 58.7873, -9.96884, 0.29 ) }
    dend_1 { pt3dadd( -1.48015, 59.4142, -10.1561, 1.18 ) }
    dend_1 { pt3dadd( -1.03391, 59.6384, -10.3455, 1.62 ) }
    dend_1 { pt3dadd( 0.0960168, 60.0933, -10.9586, 0.81 ) }
    dend_1 { pt3dadd( 0.771545, 60.319, -11.378, 0.81 ) }
    dend_1 { pt3dadd( 1.42839, 60.4943, -11.809, 1.03 ) }
    dend_1 { pt3dadd( 2.43194, 60.7435, -12.5138, 0.44 ) }
    dend_1 { pt3dadd( 3.28184, 60.9583, -13.1452, 0.44 ) }
    dend_1 { pt3dadd( 3.8251, 61.1226, -13.5404, 1.18 ) }
    dend_1 { pt3dadd( 4.24936, 61.2935, -13.8137, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.50121, -40.8873, 0.0443568, 0.15 ) }
    axon_1 { pt3dadd( -2.07943, -55.8762, 0.0443568, 0.15 ) }
    axon_1 { pt3dadd( -2.65765, -70.865, 0.0443568, 0.15 ) }
    // Section: dend_37, id: dend_37, parent: dend_29 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.183274, -37.7528, -4.80648, 1.03 ) }
    dend_37 { pt3dadd( 0.106563, -39.6435, -8.13574, 1.03 ) }
    dend_37 { pt3dadd( -0.391492, -41.0906, -10.5707, 0.81 ) }
    dend_37 { pt3dadd( -0.753003, -41.7199, -11.6307, 0.81 ) }
    dend_37 { pt3dadd( -1.26678, -42.3421, -12.7759, 0.81 ) }
    dend_37 { pt3dadd( -1.74681, -42.7945, -13.716, 1.11 ) }
    dend_37 { pt3dadd( -2.3205, -43.1941, -14.681, 1.11 ) }
    dend_37 { pt3dadd( -3.27973, -43.465, -15.6653, 1.4 ) }
    dend_37 { pt3dadd( -3.97828, -43.541, -16.2669, 1.4 ) }
    dend_37 { pt3dadd( -5.13257, -43.5027, -17.369, 1.11 ) }
    dend_37 { pt3dadd( -5.71098, -43.3391, -18.0069, 1.33 ) }
    dend_37 { pt3dadd( -6.68982, -42.747, -19.2549, 1.03 ) }
    dend_37 { pt3dadd( -7.14691, -42.2256, -20.261, 0.81 ) }
    dend_37 { pt3dadd( -7.38204, -41.8715, -20.9849, 0.81 ) }
    dend_37 { pt3dadd( -7.86176, -41.1538, -22.7745, 0.81 ) }
    dend_37 { pt3dadd( -8.30961, -40.5701, -24.7369, 1.03 ) }
    dend_37 { pt3dadd( -8.64244, -40.273, -26.2806, 1.33 ) }
    dend_37 { pt3dadd( -9.71009, -39.9615, -31.4461, 1.03 ) }
    dend_37 { pt3dadd( -10.1189, -40.1183, -33.1358, 1.03 ) }
    dend_37 { pt3dadd( -10.7534, -40.6364, -35.0979, 1.33 ) }
    dend_37 { pt3dadd( -11.36, -41.2655, -36.4616, 1.33 ) }
    dend_37 { pt3dadd( -11.9404, -41.9265, -37.4609, 1.47 ) }
    dend_37 { pt3dadd( -13.047, -43.0947, -38.791, 1.11 ) }
    dend_37 { pt3dadd( -14.0878, -44.0133, -39.5918, 0.88 ) }
    dend_37 { pt3dadd( -14.8773, -44.5709, -40.1384, 1.55 ) }
    dend_37 { pt3dadd( -15.7364, -44.9993, -40.7087, 1.84 ) }
    dend_37 { pt3dadd( -16.6645, -45.2614, -41.3326, 1.99 ) }
    dend_37 { pt3dadd( -18.2753, -45.3278, -42.4006, 1.18 ) }
    dend_37 { pt3dadd( -19.3565, -45.0927, -43.0911, 0.88 ) }
    dend_37 { pt3dadd( -20.4462, -44.5812, -43.7896, 1.25 ) }
    dend_37 { pt3dadd( -21.2695, -43.9318, -44.3344, 1.47 ) }
    dend_37 { pt3dadd( -22.1496, -42.9197, -45.1017, 1.18 ) }
    dend_37 { pt3dadd( -22.8379, -41.8846, -46.4312, 0.96 ) }
    dend_37 { pt3dadd( -22.9417, -41.6482, -47.111, 1.18 ) }
    dend_37 { pt3dadd( -22.9938, -41.5189, -47.8368, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_37 { pt3dadd( -23.1231, -41.3629, -49.3784, 0.74 ) }
    dend_37 { pt3dadd( -23.4646, -41.2399, -52.3944, 0.74 ) }
    dend_37 { pt3dadd( -24.0118, -41.2497, -57.9286, 1.47 ) }
    dend_37 { pt3dadd( -24.3106, -41.3658, -61.2523, 1.99 ) }
    dend_37 { pt3dadd( -24.5725, -41.557, -64.179, 1.47 ) }
    dend_37 { pt3dadd( -24.7281, -41.7263, -65.8814, 1.62 ) }
    dend_37 { pt3dadd( -24.96, -42.0733, -68.3419, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 0.183274, -37.7528, -4.80648, 0.88 ) }
    dend_30 { pt3dadd( 1.15148, -38.3193, -5.11822, 0.88 ) }
    dend_30 { pt3dadd( 1.88343, -38.836, -5.45327, 1.03 ) }
    dend_30 { pt3dadd( 2.55077, -39.4535, -5.85998, 1.03 ) }
    dend_30 { pt3dadd( 3.07914, -40.1413, -6.31325, 0.88 ) }
    dend_30 { pt3dadd( 3.5404, -40.9673, -6.84183, 0.81 ) }
    dend_30 { pt3dadd( 3.95634, -41.9792, -7.52197, 1.03 ) }
    dend_30 { pt3dadd( 4.02523, -42.5531, -7.94779, 1.33 ) }
    dend_30 { pt3dadd( 3.92016, -43.3809, -8.71298, 0.88 ) }
    dend_30 { pt3dadd( 3.63206, -44.2283, -9.65276, 0.66 ) }
    dend_30 { pt3dadd( 3.44967, -44.6515, -10.2332, 0.96 ) }
    dend_30 { pt3dadd( 3.29882, -45.1189, -11.0589, 0.66 ) }
    dend_30 { pt3dadd( 3.29529, -45.4806, -11.8478, 0.74 ) }
    dend_30 { pt3dadd( 3.67671, -46.1582, -13.6133, 0.88 ) }
    dend_30 { pt3dadd( 3.97193, -46.3724, -14.2273, 1.11 ) }
    dend_30 { pt3dadd( 5.02704, -46.9394, -15.8053, 0.88 ) }
    dend_30 { pt3dadd( 6.24673, -47.597, -17.5004, 0.74 ) }
    dend_30 { pt3dadd( 7.15574, -48.1442, -18.6758, 0.74 ) }
    dend_30 { pt3dadd( 7.86109, -48.6264, -19.5711, 0.74 ) }
    dend_30 { pt3dadd( 8.4844, -49.1235, -20.3598, 0.66 ) }
    dend_30 { pt3dadd( 9.56874, -50.1471, -21.7886, 0.96 ) }
    dend_30 { pt3dadd( 10.2872, -50.9875, -22.756, 1.25 ) }
    dend_30 { pt3dadd( 10.9359, -51.8705, -23.6354, 0.81 ) }
    dend_30 { pt3dadd( 11.6798, -52.9429, -24.6371, 0.74 ) }
    dend_30 { pt3dadd( 12.1693, -53.6033, -25.2042, 0.88 ) }
    dend_30 { pt3dadd( 12.9027, -54.4422, -25.7612, 0.59 ) }
    dend_30 { pt3dadd( 13.8165, -55.2434, -26.049, 0.59 ) }
    dend_30 { pt3dadd( 14.6882, -55.8694, -26.12, 1.18 ) }
    dend_30 { pt3dadd( 15.1156, -56.1324, -26.0534, 1.62 ) }
    dend_30 { pt3dadd( 15.5656, -56.3825, -25.9003, 1.84 ) }
    dend_30 { pt3dadd( 16.7745, -56.9837, -25.3738, 1.18 ) }
    dend_30 { pt3dadd( 17.7192, -57.3945, -25.0045, 0.81 ) }
    dend_30 { pt3dadd( 18.1243, -57.5551, -24.8874, 0.96 ) }
    dend_30 { pt3dadd( 19.2326, -57.9798, -24.7792, 0.59 ) }
    dend_30 { pt3dadd( 19.636, -58.1414, -24.8133, 0.66 ) }
    dend_30 { pt3dadd( 20.3983, -58.4761, -24.99, 0.52 ) }
    dend_30 { pt3dadd( 21.9879, -59.2984, -25.6746, 1.18 ) }
    dend_30 { pt3dadd( 22.5953, -59.6824, -26.0204, 1.25 ) }
    dend_30 { pt3dadd( 23.7087, -60.4403, -26.9028, 0.88 ) }
    dend_30 { pt3dadd( 24.1865, -60.7683, -27.3381, 0.88 ) }
    dend_30 { pt3dadd( 24.8376, -61.2015, -27.9413, 0.66 ) }
    dend_30 { pt3dadd( 26.0763, -61.9216, -29.0979, 1.47 ) }
    dend_30 { pt3dadd( 26.6489, -62.1973, -29.6237, 1.69 ) }
    dend_30 { pt3dadd( 29.3525, -63.2594, -32.0623, 0.81 ) }
    dend_30 { pt3dadd( 29.9492, -63.4539, -32.5751, 0.81 ) }
    dend_30 { pt3dadd( 30.6934, -63.6592, -33.1706, 0.66 ) }
    dend_30 { pt3dadd( 32.4355, -64.0478, -34.4057, 1.03 ) }
    dend_30 { pt3dadd( 33.0218, -64.1514, -34.7352, 1.03 ) }
    dend_30 { pt3dadd( 33.7964, -64.3083, -35.0492, 1.33 ) }
    dend_30 { pt3dadd( 35.0215, -64.6822, -35.2205, 0.88 ) }
    dend_30 { pt3dadd( 35.9088, -65.07, -35.2486, 0.88 ) }
    dend_30 { pt3dadd( 36.5835, -65.4768, -35.1639, 0.74 ) }
    dend_30 { pt3dadd( 36.8442, -65.6678, -35.0889, 0.88 ) }
    dend_30 { pt3dadd( 37.613, -66.2636, -34.8132, 0.44 ) }
    dend_30 { pt3dadd( 38.2587, -66.7598, -34.5424, 1.77 ) }
    dend_30 { pt3dadd( 38.6071, -67.0358, -34.3733, 2.06 ) }
    dend_30 { pt3dadd( 38.9995, -67.4216, -34.1461, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 64/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -19.6527, 82.1968, -9.19806, 1.25 ) }
    dend_12 { pt3dadd( -19.1061, 83.8901, -10.874, 1.25 ) }
    dend_12 { pt3dadd( -18.8387, 84.6081, -11.4725, 1.4 ) }
    dend_12 { pt3dadd( -18.4039, 85.9139, -12.367, 1.11 ) }
    dend_12 { pt3dadd( -17.9161, 87.6271, -13.3511, 1.33 ) }
    dend_12 { pt3dadd( -17.6266, 88.8483, -13.9565, 1.25 ) }
    dend_12 { pt3dadd( -17.276, 90.5463, -14.7224, 1.25 ) }
    dend_12 { pt3dadd( -16.8828, 92.4728, -15.4523, 1.47 ) }
    dend_12 { pt3dadd( -16.5086, 94.3233, -16.0727, 1.69 ) }
    dend_12 { pt3dadd( -16.2082, 95.9717, -16.4928, 1.84 ) }
    dend_12 { pt3dadd( -16.0162, 97.409, -16.7417, 2.14 ) }
    dend_12 { pt3dadd( -15.9494, 98.832, -16.9314, 2.14 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -19.6527, 82.1968, -9.19806, 0.96 ) }
    dend_7 { pt3dadd( -20.2439, 83.0188, -8.96073, 0.96 ) }
    dend_7 { pt3dadd( -20.6605, 83.5628, -8.89086, 0.81 ) }
    dend_7 { pt3dadd( -21.4618, 84.5086, -8.90955, 0.66 ) }
    dend_7 { pt3dadd( -21.917, 84.9786, -8.99751, 0.59 ) }
    dend_7 { pt3dadd( -22.4796, 85.4927, -9.1666, 0.59 ) }
    dend_7 { pt3dadd( -23.2044, 86.0811, -9.45367, 0.74 ) }
    dend_7 { pt3dadd( -23.8094, 86.465, -9.80522, 0.74 ) }
    dend_7 { pt3dadd( -24.3033, 86.7269, -10.1617, 1.11 ) }
    dend_7 { pt3dadd( -24.8995, 87.0035, -10.6452, 0.74 ) }
    dend_7 { pt3dadd( -25.3196, 87.1989, -10.9915, 1.25 ) }
    dend_7 { pt3dadd( -25.942, 87.5307, -11.5032, 0.96 ) }
    dend_7 { pt3dadd( -26.6202, 87.9911, -11.9995, 0.44 ) }
    dend_7 { pt3dadd( -26.8614, 88.2266, -12.1702, 0.44 ) }
    dend_7 { pt3dadd( -27.0874, 88.5629, -12.3299, 0.74 ) }
    dend_7 { pt3dadd( -27.3104, 89.0725, -12.4762, 0.74 ) }
    dend_7 { pt3dadd( -27.5211, 89.665, -12.5224, 0.74 ) }
    dend_7 { pt3dadd( -27.7585, 90.3708, -12.3966, 0.59 ) }
    dend_7 { pt3dadd( -27.9384, 90.8865, -12.181, 0.59 ) }
    dend_7 { pt3dadd( -28.1247, 91.4009, -11.8519, 0.88 ) }
    dend_7 { pt3dadd( -28.2833, 91.8649, -11.5042, 0.66 ) }
    dend_7 { pt3dadd( -28.7033, 92.946, -10.5, 0.66 ) }
    dend_7 { pt3dadd( -29.0406, 93.7073, -9.70541, 0.96 ) }
    dend_7 { pt3dadd( -29.2335, 94.0997, -9.2744, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_7 { pt3dadd( -29.5056, 94.5875, -8.72136, 0.52 ) }
    dend_7 { pt3dadd( -29.8612, 95.1579, -8.08663, 0.88 ) }
    dend_7 { pt3dadd( -30.3876, 95.9692, -7.29939, 0.59 ) }
    dend_7 { pt3dadd( -30.6633, 96.3961, -6.99484, 0.59 ) }
    dend_7 { pt3dadd( -30.9338, 96.782, -6.77854, 0.59 ) }
    dend_7 { pt3dadd( -31.4492, 97.4304, -6.46313, 0.59 ) }
    dend_7 { pt3dadd( -31.9455, 97.9905, -6.21542, 1.11 ) }
    dend_7 { pt3dadd( -32.6135, 98.6965, -5.92387, 0.59 ) }
    dend_7 { pt3dadd( -33.0273, 99.1358, -5.79031, 0.59 ) }
    dend_7 { pt3dadd( -33.5259, 99.6411, -5.64196, 0.81 ) }
    dend_7 { pt3dadd( -34.0237, 100.142, -5.51156, 0.81 ) }
    dend_7 { pt3dadd( -34.5407, 100.667, -5.41796, 0.96 ) }
    dend_7 { pt3dadd( -35.0032, 101.122, -5.35659, 1.03 ) }
    dend_7 { pt3dadd( -35.4621, 101.528, -5.31461, 1.33 ) }
    dend_7 { pt3dadd( -35.9473, 101.921, -5.26059, 1.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 15/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 4.24936, 61.2935, -13.8137, 0.88 ) }
    dend_3 { pt3dadd( 5.063, 61.5134, -13.986, 0.88 ) }
    dend_3 { pt3dadd( 5.72213, 61.6329, -14.1276, 0.66 ) }
    dend_3 { pt3dadd( 6.21608, 61.6924, -14.2354, 1.03 ) }
    dend_3 { pt3dadd( 6.78104, 61.7601, -14.3784, 1.18 ) }
    dend_3 { pt3dadd( 7.27024, 61.8403, -14.5295, 1.18 ) }
    dend_3 { pt3dadd( 7.64319, 61.9232, -14.6661, 0.81 ) }
    dend_3 { pt3dadd( 8.10619, 62.0523, -14.8821, 0.44 ) }
    dend_3 { pt3dadd( 8.61483, 62.2601, -15.1735, 0.44 ) }
    dend_3 { pt3dadd( 9.16921, 62.6184, -15.5525, 0.44 ) }
    dend_3 { pt3dadd( 9.67033, 63.0723, -15.9299, 0.59 ) }
    dend_3 { pt3dadd( 10.0094, 63.434, -16.1869, 0.81 ) }
    dend_3 { pt3dadd( 10.2745, 63.7233, -16.3765, 0.81 ) }
    dend_3 { pt3dadd( 10.6073, 64.0805, -16.5924, 0.66 ) }
    dend_3 { pt3dadd( 11.0308, 64.4785, -16.8221, 0.66 ) }
    dend_3 { pt3dadd( 11.5676, 64.8641, -17.0385, 0.66 ) }
    dend_3 { pt3dadd( 12.0537, 65.1021, -17.1862, 0.88 ) }
    dend_3 { pt3dadd( 12.5872, 65.2762, -17.3237, 0.52 ) }
    dend_3 { pt3dadd( 12.9811, 65.3514, -17.4183, 0.96 ) }
    dend_3 { pt3dadd( 13.4741, 65.3706, -17.5355, 0.96 ) }
    dend_3 { pt3dadd( 13.8597, 65.3221, -17.6262, 1.11 ) }
    dend_3 { pt3dadd( 14.3536, 65.1649, -17.7563, 1.18 ) }
    dend_3 { pt3dadd( 14.7108, 64.9855, -17.8585, 1.18 ) }
    dend_3 { pt3dadd( 15.1297, 64.6885, -18.0066, 0.66 ) }
    dend_3 { pt3dadd( 15.6934, 64.1635, -18.2615, 0.96 ) }
    dend_3 { pt3dadd( 16.213, 63.5338, -18.5619, 0.44 ) }
    dend_3 { pt3dadd( 16.7713, 62.7118, -18.9919, 0.37 ) }
    dend_3 { pt3dadd( 17.0598, 62.2436, -19.2658, 1.18 ) }
    dend_3 { pt3dadd( 17.369, 61.7278, -19.6035, 1.33 ) }
    dend_3 { pt3dadd( 17.6002, 61.3367, -19.8911, 1.33 ) }
    dend_3 { pt3dadd( 17.9717, 60.6732, -20.4677, 0.59 ) }
    dend_3 { pt3dadd( 18.2904, 60.0439, -21.1039, 0.37 ) }
    dend_3 { pt3dadd( 18.4809, 59.6114, -21.5837, 0.37 ) }
    dend_3 { pt3dadd( 18.5972, 59.2712, -22.0005, 0.37 ) }
    dend_3 { pt3dadd( 18.6942, 58.9132, -22.4599, 0.37 ) }
    dend_3 { pt3dadd( 18.7987, 58.3329, -23.2357, 0.52 ) }
    dend_3 { pt3dadd( 18.8491, 57.8533, -23.8926, 0.52 ) }
    dend_3 { pt3dadd( 18.8738, 57.4008, -24.4741, 0.52 ) }
    dend_3 { pt3dadd( 18.9275, 56.435, -25.5504, 0.96 ) }
    dend_3 { pt3dadd( 18.9947, 55.7976, -26.1719, 1.47 ) }
    dend_3 { pt3dadd( 19.1036, 55.2674, -26.6369, 1.69 ) }
    dend_3 { pt3dadd( 19.2266, 54.9044, -26.9228, 1.92 ) }
    dend_3 { pt3dadd( 19.436, 54.4549, -27.2517, 1.92 ) }
    dend_3 { pt3dadd( 20.028, 53.4494, -27.9213, 0.74 ) }
    dend_3 { pt3dadd( 20.5512, 52.7037, -28.3396, 0.37 ) }
    dend_3 { pt3dadd( 20.9307, 52.2423, -28.5853, 0.88 ) }
    dend_3 { pt3dadd( 21.2078, 51.9681, -28.7328, 1.11 ) }
    dend_3 { pt3dadd( 21.4648, 51.7517, -28.8597, 1.11 ) }
    dend_3 { pt3dadd( 21.8225, 51.4845, -29.0277, 1.33 ) }
    dend_3 { pt3dadd( 22.0405, 51.3308, -29.1252, 1.33 ) }
    dend_3 { pt3dadd( 22.4119, 51.0054, -29.2702, 0.81 ) }
    dend_3 { pt3dadd( 22.7025, 50.578, -29.4035, 0.44 ) }
    dend_3 { pt3dadd( 22.9375, 50.0574, -29.5693, 0.37 ) }
    dend_3 { pt3dadd( 23.1745, 49.4087, -29.8086, 0.37 ) }
    dend_3 { pt3dadd( 23.3084, 49.0064, -29.981, 1.18 ) }
    dend_3 { pt3dadd( 23.454, 48.5567, -30.1985, 1.4 ) }
    dend_3 { pt3dadd( 23.7637, 47.6185, -30.7399, 0.29 ) }
    dend_3 { pt3dadd( 24.0999, 46.789, -31.3552, 0.66 ) }
    dend_3 { pt3dadd( 24.4249, 46.1801, -31.9332, 1.11 ) }
    dend_3 { pt3dadd( 24.6648, 45.7923, -32.3651, 1.62 ) }
    dend_3 { pt3dadd( 24.7745, 45.615, -32.5722, 1.84 ) }
    dend_3 { pt3dadd( 25.0568, 45.1638, -33.1051, 1.84 ) }
    dend_3 { pt3dadd( 25.4359, 44.504, -33.8833, 0.81 ) }
    dend_3 { pt3dadd( 25.7263, 43.9398, -34.5012, 0.44 ) }
    dend_3 { pt3dadd( 25.9201, 43.531, -34.908, 0.44 ) }
    dend_3 { pt3dadd( 26.2324, 42.8968, -35.4796, 0.44 ) }
    dend_3 { pt3dadd( 26.4563, 42.4735, -35.824, 0.59 ) }
    dend_3 { pt3dadd( 27.0166, 41.5501, -36.4834, 0.52 ) }
    dend_3 { pt3dadd( 27.3448, 41.0988, -36.775, 0.37 ) }
    dend_3 { pt3dadd( 27.6643, 40.7613, -37.0303, 0.96 ) }
    dend_3 { pt3dadd( 28.1334, 40.345, -37.4053, 1.62 ) }
    dend_3 { pt3dadd( 28.3526, 40.1648, -37.5772, 1.99 ) }
    dend_3 { pt3dadd( 28.7734, 39.8002, -37.9132, 1.99 ) }
    dend_3 { pt3dadd( 29.0392, 39.5588, -38.1129, 1.47 ) }
    dend_3 { pt3dadd( 29.9932, 38.5883, -38.8629, 0.52 ) }
    dend_3 { pt3dadd( 30.57, 37.9936, -39.3151, 0.52 ) }
    dend_3 { pt3dadd( 31.0181, 37.5375, -39.6575, 0.88 ) }
    dend_3 { pt3dadd( 31.4831, 37.0902, -39.991, 0.59 ) }
    dend_3 { pt3dadd( 31.8884, 36.72, -40.2541, 0.37 ) }
    dend_3 { pt3dadd( 32.2307, 36.4295, -40.4269, 0.37 ) }
    dend_3 { pt3dadd( 32.727, 36.058, -40.5631, 0.74 ) }
    dend_3 { pt3dadd( 33.0364, 35.8343, -40.6488, 0.74 ) }
    dend_3 { pt3dadd( 33.3029, 35.6213, -40.7541, 0.37 ) }
    dend_3 { pt3dadd( 33.4749, 35.451, -40.8523, 0.37 ) }
    dend_3 { pt3dadd( 33.837, 35.0024, -41.1363, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_3 { pt3dadd( 33.9684, 34.7847, -41.2783, 1.03 ) }
    dend_3 { pt3dadd( 34.4185, 33.8629, -41.8631, 0.37 ) }
    dend_3 { pt3dadd( 34.7019, 33.2128, -42.2748, 1.18 ) }
    dend_3 { pt3dadd( 34.9084, 32.6991, -42.5993, 1.47 ) }
    dend_3 { pt3dadd( 35.1666, 32.0831, -42.9948, 0.66 ) }
    dend_3 { pt3dadd( 35.5202, 31.3542, -43.5057, 0.29 ) }
    dend_3 { pt3dadd( 35.6942, 31.0589, -43.7171, 1.25 ) }
    dend_3 { pt3dadd( 35.903, 30.7634, -43.9438, 1.55 ) }
    dend_3 { pt3dadd( 36.1349, 30.4932, -44.1784, 1.55 ) }
    dend_3 { pt3dadd( 36.8012, 29.8698, -44.7929, 0.44 ) }
    dend_3 { pt3dadd( 37.6045, 29.2784, -45.4835, 1.18 ) }
    dend_3 { pt3dadd( 38.2357, 28.8919, -45.993, 1.84 ) }
    dend_3 { pt3dadd( 38.9928, 28.4746, -46.5897, 2.06 ) }
    dend_3 { pt3dadd( 39.8934, 28.0283, -47.3058, 0.29 ) }
    dend_3 { pt3dadd( 40.4377, 27.7842, -47.7473, 0.29 ) }
    dend_3 { pt3dadd( 41.0431, 27.5104, -48.2421, 1.18 ) }
    dend_3 { pt3dadd( 41.5402, 27.251, -48.6375, 0.88 ) }
    dend_3 { pt3dadd( 41.8633, 27.0719, -48.8858, 0.52 ) }
    dend_3 { pt3dadd( 42.5551, 26.6728, -49.3677, 0.52 ) }
    dend_3 { pt3dadd( 42.9644, 26.4127, -49.655, 0.52 ) }
    dend_3 { pt3dadd( 43.5646, 25.9949, -50.0659, 0.29 ) }
    dend_3 { pt3dadd( 44.0554, 25.6359, -50.3699, 0.29 ) }
    dend_3 { pt3dadd( 44.5246, 25.2983, -50.645, 0.66 ) }
    dend_3 { pt3dadd( 44.9535, 24.9761, -50.8779, 0.81 ) }
    dend_3 { pt3dadd( 45.1264, 24.8391, -50.9594, 0.81 ) }
    dend_3 { pt3dadd( 45.792, 24.3051, -51.2834, 0.29 ) }
    dend_3 { pt3dadd( 46.2904, 23.9212, -51.5381, 0.96 ) }
    dend_3 { pt3dadd( 46.7433, 23.5813, -51.7938, 1.03 ) }
    dend_3 { pt3dadd( 47.2624, 23.1786, -52.1002, 0.29 ) }
    dend_3 { pt3dadd( 47.5726, 22.9413, -52.2828, 0.29 ) }
    dend_3 { pt3dadd( 48.0652, 22.5896, -52.5626, 0.96 ) }
    dend_3 { pt3dadd( 48.5704, 22.2626, -52.8258, 0.96 ) }
    dend_3 { pt3dadd( 49.2588, 21.8708, -53.1584, 0.37 ) }
    dend_3 { pt3dadd( 49.9553, 21.5257, -53.4507, 0.66 ) }
    dend_3 { pt3dadd( 50.256, 21.3804, -53.5693, 0.96 ) }
    dend_3 { pt3dadd( 50.9865, 21.0087, -53.8367, 0.29 ) }
    dend_3 { pt3dadd( 51.7445, 20.6077, -54.0848, 1.03 ) }
    dend_3 { pt3dadd( 52.0167, 20.4659, -54.1719, 1.33 ) }
    dend_3 { pt3dadd( 52.7268, 20.1247, -54.3826, 0.37 ) }
    dend_3 { pt3dadd( 53.4055, 19.8618, -54.5953, 0.37 ) }
    dend_3 { pt3dadd( 53.9916, 19.6752, -54.8069, 0.37 ) }
    dend_3 { pt3dadd( 54.3574, 19.5837, -54.9544, 0.74 ) }
    dend_3 { pt3dadd( 54.9439, 19.4529, -55.208, 0.74 ) }
    dend_3 { pt3dadd( 55.3749, 19.3544, -55.4024, 0.37 ) }
    dend_3 { pt3dadd( 55.9298, 19.2424, -55.6598, 0.29 ) }
    dend_3 { pt3dadd( 56.5083, 19.1614, -55.9229, 0.29 ) }
    dend_3 { pt3dadd( 56.9763, 19.115, -56.1307, 0.88 ) }
    dend_3 { pt3dadd( 57.4794, 19.0735, -56.3453, 1.25 ) }
    dend_3 { pt3dadd( 58.0706, 19.0295, -56.5933, 1.18 ) }
    dend_3 { pt3dadd( 58.8529, 18.9823, -56.9211, 0.29 ) }
    dend_3 { pt3dadd( 59.4185, 18.9711, -57.1607, 0.74 ) }
    dend_3 { pt3dadd( 59.8941, 18.9757, -57.3602, 0.74 ) }
    dend_3 { pt3dadd( 60.4456, 18.9891, -57.6181, 0.37 ) }
    dend_3 { pt3dadd( 61.1198, 19.0051, -57.9727, 0.96 ) }
    dend_3 { pt3dadd( 61.5117, 19.0031, -58.1904, 1.33 ) }
    dend_3 { pt3dadd( 61.9005, 18.9675, -58.4237, 1.33 ) }
    dend_3 { pt3dadd( 62.5275, 18.8415, -58.8057, 0.37 ) }
    dend_3 { pt3dadd( 63.1901, 18.6448, -59.2104, 0.44 ) }
    dend_3 { pt3dadd( 63.6475, 18.4799, -59.4845, 0.44 ) }
    dend_3 { pt3dadd( 64.1584, 18.2857, -59.7688, 0.44 ) }
    dend_3 { pt3dadd( 64.898, 18.0028, -60.1529, 0.96 ) }
    dend_3 { pt3dadd( 65.3762, 17.808, -60.3785, 1.03 ) }
    dend_3 { pt3dadd( 65.716, 17.6605, -60.5204, 0.81 ) }
    dend_3 { pt3dadd( 66.1681, 17.4451, -60.6853, 0.52 ) }
    dend_3 { pt3dadd( 66.705, 17.169, -60.8664, 0.29 ) }
    dend_3 { pt3dadd( 66.9911, 17.0207, -60.9685, 0.29 ) }
    dend_3 { pt3dadd( 67.504, 16.775, -61.1062, 0.88 ) }
    dend_3 { pt3dadd( 67.9935, 16.5478, -61.2076, 1.25 ) }
    dend_3 { pt3dadd( 68.1935, 16.4471, -61.2396, 1.25 ) }
    dend_3 { pt3dadd( 68.8726, 16.0433, -61.3299, 0.29 ) }
    dend_3 { pt3dadd( 69.3511, 15.6999, -61.3904, 0.29 ) }
    dend_3 { pt3dadd( 70.1577, 15.0634, -61.4904, 0.29 ) }
    dend_3 { pt3dadd( 70.438, 14.8387, -61.53, 0.29 ) }
    dend_3 { pt3dadd( 71.0282, 14.3752, -61.6366, 0.96 ) }
    dend_3 { pt3dadd( 71.482, 14.0506, -61.7411, 0.96 ) }
    dend_3 { pt3dadd( 71.9873, 13.7265, -61.8939, 0.44 ) }
    dend_3 { pt3dadd( 72.3226, 13.5372, -62.0198, 0.37 ) }
    dend_3 { pt3dadd( 72.7172, 13.3526, -62.2191, 0.81 ) }
    dend_3 { pt3dadd( 73.3045, 13.1531, -62.5586, 0.29 ) }
    dend_3 { pt3dadd( 73.7749, 13.0142, -62.863, 0.29 ) }
    dend_3 { pt3dadd( 74.1952, 12.88, -63.1499, 0.74 ) }
    dend_3 { pt3dadd( 74.6809, 12.6912, -63.5061, 0.96 ) }
    dend_3 { pt3dadd( 75.1794, 12.4469, -63.8931, 0.96 ) }
    dend_3 { pt3dadd( 75.8465, 12.0579, -64.415, 0.44 ) }
    dend_3 { pt3dadd( 76.3819, 11.689, -64.861, 0.29 ) }
    dend_3 { pt3dadd( 76.8187, 11.3357, -65.2412, 0.29 ) }
    dend_3 { pt3dadd( 77.2214, 10.9723, -65.5849, 0.96 ) }
    dend_3 { pt3dadd( 77.4417, 10.7634, -65.7644, 1.11 ) }
    dend_3 { pt3dadd( 77.8286, 10.4107, -66.0453, 1.18 ) }
    dend_3 { pt3dadd( 78.4772, 9.84137, -66.5186, 0.37 ) }
    dend_3 { pt3dadd( 78.8447, 9.55707, -66.7982, 0.37 ) }
    dend_3 { pt3dadd( 79.3851, 9.17203, -67.2356, 0.29 ) }
    dend_3 { pt3dadd( 79.9048, 8.83265, -67.6691, 0.29 ) }
    dend_3 { pt3dadd( 80.4051, 8.53038, -68.0956, 0.96 ) }
    dend_3 { pt3dadd( 81.1867, 8.10727, -68.7552, 0.44 ) }
    dend_3 { pt3dadd( 81.5643, 7.93309, -69.0506, 1.03 ) }
    dend_3 { pt3dadd( 81.8669, 7.81061, -69.2731, 1.03 ) }
    dend_3 { pt3dadd( 82.5316, 7.58653, -69.7447, 0.29 ) }
    dend_3 { pt3dadd( 82.8769, 7.49695, -69.9638, 0.29 ) }
    dend_3 { pt3dadd( 83.2916, 7.42476, -70.2079, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_3 { pt3dadd( 83.8248, 7.36348, -70.4964, 0.96 ) }
    dend_3 { pt3dadd( 84.1546, 7.32621, -70.677, 0.37 ) }
    dend_3 { pt3dadd( 84.7021, 7.25587, -70.9866, 0.22 ) }
    dend_3 { pt3dadd( 85.3079, 7.15355, -71.3487, 1.11 ) }
    dend_3 { pt3dadd( 85.9741, 7.04732, -71.7619, 1.11 ) }
    dend_3 { pt3dadd( 86.8776, 6.91206, -72.3529, 0.44 ) }
    dend_3 { pt3dadd( 87.3016, 6.85024, -72.6466, 1.03 ) }
    dend_3 { pt3dadd( 87.5876, 6.79718, -72.8531, 1.03 ) }
    dend_3 { pt3dadd( 88.1791, 6.61666, -73.2924, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 9/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 4.24936, 61.2935, -13.8137, 0.29 ) }
    dend_2 { pt3dadd( 4.65147, 62.7839, -14.2365, 0.29 ) }
    dend_2 { pt3dadd( 4.84826, 63.4837, -14.4615, 0.29 ) }
    dend_2 { pt3dadd( 5.21863, 64.827, -14.889, 0.29 ) }
    dend_2 { pt3dadd( 5.47411, 65.755, -15.1886, 0.81 ) }
    dend_2 { pt3dadd( 5.62492, 66.2995, -15.3733, 0.81 ) }
    dend_2 { pt3dadd( 5.92364, 67.4276, -15.7564, 0.29 ) }
    dend_2 { pt3dadd( 6.22061, 68.4742, -16.1406, 0.29 ) }
    dend_2 { pt3dadd( 6.49385, 69.4704, -16.517, 0.88 ) }
    dend_2 { pt3dadd( 6.57006, 69.7773, -16.6316, 0.88 ) }
    dend_2 { pt3dadd( 6.77551, 70.6523, -16.9744, 0.22 ) }
    dend_2 { pt3dadd( 7.02964, 71.7313, -17.3962, 0.74 ) }
    // Section: dend_49, id: dend_49, parent: dend_37 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -24.96, -42.0733, -68.3419, 0.88 ) }
    dend_49 { pt3dadd( -24.7514, -41.1514, -77.2166, 0.88 ) }
    dend_49 { pt3dadd( -24.7841, -41.0568, -78.3861, 0.52 ) }
    dend_49 { pt3dadd( -24.8213, -41.0232, -78.9064, 0.52 ) }
    dend_49 { pt3dadd( -24.9684, -40.9618, -80.1296, 0.52 ) }
    dend_49 { pt3dadd( -25.1921, -40.9306, -81.3399, 0.52 ) }
    dend_49 { pt3dadd( -25.4425, -40.9351, -82.273, 1.03 ) }
    dend_49 { pt3dadd( -25.8209, -41.0553, -82.5041, 1.62 ) }
    dend_49 { pt3dadd( -26.0163, -41.1226, -82.6085, 1.99 ) }
    dend_49 { pt3dadd( -26.5049, -41.2633, -82.8444, 2.14 ) }
    dend_49 { pt3dadd( -27.3366, -41.3797, -83.2574, 1.55 ) }
    dend_49 { pt3dadd( -28.0483, -41.3656, -83.7576, 0.74 ) }
    dend_49 { pt3dadd( -28.6509, -41.2748, -84.3922, 0.37 ) }
    dend_49 { pt3dadd( -29.1678, -41.1678, -85.0792, 0.37 ) }
    dend_49 { pt3dadd( -29.4848, -41.1309, -85.6444, 0.37 ) }
    dend_49 { pt3dadd( -30.1428, -41.1168, -87.1036, 0.74 ) }
    dend_49 { pt3dadd( -30.7643, -41.1582, -88.6396, 1.4 ) }
    dend_49 { pt3dadd( -31.0913, -41.209, -89.4551, 1.92 ) }
    dend_49 { pt3dadd( -31.2545, -41.2481, -89.8524, 2.21 ) }
    dend_49 { pt3dadd( -32.1521, -41.4991, -92.1458, 0.52 ) }
    dend_49 { pt3dadd( -32.4196, -41.581, -92.8714, 0.52 ) }
    dend_49 { pt3dadd( -32.7465, -41.6874, -93.7974, 0.52 ) }
    dend_49 { pt3dadd( -32.9757, -41.7221, -94.5045, 0.59 ) }
    dend_49 { pt3dadd( -33.1275, -41.7014, -95.058, 0.59 ) }
    dend_49 { pt3dadd( -33.6027, -41.4319, -96.9802, 1.69 ) }
    dend_49 { pt3dadd( -34.0046, -40.9616, -98.7047, 2.06 ) }
    dend_49 { pt3dadd( -34.3447, -40.4653, -100.151, 1.03 ) }
    dend_49 { pt3dadd( -34.5027, -40.1906, -100.851, 0.29 ) }
    dend_49 { pt3dadd( -34.6852, -39.9047, -101.568, 0.29 ) }
    dend_49 { pt3dadd( -34.9739, -39.5738, -102.402, 1.25 ) }
    dend_49 { pt3dadd( -35.1995, -39.4163, -102.856, 1.62 ) }
    dend_49 { pt3dadd( -35.5453, -39.2469, -103.449, 1.92 ) }
    dend_49 { pt3dadd( -36.5889, -38.9509, -105.186, 0.81 ) }
    dend_49 { pt3dadd( -37.1213, -38.9412, -106.042, 1.11 ) }
    dend_49 { pt3dadd( -37.3761, -38.9774, -106.493, 1.11 ) }
    dend_49 { pt3dadd( -37.9123, -39.0969, -107.598, 0.37 ) }
    dend_49 { pt3dadd( -38.2299, -39.1725, -108.334, 0.29 ) }
    dend_49 { pt3dadd( -38.58, -39.2742, -109.165, 0.29 ) }
    dend_49 { pt3dadd( -38.974, -39.3874, -110.009, 0.29 ) }
    dend_49 { pt3dadd( -39.714, -39.5402, -111.704, 1.33 ) }
    dend_49 { pt3dadd( -39.9825, -39.5669, -112.396, 1.55 ) }
    dend_49 { pt3dadd( -40.2116, -39.553, -113.085, 1.77 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 63/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -24.96, -42.0733, -68.3419, 1.18 ) }
    dend_38 { pt3dadd( -26.2528, -42.735, -69.525, 1.18 ) }
    dend_38 { pt3dadd( -27.8353, -43.6053, -70.8325, 0.52 ) }
    dend_38 { pt3dadd( -28.7671, -44.1056, -71.5631, 0.52 ) }
    dend_38 { pt3dadd( -31.0098, -45.2555, -73.0161, 0.88 ) }
    dend_38 { pt3dadd( -32.4501, -45.9734, -73.8008, 1.18 ) }
    dend_38 { pt3dadd( -33.5279, -46.534, -74.3249, 1.18 ) }
    dend_38 { pt3dadd( -34.8573, -47.3006, -74.8503, 1.25 ) }
    dend_38 { pt3dadd( -36.0579, -48.0587, -75.2532, 1.11 ) }
    dend_38 { pt3dadd( -38.1186, -49.4315, -75.6854, 0.88 ) }
    dend_38 { pt3dadd( -39.4222, -50.3097, -75.804, 0.59 ) }
    dend_38 { pt3dadd( -40.5131, -51.0389, -75.8709, 0.44 ) }
    dend_38 { pt3dadd( -41.3211, -51.5603, -75.9044, 0.29 ) }
    dend_38 { pt3dadd( -42.2197, -52.1094, -75.9277, 0.29 ) }
    dend_38 { pt3dadd( -43.2534, -52.7077, -75.9855, 0.88 ) }
    dend_38 { pt3dadd( -44.1839, -53.1628, -76.1487, 1.25 ) }
    dend_38 { pt3dadd( -44.7314, -53.389, -76.2828, 1.47 ) }
    dend_38 { pt3dadd( -45.6031, -53.7072, -76.5304, 1.47 ) }
    dend_38 { pt3dadd( -46.3248, -53.9819, -76.7692, 1.33 ) }
    dend_38 { pt3dadd( -47.396, -54.443, -77.1707, 0.59 ) }
    dend_38 { pt3dadd( -48.4719, -54.9767, -77.6327, 0.44 ) }
    dend_38 { pt3dadd( -49.8071, -55.6987, -78.2479, 0.37 ) }
    dend_38 { pt3dadd( -50.6182, -56.1461, -78.6325, 0.96 ) }
    dend_38 { pt3dadd( -51.656, -56.7119, -79.1307, 0.59 ) }
    dend_38 { pt3dadd( -53.0916, -57.4613, -79.8163, 0.52 ) }
    dend_38 { pt3dadd( -53.9135, -57.8456, -80.2042, 0.52 ) }
    dend_38 { pt3dadd( -54.7809, -58.1759, -80.6115, 1.11 ) }
    dend_38 { pt3dadd( -55.5626, -58.3883, -80.9694, 1.99 ) }
    dend_38 { pt3dadd( -56.4151, -58.5343, -81.3508, 2.28 ) }
    dend_38 { pt3dadd( -57.3195, -58.5982, -81.7558, 1.99 ) }
    dend_38 { pt3dadd( -58.4262, -58.5824, -82.2562, 1.69 ) }
    dend_38 { pt3dadd( -59.4527, -58.5196, -82.7488, 1.4 ) }
    dend_38 { pt3dadd( -60.2634, -58.4731, -83.1686, 0.66 ) }
    dend_38 { pt3dadd( -61.2151, -58.4608, -83.6953, 0.52 ) }
    dend_38 { pt3dadd( -62.1521, -58.529, -84.2458, 0.52 ) }
    dend_38 { pt3dadd( -62.8629, -58.7074, -84.6883, 0.29 ) }
    dend_38 { pt3dadd( -63.5422, -59.149, -85.1316, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( -64.3192, -59.999, -85.5989, 0.81 ) }
    dend_38 { pt3dadd( -64.7486, -60.5641, -85.7986, 1.11 ) }
    dend_38 { pt3dadd( -65.3647, -61.4214, -85.9719, 0.96 ) }
    dend_38 { pt3dadd( -66.1777, -62.4479, -85.9986, 0.74 ) }
    dend_38 { pt3dadd( -66.9758, -63.2333, -85.9322, 0.37 ) }
    dend_38 { pt3dadd( -68.1666, -64.0035, -85.6977, 1.11 ) }
    dend_38 { pt3dadd( -68.9664, -64.4003, -85.5112, 1.84 ) }
    dend_38 { pt3dadd( -69.8741, -64.727, -85.2767, 2.36 ) }
    dend_38 { pt3dadd( -71.4293, -65.0641, -84.8351, 2.58 ) }
    dend_38 { pt3dadd( -73.0626, -65.2021, -84.3382, 0.59 ) }
    dend_38 { pt3dadd( -74.4664, -65.1691, -83.8743, 0.81 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 11/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 38.9995, -67.4216, -34.1461, 0.74 ) }
    dend_32 { pt3dadd( 40.443, -68.5313, -34.1685, 0.74 ) }
    dend_32 { pt3dadd( 41.548, -69.3168, -34.3149, 0.66 ) }
    dend_32 { pt3dadd( 42.2417, -69.7857, -34.4553, 1.11 ) }
    dend_32 { pt3dadd( 42.8265, -70.154, -34.6085, 1.11 ) }
    dend_32 { pt3dadd( 44.0647, -70.8559, -34.9791, 0.88 ) }
    dend_32 { pt3dadd( 44.9829, -71.3306, -35.2822, 0.59 ) }
    dend_32 { pt3dadd( 45.9347, -71.7864, -35.6885, 1.11 ) }
    dend_32 { pt3dadd( 46.2392, -71.9179, -35.8428, 1.47 ) }
    dend_32 { pt3dadd( 46.8672, -72.1474, -36.1729, 1.69 ) }
    dend_32 { pt3dadd( 47.7237, -72.4062, -36.61, 1.69 ) }
    dend_32 { pt3dadd( 48.7903, -72.6285, -37.0833, 1.77 ) }
    dend_32 { pt3dadd( 49.4091, -72.7385, -37.3513, 1.77 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 24/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 38.9995, -67.4216, -34.1461, 0.37 ) }
    dend_31 { pt3dadd( 39.4841, -68.0678, -35.3616, 0.37 ) }
    dend_31 { pt3dadd( 39.8713, -68.6567, -36.5837, 1.03 ) }
    dend_31 { pt3dadd( 40.2742, -69.3879, -38.1469, 1.25 ) }
    dend_31 { pt3dadd( 40.6637, -70.1989, -40.2291, 0.66 ) }
    dend_31 { pt3dadd( 40.7654, -70.4309, -40.94, 0.81 ) }
    dend_31 { pt3dadd( 41.0907, -71.1108, -43.47, 1.11 ) }
    dend_31 { pt3dadd( 41.1707, -71.2951, -44.4842, 1.4 ) }
    dend_31 { pt3dadd( 41.1908, -71.4338, -45.5851, 0.88 ) }
    dend_31 { pt3dadd( 41.099, -71.5837, -48.0656, 0.22 ) }
    dend_31 { pt3dadd( 40.9396, -71.6303, -50.3603, 0.37 ) }
    dend_31 { pt3dadd( 40.7505, -71.6516, -52.9143, 1.03 ) }
    dend_31 { pt3dadd( 40.6618, -71.6578, -54.2531, 1.69 ) }
    dend_31 { pt3dadd( 40.6867, -71.7064, -55.1977, 1.69 ) }
    dend_31 { pt3dadd( 40.928, -72.1317, -59.5956, 0.15 ) }
    dend_31 { pt3dadd( 41.0512, -72.2755, -60.4135, 0.15 ) }
    dend_31 { pt3dadd( 41.2146, -72.4405, -61.1175, 1.18 ) }
    dend_31 { pt3dadd( 41.5275, -72.7483, -62.1648, 1.47 ) }
    dend_31 { pt3dadd( 42.8164, -74.0197, -65.8263, 0.88 ) }
    dend_31 { pt3dadd( 43.5236, -74.732, -67.5993, 1.55 ) }
    dend_31 { pt3dadd( 45.0439, -76.2838, -70.9296, 0.81 ) }
    dend_31 { pt3dadd( 45.6033, -76.8634, -72.1804, 0.37 ) }
    dend_31 { pt3dadd( 45.8764, -77.1773, -72.8508, 0.52 ) }
    dend_31 { pt3dadd( 46.144, -77.582, -73.6389, 0.52 ) }
    dend_31 { pt3dadd( 46.2635, -77.9703, -74.1715, 0.37 ) }
    dend_31 { pt3dadd( 46.313, -78.6256, -74.8227, 0.37 ) }
    dend_31 { pt3dadd( 46.0745, -79.2717, -75.27, 0.81 ) }
    dend_31 { pt3dadd( 45.8214, -79.8449, -75.626, 1.11 ) }
    dend_31 { pt3dadd( 45.471, -80.7653, -76.0908, 1.25 ) }
    dend_31 { pt3dadd( 45.0768, -82.0384, -76.6764, 0.29 ) }
    dend_31 { pt3dadd( 44.8678, -82.7658, -76.9896, 0.29 ) }
    dend_31 { pt3dadd( 44.4601, -84.0425, -77.5255, 1.55 ) }
    dend_31 { pt3dadd( 44.2069, -84.7263, -77.8238, 1.77 ) }
    dend_31 { pt3dadd( 43.5299, -86.3066, -78.5701, 0.29 ) }
    dend_31 { pt3dadd( 42.8837, -87.5061, -79.2145, 0.22 ) }
    dend_31 { pt3dadd( 41.9609, -88.7507, -80.0383, 0.22 ) }
    dend_31 { pt3dadd( 41.0748, -89.6707, -80.7516, 0.66 ) }
    dend_31 { pt3dadd( 40.4333, -90.1705, -81.2345, 1.4 ) }
    dend_31 { pt3dadd( 40.2969, -90.2528, -81.3305, 1.92 ) }
    dend_31 { pt3dadd( 39.5214, -90.62, -81.8345, 1.62 ) }
    dend_31 { pt3dadd( 38.6168, -91.0201, -82.3748, 0.52 ) }
    dend_31 { pt3dadd( 37.8061, -91.3847, -82.8697, 0.29 ) }
    dend_31 { pt3dadd( 36.899, -91.8368, -83.4459, 0.52 ) }
    dend_31 { pt3dadd( 36.5036, -92.0411, -83.6988, 0.52 ) }
    dend_31 { pt3dadd( 35.6734, -92.4917, -84.2336, 0.37 ) }
    dend_31 { pt3dadd( 35.3149, -92.687, -84.4616, 0.88 ) }
    dend_31 { pt3dadd( 34.7764, -92.9711, -84.8222, 0.88 ) }
    dend_31 { pt3dadd( 34.1665, -93.2785, -85.2496, 0.44 ) }
    dend_31 { pt3dadd( 33.5181, -93.6268, -85.7248, 0.22 ) }
    dend_31 { pt3dadd( 33.0274, -93.9261, -86.1107, 0.96 ) }
    dend_31 { pt3dadd( 32.4108, -94.3641, -86.6669, 0.96 ) }
    dend_31 { pt3dadd( 31.394, -95.2403, -87.6907, 0.29 ) }
    dend_31 { pt3dadd( 30.9719, -95.679, -88.1703, 1.25 ) }
    dend_31 { pt3dadd( 30.5931, -96.0914, -88.6236, 1.25 ) }
    dend_31 { pt3dadd( 30.1448, -96.613, -89.1993, 0.96 ) }
    dend_31 { pt3dadd( 29.6286, -97.2972, -89.9495, 0.96 ) }
    dend_31 { pt3dadd( 28.9823, -98.3976, -91.1088, 0.29 ) }
    dend_31 { pt3dadd( 28.5975, -99.2354, -91.9467, 0.29 ) }
    dend_31 { pt3dadd( 28.3324, -99.9576, -92.6504, 0.66 ) }
    dend_31 { pt3dadd( 28.1478, -100.601, -93.2848, 0.37 ) }
    dend_31 { pt3dadd( 27.9605, -101.446, -94.2223, 0.96 ) }
    dend_31 { pt3dadd( 27.8919, -102.137, -95.1026, 1.18 ) }
    dend_31 { pt3dadd( 27.9039, -102.474, -95.5952, 0.81 ) }
    dend_31 { pt3dadd( 27.9824, -103.241, -96.8154, 0.52 ) }
    dend_31 { pt3dadd( 28.0376, -104.013, -98.0353, 0.44 ) }
    dend_31 { pt3dadd( 28.0614, -105.109, -99.8277, 0.96 ) }
    dend_31 { pt3dadd( 28.023, -106.487, -102.256, 0.37 ) }
    dend_31 { pt3dadd( 27.9792, -107.187, -103.529, 0.37 ) }
    dend_31 { pt3dadd( 27.9438, -108.146, -105.272, 0.37 ) }
    dend_31 { pt3dadd( 27.9177, -109.061, -106.823, 1.18 ) }
    dend_31 { pt3dadd( 27.9119, -109.629, -107.673, 1.47 ) }
    dend_31 { pt3dadd( 27.9187, -110.155, -108.369, 1.47 ) }
    dend_31 { pt3dadd( 28.0062, -111.849, -110.358, 0.74 ) }
    dend_31 { pt3dadd( 28.1299, -112.931, -111.492, 0.29 ) }
    dend_31 { pt3dadd( 28.2966, -113.904, -112.399, 0.29 ) }
    dend_31 { pt3dadd( 28.6093, -115.403, -113.666, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_31 { pt3dadd( 28.7228, -115.977, -114.08, 1.11 ) }
    dend_31 { pt3dadd( 28.939, -117.045, -114.721, 0.29 ) }
    dend_31 { pt3dadd( 29.1723, -118.022, -115.18, 0.29 ) }
    dend_31 { pt3dadd( 29.4382, -118.953, -115.526, 0.44 ) }
    dend_31 { pt3dadd( 29.6781, -119.63, -115.725, 0.29 ) }
    dend_31 { pt3dadd( 29.9081, -120.341, -115.867, 1.03 ) }
    dend_31 { pt3dadd( 30.1008, -121.028, -115.99, 1.03 ) }
    dend_31 { pt3dadd( 30.4686, -122.436, -116.243, 0.29 ) }
    dend_31 { pt3dadd( 30.7895, -123.535, -116.393, 1.11 ) }
    dend_31 { pt3dadd( 30.9377, -124.02, -116.445, 1.25 ) }
    dend_31 { pt3dadd( 31.3244, -125.403, -116.562, 0.22 ) }
    dend_31 { pt3dadd( 31.4038, -125.788, -116.587, 0.74 ) }
    dend_31 { pt3dadd( 31.4577, -126.161, -116.612, 0.74 ) }
    dend_31 { pt3dadd( 31.5399, -127.164, -116.667, 0.22 ) }
    dend_31 { pt3dadd( 31.5781, -127.847, -116.711, 0.66 ) }
    dend_31 { pt3dadd( 31.6214, -128.449, -116.747, 0.66 ) }
    dend_31 { pt3dadd( 31.6946, -129.278, -116.79, 0.22 ) }
    dend_31 { pt3dadd( 31.7311, -129.861, -116.829, 0.81 ) }
    dend_31 { pt3dadd( 31.7566, -130.78, -116.907, 0.22 ) }
    dend_31 { pt3dadd( 31.742, -131.969, -117.029, 0.52 ) }
    dend_31 { pt3dadd( 31.7132, -132.716, -117.112, 0.66 ) }
    dend_31 { pt3dadd( 31.6905, -133.141, -117.161, 0.66 ) }
    dend_31 { pt3dadd( 31.6346, -134.167, -117.27, 0.29 ) }
    dend_31 { pt3dadd( 31.5334, -135.669, -117.43, 0.29 ) }
    dend_31 { pt3dadd( 31.4804, -136.457, -117.512, 0.81 ) }
    dend_31 { pt3dadd( 31.4592, -136.754, -117.543, 0.81 ) }
    dend_31 { pt3dadd( 31.3761, -137.94, -117.663, 0.29 ) }
    dend_31 { pt3dadd( 31.3109, -138.969, -117.76, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 28/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -15.9494, 98.832, -16.9314, 1.25 ) }
    dend_16 { pt3dadd( -15.3049, 100.94, -15.7814, 1.25 ) }
    dend_16 { pt3dadd( -15.1362, 101.624, -15.6847, 1.25 ) }
    dend_16 { pt3dadd( -14.9893, 102.628, -15.823, 1.03 ) }
    dend_16 { pt3dadd( -14.9407, 103.146, -15.9616, 1.11 ) }
    dend_16 { pt3dadd( -14.8759, 104.072, -16.2633, 1.11 ) }
    dend_16 { pt3dadd( -14.8264, 105.041, -16.5967, 1.03 ) }
    dend_16 { pt3dadd( -14.8029, 106.371, -17.2209, 0.96 ) }
    dend_16 { pt3dadd( -14.8284, 107.538, -17.8054, 1.18 ) }
    dend_16 { pt3dadd( -14.8924, 108.526, -18.3164, 1.18 ) }
    dend_16 { pt3dadd( -14.9809, 109.455, -18.7863, 1.4 ) }
    dend_16 { pt3dadd( -15.1093, 110.514, -19.2766, 1.55 ) }
    dend_16 { pt3dadd( -15.2833, 111.776, -19.8029, 1.18 ) }
    dend_16 { pt3dadd( -15.4131, 112.717, -20.1528, 0.96 ) }
    dend_16 { pt3dadd( -15.5644, 113.88, -20.5652, 1.25 ) }
    dend_16 { pt3dadd( -15.6945, 114.778, -20.8648, 1.25 ) }
    dend_16 { pt3dadd( -15.8178, 115.589, -21.1166, 1.03 ) }
    dend_16 { pt3dadd( -16.0004, 116.761, -21.433, 1.03 ) }
    dend_16 { pt3dadd( -16.1362, 117.55, -21.6019, 1.03 ) }
    dend_16 { pt3dadd( -16.3509, 118.795, -21.8128, 1.03 ) }
    dend_16 { pt3dadd( -16.5787, 120.229, -21.9867, 1.03 ) }
    dend_16 { pt3dadd( -16.6756, 120.874, -22.0431, 1.33 ) }
    dend_16 { pt3dadd( -16.8811, 122.328, -22.137, 1.62 ) }
    dend_16 { pt3dadd( -17.0383, 123.504, -22.1851, 1.11 ) }
    dend_16 { pt3dadd( -17.1797, 124.649, -22.1321, 1.4 ) }
    dend_16 { pt3dadd( -17.2742, 125.544, -22.0327, 1.25 ) }
    dend_16 { pt3dadd( -17.3445, 126.623, -21.8744, 1.55 ) }
    dend_16 { pt3dadd( -17.3513, 126.843, -21.8387, 1.47 ) }
    dend_16 { pt3dadd( -17.3462, 128.246, -21.6001, 1.62 ) }
    dend_16 { pt3dadd( -17.3114, 130.125, -21.2823, 1.47 ) }
    dend_16 { pt3dadd( -17.3164, 130.902, -21.1648, 1.55 ) }
    dend_16 { pt3dadd( -17.342, 131.626, -21.0878, 1.11 ) }
    dend_16 { pt3dadd( -17.4059, 132.959, -21.0034, 0.88 ) }
    dend_16 { pt3dadd( -17.449, 133.861, -20.9926, 0.88 ) }
    dend_16 { pt3dadd( -17.4742, 134.71, -21.0408, 0.88 ) }
    dend_16 { pt3dadd( -17.4588, 135.912, -21.2008, 0.88 ) }
    dend_16 { pt3dadd( -17.3826, 136.825, -21.334, 1.18 ) }
    dend_16 { pt3dadd( -17.2156, 137.878, -21.5223, 1.18 ) }
    dend_16 { pt3dadd( -17.0297, 138.647, -21.6806, 1.33 ) }
    dend_16 { pt3dadd( -16.7593, 139.537, -21.8434, 1.33 ) }
    dend_16 { pt3dadd( -16.276, 140.936, -22.0305, 1.11 ) }
    dend_16 { pt3dadd( -15.7607, 142.341, -22.1374, 0.88 ) }
    dend_16 { pt3dadd( -15.4159, 143.309, -22.1442, 0.88 ) }
    dend_16 { pt3dadd( -15.057, 144.431, -22.0869, 1.03 ) }
    dend_16 { pt3dadd( -14.775, 145.553, -21.9772, 1.33 ) }
    dend_16 { pt3dadd( -14.5976, 146.608, -21.8347, 1.33 ) }
    dend_16 { pt3dadd( -14.5318, 147.492, -21.705, 1.47 ) }
    dend_16 { pt3dadd( -14.539, 148.326, -21.5549, 1.4 ) }
    dend_16 { pt3dadd( -14.5891, 149.097, -21.4, 1.4 ) }
    dend_16 { pt3dadd( -14.6805, 149.961, -21.2399, 1.18 ) }
    dend_16 { pt3dadd( -14.802, 150.966, -21.0892, 1.18 ) }
    dend_16 { pt3dadd( -14.8817, 151.665, -20.9904, 1.03 ) }
    dend_16 { pt3dadd( -14.9705, 152.718, -20.8529, 1.03 ) }
    dend_16 { pt3dadd( -14.9934, 153.686, -20.7543, 0.88 ) }
    dend_16 { pt3dadd( -14.9526, 154.72, -20.7548, 1.03 ) }
    dend_16 { pt3dadd( -14.8765, 155.667, -20.8188, 0.96 ) }
    dend_16 { pt3dadd( -14.799, 156.39, -20.9323, 0.96 ) }
    dend_16 { pt3dadd( -14.6849, 157.368, -21.1638, 0.96 ) }
    dend_16 { pt3dadd( -14.5401, 158.638, -21.6239, 0.96 ) }
    dend_16 { pt3dadd( -14.3508, 160.525, -22.6105, 0.81 ) }
    dend_16 { pt3dadd( -14.2936, 161.67, -23.3645, 1.03 ) }
    dend_16 { pt3dadd( -14.3014, 162.366, -23.8786, 1.03 ) }
    dend_16 { pt3dadd( -14.35, 163.363, -24.6141, 0.88 ) }
    dend_16 { pt3dadd( -14.4507, 164.803, -25.6405, 1.03 ) }
    dend_16 { pt3dadd( -14.5826, 166.374, -26.6677, 1.03 ) }
    dend_16 { pt3dadd( -14.6474, 167.297, -27.1595, 1.25 ) }
    dend_16 { pt3dadd( -14.7443, 168.52, -27.7035, 1.25 ) }
    dend_16 { pt3dadd( -14.9113, 170.265, -28.2819, 1.03 ) }
    dend_16 { pt3dadd( -15.007, 171.178, -28.4933, 1.03 ) }
    dend_16 { pt3dadd( -15.1208, 172.426, -28.7088, 1.03 ) }
    dend_16 { pt3dadd( -15.2098, 174.041, -28.9338, 1.03 ) }
    dend_16 { pt3dadd( -15.2102, 175.755, -29.1784, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_16 { pt3dadd( -15.124, 177.251, -29.4152, 0.88 ) }
    dend_16 { pt3dadd( -14.9931, 178.557, -29.6328, 0.88 ) }
    dend_16 { pt3dadd( -14.6767, 180.969, -30.03, 0.74 ) }
    dend_16 { pt3dadd( -14.4219, 182.541, -30.2763, 0.74 ) }
    dend_16 { pt3dadd( -14.1164, 184.174, -30.4947, 0.74 ) }
    dend_16 { pt3dadd( -13.8539, 185.514, -30.6819, 0.74 ) }
    dend_16 { pt3dadd( -13.663, 186.918, -30.9475, 0.74 ) }
    dend_16 { pt3dadd( -13.6611, 188.37, -31.3736, 0.74 ) }
    dend_16 { pt3dadd( -13.7688, 189.054, -31.6373, 0.88 ) }
    dend_16 { pt3dadd( -13.974, 189.841, -32.0302, 1.03 ) }
    dend_16 { pt3dadd( -14.3518, 191.223, -32.7767, 0.74 ) }
    dend_16 { pt3dadd( -14.82, 193.168, -33.8238, 0.74 ) }
    dend_16 { pt3dadd( -15.1238, 194.828, -34.7093, 0.59 ) }
    dend_16 { pt3dadd( -15.2133, 195.581, -35.0826, 0.88 ) }
    dend_16 { pt3dadd( -15.301, 196.871, -35.6577, 1.11 ) }
    dend_16 { pt3dadd( -15.313, 198.74, -36.3657, 1.55 ) }
    dend_16 { pt3dadd( -15.2393, 200.26, -36.7873, 1.33 ) }
    dend_16 { pt3dadd( -15.1223, 201.57, -37.054, 1.11 ) }
    dend_16 { pt3dadd( -14.9432, 203.228, -37.3423, 1.11 ) }
    dend_16 { pt3dadd( -14.78, 204.551, -37.5631, 1.11 ) }
    dend_16 { pt3dadd( -14.57, 205.889, -37.7631, 1.03 ) }
    dend_16 { pt3dadd( -14.2573, 207.415, -37.9733, 0.88 ) }
    dend_16 { pt3dadd( -14.0336, 208.24, -38.0796, 1.18 ) }
    dend_16 { pt3dadd( -13.8631, 208.759, -38.1309, 1.4 ) }
    dend_16 { pt3dadd( -13.5968, 209.511, -38.1809, 1.25 ) }
    dend_16 { pt3dadd( -13.3038, 210.384, -38.2323, 1.25 ) }
    dend_16 { pt3dadd( -13.1564, 210.929, -38.2821, 1.11 ) }
    dend_16 { pt3dadd( -13.0332, 211.553, -38.3586, 0.96 ) }
    dend_16 { pt3dadd( -12.9671, 212.347, -38.4553, 0.96 ) }
    dend_16 { pt3dadd( -12.9656, 212.902, -38.5257, 0.88 ) }
    dend_16 { pt3dadd( -13.0058, 213.997, -38.6606, 0.66 ) }
    dend_16 { pt3dadd( -13.0278, 214.712, -38.7126, 0.81 ) }
    dend_16 { pt3dadd( -13.0231, 215.472, -38.7252, 0.81 ) }
    dend_16 { pt3dadd( -12.9645, 216.362, -38.6778, 0.74 ) }
    dend_16 { pt3dadd( -12.7294, 218.111, -38.4845, 0.88 ) }
    dend_16 { pt3dadd( -12.6385, 218.585, -38.4002, 1.18 ) }
    dend_16 { pt3dadd( -12.3108, 219.816, -38.1112, 1.18 ) }
    dend_16 { pt3dadd( -12.0792, 220.514, -37.9159, 1.18 ) }
    dend_16 { pt3dadd( -11.7903, 221.252, -37.7018, 1.11 ) }
    dend_16 { pt3dadd( -11.4196, 222.096, -37.4655, 0.96 ) }
    dend_16 { pt3dadd( -11.1622, 222.677, -37.3074, 0.96 ) }
    dend_16 { pt3dadd( -10.8717, 223.383, -37.1692, 0.81 ) }
    dend_16 { pt3dadd( -10.5973, 224.111, -37.0916, 1.11 ) }
    dend_16 { pt3dadd( -10.4528, 224.523, -37.0931, 1.47 ) }
    dend_16 { pt3dadd( -10.1673, 225.414, -37.2107, 1.03 ) }
    dend_16 { pt3dadd( -9.95176, 226.155, -37.3794, 1.03 ) }
    dend_16 { pt3dadd( -9.73401, 226.962, -37.6398, 1.25 ) }
    dend_16 { pt3dadd( -9.60922, 227.523, -37.8276, 1.25 ) }
    dend_16 { pt3dadd( -9.3647, 228.89, -38.2399, 0.88 ) }
    dend_16 { pt3dadd( -9.2698, 229.611, -38.3995, 0.88 ) }
    dend_16 { pt3dadd( -9.19534, 230.538, -38.5308, 1.18 ) }
    dend_16 { pt3dadd( -9.1482, 231.555, -38.5905, 0.96 ) }
    dend_16 { pt3dadd( -9.1055, 232.697, -38.5365, 0.81 ) }
    dend_16 { pt3dadd( -9.05997, 233.703, -38.3911, 1.25 ) }
    dend_16 { pt3dadd( -9.00717, 234.512, -38.1987, 0.66 ) }
    dend_16 { pt3dadd( -8.93463, 235.328, -37.9683, 0.96 ) }
    dend_16 { pt3dadd( -8.85132, 236.075, -37.7661, 1.25 ) }
    dend_16 { pt3dadd( -8.75328, 236.805, -37.5915, 0.96 ) }
    dend_16 { pt3dadd( -8.63392, 237.508, -37.4868, 0.96 ) }
    dend_16 { pt3dadd( -8.47373, 238.307, -37.4019, 1.25 ) }
    dend_16 { pt3dadd( -8.33095, 238.924, -37.3432, 1.55 ) }
    dend_16 { pt3dadd( -8.13843, 239.663, -37.2721, 1.55 ) }
    dend_16 { pt3dadd( -7.98465, 240.199, -37.228, 1.25 ) }
    dend_16 { pt3dadd( -7.77213, 240.98, -37.2023, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 64/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -15.9494, 98.832, -16.9314, 0.59 ) }
    dend_13 { pt3dadd( -16.0564, 103.072, -19.1867, 0.59 ) }
    dend_13 { pt3dadd( -16.1217, 104.651, -19.96, 0.88 ) }
    dend_13 { pt3dadd( -16.2145, 106.536, -20.7731, 1.18 ) }
    dend_13 { pt3dadd( -16.2874, 108.913, -21.6764, 1.18 ) }
    dend_13 { pt3dadd( -16.2778, 110.573, -22.3234, 0.96 ) }
    dend_13 { pt3dadd( -16.2415, 112.427, -23.0427, 0.59 ) }
    dend_13 { pt3dadd( -16.2114, 113.627, -23.4096, 0.96 ) }
    dend_13 { pt3dadd( -16.1601, 115.584, -24.0093, 0.96 ) }
    dend_13 { pt3dadd( -16.1407, 117.903, -24.7646, 0.96 ) }
    dend_13 { pt3dadd( -16.1985, 120.079, -25.5036, 0.52 ) }
    dend_13 { pt3dadd( -16.329, 121.664, -26.0471, 0.37 ) }
    dend_13 { pt3dadd( -16.5305, 122.69, -26.4144, 0.37 ) }
    dend_13 { pt3dadd( -16.9007, 123.727, -26.7669, 0.81 ) }
    dend_13 { pt3dadd( -17.4105, 124.595, -27.0954, 1.18 ) }
    dend_13 { pt3dadd( -17.8038, 125.194, -27.3332, 1.18 ) }
    dend_13 { pt3dadd( -18.4309, 126.265, -27.7241, 0.66 ) }
    dend_13 { pt3dadd( -18.8699, 127.221, -28.0914, 0.66 ) }
    dend_13 { pt3dadd( -19.3937, 128.811, -28.683, 0.59 ) }
    dend_13 { pt3dadd( -19.805, 130.768, -29.3847, 0.88 ) }
    dend_13 { pt3dadd( -20.1585, 133.569, -30.3544, 1.11 ) }
    dend_13 { pt3dadd( -20.2552, 135.128, -30.8674, 1.11 ) }
    dend_13 { pt3dadd( -20.266, 136.467, -31.2505, 1.11 ) }
    dend_13 { pt3dadd( -20.2254, 138.085, -31.5893, 0.37 ) }
    dend_13 { pt3dadd( -20.1709, 139.847, -31.7658, 0.37 ) }
    dend_13 { pt3dadd( -20.1704, 141.033, -31.7193, 0.74 ) }
    dend_13 { pt3dadd( -20.1922, 141.415, -31.6732, 0.88 ) }
    dend_13 { pt3dadd( -20.3212, 143.129, -31.3929, 0.88 ) }
    dend_13 { pt3dadd( -20.3905, 144.434, -31.1153, 0.66 ) }
    dend_13 { pt3dadd( -20.405, 146.223, -30.6816, 0.52 ) }
    dend_13 { pt3dadd( -20.3588, 147.053, -30.524, 0.52 ) }
    dend_13 { pt3dadd( -20.166, 148.621, -30.3703, 0.96 ) }
    dend_13 { pt3dadd( -19.9672, 149.672, -30.3886, 0.96 ) }
    dend_13 { pt3dadd( -19.7591, 150.533, -30.4984, 1.18 ) }
    dend_13 { pt3dadd( -19.5857, 151.24, -30.6407, 1.18 ) }
    dend_13 { pt3dadd( -19.1895, 153.093, -31.078, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( -19.0597, 154.132, -31.3183, 0.88 ) }
    dend_13 { pt3dadd( -19.0342, 155.518, -31.5995, 0.88 ) }
    dend_13 { pt3dadd( -19.0982, 156.604, -31.8412, 0.44 ) }
    dend_13 { pt3dadd( -19.2089, 157.796, -32.0998, 0.74 ) }
    dend_13 { pt3dadd( -19.2811, 158.529, -32.2428, 0.74 ) }
    dend_13 { pt3dadd( -19.353, 159.509, -32.3939, 0.52 ) }
    dend_13 { pt3dadd( -19.3753, 160.731, -32.5859, 0.37 ) }
    dend_13 { pt3dadd( -19.3313, 161.757, -32.7454, 0.37 ) }
    dend_13 { pt3dadd( -19.1833, 163.011, -32.9317, 0.74 ) }
    dend_13 { pt3dadd( -19.0384, 163.807, -33.0435, 0.74 ) }
    dend_13 { pt3dadd( -18.8172, 164.874, -33.1864, 0.66 ) }
    dend_13 { pt3dadd( -18.4404, 166.603, -33.3999, 0.74 ) }
    dend_13 { pt3dadd( -18.3216, 167.123, -33.4589, 1.4 ) }
    dend_13 { pt3dadd( -18.0194, 168.218, -33.5734, 1.4 ) }
    dend_13 { pt3dadd( -17.6991, 169.232, -33.7309, 1.33 ) }
    dend_13 { pt3dadd( -17.0356, 171.025, -34.1053, 0.44 ) }
    dend_13 { pt3dadd( -16.3716, 172.564, -34.5043, 0.44 ) }
    dend_13 { pt3dadd( -15.9205, 173.579, -34.8117, 0.37 ) }
    dend_13 { pt3dadd( -15.1572, 175.415, -35.4246, 0.37 ) }
    dend_13 { pt3dadd( -14.5743, 176.953, -35.9707, 0.59 ) }
    dend_13 { pt3dadd( -14.2774, 177.913, -36.3249, 0.59 ) }
    dend_13 { pt3dadd( -14.0945, 178.8, -36.6562, 0.29 ) }
    dend_13 { pt3dadd( -14.0772, 180.996, -37.3588, 0.88 ) }
    dend_13 { pt3dadd( -14.2499, 182.056, -37.613, 1.77 ) }
    dend_13 { pt3dadd( -14.4952, 183.026, -37.7699, 2.06 ) }
    dend_13 { pt3dadd( -14.7288, 183.881, -37.8522, 1.69 ) }
    dend_13 { pt3dadd( -15.0765, 185.112, -37.9735, 1.18 ) }
    dend_13 { pt3dadd( -15.6096, 186.991, -38.1958, 0.44 ) }
    dend_13 { pt3dadd( -16.0887, 188.671, -38.4092, 0.37 ) }
    dend_13 { pt3dadd( -16.627, 190.568, -38.668, 0.74 ) }
    dend_13 { pt3dadd( -16.8592, 191.338, -38.7842, 0.74 ) }
    dend_13 { pt3dadd( -17.3728, 193.009, -39.0815, 0.52 ) }
    dend_13 { pt3dadd( -17.7487, 194.228, -39.2579, 0.44 ) }
    dend_13 { pt3dadd( -17.9793, 195.0, -39.3253, 0.66 ) }
    dend_13 { pt3dadd( -18.2229, 195.757, -39.3281, 0.66 ) }
    dend_13 { pt3dadd( -18.5871, 196.773, -39.2818, 0.37 ) }
    dend_13 { pt3dadd( -18.8627, 197.549, -39.194, 0.37 ) }
    dend_13 { pt3dadd( -19.6016, 199.849, -38.6716, 0.59 ) }
    dend_13 { pt3dadd( -20.0071, 201.476, -38.1888, 1.03 ) }
    dend_13 { pt3dadd( -20.1688, 202.392, -37.8919, 1.4 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 40/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -35.9473, 101.921, -5.26059, 0.29 ) }
    dend_11 { pt3dadd( -36.317, 103.22, -4.95378, 0.29 ) }
    dend_11 { pt3dadd( -36.5434, 103.833, -4.83173, 0.44 ) }
    dend_11 { pt3dadd( -36.8022, 104.276, -4.74729, 0.66 ) }
    dend_11 { pt3dadd( -37.2343, 104.729, -4.63359, 0.29 ) }
    dend_11 { pt3dadd( -37.7332, 105.126, -4.52556, 0.29 ) }
    dend_11 { pt3dadd( -38.0111, 105.33, -4.47029, 0.74 ) }
    dend_11 { pt3dadd( -38.4008, 105.535, -4.40261, 0.88 ) }
    dend_11 { pt3dadd( -39.2782, 105.962, -4.28786, 0.44 ) }
    dend_11 { pt3dadd( -40.1167, 106.39, -4.20591, 0.52 ) }
    dend_11 { pt3dadd( -40.3542, 106.533, -4.18146, 0.81 ) }
    dend_11 { pt3dadd( -40.7502, 106.854, -4.10685, 0.44 ) }
    dend_11 { pt3dadd( -41.1153, 107.223, -3.97965, 0.88 ) }
    dend_11 { pt3dadd( -41.5021, 107.682, -3.76971, 0.59 ) }
    dend_11 { pt3dadd( -41.8005, 108.168, -3.56146, 0.29 ) }
    dend_11 { pt3dadd( -42.0027, 108.594, -3.38786, 0.29 ) }
    dend_11 { pt3dadd( -42.3161, 109.342, -3.09012, 0.96 ) }
    dend_11 { pt3dadd( -42.5844, 110.015, -2.82504, 1.18 ) }
    dend_11 { pt3dadd( -42.8495, 110.712, -2.5438, 0.81 ) }
    dend_11 { pt3dadd( -43.1875, 111.68, -2.18823, 0.52 ) }
    dend_11 { pt3dadd( -43.3603, 112.19, -2.01876, 0.52 ) }
    dend_11 { pt3dadd( -43.6082, 112.963, -1.82809, 0.44 ) }
    dend_11 { pt3dadd( -43.8003, 113.577, -1.71086, 0.66 ) }
    dend_11 { pt3dadd( -44.0251, 114.261, -1.56891, 0.88 ) }
    dend_11 { pt3dadd( -44.1704, 114.668, -1.47764, 0.52 ) }
    dend_11 { pt3dadd( -44.3642, 115.165, -1.33615, 0.29 ) }
    dend_11 { pt3dadd( -44.638, 115.859, -1.14018, 0.29 ) }
    dend_11 { pt3dadd( -44.9982, 116.786, -0.88166, 0.52 ) }
    dend_11 { pt3dadd( -45.3016, 117.499, -0.712041, 0.81 ) }
    dend_11 { pt3dadd( -45.5732, 118.153, -0.598984, 0.22 ) }
    dend_11 { pt3dadd( -45.7646, 118.648, -0.522598, 0.22 ) }
    dend_11 { pt3dadd( -46.0793, 119.469, -0.418028, 0.37 ) }
    dend_11 { pt3dadd( -46.2493, 119.894, -0.380006, 0.37 ) }
    dend_11 { pt3dadd( -46.6315, 120.787, -0.333913, 0.37 ) }
    dend_11 { pt3dadd( -47.0216, 121.642, -0.305905, 0.29 ) }
    dend_11 { pt3dadd( -47.4176, 122.529, -0.252966, 0.52 ) }
    dend_11 { pt3dadd( -47.611, 122.997, -0.21548, 0.88 ) }
    dend_11 { pt3dadd( -47.9416, 123.957, -0.104154, 0.59 ) }
    dend_11 { pt3dadd( -48.0827, 124.463, -0.0344982, 0.44 ) }
    dend_11 { pt3dadd( -48.212, 125.087, 0.0766227, 0.22 ) }
    dend_11 { pt3dadd( -48.4311, 126.335, 0.318993, 0.22 ) }
    dend_11 { pt3dadd( -48.4968, 126.898, 0.428157, 0.81 ) }
    dend_11 { pt3dadd( -48.515, 127.37, 0.508497, 1.33 ) }
    dend_11 { pt3dadd( -48.5113, 127.836, 0.567455, 1.33 ) }
    dend_11 { pt3dadd( -48.4741, 128.689, 0.655245, 0.59 ) }
    dend_11 { pt3dadd( -48.4181, 129.254, 0.702862, 0.81 ) }
    dend_11 { pt3dadd( -48.3361, 129.779, 0.740153, 0.81 ) }
    dend_11 { pt3dadd( -48.1649, 130.598, 0.769393, 0.52 ) }
    dend_11 { pt3dadd( -47.9058, 131.641, 0.767574, 0.22 ) }
    dend_11 { pt3dadd( -47.6747, 132.468, 0.745348, 0.22 ) }
    dend_11 { pt3dadd( -47.3617, 133.467, 0.701719, 0.59 ) }
    dend_11 { pt3dadd( -47.1478, 134.093, 0.682181, 0.81 ) }
    dend_11 { pt3dadd( -46.8425, 134.976, 0.652903, 0.29 ) }
    dend_11 { pt3dadd( -46.6346, 135.615, 0.651101, 0.22 ) }
    dend_11 { pt3dadd( -46.5395, 135.944, 0.64829, 0.59 ) }
    dend_11 { pt3dadd( -46.5023, 136.196, 0.634255, 0.59 ) }
    dend_11 { pt3dadd( -46.5486, 136.845, 0.53501, 0.22 ) }
    dend_11 { pt3dadd( -46.6754, 137.426, 0.371664, 0.29 ) }
    dend_11 { pt3dadd( -46.7926, 137.818, 0.216245, 0.81 ) }
    dend_11 { pt3dadd( -46.8704, 138.088, 0.075047, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( -46.9219, 138.299, -0.0428197, 1.11 ) }
    dend_11 { pt3dadd( -47.1115, 139.329, -0.607403, 0.37 ) }
    dend_11 { pt3dadd( -47.1692, 139.806, -0.828645, 0.96 ) }
    dend_11 { pt3dadd( -47.2214, 140.475, -1.07933, 0.88 ) }
    dend_11 { pt3dadd( -47.262, 141.007, -1.26141, 0.88 ) }
    dend_11 { pt3dadd( -47.3442, 141.719, -1.48773, 0.52 ) }
    dend_11 { pt3dadd( -47.4239, 142.245, -1.64052, 0.74 ) }
    dend_11 { pt3dadd( -47.6018, 143.181, -1.88078, 0.29 ) }
    dend_11 { pt3dadd( -47.7877, 144.046, -2.12778, 0.59 ) }
    dend_11 { pt3dadd( -47.9318, 144.636, -2.31896, 0.59 ) }
    dend_11 { pt3dadd( -48.0652, 145.39, -2.627, 0.29 ) }
    dend_11 { pt3dadd( -48.1217, 146.009, -2.95193, 1.18 ) }
    dend_11 { pt3dadd( -48.121, 146.299, -3.12258, 1.47 ) }
    dend_11 { pt3dadd( -48.0499, 146.997, -3.5597, 1.18 ) }
    dend_11 { pt3dadd( -47.9499, 147.678, -3.96848, 0.44 ) }
    dend_11 { pt3dadd( -47.7403, 148.849, -4.62071, 0.22 ) }
    dend_11 { pt3dadd( -47.6313, 149.308, -4.87286, 0.22 ) }
    dend_11 { pt3dadd( -47.4016, 150.23, -5.3262, 1.18 ) }
    dend_11 { pt3dadd( -47.3407, 150.463, -5.42611, 1.4 ) }
    dend_11 { pt3dadd( -47.0526, 151.521, -5.77239, 0.44 ) }
    dend_11 { pt3dadd( -46.8739, 152.126, -5.92729, 0.66 ) }
    dend_11 { pt3dadd( -46.7312, 152.698, -6.03672, 0.66 ) }
    dend_11 { pt3dadd( -46.4874, 153.511, -6.17479, 0.22 ) }
    dend_11 { pt3dadd( -46.3516, 153.862, -6.23278, 0.59 ) }
    dend_11 { pt3dadd( -46.1115, 154.398, -6.31854, 0.52 ) }
    dend_11 { pt3dadd( -45.8054, 155.014, -6.40097, 0.96 ) }
    dend_11 { pt3dadd( -45.5296, 155.588, -6.51042, 0.59 ) }
    dend_11 { pt3dadd( -45.2717, 156.139, -6.6367, 0.37 ) }
    dend_11 { pt3dadd( -44.9962, 156.699, -6.77999, 0.59 ) }
    dend_11 { pt3dadd( -44.8054, 157.081, -6.85986, 0.81 ) }
    dend_11 { pt3dadd( -44.3663, 157.985, -7.04305, 0.22 ) }
    dend_11 { pt3dadd( -44.0155, 158.757, -7.17032, 0.59 ) }
    dend_11 { pt3dadd( -43.8081, 159.244, -7.24177, 0.52 ) }
    dend_11 { pt3dadd( -43.5971, 159.821, -7.32902, 0.22 ) }
    dend_11 { pt3dadd( -43.3049, 160.71, -7.46276, 0.22 ) }
    dend_11 { pt3dadd( -43.006, 161.694, -7.61707, 0.88 ) }
    dend_11 { pt3dadd( -42.8549, 162.258, -7.70658, 1.69 ) }
    dend_11 { pt3dadd( -42.7908, 162.571, -7.74793, 1.92 ) }
    dend_11 { pt3dadd( -42.7021, 163.165, -7.85368, 1.25 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -35.9473, 101.921, -5.26059, 0.52 ) }
    dend_8 { pt3dadd( -37.174, 102.168, -5.43519, 0.52 ) }
    dend_8 { pt3dadd( -37.9669, 102.313, -5.5448, 0.59 ) }
    dend_8 { pt3dadd( -38.8261, 102.463, -5.65871, 0.44 ) }
    dend_8 { pt3dadd( -39.4167, 102.583, -5.73239, 0.59 ) }
    dend_8 { pt3dadd( -40.0853, 102.754, -5.80421, 0.59 ) }
    dend_8 { pt3dadd( -40.8967, 103.009, -5.87943, 0.52 ) }
    dend_8 { pt3dadd( -41.4166, 103.201, -5.91526, 0.74 ) }
    dend_8 { pt3dadd( -42.0861, 103.496, -5.94755, 0.37 ) }
    dend_8 { pt3dadd( -42.5903, 103.742, -5.95472, 0.37 ) }
    dend_8 { pt3dadd( -43.2387, 104.07, -5.9519, 0.37 ) }
    dend_8 { pt3dadd( -43.8093, 104.34, -5.93658, 0.52 ) }
    dend_8 { pt3dadd( -44.5302, 104.583, -5.92851, 0.52 ) }
    dend_8 { pt3dadd( -45.09, 104.653, -5.94705, 0.29 ) }
    dend_8 { pt3dadd( -45.8457, 104.629, -6.03159, 0.81 ) }
    dend_8 { pt3dadd( -46.2996, 104.579, -6.10687, 1.11 ) }
    dend_8 { pt3dadd( -46.9248, 104.499, -6.23431, 1.25 ) }
    dend_8 { pt3dadd( -47.8918, 104.386, -6.45279, 0.66 ) }
    dend_8 { pt3dadd( -48.724, 104.314, -6.66428, 0.37 ) }
    dend_8 { pt3dadd( -49.9045, 104.29, -7.03285, 0.37 ) }
    dend_8 { pt3dadd( -50.6751, 104.34, -7.33186, 0.29 ) }
    dend_8 { pt3dadd( -51.6749, 104.48, -7.7811, 0.66 ) }
    dend_8 { pt3dadd( -52.0547, 104.567, -7.98233, 0.88 ) }
    dend_8 { pt3dadd( -52.5815, 104.735, -8.337, 0.59 ) }
    dend_8 { pt3dadd( -53.3734, 105.014, -8.99183, 0.37 ) }
    dend_8 { pt3dadd( -53.9001, 105.186, -9.50445, 0.37 ) }
    dend_8 { pt3dadd( -54.2858, 105.289, -9.92646, 0.96 ) }
    dend_8 { pt3dadd( -54.8801, 105.396, -10.6645, 1.18 ) }
    dend_8 { pt3dadd( -55.8836, 105.497, -11.9476, 0.59 ) }
    dend_8 { pt3dadd( -56.2572, 105.509, -12.4257, 0.44 ) }
    dend_8 { pt3dadd( -56.6836, 105.487, -12.9376, 0.29 ) }
    dend_8 { pt3dadd( -57.195, 105.429, -13.5004, 0.15 ) }
    dend_8 { pt3dadd( -58.0409, 105.283, -14.365, 0.88 ) }
    dend_8 { pt3dadd( -58.4496, 105.207, -14.7225, 1.18 ) }
    dend_8 { pt3dadd( -59.0435, 105.124, -15.1695, 0.44 ) }
    dend_8 { pt3dadd( -59.6158, 105.089, -15.5555, 0.37 ) }
    dend_8 { pt3dadd( -60.1514, 105.096, -15.8628, 0.96 ) }
    dend_8 { pt3dadd( -61.0593, 105.178, -16.2616, 1.25 ) }
    dend_8 { pt3dadd( -62.0539, 105.352, -16.5595, 0.44 ) }
    dend_8 { pt3dadd( -62.7062, 105.51, -16.6824, 0.44 ) }
    dend_8 { pt3dadd( -63.5554, 105.757, -16.7644, 1.03 ) }
    dend_8 { pt3dadd( -64.2633, 105.998, -16.7584, 0.88 ) }
    dend_8 { pt3dadd( -65.1959, 106.345, -16.6991, 0.74 ) }
    dend_8 { pt3dadd( -66.6312, 106.925, -16.4957, 0.37 ) }
    dend_8 { pt3dadd( -67.6008, 107.323, -16.2963, 0.88 ) }
    dend_8 { pt3dadd( -67.9146, 107.45, -16.212, 1.18 ) }
    dend_8 { pt3dadd( -68.729, 107.809, -15.9485, 1.18 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 86/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 88.1791, 6.61666, -73.2924, 0.29 ) }
    dend_5 { pt3dadd( 88.9265, 9.87719, -77.7721, 0.29 ) }
    dend_5 { pt3dadd( 89.1236, 10.8222, -78.8778, 0.52 ) }
    dend_5 { pt3dadd( 89.177, 11.1413, -79.1872, 0.52 ) }
    dend_5 { pt3dadd( 89.3103, 12.2989, -80.106, 0.29 ) }
    dend_5 { pt3dadd( 89.3881, 13.3905, -80.8365, 0.96 ) }
    dend_5 { pt3dadd( 89.4154, 13.739, -81.0481, 1.33 ) }
    dend_5 { pt3dadd( 89.449, 14.2217, -81.1614, 1.33 ) }
    dend_5 { pt3dadd( 89.5387, 15.194, -81.3956, 0.59 ) }
    dend_5 { pt3dadd( 89.6943, 16.0821, -81.6966, 0.37 ) }
    dend_5 { pt3dadd( 89.9827, 16.8816, -82.1597, 0.22 ) }
    dend_5 { pt3dadd( 90.657, 17.6926, -82.9913, 0.22 ) }
    dend_5 { pt3dadd( 91.008, 17.8953, -83.3675, 0.59 ) }
    dend_5 { pt3dadd( 91.6467, 18.072, -84.0083, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( 92.2113, 18.1191, -84.5378, 0.37 ) }
    dend_5 { pt3dadd( 92.9311, 18.0953, -85.1766, 0.96 ) }
    dend_5 { pt3dadd( 93.6413, 18.0258, -85.7692, 0.96 ) }
    dend_5 { pt3dadd( 94.5696, 17.8957, -86.5391, 0.44 ) }
    dend_5 { pt3dadd( 95.0379, 17.8262, -86.9297, 0.52 ) }
    dend_5 { pt3dadd( 95.639, 17.7208, -87.4466, 0.22 ) }
    dend_5 { pt3dadd( 96.0499, 17.6573, -87.8162, 0.74 ) }
    dend_5 { pt3dadd( 96.9425, 17.555, -88.63, 0.29 ) }
    dend_5 { pt3dadd( 97.3553, 17.5379, -89.0112, 0.29 ) }
    dend_5 { pt3dadd( 98.0012, 17.5777, -89.6225, 0.88 ) }
    dend_5 { pt3dadd( 98.7718, 17.6856, -90.3588, 0.37 ) }
    dend_5 { pt3dadd( 100.083, 17.9854, -91.6098, 0.96 ) }
    dend_5 { pt3dadd( 100.669, 18.1834, -92.1654, 1.4 ) }
    dend_5 { pt3dadd( 101.208, 18.4461, -92.6682, 0.59 ) }
    dend_5 { pt3dadd( 102.077, 19.0207, -93.4506, 0.22 ) }
    dend_5 { pt3dadd( 102.861, 19.695, -94.1169, 0.22 ) }
    dend_5 { pt3dadd( 103.517, 20.4356, -94.632, 1.11 ) }
    dend_5 { pt3dadd( 104.001, 21.1802, -94.9811, 1.33 ) }
    dend_5 { pt3dadd( 104.456, 22.0487, -95.3025, 1.33 ) }
    dend_5 { pt3dadd( 104.772, 22.7419, -95.5017, 1.33 ) }
    dend_5 { pt3dadd( 105.038, 23.4088, -95.6361, 0.59 ) }
    dend_5 { pt3dadd( 105.47, 24.565, -95.8244, 0.22 ) }
    dend_5 { pt3dadd( 106.02, 25.8514, -96.0151, 1.4 ) }
    dend_5 { pt3dadd( 106.337, 26.4455, -96.1198, 1.69 ) }
    dend_5 { pt3dadd( 107.052, 27.5736, -96.3758, 0.29 ) }
    dend_5 { pt3dadd( 107.401, 28.0278, -96.5552, 0.66 ) }
    dend_5 { pt3dadd( 107.954, 28.6025, -96.9602, 0.66 ) }
    dend_5 { pt3dadd( 108.793, 29.1647, -97.8966, 0.22 ) }
    dend_5 { pt3dadd( 109.357, 29.3238, -98.9716, 1.03 ) }
    dend_5 { pt3dadd( 109.523, 29.2962, -99.6171, 1.03 ) }
    dend_5 { pt3dadd( 109.663, 28.9994, -101.905, 0.74 ) }
    dend_5 { pt3dadd( 109.678, 28.772, -103.247, 1.03 ) }
    dend_5 { pt3dadd( 109.585, 28.3488, -105.244, 1.11 ) }
    dend_5 { pt3dadd( 109.354, 27.8581, -107.24, 1.11 ) }
    dend_5 { pt3dadd( 108.986, 27.291, -109.295, 0.74 ) }
    dend_5 { pt3dadd( 108.535, 26.7453, -111.205, 0.96 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 36/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 88.1791, 6.61666, -73.2924, 0.37 ) }
    dend_4 { pt3dadd( 89.8135, 5.60678, -73.5697, 0.37 ) }
    dend_4 { pt3dadd( 90.4269, 5.34547, -73.5352, 0.44 ) }
    dend_4 { pt3dadd( 90.8184, 5.24833, -73.3962, 0.44 ) }
    dend_4 { pt3dadd( 92.0755, 5.07857, -72.7639, 0.74 ) }
    dend_4 { pt3dadd( 92.2598, 5.07526, -72.6636, 0.88 ) }
    dend_4 { pt3dadd( 92.907, 5.11343, -72.32, 0.37 ) }
    dend_4 { pt3dadd( 93.7455, 5.24294, -71.8135, 0.37 ) }
    dend_4 { pt3dadd( 95.041, 5.49055, -71.0047, 0.88 ) }
    dend_4 { pt3dadd( 95.4932, 5.59031, -70.7173, 1.03 ) }
    dend_4 { pt3dadd( 96.1826, 5.75385, -70.285, 0.29 ) }
    dend_4 { pt3dadd( 96.8409, 5.93049, -69.853, 0.29 ) }
    dend_4 { pt3dadd( 97.3672, 6.09445, -69.4885, 0.29 ) }
    dend_4 { pt3dadd( 98.3786, 6.43241, -68.8871, 0.81 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 50/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -40.2116, -39.553, -113.085, 0.74 ) }
    dend_51 { pt3dadd( -41.2605, -38.8558, -114.438, 0.74 ) }
    dend_51 { pt3dadd( -42.0972, -38.3545, -115.466, 1.03 ) }
    dend_51 { pt3dadd( -43.441, -37.6291, -117.211, 0.37 ) }
    dend_51 { pt3dadd( -44.118, -37.3123, -118.165, 0.22 ) }
    dend_51 { pt3dadd( -44.9137, -36.9986, -119.385, 1.4 ) }
    dend_51 { pt3dadd( -45.463, -36.8092, -120.265, 1.55 ) }
    dend_51 { pt3dadd( -46.1684, -36.6539, -121.489, 1.55 ) }
    dend_51 { pt3dadd( -47.3329, -36.517, -123.661, 0.81 ) }
    dend_51 { pt3dadd( -48.1667, -36.5047, -125.261, 0.52 ) }
    dend_51 { pt3dadd( -48.8812, -36.5604, -126.621, 0.88 ) }
    dend_51 { pt3dadd( -49.6866, -36.6584, -128.182, 0.22 ) }
    dend_51 { pt3dadd( -50.2965, -36.7189, -129.389, 0.74 ) }
    dend_51 { pt3dadd( -50.8228, -36.7133, -130.452, 0.74 ) }
    dend_51 { pt3dadd( -51.1824, -36.6369, -131.35, 0.74 ) }
    dend_51 { pt3dadd( -51.6996, -36.426, -132.979, 0.44 ) }
    dend_51 { pt3dadd( -52.0765, -36.238, -134.376, 0.22 ) }
    dend_51 { pt3dadd( -52.2386, -36.1529, -135.188, 0.81 ) }
    dend_51 { pt3dadd( -52.4621, -36.0396, -136.387, 0.81 ) }
    dend_51 { pt3dadd( -53.2817, -35.6163, -140.819, 0.52 ) }
    dend_51 { pt3dadd( -53.6249, -35.4624, -142.532, 1.03 ) }
    dend_51 { pt3dadd( -53.9567, -35.3759, -143.885, 1.4 ) }
    dend_51 { pt3dadd( -54.5922, -35.294, -146.026, 1.18 ) }
    dend_51 { pt3dadd( -55.0084, -35.2712, -147.229, 0.66 ) }
    dend_51 { pt3dadd( -55.696, -35.2394, -148.982, 1.18 ) }
    dend_51 { pt3dadd( -56.1347, -35.2049, -149.949, 1.55 ) }
    dend_51 { pt3dadd( -57.1428, -35.0993, -152.251, 0.52 ) }
    dend_51 { pt3dadd( -57.5363, -35.0578, -153.242, 1.18 ) }
    dend_51 { pt3dadd( -58.0615, -35.0191, -154.678, 1.18 ) }
    dend_51 { pt3dadd( -58.9007, -34.9741, -157.392, 0.29 ) }
    dend_51 { pt3dadd( -59.179, -34.9718, -158.506, 0.29 ) }
    dend_51 { pt3dadd( -59.4707, -34.9702, -159.872, 0.29 ) }
    dend_51 { pt3dadd( -59.7671, -34.9478, -161.442, 0.59 ) }
    dend_51 { pt3dadd( -60.0255, -34.9196, -162.876, 0.59 ) }
    dend_51 { pt3dadd( -60.225, -34.8729, -163.918, 0.44 ) }
    dend_51 { pt3dadd( -60.7293, -34.6922, -166.328, 1.03 ) }
    dend_51 { pt3dadd( -60.9582, -34.5638, -167.554, 1.33 ) }
    dend_51 { pt3dadd( -61.4957, -34.1995, -170.355, 0.29 ) }
    dend_51 { pt3dadd( -61.7503, -34.0068, -171.543, 0.29 ) }
    dend_51 { pt3dadd( -62.0043, -33.8058, -172.586, 0.96 ) }
    dend_51 { pt3dadd( -62.3893, -33.5115, -173.895, 0.96 ) }
    dend_51 { pt3dadd( -63.9358, -32.3459, -177.775, 0.29 ) }
    dend_51 { pt3dadd( -64.281, -32.0765, -178.427, 0.29 ) }
    dend_51 { pt3dadd( -64.9787, -31.5723, -179.396, 1.03 ) }
    dend_51 { pt3dadd( -65.7487, -31.0663, -180.22, 1.33 ) }
    dend_51 { pt3dadd( -66.786, -30.4313, -181.089, 0.74 ) }
    dend_51 { pt3dadd( -68.3081, -29.5264, -182.115, 0.37 ) }
    dend_51 { pt3dadd( -70.2356, -28.4149, -183.153, 0.29 ) }
    dend_51 { pt3dadd( -71.3693, -27.7739, -183.784, 0.22 ) }
    dend_51 { pt3dadd( -72.5873, -27.1152, -184.462, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_51 { pt3dadd( -73.8215, -26.4232, -185.161, 0.52 ) }
    dend_51 { pt3dadd( -74.7153, -25.9034, -185.682, 0.96 ) }
    dend_51 { pt3dadd( -75.4756, -25.448, -186.161, 1.18 ) }
    dend_51 { pt3dadd( -76.2499, -25.0043, -186.665, 1.18 ) }
    dend_51 { pt3dadd( -77.3241, -24.3447, -187.381, 0.74 ) }
    dend_51 { pt3dadd( -78.3159, -23.7443, -188.029, 0.22 ) }
    dend_51 { pt3dadd( -78.8277, -23.4464, -188.339, 0.44 ) }
    dend_51 { pt3dadd( -79.5274, -23.0412, -188.714, 0.44 ) }
    dend_51 { pt3dadd( -80.3992, -22.4936, -189.159, 0.22 ) }
    dend_51 { pt3dadd( -81.2892, -21.8816, -189.591, 0.22 ) }
    dend_51 { pt3dadd( -81.8815, -21.435, -189.871, 0.88 ) }
    dend_51 { pt3dadd( -82.5307, -20.93, -190.161, 1.25 ) }
    dend_51 { pt3dadd( -82.8385, -20.6565, -190.289, 1.25 ) }
    dend_51 { pt3dadd( -84.2374, -19.2391, -190.84, 0.22 ) }
    dend_51 { pt3dadd( -84.9351, -18.4418, -191.113, 0.22 ) }
    dend_51 { pt3dadd( -85.6292, -17.564, -191.39, 0.88 ) }
    dend_51 { pt3dadd( -86.1917, -16.77, -191.625, 1.25 ) }
    dend_51 { pt3dadd( -86.9973, -15.5062, -191.973, 0.22 ) }
    dend_51 { pt3dadd( -87.9179, -13.9253, -192.384, 0.22 ) }
    dend_51 { pt3dadd( -88.6137, -12.5863, -192.724, 0.88 ) }
    dend_51 { pt3dadd( -89.0011, -11.7438, -192.927, 0.88 ) }
    dend_51 { pt3dadd( -89.3476, -10.9242, -193.072, 0.37 ) }
    dend_51 { pt3dadd( -89.8499, -9.60522, -193.205, 0.15 ) }
    dend_51 { pt3dadd( -90.2962, -8.27245, -193.253, 0.96 ) }
    dend_51 { pt3dadd( -90.5967, -7.27471, -193.241, 1.18 ) }
    dend_51 { pt3dadd( -91.3938, -4.71263, -193.047, 0.22 ) }
    dend_51 { pt3dadd( -92.1798, -2.37393, -192.761, 0.81 ) }
    dend_51 { pt3dadd( -92.5907, -1.14846, -192.565, 0.74 ) }
    dend_51 { pt3dadd( -93.1115, 0.455345, -192.23, 0.29 ) }
    dend_51 { pt3dadd( -93.2884, 1.00581, -192.094, 0.29 ) }
    dend_51 { pt3dadd( -93.7862, 2.53569, -191.67, 0.52 ) }
    dend_51 { pt3dadd( -94.0219, 3.29357, -191.446, 0.66 ) }
    dend_51 { pt3dadd( -94.3515, 4.73171, -191.113, 0.22 ) }
    dend_51 { pt3dadd( -94.4591, 5.4666, -190.974, 0.22 ) }
    dend_51 { pt3dadd( -94.503, 6.72585, -190.761, 0.81 ) }
    dend_51 { pt3dadd( -94.4368, 7.43421, -190.674, 1.11 ) }
    dend_51 { pt3dadd( -94.1667, 8.49907, -190.614, 1.11 ) }
    dend_51 { pt3dadd( -93.5542, 10.0762, -190.628, 0.22 ) }
    dend_51 { pt3dadd( -93.1441, 10.8961, -190.699, 0.59 ) }
    dend_51 { pt3dadd( -92.8782, 11.3968, -190.767, 0.59 ) }
    dend_51 { pt3dadd( -92.344, 12.4072, -190.927, 0.29 ) }
    dend_51 { pt3dadd( -91.5663, 13.9917, -191.26, 0.22 ) }
    dend_51 { pt3dadd( -90.8138, 15.5719, -191.653, 0.88 ) }
    dend_51 { pt3dadd( -90.2224, 16.992, -192.018, 1.11 ) }
    dend_51 { pt3dadd( -89.4055, 19.2505, -192.557, 0.22 ) }
    dend_51 { pt3dadd( -89.0623, 20.2948, -192.785, 0.52 ) }
    dend_51 { pt3dadd( -88.5655, 21.9618, -193.185, 0.22 ) }
    dend_51 { pt3dadd( -88.0645, 23.8514, -193.7, 0.22 ) }
    dend_51 { pt3dadd( -87.5998, 25.7731, -194.272, 0.66 ) }
    dend_51 { pt3dadd( -87.222, 27.3332, -194.8, 0.66 ) }
    dend_51 { pt3dadd( -86.7793, 29.0222, -195.508, 0.88 ) }
    dend_51 { pt3dadd( -86.2333, 30.9899, -196.426, 0.66 ) }
    dend_51 { pt3dadd( -85.8822, 32.245, -197.056, 0.44 ) }
    dend_51 { pt3dadd( -85.5757, 33.3692, -197.682, 0.66 ) }
    dend_51 { pt3dadd( -85.4182, 33.8622, -197.997, 0.66 ) }
    dend_51 { pt3dadd( -84.7216, 35.9262, -199.487, 0.22 ) }
    dend_51 { pt3dadd( -84.2434, 37.3889, -200.585, 0.22 ) }
    dend_51 { pt3dadd( -84.0037, 38.1237, -201.08, 1.33 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 58/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -40.2116, -39.553, -113.085, 0.44 ) }
    dend_50 { pt3dadd( -40.8637, -40.4224, -113.686, 0.44 ) }
    dend_50 { pt3dadd( -41.3385, -41.1046, -114.185, 0.29 ) }
    dend_50 { pt3dadd( -41.5501, -41.4277, -114.442, 0.66 ) }
    dend_50 { pt3dadd( -41.7536, -41.7569, -114.74, 0.66 ) }
    dend_50 { pt3dadd( -42.0756, -42.3315, -115.344, 0.29 ) }
    dend_50 { pt3dadd( -42.234, -42.6144, -115.67, 0.59 ) }
    dend_50 { pt3dadd( -42.4575, -43.087, -116.245, 0.37 ) }
    dend_50 { pt3dadd( -42.6821, -43.6263, -116.949, 1.18 ) }
    dend_50 { pt3dadd( -42.8423, -44.1327, -117.618, 1.62 ) }
    dend_50 { pt3dadd( -42.9087, -44.7518, -118.427, 1.62 ) }
    dend_50 { pt3dadd( -42.7951, -45.7583, -119.731, 0.29 ) }
    dend_50 { pt3dadd( -42.6713, -46.2217, -120.323, 0.29 ) }
    dend_50 { pt3dadd( -42.5537, -46.5397, -120.715, 0.66 ) }
    dend_50 { pt3dadd( -42.2983, -47.199, -121.483, 0.52 ) }
    dend_50 { pt3dadd( -41.8353, -48.5005, -122.893, 1.18 ) }
    dend_50 { pt3dadd( -41.5451, -49.4182, -123.809, 1.77 ) }
    dend_50 { pt3dadd( -41.3894, -49.9645, -124.338, 1.77 ) }
    dend_50 { pt3dadd( -41.126, -51.3641, -125.774, 0.29 ) }
    dend_50 { pt3dadd( -41.0892, -51.9239, -126.34, 0.29 ) }
    dend_50 { pt3dadd( -41.1013, -52.4984, -126.901, 0.29 ) }
    dend_50 { pt3dadd( -41.1381, -53.3736, -127.708, 1.62 ) }
    dend_50 { pt3dadd( -41.1276, -53.9554, -128.222, 1.69 ) }
    dend_50 { pt3dadd( -40.8507, -56.3721, -130.267, 0.29 ) }
    dend_50 { pt3dadd( -40.6873, -57.1267, -130.875, 0.29 ) }
    dend_50 { pt3dadd( -40.4896, -57.7522, -131.355, 0.29 ) }
    dend_50 { pt3dadd( -39.9211, -59.1619, -132.349, 1.25 ) }
    dend_50 { pt3dadd( -39.3481, -60.2831, -133.053, 0.66 ) }
    dend_50 { pt3dadd( -38.7783, -61.1955, -133.51, 0.29 ) }
    dend_50 { pt3dadd( -38.3174, -61.8115, -133.716, 1.03 ) }
    dend_50 { pt3dadd( -37.9096, -62.2984, -133.869, 1.03 ) }
    dend_50 { pt3dadd( -37.4191, -62.8784, -134.017, 0.44 ) }
    dend_50 { pt3dadd( -36.7669, -63.6401, -134.137, 0.29 ) }
    dend_50 { pt3dadd( -36.3704, -64.1039, -134.198, 0.88 ) }
    dend_50 { pt3dadd( -36.1267, -64.401, -134.236, 1.33 ) }
    dend_50 { pt3dadd( -34.8463, -66.1298, -134.579, 0.29 ) }
    dend_50 { pt3dadd( -34.4765, -66.7276, -134.729, 0.96 ) }
    dend_50 { pt3dadd( -34.2957, -67.091, -134.836, 0.81 ) }
    dend_50 { pt3dadd( -34.0291, -67.7728, -135.079, 0.37 ) }
    dend_50 { pt3dadd( -33.7338, -68.6501, -135.434, 0.66 ) }
    dend_50 { pt3dadd( -33.3925, -69.7628, -135.909, 0.52 ) }
    dend_50 { pt3dadd( -33.1915, -70.4562, -136.219, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_50 { pt3dadd( -33.0155, -70.9791, -136.491, 0.88 ) }
    dend_50 { pt3dadd( -32.3029, -72.5762, -137.538, 0.44 ) }
    dend_50 { pt3dadd( -32.0178, -73.1191, -137.975, 0.37 ) }
    dend_50 { pt3dadd( -31.5716, -73.8606, -138.657, 0.29 ) }
    dend_50 { pt3dadd( -31.1954, -74.4031, -139.182, 0.96 ) }
    dend_50 { pt3dadd( -30.5649, -75.2325, -140.033, 1.03 ) }
    dend_50 { pt3dadd( -29.3022, -76.849, -141.708, 0.74 ) }
    dend_50 { pt3dadd( -28.5863, -77.789, -142.651, 1.33 ) }
    dend_50 { pt3dadd( -28.0377, -78.5727, -143.379, 1.11 ) }
    dend_50 { pt3dadd( -27.5809, -79.3194, -144.002, 0.44 ) }
    dend_50 { pt3dadd( -27.3108, -79.8623, -144.379, 0.81 ) }
    dend_50 { pt3dadd( -27.0361, -80.5508, -144.74, 0.88 ) }
    dend_50 { pt3dadd( -26.6369, -81.7477, -145.21, 0.22 ) }
    dend_50 { pt3dadd( -26.3583, -82.4959, -145.492, 0.22 ) }
    dend_50 { pt3dadd( -26.2042, -82.8862, -145.661, 0.59 ) }
    dend_50 { pt3dadd( -25.9977, -83.4004, -145.919, 0.59 ) }
    dend_50 { pt3dadd( -25.3993, -84.7905, -146.684, 0.37 ) }
    dend_50 { pt3dadd( -25.0169, -85.5588, -147.175, 0.59 ) }
    dend_50 { pt3dadd( -24.4517, -86.6118, -147.909, 0.44 ) }
    dend_50 { pt3dadd( -24.1288, -87.149, -148.346, 0.74 ) }
    dend_50 { pt3dadd( -23.9008, -87.5221, -148.678, 0.74 ) }
    dend_50 { pt3dadd( -23.5236, -88.1772, -149.296, 0.37 ) }
    dend_50 { pt3dadd( -22.8589, -89.2849, -150.518, 0.96 ) }
    dend_50 { pt3dadd( -22.5497, -89.7493, -151.111, 0.88 ) }
    dend_50 { pt3dadd( -21.6392, -91.0908, -153.035, 0.66 ) }
    dend_50 { pt3dadd( -21.3078, -91.561, -153.764, 0.96 ) }
    dend_50 { pt3dadd( -21.0003, -91.9962, -154.475, 0.96 ) }
    dend_50 { pt3dadd( -19.8892, -93.6205, -157.198, 0.66 ) }
    dend_50 { pt3dadd( -19.1379, -94.8378, -159.15, 0.66 ) }
    dend_50 { pt3dadd( -18.3029, -96.3174, -161.393, 0.44 ) }
    dend_50 { pt3dadd( -17.867, -97.2507, -162.647, 0.74 ) }
    dend_50 { pt3dadd( -17.6718, -97.7575, -163.244, 0.37 ) }
    dend_50 { pt3dadd( -17.5019, -98.3711, -163.84, 0.81 ) }
    dend_50 { pt3dadd( -17.3882, -99.5408, -164.65, 0.22 ) }
    dend_50 { pt3dadd( -17.3816, -100.114, -164.947, 0.81 ) }
    dend_50 { pt3dadd( -17.4214, -101.244, -165.338, 0.22 ) }
    dend_50 { pt3dadd( -17.5168, -102.649, -165.714, 0.22 ) }
    dend_50 { pt3dadd( -17.5562, -103.279, -165.872, 0.88 ) }
    dend_50 { pt3dadd( -17.5874, -103.754, -165.999, 0.88 ) }
    // Section: dend_46, id: dend_46, parent: dend_38 (entry count 39/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -74.4664, -65.1691, -83.8743, 0.96 ) }
    dend_46 { pt3dadd( -75.5284, -66.0572, -85.5473, 0.96 ) }
    dend_46 { pt3dadd( -76.3053, -66.6534, -86.4834, 0.22 ) }
    dend_46 { pt3dadd( -76.7033, -66.9588, -86.9629, 0.52 ) }
    dend_46 { pt3dadd( -77.0164, -67.1991, -87.3402, 0.66 ) }
    dend_46 { pt3dadd( -77.4842, -67.5582, -87.904, 0.44 ) }
    dend_46 { pt3dadd( -78.0142, -67.9649, -88.5426, 1.33 ) }
    dend_46 { pt3dadd( -78.8926, -68.4217, -89.1655, 1.84 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 47/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -74.4664, -65.1691, -83.8743, 0.37 ) }
    dend_39 { pt3dadd( -76.0799, -64.3162, -83.7032, 0.37 ) }
    dend_39 { pt3dadd( -76.6402, -64.0475, -83.6376, 0.37 ) }
    dend_39 { pt3dadd( -77.5804, -63.5968, -83.5275, 0.22 ) }
    dend_39 { pt3dadd( -78.0882, -63.3533, -83.4681, 1.03 ) }
    dend_39 { pt3dadd( -78.6097, -63.1033, -83.407, 1.77 ) }
    dend_39 { pt3dadd( -79.2313, -62.8053, -83.3342, 2.14 ) }
    dend_39 { pt3dadd( -79.6247, -62.6387, -83.3411, 2.14 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 55/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 49.4091, -72.7385, -37.3513, 0.44 ) }
    dend_36 { pt3dadd( 50.3797, -72.2958, -37.4004, 0.44 ) }
    dend_36 { pt3dadd( 50.9694, -71.954, -37.4426, 0.22 ) }
    dend_36 { pt3dadd( 51.4961, -71.5301, -37.5498, 0.22 ) }
    dend_36 { pt3dadd( 52.0895, -70.9967, -37.7645, 0.44 ) }
    dend_36 { pt3dadd( 52.2648, -70.8215, -37.8672, 0.81 ) }
    dend_36 { pt3dadd( 52.5425, -70.5274, -38.0592, 0.81 ) }
    dend_36 { pt3dadd( 52.7753, -70.2526, -38.3265, 0.37 ) }
    dend_36 { pt3dadd( 53.1821, -69.6764, -39.0367, 0.44 ) }
    dend_36 { pt3dadd( 53.3375, -69.4029, -39.5858, 0.59 ) }
    dend_36 { pt3dadd( 53.5108, -69.0295, -40.553, 0.15 ) }
    dend_36 { pt3dadd( 53.613, -68.8053, -41.2618, 0.29 ) }
    dend_36 { pt3dadd( 53.7976, -68.433, -42.6349, 1.18 ) }
    dend_36 { pt3dadd( 53.9021, -68.2474, -43.4236, 1.18 ) }
    dend_36 { pt3dadd( 54.3612, -67.5525, -46.5609, 0.74 ) }
    dend_36 { pt3dadd( 54.451, -67.4186, -47.1215, 0.74 ) }
    dend_36 { pt3dadd( 54.5825, -67.2355, -47.8363, 0.96 ) }
    dend_36 { pt3dadd( 54.7081, -67.0623, -48.4252, 0.96 ) }
    dend_36 { pt3dadd( 54.948, -66.7193, -49.2948, 0.52 ) }
    dend_36 { pt3dadd( 55.2643, -66.2169, -50.2081, 0.29 ) }
    dend_36 { pt3dadd( 55.5777, -65.7072, -50.8644, 0.29 ) }
    dend_36 { pt3dadd( 55.9878, -65.0196, -51.665, 1.33 ) }
    dend_36 { pt3dadd( 56.1942, -64.6688, -52.0319, 1.33 ) }
    dend_36 { pt3dadd( 56.6157, -63.9321, -52.7039, 0.44 ) }
    dend_36 { pt3dadd( 57.058, -63.1467, -53.3116, 0.37 ) }
    dend_36 { pt3dadd( 57.4239, -62.485, -53.733, 0.37 ) }
    dend_36 { pt3dadd( 57.5991, -62.1823, -53.8871, 0.37 ) }
    dend_36 { pt3dadd( 57.9313, -61.6294, -54.1112, 0.22 ) }
    dend_36 { pt3dadd( 58.6526, -60.4862, -54.5209, 1.55 ) }
    dend_36 { pt3dadd( 58.9705, -60.0192, -54.6651, 1.77 ) }
    dend_36 { pt3dadd( 59.7176, -58.9303, -55.0017, 0.37 ) }
    dend_36 { pt3dadd( 59.9601, -58.5204, -55.1256, 0.44 ) }
    dend_36 { pt3dadd( 60.1231, -58.1863, -55.2291, 0.44 ) }
    dend_36 { pt3dadd( 60.2751, -57.8205, -55.3509, 0.44 ) }
    dend_36 { pt3dadd( 60.6104, -56.9648, -55.6664, 0.29 ) }
    dend_36 { pt3dadd( 60.8238, -56.3919, -55.9023, 0.22 ) }
    dend_36 { pt3dadd( 61.0663, -55.7358, -56.1909, 0.22 ) }
    dend_36 { pt3dadd( 61.4907, -54.5909, -56.6858, 1.18 ) }
    dend_36 { pt3dadd( 61.7574, -53.8623, -56.9795, 1.4 ) }
    dend_36 { pt3dadd( 61.8545, -53.6031, -57.0759, 1.62 ) }
    dend_36 { pt3dadd( 61.9796, -53.2896, -57.1926, 1.62 ) }
    dend_36 { pt3dadd( 62.3346, -52.5868, -57.4955, 0.96 ) }
    dend_36 { pt3dadd( 62.6323, -52.0886, -57.7317, 0.59 ) }
    dend_36 { pt3dadd( 63.0889, -51.3832, -58.0919, 0.52 ) }
    dend_36 { pt3dadd( 63.5741, -50.6501, -58.4695, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_36 { pt3dadd( 63.9619, -50.0913, -58.7672, 1.03 ) }
    dend_36 { pt3dadd( 64.8636, -48.9419, -59.4176, 0.22 ) }
    dend_36 { pt3dadd( 65.1982, -48.5874, -59.6294, 0.66 ) }
    dend_36 { pt3dadd( 65.4639, -48.363, -59.7686, 0.66 ) }
    dend_36 { pt3dadd( 66.1407, -47.9811, -60.0232, 0.29 ) }
    dend_36 { pt3dadd( 66.6992, -47.859, -60.1109, 0.29 ) }
    dend_36 { pt3dadd( 67.4965, -47.9646, -60.1927, 0.29 ) }
    dend_36 { pt3dadd( 68.4069, -48.3657, -60.2833, 1.33 ) }
    dend_36 { pt3dadd( 68.8326, -48.6695, -60.3898, 1.47 ) }
    dend_36 { pt3dadd( 69.5056, -49.2669, -60.6657, 0.74 ) }
    dend_36 { pt3dadd( 70.0379, -49.7872, -60.9648, 0.44 ) }
    dend_36 { pt3dadd( 71.3567, -51.0501, -61.8945, 0.96 ) }
    dend_36 { pt3dadd( 71.7421, -51.3892, -62.2132, 0.74 ) }
    dend_36 { pt3dadd( 72.7119, -52.1655, -63.0812, 0.29 ) }
    dend_36 { pt3dadd( 73.2431, -52.5146, -63.5345, 0.52 ) }
    dend_36 { pt3dadd( 73.9131, -52.8601, -64.042, 0.29 ) }
    dend_36 { pt3dadd( 74.616, -53.1346, -64.4787, 0.66 ) }
    dend_36 { pt3dadd( 75.075, -53.256, -64.6913, 0.66 ) }
    dend_36 { pt3dadd( 75.7082, -53.361, -64.9931, 0.29 ) }
    dend_36 { pt3dadd( 76.7861, -53.4707, -65.5018, 0.96 ) }
    dend_36 { pt3dadd( 77.4748, -53.5517, -65.8373, 0.29 ) }
    dend_36 { pt3dadd( 78.1969, -53.6409, -66.2125, 1.11 ) }
    dend_36 { pt3dadd( 79.3308, -53.7684, -66.8261, 0.37 ) }
    dend_36 { pt3dadd( 80.4757, -53.8636, -67.4645, 0.96 ) }
    dend_36 { pt3dadd( 81.2515, -53.8937, -67.9115, 0.52 ) }
    dend_36 { pt3dadd( 81.9556, -53.9029, -68.3255, 0.96 ) }
    dend_36 { pt3dadd( 82.2201, -53.8987, -68.4761, 0.96 ) }
    dend_36 { pt3dadd( 83.2372, -53.8841, -69.0259, 0.29 ) }
    dend_36 { pt3dadd( 83.7168, -53.8769, -69.25, 0.81 ) }
    dend_36 { pt3dadd( 84.082, -53.862, -69.3861, 0.81 ) }
    dend_36 { pt3dadd( 84.8985, -53.7843, -69.6684, 0.29 ) }
    dend_36 { pt3dadd( 85.5429, -53.6839, -69.8777, 0.81 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 49.4091, -72.7385, -37.3513, 0.74 ) }
    dend_33 { pt3dadd( 50.1417, -74.1198, -36.8649, 0.74 ) }
    dend_33 { pt3dadd( 50.7972, -75.106, -36.4052, 0.81 ) }
    dend_33 { pt3dadd( 51.5645, -76.0753, -35.8715, 0.81 ) }
    dend_33 { pt3dadd( 52.4848, -77.0699, -35.2626, 0.59 ) }
    dend_33 { pt3dadd( 53.2921, -77.8057, -34.7709, 0.37 ) }
    dend_33 { pt3dadd( 53.7914, -78.1862, -34.4767, 0.37 ) }
    dend_33 { pt3dadd( 54.8579, -78.8396, -33.8158, 0.88 ) }
    dend_33 { pt3dadd( 55.302, -79.048, -33.5647, 0.88 ) }
    dend_33 { pt3dadd( 55.8265, -79.2735, -33.278, 0.88 ) }
    dend_33 { pt3dadd( 56.534, -79.6204, -32.9304, 0.29 ) }
    dend_33 { pt3dadd( 57.7408, -80.4125, -32.3745, 0.29 ) }
    dend_33 { pt3dadd( 58.3719, -80.9965, -32.1012, 1.03 ) }
    dend_33 { pt3dadd( 58.7876, -81.4478, -31.9237, 1.33 ) }
    dend_33 { pt3dadd( 59.4898, -82.2293, -31.6048, 1.18 ) }
    dend_33 { pt3dadd( 60.3404, -83.1338, -31.2117, 1.03 ) }
    dend_33 { pt3dadd( 61.0285, -83.787, -30.9024, 0.81 ) }
    dend_33 { pt3dadd( 62.1717, -84.6116, -30.4152, 0.37 ) }
    dend_33 { pt3dadd( 63.4106, -85.224, -29.8945, 0.96 ) }
    dend_33 { pt3dadd( 64.1972, -85.491, -29.5805, 1.18 ) }
    dend_33 { pt3dadd( 65.0476, -85.6669, -29.2358, 1.18 ) }
    dend_33 { pt3dadd( 65.8611, -85.7425, -28.9238, 0.88 ) }
    dend_33 { pt3dadd( 67.1301, -85.7436, -28.5396, 0.44 ) }
    dend_33 { pt3dadd( 67.7442, -85.7022, -28.4506, 0.44 ) }
    dend_33 { pt3dadd( 68.8902, -85.5982, -28.4822, 0.37 ) }
    dend_33 { pt3dadd( 69.8204, -85.5151, -28.6692, 0.37 ) }
    dend_33 { pt3dadd( 71.1478, -85.4334, -29.1374, 0.66 ) }
    dend_33 { pt3dadd( 72.1278, -85.4239, -29.5788, 1.03 ) }
    dend_33 { pt3dadd( 73.3753, -85.4174, -30.258, 0.74 ) }
    dend_33 { pt3dadd( 74.2261, -85.4159, -30.777, 0.52 ) }
    dend_33 { pt3dadd( 75.3014, -85.4106, -31.5229, 0.44 ) }
    dend_33 { pt3dadd( 76.1705, -85.4478, -32.1801, 0.44 ) }
    dend_33 { pt3dadd( 77.0584, -85.5602, -32.8126, 0.37 ) }
    // Section: dend_26, id: dend_26, parent: dend_16 (entry count 65/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -7.77213, 240.98, -37.2023, 0.29 ) }
    dend_26 { pt3dadd( -8.03025, 243.908, -37.9808, 0.29 ) }
    dend_26 { pt3dadd( -7.9999, 244.569, -38.0748, 0.29 ) }
    dend_26 { pt3dadd( -7.95538, 245.273, -38.1104, 0.66 ) }
    dend_26 { pt3dadd( -7.95888, 246.02, -38.0652, 0.88 ) }
    dend_26 { pt3dadd( -8.02742, 246.911, -37.9487, 0.88 ) }
    dend_26 { pt3dadd( -8.23512, 248.456, -37.49, 0.52 ) }
    dend_26 { pt3dadd( -8.44075, 249.656, -36.7971, 0.66 ) }
    dend_26 { pt3dadd( -8.61309, 250.381, -36.1843, 0.81 ) }
    dend_26 { pt3dadd( -8.93803, 251.431, -35.1183, 0.37 ) }
    dend_26 { pt3dadd( -9.22464, 252.172, -34.2976, 0.52 ) }
    dend_26 { pt3dadd( -9.92375, 253.672, -32.5315, 0.74 ) }
    dend_26 { pt3dadd( -10.5035, 254.714, -31.2895, 1.03 ) }
    dend_26 { pt3dadd( -11.6327, 256.492, -29.1098, 1.03 ) }
    dend_26 { pt3dadd( -12.1842, 257.324, -28.1005, 0.74 ) }
    dend_26 { pt3dadd( -12.6222, 258.016, -27.3059, 0.44 ) }
    dend_26 { pt3dadd( -13.0404, 258.704, -26.5522, 0.44 ) }
    dend_26 { pt3dadd( -13.7161, 259.841, -25.4249, 0.44 ) }
    dend_26 { pt3dadd( -14.7335, 261.596, -23.8176, 0.88 ) }
    dend_26 { pt3dadd( -15.2728, 262.584, -22.9979, 1.18 ) }
    dend_26 { pt3dadd( -15.6252, 263.29, -22.401, 0.52 ) }
    dend_26 { pt3dadd( -15.9676, 264.077, -21.7351, 0.52 ) }
    dend_26 { pt3dadd( -16.3639, 265.201, -20.851, 0.59 ) }
    dend_26 { pt3dadd( -16.584, 266.007, -20.3192, 0.81 ) }
    dend_26 { pt3dadd( -16.8318, 267.029, -19.8445, 0.29 ) }
    dend_26 { pt3dadd( -17.0293, 267.64, -19.6002, 0.29 ) }
    dend_26 { pt3dadd( -17.3686, 268.337, -19.3152, 0.66 ) }
    dend_26 { pt3dadd( -17.7839, 268.935, -18.9647, 0.66 ) }
    dend_26 { pt3dadd( -18.1597, 269.419, -18.5813, 0.37 ) }
    dend_26 { pt3dadd( -18.5147, 269.889, -18.1235, 0.66 ) }
    dend_26 { pt3dadd( -18.9538, 270.547, -17.4683, 0.81 ) }
    dend_26 { pt3dadd( -19.3055, 271.182, -16.8803, 0.74 ) }
    dend_26 { pt3dadd( -20.1748, 273.186, -15.1538, 0.44 ) }
    dend_26 { pt3dadd( -20.4346, 274.073, -14.4668, 0.37 ) }
    dend_26 { pt3dadd( -20.5436, 274.888, -13.944, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_26 { pt3dadd( -20.5342, 276.01, -13.3868, 0.29 ) }
    dend_26 { pt3dadd( -20.4376, 276.872, -13.0363, 0.15 ) }
    dend_26 { pt3dadd( -20.3021, 277.545, -12.8395, 0.44 ) }
    dend_26 { pt3dadd( -20.1982, 277.903, -12.8044, 0.44 ) }
    dend_26 { pt3dadd( -20.1082, 278.231, -12.7771, 0.44 ) }
    dend_26 { pt3dadd( -19.7203, 280.399, -12.4165, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 6/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -7.77213, 240.98, -37.2023, 0.74 ) }
    dend_17 { pt3dadd( -7.81642, 242.026, -37.7585, 0.74 ) }
    dend_17 { pt3dadd( -7.90062, 242.948, -38.2087, 0.74 ) }
    dend_17 { pt3dadd( -8.09664, 244.436, -38.8915, 0.96 ) }
    dend_17 { pt3dadd( -8.28736, 245.527, -39.316, 0.96 ) }
    dend_17 { pt3dadd( -8.57332, 246.822, -39.7228, 0.74 ) }
    dend_17 { pt3dadd( -9.03091, 248.621, -40.1913, 0.59 ) }
    dend_17 { pt3dadd( -9.28947, 249.502, -40.3417, 0.81 ) }
    dend_17 { pt3dadd( -9.63207, 250.674, -40.455, 0.81 ) }
    dend_17 { pt3dadd( -10.0424, 252.165, -40.4957, 0.81 ) }
    dend_17 { pt3dadd( -10.4087, 253.811, -40.4579, 0.96 ) }
    dend_17 { pt3dadd( -10.5886, 254.927, -40.3984, 0.96 ) }
    dend_17 { pt3dadd( -10.7441, 256.81, -40.2977, 0.74 ) }
    dend_17 { pt3dadd( -10.7406, 257.844, -40.2501, 1.03 ) }
    dend_17 { pt3dadd( -10.6695, 258.589, -40.2311, 1.03 ) }
    dend_17 { pt3dadd( -10.456, 259.852, -40.268, 1.03 ) }
    dend_17 { pt3dadd( -10.3233, 260.514, -40.3133, 1.03 ) }
    dend_17 { pt3dadd( -10.1588, 261.516, -40.4209, 1.03 ) }
    dend_17 { pt3dadd( -10.0968, 262.374, -40.5179, 1.03 ) }
    dend_17 { pt3dadd( -10.1143, 263.368, -40.6452, 0.96 ) }
    dend_17 { pt3dadd( -10.2496, 264.466, -40.7922, 0.74 ) }
    dend_17 { pt3dadd( -10.4345, 265.36, -40.9263, 0.74 ) }
    dend_17 { pt3dadd( -10.7168, 266.411, -41.078, 0.88 ) }
    dend_17 { pt3dadd( -11.1539, 267.758, -41.2558, 1.11 ) }
    dend_17 { pt3dadd( -11.5255, 268.772, -41.39, 1.11 ) }
    dend_17 { pt3dadd( -12.1593, 270.417, -41.5973, 0.96 ) }
    dend_17 { pt3dadd( -12.4942, 271.318, -41.6976, 0.96 ) }
    dend_17 { pt3dadd( -12.8037, 272.2, -41.7737, 0.96 ) }
    dend_17 { pt3dadd( -13.0666, 272.955, -41.8186, 0.96 ) }
    dend_17 { pt3dadd( -13.4092, 273.915, -41.8503, 0.81 ) }
    dend_17 { pt3dadd( -13.8104, 275.079, -41.8612, 0.96 ) }
    dend_17 { pt3dadd( -14.0868, 275.951, -41.8373, 0.96 ) }
    dend_17 { pt3dadd( -14.3885, 276.98, -41.7499, 0.96 ) }
    dend_17 { pt3dadd( -14.5784, 277.755, -41.6529, 1.25 ) }
    dend_17 { pt3dadd( -14.7628, 278.68, -41.4763, 1.25 ) }
    dend_17 { pt3dadd( -14.9623, 280.037, -41.1302, 1.11 ) }
    dend_17 { pt3dadd( -15.056, 281.189, -40.8258, 0.88 ) }
    dend_17 { pt3dadd( -15.0491, 282.387, -40.5193, 0.74 ) }
    dend_17 { pt3dadd( -14.9667, 283.201, -40.3451, 1.18 ) }
    dend_17 { pt3dadd( -14.7864, 284.168, -40.1656, 1.18 ) }
    dend_17 { pt3dadd( -14.6533, 284.774, -40.053, 1.18 ) }
    dend_17 { pt3dadd( -14.4245, 285.875, -39.8413, 0.96 ) }
    dend_17 { pt3dadd( -14.2885, 286.687, -39.7228, 0.81 ) }
    dend_17 { pt3dadd( -14.1915, 287.58, -39.633, 0.81 ) }
    dend_17 { pt3dadd( -14.1367, 288.606, -39.5455, 0.81 ) }
    dend_17 { pt3dadd( -14.1123, 289.897, -39.4592, 0.81 ) }
    dend_17 { pt3dadd( -14.1341, 290.927, -39.3888, 1.11 ) }
    dend_17 { pt3dadd( -14.1902, 292.022, -39.3277, 1.11 ) }
    dend_17 { pt3dadd( -14.2751, 293.18, -39.3577, 0.96 ) }
    dend_17 { pt3dadd( -14.3849, 294.378, -39.4862, 0.96 ) }
    dend_17 { pt3dadd( -14.566, 295.993, -39.8144, 0.88 ) }
    dend_17 { pt3dadd( -14.7514, 297.453, -40.2516, 0.88 ) }
    dend_17 { pt3dadd( -14.9246, 298.677, -40.7141, 0.88 ) }
    dend_17 { pt3dadd( -15.1992, 300.568, -41.533, 0.88 ) }
    dend_17 { pt3dadd( -15.407, 301.977, -42.1809, 1.11 ) }
    dend_17 { pt3dadd( -15.5781, 303.14, -42.7406, 1.11 ) }
    dend_17 { pt3dadd( -15.7329, 304.219, -43.2061, 1.11 ) }
    dend_17 { pt3dadd( -15.865, 305.465, -43.6276, 0.81 ) }
    dend_17 { pt3dadd( -15.9681, 307.42, -44.086, 1.11 ) }
    dend_17 { pt3dadd( -15.9571, 308.251, -44.1855, 1.11 ) }
    dend_17 { pt3dadd( -15.8426, 309.636, -44.286, 1.11 ) }
    dend_17 { pt3dadd( -15.5777, 311.722, -44.3702, 0.96 ) }
    dend_17 { pt3dadd( -15.3339, 313.316, -44.406, 0.96 ) }
    dend_17 { pt3dadd( -15.1621, 314.388, -44.4624, 0.96 ) }
    dend_17 { pt3dadd( -15.0219, 315.294, -44.5689, 0.96 ) }
    dend_17 { pt3dadd( -14.7379, 316.978, -44.843, 0.81 ) }
    dend_17 { pt3dadd( -14.5219, 318.095, -45.0684, 0.81 ) }
    dend_17 { pt3dadd( -14.2652, 319.391, -45.3798, 0.66 ) }
    dend_17 { pt3dadd( -13.8792, 321.388, -45.8952, 0.66 ) }
    dend_17 { pt3dadd( -13.591, 323.031, -46.3184, 0.66 ) }
    dend_17 { pt3dadd( -13.3217, 325.058, -46.8402, 1.03 ) }
    dend_17 { pt3dadd( -13.2473, 325.995, -47.0646, 1.03 ) }
    dend_17 { pt3dadd( -13.1877, 327.812, -47.5415, 0.81 ) }
    dend_17 { pt3dadd( -13.2085, 328.91, -47.847, 0.81 ) }
    dend_17 { pt3dadd( -13.2874, 330.05, -48.1698, 0.96 ) }
    dend_17 { pt3dadd( -13.4632, 331.721, -48.6693, 0.66 ) }
    dend_17 { pt3dadd( -13.6224, 332.926, -49.0512, 0.88 ) }
    dend_17 { pt3dadd( -13.791, 334.321, -49.473, 0.88 ) }
    dend_17 { pt3dadd( -13.9401, 335.833, -49.8784, 0.88 ) }
    dend_17 { pt3dadd( -14.0644, 337.547, -50.2646, 1.03 ) }
    dend_17 { pt3dadd( -14.0848, 338.493, -50.47, 1.03 ) }
    dend_17 { pt3dadd( -14.0631, 339.455, -50.6691, 1.03 ) }
    dend_17 { pt3dadd( -13.9918, 341.133, -50.9783, 0.81 ) }
    dend_17 { pt3dadd( -13.9304, 342.73, -51.2146, 0.81 ) }
    dend_17 { pt3dadd( -13.9137, 343.795, -51.3612, 0.81 ) }
    dend_17 { pt3dadd( -13.95, 345.989, -51.6346, 0.81 ) }
    dend_17 { pt3dadd( -14.0659, 347.61, -51.832, 1.25 ) }
    dend_17 { pt3dadd( -14.1429, 348.187, -51.91, 1.33 ) }
    dend_17 { pt3dadd( -14.3147, 349.148, -52.065, 1.33 ) }
    dend_17 { pt3dadd( -14.533, 350.235, -52.2666, 1.18 ) }
    dend_17 { pt3dadd( -14.7204, 351.153, -52.4647, 0.74 ) }
    dend_17 { pt3dadd( -15.0084, 352.483, -52.7637, 0.66 ) }
    dend_17 { pt3dadd( -15.2204, 353.542, -53.0376, 0.96 ) }
    dend_17 { pt3dadd( -15.378, 354.501, -53.3129, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( -15.4717, 355.344, -53.5457, 0.66 ) }
    dend_17 { pt3dadd( -15.5344, 356.479, -53.7942, 0.66 ) }
    dend_17 { pt3dadd( -15.5762, 357.933, -54.0278, 0.66 ) }
    dend_17 { pt3dadd( -15.5992, 359.081, -54.1503, 0.96 ) }
    dend_17 { pt3dadd( -15.6414, 359.985, -54.2333, 0.96 ) }
    dend_17 { pt3dadd( -15.7295, 360.954, -54.3546, 0.74 ) }
    dend_17 { pt3dadd( -15.975, 363.096, -54.6969, 0.74 ) }
    dend_17 { pt3dadd( -16.066, 363.791, -54.8213, 0.88 ) }
    dend_17 { pt3dadd( -16.3107, 365.589, -55.1916, 0.96 ) }
    dend_17 { pt3dadd( -16.547, 367.276, -55.5514, 0.81 ) }
    dend_17 { pt3dadd( -16.7896, 369.008, -55.9397, 0.66 ) }
    dend_17 { pt3dadd( -16.9746, 370.522, -56.2998, 0.81 ) }
    dend_17 { pt3dadd( -17.0974, 371.728, -56.5648, 0.96 ) }
    dend_17 { pt3dadd( -17.2265, 373.55, -56.9153, 0.74 ) }
    dend_17 { pt3dadd( -17.279, 374.464, -57.0546, 1.03 ) }
    dend_17 { pt3dadd( -17.3535, 375.642, -57.1454, 1.03 ) }
    dend_17 { pt3dadd( -17.4926, 377.349, -57.1996, 1.33 ) }
    dend_17 { pt3dadd( -17.6091, 378.439, -57.2264, 1.55 ) }
    dend_17 { pt3dadd( -17.8304, 380.221, -57.2699, 0.81 ) }
    dend_17 { pt3dadd( -18.0167, 381.433, -57.3077, 0.66 ) }
    dend_17 { pt3dadd( -18.2372, 382.655, -57.3743, 0.66 ) }
    dend_17 { pt3dadd( -18.4186, 383.538, -57.4548, 0.66 ) }
    dend_17 { pt3dadd( -18.7006, 384.878, -57.6342, 0.66 ) }
    dend_17 { pt3dadd( -18.9001, 385.993, -57.8163, 0.66 ) }
    dend_17 { pt3dadd( -19.0719, 387.205, -58.0041, 1.25 ) }
    dend_17 { pt3dadd( -19.1248, 387.75, -58.0922, 1.03 ) }
    dend_17 { pt3dadd( -19.198, 389.225, -58.3482, 0.81 ) }
    dend_17 { pt3dadd( -19.2192, 390.545, -58.5602, 0.81 ) }
    dend_17 { pt3dadd( -19.2035, 391.998, -58.7904, 0.66 ) }
    dend_17 { pt3dadd( -19.1501, 393.225, -58.9686, 0.66 ) }
    dend_17 { pt3dadd( -19.0635, 394.443, -59.1257, 0.96 ) }
    dend_17 { pt3dadd( -18.9728, 395.515, -59.2485, 1.4 ) }
    dend_17 { pt3dadd( -18.8939, 396.376, -59.3349, 1.4 ) }
    dend_17 { pt3dadd( -18.8461, 397.012, -59.3976, 1.4 ) }
    dend_17 { pt3dadd( -18.799, 398.146, -59.5123, 0.88 ) }
    dend_17 { pt3dadd( -18.754, 399.549, -59.6615, 0.74 ) }
    dend_17 { pt3dadd( -18.7181, 400.467, -59.7669, 0.74 ) }
    dend_17 { pt3dadd( -18.6601, 401.989, -59.9541, 0.74 ) }
    dend_17 { pt3dadd( -18.5977, 403.277, -60.1239, 0.66 ) }
    dend_17 { pt3dadd( -18.5093, 404.723, -60.3308, 0.66 ) }
    dend_17 { pt3dadd( -18.3682, 406.69, -60.6375, 0.66 ) }
    dend_17 { pt3dadd( -18.2407, 408.12, -60.8627, 0.74 ) }
    dend_17 { pt3dadd( -18.1405, 409.005, -61.0037, 0.74 ) }
    dend_17 { pt3dadd( -17.9943, 410.055, -61.1725, 0.96 ) }
    dend_17 { pt3dadd( -17.8487, 410.992, -61.3165, 1.11 ) }
    dend_17 { pt3dadd( -17.7397, 411.695, -61.4263, 1.11 ) }
    dend_17 { pt3dadd( -17.5905, 412.897, -61.6177, 0.74 ) }
    dend_17 { pt3dadd( -17.48, 413.935, -61.7962, 0.59 ) }
    dend_17 { pt3dadd( -17.3458, 415.111, -61.9979, 0.59 ) }
    dend_17 { pt3dadd( -17.1952, 416.228, -62.2016, 0.88 ) }
    dend_17 { pt3dadd( -17.1206, 416.778, -62.3124, 1.25 ) }
    dend_17 { pt3dadd( -17.0157, 417.601, -62.4955, 1.4 ) }
    dend_17 { pt3dadd( -16.9508, 418.176, -62.6361, 1.4 ) }
    dend_17 { pt3dadd( -16.8825, 419.044, -62.8592, 0.88 ) }
    dend_17 { pt3dadd( -16.8351, 420.086, -63.1385, 0.66 ) }
    dend_17 { pt3dadd( -16.8245, 421.45, -63.506, 0.66 ) }
    dend_17 { pt3dadd( -16.8404, 422.469, -63.7587, 0.66 ) }
    dend_17 { pt3dadd( -16.8659, 423.155, -63.9186, 0.52 ) }
    dend_17 { pt3dadd( -16.9331, 424.465, -64.2056, 0.81 ) }
    dend_17 { pt3dadd( -16.9965, 425.482, -64.4297, 0.81 ) }
    dend_17 { pt3dadd( -17.0546, 426.48, -64.6381, 0.66 ) }
    dend_17 { pt3dadd( -17.1018, 427.996, -64.9354, 0.59 ) }
    dend_17 { pt3dadd( -17.1092, 428.834, -65.0855, 0.88 ) }
    dend_17 { pt3dadd( -17.0972, 429.83, -65.2581, 1.11 ) }
    dend_17 { pt3dadd( -17.0671, 430.821, -65.4203, 1.11 ) }
    dend_17 { pt3dadd( -17.0312, 431.614, -65.5445, 1.11 ) }
    dend_17 { pt3dadd( -16.9856, 432.34, -65.6544, 0.88 ) }
    dend_17 { pt3dadd( -16.9114, 433.218, -65.8005, 0.52 ) }
    dend_17 { pt3dadd( -16.8242, 434.102, -65.9472, 0.81 ) }
    dend_17 { pt3dadd( -16.7357, 435.001, -66.0794, 0.81 ) }
    dend_17 { pt3dadd( -16.6915, 435.533, -66.1394, 0.81 ) }
    dend_17 { pt3dadd( -16.6245, 436.486, -66.2372, 0.96 ) }
    dend_17 { pt3dadd( -16.5641, 437.672, -66.3497, 0.59 ) }
    dend_17 { pt3dadd( -16.526, 438.52, -66.4266, 0.44 ) }
    dend_17 { pt3dadd( -16.4701, 439.76, -66.5188, 0.44 ) }
    dend_17 { pt3dadd( -16.4241, 440.704, -66.5787, 1.11 ) }
    dend_17 { pt3dadd( -16.4068, 441.132, -66.6019, 1.4 ) }
    dend_17 { pt3dadd( -16.4043, 442.057, -66.6317, 1.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 78/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -20.1688, 202.392, -37.8919, 0.29 ) }
    dend_15 { pt3dadd( -21.0677, 203.783, -38.012, 0.29 ) }
    dend_15 { pt3dadd( -21.837, 204.954, -38.2311, 0.52 ) }
    dend_15 { pt3dadd( -22.3945, 205.778, -38.4302, 0.52 ) }
    dend_15 { pt3dadd( -23.4204, 207.321, -38.844, 0.66 ) }
    dend_15 { pt3dadd( -23.8221, 207.941, -39.0223, 0.66 ) }
    dend_15 { pt3dadd( -24.1976, 208.584, -39.1622, 0.37 ) }
    dend_15 { pt3dadd( -25.0358, 210.423, -39.3693, 0.29 ) }
    dend_15 { pt3dadd( -25.2451, 211.109, -39.3881, 0.59 ) }
    dend_15 { pt3dadd( -25.4112, 211.956, -39.3701, 0.81 ) }
    dend_15 { pt3dadd( -25.4696, 212.482, -39.3241, 0.81 ) }
    dend_15 { pt3dadd( -25.6263, 214.719, -39.013, 0.74 ) }
    dend_15 { pt3dadd( -25.6834, 215.925, -38.7839, 0.74 ) }
    dend_15 { pt3dadd( -25.7547, 217.42, -38.4151, 0.44 ) }
    dend_15 { pt3dadd( -25.8366, 218.415, -38.1874, 0.29 ) }
    dend_15 { pt3dadd( -25.9608, 219.408, -37.9968, 0.29 ) }
    dend_15 { pt3dadd( -26.0754, 220.07, -37.9071, 0.52 ) }
    dend_15 { pt3dadd( -26.2459, 220.834, -37.8868, 0.52 ) }
    dend_15 { pt3dadd( -26.4715, 221.755, -37.9218, 0.52 ) }
    dend_15 { pt3dadd( -26.8676, 223.217, -38.044, 0.74 ) }
    dend_15 { pt3dadd( -27.1267, 224.106, -38.1566, 0.96 ) }
    dend_15 { pt3dadd( -27.314, 224.751, -38.2617, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_15 { pt3dadd( -27.5645, 225.669, -38.4337, 0.59 ) }
    dend_15 { pt3dadd( -27.8412, 226.783, -38.6713, 0.37 ) }
    dend_15 { pt3dadd( -28.0825, 227.807, -38.9911, 0.22 ) }
    dend_15 { pt3dadd( -28.2189, 228.483, -39.2534, 0.22 ) }
    dend_15 { pt3dadd( -28.3191, 229.118, -39.5119, 0.74 ) }
    dend_15 { pt3dadd( -28.4472, 230.043, -39.9044, 1.03 ) }
    dend_15 { pt3dadd( -28.5162, 230.536, -40.1086, 1.03 ) }
    dend_15 { pt3dadd( -28.7766, 232.4, -40.8524, 0.44 ) }
    dend_15 { pt3dadd( -28.9427, 233.69, -41.3746, 0.44 ) }
    dend_15 { pt3dadd( -29.0775, 234.861, -41.8039, 0.37 ) }
    dend_15 { pt3dadd( -29.1953, 235.929, -42.1634, 0.37 ) }
    dend_15 { pt3dadd( -29.2953, 236.948, -42.4716, 0.37 ) }
    dend_15 { pt3dadd( -29.3657, 238.037, -42.7456, 0.37 ) }
    dend_15 { pt3dadd( -29.3778, 239.095, -42.9736, 0.37 ) }
    dend_15 { pt3dadd( -29.3019, 240.765, -43.3922, 0.88 ) }
    dend_15 { pt3dadd( -29.2068, 241.607, -43.6203, 1.18 ) }
    dend_15 { pt3dadd( -29.1035, 242.231, -43.7977, 1.18 ) }
    dend_15 { pt3dadd( -28.8906, 243.233, -44.0944, 0.74 ) }
    dend_15 { pt3dadd( -28.5812, 244.529, -44.4702, 0.52 ) }
    dend_15 { pt3dadd( -28.2927, 245.74, -44.8059, 0.44 ) }
    dend_15 { pt3dadd( -27.9576, 247.085, -45.177, 0.37 ) }
    dend_15 { pt3dadd( -27.7703, 247.801, -45.361, 0.37 ) }
    dend_15 { pt3dadd( -27.4571, 248.915, -45.6161, 0.37 ) }
    dend_15 { pt3dadd( -27.0456, 250.263, -45.8736, 0.59 ) }
    dend_15 { pt3dadd( -26.7655, 251.11, -45.9941, 1.03 ) }
    dend_15 { pt3dadd( -26.4867, 251.902, -46.0878, 1.03 ) }
    dend_15 { pt3dadd( -26.1892, 252.759, -46.1743, 0.96 ) }
    dend_15 { pt3dadd( -25.8277, 253.95, -46.26, 0.29 ) }
    dend_15 { pt3dadd( -25.5709, 255.053, -46.3496, 0.29 ) }
    dend_15 { pt3dadd( -25.4764, 255.679, -46.4126, 0.52 ) }
    dend_15 { pt3dadd( -25.4329, 256.277, -46.47, 0.52 ) }
    dend_15 { pt3dadd( -25.4329, 256.995, -46.5362, 0.29 ) }
    dend_15 { pt3dadd( -25.4963, 257.987, -46.6343, 0.52 ) }
    dend_15 { pt3dadd( -25.5986, 259.189, -46.7378, 0.66 ) }
    dend_15 { pt3dadd( -25.6245, 260.225, -46.808, 0.66 ) }
    dend_15 { pt3dadd( -25.5729, 261.197, -46.88, 0.52 ) }
    dend_15 { pt3dadd( -25.5002, 261.861, -46.9465, 0.81 ) }
    dend_15 { pt3dadd( -25.4028, 262.6, -47.0693, 1.11 ) }
    dend_15 { pt3dadd( -25.2609, 263.759, -47.3245, 0.15 ) }
    dend_15 { pt3dadd( -25.1308, 264.871, -47.5984, 0.15 ) }
    dend_15 { pt3dadd( -25.0376, 265.638, -47.8177, 0.52 ) }
    dend_15 { pt3dadd( -24.8752, 266.932, -48.2409, 0.59 ) }
    dend_15 { pt3dadd( -24.6922, 268.371, -48.7457, 0.29 ) }
    dend_15 { pt3dadd( -24.5669, 269.511, -49.1539, 0.29 ) }
    dend_15 { pt3dadd( -24.4957, 270.455, -49.5131, 0.96 ) }
    dend_15 { pt3dadd( -24.4696, 270.978, -49.7042, 0.96 ) }
    dend_15 { pt3dadd( -24.4071, 271.836, -49.9801, 0.59 ) }
    dend_15 { pt3dadd( -24.3255, 272.625, -50.2254, 0.22 ) }
    dend_15 { pt3dadd( -24.2045, 273.748, -50.5438, 0.22 ) }
    dend_15 { pt3dadd( -24.1178, 274.702, -50.8216, 0.88 ) }
    dend_15 { pt3dadd( -24.0928, 275.256, -50.9788, 0.88 ) }
    dend_15 { pt3dadd( -24.094, 275.949, -51.1616, 0.88 ) }
    dend_15 { pt3dadd( -24.1559, 277.119, -51.4565, 0.29 ) }
    dend_15 { pt3dadd( -24.2912, 278.282, -51.7246, 0.22 ) }
    dend_15 { pt3dadd( -24.3845, 278.795, -51.8126, 0.22 ) }
    dend_15 { pt3dadd( -24.6472, 279.902, -51.9106, 0.81 ) }
    dend_15 { pt3dadd( -24.777, 280.474, -51.92, 1.11 ) }
    dend_15 { pt3dadd( -24.8393, 280.809, -51.9095, 1.11 ) }
    dend_15 { pt3dadd( -24.9213, 281.777, -51.9077, 0.88 ) }
    dend_15 { pt3dadd( -24.9164, 282.719, -51.974, 0.59 ) }
    dend_15 { pt3dadd( -24.8413, 283.801, -52.1076, 0.29 ) }
    dend_15 { pt3dadd( -24.6725, 285.322, -52.3518, 0.29 ) }
    dend_15 { pt3dadd( -24.5391, 286.541, -52.568, 0.74 ) }
    dend_15 { pt3dadd( -24.3791, 288.428, -52.9736, 0.52 ) }
    dend_15 { pt3dadd( -24.3168, 289.592, -53.2927, 1.03 ) }
    dend_15 { pt3dadd( -24.3155, 290.503, -53.5964, 1.03 ) }
    dend_15 { pt3dadd( -24.3674, 291.069, -53.7998, 0.74 ) }
    dend_15 { pt3dadd( -24.6582, 292.275, -54.2522, 0.44 ) }
    dend_15 { pt3dadd( -25.1094, 293.527, -54.6608, 0.88 ) }
    dend_15 { pt3dadd( -25.4387, 294.332, -54.8712, 1.18 ) }
    dend_15 { pt3dadd( -25.6025, 294.732, -54.9832, 1.18 ) }
    dend_15 { pt3dadd( -25.9463, 295.642, -55.2458, 0.59 ) }
    dend_15 { pt3dadd( -26.3793, 296.997, -55.6458, 0.29 ) }
    dend_15 { pt3dadd( -26.732, 298.407, -56.0516, 0.81 ) }
    dend_15 { pt3dadd( -27.0093, 299.77, -56.4017, 0.52 ) }
    dend_15 { pt3dadd( -27.1794, 300.664, -56.6199, 0.52 ) }
    dend_15 { pt3dadd( -27.3453, 301.542, -56.8386, 0.74 ) }
    dend_15 { pt3dadd( -27.5632, 302.642, -57.0965, 0.74 ) }
    dend_15 { pt3dadd( -27.827, 303.867, -57.3297, 0.22 ) }
    dend_15 { pt3dadd( -27.9547, 304.313, -57.411, 0.22 ) }
    dend_15 { pt3dadd( -28.1904, 305.007, -57.5223, 0.52 ) }
    dend_15 { pt3dadd( -28.3555, 305.501, -57.5845, 0.52 ) }
    dend_15 { pt3dadd( -28.6585, 306.453, -57.7191, 0.29 ) }
    dend_15 { pt3dadd( -28.8971, 307.263, -57.8433, 0.29 ) }
    dend_15 { pt3dadd( -29.1691, 308.262, -58.0122, 1.03 ) }
    dend_15 { pt3dadd( -29.366, 309.109, -58.1615, 1.03 ) }
    dend_15 { pt3dadd( -29.4801, 309.699, -58.2518, 1.03 ) }
    dend_15 { pt3dadd( -29.6049, 310.569, -58.3569, 0.52 ) }
    dend_15 { pt3dadd( -29.6592, 311.3, -58.4261, 0.29 ) }
    dend_15 { pt3dadd( -29.686, 312.057, -58.4608, 0.59 ) }
    dend_15 { pt3dadd( -29.6745, 312.571, -58.4519, 0.59 ) }
    dend_15 { pt3dadd( -29.5952, 313.644, -58.4121, 0.22 ) }
    dend_15 { pt3dadd( -29.4709, 314.728, -58.3668, 0.81 ) }
    dend_15 { pt3dadd( -29.3571, 315.435, -58.3429, 1.03 ) }
    dend_15 { pt3dadd( -29.3084, 315.684, -58.3403, 1.03 ) }
    dend_15 { pt3dadd( -29.106, 316.73, -58.3475, 0.59 ) }
    dend_15 { pt3dadd( -28.9395, 317.766, -58.3608, 0.37 ) }
    dend_15 { pt3dadd( -28.8783, 318.35, -58.3572, 0.37 ) }
    dend_15 { pt3dadd( -28.8653, 319.141, -58.3259, 0.66 ) }
    dend_15 { pt3dadd( -28.8906, 319.646, -58.2898, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_15 { pt3dadd( -29.0801, 321.073, -58.1611, 0.29 ) }
    dend_15 { pt3dadd( -29.2272, 321.768, -58.0954, 0.29 ) }
    dend_15 { pt3dadd( -29.5066, 322.856, -57.9923, 0.74 ) }
    dend_15 { pt3dadd( -29.7249, 323.683, -57.9142, 0.74 ) }
    dend_15 { pt3dadd( -29.9568, 324.584, -57.8257, 0.74 ) }
    dend_15 { pt3dadd( -30.2359, 325.806, -57.7021, 0.29 ) }
    dend_15 { pt3dadd( -30.4417, 326.896, -57.5935, 0.29 ) }
    dend_15 { pt3dadd( -30.6161, 328.483, -57.4489, 1.33 ) }
    dend_15 { pt3dadd( -30.624, 329.282, -57.3709, 1.33 ) }
    dend_15 { pt3dadd( -30.5429, 330.413, -57.2719, 1.11 ) }
    dend_15 { pt3dadd( -30.3945, 331.371, -57.1981, 0.59 ) }
    dend_15 { pt3dadd( -30.1351, 332.384, -57.165, 0.44 ) }
    dend_15 { pt3dadd( -29.4941, 334.383, -57.2675, 0.29 ) }
    dend_15 { pt3dadd( -28.9535, 335.779, -57.4904, 0.74 ) }
    dend_15 { pt3dadd( -28.6365, 336.574, -57.7081, 0.81 ) }
    dend_15 { pt3dadd( -28.3785, 337.238, -57.966, 0.44 ) }
    dend_15 { pt3dadd( -27.9282, 338.509, -58.5791, 0.22 ) }
    dend_15 { pt3dadd( -27.5815, 339.603, -59.19, 0.81 ) }
    dend_15 { pt3dadd( -27.4422, 340.097, -59.505, 0.81 ) }
    dend_15 { pt3dadd( -27.1935, 341.094, -60.1759, 0.22 ) }
    dend_15 { pt3dadd( -27.0054, 341.887, -60.6775, 0.22 ) }
    dend_15 { pt3dadd( -26.7945, 342.859, -61.2716, 0.81 ) }
    dend_15 { pt3dadd( -26.7352, 343.138, -61.4238, 0.81 ) }
    dend_15 { pt3dadd( -26.5014, 344.116, -61.9204, 0.29 ) }
    dend_15 { pt3dadd( -26.2874, 344.924, -62.3151, 0.88 ) }
    dend_15 { pt3dadd( -26.0021, 345.824, -62.7325, 0.88 ) }
    dend_15 { pt3dadd( -25.54, 347.233, -63.3365, 0.22 ) }
    dend_15 { pt3dadd( -25.2451, 348.228, -63.7121, 0.74 ) }
    dend_15 { pt3dadd( -25.1622, 348.551, -63.8147, 0.88 ) }
    dend_15 { pt3dadd( -24.9601, 349.691, -64.1245, 0.15 ) }
    dend_15 { pt3dadd( -24.8361, 350.637, -64.3477, 0.52 ) }
    dend_15 { pt3dadd( -24.759, 351.47, -64.525, 0.22 ) }
    dend_15 { pt3dadd( -24.7202, 352.298, -64.7116, 0.66 ) }
    dend_15 { pt3dadd( -24.7218, 352.71, -64.8211, 0.88 ) }
    dend_15 { pt3dadd( -24.8298, 354.379, -65.3072, 0.22 ) }
    dend_15 { pt3dadd( -24.8941, 354.884, -65.4601, 0.59 ) }
    dend_15 { pt3dadd( -25.0189, 355.599, -65.6868, 0.44 ) }
    dend_15 { pt3dadd( -25.2102, 356.589, -65.9748, 0.22 ) }
    dend_15 { pt3dadd( -25.3277, 357.195, -66.1257, 0.37 ) }
    dend_15 { pt3dadd( -25.5421, 358.276, -66.33, 0.15 ) }
    dend_15 { pt3dadd( -25.7573, 359.341, -66.4511, 0.81 ) }
    dend_15 { pt3dadd( -25.8801, 359.965, -66.4978, 1.11 ) }
    dend_15 { pt3dadd( -26.0565, 360.943, -66.5349, 1.03 ) }
    dend_15 { pt3dadd( -26.1992, 361.865, -66.5421, 0.29 ) }
    dend_15 { pt3dadd( -26.3293, 362.778, -66.5551, 0.29 ) }
    dend_15 { pt3dadd( -26.4557, 363.61, -66.5729, 0.29 ) }
    dend_15 { pt3dadd( -26.6936, 365.1, -66.6249, 0.22 ) }
    dend_15 { pt3dadd( -26.8485, 366.007, -66.6659, 0.74 ) }
    dend_15 { pt3dadd( -27.2129, 367.991, -66.7949, 0.22 ) }
    dend_15 { pt3dadd( -27.4509, 369.176, -66.8757, 0.81 ) }
    dend_15 { pt3dadd( -27.9695, 371.61, -67.0479, 0.22 ) }
    dend_15 { pt3dadd( -28.0626, 372.035, -67.0789, 0.22 ) }
    dend_15 { pt3dadd( -28.2526, 372.924, -67.1463, 0.81 ) }
    dend_15 { pt3dadd( -28.3129, 373.252, -67.1705, 1.03 ) }
    dend_15 { pt3dadd( -28.4312, 374.032, -67.2187, 0.22 ) }
    dend_15 { pt3dadd( -28.5253, 374.775, -67.2379, 0.44 ) }
    dend_15 { pt3dadd( -28.6167, 375.716, -67.2375, 0.22 ) }
    dend_15 { pt3dadd( -28.678, 376.433, -67.231, 0.44 ) }
    dend_15 { pt3dadd( -28.7426, 377.345, -67.213, 0.22 ) }
    dend_15 { pt3dadd( -28.8182, 378.245, -67.1837, 0.44 ) }
    dend_15 { pt3dadd( -28.9225, 379.183, -67.1281, 0.59 ) }
    dend_15 { pt3dadd( -29.0907, 380.169, -67.0874, 0.29 ) }
    dend_15 { pt3dadd( -29.391, 381.435, -67.0833, 0.44 ) }
    dend_15 { pt3dadd( -29.7743, 382.733, -67.1125, 0.44 ) }
    dend_15 { pt3dadd( -30.3547, 384.515, -67.1988, 0.81 ) }
    dend_15 { pt3dadd( -30.6852, 385.495, -67.3105, 0.96 ) }
    dend_15 { pt3dadd( -31.1439, 386.787, -67.5637, 0.66 ) }
    dend_15 { pt3dadd( -31.8334, 388.421, -67.972, 0.29 ) }
    dend_15 { pt3dadd( -32.0919, 388.941, -68.1339, 0.44 ) }
    dend_15 { pt3dadd( -32.5504, 389.785, -68.4576, 0.15 ) }
    dend_15 { pt3dadd( -33.226, 390.962, -69.0069, 0.44 ) }
    dend_15 { pt3dadd( -33.6876, 391.793, -69.432, 0.44 ) }
    dend_15 { pt3dadd( -34.1536, 392.692, -69.8618, 0.15 ) }
    dend_15 { pt3dadd( -34.3369, 393.021, -70.0466, 0.74 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 74/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -20.1688, 202.392, -37.8919, 0.22 ) }
    dend_14 { pt3dadd( -19.2284, 203.982, -39.3557, 0.22 ) }
    dend_14 { pt3dadd( -18.6874, 204.669, -40.0096, 0.22 ) }
    dend_14 { pt3dadd( -18.164, 205.333, -40.6421, 0.22 ) }
    dend_14 { pt3dadd( -17.6168, 206.027, -41.3035, 0.22 ) }
    dend_14 { pt3dadd( -17.1799, 206.581, -41.8316, 0.44 ) }
    dend_14 { pt3dadd( -16.3399, 207.646, -42.8467, 0.74 ) }
    dend_14 { pt3dadd( -15.7015, 208.457, -43.4775, 0.88 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 82/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -68.729, 107.809, -15.9485, 0.29 ) }
    dend_10 { pt3dadd( -69.5774, 107.473, -16.4469, 0.29 ) }
    dend_10 { pt3dadd( -70.0893, 107.27, -16.7476, 0.29 ) }
    dend_10 { pt3dadd( -70.8438, 106.971, -17.1908, 0.29 ) }
    dend_10 { pt3dadd( -71.6746, 106.642, -17.679, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 87/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -68.729, 107.809, -15.9485, 0.22 ) }
    dend_9 { pt3dadd( -69.4423, 108.816, -16.047, 0.22 ) }
    dend_9 { pt3dadd( -69.811, 109.336, -16.0979, 0.66 ) }
    dend_9 { pt3dadd( -69.9759, 109.569, -16.1207, 0.66 ) }
    dend_9 { pt3dadd( -70.2869, 110.008, -16.1636, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 92/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -84.0037, 38.1237, -201.08, 0.22 ) }
    dend_53 { pt3dadd( -82.4939, 41.1034, -202.23, 0.22 ) }
    dend_53 { pt3dadd( -82.129, 41.8235, -202.508, 0.22 ) }
    dend_53 { pt3dadd( -81.4243, 43.2142, -203.045, 0.88 ) }
    dend_53 { pt3dadd( -81.1975, 43.6618, -203.217, 0.66 ) }
    dend_53 { pt3dadd( -81.0021, 44.0475, -203.366, 0.66 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 98/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -84.0037, 38.1237, -201.08, 0.22 ) }
    dend_52 { pt3dadd( -84.5132, 39.503, -202.073, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_52 { pt3dadd( -84.7567, 39.9924, -202.52, 0.44 ) }
    dend_52 { pt3dadd( -85.2522, 40.8549, -203.431, 0.22 ) }
    dend_52 { pt3dadd( -85.4537, 41.1723, -203.784, 0.59 ) }
    dend_52 { pt3dadd( -86.0128, 42.0335, -204.712, 0.29 ) }
    dend_52 { pt3dadd( -86.7064, 43.1019, -205.863, 0.29 ) }
    dend_52 { pt3dadd( -87.1026, 43.6157, -206.504, 0.29 ) }
    dend_52 { pt3dadd( -87.4232, 43.9734, -207.041, 0.59 ) }
    dend_52 { pt3dadd( -87.8861, 44.4051, -207.853, 0.22 ) }
    dend_52 { pt3dadd( -88.2773, 44.7445, -208.523, 0.44 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 9/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -78.8926, -68.4217, -89.1655, 0.37 ) }
    dend_48 { pt3dadd( -78.5565, -69.6507, -90.6299, 0.37 ) }
    dend_48 { pt3dadd( -78.2947, -70.5136, -91.6295, 0.15 ) }
    dend_48 { pt3dadd( -78.0374, -71.2556, -92.4103, 0.44 ) }
    dend_48 { pt3dadd( -77.8068, -71.9061, -93.0539, 0.44 ) }
    dend_48 { pt3dadd( -77.4738, -72.8399, -93.9384, 0.22 ) }
    dend_48 { pt3dadd( -77.1963, -73.6523, -94.6702, 1.03 ) }
    dend_48 { pt3dadd( -77.0922, -73.9872, -94.9213, 1.03 ) }
    dend_48 { pt3dadd( -76.74, -75.2526, -95.7216, 0.29 ) }
    dend_48 { pt3dadd( -76.5298, -76.1347, -96.2217, 1.03 ) }
    dend_48 { pt3dadd( -76.368, -77.0085, -96.6463, 1.03 ) }
    dend_48 { pt3dadd( -76.244, -77.9147, -97.0303, 0.29 ) }
    dend_48 { pt3dadd( -76.1062, -79.1786, -97.4967, 0.29 ) }
    dend_48 { pt3dadd( -76.0433, -79.9075, -97.7234, 0.81 ) }
    dend_48 { pt3dadd( -76.0057, -80.6397, -97.9137, 0.52 ) }
    dend_48 { pt3dadd( -75.9489, -82.3184, -98.3001, 0.29 ) }
    dend_48 { pt3dadd( -75.9243, -83.7285, -98.5967, 0.74 ) }
    dend_48 { pt3dadd( -75.9304, -84.5607, -98.7216, 1.03 ) }
    dend_48 { pt3dadd( -75.9809, -86.365, -98.9153, 0.22 ) }
    dend_48 { pt3dadd( -76.0213, -87.1983, -98.9687, 0.22 ) }
    dend_48 { pt3dadd( -76.0569, -87.6391, -98.9762, 0.59 ) }
    dend_48 { pt3dadd( -76.0927, -87.9743, -98.9784, 0.59 ) }
    dend_48 { pt3dadd( -76.3009, -89.9619, -99.0121, 0.59 ) }
    dend_48 { pt3dadd( -76.3871, -90.9322, -99.1191, 0.37 ) }
    dend_48 { pt3dadd( -76.5135, -92.4097, -99.3917, 1.25 ) }
    dend_48 { pt3dadd( -76.551, -92.9474, -99.5134, 1.47 ) }
    dend_48 { pt3dadd( -76.6512, -94.3335, -99.8831, 0.37 ) }
    dend_48 { pt3dadd( -76.7395, -95.2278, -100.185, 1.03 ) }
    dend_48 { pt3dadd( -76.9376, -96.7379, -100.839, 0.29 ) }
    dend_48 { pt3dadd( -77.0531, -97.3948, -101.126, 0.44 ) }
    dend_48 { pt3dadd( -77.1209, -97.8331, -101.282, 0.66 ) }
    dend_48 { pt3dadd( -77.1761, -98.3049, -101.414, 0.52 ) }
    dend_48 { pt3dadd( -77.2816, -99.3235, -101.569, 0.29 ) }
    dend_48 { pt3dadd( -77.3558, -100.303, -101.595, 0.74 ) }
    dend_48 { pt3dadd( -77.3633, -100.73, -101.534, 0.74 ) }
    dend_48 { pt3dadd( -77.311, -102.817, -101.156, 0.22 ) }
    dend_48 { pt3dadd( -77.2696, -103.343, -101.05, 0.44 ) }
    dend_48 { pt3dadd( -77.1798, -103.99, -100.885, 0.59 ) }
    dend_48 { pt3dadd( -77.011, -105.098, -100.56, 0.37 ) }
    dend_48 { pt3dadd( -76.8215, -106.41, -100.175, 0.74 ) }
    dend_48 { pt3dadd( -76.7517, -107.107, -99.9906, 0.74 ) }
    dend_48 { pt3dadd( -76.7145, -108.05, -99.8012, 0.29 ) }
    dend_48 { pt3dadd( -76.6918, -109.662, -99.5558, 1.03 ) }
    dend_48 { pt3dadd( -76.7059, -111.198, -99.4378, 0.22 ) }
    dend_48 { pt3dadd( -76.7399, -111.813, -99.4312, 0.88 ) }
    dend_48 { pt3dadd( -76.9062, -113.557, -99.5702, 0.29 ) }
    dend_48 { pt3dadd( -77.0394, -114.623, -99.7058, 0.15 ) }
    dend_48 { pt3dadd( -77.1722, -115.407, -99.8646, 0.74 ) }
    dend_48 { pt3dadd( -77.4239, -116.533, -100.238, 1.03 ) }
    dend_48 { pt3dadd( -77.6228, -117.3, -100.569, 1.11 ) }
    dend_48 { pt3dadd( -78.0367, -118.711, -101.278, 0.22 ) }
    dend_48 { pt3dadd( -78.1457, -119.063, -101.484, 0.59 ) }
    dend_48 { pt3dadd( -78.2243, -119.341, -101.658, 0.59 ) }
    dend_48 { pt3dadd( -78.5982, -120.801, -102.611, 0.22 ) }
    dend_48 { pt3dadd( -78.6911, -121.311, -102.946, 0.74 ) }
    dend_48 { pt3dadd( -78.7255, -121.885, -103.273, 0.74 ) }
    dend_48 { pt3dadd( -78.621, -122.926, -103.701, 0.22 ) }
    dend_48 { pt3dadd( -78.3254, -124.105, -104.076, 0.59 ) }
    dend_48 { pt3dadd( -78.1476, -124.567, -104.206, 0.74 ) }
    dend_48 { pt3dadd( -77.6119, -125.624, -104.482, 0.22 ) }
    dend_48 { pt3dadd( -76.8966, -126.901, -104.759, 0.88 ) }
    dend_48 { pt3dadd( -76.0066, -128.318, -105.006, 0.15 ) }
    dend_48 { pt3dadd( -75.6596, -128.804, -105.056, 0.15 ) }
    dend_48 { pt3dadd( -75.0594, -129.602, -105.055, 0.74 ) }
    dend_48 { pt3dadd( -74.6405, -130.144, -105.044, 0.74 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 74/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -78.8926, -68.4217, -89.1655, 0.29 ) }
    dend_47 { pt3dadd( -80.076, -67.8071, -88.7409, 0.29 ) }
    dend_47 { pt3dadd( -81.1302, -67.3763, -88.4115, 0.29 ) }
    dend_47 { pt3dadd( -82.2275, -67.0311, -88.0351, 0.29 ) }
    dend_47 { pt3dadd( -82.7693, -66.8871, -87.8425, 0.29 ) }
    dend_47 { pt3dadd( -83.9884, -66.6185, -87.3967, 0.52 ) }
    dend_47 { pt3dadd( -84.7843, -66.4922, -87.1163, 0.74 ) }
    dend_47 { pt3dadd( -85.5616, -66.4404, -86.8204, 0.37 ) }
    dend_47 { pt3dadd( -86.593, -66.4494, -86.4508, 0.66 ) }
    dend_47 { pt3dadd( -86.9978, -66.4852, -86.3298, 1.03 ) }
    dend_47 { pt3dadd( -87.931, -66.6531, -86.0686, 1.03 ) }
    dend_47 { pt3dadd( -89.1943, -67.0195, -85.7223, 0.22 ) }
    dend_47 { pt3dadd( -89.9755, -67.3129, -85.5, 0.22 ) }
    dend_47 { pt3dadd( -90.7574, -67.7354, -85.2115, 0.44 ) }
    dend_47 { pt3dadd( -91.239, -68.0597, -85.0036, 0.44 ) }
    dend_47 { pt3dadd( -91.9498, -68.6135, -84.6408, 0.29 ) }
    dend_47 { pt3dadd( -92.5562, -69.1764, -84.2874, 1.11 ) }
    dend_47 { pt3dadd( -92.8508, -69.489, -84.1, 1.25 ) }
    dend_47 { pt3dadd( -94.0145, -70.8722, -83.3383, 0.66 ) }
    dend_47 { pt3dadd( -94.6408, -71.6865, -82.9085, 0.22 ) }
    dend_47 { pt3dadd( -94.9823, -72.1816, -82.6574, 0.22 ) }
    dend_47 { pt3dadd( -95.3513, -72.8093, -82.3549, 0.22 ) }
    dend_47 { pt3dadd( -95.6487, -73.3854, -82.12, 0.81 ) }
    dend_47 { pt3dadd( -95.8801, -73.8627, -81.959, 0.81 ) }
    dend_47 { pt3dadd( -96.1316, -74.408, -81.8342, 0.29 ) }
    dend_47 { pt3dadd( -96.5367, -75.2519, -81.6677, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_47 { pt3dadd( -97.2382, -76.4853, -81.4398, 0.22 ) }
    dend_47 { pt3dadd( -97.5574, -76.926, -81.3633, 0.52 ) }
    dend_47 { pt3dadd( -98.0815, -77.5384, -81.2664, 0.29 ) }
    dend_47 { pt3dadd( -98.4894, -77.9494, -81.2248, 0.66 ) }
    dend_47 { pt3dadd( -99.3237, -78.6826, -81.2144, 0.29 ) }
    dend_47 { pt3dadd( -99.7381, -79.0339, -81.2658, 0.96 ) }
    dend_47 { pt3dadd( -99.9942, -79.2489, -81.3158, 0.96 ) }
    dend_47 { pt3dadd( -100.892, -80.0224, -81.4848, 0.29 ) }
    dend_47 { pt3dadd( -101.429, -80.51, -81.548, 1.33 ) }
    dend_47 { pt3dadd( -101.953, -80.9868, -81.5633, 1.55 ) }
    dend_47 { pt3dadd( -102.857, -81.7635, -81.5059, 0.29 ) }
    dend_47 { pt3dadd( -103.321, -82.1389, -81.4335, 0.29 ) }
    dend_47 { pt3dadd( -103.964, -82.6489, -81.2767, 0.52 ) }
    dend_47 { pt3dadd( -104.792, -83.2573, -81.0464, 0.96 ) }
    dend_47 { pt3dadd( -105.365, -83.6726, -80.8441, 0.44 ) }
    dend_47 { pt3dadd( -106.082, -84.2019, -80.5255, 0.29 ) }
    dend_47 { pt3dadd( -106.998, -84.8736, -80.0201, 0.88 ) }
    dend_47 { pt3dadd( -107.586, -85.357, -79.6686, 0.96 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 18/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -79.6247, -62.6387, -83.3411, 0.29 ) }
    dend_45 { pt3dadd( -80.0788, -63.3247, -83.9009, 0.29 ) }
    dend_45 { pt3dadd( -80.6192, -64.1778, -84.2472, 0.29 ) }
    dend_45 { pt3dadd( -81.1137, -64.9057, -84.4055, 0.81 ) }
    dend_45 { pt3dadd( -81.5751, -65.512, -84.4589, 0.81 ) }
    dend_45 { pt3dadd( -82.1187, -66.1255, -84.4021, 0.37 ) }
    dend_45 { pt3dadd( -83.4826, -67.431, -83.996, 0.37 ) }
    dend_45 { pt3dadd( -84.1825, -67.9375, -83.5814, 0.59 ) }
    dend_45 { pt3dadd( -84.6801, -68.228, -83.2414, 0.88 ) }
    dend_45 { pt3dadd( -85.2619, -68.523, -82.8191, 0.88 ) }
    dend_45 { pt3dadd( -86.2333, -68.9869, -82.0754, 1.03 ) }
    dend_45 { pt3dadd( -87.0612, -69.3913, -81.4147, 1.03 ) }
    dend_45 { pt3dadd( -88.0992, -69.9666, -80.5217, 0.59 ) }
    dend_45 { pt3dadd( -88.7374, -70.4378, -79.8688, 0.37 ) }
    dend_45 { pt3dadd( -89.4121, -71.1633, -79.0209, 0.37 ) }
    dend_45 { pt3dadd( -89.9113, -71.947, -78.2677, 0.66 ) }
    dend_45 { pt3dadd( -90.22, -72.6347, -77.7342, 0.96 ) }
    dend_45 { pt3dadd( -90.6884, -73.979, -76.837, 1.03 ) }
    dend_45 { pt3dadd( -90.9992, -75.0102, -76.1961, 0.44 ) }
    dend_45 { pt3dadd( -91.2642, -75.8266, -75.6742, 0.44 ) }
    dend_45 { pt3dadd( -91.4333, -76.3384, -75.3521, 0.66 ) }
    dend_45 { pt3dadd( -91.6325, -76.8968, -74.9905, 0.88 ) }
    dend_45 { pt3dadd( -91.8615, -77.5306, -74.3849, 0.88 ) }
    dend_45 { pt3dadd( -92.0772, -78.2471, -73.4682, 0.44 ) }
    dend_45 { pt3dadd( -92.2013, -78.8351, -72.5253, 0.74 ) }
    dend_45 { pt3dadd( -92.2232, -79.3191, -71.6593, 0.74 ) }
    dend_45 { pt3dadd( -92.1334, -79.8488, -70.6409, 1.03 ) }
    dend_45 { pt3dadd( -91.591, -81.2357, -67.7289, 0.44 ) }
    dend_45 { pt3dadd( -91.3689, -81.567, -66.9498, 0.44 ) }
    dend_45 { pt3dadd( -91.2452, -81.6858, -66.6027, 0.74 ) }
    dend_45 { pt3dadd( -90.861, -81.9546, -65.616, 0.74 ) }
    dend_45 { pt3dadd( -90.4847, -82.1455, -64.6106, 0.66 ) }
    dend_45 { pt3dadd( -90.2519, -82.1828, -63.9863, 0.52 ) }
    dend_45 { pt3dadd( -89.9794, -82.1248, -63.3062, 0.52 ) }
    dend_45 { pt3dadd( -89.4995, -81.6818, -61.6063, 1.03 ) }
    dend_45 { pt3dadd( -89.3195, -81.1042, -60.4561, 0.22 ) }
    dend_45 { pt3dadd( -89.4222, -80.5061, -59.8853, 0.22 ) }
    dend_45 { pt3dadd( -90.0177, -79.236, -59.2432, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -79.6247, -62.6387, -83.3411, 0.29 ) }
    dend_40 { pt3dadd( -80.5198, -61.8991, -83.9, 0.29 ) }
    dend_40 { pt3dadd( -80.9621, -61.5844, -84.0603, 0.29 ) }
    dend_40 { pt3dadd( -81.3131, -61.3467, -84.1026, 0.66 ) }
    dend_40 { pt3dadd( -81.7117, -61.0746, -84.1216, 0.66 ) }
    dend_40 { pt3dadd( -82.2222, -60.7428, -84.1299, 0.44 ) }
    dend_40 { pt3dadd( -82.7233, -60.4172, -84.138, 0.29 ) }
    dend_40 { pt3dadd( -83.7305, -59.8263, -84.093, 0.59 ) }
    dend_40 { pt3dadd( -84.5825, -59.3398, -83.9676, 1.03 ) }
    dend_40 { pt3dadd( -85.2704, -58.947, -83.8022, 1.4 ) }
    dend_40 { pt3dadd( -85.5691, -58.7778, -83.6988, 1.4 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 67/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 77.0584, -85.5602, -32.8126, 0.81 ) }
    dend_35 { pt3dadd( 78.0384, -86.1657, -33.7249, 0.81 ) }
    dend_35 { pt3dadd( 78.5662, -86.4987, -34.1787, 1.11 ) }
    dend_35 { pt3dadd( 81.3496, -88.1569, -36.3669, 0.44 ) }
    dend_35 { pt3dadd( 81.855, -88.421, -36.7313, 0.29 ) }
    dend_35 { pt3dadd( 82.4849, -88.7073, -37.1465, 0.29 ) }
    dend_35 { pt3dadd( 83.5989, -89.1709, -37.8496, 0.29 ) }
    dend_35 { pt3dadd( 84.3968, -89.4049, -38.3609, 0.59 ) }
    dend_35 { pt3dadd( 84.941, -89.5572, -38.8324, 0.74 ) }
    dend_35 { pt3dadd( 85.5912, -89.7171, -39.4158, 0.37 ) }
    dend_35 { pt3dadd( 86.313, -89.845, -40.1301, 0.81 ) }
    dend_35 { pt3dadd( 86.6886, -89.8842, -40.5154, 0.96 ) }
    dend_35 { pt3dadd( 88.145, -89.9729, -42.0657, 1.4 ) }
    dend_35 { pt3dadd( 90.871, -90.0415, -45.4423, 0.74 ) }
    dend_35 { pt3dadd( 91.5899, -90.0374, -46.4066, 0.29 ) }
    dend_35 { pt3dadd( 92.2565, -90.0208, -47.3361, 0.29 ) }
    dend_35 { pt3dadd( 92.642, -89.9973, -47.877, 0.66 ) }
    dend_35 { pt3dadd( 94.2054, -89.8606, -49.9726, 1.69 ) }
    dend_35 { pt3dadd( 97.0565, -89.5404, -53.5006, 1.18 ) }
    dend_35 { pt3dadd( 99.0306, -89.3294, -55.7216, 0.74 ) }
    dend_35 { pt3dadd( 100.1, -89.2872, -56.8896, 1.47 ) }
    dend_35 { pt3dadd( 100.511, -89.3105, -57.3081, 1.47 ) }
    dend_35 { pt3dadd( 101.575, -89.4733, -58.303, 0.29 ) }
    dend_35 { pt3dadd( 102.791, -89.8451, -59.1826, 0.29 ) }
    dend_35 { pt3dadd( 103.945, -90.502, -59.6619, 1.11 ) }
    dend_35 { pt3dadd( 104.957, -91.3429, -59.9313, 0.29 ) }
    dend_35 { pt3dadd( 105.579, -92.0005, -60.0455, 1.25 ) }
    dend_35 { pt3dadd( 105.926, -92.4116, -60.104, 1.25 ) }
    dend_35 { pt3dadd( 106.662, -93.355, -60.2225, 0.15 ) }
    dend_35 { pt3dadd( 107.116, -93.8648, -60.2939, 0.59 ) }
    dend_35 { pt3dadd( 107.423, -94.1012, -60.353, 0.59 ) }
    dend_35 { pt3dadd( 108.314, -94.6007, -60.5629, 0.22 ) }
    dend_35 { pt3dadd( 109.358, -95.0652, -60.8084, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_35 { pt3dadd( 110.058, -95.3206, -60.9699, 1.84 ) }
    dend_35 { pt3dadd( 111.555, -95.766, -61.2957, 0.22 ) }
    dend_35 { pt3dadd( 112.491, -96.0258, -61.4628, 0.59 ) }
    dend_35 { pt3dadd( 113.61, -96.3538, -61.6206, 0.22 ) }
    dend_35 { pt3dadd( 114.477, -96.6416, -61.7089, 0.22 ) }
    dend_35 { pt3dadd( 115.376, -97.0295, -61.7424, 0.88 ) }
    dend_35 { pt3dadd( 115.864, -97.2799, -61.7368, 1.11 ) }
    dend_35 { pt3dadd( 117.206, -98.079, -61.6585, 0.22 ) }
    dend_35 { pt3dadd( 117.897, -98.5191, -61.5894, 1.33 ) }
    dend_35 { pt3dadd( 118.272, -98.7704, -61.5513, 1.55 ) }
    dend_35 { pt3dadd( 119.295, -99.5487, -61.4412, 0.22 ) }
    dend_35 { pt3dadd( 119.946, -100.101, -61.3667, 0.66 ) }
    dend_35 { pt3dadd( 120.276, -100.409, -61.3346, 0.66 ) }
    dend_35 { pt3dadd( 120.946, -101.091, -61.2954, 0.22 ) }
    dend_35 { pt3dadd( 121.555, -101.729, -61.2838, 0.44 ) }
    dend_35 { pt3dadd( 122.05, -102.259, -61.2963, 0.22 ) }
    dend_35 { pt3dadd( 122.532, -102.767, -61.3338, 0.96 ) }
    dend_35 { pt3dadd( 122.905, -103.162, -61.3354, 1.18 ) }
    dend_35 { pt3dadd( 124.132, -104.509, -61.2555, 0.15 ) }
    dend_35 { pt3dadd( 124.627, -105.046, -61.1874, 0.96 ) }
    dend_35 { pt3dadd( 124.993, -105.42, -61.1608, 0.96 ) }
    dend_35 { pt3dadd( 125.663, -106.085, -61.144, 0.15 ) }
    dend_35 { pt3dadd( 127.012, -107.426, -61.1711, 0.81 ) }
    dend_35 { pt3dadd( 127.716, -108.088, -61.2449, 0.81 ) }
    dend_35 { pt3dadd( 128.676, -108.917, -61.4182, 0.29 ) }
    dend_35 { pt3dadd( 130.279, -110.164, -61.8121, 0.44 ) }
    dend_35 { pt3dadd( 130.915, -110.593, -61.9973, 0.81 ) }
    dend_35 { pt3dadd( 131.415, -110.858, -62.1631, 0.81 ) }
    dend_35 { pt3dadd( 132.657, -111.329, -62.6744, 0.37 ) }
    dend_35 { pt3dadd( 133.494, -111.553, -63.0092, 0.29 ) }
    dend_35 { pt3dadd( 134.394, -111.736, -63.3231, 0.59 ) }
    dend_35 { pt3dadd( 135.295, -111.896, -63.5798, 0.44 ) }
    dend_35 { pt3dadd( 136.444, -112.073, -63.8921, 0.29 ) }
    dend_35 { pt3dadd( 137.871, -112.276, -64.24, 0.59 ) }
    dend_35 { pt3dadd( 138.76, -112.391, -64.488, 0.59 ) }
    dend_35 { pt3dadd( 139.547, -112.477, -64.7492, 0.29 ) }
    dend_35 { pt3dadd( 140.849, -112.586, -65.2157, 0.29 ) }
    dend_35 { pt3dadd( 141.637, -112.645, -65.5173, 0.29 ) }
    dend_35 { pt3dadd( 142.309, -112.701, -65.7421, 0.74 ) }
    dend_35 { pt3dadd( 143.94, -112.822, -66.1944, 0.74 ) }
    dend_35 { pt3dadd( 144.671, -112.889, -66.3873, 0.37 ) }
    dend_35 { pt3dadd( 145.135, -112.936, -66.5026, 1.03 ) }
    dend_35 { pt3dadd( 145.798, -113.005, -66.6531, 1.03 ) }
    dend_35 { pt3dadd( 147.151, -113.205, -66.9599, 0.29 ) }
    dend_35 { pt3dadd( 149.143, -113.603, -67.3629, 1.11 ) }
    dend_35 { pt3dadd( 150.619, -113.987, -67.5699, 0.44 ) }
    dend_35 { pt3dadd( 151.067, -114.123, -67.645, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 47/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 77.0584, -85.5602, -32.8126, 0.52 ) }
    dend_34 { pt3dadd( 77.9807, -85.5224, -32.2889, 0.52 ) }
    dend_34 { pt3dadd( 78.5841, -85.4571, -31.9684, 0.52 ) }
    dend_34 { pt3dadd( 79.2043, -85.3659, -31.6458, 0.81 ) }
    dend_34 { pt3dadd( 79.6802, -85.247, -31.4151, 0.81 ) }
    dend_34 { pt3dadd( 80.482, -84.965, -31.0494, 0.29 ) }
    dend_34 { pt3dadd( 81.0936, -84.6774, -30.797, 0.29 ) }
    dend_34 { pt3dadd( 81.6227, -84.2809, -30.6318, 0.88 ) }
    dend_34 { pt3dadd( 82.0504, -83.8333, -30.5259, 1.11 ) }
    dend_34 { pt3dadd( 82.5663, -83.1309, -30.4509, 0.44 ) }
    dend_34 { pt3dadd( 82.9508, -82.4275, -30.4556, 0.37 ) }
    dend_34 { pt3dadd( 83.2902, -81.6081, -30.5349, 0.37 ) }
    dend_34 { pt3dadd( 83.627, -80.5108, -30.6722, 0.66 ) }
    dend_34 { pt3dadd( 83.7863, -79.7948, -30.773, 1.03 ) }
    dend_34 { pt3dadd( 83.8889, -79.0419, -30.8609, 1.03 ) }
    dend_34 { pt3dadd( 83.9426, -77.852, -30.9111, 0.52 ) }
    dend_34 { pt3dadd( 83.9338, -77.4092, -30.8917, 0.37 ) }
    dend_34 { pt3dadd( 83.8969, -76.6749, -30.783, 1.03 ) }
    dend_34 { pt3dadd( 83.8758, -76.2356, -30.6645, 1.03 ) }
    dend_34 { pt3dadd( 83.8828, -75.2788, -30.3296, 0.29 ) }
    dend_34 { pt3dadd( 83.9708, -73.7483, -29.6632, 0.22 ) }
    dend_34 { pt3dadd( 84.0327, -73.2047, -29.3848, 0.66 ) }
    dend_34 { pt3dadd( 84.1049, -72.7425, -29.147, 0.52 ) }
    dend_34 { pt3dadd( 84.2332, -72.0695, -28.8406, 0.37 ) }
    dend_34 { pt3dadd( 84.4499, -71.155, -28.4663, 0.74 ) }
    dend_34 { pt3dadd( 84.625, -70.5679, -28.2374, 0.22 ) }
    dend_34 { pt3dadd( 84.8639, -69.8535, -27.9525, 0.88 ) }
    dend_34 { pt3dadd( 84.966, -69.4915, -27.8032, 0.88 ) }
    dend_34 { pt3dadd( 85.1994, -68.4751, -27.3886, 0.29 ) }
    dend_34 { pt3dadd( 85.285, -67.9545, -27.1888, 0.44 ) }
    dend_34 { pt3dadd( 85.3376, -67.4156, -26.9867, 0.29 ) }
    dend_34 { pt3dadd( 85.3822, -66.811, -26.8081, 0.29 ) }
    dend_34 { pt3dadd( 85.4094, -65.9166, -26.6234, 0.81 ) }
    dend_34 { pt3dadd( 85.4156, -65.2649, -26.5071, 1.03 ) }
    dend_34 { pt3dadd( 85.4114, -64.8131, -26.4444, 1.03 ) }
    dend_34 { pt3dadd( 85.3955, -64.3135, -26.4018, 0.22 ) }
    dend_34 { pt3dadd( 85.36, -63.3264, -26.3205, 0.22 ) }
    dend_34 { pt3dadd( 85.3452, -62.5271, -26.1933, 0.81 ) }
    dend_34 { pt3dadd( 85.3518, -62.1327, -26.0787, 0.81 ) }
    dend_34 { pt3dadd( 85.378, -61.5696, -25.7974, 0.44 ) }
    dend_34 { pt3dadd( 85.4302, -61.025, -25.4333, 0.44 ) }
    dend_34 { pt3dadd( 85.5156, -60.2807, -24.8411, 0.96 ) }
    dend_34 { pt3dadd( 85.5854, -59.5562, -24.1798, 0.96 ) }
    dend_34 { pt3dadd( 85.6253, -59.0748, -23.7372, 1.11 ) }
    dend_34 { pt3dadd( 85.6835, -58.3826, -23.1334, 0.29 ) }
    dend_34 { pt3dadd( 85.7379, -57.8382, -22.6697, 0.81 ) }
    dend_34 { pt3dadd( 85.8236, -57.2429, -22.185, 0.81 ) }
    dend_34 { pt3dadd( 85.9994, -56.4091, -21.5932, 0.44 ) }
    dend_34 { pt3dadd( 86.1752, -55.6058, -21.117, 1.11 ) }
    dend_34 { pt3dadd( 86.31, -55.0326, -20.8102, 1.11 ) }
    dend_34 { pt3dadd( 86.4175, -54.6194, -20.6082, 0.81 ) }
    dend_34 { pt3dadd( 86.5636, -54.1958, -20.3915, 0.52 ) }
    dend_34 { pt3dadd( 86.9814, -53.3681, -19.9414, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_34 { pt3dadd( 87.5074, -52.6842, -19.5494, 0.22 ) }
    dend_34 { pt3dadd( 87.9778, -52.3084, -19.3048, 0.59 ) }
    dend_34 { pt3dadd( 88.1768, -52.2138, -19.2341, 0.59 ) }
    dend_34 { pt3dadd( 89.3928, -51.849, -18.9401, 0.52 ) }
    dend_34 { pt3dadd( 90.1265, -51.7242, -18.8053, 0.29 ) }
    dend_34 { pt3dadd( 91.1119, -51.6342, -18.6553, 0.52 ) }
    dend_34 { pt3dadd( 92.0836, -51.5579, -18.5415, 0.44 ) }
    dend_34 { pt3dadd( 92.7434, -51.4931, -18.4859, 0.81 ) }
    dend_34 { pt3dadd( 93.3017, -51.4063, -18.4438, 1.03 ) }
    dend_34 { pt3dadd( 94.3282, -51.1461, -18.3566, 0.29 ) }
    dend_34 { pt3dadd( 94.8276, -50.9743, -18.2702, 0.29 ) }
    dend_34 { pt3dadd( 95.3827, -50.7597, -18.1195, 0.81 ) }
    dend_34 { pt3dadd( 95.7607, -50.6181, -17.986, 0.81 ) }
    dend_34 { pt3dadd( 96.5087, -50.388, -17.6807, 0.52 ) }
    dend_34 { pt3dadd( 97.4483, -50.222, -17.2358, 0.15 ) }
    dend_34 { pt3dadd( 98.1635, -50.2404, -16.8385, 0.44 ) }
    dend_34 { pt3dadd( 98.6135, -50.3454, -16.5021, 0.74 ) }
    dend_34 { pt3dadd( 98.9316, -50.4524, -16.2119, 1.03 ) }
    dend_34 { pt3dadd( 99.2524, -50.5655, -15.8809, 1.03 ) }
    dend_34 { pt3dadd( 99.6969, -50.707, -15.3535, 0.88 ) }
    dend_34 { pt3dadd( 100.245, -50.7805, -14.6349, 0.37 ) }
    dend_34 { pt3dadd( 101.09, -50.5835, -13.5658, 0.81 ) }
    dend_34 { pt3dadd( 101.543, -50.3089, -13.0313, 0.81 ) }
    dend_34 { pt3dadd( 101.958, -49.8918, -12.4942, 0.29 ) }
    dend_34 { pt3dadd( 102.229, -49.5195, -12.1, 0.29 ) }
    dend_34 { pt3dadd( 102.589, -48.9194, -11.5459, 0.15 ) }
    dend_34 { pt3dadd( 102.897, -48.4317, -11.1181, 1.03 ) }
    dend_34 { pt3dadd( 103.098, -48.1642, -10.8626, 1.03 ) }
    dend_34 { pt3dadd( 103.96, -47.2798, -9.80631, 0.52 ) }
    dend_34 { pt3dadd( 104.453, -46.9031, -9.22325, 0.52 ) }
    dend_34 { pt3dadd( 105.02, -46.5975, -8.58747, 0.44 ) }
    dend_34 { pt3dadd( 106.018, -46.2234, -7.53571, 0.88 ) }
    dend_34 { pt3dadd( 106.647, -46.0413, -6.92774, 0.74 ) }
    dend_34 { pt3dadd( 107.287, -45.9003, -6.40265, 0.44 ) }
    dend_34 { pt3dadd( 107.742, -45.8377, -6.10503, 0.37 ) }
    dend_34 { pt3dadd( 108.361, -45.7852, -5.7539, 0.22 ) }
    dend_34 { pt3dadd( 108.904, -45.7766, -5.48653, 0.22 ) }
    dend_34 { pt3dadd( 109.64, -45.7643, -5.16155, 0.44 ) }
    dend_34 { pt3dadd( 110.116, -45.7403, -4.98084, 0.22 ) }
    dend_34 { pt3dadd( 110.753, -45.6888, -4.76072, 0.22 ) }
    dend_34 { pt3dadd( 111.396, -45.6373, -4.57075, 0.44 ) }
    dend_34 { pt3dadd( 112.462, -45.6163, -4.30884, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 42/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -16.4043, 442.057, -66.6317, 0.74 ) }
    dend_19 { pt3dadd( -16.1555, 444.228, -67.2895, 0.74 ) }
    dend_19 { pt3dadd( -16.0711, 445.143, -67.5384, 0.52 ) }
    dend_19 { pt3dadd( -15.9897, 446.047, -67.7477, 0.37 ) }
    dend_19 { pt3dadd( -15.883, 447.484, -68.0515, 0.37 ) }
    dend_19 { pt3dadd( -15.8471, 448.025, -68.1576, 0.59 ) }
    dend_19 { pt3dadd( -15.7661, 449.176, -68.3625, 0.74 ) }
    dend_19 { pt3dadd( -15.7265, 449.904, -68.4571, 0.74 ) }
    dend_19 { pt3dadd( -15.6212, 451.29, -68.6572, 0.37 ) }
    dend_19 { pt3dadd( -15.5386, 452.3, -68.8136, 0.37 ) }
    dend_19 { pt3dadd( -15.3985, 454.049, -69.0891, 0.81 ) }
    dend_19 { pt3dadd( -15.3082, 455.222, -69.2773, 0.96 ) }
    dend_19 { pt3dadd( -15.2133, 456.416, -69.4627, 0.96 ) }
    dend_19 { pt3dadd( -15.0895, 457.977, -69.7052, 0.66 ) }
    dend_19 { pt3dadd( -15.0235, 458.89, -69.8503, 0.44 ) }
    dend_19 { pt3dadd( -14.9735, 459.601, -69.9542, 0.44 ) }
    dend_19 { pt3dadd( -14.9034, 460.94, -70.144, 0.44 ) }
    dend_19 { pt3dadd( -14.868, 462.118, -70.3067, 0.81 ) }
    dend_19 { pt3dadd( -14.8673, 462.932, -70.4202, 1.03 ) }
    dend_19 { pt3dadd( -14.8835, 463.778, -70.5394, 1.03 ) }
    dend_19 { pt3dadd( -14.9325, 465.199, -70.7653, 0.74 ) }
    dend_19 { pt3dadd( -14.993, 466.304, -70.9618, 0.74 ) }
    dend_19 { pt3dadd( -15.1286, 468.07, -71.2926, 0.44 ) }
    dend_19 { pt3dadd( -15.3051, 469.811, -71.6477, 0.44 ) }
    dend_19 { pt3dadd( -15.388, 470.652, -71.8374, 1.03 ) }
    dend_19 { pt3dadd( -15.4582, 471.461, -72.0353, 1.18 ) }
    dend_19 { pt3dadd( -15.5397, 472.761, -72.401, 0.52 ) }
    dend_19 { pt3dadd( -15.5677, 474.01, -72.8125, 0.74 ) }
    dend_19 { pt3dadd( -15.556, 475.268, -73.3019, 1.11 ) }
    dend_19 { pt3dadd( -15.5152, 476.424, -73.7956, 0.44 ) }
    dend_19 { pt3dadd( -15.4703, 477.45, -74.2629, 0.37 ) }
    dend_19 { pt3dadd( -15.4038, 478.547, -74.7714, 0.37 ) }
    dend_19 { pt3dadd( -15.2869, 480.089, -75.4812, 0.59 ) }
    dend_19 { pt3dadd( -15.1905, 481.215, -75.9745, 0.96 ) }
    dend_19 { pt3dadd( -15.1215, 482.019, -76.2837, 1.18 ) }
    dend_19 { pt3dadd( -15.0662, 482.764, -76.518, 1.18 ) }
    dend_19 { pt3dadd( -14.9323, 484.428, -76.9466, 0.44 ) }
    dend_19 { pt3dadd( -14.8331, 485.594, -77.1536, 0.37 ) }
    dend_19 { pt3dadd( -14.7504, 486.431, -77.2486, 0.59 ) }
    dend_19 { pt3dadd( -14.6172, 487.478, -77.3447, 0.44 ) }
    dend_19 { pt3dadd( -14.4295, 488.751, -77.486, 0.44 ) }
    dend_19 { pt3dadd( -14.28, 489.692, -77.6084, 0.74 ) }
    dend_19 { pt3dadd( -14.1717, 490.394, -77.7166, 0.74 ) }
    dend_19 { pt3dadd( -14.0953, 490.93, -77.818, 0.74 ) }
    dend_19 { pt3dadd( -13.9647, 492.009, -78.0571, 0.37 ) }
    dend_19 { pt3dadd( -13.8346, 493.332, -78.3812, 1.18 ) }
    dend_19 { pt3dadd( -13.7947, 493.823, -78.5025, 1.18 ) }
    dend_19 { pt3dadd( -13.7075, 494.891, -78.7322, 0.88 ) }
    dend_19 { pt3dadd( -13.6052, 495.969, -78.9259, 0.59 ) }
    dend_19 { pt3dadd( -13.4608, 497.38, -79.1228, 0.88 ) }
    dend_19 { pt3dadd( -13.3644, 498.413, -79.2352, 1.11 ) }
    dend_19 { pt3dadd( -13.267, 499.463, -79.3165, 1.11 ) }
    dend_19 { pt3dadd( -13.1217, 500.882, -79.4127, 0.52 ) }
    dend_19 { pt3dadd( -12.9415, 502.294, -79.4884, 0.44 ) }
    dend_19 { pt3dadd( -12.8144, 503.088, -79.5167, 0.44 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 97/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -16.4043, 442.057, -66.6317, 0.29 ) }
    dend_18 { pt3dadd( -16.5316, 442.735, -66.3426, 0.29 ) }
    dend_18 { pt3dadd( -16.6483, 443.474, -66.0692, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_18 { pt3dadd( -16.7138, 443.902, -65.9131, 0.66 ) }
    dend_18 { pt3dadd( -16.7696, 444.286, -65.7694, 0.37 ) }
    dend_18 { pt3dadd( -16.8651, 444.941, -65.5133, 0.22 ) }
    dend_18 { pt3dadd( -16.8953, 445.145, -65.4302, 0.66 ) }
    dend_18 { pt3dadd( -16.9242, 445.412, -65.3188, 0.66 ) }
    dend_18 { pt3dadd( -17.0031, 446.144, -65.0388, 0.37 ) }
    dend_18 { pt3dadd( -17.0607, 446.587, -64.8784, 0.37 ) }
    dend_18 { pt3dadd( -17.15, 447.183, -64.6838, 0.59 ) }
    dend_18 { pt3dadd( -17.1875, 447.461, -64.6045, 0.37 ) }
    dend_18 { pt3dadd( -17.2422, 447.89, -64.4937, 0.29 ) }
    dend_18 { pt3dadd( -17.3041, 448.37, -64.3908, 0.74 ) }
    dend_18 { pt3dadd( -17.3385, 448.634, -64.35, 0.96 ) }
    dend_18 { pt3dadd( -17.3862, 448.982, -64.3006, 0.52 ) }
    dend_18 { pt3dadd( -17.4634, 449.473, -64.2352, 0.44 ) }
    dend_18 { pt3dadd( -17.5349, 449.929, -64.1622, 0.29 ) }
    dend_18 { pt3dadd( -17.6257, 450.535, -64.0344, 0.29 ) }
    dend_18 { pt3dadd( -17.6839, 450.918, -63.9284, 0.66 ) }
    dend_18 { pt3dadd( -17.7391, 451.323, -63.8, 0.81 ) }
    dend_18 { pt3dadd( -17.8112, 452.002, -63.5678, 0.29 ) }
    dend_18 { pt3dadd( -17.8694, 452.861, -63.2587, 0.29 ) }
    dend_18 { pt3dadd( -17.8833, 453.456, -63.04, 0.29 ) }
    dend_18 { pt3dadd( -17.8728, 453.973, -62.8603, 0.88 ) }
    dend_18 { pt3dadd( -17.8532, 454.366, -62.7399, 0.88 ) }
    dend_18 { pt3dadd( -17.819, 454.83, -62.6151, 0.29 ) }
    dend_18 { pt3dadd( -17.749, 455.406, -62.4988, 0.29 ) }
    dend_18 { pt3dadd( -17.7234, 455.586, -62.478, 0.52 ) }
    dend_18 { pt3dadd( -17.616, 456.224, -62.4438, 0.22 ) }
    dend_18 { pt3dadd( -17.5303, 456.607, -62.4418, 0.52 ) }
    dend_18 { pt3dadd( -17.4346, 456.96, -62.4434, 0.52 ) }
    dend_18 { pt3dadd( -17.1305, 457.888, -62.4497, 0.44 ) }
    dend_18 { pt3dadd( -16.9418, 458.382, -62.4563, 0.96 ) }
    dend_18 { pt3dadd( -16.8166, 458.671, -62.4609, 0.96 ) }
    dend_18 { pt3dadd( -16.5076, 459.317, -62.4649, 0.29 ) }
    dend_18 { pt3dadd( -16.2355, 459.843, -62.466, 0.22 ) }
    dend_18 { pt3dadd( -15.9811, 460.318, -62.4612, 0.81 ) }
    dend_18 { pt3dadd( -15.6795, 460.872, -62.4397, 0.29 ) }
    dend_18 { pt3dadd( -15.446, 461.306, -62.4148, 0.29 ) }
    dend_18 { pt3dadd( -15.2374, 461.709, -62.3817, 0.66 ) }
    dend_18 { pt3dadd( -15.1547, 461.876, -62.3595, 0.81 ) }
    dend_18 { pt3dadd( -14.912, 462.389, -62.2725, 0.29 ) }
    dend_18 { pt3dadd( -14.7698, 462.713, -62.206, 0.29 ) }
    dend_18 { pt3dadd( -14.6736, 462.953, -62.1495, 0.81 ) }
    dend_18 { pt3dadd( -14.5807, 463.211, -62.0886, 0.81 ) }
    dend_18 { pt3dadd( -14.4111, 463.738, -61.9842, 0.29 ) }
    dend_18 { pt3dadd( -14.2269, 464.391, -61.8781, 0.29 ) }
    dend_18 { pt3dadd( -14.1077, 464.874, -61.8155, 0.88 ) }
    dend_18 { pt3dadd( -14.0491, 465.131, -61.7899, 1.03 ) }
    dend_18 { pt3dadd( -13.9598, 465.534, -61.7582, 0.74 ) }
    dend_18 { pt3dadd( -13.7152, 466.67, -61.6873, 0.22 ) }
    dend_18 { pt3dadd( -13.6183, 467.106, -61.6652, 0.96 ) }
    dend_18 { pt3dadd( -13.5315, 467.454, -61.6423, 1.11 ) }
    dend_18 { pt3dadd( -13.343, 468.182, -61.5851, 0.29 ) }
    dend_18 { pt3dadd( -13.2357, 468.583, -61.5479, 0.59 ) }
    dend_18 { pt3dadd( -13.1622, 468.878, -61.5077, 0.59 ) }
    dend_18 { pt3dadd( -13.0556, 469.338, -61.4231, 0.59 ) }
    dend_18 { pt3dadd( -12.9314, 469.922, -61.2878, 0.29 ) }
    dend_18 { pt3dadd( -12.8468, 470.349, -61.1707, 0.44 ) }
    dend_18 { pt3dadd( -12.7561, 471.018, -60.9501, 0.29 ) }
    dend_18 { pt3dadd( -12.6953, 471.721, -60.7009, 0.81 ) }
    dend_18 { pt3dadd( -12.6823, 471.917, -60.6264, 0.81 ) }
    dend_18 { pt3dadd( -12.6717, 472.174, -60.527, 1.03 ) }
    dend_18 { pt3dadd( -12.6555, 472.574, -60.369, 0.37 ) }
    dend_18 { pt3dadd( -12.6142, 473.263, -60.0882, 0.29 ) }
    dend_18 { pt3dadd( -12.5826, 473.642, -59.9452, 0.29 ) }
    dend_18 { pt3dadd( -12.5098, 474.369, -59.7104, 0.29 ) }
    dend_18 { pt3dadd( -12.4716, 474.739, -59.6198, 0.81 ) }
    dend_18 { pt3dadd( -12.4156, 475.462, -59.4794, 0.37 ) }
    dend_18 { pt3dadd( -12.3853, 476.039, -59.3595, 0.29 ) }
    dend_18 { pt3dadd( -12.3434, 476.608, -59.2245, 1.11 ) }
    dend_18 { pt3dadd( -12.3302, 476.972, -59.1181, 0.66 ) }
    dend_18 { pt3dadd( -12.3684, 477.678, -58.8575, 0.29 ) }
    dend_18 { pt3dadd( -12.4543, 478.314, -58.5526, 0.29 ) }
    dend_18 { pt3dadd( -12.599, 478.997, -58.1268, 0.29 ) }
    dend_18 { pt3dadd( -12.6812, 479.381, -57.8192, 0.29 ) }
    dend_18 { pt3dadd( -12.7557, 479.7, -57.5308, 0.29 ) }
    dend_18 { pt3dadd( -12.8788, 480.146, -57.1072, 0.81 ) }
    dend_18 { pt3dadd( -12.9715, 480.398, -56.8545, 1.11 ) }
    dend_18 { pt3dadd( -13.0894, 480.724, -56.5552, 0.88 ) }
    dend_18 { pt3dadd( -13.4023, 481.688, -55.8136, 0.29 ) }
    dend_18 { pt3dadd( -13.5087, 482.077, -55.5398, 0.29 ) }
    dend_18 { pt3dadd( -13.5944, 482.501, -55.2688, 0.74 ) }
    dend_18 { pt3dadd( -13.708, 483.145, -54.9115, 0.29 ) }
    dend_18 { pt3dadd( -13.8145, 483.688, -54.6424, 0.29 ) }
    dend_18 { pt3dadd( -13.9382, 484.295, -54.3743, 0.66 ) }
    dend_18 { pt3dadd( -13.9849, 484.571, -54.2769, 0.88 ) }
    dend_18 { pt3dadd( -14.0172, 485.2, -54.0692, 0.22 ) }
    dend_18 { pt3dadd( -13.9919, 485.622, -53.9512, 0.37 ) }
    dend_18 { pt3dadd( -13.9877, 485.664, -53.9448, 0.37 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 88/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -85.5691, -58.7778, -83.6988, 0.22 ) }
    dend_44 { pt3dadd( -86.842, -58.6783, -84.0957, 0.22 ) }
    dend_44 { pt3dadd( -87.3753, -58.6707, -84.2626, 0.22 ) }
    dend_44 { pt3dadd( -88.1502, -58.71, -84.5065, 0.37 ) }
    dend_44 { pt3dadd( -88.9323, -58.7859, -84.7538, 0.22 ) }
    dend_44 { pt3dadd( -89.9125, -58.9183, -85.0652, 0.22 ) }
    dend_44 { pt3dadd( -90.9406, -59.0756, -85.3927, 0.81 ) }
    dend_44 { pt3dadd( -91.4256, -59.1738, -85.5564, 0.81 ) }
    dend_44 { pt3dadd( -92.0674, -59.3374, -85.784, 0.52 ) }
    dend_44 { pt3dadd( -92.6273, -59.5101, -85.9956, 0.29 ) }
    dend_44 { pt3dadd( -93.0904, -59.6642, -86.1786, 0.66 ) }
    dend_44 { pt3dadd( -93.7468, -59.8785, -86.4693, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_44 { pt3dadd( -94.2603, -60.0228, -86.7175, 0.29 ) }
    dend_44 { pt3dadd( -94.972, -60.2031, -87.0938, 0.29 ) }
    dend_44 { pt3dadd( -95.6682, -60.352, -87.4937, 0.96 ) }
    dend_44 { pt3dadd( -96.3142, -60.4814, -87.9447, 1.03 ) }
    dend_44 { pt3dadd( -97.1887, -60.6591, -88.6359, 0.22 ) }
    dend_44 { pt3dadd( -97.4076, -60.7074, -88.8261, 0.22 ) }
    dend_44 { pt3dadd( -97.8151, -60.811, -89.1977, 0.88 ) }
    dend_44 { pt3dadd( -98.1556, -60.929, -89.529, 0.88 ) }
    dend_44 { pt3dadd( -99.0416, -61.3217, -90.478, 0.22 ) }
    dend_44 { pt3dadd( -99.4801, -61.5599, -91.0137, 0.22 ) }
    dend_44 { pt3dadd( -99.8515, -61.8061, -91.4949, 0.22 ) }
    dend_44 { pt3dadd( -100.161, -62.0571, -91.9174, 0.88 ) }
    dend_44 { pt3dadd( -100.472, -62.4096, -92.397, 1.11 ) }
    dend_44 { pt3dadd( -100.764, -62.918, -92.9708, 0.88 ) }
    dend_44 { pt3dadd( -101.035, -63.7726, -93.7496, 0.29 ) }
    dend_44 { pt3dadd( -101.113, -64.4837, -94.3284, 1.18 ) }
    dend_44 { pt3dadd( -101.122, -64.8682, -94.6304, 1.33 ) }
    dend_44 { pt3dadd( -101.068, -65.7877, -95.3342, 0.29 ) }
    dend_44 { pt3dadd( -100.961, -66.4928, -95.8233, 0.22 ) }
    dend_44 { pt3dadd( -100.807, -67.1463, -96.1698, 0.22 ) }
    dend_44 { pt3dadd( -100.509, -68.0219, -96.5013, 0.96 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 21/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -85.5691, -58.7778, -83.6988, 0.66 ) }
    dend_41 { pt3dadd( -87.4307, -58.0806, -82.2795, 0.66 ) }
    dend_41 { pt3dadd( -88.0073, -57.8086, -81.8173, 0.66 ) }
    dend_41 { pt3dadd( -88.6889, -57.412, -81.2479, 0.81 ) }
    dend_41 { pt3dadd( -89.2728, -57.0375, -80.7769, 0.81 ) }
    dend_41 { pt3dadd( -90.711, -56.1228, -79.7032, 0.96 ) }
    dend_41 { pt3dadd( -91.8619, -55.4096, -78.9108, 1.33 ) }
    dend_41 { pt3dadd( -92.5723, -54.9256, -78.5022, 0.44 ) }
    dend_41 { pt3dadd( -93.1991, -54.4777, -78.1909, 0.44 ) }
    dend_41 { pt3dadd( -93.7774, -54.048, -78.0032, 0.37 ) }
    dend_41 { pt3dadd( -94.647, -53.3844, -77.9793, 0.37 ) }
    dend_41 { pt3dadd( -95.0103, -53.1376, -78.111, 0.37 ) }
    dend_41 { pt3dadd( -95.6481, -52.7572, -78.4674, 0.29 ) }
    dend_41 { pt3dadd( -96.3304, -52.4011, -78.865, 0.66 ) }
    dend_41 { pt3dadd( -96.859, -52.1431, -79.1023, 0.88 ) }
    dend_41 { pt3dadd( -97.5024, -51.8537, -79.3048, 0.88 ) }
    dend_41 { pt3dadd( -98.4449, -51.5175, -79.4536, 0.66 ) }
    dend_41 { pt3dadd( -99.0449, -51.3841, -79.4139, 0.66 ) }
    dend_41 { pt3dadd( -99.8435, -51.2782, -79.2269, 0.81 ) }
    dend_41 { pt3dadd( -101.872, -51.0796, -78.5168, 0.81 ) }
    dend_41 { pt3dadd( -102.755, -50.981, -78.1099, 0.59 ) }
    dend_41 { pt3dadd( -103.717, -50.827, -77.5715, 0.44 ) }
    dend_41 { pt3dadd( -104.701, -50.575, -76.9398, 0.44 ) }
    dend_41 { pt3dadd( -105.244, -50.3682, -76.5824, 0.37 ) }
    dend_41 { pt3dadd( -105.822, -50.0306, -76.2411, 0.37 ) }
    dend_41 { pt3dadd( -106.466, -49.4177, -75.983, 0.66 ) }
    dend_41 { pt3dadd( -106.937, -48.842, -75.9087, 0.66 ) }
    dend_41 { pt3dadd( -107.456, -48.1534, -76.0101, 0.44 ) }
    dend_41 { pt3dadd( -107.875, -47.6789, -76.2308, 0.66 ) }
    dend_41 { pt3dadd( -108.284, -47.3574, -76.5186, 0.66 ) }
    dend_41 { pt3dadd( -108.909, -47.0434, -76.9829, 0.66 ) }
    dend_41 { pt3dadd( -110.385, -46.5691, -78.0478, 0.37 ) }
    dend_41 { pt3dadd( -110.966, -46.4407, -78.4338, 0.66 ) }
    dend_41 { pt3dadd( -111.819, -46.3132, -78.9653, 0.66 ) }
    dend_41 { pt3dadd( -112.537, -46.2507, -79.3581, 0.44 ) }
    dend_41 { pt3dadd( -113.22, -46.2247, -79.6745, 0.37 ) }
    dend_41 { pt3dadd( -113.773, -46.2214, -79.8427, 0.59 ) }
    dend_41 { pt3dadd( -114.667, -46.2203, -79.9667, 0.44 ) }
    dend_41 { pt3dadd( -115.298, -46.225, -80.0232, 0.37 ) }
    dend_41 { pt3dadd( -116.14, -46.2313, -80.0485, 0.37 ) }
    dend_41 { pt3dadd( -117.23, -46.2567, -80.0486, 0.37 ) }
    dend_41 { pt3dadd( -118.665, -46.3028, -80.014, 0.37 ) }
    dend_41 { pt3dadd( -119.667, -46.3325, -79.9674, 0.29 ) }
    dend_41 { pt3dadd( -120.205, -46.3363, -79.9409, 0.52 ) }
    dend_41 { pt3dadd( -121.343, -46.2741, -79.903, 0.29 ) }
    dend_41 { pt3dadd( -122.285, -46.1847, -79.8645, 0.37 ) }
    dend_41 { pt3dadd( -122.881, -46.0978, -79.8529, 0.37 ) }
    dend_41 { pt3dadd( -123.487, -45.9674, -79.9114, 0.96 ) }
    dend_41 { pt3dadd( -124.241, -45.7396, -80.0437, 0.66 ) }
    dend_41 { pt3dadd( -124.72, -45.5468, -80.1509, 0.44 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 71/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -12.8144, 503.088, -79.5167, 0.52 ) }
    dend_21 { pt3dadd( -12.7725, 503.904, -79.6503, 0.52 ) }
    dend_21 { pt3dadd( -12.753, 504.535, -79.752, 1.03 ) }
    dend_21 { pt3dadd( -12.7435, 505.045, -79.8339, 1.03 ) }
    dend_21 { pt3dadd( -12.7331, 506.03, -80.0007, 1.11 ) }
    dend_21 { pt3dadd( -12.7177, 507.169, -80.1832, 0.29 ) }
    dend_21 { pt3dadd( -12.695, 508.223, -80.3547, 0.29 ) }
    dend_21 { pt3dadd( -12.6609, 509.209, -80.5279, 0.96 ) }
    dend_21 { pt3dadd( -12.6455, 509.66, -80.5996, 1.11 ) }
    dend_21 { pt3dadd( -12.6184, 510.694, -80.7428, 0.66 ) }
    dend_21 { pt3dadd( -12.6115, 511.851, -80.8819, 0.52 ) }
    dend_21 { pt3dadd( -12.6309, 512.879, -80.987, 0.52 ) }
    dend_21 { pt3dadd( -12.6658, 513.95, -81.0745, 0.52 ) }
    dend_21 { pt3dadd( -12.7105, 514.755, -81.1213, 0.81 ) }
    dend_21 { pt3dadd( -12.8089, 516.074, -81.1828, 1.11 ) }
    dend_21 { pt3dadd( -12.8755, 516.805, -81.2069, 1.33 ) }
    dend_21 { pt3dadd( -13.0716, 518.648, -81.2684, 0.44 ) }
    dend_21 { pt3dadd( -13.1679, 519.499, -81.295, 0.44 ) }
    dend_21 { pt3dadd( -13.3187, 520.971, -81.3511, 0.37 ) }
    dend_21 { pt3dadd( -13.3915, 521.857, -81.3926, 0.96 ) }
    dend_21 { pt3dadd( -13.4392, 522.794, -81.4504, 1.25 ) }
    dend_21 { pt3dadd( -13.4483, 523.416, -81.4963, 1.25 ) }
    dend_21 { pt3dadd( -13.4267, 524.094, -81.552, 1.03 ) }
    dend_21 { pt3dadd( -13.3939, 524.617, -81.5972, 0.74 ) }
    dend_21 { pt3dadd( -13.3319, 525.368, -81.6613, 0.52 ) }
    dend_21 { pt3dadd( -13.2853, 526.06, -81.7128, 0.37 ) }
    dend_21 { pt3dadd( -13.2445, 526.794, -81.762, 0.37 ) }
    dend_21 { pt3dadd( -13.21, 527.742, -81.8131, 0.37 ) }
    dend_21 { pt3dadd( -13.1898, 528.95, -81.8761, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_21 { pt3dadd( -13.1926, 529.619, -81.9123, 0.66 ) }
    dend_21 { pt3dadd( -13.201, 530.741, -81.9843, 0.66 ) }
    dend_21 { pt3dadd( -13.2138, 531.707, -82.0486, 0.29 ) }
    dend_21 { pt3dadd( -13.2233, 532.569, -82.1154, 0.29 ) }
    dend_21 { pt3dadd( -13.2316, 533.174, -82.1673, 0.81 ) }
    dend_21 { pt3dadd( -13.2444, 534.24, -82.2714, 1.03 ) }
    dend_21 { pt3dadd( -13.2561, 535.101, -82.3616, 1.18 ) }
    dend_21 { pt3dadd( -13.2632, 535.754, -82.4359, 0.81 ) }
    dend_21 { pt3dadd( -13.2752, 536.65, -82.5508, 0.29 ) }
    dend_21 { pt3dadd( -13.2864, 537.444, -82.6542, 0.29 ) }
    dend_21 { pt3dadd( -13.2958, 538.252, -82.7593, 0.96 ) }
    dend_21 { pt3dadd( -13.3096, 539.171, -82.8779, 1.11 ) }
    dend_21 { pt3dadd( -13.3142, 539.862, -82.9594, 1.11 ) }
    dend_21 { pt3dadd( -13.3028, 540.999, -83.0884, 0.74 ) }
    dend_21 { pt3dadd( -13.2824, 541.981, -83.1868, 0.44 ) }
    dend_21 { pt3dadd( -13.2479, 542.971, -83.2711, 0.88 ) }
    dend_21 { pt3dadd( -13.2194, 543.687, -83.3237, 0.88 ) }
    dend_21 { pt3dadd( -13.1673, 544.704, -83.3943, 0.52 ) }
    dend_21 { pt3dadd( -13.0989, 545.779, -83.4661, 0.52 ) }
    dend_21 { pt3dadd( -13.0176, 546.857, -83.5349, 0.52 ) }
    dend_21 { pt3dadd( -12.9419, 547.989, -83.6136, 0.52 ) }
    dend_21 { pt3dadd( -12.8995, 548.916, -83.6836, 1.11 ) }
    dend_21 { pt3dadd( -12.8831, 549.39, -83.7236, 1.11 ) }
    dend_21 { pt3dadd( -12.8722, 550.28, -83.8056, 0.81 ) }
    dend_21 { pt3dadd( -12.866, 551.483, -83.9231, 0.29 ) }
    dend_21 { pt3dadd( -12.8697, 552.623, -84.0449, 0.29 ) }
    dend_21 { pt3dadd( -12.8802, 553.285, -84.1187, 0.96 ) }
    dend_21 { pt3dadd( -12.9058, 554.037, -84.1968, 1.11 ) }
    dend_21 { pt3dadd( -12.9613, 554.828, -84.2728, 1.4 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 29/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -12.8144, 503.088, -79.5167, 0.44 ) }
    dend_20 { pt3dadd( -11.7198, 502.061, -79.0637, 0.44 ) }
    dend_20 { pt3dadd( -10.9593, 501.347, -78.749, 0.37 ) }
    dend_20 { pt3dadd( -9.73598, 500.199, -78.2428, 0.29 ) }
    dend_20 { pt3dadd( -9.15133, 499.65, -78.0009, 0.29 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 34/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -124.72, -45.5468, -80.1509, 0.22 ) }
    dend_43 { pt3dadd( -123.91, -44.7167, -79.5803, 0.22 ) }
    dend_43 { pt3dadd( -123.336, -44.128, -79.1755, 0.22 ) }
    dend_43 { pt3dadd( -122.767, -43.5443, -78.7742, 0.59 ) }
    dend_43 { pt3dadd( -122.381, -43.1488, -78.5023, 0.59 ) }
    dend_43 { pt3dadd( -121.875, -42.6302, -78.1458, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 40/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -124.72, -45.5468, -80.1509, 0.37 ) }
    dend_42 { pt3dadd( -125.656, -44.6503, -80.1139, 0.37 ) }
    dend_42 { pt3dadd( -126.419, -43.9804, -80.113, 0.37 ) }
    dend_42 { pt3dadd( -127.208, -43.3434, -80.14, 0.22 ) }
    dend_42 { pt3dadd( -128.053, -42.6608, -80.1689, 0.22 ) }
    dend_42 { pt3dadd( -128.661, -42.1701, -80.1897, 0.22 ) }
    dend_42 { pt3dadd( -129.313, -41.6437, -80.2121, 0.22 ) }
    dend_42 { pt3dadd( -129.537, -41.4854, -80.2284, 0.52 ) }
    dend_42 { pt3dadd( -130.047, -41.1865, -80.2933, 0.66 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 49/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -12.9613, 554.828, -84.2728, 0.22 ) }
    dend_23 { pt3dadd( -11.9351, 557.151, -86.51, 0.22 ) }
    dend_23 { pt3dadd( -11.8244, 557.564, -86.9315, 0.29 ) }
    dend_23 { pt3dadd( -11.7356, 558.278, -87.7302, 0.29 ) }
    dend_23 { pt3dadd( -11.7591, 558.486, -88.0338, 0.66 ) }
    dend_23 { pt3dadd( -11.8565, 558.771, -88.5366, 0.66 ) }
    dend_23 { pt3dadd( -12.0053, 559.125, -89.1602, 0.29 ) }
    dend_23 { pt3dadd( -12.4119, 559.532, -89.887, 0.88 ) }
    dend_23 { pt3dadd( -12.6077, 559.719, -90.2106, 0.88 ) }
    dend_23 { pt3dadd( -13.2712, 560.363, -91.2463, 0.29 ) }
    dend_23 { pt3dadd( -13.5305, 560.662, -91.6396, 0.29 ) }
    dend_23 { pt3dadd( -13.8607, 561.179, -92.12, 0.29 ) }
    dend_23 { pt3dadd( -14.1385, 561.866, -92.5915, 0.66 ) }
    dend_23 { pt3dadd( -14.3371, 562.542, -92.9852, 0.22 ) }
    dend_23 { pt3dadd( -14.4801, 563.088, -93.2768, 0.22 ) }
    dend_23 { pt3dadd( -14.6399, 563.649, -93.5704, 0.22 ) }
    dend_23 { pt3dadd( -14.9743, 564.639, -94.1284, 0.96 ) }
    dend_23 { pt3dadd( -15.4284, 565.745, -94.8544, 1.33 ) }
    dend_23 { pt3dadd( -15.9739, 566.914, -95.7244, 0.29 ) }
    dend_23 { pt3dadd( -16.1417, 567.267, -95.9995, 0.29 ) }
    dend_23 { pt3dadd( -16.5169, 568.005, -96.6005, 0.29 ) }
    dend_23 { pt3dadd( -16.8396, 568.561, -97.0947, 0.29 ) }
    dend_23 { pt3dadd( -17.2466, 569.073, -97.6233, 0.96 ) }
    dend_23 { pt3dadd( -17.5216, 569.297, -97.8808, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 73/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -12.9613, 554.828, -84.2728, 0.29 ) }
    dend_22 { pt3dadd( -12.8464, 556.846, -84.279, 0.29 ) }
    dend_22 { pt3dadd( -12.7614, 558.367, -84.2831, 0.29 ) }
    dend_22 { pt3dadd( -12.6664, 560.532, -84.2923, 0.29 ) }
    dend_22 { pt3dadd( -12.6065, 562.355, -84.3029, 0.74 ) }
    dend_22 { pt3dadd( -12.5775, 563.643, -84.3122, 1.03 ) }
    dend_22 { pt3dadd( -12.5644, 564.534, -84.3198, 1.03 ) }
    dend_22 { pt3dadd( -12.5446, 566.715, -84.3346, 0.29 ) }
    dend_22 { pt3dadd( -12.5072, 568.675, -84.3495, 0.29 ) }
    dend_22 { pt3dadd( -12.4816, 569.652, -84.3538, 0.96 ) }
    dend_22 { pt3dadd( -12.4503, 570.628, -84.3557, 1.18 ) }
    dend_22 { pt3dadd( -12.4016, 572.149, -84.3635, 0.59 ) }
    dend_22 { pt3dadd( -12.3505, 573.583, -84.3629, 0.37 ) }
    dend_22 { pt3dadd( -12.253, 575.673, -84.3498, 0.37 ) }
    dend_22 { pt3dadd( -12.1498, 577.369, -84.3298, 0.29 ) }
    dend_22 { pt3dadd( -12.0204, 579.617, -84.2999, 0.29 ) }
    dend_22 { pt3dadd( -11.9537, 581.212, -84.2714, 0.88 ) }
    dend_22 { pt3dadd( -11.938, 581.839, -84.2603, 1.03 ) }
    dend_22 { pt3dadd( -11.9381, 582.872, -84.2473, 1.03 ) }
    dend_22 { pt3dadd( -11.9596, 584.242, -84.236, 1.03 ) }
    dend_22 { pt3dadd( -11.9885, 586.107, -84.2277, 0.44 ) }
    dend_22 { pt3dadd( -11.9922, 587.905, -84.2207, 0.74 ) }
    dend_22 { pt3dadd( -11.9925, 588.487, -84.2209, 0.74 ) }
    dend_22 { pt3dadd( -11.9975, 589.913, -84.2383, 0.44 ) }
    dend_22 { pt3dadd( -12.0103, 590.751, -84.2518, 0.37 ) }
    dend_22 { pt3dadd( -12.013, 591.753, -84.2687, 0.74 ) }
    dend_22 { pt3dadd( -11.9871, 592.59, -84.2812, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_22 { pt3dadd( -11.8971, 594.018, -84.3174, 0.29 ) }
    dend_22 { pt3dadd( -11.8291, 594.838, -84.3315, 0.29 ) }
    dend_22 { pt3dadd( -11.7015, 596.077, -84.3486, 0.81 ) }
    dend_22 { pt3dadd( -11.6456, 596.526, -84.3538, 0.81 ) }
    dend_22 { pt3dadd( -11.5248, 597.416, -84.371, 0.37 ) }
    dend_22 { pt3dadd( -11.3697, 598.774, -84.4042, 0.37 ) }
    dend_22 { pt3dadd( -11.2814, 599.668, -84.4333, 1.03 ) }
    dend_22 { pt3dadd( -11.2422, 600.458, -84.4682, 1.03 ) }
    dend_22 { pt3dadd( -11.2266, 602.009, -84.5483, 1.03 ) }
    dend_22 { pt3dadd( -11.273, 603.449, -84.6338, 0.37 ) }
    dend_22 { pt3dadd( -11.4199, 605.405, -84.7471, 0.29 ) }
    dend_22 { pt3dadd( -11.5392, 606.481, -84.805, 0.29 ) }
    dend_22 { pt3dadd( -11.7389, 607.937, -84.8719, 0.88 ) }
    dend_22 { pt3dadd( -11.8769, 608.826, -84.9017, 1.25 ) }
    dend_22 { pt3dadd( -12.0191, 609.612, -84.9149, 1.25 ) }
    dend_22 { pt3dadd( -12.2426, 610.859, -84.9094, 0.74 ) }
    dend_22 { pt3dadd( -12.4181, 611.918, -84.8908, 0.74 ) }
    dend_22 { pt3dadd( -12.7195, 613.859, -84.8352, 1.25 ) }
    dend_22 { pt3dadd( -12.8628, 614.924, -84.8033, 1.25 ) }
    dend_22 { pt3dadd( -12.9822, 615.861, -84.7826, 0.52 ) }
    dend_22 { pt3dadd( -13.1283, 617.105, -84.7635, 0.29 ) }
    dend_22 { pt3dadd( -13.2367, 618.084, -84.7606, 0.52 ) }
    dend_22 { pt3dadd( -13.3387, 619.056, -84.7655, 0.81 ) }
    dend_22 { pt3dadd( -13.5908, 621.451, -84.8085, 0.37 ) }
    dend_22 { pt3dadd( -13.784, 623.222, -84.8486, 0.37 ) }
    dend_22 { pt3dadd( -13.8323, 623.672, -84.8609, 1.03 ) }
    dend_22 { pt3dadd( -13.9355, 624.57, -84.8864, 1.4 ) }
    dend_22 { pt3dadd( -14.007, 625.176, -84.9039, 1.4 ) }
    dend_22 { pt3dadd( -14.1919, 626.864, -84.9504, 0.52 ) }
    dend_22 { pt3dadd( -14.3371, 628.285, -84.9879, 0.52 ) }
    dend_22 { pt3dadd( -14.4654, 629.716, -85.023, 0.81 ) }
    dend_22 { pt3dadd( -14.5434, 630.775, -85.0463, 0.81 ) }
    dend_22 { pt3dadd( -14.6065, 631.844, -85.0673, 0.81 ) }
    dend_22 { pt3dadd( -14.6699, 633.142, -85.0908, 0.44 ) }
    dend_22 { pt3dadd( -14.6993, 634.03, -85.1048, 0.44 ) }
    dend_22 { pt3dadd( -14.7263, 635.36, -85.123, 0.81 ) }
    dend_22 { pt3dadd( -14.7483, 636.731, -85.1408, 0.88 ) }
    dend_22 { pt3dadd( -14.7562, 638.233, -85.1579, 1.18 ) }
    dend_22 { pt3dadd( -14.7618, 639.571, -85.1729, 1.4 ) }
    dend_22 { pt3dadd( -14.7649, 640.215, -85.1802, 1.4 ) }
    dend_22 { pt3dadd( -14.759, 641.181, -85.1979, 0.88 ) }
    dend_22 { pt3dadd( -14.7072, 643.674, -85.2569, 0.37 ) }
    dend_22 { pt3dadd( -14.6631, 644.961, -85.2931, 0.37 ) }
    dend_22 { pt3dadd( -14.6191, 645.851, -85.3205, 0.66 ) }
    dend_22 { pt3dadd( -14.5633, 646.738, -85.3464, 0.96 ) }
    dend_22 { pt3dadd( -14.4847, 647.804, -85.3731, 0.37 ) }
    dend_22 { pt3dadd( -14.4157, 648.651, -85.3927, 0.74 ) }
    dend_22 { pt3dadd( -14.2842, 650.098, -85.4435, 0.37 ) }
    dend_22 { pt3dadd( -14.1767, 651.36, -85.496, 0.81 ) }
    dend_22 { pt3dadd( -14.0839, 652.519, -85.5544, 1.03 ) }
    dend_22 { pt3dadd( -13.9194, 654.783, -85.7186, 0.22 ) }
    dend_22 { pt3dadd( -13.8147, 656.359, -85.8551, 0.22 ) }
    dend_22 { pt3dadd( -13.6946, 658.193, -86.041, 0.22 ) }
    dend_22 { pt3dadd( -13.5869, 659.885, -86.2458, 1.25 ) }
    dend_22 { pt3dadd( -13.5345, 660.713, -86.3654, 1.33 ) }
    dend_22 { pt3dadd( -13.454, 662.12, -86.5942, 0.44 ) }
    dend_22 { pt3dadd( -13.3848, 663.307, -86.8238, 0.44 ) }
    dend_22 { pt3dadd( -13.2764, 664.763, -87.1251, 0.44 ) }
    dend_22 { pt3dadd( -13.1718, 665.927, -87.3738, 0.37 ) }
    dend_22 { pt3dadd( -13.0095, 667.646, -87.7418, 0.37 ) }
    dend_22 { pt3dadd( -12.9207, 668.525, -87.9119, 0.37 ) }
    dend_22 { pt3dadd( -12.799, 669.817, -88.1349, 0.74 ) }
    dend_22 { pt3dadd( -12.721, 670.773, -88.2935, 1.03 ) }
    dend_22 { pt3dadd( -12.652, 671.777, -88.4389, 0.74 ) }
    dend_22 { pt3dadd( -12.602, 672.598, -88.5259, 0.29 ) }
    dend_22 { pt3dadd( -12.5385, 673.833, -88.6112, 0.29 ) }
    dend_22 { pt3dadd( -12.5116, 674.54, -88.6397, 0.66 ) }
    dend_22 { pt3dadd( -12.4828, 675.538, -88.6546, 0.66 ) }
    dend_22 { pt3dadd( -12.4572, 676.963, -88.6766, 0.22 ) }
    dend_22 { pt3dadd( -12.439, 678.038, -88.6852, 0.52 ) }
    dend_22 { pt3dadd( -12.4197, 678.788, -88.6913, 0.52 ) }
    dend_22 { pt3dadd( -12.3476, 681.381, -88.6943, 0.22 ) }
    dend_22 { pt3dadd( -12.2779, 682.848, -88.6653, 0.59 ) }
    dend_22 { pt3dadd( -12.2461, 683.383, -88.6453, 0.59 ) }
    dend_22 { pt3dadd( -12.1497, 684.736, -88.5711, 0.22 ) }
    dend_22 { pt3dadd( -12.0813, 685.609, -88.5157, 0.81 ) }
    dend_22 { pt3dadd( -12.0273, 686.243, -88.4715, 0.81 ) }
    dend_22 { pt3dadd( -11.8581, 687.922, -88.3515, 0.22 ) }
    dend_22 { pt3dadd( -11.7812, 688.622, -88.3055, 0.59 ) }
    dend_22 { pt3dadd( -11.7306, 689.012, -88.284, 0.59 ) }
    dend_22 { pt3dadd( -11.3909, 691.612, -88.1859, 0.22 ) }
    dend_22 { pt3dadd( -11.2971, 692.429, -88.1669, 0.22 ) }
    dend_22 { pt3dadd( -11.1578, 693.838, -88.1585, 0.74 ) }
    dend_22 { pt3dadd( -11.1134, 694.502, -88.1655, 0.81 ) }
    dend_22 { pt3dadd( -11.0691, 695.475, -88.1756, 0.81 ) }
    dend_22 { pt3dadd( -11.0246, 697.158, -88.1913, 0.22 ) }
    dend_22 { pt3dadd( -11.0065, 698.849, -88.2045, 0.22 ) }
    dend_22 { pt3dadd( -11.0094, 699.913, -88.2111, 0.22 ) }
    dend_22 { pt3dadd( -11.0346, 701.26, -88.2181, 0.81 ) }
    dend_22 { pt3dadd( -11.0435, 701.624, -88.2193, 0.81 ) }
    dend_22 { pt3dadd( -11.0733, 703.84, -88.2345, 0.22 ) }
    dend_22 { pt3dadd( -11.0718, 703.952, -88.2361, 0.52 ) }
    dend_22 { pt3dadd( -10.9472, 706.47, -88.2936, 0.29 ) }
    dend_22 { pt3dadd( -10.8371, 707.889, -88.3365, 0.88 ) }
    dend_22 { pt3dadd( -10.7541, 708.698, -88.3682, 0.88 ) }
    dend_22 { pt3dadd( -10.5976, 710.157, -88.4359, 0.22 ) }
    dend_22 { pt3dadd( -10.5079, 711.086, -88.4846, 0.22 ) }
    dend_22 { pt3dadd( -10.3966, 712.173, -88.5385, 0.96 ) }
    dend_22 { pt3dadd( -10.3474, 712.623, -88.5588, 0.96 ) }
    dend_22 { pt3dadd( -10.1417, 714.424, -88.6258, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_22 { pt3dadd( -10.0388, 715.489, -88.6559, 0.22 ) }
    dend_22 { pt3dadd( -9.90957, 716.909, -88.6731, 0.88 ) }
    dend_22 { pt3dadd( -9.7888, 718.341, -88.6772, 0.22 ) }
    dend_22 { pt3dadd( -9.68224, 719.778, -88.6757, 0.88 ) }
    dend_22 { pt3dadd( -9.64425, 720.225, -88.6745, 0.88 ) }
    dend_22 { pt3dadd( -9.49477, 721.72, -88.6671, 0.22 ) }
    dend_22 { pt3dadd( -9.35649, 722.817, -88.6571, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 7/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -17.5216, 569.297, -97.8808, 0.37 ) }
    dend_25 { pt3dadd( -17.9611, 570.166, -98.1068, 0.37 ) }
    dend_25 { pt3dadd( -18.1032, 570.458, -98.1857, 0.59 ) }
    dend_25 { pt3dadd( -18.3387, 570.998, -98.3294, 0.59 ) }
    dend_25 { pt3dadd( -18.513, 571.458, -98.4545, 0.29 ) }
    dend_25 { pt3dadd( -18.7978, 572.249, -98.6858, 0.29 ) }
    dend_25 { pt3dadd( -18.9502, 572.68, -98.8207, 0.29 ) }
    dend_25 { pt3dadd( -19.0808, 573.057, -98.9713, 0.52 ) }
    dend_25 { pt3dadd( -19.1983, 573.418, -99.1452, 0.22 ) }
    dend_25 { pt3dadd( -19.344, 573.867, -99.4019, 0.52 ) }
    dend_25 { pt3dadd( -19.5151, 574.35, -99.6909, 0.81 ) }
    dend_25 { pt3dadd( -19.64, 574.696, -99.8823, 0.81 ) }
    dend_25 { pt3dadd( -19.9877, 575.555, -100.324, 0.22 ) }
    dend_25 { pt3dadd( -20.1819, 575.987, -100.529, 0.81 ) }
    dend_25 { pt3dadd( -20.4152, 576.456, -100.725, 0.81 ) }
    dend_25 { pt3dadd( -20.6942, 576.989, -100.902, 0.29 ) }
    dend_25 { pt3dadd( -21.0975, 577.743, -101.108, 0.29 ) }
    dend_25 { pt3dadd( -21.4021, 578.272, -101.243, 0.81 ) }
    dend_25 { pt3dadd( -21.6503, 578.659, -101.346, 1.11 ) }
    dend_25 { pt3dadd( -21.8799, 579.005, -101.467, 0.74 ) }
    dend_25 { pt3dadd( -22.1756, 579.473, -101.662, 0.29 ) }
    dend_25 { pt3dadd( -22.5795, 580.121, -101.973, 0.29 ) }
    dend_25 { pt3dadd( -22.9079, 580.655, -102.237, 0.29 ) }
    dend_25 { pt3dadd( -23.3302, 581.394, -102.602, 1.03 ) }
    dend_25 { pt3dadd( -23.6577, 582.011, -102.891, 1.18 ) }
    dend_25 { pt3dadd( -24.1984, 583.098, -103.378, 0.29 ) }
    dend_25 { pt3dadd( -24.3921, 583.526, -103.557, 0.29 ) }
    dend_25 { pt3dadd( -24.6695, 584.216, -103.824, 1.55 ) }
    dend_25 { pt3dadd( -24.8082, 584.586, -103.961, 1.33 ) }
    dend_25 { pt3dadd( -25.0135, 585.111, -104.15, 0.81 ) }
    dend_25 { pt3dadd( -25.2531, 585.661, -104.357, 0.52 ) }
    dend_25 { pt3dadd( -25.6276, 586.47, -104.679, 0.29 ) }
    dend_25 { pt3dadd( -25.9485, 587.161, -104.965, 0.52 ) }
    dend_25 { pt3dadd( -26.0644, 587.425, -105.072, 0.81 ) }
    dend_25 { pt3dadd( -26.5091, 588.514, -105.491, 0.22 ) }
    dend_25 { pt3dadd( -26.7755, 589.27, -105.766, 0.22 ) }
    dend_25 { pt3dadd( -26.8932, 589.677, -105.889, 0.66 ) }
    dend_25 { pt3dadd( -26.9865, 590.124, -106.012, 0.66 ) }
    dend_25 { pt3dadd( -27.0966, 590.983, -106.24, 0.22 ) }
    dend_25 { pt3dadd( -27.1176, 591.37, -106.365, 0.52 ) }
    dend_25 { pt3dadd( -27.1227, 591.704, -106.492, 0.52 ) }
    dend_25 { pt3dadd( -27.1647, 592.422, -106.784, 0.29 ) }
    dend_25 { pt3dadd( -27.2516, 593.179, -107.106, 0.96 ) }
    dend_25 { pt3dadd( -27.3202, 593.565, -107.271, 0.96 ) }
    dend_25 { pt3dadd( -27.584, 594.754, -107.809, 0.22 ) }
    dend_25 { pt3dadd( -27.8055, 595.598, -108.199, 0.96 ) }
    dend_25 { pt3dadd( -27.9894, 596.182, -108.474, 0.22 ) }
    dend_25 { pt3dadd( -28.0982, 596.457, -108.607, 0.59 ) }
    dend_25 { pt3dadd( -28.2487, 596.762, -108.737, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 56/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -17.5216, 569.297, -97.8808, 0.15 ) }
    dend_24 { pt3dadd( -19.0273, 568.91, -98.2905, 0.15 ) }
    dend_24 { pt3dadd( -19.4729, 568.805, -98.3967, 0.52 ) }
    dend_24 { pt3dadd( -19.7642, 568.739, -98.4619, 0.66 ) }
    dend_24 { pt3dadd( -20.8134, 568.502, -98.6887, 0.22 ) }
    dend_24 { pt3dadd( -21.7558, 568.281, -98.8791, 0.22 ) }
    dend_24 { pt3dadd( -22.149, 568.185, -98.9459, 0.59 ) }
    dend_24 { pt3dadd( -22.7417, 568.062, -99.0322, 0.66 ) }
    dend_24 { pt3dadd( -23.7954, 567.837, -99.1549, 0.29 ) }
    dend_24 { pt3dadd( -24.1765, 567.752, -99.1866, 0.81 ) }
    dend_24 { pt3dadd( -24.9368, 567.568, -99.2381, 0.96 ) }
    dend_24 { pt3dadd( -25.801, 567.345, -99.3078, 0.15 ) }
    dend_24 { pt3dadd( -26.686, 567.106, -99.4008, 0.15 ) }
    dend_24 { pt3dadd( -27.5478, 566.867, -99.5032, 0.15 ) }
    dend_24 { pt3dadd( -28.2626, 566.666, -99.5898, 0.88 ) }
    dend_24 { pt3dadd( -28.7832, 566.5, -99.6571, 0.88 ) }
    dend_24 { pt3dadd( -30.2233, 566.031, -99.8671, 0.22 ) }
    dend_24 { pt3dadd( -30.7796, 565.84, -99.9601, 0.74 ) }
    dend_24 { pt3dadd( -31.5446, 565.547, -100.087, 0.74 ) }
    dend_24 { pt3dadd( -32.4321, 565.17, -100.241, 0.29 ) }
    dend_24 { pt3dadd( -33.1886, 564.821, -100.367, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
    ModelViewParmSubset_2 = new SectionList()
    dend_54 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_56 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_28 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_37 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_30 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_3 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_49 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_38 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_31 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_16 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_13 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_5 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_51 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_50 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_26 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_15 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_48 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_45 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_35 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_34 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_19 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_18 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_41 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_21 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_22 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_54 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_29 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_2 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_12 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_32 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_7 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_8 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_9 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_10 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_40 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_47 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_14 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_43 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_42 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_53 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_52 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_20 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_23 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_24 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_25 OneSecGrp_SectionRef_59.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 3
    dend_56 nseg = 7
    dend_28 nseg = 3
    dend_37 nseg = 3
    dend_30 nseg = 3
    dend_3 nseg = 7
    dend_49 nseg = 3
    dend_38 nseg = 3
    dend_31 nseg = 7
    dend_16 nseg = 7
    dend_13 nseg = 5
    dend_11 nseg = 3
    dend_5 nseg = 3
    dend_51 nseg = 9
    dend_50 nseg = 5
    dend_36 nseg = 3
    dend_26 nseg = 3
    dend_17 nseg = 11
    dend_15 nseg = 11
    dend_48 nseg = 3
    dend_45 nseg = 3
    dend_35 nseg = 5
    dend_34 nseg = 3
    dend_19 nseg = 3
    dend_18 nseg = 3
    dend_41 nseg = 3
    dend_21 nseg = 3
    dend_22 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L6_SBC_f2d2498fe5_0_0


