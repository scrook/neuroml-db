// Cell: bAC217_L5_LBC_5fcaa92b0e_0_0
/*
{
  "id" : "bAC217_L5_LBC_5fcaa92b0e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.93122, -0.108136, -2.1881, 2.35771", "-7.89726, -0.148004, -1.96095, 3.51454", "-6.8633, -0.187872, -1.73381, 7.55356", "-5.82934, -0.22774, -1.50666, 11.3774", "-4.79538, -0.267609, -1.27951, 15.1564", "-3.76142, -0.307477, -1.05237, 15.6784", "-2.72746, -0.347345, -0.825221, 15.4329", "-1.69349, -0.387213, -0.598075, 14.6203", "-0.659532, -0.427081, -0.370928, 13.8866", "0.37443, -0.466949, -0.143782, 13.4876", "1.40839, -0.506817, 0.083365, 13.5864", "2.44235, -0.546685, 0.310511, 13.7525", "3.47631, -0.586553, 0.537658, 14.0168", "4.51028, -0.626421, 0.764805, 14.3455", "5.54424, -0.666289, 0.991951, 14.6782", "6.5782, -0.706157, 1.2191, 14.6165", "7.61216, -0.746025, 1.44624, 14.0887", "8.64612, -0.785894, 1.67339, 12.6993", "9.68008, -0.825762, 1.90054, 11.5417", "10.714, -0.86563, 2.12768, 8.06658", "11.748, -0.905498, 2.35483, 4.43739" ]
  }, {
    "name" : "dend_138",
    "id" : "dend_138",
    "points3d" : [ "-4.28724, -7.40443, -3.86671, 3.24", "-4.28724, -7.40443, -3.86671, 3.24", "-4.7761, -8.57691, -3.86671, 3.09", "-5.20089, -9.59575, -3.86671, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903
  }, {
    "name" : "dend_131",
    "id" : "dend_131",
    "points3d" : [ "6.47276, -7.95793, 0.203286, 1.25", "6.47276, -7.95793, 0.203286, 1.25", "6.89314, -9.64662, 0.287128, 1.25", "6.91535, -9.74656, 0.291497, 1.25", "7.21351, -11.148, 0.349745, 0.96", "7.45645, -12.551, 0.488091, 0.96", "7.55261, -13.2855, 0.584026, 1.33", "7.62844, -14.5614, 0.856298, 0.81", "7.57161, -15.795, 1.23276, 0.81", "7.56151, -15.8911, 1.26646, 0.81", "7.30466, -17.5533, 1.94881, 1.18", "7.11764, -18.6264, 2.42169, 1.18", "6.81699, -20.5738, 3.29625, 0.81", "6.56506, -22.755, 4.26566, 0.81", "6.55097, -23.0673, 4.39201, 0.81", "6.64429, -24.5526, 5.01495, 0.81", "6.76701, -25.2326, 5.29182, 1.4", "7.06606, -26.3147, 5.78142, 1.4", "7.4899, -27.507, 6.41748, 0.66", "7.86373, -28.6721, 7.0794, 0.59", "8.47653, -30.9798, 8.43662, 0.59", "8.63346, -31.9683, 9.04256, 0.81", "8.6888, -33.4447, 9.98619, 0.88", "8.51302, -35.8228, 11.5449, 0.88", "8.11536, -37.9272, 12.8933, 0.88", "8.08962, -38.0125, 12.9426, 0.88", "7.13452, -40.4192, 14.0912, 0.88", "6.63104, -41.5509, 14.5983, 1.18", "6.59751, -41.6262, 14.6274, 1.18", "6.13394, -42.7149, 15.0144, 1.18", "5.24735, -45.051, 15.8742, 0.74", "4.39653, -47.7065, 16.7837, 0.74", "4.34355, -47.9093, 16.8472, 0.74", "3.74401, -50.9674, 17.8482, 0.74", "3.5609, -52.2742, 18.2965, 1.11", "3.5515, -52.3702, 18.3306, 1.11", "3.48951, -54.0035, 18.9264, 1.11", "3.49329, -54.1134, 18.9661, 1.11", "3.64101, -56.7145, 19.9335, 1.11", "3.80272, -57.966, 20.4229, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_120",
    "id" : "dend_120",
    "points3d" : [ "10.5927, -6.62543, 2.26329, 0.88", "10.9096, -6.86754, 2.21533, 0.88", "10.965, -6.91687, 2.23057, 0.88", "11.8552, -7.75878, 2.64474, 0.88", "12.2328, -8.20925, 2.98157, 0.88", "12.7662, -9.0633, 3.92153, 0.88", "13.4881, -10.4259, 5.63926, 0.88", "14.2119, -12.2269, 8.4891, 0.88", "14.2213, -12.2578, 8.54502, 0.88", "14.408, -13.4749, 10.8714, 0.88", "14.4524, -14.8218, 13.3865, 0.88", "14.4506, -14.8546, 13.4421, 0.88", "14.2369, -16.6698, 16.2128, 1.55", "14.2316, -16.7253, 16.2789, 1.55", "14.1531, -17.7913, 17.3771, 1.03", "14.1347, -20.1452, 19.4047, 0.81", "14.2595, -21.8233, 20.7449, 0.81", "14.2725, -21.9246, 20.8259, 0.81", "14.7931, -24.147, 22.5727, 1.03", "14.8155, -24.2023, 22.6196, 1.03", "16.086, -25.9879, 24.3178, 0.88", "17.4753, -27.201, 25.5695, 0.88", "17.5377, -27.2387, 25.6152, 0.88", "18.918, -27.9314, 26.4758, 1.47", "20.0873, -28.4641, 27.0784, 0.81", "21.0268, -28.9488, 27.5315, 0.74", "21.1212, -28.9973, 27.5737, 0.74", "23.4521, -30.2932, 28.6385, 0.74", "23.5438, -30.3456, 28.6825, 0.74", "26.1961, -31.9719, 30.0678, 0.74", "28.1583, -33.1775, 31.1437, 0.74", "29.6146, -34.0814, 31.9563, 0.74", "29.7094, -34.1388, 32.0067, 0.74", "30.195, -34.4162, 32.2298, 0.74" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "8.06276, 6.09482, 1.63329, 1.47", "8.23295, 6.43392, 1.69806, 1.47", "8.64623, 7.23941, 1.81245, 1.47", "9.10649, 8.12649, 1.92224, 1.47", "9.70047, 9.36068, 2.0324, 1.47", "10.2908, 10.6297, 2.12577, 1.47", "10.9875, 12.1672, 2.21444, 1.47", "11.5851, 13.4771, 2.26602, 1.47", "11.6302, 13.5762, 2.26454, 1.47", "12.5567, 15.6691, 2.17974, 1.47", "12.6209, 15.8208, 2.16818, 1.47", "13.1654, 17.1822, 1.98502, 1.69", "13.7207, 18.6587, 1.77246, 1.69", "14.1235, 19.7246, 1.62066, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-8.74724, -0.90593, 0.133286, 3.02", "-8.74724, -0.90593, 0.133286, 3.02", "-10.8079, -0.774327, 0.327736, 2.43", "-10.8937, -0.768851, 0.335827, 2.43", "-12.6635, -0.655821, 0.502836, 2.28", "-12.7278, -0.651714, 0.508905, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-3.27724, 7.67332, -0.796714, 2.5", "-3.27724, 7.67332, -0.796714, 2.5", "-3.32095, 9.54009, -0.136891, 2.06", "-3.36851, 11.8922, 0.945999, 1.84", "-3.37119, 12.0248, 1.00702, 1.84", "-3.41892, 14.3848, 2.09355, 1.84", "-3.47131, 16.976, 3.28648, 2.06", "-3.53187, 21.7902, 5.82207, 1.55", "-3.52621, 23.1251, 6.72717, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "11.0527, -0.50618, 2.38329, 1.84", "11.0527, -0.50618, 2.38329, 1.84", "12.1901, -0.736495, 3.489, 1.62", "13.532, -1.05515, 4.8028, 1.84", "13.5897, -1.07481, 4.85481, 1.84", "15.3617, -1.91361, 6.29713, 1.69", "17.7982, -3.48395, 7.99621, 1.33", "18.7091, -4.20603, 8.61399, 1.33", "18.7609, -4.25823, 8.64752, 1.33", "20.2566, -6.09469, 9.5419, 1.33", "21.6074, -7.99666, 10.3472, 1.33", "23.5901, -11.0683, 11.3793, 1.33", "24.2939, -12.2368, 11.6964, 1.55", "25.4038, -14.1618, 12.2529, 1.4", "26.7452, -16.5707, 12.9939, 1.4", "27.2687, -17.6147, 13.3633, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "9.50276, 4.75207, 1.32329, 1.47", "9.55409, 4.78368, 1.30724, 1.47", "10.4675, 5.38552, 1.0522, 1.47", "11.4766, 6.13085, 0.834691, 1.25", "12.7564, 7.12524, 0.593316, 1.4", "13.8046, 8.02793, 0.426256, 1.4", "13.9439, 8.16634, 0.407913, 1.4", "14.8617, 9.22386, 0.366611, 1.4", "15.9468, 10.6488, 0.399911, 1.4", "15.9871, 10.7082, 0.405421, 1.4", "16.9723, 12.2961, 0.651339, 1.92", "18.0711, 14.288, 1.03024, 1.92", "18.9863, 16.0003, 1.37538, 1.92", "19.0138, 16.0558, 1.38766, 1.92", "19.6135, 17.338, 1.69625, 1.92", "19.6355, 17.3859, 1.70894, 1.92", "20.3001, 18.92, 2.23651, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.84724, 6.26907, -2.17671, 1.11", "-4.90371, 6.29573, -2.20502, 1.11", "-5.82141, 6.70785, -2.55371, 1.11", "-5.88202, 6.73449, -2.57154, 1.11", "-7.34851, 7.37062, -2.95498, 0.96", "-7.5312, 7.4435, -2.99575, 0.96", "-8.66933, 7.86566, -3.20902, 0.96", "-9.66888, 8.21704, -3.36431, 0.96", "-10.6964, 8.58037, -3.47983, 0.96", "-10.7607, 8.60319, -3.48557, 0.96", "-11.7835, 8.96472, -3.5399, 0.96", "-12.8299, 9.33409, -3.62757, 0.96", "-12.9779, 9.38787, -3.6375, 0.96", "-14.2304, 9.85256, -3.69208, 0.96", "-15.5264, 10.3227, -3.71901, 0.96", "-15.6334, 10.3595, -3.72077, 0.96", "-16.664, 10.6729, -3.73095, 0.96", "-17.8029, 10.9331, -3.71362, 1.25", "-19.0697, 11.1308, -3.73377, 1.25", "-20.0662, 11.1824, -3.87362, 1.03", "-20.7689, 11.1857, -4.05777, 0.88", "-21.5863, 11.1871, -4.46563, 0.88", "-22.1795, 11.2006, -5.03458, 0.88", "-22.5921, 11.324, -6.32108, 0.81", "-22.8885, 11.6217, -8.41013, 0.81", "-22.9231, 11.7279, -9.00915, 0.81", "-22.924, 12.0536, -10.5423, 0.81", "-22.8954, 12.2976, -11.4815, 0.81", "-22.7674, 13.58, -15.5282, 0.81", "-22.7552, 13.7969, -16.09, 0.81", "-22.7559, 13.8293, -16.1613, 0.81", "-22.8604, 14.4222, -17.4229, 0.66", "-23.057, 14.8219, -18.1308, 0.66", "-23.6278, 15.4045, -18.7561, 0.66", "-23.8826, 15.553, -18.8354, 0.66", "-24.7477, 15.9297, -19.1079, 0.66", "-24.8108, 15.9488, -19.1264, 0.66", "-25.5953, 16.0657, -19.3189, 0.66", "-26.4115, 16.0239, -19.5916, 0.66", "-27.9269, 15.4512, -20.5455, 0.66", "-27.9676, 15.4252, -20.5941, 0.66", "-28.1597, 15.254, -20.9466, 0.66", "-28.2405, 15.1769, -21.1307, 0.66", "-28.461, 14.9494, -21.7653, 0.66", "-28.763, 14.7109, -23.3471, 0.66", "-28.9791, 14.6439, -24.8099, 0.66", "-28.9957, 14.6465, -24.9217, 0.66", "-29.0435, 14.6771, -25.3021, 0.66", "-29.0727, 14.7082, -25.5598, 0.66", "-29.5378, 15.3718, -29.5818, 0.66", "-29.5521, 15.3999, -29.7271, 0.66", "-29.5945, 15.4777, -30.1381, 0.66", "-29.8647, 15.8675, -32.2348, 0.66", "-29.8819, 15.886, -32.3355, 0.66", "-30.0839, 16.0309, -33.0199, 0.66", "-30.127, 16.0488, -33.0555, 0.66", "-31.6198, 16.5806, -33.9585, 0.66", "-32.6475, 16.8907, -34.2168, 1.03", "-33.3731, 17.1017, -34.1619, 1.4", "-34.1378, 17.321, -34.0759, 1.77", "-35.2756, 17.6513, -33.8511, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000004118409903,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "11.748, -0.905498, 2.35483, 0.81", "26.7369, -1.48345, 2.35483, 0.81", "41.7257, -2.0614, 2.35483, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_139",
    "id" : "dend_139",
    "points3d" : [ "-5.20089, -9.59575, -3.86671, 1.62", "-5.51894, -9.78492, -4.00069, 1.62", "-6.80769, -10.5872, -4.54574, 1.62", "-6.87589, -10.6328, -4.57336, 1.62", "-8.67794, -12.1228, -5.27496, 1.4", "-8.72569, -12.1744, -5.30415, 1.4", "-9.26787, -12.8626, -5.73836, 1.84", "-9.30433, -12.9178, -5.77622, 1.84", "-9.71146, -13.6494, -6.28937, 2.14", "-10.3354, -14.8985, -7.16373, 2.14", "-11.2244, -17.1653, -8.73231, 2.14", "-11.6145, -18.195, -9.4811, 2.14", "-11.6514, -18.3021, -9.56633, 2.14" ],
    "parent" : "dend_138",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_135",
    "id" : "dend_135",
    "points3d" : [ "3.80272, -57.966, 20.4229, 1.11", "3.26517, -58.207, 19.5017, 1.11", "3.22263, -58.2259, 19.4399, 1.11", "2.64538, -58.4795, 18.6585, 1.11", "2.59962, -58.5002, 18.5997, 1.11", "1.13167, -59.307, 16.7154, 0.37", "1.07178, -59.3399, 16.6385, 0.37", "0.383199, -59.7069, 15.8225, 0.22", "0.265965, -59.7604, 15.6589, 0.29", "0.204647, -59.7752, 15.5285, 0.29", "-0.125676, -59.7772, 14.6652, 0.29", "-5.14787, -62.3353, 6.80876, 0.29", "-11.6447, -63.6799, -0.208667, 0.29", "-18.1875, -66.0191, -6.92922, 0.29", "-23.4766, -67.5406, -14.866, 0.29" ],
    "parent" : "dend_131",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_132",
    "id" : "dend_132",
    "points3d" : [ "3.80272, -57.966, 20.4229, 1.47", "4.06445, -58.9001, 20.8068, 1.47", "4.32743, -60.4563, 21.3579, 0.81", "4.33541, -60.5301, 21.3832, 0.81", "4.46805, -62.2713, 22.0213, 0.81", "4.47615, -62.3897, 22.0658, 0.81", "4.69214, -64.6862, 22.9664, 0.74", "4.83156, -66.544, 23.7358, 0.74", "5.00345, -68.553, 24.6225, 0.74", "5.13851, -69.6742, 25.1486, 0.52", "5.16615, -69.8222, 25.2223, 0.52", "5.51739, -71.1592, 25.9063, 0.52", "5.54413, -71.2343, 25.9464, 0.52", "5.90809, -72.1587, 26.4823, 0.88", "5.93187, -72.2246, 26.5168, 0.88", "6.21946, -73.1522, 26.9123, 0.88", "6.50549, -74.2519, 27.3265, 0.59", "6.87803, -75.8488, 27.8203, 0.59", "7.24302, -77.4265, 28.2575, 0.59", "7.38462, -78.1996, 28.4394, 0.59", "7.56256, -79.3393, 28.6892, 0.52", "7.56925, -79.4161, 28.7042, 0.52", "7.6114, -80.6996, 28.8418, 0.52", "7.60112, -80.925, 28.8703, 0.37", "7.4216, -81.9353, 29.0804, 0.37", "7.38806, -82.0146, 29.1045, 0.37", "6.9633, -82.6802, 29.384, 0.37", "6.38664, -83.4663, 29.7485, 0.37", "5.4571, -84.6755, 30.3758, 0.22", "5.41511, -84.7333, 30.4067, 0.22", "4.73178, -85.6872, 30.9402, 0.22", "4.10015, -86.554, 31.4883, 0.22", "4.05494, -86.6171, 31.5315, 0.22", "3.43551, -87.5578, 32.1713, 0.22", "3.40188, -87.622, 32.2003, 0.22", "3.05077, -88.3735, 32.5355, 0.22", "2.59945, -89.6206, 33.0774, 0.22", "2.50986, -89.9121, 33.1883, 0.22", "2.20334, -90.9333, 33.5367, 0.22", "1.75751, -92.5965, 33.9091, 0.22", "1.82804, -103.001, 38.0532, 0.22", "1.45164, -113.331, 42.3566, 0.22", "2.71424, -124.026, 45.4692, 0.22", "4.07983, -134.15, 50.0248, 0.22", "3.78928, -144.56, 54.1476, 0.22", "2.07055, -155.297, 56.8989, 0.22", "0.417732, -165.986, 59.8571, 0.22", "-1.03895, -176.465, 63.5464, 0.22", "-1.56643, -186.157, 69.0751, 0.22" ],
    "parent" : "dend_131",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_128",
    "id" : "dend_128",
    "points3d" : [ "30.195, -34.4162, 32.2298, 0.37", "30.2772, -33.9248, 32.2107, 0.37", "30.4245, -33.4951, 32.2007, 0.37", "30.4447, -33.4462, 32.1998, 0.37", "30.6338, -33.0927, 32.1844, 0.37", "30.7233, -32.9437, 32.1759, 0.37", "31.0493, -32.4015, 32.1448, 0.37", "31.3979, -31.9291, 32.1171, 0.37", "31.4325, -31.8896, 32.1144, 0.37", "31.817, -31.4807, 32.0835, 0.37", "31.8609, -31.4401, 32.0797, 0.37", "36.2364, -25.3655, 31.3289, 0.37", "40.1718, -19.0138, 30.3583, 0.37", "43.4401, -12.2045, 30.3653, 0.37", "46.7065, -5.51035, 29.1375, 0.37", "49.2395, 1.61986, 29.1153, 0.37" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_121",
    "id" : "dend_121",
    "points3d" : [ "30.195, -34.4162, 32.2298, 0.74", "30.2695, -35.044, 32.3765, 0.74", "30.2767, -35.1101, 32.3898, 0.74", "30.4961, -37.127, 32.7944, 0.74", "30.7139, -39.13, 33.1963, 0.74", "30.7256, -39.2374, 33.2178, 0.74", "30.93, -41.1168, 33.5949, 0.74", "30.9362, -41.1836, 33.6048, 0.74" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_111",
    "id" : "dend_111",
    "points3d" : [ "14.1235, 19.7246, 1.62066, 1.18", "14.2101, 20.4759, 1.73691, 1.18", "14.3194, 21.5531, 2.02096, 0.96", "14.3224, 21.6444, 2.04441, 0.96", "14.2793, 22.4018, 2.24656, 0.96", "14.0327, 23.8963, 2.58529, 0.96", "14.0151, 23.9753, 2.60074, 0.96", "13.6718, 25.2545, 2.81159, 0.96", "13.2588, 26.5807, 2.96498, 0.96", "12.7431, 28.1438, 3.05056, 0.96", "12.0343, 30.2109, 3.04523, 0.96", "11.7078, 31.1207, 3.01489, 1.25", "11.1593, 32.7873, 2.93272, 1.25", "10.6264, 34.5429, 2.80315, 1.25", "10.2988, 35.7834, 2.73905, 1.25", "10.0791, 36.8039, 2.69975, 1.03", "9.84824, 38.1594, 2.69616, 0.81", "9.56277, 40.0337, 2.75174, 0.81", "9.54851, 40.1264, 2.76271, 0.81", "9.34491, 41.432, 3.02771, 1.03", "9.14191, 42.4943, 3.35408, 1.03", "8.92426, 43.466, 3.7166, 1.03", "8.9035, 43.5508, 3.75113, 1.03", "8.47914, 44.9482, 4.43583, 0.81", "8.26079, 45.6242, 4.78212, 0.81", "7.8344, 46.7916, 5.43351, 0.74", "7.80841, 46.8543, 5.47899, 0.74", "7.67287, 47.1608, 5.74059, 0.74" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "14.1235, 19.7246, 1.62066, 0.74", "15.0633, 19.3179, 2.42889, 0.74", "15.1057, 19.2966, 2.45674, 0.74", "15.4252, 19.1276, 2.63784, 0.74", "17.513, 17.8786, 3.46512, 1.4", "18.1288, 17.4608, 3.70121, 1.03", "18.1718, 17.4295, 3.716, 1.03", "19.2709, 16.5512, 3.99967, 0.74", "19.3124, 16.5171, 4.0126, 0.74", "20.5469, 15.5114, 4.43134, 0.74", "21.8003, 14.5228, 4.8256, 0.52", "22.3642, 14.1606, 5.13818, 0.52", "22.4051, 14.139, 5.16785, 0.52", "23.6752, 13.6983, 6.25481, 1.11", "24.2621, 13.5658, 6.78061, 1.11", "24.3573, 13.562, 6.87385, 1.11", "25.9115, 13.6642, 8.3367, 0.74", "25.9508, 13.6686, 8.37482, 0.74", "26.9142, 13.717, 9.28825, 0.74", "26.9875, 13.7112, 9.34687, 0.74", "28.1745, 13.3754, 10.1167, 0.74", "28.2212, 13.3559, 10.138, 0.74", "29.5321, 12.7364, 10.5923, 0.74", "30.5639, 12.2196, 10.9221, 1.03", "32.054, 11.4733, 11.3405, 0.81", "33.8589, 10.6785, 11.7758, 0.81", "35.3142, 10.0862, 12.0494, 0.81", "36.5817, 9.69485, 12.2973, 0.81", "36.6347, 9.68459, 12.3072, 0.81", "37.6218, 9.70524, 12.5477, 0.59", "38.7865, 10.0238, 12.9798, 0.59", "38.832, 10.048, 12.9995, 0.59", "39.9173, 10.7813, 13.4851, 0.59", "40.0146, 10.8415, 13.5161, 0.59", "40.2831, 10.9707, 13.5782, 0.96", "40.391, 11.0138, 13.599, 0.96", "41.2276, 11.2956, 13.6715, 0.96", "41.3409, 11.3278, 13.673, 0.96", "42.498, 11.5472, 13.5193, 0.66", "43.2654, 11.6636, 13.4195, 0.96" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-12.7278, -0.651714, 0.508905, 2.28", "-12.9756, -0.677614, 0.476103, 2.28", "-13.0566, -0.688743, 0.467123, 2.28", "-14.5164, -0.889205, 0.305362, 2.06", "-17.3611, -1.27986, -0.00987724, 2.06", "-19.8386, -1.62008, -0.284416, 2.06", "-21.865, -1.89835, -0.508962, 2.06", "-24.2457, -2.22358, -0.760471, 2.28" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-12.7278, -0.651714, 0.508905, 0.37", "-13.0875, -0.0495932, 0.937897, 0.37", "-13.3403, 0.312314, 1.24518, 0.37", "-13.3788, 0.358103, 1.28501, 0.37", "-13.7267, 0.765517, 1.51614, 0.37", "-13.7571, 0.801097, 1.53632, 0.37", "-14.2015, 1.32153, 1.83156, 0.37", "-14.2767, 1.39545, 1.85988, 0.37", "-14.5415, 1.60745, 1.97142, 0.37", "-15.1434, 2.10404, 2.22947, 0.22", "-19.3539, 6.80397, 5.83018, 0.22", "-23.7997, 11.0602, 9.66694, 0.22", "-27.6995, 15.0447, 14.2916, 0.22", "-32.3291, 17.659, 19.1745, 0.22", "-36.0056, 21.0272, 24.4095, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-3.52621, 23.1251, 6.72717, 1.84", "-3.33582, 25.0019, 6.11151, 1.84", "-3.25153, 25.7941, 5.9045, 1.84", "-3.22327, 25.9745, 5.85426, 1.84", "-3.02458, 27.0882, 5.53806, 1.84", "-3.0102, 27.1528, 5.51947, 1.84", "-2.68329, 28.3396, 5.17222, 1.84", "-2.66535, 28.4047, 5.15911, 1.84", "-2.2711, 29.5838, 4.887, 1.55", "-2.24953, 29.638, 4.87286, 1.55", "-1.79407, 30.5361, 4.58882, 1.55", "-1.42315, 31.2375, 4.33624, 1.92" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-3.52621, 23.1251, 6.72717, 1.25", "-3.78246, 23.9889, 7.61664, 1.25", "-3.80759, 24.0412, 7.68712, 1.25", "-4.18082, 24.7107, 8.66235, 0.81", "-4.6853, 25.3487, 9.63779, 0.81", "-5.14043, 25.7429, 10.2715, 1.18", "-5.44034, 25.9379, 10.5926, 1.18", "-6.9608, 26.6491, 12.0294, 1.03", "-7.0178, 26.6685, 12.0712, 1.03", "-8.10314, 26.932, 12.7012, 1.03", "-9.24555, 27.1628, 13.2389, 1.25", "-10.0435, 27.3197, 13.5735, 1.25", "-11.6189, 27.6554, 14.1372, 0.81", "-12.7487, 27.9457, 14.4388, 0.81", "-12.8147, 27.9697, 14.4601, 0.81", "-13.8185, 28.5634, 14.8698, 0.81", "-14.2096, 28.9342, 15.0901, 0.81", "-14.2478, 28.9912, 15.1185, 0.81", "-14.3794, 29.3491, 15.2826, 0.81", "-14.6143, 30.6906, 16.0717, 0.81", "-14.6786, 31.532, 16.6387, 0.81", "-14.6797, 32.1697, 17.1924, 0.81", "-14.6739, 32.5967, 17.6386, 0.81", "-14.6944, 33.3511, 18.5788, 0.81", "-14.7658, 33.9847, 19.6088, 0.81", "-14.7775, 34.0036, 19.669, 0.81", "-15.2419, 34.1387, 21.0422, 0.81", "-15.3102, 34.1368, 21.1612, 0.81", "-15.8346, 34.0692, 21.8184, 0.81", "-16.0703, 34.0455, 22.0473, 0.81", "-16.9294, 34.0703, 22.7498, 0.81", "-17.0717, 34.0986, 22.9392, 0.81", "-17.5428, 34.2467, 23.6784, 0.81", "-17.6044, 34.2722, 23.7879, 0.81", "-18.2285, 34.6364, 25.078, 0.81", "-18.4583, 34.8154, 25.6252, 0.81", "-19.6389, 36.1421, 28.9493, 0.66", "-19.7783, 36.3947, 29.4967, 0.66", "-19.8614, 36.6743, 30.0339, 0.66", "-19.8988, 37.0279, 30.5589, 0.66", "-19.8303, 37.5312, 31.0887, 0.59", "-19.6298, 38.2183, 31.6417, 0.59", "-19.2119, 39.2846, 32.1515, 0.88", "-19.1885, 39.3369, 32.1821, 0.88", "-18.9222, 39.911, 32.5875, 0.88", "-18.4902, 40.89, 33.354, 0.44", "-18.466, 40.9602, 33.4186, 0.44", "-18.3806, 41.3559, 33.8256, 0.44", "-18.364, 42.1486, 34.6636, 0.44", "-18.3836, 42.2377, 34.7679, 0.44", "-18.5219, 42.516, 35.2023, 0.44", "-19.0186, 43.125, 36.3111, 0.44", "-19.2323, 43.3675, 36.8279, 0.44", "-19.378, 43.5014, 37.1864, 0.88", "-19.5963, 43.6847, 37.7203, 0.88", "-20.0079, 44.1337, 39.1634, 0.74", "-20.0118, 44.1525, 39.2247, 0.74", "-19.8904, 44.4536, 39.908, 0.74", "-19.8786, 44.4834, 39.9638, 0.74", "-19.8782, 44.7445, 40.3547, 0.74", "-19.8897, 44.7839, 40.4046, 0.74", "-20.3197, 45.4826, 41.1258, 0.52", "-20.5552, 45.8285, 41.4826, 0.52", "-20.5827, 45.8683, 41.5255, 0.52", "-21.0161, 46.5476, 42.2867, 0.52", "-21.0409, 46.5924, 42.3399, 0.52", "-21.0859, 46.7552, 42.5475, 0.52", "-21.0758, 46.7957, 42.6083, 0.52", "-20.8367, 46.903, 43.4547, 0.52", "-20.8, 46.9078, 43.5869, 0.52", "-20.7055, 46.8983, 43.9781, 0.52", "-20.5378, 46.8566, 44.8391, 0.52", "-20.4822, 46.8199, 45.321, 0.52", "-20.3578, 46.4787, 48.8456, 0.52", "-20.3659, 46.4616, 48.9816, 0.52", "-20.4613, 46.3909, 49.5832, 0.52", "-20.4798, 46.3858, 49.6443, 0.52", "-20.9268, 46.4042, 50.4762, 0.52", "-21.0674, 46.4496, 50.6132, 0.52", "-21.3079, 46.5821, 50.6427, 0.52", "-21.4586, 46.6949, 50.6629, 0.52", "-21.8526, 47.0896, 50.7475, 0.52", "-22.322, 47.6513, 50.8717, 0.52", "-22.4895, 47.8895, 50.9243, 0.52", "-22.9539, 48.6343, 51.0778, 0.52", "-23.029, 48.7666, 51.1034, 0.52", "-23.3668, 49.4266, 51.2176, 0.52", "-23.6717, 50.0963, 51.3009, 0.52", "-23.6958, 50.1569, 51.3068, 0.52", "-23.9512, 50.9388, 51.3422, 0.52", "-23.9989, 51.1392, 51.3391, 0.52", "-24.1453, 51.7375, 51.2874, 0.52", "-24.2662, 52.2502, 51.1901, 0.52", "-24.2965, 52.3745, 51.1621, 0.52", "-24.4251, 52.8055, 51.059, 0.52", "-24.4512, 52.8632, 51.0433, 0.52", "-24.7861, 53.4449, 50.9059, 0.52", "-24.8229, 53.4961, 50.8901, 0.52", "-25.1224, 53.841, 50.7679, 0.52", "-25.3608, 54.074, 50.6525, 0.52", "-25.6396, 54.3566, 50.5235, 0.52", "-26.0402, 54.7241, 50.3148, 0.52", "-26.4639, 55.0316, 50.04, 0.52", "-26.7559, 55.1898, 49.8408, 0.52", "-27.1133, 55.2774, 49.5729, 0.52", "-31.8563, 60.7254, 55.3141, 0.52", "-37.4078, 64.4772, 61.5985, 0.52", "-43.4379, 67.8144, 67.6608, 0.52", "-50.0913, 69.264, 73.78, 0.52", "-56.3207, 71.0459, 80.2517, 0.52", "-62.3266, 73.8875, 86.5728, 0.52", "-68.6259, 74.8925, 93.1353, 0.52", "-74.5817, 75.3644, 100.065, 0.52", "-79.0046, 75.4869, 108.074, 0.52" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "27.2687, -17.6147, 13.3633, 0.59", "27.3031, -19.1855, 14.9121, 0.59", "27.3115, -19.2596, 14.966, 0.59", "27.4006, -19.8183, 15.3207, 0.59", "27.4207, -19.8928, 15.3709, 0.59", "27.8427, -20.8422, 16.0384, 0.59", "27.9912, -21.0554, 16.1979, 0.59", "28.6726, -21.4697, 16.493, 0.59", "28.7412, -21.4878, 16.5284, 0.59", "29.631, -21.6064, 17.0266, 0.59", "30.439, -21.6652, 17.4822, 0.52", "31.2043, -21.661, 17.9072, 0.52", "32.2281, -21.651, 18.5937, 0.52", "33.811, -21.567, 19.7224, 0.52", "34.2863, -21.5523, 20.0849, 0.52", "34.7097, -21.5662, 20.4607, 0.52", "34.7583, -21.5757, 20.5225, 0.52", "35.3237, -21.8896, 21.5892, 0.81", "44.0432, -24.2612, 28.4056, 0.81", "53.6715, -28.028, 33.0533, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "27.2687, -17.6147, 13.3633, 1.4", "28.068, -18.4974, 14.0731, 1.4", "28.1353, -18.568, 14.1305, 1.4", "29.7832, -20.1945, 15.4665, 1.4", "29.8395, -20.2501, 15.5122, 1.4", "31.762, -22.1477, 17.0709, 0.88", "31.8113, -22.1963, 17.1108, 0.88", "32.6861, -23.0672, 17.9759, 0.88", "32.8826, -23.2584, 18.1957, 0.88" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "20.3001, 18.92, 2.23651, 1.25", "19.0721, 20.2596, 1.33633, 1.25", "18.782, 20.6449, 1.1575, 1.25", "18.4412, 21.1935, 0.935023, 0.66", "18.0817, 21.819, 0.715707, 0.52", "17.8802, 22.1573, 0.585802, 0.81", "17.8145, 22.2664, 0.542526, 0.81", "17.4847, 22.816, 0.389396, 0.81", "17.1004, 23.4303, 0.248, 0.81", "16.4952, 24.3121, 0.152165, 0.81", "15.9878, 24.9883, 0.169307, 0.81", "15.9497, 25.0379, 0.172648, 0.81", "15.4852, 25.6128, 0.269638, 0.81", "14.6398, 26.6174, 0.512626, 0.66", "13.8572, 27.5486, 0.77317, 0.52", "13.1979, 28.3562, 1.01299, 0.52", "12.7429, 28.9712, 1.17877, 0.52", "12.1068, 29.9158, 1.41043, 0.52", "11.561, 30.8209, 1.59861, 0.52", "10.9466, 31.9269, 1.73913, 0.52", "10.9139, 31.9909, 1.74142, 0.52", "10.451, 32.9352, 1.74585, 0.52", "9.96265, 33.9057, 1.68854, 0.52", "9.8722, 34.0785, 1.65669, 0.52", "9.4039, 34.9114, 1.44577, 0.52", "8.72058, 35.9494, 1.09111, 0.52", "8.66776, 36.0207, 1.05693, 0.52", "8.04053, 36.7582, 0.593541, 0.74", "7.54519, 37.3239, 0.188414, 0.74", "7.51411, 37.3596, 0.163362, 0.74", "6.93026, 38.0802, -0.28511, 0.74", "6.31508, 38.8825, -0.698181, 0.74", "6.06691, 39.2361, -0.862436, 0.52", "5.68663, 39.8514, -1.10908, 0.52", "5.6269, 39.9661, -1.14689, 0.52", "5.18388, 40.8955, -1.40523, 0.52", "5.14912, 40.9827, -1.42426, 0.52", "4.75314, 42.0724, -1.60444, 0.52", "4.45302, 43.0486, -1.76405, 0.52", "4.16367, 44.1272, -1.94056, 0.52", "4.14991, 44.1873, -1.95405, 0.52", "3.98766, 45.0638, -2.20047, 0.96", "3.97811, 45.1234, -2.21897, 0.96", "3.88883, 45.8065, -2.44389, 1.25", "3.8717, 45.9019, -2.47571, 1.25", "3.50888, 47.2544, -2.91312, 1.25", "3.20639, 48.2103, -3.20963, 0.74", "2.86241, 49.1361, -3.48089, 0.74", "2.60872, 49.7378, -3.64299, 0.74", "2.14003, 50.7226, -3.90817, 0.74", "1.58759, 51.7848, -4.17863, 0.74", "1.52543, 51.8914, -4.20225, 0.74", "1.15523, 52.4843, -4.3497, 0.88", "0.632529, 53.2792, -4.57197, 0.88", "0.276659, 53.8499, -4.74324, 0.88", "0.0569682, 54.2497, -4.86895, 0.44", "-0.204831, 54.8495, -5.05551, 0.44", "-0.251776, 54.9853, -5.09535, 0.44", "-0.30161, 55.2716, -5.16805, 0.81", "-0.291478, 55.9531, -5.26974, 0.81", "-0.283858, 56.0248, -5.2748, 0.81", "-0.177252, 56.6346, -5.30358, 0.81", "-0.162824, 56.7054, -5.30587, 0.81", "-0.0230328, 57.5533, -5.33212, 0.81", "0.0719232, 58.3688, -5.32697, 0.44", "0.0740592, 58.432, -5.32534, 0.44", "0.0297552, 59.1656, -5.30669, 0.44", "-0.00198379, 59.3716, -5.30329, 0.44", "-0.137728, 60.0115, -5.29748, 0.44", "-0.332291, 60.6563, -5.28577, 0.44", "-0.538956, 61.211, -5.28134, 0.96", "-0.87049, 62.0365, -5.27203, 0.96", "-1.1493, 62.7256, -5.2049, 0.96", "-1.17079, 62.7842, -5.1961, 0.96", "-1.42793, 63.5688, -5.04403, 0.59", "-1.53571, 63.9894, -4.95663, 0.59", "-1.55381, 64.1111, -4.92897, 0.59", "-1.68193, 65.6921, -4.39322, 0.59", "-1.69497, 66.1199, -4.22869, 0.96", "-1.69418, 66.2034, -4.19781, 0.96", "-1.66638, 66.9736, -3.9295, 0.96", "-1.62835, 67.9005, -3.62462, 0.96", "-1.60059, 69.4438, -3.18575, 0.96", "-1.61354, 70.031, -3.06528, 0.59", "-1.66247, 70.5739, -2.97485, 0.44", "-1.74676, 71.1331, -2.91728, 0.44", "-1.77675, 71.265, -2.91416, 0.44", "-1.92233, 71.7624, -2.91144, 0.44", "-2.07594, 72.2683, -2.92899, 0.44", "-2.3126, 72.9865, -2.92014, 1.11", "-2.56857, 73.7264, -2.88857, 1.77", "-2.75273, 74.2627, -2.87174, 1.77", "-3.16471, 75.4813, -2.86684, 0.81", "-3.37748, 76.1436, -2.88343, 0.66", "-3.55607, 76.7638, -2.89322, 0.59", "-3.74184, 77.4546, -2.90335, 0.52", "-3.88109, 78.0764, -2.91845, 0.52", "-3.99272, 78.6975, -2.95196, 0.52", "-4.13017, 79.638, -2.98991, 0.52", "-4.27451, 80.7525, -2.97714, 0.52", "-4.28263, 80.8152, -2.97834, 0.52", "-4.38294, 81.5798, -3.00694, 1.62", "-4.72404, 83.4511, -3.13504, 0.66", "-4.93943, 84.2791, -3.20895, 0.44", "-5.12089, 84.8574, -3.2795, 0.44", "-5.70415, 86.4058, -3.47505, 0.44", "-5.75247, 86.5214, -3.4883, 0.44", "-6.55255, 88.2517, -3.67704, 0.44", "-7.18488, 89.55, -3.81426, 0.44", "-7.97355, 91.1067, -3.98106, 0.44", "-8.56965, 92.2584, -4.06754, 0.44", "-8.9182, 92.9217, -4.06846, 0.44", "-9.23258, 93.5597, -4.02285, 0.96", "-9.5053, 94.1764, -3.93458, 0.96", "-9.57831, 94.3682, -3.90336, 0.96", "-9.80435, 95.0541, -3.77886, 0.81", "-10.0306, 95.9215, -3.63408, 0.29", "-10.5517, 98.333, -3.25614, 0.29", "-10.69, 99.119, -3.15126, 0.37", "-10.8006, 99.9423, -3.06721, 0.96", "-10.8623, 100.611, -3.0261, 1.4", "-10.8888, 101.143, -3.02089, 0.88", "-10.8862, 101.739, -3.06946, 0.52", "-10.7916, 102.572, -3.25139, 0.52", "-10.6739, 103.235, -3.40644, 0.74", "-10.5248, 103.829, -3.54379, 0.74", "-10.4423, 104.099, -3.61125, 0.37", "-10.4218, 104.157, -3.62556, 0.37", "-9.73709, 105.89, -4.02184, 0.37", "-9.64248, 106.128, -4.07276, 0.37", "-9.33652, 106.914, -4.27348, 0.37", "-9.315, 106.972, -4.28927, 0.37", "-8.82789, 108.257, -4.63835, 0.37", "-8.43564, 109.305, -4.90464, 0.81", "-8.16692, 110.034, -5.07471, 0.81", "-7.73893, 111.183, -5.34717, 0.29", "-7.6456, 111.423, -5.3905, 0.29", "-7.17176, 112.569, -5.53717, 0.29", "-6.82259, 113.373, -5.5885, 0.29", "-6.79225, 113.438, -5.58747, 0.29", "-6.51767, 113.989, -5.5311, 0.29", "-5.85814, 115.427, -5.18026, 0.37", "-5.82402, 115.506, -5.15756, 0.37", "-5.60609, 116.034, -4.98736, 0.37", "-5.43221, 116.456, -4.84547, 0.37", "-5.4082, 116.511, -4.82768, 0.37", "-4.49898, 118.472, -3.94438, 0.37", "-4.46929, 118.529, -3.91236, 0.37", "-4.22123, 118.934, -3.54686, 0.37", "-4.18759, 118.98, -3.47196, 0.37", "-3.95218, 119.247, -2.73991, 0.37", "-3.46809, 119.55, -0.683972, 0.44", "-3.39903, 119.522, -0.225003, 0.44", "-3.24507, 119.253, 1.39909, 0.66", "-3.21314, 118.944, 2.49554, 0.29", "-3.21658, 118.904, 2.58772, 0.29", "-3.31355, 118.477, 3.22981, 0.29", "-3.33453, 118.399, 3.29122, 0.29", "-3.5335, 117.668, 3.69123, 0.29", "-3.57629, 117.478, 3.72931, 0.29", "-3.70277, 116.907, 3.77721, 0.29", "-3.74084, 116.763, 3.78204, 0.29", "-3.87304, 116.354, 3.77259, 0.44", "-3.8963, 116.296, 3.76808, 0.44", "-4.1211, 115.855, 3.70097, 0.44", "-4.19024, 115.742, 3.67927, 0.44", "-4.55345, 115.213, 3.56922, 0.59", "-4.58785, 115.162, 3.56068, 0.59", "-4.83158, 114.763, 3.51665, 0.59", "-4.86346, 114.709, 3.51129, 0.59", "-5.10637, 114.254, 3.47871, 0.59", "-5.31762, 113.802, 3.46224, 0.29", "-5.59574, 113.148, 3.46262, 0.29", "-5.8327, 112.503, 3.46771, 0.29", "-5.94138, 112.16, 3.47316, 0.44", "-6.10989, 111.589, 3.49677, 0.59", "-6.22718, 111.145, 3.52554, 0.59", "-6.33663, 110.716, 3.56146, 0.81", "-6.51296, 110.02, 3.63234, 1.33", "-6.6464, 109.471, 3.69933, 1.03", "-6.81352, 108.75, 3.8033, 0.37", "-6.94294, 108.099, 3.90125, 0.37", "-7.0059, 107.628, 3.9732, 0.37", "-7.0115, 107.54, 3.98681, 0.37", "-7.01072, 107.273, 4.02685, 0.15", "-6.99284, 106.88, 4.08068, 0.15", "-6.94528, 106.146, 4.16518, 0.15", "-6.90728, 105.355, 4.25498, 0.15", "-6.90708, 105.229, 4.26933, 0.15", "-6.92559, 104.834, 4.31392, 0.15", "-6.97712, 104.32, 4.37062, 0.15", "-7.04551, 103.863, 4.42027, 0.37", "-7.16052, 103.346, 4.47423, 0.37", "-7.25245, 102.973, 4.51331, 0.44", "-7.32962, 102.585, 4.55525, 0.44", "-7.33925, 102.523, 4.5622, 0.44", "-7.37453, 102.187, 4.60052, 0.44", "-7.395, 101.894, 4.63353, 0.22", "-7.39771, 101.806, 4.64274, 0.22", "-7.3816, 100.804, 4.70853, 0.22", "-7.37811, 100.741, 4.7111, 0.22", "-7.33415, 100.193, 4.72572, 0.29", "-7.2921, 99.7757, 4.72881, 0.29", "-7.23186, 99.3104, 4.72853, 0.66", "-7.14769, 98.7181, 4.72612, 0.88", "-7.08196, 98.2098, 4.71402, 0.96", "-7.03669, 97.8243, 4.70308, 0.66", "-6.99088, 97.3427, 4.68838, 0.29", "-6.94444, 96.7016, 4.67488, 0.29", "-6.91884, 96.227, 4.67328, 0.29", "-6.88571, 95.7162, 4.68769, 0.37", "-6.86373, 95.5188, 4.68154, 0.37", "-6.79512, 95.1064, 4.64848, 0.37", "-6.69004, 94.641, 4.59466, 0.37", "-6.67349, 94.5809, 4.58524, 0.37", "-6.4783, 94.0149, 4.49139, 0.37", "-6.127, 93.1075, 4.35871, 0.52", "-6.10425, 93.0492, 4.35149, 0.52", "-5.94763, 92.682, 4.23118, 0.52", "-5.92085, 92.6215, 4.20369, 0.52", "-5.77114, 92.2807, 4.03759, 0.52", "-5.60741, 91.8983, 3.82949, 0.52", "-5.39903, 91.4288, 3.56077, 0.52", "-4.73358, 89.9997, 2.6425, 1.11", "-4.40805, 89.3471, 2.1466, 1.4" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "20.3001, 18.92, 2.23651, 1.62", "20.5729, 19.4959, 2.05825, 1.62", "20.6089, 19.576, 2.03915, 1.62", "21.3823, 21.2839, 1.7652, 1.33", "21.9651, 22.4005, 1.61169, 1.33", "22.0617, 22.5649, 1.5861, 1.33", "23.0345, 24.1436, 1.32195, 1.18", "23.0841, 24.2173, 1.30984, 1.18", "23.9059, 25.3777, 1.13881, 1.03", "25.0403, 26.8428, 0.979655, 1.03", "25.8695, 27.7905, 0.827621, 1.33", "25.9241, 27.8429, 0.816244, 1.33", "26.6278, 28.4053, 0.602915, 0.96", "26.6889, 28.4452, 0.58141, 0.96", "27.3074, 28.7613, 0.288763, 0.66", "28.1445, 29.1179, -0.155452, 0.88", "29.1489, 29.5479, -0.752699, 1.18", "30.4663, 30.1503, -1.57299, 1.18", "31.6572, 30.7521, -2.36574, 0.96", "33.2136, 31.6062, -3.44107, 0.88", "33.9739, 32.0709, -3.98355, 1.18", "34.9854, 32.7596, -4.723, 1.18", "35.6611, 33.2905, -5.19284, 1.4", "36.7584, 34.2973, -5.82994, 1.4", "36.8151, 34.3595, -5.8593, 1.4", "37.4039, 35.0479, -6.10694, 1.69", "37.4602, 35.1156, -6.12262, 1.69", "38.3448, 36.1876, -6.23941, 1.33", "39.4968, 37.6809, -6.2787, 1.11", "39.5473, 37.7551, -6.27342, 1.11", "40.539, 39.3898, -6.08496, 0.96", "41.3995, 41.0745, -5.78441, 0.81", "41.6144, 41.6884, -5.64833, 0.59", "41.7155, 42.5218, -5.40899, 0.37", "41.6658, 43.4156, -5.10547, 0.37", "41.6237, 43.6741, -4.99466, 0.37", "41.4603, 44.2336, -4.71106, 1.4", "40.9334, 45.7347, -3.98673, 1.4", "40.5657, 46.7468, -3.44913, 1.4", "40.5252, 46.8609, -3.38488, 1.4", "40.0178, 48.491, -2.43716, 0.74", "40.0011, 48.5681, -2.3931, 0.74", "39.8931, 49.5836, -1.81891, 0.59", "39.9026, 49.7552, -1.72912, 0.59", "40.0499, 50.531, -1.44183, 0.59", "40.0915, 50.7163, -1.40257, 0.59", "40.2956, 52.1048, -1.26675, 0.59", "40.3029, 52.2845, -1.24554, 0.59", "40.2875, 53.1306, -1.12994, 1.18", "40.284, 53.2328, -1.11376, 1.18", "40.2224, 54.5325, -0.891996, 1.55", "40.1318, 56.4905, -0.540125, 1.55", "40.0632, 57.7502, -0.29928, 0.81", "40.0222, 59.142, -4.81512E-4, 0.66", "40.0079, 61.1351, 0.479028, 0.66", "40.0142, 61.3108, 0.522814, 0.66", "40.1036, 62.4621, 0.824288, 0.66", "40.1293, 62.6477, 0.874756, 0.66", "40.2689, 63.5885, 1.14732, 0.66", "40.2811, 63.6725, 1.1787, 0.66", "40.4335, 64.8702, 1.68773, 1.47", "40.6394, 66.5497, 2.40704, 1.47", "40.6546, 66.6844, 2.46225, 1.47", "40.7821, 67.8272, 2.90457, 1.47", "40.954, 69.4287, 3.46903, 0.66", "41.1761, 71.5741, 4.16566, 0.52", "41.3085, 72.8571, 4.55313, 0.52", "41.4052, 73.7589, 4.76704, 1.4", "41.4122, 73.835, 4.78085, 1.33", "41.5035, 74.9766, 4.92562, 1.55", "41.6248, 76.8554, 5.09961, 1.55", "41.6304, 76.9453, 5.10906, 1.55", "41.7335, 79.1244, 5.40059, 0.74", "41.78, 80.7348, 5.63254, 0.52", "41.7883, 82.1424, 5.8467, 0.52", "41.7815, 83.0372, 5.98747, 0.81", "41.7656, 83.8024, 6.11087, 1.25", "41.7605, 85.1471, 6.33392, 1.47", "41.7758, 86.5548, 6.58614, 0.96", "41.8544, 88.2338, 6.82882, 0.52", "41.9629, 89.2121, 6.9258, 0.52", "41.982, 89.3136, 6.9305, 0.52", "42.309, 90.3733, 6.90092, 0.52", "42.4166, 90.623, 6.87734, 0.52", "42.6998, 91.1811, 6.84048, 0.81", "43.0243, 91.7606, 6.77667, 0.81", "43.0605, 91.8281, 6.76882, 0.81", "43.8689, 93.4992, 6.59146, 0.37", "44.0736, 94.0254, 6.54676, 1.25", "44.796, 96.058, 6.41012, 2.21" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-35.2756, 17.6513, -33.8511, 0.07", "-34.7792, 17.3684, -39.9117, 0.07", "-34.7701, 17.3609, -40.0288, 0.44", "-34.7605, 17.348, -40.194, 0.44", "-34.7798, 17.3019, -41.0245, 0.44", "-34.7858, 17.2991, -41.1017, 0.44", "-34.8761, 17.309, -41.6777, 0.37", "-34.9293, 17.3343, -41.7282, 0.37", "-35.3958, 17.599, -42.2272, 0.37", "-36.6063, 18.3511, -43.5609, 0.37", "-36.6609, 18.3895, -43.6196, 0.37", "-37.3174, 18.8975, -44.3361, 0.37", "-37.418, 18.9941, -44.5155, 0.37", "-38.1004, 19.8129, -46.0707, 0.37", "-38.1246, 19.8498, -46.1349, 0.37", "-38.1939, 20.041, -46.7388, 0.37", "-38.2022, 20.0705, -46.8525, 0.37", "-38.4568, 21.0561, -51.2034, 0.37", "-38.5163, 21.2547, -52.1596, 0.37", "-38.6828, 21.7636, -54.8544, 0.37", "-39.4662, 23.7812, -66.3495, 0.37", "-39.4907, 23.8339, -66.6889, 0.37", "-39.541, 23.9128, -67.2568, 0.37", "-39.6125, 23.9787, -67.896, 0.37", "-39.6331, 23.9914, -68.0602, 0.37", "-39.8028, 24.0811, -69.1625, 0.37", "-39.8874, 24.1674, -69.2778, 0.37", "-40.119, 24.4706, -69.8571, 0.37", "-40.1545, 24.5188, -69.9675, 0.37", "-40.5942, 25.1266, -71.4522, 0.37", "-40.8067, 25.424, -72.2525, 0.37", "-41.5015, 26.413, -75.0702, 0.37", "-42.2959, 27.657, -78.4367, 0.37", "-42.8366, 28.6396, -81.1008, 0.37", "-42.8501, 28.6661, -81.1726, 0.37", "-43.3472, 29.7324, -84.0722, 0.37", "-43.3596, 29.762, -84.1549, 0.37", "-43.5667, 30.3178, -85.6637, 0.37", "-44.2959, 32.0777, -90.9208, 0.37", "-44.3094, 32.098, -90.9944, 0.37", "-45.0551, 32.5179, -93.614, 0.37", "-45.7266, 32.6362, -95.7886, 0.37", "-45.7768, 32.6368, -95.9468, 0.37", "-46.8284, 32.5555, -99.0585, 0.37", "-47.6729, 32.4938, -101.411, 0.37", "-49.3356, 32.4317, -106.002, 0.37", "-52.3369, 32.5732, -113.983, 0.37", "-52.3609, 32.5779, -114.045, 0.37", "-53.3292, 32.9036, -116.514, 0.37", "-54.2118, 33.4135, -118.693, 0.37", "-54.3278, 33.5113, -118.976, 0.37", "-55.5703, 34.8921, -121.657, 0.37", "-57.029, 36.4275, -123.883, 0.37", "-57.0786, 36.4807, -123.955, 0.37", "-58.4546, 37.9658, -125.846, 0.37", "-58.4887, 38.0027, -125.891, 0.37", "-59.3808, 38.9958, -127.024, 0.37", "-59.4157, 39.035, -127.066, 0.37", "-61.7529, 41.6778, -129.64, 0.37", "-61.8565, 41.7903, -129.744, 0.37", "-62.1172, 42.0567, -129.974, 1.03", "-62.6302, 42.551, -130.349, 1.03", "-63.0226, 42.9047, -130.577, 0.59", "-63.2036, 43.0646, -130.668, 0.59", "-63.9039, 43.6961, -131.125, 0.52", "-63.9589, 43.7489, -131.171, 0.52", "-65.2944, 45.1246, -132.408, 0.52", "-65.3316, 45.1658, -132.446, 0.52", "-66.201, 46.2171, -133.242, 0.52", "-68.1536, 48.7089, -134.921, 0.52", "-68.2116, 48.785, -134.96, 0.52", "-69.2633, 50.1944, -135.463, 0.52", "-69.332, 50.2887, -135.489, 0.52", "-71.2323, 52.891, -135.972, 0.52", "-71.2789, 52.9545, -135.973, 0.52", "-72.998, 55.2892, -135.56, 0.52", "-73.778, 56.3404, -135.353, 0.52" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-35.2756, 17.6513, -33.8511, 1.18", "-35.6579, 17.5215, -33.9353, 1.18", "-36.9931, 17.0537, -34.1771, 0.59", "-38.7413, 16.4265, -34.4673, 0.52", "-40.0742, 15.9281, -34.701, 0.52", "-41.86, 15.2458, -35.0269, 0.52", "-41.9468, 15.2104, -35.0424, 0.52", "-43.6254, 14.4678, -35.291, 0.52", "-43.6937, 14.433, -35.2973, 0.52", "-44.7016, 13.8885, -35.4013, 0.52", "-44.7518, 13.8606, -35.4071, 0.52", "-45.9465, 13.0982, -35.5797, 0.37", "-46.0023, 13.0612, -35.5876, 0.37", "-47.7035, 11.7987, -35.8057, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "41.7257, -2.0614, 2.35483, 0.461685", "56.7146, -2.63935, 2.35483, 0.461685", "71.7034, -3.2173, 2.35483, 0.461685" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_148",
    "id" : "dend_148",
    "points3d" : [ "-11.6514, -18.3021, -9.56633, 0.66", "-12.2498, -18.9673, -9.13033, 0.66", "-12.3205, -19.0599, -9.10757, 0.44", "-12.3535, -19.1062, -9.09911, 0.88", "-12.6026, -19.481, -9.03662, 0.88", "-12.6339, -19.5286, -9.0289, 0.88", "-13.0027, -20.1349, -8.94326, 0.88", "-13.2576, -20.612, -9.00756, 0.81", "-13.3046, -20.7067, -9.0296, 0.74", "-13.701, -21.5228, -9.25491, 0.74", "-13.7213, -21.567, -9.2679, 0.74", "-14.1443, -22.5065, -9.55562, 0.74", "-14.8421, -23.9613, -10.1511, 1.11", "-15.1681, -24.5256, -10.4227, 1.11", "-15.6642, -25.2256, -10.8907, 0.74", "-16.1293, -25.7853, -11.3676, 0.74", "-16.154, -25.81, -11.3922, 0.74", "-17.2875, -26.7393, -12.56, 0.74", "-17.9825, -27.1799, -13.2142, 0.74", "-19.2037, -27.7429, -14.3547, 0.96", "-19.244, -27.7567, -14.392, 0.96", "-19.8981, -27.9153, -14.9315, 0.81", "-20.6082, -28.0421, -15.4597, 1.25", "-21.394, -28.1348, -15.9782, 1.25", "-22.6213, -28.2704, -16.7955, 1.25", "-22.6631, -28.2747, -16.8216, 1.25", "-24.2298, -28.4283, -17.8274, 1.25", "-25.2354, -28.5445, -18.4831, 1.25", "-25.2768, -28.5505, -18.5095, 1.25", "-26.3715, -28.7587, -19.2509, 1.11", "-27.1986, -28.9494, -20.134, 0.88", "-27.241, -28.9608, -20.1885, 0.88", "-27.8788, -29.1864, -21.241, 0.88", "-28.4104, -29.4161, -22.2029, 0.88", "-28.4384, -29.4308, -22.2599, 0.88", "-30.451, -30.6574, -26.8519, 0.59", "-30.814, -30.9164, -27.7767, 0.59", "-31.43, -31.4465, -29.5644, 1.18", "-31.6041, -31.6264, -30.1041, 1.18", "-32.0742, -32.1888, -31.5859, 1.18", "-32.0962, -32.2157, -31.6477, 1.18", "-32.2532, -32.4086, -32.0109, 1.18", "-33.6, -33.9676, -35.0817, 0.88", "-34.2662, -34.6164, -36.3825, 0.74", "-34.2852, -34.6317, -36.4173, 0.74", "-34.9909, -35.0947, -37.5683, 0.74", "-35.406, -35.3188, -38.2081, 0.74", "-35.4615, -35.341, -38.287, 0.74", "-35.9057, -35.4432, -38.793, 0.74", "-36.869, -35.5925, -39.9283, 0.74", "-36.9067, -35.5986, -39.97, 0.74", "-37.9602, -35.782, -41.0813, 0.74", "-37.9896, -35.7888, -41.1111, 0.74", "-38.5556, -35.9443, -41.6578, 0.59", "-38.5931, -35.9576, -41.6981, 0.59", "-39.1716, -36.196, -42.3016, 0.59", "-39.277, -36.2497, -42.4257, 0.59", "-39.8357, -36.6467, -43.2069, 0.59", "-39.856, -36.6655, -43.2393, 0.59", "-40.548, -37.5012, -44.5617, 0.59", "-40.57, -37.5314, -44.6047, 0.59", "-40.7285, -37.8193, -44.9943, 0.59", "-40.8526, -38.0773, -45.3244, 0.44", "-40.9615, -38.4435, -45.7296, 0.29", "-41.0122, -38.6016, -45.8658, 0.29", "-41.1554, -38.9598, -45.916, 0.29" ],
    "parent" : "dend_139",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_140",
    "id" : "dend_140",
    "points3d" : [ "-11.6514, -18.3021, -9.56633, 1.55", "-11.6675, -18.4, -9.53994, 1.55", "-11.6756, -18.4493, -9.52786, 1.55", "-11.8383, -19.4365, -9.28579, 1.55", "-12.1325, -21.2213, -8.84813, 1.33", "-12.2803, -22.1178, -8.62831, 1.25", "-12.4452, -23.1188, -8.38285, 1.25", "-12.4856, -23.3502, -8.32393, 0.07" ],
    "parent" : "dend_139",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_137",
    "id" : "dend_137",
    "points3d" : [ "-23.4766, -67.5406, -14.866, 0.44", "-26.4971, -69.7201, -23.6221, 0.44", "-29.2776, -72.4384, -32.3138, 0.44", "-31.3134, -73.4286, -41.5465, 0.44", "-32.1658, -72.8809, -50.998, 0.44", "-33.8506, -72.0116, -60.3141, 0.44", "-36.5609, -70.3693, -69.2826, 0.44", "-37.867, -68.169, -78.4507, 0.44", "-38.7214, -64.6647, -87.2807, 0.44", "-40.7821, -62.348, -96.2811, 0.44", "-43.9565, -60.6261, -105.082, 0.44", "-46.5664, -60.4722, -114.22, 0.44", "-49.0881, -62.0205, -123.257, 0.44" ],
    "parent" : "dend_135",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_136",
    "id" : "dend_136",
    "points3d" : [ "-23.4766, -67.5406, -14.866, 0.29", "-30.9098, -69.5318, -22.7436, 0.44" ],
    "parent" : "dend_135",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_134",
    "id" : "dend_134",
    "points3d" : [ "-1.56643, -186.157, 69.0751, 0.44", "-1.58629, -195.046, 73.1948, 0.44", "-2.28947, -204.492, 75.7951, 0.44", "-3.25203, -213.24, 80.0882, 0.44", "-2.84304, -221.69, 84.9912, 0.44" ],
    "parent" : "dend_132",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_133",
    "id" : "dend_133",
    "points3d" : [ "-1.56643, -186.157, 69.0751, 0.29", "-2.26135, -199.792, 74.184, 0.44", "-1.36744, -214.005, 77.3638, 0.44", "0.608277, -228.074, 80.6375, 0.44", "4.93961, -241.16, 85.2189, 0.44" ],
    "parent" : "dend_132",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_130",
    "id" : "dend_130",
    "points3d" : [ "49.2395, 1.61986, 29.1153, 0.44", "57.12, 11.633, 25.5115, 0.44" ],
    "parent" : "dend_128",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_129",
    "id" : "dend_129",
    "points3d" : [ "49.2395, 1.61986, 29.1153, 0.29", "51.5132, 8.75779, 31.0571, 0.44" ],
    "parent" : "dend_128",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_127",
    "id" : "dend_127",
    "points3d" : [ "30.9362, -41.1836, 33.6048, 0.22", "30.7123, -42.2009, 33.5976, 0.22", "30.6922, -42.2594, 33.6037, 0.44", "30.6571, -42.3222, 33.6094, 0.44", "29.9047, -43.4444, 33.697, 0.44", "29.8634, -43.5034, 33.6944, 0.44", "29.0331, -44.9638, 33.5981, 0.44", "28.878, -45.2311, 33.583, 0.44", "28.3138, -46.1264, 33.5005, 0.44", "28.2739, -46.186, 33.4932, 0.44", "26.9018, -48.021, 33.2915, 0.44", "25.408, -49.8465, 33.0978, 0.44", "24.9409, -50.3521, 33.0335, 0.44", "24.1294, -51.1351, 32.9682, 0.44", "23.9943, -51.2446, 32.9659, 0.44", "22.7551, -51.9381, 33.0167, 0.44", "21.9177, -52.081, 33.1033, 0.22", "21.0035, -52.0554, 33.1279, 0.22", "20.7653, -52.037, 33.1385, 0.22", "20.3969, -51.9855, 33.1535, 0.22", "20.29, -51.9665, 33.1481, 0.22", "19.3822, -51.7549, 32.8049, 0.22", "18.3143, -51.6369, 32.0665, 0.22", "10.9878, -58.7635, 31.2963, 0.22", "3.82534, -66.0795, 31.7827, 0.22", "-3.43821, -73.1583, 33.1959, 0.22", "-10.5143, -80.4595, 34.4691, 0.22", "-19.2685, -85.6919, 34.8623, 0.22", "-27.8346, -91.2388, 34.4622, 0.22", "-36.5677, -96.5163, 34.1509, 0.22", "-44.7647, -102.482, 32.829, 0.22", "-53.2203, -107.153, 29.5266, 0.22", "-62.2214, -111.048, 26.7332, 0.22", "-71.411, -115.24, 25.3303, 0.22", "-79.8591, -120.719, 23.6031, 0.22", "-88.3557, -126.375, 23.2002, 0.22" ],
    "parent" : "dend_121",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_122",
    "id" : "dend_122",
    "points3d" : [ "30.9362, -41.1836, 33.6048, 0.74", "31.2809, -42.4019, 33.8717, 0.74", "31.7598, -43.9895, 34.1672, 0.74", "31.7772, -44.0351, 34.176, 0.74", "32.1565, -45.1172, 34.4108, 0.52", "32.5369, -46.4935, 34.7195, 0.52", "32.5519, -46.5481, 34.7317, 0.52", "32.8315, -47.8738, 35.0031, 0.52", "33.0288, -48.9645, 35.1846, 0.52", "33.2757, -50.1864, 35.4196, 0.44", "33.6919, -51.8213, 35.8513, 0.44" ],
    "parent" : "dend_121",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_113",
    "id" : "dend_113",
    "points3d" : [ "7.67287, 47.1608, 5.74059, 0.74", "7.78238, 47.8558, 5.62062, 0.74", "7.79831, 47.9649, 5.59234, 0.74", "7.89437, 49.0912, 5.25895, 0.74", "7.90017, 49.2602, 5.20559, 0.74", "7.83814, 50.6892, 4.72896, 0.74", "7.60858, 52.45, 4.18537, 0.74", "7.38776, 53.1908, 4.01083, 1.55", "6.96448, 54.1809, 3.83867, 1.55", "6.74351, 54.5707, 3.81189, 1.55", "6.1287, 55.4858, 3.83961, 1.11", "5.41653, 56.3881, 3.97829, 0.88", "4.19136, 57.8381, 4.44714, 0.66", "4.14071, 57.9004, 4.47357, 0.66", "3.59866, 58.6501, 4.8573, 0.66", "3.54906, 58.7399, 4.90349, 0.66", "3.38729, 59.2922, 5.15185, 0.66", "3.37805, 59.4348, 5.19509, 0.66", "3.41476, 60.3303, 5.51676, 0.66", "3.41839, 60.427, 5.55831, 0.66", "3.46593, 61.1264, 5.89229, 0.96", "3.54174, 61.976, 6.34107, 0.96", "3.55044, 62.0384, 6.38043, 0.96", "3.97667, 63.8943, 7.64772, 0.88", "4.0197, 64.031, 7.74849, 0.88", "4.16642, 64.3594, 8.00383, 0.88", "4.24845, 64.5022, 8.14407, 0.88", "4.716, 65.2438, 8.8986, 0.74", "5.06664, 65.8001, 9.41566, 0.74", "5.10024, 65.8508, 9.45751, 0.74", "5.4938, 66.5763, 10.0109, 0.74", "6.10356, 67.9999, 11.034, 0.59", "6.28425, 68.6449, 11.4225, 0.59", "6.32829, 69.1855, 11.6447, 0.66", "6.31862, 69.2663, 11.6703, 0.66", "6.14044, 69.9429, 11.8003, 0.66", "6.03098, 70.2311, 11.8247, 0.66", "5.70316, 71.0674, 11.8333, 0.66", "5.4184, 71.8551, 11.8656, 0.66", "5.08105, 73.0109, 11.995, 0.66", "4.87444, 74.0572, 12.2238, 0.66", "4.86493, 74.1383, 12.2487, 0.66", "4.80695, 75.1775, 12.6789, 0.66", "4.80323, 75.8462, 13.0601, 0.59", "4.83902, 76.9077, 13.7635, 0.52", "4.8883, 77.8617, 14.3982, 0.52", "4.88758, 77.9294, 14.4492, 0.52", "4.79595, 79.0064, 15.292, 0.52", "4.64108, 79.8783, 16.0012, 0.88", "4.53978, 80.2438, 16.313, 1.11", "4.24168, 81.0818, 16.9984, 1.11", "3.59044, 82.5949, 18.1614, 1.11", "3.56219, 82.6609, 18.2061, 1.11", "3.13734, 83.8034, 18.8207, 0.88", "2.82222, 84.905, 19.2896, 0.74", "2.65368, 85.6523, 19.5596, 0.74", "2.44402, 86.9313, 19.9048, 0.74", "2.28298, 88.3012, 20.1543, 0.66", "2.05193, 90.497, 20.4489, 0.66", "1.85997, 92.397, 20.584, 0.66", "1.80169, 93.1052, 20.5913, 0.88", "1.69705, 94.7423, 20.5465, 0.88", "1.69375, 94.817, 20.5404, 0.88", "1.62913, 95.7553, 20.4181, 0.66", "1.5615, 96.439, 20.2639, 0.66", "1.47864, 97.138, 20.067, 0.74", "1.44153, 97.7518, 19.893, 0.74", "1.449, 98.8863, 19.5747, 0.74", "1.45618, 98.9587, 19.5563, 0.74", "1.70458, 100.233, 19.2753, 0.74", "1.72434, 100.315, 19.26, 0.74", "1.9103, 101.077, 19.1442, 0.74", "1.93244, 101.148, 19.1342, 0.74", "2.25089, 101.931, 19.0369, 0.74", "2.28999, 102.007, 19.0304, 0.74", "2.69528, 102.58, 19.019, 1.18", "2.76467, 102.669, 19.0208, 1.18", "3.29493, 103.239, 19.0713, 1.18", "3.41319, 103.354, 19.0851, 1.18", "4.1025, 103.981, 19.1759, 0.81", "4.76855, 104.564, 19.2671, 0.66", "4.84938, 104.63, 19.2747, 0.66", "6.19191, 105.713, 19.3614, 0.66", "6.65409, 106.107, 19.3756, 0.66", "7.92675, 107.232, 19.3787, 0.66", "7.9884, 107.29, 19.3729, 0.66", "9.10063, 108.456, 19.236, 0.66", "9.15601, 108.52, 19.2277, 0.66", "9.98757, 109.604, 19.0677, 0.66", "10.0242, 109.656, 19.0607, 0.66", "10.7689, 110.741, 18.9557, 0.66", "11.5904, 111.898, 18.9305, 0.66", "11.6339, 111.958, 18.9349, 0.66", "12.1677, 112.616, 19.0074, 0.66", "12.2762, 112.74, 19.0318, 0.66", "12.954, 113.513, 19.216, 0.88", "13.3756, 114.014, 19.3414, 0.88", "13.4136, 114.064, 19.3542, 0.88", "13.7739, 114.628, 19.5158, 0.96", "14.3909, 115.81, 19.8672, 0.66", "14.4219, 115.875, 19.8872, 0.66", "14.8865, 117.025, 20.2606, 0.52", "15.3532, 118.28, 20.6926, 0.96", "15.6507, 119.116, 20.9963, 1.25", "15.7517, 119.431, 21.1219, 1.25" ],
    "parent" : "dend_111",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_112",
    "id" : "dend_112",
    "points3d" : [ "7.67287, 47.1608, 5.74059, 0.59", "7.96417, 48.5397, 8.24249, 0.59", "8.09738, 49.0471, 9.11924, 0.59", "8.14993, 49.1974, 9.37277, 0.59", "8.3069, 49.6208, 10.0871, 0.59", "8.92018, 50.9355, 12.4123, 0.37", "9.25948, 51.6936, 13.8056, 0.37", "9.30397, 51.7781, 13.9489, 0.37", "9.46807, 52.1204, 14.5358, 0.37", "9.81092, 52.7892, 15.6477, 0.29", "10.1052, 53.3149, 16.4977, 0.29", "10.8749, 54.3655, 18.1567, 0.29", "11.1977, 54.8075, 18.8659, 0.29", "11.2286, 54.851, 18.9406, 0.29", "11.4707, 55.4417, 20.0537, 0.29", "11.478, 55.4772, 20.1253, 0.29", "11.5027, 56.2327, 21.6451, 0.29", "11.5003, 56.2721, 21.7279, 0.29", "11.3971, 56.7783, 22.7876, 0.29", "11.0119, 58.0585, 25.2393, 0.29", "10.9983, 58.0912, 25.2983, 0.29", "10.7966, 58.6074, 26.0165, 0.29", "10.4304, 59.6065, 26.9595, 0.29", "10.3448, 59.8406, 27.1524, 0.29", "10.113, 60.4996, 27.6218, 0.29", "10.0613, 60.6506, 27.7276, 0.29", "9.74223, 61.4914, 28.3571, 0.29", "9.23314, 62.82, 29.424, 0.29", "8.56624, 64.7684, 31.1118, 0.29", "8.54911, 64.8257, 31.166, 0.29", "8.27957, 65.9932, 32.4718, 0.29", "8.26953, 66.0507, 32.5429, 0.29", "8.23998, 66.5705, 33.2806, 0.29", "8.35988, 67.3097, 34.4303, 0.29", "8.38168, 67.3655, 34.5365, 0.29", "8.80694, 68.252, 36.6428, 0.29", "8.81966, 68.277, 36.7612, 0.29", "8.80331, 68.3945, 37.5996, 0.29", "8.75234, 68.4267, 37.947, 0.29", "8.37931, 68.493, 39.4882, 0.29", "8.35532, 68.4983, 39.5644, 0.29", "7.44184, 68.6683, 41.6677, 0.29", "6.99952, 68.8266, 42.691, 0.29", "6.72592, 68.98, 43.276, 0.29", "6.67444, 69.0932, 43.4954, 0.29", "7.14457, 69.796, 44.0709, 0.29", "7.57971, 70.2476, 44.3394, 0.29", "7.82105, 70.465, 44.4604, 0.29", "7.87653, 70.5139, 44.4929, 0.29", "8.30329, 71.0135, 44.7816, 0.29", "8.3217, 71.0919, 44.8278, 0.29", "8.29091, 71.6798, 45.1645, 0.29", "8.19479, 72.4231, 45.5521, 0.29", "8.08106, 73.1619, 45.9301, 0.29", "7.93325, 74.0419, 46.4032, 0.29", "7.54803, 76.0082, 47.5038, 0.29", "7.5261, 76.1432, 47.6104, 0.29", "7.4903, 76.5722, 48.1453, 0.29", "7.53466, 76.6402, 48.4083, 0.29", "7.7446, 76.5694, 49.0884, 0.59", "7.7793, 76.5396, 49.1681, 0.59", "8.73523, 75.577, 50.8857, 0.59", "8.78908, 75.5243, 50.9713, 0.59", "9.32803, 75.0358, 51.7052, 0.81", "9.50546, 74.8796, 51.9413, 0.81", "10.1606, 74.3429, 52.7614, 1.11", "10.2282, 74.29, 52.8364, 1.11", "11.2775, 73.5692, 53.6763, 1.11", "11.9617, 73.1244, 54.2008, 0.96", "10.7948, 79.9596, 63.3732, 0.96", "11.9911, 88.2527, 71.3163, 0.96", "13.0695, 96.2685, 79.5423, 0.96", "16.2942, 105.483, 85.7882, 0.96", "19.5426, 115.978, 89.6705, 0.96", "24.6888, 125.789, 93.2243, 0.96", "29.8111, 134.054, 99.4845, 0.96", "34.4405, 143.098, 105.068, 0.96" ],
    "parent" : "dend_111",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "43.2654, 11.6636, 13.4195, 0.66", "44.7099, 11.4127, 13.0436, 0.66", "44.8184, 11.3924, 13.0175, 0.66", "45.9107, 11.1827, 12.7554, 0.66", "47.311, 10.9181, 12.4208, 0.66", "47.429, 10.8992, 12.3974, 0.66", "49.8731, 10.5432, 11.9602, 0.66", "50.5401, 10.4744, 11.8253, 0.96", "52.3564, 10.353, 11.4986, 0.81", "52.4415, 10.3536, 11.486, 0.81", "54.4788, 10.5111, 11.2386, 0.44", "54.5634, 10.5259, 11.2318, 0.44", "55.9158, 10.9462, 11.2002, 0.44", "55.9967, 10.9765, 11.2016, 0.44", "57.2839, 11.4333, 11.2492, 0.44", "57.5369, 11.5066, 11.2556, 0.44", "59.2151, 11.7367, 11.3489, 0.44", "59.3008, 11.7357, 11.3568, 0.44", "60.0709, 11.5608, 11.4465, 0.44", "61.762, 10.9318, 11.6308, 0.44", "61.8385, 10.8919, 11.637, 0.44", "63.3652, 9.97536, 11.6925, 0.52", "63.4353, 9.92423, 11.6923, 0.52", "64.1587, 9.3919, 11.6816, 0.88", "64.3779, 9.23024, 11.6708, 0.88", "65.1282, 8.70522, 11.6977, 0.88", "65.2006, 8.65773, 11.6942, 0.88" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "43.2654, 11.6636, 13.4195, 0.44", "43.3129, 11.6122, 13.3437, 0.44", "43.9327, 10.9412, 12.3548, 0.15", "44.8617, 9.93552, 10.8727, 0.15", "45.0162, 9.76819, 10.6261, 0.15", "45.045, 9.73709, 10.5803, 0.15", "50.0933, 5.11593, 4.88143, 0.15", "54.7555, -0.0846875, -0.67034, 0.15" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-24.2457, -2.22358, -0.760471, 1.11", "-25.8767, -2.00892, 0.163703, 1.11", "-27.1172, -1.88931, 0.928384, 1.11", "-28.9957, -1.70817, 2.08632, 1.11", "-29.7375, -1.63664, 2.54358, 0.88", "-29.9267, -1.6184, 2.66018, 1.11", "-29.9764, -1.61361, 2.69083, 1.11", "-31.2288, -1.54806, 3.38308, 1.47" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-24.2457, -2.22358, -0.760471, 1.4", "-26.5674, -6.55319, -2.0446, 1.4", "-28.9504, -9.85327, -2.04567, 1.25", "-29.6645, -10.7138, -1.93832, 1.03", "-30.3165, -11.3786, -1.77293, 1.03", "-31.0269, -12.1029, -1.59273, 1.03", "-31.9404, -13.0343, -1.36099, 0.96", "-33.4067, -14.5498, -1.15967, 0.96", "-34.5179, -15.5168, -0.759317, 0.96", "-35.9089, -16.6405, -0.250884, 1.11" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-36.0056, 21.0272, 24.4095, 0.44", "-42.3266, 27.3447, 30.3461, 0.44", "-47.72, 32.0367, 38.294, 0.44", "-54.0806, 34.4692, 46.4996, 0.44", "-60.6237, 37.7851, 54.2503, 0.44", "-66.4288, 39.9433, 62.9283, 0.44", "-71.5453, 42.4214, 71.9493, 0.44", "-77.1293, 43.2105, 80.9939, 0.44", "-82.0241, 45.1887, 90.255, 0.44", "-87.0404, 49.0904, 98.8348, 0.44", "-91.3838, 53.548, 107.52, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-36.0056, 21.0272, 24.4095, 0.29", "-41.9394, 25.9261, 31.1537, 0.44", "-46.6289, 30.6919, 38.8948, 0.44", "-50.1253, 36.5657, 46.5377, 0.44", "-54.7797, 41.2179, 54.3657, 0.44", "-59.2847, 46.4113, 61.9515, 0.44", "-63.8809, 51.0313, 69.8319, 0.44", "-68.5649, 56.2314, 77.3042, 0.44", "-73.4543, 60.8941, 84.9814, 0.44", "-79.7786, 66.2358, 91.012, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-1.42315, 31.2375, 4.33624, 1.47", "1.01554, 31.9515, 2.88298, 1.47", "1.01554, 31.9515, 2.88298, 1.47", "2.80351, 32.6819, 2.0806, 0.74", "3.29363, 32.8968, 1.86837, 0.74", "4.68548, 33.537, 1.33551, 0.66", "6.30858, 34.3009, 0.757243, 0.66", "7.50479, 34.8565, 0.437884, 0.66", "9.13554, 35.612, 0.0332403, 0.66", "9.20888, 35.6456, 0.0183222, 0.66", "11.3239, 36.5766, -0.37871, 0.66", "11.3882, 36.6029, -0.389199, 0.66", "12.7649, 37.0825, -0.577995, 0.96", "13.3416, 37.2233, -0.632621, 1.25", "14.635, 37.4916, -0.575372, 1.47", "15.6313, 37.7675, -0.430836, 1.11", "15.6957, 37.7899, -0.414142, 1.11", "16.7443, 38.2782, -0.0520411, 0.52", "18.3587, 39.0367, 0.600967, 0.52", "20.3004, 39.8687, 1.50691, 0.52", "21.7622, 40.4512, 2.25684, 0.52", "21.8736, 40.4909, 2.31641, 0.52", "23.0461, 40.8898, 2.94955, 0.52", "25.293, 41.5941, 4.16206, 0.52", "27.215, 42.1181, 5.09751, 0.52", "27.2989, 42.1356, 5.1349, 0.52", "28.0115, 42.2478, 5.48706, 0.74", "28.5119, 42.3394, 5.75432, 0.74", "29.4311, 42.5077, 6.27732, 0.74", "29.5291, 42.5326, 6.33372, 0.74", "31.2398, 42.86, 7.04344, 0.74", "31.4802, 42.8918, 7.12822, 0.74", "32.415, 42.9786, 7.39792, 0.37", "33.6331, 43.0963, 7.75113, 0.29", "34.465, 43.1871, 7.98088, 0.29", "35.5412, 43.3431, 8.24472, 0.74", "35.7995, 43.3868, 8.29286, 0.74", "36.6765, 43.5826, 8.55753, 0.74", "37.9828, 43.953, 9.10521, 1.03", "38.0623, 43.9785, 9.14755, 1.03", "38.7079, 44.1732, 9.55474, 1.47", "39.6171, 44.3648, 10.1828, 0.96", "40.8626, 44.4896, 11.0102, 0.52", "40.9325, 44.4877, 11.0523, 0.52", "41.5338, 44.4423, 11.3462, 0.37", "41.6386, 44.4374, 11.3946, 0.37", "42.5036, 44.5069, 11.7227, 0.37", "42.5799, 44.5283, 11.743, 0.37", "43.3259, 44.8346, 11.8679, 0.37", "43.9709, 45.16, 11.9576, 0.37", "44.1292, 45.2514, 11.9775, 0.37", "45.4298, 46.0213, 12.1154, 0.37", "45.8283, 46.2664, 12.1541, 0.59", "46.6423, 46.7503, 12.289, 0.59", "47.7273, 47.3897, 12.5214, 0.37", "48.8473, 48.0375, 12.8019, 0.37", "49.8964, 48.6489, 13.1221, 1.18", "50.9087, 49.2384, 13.4884, 1.47", "52.3318, 50.0579, 14.0696, 0.81", "52.9727, 50.4161, 14.3632, 0.29", "53.6809, 50.795, 14.728, 0.22", "54.2351, 51.08, 15.0249, 0.81", "54.4507, 51.1742, 15.1303, 0.81", "55.1702, 51.4575, 15.4692, 0.96", "56.1841, 51.8169, 15.8862, 0.96", "56.2941, 51.852, 15.9326, 0.96", "56.7771, 51.9869, 16.1424, 0.44", "58.1855, 52.2951, 16.7228, 0.44", "59.7419, 52.5023, 17.539, 0.37", "60.2624, 52.5316, 17.8603, 0.88", "60.9447, 52.5319, 18.3001, 1.18", "61.9629, 52.4781, 18.9485, 0.74", "63.1326, 52.3932, 19.7141, 0.44", "65.4306, 52.2879, 21.2209, 0.44", "66.424, 52.279, 21.8782, 0.44", "67.2376, 52.3511, 22.4367, 1.03", "68.1645, 52.5012, 23.09, 1.69", "69.3892, 52.8334, 23.9943, 0.52", "70.5648, 53.2689, 24.8881, 0.52", "72.0714, 53.9286, 25.9663, 0.44", "73.7465, 54.6802, 27.2353, 0.44", "73.798, 54.7034, 27.277, 0.44", "75.3162, 55.3265, 28.4915, 1.25", "75.3807, 55.3457, 28.5381, 1.25", "76.3155, 55.5247, 29.131, 1.84", "77.7336, 55.7315, 29.7833, 0.44", "77.8092, 55.7376, 29.8136, 0.44", "79.0401, 55.7675, 30.2523, 0.29", "79.8237, 55.693, 30.512, 0.52", "80.535, 55.5418, 30.8424, 0.52", "81.495, 55.3126, 31.3736, 0.44", "82.7404, 54.9944, 32.1201, 0.44", "83.4057, 54.8659, 32.5954, 0.88", "84.4655, 54.7001, 33.4892, 0.81", "85.8726, 54.5505, 34.8556, 0.44", "87.0662, 54.4695, 36.1162, 0.44", "87.131, 54.4685, 36.1834, 0.44", "88.4505, 54.5905, 37.4221, 0.44", "88.5193, 54.6017, 37.4843, 0.44", "89.9385, 54.9045, 38.71, 0.44", "90.0102, 54.9216, 38.7676, 0.44", "91.0165, 55.0968, 39.5824, 0.44", "91.082, 55.1064, 39.6303, 0.44", "92.7053, 55.226, 40.69, 0.44", "92.7754, 55.2267, 40.732, 0.44", "93.6512, 55.2011, 41.1897, 0.44", "93.7102, 55.198, 41.2272, 0.44", "93.9161, 55.1845, 41.38, 0.66", "95.0175, 55.1165, 42.1472, 0.29", "96.0117, 55.0153, 42.8456, 0.29", "96.0864, 55.0052, 42.9006, 0.29", "97.5249, 54.7479, 44.0349, 0.29", "97.6154, 54.7335, 44.1053, 0.29", "98.7928, 54.5926, 45.0115, 0.29", "109.483, 57.9533, 48.3787, 0.29", "119.404, 61.9357, 53.1608, 0.29", "128.935, 63.7612, 59.6632, 0.29", "137.997, 63.298, 66.9986, 0.29", "146.887, 62.4557, 74.509, 0.29", "155.827, 62.6335, 82.0073, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-1.42315, 31.2375, 4.33624, 1.84", "-1.29714, 31.8625, 4.33774, 1.84", "-1.08971, 33.0098, 4.39304, 1.03", "-1.07713, 33.0816, 4.39769, 1.03", "-0.96296, 33.7667, 4.44639, 1.03", "-0.83975, 34.8275, 4.52189, 1.03", "-0.764491, 35.9967, 4.62916, 1.03", "-0.769253, 37.787, 4.84538, 1.03", "-0.771882, 37.8412, 4.85311, 1.03", "-0.87412, 38.9633, 4.98543, 1.18", "-1.06703, 40.4465, 5.12702, 1.18", "-1.28495, 41.7511, 5.22262, 1.18", "-1.57827, 43.2062, 5.23732, 1.18", "-1.59186, 43.2685, 5.23419, 1.18", "-1.82958, 44.3877, 5.12665, 1.18", "-2.04058, 45.3539, 4.95976, 1.18", "-2.05463, 45.4232, 4.94211, 1.18", "-2.26856, 46.4761, 4.59748, 0.96", "-2.53238, 47.5879, 4.24109, 0.96", "-2.54859, 47.6473, 4.22472, 0.96", "-2.86547, 48.5866, 4.03722, 1.18", "-3.15878, 49.3328, 3.90819, 1.18", "-3.18219, 49.3907, 3.89597, 1.18", "-3.66181, 50.5747, 3.86564, 1.18", "-3.69506, 50.6582, 3.87227, 1.18", "-4.13833, 51.7866, 4.0576, 1.18", "-4.16462, 51.8528, 4.07225, 1.18", "-4.89874, 53.679, 4.5912, 1.18", "-5.97657, 56.3506, 5.47053, 1.18", "-6.0409, 56.5141, 5.53262, 1.18", "-6.79333, 58.4478, 6.368, 1.18", "-6.9352, 58.8145, 6.54984, 1.18", "-7.25151, 59.6214, 6.98663, 1.18", "-7.28236, 59.6992, 7.03426, 1.18", "-7.57559, 60.4856, 7.39539, 1.18", "-7.87299, 61.379, 7.86013, 1.18", "-7.88454, 61.424, 7.88842, 1.18", "-8.01332, 62.0894, 8.29009, 0.88", "-8.02575, 62.167, 8.33377, 0.88", "-8.13283, 63.1064, 8.73559, 0.88", "-8.13918, 63.2136, 8.76471, 0.88", "-8.17088, 64.3981, 8.90241, 1.11", "-8.18218, 65.3343, 8.93631, 1.11", "-8.18267, 65.3891, 8.93361, 1.11", "-8.21026, 67.1654, 8.7509, 1.33", "-8.2151, 67.864, 8.66001, 1.4", "-8.22433, 68.62, 8.58585, 1.18", "-8.22656, 68.6928, 8.58093, 1.18", "-8.29559, 69.9909, 8.56227, 1.03", "-8.30082, 70.0545, 8.56509, 1.03", "-8.48698, 71.8031, 8.74997, 1.03", "-8.66644, 73.346, 8.92864, 1.03", "-8.823, 74.6301, 9.08242, 1.03", "-8.9325, 75.4382, 9.1825, 1.47", "-9.06978, 76.4776, 9.29708, 1.47", "-9.19387, 77.4695, 9.38142, 1.47", "-9.20048, 77.5239, 9.38437, 1.47", "-9.29383, 78.5313, 9.46874, 1.47", "-9.34073, 79.3241, 9.55892, 0.88", "-9.3753, 80.9552, 9.79283, 0.66", "-9.35224, 82.0728, 9.98443, 0.66", "-9.34815, 82.1624, 10.0015, 0.66", "-9.22085, 83.882, 10.4761, 0.66", "-9.21368, 83.9502, 10.5007, 0.66", "-9.14534, 84.5125, 10.7443, 1.33", "-9.05261, 85.278, 11.144, 1.69", "-8.95994, 86.0984, 11.5712, 1.69", "-8.78024, 87.8576, 12.3365, 1.33", "-8.77542, 87.9186, 12.3547, 1.33", "-8.7498, 88.4578, 12.4864, 1.18", "-8.74635, 88.5841, 12.5054, 1.18", "-8.73131, 89.5912, 12.5566, 1.18", "-8.71513, 90.4655, 12.4886, 1.18", "-8.68449, 91.7595, 12.236, 0.96", "-8.67878, 91.8976, 12.2007, 0.96", "-8.61419, 92.8522, 11.9143, 0.96", "-8.61014, 92.9127, 11.8946, 0.96", "-8.52331, 94.1216, 11.4681, 0.96", "-8.52105, 94.1734, 11.4509, 0.96", "-8.495, 95.3667, 11.0418, 0.74", "-8.51018, 95.8318, 10.9068, 1.03", "-8.6108, 96.6693, 10.7663, 1.03", "-8.62018, 96.7231, 10.764, 1.03", "-8.78356, 97.5392, 10.7997, 1.03", "-8.79568, 97.6016, 10.8056, 1.03", "-8.99717, 98.6746, 10.9546, 0.81", "-9.20578, 99.9021, 11.1372, 0.81", "-9.56176, 102.29, 11.5255, 0.81", "-9.66529, 103.151, 11.6566, 0.81", "-9.72411, 103.819, 11.7464, 1.18", "-9.78126, 104.619, 11.8242, 1.55", "-9.82918, 105.576, 11.8814, 1.55", "-9.83618, 105.749, 11.8781, 1.55", "-9.86888, 106.568, 11.8096, 1.4", "-9.94938, 107.461, 11.683, 1.25", "-10.1131, 108.711, 11.4496, 1.11", "-10.1217, 108.763, 11.4381, 1.11", "-10.3316, 109.846, 11.1881, 0.96", "-10.3424, 109.898, 11.1763, 0.96", "-10.6889, 111.427, 10.8459, 0.96", "-10.7016, 111.488, 10.8331, 0.96", "-11.0363, 113.351, 10.4645, 0.96", "-11.1929, 114.397, 10.2844, 1.11", "-11.2017, 114.468, 10.2737, 1.11", "-11.2602, 115.101, 10.2121, 1.4", "-11.3171, 116.105, 10.1672, 1.4", "-11.3601, 116.989, 10.1702, 1.03", "-11.3995, 118.399, 10.2544, 0.74", "-11.4003, 118.453, 10.2593, 0.74", "-11.4172, 119.748, 10.3942, 0.74", "-11.4144, 120.211, 10.4719, 1.18", "-11.3813, 121.144, 10.6738, 1.18", "-11.3199, 122.056, 10.904, 1.18", "-11.3152, 122.118, 10.9178, 1.18", "-11.2485, 123.304, 11.1208, 0.88", "-11.1835, 124.761, 11.2939, 0.74", "-11.1727, 125.902, 11.3757, 0.74", "-11.1761, 125.957, 11.3755, 0.74", "-11.3567, 127.246, 11.2308, 0.74", "-11.5512, 128.267, 11.0229, 0.74", "-11.5624, 128.318, 11.0077, 0.74", "-11.8097, 129.344, 10.6257, 1.18", "-12.1126, 130.592, 10.1449, 1.69", "-12.314, 131.465, 9.81649, 1.69", "-12.4685, 132.213, 9.55196, 1.69", "-12.6384, 133.188, 9.19246, 1.69", "-12.6476, 133.256, 9.16869, 1.69", "-12.6525, 133.598, 9.06587, 1.69" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-79.0046, 75.4869, 108.074, 0.37", "-84.9282, 78.7778, 114.18, 0.37", "-90.194, 82.3064, 120.743, 0.37", "-94.7265, 85.8743, 127.812, 0.37", "-100.992, 89.5704, 133.33, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-79.0046, 75.4869, 108.074, 0.52", "-81.0761, 78.166, 114.935, 0.37", "-84.8513, 79.4499, 121.443, 0.37", "-90.3903, 80.0973, 126.647, 0.37", "-95.3994, 80.6256, 132.375, 0.37", "-101.08, 80.9939, 137.45, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "53.6715, -28.028, 33.0533, 0.37", "62.1074, -28.4771, 38.1393, 0.37", "69.7102, -29.6318, 44.3144, 0.37", "75.8802, -32.4741, 51.4805, 0.37", "82.588, -36.3154, 57.6524, 0.37", "90.6581, -38.2974, 62.9776, 0.37", "99.6777, -40.0207, 66.5978, 0.37", "108.08, -40.2286, 71.7534, 0.37", "116.672, -41.5972, 76.4057, 0.37", "125.026, -43.7705, 81.1977, 0.37", "133.135, -44.1326, 86.7952, 0.37" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "53.6715, -28.028, 33.0533, 0.52", "59.2722, -36.4661, 39.9173, 0.37", "66.7114, -42.8005, 47.1966, 0.37", "73.3505, -51.073, 53.3004, 0.37", "81.6657, -58.0627, 58.8779, 0.37", "89.8752, -65.3939, 64.1897, 0.37", "96.4524, -73.4254, 70.653, 0.37", "102.881, -80.6176, 78.1236, 0.37", "110.117, -86.6442, 85.8401, 0.37", "116.502, -94.1053, 93.0928, 0.37", "122.376, -103.542, 98.3075, 0.37" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "32.8826, -23.2584, 18.1957, 0.74", "33.7064, -25.402, 12.3391, 0.74", "33.8863, -26.0262, 11.0025, 0.74", "33.9128, -26.1696, 10.7817, 0.74", "34.01, -26.9088, 9.87239, 0.74", "34.0211, -26.9865, 9.81537, 0.74", "34.1391, -27.7289, 9.42618, 0.96", "34.2268, -28.1583, 9.45565, 0.96", "34.5036, -29.2005, 9.6001, 0.96", "34.5294, -29.2804, 9.61468, 0.96", "35.3947, -31.534, 10.1329, 0.81", "35.4332, -31.6195, 10.1582, 0.81", "36.5371, -33.8262, 10.8894, 0.81", "36.9648, -34.6873, 11.1647, 1.11", "37.0013, -34.7604, 11.188, 1.11", "37.135, -35.0522, 11.2706, 1.11", "37.8952, -36.8631, 11.7333, 0.66", "38.4101, -38.1749, 12.0629, 0.66", "39.1627, -40.05, 12.4727, 0.66", "39.1903, -40.1161, 12.4864, 0.66", "39.9002, -41.7671, 12.8019, 0.66", "39.9459, -41.8681, 12.8189, 0.66", "41.0073, -44.1264, 13.1465, 0.66", "42.0341, -46.2163, 13.452, 0.52", "42.0722, -46.2918, 13.4615, 0.52", "42.5408, -47.2138, 13.5559, 0.52", "43.605, -49.3293, 13.7556, 0.52", "44.001, -50.1726, 13.8202, 0.81", "44.4259, -51.1463, 13.867, 0.81", "45.1481, -52.9674, 13.9789, 0.81", "45.2233, -53.1599, 13.9909, 0.81", "45.9902, -55.1648, 14.1235, 0.59", "46.2328, -55.764, 14.1573, 1.11", "46.4965, -56.3552, 14.1887, 1.11", "46.8454, -57.0276, 14.2068, 0.59", "47.6067, -58.379, 14.1971, 0.59", "47.6558, -58.4628, 14.194, 0.59", "48.9213, -60.3663, 14.0004, 0.59", "48.9708, -60.4348, 13.9928, 0.59", "49.607, -61.2768, 13.8855, 0.81", "49.6609, -61.3413, 13.8751, 0.81" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "32.8826, -23.2584, 18.1957, 0.74", "34.18, -22.1527, 18.0533, 0.74", "34.2331, -22.1162, 18.0663, 0.74", "34.7665, -21.9731, 18.5098, 0.74", "34.8651, -21.978, 18.618, 0.74", "35.3578, -22.1218, 19.2382, 0.74", "35.4188, -22.1868, 19.3469, 0.74", "35.7771, -22.8839, 20.213, 0.74", "36.1687, -24.0681, 21.2799, 0.74", "36.3815, -24.7814, 21.8552, 0.74", "36.4151, -24.8955, 21.9426, 0.74", "36.854, -26.1009, 22.8186, 0.74", "36.8758, -26.1515, 22.855, 0.74", "37.4849, -27.2114, 23.5349, 0.66", "38.5632, -28.6035, 24.394, 0.66", "38.6523, -28.697, 24.4521, 0.66", "39.9801, -29.8583, 25.1399, 0.66", "40.0538, -29.9106, 25.1668, 0.66", "41.4462, -30.8229, 25.563, 0.66", "41.5005, -30.859, 25.5741, 0.66", "42.5945, -31.6505, 25.7114, 0.66", "43.2545, -32.1948, 25.7905, 1.03", "44.0581, -32.9936, 25.8716, 1.03", "44.1018, -33.0428, 25.8811, 1.03", "45.4075, -34.6578, 26.2823, 0.74", "46.3311, -35.84, 26.588, 0.74", "47.4933, -37.3228, 26.9642, 0.74", "49.1243, -39.4308, 27.5044, 0.74", "50.4933, -41.1937, 27.9875, 0.74", "51.7096, -42.7257, 28.4272, 0.74", "51.7511, -42.7752, 28.4426, 0.74", "53.2998, -44.5206, 29.0663, 0.74", "53.3445, -44.5648, 29.0868, 0.74", "54.2452, -45.3147, 29.6162, 0.74", "54.2921, -45.35, 29.646, 0.74", "54.6695, -45.6364, 29.922, 0.52", "55.3852, -46.2197, 30.3991, 0.52", "56.3945, -47.1773, 31.0261, 0.52", "57.8207, -48.6294, 31.7817, 0.52", "57.8627, -48.6762, 31.8022, 0.52", "59.2592, -50.321, 32.4451, 0.52", "60.1595, -51.4817, 32.8122, 0.52", "61.1138, -52.8277, 33.0739, 0.52", "61.152, -52.8824, 33.073, 0.52", "61.679, -53.6356, 32.9158, 0.74", "68.1699, -59.6427, 36.2238, 0.74", "75.1986, -64.5048, 40.1638, 0.74", "81.8359, -69.111, 44.9637, 0.74", "87.0228, -75.0497, 50.1119, 0.74", "91.6411, -81.1167, 55.633, 0.74", "97.8834, -85.6796, 60.9632, 0.74", "104.26, -90.4236, 65.9787, 0.74" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.40805, 89.3471, 2.1466, 0.96", "-4.15272, 88.5072, 1.98524, 0.96", "-4.04994, 88.1265, 1.93303, 0.44", "-3.7044, 86.7488, 1.79104, 0.44", "-3.4631, 85.7868, 1.69189, 0.44", "-3.2313, 84.8626, 1.59663, 0.66", "-2.96288, 83.7925, 1.48634, 1.55", "-2.6923, 82.7677, 1.38333, 1.11", "-2.53794, 82.1463, 1.34166, 0.37", "-0.543031, 70.1086, 1.84092, 0.37", "-1.05292, 57.9758, 0.615761, 0.37" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-4.40805, 89.3471, 2.1466, 0.52", "-3.0558, 89.7853, 1.38336, 0.52", "-2.91389, 89.8292, 1.28564, 0.29", "-2.6002, 89.922, 1.06003, 0.29", "-1.96835, 90.1088, 0.605631, 0.29", "-1.87823, 90.1354, 0.540815, 0.29", "-1.15558, 90.3491, 0.0211108, 0.29", "0.0257912, 90.7114, -0.538981, 0.29", "0.130348, 90.7428, -0.592347, 0.29", "9.53554, 94.1229, -4.55093, 0.29", "19.6214, 95.8241, -7.78174, 0.29", "29.0275, 96.5857, -12.8694, 0.29", "38.5667, 95.7306, -17.6787, 0.29", "47.0295, 96.7099, -24.1915, 0.29", "55.4838, 99.2097, -30.3247, 0.29", "64.1061, 101.694, -36.2252, 0.29", "73.8955, 103.14, -40.3606, 0.29", "84.3355, 104.255, -42.5302, 0.29", "94.7027, 106.97, -43.1398, 0.29", "104.268, 111.871, -43.8743, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "44.796, 96.058, 6.41012, 1.33", "44.9102, 97.4659, 6.94987, 1.33", "45.022, 98.3967, 7.26526, 1.33", "45.1214, 99.1221, 7.43816, 1.03", "45.2133, 99.7798, 7.55819, 1.03", "45.4264, 101.253, 7.7841, 0.59", "45.5784, 102.137, 7.89816, 0.59", "45.7044, 102.722, 7.91717, 0.88", "46.0165, 103.749, 7.90964, 0.59", "46.2955, 104.431, 7.80737, 0.44", "46.3299, 104.499, 7.78755, 0.44", "46.9272, 105.512, 7.35582, 0.44", "47.0707, 105.74, 7.24379, 0.44", "47.5267, 106.469, 6.91118, 0.44", "48.4138, 108.012, 6.18159, 0.44", "48.4501, 108.086, 6.14586, 0.44", "48.6877, 108.802, 5.74706, 0.44", "48.719, 108.958, 5.66098, 0.44", "48.8538, 110.059, 5.09764, 0.44", "48.9308, 111.28, 4.5432, 0.74", "48.9602, 111.898, 4.29446, 0.96", "49.1152, 114.164, 3.33818, 1.03", "49.1976, 115.067, 2.94453, 1.03", "49.295, 115.878, 2.58578, 0.37", "49.3767, 116.411, 2.3471, 0.37", "49.405, 116.567, 2.29017, 0.37", "49.5148, 117.193, 2.09636, 0.37", "49.632, 117.876, 1.99296, 0.37", "49.7352, 118.952, 1.83843, 0.37", "49.7355, 119.071, 1.82708, 0.37", "49.6618, 119.615, 1.71264, 0.88", "49.485, 120.384, 1.50836, 0.88", "49.4641, 120.457, 1.48781, 0.88", "49.2725, 121.079, 1.29908, 0.88", "49.2504, 121.162, 1.27025, 0.88", "48.9221, 122.755, 0.594921, 0.66", "48.9015, 122.977, 0.487503, 0.44", "48.9067, 123.646, 0.129907, 0.44", "48.9172, 123.781, 0.0309332, 0.44", "49.0364, 124.401, -0.479841, 1.18", "49.0607, 124.49, -0.554843, 1.18", "49.2712, 125.056, -1.00197, 1.18", "49.2937, 125.117, -1.04567, 1.18", "49.9152, 127.133, -2.12424, 0.59", "50.0226, 127.859, -2.48384, 0.59", "50.0245, 127.931, -2.51521, 0.59", "49.9557, 128.665, -2.7988, 0.59", "49.7965, 129.523, -3.09136, 1.25", "49.4625, 130.932, -3.44413, 1.55", "48.6819, 133.656, -3.88246, 0.74", "48.4795, 134.274, -3.97824, 0.59", "48.1693, 135.174, -4.11361, 0.59", "48.1088, 135.334, -4.15299, 0.59", "47.7183, 136.371, -4.49092, 0.59", "47.3038, 137.512, -4.90612, 0.96", "47.0675, 138.283, -5.19563, 0.96", "47.0485, 138.352, -5.22813, 0.96", "46.5893, 140.272, -6.36515, 0.81", "46.4065, 141.223, -6.99106, 0.59", "46.3942, 141.305, -7.05215, 0.59", "46.2492, 142.597, -8.07669, 0.44", "46.2428, 142.669, -8.13005, 0.44", "46.1741, 143.757, -8.80765, 0.37", "46.1693, 144.788, -9.25063, 0.37", "46.1719, 144.862, -9.27811, 0.37", "46.2697, 145.913, -9.56255, 0.96", "46.4366, 147.011, -9.72365, 1.18", "46.5742, 147.574, -9.77091, 1.18", "46.8031, 148.25, -9.76277, 0.59", "46.914, 148.471, -9.7761, 0.59", "47.4097, 149.264, -9.85269, 0.59", "47.4629, 149.335, -9.86224, 0.59", "48.2127, 150.317, -10.0844, 0.59", "48.3555, 150.511, -10.1363, 0.59", "49.5093, 152.261, -10.8099, 0.59", "49.5887, 152.396, -10.8705, 0.59", "49.9418, 153.059, -11.1978, 0.96", "50.3605, 153.906, -11.6372, 1.18", "50.6297, 154.474, -11.9374, 1.18", "51.3237, 155.865, -12.6615, 0.44", "51.3564, 155.93, -12.6921, 0.44", "51.7198, 156.659, -13.0265, 0.44", "51.7517, 156.726, -13.052, 0.44", "52.2837, 157.856, -13.3885, 0.44", "52.4075, 158.155, -13.4348, 1.33", "52.6108, 158.716, -13.4524, 1.33", "52.956, 159.872, -13.5263, 0.52", "53.1874, 160.895, -13.5948, 0.52", "53.2174, 161.069, -13.6047, 0.52", "53.4615, 163.205, -13.7069, 0.52", "53.5579, 164.439, -13.7503, 0.52", "53.639, 165.816, -13.7696, 1.25", "53.6892, 166.902, -13.7521, 1.62", "53.7238, 167.59, -13.7083, 1.62", "53.7904, 168.695, -13.5892, 0.59", "53.8446, 169.446, -13.4601, 0.44", "53.9673, 170.441, -13.2029, 0.44", "54.0288, 170.782, -13.0882, 0.44", "54.4391, 172.736, -12.4163, 0.44", "54.4631, 172.839, -12.3799, 0.44", "54.749, 174.075, -11.9974, 1.03", "54.964, 175.045, -11.7433, 1.62", "55.1063, 175.922, -11.5699, 1.62", "55.2142, 176.817, -11.452, 0.88", "55.2191, 176.896, -11.4495, 0.88", "55.2906, 178.564, -11.4278, 0.66", "55.2902, 178.655, -11.4359, 0.66", "55.2186, 180.281, -11.7015, 0.59", "55.2054, 180.447, -11.7337, 0.59", "55.0959, 181.649, -11.9642, 0.96", "54.9968, 182.626, -12.1415, 0.96", "54.8383, 184.344, -12.4524, 0.59", "54.8344, 184.422, -12.4674, 0.59", "54.8445, 185.142, -12.6167, 0.52", "54.9332, 186.035, -12.7913, 0.52", "54.9901, 186.377, -12.8462, 0.52", "55.238, 187.551, -12.9908, 0.81", "55.4462, 188.454, -13.0371, 1.33", "55.631, 189.282, -13.0793, 1.33", "55.8843, 190.514, -13.1373, 0.44", "55.9819, 191.185, -13.1557, 0.44", "55.9863, 191.264, -13.153, 0.44", "55.9708, 192.013, -13.1078, 0.44", "55.9635, 192.171, -13.098, 0.44", "55.9263, 192.876, -13.0493, 0.44", "55.9403, 193.326, -13.0142, 0.44", "56.108, 194.481, -12.9677, 0.44", "56.3291, 195.374, -13.0089, 0.74", "56.5461, 195.998, -13.0903, 0.96", "56.5792, 196.081, -13.1054, 0.96", "56.9505, 196.864, -13.2879, 0.96", "57.0221, 197.013, -13.3229, 0.96", "57.4952, 198.041, -13.5355, 0.44", "57.5254, 198.113, -13.5441, 0.44", "57.8563, 198.997, -13.6055, 0.37", "58.0449, 199.498, -13.6153, 0.96", "58.4435, 200.56, -13.5917, 1.03", "58.8619, 201.52, -13.5374, 0.74", "59.1519, 202.113, -13.4776, 0.52", "59.618, 202.931, -13.3965, 0.44", "60.205, 203.805, -13.3124, 0.44", "60.3522, 203.982, -13.3068, 0.44", "61.1908, 204.756, -13.36, 0.44", "61.2539, 204.814, -13.3838, 0.44", "61.7248, 205.332, -13.7186, 0.44", "61.7622, 205.389, -13.7573, 0.44", "62.1491, 206.457, -14.4217, 0.44", "62.1595, 206.526, -14.4569, 0.44", "62.2299, 208.725, -15.5372, 1.11", "62.2434, 209.501, -15.8988, 1.55", "62.2339, 210.482, -16.3216, 1.55", "62.2294, 211.86, -16.8691, 0.66", "62.2157, 213.504, -17.4596, 0.66", "62.2593, 214.905, -17.9289, 0.44", "62.3802, 216.128, -18.278, 0.44", "62.4463, 216.546, -18.4286, 0.44", "62.7112, 217.365, -18.7766, 0.44", "62.7464, 217.429, -18.8056, 0.44", "62.9899, 217.756, -18.9867, 0.88", "63.3169, 218.18, -19.2198, 0.88", "64.0321, 219.186, -19.9125, 0.37", "64.7529, 220.273, -20.6876, 0.37", "64.7921, 220.34, -20.7324, 0.37", "65.3936, 221.443, -21.4205, 1.18", "65.752, 222.152, -21.8313, 1.55", "66.274, 223.275, -22.3939, 0.52", "66.6294, 224.104, -22.7125, 0.52", "66.9294, 224.893, -22.9728, 0.52", "66.9977, 225.068, -23.009, 1.03", "67.0973, 225.308, -23.0294, 1.03", "67.3693, 225.935, -22.9951, 0.52", "67.5682, 226.39, -22.9099, 0.37", "67.8763, 227.098, -22.7494, 0.29", "68.4315, 228.357, -22.4298, 0.29", "68.6557, 228.895, -22.2838, 0.88", "69.1345, 230.144, -21.9823, 0.88", "69.3571, 230.78, -21.8422, 0.52", "69.5386, 231.42, -21.7593, 0.37", "69.5642, 231.529, -21.7569, 0.37", "69.8585, 232.915, -21.8817, 0.37", "70.0785, 234.007, -22.0702, 1.11", "70.2332, 234.788, -22.2756, 1.11", "70.5377, 236.246, -22.7115, 0.37", "70.6951, 236.909, -22.9296, 0.15", "70.9209, 237.674, -23.1946, 0.15", "70.9484, 237.742, -23.2218, 0.15", "71.297, 238.316, -23.4274, 0.15", "71.3687, 238.397, -23.4528, 0.15", "71.8034, 238.735, -23.4966, 0.15", "72.2536, 239.015, -23.516, 0.74", "72.453, 239.126, -23.5179, 0.74", "73.3019, 239.575, -23.514, 0.74", "73.7252, 239.785, -23.5065, 0.74", "74.3307, 240.123, -23.482, 0.22", "74.6848, 240.343, -23.4605, 0.15", "75.2838, 240.795, -23.5003, 0.15", "75.3489, 240.855, -23.513, 0.15", "75.5387, 241.061, -23.5798, 0.81", "76.1174, 241.677, -23.8434, 1.03", "76.5346, 242.108, -24.1034, 1.03", "77.5063, 243.072, -24.7567, 0.37", "77.8053, 243.378, -24.9734, 0.37", "77.8566, 243.437, -25.0166, 0.37", "78.5924, 244.343, -25.7025, 0.37", "79.3624, 245.422, -26.5861, 0.37", "79.6854, 245.919, -26.9846, 0.74", "80.0923, 246.575, -27.4868, 1.33", "80.7677, 247.666, -28.3504, 0.66", "80.8009, 247.72, -28.3961, 0.66", "81.4885, 248.855, -29.384, 0.37", "81.798, 249.333, -29.7837, 0.37", "81.8415, 249.391, -29.8349, 0.37", "82.4782, 250.103, -30.4679, 0.37", "83.2749, 250.907, -31.0976, 0.74", "83.8503, 251.523, -31.4903, 0.74", "84.2583, 251.989, -31.6928, 0.07", "84.4282, 252.257, -31.7624, 0.37", "84.4624, 252.328, -31.771, 0.37", "84.6625, 252.885, -31.7556, 0.37", "84.8824, 253.501, -31.6606, 0.37", "84.9126, 253.573, -31.6496, 0.37", "85.4983, 254.763, -31.4848, 0.37", "85.5375, 254.845, -31.4837, 0.37", "85.8027, 255.373, -31.535, 1.03", "85.8585, 255.476, -31.5579, 1.03", "86.3747, 256.337, -31.8516, 1.03", "86.4085, 256.39, -31.8749, 1.03", "87.1047, 257.434, -32.4839, 0.44", "87.1562, 257.522, -32.5288, 0.44", "87.3801, 257.95, -32.7326, 0.44", "87.5364, 258.313, -32.8568, 0.44", "87.6366, 258.59, -32.919, 0.44", "87.6663, 258.674, -32.9361, 0.44", "87.9884, 259.511, -33.0611, 0.44", "88.0122, 259.586, -33.073, 0.44", "88.2194, 260.297, -33.1722, 0.44", "88.2418, 260.373, -33.18, 0.44", "88.6149, 261.555, -33.2824, 0.74", "88.9043, 262.332, -33.3384, 1.25", "89.3021, 263.241, -33.352, 1.25", "89.5145, 263.727, -33.3247, 0.59", "89.9089, 264.602, -33.2546, 0.59", "89.9416, 264.673, -33.2452, 0.59", "90.3312, 265.506, -33.0808, 0.59", "90.659, 266.197, -32.9453, 0.29", "90.9486, 266.77, -32.8445, 0.29", "91.52, 267.943, -32.6697, 0.29", "92.1434, 269.268, -32.4936, 0.29", "92.1763, 269.339, -32.4861, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "44.796, 96.058, 6.41012, 0.52", "45.2302, 96.2259, 6.39788, 0.52", "45.3804, 96.2676, 6.38002, 0.52", "45.511, 96.3004, 6.36183, 0.52", "45.686, 96.3278, 6.34906, 0.52", "46.6701, 96.451, 6.29444, 0.52", "46.8256, 96.469, 6.28691, 0.52", "47.8931, 96.5831, 6.21611, 0.52", "47.9759, 96.5938, 6.21144, 0.52", "49.3494, 96.799, 6.14448, 0.52", "49.5038, 96.8247, 6.13785, 0.52", "49.6732, 96.8592, 6.13047, 0.96", "49.7444, 96.8761, 6.13361, 0.96", "50.3782, 97.0487, 6.18983, 0.37", "50.4576, 97.0742, 6.19805, 0.37", "51.4016, 97.4402, 6.29017, 0.37", "52.1503, 97.7267, 6.39992, 0.37", "54.3446, 98.5559, 6.78227, 0.37", "54.6034, 98.6496, 6.82827, 0.74", "55.1452, 98.8321, 6.93597, 0.59", "56.5197, 99.2967, 7.23951, 0.44", "57.8304, 99.7708, 7.56327, 0.44", "57.9318, 99.8094, 7.5888, 0.44", "58.8082, 100.094, 7.97302, 0.44", "59.4687, 100.271, 8.32403, 0.81", "59.6012, 100.301, 8.40268, 0.81", "60.3225, 100.442, 8.874, 0.81", "60.3832, 100.454, 8.91347, 0.81", "63.3269, 101.123, 10.9517, 0.37", "64.6496, 101.469, 11.942, 0.37", "64.7881, 101.508, 12.0467, 0.37", "65.3842, 101.688, 12.5022, 0.88", "65.6087, 101.766, 12.692, 1.18", "66.4833, 102.207, 13.4895, 0.44", "66.5472, 102.268, 13.559, 0.44", "66.5974, 102.33, 13.6477, 0.44", "66.8307, 102.669, 14.1422, 0.44", "67.1541, 103.298, 15.0765, 0.59", "67.2884, 103.574, 15.5409, 0.59", "67.4173, 103.78, 16.0144, 0.59", "76.7529, 107.517, 18.9992, 0.59", "85.2717, 111.908, 23.3163, 0.59", "92.6459, 117.981, 27.8137, 0.59", "100.67, 123.448, 31.9101, 0.59", "107.793, 130.223, 35.8104, 0.59" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-73.778, 56.3404, -135.353, 0.37", "-72.8296, 57.141, -135.455, 0.37", "-72.7941, 57.1641, -135.462, 0.37", "-72.0704, 57.6191, -135.599, 0.37", "-71.1619, 58.1832, -135.771, 0.37", "-71.1208, 58.2087, -135.779, 0.37", "-69.3287, 59.3216, -136.118, 0.29", "-65.13, 61.8729, -136.778, 0.29", "-64.7336, 62.1103, -136.843, 1.18", "-64.6971, 62.1317, -136.85, 1.18" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-73.778, 56.3404, -135.353, 0.52", "-74.9273, 57.6144, -136.997, 0.52", "-74.9773, 57.6699, -137.077, 0.52", "-76.7174, 59.5894, -139.718, 0.37", "-77.7247, 60.6977, -141.213, 0.37", "-78.1303, 61.1473, -141.828, 0.37", "-79.614, 62.8097, -144.101, 0.37", "-81.0623, 64.4867, -146.538, 0.37", "-82.0512, 65.6424, -148.121, 0.37", "-82.0802, 65.6763, -148.164, 0.37", "-82.9289, 66.7187, -149.591, 0.59", "-83.2374, 67.1197, -150.166, 0.59", "-84.4284, 68.7154, -152.462, 0.37", "-85.1537, 69.6586, -153.79, 0.37", "-85.1842, 69.6934, -153.846, 0.37", "-86.4652, 70.9472, -155.892, 0.37", "-86.5451, 71.011, -156.008, 0.37", "-87.0277, 71.3249, -156.687, 0.37", "-87.1377, 71.3782, -156.812, 0.37", "-88.1627, 71.8424, -157.922, 0.37", "-88.2617, 71.8929, -158.029, 0.37", "-90.1174, 72.898, -159.92, 0.37", "-90.2286, 72.9736, -160.048, 0.37", "-91.1657, 73.7346, -161.143, 0.37", "-91.288, 73.8487, -161.274, 0.37", "-92.6558, 75.2656, -162.659, 0.37", "-92.6944, 75.3095, -162.702, 0.37", "-94.3884, 77.3393, -164.644, 0.37", "-95.0604, 78.191, -165.463, 0.37", "-96.006, 79.4533, -166.688, 0.37", "-96.0746, 79.547, -166.775, 0.37", "-98.2212, 82.578, -169.349, 0.15", "-98.2537, 82.6266, -169.392, 0.15", "-98.6418, 83.326, -170.112, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_150",
    "id" : "dend_150",
    "points3d" : [ "-41.1554, -38.9598, -45.916, 0.29", "-41.1625, -40.1106, -47.1685, 0.29", "-41.1727, -40.1494, -47.2317, 0.29", "-41.501, -40.7923, -48.399, 0.29", "-41.5206, -40.8266, -48.4624, 0.29", "-42.1096, -41.9137, -50.342, 0.29", "-42.1354, -41.9621, -50.4239, 0.29", "-43.255, -44.1048, -53.5732, 0.29", "-44.4983, -46.5304, -56.8336, 0.29", "-44.5652, -46.6616, -56.9946, 0.29", "-45.9536, -49.4306, -60.188, 0.29", "-45.9728, -49.4726, -60.2329, 0.29", "-47.5899, -53.3569, -64.1722, 0.29", "-47.6261, -53.4527, -64.2673, 0.29", "-48.7679, -56.6289, -67.4883, 0.29", "-48.7819, -56.6705, -67.5355, 0.29", "-50.1765, -61.0258, -72.9854, 0.29", "-50.2003, -61.1001, -73.0876, 0.29", "-50.7989, -62.9782, -75.9447, 0.29", "-50.8156, -63.0261, -76.0138, 0.29", "-52.2924, -67.0357, -81.6091, 0.29", "-52.3221, -67.1139, -81.707, 0.29", "-53.3346, -69.5606, -84.6541, 0.29", "-53.7514, -70.5584, -85.7709, 0.29", "-54.7503, -72.9043, -88.0139, 0.29", "-54.7751, -72.9587, -88.0598, 0.29", "-55.8842, -74.9675, -88.9991, 0.29" ],
    "parent" : "dend_148",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_149",
    "id" : "dend_149",
    "points3d" : [ "-41.1554, -38.9598, -45.916, 0.29", "-41.3692, -38.6877, -46.2991, 0.29", "-41.9222, -38.1265, -47.1619, 0.29", "-42.5972, -37.506, -48.1301, 0.29", "-43.442, -36.7629, -49.1778, 0.29", "-43.5904, -36.6423, -49.3733, 0.29", "-43.7926, -36.4853, -49.6413, 0.29", "-44.6812, -35.8259, -50.8467, 0.29", "-44.8203, -35.7387, -51.0493, 0.29", "-45.3908, -35.4227, -51.8671, 0.29", "-46.7485, -34.7073, -53.872, 0.29", "-46.8616, -34.6452, -54.0671, 0.29", "-46.999, -34.5642, -54.3209, 0.29", "-47.8861, -34.0243, -56.4538, 0.29", "-48.4236, -33.6935, -57.949, 0.44", "-48.445, -33.6801, -58.0142, 0.44", "-48.9959, -33.3108, -59.7234, 0.29", "-49.2832, -33.1128, -60.5948, 0.29", "-50.7662, -32.0664, -65.0011, 0.29", "-50.7895, -32.0505, -65.0651, 0.29", "-50.9586, -31.9472, -65.482, 0.22", "-51.1037, -31.8679, -65.7733, 0.29", "-51.5865, -31.6552, -66.4524, 0.29", "-51.676, -31.6217, -66.5543, 0.29", "-52.1966, -31.4371, -66.8808, 0.29", "-52.7405, -31.245, -67.1954, 0.29", "-54.6044, -30.6622, -68.2127, 0.29", "-55.5759, -30.386, -68.7142, 0.29", "-55.9042, -30.3042, -68.8928, 0.29", "-56.9065, -30.0569, -69.394, 0.29", "-58.0176, -29.7654, -69.9758, 0.29", "-58.5616, -29.6117, -70.2524, 0.29", "-58.7676, -29.5543, -70.3362, 0.29", "-59.881, -29.2447, -70.7959, 0.29", "-61.203, -28.8783, -71.2635, 0.29", "-62.616, -28.4925, -71.7298, 0.29", "-63.5421, -28.2232, -72.1343, 0.29", "-65.1547, -27.7613, -72.9123, 0.29", "-65.273, -27.733, -72.9813, 0.29", "-67.4363, -27.3393, -74.2845, 0.29", "-67.6201, -27.3171, -74.4023, 0.29", "-70.2751, -27.1164, -76.1127, 0.29", "-71.2878, -27.0652, -76.789, 0.29", "-73.348, -26.9529, -78.0781, 0.29", "-75.153, -26.8563, -79.0582, 0.29", "-75.8305, -26.8233, -79.3678, 0.29", "-76.2541, -26.8024, -79.4953, 0.29", "-77.5171, -26.738, -79.7066, 0.29", "-80.0775, -26.5653, -79.9875, 0.29", "-81.7531, -26.4344, -80.0759, 0.29", "-82.7156, -26.3583, -80.1792, 0.29", "-85.5775, -26.133, -80.5993, 0.29", "-85.7927, -26.1172, -80.6392, 0.29", "-88.3826, -25.9278, -81.2139, 0.29", "-89.0868, -25.8521, -81.4398, 0.29", "-91.4147, -25.4954, -82.3802, 0.29", "-91.8712, -25.3937, -82.5965, 0.29", "-92.705, -25.1467, -83.0484, 0.29", "-94.3758, -24.6081, -83.9537, 0.29", "-96.5838, -23.7936, -85.1539, 0.29", "-96.6436, -23.7699, -85.1816, 0.29", "-98.2693, -23.0752, -85.709, 0.29", "-98.6576, -22.9009, -85.8424, 0.29", "-98.9772, -22.75, -85.9534, 0.29", "-99.4234, -22.5371, -86.1043, 0.29", "-100.078, -22.2429, -86.2679, 0.29", "-101.095, -21.7906, -86.5599, 0.29", "-102.633, -21.1275, -87.0696, 0.22", "-102.694, -21.1009, -87.0902, 0.22", "-102.783, -21.0677, -87.1172, 0.29", "-102.931, -21.0312, -87.1542, 0.29", "-103.461, -20.9568, -87.2552, 0.29", "-104.394, -20.9756, -87.3329, 0.29", "-104.474, -20.9828, -87.333, 0.29", "-105.64, -21.1416, -87.361, 0.29", "-106.421, -21.2675, -87.3868, 0.29", "-106.489, -21.2809, -87.3896, 0.29", "-108.35, -21.6902, -87.4812, 0.29", "-108.428, -21.7065, -87.4909, 0.29", "-110.323, -22.0573, -87.8239, 0.29", "-110.759, -22.1154, -87.9159, 0.29", "-111.324, -22.1457, -88.0808, 0.29", "-111.747, -22.1423, -88.2241, 0.29", "-113.918, -22.0003, -89.0139, 0.29", "-114.011, -21.9918, -89.0477, 0.29", "-116.151, -21.7666, -89.8298, 0.29", "-117.793, -21.5962, -90.403, 0.29", "-118.586, -21.4803, -90.6441, 0.29", "-120.201, -21.2078, -91.0534, 0.29", "-120.273, -21.1906, -91.0827, 0.29", "-121.084, -20.9509, -91.5842, 0.29", "-121.258, -20.8928, -91.7292, 0.29", "-122.817, -20.3537, -93.1834, 0.29", "-122.866, -20.3358, -93.2304, 0.29", "-126.857, -18.7651, -97.2784, 0.29", "-128.04, -18.3206, -98.3965, 0.29", "-129.261, -17.8744, -99.5187, 0.29", "-129.424, -17.8182, -99.6718, 0.29", "-130.911, -17.3697, -101.111, 0.29", "-130.956, -17.357, -101.148, 0.29", "-133.134, -16.8931, -101.899, 0.29", "-133.295, -16.8633, -101.923, 0.29" ],
    "parent" : "dend_148",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_143",
    "id" : "dend_143",
    "points3d" : [ "-12.4856, -23.3502, -8.32393, 0.66", "-13.2921, -24.8141, -6.58672, 0.66", "-13.6023, -25.2858, -5.83618, 0.66", "-13.6646, -25.3584, -5.71069, 0.66", "-14.3385, -26.0598, -4.44551, 0.59", "-14.7738, -26.4603, -3.67206, 0.59", "-15.6692, -27.2347, -2.20023, 0.59", "-16.9262, -28.2318, -0.376286, 0.59", "-17.5722, -28.7003, 0.609093, 0.59", "-17.6018, -28.7196, 0.653864, 0.59", "-18.1711, -29.0615, 1.52325, 0.59", "-18.6541, -29.3392, 2.27469, 0.59", "-18.6974, -29.3785, 2.35726, 0.59", "-18.8536, -30.3631, 3.64266, 0.59", "-18.8444, -30.4063, 3.69315, 0.59", "-18.6953, -31.0602, 4.43673, 0.59", "-18.6882, -31.1066, 4.48481, 0.59", "-18.6423, -32.0161, 5.42725, 0.59", "-18.7851, -32.6714, 6.03956, 0.59", "-18.873, -32.8289, 6.16704, 0.59", "-19.7158, -33.8959, 6.9472, 0.74", "-20.4785, -34.7213, 7.45354, 0.74", "-20.5283, -34.7739, 7.47891, 0.74", "-20.9702, -35.2549, 7.63142, 0.44", "-21.012, -35.3061, 7.64388, 0.44", "-21.4523, -36.1313, 7.81403, 0.44", "-21.6778, -36.8644, 7.92943, 0.59", "-21.7024, -37.1284, 8.02278, 0.59", "-21.6991, -37.8909, 8.40135, 0.59", "-21.6783, -38.0123, 8.50227, 0.59", "-21.385, -39.0144, 9.56662, 0.44", "-21.3524, -39.1044, 9.67378, 0.44", "-20.9765, -40.4466, 11.223, 0.44", "-20.9667, -40.5044, 11.2891, 0.44", "-20.8361, -41.8839, 12.8629, 0.88", "-20.8034, -42.3445, 13.3814, 0.88", "-20.782, -43.0266, 14.116, 0.59", "-20.8554, -44.393, 15.4472, 0.59", "-21.0472, -45.3555, 16.1898, 0.96", "-21.0677, -45.4355, 16.2447, 0.96" ],
    "parent" : "dend_140",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_141",
    "id" : "dend_141",
    "points3d" : [ "-12.4856, -23.3502, -8.32393, 1.25", "-12.5152, -24.6536, -8.18979, 1.25", "-12.5243, -24.882, -8.16715, 1.25", "-12.5827, -26.3902, -8.04466, 1.25", "-12.6213, -27.9491, -8.01888, 1.25", "-12.6241, -28.0631, -8.01959, 1.25", "-12.4832, -29.6332, -8.17, 1.11", "-12.4659, -29.7307, -8.18045, 1.11", "-12.0086, -31.7459, -8.4139, 0.96", "-11.2751, -34.3176, -8.78107, 0.88", "-11.2384, -34.4239, -8.7972, 0.88", "-9.42268, -39.0887, -9.51866, 0.88", "-8.27087, -41.5839, -9.89678, 0.88", "-8.22639, -41.6721, -9.906, 0.88", "-7.47956, -43.0124, -9.98308, 1.33", "-6.55327, -44.607, -9.96068, 1.33", "-6.48941, -44.7315, -9.95012, 1.33", "-5.38501, -47.287, -9.48541, 1.33", "-4.74941, -49.1428, -9.23085, 0.96", "-4.64046, -49.5373, -9.17995, 0.96", "-4.27676, -51.3373, -8.96194, 0.96", "-3.95804, -53.92, -8.74071, 0.96", "-3.95129, -54.0336, -8.73577, 0.96", "-4.0347, -57.3773, -8.77944, 0.96", "-4.041, -57.491, -8.78555, 0.96", "-4.13262, -58.6523, -8.8455, 1.69", "-4.26031, -59.9274, -8.89044, 1.69", "-4.44128, -61.8111, -8.91907, 1.4", "-4.55173, -63.4478, -8.96077, 0.88", "-4.59862, -65.2714, -9.00572, 0.66", "-4.5849, -67.6719, -9.09354, 0.96", "-4.53261, -69.0712, -9.15754, 1.03", "-4.39905, -70.9323, -9.26469, 1.11", "-4.12956, -73.8108, -9.46599, 1.11", "-3.929, -75.7508, -9.61391, 1.11", "-3.91407, -75.9106, -9.62794, 1.11", "-3.81381, -77.1468, -9.73139, 1.11", "-3.80679, -77.2602, -9.73967, 1.11", "-3.71469, -80.1807, -9.8372, 1.11", "-3.69371, -82.788, -9.8006, 0.74", "-3.68383, -84.257, -9.81144, 1.11", "-3.68143, -84.4418, -9.79983, 1.11", "-3.69489, -85.6291, -9.66021, 1.33", "-3.75063, -87.5826, -9.34584, 1.33", "-3.83031, -89.0553, -9.02566, 0.96", "-3.94751, -90.187, -8.74235, 0.88", "-4.45083, -94.1766, -7.71365, 0.88", "-4.68049, -95.9802, -7.26042, 0.88", "-4.75418, -96.4937, -7.12756, 0.88", "-4.94263, -97.8291, -6.79054, 0.88", "-5.09562, -99.2883, -6.34695, 0.88", "-5.11575, -100.353, -6.0095, 0.88", "-5.03711, -101.672, -5.65224, 0.88", "-5.01758, -101.89, -5.58573, 0.88", "-4.91917, -103.332, -5.25851, 0.88", "-4.76719, -106.564, -4.79084, 0.52", "-4.72588, -108.736, -4.70326, 0.52", "-4.71203, -109.443, -4.73092, 1.25", "-4.70882, -111.114, -4.84911, 1.55", "-4.71965, -114.241, -5.20409, 1.55", "-4.74967, -115.977, -5.53135, 1.18", "-4.83444, -118.844, -6.37329, 0.74", "-4.9204, -123.178, -7.72531, 0.74" ],
    "parent" : "dend_140",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_126",
    "id" : "dend_126",
    "points3d" : [ "33.6919, -51.8213, 35.8513, 0.22", "33.4732, -52.0467, 35.8646, 0.22", "33.1167, -52.4141, 35.8862, 0.22", "32.9493, -52.5866, 35.8963, 0.22", "32.0311, -53.5329, 35.952, 0.22", "26.0577, -60.5782, 35.6249, 0.22", "20.6637, -68.105, 35.6114, 0.22", "15.398, -75.6755, 34.7159, 0.22", "11.8555, -83.9736, 32.439, 0.22", "7.65937, -91.6098, 29.2462, 0.22", "4.81209, -99.7101, 25.6587, 0.22", "0.847569, -107.422, 22.3407, 0.22", "-4.36774, -114.45, 19.3378, 0.22", "-9.20815, -121.361, 15.539, 0.22", "-13.2774, -129.157, 12.5582, 0.22", "-16.2186, -137.403, 9.39266, 0.22", "-18.9156, -145.662, 6.04206, 0.22" ],
    "parent" : "dend_122",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_123",
    "id" : "dend_123",
    "points3d" : [ "33.6919, -51.8213, 35.8513, 0.44", "33.9255, -52.2466, 35.8541, 0.44", "34.8545, -53.9384, 35.865, 0.44", "35.2834, -54.7194, 35.87, 0.22", "35.3363, -54.8157, 35.8706, 0.22", "40.7706, -67.1424, 33.1162, 0.22", "45.6102, -79.2674, 28.8162, 0.22", "51.0339, -91.7455, 26.8099, 0.22", "58.2795, -103.096, 24.1936, 0.22", "63.0381, -115.922, 22.6925, 0.22", "68.5688, -128.373, 20.8257, 0.22", "75.5007, -140.202, 20.1474, 0.22", "79.6855, -153.312, 19.8843, 0.22", "84.609, -166.15, 20.2131, 0.22", "87.1884, -179.599, 18.7143, 0.22" ],
    "parent" : "dend_122",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_119",
    "id" : "dend_119",
    "points3d" : [ "15.7517, 119.431, 21.1219, 0.81", "15.4772, 118.26, 21.3987, 0.81", "15.4401, 118.109, 21.4329, 0.81", "15.2057, 117.194, 21.6765, 0.81", "14.9808, 116.316, 21.9103, 0.59", "14.2676, 113.532, 22.6515, 0.44", "14.2024, 113.278, 22.7192, 0.44", "14.0527, 112.777, 22.8597, 1.11", "13.7824, 111.911, 23.1004, 1.11", "12.2777, 102.71, 23.901, 1.11", "12.4582, 93.3546, 24.1581, 1.11" ],
    "parent" : "dend_113",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_114",
    "id" : "dend_114",
    "points3d" : [ "15.7517, 119.431, 21.1219, 1.25", "16.1888, 120.208, 20.9134, 1.25", "16.2548, 120.354, 20.8538, 1.25", "16.6114, 121.202, 20.4796, 0.88", "16.6392, 121.269, 20.4477, 0.88", "17.0661, 122.349, 19.9426, 0.59", "17.6114, 123.789, 19.2862, 0.52", "18.0804, 125.104, 18.6888, 0.52", "18.1085, 125.183, 18.6548, 0.52", "18.3106, 125.796, 18.3937, 0.88", "18.5455, 126.57, 18.1321, 0.88", "18.6716, 127.047, 18.012, 0.88", "19.069, 128.821, 17.7221, 0.66", "19.2927, 130.002, 17.571, 0.52", "19.5081, 131.376, 17.4019, 0.66", "19.7609, 133.128, 17.2018, 0.66", "19.953, 134.362, 17.0622, 0.66", "20.1866, 135.837, 16.9004, 0.66", "20.3762, 137.077, 16.8178, 0.66", "20.5056, 137.822, 16.7936, 0.44", "20.7352, 138.871, 16.8015, 0.44", "20.9799, 139.813, 16.806, 0.44", "21.0288, 139.977, 16.8138, 0.44", "21.5291, 141.658, 17.0638, 0.66", "21.5493, 141.744, 17.0833, 0.66", "21.6342, 142.477, 17.2586, 1.62", "21.6176, 143.455, 17.4831, 1.92", "21.6092, 143.522, 17.4962, 1.92", "21.3507, 144.902, 17.7028, 0.88", "21.1076, 145.895, 17.763, 0.44", "20.8851, 146.757, 17.797, 0.44", "20.8682, 146.835, 17.7967, 0.44", "20.8215, 147.393, 17.7358, 0.44", "20.8233, 147.472, 17.7285, 0.44", "20.9432, 148.576, 17.6242, 0.44", "20.9829, 148.823, 17.5959, 0.44", "21.2547, 150.5, 17.3877, 0.44", "21.5066, 152.297, 17.1399, 0.44", "21.7083, 154.158, 16.8631, 0.44", "21.795, 155.431, 16.6621, 0.44", "21.7862, 156.64, 16.4585, 0.44", "21.7027, 157.568, 16.2551, 0.44", "21.5904, 158.08, 16.1091, 0.44", "21.3601, 158.788, 15.8639, 0.44", "21.3097, 158.952, 15.797, 0.44", "21.0375, 160.047, 15.3888, 0.44", "20.8293, 161.391, 14.9886, 0.44", "20.8197, 161.507, 14.9559, 0.44", "20.7773, 162.889, 14.6064, 1.33", "20.7966, 164.42, 14.2716, 1.62", "20.8526, 165.807, 14.0072, 0.59", "20.9649, 167.171, 13.8394, 0.59", "20.9714, 167.24, 13.8357, 0.59", "21.1394, 168.649, 13.8067, 0.59", "21.3675, 170.31, 13.844, 0.59", "21.3793, 170.389, 13.8505, 0.59", "21.614, 171.708, 13.9609, 0.59", "21.6299, 171.786, 13.9611, 0.59", "22.0077, 173.437, 13.8628, 0.59", "22.0347, 173.538, 13.8506, 0.59", "22.5473, 175.208, 13.5537, 0.59", "22.9905, 176.375, 13.2974, 1.25", "23.6066, 177.792, 12.9125, 1.92", "23.8412, 178.257, 12.7656, 1.77", "24.2805, 179.026, 12.4849, 1.11", "24.9357, 180.101, 12.1111, 0.29", "25.7662, 181.275, 11.6794, 0.29", "25.8591, 181.399, 11.6439, 0.29", "26.5088, 182.228, 11.4563, 0.74", "27.0159, 182.871, 11.2968, 1.11", "27.6439, 183.657, 11.069, 0.81" ],
    "parent" : "dend_113",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_110",
    "id" : "dend_110",
    "points3d" : [ "65.2006, 8.65773, 11.6942, 0.44", "65.3142, 8.63801, 11.6476, 0.44", "65.6237, 8.57923, 11.5888, 0.44", "66.704, 8.32427, 11.4645, 0.44", "66.8627, 8.30038, 11.4512, 0.44", "67.8465, 8.15231, 11.3693, 0.44", "67.9206, 8.14117, 11.3631, 0.44", "69.2016, 7.94363, 11.2916, 0.52", "70.2462, 7.78681, 11.2908, 0.52", "71.2466, 7.64197, 11.3922, 0.52", "81.4701, 4.37991, 10.7032, 0.52", "91.8139, 1.6028, 9.80353, 0.52", "101.488, -3.13107, 9.40826, 0.52", "111.192, -7.63692, 10.6069, 0.52", "121.37, -11.106, 10.4297, 0.52", "132.007, -12.554, 10.3626, 0.52", "142.36, -13.6442, 7.7369, 0.52", "152.507, -12.9945, 4.30202, 0.52" ],
    "parent" : "dend_104",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "65.2006, 8.65773, 11.6942, 0.52", "65.4872, 8.7597, 11.5891, 0.52", "65.8813, 8.89997, 11.4446, 0.37", "66.2179, 9.01972, 11.3212, 0.37", "66.373, 9.07492, 11.2643, 0.37", "67.0671, 9.32192, 11.0098, 0.37", "67.2619, 9.39125, 10.9383, 0.37" ],
    "parent" : "dend_104",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "54.7555, -0.0846875, -0.67034, 0.29", "61.2707, -7.10564, -8.32517, 0.29", "66.7771, -16.1274, -14.6335, 0.29", "73.6388, -25.3443, -18.9707, 0.29", "80.2128, -34.9885, -22.814, 0.29", "87.1823, -44.7495, -25.4056, 0.29", "93.2442, -55.4024, -25.668, 0.29", "100.488, -65.1464, -24.3973, 0.29", "108.186, -74.4904, -22.9439, 0.29", "115.16, -84.4687, -24.3765, 0.29", "120.726, -95.3489, -25.6229, 0.29", "128.319, -104.497, -28.6056, 0.29" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "54.7555, -0.0846875, -0.67034, 0.22", "58.3831, -4.22007, -4.87578, 0.29", "62.3889, -8.82242, -8.15137, 0.29", "66.3138, -14.0574, -10.4346, 0.29", "69.8055, -19.7178, -12.4147, 0.29", "73.3681, -24.7745, -15.5581, 0.29", "76.2296, -29.4222, -19.8503, 0.29", "78.9133, -35.0099, -23.0103, 0.29", "82.9397, -40.1974, -25.215, 0.29", "87.0392, -45.5774, -26.6798, 0.29", "91.2722, -50.4526, -29.1736, 0.29", "95.9521, -55.2672, -30.7856, 0.29", "100.716, -59.8471, -32.784, 0.29" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-31.2288, -1.54806, 3.38308, 1.25", "-33.6369, -0.00233448, 11.0558, 1.25", "-34.0146, 0.227689, 11.861, 1.03", "-34.4768, 0.499937, 12.615, 1.25", "-35.1434, 0.894263, 13.4467, 1.25", "-35.2638, 0.965833, 13.5714, 1.25", "-36.1071, 1.48498, 14.4172, 1.03", "-37.3153, 2.22121, 14.7169, 1.03", "-37.408, 2.28837, 14.7522, 1.03", "-38.0289, 2.82988, 15.0918, 1.03", "-38.0825, 2.8913, 15.1328, 1.03", "-39.0564, 4.43255, 16.3298, 1.4", "-39.0719, 4.46952, 16.3623, 1.4", "-39.3729, 5.41807, 17.2241, 1.4", "-39.4028, 5.51633, 17.3025, 1.4", "-39.568, 6.13753, 17.7135, 1.4", "-39.9228, 7.55339, 18.3873, 1.03", "-39.9344, 7.61092, 18.4031, 1.03", "-40.0745, 8.35615, 18.5801, 1.03", "-40.2453, 9.49399, 18.8112, 0.96", "-40.3416, 10.3688, 18.9387, 1.11", "-40.4051, 11.3828, 19.0293, 1.11", "-40.4207, 12.8052, 19.0921, 0.81", "-40.4189, 12.8654, 19.1011, 0.81", "-40.2894, 14.6968, 19.5353, 0.74", "-40.1547, 16.0642, 20.0537, 0.88", "-40.0266, 17.263, 20.6638, 0.88", "-39.9622, 17.8771, 21.0502, 0.88", "-39.7343, 20.2362, 22.8251, 0.88", "-39.7301, 20.2823, 22.8639, 0.88", "-39.6562, 21.4609, 24.031, 1.11", "-39.6536, 21.5491, 24.125, 1.11", "-39.67, 22.0929, 24.6836, 1.03", "-39.6733, 22.1336, 24.7154, 1.03", "-39.7655, 23.1754, 25.2013, 0.52", "-39.8263, 23.8607, 25.4692, 0.74", "-39.922, 24.9035, 25.7799, 0.74", "-39.9298, 24.9916, 25.8065, 0.74", "-40.0017, 25.785, 26.0309, 0.74", "-40.0081, 25.8518, 26.0488, 0.74", "-40.0879, 26.5899, 26.2092, 0.74", "-40.097, 26.6803, 26.2264, 0.74", "-40.1713, 27.2446, 26.284, 1.18", "-40.2935, 28.2065, 26.3942, 1.77" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-31.2288, -1.54806, 3.38308, 0.37", "-31.2333, -0.919701, 9.78919, 0.37", "-31.2334, -0.916328, 9.82358, 0.48" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-31.2288, -1.54806, 3.38308, 1.77", "-32.6158, -4.18126, 3.11949, 1.77", "-32.9404, -4.85373, 3.04805, 1.03", "-33.9246, -6.73121, 2.74126, 0.88", "-33.9573, -6.78882, 2.72987, 0.88", "-34.5929, -7.76975, 2.44789, 0.88", "-35.3565, -8.80443, 2.09111, 0.88", "-36.0913, -9.65104, 1.61478, 0.81", "-37.1338, -10.6307, 0.963673, 0.81", "-37.72, -11.0628, 0.612783, 1.25", "-38.7157, -11.6489, -0.300769, 0.96", "-39.1528, -11.8339, -0.842618, 0.81", "-39.7965, -12.0294, -1.78199, 1.11", "-40.1561, -12.1135, -2.36878, 1.11", "-40.5435, -12.2131, -3.02582, 1.11", "-42.4535, -12.81, -6.34291, 1.11", "-43.0576, -13.084, -7.38858, 1.11", "-43.7205, -13.455, -8.53635, 0.74", "-43.7835, -13.5008, -8.64221, 0.74", "-44.5958, -14.2284, -9.88079, 0.66", "-44.6274, -14.2644, -9.91184, 0.66", "-45.2517, -15.3367, -9.93672, 0.66", "-45.276, -15.3996, -9.93302, 0.66", "-45.6055, -16.6311, -9.83397, 1.03", "-45.9475, -18.2586, -9.74801, 1.4", "-46.1563, -19.6192, -9.81094, 1.4", "-46.1681, -19.6754, -9.81904, 1.4", "-46.6955, -21.7894, -10.3144, 1.4", "-46.7121, -21.8411, -10.334, 1.4", "-47.038, -22.6649, -10.752, 1.03", "-47.5244, -23.8014, -11.4917, 0.59", "-48.0462, -24.9229, -12.2672, 0.59", "-48.0687, -24.9667, -12.2966, 0.59", "-48.6947, -26.071, -12.9939, 0.88", "-49.1747, -26.8404, -13.4982, 1.03", "-49.8079, -27.7651, -14.1421, 0.81", "-50.2355, -28.3169, -14.5628, 0.59", "-50.8988, -29.0157, -15.2431, 0.52", "-50.933, -29.0414, -15.2806, 0.52", "-51.5389, -29.2077, -15.989, 0.52", "-51.5799, -29.2043, -16.0408, 0.52", "-52.2605, -29.0297, -16.9097, 0.52", "-52.6351, -28.8911, -17.4419, 0.74", "-53.3504, -28.4876, -18.6198, 0.96", "-53.5258, -28.3694, -18.9789, 0.96", "-53.6668, -28.5043, -19.7505, 0.96", "-53.8004, -28.7241, -20.5448, 0.96", "-53.8112, -28.7457, -20.6064, 0.96", "-54.1091, -29.3811, -22.2812, 0.96", "-54.1203, -29.4037, -22.3423, 0.96", "-55.4776, -31.9485, -29.7035, 0.96", "-55.5992, -32.1367, -30.3229, 0.74", "-55.7316, -32.3028, -30.9426, 0.59", "-55.7446, -32.3158, -30.9962, 0.59", "-56.2006, -32.6801, -32.6993, 0.59", "-56.2628, -32.7173, -32.879, 0.59", "-56.9681, -32.7715, -33.236, 0.59", "-57.1549, -32.7817, -33.2863, 0.59", "-58.0558, -32.9192, -33.353, 0.59", "-58.1195, -32.936, -33.3476, 0.59", "-58.7998, -33.2284, -33.2326, 0.74", "-59.7676, -33.8539, -33.3384, 0.44", "-59.8384, -33.9123, -33.3636, 0.44", "-60.4701, -34.453, -33.7449, 0.44", "-60.5157, -34.4893, -33.7768, 0.44", "-61.231, -34.9847, -34.3453, 0.88", "-62.2605, -35.6275, -35.1962, 0.88", "-62.8813, -35.9769, -35.7142, 0.88", "-63.7582, -36.4625, -36.4189, 0.52", "-64.5769, -36.8987, -37.0454, 0.52", "-65.4536, -37.3659, -37.6523, 0.52", "-66.2446, -37.7718, -38.1201, 0.52", "-66.2907, -37.7968, -38.1421, 0.52", "-66.723, -38.0566, -38.314, 0.88", "-66.7743, -38.0953, -38.3312, 0.88", "-67.3263, -38.7543, -38.928, 0.88", "-67.3538, -38.8018, -38.9807, 0.88", "-67.5082, -39.0946, -39.3191, 0.66", "-67.778, -39.6168, -39.9268, 0.66", "-68.168, -40.3273, -40.7822, 0.44", "-69.2588, -42.287, -43.2463, 0.44", "-69.4119, -42.5032, -43.6556, 1.03", "-69.9792, -43.1504, -45.0583, 1.03", "-70.0037, -43.1746, -45.1148, 1.03", "-70.332, -43.4674, -45.8346, 1.03", "-70.3595, -43.4922, -45.8895, 1.03", "-71.9573, -45.1344, -48.7816, 1.03", "-72.3726, -45.6258, -49.5577, 0.66", "-72.9808, -46.3909, -50.6877, 0.59", "-73.0043, -46.4217, -50.7295, 0.59", "-73.6555, -47.2868, -51.8333, 0.59", "-74.2571, -48.0311, -52.6628, 0.59", "-74.8619, -48.7481, -53.243, 0.29", "-75.3177, -49.2218, -53.6515, 0.29", "-75.4157, -49.3117, -53.7277, 0.29", "-76.5589, -50.2671, -54.5929, 0.96", "-77.0031, -50.5816, -54.8973, 0.96", "-77.058, -50.6176, -54.9352, 0.96", "-77.6075, -51.0069, -55.2703, 0.44", "-78.4074, -51.5948, -55.6658, 0.22", "-78.6744, -51.7893, -55.7613, 0.59", "-79.3046, -52.259, -55.9139, 0.59", "-79.7254, -52.5995, -56.0801, 0.59", "-80.0406, -52.8792, -56.2265, 0.44", "-80.8376, -53.5824, -56.6023, 0.44", "-80.9929, -53.7206, -56.6822, 0.44", "-81.7714, -54.4408, -57.1096, 0.44", "-82.8244, -55.542, -57.8407, 2.06", "-83.3107, -56.1431, -58.2577, 2.06" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-35.9089, -16.6405, -0.250884, 0.81", "-36.1062, -16.5437, -0.182668, 0.81", "-36.4056, -16.3969, -0.0791599, 0.37", "-36.7306, -16.2376, 0.0331721, 0.37", "-37.219, -15.9981, 0.202003, 0.37", "-37.6532, -15.7852, 0.352104, 0.37", "-42.5516, -13.843, 1.80778, 0.37", "-47.2618, -12.6187, 4.27977, 0.37", "-51.6907, -10.8687, 6.95425, 0.37" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-35.9089, -16.6405, -0.250884, 1.11", "-36.0733, -16.755, -0.202004, 1.11", "-37.1869, -17.525, 0.0727388, 1.11", "-37.2835, -17.5927, 0.0896054, 1.11", "-38.8154, -18.713, 0.296011, 1.11", "-39.8721, -19.5011, 0.41932, 1.11", "-40.8675, -20.298, 0.523301, 1.11", "-40.916, -20.3421, 0.526328, 1.11", "-41.6331, -21.1198, 0.539878, 1.11", "-42.2872, -21.9591, 0.524224, 1.11", "-42.3174, -22.0065, 0.520173, 1.11", "-42.9317, -22.9813, 0.497542, 0.88", "-43.6888, -24.0783, 0.553217, 0.74", "-44.2757, -24.8125, 0.636248, 0.74", "-45.0354, -25.6347, 0.782177, 0.74", "-46.1418, -26.7424, 1.01696, 0.74", "-47.4142, -27.9546, 1.32209, 0.74", "-48.449, -28.8437, 1.56851, 0.74", "-49.8274, -29.9522, 1.8918, 0.74", "-50.898, -30.7869, 2.14064, 0.74", "-52.2241, -31.7867, 2.44327, 0.74", "-53.69, -32.9118, 2.7561, 0.74", "-54.9634, -33.9614, 2.97141, 0.74", "-55.7138, -34.5951, 3.09387, 1.03", "-55.7584, -34.6281, 3.10285, 1.03", "-57.0297, -35.3964, 3.40679, 1.03", "-57.8985, -35.772, 3.63557, 1.33", "-58.6924, -35.9986, 3.84016, 1.33", "-58.7546, -36.0105, 3.85536, 1.33", "-61.361, -36.3139, 4.35605, 0.81", "-62.2655, -36.391, 4.46639, 0.81", "-62.9557, -36.4313, 4.49299, 0.81", "-64.2085, -36.4887, 4.45093, 0.74", "-65.2958, -36.5966, 4.29658, 0.96", "-66.2106, -36.7633, 4.07713, 0.96", "-67.0665, -37.0392, 3.66321, 0.59", "-67.9483, -37.3824, 3.11523, 0.59", "-67.9901, -37.4017, 3.08407, 0.59", "-69.1438, -38.0365, 2.08709, 0.59", "-69.8766, -38.5124, 1.39738, 1.18", "-71.4353, -39.5779, 0.0702642, 0.59", "-71.8595, -39.8654, -0.216003, 0.59", "-71.9104, -39.8995, -0.238174, 0.59", "-72.348, -40.1879, -0.314941, 0.59", "-73.4893, -40.9129, -0.227851, 0.59", "-75.0229, -41.9084, -0.0288757, 0.59", "-75.6155, -42.2687, 0.0550338, 0.59", "-76.2345, -42.6524, 0.116909, 1.4", "-77.3059, -43.2858, 0.178151, 1.62", "-77.8133, -43.5818, 0.195125, 1.62", "-79.1171, -44.378, 0.235323, 0.74", "-80.6275, -45.4445, 0.191263, 0.59", "-80.7925, -45.5671, 0.193993, 0.59", "-81.9044, -46.4286, 0.275359, 0.37", "-82.9325, -47.2507, 0.44207, 0.37", "-83.8348, -48.0285, 0.613357, 0.37", "-84.8962, -48.9679, 0.893887, 0.59", "-85.7698, -49.7295, 1.12762, 0.96", "-86.6168, -50.4368, 1.34224, 0.96", "-87.803, -51.3311, 1.68559, 0.96", "-88.7573, -51.9178, 1.99847, 0.96", "-90.0861, -52.5098, 2.55838, 0.44", "-90.9092, -52.795, 3.00946, 0.81", "-90.9963, -52.8208, 3.06343, 0.81", "-92.2637, -53.1992, 4.05933, 0.96", "-92.7197, -53.3627, 4.49137, 0.96", "-93.7415, -53.7901, 5.59204, 0.59", "-94.5711, -54.2453, 6.54316, 0.59", "-94.6113, -54.2717, 6.58822, 0.59", "-95.795, -55.0972, 7.75252, 0.59", "-96.629, -55.7139, 8.43058, 0.59", "-96.669, -55.7404, 8.4603, 0.59", "-97.3159, -56.0833, 8.89063, 0.59", "-98.1875, -56.4144, 9.42652, 1.33", "-99.3086, -56.7169, 10.0211, 1.33", "-100.133, -56.8458, 10.3851, 1.33", "-101.271, -56.9778, 10.8674, 1.33", "-102.502, -57.1105, 11.3909, 0.66", "-102.57, -57.118, 11.4206, 0.66", "-103.645, -57.297, 11.9129, 0.66", "-103.825, -57.3516, 11.9933, 0.66", "-104.704, -57.7633, 12.3534, 0.66", "-104.751, -57.7919, 12.3678, 0.66", "-105.385, -58.2454, 12.5505, 0.66", "-106.011, -58.6763, 12.7538, 1.03", "-106.72, -59.1323, 12.9867, 1.03", "-107.538, -59.5644, 13.2073, 1.03", "-108.675, -60.0572, 13.4459, 0.74", "-108.735, -60.0793, 13.4569, 0.74", "-109.832, -60.4194, 13.6105, 0.52", "-110.621, -60.6683, 13.6563, 0.52", "-111.798, -61.2314, 13.499, 0.52", "-112.302, -61.6278, 13.3001, 0.96", "-112.344, -61.6709, 13.2762, 0.96", "-112.858, -62.2812, 12.9351, 0.96", "-113.748, -63.4665, 12.2808, 0.66", "-114.838, -65.0241, 11.4535, 0.52", "-115.995, -66.6502, 10.6362, 0.52", "-116.437, -67.2295, 10.3708, 0.52", "-117.512, -68.5285, 9.85826, 1.62", "-118.252, -69.3663, 9.55908, 1.62", "-118.8, -69.9207, 9.40459, 1.25", "-119.926, -70.9526, 9.19747, 0.66", "-120.751, -71.6992, 9.082, 1.25", "-121.379, -72.2426, 9.02726, 1.25" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-12.6525, 133.598, 9.06587, 1.25", "-12.1247, 134.437, 9.56711, 1.25", "-11.7592, 135.055, 9.88736, 0.74", "-11.7249, 135.119, 9.91554, 0.74", "-11.4319, 135.684, 10.1513, 0.74", "-11.4004, 135.75, 10.1789, 0.74", "-11.0885, 136.445, 10.4608, 0.74", "-10.6769, 137.442, 10.8023, 0.74", "-10.2528, 138.626, 11.1924, 0.59", "-10.2384, 138.673, 11.2068, 0.59", "-10.1053, 139.25, 11.3602, 1.11", "-9.98788, 139.94, 11.5185, 1.25", "-9.98378, 139.983, 11.5282, 1.25", "-9.96278, 140.927, 11.7301, 1.25", "-9.99128, 141.715, 11.9231, 1.25", "-10.0492, 142.813, 12.2068, 1.25", "-10.0544, 142.912, 12.234, 1.25", "-10.1094, 143.818, 12.5078, 1.03", "-10.1429, 144.534, 12.7485, 0.66", "-10.1691, 145.235, 13.0183, 0.66", "-10.1736, 146.073, 13.3929, 0.88", "-10.1453, 146.804, 13.749, 1.18", "-10.142, 146.85, 13.7729, 1.18", "-10.0517, 147.655, 14.2086, 1.18", "-10.0457, 147.692, 14.2311, 1.18", "-9.91408, 148.507, 14.71, 1.18", "-9.86358, 148.863, 14.924, 0.74", "-9.82338, 149.399, 15.1845, 0.74", "-9.80462, 149.848, 15.3493, 0.74", "-9.80474, 150.004, 15.391, 0.74", "-9.85358, 151.122, 15.6065, 0.74", "-9.85768, 151.173, 15.6126, 0.74", "-9.99878, 152.365, 15.7376, 0.74", "-10.0569, 152.812, 15.7768, 1.11", "-10.1378, 153.399, 15.8383, 1.25", "-10.2142, 153.947, 15.9043, 1.25", "-10.2209, 153.998, 15.9129, 1.25", "-10.3188, 154.748, 16.0655, 0.74", "-10.4289, 155.629, 16.2808, 0.59", "-10.4745, 156.099, 16.4042, 0.59", "-10.4764, 156.156, 16.419, 0.59", "-10.4368, 156.936, 16.6238, 0.59", "-10.3761, 157.447, 16.7541, 0.59", "-10.3658, 157.496, 16.7661, 0.59", "-10.2715, 157.892, 16.8796, 0.59", "-10.2016, 158.212, 16.9713, 0.59", "-10.0803, 158.815, 17.1297, 0.59", "-9.98478, 159.393, 17.3162, 0.66", "-9.97278, 159.466, 17.3417, 0.66", "-9.90638, 159.981, 17.5304, 0.88", "-9.88058, 160.404, 17.6975, 1.18", "-9.88298, 160.913, 17.9161, 1.18", "-9.95858, 161.858, 18.3773, 1.03" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-12.6525, 133.598, 9.06587, 0.59", "-13.3459, 135.279, 7.8418, 0.59", "-13.6556, 136.143, 7.21723, 0.59", "-13.8406, 136.923, 6.71877, 0.59", "-13.9113, 137.589, 6.32376, 0.59", "-13.9353, 138.415, 5.86825, 0.37", "-13.921, 139.617, 5.2346, 0.29", "-13.9177, 139.675, 5.21204, 0.29", "-13.7818, 140.771, 4.7906, 0.29", "-13.5948, 141.974, 4.38007, 0.29", "-13.5216, 142.433, 4.25462, 0.29", "-13.5108, 142.503, 4.241, 0.29", "-13.3882, 143.338, 4.06188, 0.29", "-13.2903, 144.029, 3.88654, 0.29", "-13.2069, 144.68, 3.65305, 0.88", "-13.1079, 145.626, 3.26339, 1.18", "-13.0512, 146.71, 2.65424, 1.03", "-13.0679, 147.744, 1.98395, 0.52", "-13.0999, 148.286, 1.58691, 0.44", "-13.2642, 149.381, 0.74615, 0.88", "-13.3923, 149.918, 0.329431, 1.11", "-13.8505, 151.41, -0.807575, 0.52", "-14.1556, 152.25, -1.38308, 0.52", "-14.178, 152.31, -1.41678, 0.52", "-14.5518, 153.311, -1.9447, 0.44", "-14.839, 154.043, -2.26827, 0.44", "-15.1975, 154.925, -2.66817, 0.44", "-15.3902, 155.381, -2.86725, 1.11", "-15.7813, 156.185, -3.26828, 1.11", "-16.3648, 157.162, -3.86964, 0.44", "-16.8767, 157.835, -4.41172, 0.37", "-17.4705, 158.559, -5.09328, 1.11", "-17.5065, 158.602, -5.13735, 1.11", "-17.7852, 158.968, -5.54598, 1.25", "-18.415, 159.921, -6.69729, 0.44", "-18.8459, 160.724, -7.64933, 0.29", "-19.2932, 161.752, -9.16808, 0.29", "-19.3374, 161.867, -9.35618, 0.66", "-19.6348, 162.713, -10.7778, 0.37", "-19.839, 163.339, -11.8486, 1.03", "-19.92, 163.608, -12.2902, 1.18", "-20.6487, 166.068, -16.3696, 1.84", "-20.6609, 166.104, -16.4297, 1.84", "-20.8237, 166.517, -17.1328, 2.14", "-21.4445, 167.695, -19.0764, 0.29", "-21.7182, 168.139, -19.8183, 0.29", "-22.1697, 168.792, -20.9484, 0.66", "-22.3714, 169.045, -21.3817, 0.66", "-23.5052, 170.298, -23.7192, 0.44", "-24.6341, 171.401, -25.9956, 0.22", "-25.5474, 172.081, -27.724, 0.96", "-26.6469, 172.699, -29.6601, 0.37", "-27.1376, 172.912, -30.4871, 0.22", "-27.489, 173.04, -31.0738, 0.29", "-27.5329, 173.049, -31.141, 0.29", "-28.9842, 173.046, -33.3467, 0.29", "-29.4547, 172.979, -33.9468, 1.03", "-30.6126, 172.604, -35.3917, 0.775" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "49.6609, -61.3413, 13.8751, 0.74", "49.8423, -61.9075, 13.9547, 0.74", "50.0096, -62.486, 14.0416, 0.74", "50.1829, -63.1233, 14.1099, 0.52", "50.431, -63.8416, 14.1555, 0.44", "50.7926, -64.8134, 14.2013, 0.96", "51.042, -65.4332, 14.2207, 0.96", "51.1838, -65.7815, 14.2287, 0.96", "51.6434, -66.8414, 14.2371, 0.66", "52.409, -68.4045, 14.1737, 0.52", "52.7246, -68.924, 14.122, 0.81", "53.2089, -69.6196, 14.0198, 1.11", "53.2576, -69.6823, 14.009, 1.11", "53.9409, -70.4958, 13.8595, 1.11", "55.0661, -71.7292, 13.6282, 0.44", "56.266, -72.9552, 13.3853, 0.44", "56.3877, -73.0733, 13.3629, 0.44", "57.0477, -73.6816, 13.2533, 1.03", "57.8415, -74.3796, 13.1354, 1.03", "58.748, -75.133, 13.0263, 1.03", "59.2248, -75.5204, 12.9875, 0.44", "60.2202, -76.3583, 12.9224, 0.44", "60.9119, -76.9427, 12.9047, 1.11", "61.6835, -77.627, 12.9217, 1.11", "62.2083, -78.1267, 12.9599, 0.52", "62.704, -78.6456, 13.0216, 0.52", "62.7633, -78.7147, 13.031, 0.52", "63.4165, -79.5363, 13.161, 0.37", "64.0894, -80.451, 13.3434, 0.37", "64.3709, -80.8474, 13.427, 0.37", "64.7745, -81.4245, 13.545, 1.25", "65.5032, -82.4248, 13.7245, 1.25", "65.6843, -82.6683, 13.7581, 1.25", "66.2942, -83.4818, 13.8393, 0.37", "66.8863, -84.2378, 13.9064, 0.37", "67.0432, -84.4356, 13.931, 0.37", "67.7763, -85.3713, 14.0738, 0.37", "68.7662, -86.652, 14.2851, 0.37", "68.8147, -86.7151, 14.2954, 0.37", "69.6458, -87.8052, 14.4572, 0.37", "70.2717, -88.6213, 14.5988, 1.03", "70.32, -88.6841, 14.6112, 1.03", "71.0279, -89.6284, 14.8563, 1.03", "71.0832, -89.6978, 14.8791, 1.03", "77.172, -99.4273, 15.2119, 1.03", "82.3276, -109.575, 16.9217, 1.03", "88.8495, -118.59, 19.7078, 1.03", "94.3217, -127.891, 23.6523, 1.03", "98.6314, -137.11, 29.0005, 1.03", "101.288, -145.489, 36.381, 1.03" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "49.6609, -61.3413, 13.8751, 0.81", "49.8306, -61.1934, 13.4894, 0.81", "49.8671, -61.1432, 13.4447, 0.81", "49.8671, -61.1432, 13.4447, 0.22", "50.0959, -60.3861, 13.4699, 0.59", "50.1155, -60.3211, 13.472, 0.59", "50.4768, -59.1251, 13.5118, 0.44", "50.6302, -58.5797, 13.5237, 0.44", "51.0949, -56.9494, 13.5283, 0.44", "51.1134, -56.8841, 13.5266, 0.44", "53.0065, -47.3705, 13.9991, 0.44", "53.5361, -37.6784, 13.5134, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "92.1763, 269.339, -32.4861, 0.44", "92.2621, 270.229, -32.6849, 0.44", "92.34, 271.036, -32.8654, 0.44", "92.4189, 271.854, -33.0482, 0.29", "92.4886, 272.576, -33.2097, 0.29", "92.5873, 273.599, -33.4383, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "92.1763, 269.339, -32.4861, 0.29", "92.5152, 269.716, -32.5213, 0.29", "92.5812, 269.794, -32.531, 0.29", "93.0374, 270.388, -32.6127, 0.29", "93.4074, 270.972, -32.7276, 0.29", "93.7273, 271.597, -32.8351, 0.29", "93.9569, 272.183, -32.9525, 0.66", "93.9852, 272.287, -32.9726, 0.66", "94.0806, 272.825, -33.0988, 0.52", "94.1669, 273.726, -33.3684, 0.29", "94.2501, 274.833, -33.7356, 0.81", "94.3462, 275.833, -34.0914, 1.4", "94.4064, 276.359, -34.2811, 1.4", "94.564, 277.456, -34.7476, 0.44", "94.7746, 278.681, -35.3285, 0.22", "94.8695, 279.124, -35.5602, 0.22", "94.9747, 279.526, -35.7889, 0.59", "95.0137, 279.644, -35.8626, 0.59", "95.432, 280.674, -36.5558, 0.52", "95.6802, 281.253, -37.0132, 0.52", "95.7012, 281.304, -37.0523, 0.52", "95.9248, 281.853, -37.452, 0.52", "96.4147, 283.032, -38.2529, 1.11", "96.681, 283.657, -38.6598, 1.4", "97.3516, 285.125, -39.5483, 1.25", "97.8765, 286.195, -40.2082, 0.66", "98.151, 286.742, -40.5494, 0.66", "98.3163, 287.051, -40.7317, 0.52", "98.8132, 287.966, -41.1666, 0.52", "99.0818, 288.455, -41.3701, 0.52", "99.1644, 288.59, -41.4142, 0.52", "99.8001, 289.592, -41.765, 1.18", "100.39, 290.485, -42.0427, 1.47", "100.712, 290.954, -42.1642, 0.37", "101.06, 291.436, -42.2493, 0.37", "101.609, 292.192, -42.3574, 0.37", "101.645, 292.248, -42.3634, 0.37", "102.263, 293.276, -42.4222, 0.37", "102.329, 293.405, -42.4319, 0.37", "102.63, 294.057, -42.4875, 0.37", "102.653, 294.121, -42.4919, 0.37", "103.171, 295.847, -42.4612, 0.37", "103.187, 295.903, -42.4566, 0.37", "103.312, 296.386, -42.3918, 0.37", "103.33, 296.451, -42.3808, 0.37", "103.513, 296.986, -42.2794, 0.37", "104.02, 298.195, -41.9887, 0.29", "104.453, 298.98, -41.7762, 0.29", "104.648, 299.304, -41.6922, 0.29", "104.685, 299.359, -41.6791, 0.29", "106.042, 301.22, -41.3072, 0.29", "106.612, 301.946, -41.1855, 0.15", "107.607, 303.161, -41.0184, 0.15", "107.651, 303.213, -41.0113, 0.15", "108.433, 304.117, -40.8901, 0.15", "109.661, 305.501, -40.7121, 0.15", "109.728, 305.568, -40.7048, 0.15" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_152",
    "id" : "dend_152",
    "points3d" : [ "-55.8842, -74.9675, -88.9991, 0.29", "-58.2252, -77.7806, -89.5886, 0.29", "-58.3019, -77.8728, -89.6079, 0.29", "-61.1656, -81.3139, -90.3289, 0.29", "-61.3427, -81.5267, -90.3735, 0.29", "-64.1664, -84.9198, -91.0845, 0.29", "-66.1666, -87.3233, -91.5881, 0.29" ],
    "parent" : "dend_150",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_151",
    "id" : "dend_151",
    "points3d" : [ "-55.8842, -74.9675, -88.9991, 0.29", "-55.6462, -75.0155, -89.0426, 0.29", "-52.5685, -75.8447, -89.6854, 0.29", "-52.4811, -75.882, -89.7036, 0.29", "-50.3588, -76.96, -90.1448, 0.29", "-50.1926, -77.0444, -90.1794, 0.29", "-48.1779, -78.0678, -90.5983, 0.29", "-48.0223, -78.1624, -90.6316, 0.29", "-46.3151, -79.7388, -91.0031, 0.29", "-46.2565, -79.7992, -91.0174, 0.29" ],
    "parent" : "dend_150",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_147",
    "id" : "dend_147",
    "points3d" : [ "-21.0677, -45.4355, 16.2447, 0.29", "-22.1042, -45.0922, -7.59346, 0.29", "-22.1254, -45.0866, -7.99339, 0.29", "-22.1301, -45.0859, -8.0641, 0.29", "-22.1973, -45.0815, -8.9121, 0.29", "-22.3014, -45.0847, -10.0094, 0.29", "-22.4042, -45.099, -10.9369, 0.29", "-22.4737, -45.1297, -10.9656, 0.29", "-23.4664, -45.6856, -11.3189, 0.29", "-23.9507, -45.9951, -11.4707, 0.29", "-24.9354, -46.7159, -11.7228, 0.29", "-25.7246, -47.3539, -11.8566, 0.29", "-26.5781, -48.0945, -11.9686, 0.29", "-27.6017, -49.0207, -12.0636, 0.29", "-27.6528, -49.071, -12.0658, 0.29", "-28.3122, -49.7688, -12.1343, 0.29", "-29.0461, -50.59, -12.2301, 0.29", "-29.9212, -51.5939, -12.3397, 0.29", "-30.0219, -51.7168, -12.3642, 0.29", "-30.6007, -52.3621, -12.5468, 0.29", "-31.701, -53.451, -12.9154, 0.29", "-33.063, -54.6951, -13.436, 0.29", "-33.1154, -54.7385, -13.4578, 0.29", "-34.2642, -55.643, -13.9541, 0.29", "-35.232, -56.3825, -14.3666, 0.29", "-36.1704, -57.0896, -14.7544, 0.29", "-36.5701, -57.3999, -14.9019, 0.29", "-36.6218, -57.4457, -14.9206, 0.29", "-36.987, -57.8533, -15.0141, 0.29", "-37.153, -58.1011, -15.0276, 0.29", "-37.5358, -58.7542, -15.0448, 0.29", "-37.6211, -58.891, -15.0488, 0.29", "-38.347, -59.8226, -15.0948, 0.29", "-39.0367, -60.6138, -15.1505, 0.29", "-39.9615, -61.4794, -15.2291, 0.29", "-40.7991, -62.162, -15.303, 0.29", "-42.1893, -63.1611, -15.4818, 0.29", "-43.7691, -64.1946, -15.7348, 0.29", "-43.8398, -64.2328, -15.7481, 0.29", "-45.3255, -64.8641, -16.1392, 0.29", "-45.3992, -64.888, -16.1635, 0.29", "-46.6536, -65.193, -16.6355, 0.29", "-46.7275, -65.2058, -16.6663, 0.29", "-47.6702, -65.3852, -17.0825, 0.29", "-49.078, -65.6967, -17.6991, 0.29", "-49.2143, -65.7322, -17.7563, 0.29", "-50.4422, -66.0406, -18.2123, 0.29", "-50.5849, -66.075, -18.252, 0.29", "-51.4069, -66.2889, -18.4533, 0.29", "-51.5009, -66.3152, -18.4765, 0.29", "-53.5802, -66.8202, -18.9001, 0.29", "-53.6767, -66.841, -18.9232, 0.29", "-55.4069, -67.179, -19.3846, 0.29", "-55.4743, -67.1891, -19.4042, 0.29", "-56.6345, -67.3249, -19.7587, 0.29", "-58.85, -67.5321, -20.4141, 0.29", "-60.416, -67.6537, -20.8673, 0.29", "-60.5058, -67.6607, -20.8919, 0.29", "-62.8376, -67.8173, -21.494, 0.29", "-62.9958, -67.8293, -21.534, 0.29", "-64.5194, -67.9626, -21.8936, 0.29", "-64.735, -67.9849, -21.945, 0.29", "-66.1455, -68.1374, -22.2445, 0.29", "-66.9654, -68.2324, -22.3658, 0.29", "-68.4916, -68.4299, -22.4796, 0.29", "-68.6588, -68.4412, -22.484, 0.29", "-69.9228, -68.4191, -22.5415, 0.29", "-69.9928, -68.4081, -22.5382, 0.29", "-71.436, -67.9596, -22.3124, 0.29", "-71.5908, -67.8934, -22.2738, 0.29", "-72.8172, -67.2565, -21.8567, 0.29", "-74.0384, -66.5487, -21.4311, 0.29", "-75.6597, -65.4427, -20.8505, 0.29", "-75.7722, -65.3617, -20.8163, 0.29", "-76.7006, -64.6242, -20.6625, 0.29" ],
    "parent" : "dend_143",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_144",
    "id" : "dend_144",
    "points3d" : [ "-21.0677, -45.4355, 16.2447, 0.96", "-21.2255, -45.9682, 16.6283, 0.96", "-21.2421, -46.0306, 16.6724, 0.96", "-21.4975, -47.024, 17.3739, 0.88", "-21.669, -47.6355, 17.9334, 0.66", "-21.6806, -47.6717, 17.9679, 0.66", "-21.8001, -48.0534, 18.3288, 0.52", "-22.0111, -48.7362, 18.977, 0.52", "-22.0227, -48.7732, 19.0107, 0.52", "-22.3789, -49.9645, 20.0346, 0.52", "-22.5624, -50.5654, 20.5648, 0.52", "-22.6349, -50.8169, 20.788, 0.52", "-22.7638, -51.225, 21.1802, 0.52", "-22.7731, -51.2629, 21.2136, 0.52", "-22.917, -52.0099, 21.827, 0.52", "-22.9171, -52.0481, 21.8615, 0.52", "-22.8004, -52.6965, 22.6321, 0.52", "-22.3831, -53.481, 23.8604, 0.52", "-21.943, -53.9155, 24.7414, 0.52", "-21.9128, -53.9348, 24.7872, 0.52", "-20.7887, -54.3477, 26.0971, 0.52", "-20.6953, -54.3691, 26.1854, 0.52", "-19.7524, -54.4105, 26.846, 0.52", "-19.7154, -54.4096, 26.8687, 0.52", "-19.4375, -54.4053, 27.0733, 0.52", "-19.3951, -54.4051, 27.1012, 0.52", "-18.9835, -54.4197, 27.2563, 0.52", "-18.4003, -54.4151, 27.4427, 0.52", "-15.346, -57.8666, 33.0851, 0.52", "-12.2612, -60.6938, 39.0333, 0.52", "-8.77602, -63.8529, 44.5886, 0.52", "-6.28783, -66.1547, 51.0128, 0.52", "-3.5321, -68.5419, 57.2967, 0.52", "-0.530431, -70.4674, 63.6186, 0.52", "2.28173, -73.3676, 69.6677, 0.52", "6.33133, -76.4269, 74.8828, 0.52", "9.7762, -80.1456, 80.1246, 0.52", "13.8653, -84.257, 84.5625, 0.52", "17.7601, -89.3327, 88.1422, 0.52" ],
    "parent" : "dend_143",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_142",
    "id" : "dend_142",
    "points3d" : [ "-4.9204, -123.178, -7.72531, 0.74", "-4.22924, -124.568, -8.28308, 0.74", "-4.1915, -124.64, -8.3148, 0.74", "-3.55956, -125.809, -8.84021, 0.74", "-3.4845, -125.946, -8.88948, 0.74", "-2.70325, -127.44, -9.3153, 0.74", "-1.74612, -129.338, -9.77629, 1.4", "-1.31378, -130.283, -9.94724, 1.4", "-1.23379, -130.49, -9.98248, 1.4", "-0.820635, -131.942, -10.21, 0.37", "-0.596081, -133.029, -10.4407, 0.37", "-0.552376, -133.249, -10.4942, 0.37", "-0.31135, -134.172, -10.8392, 0.37", "0.0129232, -135.24, -11.3956, 1.18", "0.340198, -136.24, -12.0119, 1.47", "0.920312, -137.96, -13.1872, 0.52", "1.45928, -139.463, -14.2391, 0.37", "2.25807, -141.718, -15.8137, 0.37", "2.30388, -141.849, -15.8992, 0.37", "2.52962, -142.619, -16.2892, 1.4", "2.82518, -143.845, -16.7901, 1.4", "2.9056, -144.307, -16.9273, 1.4", "3.16636, -146.424, -17.3949, 0.66", "3.40886, -148.178, -17.6305, 0.59", "3.88799, -151.058, -17.9746, 0.59", "3.90296, -151.133, -17.9821, 0.59", "4.04035, -151.758, -18.0399, 1.33", "4.28026, -152.812, -18.1171, 0.74", "4.58196, -154.156, -18.1199, 0.52", "4.61208, -154.307, -18.1158, 0.52", "4.79534, -155.379, -18.0335, 0.52", "5.11043, -157.494, -17.8022, 0.52", "5.13049, -157.656, -17.7798, 0.52", "5.33587, -159.822, -17.4235, 0.52", "5.40826, -160.847, -17.1986, 1.25", "5.53278, -162.357, -16.8248, 1.25", "5.54148, -162.494, -16.7893, 1.25", "5.58102, -163.663, -16.4278, 1.25", "5.58218, -163.736, -16.4052, 1.25", "5.5667, -165.467, -15.9009, 0.52", "5.52722, -167.205, -15.3946, 0.52", "5.45256, -169.474, -14.7506, 0.52", "5.41137, -170.942, -14.3504, 0.81", "5.40909, -171.016, -14.3298, 0.81", "5.39096, -171.79, -14.1235, 0.81", "5.38061, -172.355, -13.9791, 0.37", "5.38095, -173.39, -13.7069, 0.37", "5.44259, -174.271, -13.5094, 0.37", "5.4942, -174.84, -13.449, 0.74", "5.56318, -175.643, -13.4054, 0.74", "5.56963, -175.719, -13.4044, 0.74", "5.64031, -176.596, -13.4294, 0.74", "5.67508, -177.001, -13.4326, 0.74", "5.76791, -178.004, -13.4297, 0.44", "5.93134, -179.721, -13.4124, 0.44", "5.94757, -179.892, -13.405, 0.44", "6.06172, -181.268, -13.3078, 0.44", "6.1223, -182.1, -13.2477, 0.29", "6.12691, -182.177, -13.2428, 0.29", "6.177, -183.144, -13.1791, 0.29", "6.18654, -183.747, -13.1591, 0.29", "6.18616, -184.288, -13.1584, 0.29", "6.136, -185.469, -13.1961, 0.29", "6.02497, -187.316, -13.3043, 0.29", "6.01885, -187.393, -13.3095, 0.22", "5.91128, -188.381, -13.383, 0.29", "5.78368, -189.326, -13.4545, 0.29", "5.59692, -190.572, -13.5359, 0.29", "5.56067, -190.823, -13.5471, 0.29", "5.44518, -191.643, -13.5869, 0.29", "5.33399, -192.633, -13.6299, 0.29", "5.23091, -194.243, -13.6987, 0.29", "5.22834, -194.32, -13.7023, 0.37", "5.23031, -196.206, -13.8341, 0.29", "5.23379, -196.323, -13.8438, 0.29", "5.37187, -198.404, -14.0343, 0.29", "5.54326, -200.33, -14.2395, 0.29", "5.55687, -200.46, -14.2547, 0.37", "5.67894, -201.451, -14.3719, 0.29", "5.84366, -202.622, -14.5175, 0.29", "5.97582, -203.585, -14.6472, 0.29", "5.98398, -203.661, -14.6577, 0.29", "6.05463, -204.769, -14.871, 0.29", "6.0944, -206.006, -15.1433, 0.29", "6.09387, -206.253, -15.2021, 0.29", "6.04786, -207.48, -15.5408, 0.29", "5.97653, -208.69, -16.1177, 0.29", "5.8165, -209.998, -16.8932, 0.29", "5.79353, -210.121, -16.9804, 0.29", "5.61035, -210.858, -17.5689, 0.29", "5.45915, -211.444, -18.082, 0.29", "4.83464, -213.889, -20.3601, 0.29", "4.57506, -214.886, -21.3182, 0.29", "4.55817, -214.949, -21.3751, 0.29", "4.33461, -215.863, -22.1439, 0.29", "4.09618, -216.898, -22.9731, 0.29", "4.02726, -217.295, -23.2445, 0.29", "3.95842, -217.693, -23.466, 0.29", "3.71146, -219.154, -24.3277, 0.29", "3.48975, -220.014, -24.8826, 0.29", "3.46942, -220.075, -24.9242, 0.29", "2.97163, -221.26, -25.7998, 0.29", "2.19492, -222.82, -27.0429, 0.29", "2.15956, -222.881, -27.0935, 0.29", "0.994588, -224.524, -28.5298, 0.29", "0.944379, -224.588, -28.5885, 0.29", "0.294619, -225.344, -29.3102, 0.29", "-0.0226898, -225.676, -29.6283, 0.29", "-0.416594, -226.084, -30.0221, 0.29", "-1.77011, -227.429, -31.3248, 0.29", "-2.42294, -228.046, -31.9692, 0.29", "-3.2879, -228.836, -32.8082, 0.29", "-3.86001, -229.339, -33.357, 0.29", "-4.59548, -229.997, -34.067, 0.29", "-5.01243, -230.374, -34.4667, 0.29", "-6.55072, -231.905, -35.812, 0.29", "-7.30136, -232.743, -36.3565, 0.37", "-7.34601, -232.799, -36.3829, 0.37", "-7.84952, -233.494, -36.63, 0.29", "-7.88978, -233.558, -36.6436, 0.29", "-8.80266, -235.131, -36.8547, 0.29", "-9.4317, -236.351, -36.8331, 0.29", "-9.67969, -236.877, -36.8247, 0.29", "-9.79073, -237.113, -36.8201, 0.29", "-10.1092, -237.805, -36.8014, 0.29" ],
    "parent" : "dend_141",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_125",
    "id" : "dend_125",
    "points3d" : [ "87.1884, -179.599, 18.7143, 0.44", "89.8477, -189.207, 18.1444, 0.44", "93.6852, -198.383, 17.449, 0.44", "98.7182, -206.929, 18.2065, 0.44", "104.889, -214.672, 18.7861, 0.44" ],
    "parent" : "dend_123",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_124",
    "id" : "dend_124",
    "points3d" : [ "87.1884, -179.599, 18.7143, 0.29", "91.7305, -190.515, 17.0838, 0.44", "97.6819, -200.76, 15.8653, 0.44", "104.012, -210.437, 13.1016, 0.44", "112.026, -219.11, 12.0664, 0.44" ],
    "parent" : "dend_123",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_118",
    "id" : "dend_118",
    "points3d" : [ "27.6439, 183.657, 11.069, 0.44", "27.8766, 183.797, 11.0849, 0.44", "29.0847, 184.695, 11.1895, 0.44", "29.3016, 184.868, 11.2094, 0.44", "30.257, 185.818, 11.2837, 0.44", "30.3224, 185.89, 11.2883, 0.44", "32.1107, 188.21, 11.3717, 0.44", "33.1099, 189.706, 11.4163, 0.44", "33.1688, 189.812, 11.4135, 0.44", "34.1627, 191.819, 11.2761, 0.44", "34.202, 191.908, 11.2663, 0.44", "35.0358, 193.996, 10.9438, 0.44", "35.0638, 194.088, 10.9234, 0.44", "35.6823, 196.088, 10.4287, 0.44", "35.7088, 196.166, 10.4045, 0.44", "35.9739, 196.846, 10.1293, 1.03", "36.0528, 197.063, 10.0308, 1.03", "36.3639, 197.966, 9.53565, 1.03", "36.381, 198.041, 9.49785, 1.03", "36.4928, 199.25, 8.94464, 0.37", "36.4901, 199.331, 8.91631, 0.37", "36.4037, 200.186, 8.65996, 0.29", "36.3932, 200.279, 8.63007, 0.29", "36.2537, 201.383, 8.27217, 0.29", "36.2434, 201.465, 8.2475, 0.29", "35.8677, 204.03, 7.56491, 0.29", "35.8554, 204.111, 7.53874, 0.29", "35.5801, 205.814, 6.91622, 0.29", "35.5648, 205.905, 6.88227, 0.29", "35.4012, 206.823, 6.52904, 1.03", "35.2327, 207.679, 6.21047, 1.03", "35.0133, 208.728, 5.83295, 0.29", "34.6906, 210.089, 5.40991, 0.29", "34.259, 211.709, 4.99761, 0.29", "34.1529, 212.083, 4.90088, 0.29", "33.8446, 213.089, 4.65091, 0.29", "33.6835, 213.593, 4.54406, 1.11", "33.4446, 214.353, 4.41615, 1.11", "33.4195, 214.434, 4.40217, 1.11", "33.2286, 215.183, 4.2627, 0.29", "32.8619, 216.917, 4.00537, 0.29", "32.4021, 219.404, 3.68921, 0.29", "32.0623, 221.345, 3.48675, 0.29", "32.0488, 221.43, 3.47959, 0.29", "31.5358, 224.845, 3.23497, 0.29", "31.2632, 226.921, 3.13697, 0.29", "31.2454, 227.105, 3.13124, 0.59", "31.2214, 227.548, 3.12914, 0.59", "31.2161, 227.646, 3.13175, 0.59", "32.452, 239.833, 2.15616, 0.59" ],
    "parent" : "dend_114",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_115",
    "id" : "dend_115",
    "points3d" : [ "27.6439, 183.657, 11.069, 0.52", "27.7629, 185.368, 9.65417, 0.52", "27.8746, 186.586, 8.61351, 0.52", "27.8871, 186.675, 8.53745, 0.52", "28.2669, 188.358, 6.9642, 0.52", "28.6364, 189.758, 5.59884, 0.52", "28.7137, 190.016, 5.34345, 0.81", "28.755, 190.11, 5.2414, 0.81", "29.0377, 190.644, 4.6423, 0.81", "29.9234, 192.24, 2.97145, 0.66", "29.9789, 192.331, 2.88735, 0.66", "30.4256, 193.054, 2.35971, 1.47", "30.8579, 193.706, 1.92846, 1.77", "31.4873, 194.624, 1.40779, 0.81", "31.5402, 194.704, 1.37187, 0.81", "31.9574, 195.347, 1.15139, 0.52", "32.7875, 196.719, 0.710351, 0.29", "33.1764, 197.428, 0.505273, 1.4", "33.6338, 198.368, 0.256091, 1.47", "34.1235, 199.583, -0.0207412, 0.59", "34.3286, 200.171, -0.147506, 0.59", "34.7446, 201.62, -0.442081, 0.59", "34.9587, 202.54, -0.613695, 0.52", "35.1681, 203.467, -0.765912, 0.52", "35.7414, 205.714, -1.09232, 0.52", "35.7776, 205.845, -1.10557, 0.52", "35.8805, 206.215, -1.12952, 0.88", "36.1615, 207.193, -1.17508, 0.88", "36.6466, 208.951, -1.22938, 0.44", "37.0352, 210.695, -1.26218, 0.44", "37.197, 211.705, -1.27129, 1.03", "37.2934, 212.553, -1.29648, 1.03", "37.2983, 212.643, -1.30067, 1.03", "37.2386, 213.512, -1.36079, 0.59", "36.8859, 215.47, -1.54771, 0.29", "36.7195, 216.111, -1.62843, 0.96", "36.5173, 216.788, -1.73275, 0.59", "36.3713, 217.23, -1.79958, 0.29", "35.6742, 219.246, -2.07847, 0.29", "35.6437, 219.33, -2.08921, 0.59", "35.2592, 220.37, -2.20492, 0.29", "34.844, 221.516, -2.32619, 0.29", "34.7984, 221.645, -2.33855, 0.29", "34.1077, 223.744, -2.56371, 0.29", "34.0261, 224.014, -2.59612, 0.29", "33.8023, 224.729, -2.68392, 1.11", "33.5939, 225.357, -2.76209, 1.11", "33.5687, 225.43, -2.77109, 1.11", "33.1605, 226.536, -2.90097, 0.37", "33.0576, 226.8, -2.90838, 0.37", "32.6018, 227.954, -2.8719, 0.37", "32.1915, 228.971, -2.79124, 0.37", "32.0831, 229.231, -2.75999, 0.37", "31.7819, 229.993, -2.58824, 0.37", "31.1026, 231.768, -2.08361, 0.37", "30.8905, 232.337, -1.90382, 0.66", "30.8587, 232.431, -1.87513, 0.66", "30.7142, 232.86, -1.75453, 0.66", "29.688, 235.772, -1.04158, 0.44", "29.1924, 236.96, -0.786148, 0.44", "29.0998, 237.156, -0.752197, 0.44", "28.1301, 239.081, -0.429192, 1.33", "27.6672, 239.98, -0.291695, 1.47", "27.2058, 240.83, -0.185544, 0.88", "25.8565, 242.97, -0.0679881, 0.59", "25.3655, 243.692, -0.011013, 1.03", "24.9047, 244.315, 0.0541813, 0.74" ],
    "parent" : "dend_114",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "67.2619, 9.39125, 10.9383, 0.22", "67.5804, 9.12033, 10.986, 0.22", "67.9314, 8.8218, 11.0386, 0.22", "68.3659, 8.45218, 11.1038, 0.22", "68.4251, 8.40183, 11.1126, 0.22", "68.9824, 7.92776, 11.1962, 0.44", "77.4235, 3.16512, 12.138, 0.44", "85.575, -1.92901, 13.737, 0.44", "93.9012, -6.88407, 14.7489, 0.44", "101.915, -12.442, 15.0553, 0.44", "109.74, -18.2735, 15.3912, 0.44", "117.816, -23.7227, 14.89, 0.44", "126.37, -28.1959, 16.1237, 0.44", "134.824, -32.6838, 17.8791, 0.44", "142.571, -38.1606, 20.141, 0.44", "150.273, -43.8333, 22.0698, 0.44" ],
    "parent" : "dend_105",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "67.2619, 9.39125, 10.9383, 0.37", "67.3315, 9.48655, 10.9365, 0.37", "67.6077, 9.86478, 10.9293, 0.37", "68.1183, 10.5639, 10.9159, 0.37", "72.0909, 20.9414, 10.0036, 0.37", "76.6401, 30.773, 7.52478, 0.37", "80.9109, 41.0638, 7.08553, 0.37", "85.1644, 51.3515, 6.4806, 0.37", "90.78, 60.8476, 5.15584, 0.37", "95.2354, 71.0671, 4.96169, 0.37", "99.4507, 81.1315, 2.79411, 0.37", "104.726, 90.9307, 2.49966, 0.37", "111.366, 99.7765, 3.5289, 0.37", "117.962, 108.68, 2.93664, 0.37" ],
    "parent" : "dend_105",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "100.716, -59.8471, -32.784, 0.44", "104.927, -65.3848, -35.5439, 0.44", "109.629, -69.8478, -39.2419, 0.44", "113.446, -75.1962, -42.8399, 0.44", "117.006, -81.3258, -45.2895, 0.44" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "100.716, -59.8471, -32.784, 0.29", "104.598, -65.089, -35.3475, 0.44", "107.268, -70.847, -38.375, 0.44", "109.334, -76.3585, -42.2192, 0.44", "111.301, -81.343, -46.7484, 0.44" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-40.2935, 28.2065, 26.3942, 0.29", "-41.3309, 29.3598, 25.9109, 0.29", "-41.7311, 29.8821, 25.7109, 0.29", "-41.7778, 29.9431, 25.6875, 0.29", "-42.3734, 30.7205, 25.3899, 0.29", "-42.7616, 31.2273, 25.1959, 0.29", "-42.8025, 31.2807, 25.1755, 0.29", "-43.2113, 31.9148, 24.8711, 0.29", "-48.6792, 40.1029, 22.8357, 0.29", "-54.6881, 47.3418, 19.3774, 0.29", "-60.5575, 55.3633, 17.914, 0.29", "-65.5252, 64.1183, 17.6644, 0.29", "-71.072, 72.4885, 18.1364, 0.29", "-78.0278, 79.6339, 17.2144, 0.29", "-84.8851, 86.7029, 15.3991, 0.29", "-92.5978, 93.041, 15.5983, 0.29", "-100.255, 99.323, 16.8158, 0.29", "-107.712, 105.8, 18.2788, 0.29" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-40.2935, 28.2065, 26.3942, 1.11", "-41.5528, 28.2728, 27.1602, 1.11", "-42.8887, 28.3187, 27.8707, 1.11", "-44.6202, 28.3417, 28.9018, 0.52", "-45.3751, 28.3621, 29.3569, 0.52", "-45.4472, 28.3646, 29.4009, 0.52", "-46.8306, 28.4427, 30.202, 0.52", "-46.9529, 28.4552, 30.2617, 0.52", "-48.5473, 28.7207, 31.0018, 0.52", "-49.2764, 28.9071, 31.2683, 0.52", "-49.3403, 28.9337, 31.2904, 0.52", "-50.3977, 29.5772, 31.6965, 0.52", "-50.6891, 29.7929, 31.8059, 0.52", "-51.5948, 30.4813, 32.1034, 0.52", "-52.181, 30.9052, 32.2499, 0.52", "-53.2477, 31.5549, 32.5175, 0.52", "-54.6834, 32.2078, 32.8836, 0.52", "-55.8592, 32.4783, 33.2033, 0.52", "-55.967, 32.4414, 33.2629, 0.52", "-56.5996, 31.8454, 33.9914, 0.81", "-57.1333, 31.1666, 34.804, 0.81", "-57.5492, 30.5695, 35.5007, 0.37", "-57.8275, 30.136, 36.0062, 0.37", "-59.258, 28.0219, 38.6657, 0.37", "-60.0586, 27.0136, 40.0985, 0.37", "-60.0976, 26.9761, 40.1639, 0.37", "-60.7675, 26.5374, 41.1353, 0.37", "-60.9621, 26.4755, 41.3057, 0.37", "-62.0196, 26.3711, 41.6691, 0.37", "-62.3953, 26.3734, 41.6721, 0.37", "-63.3863, 26.3938, 41.5876, 0.37", "-63.5666, 26.398, 41.5713, 0.37", "-65.4472, 26.4511, 41.3838, 0.37", "-66.3263, 26.4817, 41.2901, 0.37", "-67.0395, 26.5159, 41.2056, 0.37", "-67.2191, 26.5187, 41.1823, 0.37", "-78.3555, 26.9246, 45.8369, 0.37", "-89.3765, 29.3092, 50.1929, 0.37", "-99.8164, 30.5452, 56.1437, 0.37", "-109.502, 31.8594, 63.2432, 0.37", "-119.27, 34.8338, 69.7281, 0.37", "-128.756, 38.3373, 76.3804, 0.37", "-138.203, 43.4903, 81.9835, 0.37" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "-40.2935, 28.2065, 26.3942, 1.33", "-40.2906, 28.2742, 26.3959, 1.33", "-40.2902, 28.8537, 26.4104, 1.11", "-40.3553, 29.7286, 26.4315, 0.88", "-40.4902, 31.0062, 26.462, 0.88", "-40.4988, 31.0734, 26.4636, 0.88", "-40.7396, 32.8678, 26.5629, 0.74", "-40.7552, 32.9691, 26.5704, 0.74", "-40.961, 34.2757, 26.6869, 0.74", "-40.9706, 34.3423, 26.6939, 0.74", "-41.1856, 36.3868, 26.8501, 0.74", "-41.2947, 37.7367, 26.9159, 0.74", "-41.2984, 37.8043, 26.9178, 0.74", "-41.3393, 38.8295, 26.9187, 0.74", "-41.3663, 39.9072, 26.8495, 0.74", "-41.4129, 41.6021, 26.6416, 0.74", "-41.4513, 43.1025, 26.341, 0.74", "-41.4534, 43.1683, 26.3254, 0.74", "-41.4705, 43.7265, 26.1644, 1.03", "-41.4699, 44.9991, 25.7488, 0.81", "-41.4649, 45.0621, 25.7254, 0.81", "-41.3186, 45.8387, 25.4096, 0.81", "-40.8418, 47.6169, 24.6236, 0.59", "-40.4308, 49.0123, 24.019, 0.59", "-40.1163, 49.9895, 23.6039, 0.59", "-39.6739, 51.2701, 23.1246, 0.59", "-39.1577, 52.7753, 22.5985, 0.59", "-39.1396, 52.8275, 22.5816, 0.59", "-38.6489, 54.2382, 22.3348, 0.59", "-38.6262, 54.3239, 22.344, 0.59", "-38.4456, 55.5834, 22.8487, 0.59", "-38.44, 55.9833, 23.1011, 0.81", "-38.4822, 56.4449, 23.4265, 0.81", "-38.7765, 58.5694, 24.9515, 0.81", "-38.9071, 59.2963, 25.4857, 0.81", "-39.0747, 60.186, 26.0773, 0.74", "-39.2469, 61.1196, 26.6556, 0.74", "-39.4692, 62.5064, 27.4406, 0.74", "-39.4766, 62.5583, 27.4651, 0.74", "-39.6457, 63.9141, 27.9124, 0.74", "-39.7771, 65.1796, 28.2452, 0.74", "-39.8491, 66.0854, 28.4155, 1.03", "-39.8823, 66.6388, 28.5009, 1.03", "-39.9595, 67.6947, 28.6262, 0.52", "-40.1176, 69.0441, 28.7312, 0.52", "-40.3562, 70.36, 28.7678, 0.52", "-40.5327, 71.0551, 28.8055, 0.52", "-40.5797, 71.2073, 28.8179, 0.52", "-41.1151, 72.7398, 29.0216, 0.52", "-41.5858, 73.9804, 29.2609, 0.52", "-41.8748, 74.7058, 29.4517, 0.52", "-42.3826, 76.1039, 29.9774, 0.52", "-42.4634, 76.3572, 30.0861, 0.66", "-42.4772, 76.4168, 30.1142, 0.66", "-42.5229, 77.1074, 30.4798, 0.66", "-42.5016, 77.243, 30.5522, 0.66", "-42.1056, 78.5481, 31.2164, 0.52", "-42.0831, 78.6057, 31.243, 0.52", "-41.8264, 79.2207, 31.5167, 0.88", "-41.572, 79.8133, 31.7713, 0.88", "-41.3272, 80.3923, 32.0006, 0.88", "-40.8797, 81.5167, 32.3843, 0.29", "-40.8574, 81.5785, 32.3997, 0.29", "-40.5419, 82.5516, 32.611, 0.29", "-40.5246, 82.6161, 32.6218, 0.29", "-40.393, 83.3035, 32.7105, 0.29", "-40.3873, 83.3707, 32.716, 0.29", "-40.3796, 84.0889, 32.7794, 1.03", "-40.4172, 84.8299, 32.8647, 1.03", "-40.5228, 85.8716, 33.0038, 1.03", "-40.6729, 87.0572, 33.1764, 0.37", "-40.938, 88.7696, 33.4468, 0.29", "-41.1682, 89.8707, 33.7927, 0.29", "-41.3496, 90.442, 34.0788, 0.52", "-41.4447, 90.6609, 34.2361, 0.74", "-41.4729, 90.7109, 34.2864, 0.74", "-41.5575, 90.8276, 34.452, 0.74", "-42.8251, 92.215, 37.2857, 0.52", "-43.1521, 92.5098, 38.0395, 0.52", "-43.1791, 92.5321, 38.1066, 0.52", "-43.2448, 92.5831, 38.2736, 0.88", "-43.2677, 92.6007, 38.3332, 0.88", "-43.7706, 102.205, 39.3777, 0.88", "-43.809, 111.836, 40.2874, 0.88", "-43.2192, 121.488, 40.5907, 0.88", "-42.2856, 131.043, 41.7596, 0.88", "-40.3071, 140.067, 44.5412, 0.88" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-31.2334, -0.916328, 9.82358, 0.59", "-32.2639, -0.633668, 9.65657, 0.59", "-32.8601, -0.470486, 9.58389, 0.59", "-34.0351, -0.133325, 9.47171, 0.59", "-34.7952, 0.0888074, 9.40767, 0.52", "-35.8652, 0.39616, 9.3228, 0.52", "-35.9847, 0.430044, 9.31333, 0.52", "-37.0543, 0.767448, 9.27214, 0.52", "-38.134, 1.14178, 9.22095, 0.52", "-38.2958, 1.20452, 9.20916, 0.52", "-39.2893, 1.62086, 9.11392, 0.52", "-39.3572, 1.65067, 9.10581, 0.52", "-39.9969, 1.9583, 9.01586, 0.52", "-40.1475, 2.04335, 8.99296, 0.52", "-41.269, 2.7374, 8.8284, 0.52", "-41.3749, 2.803, 8.81648, 0.52", "-42.1423, 3.28663, 8.75755, 0.52", "-42.3129, 3.38502, 8.75148, 0.52", "-42.7841, 3.6061, 8.75556, 0.52", "-42.8332, 3.62506, 8.75859, 0.52", "-43.5857, 3.8221, 8.84189, 0.52", "-43.6361, 3.83657, 8.84688, 0.52", "-44.2099, 4.01267, 8.89839, 0.66", "-44.944, 4.25985, 8.96038, 0.66", "-45.6122, 4.49278, 9.01466, 0.29", "-46.1919, 4.70713, 9.0678, 0.29", "-47.1742, 5.07915, 9.16427, 0.29", "-47.3609, 5.14945, 9.18388, 0.29", "-47.9847, 5.38119, 9.18442, 0.29", "-48.5668, 5.60094, 9.10932, 0.29", "-48.6077, 5.61563, 9.09699, 0.29", "-49.1461, 5.80034, 8.85408, 0.29", "-49.2081, 5.81478, 8.81545, 0.29", "-50.5021, 6.09439, 7.8724, 0.29", "-50.6255, 6.13173, 7.77831, 0.29", "-51.1197, 6.34162, 7.41448, 0.29", "-51.1597, 6.36003, 7.38529, 0.29", "-51.7668, 6.68343, 6.95334, 0.29", "-51.8492, 6.72951, 6.90578, 0.29", "-52.8905, 7.37946, 6.60323, 0.29", "-53.208, 7.58609, 6.50831, 0.29" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-83.3107, -56.1431, -58.2577, 0.52", "-83.4087, -57.7745, -60.9648, 0.52", "-83.5089, -58.6661, -62.2848, 0.37", "-83.5851, -59.3485, -63.3573, 0.37", "-83.5684, -61.6852, -66.5376, 0.37", "-83.5652, -61.7463, -66.6155, 0.37", "-83.5369, -62.5305, -67.6568, 0.37", "-83.5425, -62.6898, -67.8893, 0.37", "-83.8249, -64.318, -70.3989, 0.37", "-84.0453, -65.3275, -71.9565, 0.37", "-84.0597, -65.3762, -72.0265, 0.37", "-84.5878, -66.735, -74.078, 0.37", "-84.786, -67.0843, -74.6846, 0.37", "-85.063, -67.4308, -75.3329, 0.66", "-85.2676, -67.6258, -75.7035, 0.66", "-86.3825, -68.5612, -77.6183, 0.29", "-86.6001, -68.8142, -78.0836, 0.29", "-87.3029, -69.9953, -79.8501, 0.29", "-87.3677, -70.163, -80.0546, 0.29", "-87.5162, -70.6893, -80.5635, 0.29", "-87.5334, -70.7633, -80.6277, 0.29", "-87.8276, -72.9126, -82.0018, 0.29", "-87.9038, -73.9056, -82.5572, 1.18", "-87.9516, -75.2795, -83.0997, 1.18", "-88.0083, -76.1783, -83.4534, 0.66" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-83.3107, -56.1431, -58.2577, 1.18", "-84.0577, -56.4399, -58.175, 0.59", "-85.1985, -56.9202, -58.0675, 0.59", "-86.0076, -57.2785, -58.0566, 0.96", "-87.0311, -57.7204, -58.0924, 0.96", "-88.0763, -58.1327, -58.1571, 0.52", "-89.1856, -58.5458, -58.241, 0.52", "-89.2775, -58.5783, -58.2538, 0.52", "-90.2893, -58.9412, -58.4637, 0.52", "-90.8701, -59.1555, -58.6148, 0.29", "-91.5678, -59.4078, -58.8271, 0.29", "-92.4456, -59.7238, -59.0967, 0.29", "-92.4994, -59.7435, -59.1134, 0.29", "-93.3824, -60.0864, -59.3562, 0.88", "-94.4153, -60.5216, -59.5707, 0.88", "-94.5218, -60.5723, -59.5896, 0.88", "-95.0493, -60.8535, -59.6734, 0.88", "-95.1191, -60.8907, -59.6828, 0.88", "-95.7105, -61.201, -59.728, 0.52", "-96.2994, -61.4997, -59.7361, 0.44", "-97.4545, -62.0628, -59.7901, 0.44", "-97.9941, -62.3204, -59.8295, 1.25", "-98.0832, -62.3621, -59.8346, 1.25", "-99.0333, -62.8074, -59.8689, 1.47", "-99.1677, -62.8721, -59.8707, 1.47", "-100.129, -63.3111, -59.8598, 1.11", "-100.885, -63.6193, -59.8253, 0.81", "-101.606, -63.8734, -59.7658, 0.37", "-102.2, -64.061, -59.7127, 0.29", "-102.924, -64.2687, -59.6296, 0.15", "-103.499, -64.4282, -59.5474, 0.15", "-103.875, -64.5322, -59.4794, 0.96", "-104.646, -64.7539, -59.366, 0.96", "-105.195, -64.93, -59.3081, 0.96", "-105.996, -65.2171, -59.2236, 0.37", "-106.06, -65.2437, -59.2155, 0.37", "-106.681, -65.5339, -59.1262, 0.37", "-107.499, -65.9481, -59.0302, 0.66", "-108.195, -66.3257, -58.9663, 0.44", "-108.846, -66.6958, -58.9316, 0.74", "-109.572, -67.083, -58.9161, 0.74", "-110.037, -67.3206, -58.9105, 0.59", "-110.922, -67.7779, -58.9103, 0.66", "-111.821, -68.2493, -58.9458, 1.03", "-112.417, -68.5783, -58.988, 1.03", "-113.507, -69.2057, -59.1335, 0.59", "-114.177, -69.6025, -59.274, 0.44", "-115.007, -70.1079, -59.4788, 0.44", "-115.693, -70.5314, -59.7058, 0.88", "-116.355, -70.9498, -59.9841, 0.88", "-117.412, -71.6397, -60.4852, 0.52", "-118.405, -72.3099, -61.0192, 0.52", "-118.468, -72.3474, -61.0504, 0.52", "-119.675, -72.9826, -61.5916, 0.96", "-120.386, -73.2858, -61.8387, 0.52", "-121.203, -73.5334, -62.0711, 0.37", "-121.465, -73.5899, -62.1247, 0.37", "-122.988, -73.8042, -62.3586, 0.37", "-123.067, -73.8129, -62.3676, 0.37", "-124.411, -73.9148, -62.4671, 0.37", "-125.522, -73.9894, -62.5763, 0.37", "-125.591, -73.9944, -62.5845, 0.37", "-127.031, -74.1773, -62.7101, 0.37", "-128.619, -74.4645, -62.8076, 0.37", "-128.696, -74.4835, -62.8086, 0.37", "-130.154, -75.0139, -62.6106, 0.37", "-130.215, -75.0409, -62.5914, 0.37", "-131.448, -75.6521, -62.0401, 1.18", "-131.501, -75.6828, -62.0066, 1.18", "-132.044, -76.0232, -61.5969, 1.18", "-133.235, -76.7838, -60.6839, 0.44", "-133.737, -77.1095, -60.2903, 0.22", "-134.577, -77.6532, -59.6397, 0.22", "-135.191, -78.0265, -59.2229, 0.59", "-135.302, -78.0942, -59.1497, 0.59", "-135.746, -78.367, -58.8862, 0.59", "-136.155, -78.6255, -58.6872, 0.59", "-137.481, -79.579, -57.9217, 0.44", "-138.362, -80.2909, -57.3642, 0.15", "-138.409, -80.3322, -57.3345, 0.15", "-139.168, -81.0216, -56.8683, 0.15", "-139.582, -81.4111, -56.6242, 0.52", "-140.456, -82.2281, -56.1792, 0.88", "-141.164, -82.8729, -55.907, 0.52", "-141.723, -83.3483, -55.7481, 0.29", "-141.779, -83.3886, -55.7391, 0.29", "-142.222, -83.6758, -55.6993, 0.29", "-143.001, -84.0964, -55.7236, 0.29", "-143.065, -84.1212, -55.7363, 0.29", "-144.462, -84.4373, -56.0873, 0.29", "-144.853, -84.4919, -56.2094, 1.11" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-51.6907, -10.8687, 6.95425, 0.44", "-58.6395, -8.16809, 9.42841, 0.44", "-65.2009, -4.5119, 11.7651, 0.44", "-72.1746, -2.02978, 14.3862, 0.44", "-79.1547, 1.482, 15.3535, 0.44", "-86.138, 5.14057, 15.2302, 0.44", "-92.979, 9.02307, 15.7535, 0.44", "-100.149, 12.2813, 15.6802, 0.44", "-106.618, 16.4387, 13.8138, 0.44", "-113.551, 19.4073, 11.4939, 0.44", "-120.879, 21.3545, 9.38621, 0.44", "-128.205, 23.9694, 8.16384, 0.44" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-51.6907, -10.8687, 6.95425, 0.29", "-63.0263, -6.23701, 10.1548, 0.44", "-75.0216, -3.06449, 12.6181, 0.44", "-87.391, -0.708827, 13.8289, 0.44", "-100.031, -0.490146, 14.0375, 0.44", "-112.475, -0.183408, 16.2611, 0.44", "-124.843, -2.47735, 17.6474, 0.44", "-136.486, -5.45087, 21.6935, 0.44", "-147.527, -8.22104, 27.3042, 0.44", "-158.476, -8.97349, 33.6351, 0.44", "-170.614, -9.17251, 37.1917, 0.44" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-121.379, -72.2426, 9.02726, 1.11", "-121.415, -72.5319, 9.45296, 1.11", "-121.582, -73.7514, 11.204, 0.52", "-121.684, -74.3529, 12.0534, 0.22", "-121.89, -75.5186, 13.6907, 0.22", "-121.901, -75.5741, 13.7692, 0.22", "-122.148, -76.7165, 15.4831, 0.22", "-122.167, -76.7833, 15.5902, 0.22", "-122.283, -77.2284, 16.3858, 1.11", "-122.292, -77.2772, 16.4845, 1.11", "-122.326, -77.7993, 17.7045, 1.11", "-122.312, -78.5218, 19.5806, 0.52", "-122.195, -79.1368, 21.4605, 0.29", "-122.026, -79.6385, 23.1309, 0.29", "-122.015, -79.6606, 23.2097, 0.29", "-121.811, -80.0175, 24.5561, 0.29", "-121.791, -80.038, 24.6478, 0.29", "-121.328, -80.2692, 25.9829, 0.29", "-121.282, -80.276, 26.0814, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-121.379, -72.2426, 9.02726, 0.74", "-121.44, -72.2683, 9.0192, 0.74", "-121.501, -72.2904, 9.01221, 0.74", "-123.002, -72.7752, 8.85181, 0.59", "-124.21, -73.1345, 8.74117, 0.44", "-125.763, -73.5965, 8.59893, 0.44", "-125.826, -73.6152, 8.59316, 0.44", "-126.785, -73.8912, 8.49912, 0.44", "-126.857, -73.9106, 8.49109, 0.44", "-128.219, -74.1777, 8.27327, 0.44" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-9.95858, 161.858, 18.3773, 0.15", "-10.1151, 162.068, 18.3979, 0.15", "-11.1639, 163.599, 18.5069, 0.81", "-11.9163, 164.745, 18.6608, 0.22", "-12.8158, 166.134, 18.8602, 0.22", "-13.6307, 167.401, 19.0413, 0.22", "-13.6755, 167.471, 19.051, 0.22", "-14.8318, 169.352, 19.2871, 0.22", "-15.9344, 171.187, 19.5228, 0.22", "-16.3997, 171.973, 19.6807, 0.22", "-16.6139, 172.341, 19.7821, 0.66", "-16.9034, 172.845, 19.9136, 0.81", "-17.0296, 173.061, 19.9706, 0.29", "-17.6254, 174.099, 20.2757, 0.37", "-17.8529, 174.511, 20.3705, 0.37", "-18.5042, 175.539, 20.6601, 0.29", "-19.1972, 176.393, 20.9312, 0.29", "-19.27, 176.472, 20.9567, 0.29", "-20.0262, 177.225, 21.1954, 0.29", "-21.0178, 178.121, 21.4669, 0.29", "-22.8242, 179.602, 21.9491, 0.29", "-24.7779, 181.015, 22.4855, 0.29", "-25.099, 181.224, 22.5784, 0.59", "-25.1694, 181.265, 22.5954, 0.59", "-25.555, 181.458, 22.6758, 0.59", "-25.64, 181.496, 22.6926, 0.59", "-26.9589, 182.075, 22.8711, 0.29", "-27.0346, 182.108, 22.8793, 0.29", "-28.8013, 182.825, 22.9428, 0.29", "-30.0903, 183.297, 22.8779, 0.29", "-30.6571, 183.469, 22.8372, 0.59", "-31.0016, 183.538, 22.8087, 0.88", "-31.7086, 183.605, 22.7169, 0.88", "-32.9121, 183.651, 22.5535, 0.44", "-34.1207, 183.603, 22.4236, 0.29", "-35.7407, 183.442, 22.2471, 0.22", "-37.7528, 183.139, 22.076, 0.22", "-39.9953, 182.725, 21.9495, 0.22", "-40.1183, 182.699, 21.9469, 0.22", "-41.7651, 182.301, 21.97, 0.22", "-42.863, 181.997, 21.9873, 0.37", "-44.1657, 181.582, 21.9629, 0.37", "-44.3254, 181.521, 21.9637, 0.37", "-44.9383, 181.233, 22.0173, 0.37", "-45.0239, 181.192, 22.0232, 0.37", "-54.7016, 187.684, 24.3584, 0.37" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-9.95858, 161.858, 18.3773, 0.66", "-9.88378, 162.153, 18.4231, 0.66", "-9.6781, 162.953, 18.526, 0.52", "-9.35835, 164.092, 18.6708, 0.52", "-9.34034, 164.154, 18.6787, 0.52", "-8.85771, 165.849, 18.8842, 0.52", "-8.3998, 167.474, 19.0735, 0.66", "-8.00658, 168.874, 19.2257, 0.66", "-7.7357, 169.938, 19.318, 0.66", "-7.60041, 170.542, 19.3512, 1.47", "-7.43408, 171.413, 19.374, 1.77", "-7.34747, 171.973, 19.3666, 1.77", "-7.34197, 172.038, 19.3654, 1.77", "-7.3151, 172.98, 19.3182, 1.25", "-7.33225, 174.368, 19.2297, 0.52", "-7.33973, 175.185, 19.188, 0.74", "-7.33978, 175.25, 19.1865, 0.74", "-7.33476, 176.136, 19.186, 0.96", "-7.33074, 176.266, 19.19, 0.96", "-7.26879, 177.079, 19.251, 0.96", "-7.15715, 178.099, 19.3674, 0.52", "-6.98833, 179.337, 19.5307, 0.52", "-6.95529, 179.536, 19.5598, 0.52", "-6.84397, 180.099, 19.6422, 0.96", "-6.68291, 180.937, 19.7542, 1.18", "-6.55446, 181.653, 19.8185, 0.96", "-6.43318, 182.55, 19.855, 0.66", "-6.34688, 183.41, 19.8505, 0.52", "-6.29242, 184.19, 19.8245, 0.52", "-6.24624, 185.399, 19.7548, 0.52", "-6.22819, 186.676, 19.6583, 0.66", "-6.26281, 188.858, 19.461, 0.66", "-6.29975, 189.806, 19.3691, 1.25", "-6.35206, 190.814, 19.2736, 1.4", "-6.40473, 191.778, 19.1938, 1.03", "-6.43344, 192.521, 19.1442, 0.66", "-6.46471, 193.47, 19.1099, 0.44", "-6.46494, 193.545, 19.1085, 0.44", "-6.44725, 194.101, 19.1181, 0.44", "-6.43915, 194.175, 19.1217, 0.44", "-6.34319, 194.62, 19.1613, 0.66", "-6.32433, 194.682, 19.1664, 0.66", "-6.14477, 195.228, 19.2034, 0.96", "-6.11682, 195.315, 19.2086, 0.96", "-5.84107, 196.197, 19.2536, 0.96", "-5.81955, 196.268, 19.2567, 0.96", "-5.51065, 197.356, 19.2936, 0.66", "-5.18982, 198.538, 19.3286, 0.52" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-30.6126, 172.604, -35.3917, 0.22", "-31.6377, 171.908, -35.5599, 0.22", "-32.502, 171.322, -35.7018, 0.22", "-33.4634, 170.67, -35.8596, 0.22" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-30.6126, 172.604, -35.3917, 0.52", "-30.965, 172.811, -36.0503, 0.52", "-31.9444, 173.385, -37.8809, 0.52", "-32.674, 173.813, -39.2446, 0.37", "-33.0781, 174.05, -39.9999, 0.37", "-34.4153, 174.834, -42.4993, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_146",
    "id" : "dend_146",
    "points3d" : [ "17.7601, -89.3327, 88.1422, 0.37", "21.7117, -93.6027, 93.839, 0.37", "26.5951, -96.147, 99.7899, 0.37", "31.3939, -99.4893, 105.425, 0.37", "36.4528, -102.294, 111.112, 0.37", "40.4365, -105.19, 117.56, 0.37" ],
    "parent" : "dend_144",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_145",
    "id" : "dend_145",
    "points3d" : [ "17.7601, -89.3327, 88.1422, 0.52", "20.9167, -93.2756, 97.0562, 0.37", "23.4204, -96.7146, 106.367, 0.37", "24.1927, -99.6073, 116.148, 0.37", "23.8603, -103.354, 125.674, 0.37", "24.5099, -107.32, 135.099, 0.37" ],
    "parent" : "dend_144",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_117",
    "id" : "dend_117",
    "points3d" : [ "24.9047, 244.315, 0.0541813, 0.59", "24.903, 244.702, -0.0130751, 0.59", "24.926, 245.665, -0.161926, 0.29", "24.9437, 246.208, -0.2407, 0.29", "24.9923, 246.95, -0.38644, 0.29", "25.0006, 247.023, -0.402574, 0.29", "25.109, 247.78, -0.577948, 0.96", "25.2852, 248.642, -0.774608, 0.96", "25.3905, 249.032, -0.874827, 0.96", "25.6402, 249.821, -1.08807, 0.52", "25.8127, 250.328, -1.17432, 0.37", "25.8451, 250.423, -1.18177, 0.37", "26.0507, 251.011, -1.17838, 0.37", "26.0717, 251.074, -1.17345, 0.37", "26.2643, 251.812, -1.08738, 0.37", "26.4477, 253.23, -0.912474, 0.22", "26.4778, 253.813, -0.854465, 0.22", "26.4774, 254.121, -0.830691, 1.11", "26.4485, 254.611, -0.803403, 1.11", "26.3684, 255.38, -0.787784, 0.52", "26.1816, 256.61, -0.845386, 0.37", "26.1706, 256.675, -0.854661, 0.37", "26.1369, 256.889, -0.884624, 0.66", "26.1254, 256.981, -0.896919, 0.66", "26.1198, 257.046, -0.905136, 0.66", "26.0749, 258.052, -1.02197, 0.44", "26.0428, 259.014, -1.12836, 0.44", "26.0382, 259.08, -1.13566, 0.44", "25.9248, 259.912, -1.23182, 0.44", "25.8877, 260.107, -1.2588, 0.44", "25.6407, 261.106, -1.41512, 0.44", "25.6243, 261.159, -1.4244, 0.44", "25.4701, 261.625, -1.50951, 1.4", "25.1609, 262.561, -1.68447, 1.4", "24.8505, 263.489, -1.86333, 0.44", "24.5978, 264.295, -2.01842, 0.44", "24.558, 264.429, -2.04434, 0.44", "24.3572, 265.171, -2.19917, 0.44", "24.3449, 265.235, -2.21237, 0.44", "24.317, 265.472, -2.27329, 0.88", "24.2835, 266.114, -2.53244, 0.88", "24.2848, 266.241, -2.59557, 0.88", "24.3018, 266.704, -2.84704, 0.22", "24.3886, 268.068, -3.65081, 0.15", "24.472, 269.16, -4.31878, 0.15", "24.6092, 270.71, -5.30966, 0.15", "24.7478, 272.056, -6.19911, 0.15", "24.7536, 272.101, -6.23163, 0.15", "24.7842, 272.304, -6.38431, 0.59", "24.8369, 272.635, -6.6329, 0.59", "24.9843, 273.602, -7.26962, 0.29", "25.0219, 273.902, -7.43237, 0.74", "25.1418, 274.825, -7.8937, 0.29", "25.1919, 275.2, -8.06481, 0.22", "25.4459, 276.918, -8.76423, 0.22", "25.4583, 276.979, -8.78563, 0.22", "25.5415, 277.305, -8.87042, 0.88", "25.6426, 277.635, -8.93285, 0.88", "25.6957, 277.766, -8.94213, 0.88", "25.8543, 278.028, -8.95552, 0.29", "26.3878, 278.523, -8.93009, 0.22", "26.4365, 278.566, -8.92567, 0.22", "26.7414, 278.824, -8.88638, 0.81", "26.9387, 279.006, -8.85671, 0.81", "26.985, 279.052, -8.84907, 0.81", "27.288, 279.391, -8.7957, 0.22", "27.542, 279.708, -8.74852, 0.22", "27.6269, 279.833, -8.73609, 0.22", "27.9257, 280.332, -8.7046, 0.22", "28.0013, 280.473, -8.69955, 0.22", "28.1394, 280.748, -8.6994, 0.22", "28.1781, 280.832, -8.70498, 0.22", "28.4232, 281.35, -8.73817, 0.22", "28.4607, 281.435, -8.74393, 0.22", "30.5533, 290.599, -9.76113, 0.22" ],
    "parent" : "dend_115",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_116",
    "id" : "dend_116",
    "points3d" : [ "24.9047, 244.315, 0.0541813, 0.52", "24.4921, 244.203, 0.0224986, 0.52", "24.3166, 244.155, 0.0180423, 0.52", "23.7808, 244.009, 0.0044284, 0.44", "23.7023, 243.988, 0.0024347, 0.44", "22.7018, 243.715, -0.0229929, 0.44", "21.6068, 243.416, -0.0508106, 0.15", "21.5275, 243.398, -0.0512126, 0.15", "10.9743, 238.518, -0.746602, 0.15" ],
    "parent" : "dend_115",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_109",
    "id" : "dend_109",
    "points3d" : [ "150.273, -43.8333, 22.0698, 0.37", "153.901, -49.0844, 26.7114, 0.37", "157.13, -55.6288, 29.8373, 0.37", "160.633, -61.6564, 33.5923, 0.37", "164.168, -68.488, 35.6147, 0.37", "167.271, -75.5722, 37.516, 0.37" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "150.273, -43.8333, 22.0698, 0.52", "160.603, -48.7822, 17.1221, 0.37", "170.52, -55.2349, 13.0909, 0.37", "181.22, -60.6494, 9.61164, 0.37", "192.71, -64.6752, 6.89978, 0.37" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-40.3071, 140.067, 44.5412, 0.37", "-40.3765, 148.698, 45.8593, 0.37", "-41.1728, 156.861, 48.7978, 0.37", "-40.7678, 165.292, 50.9984, 0.37", "-39.1931, 173.39, 53.7906, 0.37" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "-40.3071, 140.067, 44.5412, 0.52", "-39.7717, 150.4, 47.5792, 0.37", "-41.4928, 160.247, 51.5543, 0.37", "-45.2723, 169.783, 54.7173, 0.37", "-48.2696, 179.823, 57.1396, 0.37" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-53.208, 7.58609, 6.50831, 0.29", "-53.4625, 7.67268, 6.49845, 0.29" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-88.0083, -76.1783, -83.4534, 0.15", "-88.5138, -76.9003, -83.2554, 0.15", "-88.5522, -76.966, -83.2211, 0.15", "-88.8675, -77.5099, -82.8912, 0.15", "-88.9586, -77.6531, -82.8134, 0.15", "-89.3688, -78.2766, -82.4931, 0.15", "-89.4567, -78.4093, -82.4117, 0.15", "-90.2311, -79.3697, -81.7953, 0.15", "-90.3087, -79.4596, -81.7323, 0.15", "-91.1747, -80.3844, -81.049, 0.15", "-91.2496, -80.4566, -80.9943, 0.15", "-92.0438, -81.1883, -80.3727, 0.15", "-93.2763, -82.3039, -79.3505, 0.15", "-93.3224, -82.345, -79.3152, 0.15", "-94.0422, -82.9808, -78.7579, 0.15", "-94.3311, -83.2248, -78.5358, 0.15", "-95.0811, -83.8598, -77.9752, 0.15", "-95.9273, -84.5837, -77.3822, 0.15", "-97.1724, -85.7097, -76.4098, 0.15", "-97.7118, -86.1968, -75.9948, 0.44", "-98.1168, -86.5623, -75.6871, 0.81" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-88.0083, -76.1783, -83.4534, 0.22", "-88.0169, -76.7577, -83.3876, 0.22", "-88.0156, -77.8599, -83.31, 0.22", "-88.0122, -79.1786, -83.2472, 0.22", "-88.0136, -79.9736, -83.2221, 0.22", "-88.0125, -81.5083, -83.1993, 0.22", "-88.0109, -82.2267, -83.1999, 0.22", "-88.0039, -82.4949, -83.2171, 0.59", "-87.9935, -82.625, -83.2321, 0.59", "-87.9685, -82.9262, -83.2815, 0.59", "-87.9422, -83.4712, -83.4065, 0.29", "-87.9326, -83.5885, -83.4378, 0.29", "-87.8705, -84.267, -83.5396, 0.22", "-87.8051, -84.9446, -83.6156, 0.22" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-144.853, -84.4919, -56.2094, 0.59", "-144.989, -84.7441, -55.4478, 0.59", "-145.089, -84.9819, -54.7958, 0.59", "-145.249, -85.2165, -54.0338, 0.44", "-145.267, -85.2356, -53.9634, 0.44", "-145.531, -85.6322, -52.5477, 0.07", "-145.579, -85.7607, -51.8344, 0.07", "-145.578, -85.7657, -51.7591, 0.07", "-145.519, -85.7328, -50.9048, 0.07", "-145.504, -85.699, -50.619, 0.07", "-145.459, -85.3866, -48.8715, 0.07", "-145.47, -84.9397, -46.8625, 0.07", "-145.538, -84.6313, -45.4955, 0.07", "-145.683, -84.3881, -44.4782, 0.07", "-145.932, -84.0981, -43.3191, 0.07", "-145.95, -84.0821, -43.2586, 0.07", "-146.439, -83.7677, -42.1673, 0.07", "-147.213, -83.4389, -40.9711, 0.07", "-148.51, -83.0363, -39.3178, 0.07", "-148.59, -83.0141, -39.2233, 0.07", "-148.992, -82.8962, -38.7686, 0.07", "-149.035, -82.8832, -38.7217, 0.07", "-150.642, -82.3818, -37.0963, 0.07", "-153.089, -81.6684, -34.7043, 0.07", "-153.368, -81.5979, -34.4341, 0.74", "-153.532, -81.5559, -34.278, 0.74" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-144.853, -84.4919, -56.2094, 0.29", "-145.429, -84.8711, -56.4615, 0.29", "-146.061, -85.2937, -56.7184, 0.22", "-147.11, -86.0566, -57.1371, 0.29", "-147.158, -86.093, -57.1553, 0.29", "-147.808, -86.6106, -57.4066, 0.29", "-148.102, -86.8613, -57.5172, 0.52", "-148.147, -86.9026, -57.5325, 0.52", "-148.512, -87.2736, -57.652, 0.22", "-148.682, -87.4681, -57.6993, 0.22", "-149.357, -88.2007, -57.9362, 0.07", "-150.009, -88.8562, -58.1936, 0.07", "-150.099, -88.9393, -58.2258, 0.07", "-150.446, -89.2398, -58.335, 0.88", "-150.74, -89.4788, -58.4186, 0.88", "-151.63, -90.1885, -58.666, 0.29", "-152.366, -90.7421, -58.8491, 0.29", "-153.167, -91.3076, -59.0495, 0.59", "-153.625, -91.6229, -59.16, 0.59", "-153.677, -91.6566, -59.1711, 0.59" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-128.205, 23.9694, 8.16384, 0.37", "-135.691, 28.0417, 9.28155, 0.37", "-142.678, 32.7903, 10.8935, 0.37", "-150.615, 35.7016, 12.3479, 0.37", "-158.791, 38.2777, 11.8296, 0.37" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-128.205, 23.9694, 8.16384, 0.52", "-139.35, 28.4873, 7.01789, 0.37", "-149.964, 33.9808, 5.09292, 0.37", "-159.721, 41.1649, 4.49265, 0.37", "-167.926, 49.8081, 1.88836, 0.37" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-170.614, -9.17251, 37.1917, 0.37", "-179.05, -9.37662, 39.7188, 0.37", "-187.597, -9.58093, 41.8416, 0.37", "-195.797, -10.7771, 44.8584, 0.37", "-203.89, -12.4399, 47.9608, 0.37" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-170.614, -9.17251, 37.1917, 0.52", "-181.082, -8.80467, 39.6421, 0.37", "-191.34, -7.57526, 42.6323, 0.37", "-201.654, -8.73106, 45.4976, 0.37", "-212.028, -10.6288, 47.6898, 0.37" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-128.219, -74.1777, 8.27327, 0.52", "-128.077, -74.0274, 8.16255, 0.52", "-127.729, -73.6583, 7.89066, 0.52", "-127.42, -73.332, 7.65026, 0.37", "-126.962, -72.8478, 7.29358, 0.29", "-126.666, -72.534, 7.06241, 0.15", "-126.632, -72.4985, 7.03628, 0.15" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-128.219, -74.1777, 8.27327, 0.44", "-128.558, -74.1861, 8.54131, 0.44", "-129.104, -74.2166, 8.97801, 0.74", "-129.787, -74.3044, 9.50544, 1.03", "-130.789, -74.4596, 10.1681, 1.03", "-131.968, -74.7005, 10.8983, 1.18", "-132.032, -74.7155, 10.9374, 1.18", "-132.438, -74.818, 11.1863, 1.03", "-133.523, -75.0957, 11.8642, 0.52", "-135.071, -75.4938, 12.8677, 0.52", "-135.816, -75.7051, 13.4034, 0.52", "-135.884, -75.7237, 13.4566, 0.52", "-136.687, -75.9431, 14.1802, 0.52", "-136.749, -75.9581, 14.2424, 0.52", "-137.605, -76.1568, 15.2355, 0.52", "-138.457, -76.4044, 16.2085, 0.52", "-138.509, -76.42, 16.2633, 0.52", "-139.211, -76.6535, 16.9189, 0.52", "-140.665, -77.1912, 18.0741, 0.52", "-140.725, -77.2165, 18.1159, 0.52", "-142.439, -78.0347, 19.1231, 0.52", "-142.493, -78.0651, 19.1474, 0.52", "-143.245, -78.5355, 19.4431, 1.03", "-144.021, -79.0811, 19.6977, 1.33", "-144.945, -79.854, 19.9805, 1.33", "-145.619, -80.4563, 20.1849, 0.88", "-147.04, -81.8726, 20.5842, 0.52", "-147.098, -81.9375, 20.5992, 0.52", "-148.139, -83.1634, 20.8532, 0.52", "-149.293, -84.6006, 21.1421, 0.52", "-149.347, -84.6696, 21.1552, 0.52", "-150.082, -85.6315, 21.3603, 1.11", "-151.104, -86.9277, 21.7605, 1.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-5.18982, 198.538, 19.3286, 0.52", "-5.22328, 198.962, 19.3783, 0.52", "-5.27081, 199.732, 19.4615, 0.52", "-5.32591, 200.664, 19.4859, 0.66", "-5.3807, 201.695, 19.475, 1.11", "-5.389, 201.807, 19.4704, 1.11", "-5.47784, 202.911, 19.4101, 1.4", "-5.55768, 203.749, 19.3083, 1.4", "-5.67246, 204.707, 19.1148, 1.11", "-5.68355, 204.778, 19.0974, 1.11", "-5.93738, 206.344, 18.6827, 0.81", "-5.94899, 206.415, 18.6636, 0.81", "-6.22964, 208.297, 18.1644, 0.74", "-6.35313, 209.634, 17.8916, 0.66", "-6.39212, 211.102, 17.6853, 0.66", "-6.37589, 212.288, 17.5494, 0.66", "-6.37029, 212.41, 17.5418, 0.66", "-6.31191, 213.595, 17.516, 0.74", "-6.15191, 216.477, 17.6781, 0.74", "-6.03541, 218.728, 17.9304, 0.74", "-6.03013, 218.885, 17.9528, 0.74", "-6.04508, 220.293, 18.1726, 0.74", "-6.11884, 221.307, 18.3265, 1.25", "-6.32847, 222.645, 18.5229, 1.69", "-6.36987, 222.803, 18.5454, 1.69", "-6.64113, 223.729, 18.658, 1.69", "-6.87763, 224.608, 18.7235, 1.25", "-7.12308, 225.763, 18.7297, 0.81", "-7.22645, 226.605, 18.7156, 0.81", "-7.23011, 226.78, 18.7114, 0.81", "-7.21694, 227.567, 18.7324, 0.81", "-7.21423, 227.63, 18.7355, 0.81", "-7.17057, 228.792, 18.8141, 0.81", "-7.14404, 229.966, 18.8932, 0.81", "-7.17581, 232.074, 19.0511, 0.74", "-7.25794, 233.769, 19.1886, 0.74", "-7.32776, 234.674, 19.2352, 1.11", "-7.38274, 235.393, 19.2356, 1.4", "-7.44706, 236.125, 19.1987, 1.55", "-7.55708, 237.287, 19.0847, 1.03", "-7.63755, 238.207, 18.9446, 0.81", "-7.74108, 239.963, 18.6363, 0.59", "-7.79138, 241.397, 18.3325, 0.59", "-7.80806, 242.705, 18.0157, 0.59", "-7.80841, 242.787, 17.9953, 0.59", "-7.81054, 243.773, 17.7488, 0.88", "-7.81964, 245.094, 17.4474, 0.88", "-7.85028, 247.181, 17.0828, 0.81", "-7.85195, 247.254, 17.0727, 0.81", "-7.86054, 249.186, 16.8354, 0.66", "-7.85963, 249.875, 16.7952, 0.66", "-7.85814, 249.96, 16.7958, 0.66", "-7.82263, 251.044, 16.8833, 1.11", "-7.78225, 251.949, 17.0408, 1.47", "-7.73247, 252.789, 17.1975, 1.47", "-7.64236, 254.035, 17.5083, 1.33", "-7.60051, 255.054, 17.7902, 0.66", "-7.60192, 255.115, 17.8069, 0.66", "-7.64897, 255.607, 17.9622, 0.52", "-7.76923, 256.413, 18.2194, 0.52", "-7.9191, 257.238, 18.4756, 0.74", "-8.03636, 257.982, 18.6649, 0.96", "-8.23074, 259.308, 19.0011, 0.96", "-8.42521, 261.006, 19.3474, 0.66", "-8.54083, 262.4, 19.5695, 0.66", "-8.54363, 262.473, 19.5763, 0.66", "-8.52139, 263.86, 19.5975, 0.66", "-8.51606, 263.934, 19.5944, 0.66", "-8.39657, 265.2, 19.4678, 0.66", "-8.38812, 265.478, 19.4184, 0.66", "-8.43196, 266.448, 19.2146, 0.66", "-8.45039, 266.614, 19.1804, 0.66", "-8.63285, 267.634, 18.9749, 0.66", "-8.8486, 268.712, 18.7505, 0.66", "-9.13896, 270.05, 18.5576, 0.66", "-9.30016, 271.003, 18.4882, 0.52", "-9.30733, 271.066, 18.4877, 0.52", "-9.35862, 272.049, 18.572, 0.52", "-9.35718, 272.122, 18.5858, 0.52", "-9.25467, 273.562, 18.9676, 0.52", "-9.13467, 274.879, 19.4247, 0.52", "-9.12749, 275.017, 19.4748, 0.52", "-9.11733, 275.893, 19.74, 0.81", "-9.1194, 276.811, 19.972, 1.25", "-9.13628, 277.886, 20.2045, 1.47", "-9.16723, 278.611, 20.3258, 1.47", "-9.23518, 279.605, 20.4787, 0.81", "-9.35947, 281.074, 20.6916, 0.52", "-9.49967, 282.327, 20.8855, 0.52", "-9.71127, 283.926, 21.1723, 0.52", "-9.81857, 284.669, 21.322, 1.18", "-10.0222, 285.966, 21.6052, 1.18", "-10.2108, 287.192, 21.911, 0.66", "-10.353, 288.388, 22.2489, 0.52", "-10.3522, 288.459, 22.2673, 0.52", "-10.2434, 288.901, 22.352, 0.44", "-10.213, 288.979, 22.3598, 0.44", "-9.89728, 289.698, 22.4174, 0.44", "-9.32592, 291.057, 22.4988, 0.44", "-8.66839, 292.758, 22.5748, 0.44", "-8.13859, 294.387, 22.6476, 0.44", "-7.50202, 296.756, 22.7478, 0.44", "-7.17909, 298.302, 22.7676, 0.44", "-7.04609, 299.339, 22.7308, 0.44", "-7.02634, 299.965, 22.6794, 1.4", "-7.0496, 301.076, 22.538, 1.4", "-7.05913, 301.296, 22.4974, 1.4", "-7.11601, 302.68, 22.1874, 0.96", "-7.14062, 304.038, 21.8361, 0.66", "-7.14623, 305.32, 21.5198, 0.52", "-7.1553, 306.515, 21.2555, 0.52", "-7.15492, 306.598, 21.238, 0.52", "-7.12867, 307.972, 20.9627, 0.52", "-7.10446, 308.986, 20.7883, 0.81", "-7.08178, 309.582, 20.6806, 1.25", "-7.04616, 310.181, 20.5591, 1.25", "-6.98754, 311.375, 20.3203, 0.66", "-6.88124, 312.817, 20.0308, 0.52", "-6.87532, 312.879, 20.0183, 0.52", "-6.79388, 313.868, 19.8425, 0.52", "-6.74455, 314.645, 19.7315, 0.52", "-6.73224, 315.747, 19.6363, 0.52", "-6.73635, 315.821, 19.636, 0.52", "-6.81942, 316.548, 19.6936, 0.66", "-6.93301, 317.543, 19.8111, 0.96", "-6.94082, 317.616, 19.8218, 0.96", "-6.98845, 318.382, 19.9205, 1.11", "-6.98879, 319.08, 19.9992, 0.59", "-6.9336, 320.292, 19.9997, 0.22", "-6.855, 321.187, 19.9229, 0.22", "-6.77991, 321.965, 19.8342, 0.52", "-6.69226, 323.021, 19.6942, 0.96", "-6.64467, 323.7, 19.584, 1.18", "-6.5575, 325.639, 19.2241, 0.52", "-6.54865, 326.926, 18.984, 0.52", "-6.61021, 328.038, 18.8288, 0.37", "-6.67474, 328.666, 18.78, 0.81", "-6.6951, 328.823, 18.7826, 0.81", "-6.79828, 329.642, 18.8596, 0.81", "-6.89925, 330.61, 19.0215, 0.52", "-6.9089, 331.551, 19.1383, 0.52", "-6.90201, 331.635, 19.145, 0.52", "-6.81521, 332.287, 19.1905, 0.88", "-6.65545, 333.46, 19.254, 0.88", "-6.52211, 334.381, 19.2882, 0.52", "-6.34093, 335.869, 19.2894, 0.52", "-6.22558, 337.182, 19.2673, 0.52", "-6.22227, 337.256, 19.2634, 0.52", "-6.21821, 338.635, 19.1456, 0.52", "-6.22224, 338.747, 19.1333, 0.52", "-6.30647, 339.994, 18.9862, 0.52", "-6.4117, 341.213, 18.7746, 0.52", "-6.46353, 342.121, 18.5964, 0.81", "-6.48681, 343.037, 18.4152, 1.25", "-6.48585, 343.12, 18.3985, 1.25", "-6.47417, 344.11, 18.2114, 1.25", "-6.4472, 345.522, 17.9656, 0.66", "-6.4076, 346.525, 17.8176, 0.44", "-6.32126, 347.553, 17.6934, 0.37", "-6.30913, 347.636, 17.6841, 0.37", "-6.13486, 348.378, 17.6211, 0.37", "-6.09611, 348.484, 17.6169, 0.37", "-5.54392, 349.509, 17.4611, 0.37", "-5.21388, 350.042, 17.3266, 0.59", "-4.83638, 350.613, 17.1536, 0.88", "-4.37006, 351.33, 16.8968, 1.11", "-3.95296, 351.986, 16.6243, 1.11", "-2.7315, 354.136, 15.6899, 0.37", "-2.23467, 355.162, 15.1808, 0.37", "-2.18409, 355.292, 15.1074, 0.37", "-1.92727, 356.072, 14.6263, 1.03", "-1.69678, 356.9, 14.0869, 1.33", "-1.51107, 357.666, 13.608, 1.33", "-1.23852, 358.956, 12.8969, 0.52", "-0.99669, 360.059, 12.2923, 0.37", "-0.85349, 360.693, 11.976, 0.29", "-0.83935, 360.759, 11.9473, 0.29", "-0.672057, 361.762, 11.5948, 0.29", "-0.659854, 361.906, 11.5684, 0.29", "-0.697219, 362.912, 11.5768, 0.29", "-0.709296, 362.996, 11.5839, 0.29", "-0.97522, 363.974, 11.7094, 0.66", "-1.29383, 364.916, 11.8551, 0.81", "-1.81298, 366.203, 12.0726, 0.81", "-2.15638, 367.094, 12.2434, 1.4", "-2.44336, 367.999, 12.4248, 1.4", "-2.85567, 369.558, 12.7508, 0.66", "-2.87152, 369.638, 12.7709, 0.66", "-3.01907, 370.833, 13.0717, 0.59", "-3.10681, 372.256, 13.4128, 0.37", "-3.13323, 374.377, 13.9459, 0.37", "-3.13208, 374.439, 13.9611, 0.37", "-3.09878, 375.943, 14.3578, 0.37", "-3.10392, 376.982, 14.653, 0.37", "-3.10625, 377.053, 14.6748, 0.37", "-3.17784, 377.704, 14.908, 1.11", "-3.35561, 378.615, 15.2683, 1.25", "-3.74208, 380.22, 15.8761, 1.25", "-3.9795, 381.053, 16.1819, 1.25", "-3.9973, 381.12, 16.2071, 1.25", "-4.32176, 382.465, 16.7063, 0.59", "-4.48626, 383.4, 17.0664, 0.29", "-4.5591, 384.198, 17.3722, 0.29", "-4.56027, 384.339, 17.4184, 0.29", "-4.50906, 385.423, 17.7735, 0.29", "-4.50225, 385.494, 17.7947, 0.29", "-4.32082, 386.776, 18.0981, 0.29", "-4.30995, 386.86, 18.1069, 0.29", "-4.3156, 387.436, 17.9978, 0.29", "-4.38296, 387.854, 17.7846, 0.66", "-4.40528, 387.986, 17.7024, 0.66", "-4.52937, 388.801, 17.1554, 0.66", "-4.64298, 390.256, 16.2221, 0.66", "-4.65008, 391.576, 15.4596, 0.52", "-4.5726, 392.853, 14.7278, 0.52", "-4.44903, 394.058, 14.0088, 0.52", "-4.43663, 394.153, 13.9532, 0.52", "-4.15856, 395.912, 12.9914, 0.52", "-4.0824, 396.395, 12.773, 0.74", "-3.87955, 397.839, 12.1402, 0.74", "-3.76232, 399.198, 11.5176, 0.59", "-3.76771, 399.78, 11.2258, 0.59", "-3.79049, 400.133, 11.0443, 0.88", "-3.91174, 400.928, 10.6557, 0.88", "-4.08963, 402.263, 10.0954, 1.11", "-4.15716, 403.152, 9.82654, 0.59", "-4.18598, 404.021, 9.60218, 0.52", "-4.18605, 404.093, 9.58384, 0.52", "-4.13275, 405.797, 9.10959, 0.52", "-4.04743, 407.447, 8.5936, 0.52", "-3.92717, 409.203, 8.07434, 0.52", "-3.79972, 410.576, 7.64892, 0.52", "-3.78998, 410.656, 7.62234, 0.52", "-3.65417, 411.678, 7.25349, 0.52", "-3.4772, 412.669, 6.8139, 1.25" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-5.18982, 198.538, 19.3286, 0.59", "-5.21749, 198.578, 19.3131, 0.59", "-5.56149, 199.068, 19.1208, 0.59", "-5.97477, 199.657, 18.8897, 0.37", "-6.22746, 200.017, 18.7484, 0.37", "-6.50173, 200.408, 18.595, 0.15", "-11.5194, 206.913, 15.8305, 0.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-53.4625, 7.67268, 6.49845, 0.52", "-53.7651, 8.02737, 6.2345, 0.52", "-54.0882, 8.42831, 6.00622, 0.52", "-54.1885, 8.5569, 5.94225, 0.52", "-54.6128, 9.07005, 5.68079, 0.22", "-55.0809, 9.62076, 5.39222, 0.22", "-55.2114, 9.77428, 5.31177, 0.22", "-55.7053, 10.3467, 5.04971, 0.22", "-55.8135, 10.4715, 4.99179, 0.22", "-56.2714, 11.0083, 4.76378, 0.22", "-56.3118, 11.0551, 4.74913, 0.59" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-53.4625, 7.67268, 6.49845, 0.66", "-53.6146, 7.45444, 6.39385, 0.66", "-54.1696, 6.65835, 6.01228, 0.66", "-54.8359, 5.70243, 5.5541, 0.15", "-60.9347, -3.6295, 0.520066, 0.15" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-87.8051, -84.9446, -83.6156, 0.29", "-87.2892, -84.9218, -83.4494, 0.29", "-86.8218, -84.9012, -83.2988, 0.29", "-86.7683, -84.8989, -83.2815, 0.29", "-86.0936, -84.8691, -83.0641, 0.29", "-85.9541, -84.8629, -83.0192, 0.29", "-84.8625, -84.8148, -82.6674, 0.37" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-87.8051, -84.9446, -83.6156, 0.22", "-88.1701, -85.6549, -84.009, 0.22", "-88.745, -86.7299, -84.5564, 0.22", "-89.0735, -87.344, -84.8691, 0.81", "-89.3738, -87.9054, -85.1549, 0.37", "-89.9686, -89.0176, -85.7212, 0.29", "-90.1149, -89.2911, -85.8604, 0.29", "-90.1481, -89.3416, -85.8849, 0.29" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-151.104, -86.9277, 21.7605, 0.59", "-150.921, -87.7227, 21.7016, 0.59", "-150.872, -88.6291, 21.7606, 0.29", "-150.875, -88.7182, 21.7721, 0.29", "-150.935, -89.8262, 21.9315, 0.29", "-150.938, -89.9038, 21.9441, 0.29", "-150.987, -91.3891, 22.1972, 0.29", "-151.036, -92.5961, 22.4451, 0.29", "-151.191, -94.8309, 22.9329, 0.29", "-151.197, -94.9184, 22.9523, 0.29", "-151.292, -96.1216, 23.2241, 0.59", "-151.297, -96.1981, 23.2418, 0.59", "-151.294, -96.71, 23.3708, 0.74" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-151.104, -86.9277, 21.7605, 0.96", "-151.224, -86.9837, 21.7762, 0.96", "-152.255, -87.5668, 21.957, 0.96", "-153.23, -88.1823, 22.0869, 0.74", "-153.342, -88.2528, 22.0982, 0.74", "-155.128, -89.233, 22.1971, 0.59", "-155.212, -89.2754, 22.1997, 0.59", "-157.375, -90.2585, 22.1944, 0.59", "-158.688, -90.791, 22.1436, 0.59", "-159.727, -91.1588, 22.0745, 0.52", "-161.11, -91.6004, 21.929, 0.52", "-161.199, -91.6281, 21.9152, 0.52", "-161.868, -91.8764, 21.7928, 0.52", "-162.048, -91.9579, 21.7546, 0.52", "-163.069, -92.5637, 21.561, 0.52", "-163.815, -93.2091, 21.4145, 0.88", "-164.952, -94.4277, 21.1927, 1.18", "-165.68, -95.3414, 21.0094, 0.88", "-166.332, -96.2799, 20.8261, 0.66", "-166.419, -96.4116, 20.7884, 0.66", "-167.238, -97.7242, 20.316, 0.66", "-167.286, -97.8003, 20.2859, 0.66", "-167.945, -98.8447, 19.8096, 0.66", "-168.522, -99.7076, 19.4045, 0.66", "-169.86, -101.724, 18.3853, 0.66", "-169.913, -101.795, 18.3537, 0.66", "-170.498, -102.394, 18.1306, 1.11", "-170.58, -102.463, 18.1155, 1.11", "-171.373, -103.017, 18.0129, 1.11", "-172.861, -103.953, 17.8558, 0.74", "-174.618, -104.926, 17.765, 0.52", "-176.474, -105.879, 17.63, 0.52", "-177.92, -106.522, 17.4955, 0.52", "-179.987, -107.344, 17.2755, 1.25", "-180.075, -107.372, 17.2646, 1.25", "-180.857, -107.589, 17.1928, 1.25", "-180.944, -107.622, 17.1812, 1.25", "-182.331, -108.245, 17.1472, 0.96", "-182.441, -108.3, 17.1561, 0.96", "-183.566, -108.907, 17.3823, 0.59", "-185.451, -110.045, 17.8738, 0.44", "-187.233, -111.225, 18.4338, 0.44", "-188.624, -112.214, 19.0576, 0.74", "-189.481, -112.906, 19.5326, 1.11", "-190.313, -113.628, 20.0582, 1.11", "-191.034, -114.303, 20.5812, 0.81", "-191.097, -114.358, 20.6267, 0.81", "-193.081, -115.823, 21.7873, 0.29", "-194.225, -116.581, 22.2306, 0.29", "-194.317, -116.632, 22.2546, 0.29", "-195.19, -117.071, 22.3869, 0.29", "-196.65, -117.755, 22.4789, 0.29", "-198.129, -118.487, 22.4913, 0.29", "-198.305, -118.584, 22.4811, 0.29", "-198.715, -118.852, 22.5117, 0.88", "-199.441, -119.443, 22.5949, 0.88", "-199.588, -119.594, 22.6159, 0.88", "-200.202, -120.295, 22.7666, 0.66", "-201.132, -121.41, 23.0619, 0.29", "-202.242, -122.729, 23.4569, 0.15", "-203.067, -123.697, 23.7749, 0.88", "-203.917, -124.686, 24.1167, 1.11", "-204.911, -125.835, 24.5347, 0.37", "-205.786, -126.853, 24.8733, 0.37", "-206.716, -127.953, 25.2214, 0.37", "-207.253, -128.618, 25.4261, 1.03", "-207.823, -129.34, 25.6469, 1.18", "-208.459, -130.234, 25.8962, 1.18", "-209.614, -132.274, 26.4046, 0.52", "-209.669, -132.394, 26.4371, 0.52", "-210.212, -133.975, 26.9185, 0.52", "-210.243, -134.101, 26.9616, 0.52", "-210.669, -136.329, 27.799, 0.37", "-210.974, -138.474, 28.6761, 0.37", "-211.088, -139.27, 29.0569, 1.03", "-211.28, -140.336, 29.5927, 1.03", "-211.638, -141.993, 30.462, 0.59", "-211.995, -143.287, 31.1862, 0.29", "-212.026, -143.376, 31.24, 0.29", "-212.82, -145.111, 32.3297, 0.29", "-213.664, -146.679, 33.338, 0.29", "-214.158, -147.465, 33.8048, 0.29", "-214.742, -148.286, 34.2345, 0.88", "-214.794, -148.359, 34.2677, 0.88", "-215.428, -149.243, 34.6181, 0.88", "-216.107, -150.202, 34.9146, 0.44", "-217.224, -151.807, 35.3581, 0.29", "-218.229, -153.535, 35.6948, 0.29", "-218.31, -153.706, 35.7157, 0.29", "-218.537, -154.267, 35.7717, 0.81", "-218.568, -154.357, 35.779, 0.81", "-218.861, -155.385, 35.8462, 0.81", "-219.448, -158.183, 36.0137, 0.52", "-219.659, -159.484, 36.0282, 1.18", "-219.848, -160.58, 36.0215, 1.18" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-3.4772, 412.669, 6.8139, 1.69", "-3.6867, 413.853, 7.01292, 1.69", "-3.80024, 414.457, 7.18761, 1.69", "-4.00531, 415.511, 7.55206, 0.52", "-4.15888, 416.301, 7.82496, 0.52", "-4.30042, 417.028, 8.0765, 0.52", "-4.37774, 417.426, 8.21392, 0.52", "-4.53542, 418.338, 8.67719, 0.52", "-4.54269, 418.388, 8.70422, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-3.4772, 412.669, 6.8139, 0.37", "-3.62968, 412.731, 6.65731, 0.37", "-4.4205, 413.054, 5.84518, 0.37", "-5.38714, 413.449, 4.8525, 0.37", "-5.91273, 413.664, 4.31274, 0.37", "-6.92743, 414.078, 3.27069, 1.03", "-7.06021, 414.132, 3.13434, 1.03" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-56.3118, 11.0551, 4.74913, 0.37", "-56.486, 11.1729, 4.7316, 0.37", "-56.6239, 11.2643, 4.71899, 0.37", "-57.4001, 11.7804, 4.64987, 0.37", "-57.524, 11.8648, 4.63888, 0.37", "-58.2145, 12.3441, 4.57779, 0.29", "-58.279, 12.3916, 4.57197, 0.29", "-58.9143, 12.8604, 4.47005, 0.29", "-58.9714, 12.8991, 4.45714, 0.29", "-59.1857, 13.0177, 4.39535, 0.29", "-59.2832, 13.0656, 4.36394, 0.29", "-59.9128, 13.3392, 4.12428, 0.29", "-60.6312, 13.6317, 3.82739, 0.29", "-61.4273, 14.0191, 3.66198, 0.22", "-62.3535, 14.5652, 3.52546, 0.22", "-62.4039, 14.5975, 3.51993, 0.22", "-63.076, 15.0637, 3.403, 0.22", "-63.1239, 15.0983, 3.39141, 0.22", "-65.434, 16.8794, 2.74939, 0.22", "-67.0824, 18.2128, 2.19792, 0.22", "-67.1511, 18.2676, 2.16868, 0.22", "-68.7002, 19.3999, 1.42187, 0.22", "-69.2765, 19.7671, 1.10438, 0.96", "-69.3232, 19.7919, 1.07598, 0.96", "-69.8846, 20.0221, 0.681983, 0.96", "-71.0022, 20.4232, 0.0152626, 0.22", "-71.7712, 20.7224, -0.379962, 0.22", "-72.3976, 20.9941, -0.645257, 0.22", "-73.4776, 21.553, -1.054, 0.22", "-74.5133, 22.1389, -1.42446, 0.22", "-74.6538, 22.2243, -1.469, 0.22", "-75.2976, 22.6455, -1.63604, 0.22", "-75.9278, 23.0626, -1.78578, 0.22", "-77.2709, 23.9441, -2.06223, 0.22", "-77.6564, 24.1647, -2.16483, 0.22", "-78.474, 24.531, -2.39784, 0.22", "-78.6273, 24.586, -2.44495, 0.22", "-79.7455, 24.9002, -2.84821, 0.22", "-79.8087, 24.9152, -2.87372, 0.22", "-81.4344, 25.2545, -3.74274, 0.22", "-82.4344, 25.4616, -4.32377, 0.22", "-82.4924, 25.4732, -4.36075, 0.22", "-83.6907, 25.7143, -5.17343, 0.22", "-83.7457, 25.7257, -5.21472, 0.22", "-85.3812, 26.1089, -6.42658, 0.22" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-56.3118, 11.0551, 4.74913, 0.15", "-56.6835, 11.5754, 8.99818, 0.15", "-56.7327, 11.6624, 9.75636, 0.07", "-56.738, 11.6838, 9.97074, 0.07", "-56.6583, 11.8216, 11.7879, 0.29", "-56.7482, 11.8331, 11.755, 0.29", "-57.146, 11.8338, 11.8662, 0.29", "-57.6396, 11.782, 11.9366, 0.29", "-58.5968, 11.6421, 12.1609, 0.29", "-58.7939, 11.6089, 12.2134, 0.29", "-60.5644, 11.2974, 12.7476, 0.29", "-62.9696, 10.7981, 13.509, 0.29", "-64.2266, 10.4986, 13.9256, 0.29", "-64.402, 10.4481, 13.9886, 0.29", "-65.8833, 9.9669, 14.5516, 0.29", "-66.068, 9.90488, 14.6214, 0.29", "-67.1344, 9.53439, 15.0143, 0.29", "-67.2325, 9.50157, 15.0528, 0.29", "-68.0842, 9.22625, 15.5119, 0.22", "-68.35, 9.14561, 15.6676, 0.22", "-68.8726, 8.99869, 16.0003, 0.22", "-68.9529, 8.97903, 16.0502, 0.22", "-70.8676, 8.62172, 17.1792, 0.22", "-71.4812, 8.52261, 17.5354, 0.22", "-72.5578, 8.35189, 18.152, 0.22", "-72.7355, 8.31661, 18.2515, 0.22", "-73.9376, 8.06177, 18.8635, 0.22", "-75.6664, 7.67069, 19.6318, 0.22", "-75.7425, 7.65105, 19.6576, 0.22", "-76.428, 7.45228, 19.866, 0.22", "-77.2992, 7.1857, 20.0958, 0.22", "-78.4354, 6.85932, 20.3869, 0.22", "-78.6306, 6.80691, 20.4308, 0.22", "-79.7227, 6.58423, 20.6396, 0.22", "-81.0675, 6.39017, 20.8883, 0.22", "-81.1999, 6.38104, 20.9197, 0.22", "-83.1091, 6.35696, 21.4646, 0.22", "-83.3317, 6.36314, 21.5367, 0.22", "-85.545, 6.51454, 22.2897, 0.22", "-85.8395, 6.55705, 22.4018, 0.22", "-87.2614, 6.83516, 22.9812, 0.22", "-87.5537, 6.88871, 23.0945, 0.22", "-88.3394, 7.02834, 23.37, 0.22", "-88.5471, 7.0595, 23.4588, 0.22", "-89.6714, 7.20989, 23.9441, 0.22", "-89.7597, 7.218, 23.9819, 0.22", "-90.8575, 7.28565, 24.4218, 0.22", "-91.139, 7.28918, 24.5337, 0.22", "-92.4097, 7.26207, 25.0297, 0.22", "-93.6208, 7.23344, 25.4617, 0.22", "-96.3322, 7.15905, 26.334, 0.22", "-96.438, 7.16281, 26.3646, 0.22", "-97.8902, 7.30161, 26.7432, 0.22", "-98.1771, 7.3248, 26.8377, 0.22", "-99.2019, 7.39228, 27.2159, 0.22", "-99.335, 7.39479, 27.2765, 0.22", "-100.71, 7.36435, 27.877, 0.22", "-100.798, 7.36066, 27.9175, 0.22", "-103.523, 7.18325, 29.5759, 0.22", "-103.71, 7.16371, 29.7056, 0.22", "-104.537, 6.99247, 30.3308, 0.22", "-105.307, 6.69756, 30.9338, 0.22", "-105.593, 6.5394, 31.1661, 0.22", "-107.035, 5.72017, 32.3966, 0.22", "-107.106, 5.68027, 32.4494, 0.22", "-108.152, 5.0822, 33.2385, 0.22", "-109.622, 4.18141, 34.2778, 0.22", "-109.693, 4.13514, 34.3246, 0.22", "-111.6, 2.9751, 35.4256, 0.22", "-113.462, 1.96532, 36.3089, 0.22", "-113.577, 1.91151, 36.3605, 0.22", "-115.466, 1.29268, 37.0113, 0.22", "-115.663, 1.25174, 37.056, 0.22", "-117.265, 1.06623, 37.1911, 0.22", "-117.952, 1.05648, 37.1288, 0.66", "-118.165, 1.07574, 37.0988, 0.66", "-120.355, 1.34847, 36.8028, 0.66", "-120.449, 1.36414, 36.7891, 0.66", "-122.412, 1.60411, 36.5315, 0.66", "-122.821, 1.63705, 36.482, 0.66", "-124.608, 1.68811, 36.3222, 0.66", "-125.475, 1.67304, 36.2831, 0.37", "-125.681, 1.65518, 36.2887, 0.37", "-126.806, 1.53175, 36.3035, 0.29", "-127.802, 1.39756, 36.3151, 0.15", "-128.381, 1.33517, 36.3155, 0.22", "-128.587, 1.3147, 36.3118, 0.22", "-129.618, 1.22121, 36.369, 0.22", "-130.133, 1.18013, 36.4115, 0.22", "-130.747, 1.1268, 36.5026, 0.22", "-130.933, 1.1046, 36.5468, 0.22", "-131.735, 1.03003, 36.8082, 0.22", "-133.164, 0.898563, 37.367, 0.22", "-146.415, 0.702463, 41.0994, 0.22", "-159.366, 2.13721, 45.5582, 0.22", "-172.363, 3.86103, 49.777, 0.22" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-219.848, -160.58, 36.0215, 0.74", "-219.344, -161.373, 36.521, 0.74", "-219.083, -161.691, 36.757, 0.59", "-218.456, -162.402, 37.3154, 0.59", "-218.338, -162.53, 37.4208, 0.59", "-217.683, -163.252, 37.9398, 0.52", "-216.687, -164.357, 38.6823, 0.29", "-215.978, -165.11, 39.235, 0.29", "-215.907, -165.182, 39.2865, 0.29", "-214.542, -166.444, 40.183, 0.29", "-213.774, -167.176, 40.6775, 0.59", "-213.739, -167.211, 40.6979, 0.59" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-219.848, -160.58, 36.0215, 0.81", "-220.191, -161.034, 36.3958, 0.81", "-220.684, -161.728, 36.9833, 0.52", "-221.331, -162.645, 37.7665, 0.44", "-221.768, -163.314, 38.2811, 0.44", "-222.539, -164.588, 39.1242, 0.44", "-222.914, -165.222, 39.4913, 0.88", "-223.274, -165.868, 39.8284, 0.88", "-223.335, -165.994, 39.8781, 0.88", "-223.786, -166.952, 40.0966, 0.59", "-224.19, -167.746, 40.1598, 0.66", "-224.642, -168.544, 40.1165, 0.44", "-224.691, -168.627, 40.1091, 0.44", "-225.236, -169.489, 40.0285, 0.44", "-225.721, -170.214, 39.9932, 1.18", "-226.285, -170.944, 40.0222, 1.18", "-227.178, -172.04, 40.1272, 1.77" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-4.54269, 418.388, 8.70422, 0.66", "-4.8262, 418.554, 8.56613, 0.66", "-5.499, 418.878, 8.2847, 0.37", "-6.19866, 419.218, 8.01431, 0.22", "-7.21175, 419.76, 7.6457, 0.22", "-7.83158, 420.161, 7.4053, 0.22", "-7.95928, 420.265, 7.35379, 0.22", "-8.46149, 420.812, 7.16809, 0.22", "-8.68207, 421.186, 7.10321, 0.22", "-8.85759, 421.69, 7.03262, 0.52", "-9.05882, 422.554, 6.92477, 0.88", "-9.20399, 423.389, 6.83335, 0.88", "-9.36543, 424.533, 6.72298, 0.44", "-9.53784, 426.088, 6.58838, 0.37", "-9.64646, 427.314, 6.49601, 0.37", "-9.6957, 427.891, 6.45629, 0.88", "-9.78381, 428.914, 6.40088, 0.96", "-9.85088, 429.768, 6.34949, 0.96", "-9.85448, 429.849, 6.34459, 0.96", "-9.85138, 431.073, 6.29447, 0.88" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-4.54269, 418.388, 8.70422, 0.52", "-4.90259, 418.566, 8.63419, 0.52", "-5.32238, 418.831, 8.55522, 0.52", "-5.81166, 419.163, 8.46427, 0.52", "-5.90061, 419.223, 8.44774, 0.52", "-6.67502, 419.748, 8.30379, 0.52", "-7.29265, 420.167, 8.18899, 0.52", "-7.75145, 420.522, 8.10581, 0.52", "-7.83125, 420.595, 8.09187, 0.52" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-227.178, -172.04, 40.1272, 0.52", "-227.176, -172.583, 40.5882, 0.52", "-227.103, -173.346, 41.3182, 0.52", "-227.095, -173.444, 41.4153, 0.52", "-226.92, -174.192, 42.0102, 0.52", "-226.846, -174.479, 42.2187, 0.52", "-226.622, -175.341, 42.825, 0.44", "-226.455, -175.941, 43.2555, 0.37", "-226.179, -176.796, 43.8394, 0.37", "-225.531, -178.651, 45.0547, 0.37", "-225.224, -179.452, 45.5352, 0.37", "-225.113, -179.744, 45.6943, 0.37" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-227.178, -172.04, 40.1272, 0.66", "-227.261, -172.068, 40.0932, 0.66", "-227.867, -172.294, 39.8362, 0.59", "-229.498, -172.918, 39.2382, 0.59", "-230.592, -173.371, 38.8827, 0.59", "-230.653, -173.399, 38.8624, 0.59", "-233.111, -174.601, 38.0632, 0.29", "-233.182, -174.638, 38.042, 0.29", "-235.062, -175.684, 37.5166, 0.29", "-235.766, -176.089, 37.3396, 1.03", "-236.749, -176.624, 37.1279, 0.88", "-237.579, -177.067, 36.9626, 0.88", "-238.826, -177.797, 36.7954, 0.29", "-238.981, -177.892, 36.7787, 0.29", "-239.773, -178.421, 36.7273, 0.29", "-240.79, -179.132, 36.7231, 0.29", "-241.629, -179.757, 36.7926, 0.29", "-243.699, -181.423, 37.1796, 0.29", "-244.254, -181.914, 37.3465, 0.96", "-244.861, -182.46, 37.6168, 0.96", "-245.404, -182.957, 37.968, 0.44", "-246.533, -183.972, 38.9199, 0.37", "-247.401, -184.727, 39.8153, 0.74", "-247.886, -185.144, 40.4081, 0.74", "-248.659, -185.869, 41.4341, 0.74", "-249.239, -186.431, 42.2385, 0.37", "-249.921, -187.129, 43.2915, 0.22", "-250.38, -187.617, 44.0813, 0.22", "-250.497, -187.744, 44.278, 0.22", "-251.12, -188.387, 45.2683, 0.22", "-251.204, -188.48, 45.3957, 0.22", "-251.726, -189.059, 46.2124, 0.22", "-252.458, -189.75, 47.4684, 0.22", "-252.499, -189.778, 47.5348, 0.22", "-252.664, -189.861, 47.7936, 0.22", "-252.77, -189.885, 47.9557, 0.52" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-9.85138, 431.073, 6.29447, 0.44", "-9.3856, 432.195, 5.55339, 0.44", "-9.11166, 432.918, 5.11623, 0.44", "-9.0824, 433.01, 5.06913, 0.44", "-8.91206, 433.899, 4.73599, 0.96", "-8.90394, 433.956, 4.71762, 0.96", "-8.73111, 435.332, 4.32987, 1.55", "-8.64675, 436.272, 4.13608, 1.55", "-8.5646, 437.376, 3.94483, 0.74", "-8.468, 439.504, 3.68159, 0.59", "-8.46776, 439.875, 3.65548, 0.81", "-8.48255, 440.439, 3.6371, 0.96", "-8.52394, 441.111, 3.64801, 0.96", "-8.57361, 441.785, 3.66071, 0.44", "-8.68719, 443.224, 3.67089, 0.37", "-8.81043, 444.487, 3.63802, 0.37", "-8.83048, 444.627, 3.62991, 0.37", "-8.9873, 445.515, 3.54806, 0.37", "-9.00033, 445.584, 3.5401, 0.37", "-9.16608, 446.633, 3.40224, 0.37", "-9.26308, 447.695, 3.22066, 0.29", "-9.27461, 448.436, 3.0885, 0.29", "-9.25065, 449.051, 2.98703, 1.03", "-9.16556, 450.001, 2.84168, 1.4", "-9.008, 451.163, 2.70005, 1.4", "-8.84175, 452.043, 2.62335, 1.4", "-8.60639, 453.074, 2.56854, 0.29", "-8.39731, 453.955, 2.54221, 0.29", "-8.37419, 454.06, 2.53852, 0.29", "-8.15052, 455.162, 2.49117, 0.29", "-8.12681, 455.313, 2.48543, 0.29", "-7.92288, 456.918, 2.35063, 0.29", "-7.90385, 457.139, 2.32613, 0.29", "-7.85654, 458.004, 2.22508, 0.74", "-7.85444, 458.064, 2.21858, 0.74", "-7.83809, 458.876, 2.14072, 0.74", "-7.80349, 460.574, 2.0065, 0.37", "-7.77744, 461.875, 1.93762, 0.96", "-7.76291, 462.691, 1.92217, 1.18", "-7.75443, 463.584, 1.93743, 1.18", "-7.75268, 464.693, 1.97107, 0.37", "-7.75306, 464.845, 1.97837, 0.37", "-7.77536, 466.03, 2.06511, 0.15", "-7.79224, 466.997, 2.10095, 0.15", "-7.81311, 467.466, 2.11395, 0.52", "-7.86164, 468.151, 2.12755, 1.18", "-7.86801, 468.222, 2.12864, 1.18", "-7.97091, 469.207, 2.1379, 1.18", "-8.09235, 470.245, 2.14563, 0.81", "-8.20913, 471.242, 2.15487, 0.22", "-8.21721, 471.312, 2.15572, 0.22", "-8.30408, 472.048, 2.16572, 0.22", "-8.31901, 472.148, 2.16549, 0.22", "-8.45829, 472.971, 2.15495, 0.22", "-8.46965, 473.041, 2.15398, 0.22", "-8.48539, 473.147, 2.15286, 0.88", "-8.56799, 473.819, 2.14476, 0.88", "-8.71225, 475.285, 2.12507, 0.15", "-8.71589, 475.366, 2.12479, 0.15", "-8.6696, 476.409, 2.06398, 0.15", "-8.66036, 476.489, 2.05652, 0.15", "-8.58106, 476.826, 2.02112, 0.74", "-8.47075, 477.172, 1.98763, 0.81", "-8.30042, 477.676, 1.94256, 0.81", "-8.0625, 478.816, 1.86398, 0.37", "-8.05481, 478.887, 1.86033, 0.37", "-7.99474, 480.047, 1.81506, 0.37", "-8.00362, 481.531, 1.76882, 0.37", "-8.03572, 482.065, 1.7506, 0.37", "-8.29814, 484.326, 1.67852, 0.37", "-8.53867, 485.889, 1.64406, 0.37", "-8.61923, 486.354, 1.62998, 1.18", "-8.76875, 487.076, 1.59751, 1.18", "-9.15249, 488.822, 1.50078, 0.37", "-9.56182, 490.703, 1.38396, 0.37", "-9.58037, 490.782, 1.37726, 0.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-9.85138, 431.073, 6.29447, 0.81", "-9.54474, 431.309, 6.34723, 0.81", "-9.25977, 431.546, 6.38956, 0.22", "-8.09177, 432.54, 6.5546, 0.22", "-6.71929, 433.766, 6.73599, 0.22", "-6.66539, 433.816, 6.74291, 0.22", "-4.84582, 435.617, 6.97569, 0.22", "-4.1163, 436.403, 7.07324, 0.22", "-4.06212, 436.468, 7.0809, 0.22", "-3.69261, 436.984, 7.11623, 0.96", "-3.52291, 437.264, 7.12766, 1.33", "-3.08431, 438.035, 7.18249, 0.22", "-2.62289, 439.0, 7.34599, 0.15", "-2.57372, 439.1, 7.36748, 0.15", "-2.24232, 439.754, 7.52034, 0.29", "-2.20255, 439.827, 7.54043, 0.29", "-1.8229, 440.47, 7.74388, 0.29", "-1.45918, 441.01, 7.96729, 0.44", "-1.17076, 441.389, 8.1797, 0.44" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-225.113, -179.744, 45.6943, 0.29", "-224.009, -180.654, 46.1731, 0.29", "-223.213, -181.282, 46.5364, 0.29", "-222.124, -182.112, 47.0671, 0.29", "-221.467, -182.613, 47.3873, 0.22", "-220.98, -182.985, 47.6247, 0.22", "-220.072, -183.678, 48.0677, 0.22", "-219.556, -184.016, 48.3665, 0.88", "-219.195, -184.255, 48.5642, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-225.113, -179.744, 45.6943, 0.37", "-225.806, -181.036, 45.4304, 0.37", "-226.097, -181.49, 45.349, 0.37", "-226.759, -182.452, 45.1842, 0.37", "-226.885, -182.606, 45.1545, 0.66", "-227.922, -183.737, 44.8529, 0.29", "-228.419, -184.2, 44.7069, 0.15", "-229.227, -184.748, 44.5017, 0.15", "-229.284, -184.776, 44.4825, 0.15", "-230.282, -185.009, 44.0535, 0.15", "-231.04, -185.075, 43.7243, 0.15", "-231.942, -184.942, 43.3375, 0.15", "-232.235, -184.853, 43.1835, 0.15", "-232.75, -184.597, 42.8638, 0.15", "-233.127, -184.362, 42.6161, 0.81" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-9.58037, 490.782, 1.37726, 0.29", "-10.4243, 492.013, 0.184557, 0.29", "-11.2965, 492.995, -0.739877, 0.29", "-11.6897, 493.438, -1.15666, 0.29", "-11.9941, 493.781, -1.47924, 0.96", "-12.6778, 494.55, -2.2039, 0.96", "-12.7296, 494.609, -2.2588, 0.96", "-13.5684, 495.228, -2.75605, 0.52" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-9.58037, 490.782, 1.37726, 0.37", "-9.22413, 491.225, 1.3751, 0.37", "-9.17549, 491.297, 1.37479, 0.37", "-8.71698, 491.992, 1.37274, 0.37", "-8.64577, 492.107, 1.3744, 0.37", "-8.26732, 492.736, 1.38779, 0.37", "-8.22307, 492.811, 1.39, 0.37", "-7.12782, 494.733, 1.49548, 0.29", "-7.08952, 494.805, 1.49969, 0.29", "-6.43932, 496.137, 1.58118, 0.29", "-6.38572, 496.261, 1.58935, 0.29", "-6.10615, 497.02, 1.61758, 0.29", "-6.07008, 497.129, 1.61972, 0.29", "-5.90169, 497.622, 1.62577, 0.52", "-5.69082, 498.183, 1.62697, 0.52", "-5.32254, 498.947, 1.62517, 0.37", "-4.59332, 500.167, 1.65539, 0.22", "-4.38188, 500.447, 1.67051, 0.22", "-3.41434, 501.626, 1.74047, 0.22", "-3.35927, 501.685, 1.74457, 0.22", "-2.31035, 502.643, 1.8426, 0.22", "-1.72599, 503.078, 1.91829, 1.25", "-1.04277, 503.479, 2.05702, 1.25" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-13.5684, 495.228, -2.75605, 0.22", "-13.096, 497.486, -3.51058, 0.22", "-13.0408, 498.611, -3.94896, 0.22", "-13.0162, 499.686, -4.49305, 0.22", "-13.0436, 500.388, -4.87397, 0.96", "-13.0486, 500.464, -4.91726, 0.96", "-13.125, 501.277, -5.39197, 0.37", "-13.3594, 502.607, -6.25636, 0.22", "-13.5369, 503.661, -7.08621, 0.37", "-13.6983, 504.766, -8.05577, 0.37", "-13.7488, 505.171, -8.42394, 0.88", "-13.7908, 505.569, -8.75624, 0.88", "-13.9017, 506.926, -9.7354, 0.52", "-13.9048, 507.001, -9.77981, 0.52", "-13.9852, 508.412, -10.3854, 0.22", "-13.9872, 508.483, -10.4092, 0.22", "-13.972, 509.992, -10.8062, 0.22", "-13.9555, 510.996, -11.0134, 0.52", "-13.9716, 511.473, -11.0868, 0.22", "-14.0165, 512.482, -11.2524, 0.22", "-14.0197, 512.582, -11.2661, 0.22", "-14.0596, 513.705, -11.4395, 0.81", "-14.0719, 514.74, -11.6566, 0.22", "-14.062, 516.081, -11.9724, 0.22", "-14.0579, 516.178, -12.0003, 0.22", "-13.984, 517.51, -12.4182, 0.22", "-13.9721, 517.692, -12.4675, 0.22", "-13.8703, 518.5, -12.694, 0.59", "-13.7434, 519.129, -12.8791, 0.59", "-13.4534, 520.326, -13.2495, 0.37", "-13.252, 520.979, -13.5173, 0.22", "-12.8029, 522.226, -14.1391, 0.22", "-12.1881, 523.843, -14.9566, 0.88", "-11.9725, 524.393, -15.2291, 0.88", "-11.9413, 524.466, -15.2663, 0.88", "-11.0259, 526.397, -16.284, 0.29", "-10.9896, 526.465, -16.3246, 0.29", "-10.5396, 527.306, -16.8772, 0.29", "-10.4173, 527.608, -17.058, 0.66", "-10.3283, 527.88, -17.2276, 0.66", "-10.1049, 528.844, -17.7904, 0.22", "-10.0849, 529.014, -17.8693, 0.22", "-9.94118, 529.77, -18.2392, 0.22", "-9.81862, 530.279, -18.5047, 0.22", "-9.48902, 531.594, -19.0641, 0.22", "-9.44648, 531.755, -19.1202, 0.22", "-9.25435, 532.51, -19.2608, 0.22", "-8.86512, 533.958, -19.409, 0.22", "-8.83323, 534.054, -19.4154, 0.22", "-8.24076, 535.592, -19.5021, 0.29", "-8.20827, 535.674, -19.5041, 0.29", "-7.48285, 537.923, -19.3383, 0.29", "-7.43226, 538.104, -19.3153, 0.29", "-7.09595, 539.515, -19.0625, 0.59", "-6.88066, 540.504, -18.8883, 0.15", "-6.30171, 543.41, -18.3749, 0.15", "-5.81486, 546.88, -17.854, 0.15", "-5.80798, 546.968, -17.846, 0.15", "-5.67219, 548.648, -17.9247, 0.15", "-5.61445, 550.078, -18.2021, 0.15", "-5.61229, 550.171, -18.2393, 0.15", "-5.60715, 551.841, -19.4797, 0.15", "-5.54293, 553.558, -21.1488, 0.15", "-5.43968, 556.279, -24.0964, 0.15", "-5.4072, 557.107, -25.1799, 0.15", "-5.40035, 557.22, -25.3505, 0.15", "-5.33577, 557.738, -26.2256, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-13.5684, 495.228, -2.75605, 0.52", "-14.0633, 495.3, -2.61282, 0.52", "-15.3749, 495.492, -2.23318, 0.52", "-15.4346, 495.501, -2.21587, 0.52", "-16.7507, 495.693, -1.83494, 0.52", "-17.0804, 495.741, -1.7395, 0.66", "-17.177, 495.755, -1.71154, 0.66" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_138", "dend_131", "dend_120", "dend_97", "dend_48", "dend_23", "dend_14", "dend_5", "dend_0", "dend_139", "dend_135", "dend_132", "dend_128", "dend_121", "dend_111", "dend_98", "dend_52", "dend_49", "dend_27", "dend_24", "dend_20", "dend_15", "dend_11", "dend_6", "dend_2", "dend_1", "dend_148", "dend_140", "dend_137", "dend_136", "dend_134", "dend_133", "dend_130", "dend_129", "dend_127", "dend_122", "dend_113", "dend_112", "dend_104", "dend_99", "dend_74", "dend_53", "dend_51", "dend_50", "dend_47", "dend_28", "dend_26", "dend_25", "dend_22", "dend_21", "dend_17", "dend_16", "dend_13", "dend_12", "dend_8", "dend_7", "dend_4", "dend_3", "dend_150", "dend_149", "dend_143", "dend_141", "dend_126", "dend_123", "dend_119", "dend_114", "dend_110", "dend_105", "dend_103", "dend_100", "dend_91", "dend_84", "dend_75", "dend_67", "dend_54", "dend_32", "dend_29", "dend_19", "dend_18", "dend_10", "dend_9", "dend_152", "dend_151", "dend_147", "dend_144", "dend_142", "dend_125", "dend_124", "dend_118", "dend_115", "dend_107", "dend_106", "dend_102", "dend_101", "dend_96", "dend_95", "dend_92", "dend_85", "dend_79", "dend_76", "dend_71", "dend_68", "dend_66", "dend_55", "dend_46", "dend_33", "dend_31", "dend_30", "dend_146", "dend_145", "dend_117", "dend_116", "dend_109", "dend_108", "dend_94", "dend_93", "dend_86", "dend_83", "dend_80", "dend_78", "dend_77", "dend_73", "dend_72", "dend_70", "dend_69", "dend_65", "dend_56", "dend_35", "dend_34", "dend_88", "dend_87", "dend_82", "dend_81", "dend_64", "dend_57", "dend_37", "dend_36", "dend_90", "dend_89", "dend_63", "dend_58", "dend_39", "dend_38", "dend_60", "dend_59", "dend_41", "dend_40", "dend_62", "dend_61", "dend_43", "dend_42", "dend_45", "dend_44" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_138", "dend_131", "dend_120", "dend_97", "dend_48", "dend_23", "dend_14", "dend_5", "dend_0", "dend_139", "dend_135", "dend_132", "dend_128", "dend_121", "dend_111", "dend_98", "dend_52", "dend_49", "dend_27", "dend_24", "dend_20", "dend_15", "dend_11", "dend_6", "dend_2", "dend_1", "dend_148", "dend_140", "dend_137", "dend_136", "dend_134", "dend_133", "dend_130", "dend_129", "dend_127", "dend_122", "dend_113", "dend_112", "dend_104", "dend_99", "dend_74", "dend_53", "dend_51", "dend_50", "dend_47", "dend_28", "dend_26", "dend_25", "dend_22", "dend_21", "dend_17", "dend_16", "dend_13", "dend_12", "dend_8", "dend_7", "dend_4", "dend_3", "dend_150", "dend_149", "dend_143", "dend_141", "dend_126", "dend_123", "dend_119", "dend_114", "dend_110", "dend_105", "dend_103", "dend_100", "dend_91", "dend_84", "dend_75", "dend_67", "dend_54", "dend_32", "dend_29", "dend_19", "dend_18", "dend_10", "dend_9", "dend_152", "dend_151", "dend_147", "dend_144", "dend_142", "dend_125", "dend_124", "dend_118", "dend_115", "dend_107", "dend_106", "dend_102", "dend_101", "dend_96", "dend_95", "dend_92", "dend_85", "dend_79", "dend_76", "dend_71", "dend_68", "dend_66", "dend_55", "dend_46", "dend_33", "dend_31", "dend_30", "dend_146", "dend_145", "dend_117", "dend_116", "dend_109", "dend_108", "dend_94", "dend_93", "dend_86", "dend_83", "dend_80", "dend_78", "dend_77", "dend_73", "dend_72", "dend_70", "dend_69", "dend_65", "dend_56", "dend_35", "dend_34", "dend_88", "dend_87", "dend_82", "dend_81", "dend_64", "dend_57", "dend_37", "dend_36", "dend_90", "dend_89", "dend_63", "dend_58", "dend_39", "dend_38", "dend_60", "dend_59", "dend_41", "dend_40", "dend_62", "dend_61", "dend_43", "dend_42", "dend_45", "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_131" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_120" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_135" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_132" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_128" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_148" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_137" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_133" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_127" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_113" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_112" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_150" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_149" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_141" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_126" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_123" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_114" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_110" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_147" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_144" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_142" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_124" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_118" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_115" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_146" ]
  }, {
    "name" : "OneSecGrp_SectionRef_113",
    "groups" : [ ],
    "sections" : [ "dend_145" ]
  }, {
    "name" : "OneSecGrp_SectionRef_114",
    "groups" : [ ],
    "sections" : [ "dend_117" ]
  }, {
    "name" : "OneSecGrp_SectionRef_117",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_119",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_126",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_128",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_131",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_138",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_142",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_149",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_155",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_138" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_139" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_140" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_111" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_120",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_121" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_143" ]
  }, {
    "name" : "OneSecGrp_SectionRef_133",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_122" ]
  }, {
    "name" : "OneSecGrp_SectionRef_134",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_141",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_129" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_130" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_136" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_151" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_152" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_129",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_119" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_125",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_122",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_135",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_136",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_121",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_130",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_137",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_132",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_127",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_116",
    "groups" : [ ],
    "sections" : [ "dend_109" ]
  }, {
    "name" : "OneSecGrp_SectionRef_124",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_118",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_123",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_134" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_125" ]
  }, {
    "name" : "OneSecGrp_SectionRef_115",
    "groups" : [ ],
    "sections" : [ "dend_116" ]
  }, {
    "name" : "OneSecGrp_SectionRef_143",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_144",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_147",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_151",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_152",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_148",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_140",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_139",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_146",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_145",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_150",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_153",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_156",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_154",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108", "dend_109", "dend_110", "dend_111", "dend_112", "dend_113", "dend_114", "dend_115", "dend_116", "dend_117", "dend_118", "dend_119", "dend_120", "dend_121", "dend_122", "dend_123", "dend_124", "dend_125", "dend_126", "dend_127", "dend_128", "dend_129", "dend_130", "dend_131", "dend_132", "dend_133", "dend_134", "dend_135", "dend_136", "dend_137", "dend_138", "dend_139", "dend_140", "dend_141", "dend_142", "dend_143", "dend_144", "dend_145", "dend_146", "dend_147", "dend_148", "dend_149", "dend_150", "dend_151", "dend_152" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_138", "dend_138", "dend_138", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_140", "dend_140", "dend_140", "dend_140", "dend_140", "dend_140", "dend_140", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_136", "dend_134", "dend_134", "dend_134", "dend_134", "dend_133", "dend_133", "dend_133", "dend_133", "dend_130", "dend_129", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_84", "dend_84", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_125", "dend_125", "dend_125", "dend_125", "dend_124", "dend_124", "dend_124", "dend_124", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_102", "dend_102", "dend_102", "dend_102", "dend_101", "dend_101", "dend_101", "dend_101", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_145", "dend_145", "dend_145", "dend_145", "dend_145", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_108", "dend_108", "dend_108", "dend_108", "dend_94", "dend_94", "dend_94", "dend_94", "dend_93", "dend_93", "dend_93", "dend_93", "dend_86", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_87", "dend_87", "dend_87", "dend_87", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_LBC_5fcaa92b0e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_138, id: dend_138, parent: soma_0
create dend_138
public dend_138
// Section: dend_131, id: dend_131, parent: soma_0
create dend_131
public dend_131
// Section: dend_120, id: dend_120, parent: soma_0
create dend_120
public dend_120
// Section: dend_97, id: dend_97, parent: soma_0
create dend_97
public dend_97
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_139, id: dend_139, parent: dend_138
create dend_139
public dend_139
// Section: dend_135, id: dend_135, parent: dend_131
create dend_135
public dend_135
// Section: dend_132, id: dend_132, parent: dend_131
create dend_132
public dend_132
// Section: dend_128, id: dend_128, parent: dend_120
create dend_128
public dend_128
// Section: dend_121, id: dend_121, parent: dend_120
create dend_121
public dend_121
// Section: dend_111, id: dend_111, parent: dend_97
create dend_111
public dend_111
// Section: dend_98, id: dend_98, parent: dend_97
create dend_98
public dend_98
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_148, id: dend_148, parent: dend_139
create dend_148
public dend_148
// Section: dend_140, id: dend_140, parent: dend_139
create dend_140
public dend_140
// Section: dend_137, id: dend_137, parent: dend_135
create dend_137
public dend_137
// Section: dend_136, id: dend_136, parent: dend_135
create dend_136
public dend_136
// Section: dend_134, id: dend_134, parent: dend_132
create dend_134
public dend_134
// Section: dend_133, id: dend_133, parent: dend_132
create dend_133
public dend_133
// Section: dend_130, id: dend_130, parent: dend_128
create dend_130
public dend_130
// Section: dend_129, id: dend_129, parent: dend_128
create dend_129
public dend_129
// Section: dend_127, id: dend_127, parent: dend_121
create dend_127
public dend_127
// Section: dend_122, id: dend_122, parent: dend_121
create dend_122
public dend_122
// Section: dend_113, id: dend_113, parent: dend_111
create dend_113
public dend_113
// Section: dend_112, id: dend_112, parent: dend_111
create dend_112
public dend_112
// Section: dend_104, id: dend_104, parent: dend_98
create dend_104
public dend_104
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_74, id: dend_74, parent: dend_52
create dend_74
public dend_74
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_27
create dend_47
public dend_47
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_150, id: dend_150, parent: dend_148
create dend_150
public dend_150
// Section: dend_149, id: dend_149, parent: dend_148
create dend_149
public dend_149
// Section: dend_143, id: dend_143, parent: dend_140
create dend_143
public dend_143
// Section: dend_141, id: dend_141, parent: dend_140
create dend_141
public dend_141
// Section: dend_126, id: dend_126, parent: dend_122
create dend_126
public dend_126
// Section: dend_123, id: dend_123, parent: dend_122
create dend_123
public dend_123
// Section: dend_119, id: dend_119, parent: dend_113
create dend_119
public dend_119
// Section: dend_114, id: dend_114, parent: dend_113
create dend_114
public dend_114
// Section: dend_110, id: dend_110, parent: dend_104
create dend_110
public dend_110
// Section: dend_105, id: dend_105, parent: dend_104
create dend_105
public dend_105
// Section: dend_103, id: dend_103, parent: dend_99
create dend_103
public dend_103
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_91, id: dend_91, parent: dend_74
create dend_91
public dend_91
// Section: dend_84, id: dend_84, parent: dend_74
create dend_84
public dend_84
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_67, id: dend_67, parent: dend_53
create dend_67
public dend_67
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_152, id: dend_152, parent: dend_150
create dend_152
public dend_152
// Section: dend_151, id: dend_151, parent: dend_150
create dend_151
public dend_151
// Section: dend_147, id: dend_147, parent: dend_143
create dend_147
public dend_147
// Section: dend_144, id: dend_144, parent: dend_143
create dend_144
public dend_144
// Section: dend_142, id: dend_142, parent: dend_141
create dend_142
public dend_142
// Section: dend_125, id: dend_125, parent: dend_123
create dend_125
public dend_125
// Section: dend_124, id: dend_124, parent: dend_123
create dend_124
public dend_124
// Section: dend_118, id: dend_118, parent: dend_114
create dend_118
public dend_118
// Section: dend_115, id: dend_115, parent: dend_114
create dend_115
public dend_115
// Section: dend_107, id: dend_107, parent: dend_105
create dend_107
public dend_107
// Section: dend_106, id: dend_106, parent: dend_105
create dend_106
public dend_106
// Section: dend_102, id: dend_102, parent: dend_100
create dend_102
public dend_102
// Section: dend_101, id: dend_101, parent: dend_100
create dend_101
public dend_101
// Section: dend_96, id: dend_96, parent: dend_91
create dend_96
public dend_96
// Section: dend_95, id: dend_95, parent: dend_91
create dend_95
public dend_95
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_85, id: dend_85, parent: dend_84
create dend_85
public dend_85
// Section: dend_79, id: dend_79, parent: dend_75
create dend_79
public dend_79
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_71, id: dend_71, parent: dend_67
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_54
create dend_66
public dend_66
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_46, id: dend_46, parent: dend_32
create dend_46
public dend_46
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_146, id: dend_146, parent: dend_144
create dend_146
public dend_146
// Section: dend_145, id: dend_145, parent: dend_144
create dend_145
public dend_145
// Section: dend_117, id: dend_117, parent: dend_115
create dend_117
public dend_117
// Section: dend_116, id: dend_116, parent: dend_115
create dend_116
public dend_116
// Section: dend_109, id: dend_109, parent: dend_107
create dend_109
public dend_109
// Section: dend_108, id: dend_108, parent: dend_107
create dend_108
public dend_108
// Section: dend_94, id: dend_94, parent: dend_92
create dend_94
public dend_94
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_83, id: dend_83, parent: dend_79
create dend_83
public dend_83
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_65, id: dend_65, parent: dend_55
create dend_65
public dend_65
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_88, id: dend_88, parent: dend_86
create dend_88
public dend_88
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_64, id: dend_64, parent: dend_56
create dend_64
public dend_64
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_90, id: dend_90, parent: dend_88
create dend_90
public dend_90
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_63, id: dend_63, parent: dend_57
create dend_63
public dend_63
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_138, dend_131, dend_120, dend_97, dend_48, dend_23, dend_14, dend_5, dend_0, dend_139, dend_135, dend_132, dend_128, dend_121, dend_111, dend_98, dend_52, dend_49, dend_27, dend_24, dend_20, dend_15, dend_11, dend_6, dend_2, dend_1, dend_148, dend_140, dend_137, dend_136, dend_134, dend_133, dend_130, dend_129, dend_127, dend_122, dend_113, dend_112, dend_104, dend_99, dend_74, dend_53, dend_51, dend_50, dend_47, dend_28, dend_26, dend_25, dend_22, dend_21, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_4, dend_3, dend_150, dend_149, dend_143, dend_141, dend_126, dend_123, dend_119, dend_114, dend_110, dend_105, dend_103, dend_100, dend_91, dend_84, dend_75, dend_67, dend_54, dend_32, dend_29, dend_19, dend_18, dend_10, dend_9, dend_152, dend_151, dend_147, dend_144, dend_142, dend_125, dend_124, dend_118, dend_115, dend_107, dend_106, dend_102, dend_101, dend_96, dend_95, dend_92, dend_85, dend_79, dend_76, dend_71, dend_68, dend_66, dend_55, dend_46, dend_33, dend_31, dend_30, dend_146, dend_145, dend_117, dend_116, dend_109, dend_108, dend_94, dend_93, dend_86, dend_83, dend_80, dend_78, dend_77, dend_73, dend_72, dend_70, dend_69, dend_65, dend_56, dend_35, dend_34, dend_88, dend_87, dend_82, dend_81, dend_64, dend_57, dend_37, dend_36, dend_90, dend_89, dend_63, dend_58, dend_39, dend_38, dend_60, dend_59, dend_41, dend_40, dend_62, dend_61, dend_43, dend_42, dend_45, dend_44]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_138, dend_131, dend_120, dend_97, dend_48, dend_23, dend_14, dend_5, dend_0, dend_139, dend_135, dend_132, dend_128, dend_121, dend_111, dend_98, dend_52, dend_49, dend_27, dend_24, dend_20, dend_15, dend_11, dend_6, dend_2, dend_1, dend_148, dend_140, dend_137, dend_136, dend_134, dend_133, dend_130, dend_129, dend_127, dend_122, dend_113, dend_112, dend_104, dend_99, dend_74, dend_53, dend_51, dend_50, dend_47, dend_28, dend_26, dend_25, dend_22, dend_21, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_4, dend_3, dend_150, dend_149, dend_143, dend_141, dend_126, dend_123, dend_119, dend_114, dend_110, dend_105, dend_103, dend_100, dend_91, dend_84, dend_75, dend_67, dend_54, dend_32, dend_29, dend_19, dend_18, dend_10, dend_9, dend_152, dend_151, dend_147, dend_144, dend_142, dend_125, dend_124, dend_118, dend_115, dend_107, dend_106, dend_102, dend_101, dend_96, dend_95, dend_92, dend_85, dend_79, dend_76, dend_71, dend_68, dend_66, dend_55, dend_46, dend_33, dend_31, dend_30, dend_146, dend_145, dend_117, dend_116, dend_109, dend_108, dend_94, dend_93, dend_86, dend_83, dend_80, dend_78, dend_77, dend_73, dend_72, dend_70, dend_69, dend_65, dend_56, dend_35, dend_34, dend_88, dend_87, dend_82, dend_81, dend_64, dend_57, dend_37, dend_36, dend_90, dend_89, dend_63, dend_58, dend_39, dend_38, dend_60, dend_59, dend_41, dend_40, dend_62, dend_61, dend_43, dend_42, dend_45, dend_44]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_131]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_120]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_135]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_132]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_128]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_148]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_137]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_133]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_127]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_113]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_112]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_150]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_149]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_141]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_126]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_123]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_114]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_110]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_147]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_144]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_142]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_124]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_118]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_115]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_146]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_145]}
objref OneSecGrp_SectionRef_113
// Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_117]}
objref OneSecGrp_SectionRef_114
// Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_117
// Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_119
// Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_126
// Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_128
// Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_131
// Group: {name=OneSecGrp_SectionRef_138, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_138
// Group: {name=OneSecGrp_SectionRef_142, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_142
// Group: {name=OneSecGrp_SectionRef_149, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_149
// Group: {name=OneSecGrp_SectionRef_155, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_155
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_138]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_139]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_140]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_111]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_120
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_121]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_143]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_133
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_122]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_134
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_141, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_141
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_129]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_130]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_136]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_151]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_152]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_129
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_119]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_125
// Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_122
// Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_135
// Group: {name=OneSecGrp_SectionRef_136, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_136
// Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_121
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_130
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_137, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_137
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_111
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_132
// Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_127
// Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_109]}
objref OneSecGrp_SectionRef_116
// Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_124
// Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_118
// Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_123
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_134]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_125]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_116]}
objref OneSecGrp_SectionRef_115
// Group: {name=OneSecGrp_SectionRef_143, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_143
// Group: {name=OneSecGrp_SectionRef_144, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_144
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_147, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_147
// Group: {name=OneSecGrp_SectionRef_151, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_151
// Group: {name=OneSecGrp_SectionRef_152, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_152
// Group: {name=OneSecGrp_SectionRef_148, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_148
// Group: {name=OneSecGrp_SectionRef_140, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_140
// Group: {name=OneSecGrp_SectionRef_139, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_139
// Group: {name=OneSecGrp_SectionRef_146, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_146
// Group: {name=OneSecGrp_SectionRef_145, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_145
// Group: {name=OneSecGrp_SectionRef_150, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_150
// Group: {name=OneSecGrp_SectionRef_153, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_153
// Group: {name=OneSecGrp_SectionRef_156, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_156
// Group: {name=OneSecGrp_SectionRef_154, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_154
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131, dend_132, dend_133, dend_134, dend_135, dend_136, dend_137, dend_138, dend_139, dend_140, dend_141, dend_142, dend_143, dend_144, dend_145, dend_146, dend_147, dend_148, dend_149, dend_150, dend_151, dend_152], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_138, dend_138, dend_138, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_48, dend_48, dend_48, dend_48, dend_48, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_140, dend_140, dend_140, dend_140, dend_140, dend_140, dend_140, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_136, dend_134, dend_134, dend_134, dend_134, dend_133, dend_133, dend_133, dend_133, dend_130, dend_129, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_84, dend_84, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_125, dend_125, dend_125, dend_125, dend_124, dend_124, dend_124, dend_124, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_146, dend_146, dend_146, dend_146, dend_146, dend_145, dend_145, dend_145, dend_145, dend_145, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_109, dend_109, dend_109, dend_109, dend_109, dend_108, dend_108, dend_108, dend_108, dend_94, dend_94, dend_94, dend_94, dend_93, dend_93, dend_93, dend_93, dend_86, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_87, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_138(0), soma_0(0.45000004118409903)
    connect dend_131(0), soma_0(0.45000004118409903)
    connect dend_120(0), soma_0(0.45000004118409903)
    connect dend_97(0), soma_0(0.45000004118409903)
    connect dend_48(0), soma_0(0.45000004118409903)
    connect dend_23(0), soma_0(0.45000004118409903)
    connect dend_14(0), soma_0(0.45000004118409903)
    connect dend_5(0), soma_0(0.45000004118409903)
    connect dend_0(0), soma_0(0.45000004118409903)
    connect axon_0(0), soma_0(1.0)
    connect dend_139(0), dend_138(1.0)
    connect dend_135(0), dend_131(1.0)
    connect dend_132(0), dend_131(1.0)
    connect dend_128(0), dend_120(1.0)
    connect dend_121(0), dend_120(1.0)
    connect dend_111(0), dend_97(1.0)
    connect dend_98(0), dend_97(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_148(0), dend_139(1.0)
    connect dend_140(0), dend_139(1.0)
    connect dend_137(0), dend_135(1.0)
    connect dend_136(0), dend_135(1.0)
    connect dend_134(0), dend_132(1.0)
    connect dend_133(0), dend_132(1.0)
    connect dend_130(0), dend_128(1.0)
    connect dend_129(0), dend_128(1.0)
    connect dend_127(0), dend_121(1.0)
    connect dend_122(0), dend_121(1.0)
    connect dend_113(0), dend_111(1.0)
    connect dend_112(0), dend_111(1.0)
    connect dend_104(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_74(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_47(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_150(0), dend_148(1.0)
    connect dend_149(0), dend_148(1.0)
    connect dend_143(0), dend_140(1.0)
    connect dend_141(0), dend_140(1.0)
    connect dend_126(0), dend_122(1.0)
    connect dend_123(0), dend_122(1.0)
    connect dend_119(0), dend_113(1.0)
    connect dend_114(0), dend_113(1.0)
    connect dend_110(0), dend_104(1.0)
    connect dend_105(0), dend_104(1.0)
    connect dend_103(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_91(0), dend_74(1.0)
    connect dend_84(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_67(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_152(0), dend_150(1.0)
    connect dend_151(0), dend_150(1.0)
    connect dend_147(0), dend_143(1.0)
    connect dend_144(0), dend_143(1.0)
    connect dend_142(0), dend_141(1.0)
    connect dend_125(0), dend_123(1.0)
    connect dend_124(0), dend_123(1.0)
    connect dend_118(0), dend_114(1.0)
    connect dend_115(0), dend_114(1.0)
    connect dend_107(0), dend_105(1.0)
    connect dend_106(0), dend_105(1.0)
    connect dend_102(0), dend_100(1.0)
    connect dend_101(0), dend_100(1.0)
    connect dend_96(0), dend_91(1.0)
    connect dend_95(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_85(0), dend_84(1.0)
    connect dend_79(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_71(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_46(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_146(0), dend_144(1.0)
    connect dend_145(0), dend_144(1.0)
    connect dend_117(0), dend_115(1.0)
    connect dend_116(0), dend_115(1.0)
    connect dend_109(0), dend_107(1.0)
    connect dend_108(0), dend_107(1.0)
    connect dend_94(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_83(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_65(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_88(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_64(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_90(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_63(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.93122, -0.108136, -2.1881, 2.35771 ) }
    soma_0 { pt3dadd( -7.89726, -0.148004, -1.96095, 3.51454 ) }
    soma_0 { pt3dadd( -6.8633, -0.187872, -1.73381, 7.55356 ) }
    soma_0 { pt3dadd( -5.82934, -0.22774, -1.50666, 11.3774 ) }
    soma_0 { pt3dadd( -4.79538, -0.267609, -1.27951, 15.1564 ) }
    soma_0 { pt3dadd( -3.76142, -0.307477, -1.05237, 15.6784 ) }
    soma_0 { pt3dadd( -2.72746, -0.347345, -0.825221, 15.4329 ) }
    soma_0 { pt3dadd( -1.69349, -0.387213, -0.598075, 14.6203 ) }
    soma_0 { pt3dadd( -0.659532, -0.427081, -0.370928, 13.8866 ) }
    soma_0 { pt3dadd( 0.37443, -0.466949, -0.143782, 13.4876 ) }
    soma_0 { pt3dadd( 1.40839, -0.506817, 0.083365, 13.5864 ) }
    soma_0 { pt3dadd( 2.44235, -0.546685, 0.310511, 13.7525 ) }
    soma_0 { pt3dadd( 3.47631, -0.586553, 0.537658, 14.0168 ) }
    soma_0 { pt3dadd( 4.51028, -0.626421, 0.764805, 14.3455 ) }
    soma_0 { pt3dadd( 5.54424, -0.666289, 0.991951, 14.6782 ) }
    soma_0 { pt3dadd( 6.5782, -0.706157, 1.2191, 14.6165 ) }
    soma_0 { pt3dadd( 7.61216, -0.746025, 1.44624, 14.0887 ) }
    soma_0 { pt3dadd( 8.64612, -0.785894, 1.67339, 12.6993 ) }
    soma_0 { pt3dadd( 9.68008, -0.825762, 1.90054, 11.5417 ) }
    soma_0 { pt3dadd( 10.714, -0.86563, 2.12768, 8.06658 ) }
    soma_0 { pt3dadd( 11.748, -0.905498, 2.35483, 4.43739 ) }
    // Section: dend_138, id: dend_138, parent: soma_0 (entry count 21/100)
    dend_138 { pt3dclear() }
    dend_138 { pt3dadd( -4.28724, -7.40443, -3.86671, 3.24 ) }
    dend_138 { pt3dadd( -4.28724, -7.40443, -3.86671, 3.24 ) }
    dend_138 { pt3dadd( -4.7761, -8.57691, -3.86671, 3.09 ) }
    dend_138 { pt3dadd( -5.20089, -9.59575, -3.86671, 2.87 ) }
    // Section: dend_131, id: dend_131, parent: soma_0 (entry count 25/100)
    dend_131 { pt3dclear() }
    dend_131 { pt3dadd( 6.47276, -7.95793, 0.203286, 1.25 ) }
    dend_131 { pt3dadd( 6.47276, -7.95793, 0.203286, 1.25 ) }
    dend_131 { pt3dadd( 6.89314, -9.64662, 0.287128, 1.25 ) }
    dend_131 { pt3dadd( 6.91535, -9.74656, 0.291497, 1.25 ) }
    dend_131 { pt3dadd( 7.21351, -11.148, 0.349745, 0.96 ) }
    dend_131 { pt3dadd( 7.45645, -12.551, 0.488091, 0.96 ) }
    dend_131 { pt3dadd( 7.55261, -13.2855, 0.584026, 1.33 ) }
    dend_131 { pt3dadd( 7.62844, -14.5614, 0.856298, 0.81 ) }
    dend_131 { pt3dadd( 7.57161, -15.795, 1.23276, 0.81 ) }
    dend_131 { pt3dadd( 7.56151, -15.8911, 1.26646, 0.81 ) }
    dend_131 { pt3dadd( 7.30466, -17.5533, 1.94881, 1.18 ) }
    dend_131 { pt3dadd( 7.11764, -18.6264, 2.42169, 1.18 ) }
    dend_131 { pt3dadd( 6.81699, -20.5738, 3.29625, 0.81 ) }
    dend_131 { pt3dadd( 6.56506, -22.755, 4.26566, 0.81 ) }
    dend_131 { pt3dadd( 6.55097, -23.0673, 4.39201, 0.81 ) }
    dend_131 { pt3dadd( 6.64429, -24.5526, 5.01495, 0.81 ) }
    dend_131 { pt3dadd( 6.76701, -25.2326, 5.29182, 1.4 ) }
    dend_131 { pt3dadd( 7.06606, -26.3147, 5.78142, 1.4 ) }
    dend_131 { pt3dadd( 7.4899, -27.507, 6.41748, 0.66 ) }
    dend_131 { pt3dadd( 7.86373, -28.6721, 7.0794, 0.59 ) }
    dend_131 { pt3dadd( 8.47653, -30.9798, 8.43662, 0.59 ) }
    dend_131 { pt3dadd( 8.63346, -31.9683, 9.04256, 0.81 ) }
    dend_131 { pt3dadd( 8.6888, -33.4447, 9.98619, 0.88 ) }
    dend_131 { pt3dadd( 8.51302, -35.8228, 11.5449, 0.88 ) }
    dend_131 { pt3dadd( 8.11536, -37.9272, 12.8933, 0.88 ) }
    dend_131 { pt3dadd( 8.08962, -38.0125, 12.9426, 0.88 ) }
    dend_131 { pt3dadd( 7.13452, -40.4192, 14.0912, 0.88 ) }
    dend_131 { pt3dadd( 6.63104, -41.5509, 14.5983, 1.18 ) }
    dend_131 { pt3dadd( 6.59751, -41.6262, 14.6274, 1.18 ) }
    dend_131 { pt3dadd( 6.13394, -42.7149, 15.0144, 1.18 ) }
    dend_131 { pt3dadd( 5.24735, -45.051, 15.8742, 0.74 ) }
    dend_131 { pt3dadd( 4.39653, -47.7065, 16.7837, 0.74 ) }
    dend_131 { pt3dadd( 4.34355, -47.9093, 16.8472, 0.74 ) }
    dend_131 { pt3dadd( 3.74401, -50.9674, 17.8482, 0.74 ) }
    dend_131 { pt3dadd( 3.5609, -52.2742, 18.2965, 1.11 ) }
    dend_131 { pt3dadd( 3.5515, -52.3702, 18.3306, 1.11 ) }
    dend_131 { pt3dadd( 3.48951, -54.0035, 18.9264, 1.11 ) }
    dend_131 { pt3dadd( 3.49329, -54.1134, 18.9661, 1.11 ) }
    dend_131 { pt3dadd( 3.64101, -56.7145, 19.9335, 1.11 ) }
    dend_131 { pt3dadd( 3.80272, -57.966, 20.4229, 1.47 ) }
    // Section: dend_120, id: dend_120, parent: soma_0 (entry count 65/100)
    dend_120 { pt3dclear() }
    dend_120 { pt3dadd( 10.5927, -6.62543, 2.26329, 0.88 ) }
    dend_120 { pt3dadd( 10.9096, -6.86754, 2.21533, 0.88 ) }
    dend_120 { pt3dadd( 10.965, -6.91687, 2.23057, 0.88 ) }
    dend_120 { pt3dadd( 11.8552, -7.75878, 2.64474, 0.88 ) }
    dend_120 { pt3dadd( 12.2328, -8.20925, 2.98157, 0.88 ) }
    dend_120 { pt3dadd( 12.7662, -9.0633, 3.92153, 0.88 ) }
    dend_120 { pt3dadd( 13.4881, -10.4259, 5.63926, 0.88 ) }
    dend_120 { pt3dadd( 14.2119, -12.2269, 8.4891, 0.88 ) }
    dend_120 { pt3dadd( 14.2213, -12.2578, 8.54502, 0.88 ) }
    dend_120 { pt3dadd( 14.408, -13.4749, 10.8714, 0.88 ) }
    dend_120 { pt3dadd( 14.4524, -14.8218, 13.3865, 0.88 ) }
    dend_120 { pt3dadd( 14.4506, -14.8546, 13.4421, 0.88 ) }
    dend_120 { pt3dadd( 14.2369, -16.6698, 16.2128, 1.55 ) }
    dend_120 { pt3dadd( 14.2316, -16.7253, 16.2789, 1.55 ) }
    dend_120 { pt3dadd( 14.1531, -17.7913, 17.3771, 1.03 ) }
    dend_120 { pt3dadd( 14.1347, -20.1452, 19.4047, 0.81 ) }
    dend_120 { pt3dadd( 14.2595, -21.8233, 20.7449, 0.81 ) }
    dend_120 { pt3dadd( 14.2725, -21.9246, 20.8259, 0.81 ) }
    dend_120 { pt3dadd( 14.7931, -24.147, 22.5727, 1.03 ) }
    dend_120 { pt3dadd( 14.8155, -24.2023, 22.6196, 1.03 ) }
    dend_120 { pt3dadd( 16.086, -25.9879, 24.3178, 0.88 ) }
    dend_120 { pt3dadd( 17.4753, -27.201, 25.5695, 0.88 ) }
    dend_120 { pt3dadd( 17.5377, -27.2387, 25.6152, 0.88 ) }
    dend_120 { pt3dadd( 18.918, -27.9314, 26.4758, 1.47 ) }
    dend_120 { pt3dadd( 20.0873, -28.4641, 27.0784, 0.81 ) }
    dend_120 { pt3dadd( 21.0268, -28.9488, 27.5315, 0.74 ) }
    dend_120 { pt3dadd( 21.1212, -28.9973, 27.5737, 0.74 ) }
    dend_120 { pt3dadd( 23.4521, -30.2932, 28.6385, 0.74 ) }
    dend_120 { pt3dadd( 23.5438, -30.3456, 28.6825, 0.74 ) }
    dend_120 { pt3dadd( 26.1961, -31.9719, 30.0678, 0.74 ) }
    dend_120 { pt3dadd( 28.1583, -33.1775, 31.1437, 0.74 ) }
    dend_120 { pt3dadd( 29.6146, -34.0814, 31.9563, 0.74 ) }
    dend_120 { pt3dadd( 29.7094, -34.1388, 32.0067, 0.74 ) }
    dend_120 { pt3dadd( 30.195, -34.4162, 32.2298, 0.74 ) }
    // Section: dend_97, id: dend_97, parent: soma_0 (entry count 99/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( 8.06276, 6.09482, 1.63329, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_97 { pt3dadd( 8.23295, 6.43392, 1.69806, 1.47 ) }
    dend_97 { pt3dadd( 8.64623, 7.23941, 1.81245, 1.47 ) }
    dend_97 { pt3dadd( 9.10649, 8.12649, 1.92224, 1.47 ) }
    dend_97 { pt3dadd( 9.70047, 9.36068, 2.0324, 1.47 ) }
    dend_97 { pt3dadd( 10.2908, 10.6297, 2.12577, 1.47 ) }
    dend_97 { pt3dadd( 10.9875, 12.1672, 2.21444, 1.47 ) }
    dend_97 { pt3dadd( 11.5851, 13.4771, 2.26602, 1.47 ) }
    dend_97 { pt3dadd( 11.6302, 13.5762, 2.26454, 1.47 ) }
    dend_97 { pt3dadd( 12.5567, 15.6691, 2.17974, 1.47 ) }
    dend_97 { pt3dadd( 12.6209, 15.8208, 2.16818, 1.47 ) }
    dend_97 { pt3dadd( 13.1654, 17.1822, 1.98502, 1.69 ) }
    dend_97 { pt3dadd( 13.7207, 18.6587, 1.77246, 1.69 ) }
    dend_97 { pt3dadd( 14.1235, 19.7246, 1.62066, 1.18 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 13/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -8.74724, -0.90593, 0.133286, 3.02 ) }
    dend_48 { pt3dadd( -8.74724, -0.90593, 0.133286, 3.02 ) }
    dend_48 { pt3dadd( -10.8079, -0.774327, 0.327736, 2.43 ) }
    dend_48 { pt3dadd( -10.8937, -0.768851, 0.335827, 2.43 ) }
    dend_48 { pt3dadd( -12.6635, -0.655821, 0.502836, 2.28 ) }
    dend_48 { pt3dadd( -12.7278, -0.651714, 0.508905, 2.28 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 19/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -3.27724, 7.67332, -0.796714, 2.5 ) }
    dend_23 { pt3dadd( -3.27724, 7.67332, -0.796714, 2.5 ) }
    dend_23 { pt3dadd( -3.32095, 9.54009, -0.136891, 2.06 ) }
    dend_23 { pt3dadd( -3.36851, 11.8922, 0.945999, 1.84 ) }
    dend_23 { pt3dadd( -3.37119, 12.0248, 1.00702, 1.84 ) }
    dend_23 { pt3dadd( -3.41892, 14.3848, 2.09355, 1.84 ) }
    dend_23 { pt3dadd( -3.47131, 16.976, 3.28648, 2.06 ) }
    dend_23 { pt3dadd( -3.53187, 21.7902, 5.82207, 1.55 ) }
    dend_23 { pt3dadd( -3.52621, 23.1251, 6.72717, 1.55 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 28/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 11.0527, -0.50618, 2.38329, 1.84 ) }
    dend_14 { pt3dadd( 11.0527, -0.50618, 2.38329, 1.84 ) }
    dend_14 { pt3dadd( 12.1901, -0.736495, 3.489, 1.62 ) }
    dend_14 { pt3dadd( 13.532, -1.05515, 4.8028, 1.84 ) }
    dend_14 { pt3dadd( 13.5897, -1.07481, 4.85481, 1.84 ) }
    dend_14 { pt3dadd( 15.3617, -1.91361, 6.29713, 1.69 ) }
    dend_14 { pt3dadd( 17.7982, -3.48395, 7.99621, 1.33 ) }
    dend_14 { pt3dadd( 18.7091, -4.20603, 8.61399, 1.33 ) }
    dend_14 { pt3dadd( 18.7609, -4.25823, 8.64752, 1.33 ) }
    dend_14 { pt3dadd( 20.2566, -6.09469, 9.5419, 1.33 ) }
    dend_14 { pt3dadd( 21.6074, -7.99666, 10.3472, 1.33 ) }
    dend_14 { pt3dadd( 23.5901, -11.0683, 11.3793, 1.33 ) }
    dend_14 { pt3dadd( 24.2939, -12.2368, 11.6964, 1.55 ) }
    dend_14 { pt3dadd( 25.4038, -14.1618, 12.2529, 1.4 ) }
    dend_14 { pt3dadd( 26.7452, -16.5707, 12.9939, 1.4 ) }
    dend_14 { pt3dadd( 27.2687, -17.6147, 13.3633, 1.4 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 44/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 9.50276, 4.75207, 1.32329, 1.47 ) }
    dend_5 { pt3dadd( 9.55409, 4.78368, 1.30724, 1.47 ) }
    dend_5 { pt3dadd( 10.4675, 5.38552, 1.0522, 1.47 ) }
    dend_5 { pt3dadd( 11.4766, 6.13085, 0.834691, 1.25 ) }
    dend_5 { pt3dadd( 12.7564, 7.12524, 0.593316, 1.4 ) }
    dend_5 { pt3dadd( 13.8046, 8.02793, 0.426256, 1.4 ) }
    dend_5 { pt3dadd( 13.9439, 8.16634, 0.407913, 1.4 ) }
    dend_5 { pt3dadd( 14.8617, 9.22386, 0.366611, 1.4 ) }
    dend_5 { pt3dadd( 15.9468, 10.6488, 0.399911, 1.4 ) }
    dend_5 { pt3dadd( 15.9871, 10.7082, 0.405421, 1.4 ) }
    dend_5 { pt3dadd( 16.9723, 12.2961, 0.651339, 1.92 ) }
    dend_5 { pt3dadd( 18.0711, 14.288, 1.03024, 1.92 ) }
    dend_5 { pt3dadd( 18.9863, 16.0003, 1.37538, 1.92 ) }
    dend_5 { pt3dadd( 19.0138, 16.0558, 1.38766, 1.92 ) }
    dend_5 { pt3dadd( 19.6135, 17.338, 1.69625, 1.92 ) }
    dend_5 { pt3dadd( 19.6355, 17.3859, 1.70894, 1.92 ) }
    dend_5 { pt3dadd( 20.3001, 18.92, 2.23651, 1.92 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.84724, 6.26907, -2.17671, 1.11 ) }
    dend_0 { pt3dadd( -4.90371, 6.29573, -2.20502, 1.11 ) }
    dend_0 { pt3dadd( -5.82141, 6.70785, -2.55371, 1.11 ) }
    dend_0 { pt3dadd( -5.88202, 6.73449, -2.57154, 1.11 ) }
    dend_0 { pt3dadd( -7.34851, 7.37062, -2.95498, 0.96 ) }
    dend_0 { pt3dadd( -7.5312, 7.4435, -2.99575, 0.96 ) }
    dend_0 { pt3dadd( -8.66933, 7.86566, -3.20902, 0.96 ) }
    dend_0 { pt3dadd( -9.66888, 8.21704, -3.36431, 0.96 ) }
    dend_0 { pt3dadd( -10.6964, 8.58037, -3.47983, 0.96 ) }
    dend_0 { pt3dadd( -10.7607, 8.60319, -3.48557, 0.96 ) }
    dend_0 { pt3dadd( -11.7835, 8.96472, -3.5399, 0.96 ) }
    dend_0 { pt3dadd( -12.8299, 9.33409, -3.62757, 0.96 ) }
    dend_0 { pt3dadd( -12.9779, 9.38787, -3.6375, 0.96 ) }
    dend_0 { pt3dadd( -14.2304, 9.85256, -3.69208, 0.96 ) }
    dend_0 { pt3dadd( -15.5264, 10.3227, -3.71901, 0.96 ) }
    dend_0 { pt3dadd( -15.6334, 10.3595, -3.72077, 0.96 ) }
    dend_0 { pt3dadd( -16.664, 10.6729, -3.73095, 0.96 ) }
    dend_0 { pt3dadd( -17.8029, 10.9331, -3.71362, 1.25 ) }
    dend_0 { pt3dadd( -19.0697, 11.1308, -3.73377, 1.25 ) }
    dend_0 { pt3dadd( -20.0662, 11.1824, -3.87362, 1.03 ) }
    dend_0 { pt3dadd( -20.7689, 11.1857, -4.05777, 0.88 ) }
    dend_0 { pt3dadd( -21.5863, 11.1871, -4.46563, 0.88 ) }
    dend_0 { pt3dadd( -22.1795, 11.2006, -5.03458, 0.88 ) }
    dend_0 { pt3dadd( -22.5921, 11.324, -6.32108, 0.81 ) }
    dend_0 { pt3dadd( -22.8885, 11.6217, -8.41013, 0.81 ) }
    dend_0 { pt3dadd( -22.9231, 11.7279, -9.00915, 0.81 ) }
    dend_0 { pt3dadd( -22.924, 12.0536, -10.5423, 0.81 ) }
    dend_0 { pt3dadd( -22.8954, 12.2976, -11.4815, 0.81 ) }
    dend_0 { pt3dadd( -22.7674, 13.58, -15.5282, 0.81 ) }
    dend_0 { pt3dadd( -22.7552, 13.7969, -16.09, 0.81 ) }
    dend_0 { pt3dadd( -22.7559, 13.8293, -16.1613, 0.81 ) }
    dend_0 { pt3dadd( -22.8604, 14.4222, -17.4229, 0.66 ) }
    dend_0 { pt3dadd( -23.057, 14.8219, -18.1308, 0.66 ) }
    dend_0 { pt3dadd( -23.6278, 15.4045, -18.7561, 0.66 ) }
    dend_0 { pt3dadd( -23.8826, 15.553, -18.8354, 0.66 ) }
    dend_0 { pt3dadd( -24.7477, 15.9297, -19.1079, 0.66 ) }
    dend_0 { pt3dadd( -24.8108, 15.9488, -19.1264, 0.66 ) }
    dend_0 { pt3dadd( -25.5953, 16.0657, -19.3189, 0.66 ) }
    dend_0 { pt3dadd( -26.4115, 16.0239, -19.5916, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( -27.9269, 15.4512, -20.5455, 0.66 ) }
    dend_0 { pt3dadd( -27.9676, 15.4252, -20.5941, 0.66 ) }
    dend_0 { pt3dadd( -28.1597, 15.254, -20.9466, 0.66 ) }
    dend_0 { pt3dadd( -28.2405, 15.1769, -21.1307, 0.66 ) }
    dend_0 { pt3dadd( -28.461, 14.9494, -21.7653, 0.66 ) }
    dend_0 { pt3dadd( -28.763, 14.7109, -23.3471, 0.66 ) }
    dend_0 { pt3dadd( -28.9791, 14.6439, -24.8099, 0.66 ) }
    dend_0 { pt3dadd( -28.9957, 14.6465, -24.9217, 0.66 ) }
    dend_0 { pt3dadd( -29.0435, 14.6771, -25.3021, 0.66 ) }
    dend_0 { pt3dadd( -29.0727, 14.7082, -25.5598, 0.66 ) }
    dend_0 { pt3dadd( -29.5378, 15.3718, -29.5818, 0.66 ) }
    dend_0 { pt3dadd( -29.5521, 15.3999, -29.7271, 0.66 ) }
    dend_0 { pt3dadd( -29.5945, 15.4777, -30.1381, 0.66 ) }
    dend_0 { pt3dadd( -29.8647, 15.8675, -32.2348, 0.66 ) }
    dend_0 { pt3dadd( -29.8819, 15.886, -32.3355, 0.66 ) }
    dend_0 { pt3dadd( -30.0839, 16.0309, -33.0199, 0.66 ) }
    dend_0 { pt3dadd( -30.127, 16.0488, -33.0555, 0.66 ) }
    dend_0 { pt3dadd( -31.6198, 16.5806, -33.9585, 0.66 ) }
    dend_0 { pt3dadd( -32.6475, 16.8907, -34.2168, 1.03 ) }
    dend_0 { pt3dadd( -33.3731, 17.1017, -34.1619, 1.4 ) }
    dend_0 { pt3dadd( -34.1378, 17.321, -34.0759, 1.77 ) }
    dend_0 { pt3dadd( -35.2756, 17.6513, -33.8511, 1.18 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 22/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 11.748, -0.905498, 2.35483, 0.81 ) }
    axon_0 { pt3dadd( 26.7369, -1.48345, 2.35483, 0.81 ) }
    axon_0 { pt3dadd( 41.7257, -2.0614, 2.35483, 0.81 ) }
    // Section: dend_139, id: dend_139, parent: dend_138 (entry count 25/100)
    dend_139 { pt3dclear() }
    dend_139 { pt3dadd( -5.20089, -9.59575, -3.86671, 1.62 ) }
    dend_139 { pt3dadd( -5.51894, -9.78492, -4.00069, 1.62 ) }
    dend_139 { pt3dadd( -6.80769, -10.5872, -4.54574, 1.62 ) }
    dend_139 { pt3dadd( -6.87589, -10.6328, -4.57336, 1.62 ) }
    dend_139 { pt3dadd( -8.67794, -12.1228, -5.27496, 1.4 ) }
    dend_139 { pt3dadd( -8.72569, -12.1744, -5.30415, 1.4 ) }
    dend_139 { pt3dadd( -9.26787, -12.8626, -5.73836, 1.84 ) }
    dend_139 { pt3dadd( -9.30433, -12.9178, -5.77622, 1.84 ) }
    dend_139 { pt3dadd( -9.71146, -13.6494, -6.28937, 2.14 ) }
    dend_139 { pt3dadd( -10.3354, -14.8985, -7.16373, 2.14 ) }
    dend_139 { pt3dadd( -11.2244, -17.1653, -8.73231, 2.14 ) }
    dend_139 { pt3dadd( -11.6145, -18.195, -9.4811, 2.14 ) }
    dend_139 { pt3dadd( -11.6514, -18.3021, -9.56633, 2.14 ) }
    // Section: dend_135, id: dend_135, parent: dend_131 (entry count 38/100)
    dend_135 { pt3dclear() }
    dend_135 { pt3dadd( 3.80272, -57.966, 20.4229, 1.11 ) }
    dend_135 { pt3dadd( 3.26517, -58.207, 19.5017, 1.11 ) }
    dend_135 { pt3dadd( 3.22263, -58.2259, 19.4399, 1.11 ) }
    dend_135 { pt3dadd( 2.64538, -58.4795, 18.6585, 1.11 ) }
    dend_135 { pt3dadd( 2.59962, -58.5002, 18.5997, 1.11 ) }
    dend_135 { pt3dadd( 1.13167, -59.307, 16.7154, 0.37 ) }
    dend_135 { pt3dadd( 1.07178, -59.3399, 16.6385, 0.37 ) }
    dend_135 { pt3dadd( 0.383199, -59.7069, 15.8225, 0.22 ) }
    dend_135 { pt3dadd( 0.265965, -59.7604, 15.6589, 0.29 ) }
    dend_135 { pt3dadd( 0.204647, -59.7752, 15.5285, 0.29 ) }
    dend_135 { pt3dadd( -0.125676, -59.7772, 14.6652, 0.29 ) }
    dend_135 { pt3dadd( -5.14787, -62.3353, 6.80876, 0.29 ) }
    dend_135 { pt3dadd( -11.6447, -63.6799, -0.208667, 0.29 ) }
    dend_135 { pt3dadd( -18.1875, -66.0191, -6.92922, 0.29 ) }
    dend_135 { pt3dadd( -23.4766, -67.5406, -14.866, 0.29 ) }
    // Section: dend_132, id: dend_132, parent: dend_131 (entry count 53/100)
    dend_132 { pt3dclear() }
    dend_132 { pt3dadd( 3.80272, -57.966, 20.4229, 1.47 ) }
    dend_132 { pt3dadd( 4.06445, -58.9001, 20.8068, 1.47 ) }
    dend_132 { pt3dadd( 4.32743, -60.4563, 21.3579, 0.81 ) }
    dend_132 { pt3dadd( 4.33541, -60.5301, 21.3832, 0.81 ) }
    dend_132 { pt3dadd( 4.46805, -62.2713, 22.0213, 0.81 ) }
    dend_132 { pt3dadd( 4.47615, -62.3897, 22.0658, 0.81 ) }
    dend_132 { pt3dadd( 4.69214, -64.6862, 22.9664, 0.74 ) }
    dend_132 { pt3dadd( 4.83156, -66.544, 23.7358, 0.74 ) }
    dend_132 { pt3dadd( 5.00345, -68.553, 24.6225, 0.74 ) }
    dend_132 { pt3dadd( 5.13851, -69.6742, 25.1486, 0.52 ) }
    dend_132 { pt3dadd( 5.16615, -69.8222, 25.2223, 0.52 ) }
    dend_132 { pt3dadd( 5.51739, -71.1592, 25.9063, 0.52 ) }
    dend_132 { pt3dadd( 5.54413, -71.2343, 25.9464, 0.52 ) }
    dend_132 { pt3dadd( 5.90809, -72.1587, 26.4823, 0.88 ) }
    dend_132 { pt3dadd( 5.93187, -72.2246, 26.5168, 0.88 ) }
    dend_132 { pt3dadd( 6.21946, -73.1522, 26.9123, 0.88 ) }
    dend_132 { pt3dadd( 6.50549, -74.2519, 27.3265, 0.59 ) }
    dend_132 { pt3dadd( 6.87803, -75.8488, 27.8203, 0.59 ) }
    dend_132 { pt3dadd( 7.24302, -77.4265, 28.2575, 0.59 ) }
    dend_132 { pt3dadd( 7.38462, -78.1996, 28.4394, 0.59 ) }
    dend_132 { pt3dadd( 7.56256, -79.3393, 28.6892, 0.52 ) }
    dend_132 { pt3dadd( 7.56925, -79.4161, 28.7042, 0.52 ) }
    dend_132 { pt3dadd( 7.6114, -80.6996, 28.8418, 0.52 ) }
    dend_132 { pt3dadd( 7.60112, -80.925, 28.8703, 0.37 ) }
    dend_132 { pt3dadd( 7.4216, -81.9353, 29.0804, 0.37 ) }
    dend_132 { pt3dadd( 7.38806, -82.0146, 29.1045, 0.37 ) }
    dend_132 { pt3dadd( 6.9633, -82.6802, 29.384, 0.37 ) }
    dend_132 { pt3dadd( 6.38664, -83.4663, 29.7485, 0.37 ) }
    dend_132 { pt3dadd( 5.4571, -84.6755, 30.3758, 0.22 ) }
    dend_132 { pt3dadd( 5.41511, -84.7333, 30.4067, 0.22 ) }
    dend_132 { pt3dadd( 4.73178, -85.6872, 30.9402, 0.22 ) }
    dend_132 { pt3dadd( 4.10015, -86.554, 31.4883, 0.22 ) }
    dend_132 { pt3dadd( 4.05494, -86.6171, 31.5315, 0.22 ) }
    dend_132 { pt3dadd( 3.43551, -87.5578, 32.1713, 0.22 ) }
    dend_132 { pt3dadd( 3.40188, -87.622, 32.2003, 0.22 ) }
    dend_132 { pt3dadd( 3.05077, -88.3735, 32.5355, 0.22 ) }
    dend_132 { pt3dadd( 2.59945, -89.6206, 33.0774, 0.22 ) }
    dend_132 { pt3dadd( 2.50986, -89.9121, 33.1883, 0.22 ) }
    dend_132 { pt3dadd( 2.20334, -90.9333, 33.5367, 0.22 ) }
    dend_132 { pt3dadd( 1.75751, -92.5965, 33.9091, 0.22 ) }
    dend_132 { pt3dadd( 1.82804, -103.001, 38.0532, 0.22 ) }
    dend_132 { pt3dadd( 1.45164, -113.331, 42.3566, 0.22 ) }
    dend_132 { pt3dadd( 2.71424, -124.026, 45.4692, 0.22 ) }
    dend_132 { pt3dadd( 4.07983, -134.15, 50.0248, 0.22 ) }
    dend_132 { pt3dadd( 3.78928, -144.56, 54.1476, 0.22 ) }
    dend_132 { pt3dadd( 2.07055, -155.297, 56.8989, 0.22 ) }
    dend_132 { pt3dadd( 0.417732, -165.986, 59.8571, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_132 { pt3dadd( -1.03895, -176.465, 63.5464, 0.22 ) }
    dend_132 { pt3dadd( -1.56643, -186.157, 69.0751, 0.22 ) }
    // Section: dend_128, id: dend_128, parent: dend_120 (entry count 2/100)
    dend_128 { pt3dclear() }
    dend_128 { pt3dadd( 30.195, -34.4162, 32.2298, 0.37 ) }
    dend_128 { pt3dadd( 30.2772, -33.9248, 32.2107, 0.37 ) }
    dend_128 { pt3dadd( 30.4245, -33.4951, 32.2007, 0.37 ) }
    dend_128 { pt3dadd( 30.4447, -33.4462, 32.1998, 0.37 ) }
    dend_128 { pt3dadd( 30.6338, -33.0927, 32.1844, 0.37 ) }
    dend_128 { pt3dadd( 30.7233, -32.9437, 32.1759, 0.37 ) }
    dend_128 { pt3dadd( 31.0493, -32.4015, 32.1448, 0.37 ) }
    dend_128 { pt3dadd( 31.3979, -31.9291, 32.1171, 0.37 ) }
    dend_128 { pt3dadd( 31.4325, -31.8896, 32.1144, 0.37 ) }
    dend_128 { pt3dadd( 31.817, -31.4807, 32.0835, 0.37 ) }
    dend_128 { pt3dadd( 31.8609, -31.4401, 32.0797, 0.37 ) }
    dend_128 { pt3dadd( 36.2364, -25.3655, 31.3289, 0.37 ) }
    dend_128 { pt3dadd( 40.1718, -19.0138, 30.3583, 0.37 ) }
    dend_128 { pt3dadd( 43.4401, -12.2045, 30.3653, 0.37 ) }
    dend_128 { pt3dadd( 46.7065, -5.51035, 29.1375, 0.37 ) }
    dend_128 { pt3dadd( 49.2395, 1.61986, 29.1153, 0.37 ) }
    // Section: dend_121, id: dend_121, parent: dend_120 (entry count 18/100)
    dend_121 { pt3dclear() }
    dend_121 { pt3dadd( 30.195, -34.4162, 32.2298, 0.74 ) }
    dend_121 { pt3dadd( 30.2695, -35.044, 32.3765, 0.74 ) }
    dend_121 { pt3dadd( 30.2767, -35.1101, 32.3898, 0.74 ) }
    dend_121 { pt3dadd( 30.4961, -37.127, 32.7944, 0.74 ) }
    dend_121 { pt3dadd( 30.7139, -39.13, 33.1963, 0.74 ) }
    dend_121 { pt3dadd( 30.7256, -39.2374, 33.2178, 0.74 ) }
    dend_121 { pt3dadd( 30.93, -41.1168, 33.5949, 0.74 ) }
    dend_121 { pt3dadd( 30.9362, -41.1836, 33.6048, 0.74 ) }
    // Section: dend_111, id: dend_111, parent: dend_97 (entry count 26/100)
    dend_111 { pt3dclear() }
    dend_111 { pt3dadd( 14.1235, 19.7246, 1.62066, 1.18 ) }
    dend_111 { pt3dadd( 14.2101, 20.4759, 1.73691, 1.18 ) }
    dend_111 { pt3dadd( 14.3194, 21.5531, 2.02096, 0.96 ) }
    dend_111 { pt3dadd( 14.3224, 21.6444, 2.04441, 0.96 ) }
    dend_111 { pt3dadd( 14.2793, 22.4018, 2.24656, 0.96 ) }
    dend_111 { pt3dadd( 14.0327, 23.8963, 2.58529, 0.96 ) }
    dend_111 { pt3dadd( 14.0151, 23.9753, 2.60074, 0.96 ) }
    dend_111 { pt3dadd( 13.6718, 25.2545, 2.81159, 0.96 ) }
    dend_111 { pt3dadd( 13.2588, 26.5807, 2.96498, 0.96 ) }
    dend_111 { pt3dadd( 12.7431, 28.1438, 3.05056, 0.96 ) }
    dend_111 { pt3dadd( 12.0343, 30.2109, 3.04523, 0.96 ) }
    dend_111 { pt3dadd( 11.7078, 31.1207, 3.01489, 1.25 ) }
    dend_111 { pt3dadd( 11.1593, 32.7873, 2.93272, 1.25 ) }
    dend_111 { pt3dadd( 10.6264, 34.5429, 2.80315, 1.25 ) }
    dend_111 { pt3dadd( 10.2988, 35.7834, 2.73905, 1.25 ) }
    dend_111 { pt3dadd( 10.0791, 36.8039, 2.69975, 1.03 ) }
    dend_111 { pt3dadd( 9.84824, 38.1594, 2.69616, 0.81 ) }
    dend_111 { pt3dadd( 9.56277, 40.0337, 2.75174, 0.81 ) }
    dend_111 { pt3dadd( 9.54851, 40.1264, 2.76271, 0.81 ) }
    dend_111 { pt3dadd( 9.34491, 41.432, 3.02771, 1.03 ) }
    dend_111 { pt3dadd( 9.14191, 42.4943, 3.35408, 1.03 ) }
    dend_111 { pt3dadd( 8.92426, 43.466, 3.7166, 1.03 ) }
    dend_111 { pt3dadd( 8.9035, 43.5508, 3.75113, 1.03 ) }
    dend_111 { pt3dadd( 8.47914, 44.9482, 4.43583, 0.81 ) }
    dend_111 { pt3dadd( 8.26079, 45.6242, 4.78212, 0.81 ) }
    dend_111 { pt3dadd( 7.8344, 46.7916, 5.43351, 0.74 ) }
    dend_111 { pt3dadd( 7.80841, 46.8543, 5.47899, 0.74 ) }
    dend_111 { pt3dadd( 7.67287, 47.1608, 5.74059, 0.74 ) }
    // Section: dend_98, id: dend_98, parent: dend_97 (entry count 54/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 14.1235, 19.7246, 1.62066, 0.74 ) }
    dend_98 { pt3dadd( 15.0633, 19.3179, 2.42889, 0.74 ) }
    dend_98 { pt3dadd( 15.1057, 19.2966, 2.45674, 0.74 ) }
    dend_98 { pt3dadd( 15.4252, 19.1276, 2.63784, 0.74 ) }
    dend_98 { pt3dadd( 17.513, 17.8786, 3.46512, 1.4 ) }
    dend_98 { pt3dadd( 18.1288, 17.4608, 3.70121, 1.03 ) }
    dend_98 { pt3dadd( 18.1718, 17.4295, 3.716, 1.03 ) }
    dend_98 { pt3dadd( 19.2709, 16.5512, 3.99967, 0.74 ) }
    dend_98 { pt3dadd( 19.3124, 16.5171, 4.0126, 0.74 ) }
    dend_98 { pt3dadd( 20.5469, 15.5114, 4.43134, 0.74 ) }
    dend_98 { pt3dadd( 21.8003, 14.5228, 4.8256, 0.52 ) }
    dend_98 { pt3dadd( 22.3642, 14.1606, 5.13818, 0.52 ) }
    dend_98 { pt3dadd( 22.4051, 14.139, 5.16785, 0.52 ) }
    dend_98 { pt3dadd( 23.6752, 13.6983, 6.25481, 1.11 ) }
    dend_98 { pt3dadd( 24.2621, 13.5658, 6.78061, 1.11 ) }
    dend_98 { pt3dadd( 24.3573, 13.562, 6.87385, 1.11 ) }
    dend_98 { pt3dadd( 25.9115, 13.6642, 8.3367, 0.74 ) }
    dend_98 { pt3dadd( 25.9508, 13.6686, 8.37482, 0.74 ) }
    dend_98 { pt3dadd( 26.9142, 13.717, 9.28825, 0.74 ) }
    dend_98 { pt3dadd( 26.9875, 13.7112, 9.34687, 0.74 ) }
    dend_98 { pt3dadd( 28.1745, 13.3754, 10.1167, 0.74 ) }
    dend_98 { pt3dadd( 28.2212, 13.3559, 10.138, 0.74 ) }
    dend_98 { pt3dadd( 29.5321, 12.7364, 10.5923, 0.74 ) }
    dend_98 { pt3dadd( 30.5639, 12.2196, 10.9221, 1.03 ) }
    dend_98 { pt3dadd( 32.054, 11.4733, 11.3405, 0.81 ) }
    dend_98 { pt3dadd( 33.8589, 10.6785, 11.7758, 0.81 ) }
    dend_98 { pt3dadd( 35.3142, 10.0862, 12.0494, 0.81 ) }
    dend_98 { pt3dadd( 36.5817, 9.69485, 12.2973, 0.81 ) }
    dend_98 { pt3dadd( 36.6347, 9.68459, 12.3072, 0.81 ) }
    dend_98 { pt3dadd( 37.6218, 9.70524, 12.5477, 0.59 ) }
    dend_98 { pt3dadd( 38.7865, 10.0238, 12.9798, 0.59 ) }
    dend_98 { pt3dadd( 38.832, 10.048, 12.9995, 0.59 ) }
    dend_98 { pt3dadd( 39.9173, 10.7813, 13.4851, 0.59 ) }
    dend_98 { pt3dadd( 40.0146, 10.8415, 13.5161, 0.59 ) }
    dend_98 { pt3dadd( 40.2831, 10.9707, 13.5782, 0.96 ) }
    dend_98 { pt3dadd( 40.391, 11.0138, 13.599, 0.96 ) }
    dend_98 { pt3dadd( 41.2276, 11.2956, 13.6715, 0.96 ) }
    dend_98 { pt3dadd( 41.3409, 11.3278, 13.673, 0.96 ) }
    dend_98 { pt3dadd( 42.498, 11.5472, 13.5193, 0.66 ) }
    dend_98 { pt3dadd( 43.2654, 11.6636, 13.4195, 0.96 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 94/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -12.7278, -0.651714, 0.508905, 2.28 ) }
    dend_52 { pt3dadd( -12.9756, -0.677614, 0.476103, 2.28 ) }
    dend_52 { pt3dadd( -13.0566, -0.688743, 0.467123, 2.28 ) }
    dend_52 { pt3dadd( -14.5164, -0.889205, 0.305362, 2.06 ) }
    dend_52 { pt3dadd( -17.3611, -1.27986, -0.00987724, 2.06 ) }
    dend_52 { pt3dadd( -19.8386, -1.62008, -0.284416, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_52 { pt3dadd( -21.865, -1.89835, -0.508962, 2.06 ) }
    dend_52 { pt3dadd( -24.2457, -2.22358, -0.760471, 2.28 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 2/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -12.7278, -0.651714, 0.508905, 0.37 ) }
    dend_49 { pt3dadd( -13.0875, -0.0495932, 0.937897, 0.37 ) }
    dend_49 { pt3dadd( -13.3403, 0.312314, 1.24518, 0.37 ) }
    dend_49 { pt3dadd( -13.3788, 0.358103, 1.28501, 0.37 ) }
    dend_49 { pt3dadd( -13.7267, 0.765517, 1.51614, 0.37 ) }
    dend_49 { pt3dadd( -13.7571, 0.801097, 1.53632, 0.37 ) }
    dend_49 { pt3dadd( -14.2015, 1.32153, 1.83156, 0.37 ) }
    dend_49 { pt3dadd( -14.2767, 1.39545, 1.85988, 0.37 ) }
    dend_49 { pt3dadd( -14.5415, 1.60745, 1.97142, 0.37 ) }
    dend_49 { pt3dadd( -15.1434, 2.10404, 2.22947, 0.22 ) }
    dend_49 { pt3dadd( -19.3539, 6.80397, 5.83018, 0.22 ) }
    dend_49 { pt3dadd( -23.7997, 11.0602, 9.66694, 0.22 ) }
    dend_49 { pt3dadd( -27.6995, 15.0447, 14.2916, 0.22 ) }
    dend_49 { pt3dadd( -32.3291, 17.659, 19.1745, 0.22 ) }
    dend_49 { pt3dadd( -36.0056, 21.0272, 24.4095, 0.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 17/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -3.52621, 23.1251, 6.72717, 1.84 ) }
    dend_27 { pt3dadd( -3.33582, 25.0019, 6.11151, 1.84 ) }
    dend_27 { pt3dadd( -3.25153, 25.7941, 5.9045, 1.84 ) }
    dend_27 { pt3dadd( -3.22327, 25.9745, 5.85426, 1.84 ) }
    dend_27 { pt3dadd( -3.02458, 27.0882, 5.53806, 1.84 ) }
    dend_27 { pt3dadd( -3.0102, 27.1528, 5.51947, 1.84 ) }
    dend_27 { pt3dadd( -2.68329, 28.3396, 5.17222, 1.84 ) }
    dend_27 { pt3dadd( -2.66535, 28.4047, 5.15911, 1.84 ) }
    dend_27 { pt3dadd( -2.2711, 29.5838, 4.887, 1.55 ) }
    dend_27 { pt3dadd( -2.24953, 29.638, 4.87286, 1.55 ) }
    dend_27 { pt3dadd( -1.79407, 30.5361, 4.58882, 1.55 ) }
    dend_27 { pt3dadd( -1.42315, 31.2375, 4.33624, 1.92 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 29/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -3.52621, 23.1251, 6.72717, 1.25 ) }
    dend_24 { pt3dadd( -3.78246, 23.9889, 7.61664, 1.25 ) }
    dend_24 { pt3dadd( -3.80759, 24.0412, 7.68712, 1.25 ) }
    dend_24 { pt3dadd( -4.18082, 24.7107, 8.66235, 0.81 ) }
    dend_24 { pt3dadd( -4.6853, 25.3487, 9.63779, 0.81 ) }
    dend_24 { pt3dadd( -5.14043, 25.7429, 10.2715, 1.18 ) }
    dend_24 { pt3dadd( -5.44034, 25.9379, 10.5926, 1.18 ) }
    dend_24 { pt3dadd( -6.9608, 26.6491, 12.0294, 1.03 ) }
    dend_24 { pt3dadd( -7.0178, 26.6685, 12.0712, 1.03 ) }
    dend_24 { pt3dadd( -8.10314, 26.932, 12.7012, 1.03 ) }
    dend_24 { pt3dadd( -9.24555, 27.1628, 13.2389, 1.25 ) }
    dend_24 { pt3dadd( -10.0435, 27.3197, 13.5735, 1.25 ) }
    dend_24 { pt3dadd( -11.6189, 27.6554, 14.1372, 0.81 ) }
    dend_24 { pt3dadd( -12.7487, 27.9457, 14.4388, 0.81 ) }
    dend_24 { pt3dadd( -12.8147, 27.9697, 14.4601, 0.81 ) }
    dend_24 { pt3dadd( -13.8185, 28.5634, 14.8698, 0.81 ) }
    dend_24 { pt3dadd( -14.2096, 28.9342, 15.0901, 0.81 ) }
    dend_24 { pt3dadd( -14.2478, 28.9912, 15.1185, 0.81 ) }
    dend_24 { pt3dadd( -14.3794, 29.3491, 15.2826, 0.81 ) }
    dend_24 { pt3dadd( -14.6143, 30.6906, 16.0717, 0.81 ) }
    dend_24 { pt3dadd( -14.6786, 31.532, 16.6387, 0.81 ) }
    dend_24 { pt3dadd( -14.6797, 32.1697, 17.1924, 0.81 ) }
    dend_24 { pt3dadd( -14.6739, 32.5967, 17.6386, 0.81 ) }
    dend_24 { pt3dadd( -14.6944, 33.3511, 18.5788, 0.81 ) }
    dend_24 { pt3dadd( -14.7658, 33.9847, 19.6088, 0.81 ) }
    dend_24 { pt3dadd( -14.7775, 34.0036, 19.669, 0.81 ) }
    dend_24 { pt3dadd( -15.2419, 34.1387, 21.0422, 0.81 ) }
    dend_24 { pt3dadd( -15.3102, 34.1368, 21.1612, 0.81 ) }
    dend_24 { pt3dadd( -15.8346, 34.0692, 21.8184, 0.81 ) }
    dend_24 { pt3dadd( -16.0703, 34.0455, 22.0473, 0.81 ) }
    dend_24 { pt3dadd( -16.9294, 34.0703, 22.7498, 0.81 ) }
    dend_24 { pt3dadd( -17.0717, 34.0986, 22.9392, 0.81 ) }
    dend_24 { pt3dadd( -17.5428, 34.2467, 23.6784, 0.81 ) }
    dend_24 { pt3dadd( -17.6044, 34.2722, 23.7879, 0.81 ) }
    dend_24 { pt3dadd( -18.2285, 34.6364, 25.078, 0.81 ) }
    dend_24 { pt3dadd( -18.4583, 34.8154, 25.6252, 0.81 ) }
    dend_24 { pt3dadd( -19.6389, 36.1421, 28.9493, 0.66 ) }
    dend_24 { pt3dadd( -19.7783, 36.3947, 29.4967, 0.66 ) }
    dend_24 { pt3dadd( -19.8614, 36.6743, 30.0339, 0.66 ) }
    dend_24 { pt3dadd( -19.8988, 37.0279, 30.5589, 0.66 ) }
    dend_24 { pt3dadd( -19.8303, 37.5312, 31.0887, 0.59 ) }
    dend_24 { pt3dadd( -19.6298, 38.2183, 31.6417, 0.59 ) }
    dend_24 { pt3dadd( -19.2119, 39.2846, 32.1515, 0.88 ) }
    dend_24 { pt3dadd( -19.1885, 39.3369, 32.1821, 0.88 ) }
    dend_24 { pt3dadd( -18.9222, 39.911, 32.5875, 0.88 ) }
    dend_24 { pt3dadd( -18.4902, 40.89, 33.354, 0.44 ) }
    dend_24 { pt3dadd( -18.466, 40.9602, 33.4186, 0.44 ) }
    dend_24 { pt3dadd( -18.3806, 41.3559, 33.8256, 0.44 ) }
    dend_24 { pt3dadd( -18.364, 42.1486, 34.6636, 0.44 ) }
    dend_24 { pt3dadd( -18.3836, 42.2377, 34.7679, 0.44 ) }
    dend_24 { pt3dadd( -18.5219, 42.516, 35.2023, 0.44 ) }
    dend_24 { pt3dadd( -19.0186, 43.125, 36.3111, 0.44 ) }
    dend_24 { pt3dadd( -19.2323, 43.3675, 36.8279, 0.44 ) }
    dend_24 { pt3dadd( -19.378, 43.5014, 37.1864, 0.88 ) }
    dend_24 { pt3dadd( -19.5963, 43.6847, 37.7203, 0.88 ) }
    dend_24 { pt3dadd( -20.0079, 44.1337, 39.1634, 0.74 ) }
    dend_24 { pt3dadd( -20.0118, 44.1525, 39.2247, 0.74 ) }
    dend_24 { pt3dadd( -19.8904, 44.4536, 39.908, 0.74 ) }
    dend_24 { pt3dadd( -19.8786, 44.4834, 39.9638, 0.74 ) }
    dend_24 { pt3dadd( -19.8782, 44.7445, 40.3547, 0.74 ) }
    dend_24 { pt3dadd( -19.8897, 44.7839, 40.4046, 0.74 ) }
    dend_24 { pt3dadd( -20.3197, 45.4826, 41.1258, 0.52 ) }
    dend_24 { pt3dadd( -20.5552, 45.8285, 41.4826, 0.52 ) }
    dend_24 { pt3dadd( -20.5827, 45.8683, 41.5255, 0.52 ) }
    dend_24 { pt3dadd( -21.0161, 46.5476, 42.2867, 0.52 ) }
    dend_24 { pt3dadd( -21.0409, 46.5924, 42.3399, 0.52 ) }
    dend_24 { pt3dadd( -21.0859, 46.7552, 42.5475, 0.52 ) }
    dend_24 { pt3dadd( -21.0758, 46.7957, 42.6083, 0.52 ) }
    dend_24 { pt3dadd( -20.8367, 46.903, 43.4547, 0.52 ) }
    dend_24 { pt3dadd( -20.8, 46.9078, 43.5869, 0.52 ) }
    dend_24 { pt3dadd( -20.7055, 46.8983, 43.9781, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_24 { pt3dadd( -20.5378, 46.8566, 44.8391, 0.52 ) }
    dend_24 { pt3dadd( -20.4822, 46.8199, 45.321, 0.52 ) }
    dend_24 { pt3dadd( -20.3578, 46.4787, 48.8456, 0.52 ) }
    dend_24 { pt3dadd( -20.3659, 46.4616, 48.9816, 0.52 ) }
    dend_24 { pt3dadd( -20.4613, 46.3909, 49.5832, 0.52 ) }
    dend_24 { pt3dadd( -20.4798, 46.3858, 49.6443, 0.52 ) }
    dend_24 { pt3dadd( -20.9268, 46.4042, 50.4762, 0.52 ) }
    dend_24 { pt3dadd( -21.0674, 46.4496, 50.6132, 0.52 ) }
    dend_24 { pt3dadd( -21.3079, 46.5821, 50.6427, 0.52 ) }
    dend_24 { pt3dadd( -21.4586, 46.6949, 50.6629, 0.52 ) }
    dend_24 { pt3dadd( -21.8526, 47.0896, 50.7475, 0.52 ) }
    dend_24 { pt3dadd( -22.322, 47.6513, 50.8717, 0.52 ) }
    dend_24 { pt3dadd( -22.4895, 47.8895, 50.9243, 0.52 ) }
    dend_24 { pt3dadd( -22.9539, 48.6343, 51.0778, 0.52 ) }
    dend_24 { pt3dadd( -23.029, 48.7666, 51.1034, 0.52 ) }
    dend_24 { pt3dadd( -23.3668, 49.4266, 51.2176, 0.52 ) }
    dend_24 { pt3dadd( -23.6717, 50.0963, 51.3009, 0.52 ) }
    dend_24 { pt3dadd( -23.6958, 50.1569, 51.3068, 0.52 ) }
    dend_24 { pt3dadd( -23.9512, 50.9388, 51.3422, 0.52 ) }
    dend_24 { pt3dadd( -23.9989, 51.1392, 51.3391, 0.52 ) }
    dend_24 { pt3dadd( -24.1453, 51.7375, 51.2874, 0.52 ) }
    dend_24 { pt3dadd( -24.2662, 52.2502, 51.1901, 0.52 ) }
    dend_24 { pt3dadd( -24.2965, 52.3745, 51.1621, 0.52 ) }
    dend_24 { pt3dadd( -24.4251, 52.8055, 51.059, 0.52 ) }
    dend_24 { pt3dadd( -24.4512, 52.8632, 51.0433, 0.52 ) }
    dend_24 { pt3dadd( -24.7861, 53.4449, 50.9059, 0.52 ) }
    dend_24 { pt3dadd( -24.8229, 53.4961, 50.8901, 0.52 ) }
    dend_24 { pt3dadd( -25.1224, 53.841, 50.7679, 0.52 ) }
    dend_24 { pt3dadd( -25.3608, 54.074, 50.6525, 0.52 ) }
    dend_24 { pt3dadd( -25.6396, 54.3566, 50.5235, 0.52 ) }
    dend_24 { pt3dadd( -26.0402, 54.7241, 50.3148, 0.52 ) }
    dend_24 { pt3dadd( -26.4639, 55.0316, 50.04, 0.52 ) }
    dend_24 { pt3dadd( -26.7559, 55.1898, 49.8408, 0.52 ) }
    dend_24 { pt3dadd( -27.1133, 55.2774, 49.5729, 0.52 ) }
    dend_24 { pt3dadd( -31.8563, 60.7254, 55.3141, 0.52 ) }
    dend_24 { pt3dadd( -37.4078, 64.4772, 61.5985, 0.52 ) }
    dend_24 { pt3dadd( -43.4379, 67.8144, 67.6608, 0.52 ) }
    dend_24 { pt3dadd( -50.0913, 69.264, 73.78, 0.52 ) }
    dend_24 { pt3dadd( -56.3207, 71.0459, 80.2517, 0.52 ) }
    dend_24 { pt3dadd( -62.3266, 73.8875, 86.5728, 0.52 ) }
    dend_24 { pt3dadd( -68.6259, 74.8925, 93.1353, 0.52 ) }
    dend_24 { pt3dadd( -74.5817, 75.3644, 100.065, 0.52 ) }
    dend_24 { pt3dadd( -79.0046, 75.4869, 108.074, 0.52 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 43/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 27.2687, -17.6147, 13.3633, 0.59 ) }
    dend_20 { pt3dadd( 27.3031, -19.1855, 14.9121, 0.59 ) }
    dend_20 { pt3dadd( 27.3115, -19.2596, 14.966, 0.59 ) }
    dend_20 { pt3dadd( 27.4006, -19.8183, 15.3207, 0.59 ) }
    dend_20 { pt3dadd( 27.4207, -19.8928, 15.3709, 0.59 ) }
    dend_20 { pt3dadd( 27.8427, -20.8422, 16.0384, 0.59 ) }
    dend_20 { pt3dadd( 27.9912, -21.0554, 16.1979, 0.59 ) }
    dend_20 { pt3dadd( 28.6726, -21.4697, 16.493, 0.59 ) }
    dend_20 { pt3dadd( 28.7412, -21.4878, 16.5284, 0.59 ) }
    dend_20 { pt3dadd( 29.631, -21.6064, 17.0266, 0.59 ) }
    dend_20 { pt3dadd( 30.439, -21.6652, 17.4822, 0.52 ) }
    dend_20 { pt3dadd( 31.2043, -21.661, 17.9072, 0.52 ) }
    dend_20 { pt3dadd( 32.2281, -21.651, 18.5937, 0.52 ) }
    dend_20 { pt3dadd( 33.811, -21.567, 19.7224, 0.52 ) }
    dend_20 { pt3dadd( 34.2863, -21.5523, 20.0849, 0.52 ) }
    dend_20 { pt3dadd( 34.7097, -21.5662, 20.4607, 0.52 ) }
    dend_20 { pt3dadd( 34.7583, -21.5757, 20.5225, 0.52 ) }
    dend_20 { pt3dadd( 35.3237, -21.8896, 21.5892, 0.81 ) }
    dend_20 { pt3dadd( 44.0432, -24.2612, 28.4056, 0.81 ) }
    dend_20 { pt3dadd( 53.6715, -28.028, 33.0533, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 63/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 27.2687, -17.6147, 13.3633, 1.4 ) }
    dend_15 { pt3dadd( 28.068, -18.4974, 14.0731, 1.4 ) }
    dend_15 { pt3dadd( 28.1353, -18.568, 14.1305, 1.4 ) }
    dend_15 { pt3dadd( 29.7832, -20.1945, 15.4665, 1.4 ) }
    dend_15 { pt3dadd( 29.8395, -20.2501, 15.5122, 1.4 ) }
    dend_15 { pt3dadd( 31.762, -22.1477, 17.0709, 0.88 ) }
    dend_15 { pt3dadd( 31.8113, -22.1963, 17.1108, 0.88 ) }
    dend_15 { pt3dadd( 32.6861, -23.0672, 17.9759, 0.88 ) }
    dend_15 { pt3dadd( 32.8826, -23.2584, 18.1957, 0.88 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 72/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 20.3001, 18.92, 2.23651, 1.25 ) }
    dend_11 { pt3dadd( 19.0721, 20.2596, 1.33633, 1.25 ) }
    dend_11 { pt3dadd( 18.782, 20.6449, 1.1575, 1.25 ) }
    dend_11 { pt3dadd( 18.4412, 21.1935, 0.935023, 0.66 ) }
    dend_11 { pt3dadd( 18.0817, 21.819, 0.715707, 0.52 ) }
    dend_11 { pt3dadd( 17.8802, 22.1573, 0.585802, 0.81 ) }
    dend_11 { pt3dadd( 17.8145, 22.2664, 0.542526, 0.81 ) }
    dend_11 { pt3dadd( 17.4847, 22.816, 0.389396, 0.81 ) }
    dend_11 { pt3dadd( 17.1004, 23.4303, 0.248, 0.81 ) }
    dend_11 { pt3dadd( 16.4952, 24.3121, 0.152165, 0.81 ) }
    dend_11 { pt3dadd( 15.9878, 24.9883, 0.169307, 0.81 ) }
    dend_11 { pt3dadd( 15.9497, 25.0379, 0.172648, 0.81 ) }
    dend_11 { pt3dadd( 15.4852, 25.6128, 0.269638, 0.81 ) }
    dend_11 { pt3dadd( 14.6398, 26.6174, 0.512626, 0.66 ) }
    dend_11 { pt3dadd( 13.8572, 27.5486, 0.77317, 0.52 ) }
    dend_11 { pt3dadd( 13.1979, 28.3562, 1.01299, 0.52 ) }
    dend_11 { pt3dadd( 12.7429, 28.9712, 1.17877, 0.52 ) }
    dend_11 { pt3dadd( 12.1068, 29.9158, 1.41043, 0.52 ) }
    dend_11 { pt3dadd( 11.561, 30.8209, 1.59861, 0.52 ) }
    dend_11 { pt3dadd( 10.9466, 31.9269, 1.73913, 0.52 ) }
    dend_11 { pt3dadd( 10.9139, 31.9909, 1.74142, 0.52 ) }
    dend_11 { pt3dadd( 10.451, 32.9352, 1.74585, 0.52 ) }
    dend_11 { pt3dadd( 9.96265, 33.9057, 1.68854, 0.52 ) }
    dend_11 { pt3dadd( 9.8722, 34.0785, 1.65669, 0.52 ) }
    dend_11 { pt3dadd( 9.4039, 34.9114, 1.44577, 0.52 ) }
    dend_11 { pt3dadd( 8.72058, 35.9494, 1.09111, 0.52 ) }
    dend_11 { pt3dadd( 8.66776, 36.0207, 1.05693, 0.52 ) }
    dend_11 { pt3dadd( 8.04053, 36.7582, 0.593541, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_11 { pt3dadd( 7.54519, 37.3239, 0.188414, 0.74 ) }
    dend_11 { pt3dadd( 7.51411, 37.3596, 0.163362, 0.74 ) }
    dend_11 { pt3dadd( 6.93026, 38.0802, -0.28511, 0.74 ) }
    dend_11 { pt3dadd( 6.31508, 38.8825, -0.698181, 0.74 ) }
    dend_11 { pt3dadd( 6.06691, 39.2361, -0.862436, 0.52 ) }
    dend_11 { pt3dadd( 5.68663, 39.8514, -1.10908, 0.52 ) }
    dend_11 { pt3dadd( 5.6269, 39.9661, -1.14689, 0.52 ) }
    dend_11 { pt3dadd( 5.18388, 40.8955, -1.40523, 0.52 ) }
    dend_11 { pt3dadd( 5.14912, 40.9827, -1.42426, 0.52 ) }
    dend_11 { pt3dadd( 4.75314, 42.0724, -1.60444, 0.52 ) }
    dend_11 { pt3dadd( 4.45302, 43.0486, -1.76405, 0.52 ) }
    dend_11 { pt3dadd( 4.16367, 44.1272, -1.94056, 0.52 ) }
    dend_11 { pt3dadd( 4.14991, 44.1873, -1.95405, 0.52 ) }
    dend_11 { pt3dadd( 3.98766, 45.0638, -2.20047, 0.96 ) }
    dend_11 { pt3dadd( 3.97811, 45.1234, -2.21897, 0.96 ) }
    dend_11 { pt3dadd( 3.88883, 45.8065, -2.44389, 1.25 ) }
    dend_11 { pt3dadd( 3.8717, 45.9019, -2.47571, 1.25 ) }
    dend_11 { pt3dadd( 3.50888, 47.2544, -2.91312, 1.25 ) }
    dend_11 { pt3dadd( 3.20639, 48.2103, -3.20963, 0.74 ) }
    dend_11 { pt3dadd( 2.86241, 49.1361, -3.48089, 0.74 ) }
    dend_11 { pt3dadd( 2.60872, 49.7378, -3.64299, 0.74 ) }
    dend_11 { pt3dadd( 2.14003, 50.7226, -3.90817, 0.74 ) }
    dend_11 { pt3dadd( 1.58759, 51.7848, -4.17863, 0.74 ) }
    dend_11 { pt3dadd( 1.52543, 51.8914, -4.20225, 0.74 ) }
    dend_11 { pt3dadd( 1.15523, 52.4843, -4.3497, 0.88 ) }
    dend_11 { pt3dadd( 0.632529, 53.2792, -4.57197, 0.88 ) }
    dend_11 { pt3dadd( 0.276659, 53.8499, -4.74324, 0.88 ) }
    dend_11 { pt3dadd( 0.0569682, 54.2497, -4.86895, 0.44 ) }
    dend_11 { pt3dadd( -0.204831, 54.8495, -5.05551, 0.44 ) }
    dend_11 { pt3dadd( -0.251776, 54.9853, -5.09535, 0.44 ) }
    dend_11 { pt3dadd( -0.30161, 55.2716, -5.16805, 0.81 ) }
    dend_11 { pt3dadd( -0.291478, 55.9531, -5.26974, 0.81 ) }
    dend_11 { pt3dadd( -0.283858, 56.0248, -5.2748, 0.81 ) }
    dend_11 { pt3dadd( -0.177252, 56.6346, -5.30358, 0.81 ) }
    dend_11 { pt3dadd( -0.162824, 56.7054, -5.30587, 0.81 ) }
    dend_11 { pt3dadd( -0.0230328, 57.5533, -5.33212, 0.81 ) }
    dend_11 { pt3dadd( 0.0719232, 58.3688, -5.32697, 0.44 ) }
    dend_11 { pt3dadd( 0.0740592, 58.432, -5.32534, 0.44 ) }
    dend_11 { pt3dadd( 0.0297552, 59.1656, -5.30669, 0.44 ) }
    dend_11 { pt3dadd( -0.00198379, 59.3716, -5.30329, 0.44 ) }
    dend_11 { pt3dadd( -0.137728, 60.0115, -5.29748, 0.44 ) }
    dend_11 { pt3dadd( -0.332291, 60.6563, -5.28577, 0.44 ) }
    dend_11 { pt3dadd( -0.538956, 61.211, -5.28134, 0.96 ) }
    dend_11 { pt3dadd( -0.87049, 62.0365, -5.27203, 0.96 ) }
    dend_11 { pt3dadd( -1.1493, 62.7256, -5.2049, 0.96 ) }
    dend_11 { pt3dadd( -1.17079, 62.7842, -5.1961, 0.96 ) }
    dend_11 { pt3dadd( -1.42793, 63.5688, -5.04403, 0.59 ) }
    dend_11 { pt3dadd( -1.53571, 63.9894, -4.95663, 0.59 ) }
    dend_11 { pt3dadd( -1.55381, 64.1111, -4.92897, 0.59 ) }
    dend_11 { pt3dadd( -1.68193, 65.6921, -4.39322, 0.59 ) }
    dend_11 { pt3dadd( -1.69497, 66.1199, -4.22869, 0.96 ) }
    dend_11 { pt3dadd( -1.69418, 66.2034, -4.19781, 0.96 ) }
    dend_11 { pt3dadd( -1.66638, 66.9736, -3.9295, 0.96 ) }
    dend_11 { pt3dadd( -1.62835, 67.9005, -3.62462, 0.96 ) }
    dend_11 { pt3dadd( -1.60059, 69.4438, -3.18575, 0.96 ) }
    dend_11 { pt3dadd( -1.61354, 70.031, -3.06528, 0.59 ) }
    dend_11 { pt3dadd( -1.66247, 70.5739, -2.97485, 0.44 ) }
    dend_11 { pt3dadd( -1.74676, 71.1331, -2.91728, 0.44 ) }
    dend_11 { pt3dadd( -1.77675, 71.265, -2.91416, 0.44 ) }
    dend_11 { pt3dadd( -1.92233, 71.7624, -2.91144, 0.44 ) }
    dend_11 { pt3dadd( -2.07594, 72.2683, -2.92899, 0.44 ) }
    dend_11 { pt3dadd( -2.3126, 72.9865, -2.92014, 1.11 ) }
    dend_11 { pt3dadd( -2.56857, 73.7264, -2.88857, 1.77 ) }
    dend_11 { pt3dadd( -2.75273, 74.2627, -2.87174, 1.77 ) }
    dend_11 { pt3dadd( -3.16471, 75.4813, -2.86684, 0.81 ) }
    dend_11 { pt3dadd( -3.37748, 76.1436, -2.88343, 0.66 ) }
    dend_11 { pt3dadd( -3.55607, 76.7638, -2.89322, 0.59 ) }
    dend_11 { pt3dadd( -3.74184, 77.4546, -2.90335, 0.52 ) }
    dend_11 { pt3dadd( -3.88109, 78.0764, -2.91845, 0.52 ) }
    dend_11 { pt3dadd( -3.99272, 78.6975, -2.95196, 0.52 ) }
    dend_11 { pt3dadd( -4.13017, 79.638, -2.98991, 0.52 ) }
    dend_11 { pt3dadd( -4.27451, 80.7525, -2.97714, 0.52 ) }
    dend_11 { pt3dadd( -4.28263, 80.8152, -2.97834, 0.52 ) }
    dend_11 { pt3dadd( -4.38294, 81.5798, -3.00694, 1.62 ) }
    dend_11 { pt3dadd( -4.72404, 83.4511, -3.13504, 0.66 ) }
    dend_11 { pt3dadd( -4.93943, 84.2791, -3.20895, 0.44 ) }
    dend_11 { pt3dadd( -5.12089, 84.8574, -3.2795, 0.44 ) }
    dend_11 { pt3dadd( -5.70415, 86.4058, -3.47505, 0.44 ) }
    dend_11 { pt3dadd( -5.75247, 86.5214, -3.4883, 0.44 ) }
    dend_11 { pt3dadd( -6.55255, 88.2517, -3.67704, 0.44 ) }
    dend_11 { pt3dadd( -7.18488, 89.55, -3.81426, 0.44 ) }
    dend_11 { pt3dadd( -7.97355, 91.1067, -3.98106, 0.44 ) }
    dend_11 { pt3dadd( -8.56965, 92.2584, -4.06754, 0.44 ) }
    dend_11 { pt3dadd( -8.9182, 92.9217, -4.06846, 0.44 ) }
    dend_11 { pt3dadd( -9.23258, 93.5597, -4.02285, 0.96 ) }
    dend_11 { pt3dadd( -9.5053, 94.1764, -3.93458, 0.96 ) }
    dend_11 { pt3dadd( -9.57831, 94.3682, -3.90336, 0.96 ) }
    dend_11 { pt3dadd( -9.80435, 95.0541, -3.77886, 0.81 ) }
    dend_11 { pt3dadd( -10.0306, 95.9215, -3.63408, 0.29 ) }
    dend_11 { pt3dadd( -10.5517, 98.333, -3.25614, 0.29 ) }
    dend_11 { pt3dadd( -10.69, 99.119, -3.15126, 0.37 ) }
    dend_11 { pt3dadd( -10.8006, 99.9423, -3.06721, 0.96 ) }
    dend_11 { pt3dadd( -10.8623, 100.611, -3.0261, 1.4 ) }
    dend_11 { pt3dadd( -10.8888, 101.143, -3.02089, 0.88 ) }
    dend_11 { pt3dadd( -10.8862, 101.739, -3.06946, 0.52 ) }
    dend_11 { pt3dadd( -10.7916, 102.572, -3.25139, 0.52 ) }
    dend_11 { pt3dadd( -10.6739, 103.235, -3.40644, 0.74 ) }
    dend_11 { pt3dadd( -10.5248, 103.829, -3.54379, 0.74 ) }
    dend_11 { pt3dadd( -10.4423, 104.099, -3.61125, 0.37 ) }
    dend_11 { pt3dadd( -10.4218, 104.157, -3.62556, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_11 { pt3dadd( -9.73709, 105.89, -4.02184, 0.37 ) }
    dend_11 { pt3dadd( -9.64248, 106.128, -4.07276, 0.37 ) }
    dend_11 { pt3dadd( -9.33652, 106.914, -4.27348, 0.37 ) }
    dend_11 { pt3dadd( -9.315, 106.972, -4.28927, 0.37 ) }
    dend_11 { pt3dadd( -8.82789, 108.257, -4.63835, 0.37 ) }
    dend_11 { pt3dadd( -8.43564, 109.305, -4.90464, 0.81 ) }
    dend_11 { pt3dadd( -8.16692, 110.034, -5.07471, 0.81 ) }
    dend_11 { pt3dadd( -7.73893, 111.183, -5.34717, 0.29 ) }
    dend_11 { pt3dadd( -7.6456, 111.423, -5.3905, 0.29 ) }
    dend_11 { pt3dadd( -7.17176, 112.569, -5.53717, 0.29 ) }
    dend_11 { pt3dadd( -6.82259, 113.373, -5.5885, 0.29 ) }
    dend_11 { pt3dadd( -6.79225, 113.438, -5.58747, 0.29 ) }
    dend_11 { pt3dadd( -6.51767, 113.989, -5.5311, 0.29 ) }
    dend_11 { pt3dadd( -5.85814, 115.427, -5.18026, 0.37 ) }
    dend_11 { pt3dadd( -5.82402, 115.506, -5.15756, 0.37 ) }
    dend_11 { pt3dadd( -5.60609, 116.034, -4.98736, 0.37 ) }
    dend_11 { pt3dadd( -5.43221, 116.456, -4.84547, 0.37 ) }
    dend_11 { pt3dadd( -5.4082, 116.511, -4.82768, 0.37 ) }
    dend_11 { pt3dadd( -4.49898, 118.472, -3.94438, 0.37 ) }
    dend_11 { pt3dadd( -4.46929, 118.529, -3.91236, 0.37 ) }
    dend_11 { pt3dadd( -4.22123, 118.934, -3.54686, 0.37 ) }
    dend_11 { pt3dadd( -4.18759, 118.98, -3.47196, 0.37 ) }
    dend_11 { pt3dadd( -3.95218, 119.247, -2.73991, 0.37 ) }
    dend_11 { pt3dadd( -3.46809, 119.55, -0.683972, 0.44 ) }
    dend_11 { pt3dadd( -3.39903, 119.522, -0.225003, 0.44 ) }
    dend_11 { pt3dadd( -3.24507, 119.253, 1.39909, 0.66 ) }
    dend_11 { pt3dadd( -3.21314, 118.944, 2.49554, 0.29 ) }
    dend_11 { pt3dadd( -3.21658, 118.904, 2.58772, 0.29 ) }
    dend_11 { pt3dadd( -3.31355, 118.477, 3.22981, 0.29 ) }
    dend_11 { pt3dadd( -3.33453, 118.399, 3.29122, 0.29 ) }
    dend_11 { pt3dadd( -3.5335, 117.668, 3.69123, 0.29 ) }
    dend_11 { pt3dadd( -3.57629, 117.478, 3.72931, 0.29 ) }
    dend_11 { pt3dadd( -3.70277, 116.907, 3.77721, 0.29 ) }
    dend_11 { pt3dadd( -3.74084, 116.763, 3.78204, 0.29 ) }
    dend_11 { pt3dadd( -3.87304, 116.354, 3.77259, 0.44 ) }
    dend_11 { pt3dadd( -3.8963, 116.296, 3.76808, 0.44 ) }
    dend_11 { pt3dadd( -4.1211, 115.855, 3.70097, 0.44 ) }
    dend_11 { pt3dadd( -4.19024, 115.742, 3.67927, 0.44 ) }
    dend_11 { pt3dadd( -4.55345, 115.213, 3.56922, 0.59 ) }
    dend_11 { pt3dadd( -4.58785, 115.162, 3.56068, 0.59 ) }
    dend_11 { pt3dadd( -4.83158, 114.763, 3.51665, 0.59 ) }
    dend_11 { pt3dadd( -4.86346, 114.709, 3.51129, 0.59 ) }
    dend_11 { pt3dadd( -5.10637, 114.254, 3.47871, 0.59 ) }
    dend_11 { pt3dadd( -5.31762, 113.802, 3.46224, 0.29 ) }
    dend_11 { pt3dadd( -5.59574, 113.148, 3.46262, 0.29 ) }
    dend_11 { pt3dadd( -5.8327, 112.503, 3.46771, 0.29 ) }
    dend_11 { pt3dadd( -5.94138, 112.16, 3.47316, 0.44 ) }
    dend_11 { pt3dadd( -6.10989, 111.589, 3.49677, 0.59 ) }
    dend_11 { pt3dadd( -6.22718, 111.145, 3.52554, 0.59 ) }
    dend_11 { pt3dadd( -6.33663, 110.716, 3.56146, 0.81 ) }
    dend_11 { pt3dadd( -6.51296, 110.02, 3.63234, 1.33 ) }
    dend_11 { pt3dadd( -6.6464, 109.471, 3.69933, 1.03 ) }
    dend_11 { pt3dadd( -6.81352, 108.75, 3.8033, 0.37 ) }
    dend_11 { pt3dadd( -6.94294, 108.099, 3.90125, 0.37 ) }
    dend_11 { pt3dadd( -7.0059, 107.628, 3.9732, 0.37 ) }
    dend_11 { pt3dadd( -7.0115, 107.54, 3.98681, 0.37 ) }
    dend_11 { pt3dadd( -7.01072, 107.273, 4.02685, 0.15 ) }
    dend_11 { pt3dadd( -6.99284, 106.88, 4.08068, 0.15 ) }
    dend_11 { pt3dadd( -6.94528, 106.146, 4.16518, 0.15 ) }
    dend_11 { pt3dadd( -6.90728, 105.355, 4.25498, 0.15 ) }
    dend_11 { pt3dadd( -6.90708, 105.229, 4.26933, 0.15 ) }
    dend_11 { pt3dadd( -6.92559, 104.834, 4.31392, 0.15 ) }
    dend_11 { pt3dadd( -6.97712, 104.32, 4.37062, 0.15 ) }
    dend_11 { pt3dadd( -7.04551, 103.863, 4.42027, 0.37 ) }
    dend_11 { pt3dadd( -7.16052, 103.346, 4.47423, 0.37 ) }
    dend_11 { pt3dadd( -7.25245, 102.973, 4.51331, 0.44 ) }
    dend_11 { pt3dadd( -7.32962, 102.585, 4.55525, 0.44 ) }
    dend_11 { pt3dadd( -7.33925, 102.523, 4.5622, 0.44 ) }
    dend_11 { pt3dadd( -7.37453, 102.187, 4.60052, 0.44 ) }
    dend_11 { pt3dadd( -7.395, 101.894, 4.63353, 0.22 ) }
    dend_11 { pt3dadd( -7.39771, 101.806, 4.64274, 0.22 ) }
    dend_11 { pt3dadd( -7.3816, 100.804, 4.70853, 0.22 ) }
    dend_11 { pt3dadd( -7.37811, 100.741, 4.7111, 0.22 ) }
    dend_11 { pt3dadd( -7.33415, 100.193, 4.72572, 0.29 ) }
    dend_11 { pt3dadd( -7.2921, 99.7757, 4.72881, 0.29 ) }
    dend_11 { pt3dadd( -7.23186, 99.3104, 4.72853, 0.66 ) }
    dend_11 { pt3dadd( -7.14769, 98.7181, 4.72612, 0.88 ) }
    dend_11 { pt3dadd( -7.08196, 98.2098, 4.71402, 0.96 ) }
    dend_11 { pt3dadd( -7.03669, 97.8243, 4.70308, 0.66 ) }
    dend_11 { pt3dadd( -6.99088, 97.3427, 4.68838, 0.29 ) }
    dend_11 { pt3dadd( -6.94444, 96.7016, 4.67488, 0.29 ) }
    dend_11 { pt3dadd( -6.91884, 96.227, 4.67328, 0.29 ) }
    dend_11 { pt3dadd( -6.88571, 95.7162, 4.68769, 0.37 ) }
    dend_11 { pt3dadd( -6.86373, 95.5188, 4.68154, 0.37 ) }
    dend_11 { pt3dadd( -6.79512, 95.1064, 4.64848, 0.37 ) }
    dend_11 { pt3dadd( -6.69004, 94.641, 4.59466, 0.37 ) }
    dend_11 { pt3dadd( -6.67349, 94.5809, 4.58524, 0.37 ) }
    dend_11 { pt3dadd( -6.4783, 94.0149, 4.49139, 0.37 ) }
    dend_11 { pt3dadd( -6.127, 93.1075, 4.35871, 0.52 ) }
    dend_11 { pt3dadd( -6.10425, 93.0492, 4.35149, 0.52 ) }
    dend_11 { pt3dadd( -5.94763, 92.682, 4.23118, 0.52 ) }
    dend_11 { pt3dadd( -5.92085, 92.6215, 4.20369, 0.52 ) }
    dend_11 { pt3dadd( -5.77114, 92.2807, 4.03759, 0.52 ) }
    dend_11 { pt3dadd( -5.60741, 91.8983, 3.82949, 0.52 ) }
    dend_11 { pt3dadd( -5.39903, 91.4288, 3.56077, 0.52 ) }
    dend_11 { pt3dadd( -4.73358, 89.9997, 2.6425, 1.11 ) }
    dend_11 { pt3dadd( -4.40805, 89.3471, 2.1466, 1.4 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 97/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 20.3001, 18.92, 2.23651, 1.62 ) }
    dend_6 { pt3dadd( 20.5729, 19.4959, 2.05825, 1.62 ) }
    dend_6 { pt3dadd( 20.6089, 19.576, 2.03915, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_6 { pt3dadd( 21.3823, 21.2839, 1.7652, 1.33 ) }
    dend_6 { pt3dadd( 21.9651, 22.4005, 1.61169, 1.33 ) }
    dend_6 { pt3dadd( 22.0617, 22.5649, 1.5861, 1.33 ) }
    dend_6 { pt3dadd( 23.0345, 24.1436, 1.32195, 1.18 ) }
    dend_6 { pt3dadd( 23.0841, 24.2173, 1.30984, 1.18 ) }
    dend_6 { pt3dadd( 23.9059, 25.3777, 1.13881, 1.03 ) }
    dend_6 { pt3dadd( 25.0403, 26.8428, 0.979655, 1.03 ) }
    dend_6 { pt3dadd( 25.8695, 27.7905, 0.827621, 1.33 ) }
    dend_6 { pt3dadd( 25.9241, 27.8429, 0.816244, 1.33 ) }
    dend_6 { pt3dadd( 26.6278, 28.4053, 0.602915, 0.96 ) }
    dend_6 { pt3dadd( 26.6889, 28.4452, 0.58141, 0.96 ) }
    dend_6 { pt3dadd( 27.3074, 28.7613, 0.288763, 0.66 ) }
    dend_6 { pt3dadd( 28.1445, 29.1179, -0.155452, 0.88 ) }
    dend_6 { pt3dadd( 29.1489, 29.5479, -0.752699, 1.18 ) }
    dend_6 { pt3dadd( 30.4663, 30.1503, -1.57299, 1.18 ) }
    dend_6 { pt3dadd( 31.6572, 30.7521, -2.36574, 0.96 ) }
    dend_6 { pt3dadd( 33.2136, 31.6062, -3.44107, 0.88 ) }
    dend_6 { pt3dadd( 33.9739, 32.0709, -3.98355, 1.18 ) }
    dend_6 { pt3dadd( 34.9854, 32.7596, -4.723, 1.18 ) }
    dend_6 { pt3dadd( 35.6611, 33.2905, -5.19284, 1.4 ) }
    dend_6 { pt3dadd( 36.7584, 34.2973, -5.82994, 1.4 ) }
    dend_6 { pt3dadd( 36.8151, 34.3595, -5.8593, 1.4 ) }
    dend_6 { pt3dadd( 37.4039, 35.0479, -6.10694, 1.69 ) }
    dend_6 { pt3dadd( 37.4602, 35.1156, -6.12262, 1.69 ) }
    dend_6 { pt3dadd( 38.3448, 36.1876, -6.23941, 1.33 ) }
    dend_6 { pt3dadd( 39.4968, 37.6809, -6.2787, 1.11 ) }
    dend_6 { pt3dadd( 39.5473, 37.7551, -6.27342, 1.11 ) }
    dend_6 { pt3dadd( 40.539, 39.3898, -6.08496, 0.96 ) }
    dend_6 { pt3dadd( 41.3995, 41.0745, -5.78441, 0.81 ) }
    dend_6 { pt3dadd( 41.6144, 41.6884, -5.64833, 0.59 ) }
    dend_6 { pt3dadd( 41.7155, 42.5218, -5.40899, 0.37 ) }
    dend_6 { pt3dadd( 41.6658, 43.4156, -5.10547, 0.37 ) }
    dend_6 { pt3dadd( 41.6237, 43.6741, -4.99466, 0.37 ) }
    dend_6 { pt3dadd( 41.4603, 44.2336, -4.71106, 1.4 ) }
    dend_6 { pt3dadd( 40.9334, 45.7347, -3.98673, 1.4 ) }
    dend_6 { pt3dadd( 40.5657, 46.7468, -3.44913, 1.4 ) }
    dend_6 { pt3dadd( 40.5252, 46.8609, -3.38488, 1.4 ) }
    dend_6 { pt3dadd( 40.0178, 48.491, -2.43716, 0.74 ) }
    dend_6 { pt3dadd( 40.0011, 48.5681, -2.3931, 0.74 ) }
    dend_6 { pt3dadd( 39.8931, 49.5836, -1.81891, 0.59 ) }
    dend_6 { pt3dadd( 39.9026, 49.7552, -1.72912, 0.59 ) }
    dend_6 { pt3dadd( 40.0499, 50.531, -1.44183, 0.59 ) }
    dend_6 { pt3dadd( 40.0915, 50.7163, -1.40257, 0.59 ) }
    dend_6 { pt3dadd( 40.2956, 52.1048, -1.26675, 0.59 ) }
    dend_6 { pt3dadd( 40.3029, 52.2845, -1.24554, 0.59 ) }
    dend_6 { pt3dadd( 40.2875, 53.1306, -1.12994, 1.18 ) }
    dend_6 { pt3dadd( 40.284, 53.2328, -1.11376, 1.18 ) }
    dend_6 { pt3dadd( 40.2224, 54.5325, -0.891996, 1.55 ) }
    dend_6 { pt3dadd( 40.1318, 56.4905, -0.540125, 1.55 ) }
    dend_6 { pt3dadd( 40.0632, 57.7502, -0.29928, 0.81 ) }
    dend_6 { pt3dadd( 40.0222, 59.142, -4.81512E-4, 0.66 ) }
    dend_6 { pt3dadd( 40.0079, 61.1351, 0.479028, 0.66 ) }
    dend_6 { pt3dadd( 40.0142, 61.3108, 0.522814, 0.66 ) }
    dend_6 { pt3dadd( 40.1036, 62.4621, 0.824288, 0.66 ) }
    dend_6 { pt3dadd( 40.1293, 62.6477, 0.874756, 0.66 ) }
    dend_6 { pt3dadd( 40.2689, 63.5885, 1.14732, 0.66 ) }
    dend_6 { pt3dadd( 40.2811, 63.6725, 1.1787, 0.66 ) }
    dend_6 { pt3dadd( 40.4335, 64.8702, 1.68773, 1.47 ) }
    dend_6 { pt3dadd( 40.6394, 66.5497, 2.40704, 1.47 ) }
    dend_6 { pt3dadd( 40.6546, 66.6844, 2.46225, 1.47 ) }
    dend_6 { pt3dadd( 40.7821, 67.8272, 2.90457, 1.47 ) }
    dend_6 { pt3dadd( 40.954, 69.4287, 3.46903, 0.66 ) }
    dend_6 { pt3dadd( 41.1761, 71.5741, 4.16566, 0.52 ) }
    dend_6 { pt3dadd( 41.3085, 72.8571, 4.55313, 0.52 ) }
    dend_6 { pt3dadd( 41.4052, 73.7589, 4.76704, 1.4 ) }
    dend_6 { pt3dadd( 41.4122, 73.835, 4.78085, 1.33 ) }
    dend_6 { pt3dadd( 41.5035, 74.9766, 4.92562, 1.55 ) }
    dend_6 { pt3dadd( 41.6248, 76.8554, 5.09961, 1.55 ) }
    dend_6 { pt3dadd( 41.6304, 76.9453, 5.10906, 1.55 ) }
    dend_6 { pt3dadd( 41.7335, 79.1244, 5.40059, 0.74 ) }
    dend_6 { pt3dadd( 41.78, 80.7348, 5.63254, 0.52 ) }
    dend_6 { pt3dadd( 41.7883, 82.1424, 5.8467, 0.52 ) }
    dend_6 { pt3dadd( 41.7815, 83.0372, 5.98747, 0.81 ) }
    dend_6 { pt3dadd( 41.7656, 83.8024, 6.11087, 1.25 ) }
    dend_6 { pt3dadd( 41.7605, 85.1471, 6.33392, 1.47 ) }
    dend_6 { pt3dadd( 41.7758, 86.5548, 6.58614, 0.96 ) }
    dend_6 { pt3dadd( 41.8544, 88.2338, 6.82882, 0.52 ) }
    dend_6 { pt3dadd( 41.9629, 89.2121, 6.9258, 0.52 ) }
    dend_6 { pt3dadd( 41.982, 89.3136, 6.9305, 0.52 ) }
    dend_6 { pt3dadd( 42.309, 90.3733, 6.90092, 0.52 ) }
    dend_6 { pt3dadd( 42.4166, 90.623, 6.87734, 0.52 ) }
    dend_6 { pt3dadd( 42.6998, 91.1811, 6.84048, 0.81 ) }
    dend_6 { pt3dadd( 43.0243, 91.7606, 6.77667, 0.81 ) }
    dend_6 { pt3dadd( 43.0605, 91.8281, 6.76882, 0.81 ) }
    dend_6 { pt3dadd( 43.8689, 93.4992, 6.59146, 0.37 ) }
    dend_6 { pt3dadd( 44.0736, 94.0254, 6.54676, 1.25 ) }
    dend_6 { pt3dadd( 44.796, 96.058, 6.41012, 2.21 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 87/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -35.2756, 17.6513, -33.8511, 0.07 ) }
    dend_2 { pt3dadd( -34.7792, 17.3684, -39.9117, 0.07 ) }
    dend_2 { pt3dadd( -34.7701, 17.3609, -40.0288, 0.44 ) }
    dend_2 { pt3dadd( -34.7605, 17.348, -40.194, 0.44 ) }
    dend_2 { pt3dadd( -34.7798, 17.3019, -41.0245, 0.44 ) }
    dend_2 { pt3dadd( -34.7858, 17.2991, -41.1017, 0.44 ) }
    dend_2 { pt3dadd( -34.8761, 17.309, -41.6777, 0.37 ) }
    dend_2 { pt3dadd( -34.9293, 17.3343, -41.7282, 0.37 ) }
    dend_2 { pt3dadd( -35.3958, 17.599, -42.2272, 0.37 ) }
    dend_2 { pt3dadd( -36.6063, 18.3511, -43.5609, 0.37 ) }
    dend_2 { pt3dadd( -36.6609, 18.3895, -43.6196, 0.37 ) }
    dend_2 { pt3dadd( -37.3174, 18.8975, -44.3361, 0.37 ) }
    dend_2 { pt3dadd( -37.418, 18.9941, -44.5155, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_2 { pt3dadd( -38.1004, 19.8129, -46.0707, 0.37 ) }
    dend_2 { pt3dadd( -38.1246, 19.8498, -46.1349, 0.37 ) }
    dend_2 { pt3dadd( -38.1939, 20.041, -46.7388, 0.37 ) }
    dend_2 { pt3dadd( -38.2022, 20.0705, -46.8525, 0.37 ) }
    dend_2 { pt3dadd( -38.4568, 21.0561, -51.2034, 0.37 ) }
    dend_2 { pt3dadd( -38.5163, 21.2547, -52.1596, 0.37 ) }
    dend_2 { pt3dadd( -38.6828, 21.7636, -54.8544, 0.37 ) }
    dend_2 { pt3dadd( -39.4662, 23.7812, -66.3495, 0.37 ) }
    dend_2 { pt3dadd( -39.4907, 23.8339, -66.6889, 0.37 ) }
    dend_2 { pt3dadd( -39.541, 23.9128, -67.2568, 0.37 ) }
    dend_2 { pt3dadd( -39.6125, 23.9787, -67.896, 0.37 ) }
    dend_2 { pt3dadd( -39.6331, 23.9914, -68.0602, 0.37 ) }
    dend_2 { pt3dadd( -39.8028, 24.0811, -69.1625, 0.37 ) }
    dend_2 { pt3dadd( -39.8874, 24.1674, -69.2778, 0.37 ) }
    dend_2 { pt3dadd( -40.119, 24.4706, -69.8571, 0.37 ) }
    dend_2 { pt3dadd( -40.1545, 24.5188, -69.9675, 0.37 ) }
    dend_2 { pt3dadd( -40.5942, 25.1266, -71.4522, 0.37 ) }
    dend_2 { pt3dadd( -40.8067, 25.424, -72.2525, 0.37 ) }
    dend_2 { pt3dadd( -41.5015, 26.413, -75.0702, 0.37 ) }
    dend_2 { pt3dadd( -42.2959, 27.657, -78.4367, 0.37 ) }
    dend_2 { pt3dadd( -42.8366, 28.6396, -81.1008, 0.37 ) }
    dend_2 { pt3dadd( -42.8501, 28.6661, -81.1726, 0.37 ) }
    dend_2 { pt3dadd( -43.3472, 29.7324, -84.0722, 0.37 ) }
    dend_2 { pt3dadd( -43.3596, 29.762, -84.1549, 0.37 ) }
    dend_2 { pt3dadd( -43.5667, 30.3178, -85.6637, 0.37 ) }
    dend_2 { pt3dadd( -44.2959, 32.0777, -90.9208, 0.37 ) }
    dend_2 { pt3dadd( -44.3094, 32.098, -90.9944, 0.37 ) }
    dend_2 { pt3dadd( -45.0551, 32.5179, -93.614, 0.37 ) }
    dend_2 { pt3dadd( -45.7266, 32.6362, -95.7886, 0.37 ) }
    dend_2 { pt3dadd( -45.7768, 32.6368, -95.9468, 0.37 ) }
    dend_2 { pt3dadd( -46.8284, 32.5555, -99.0585, 0.37 ) }
    dend_2 { pt3dadd( -47.6729, 32.4938, -101.411, 0.37 ) }
    dend_2 { pt3dadd( -49.3356, 32.4317, -106.002, 0.37 ) }
    dend_2 { pt3dadd( -52.3369, 32.5732, -113.983, 0.37 ) }
    dend_2 { pt3dadd( -52.3609, 32.5779, -114.045, 0.37 ) }
    dend_2 { pt3dadd( -53.3292, 32.9036, -116.514, 0.37 ) }
    dend_2 { pt3dadd( -54.2118, 33.4135, -118.693, 0.37 ) }
    dend_2 { pt3dadd( -54.3278, 33.5113, -118.976, 0.37 ) }
    dend_2 { pt3dadd( -55.5703, 34.8921, -121.657, 0.37 ) }
    dend_2 { pt3dadd( -57.029, 36.4275, -123.883, 0.37 ) }
    dend_2 { pt3dadd( -57.0786, 36.4807, -123.955, 0.37 ) }
    dend_2 { pt3dadd( -58.4546, 37.9658, -125.846, 0.37 ) }
    dend_2 { pt3dadd( -58.4887, 38.0027, -125.891, 0.37 ) }
    dend_2 { pt3dadd( -59.3808, 38.9958, -127.024, 0.37 ) }
    dend_2 { pt3dadd( -59.4157, 39.035, -127.066, 0.37 ) }
    dend_2 { pt3dadd( -61.7529, 41.6778, -129.64, 0.37 ) }
    dend_2 { pt3dadd( -61.8565, 41.7903, -129.744, 0.37 ) }
    dend_2 { pt3dadd( -62.1172, 42.0567, -129.974, 1.03 ) }
    dend_2 { pt3dadd( -62.6302, 42.551, -130.349, 1.03 ) }
    dend_2 { pt3dadd( -63.0226, 42.9047, -130.577, 0.59 ) }
    dend_2 { pt3dadd( -63.2036, 43.0646, -130.668, 0.59 ) }
    dend_2 { pt3dadd( -63.9039, 43.6961, -131.125, 0.52 ) }
    dend_2 { pt3dadd( -63.9589, 43.7489, -131.171, 0.52 ) }
    dend_2 { pt3dadd( -65.2944, 45.1246, -132.408, 0.52 ) }
    dend_2 { pt3dadd( -65.3316, 45.1658, -132.446, 0.52 ) }
    dend_2 { pt3dadd( -66.201, 46.2171, -133.242, 0.52 ) }
    dend_2 { pt3dadd( -68.1536, 48.7089, -134.921, 0.52 ) }
    dend_2 { pt3dadd( -68.2116, 48.785, -134.96, 0.52 ) }
    dend_2 { pt3dadd( -69.2633, 50.1944, -135.463, 0.52 ) }
    dend_2 { pt3dadd( -69.332, 50.2887, -135.489, 0.52 ) }
    dend_2 { pt3dadd( -71.2323, 52.891, -135.972, 0.52 ) }
    dend_2 { pt3dadd( -71.2789, 52.9545, -135.973, 0.52 ) }
    dend_2 { pt3dadd( -72.998, 55.2892, -135.56, 0.52 ) }
    dend_2 { pt3dadd( -73.778, 56.3404, -135.353, 0.52 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 64/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -35.2756, 17.6513, -33.8511, 1.18 ) }
    dend_1 { pt3dadd( -35.6579, 17.5215, -33.9353, 1.18 ) }
    dend_1 { pt3dadd( -36.9931, 17.0537, -34.1771, 0.59 ) }
    dend_1 { pt3dadd( -38.7413, 16.4265, -34.4673, 0.52 ) }
    dend_1 { pt3dadd( -40.0742, 15.9281, -34.701, 0.52 ) }
    dend_1 { pt3dadd( -41.86, 15.2458, -35.0269, 0.52 ) }
    dend_1 { pt3dadd( -41.9468, 15.2104, -35.0424, 0.52 ) }
    dend_1 { pt3dadd( -43.6254, 14.4678, -35.291, 0.52 ) }
    dend_1 { pt3dadd( -43.6937, 14.433, -35.2973, 0.52 ) }
    dend_1 { pt3dadd( -44.7016, 13.8885, -35.4013, 0.52 ) }
    dend_1 { pt3dadd( -44.7518, 13.8606, -35.4071, 0.52 ) }
    dend_1 { pt3dadd( -45.9465, 13.0982, -35.5797, 0.37 ) }
    dend_1 { pt3dadd( -46.0023, 13.0612, -35.5876, 0.37 ) }
    dend_1 { pt3dadd( -47.7035, 11.7987, -35.8057, 0.29 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 78/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 41.7257, -2.0614, 2.35483, 0.461685 ) }
    axon_1 { pt3dadd( 56.7146, -2.63935, 2.35483, 0.461685 ) }
    axon_1 { pt3dadd( 71.7034, -3.2173, 2.35483, 0.461685 ) }
    // Section: dend_148, id: dend_148, parent: dend_139 (entry count 81/100)
    dend_148 { pt3dclear() }
    dend_148 { pt3dadd( -11.6514, -18.3021, -9.56633, 0.66 ) }
    dend_148 { pt3dadd( -12.2498, -18.9673, -9.13033, 0.66 ) }
    dend_148 { pt3dadd( -12.3205, -19.0599, -9.10757, 0.44 ) }
    dend_148 { pt3dadd( -12.3535, -19.1062, -9.09911, 0.88 ) }
    dend_148 { pt3dadd( -12.6026, -19.481, -9.03662, 0.88 ) }
    dend_148 { pt3dadd( -12.6339, -19.5286, -9.0289, 0.88 ) }
    dend_148 { pt3dadd( -13.0027, -20.1349, -8.94326, 0.88 ) }
    dend_148 { pt3dadd( -13.2576, -20.612, -9.00756, 0.81 ) }
    dend_148 { pt3dadd( -13.3046, -20.7067, -9.0296, 0.74 ) }
    dend_148 { pt3dadd( -13.701, -21.5228, -9.25491, 0.74 ) }
    dend_148 { pt3dadd( -13.7213, -21.567, -9.2679, 0.74 ) }
    dend_148 { pt3dadd( -14.1443, -22.5065, -9.55562, 0.74 ) }
    dend_148 { pt3dadd( -14.8421, -23.9613, -10.1511, 1.11 ) }
    dend_148 { pt3dadd( -15.1681, -24.5256, -10.4227, 1.11 ) }
    dend_148 { pt3dadd( -15.6642, -25.2256, -10.8907, 0.74 ) }
    dend_148 { pt3dadd( -16.1293, -25.7853, -11.3676, 0.74 ) }
    dend_148 { pt3dadd( -16.154, -25.81, -11.3922, 0.74 ) }
    dend_148 { pt3dadd( -17.2875, -26.7393, -12.56, 0.74 ) }
    dend_148 { pt3dadd( -17.9825, -27.1799, -13.2142, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_148 { pt3dadd( -19.2037, -27.7429, -14.3547, 0.96 ) }
    dend_148 { pt3dadd( -19.244, -27.7567, -14.392, 0.96 ) }
    dend_148 { pt3dadd( -19.8981, -27.9153, -14.9315, 0.81 ) }
    dend_148 { pt3dadd( -20.6082, -28.0421, -15.4597, 1.25 ) }
    dend_148 { pt3dadd( -21.394, -28.1348, -15.9782, 1.25 ) }
    dend_148 { pt3dadd( -22.6213, -28.2704, -16.7955, 1.25 ) }
    dend_148 { pt3dadd( -22.6631, -28.2747, -16.8216, 1.25 ) }
    dend_148 { pt3dadd( -24.2298, -28.4283, -17.8274, 1.25 ) }
    dend_148 { pt3dadd( -25.2354, -28.5445, -18.4831, 1.25 ) }
    dend_148 { pt3dadd( -25.2768, -28.5505, -18.5095, 1.25 ) }
    dend_148 { pt3dadd( -26.3715, -28.7587, -19.2509, 1.11 ) }
    dend_148 { pt3dadd( -27.1986, -28.9494, -20.134, 0.88 ) }
    dend_148 { pt3dadd( -27.241, -28.9608, -20.1885, 0.88 ) }
    dend_148 { pt3dadd( -27.8788, -29.1864, -21.241, 0.88 ) }
    dend_148 { pt3dadd( -28.4104, -29.4161, -22.2029, 0.88 ) }
    dend_148 { pt3dadd( -28.4384, -29.4308, -22.2599, 0.88 ) }
    dend_148 { pt3dadd( -30.451, -30.6574, -26.8519, 0.59 ) }
    dend_148 { pt3dadd( -30.814, -30.9164, -27.7767, 0.59 ) }
    dend_148 { pt3dadd( -31.43, -31.4465, -29.5644, 1.18 ) }
    dend_148 { pt3dadd( -31.6041, -31.6264, -30.1041, 1.18 ) }
    dend_148 { pt3dadd( -32.0742, -32.1888, -31.5859, 1.18 ) }
    dend_148 { pt3dadd( -32.0962, -32.2157, -31.6477, 1.18 ) }
    dend_148 { pt3dadd( -32.2532, -32.4086, -32.0109, 1.18 ) }
    dend_148 { pt3dadd( -33.6, -33.9676, -35.0817, 0.88 ) }
    dend_148 { pt3dadd( -34.2662, -34.6164, -36.3825, 0.74 ) }
    dend_148 { pt3dadd( -34.2852, -34.6317, -36.4173, 0.74 ) }
    dend_148 { pt3dadd( -34.9909, -35.0947, -37.5683, 0.74 ) }
    dend_148 { pt3dadd( -35.406, -35.3188, -38.2081, 0.74 ) }
    dend_148 { pt3dadd( -35.4615, -35.341, -38.287, 0.74 ) }
    dend_148 { pt3dadd( -35.9057, -35.4432, -38.793, 0.74 ) }
    dend_148 { pt3dadd( -36.869, -35.5925, -39.9283, 0.74 ) }
    dend_148 { pt3dadd( -36.9067, -35.5986, -39.97, 0.74 ) }
    dend_148 { pt3dadd( -37.9602, -35.782, -41.0813, 0.74 ) }
    dend_148 { pt3dadd( -37.9896, -35.7888, -41.1111, 0.74 ) }
    dend_148 { pt3dadd( -38.5556, -35.9443, -41.6578, 0.59 ) }
    dend_148 { pt3dadd( -38.5931, -35.9576, -41.6981, 0.59 ) }
    dend_148 { pt3dadd( -39.1716, -36.196, -42.3016, 0.59 ) }
    dend_148 { pt3dadd( -39.277, -36.2497, -42.4257, 0.59 ) }
    dend_148 { pt3dadd( -39.8357, -36.6467, -43.2069, 0.59 ) }
    dend_148 { pt3dadd( -39.856, -36.6655, -43.2393, 0.59 ) }
    dend_148 { pt3dadd( -40.548, -37.5012, -44.5617, 0.59 ) }
    dend_148 { pt3dadd( -40.57, -37.5314, -44.6047, 0.59 ) }
    dend_148 { pt3dadd( -40.7285, -37.8193, -44.9943, 0.59 ) }
    dend_148 { pt3dadd( -40.8526, -38.0773, -45.3244, 0.44 ) }
    dend_148 { pt3dadd( -40.9615, -38.4435, -45.7296, 0.29 ) }
    dend_148 { pt3dadd( -41.0122, -38.6016, -45.8658, 0.29 ) }
    dend_148 { pt3dadd( -41.1554, -38.9598, -45.916, 0.29 ) }
    // Section: dend_140, id: dend_140, parent: dend_139 (entry count 47/100)
    dend_140 { pt3dclear() }
    dend_140 { pt3dadd( -11.6514, -18.3021, -9.56633, 1.55 ) }
    dend_140 { pt3dadd( -11.6675, -18.4, -9.53994, 1.55 ) }
    dend_140 { pt3dadd( -11.6756, -18.4493, -9.52786, 1.55 ) }
    dend_140 { pt3dadd( -11.8383, -19.4365, -9.28579, 1.55 ) }
    dend_140 { pt3dadd( -12.1325, -21.2213, -8.84813, 1.33 ) }
    dend_140 { pt3dadd( -12.2803, -22.1178, -8.62831, 1.25 ) }
    dend_140 { pt3dadd( -12.4452, -23.1188, -8.38285, 1.25 ) }
    dend_140 { pt3dadd( -12.4856, -23.3502, -8.32393, 0.07 ) }
    // Section: dend_137, id: dend_137, parent: dend_135 (entry count 55/100)
    dend_137 { pt3dclear() }
    dend_137 { pt3dadd( -23.4766, -67.5406, -14.866, 0.44 ) }
    dend_137 { pt3dadd( -26.4971, -69.7201, -23.6221, 0.44 ) }
    dend_137 { pt3dadd( -29.2776, -72.4384, -32.3138, 0.44 ) }
    dend_137 { pt3dadd( -31.3134, -73.4286, -41.5465, 0.44 ) }
    dend_137 { pt3dadd( -32.1658, -72.8809, -50.998, 0.44 ) }
    dend_137 { pt3dadd( -33.8506, -72.0116, -60.3141, 0.44 ) }
    dend_137 { pt3dadd( -36.5609, -70.3693, -69.2826, 0.44 ) }
    dend_137 { pt3dadd( -37.867, -68.169, -78.4507, 0.44 ) }
    dend_137 { pt3dadd( -38.7214, -64.6647, -87.2807, 0.44 ) }
    dend_137 { pt3dadd( -40.7821, -62.348, -96.2811, 0.44 ) }
    dend_137 { pt3dadd( -43.9565, -60.6261, -105.082, 0.44 ) }
    dend_137 { pt3dadd( -46.5664, -60.4722, -114.22, 0.44 ) }
    dend_137 { pt3dadd( -49.0881, -62.0205, -123.257, 0.44 ) }
    // Section: dend_136, id: dend_136, parent: dend_135 (entry count 68/100)
    dend_136 { pt3dclear() }
    dend_136 { pt3dadd( -23.4766, -67.5406, -14.866, 0.29 ) }
    dend_136 { pt3dadd( -30.9098, -69.5318, -22.7436, 0.44 ) }
    // Section: dend_134, id: dend_134, parent: dend_132 (entry count 70/100)
    dend_134 { pt3dclear() }
    dend_134 { pt3dadd( -1.56643, -186.157, 69.0751, 0.44 ) }
    dend_134 { pt3dadd( -1.58629, -195.046, 73.1948, 0.44 ) }
    dend_134 { pt3dadd( -2.28947, -204.492, 75.7951, 0.44 ) }
    dend_134 { pt3dadd( -3.25203, -213.24, 80.0882, 0.44 ) }
    dend_134 { pt3dadd( -2.84304, -221.69, 84.9912, 0.44 ) }
    // Section: dend_133, id: dend_133, parent: dend_132 (entry count 75/100)
    dend_133 { pt3dclear() }
    dend_133 { pt3dadd( -1.56643, -186.157, 69.0751, 0.29 ) }
    dend_133 { pt3dadd( -2.26135, -199.792, 74.184, 0.44 ) }
    dend_133 { pt3dadd( -1.36744, -214.005, 77.3638, 0.44 ) }
    dend_133 { pt3dadd( 0.608277, -228.074, 80.6375, 0.44 ) }
    dend_133 { pt3dadd( 4.93961, -241.16, 85.2189, 0.44 ) }
    // Section: dend_130, id: dend_130, parent: dend_128 (entry count 80/100)
    dend_130 { pt3dclear() }
    dend_130 { pt3dadd( 49.2395, 1.61986, 29.1153, 0.44 ) }
    dend_130 { pt3dadd( 57.12, 11.633, 25.5115, 0.44 ) }
    // Section: dend_129, id: dend_129, parent: dend_128 (entry count 82/100)
    dend_129 { pt3dclear() }
    dend_129 { pt3dadd( 49.2395, 1.61986, 29.1153, 0.29 ) }
    dend_129 { pt3dadd( 51.5132, 8.75779, 31.0571, 0.44 ) }
    // Section: dend_127, id: dend_127, parent: dend_121 (entry count 84/100)
    dend_127 { pt3dclear() }
    dend_127 { pt3dadd( 30.9362, -41.1836, 33.6048, 0.22 ) }
    dend_127 { pt3dadd( 30.7123, -42.2009, 33.5976, 0.22 ) }
    dend_127 { pt3dadd( 30.6922, -42.2594, 33.6037, 0.44 ) }
    dend_127 { pt3dadd( 30.6571, -42.3222, 33.6094, 0.44 ) }
    dend_127 { pt3dadd( 29.9047, -43.4444, 33.697, 0.44 ) }
    dend_127 { pt3dadd( 29.8634, -43.5034, 33.6944, 0.44 ) }
    dend_127 { pt3dadd( 29.0331, -44.9638, 33.5981, 0.44 ) }
    dend_127 { pt3dadd( 28.878, -45.2311, 33.583, 0.44 ) }
    dend_127 { pt3dadd( 28.3138, -46.1264, 33.5005, 0.44 ) }
    dend_127 { pt3dadd( 28.2739, -46.186, 33.4932, 0.44 ) }
    dend_127 { pt3dadd( 26.9018, -48.021, 33.2915, 0.44 ) }
    dend_127 { pt3dadd( 25.408, -49.8465, 33.0978, 0.44 ) }
    dend_127 { pt3dadd( 24.9409, -50.3521, 33.0335, 0.44 ) }
    dend_127 { pt3dadd( 24.1294, -51.1351, 32.9682, 0.44 ) }
    dend_127 { pt3dadd( 23.9943, -51.2446, 32.9659, 0.44 ) }
    dend_127 { pt3dadd( 22.7551, -51.9381, 33.0167, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_127 { pt3dadd( 21.9177, -52.081, 33.1033, 0.22 ) }
    dend_127 { pt3dadd( 21.0035, -52.0554, 33.1279, 0.22 ) }
    dend_127 { pt3dadd( 20.7653, -52.037, 33.1385, 0.22 ) }
    dend_127 { pt3dadd( 20.3969, -51.9855, 33.1535, 0.22 ) }
    dend_127 { pt3dadd( 20.29, -51.9665, 33.1481, 0.22 ) }
    dend_127 { pt3dadd( 19.3822, -51.7549, 32.8049, 0.22 ) }
    dend_127 { pt3dadd( 18.3143, -51.6369, 32.0665, 0.22 ) }
    dend_127 { pt3dadd( 10.9878, -58.7635, 31.2963, 0.22 ) }
    dend_127 { pt3dadd( 3.82534, -66.0795, 31.7827, 0.22 ) }
    dend_127 { pt3dadd( -3.43821, -73.1583, 33.1959, 0.22 ) }
    dend_127 { pt3dadd( -10.5143, -80.4595, 34.4691, 0.22 ) }
    dend_127 { pt3dadd( -19.2685, -85.6919, 34.8623, 0.22 ) }
    dend_127 { pt3dadd( -27.8346, -91.2388, 34.4622, 0.22 ) }
    dend_127 { pt3dadd( -36.5677, -96.5163, 34.1509, 0.22 ) }
    dend_127 { pt3dadd( -44.7647, -102.482, 32.829, 0.22 ) }
    dend_127 { pt3dadd( -53.2203, -107.153, 29.5266, 0.22 ) }
    dend_127 { pt3dadd( -62.2214, -111.048, 26.7332, 0.22 ) }
    dend_127 { pt3dadd( -71.411, -115.24, 25.3303, 0.22 ) }
    dend_127 { pt3dadd( -79.8591, -120.719, 23.6031, 0.22 ) }
    dend_127 { pt3dadd( -88.3557, -126.375, 23.2002, 0.22 ) }
    // Section: dend_122, id: dend_122, parent: dend_121 (entry count 20/100)
    dend_122 { pt3dclear() }
    dend_122 { pt3dadd( 30.9362, -41.1836, 33.6048, 0.74 ) }
    dend_122 { pt3dadd( 31.2809, -42.4019, 33.8717, 0.74 ) }
    dend_122 { pt3dadd( 31.7598, -43.9895, 34.1672, 0.74 ) }
    dend_122 { pt3dadd( 31.7772, -44.0351, 34.176, 0.74 ) }
    dend_122 { pt3dadd( 32.1565, -45.1172, 34.4108, 0.52 ) }
    dend_122 { pt3dadd( 32.5369, -46.4935, 34.7195, 0.52 ) }
    dend_122 { pt3dadd( 32.5519, -46.5481, 34.7317, 0.52 ) }
    dend_122 { pt3dadd( 32.8315, -47.8738, 35.0031, 0.52 ) }
    dend_122 { pt3dadd( 33.0288, -48.9645, 35.1846, 0.52 ) }
    dend_122 { pt3dadd( 33.2757, -50.1864, 35.4196, 0.44 ) }
    dend_122 { pt3dadd( 33.6919, -51.8213, 35.8513, 0.44 ) }
    // Section: dend_113, id: dend_113, parent: dend_111 (entry count 31/100)
    dend_113 { pt3dclear() }
    dend_113 { pt3dadd( 7.67287, 47.1608, 5.74059, 0.74 ) }
    dend_113 { pt3dadd( 7.78238, 47.8558, 5.62062, 0.74 ) }
    dend_113 { pt3dadd( 7.79831, 47.9649, 5.59234, 0.74 ) }
    dend_113 { pt3dadd( 7.89437, 49.0912, 5.25895, 0.74 ) }
    dend_113 { pt3dadd( 7.90017, 49.2602, 5.20559, 0.74 ) }
    dend_113 { pt3dadd( 7.83814, 50.6892, 4.72896, 0.74 ) }
    dend_113 { pt3dadd( 7.60858, 52.45, 4.18537, 0.74 ) }
    dend_113 { pt3dadd( 7.38776, 53.1908, 4.01083, 1.55 ) }
    dend_113 { pt3dadd( 6.96448, 54.1809, 3.83867, 1.55 ) }
    dend_113 { pt3dadd( 6.74351, 54.5707, 3.81189, 1.55 ) }
    dend_113 { pt3dadd( 6.1287, 55.4858, 3.83961, 1.11 ) }
    dend_113 { pt3dadd( 5.41653, 56.3881, 3.97829, 0.88 ) }
    dend_113 { pt3dadd( 4.19136, 57.8381, 4.44714, 0.66 ) }
    dend_113 { pt3dadd( 4.14071, 57.9004, 4.47357, 0.66 ) }
    dend_113 { pt3dadd( 3.59866, 58.6501, 4.8573, 0.66 ) }
    dend_113 { pt3dadd( 3.54906, 58.7399, 4.90349, 0.66 ) }
    dend_113 { pt3dadd( 3.38729, 59.2922, 5.15185, 0.66 ) }
    dend_113 { pt3dadd( 3.37805, 59.4348, 5.19509, 0.66 ) }
    dend_113 { pt3dadd( 3.41476, 60.3303, 5.51676, 0.66 ) }
    dend_113 { pt3dadd( 3.41839, 60.427, 5.55831, 0.66 ) }
    dend_113 { pt3dadd( 3.46593, 61.1264, 5.89229, 0.96 ) }
    dend_113 { pt3dadd( 3.54174, 61.976, 6.34107, 0.96 ) }
    dend_113 { pt3dadd( 3.55044, 62.0384, 6.38043, 0.96 ) }
    dend_113 { pt3dadd( 3.97667, 63.8943, 7.64772, 0.88 ) }
    dend_113 { pt3dadd( 4.0197, 64.031, 7.74849, 0.88 ) }
    dend_113 { pt3dadd( 4.16642, 64.3594, 8.00383, 0.88 ) }
    dend_113 { pt3dadd( 4.24845, 64.5022, 8.14407, 0.88 ) }
    dend_113 { pt3dadd( 4.716, 65.2438, 8.8986, 0.74 ) }
    dend_113 { pt3dadd( 5.06664, 65.8001, 9.41566, 0.74 ) }
    dend_113 { pt3dadd( 5.10024, 65.8508, 9.45751, 0.74 ) }
    dend_113 { pt3dadd( 5.4938, 66.5763, 10.0109, 0.74 ) }
    dend_113 { pt3dadd( 6.10356, 67.9999, 11.034, 0.59 ) }
    dend_113 { pt3dadd( 6.28425, 68.6449, 11.4225, 0.59 ) }
    dend_113 { pt3dadd( 6.32829, 69.1855, 11.6447, 0.66 ) }
    dend_113 { pt3dadd( 6.31862, 69.2663, 11.6703, 0.66 ) }
    dend_113 { pt3dadd( 6.14044, 69.9429, 11.8003, 0.66 ) }
    dend_113 { pt3dadd( 6.03098, 70.2311, 11.8247, 0.66 ) }
    dend_113 { pt3dadd( 5.70316, 71.0674, 11.8333, 0.66 ) }
    dend_113 { pt3dadd( 5.4184, 71.8551, 11.8656, 0.66 ) }
    dend_113 { pt3dadd( 5.08105, 73.0109, 11.995, 0.66 ) }
    dend_113 { pt3dadd( 4.87444, 74.0572, 12.2238, 0.66 ) }
    dend_113 { pt3dadd( 4.86493, 74.1383, 12.2487, 0.66 ) }
    dend_113 { pt3dadd( 4.80695, 75.1775, 12.6789, 0.66 ) }
    dend_113 { pt3dadd( 4.80323, 75.8462, 13.0601, 0.59 ) }
    dend_113 { pt3dadd( 4.83902, 76.9077, 13.7635, 0.52 ) }
    dend_113 { pt3dadd( 4.8883, 77.8617, 14.3982, 0.52 ) }
    dend_113 { pt3dadd( 4.88758, 77.9294, 14.4492, 0.52 ) }
    dend_113 { pt3dadd( 4.79595, 79.0064, 15.292, 0.52 ) }
    dend_113 { pt3dadd( 4.64108, 79.8783, 16.0012, 0.88 ) }
    dend_113 { pt3dadd( 4.53978, 80.2438, 16.313, 1.11 ) }
    dend_113 { pt3dadd( 4.24168, 81.0818, 16.9984, 1.11 ) }
    dend_113 { pt3dadd( 3.59044, 82.5949, 18.1614, 1.11 ) }
    dend_113 { pt3dadd( 3.56219, 82.6609, 18.2061, 1.11 ) }
    dend_113 { pt3dadd( 3.13734, 83.8034, 18.8207, 0.88 ) }
    dend_113 { pt3dadd( 2.82222, 84.905, 19.2896, 0.74 ) }
    dend_113 { pt3dadd( 2.65368, 85.6523, 19.5596, 0.74 ) }
    dend_113 { pt3dadd( 2.44402, 86.9313, 19.9048, 0.74 ) }
    dend_113 { pt3dadd( 2.28298, 88.3012, 20.1543, 0.66 ) }
    dend_113 { pt3dadd( 2.05193, 90.497, 20.4489, 0.66 ) }
    dend_113 { pt3dadd( 1.85997, 92.397, 20.584, 0.66 ) }
    dend_113 { pt3dadd( 1.80169, 93.1052, 20.5913, 0.88 ) }
    dend_113 { pt3dadd( 1.69705, 94.7423, 20.5465, 0.88 ) }
    dend_113 { pt3dadd( 1.69375, 94.817, 20.5404, 0.88 ) }
    dend_113 { pt3dadd( 1.62913, 95.7553, 20.4181, 0.66 ) }
    dend_113 { pt3dadd( 1.5615, 96.439, 20.2639, 0.66 ) }
    dend_113 { pt3dadd( 1.47864, 97.138, 20.067, 0.74 ) }
    dend_113 { pt3dadd( 1.44153, 97.7518, 19.893, 0.74 ) }
    dend_113 { pt3dadd( 1.449, 98.8863, 19.5747, 0.74 ) }
    dend_113 { pt3dadd( 1.45618, 98.9587, 19.5563, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_113 { pt3dadd( 1.70458, 100.233, 19.2753, 0.74 ) }
    dend_113 { pt3dadd( 1.72434, 100.315, 19.26, 0.74 ) }
    dend_113 { pt3dadd( 1.9103, 101.077, 19.1442, 0.74 ) }
    dend_113 { pt3dadd( 1.93244, 101.148, 19.1342, 0.74 ) }
    dend_113 { pt3dadd( 2.25089, 101.931, 19.0369, 0.74 ) }
    dend_113 { pt3dadd( 2.28999, 102.007, 19.0304, 0.74 ) }
    dend_113 { pt3dadd( 2.69528, 102.58, 19.019, 1.18 ) }
    dend_113 { pt3dadd( 2.76467, 102.669, 19.0208, 1.18 ) }
    dend_113 { pt3dadd( 3.29493, 103.239, 19.0713, 1.18 ) }
    dend_113 { pt3dadd( 3.41319, 103.354, 19.0851, 1.18 ) }
    dend_113 { pt3dadd( 4.1025, 103.981, 19.1759, 0.81 ) }
    dend_113 { pt3dadd( 4.76855, 104.564, 19.2671, 0.66 ) }
    dend_113 { pt3dadd( 4.84938, 104.63, 19.2747, 0.66 ) }
    dend_113 { pt3dadd( 6.19191, 105.713, 19.3614, 0.66 ) }
    dend_113 { pt3dadd( 6.65409, 106.107, 19.3756, 0.66 ) }
    dend_113 { pt3dadd( 7.92675, 107.232, 19.3787, 0.66 ) }
    dend_113 { pt3dadd( 7.9884, 107.29, 19.3729, 0.66 ) }
    dend_113 { pt3dadd( 9.10063, 108.456, 19.236, 0.66 ) }
    dend_113 { pt3dadd( 9.15601, 108.52, 19.2277, 0.66 ) }
    dend_113 { pt3dadd( 9.98757, 109.604, 19.0677, 0.66 ) }
    dend_113 { pt3dadd( 10.0242, 109.656, 19.0607, 0.66 ) }
    dend_113 { pt3dadd( 10.7689, 110.741, 18.9557, 0.66 ) }
    dend_113 { pt3dadd( 11.5904, 111.898, 18.9305, 0.66 ) }
    dend_113 { pt3dadd( 11.6339, 111.958, 18.9349, 0.66 ) }
    dend_113 { pt3dadd( 12.1677, 112.616, 19.0074, 0.66 ) }
    dend_113 { pt3dadd( 12.2762, 112.74, 19.0318, 0.66 ) }
    dend_113 { pt3dadd( 12.954, 113.513, 19.216, 0.88 ) }
    dend_113 { pt3dadd( 13.3756, 114.014, 19.3414, 0.88 ) }
    dend_113 { pt3dadd( 13.4136, 114.064, 19.3542, 0.88 ) }
    dend_113 { pt3dadd( 13.7739, 114.628, 19.5158, 0.96 ) }
    dend_113 { pt3dadd( 14.3909, 115.81, 19.8672, 0.66 ) }
    dend_113 { pt3dadd( 14.4219, 115.875, 19.8872, 0.66 ) }
    dend_113 { pt3dadd( 14.8865, 117.025, 20.2606, 0.52 ) }
    dend_113 { pt3dadd( 15.3532, 118.28, 20.6926, 0.96 ) }
    dend_113 { pt3dadd( 15.6507, 119.116, 20.9963, 1.25 ) }
    dend_113 { pt3dadd( 15.7517, 119.431, 21.1219, 1.25 ) }
    // Section: dend_112, id: dend_112, parent: dend_111 (entry count 36/100)
    dend_112 { pt3dclear() }
    dend_112 { pt3dadd( 7.67287, 47.1608, 5.74059, 0.59 ) }
    dend_112 { pt3dadd( 7.96417, 48.5397, 8.24249, 0.59 ) }
    dend_112 { pt3dadd( 8.09738, 49.0471, 9.11924, 0.59 ) }
    dend_112 { pt3dadd( 8.14993, 49.1974, 9.37277, 0.59 ) }
    dend_112 { pt3dadd( 8.3069, 49.6208, 10.0871, 0.59 ) }
    dend_112 { pt3dadd( 8.92018, 50.9355, 12.4123, 0.37 ) }
    dend_112 { pt3dadd( 9.25948, 51.6936, 13.8056, 0.37 ) }
    dend_112 { pt3dadd( 9.30397, 51.7781, 13.9489, 0.37 ) }
    dend_112 { pt3dadd( 9.46807, 52.1204, 14.5358, 0.37 ) }
    dend_112 { pt3dadd( 9.81092, 52.7892, 15.6477, 0.29 ) }
    dend_112 { pt3dadd( 10.1052, 53.3149, 16.4977, 0.29 ) }
    dend_112 { pt3dadd( 10.8749, 54.3655, 18.1567, 0.29 ) }
    dend_112 { pt3dadd( 11.1977, 54.8075, 18.8659, 0.29 ) }
    dend_112 { pt3dadd( 11.2286, 54.851, 18.9406, 0.29 ) }
    dend_112 { pt3dadd( 11.4707, 55.4417, 20.0537, 0.29 ) }
    dend_112 { pt3dadd( 11.478, 55.4772, 20.1253, 0.29 ) }
    dend_112 { pt3dadd( 11.5027, 56.2327, 21.6451, 0.29 ) }
    dend_112 { pt3dadd( 11.5003, 56.2721, 21.7279, 0.29 ) }
    dend_112 { pt3dadd( 11.3971, 56.7783, 22.7876, 0.29 ) }
    dend_112 { pt3dadd( 11.0119, 58.0585, 25.2393, 0.29 ) }
    dend_112 { pt3dadd( 10.9983, 58.0912, 25.2983, 0.29 ) }
    dend_112 { pt3dadd( 10.7966, 58.6074, 26.0165, 0.29 ) }
    dend_112 { pt3dadd( 10.4304, 59.6065, 26.9595, 0.29 ) }
    dend_112 { pt3dadd( 10.3448, 59.8406, 27.1524, 0.29 ) }
    dend_112 { pt3dadd( 10.113, 60.4996, 27.6218, 0.29 ) }
    dend_112 { pt3dadd( 10.0613, 60.6506, 27.7276, 0.29 ) }
    dend_112 { pt3dadd( 9.74223, 61.4914, 28.3571, 0.29 ) }
    dend_112 { pt3dadd( 9.23314, 62.82, 29.424, 0.29 ) }
    dend_112 { pt3dadd( 8.56624, 64.7684, 31.1118, 0.29 ) }
    dend_112 { pt3dadd( 8.54911, 64.8257, 31.166, 0.29 ) }
    dend_112 { pt3dadd( 8.27957, 65.9932, 32.4718, 0.29 ) }
    dend_112 { pt3dadd( 8.26953, 66.0507, 32.5429, 0.29 ) }
    dend_112 { pt3dadd( 8.23998, 66.5705, 33.2806, 0.29 ) }
    dend_112 { pt3dadd( 8.35988, 67.3097, 34.4303, 0.29 ) }
    dend_112 { pt3dadd( 8.38168, 67.3655, 34.5365, 0.29 ) }
    dend_112 { pt3dadd( 8.80694, 68.252, 36.6428, 0.29 ) }
    dend_112 { pt3dadd( 8.81966, 68.277, 36.7612, 0.29 ) }
    dend_112 { pt3dadd( 8.80331, 68.3945, 37.5996, 0.29 ) }
    dend_112 { pt3dadd( 8.75234, 68.4267, 37.947, 0.29 ) }
    dend_112 { pt3dadd( 8.37931, 68.493, 39.4882, 0.29 ) }
    dend_112 { pt3dadd( 8.35532, 68.4983, 39.5644, 0.29 ) }
    dend_112 { pt3dadd( 7.44184, 68.6683, 41.6677, 0.29 ) }
    dend_112 { pt3dadd( 6.99952, 68.8266, 42.691, 0.29 ) }
    dend_112 { pt3dadd( 6.72592, 68.98, 43.276, 0.29 ) }
    dend_112 { pt3dadd( 6.67444, 69.0932, 43.4954, 0.29 ) }
    dend_112 { pt3dadd( 7.14457, 69.796, 44.0709, 0.29 ) }
    dend_112 { pt3dadd( 7.57971, 70.2476, 44.3394, 0.29 ) }
    dend_112 { pt3dadd( 7.82105, 70.465, 44.4604, 0.29 ) }
    dend_112 { pt3dadd( 7.87653, 70.5139, 44.4929, 0.29 ) }
    dend_112 { pt3dadd( 8.30329, 71.0135, 44.7816, 0.29 ) }
    dend_112 { pt3dadd( 8.3217, 71.0919, 44.8278, 0.29 ) }
    dend_112 { pt3dadd( 8.29091, 71.6798, 45.1645, 0.29 ) }
    dend_112 { pt3dadd( 8.19479, 72.4231, 45.5521, 0.29 ) }
    dend_112 { pt3dadd( 8.08106, 73.1619, 45.9301, 0.29 ) }
    dend_112 { pt3dadd( 7.93325, 74.0419, 46.4032, 0.29 ) }
    dend_112 { pt3dadd( 7.54803, 76.0082, 47.5038, 0.29 ) }
    dend_112 { pt3dadd( 7.5261, 76.1432, 47.6104, 0.29 ) }
    dend_112 { pt3dadd( 7.4903, 76.5722, 48.1453, 0.29 ) }
    dend_112 { pt3dadd( 7.53466, 76.6402, 48.4083, 0.29 ) }
    dend_112 { pt3dadd( 7.7446, 76.5694, 49.0884, 0.59 ) }
    dend_112 { pt3dadd( 7.7793, 76.5396, 49.1681, 0.59 ) }
    dend_112 { pt3dadd( 8.73523, 75.577, 50.8857, 0.59 ) }
    dend_112 { pt3dadd( 8.78908, 75.5243, 50.9713, 0.59 ) }
    dend_112 { pt3dadd( 9.32803, 75.0358, 51.7052, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_112 { pt3dadd( 9.50546, 74.8796, 51.9413, 0.81 ) }
    dend_112 { pt3dadd( 10.1606, 74.3429, 52.7614, 1.11 ) }
    dend_112 { pt3dadd( 10.2282, 74.29, 52.8364, 1.11 ) }
    dend_112 { pt3dadd( 11.2775, 73.5692, 53.6763, 1.11 ) }
    dend_112 { pt3dadd( 11.9617, 73.1244, 54.2008, 0.96 ) }
    dend_112 { pt3dadd( 10.7948, 79.9596, 63.3732, 0.96 ) }
    dend_112 { pt3dadd( 11.9911, 88.2527, 71.3163, 0.96 ) }
    dend_112 { pt3dadd( 13.0695, 96.2685, 79.5423, 0.96 ) }
    dend_112 { pt3dadd( 16.2942, 105.483, 85.7882, 0.96 ) }
    dend_112 { pt3dadd( 19.5426, 115.978, 89.6705, 0.96 ) }
    dend_112 { pt3dadd( 24.6888, 125.789, 93.2243, 0.96 ) }
    dend_112 { pt3dadd( 29.8111, 134.054, 99.4845, 0.96 ) }
    dend_112 { pt3dadd( 34.4405, 143.098, 105.068, 0.96 ) }
    // Section: dend_104, id: dend_104, parent: dend_98 (entry count 13/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( 43.2654, 11.6636, 13.4195, 0.66 ) }
    dend_104 { pt3dadd( 44.7099, 11.4127, 13.0436, 0.66 ) }
    dend_104 { pt3dadd( 44.8184, 11.3924, 13.0175, 0.66 ) }
    dend_104 { pt3dadd( 45.9107, 11.1827, 12.7554, 0.66 ) }
    dend_104 { pt3dadd( 47.311, 10.9181, 12.4208, 0.66 ) }
    dend_104 { pt3dadd( 47.429, 10.8992, 12.3974, 0.66 ) }
    dend_104 { pt3dadd( 49.8731, 10.5432, 11.9602, 0.66 ) }
    dend_104 { pt3dadd( 50.5401, 10.4744, 11.8253, 0.96 ) }
    dend_104 { pt3dadd( 52.3564, 10.353, 11.4986, 0.81 ) }
    dend_104 { pt3dadd( 52.4415, 10.3536, 11.486, 0.81 ) }
    dend_104 { pt3dadd( 54.4788, 10.5111, 11.2386, 0.44 ) }
    dend_104 { pt3dadd( 54.5634, 10.5259, 11.2318, 0.44 ) }
    dend_104 { pt3dadd( 55.9158, 10.9462, 11.2002, 0.44 ) }
    dend_104 { pt3dadd( 55.9967, 10.9765, 11.2016, 0.44 ) }
    dend_104 { pt3dadd( 57.2839, 11.4333, 11.2492, 0.44 ) }
    dend_104 { pt3dadd( 57.5369, 11.5066, 11.2556, 0.44 ) }
    dend_104 { pt3dadd( 59.2151, 11.7367, 11.3489, 0.44 ) }
    dend_104 { pt3dadd( 59.3008, 11.7357, 11.3568, 0.44 ) }
    dend_104 { pt3dadd( 60.0709, 11.5608, 11.4465, 0.44 ) }
    dend_104 { pt3dadd( 61.762, 10.9318, 11.6308, 0.44 ) }
    dend_104 { pt3dadd( 61.8385, 10.8919, 11.637, 0.44 ) }
    dend_104 { pt3dadd( 63.3652, 9.97536, 11.6925, 0.52 ) }
    dend_104 { pt3dadd( 63.4353, 9.92423, 11.6923, 0.52 ) }
    dend_104 { pt3dadd( 64.1587, 9.3919, 11.6816, 0.88 ) }
    dend_104 { pt3dadd( 64.3779, 9.23024, 11.6708, 0.88 ) }
    dend_104 { pt3dadd( 65.1282, 8.70522, 11.6977, 0.88 ) }
    dend_104 { pt3dadd( 65.2006, 8.65773, 11.6942, 0.88 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 40/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 43.2654, 11.6636, 13.4195, 0.44 ) }
    dend_99 { pt3dadd( 43.3129, 11.6122, 13.3437, 0.44 ) }
    dend_99 { pt3dadd( 43.9327, 10.9412, 12.3548, 0.15 ) }
    dend_99 { pt3dadd( 44.8617, 9.93552, 10.8727, 0.15 ) }
    dend_99 { pt3dadd( 45.0162, 9.76819, 10.6261, 0.15 ) }
    dend_99 { pt3dadd( 45.045, 9.73709, 10.5803, 0.15 ) }
    dend_99 { pt3dadd( 50.0933, 5.11593, 4.88143, 0.15 ) }
    dend_99 { pt3dadd( 54.7555, -0.0846875, -0.67034, 0.15 ) }
    // Section: dend_74, id: dend_74, parent: dend_52 (entry count 48/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -24.2457, -2.22358, -0.760471, 1.11 ) }
    dend_74 { pt3dadd( -25.8767, -2.00892, 0.163703, 1.11 ) }
    dend_74 { pt3dadd( -27.1172, -1.88931, 0.928384, 1.11 ) }
    dend_74 { pt3dadd( -28.9957, -1.70817, 2.08632, 1.11 ) }
    dend_74 { pt3dadd( -29.7375, -1.63664, 2.54358, 0.88 ) }
    dend_74 { pt3dadd( -29.9267, -1.6184, 2.66018, 1.11 ) }
    dend_74 { pt3dadd( -29.9764, -1.61361, 2.69083, 1.11 ) }
    dend_74 { pt3dadd( -31.2288, -1.54806, 3.38308, 1.47 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 56/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -24.2457, -2.22358, -0.760471, 1.4 ) }
    dend_53 { pt3dadd( -26.5674, -6.55319, -2.0446, 1.4 ) }
    dend_53 { pt3dadd( -28.9504, -9.85327, -2.04567, 1.25 ) }
    dend_53 { pt3dadd( -29.6645, -10.7138, -1.93832, 1.03 ) }
    dend_53 { pt3dadd( -30.3165, -11.3786, -1.77293, 1.03 ) }
    dend_53 { pt3dadd( -31.0269, -12.1029, -1.59273, 1.03 ) }
    dend_53 { pt3dadd( -31.9404, -13.0343, -1.36099, 0.96 ) }
    dend_53 { pt3dadd( -33.4067, -14.5498, -1.15967, 0.96 ) }
    dend_53 { pt3dadd( -34.5179, -15.5168, -0.759317, 0.96 ) }
    dend_53 { pt3dadd( -35.9089, -16.6405, -0.250884, 1.11 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 66/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -36.0056, 21.0272, 24.4095, 0.44 ) }
    dend_51 { pt3dadd( -42.3266, 27.3447, 30.3461, 0.44 ) }
    dend_51 { pt3dadd( -47.72, 32.0367, 38.294, 0.44 ) }
    dend_51 { pt3dadd( -54.0806, 34.4692, 46.4996, 0.44 ) }
    dend_51 { pt3dadd( -60.6237, 37.7851, 54.2503, 0.44 ) }
    dend_51 { pt3dadd( -66.4288, 39.9433, 62.9283, 0.44 ) }
    dend_51 { pt3dadd( -71.5453, 42.4214, 71.9493, 0.44 ) }
    dend_51 { pt3dadd( -77.1293, 43.2105, 80.9939, 0.44 ) }
    dend_51 { pt3dadd( -82.0241, 45.1887, 90.255, 0.44 ) }
    dend_51 { pt3dadd( -87.0404, 49.0904, 98.8348, 0.44 ) }
    dend_51 { pt3dadd( -91.3838, 53.548, 107.52, 0.44 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 77/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -36.0056, 21.0272, 24.4095, 0.29 ) }
    dend_50 { pt3dadd( -41.9394, 25.9261, 31.1537, 0.44 ) }
    dend_50 { pt3dadd( -46.6289, 30.6919, 38.8948, 0.44 ) }
    dend_50 { pt3dadd( -50.1253, 36.5657, 46.5377, 0.44 ) }
    dend_50 { pt3dadd( -54.7797, 41.2179, 54.3657, 0.44 ) }
    dend_50 { pt3dadd( -59.2847, 46.4113, 61.9515, 0.44 ) }
    dend_50 { pt3dadd( -63.8809, 51.0313, 69.8319, 0.44 ) }
    dend_50 { pt3dadd( -68.5649, 56.2314, 77.3042, 0.44 ) }
    dend_50 { pt3dadd( -73.4543, 60.8941, 84.9814, 0.44 ) }
    dend_50 { pt3dadd( -79.7786, 66.2358, 91.012, 0.44 ) }
    // Section: dend_47, id: dend_47, parent: dend_27 (entry count 87/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -1.42315, 31.2375, 4.33624, 1.47 ) }
    dend_47 { pt3dadd( 1.01554, 31.9515, 2.88298, 1.47 ) }
    dend_47 { pt3dadd( 1.01554, 31.9515, 2.88298, 1.47 ) }
    dend_47 { pt3dadd( 2.80351, 32.6819, 2.0806, 0.74 ) }
    dend_47 { pt3dadd( 3.29363, 32.8968, 1.86837, 0.74 ) }
    dend_47 { pt3dadd( 4.68548, 33.537, 1.33551, 0.66 ) }
    dend_47 { pt3dadd( 6.30858, 34.3009, 0.757243, 0.66 ) }
    dend_47 { pt3dadd( 7.50479, 34.8565, 0.437884, 0.66 ) }
    dend_47 { pt3dadd( 9.13554, 35.612, 0.0332403, 0.66 ) }
    dend_47 { pt3dadd( 9.20888, 35.6456, 0.0183222, 0.66 ) }
    dend_47 { pt3dadd( 11.3239, 36.5766, -0.37871, 0.66 ) }
    dend_47 { pt3dadd( 11.3882, 36.6029, -0.389199, 0.66 ) }
    dend_47 { pt3dadd( 12.7649, 37.0825, -0.577995, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_47 { pt3dadd( 13.3416, 37.2233, -0.632621, 1.25 ) }
    dend_47 { pt3dadd( 14.635, 37.4916, -0.575372, 1.47 ) }
    dend_47 { pt3dadd( 15.6313, 37.7675, -0.430836, 1.11 ) }
    dend_47 { pt3dadd( 15.6957, 37.7899, -0.414142, 1.11 ) }
    dend_47 { pt3dadd( 16.7443, 38.2782, -0.0520411, 0.52 ) }
    dend_47 { pt3dadd( 18.3587, 39.0367, 0.600967, 0.52 ) }
    dend_47 { pt3dadd( 20.3004, 39.8687, 1.50691, 0.52 ) }
    dend_47 { pt3dadd( 21.7622, 40.4512, 2.25684, 0.52 ) }
    dend_47 { pt3dadd( 21.8736, 40.4909, 2.31641, 0.52 ) }
    dend_47 { pt3dadd( 23.0461, 40.8898, 2.94955, 0.52 ) }
    dend_47 { pt3dadd( 25.293, 41.5941, 4.16206, 0.52 ) }
    dend_47 { pt3dadd( 27.215, 42.1181, 5.09751, 0.52 ) }
    dend_47 { pt3dadd( 27.2989, 42.1356, 5.1349, 0.52 ) }
    dend_47 { pt3dadd( 28.0115, 42.2478, 5.48706, 0.74 ) }
    dend_47 { pt3dadd( 28.5119, 42.3394, 5.75432, 0.74 ) }
    dend_47 { pt3dadd( 29.4311, 42.5077, 6.27732, 0.74 ) }
    dend_47 { pt3dadd( 29.5291, 42.5326, 6.33372, 0.74 ) }
    dend_47 { pt3dadd( 31.2398, 42.86, 7.04344, 0.74 ) }
    dend_47 { pt3dadd( 31.4802, 42.8918, 7.12822, 0.74 ) }
    dend_47 { pt3dadd( 32.415, 42.9786, 7.39792, 0.37 ) }
    dend_47 { pt3dadd( 33.6331, 43.0963, 7.75113, 0.29 ) }
    dend_47 { pt3dadd( 34.465, 43.1871, 7.98088, 0.29 ) }
    dend_47 { pt3dadd( 35.5412, 43.3431, 8.24472, 0.74 ) }
    dend_47 { pt3dadd( 35.7995, 43.3868, 8.29286, 0.74 ) }
    dend_47 { pt3dadd( 36.6765, 43.5826, 8.55753, 0.74 ) }
    dend_47 { pt3dadd( 37.9828, 43.953, 9.10521, 1.03 ) }
    dend_47 { pt3dadd( 38.0623, 43.9785, 9.14755, 1.03 ) }
    dend_47 { pt3dadd( 38.7079, 44.1732, 9.55474, 1.47 ) }
    dend_47 { pt3dadd( 39.6171, 44.3648, 10.1828, 0.96 ) }
    dend_47 { pt3dadd( 40.8626, 44.4896, 11.0102, 0.52 ) }
    dend_47 { pt3dadd( 40.9325, 44.4877, 11.0523, 0.52 ) }
    dend_47 { pt3dadd( 41.5338, 44.4423, 11.3462, 0.37 ) }
    dend_47 { pt3dadd( 41.6386, 44.4374, 11.3946, 0.37 ) }
    dend_47 { pt3dadd( 42.5036, 44.5069, 11.7227, 0.37 ) }
    dend_47 { pt3dadd( 42.5799, 44.5283, 11.743, 0.37 ) }
    dend_47 { pt3dadd( 43.3259, 44.8346, 11.8679, 0.37 ) }
    dend_47 { pt3dadd( 43.9709, 45.16, 11.9576, 0.37 ) }
    dend_47 { pt3dadd( 44.1292, 45.2514, 11.9775, 0.37 ) }
    dend_47 { pt3dadd( 45.4298, 46.0213, 12.1154, 0.37 ) }
    dend_47 { pt3dadd( 45.8283, 46.2664, 12.1541, 0.59 ) }
    dend_47 { pt3dadd( 46.6423, 46.7503, 12.289, 0.59 ) }
    dend_47 { pt3dadd( 47.7273, 47.3897, 12.5214, 0.37 ) }
    dend_47 { pt3dadd( 48.8473, 48.0375, 12.8019, 0.37 ) }
    dend_47 { pt3dadd( 49.8964, 48.6489, 13.1221, 1.18 ) }
    dend_47 { pt3dadd( 50.9087, 49.2384, 13.4884, 1.47 ) }
    dend_47 { pt3dadd( 52.3318, 50.0579, 14.0696, 0.81 ) }
    dend_47 { pt3dadd( 52.9727, 50.4161, 14.3632, 0.29 ) }
    dend_47 { pt3dadd( 53.6809, 50.795, 14.728, 0.22 ) }
    dend_47 { pt3dadd( 54.2351, 51.08, 15.0249, 0.81 ) }
    dend_47 { pt3dadd( 54.4507, 51.1742, 15.1303, 0.81 ) }
    dend_47 { pt3dadd( 55.1702, 51.4575, 15.4692, 0.96 ) }
    dend_47 { pt3dadd( 56.1841, 51.8169, 15.8862, 0.96 ) }
    dend_47 { pt3dadd( 56.2941, 51.852, 15.9326, 0.96 ) }
    dend_47 { pt3dadd( 56.7771, 51.9869, 16.1424, 0.44 ) }
    dend_47 { pt3dadd( 58.1855, 52.2951, 16.7228, 0.44 ) }
    dend_47 { pt3dadd( 59.7419, 52.5023, 17.539, 0.37 ) }
    dend_47 { pt3dadd( 60.2624, 52.5316, 17.8603, 0.88 ) }
    dend_47 { pt3dadd( 60.9447, 52.5319, 18.3001, 1.18 ) }
    dend_47 { pt3dadd( 61.9629, 52.4781, 18.9485, 0.74 ) }
    dend_47 { pt3dadd( 63.1326, 52.3932, 19.7141, 0.44 ) }
    dend_47 { pt3dadd( 65.4306, 52.2879, 21.2209, 0.44 ) }
    dend_47 { pt3dadd( 66.424, 52.279, 21.8782, 0.44 ) }
    dend_47 { pt3dadd( 67.2376, 52.3511, 22.4367, 1.03 ) }
    dend_47 { pt3dadd( 68.1645, 52.5012, 23.09, 1.69 ) }
    dend_47 { pt3dadd( 69.3892, 52.8334, 23.9943, 0.52 ) }
    dend_47 { pt3dadd( 70.5648, 53.2689, 24.8881, 0.52 ) }
    dend_47 { pt3dadd( 72.0714, 53.9286, 25.9663, 0.44 ) }
    dend_47 { pt3dadd( 73.7465, 54.6802, 27.2353, 0.44 ) }
    dend_47 { pt3dadd( 73.798, 54.7034, 27.277, 0.44 ) }
    dend_47 { pt3dadd( 75.3162, 55.3265, 28.4915, 1.25 ) }
    dend_47 { pt3dadd( 75.3807, 55.3457, 28.5381, 1.25 ) }
    dend_47 { pt3dadd( 76.3155, 55.5247, 29.131, 1.84 ) }
    dend_47 { pt3dadd( 77.7336, 55.7315, 29.7833, 0.44 ) }
    dend_47 { pt3dadd( 77.8092, 55.7376, 29.8136, 0.44 ) }
    dend_47 { pt3dadd( 79.0401, 55.7675, 30.2523, 0.29 ) }
    dend_47 { pt3dadd( 79.8237, 55.693, 30.512, 0.52 ) }
    dend_47 { pt3dadd( 80.535, 55.5418, 30.8424, 0.52 ) }
    dend_47 { pt3dadd( 81.495, 55.3126, 31.3736, 0.44 ) }
    dend_47 { pt3dadd( 82.7404, 54.9944, 32.1201, 0.44 ) }
    dend_47 { pt3dadd( 83.4057, 54.8659, 32.5954, 0.88 ) }
    dend_47 { pt3dadd( 84.4655, 54.7001, 33.4892, 0.81 ) }
    dend_47 { pt3dadd( 85.8726, 54.5505, 34.8556, 0.44 ) }
    dend_47 { pt3dadd( 87.0662, 54.4695, 36.1162, 0.44 ) }
    dend_47 { pt3dadd( 87.131, 54.4685, 36.1834, 0.44 ) }
    dend_47 { pt3dadd( 88.4505, 54.5905, 37.4221, 0.44 ) }
    dend_47 { pt3dadd( 88.5193, 54.6017, 37.4843, 0.44 ) }
    dend_47 { pt3dadd( 89.9385, 54.9045, 38.71, 0.44 ) }
    dend_47 { pt3dadd( 90.0102, 54.9216, 38.7676, 0.44 ) }
    dend_47 { pt3dadd( 91.0165, 55.0968, 39.5824, 0.44 ) }
    dend_47 { pt3dadd( 91.082, 55.1064, 39.6303, 0.44 ) }
    dend_47 { pt3dadd( 92.7053, 55.226, 40.69, 0.44 ) }
    dend_47 { pt3dadd( 92.7754, 55.2267, 40.732, 0.44 ) }
    dend_47 { pt3dadd( 93.6512, 55.2011, 41.1897, 0.44 ) }
    dend_47 { pt3dadd( 93.7102, 55.198, 41.2272, 0.44 ) }
    dend_47 { pt3dadd( 93.9161, 55.1845, 41.38, 0.66 ) }
    dend_47 { pt3dadd( 95.0175, 55.1165, 42.1472, 0.29 ) }
    dend_47 { pt3dadd( 96.0117, 55.0153, 42.8456, 0.29 ) }
    dend_47 { pt3dadd( 96.0864, 55.0052, 42.9006, 0.29 ) }
    dend_47 { pt3dadd( 97.5249, 54.7479, 44.0349, 0.29 ) }
    dend_47 { pt3dadd( 97.6154, 54.7335, 44.1053, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_47 { pt3dadd( 98.7928, 54.5926, 45.0115, 0.29 ) }
    dend_47 { pt3dadd( 109.483, 57.9533, 48.3787, 0.29 ) }
    dend_47 { pt3dadd( 119.404, 61.9357, 53.1608, 0.29 ) }
    dend_47 { pt3dadd( 128.935, 63.7612, 59.6632, 0.29 ) }
    dend_47 { pt3dadd( 137.997, 63.298, 66.9986, 0.29 ) }
    dend_47 { pt3dadd( 146.887, 62.4557, 74.509, 0.29 ) }
    dend_47 { pt3dadd( 155.827, 62.6335, 82.0073, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 7/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -1.42315, 31.2375, 4.33624, 1.84 ) }
    dend_28 { pt3dadd( -1.29714, 31.8625, 4.33774, 1.84 ) }
    dend_28 { pt3dadd( -1.08971, 33.0098, 4.39304, 1.03 ) }
    dend_28 { pt3dadd( -1.07713, 33.0816, 4.39769, 1.03 ) }
    dend_28 { pt3dadd( -0.96296, 33.7667, 4.44639, 1.03 ) }
    dend_28 { pt3dadd( -0.83975, 34.8275, 4.52189, 1.03 ) }
    dend_28 { pt3dadd( -0.764491, 35.9967, 4.62916, 1.03 ) }
    dend_28 { pt3dadd( -0.769253, 37.787, 4.84538, 1.03 ) }
    dend_28 { pt3dadd( -0.771882, 37.8412, 4.85311, 1.03 ) }
    dend_28 { pt3dadd( -0.87412, 38.9633, 4.98543, 1.18 ) }
    dend_28 { pt3dadd( -1.06703, 40.4465, 5.12702, 1.18 ) }
    dend_28 { pt3dadd( -1.28495, 41.7511, 5.22262, 1.18 ) }
    dend_28 { pt3dadd( -1.57827, 43.2062, 5.23732, 1.18 ) }
    dend_28 { pt3dadd( -1.59186, 43.2685, 5.23419, 1.18 ) }
    dend_28 { pt3dadd( -1.82958, 44.3877, 5.12665, 1.18 ) }
    dend_28 { pt3dadd( -2.04058, 45.3539, 4.95976, 1.18 ) }
    dend_28 { pt3dadd( -2.05463, 45.4232, 4.94211, 1.18 ) }
    dend_28 { pt3dadd( -2.26856, 46.4761, 4.59748, 0.96 ) }
    dend_28 { pt3dadd( -2.53238, 47.5879, 4.24109, 0.96 ) }
    dend_28 { pt3dadd( -2.54859, 47.6473, 4.22472, 0.96 ) }
    dend_28 { pt3dadd( -2.86547, 48.5866, 4.03722, 1.18 ) }
    dend_28 { pt3dadd( -3.15878, 49.3328, 3.90819, 1.18 ) }
    dend_28 { pt3dadd( -3.18219, 49.3907, 3.89597, 1.18 ) }
    dend_28 { pt3dadd( -3.66181, 50.5747, 3.86564, 1.18 ) }
    dend_28 { pt3dadd( -3.69506, 50.6582, 3.87227, 1.18 ) }
    dend_28 { pt3dadd( -4.13833, 51.7866, 4.0576, 1.18 ) }
    dend_28 { pt3dadd( -4.16462, 51.8528, 4.07225, 1.18 ) }
    dend_28 { pt3dadd( -4.89874, 53.679, 4.5912, 1.18 ) }
    dend_28 { pt3dadd( -5.97657, 56.3506, 5.47053, 1.18 ) }
    dend_28 { pt3dadd( -6.0409, 56.5141, 5.53262, 1.18 ) }
    dend_28 { pt3dadd( -6.79333, 58.4478, 6.368, 1.18 ) }
    dend_28 { pt3dadd( -6.9352, 58.8145, 6.54984, 1.18 ) }
    dend_28 { pt3dadd( -7.25151, 59.6214, 6.98663, 1.18 ) }
    dend_28 { pt3dadd( -7.28236, 59.6992, 7.03426, 1.18 ) }
    dend_28 { pt3dadd( -7.57559, 60.4856, 7.39539, 1.18 ) }
    dend_28 { pt3dadd( -7.87299, 61.379, 7.86013, 1.18 ) }
    dend_28 { pt3dadd( -7.88454, 61.424, 7.88842, 1.18 ) }
    dend_28 { pt3dadd( -8.01332, 62.0894, 8.29009, 0.88 ) }
    dend_28 { pt3dadd( -8.02575, 62.167, 8.33377, 0.88 ) }
    dend_28 { pt3dadd( -8.13283, 63.1064, 8.73559, 0.88 ) }
    dend_28 { pt3dadd( -8.13918, 63.2136, 8.76471, 0.88 ) }
    dend_28 { pt3dadd( -8.17088, 64.3981, 8.90241, 1.11 ) }
    dend_28 { pt3dadd( -8.18218, 65.3343, 8.93631, 1.11 ) }
    dend_28 { pt3dadd( -8.18267, 65.3891, 8.93361, 1.11 ) }
    dend_28 { pt3dadd( -8.21026, 67.1654, 8.7509, 1.33 ) }
    dend_28 { pt3dadd( -8.2151, 67.864, 8.66001, 1.4 ) }
    dend_28 { pt3dadd( -8.22433, 68.62, 8.58585, 1.18 ) }
    dend_28 { pt3dadd( -8.22656, 68.6928, 8.58093, 1.18 ) }
    dend_28 { pt3dadd( -8.29559, 69.9909, 8.56227, 1.03 ) }
    dend_28 { pt3dadd( -8.30082, 70.0545, 8.56509, 1.03 ) }
    dend_28 { pt3dadd( -8.48698, 71.8031, 8.74997, 1.03 ) }
    dend_28 { pt3dadd( -8.66644, 73.346, 8.92864, 1.03 ) }
    dend_28 { pt3dadd( -8.823, 74.6301, 9.08242, 1.03 ) }
    dend_28 { pt3dadd( -8.9325, 75.4382, 9.1825, 1.47 ) }
    dend_28 { pt3dadd( -9.06978, 76.4776, 9.29708, 1.47 ) }
    dend_28 { pt3dadd( -9.19387, 77.4695, 9.38142, 1.47 ) }
    dend_28 { pt3dadd( -9.20048, 77.5239, 9.38437, 1.47 ) }
    dend_28 { pt3dadd( -9.29383, 78.5313, 9.46874, 1.47 ) }
    dend_28 { pt3dadd( -9.34073, 79.3241, 9.55892, 0.88 ) }
    dend_28 { pt3dadd( -9.3753, 80.9552, 9.79283, 0.66 ) }
    dend_28 { pt3dadd( -9.35224, 82.0728, 9.98443, 0.66 ) }
    dend_28 { pt3dadd( -9.34815, 82.1624, 10.0015, 0.66 ) }
    dend_28 { pt3dadd( -9.22085, 83.882, 10.4761, 0.66 ) }
    dend_28 { pt3dadd( -9.21368, 83.9502, 10.5007, 0.66 ) }
    dend_28 { pt3dadd( -9.14534, 84.5125, 10.7443, 1.33 ) }
    dend_28 { pt3dadd( -9.05261, 85.278, 11.144, 1.69 ) }
    dend_28 { pt3dadd( -8.95994, 86.0984, 11.5712, 1.69 ) }
    dend_28 { pt3dadd( -8.78024, 87.8576, 12.3365, 1.33 ) }
    dend_28 { pt3dadd( -8.77542, 87.9186, 12.3547, 1.33 ) }
    dend_28 { pt3dadd( -8.7498, 88.4578, 12.4864, 1.18 ) }
    dend_28 { pt3dadd( -8.74635, 88.5841, 12.5054, 1.18 ) }
    dend_28 { pt3dadd( -8.73131, 89.5912, 12.5566, 1.18 ) }
    dend_28 { pt3dadd( -8.71513, 90.4655, 12.4886, 1.18 ) }
    dend_28 { pt3dadd( -8.68449, 91.7595, 12.236, 0.96 ) }
    dend_28 { pt3dadd( -8.67878, 91.8976, 12.2007, 0.96 ) }
    dend_28 { pt3dadd( -8.61419, 92.8522, 11.9143, 0.96 ) }
    dend_28 { pt3dadd( -8.61014, 92.9127, 11.8946, 0.96 ) }
    dend_28 { pt3dadd( -8.52331, 94.1216, 11.4681, 0.96 ) }
    dend_28 { pt3dadd( -8.52105, 94.1734, 11.4509, 0.96 ) }
    dend_28 { pt3dadd( -8.495, 95.3667, 11.0418, 0.74 ) }
    dend_28 { pt3dadd( -8.51018, 95.8318, 10.9068, 1.03 ) }
    dend_28 { pt3dadd( -8.6108, 96.6693, 10.7663, 1.03 ) }
    dend_28 { pt3dadd( -8.62018, 96.7231, 10.764, 1.03 ) }
    dend_28 { pt3dadd( -8.78356, 97.5392, 10.7997, 1.03 ) }
    dend_28 { pt3dadd( -8.79568, 97.6016, 10.8056, 1.03 ) }
    dend_28 { pt3dadd( -8.99717, 98.6746, 10.9546, 0.81 ) }
    dend_28 { pt3dadd( -9.20578, 99.9021, 11.1372, 0.81 ) }
    dend_28 { pt3dadd( -9.56176, 102.29, 11.5255, 0.81 ) }
    dend_28 { pt3dadd( -9.66529, 103.151, 11.6566, 0.81 ) }
    dend_28 { pt3dadd( -9.72411, 103.819, 11.7464, 1.18 ) }
    dend_28 { pt3dadd( -9.78126, 104.619, 11.8242, 1.55 ) }
    dend_28 { pt3dadd( -9.82918, 105.576, 11.8814, 1.55 ) }
    dend_28 { pt3dadd( -9.83618, 105.749, 11.8781, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_28 { pt3dadd( -9.86888, 106.568, 11.8096, 1.4 ) }
    dend_28 { pt3dadd( -9.94938, 107.461, 11.683, 1.25 ) }
    dend_28 { pt3dadd( -10.1131, 108.711, 11.4496, 1.11 ) }
    dend_28 { pt3dadd( -10.1217, 108.763, 11.4381, 1.11 ) }
    dend_28 { pt3dadd( -10.3316, 109.846, 11.1881, 0.96 ) }
    dend_28 { pt3dadd( -10.3424, 109.898, 11.1763, 0.96 ) }
    dend_28 { pt3dadd( -10.6889, 111.427, 10.8459, 0.96 ) }
    dend_28 { pt3dadd( -10.7016, 111.488, 10.8331, 0.96 ) }
    dend_28 { pt3dadd( -11.0363, 113.351, 10.4645, 0.96 ) }
    dend_28 { pt3dadd( -11.1929, 114.397, 10.2844, 1.11 ) }
    dend_28 { pt3dadd( -11.2017, 114.468, 10.2737, 1.11 ) }
    dend_28 { pt3dadd( -11.2602, 115.101, 10.2121, 1.4 ) }
    dend_28 { pt3dadd( -11.3171, 116.105, 10.1672, 1.4 ) }
    dend_28 { pt3dadd( -11.3601, 116.989, 10.1702, 1.03 ) }
    dend_28 { pt3dadd( -11.3995, 118.399, 10.2544, 0.74 ) }
    dend_28 { pt3dadd( -11.4003, 118.453, 10.2593, 0.74 ) }
    dend_28 { pt3dadd( -11.4172, 119.748, 10.3942, 0.74 ) }
    dend_28 { pt3dadd( -11.4144, 120.211, 10.4719, 1.18 ) }
    dend_28 { pt3dadd( -11.3813, 121.144, 10.6738, 1.18 ) }
    dend_28 { pt3dadd( -11.3199, 122.056, 10.904, 1.18 ) }
    dend_28 { pt3dadd( -11.3152, 122.118, 10.9178, 1.18 ) }
    dend_28 { pt3dadd( -11.2485, 123.304, 11.1208, 0.88 ) }
    dend_28 { pt3dadd( -11.1835, 124.761, 11.2939, 0.74 ) }
    dend_28 { pt3dadd( -11.1727, 125.902, 11.3757, 0.74 ) }
    dend_28 { pt3dadd( -11.1761, 125.957, 11.3755, 0.74 ) }
    dend_28 { pt3dadd( -11.3567, 127.246, 11.2308, 0.74 ) }
    dend_28 { pt3dadd( -11.5512, 128.267, 11.0229, 0.74 ) }
    dend_28 { pt3dadd( -11.5624, 128.318, 11.0077, 0.74 ) }
    dend_28 { pt3dadd( -11.8097, 129.344, 10.6257, 1.18 ) }
    dend_28 { pt3dadd( -12.1126, 130.592, 10.1449, 1.69 ) }
    dend_28 { pt3dadd( -12.314, 131.465, 9.81649, 1.69 ) }
    dend_28 { pt3dadd( -12.4685, 132.213, 9.55196, 1.69 ) }
    dend_28 { pt3dadd( -12.6384, 133.188, 9.19246, 1.69 ) }
    dend_28 { pt3dadd( -12.6476, 133.256, 9.16869, 1.69 ) }
    dend_28 { pt3dadd( -12.6525, 133.598, 9.06587, 1.69 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 35/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -79.0046, 75.4869, 108.074, 0.37 ) }
    dend_26 { pt3dadd( -84.9282, 78.7778, 114.18, 0.37 ) }
    dend_26 { pt3dadd( -90.194, 82.3064, 120.743, 0.37 ) }
    dend_26 { pt3dadd( -94.7265, 85.8743, 127.812, 0.37 ) }
    dend_26 { pt3dadd( -100.992, 89.5704, 133.33, 0.37 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 40/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -79.0046, 75.4869, 108.074, 0.52 ) }
    dend_25 { pt3dadd( -81.0761, 78.166, 114.935, 0.37 ) }
    dend_25 { pt3dadd( -84.8513, 79.4499, 121.443, 0.37 ) }
    dend_25 { pt3dadd( -90.3903, 80.0973, 126.647, 0.37 ) }
    dend_25 { pt3dadd( -95.3994, 80.6256, 132.375, 0.37 ) }
    dend_25 { pt3dadd( -101.08, 80.9939, 137.45, 0.37 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 46/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 53.6715, -28.028, 33.0533, 0.37 ) }
    dend_22 { pt3dadd( 62.1074, -28.4771, 38.1393, 0.37 ) }
    dend_22 { pt3dadd( 69.7102, -29.6318, 44.3144, 0.37 ) }
    dend_22 { pt3dadd( 75.8802, -32.4741, 51.4805, 0.37 ) }
    dend_22 { pt3dadd( 82.588, -36.3154, 57.6524, 0.37 ) }
    dend_22 { pt3dadd( 90.6581, -38.2974, 62.9776, 0.37 ) }
    dend_22 { pt3dadd( 99.6777, -40.0207, 66.5978, 0.37 ) }
    dend_22 { pt3dadd( 108.08, -40.2286, 71.7534, 0.37 ) }
    dend_22 { pt3dadd( 116.672, -41.5972, 76.4057, 0.37 ) }
    dend_22 { pt3dadd( 125.026, -43.7705, 81.1977, 0.37 ) }
    dend_22 { pt3dadd( 133.135, -44.1326, 86.7952, 0.37 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 53.6715, -28.028, 33.0533, 0.52 ) }
    dend_21 { pt3dadd( 59.2722, -36.4661, 39.9173, 0.37 ) }
    dend_21 { pt3dadd( 66.7114, -42.8005, 47.1966, 0.37 ) }
    dend_21 { pt3dadd( 73.3505, -51.073, 53.3004, 0.37 ) }
    dend_21 { pt3dadd( 81.6657, -58.0627, 58.8779, 0.37 ) }
    dend_21 { pt3dadd( 89.8752, -65.3939, 64.1897, 0.37 ) }
    dend_21 { pt3dadd( 96.4524, -73.4254, 70.653, 0.37 ) }
    dend_21 { pt3dadd( 102.881, -80.6176, 78.1236, 0.37 ) }
    dend_21 { pt3dadd( 110.117, -86.6442, 85.8401, 0.37 ) }
    dend_21 { pt3dadd( 116.502, -94.1053, 93.0928, 0.37 ) }
    dend_21 { pt3dadd( 122.376, -103.542, 98.3075, 0.37 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 68/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 32.8826, -23.2584, 18.1957, 0.74 ) }
    dend_17 { pt3dadd( 33.7064, -25.402, 12.3391, 0.74 ) }
    dend_17 { pt3dadd( 33.8863, -26.0262, 11.0025, 0.74 ) }
    dend_17 { pt3dadd( 33.9128, -26.1696, 10.7817, 0.74 ) }
    dend_17 { pt3dadd( 34.01, -26.9088, 9.87239, 0.74 ) }
    dend_17 { pt3dadd( 34.0211, -26.9865, 9.81537, 0.74 ) }
    dend_17 { pt3dadd( 34.1391, -27.7289, 9.42618, 0.96 ) }
    dend_17 { pt3dadd( 34.2268, -28.1583, 9.45565, 0.96 ) }
    dend_17 { pt3dadd( 34.5036, -29.2005, 9.6001, 0.96 ) }
    dend_17 { pt3dadd( 34.5294, -29.2804, 9.61468, 0.96 ) }
    dend_17 { pt3dadd( 35.3947, -31.534, 10.1329, 0.81 ) }
    dend_17 { pt3dadd( 35.4332, -31.6195, 10.1582, 0.81 ) }
    dend_17 { pt3dadd( 36.5371, -33.8262, 10.8894, 0.81 ) }
    dend_17 { pt3dadd( 36.9648, -34.6873, 11.1647, 1.11 ) }
    dend_17 { pt3dadd( 37.0013, -34.7604, 11.188, 1.11 ) }
    dend_17 { pt3dadd( 37.135, -35.0522, 11.2706, 1.11 ) }
    dend_17 { pt3dadd( 37.8952, -36.8631, 11.7333, 0.66 ) }
    dend_17 { pt3dadd( 38.4101, -38.1749, 12.0629, 0.66 ) }
    dend_17 { pt3dadd( 39.1627, -40.05, 12.4727, 0.66 ) }
    dend_17 { pt3dadd( 39.1903, -40.1161, 12.4864, 0.66 ) }
    dend_17 { pt3dadd( 39.9002, -41.7671, 12.8019, 0.66 ) }
    dend_17 { pt3dadd( 39.9459, -41.8681, 12.8189, 0.66 ) }
    dend_17 { pt3dadd( 41.0073, -44.1264, 13.1465, 0.66 ) }
    dend_17 { pt3dadd( 42.0341, -46.2163, 13.452, 0.52 ) }
    dend_17 { pt3dadd( 42.0722, -46.2918, 13.4615, 0.52 ) }
    dend_17 { pt3dadd( 42.5408, -47.2138, 13.5559, 0.52 ) }
    dend_17 { pt3dadd( 43.605, -49.3293, 13.7556, 0.52 ) }
    dend_17 { pt3dadd( 44.001, -50.1726, 13.8202, 0.81 ) }
    dend_17 { pt3dadd( 44.4259, -51.1463, 13.867, 0.81 ) }
    dend_17 { pt3dadd( 45.1481, -52.9674, 13.9789, 0.81 ) }
    dend_17 { pt3dadd( 45.2233, -53.1599, 13.9909, 0.81 ) }
    dend_17 { pt3dadd( 45.9902, -55.1648, 14.1235, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_17 { pt3dadd( 46.2328, -55.764, 14.1573, 1.11 ) }
    dend_17 { pt3dadd( 46.4965, -56.3552, 14.1887, 1.11 ) }
    dend_17 { pt3dadd( 46.8454, -57.0276, 14.2068, 0.59 ) }
    dend_17 { pt3dadd( 47.6067, -58.379, 14.1971, 0.59 ) }
    dend_17 { pt3dadd( 47.6558, -58.4628, 14.194, 0.59 ) }
    dend_17 { pt3dadd( 48.9213, -60.3663, 14.0004, 0.59 ) }
    dend_17 { pt3dadd( 48.9708, -60.4348, 13.9928, 0.59 ) }
    dend_17 { pt3dadd( 49.607, -61.2768, 13.8855, 0.81 ) }
    dend_17 { pt3dadd( 49.6609, -61.3413, 13.8751, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 9/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 32.8826, -23.2584, 18.1957, 0.74 ) }
    dend_16 { pt3dadd( 34.18, -22.1527, 18.0533, 0.74 ) }
    dend_16 { pt3dadd( 34.2331, -22.1162, 18.0663, 0.74 ) }
    dend_16 { pt3dadd( 34.7665, -21.9731, 18.5098, 0.74 ) }
    dend_16 { pt3dadd( 34.8651, -21.978, 18.618, 0.74 ) }
    dend_16 { pt3dadd( 35.3578, -22.1218, 19.2382, 0.74 ) }
    dend_16 { pt3dadd( 35.4188, -22.1868, 19.3469, 0.74 ) }
    dend_16 { pt3dadd( 35.7771, -22.8839, 20.213, 0.74 ) }
    dend_16 { pt3dadd( 36.1687, -24.0681, 21.2799, 0.74 ) }
    dend_16 { pt3dadd( 36.3815, -24.7814, 21.8552, 0.74 ) }
    dend_16 { pt3dadd( 36.4151, -24.8955, 21.9426, 0.74 ) }
    dend_16 { pt3dadd( 36.854, -26.1009, 22.8186, 0.74 ) }
    dend_16 { pt3dadd( 36.8758, -26.1515, 22.855, 0.74 ) }
    dend_16 { pt3dadd( 37.4849, -27.2114, 23.5349, 0.66 ) }
    dend_16 { pt3dadd( 38.5632, -28.6035, 24.394, 0.66 ) }
    dend_16 { pt3dadd( 38.6523, -28.697, 24.4521, 0.66 ) }
    dend_16 { pt3dadd( 39.9801, -29.8583, 25.1399, 0.66 ) }
    dend_16 { pt3dadd( 40.0538, -29.9106, 25.1668, 0.66 ) }
    dend_16 { pt3dadd( 41.4462, -30.8229, 25.563, 0.66 ) }
    dend_16 { pt3dadd( 41.5005, -30.859, 25.5741, 0.66 ) }
    dend_16 { pt3dadd( 42.5945, -31.6505, 25.7114, 0.66 ) }
    dend_16 { pt3dadd( 43.2545, -32.1948, 25.7905, 1.03 ) }
    dend_16 { pt3dadd( 44.0581, -32.9936, 25.8716, 1.03 ) }
    dend_16 { pt3dadd( 44.1018, -33.0428, 25.8811, 1.03 ) }
    dend_16 { pt3dadd( 45.4075, -34.6578, 26.2823, 0.74 ) }
    dend_16 { pt3dadd( 46.3311, -35.84, 26.588, 0.74 ) }
    dend_16 { pt3dadd( 47.4933, -37.3228, 26.9642, 0.74 ) }
    dend_16 { pt3dadd( 49.1243, -39.4308, 27.5044, 0.74 ) }
    dend_16 { pt3dadd( 50.4933, -41.1937, 27.9875, 0.74 ) }
    dend_16 { pt3dadd( 51.7096, -42.7257, 28.4272, 0.74 ) }
    dend_16 { pt3dadd( 51.7511, -42.7752, 28.4426, 0.74 ) }
    dend_16 { pt3dadd( 53.2998, -44.5206, 29.0663, 0.74 ) }
    dend_16 { pt3dadd( 53.3445, -44.5648, 29.0868, 0.74 ) }
    dend_16 { pt3dadd( 54.2452, -45.3147, 29.6162, 0.74 ) }
    dend_16 { pt3dadd( 54.2921, -45.35, 29.646, 0.74 ) }
    dend_16 { pt3dadd( 54.6695, -45.6364, 29.922, 0.52 ) }
    dend_16 { pt3dadd( 55.3852, -46.2197, 30.3991, 0.52 ) }
    dend_16 { pt3dadd( 56.3945, -47.1773, 31.0261, 0.52 ) }
    dend_16 { pt3dadd( 57.8207, -48.6294, 31.7817, 0.52 ) }
    dend_16 { pt3dadd( 57.8627, -48.6762, 31.8022, 0.52 ) }
    dend_16 { pt3dadd( 59.2592, -50.321, 32.4451, 0.52 ) }
    dend_16 { pt3dadd( 60.1595, -51.4817, 32.8122, 0.52 ) }
    dend_16 { pt3dadd( 61.1138, -52.8277, 33.0739, 0.52 ) }
    dend_16 { pt3dadd( 61.152, -52.8824, 33.073, 0.52 ) }
    dend_16 { pt3dadd( 61.679, -53.6356, 32.9158, 0.74 ) }
    dend_16 { pt3dadd( 68.1699, -59.6427, 36.2238, 0.74 ) }
    dend_16 { pt3dadd( 75.1986, -64.5048, 40.1638, 0.74 ) }
    dend_16 { pt3dadd( 81.8359, -69.111, 44.9637, 0.74 ) }
    dend_16 { pt3dadd( 87.0228, -75.0497, 50.1119, 0.74 ) }
    dend_16 { pt3dadd( 91.6411, -81.1167, 55.633, 0.74 ) }
    dend_16 { pt3dadd( 97.8834, -85.6796, 60.9632, 0.74 ) }
    dend_16 { pt3dadd( 104.26, -90.4236, 65.9787, 0.74 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 61/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.40805, 89.3471, 2.1466, 0.96 ) }
    dend_13 { pt3dadd( -4.15272, 88.5072, 1.98524, 0.96 ) }
    dend_13 { pt3dadd( -4.04994, 88.1265, 1.93303, 0.44 ) }
    dend_13 { pt3dadd( -3.7044, 86.7488, 1.79104, 0.44 ) }
    dend_13 { pt3dadd( -3.4631, 85.7868, 1.69189, 0.44 ) }
    dend_13 { pt3dadd( -3.2313, 84.8626, 1.59663, 0.66 ) }
    dend_13 { pt3dadd( -2.96288, 83.7925, 1.48634, 1.55 ) }
    dend_13 { pt3dadd( -2.6923, 82.7677, 1.38333, 1.11 ) }
    dend_13 { pt3dadd( -2.53794, 82.1463, 1.34166, 0.37 ) }
    dend_13 { pt3dadd( -0.543031, 70.1086, 1.84092, 0.37 ) }
    dend_13 { pt3dadd( -1.05292, 57.9758, 0.615761, 0.37 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 72/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -4.40805, 89.3471, 2.1466, 0.52 ) }
    dend_12 { pt3dadd( -3.0558, 89.7853, 1.38336, 0.52 ) }
    dend_12 { pt3dadd( -2.91389, 89.8292, 1.28564, 0.29 ) }
    dend_12 { pt3dadd( -2.6002, 89.922, 1.06003, 0.29 ) }
    dend_12 { pt3dadd( -1.96835, 90.1088, 0.605631, 0.29 ) }
    dend_12 { pt3dadd( -1.87823, 90.1354, 0.540815, 0.29 ) }
    dend_12 { pt3dadd( -1.15558, 90.3491, 0.0211108, 0.29 ) }
    dend_12 { pt3dadd( 0.0257912, 90.7114, -0.538981, 0.29 ) }
    dend_12 { pt3dadd( 0.130348, 90.7428, -0.592347, 0.29 ) }
    dend_12 { pt3dadd( 9.53554, 94.1229, -4.55093, 0.29 ) }
    dend_12 { pt3dadd( 19.6214, 95.8241, -7.78174, 0.29 ) }
    dend_12 { pt3dadd( 29.0275, 96.5857, -12.8694, 0.29 ) }
    dend_12 { pt3dadd( 38.5667, 95.7306, -17.6787, 0.29 ) }
    dend_12 { pt3dadd( 47.0295, 96.7099, -24.1915, 0.29 ) }
    dend_12 { pt3dadd( 55.4838, 99.2097, -30.3247, 0.29 ) }
    dend_12 { pt3dadd( 64.1061, 101.694, -36.2252, 0.29 ) }
    dend_12 { pt3dadd( 73.8955, 103.14, -40.3606, 0.29 ) }
    dend_12 { pt3dadd( 84.3355, 104.255, -42.5302, 0.29 ) }
    dend_12 { pt3dadd( 94.7027, 106.97, -43.1398, 0.29 ) }
    dend_12 { pt3dadd( 104.268, 111.871, -43.8743, 0.29 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 92/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 44.796, 96.058, 6.41012, 1.33 ) }
    dend_8 { pt3dadd( 44.9102, 97.4659, 6.94987, 1.33 ) }
    dend_8 { pt3dadd( 45.022, 98.3967, 7.26526, 1.33 ) }
    dend_8 { pt3dadd( 45.1214, 99.1221, 7.43816, 1.03 ) }
    dend_8 { pt3dadd( 45.2133, 99.7798, 7.55819, 1.03 ) }
    dend_8 { pt3dadd( 45.4264, 101.253, 7.7841, 0.59 ) }
    dend_8 { pt3dadd( 45.5784, 102.137, 7.89816, 0.59 ) }
    dend_8 { pt3dadd( 45.7044, 102.722, 7.91717, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_8 { pt3dadd( 46.0165, 103.749, 7.90964, 0.59 ) }
    dend_8 { pt3dadd( 46.2955, 104.431, 7.80737, 0.44 ) }
    dend_8 { pt3dadd( 46.3299, 104.499, 7.78755, 0.44 ) }
    dend_8 { pt3dadd( 46.9272, 105.512, 7.35582, 0.44 ) }
    dend_8 { pt3dadd( 47.0707, 105.74, 7.24379, 0.44 ) }
    dend_8 { pt3dadd( 47.5267, 106.469, 6.91118, 0.44 ) }
    dend_8 { pt3dadd( 48.4138, 108.012, 6.18159, 0.44 ) }
    dend_8 { pt3dadd( 48.4501, 108.086, 6.14586, 0.44 ) }
    dend_8 { pt3dadd( 48.6877, 108.802, 5.74706, 0.44 ) }
    dend_8 { pt3dadd( 48.719, 108.958, 5.66098, 0.44 ) }
    dend_8 { pt3dadd( 48.8538, 110.059, 5.09764, 0.44 ) }
    dend_8 { pt3dadd( 48.9308, 111.28, 4.5432, 0.74 ) }
    dend_8 { pt3dadd( 48.9602, 111.898, 4.29446, 0.96 ) }
    dend_8 { pt3dadd( 49.1152, 114.164, 3.33818, 1.03 ) }
    dend_8 { pt3dadd( 49.1976, 115.067, 2.94453, 1.03 ) }
    dend_8 { pt3dadd( 49.295, 115.878, 2.58578, 0.37 ) }
    dend_8 { pt3dadd( 49.3767, 116.411, 2.3471, 0.37 ) }
    dend_8 { pt3dadd( 49.405, 116.567, 2.29017, 0.37 ) }
    dend_8 { pt3dadd( 49.5148, 117.193, 2.09636, 0.37 ) }
    dend_8 { pt3dadd( 49.632, 117.876, 1.99296, 0.37 ) }
    dend_8 { pt3dadd( 49.7352, 118.952, 1.83843, 0.37 ) }
    dend_8 { pt3dadd( 49.7355, 119.071, 1.82708, 0.37 ) }
    dend_8 { pt3dadd( 49.6618, 119.615, 1.71264, 0.88 ) }
    dend_8 { pt3dadd( 49.485, 120.384, 1.50836, 0.88 ) }
    dend_8 { pt3dadd( 49.4641, 120.457, 1.48781, 0.88 ) }
    dend_8 { pt3dadd( 49.2725, 121.079, 1.29908, 0.88 ) }
    dend_8 { pt3dadd( 49.2504, 121.162, 1.27025, 0.88 ) }
    dend_8 { pt3dadd( 48.9221, 122.755, 0.594921, 0.66 ) }
    dend_8 { pt3dadd( 48.9015, 122.977, 0.487503, 0.44 ) }
    dend_8 { pt3dadd( 48.9067, 123.646, 0.129907, 0.44 ) }
    dend_8 { pt3dadd( 48.9172, 123.781, 0.0309332, 0.44 ) }
    dend_8 { pt3dadd( 49.0364, 124.401, -0.479841, 1.18 ) }
    dend_8 { pt3dadd( 49.0607, 124.49, -0.554843, 1.18 ) }
    dend_8 { pt3dadd( 49.2712, 125.056, -1.00197, 1.18 ) }
    dend_8 { pt3dadd( 49.2937, 125.117, -1.04567, 1.18 ) }
    dend_8 { pt3dadd( 49.9152, 127.133, -2.12424, 0.59 ) }
    dend_8 { pt3dadd( 50.0226, 127.859, -2.48384, 0.59 ) }
    dend_8 { pt3dadd( 50.0245, 127.931, -2.51521, 0.59 ) }
    dend_8 { pt3dadd( 49.9557, 128.665, -2.7988, 0.59 ) }
    dend_8 { pt3dadd( 49.7965, 129.523, -3.09136, 1.25 ) }
    dend_8 { pt3dadd( 49.4625, 130.932, -3.44413, 1.55 ) }
    dend_8 { pt3dadd( 48.6819, 133.656, -3.88246, 0.74 ) }
    dend_8 { pt3dadd( 48.4795, 134.274, -3.97824, 0.59 ) }
    dend_8 { pt3dadd( 48.1693, 135.174, -4.11361, 0.59 ) }
    dend_8 { pt3dadd( 48.1088, 135.334, -4.15299, 0.59 ) }
    dend_8 { pt3dadd( 47.7183, 136.371, -4.49092, 0.59 ) }
    dend_8 { pt3dadd( 47.3038, 137.512, -4.90612, 0.96 ) }
    dend_8 { pt3dadd( 47.0675, 138.283, -5.19563, 0.96 ) }
    dend_8 { pt3dadd( 47.0485, 138.352, -5.22813, 0.96 ) }
    dend_8 { pt3dadd( 46.5893, 140.272, -6.36515, 0.81 ) }
    dend_8 { pt3dadd( 46.4065, 141.223, -6.99106, 0.59 ) }
    dend_8 { pt3dadd( 46.3942, 141.305, -7.05215, 0.59 ) }
    dend_8 { pt3dadd( 46.2492, 142.597, -8.07669, 0.44 ) }
    dend_8 { pt3dadd( 46.2428, 142.669, -8.13005, 0.44 ) }
    dend_8 { pt3dadd( 46.1741, 143.757, -8.80765, 0.37 ) }
    dend_8 { pt3dadd( 46.1693, 144.788, -9.25063, 0.37 ) }
    dend_8 { pt3dadd( 46.1719, 144.862, -9.27811, 0.37 ) }
    dend_8 { pt3dadd( 46.2697, 145.913, -9.56255, 0.96 ) }
    dend_8 { pt3dadd( 46.4366, 147.011, -9.72365, 1.18 ) }
    dend_8 { pt3dadd( 46.5742, 147.574, -9.77091, 1.18 ) }
    dend_8 { pt3dadd( 46.8031, 148.25, -9.76277, 0.59 ) }
    dend_8 { pt3dadd( 46.914, 148.471, -9.7761, 0.59 ) }
    dend_8 { pt3dadd( 47.4097, 149.264, -9.85269, 0.59 ) }
    dend_8 { pt3dadd( 47.4629, 149.335, -9.86224, 0.59 ) }
    dend_8 { pt3dadd( 48.2127, 150.317, -10.0844, 0.59 ) }
    dend_8 { pt3dadd( 48.3555, 150.511, -10.1363, 0.59 ) }
    dend_8 { pt3dadd( 49.5093, 152.261, -10.8099, 0.59 ) }
    dend_8 { pt3dadd( 49.5887, 152.396, -10.8705, 0.59 ) }
    dend_8 { pt3dadd( 49.9418, 153.059, -11.1978, 0.96 ) }
    dend_8 { pt3dadd( 50.3605, 153.906, -11.6372, 1.18 ) }
    dend_8 { pt3dadd( 50.6297, 154.474, -11.9374, 1.18 ) }
    dend_8 { pt3dadd( 51.3237, 155.865, -12.6615, 0.44 ) }
    dend_8 { pt3dadd( 51.3564, 155.93, -12.6921, 0.44 ) }
    dend_8 { pt3dadd( 51.7198, 156.659, -13.0265, 0.44 ) }
    dend_8 { pt3dadd( 51.7517, 156.726, -13.052, 0.44 ) }
    dend_8 { pt3dadd( 52.2837, 157.856, -13.3885, 0.44 ) }
    dend_8 { pt3dadd( 52.4075, 158.155, -13.4348, 1.33 ) }
    dend_8 { pt3dadd( 52.6108, 158.716, -13.4524, 1.33 ) }
    dend_8 { pt3dadd( 52.956, 159.872, -13.5263, 0.52 ) }
    dend_8 { pt3dadd( 53.1874, 160.895, -13.5948, 0.52 ) }
    dend_8 { pt3dadd( 53.2174, 161.069, -13.6047, 0.52 ) }
    dend_8 { pt3dadd( 53.4615, 163.205, -13.7069, 0.52 ) }
    dend_8 { pt3dadd( 53.5579, 164.439, -13.7503, 0.52 ) }
    dend_8 { pt3dadd( 53.639, 165.816, -13.7696, 1.25 ) }
    dend_8 { pt3dadd( 53.6892, 166.902, -13.7521, 1.62 ) }
    dend_8 { pt3dadd( 53.7238, 167.59, -13.7083, 1.62 ) }
    dend_8 { pt3dadd( 53.7904, 168.695, -13.5892, 0.59 ) }
    dend_8 { pt3dadd( 53.8446, 169.446, -13.4601, 0.44 ) }
    dend_8 { pt3dadd( 53.9673, 170.441, -13.2029, 0.44 ) }
    dend_8 { pt3dadd( 54.0288, 170.782, -13.0882, 0.44 ) }
    dend_8 { pt3dadd( 54.4391, 172.736, -12.4163, 0.44 ) }
    dend_8 { pt3dadd( 54.4631, 172.839, -12.3799, 0.44 ) }
    dend_8 { pt3dadd( 54.749, 174.075, -11.9974, 1.03 ) }
    dend_8 { pt3dadd( 54.964, 175.045, -11.7433, 1.62 ) }
    dend_8 { pt3dadd( 55.1063, 175.922, -11.5699, 1.62 ) }
    dend_8 { pt3dadd( 55.2142, 176.817, -11.452, 0.88 ) }
    dend_8 { pt3dadd( 55.2191, 176.896, -11.4495, 0.88 ) }
    dend_8 { pt3dadd( 55.2906, 178.564, -11.4278, 0.66 ) }
    dend_8 { pt3dadd( 55.2902, 178.655, -11.4359, 0.66 ) }
    dend_8 { pt3dadd( 55.2186, 180.281, -11.7015, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_8 { pt3dadd( 55.2054, 180.447, -11.7337, 0.59 ) }
    dend_8 { pt3dadd( 55.0959, 181.649, -11.9642, 0.96 ) }
    dend_8 { pt3dadd( 54.9968, 182.626, -12.1415, 0.96 ) }
    dend_8 { pt3dadd( 54.8383, 184.344, -12.4524, 0.59 ) }
    dend_8 { pt3dadd( 54.8344, 184.422, -12.4674, 0.59 ) }
    dend_8 { pt3dadd( 54.8445, 185.142, -12.6167, 0.52 ) }
    dend_8 { pt3dadd( 54.9332, 186.035, -12.7913, 0.52 ) }
    dend_8 { pt3dadd( 54.9901, 186.377, -12.8462, 0.52 ) }
    dend_8 { pt3dadd( 55.238, 187.551, -12.9908, 0.81 ) }
    dend_8 { pt3dadd( 55.4462, 188.454, -13.0371, 1.33 ) }
    dend_8 { pt3dadd( 55.631, 189.282, -13.0793, 1.33 ) }
    dend_8 { pt3dadd( 55.8843, 190.514, -13.1373, 0.44 ) }
    dend_8 { pt3dadd( 55.9819, 191.185, -13.1557, 0.44 ) }
    dend_8 { pt3dadd( 55.9863, 191.264, -13.153, 0.44 ) }
    dend_8 { pt3dadd( 55.9708, 192.013, -13.1078, 0.44 ) }
    dend_8 { pt3dadd( 55.9635, 192.171, -13.098, 0.44 ) }
    dend_8 { pt3dadd( 55.9263, 192.876, -13.0493, 0.44 ) }
    dend_8 { pt3dadd( 55.9403, 193.326, -13.0142, 0.44 ) }
    dend_8 { pt3dadd( 56.108, 194.481, -12.9677, 0.44 ) }
    dend_8 { pt3dadd( 56.3291, 195.374, -13.0089, 0.74 ) }
    dend_8 { pt3dadd( 56.5461, 195.998, -13.0903, 0.96 ) }
    dend_8 { pt3dadd( 56.5792, 196.081, -13.1054, 0.96 ) }
    dend_8 { pt3dadd( 56.9505, 196.864, -13.2879, 0.96 ) }
    dend_8 { pt3dadd( 57.0221, 197.013, -13.3229, 0.96 ) }
    dend_8 { pt3dadd( 57.4952, 198.041, -13.5355, 0.44 ) }
    dend_8 { pt3dadd( 57.5254, 198.113, -13.5441, 0.44 ) }
    dend_8 { pt3dadd( 57.8563, 198.997, -13.6055, 0.37 ) }
    dend_8 { pt3dadd( 58.0449, 199.498, -13.6153, 0.96 ) }
    dend_8 { pt3dadd( 58.4435, 200.56, -13.5917, 1.03 ) }
    dend_8 { pt3dadd( 58.8619, 201.52, -13.5374, 0.74 ) }
    dend_8 { pt3dadd( 59.1519, 202.113, -13.4776, 0.52 ) }
    dend_8 { pt3dadd( 59.618, 202.931, -13.3965, 0.44 ) }
    dend_8 { pt3dadd( 60.205, 203.805, -13.3124, 0.44 ) }
    dend_8 { pt3dadd( 60.3522, 203.982, -13.3068, 0.44 ) }
    dend_8 { pt3dadd( 61.1908, 204.756, -13.36, 0.44 ) }
    dend_8 { pt3dadd( 61.2539, 204.814, -13.3838, 0.44 ) }
    dend_8 { pt3dadd( 61.7248, 205.332, -13.7186, 0.44 ) }
    dend_8 { pt3dadd( 61.7622, 205.389, -13.7573, 0.44 ) }
    dend_8 { pt3dadd( 62.1491, 206.457, -14.4217, 0.44 ) }
    dend_8 { pt3dadd( 62.1595, 206.526, -14.4569, 0.44 ) }
    dend_8 { pt3dadd( 62.2299, 208.725, -15.5372, 1.11 ) }
    dend_8 { pt3dadd( 62.2434, 209.501, -15.8988, 1.55 ) }
    dend_8 { pt3dadd( 62.2339, 210.482, -16.3216, 1.55 ) }
    dend_8 { pt3dadd( 62.2294, 211.86, -16.8691, 0.66 ) }
    dend_8 { pt3dadd( 62.2157, 213.504, -17.4596, 0.66 ) }
    dend_8 { pt3dadd( 62.2593, 214.905, -17.9289, 0.44 ) }
    dend_8 { pt3dadd( 62.3802, 216.128, -18.278, 0.44 ) }
    dend_8 { pt3dadd( 62.4463, 216.546, -18.4286, 0.44 ) }
    dend_8 { pt3dadd( 62.7112, 217.365, -18.7766, 0.44 ) }
    dend_8 { pt3dadd( 62.7464, 217.429, -18.8056, 0.44 ) }
    dend_8 { pt3dadd( 62.9899, 217.756, -18.9867, 0.88 ) }
    dend_8 { pt3dadd( 63.3169, 218.18, -19.2198, 0.88 ) }
    dend_8 { pt3dadd( 64.0321, 219.186, -19.9125, 0.37 ) }
    dend_8 { pt3dadd( 64.7529, 220.273, -20.6876, 0.37 ) }
    dend_8 { pt3dadd( 64.7921, 220.34, -20.7324, 0.37 ) }
    dend_8 { pt3dadd( 65.3936, 221.443, -21.4205, 1.18 ) }
    dend_8 { pt3dadd( 65.752, 222.152, -21.8313, 1.55 ) }
    dend_8 { pt3dadd( 66.274, 223.275, -22.3939, 0.52 ) }
    dend_8 { pt3dadd( 66.6294, 224.104, -22.7125, 0.52 ) }
    dend_8 { pt3dadd( 66.9294, 224.893, -22.9728, 0.52 ) }
    dend_8 { pt3dadd( 66.9977, 225.068, -23.009, 1.03 ) }
    dend_8 { pt3dadd( 67.0973, 225.308, -23.0294, 1.03 ) }
    dend_8 { pt3dadd( 67.3693, 225.935, -22.9951, 0.52 ) }
    dend_8 { pt3dadd( 67.5682, 226.39, -22.9099, 0.37 ) }
    dend_8 { pt3dadd( 67.8763, 227.098, -22.7494, 0.29 ) }
    dend_8 { pt3dadd( 68.4315, 228.357, -22.4298, 0.29 ) }
    dend_8 { pt3dadd( 68.6557, 228.895, -22.2838, 0.88 ) }
    dend_8 { pt3dadd( 69.1345, 230.144, -21.9823, 0.88 ) }
    dend_8 { pt3dadd( 69.3571, 230.78, -21.8422, 0.52 ) }
    dend_8 { pt3dadd( 69.5386, 231.42, -21.7593, 0.37 ) }
    dend_8 { pt3dadd( 69.5642, 231.529, -21.7569, 0.37 ) }
    dend_8 { pt3dadd( 69.8585, 232.915, -21.8817, 0.37 ) }
    dend_8 { pt3dadd( 70.0785, 234.007, -22.0702, 1.11 ) }
    dend_8 { pt3dadd( 70.2332, 234.788, -22.2756, 1.11 ) }
    dend_8 { pt3dadd( 70.5377, 236.246, -22.7115, 0.37 ) }
    dend_8 { pt3dadd( 70.6951, 236.909, -22.9296, 0.15 ) }
    dend_8 { pt3dadd( 70.9209, 237.674, -23.1946, 0.15 ) }
    dend_8 { pt3dadd( 70.9484, 237.742, -23.2218, 0.15 ) }
    dend_8 { pt3dadd( 71.297, 238.316, -23.4274, 0.15 ) }
    dend_8 { pt3dadd( 71.3687, 238.397, -23.4528, 0.15 ) }
    dend_8 { pt3dadd( 71.8034, 238.735, -23.4966, 0.15 ) }
    dend_8 { pt3dadd( 72.2536, 239.015, -23.516, 0.74 ) }
    dend_8 { pt3dadd( 72.453, 239.126, -23.5179, 0.74 ) }
    dend_8 { pt3dadd( 73.3019, 239.575, -23.514, 0.74 ) }
    dend_8 { pt3dadd( 73.7252, 239.785, -23.5065, 0.74 ) }
    dend_8 { pt3dadd( 74.3307, 240.123, -23.482, 0.22 ) }
    dend_8 { pt3dadd( 74.6848, 240.343, -23.4605, 0.15 ) }
    dend_8 { pt3dadd( 75.2838, 240.795, -23.5003, 0.15 ) }
    dend_8 { pt3dadd( 75.3489, 240.855, -23.513, 0.15 ) }
    dend_8 { pt3dadd( 75.5387, 241.061, -23.5798, 0.81 ) }
    dend_8 { pt3dadd( 76.1174, 241.677, -23.8434, 1.03 ) }
    dend_8 { pt3dadd( 76.5346, 242.108, -24.1034, 1.03 ) }
    dend_8 { pt3dadd( 77.5063, 243.072, -24.7567, 0.37 ) }
    dend_8 { pt3dadd( 77.8053, 243.378, -24.9734, 0.37 ) }
    dend_8 { pt3dadd( 77.8566, 243.437, -25.0166, 0.37 ) }
    dend_8 { pt3dadd( 78.5924, 244.343, -25.7025, 0.37 ) }
    dend_8 { pt3dadd( 79.3624, 245.422, -26.5861, 0.37 ) }
    dend_8 { pt3dadd( 79.6854, 245.919, -26.9846, 0.74 ) }
    dend_8 { pt3dadd( 80.0923, 246.575, -27.4868, 1.33 ) }
    dend_8 { pt3dadd( 80.7677, 247.666, -28.3504, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_8 { pt3dadd( 80.8009, 247.72, -28.3961, 0.66 ) }
    dend_8 { pt3dadd( 81.4885, 248.855, -29.384, 0.37 ) }
    dend_8 { pt3dadd( 81.798, 249.333, -29.7837, 0.37 ) }
    dend_8 { pt3dadd( 81.8415, 249.391, -29.8349, 0.37 ) }
    dend_8 { pt3dadd( 82.4782, 250.103, -30.4679, 0.37 ) }
    dend_8 { pt3dadd( 83.2749, 250.907, -31.0976, 0.74 ) }
    dend_8 { pt3dadd( 83.8503, 251.523, -31.4903, 0.74 ) }
    dend_8 { pt3dadd( 84.2583, 251.989, -31.6928, 0.07 ) }
    dend_8 { pt3dadd( 84.4282, 252.257, -31.7624, 0.37 ) }
    dend_8 { pt3dadd( 84.4624, 252.328, -31.771, 0.37 ) }
    dend_8 { pt3dadd( 84.6625, 252.885, -31.7556, 0.37 ) }
    dend_8 { pt3dadd( 84.8824, 253.501, -31.6606, 0.37 ) }
    dend_8 { pt3dadd( 84.9126, 253.573, -31.6496, 0.37 ) }
    dend_8 { pt3dadd( 85.4983, 254.763, -31.4848, 0.37 ) }
    dend_8 { pt3dadd( 85.5375, 254.845, -31.4837, 0.37 ) }
    dend_8 { pt3dadd( 85.8027, 255.373, -31.535, 1.03 ) }
    dend_8 { pt3dadd( 85.8585, 255.476, -31.5579, 1.03 ) }
    dend_8 { pt3dadd( 86.3747, 256.337, -31.8516, 1.03 ) }
    dend_8 { pt3dadd( 86.4085, 256.39, -31.8749, 1.03 ) }
    dend_8 { pt3dadd( 87.1047, 257.434, -32.4839, 0.44 ) }
    dend_8 { pt3dadd( 87.1562, 257.522, -32.5288, 0.44 ) }
    dend_8 { pt3dadd( 87.3801, 257.95, -32.7326, 0.44 ) }
    dend_8 { pt3dadd( 87.5364, 258.313, -32.8568, 0.44 ) }
    dend_8 { pt3dadd( 87.6366, 258.59, -32.919, 0.44 ) }
    dend_8 { pt3dadd( 87.6663, 258.674, -32.9361, 0.44 ) }
    dend_8 { pt3dadd( 87.9884, 259.511, -33.0611, 0.44 ) }
    dend_8 { pt3dadd( 88.0122, 259.586, -33.073, 0.44 ) }
    dend_8 { pt3dadd( 88.2194, 260.297, -33.1722, 0.44 ) }
    dend_8 { pt3dadd( 88.2418, 260.373, -33.18, 0.44 ) }
    dend_8 { pt3dadd( 88.6149, 261.555, -33.2824, 0.74 ) }
    dend_8 { pt3dadd( 88.9043, 262.332, -33.3384, 1.25 ) }
    dend_8 { pt3dadd( 89.3021, 263.241, -33.352, 1.25 ) }
    dend_8 { pt3dadd( 89.5145, 263.727, -33.3247, 0.59 ) }
    dend_8 { pt3dadd( 89.9089, 264.602, -33.2546, 0.59 ) }
    dend_8 { pt3dadd( 89.9416, 264.673, -33.2452, 0.59 ) }
    dend_8 { pt3dadd( 90.3312, 265.506, -33.0808, 0.59 ) }
    dend_8 { pt3dadd( 90.659, 266.197, -32.9453, 0.29 ) }
    dend_8 { pt3dadd( 90.9486, 266.77, -32.8445, 0.29 ) }
    dend_8 { pt3dadd( 91.52, 267.943, -32.6697, 0.29 ) }
    dend_8 { pt3dadd( 92.1434, 269.268, -32.4936, 0.29 ) }
    dend_8 { pt3dadd( 92.1763, 269.339, -32.4861, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 41/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 44.796, 96.058, 6.41012, 0.52 ) }
    dend_7 { pt3dadd( 45.2302, 96.2259, 6.39788, 0.52 ) }
    dend_7 { pt3dadd( 45.3804, 96.2676, 6.38002, 0.52 ) }
    dend_7 { pt3dadd( 45.511, 96.3004, 6.36183, 0.52 ) }
    dend_7 { pt3dadd( 45.686, 96.3278, 6.34906, 0.52 ) }
    dend_7 { pt3dadd( 46.6701, 96.451, 6.29444, 0.52 ) }
    dend_7 { pt3dadd( 46.8256, 96.469, 6.28691, 0.52 ) }
    dend_7 { pt3dadd( 47.8931, 96.5831, 6.21611, 0.52 ) }
    dend_7 { pt3dadd( 47.9759, 96.5938, 6.21144, 0.52 ) }
    dend_7 { pt3dadd( 49.3494, 96.799, 6.14448, 0.52 ) }
    dend_7 { pt3dadd( 49.5038, 96.8247, 6.13785, 0.52 ) }
    dend_7 { pt3dadd( 49.6732, 96.8592, 6.13047, 0.96 ) }
    dend_7 { pt3dadd( 49.7444, 96.8761, 6.13361, 0.96 ) }
    dend_7 { pt3dadd( 50.3782, 97.0487, 6.18983, 0.37 ) }
    dend_7 { pt3dadd( 50.4576, 97.0742, 6.19805, 0.37 ) }
    dend_7 { pt3dadd( 51.4016, 97.4402, 6.29017, 0.37 ) }
    dend_7 { pt3dadd( 52.1503, 97.7267, 6.39992, 0.37 ) }
    dend_7 { pt3dadd( 54.3446, 98.5559, 6.78227, 0.37 ) }
    dend_7 { pt3dadd( 54.6034, 98.6496, 6.82827, 0.74 ) }
    dend_7 { pt3dadd( 55.1452, 98.8321, 6.93597, 0.59 ) }
    dend_7 { pt3dadd( 56.5197, 99.2967, 7.23951, 0.44 ) }
    dend_7 { pt3dadd( 57.8304, 99.7708, 7.56327, 0.44 ) }
    dend_7 { pt3dadd( 57.9318, 99.8094, 7.5888, 0.44 ) }
    dend_7 { pt3dadd( 58.8082, 100.094, 7.97302, 0.44 ) }
    dend_7 { pt3dadd( 59.4687, 100.271, 8.32403, 0.81 ) }
    dend_7 { pt3dadd( 59.6012, 100.301, 8.40268, 0.81 ) }
    dend_7 { pt3dadd( 60.3225, 100.442, 8.874, 0.81 ) }
    dend_7 { pt3dadd( 60.3832, 100.454, 8.91347, 0.81 ) }
    dend_7 { pt3dadd( 63.3269, 101.123, 10.9517, 0.37 ) }
    dend_7 { pt3dadd( 64.6496, 101.469, 11.942, 0.37 ) }
    dend_7 { pt3dadd( 64.7881, 101.508, 12.0467, 0.37 ) }
    dend_7 { pt3dadd( 65.3842, 101.688, 12.5022, 0.88 ) }
    dend_7 { pt3dadd( 65.6087, 101.766, 12.692, 1.18 ) }
    dend_7 { pt3dadd( 66.4833, 102.207, 13.4895, 0.44 ) }
    dend_7 { pt3dadd( 66.5472, 102.268, 13.559, 0.44 ) }
    dend_7 { pt3dadd( 66.5974, 102.33, 13.6477, 0.44 ) }
    dend_7 { pt3dadd( 66.8307, 102.669, 14.1422, 0.44 ) }
    dend_7 { pt3dadd( 67.1541, 103.298, 15.0765, 0.59 ) }
    dend_7 { pt3dadd( 67.2884, 103.574, 15.5409, 0.59 ) }
    dend_7 { pt3dadd( 67.4173, 103.78, 16.0144, 0.59 ) }
    dend_7 { pt3dadd( 76.7529, 107.517, 18.9992, 0.59 ) }
    dend_7 { pt3dadd( 85.2717, 111.908, 23.3163, 0.59 ) }
    dend_7 { pt3dadd( 92.6459, 117.981, 27.8137, 0.59 ) }
    dend_7 { pt3dadd( 100.67, 123.448, 31.9101, 0.59 ) }
    dend_7 { pt3dadd( 107.793, 130.223, 35.8104, 0.59 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 86/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -73.778, 56.3404, -135.353, 0.37 ) }
    dend_4 { pt3dadd( -72.8296, 57.141, -135.455, 0.37 ) }
    dend_4 { pt3dadd( -72.7941, 57.1641, -135.462, 0.37 ) }
    dend_4 { pt3dadd( -72.0704, 57.6191, -135.599, 0.37 ) }
    dend_4 { pt3dadd( -71.1619, 58.1832, -135.771, 0.37 ) }
    dend_4 { pt3dadd( -71.1208, 58.2087, -135.779, 0.37 ) }
    dend_4 { pt3dadd( -69.3287, 59.3216, -136.118, 0.29 ) }
    dend_4 { pt3dadd( -65.13, 61.8729, -136.778, 0.29 ) }
    dend_4 { pt3dadd( -64.7336, 62.1103, -136.843, 1.18 ) }
    dend_4 { pt3dadd( -64.6971, 62.1317, -136.85, 1.18 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 96/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -73.778, 56.3404, -135.353, 0.52 ) }
    dend_3 { pt3dadd( -74.9273, 57.6144, -136.997, 0.52 ) }
    dend_3 { pt3dadd( -74.9773, 57.6699, -137.077, 0.52 ) }
    dend_3 { pt3dadd( -76.7174, 59.5894, -139.718, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( -77.7247, 60.6977, -141.213, 0.37 ) }
    dend_3 { pt3dadd( -78.1303, 61.1473, -141.828, 0.37 ) }
    dend_3 { pt3dadd( -79.614, 62.8097, -144.101, 0.37 ) }
    dend_3 { pt3dadd( -81.0623, 64.4867, -146.538, 0.37 ) }
    dend_3 { pt3dadd( -82.0512, 65.6424, -148.121, 0.37 ) }
    dend_3 { pt3dadd( -82.0802, 65.6763, -148.164, 0.37 ) }
    dend_3 { pt3dadd( -82.9289, 66.7187, -149.591, 0.59 ) }
    dend_3 { pt3dadd( -83.2374, 67.1197, -150.166, 0.59 ) }
    dend_3 { pt3dadd( -84.4284, 68.7154, -152.462, 0.37 ) }
    dend_3 { pt3dadd( -85.1537, 69.6586, -153.79, 0.37 ) }
    dend_3 { pt3dadd( -85.1842, 69.6934, -153.846, 0.37 ) }
    dend_3 { pt3dadd( -86.4652, 70.9472, -155.892, 0.37 ) }
    dend_3 { pt3dadd( -86.5451, 71.011, -156.008, 0.37 ) }
    dend_3 { pt3dadd( -87.0277, 71.3249, -156.687, 0.37 ) }
    dend_3 { pt3dadd( -87.1377, 71.3782, -156.812, 0.37 ) }
    dend_3 { pt3dadd( -88.1627, 71.8424, -157.922, 0.37 ) }
    dend_3 { pt3dadd( -88.2617, 71.8929, -158.029, 0.37 ) }
    dend_3 { pt3dadd( -90.1174, 72.898, -159.92, 0.37 ) }
    dend_3 { pt3dadd( -90.2286, 72.9736, -160.048, 0.37 ) }
    dend_3 { pt3dadd( -91.1657, 73.7346, -161.143, 0.37 ) }
    dend_3 { pt3dadd( -91.288, 73.8487, -161.274, 0.37 ) }
    dend_3 { pt3dadd( -92.6558, 75.2656, -162.659, 0.37 ) }
    dend_3 { pt3dadd( -92.6944, 75.3095, -162.702, 0.37 ) }
    dend_3 { pt3dadd( -94.3884, 77.3393, -164.644, 0.37 ) }
    dend_3 { pt3dadd( -95.0604, 78.191, -165.463, 0.37 ) }
    dend_3 { pt3dadd( -96.006, 79.4533, -166.688, 0.37 ) }
    dend_3 { pt3dadd( -96.0746, 79.547, -166.775, 0.37 ) }
    dend_3 { pt3dadd( -98.2212, 82.578, -169.349, 0.15 ) }
    dend_3 { pt3dadd( -98.2537, 82.6266, -169.392, 0.15 ) }
    dend_3 { pt3dadd( -98.6418, 83.326, -170.112, 0.15 ) }
    // Section: dend_150, id: dend_150, parent: dend_148 (entry count 30/100)
    dend_150 { pt3dclear() }
    dend_150 { pt3dadd( -41.1554, -38.9598, -45.916, 0.29 ) }
    dend_150 { pt3dadd( -41.1625, -40.1106, -47.1685, 0.29 ) }
    dend_150 { pt3dadd( -41.1727, -40.1494, -47.2317, 0.29 ) }
    dend_150 { pt3dadd( -41.501, -40.7923, -48.399, 0.29 ) }
    dend_150 { pt3dadd( -41.5206, -40.8266, -48.4624, 0.29 ) }
    dend_150 { pt3dadd( -42.1096, -41.9137, -50.342, 0.29 ) }
    dend_150 { pt3dadd( -42.1354, -41.9621, -50.4239, 0.29 ) }
    dend_150 { pt3dadd( -43.255, -44.1048, -53.5732, 0.29 ) }
    dend_150 { pt3dadd( -44.4983, -46.5304, -56.8336, 0.29 ) }
    dend_150 { pt3dadd( -44.5652, -46.6616, -56.9946, 0.29 ) }
    dend_150 { pt3dadd( -45.9536, -49.4306, -60.188, 0.29 ) }
    dend_150 { pt3dadd( -45.9728, -49.4726, -60.2329, 0.29 ) }
    dend_150 { pt3dadd( -47.5899, -53.3569, -64.1722, 0.29 ) }
    dend_150 { pt3dadd( -47.6261, -53.4527, -64.2673, 0.29 ) }
    dend_150 { pt3dadd( -48.7679, -56.6289, -67.4883, 0.29 ) }
    dend_150 { pt3dadd( -48.7819, -56.6705, -67.5355, 0.29 ) }
    dend_150 { pt3dadd( -50.1765, -61.0258, -72.9854, 0.29 ) }
    dend_150 { pt3dadd( -50.2003, -61.1001, -73.0876, 0.29 ) }
    dend_150 { pt3dadd( -50.7989, -62.9782, -75.9447, 0.29 ) }
    dend_150 { pt3dadd( -50.8156, -63.0261, -76.0138, 0.29 ) }
    dend_150 { pt3dadd( -52.2924, -67.0357, -81.6091, 0.29 ) }
    dend_150 { pt3dadd( -52.3221, -67.1139, -81.707, 0.29 ) }
    dend_150 { pt3dadd( -53.3346, -69.5606, -84.6541, 0.29 ) }
    dend_150 { pt3dadd( -53.7514, -70.5584, -85.7709, 0.29 ) }
    dend_150 { pt3dadd( -54.7503, -72.9043, -88.0139, 0.29 ) }
    dend_150 { pt3dadd( -54.7751, -72.9587, -88.0598, 0.29 ) }
    dend_150 { pt3dadd( -55.8842, -74.9675, -88.9991, 0.29 ) }
    // Section: dend_149, id: dend_149, parent: dend_148 (entry count 57/100)
    dend_149 { pt3dclear() }
    dend_149 { pt3dadd( -41.1554, -38.9598, -45.916, 0.29 ) }
    dend_149 { pt3dadd( -41.3692, -38.6877, -46.2991, 0.29 ) }
    dend_149 { pt3dadd( -41.9222, -38.1265, -47.1619, 0.29 ) }
    dend_149 { pt3dadd( -42.5972, -37.506, -48.1301, 0.29 ) }
    dend_149 { pt3dadd( -43.442, -36.7629, -49.1778, 0.29 ) }
    dend_149 { pt3dadd( -43.5904, -36.6423, -49.3733, 0.29 ) }
    dend_149 { pt3dadd( -43.7926, -36.4853, -49.6413, 0.29 ) }
    dend_149 { pt3dadd( -44.6812, -35.8259, -50.8467, 0.29 ) }
    dend_149 { pt3dadd( -44.8203, -35.7387, -51.0493, 0.29 ) }
    dend_149 { pt3dadd( -45.3908, -35.4227, -51.8671, 0.29 ) }
    dend_149 { pt3dadd( -46.7485, -34.7073, -53.872, 0.29 ) }
    dend_149 { pt3dadd( -46.8616, -34.6452, -54.0671, 0.29 ) }
    dend_149 { pt3dadd( -46.999, -34.5642, -54.3209, 0.29 ) }
    dend_149 { pt3dadd( -47.8861, -34.0243, -56.4538, 0.29 ) }
    dend_149 { pt3dadd( -48.4236, -33.6935, -57.949, 0.44 ) }
    dend_149 { pt3dadd( -48.445, -33.6801, -58.0142, 0.44 ) }
    dend_149 { pt3dadd( -48.9959, -33.3108, -59.7234, 0.29 ) }
    dend_149 { pt3dadd( -49.2832, -33.1128, -60.5948, 0.29 ) }
    dend_149 { pt3dadd( -50.7662, -32.0664, -65.0011, 0.29 ) }
    dend_149 { pt3dadd( -50.7895, -32.0505, -65.0651, 0.29 ) }
    dend_149 { pt3dadd( -50.9586, -31.9472, -65.482, 0.22 ) }
    dend_149 { pt3dadd( -51.1037, -31.8679, -65.7733, 0.29 ) }
    dend_149 { pt3dadd( -51.5865, -31.6552, -66.4524, 0.29 ) }
    dend_149 { pt3dadd( -51.676, -31.6217, -66.5543, 0.29 ) }
    dend_149 { pt3dadd( -52.1966, -31.4371, -66.8808, 0.29 ) }
    dend_149 { pt3dadd( -52.7405, -31.245, -67.1954, 0.29 ) }
    dend_149 { pt3dadd( -54.6044, -30.6622, -68.2127, 0.29 ) }
    dend_149 { pt3dadd( -55.5759, -30.386, -68.7142, 0.29 ) }
    dend_149 { pt3dadd( -55.9042, -30.3042, -68.8928, 0.29 ) }
    dend_149 { pt3dadd( -56.9065, -30.0569, -69.394, 0.29 ) }
    dend_149 { pt3dadd( -58.0176, -29.7654, -69.9758, 0.29 ) }
    dend_149 { pt3dadd( -58.5616, -29.6117, -70.2524, 0.29 ) }
    dend_149 { pt3dadd( -58.7676, -29.5543, -70.3362, 0.29 ) }
    dend_149 { pt3dadd( -59.881, -29.2447, -70.7959, 0.29 ) }
    dend_149 { pt3dadd( -61.203, -28.8783, -71.2635, 0.29 ) }
    dend_149 { pt3dadd( -62.616, -28.4925, -71.7298, 0.29 ) }
    dend_149 { pt3dadd( -63.5421, -28.2232, -72.1343, 0.29 ) }
    dend_149 { pt3dadd( -65.1547, -27.7613, -72.9123, 0.29 ) }
    dend_149 { pt3dadd( -65.273, -27.733, -72.9813, 0.29 ) }
    dend_149 { pt3dadd( -67.4363, -27.3393, -74.2845, 0.29 ) }
    dend_149 { pt3dadd( -67.6201, -27.3171, -74.4023, 0.29 ) }
    dend_149 { pt3dadd( -70.2751, -27.1164, -76.1127, 0.29 ) }
    dend_149 { pt3dadd( -71.2878, -27.0652, -76.789, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_149 { pt3dadd( -73.348, -26.9529, -78.0781, 0.29 ) }
    dend_149 { pt3dadd( -75.153, -26.8563, -79.0582, 0.29 ) }
    dend_149 { pt3dadd( -75.8305, -26.8233, -79.3678, 0.29 ) }
    dend_149 { pt3dadd( -76.2541, -26.8024, -79.4953, 0.29 ) }
    dend_149 { pt3dadd( -77.5171, -26.738, -79.7066, 0.29 ) }
    dend_149 { pt3dadd( -80.0775, -26.5653, -79.9875, 0.29 ) }
    dend_149 { pt3dadd( -81.7531, -26.4344, -80.0759, 0.29 ) }
    dend_149 { pt3dadd( -82.7156, -26.3583, -80.1792, 0.29 ) }
    dend_149 { pt3dadd( -85.5775, -26.133, -80.5993, 0.29 ) }
    dend_149 { pt3dadd( -85.7927, -26.1172, -80.6392, 0.29 ) }
    dend_149 { pt3dadd( -88.3826, -25.9278, -81.2139, 0.29 ) }
    dend_149 { pt3dadd( -89.0868, -25.8521, -81.4398, 0.29 ) }
    dend_149 { pt3dadd( -91.4147, -25.4954, -82.3802, 0.29 ) }
    dend_149 { pt3dadd( -91.8712, -25.3937, -82.5965, 0.29 ) }
    dend_149 { pt3dadd( -92.705, -25.1467, -83.0484, 0.29 ) }
    dend_149 { pt3dadd( -94.3758, -24.6081, -83.9537, 0.29 ) }
    dend_149 { pt3dadd( -96.5838, -23.7936, -85.1539, 0.29 ) }
    dend_149 { pt3dadd( -96.6436, -23.7699, -85.1816, 0.29 ) }
    dend_149 { pt3dadd( -98.2693, -23.0752, -85.709, 0.29 ) }
    dend_149 { pt3dadd( -98.6576, -22.9009, -85.8424, 0.29 ) }
    dend_149 { pt3dadd( -98.9772, -22.75, -85.9534, 0.29 ) }
    dend_149 { pt3dadd( -99.4234, -22.5371, -86.1043, 0.29 ) }
    dend_149 { pt3dadd( -100.078, -22.2429, -86.2679, 0.29 ) }
    dend_149 { pt3dadd( -101.095, -21.7906, -86.5599, 0.29 ) }
    dend_149 { pt3dadd( -102.633, -21.1275, -87.0696, 0.22 ) }
    dend_149 { pt3dadd( -102.694, -21.1009, -87.0902, 0.22 ) }
    dend_149 { pt3dadd( -102.783, -21.0677, -87.1172, 0.29 ) }
    dend_149 { pt3dadd( -102.931, -21.0312, -87.1542, 0.29 ) }
    dend_149 { pt3dadd( -103.461, -20.9568, -87.2552, 0.29 ) }
    dend_149 { pt3dadd( -104.394, -20.9756, -87.3329, 0.29 ) }
    dend_149 { pt3dadd( -104.474, -20.9828, -87.333, 0.29 ) }
    dend_149 { pt3dadd( -105.64, -21.1416, -87.361, 0.29 ) }
    dend_149 { pt3dadd( -106.421, -21.2675, -87.3868, 0.29 ) }
    dend_149 { pt3dadd( -106.489, -21.2809, -87.3896, 0.29 ) }
    dend_149 { pt3dadd( -108.35, -21.6902, -87.4812, 0.29 ) }
    dend_149 { pt3dadd( -108.428, -21.7065, -87.4909, 0.29 ) }
    dend_149 { pt3dadd( -110.323, -22.0573, -87.8239, 0.29 ) }
    dend_149 { pt3dadd( -110.759, -22.1154, -87.9159, 0.29 ) }
    dend_149 { pt3dadd( -111.324, -22.1457, -88.0808, 0.29 ) }
    dend_149 { pt3dadd( -111.747, -22.1423, -88.2241, 0.29 ) }
    dend_149 { pt3dadd( -113.918, -22.0003, -89.0139, 0.29 ) }
    dend_149 { pt3dadd( -114.011, -21.9918, -89.0477, 0.29 ) }
    dend_149 { pt3dadd( -116.151, -21.7666, -89.8298, 0.29 ) }
    dend_149 { pt3dadd( -117.793, -21.5962, -90.403, 0.29 ) }
    dend_149 { pt3dadd( -118.586, -21.4803, -90.6441, 0.29 ) }
    dend_149 { pt3dadd( -120.201, -21.2078, -91.0534, 0.29 ) }
    dend_149 { pt3dadd( -120.273, -21.1906, -91.0827, 0.29 ) }
    dend_149 { pt3dadd( -121.084, -20.9509, -91.5842, 0.29 ) }
    dend_149 { pt3dadd( -121.258, -20.8928, -91.7292, 0.29 ) }
    dend_149 { pt3dadd( -122.817, -20.3537, -93.1834, 0.29 ) }
    dend_149 { pt3dadd( -122.866, -20.3358, -93.2304, 0.29 ) }
    dend_149 { pt3dadd( -126.857, -18.7651, -97.2784, 0.29 ) }
    dend_149 { pt3dadd( -128.04, -18.3206, -98.3965, 0.29 ) }
    dend_149 { pt3dadd( -129.261, -17.8744, -99.5187, 0.29 ) }
    dend_149 { pt3dadd( -129.424, -17.8182, -99.6718, 0.29 ) }
    dend_149 { pt3dadd( -130.911, -17.3697, -101.111, 0.29 ) }
    dend_149 { pt3dadd( -130.956, -17.357, -101.148, 0.29 ) }
    dend_149 { pt3dadd( -133.134, -16.8931, -101.899, 0.29 ) }
    dend_149 { pt3dadd( -133.295, -16.8633, -101.923, 0.29 ) }
    // Section: dend_143, id: dend_143, parent: dend_140 (entry count 59/100)
    dend_143 { pt3dclear() }
    dend_143 { pt3dadd( -12.4856, -23.3502, -8.32393, 0.66 ) }
    dend_143 { pt3dadd( -13.2921, -24.8141, -6.58672, 0.66 ) }
    dend_143 { pt3dadd( -13.6023, -25.2858, -5.83618, 0.66 ) }
    dend_143 { pt3dadd( -13.6646, -25.3584, -5.71069, 0.66 ) }
    dend_143 { pt3dadd( -14.3385, -26.0598, -4.44551, 0.59 ) }
    dend_143 { pt3dadd( -14.7738, -26.4603, -3.67206, 0.59 ) }
    dend_143 { pt3dadd( -15.6692, -27.2347, -2.20023, 0.59 ) }
    dend_143 { pt3dadd( -16.9262, -28.2318, -0.376286, 0.59 ) }
    dend_143 { pt3dadd( -17.5722, -28.7003, 0.609093, 0.59 ) }
    dend_143 { pt3dadd( -17.6018, -28.7196, 0.653864, 0.59 ) }
    dend_143 { pt3dadd( -18.1711, -29.0615, 1.52325, 0.59 ) }
    dend_143 { pt3dadd( -18.6541, -29.3392, 2.27469, 0.59 ) }
    dend_143 { pt3dadd( -18.6974, -29.3785, 2.35726, 0.59 ) }
    dend_143 { pt3dadd( -18.8536, -30.3631, 3.64266, 0.59 ) }
    dend_143 { pt3dadd( -18.8444, -30.4063, 3.69315, 0.59 ) }
    dend_143 { pt3dadd( -18.6953, -31.0602, 4.43673, 0.59 ) }
    dend_143 { pt3dadd( -18.6882, -31.1066, 4.48481, 0.59 ) }
    dend_143 { pt3dadd( -18.6423, -32.0161, 5.42725, 0.59 ) }
    dend_143 { pt3dadd( -18.7851, -32.6714, 6.03956, 0.59 ) }
    dend_143 { pt3dadd( -18.873, -32.8289, 6.16704, 0.59 ) }
    dend_143 { pt3dadd( -19.7158, -33.8959, 6.9472, 0.74 ) }
    dend_143 { pt3dadd( -20.4785, -34.7213, 7.45354, 0.74 ) }
    dend_143 { pt3dadd( -20.5283, -34.7739, 7.47891, 0.74 ) }
    dend_143 { pt3dadd( -20.9702, -35.2549, 7.63142, 0.44 ) }
    dend_143 { pt3dadd( -21.012, -35.3061, 7.64388, 0.44 ) }
    dend_143 { pt3dadd( -21.4523, -36.1313, 7.81403, 0.44 ) }
    dend_143 { pt3dadd( -21.6778, -36.8644, 7.92943, 0.59 ) }
    dend_143 { pt3dadd( -21.7024, -37.1284, 8.02278, 0.59 ) }
    dend_143 { pt3dadd( -21.6991, -37.8909, 8.40135, 0.59 ) }
    dend_143 { pt3dadd( -21.6783, -38.0123, 8.50227, 0.59 ) }
    dend_143 { pt3dadd( -21.385, -39.0144, 9.56662, 0.44 ) }
    dend_143 { pt3dadd( -21.3524, -39.1044, 9.67378, 0.44 ) }
    dend_143 { pt3dadd( -20.9765, -40.4466, 11.223, 0.44 ) }
    dend_143 { pt3dadd( -20.9667, -40.5044, 11.2891, 0.44 ) }
    dend_143 { pt3dadd( -20.8361, -41.8839, 12.8629, 0.88 ) }
    dend_143 { pt3dadd( -20.8034, -42.3445, 13.3814, 0.88 ) }
    dend_143 { pt3dadd( -20.782, -43.0266, 14.116, 0.59 ) }
    dend_143 { pt3dadd( -20.8554, -44.393, 15.4472, 0.59 ) }
    dend_143 { pt3dadd( -21.0472, -45.3555, 16.1898, 0.96 ) }
    dend_143 { pt3dadd( -21.0677, -45.4355, 16.2447, 0.96 ) }
    // Section: dend_141, id: dend_141, parent: dend_140 (entry count 99/100)
    dend_141 { pt3dclear() }
    dend_141 { pt3dadd( -12.4856, -23.3502, -8.32393, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_141 { pt3dadd( -12.5152, -24.6536, -8.18979, 1.25 ) }
    dend_141 { pt3dadd( -12.5243, -24.882, -8.16715, 1.25 ) }
    dend_141 { pt3dadd( -12.5827, -26.3902, -8.04466, 1.25 ) }
    dend_141 { pt3dadd( -12.6213, -27.9491, -8.01888, 1.25 ) }
    dend_141 { pt3dadd( -12.6241, -28.0631, -8.01959, 1.25 ) }
    dend_141 { pt3dadd( -12.4832, -29.6332, -8.17, 1.11 ) }
    dend_141 { pt3dadd( -12.4659, -29.7307, -8.18045, 1.11 ) }
    dend_141 { pt3dadd( -12.0086, -31.7459, -8.4139, 0.96 ) }
    dend_141 { pt3dadd( -11.2751, -34.3176, -8.78107, 0.88 ) }
    dend_141 { pt3dadd( -11.2384, -34.4239, -8.7972, 0.88 ) }
    dend_141 { pt3dadd( -9.42268, -39.0887, -9.51866, 0.88 ) }
    dend_141 { pt3dadd( -8.27087, -41.5839, -9.89678, 0.88 ) }
    dend_141 { pt3dadd( -8.22639, -41.6721, -9.906, 0.88 ) }
    dend_141 { pt3dadd( -7.47956, -43.0124, -9.98308, 1.33 ) }
    dend_141 { pt3dadd( -6.55327, -44.607, -9.96068, 1.33 ) }
    dend_141 { pt3dadd( -6.48941, -44.7315, -9.95012, 1.33 ) }
    dend_141 { pt3dadd( -5.38501, -47.287, -9.48541, 1.33 ) }
    dend_141 { pt3dadd( -4.74941, -49.1428, -9.23085, 0.96 ) }
    dend_141 { pt3dadd( -4.64046, -49.5373, -9.17995, 0.96 ) }
    dend_141 { pt3dadd( -4.27676, -51.3373, -8.96194, 0.96 ) }
    dend_141 { pt3dadd( -3.95804, -53.92, -8.74071, 0.96 ) }
    dend_141 { pt3dadd( -3.95129, -54.0336, -8.73577, 0.96 ) }
    dend_141 { pt3dadd( -4.0347, -57.3773, -8.77944, 0.96 ) }
    dend_141 { pt3dadd( -4.041, -57.491, -8.78555, 0.96 ) }
    dend_141 { pt3dadd( -4.13262, -58.6523, -8.8455, 1.69 ) }
    dend_141 { pt3dadd( -4.26031, -59.9274, -8.89044, 1.69 ) }
    dend_141 { pt3dadd( -4.44128, -61.8111, -8.91907, 1.4 ) }
    dend_141 { pt3dadd( -4.55173, -63.4478, -8.96077, 0.88 ) }
    dend_141 { pt3dadd( -4.59862, -65.2714, -9.00572, 0.66 ) }
    dend_141 { pt3dadd( -4.5849, -67.6719, -9.09354, 0.96 ) }
    dend_141 { pt3dadd( -4.53261, -69.0712, -9.15754, 1.03 ) }
    dend_141 { pt3dadd( -4.39905, -70.9323, -9.26469, 1.11 ) }
    dend_141 { pt3dadd( -4.12956, -73.8108, -9.46599, 1.11 ) }
    dend_141 { pt3dadd( -3.929, -75.7508, -9.61391, 1.11 ) }
    dend_141 { pt3dadd( -3.91407, -75.9106, -9.62794, 1.11 ) }
    dend_141 { pt3dadd( -3.81381, -77.1468, -9.73139, 1.11 ) }
    dend_141 { pt3dadd( -3.80679, -77.2602, -9.73967, 1.11 ) }
    dend_141 { pt3dadd( -3.71469, -80.1807, -9.8372, 1.11 ) }
    dend_141 { pt3dadd( -3.69371, -82.788, -9.8006, 0.74 ) }
    dend_141 { pt3dadd( -3.68383, -84.257, -9.81144, 1.11 ) }
    dend_141 { pt3dadd( -3.68143, -84.4418, -9.79983, 1.11 ) }
    dend_141 { pt3dadd( -3.69489, -85.6291, -9.66021, 1.33 ) }
    dend_141 { pt3dadd( -3.75063, -87.5826, -9.34584, 1.33 ) }
    dend_141 { pt3dadd( -3.83031, -89.0553, -9.02566, 0.96 ) }
    dend_141 { pt3dadd( -3.94751, -90.187, -8.74235, 0.88 ) }
    dend_141 { pt3dadd( -4.45083, -94.1766, -7.71365, 0.88 ) }
    dend_141 { pt3dadd( -4.68049, -95.9802, -7.26042, 0.88 ) }
    dend_141 { pt3dadd( -4.75418, -96.4937, -7.12756, 0.88 ) }
    dend_141 { pt3dadd( -4.94263, -97.8291, -6.79054, 0.88 ) }
    dend_141 { pt3dadd( -5.09562, -99.2883, -6.34695, 0.88 ) }
    dend_141 { pt3dadd( -5.11575, -100.353, -6.0095, 0.88 ) }
    dend_141 { pt3dadd( -5.03711, -101.672, -5.65224, 0.88 ) }
    dend_141 { pt3dadd( -5.01758, -101.89, -5.58573, 0.88 ) }
    dend_141 { pt3dadd( -4.91917, -103.332, -5.25851, 0.88 ) }
    dend_141 { pt3dadd( -4.76719, -106.564, -4.79084, 0.52 ) }
    dend_141 { pt3dadd( -4.72588, -108.736, -4.70326, 0.52 ) }
    dend_141 { pt3dadd( -4.71203, -109.443, -4.73092, 1.25 ) }
    dend_141 { pt3dadd( -4.70882, -111.114, -4.84911, 1.55 ) }
    dend_141 { pt3dadd( -4.71965, -114.241, -5.20409, 1.55 ) }
    dend_141 { pt3dadd( -4.74967, -115.977, -5.53135, 1.18 ) }
    dend_141 { pt3dadd( -4.83444, -118.844, -6.37329, 0.74 ) }
    dend_141 { pt3dadd( -4.9204, -123.178, -7.72531, 0.74 ) }
    // Section: dend_126, id: dend_126, parent: dend_122 (entry count 62/100)
    dend_126 { pt3dclear() }
    dend_126 { pt3dadd( 33.6919, -51.8213, 35.8513, 0.22 ) }
    dend_126 { pt3dadd( 33.4732, -52.0467, 35.8646, 0.22 ) }
    dend_126 { pt3dadd( 33.1167, -52.4141, 35.8862, 0.22 ) }
    dend_126 { pt3dadd( 32.9493, -52.5866, 35.8963, 0.22 ) }
    dend_126 { pt3dadd( 32.0311, -53.5329, 35.952, 0.22 ) }
    dend_126 { pt3dadd( 26.0577, -60.5782, 35.6249, 0.22 ) }
    dend_126 { pt3dadd( 20.6637, -68.105, 35.6114, 0.22 ) }
    dend_126 { pt3dadd( 15.398, -75.6755, 34.7159, 0.22 ) }
    dend_126 { pt3dadd( 11.8555, -83.9736, 32.439, 0.22 ) }
    dend_126 { pt3dadd( 7.65937, -91.6098, 29.2462, 0.22 ) }
    dend_126 { pt3dadd( 4.81209, -99.7101, 25.6587, 0.22 ) }
    dend_126 { pt3dadd( 0.847569, -107.422, 22.3407, 0.22 ) }
    dend_126 { pt3dadd( -4.36774, -114.45, 19.3378, 0.22 ) }
    dend_126 { pt3dadd( -9.20815, -121.361, 15.539, 0.22 ) }
    dend_126 { pt3dadd( -13.2774, -129.157, 12.5582, 0.22 ) }
    dend_126 { pt3dadd( -16.2186, -137.403, 9.39266, 0.22 ) }
    dend_126 { pt3dadd( -18.9156, -145.662, 6.04206, 0.22 ) }
    // Section: dend_123, id: dend_123, parent: dend_122 (entry count 79/100)
    dend_123 { pt3dclear() }
    dend_123 { pt3dadd( 33.6919, -51.8213, 35.8513, 0.44 ) }
    dend_123 { pt3dadd( 33.9255, -52.2466, 35.8541, 0.44 ) }
    dend_123 { pt3dadd( 34.8545, -53.9384, 35.865, 0.44 ) }
    dend_123 { pt3dadd( 35.2834, -54.7194, 35.87, 0.22 ) }
    dend_123 { pt3dadd( 35.3363, -54.8157, 35.8706, 0.22 ) }
    dend_123 { pt3dadd( 40.7706, -67.1424, 33.1162, 0.22 ) }
    dend_123 { pt3dadd( 45.6102, -79.2674, 28.8162, 0.22 ) }
    dend_123 { pt3dadd( 51.0339, -91.7455, 26.8099, 0.22 ) }
    dend_123 { pt3dadd( 58.2795, -103.096, 24.1936, 0.22 ) }
    dend_123 { pt3dadd( 63.0381, -115.922, 22.6925, 0.22 ) }
    dend_123 { pt3dadd( 68.5688, -128.373, 20.8257, 0.22 ) }
    dend_123 { pt3dadd( 75.5007, -140.202, 20.1474, 0.22 ) }
    dend_123 { pt3dadd( 79.6855, -153.312, 19.8843, 0.22 ) }
    dend_123 { pt3dadd( 84.609, -166.15, 20.2131, 0.22 ) }
    dend_123 { pt3dadd( 87.1884, -179.599, 18.7143, 0.22 ) }
    // Section: dend_119, id: dend_119, parent: dend_113 (entry count 94/100)
    dend_119 { pt3dclear() }
    dend_119 { pt3dadd( 15.7517, 119.431, 21.1219, 0.81 ) }
    dend_119 { pt3dadd( 15.4772, 118.26, 21.3987, 0.81 ) }
    dend_119 { pt3dadd( 15.4401, 118.109, 21.4329, 0.81 ) }
    dend_119 { pt3dadd( 15.2057, 117.194, 21.6765, 0.81 ) }
    dend_119 { pt3dadd( 14.9808, 116.316, 21.9103, 0.59 ) }
    dend_119 { pt3dadd( 14.2676, 113.532, 22.6515, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_119 { pt3dadd( 14.2024, 113.278, 22.7192, 0.44 ) }
    dend_119 { pt3dadd( 14.0527, 112.777, 22.8597, 1.11 ) }
    dend_119 { pt3dadd( 13.7824, 111.911, 23.1004, 1.11 ) }
    dend_119 { pt3dadd( 12.2777, 102.71, 23.901, 1.11 ) }
    dend_119 { pt3dadd( 12.4582, 93.3546, 24.1581, 1.11 ) }
    // Section: dend_114, id: dend_114, parent: dend_113 (entry count 5/100)
    dend_114 { pt3dclear() }
    dend_114 { pt3dadd( 15.7517, 119.431, 21.1219, 1.25 ) }
    dend_114 { pt3dadd( 16.1888, 120.208, 20.9134, 1.25 ) }
    dend_114 { pt3dadd( 16.2548, 120.354, 20.8538, 1.25 ) }
    dend_114 { pt3dadd( 16.6114, 121.202, 20.4796, 0.88 ) }
    dend_114 { pt3dadd( 16.6392, 121.269, 20.4477, 0.88 ) }
    dend_114 { pt3dadd( 17.0661, 122.349, 19.9426, 0.59 ) }
    dend_114 { pt3dadd( 17.6114, 123.789, 19.2862, 0.52 ) }
    dend_114 { pt3dadd( 18.0804, 125.104, 18.6888, 0.52 ) }
    dend_114 { pt3dadd( 18.1085, 125.183, 18.6548, 0.52 ) }
    dend_114 { pt3dadd( 18.3106, 125.796, 18.3937, 0.88 ) }
    dend_114 { pt3dadd( 18.5455, 126.57, 18.1321, 0.88 ) }
    dend_114 { pt3dadd( 18.6716, 127.047, 18.012, 0.88 ) }
    dend_114 { pt3dadd( 19.069, 128.821, 17.7221, 0.66 ) }
    dend_114 { pt3dadd( 19.2927, 130.002, 17.571, 0.52 ) }
    dend_114 { pt3dadd( 19.5081, 131.376, 17.4019, 0.66 ) }
    dend_114 { pt3dadd( 19.7609, 133.128, 17.2018, 0.66 ) }
    dend_114 { pt3dadd( 19.953, 134.362, 17.0622, 0.66 ) }
    dend_114 { pt3dadd( 20.1866, 135.837, 16.9004, 0.66 ) }
    dend_114 { pt3dadd( 20.3762, 137.077, 16.8178, 0.66 ) }
    dend_114 { pt3dadd( 20.5056, 137.822, 16.7936, 0.44 ) }
    dend_114 { pt3dadd( 20.7352, 138.871, 16.8015, 0.44 ) }
    dend_114 { pt3dadd( 20.9799, 139.813, 16.806, 0.44 ) }
    dend_114 { pt3dadd( 21.0288, 139.977, 16.8138, 0.44 ) }
    dend_114 { pt3dadd( 21.5291, 141.658, 17.0638, 0.66 ) }
    dend_114 { pt3dadd( 21.5493, 141.744, 17.0833, 0.66 ) }
    dend_114 { pt3dadd( 21.6342, 142.477, 17.2586, 1.62 ) }
    dend_114 { pt3dadd( 21.6176, 143.455, 17.4831, 1.92 ) }
    dend_114 { pt3dadd( 21.6092, 143.522, 17.4962, 1.92 ) }
    dend_114 { pt3dadd( 21.3507, 144.902, 17.7028, 0.88 ) }
    dend_114 { pt3dadd( 21.1076, 145.895, 17.763, 0.44 ) }
    dend_114 { pt3dadd( 20.8851, 146.757, 17.797, 0.44 ) }
    dend_114 { pt3dadd( 20.8682, 146.835, 17.7967, 0.44 ) }
    dend_114 { pt3dadd( 20.8215, 147.393, 17.7358, 0.44 ) }
    dend_114 { pt3dadd( 20.8233, 147.472, 17.7285, 0.44 ) }
    dend_114 { pt3dadd( 20.9432, 148.576, 17.6242, 0.44 ) }
    dend_114 { pt3dadd( 20.9829, 148.823, 17.5959, 0.44 ) }
    dend_114 { pt3dadd( 21.2547, 150.5, 17.3877, 0.44 ) }
    dend_114 { pt3dadd( 21.5066, 152.297, 17.1399, 0.44 ) }
    dend_114 { pt3dadd( 21.7083, 154.158, 16.8631, 0.44 ) }
    dend_114 { pt3dadd( 21.795, 155.431, 16.6621, 0.44 ) }
    dend_114 { pt3dadd( 21.7862, 156.64, 16.4585, 0.44 ) }
    dend_114 { pt3dadd( 21.7027, 157.568, 16.2551, 0.44 ) }
    dend_114 { pt3dadd( 21.5904, 158.08, 16.1091, 0.44 ) }
    dend_114 { pt3dadd( 21.3601, 158.788, 15.8639, 0.44 ) }
    dend_114 { pt3dadd( 21.3097, 158.952, 15.797, 0.44 ) }
    dend_114 { pt3dadd( 21.0375, 160.047, 15.3888, 0.44 ) }
    dend_114 { pt3dadd( 20.8293, 161.391, 14.9886, 0.44 ) }
    dend_114 { pt3dadd( 20.8197, 161.507, 14.9559, 0.44 ) }
    dend_114 { pt3dadd( 20.7773, 162.889, 14.6064, 1.33 ) }
    dend_114 { pt3dadd( 20.7966, 164.42, 14.2716, 1.62 ) }
    dend_114 { pt3dadd( 20.8526, 165.807, 14.0072, 0.59 ) }
    dend_114 { pt3dadd( 20.9649, 167.171, 13.8394, 0.59 ) }
    dend_114 { pt3dadd( 20.9714, 167.24, 13.8357, 0.59 ) }
    dend_114 { pt3dadd( 21.1394, 168.649, 13.8067, 0.59 ) }
    dend_114 { pt3dadd( 21.3675, 170.31, 13.844, 0.59 ) }
    dend_114 { pt3dadd( 21.3793, 170.389, 13.8505, 0.59 ) }
    dend_114 { pt3dadd( 21.614, 171.708, 13.9609, 0.59 ) }
    dend_114 { pt3dadd( 21.6299, 171.786, 13.9611, 0.59 ) }
    dend_114 { pt3dadd( 22.0077, 173.437, 13.8628, 0.59 ) }
    dend_114 { pt3dadd( 22.0347, 173.538, 13.8506, 0.59 ) }
    dend_114 { pt3dadd( 22.5473, 175.208, 13.5537, 0.59 ) }
    dend_114 { pt3dadd( 22.9905, 176.375, 13.2974, 1.25 ) }
    dend_114 { pt3dadd( 23.6066, 177.792, 12.9125, 1.92 ) }
    dend_114 { pt3dadd( 23.8412, 178.257, 12.7656, 1.77 ) }
    dend_114 { pt3dadd( 24.2805, 179.026, 12.4849, 1.11 ) }
    dend_114 { pt3dadd( 24.9357, 180.101, 12.1111, 0.29 ) }
    dend_114 { pt3dadd( 25.7662, 181.275, 11.6794, 0.29 ) }
    dend_114 { pt3dadd( 25.8591, 181.399, 11.6439, 0.29 ) }
    dend_114 { pt3dadd( 26.5088, 182.228, 11.4563, 0.74 ) }
    dend_114 { pt3dadd( 27.0159, 182.871, 11.2968, 1.11 ) }
    dend_114 { pt3dadd( 27.6439, 183.657, 11.069, 0.81 ) }
    // Section: dend_110, id: dend_110, parent: dend_104 (entry count 76/100)
    dend_110 { pt3dclear() }
    dend_110 { pt3dadd( 65.2006, 8.65773, 11.6942, 0.44 ) }
    dend_110 { pt3dadd( 65.3142, 8.63801, 11.6476, 0.44 ) }
    dend_110 { pt3dadd( 65.6237, 8.57923, 11.5888, 0.44 ) }
    dend_110 { pt3dadd( 66.704, 8.32427, 11.4645, 0.44 ) }
    dend_110 { pt3dadd( 66.8627, 8.30038, 11.4512, 0.44 ) }
    dend_110 { pt3dadd( 67.8465, 8.15231, 11.3693, 0.44 ) }
    dend_110 { pt3dadd( 67.9206, 8.14117, 11.3631, 0.44 ) }
    dend_110 { pt3dadd( 69.2016, 7.94363, 11.2916, 0.52 ) }
    dend_110 { pt3dadd( 70.2462, 7.78681, 11.2908, 0.52 ) }
    dend_110 { pt3dadd( 71.2466, 7.64197, 11.3922, 0.52 ) }
    dend_110 { pt3dadd( 81.4701, 4.37991, 10.7032, 0.52 ) }
    dend_110 { pt3dadd( 91.8139, 1.6028, 9.80353, 0.52 ) }
    dend_110 { pt3dadd( 101.488, -3.13107, 9.40826, 0.52 ) }
    dend_110 { pt3dadd( 111.192, -7.63692, 10.6069, 0.52 ) }
    dend_110 { pt3dadd( 121.37, -11.106, 10.4297, 0.52 ) }
    dend_110 { pt3dadd( 132.007, -12.554, 10.3626, 0.52 ) }
    dend_110 { pt3dadd( 142.36, -13.6442, 7.7369, 0.52 ) }
    dend_110 { pt3dadd( 152.507, -12.9945, 4.30202, 0.52 ) }
    // Section: dend_105, id: dend_105, parent: dend_104 (entry count 94/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( 65.2006, 8.65773, 11.6942, 0.52 ) }
    dend_105 { pt3dadd( 65.4872, 8.7597, 11.5891, 0.52 ) }
    dend_105 { pt3dadd( 65.8813, 8.89997, 11.4446, 0.37 ) }
    dend_105 { pt3dadd( 66.2179, 9.01972, 11.3212, 0.37 ) }
    dend_105 { pt3dadd( 66.373, 9.07492, 11.2643, 0.37 ) }
    dend_105 { pt3dadd( 67.0671, 9.32192, 11.0098, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_105 { pt3dadd( 67.2619, 9.39125, 10.9383, 0.37 ) }
    // Section: dend_103, id: dend_103, parent: dend_99 (entry count 1/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( 54.7555, -0.0846875, -0.67034, 0.29 ) }
    dend_103 { pt3dadd( 61.2707, -7.10564, -8.32517, 0.29 ) }
    dend_103 { pt3dadd( 66.7771, -16.1274, -14.6335, 0.29 ) }
    dend_103 { pt3dadd( 73.6388, -25.3443, -18.9707, 0.29 ) }
    dend_103 { pt3dadd( 80.2128, -34.9885, -22.814, 0.29 ) }
    dend_103 { pt3dadd( 87.1823, -44.7495, -25.4056, 0.29 ) }
    dend_103 { pt3dadd( 93.2442, -55.4024, -25.668, 0.29 ) }
    dend_103 { pt3dadd( 100.488, -65.1464, -24.3973, 0.29 ) }
    dend_103 { pt3dadd( 108.186, -74.4904, -22.9439, 0.29 ) }
    dend_103 { pt3dadd( 115.16, -84.4687, -24.3765, 0.29 ) }
    dend_103 { pt3dadd( 120.726, -95.3489, -25.6229, 0.29 ) }
    dend_103 { pt3dadd( 128.319, -104.497, -28.6056, 0.29 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 13/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 54.7555, -0.0846875, -0.67034, 0.22 ) }
    dend_100 { pt3dadd( 58.3831, -4.22007, -4.87578, 0.29 ) }
    dend_100 { pt3dadd( 62.3889, -8.82242, -8.15137, 0.29 ) }
    dend_100 { pt3dadd( 66.3138, -14.0574, -10.4346, 0.29 ) }
    dend_100 { pt3dadd( 69.8055, -19.7178, -12.4147, 0.29 ) }
    dend_100 { pt3dadd( 73.3681, -24.7745, -15.5581, 0.29 ) }
    dend_100 { pt3dadd( 76.2296, -29.4222, -19.8503, 0.29 ) }
    dend_100 { pt3dadd( 78.9133, -35.0099, -23.0103, 0.29 ) }
    dend_100 { pt3dadd( 82.9397, -40.1974, -25.215, 0.29 ) }
    dend_100 { pt3dadd( 87.0392, -45.5774, -26.6798, 0.29 ) }
    dend_100 { pt3dadd( 91.2722, -50.4526, -29.1736, 0.29 ) }
    dend_100 { pt3dadd( 95.9521, -55.2672, -30.7856, 0.29 ) }
    dend_100 { pt3dadd( 100.716, -59.8471, -32.784, 0.29 ) }
    // Section: dend_91, id: dend_91, parent: dend_74 (entry count 26/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -31.2288, -1.54806, 3.38308, 1.25 ) }
    dend_91 { pt3dadd( -33.6369, -0.00233448, 11.0558, 1.25 ) }
    dend_91 { pt3dadd( -34.0146, 0.227689, 11.861, 1.03 ) }
    dend_91 { pt3dadd( -34.4768, 0.499937, 12.615, 1.25 ) }
    dend_91 { pt3dadd( -35.1434, 0.894263, 13.4467, 1.25 ) }
    dend_91 { pt3dadd( -35.2638, 0.965833, 13.5714, 1.25 ) }
    dend_91 { pt3dadd( -36.1071, 1.48498, 14.4172, 1.03 ) }
    dend_91 { pt3dadd( -37.3153, 2.22121, 14.7169, 1.03 ) }
    dend_91 { pt3dadd( -37.408, 2.28837, 14.7522, 1.03 ) }
    dend_91 { pt3dadd( -38.0289, 2.82988, 15.0918, 1.03 ) }
    dend_91 { pt3dadd( -38.0825, 2.8913, 15.1328, 1.03 ) }
    dend_91 { pt3dadd( -39.0564, 4.43255, 16.3298, 1.4 ) }
    dend_91 { pt3dadd( -39.0719, 4.46952, 16.3623, 1.4 ) }
    dend_91 { pt3dadd( -39.3729, 5.41807, 17.2241, 1.4 ) }
    dend_91 { pt3dadd( -39.4028, 5.51633, 17.3025, 1.4 ) }
    dend_91 { pt3dadd( -39.568, 6.13753, 17.7135, 1.4 ) }
    dend_91 { pt3dadd( -39.9228, 7.55339, 18.3873, 1.03 ) }
    dend_91 { pt3dadd( -39.9344, 7.61092, 18.4031, 1.03 ) }
    dend_91 { pt3dadd( -40.0745, 8.35615, 18.5801, 1.03 ) }
    dend_91 { pt3dadd( -40.2453, 9.49399, 18.8112, 0.96 ) }
    dend_91 { pt3dadd( -40.3416, 10.3688, 18.9387, 1.11 ) }
    dend_91 { pt3dadd( -40.4051, 11.3828, 19.0293, 1.11 ) }
    dend_91 { pt3dadd( -40.4207, 12.8052, 19.0921, 0.81 ) }
    dend_91 { pt3dadd( -40.4189, 12.8654, 19.1011, 0.81 ) }
    dend_91 { pt3dadd( -40.2894, 14.6968, 19.5353, 0.74 ) }
    dend_91 { pt3dadd( -40.1547, 16.0642, 20.0537, 0.88 ) }
    dend_91 { pt3dadd( -40.0266, 17.263, 20.6638, 0.88 ) }
    dend_91 { pt3dadd( -39.9622, 17.8771, 21.0502, 0.88 ) }
    dend_91 { pt3dadd( -39.7343, 20.2362, 22.8251, 0.88 ) }
    dend_91 { pt3dadd( -39.7301, 20.2823, 22.8639, 0.88 ) }
    dend_91 { pt3dadd( -39.6562, 21.4609, 24.031, 1.11 ) }
    dend_91 { pt3dadd( -39.6536, 21.5491, 24.125, 1.11 ) }
    dend_91 { pt3dadd( -39.67, 22.0929, 24.6836, 1.03 ) }
    dend_91 { pt3dadd( -39.6733, 22.1336, 24.7154, 1.03 ) }
    dend_91 { pt3dadd( -39.7655, 23.1754, 25.2013, 0.52 ) }
    dend_91 { pt3dadd( -39.8263, 23.8607, 25.4692, 0.74 ) }
    dend_91 { pt3dadd( -39.922, 24.9035, 25.7799, 0.74 ) }
    dend_91 { pt3dadd( -39.9298, 24.9916, 25.8065, 0.74 ) }
    dend_91 { pt3dadd( -40.0017, 25.785, 26.0309, 0.74 ) }
    dend_91 { pt3dadd( -40.0081, 25.8518, 26.0488, 0.74 ) }
    dend_91 { pt3dadd( -40.0879, 26.5899, 26.2092, 0.74 ) }
    dend_91 { pt3dadd( -40.097, 26.6803, 26.2264, 0.74 ) }
    dend_91 { pt3dadd( -40.1713, 27.2446, 26.284, 1.18 ) }
    dend_91 { pt3dadd( -40.2935, 28.2065, 26.3942, 1.77 ) }
    // Section: dend_84, id: dend_84, parent: dend_74 (entry count 70/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -31.2288, -1.54806, 3.38308, 0.37 ) }
    dend_84 { pt3dadd( -31.2333, -0.919701, 9.78919, 0.37 ) }
    dend_84 { pt3dadd( -31.2334, -0.916328, 9.82358, 0.48 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 73/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -31.2288, -1.54806, 3.38308, 1.77 ) }
    dend_75 { pt3dadd( -32.6158, -4.18126, 3.11949, 1.77 ) }
    dend_75 { pt3dadd( -32.9404, -4.85373, 3.04805, 1.03 ) }
    dend_75 { pt3dadd( -33.9246, -6.73121, 2.74126, 0.88 ) }
    dend_75 { pt3dadd( -33.9573, -6.78882, 2.72987, 0.88 ) }
    dend_75 { pt3dadd( -34.5929, -7.76975, 2.44789, 0.88 ) }
    dend_75 { pt3dadd( -35.3565, -8.80443, 2.09111, 0.88 ) }
    dend_75 { pt3dadd( -36.0913, -9.65104, 1.61478, 0.81 ) }
    dend_75 { pt3dadd( -37.1338, -10.6307, 0.963673, 0.81 ) }
    dend_75 { pt3dadd( -37.72, -11.0628, 0.612783, 1.25 ) }
    dend_75 { pt3dadd( -38.7157, -11.6489, -0.300769, 0.96 ) }
    dend_75 { pt3dadd( -39.1528, -11.8339, -0.842618, 0.81 ) }
    dend_75 { pt3dadd( -39.7965, -12.0294, -1.78199, 1.11 ) }
    dend_75 { pt3dadd( -40.1561, -12.1135, -2.36878, 1.11 ) }
    dend_75 { pt3dadd( -40.5435, -12.2131, -3.02582, 1.11 ) }
    dend_75 { pt3dadd( -42.4535, -12.81, -6.34291, 1.11 ) }
    dend_75 { pt3dadd( -43.0576, -13.084, -7.38858, 1.11 ) }
    dend_75 { pt3dadd( -43.7205, -13.455, -8.53635, 0.74 ) }
    dend_75 { pt3dadd( -43.7835, -13.5008, -8.64221, 0.74 ) }
    dend_75 { pt3dadd( -44.5958, -14.2284, -9.88079, 0.66 ) }
    dend_75 { pt3dadd( -44.6274, -14.2644, -9.91184, 0.66 ) }
    dend_75 { pt3dadd( -45.2517, -15.3367, -9.93672, 0.66 ) }
    dend_75 { pt3dadd( -45.276, -15.3996, -9.93302, 0.66 ) }
    dend_75 { pt3dadd( -45.6055, -16.6311, -9.83397, 1.03 ) }
    dend_75 { pt3dadd( -45.9475, -18.2586, -9.74801, 1.4 ) }
    dend_75 { pt3dadd( -46.1563, -19.6192, -9.81094, 1.4 ) }
    dend_75 { pt3dadd( -46.1681, -19.6754, -9.81904, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_75 { pt3dadd( -46.6955, -21.7894, -10.3144, 1.4 ) }
    dend_75 { pt3dadd( -46.7121, -21.8411, -10.334, 1.4 ) }
    dend_75 { pt3dadd( -47.038, -22.6649, -10.752, 1.03 ) }
    dend_75 { pt3dadd( -47.5244, -23.8014, -11.4917, 0.59 ) }
    dend_75 { pt3dadd( -48.0462, -24.9229, -12.2672, 0.59 ) }
    dend_75 { pt3dadd( -48.0687, -24.9667, -12.2966, 0.59 ) }
    dend_75 { pt3dadd( -48.6947, -26.071, -12.9939, 0.88 ) }
    dend_75 { pt3dadd( -49.1747, -26.8404, -13.4982, 1.03 ) }
    dend_75 { pt3dadd( -49.8079, -27.7651, -14.1421, 0.81 ) }
    dend_75 { pt3dadd( -50.2355, -28.3169, -14.5628, 0.59 ) }
    dend_75 { pt3dadd( -50.8988, -29.0157, -15.2431, 0.52 ) }
    dend_75 { pt3dadd( -50.933, -29.0414, -15.2806, 0.52 ) }
    dend_75 { pt3dadd( -51.5389, -29.2077, -15.989, 0.52 ) }
    dend_75 { pt3dadd( -51.5799, -29.2043, -16.0408, 0.52 ) }
    dend_75 { pt3dadd( -52.2605, -29.0297, -16.9097, 0.52 ) }
    dend_75 { pt3dadd( -52.6351, -28.8911, -17.4419, 0.74 ) }
    dend_75 { pt3dadd( -53.3504, -28.4876, -18.6198, 0.96 ) }
    dend_75 { pt3dadd( -53.5258, -28.3694, -18.9789, 0.96 ) }
    dend_75 { pt3dadd( -53.6668, -28.5043, -19.7505, 0.96 ) }
    dend_75 { pt3dadd( -53.8004, -28.7241, -20.5448, 0.96 ) }
    dend_75 { pt3dadd( -53.8112, -28.7457, -20.6064, 0.96 ) }
    dend_75 { pt3dadd( -54.1091, -29.3811, -22.2812, 0.96 ) }
    dend_75 { pt3dadd( -54.1203, -29.4037, -22.3423, 0.96 ) }
    dend_75 { pt3dadd( -55.4776, -31.9485, -29.7035, 0.96 ) }
    dend_75 { pt3dadd( -55.5992, -32.1367, -30.3229, 0.74 ) }
    dend_75 { pt3dadd( -55.7316, -32.3028, -30.9426, 0.59 ) }
    dend_75 { pt3dadd( -55.7446, -32.3158, -30.9962, 0.59 ) }
    dend_75 { pt3dadd( -56.2006, -32.6801, -32.6993, 0.59 ) }
    dend_75 { pt3dadd( -56.2628, -32.7173, -32.879, 0.59 ) }
    dend_75 { pt3dadd( -56.9681, -32.7715, -33.236, 0.59 ) }
    dend_75 { pt3dadd( -57.1549, -32.7817, -33.2863, 0.59 ) }
    dend_75 { pt3dadd( -58.0558, -32.9192, -33.353, 0.59 ) }
    dend_75 { pt3dadd( -58.1195, -32.936, -33.3476, 0.59 ) }
    dend_75 { pt3dadd( -58.7998, -33.2284, -33.2326, 0.74 ) }
    dend_75 { pt3dadd( -59.7676, -33.8539, -33.3384, 0.44 ) }
    dend_75 { pt3dadd( -59.8384, -33.9123, -33.3636, 0.44 ) }
    dend_75 { pt3dadd( -60.4701, -34.453, -33.7449, 0.44 ) }
    dend_75 { pt3dadd( -60.5157, -34.4893, -33.7768, 0.44 ) }
    dend_75 { pt3dadd( -61.231, -34.9847, -34.3453, 0.88 ) }
    dend_75 { pt3dadd( -62.2605, -35.6275, -35.1962, 0.88 ) }
    dend_75 { pt3dadd( -62.8813, -35.9769, -35.7142, 0.88 ) }
    dend_75 { pt3dadd( -63.7582, -36.4625, -36.4189, 0.52 ) }
    dend_75 { pt3dadd( -64.5769, -36.8987, -37.0454, 0.52 ) }
    dend_75 { pt3dadd( -65.4536, -37.3659, -37.6523, 0.52 ) }
    dend_75 { pt3dadd( -66.2446, -37.7718, -38.1201, 0.52 ) }
    dend_75 { pt3dadd( -66.2907, -37.7968, -38.1421, 0.52 ) }
    dend_75 { pt3dadd( -66.723, -38.0566, -38.314, 0.88 ) }
    dend_75 { pt3dadd( -66.7743, -38.0953, -38.3312, 0.88 ) }
    dend_75 { pt3dadd( -67.3263, -38.7543, -38.928, 0.88 ) }
    dend_75 { pt3dadd( -67.3538, -38.8018, -38.9807, 0.88 ) }
    dend_75 { pt3dadd( -67.5082, -39.0946, -39.3191, 0.66 ) }
    dend_75 { pt3dadd( -67.778, -39.6168, -39.9268, 0.66 ) }
    dend_75 { pt3dadd( -68.168, -40.3273, -40.7822, 0.44 ) }
    dend_75 { pt3dadd( -69.2588, -42.287, -43.2463, 0.44 ) }
    dend_75 { pt3dadd( -69.4119, -42.5032, -43.6556, 1.03 ) }
    dend_75 { pt3dadd( -69.9792, -43.1504, -45.0583, 1.03 ) }
    dend_75 { pt3dadd( -70.0037, -43.1746, -45.1148, 1.03 ) }
    dend_75 { pt3dadd( -70.332, -43.4674, -45.8346, 1.03 ) }
    dend_75 { pt3dadd( -70.3595, -43.4922, -45.8895, 1.03 ) }
    dend_75 { pt3dadd( -71.9573, -45.1344, -48.7816, 1.03 ) }
    dend_75 { pt3dadd( -72.3726, -45.6258, -49.5577, 0.66 ) }
    dend_75 { pt3dadd( -72.9808, -46.3909, -50.6877, 0.59 ) }
    dend_75 { pt3dadd( -73.0043, -46.4217, -50.7295, 0.59 ) }
    dend_75 { pt3dadd( -73.6555, -47.2868, -51.8333, 0.59 ) }
    dend_75 { pt3dadd( -74.2571, -48.0311, -52.6628, 0.59 ) }
    dend_75 { pt3dadd( -74.8619, -48.7481, -53.243, 0.29 ) }
    dend_75 { pt3dadd( -75.3177, -49.2218, -53.6515, 0.29 ) }
    dend_75 { pt3dadd( -75.4157, -49.3117, -53.7277, 0.29 ) }
    dend_75 { pt3dadd( -76.5589, -50.2671, -54.5929, 0.96 ) }
    dend_75 { pt3dadd( -77.0031, -50.5816, -54.8973, 0.96 ) }
    dend_75 { pt3dadd( -77.058, -50.6176, -54.9352, 0.96 ) }
    dend_75 { pt3dadd( -77.6075, -51.0069, -55.2703, 0.44 ) }
    dend_75 { pt3dadd( -78.4074, -51.5948, -55.6658, 0.22 ) }
    dend_75 { pt3dadd( -78.6744, -51.7893, -55.7613, 0.59 ) }
    dend_75 { pt3dadd( -79.3046, -52.259, -55.9139, 0.59 ) }
    dend_75 { pt3dadd( -79.7254, -52.5995, -56.0801, 0.59 ) }
    dend_75 { pt3dadd( -80.0406, -52.8792, -56.2265, 0.44 ) }
    dend_75 { pt3dadd( -80.8376, -53.5824, -56.6023, 0.44 ) }
    dend_75 { pt3dadd( -80.9929, -53.7206, -56.6822, 0.44 ) }
    dend_75 { pt3dadd( -81.7714, -54.4408, -57.1096, 0.44 ) }
    dend_75 { pt3dadd( -82.8244, -55.542, -57.8407, 2.06 ) }
    dend_75 { pt3dadd( -83.3107, -56.1431, -58.2577, 2.06 ) }
    // Section: dend_67, id: dend_67, parent: dend_53 (entry count 82/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -35.9089, -16.6405, -0.250884, 0.81 ) }
    dend_67 { pt3dadd( -36.1062, -16.5437, -0.182668, 0.81 ) }
    dend_67 { pt3dadd( -36.4056, -16.3969, -0.0791599, 0.37 ) }
    dend_67 { pt3dadd( -36.7306, -16.2376, 0.0331721, 0.37 ) }
    dend_67 { pt3dadd( -37.219, -15.9981, 0.202003, 0.37 ) }
    dend_67 { pt3dadd( -37.6532, -15.7852, 0.352104, 0.37 ) }
    dend_67 { pt3dadd( -42.5516, -13.843, 1.80778, 0.37 ) }
    dend_67 { pt3dadd( -47.2618, -12.6187, 4.27977, 0.37 ) }
    dend_67 { pt3dadd( -51.6907, -10.8687, 6.95425, 0.37 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 91/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -35.9089, -16.6405, -0.250884, 1.11 ) }
    dend_54 { pt3dadd( -36.0733, -16.755, -0.202004, 1.11 ) }
    dend_54 { pt3dadd( -37.1869, -17.525, 0.0727388, 1.11 ) }
    dend_54 { pt3dadd( -37.2835, -17.5927, 0.0896054, 1.11 ) }
    dend_54 { pt3dadd( -38.8154, -18.713, 0.296011, 1.11 ) }
    dend_54 { pt3dadd( -39.8721, -19.5011, 0.41932, 1.11 ) }
    dend_54 { pt3dadd( -40.8675, -20.298, 0.523301, 1.11 ) }
    dend_54 { pt3dadd( -40.916, -20.3421, 0.526328, 1.11 ) }
    dend_54 { pt3dadd( -41.6331, -21.1198, 0.539878, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_54 { pt3dadd( -42.2872, -21.9591, 0.524224, 1.11 ) }
    dend_54 { pt3dadd( -42.3174, -22.0065, 0.520173, 1.11 ) }
    dend_54 { pt3dadd( -42.9317, -22.9813, 0.497542, 0.88 ) }
    dend_54 { pt3dadd( -43.6888, -24.0783, 0.553217, 0.74 ) }
    dend_54 { pt3dadd( -44.2757, -24.8125, 0.636248, 0.74 ) }
    dend_54 { pt3dadd( -45.0354, -25.6347, 0.782177, 0.74 ) }
    dend_54 { pt3dadd( -46.1418, -26.7424, 1.01696, 0.74 ) }
    dend_54 { pt3dadd( -47.4142, -27.9546, 1.32209, 0.74 ) }
    dend_54 { pt3dadd( -48.449, -28.8437, 1.56851, 0.74 ) }
    dend_54 { pt3dadd( -49.8274, -29.9522, 1.8918, 0.74 ) }
    dend_54 { pt3dadd( -50.898, -30.7869, 2.14064, 0.74 ) }
    dend_54 { pt3dadd( -52.2241, -31.7867, 2.44327, 0.74 ) }
    dend_54 { pt3dadd( -53.69, -32.9118, 2.7561, 0.74 ) }
    dend_54 { pt3dadd( -54.9634, -33.9614, 2.97141, 0.74 ) }
    dend_54 { pt3dadd( -55.7138, -34.5951, 3.09387, 1.03 ) }
    dend_54 { pt3dadd( -55.7584, -34.6281, 3.10285, 1.03 ) }
    dend_54 { pt3dadd( -57.0297, -35.3964, 3.40679, 1.03 ) }
    dend_54 { pt3dadd( -57.8985, -35.772, 3.63557, 1.33 ) }
    dend_54 { pt3dadd( -58.6924, -35.9986, 3.84016, 1.33 ) }
    dend_54 { pt3dadd( -58.7546, -36.0105, 3.85536, 1.33 ) }
    dend_54 { pt3dadd( -61.361, -36.3139, 4.35605, 0.81 ) }
    dend_54 { pt3dadd( -62.2655, -36.391, 4.46639, 0.81 ) }
    dend_54 { pt3dadd( -62.9557, -36.4313, 4.49299, 0.81 ) }
    dend_54 { pt3dadd( -64.2085, -36.4887, 4.45093, 0.74 ) }
    dend_54 { pt3dadd( -65.2958, -36.5966, 4.29658, 0.96 ) }
    dend_54 { pt3dadd( -66.2106, -36.7633, 4.07713, 0.96 ) }
    dend_54 { pt3dadd( -67.0665, -37.0392, 3.66321, 0.59 ) }
    dend_54 { pt3dadd( -67.9483, -37.3824, 3.11523, 0.59 ) }
    dend_54 { pt3dadd( -67.9901, -37.4017, 3.08407, 0.59 ) }
    dend_54 { pt3dadd( -69.1438, -38.0365, 2.08709, 0.59 ) }
    dend_54 { pt3dadd( -69.8766, -38.5124, 1.39738, 1.18 ) }
    dend_54 { pt3dadd( -71.4353, -39.5779, 0.0702642, 0.59 ) }
    dend_54 { pt3dadd( -71.8595, -39.8654, -0.216003, 0.59 ) }
    dend_54 { pt3dadd( -71.9104, -39.8995, -0.238174, 0.59 ) }
    dend_54 { pt3dadd( -72.348, -40.1879, -0.314941, 0.59 ) }
    dend_54 { pt3dadd( -73.4893, -40.9129, -0.227851, 0.59 ) }
    dend_54 { pt3dadd( -75.0229, -41.9084, -0.0288757, 0.59 ) }
    dend_54 { pt3dadd( -75.6155, -42.2687, 0.0550338, 0.59 ) }
    dend_54 { pt3dadd( -76.2345, -42.6524, 0.116909, 1.4 ) }
    dend_54 { pt3dadd( -77.3059, -43.2858, 0.178151, 1.62 ) }
    dend_54 { pt3dadd( -77.8133, -43.5818, 0.195125, 1.62 ) }
    dend_54 { pt3dadd( -79.1171, -44.378, 0.235323, 0.74 ) }
    dend_54 { pt3dadd( -80.6275, -45.4445, 0.191263, 0.59 ) }
    dend_54 { pt3dadd( -80.7925, -45.5671, 0.193993, 0.59 ) }
    dend_54 { pt3dadd( -81.9044, -46.4286, 0.275359, 0.37 ) }
    dend_54 { pt3dadd( -82.9325, -47.2507, 0.44207, 0.37 ) }
    dend_54 { pt3dadd( -83.8348, -48.0285, 0.613357, 0.37 ) }
    dend_54 { pt3dadd( -84.8962, -48.9679, 0.893887, 0.59 ) }
    dend_54 { pt3dadd( -85.7698, -49.7295, 1.12762, 0.96 ) }
    dend_54 { pt3dadd( -86.6168, -50.4368, 1.34224, 0.96 ) }
    dend_54 { pt3dadd( -87.803, -51.3311, 1.68559, 0.96 ) }
    dend_54 { pt3dadd( -88.7573, -51.9178, 1.99847, 0.96 ) }
    dend_54 { pt3dadd( -90.0861, -52.5098, 2.55838, 0.44 ) }
    dend_54 { pt3dadd( -90.9092, -52.795, 3.00946, 0.81 ) }
    dend_54 { pt3dadd( -90.9963, -52.8208, 3.06343, 0.81 ) }
    dend_54 { pt3dadd( -92.2637, -53.1992, 4.05933, 0.96 ) }
    dend_54 { pt3dadd( -92.7197, -53.3627, 4.49137, 0.96 ) }
    dend_54 { pt3dadd( -93.7415, -53.7901, 5.59204, 0.59 ) }
    dend_54 { pt3dadd( -94.5711, -54.2453, 6.54316, 0.59 ) }
    dend_54 { pt3dadd( -94.6113, -54.2717, 6.58822, 0.59 ) }
    dend_54 { pt3dadd( -95.795, -55.0972, 7.75252, 0.59 ) }
    dend_54 { pt3dadd( -96.629, -55.7139, 8.43058, 0.59 ) }
    dend_54 { pt3dadd( -96.669, -55.7404, 8.4603, 0.59 ) }
    dend_54 { pt3dadd( -97.3159, -56.0833, 8.89063, 0.59 ) }
    dend_54 { pt3dadd( -98.1875, -56.4144, 9.42652, 1.33 ) }
    dend_54 { pt3dadd( -99.3086, -56.7169, 10.0211, 1.33 ) }
    dend_54 { pt3dadd( -100.133, -56.8458, 10.3851, 1.33 ) }
    dend_54 { pt3dadd( -101.271, -56.9778, 10.8674, 1.33 ) }
    dend_54 { pt3dadd( -102.502, -57.1105, 11.3909, 0.66 ) }
    dend_54 { pt3dadd( -102.57, -57.118, 11.4206, 0.66 ) }
    dend_54 { pt3dadd( -103.645, -57.297, 11.9129, 0.66 ) }
    dend_54 { pt3dadd( -103.825, -57.3516, 11.9933, 0.66 ) }
    dend_54 { pt3dadd( -104.704, -57.7633, 12.3534, 0.66 ) }
    dend_54 { pt3dadd( -104.751, -57.7919, 12.3678, 0.66 ) }
    dend_54 { pt3dadd( -105.385, -58.2454, 12.5505, 0.66 ) }
    dend_54 { pt3dadd( -106.011, -58.6763, 12.7538, 1.03 ) }
    dend_54 { pt3dadd( -106.72, -59.1323, 12.9867, 1.03 ) }
    dend_54 { pt3dadd( -107.538, -59.5644, 13.2073, 1.03 ) }
    dend_54 { pt3dadd( -108.675, -60.0572, 13.4459, 0.74 ) }
    dend_54 { pt3dadd( -108.735, -60.0793, 13.4569, 0.74 ) }
    dend_54 { pt3dadd( -109.832, -60.4194, 13.6105, 0.52 ) }
    dend_54 { pt3dadd( -110.621, -60.6683, 13.6563, 0.52 ) }
    dend_54 { pt3dadd( -111.798, -61.2314, 13.499, 0.52 ) }
    dend_54 { pt3dadd( -112.302, -61.6278, 13.3001, 0.96 ) }
    dend_54 { pt3dadd( -112.344, -61.6709, 13.2762, 0.96 ) }
    dend_54 { pt3dadd( -112.858, -62.2812, 12.9351, 0.96 ) }
    dend_54 { pt3dadd( -113.748, -63.4665, 12.2808, 0.66 ) }
    dend_54 { pt3dadd( -114.838, -65.0241, 11.4535, 0.52 ) }
    dend_54 { pt3dadd( -115.995, -66.6502, 10.6362, 0.52 ) }
    dend_54 { pt3dadd( -116.437, -67.2295, 10.3708, 0.52 ) }
    dend_54 { pt3dadd( -117.512, -68.5285, 9.85826, 1.62 ) }
    dend_54 { pt3dadd( -118.252, -69.3663, 9.55908, 1.62 ) }
    dend_54 { pt3dadd( -118.8, -69.9207, 9.40459, 1.25 ) }
    dend_54 { pt3dadd( -119.926, -70.9526, 9.19747, 0.66 ) }
    dend_54 { pt3dadd( -120.751, -71.6992, 9.082, 1.25 ) }
    dend_54 { pt3dadd( -121.379, -72.2426, 9.02726, 1.25 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 96/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -12.6525, 133.598, 9.06587, 1.25 ) }
    dend_32 { pt3dadd( -12.1247, 134.437, 9.56711, 1.25 ) }
    dend_32 { pt3dadd( -11.7592, 135.055, 9.88736, 0.74 ) }
    dend_32 { pt3dadd( -11.7249, 135.119, 9.91554, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_32 { pt3dadd( -11.4319, 135.684, 10.1513, 0.74 ) }
    dend_32 { pt3dadd( -11.4004, 135.75, 10.1789, 0.74 ) }
    dend_32 { pt3dadd( -11.0885, 136.445, 10.4608, 0.74 ) }
    dend_32 { pt3dadd( -10.6769, 137.442, 10.8023, 0.74 ) }
    dend_32 { pt3dadd( -10.2528, 138.626, 11.1924, 0.59 ) }
    dend_32 { pt3dadd( -10.2384, 138.673, 11.2068, 0.59 ) }
    dend_32 { pt3dadd( -10.1053, 139.25, 11.3602, 1.11 ) }
    dend_32 { pt3dadd( -9.98788, 139.94, 11.5185, 1.25 ) }
    dend_32 { pt3dadd( -9.98378, 139.983, 11.5282, 1.25 ) }
    dend_32 { pt3dadd( -9.96278, 140.927, 11.7301, 1.25 ) }
    dend_32 { pt3dadd( -9.99128, 141.715, 11.9231, 1.25 ) }
    dend_32 { pt3dadd( -10.0492, 142.813, 12.2068, 1.25 ) }
    dend_32 { pt3dadd( -10.0544, 142.912, 12.234, 1.25 ) }
    dend_32 { pt3dadd( -10.1094, 143.818, 12.5078, 1.03 ) }
    dend_32 { pt3dadd( -10.1429, 144.534, 12.7485, 0.66 ) }
    dend_32 { pt3dadd( -10.1691, 145.235, 13.0183, 0.66 ) }
    dend_32 { pt3dadd( -10.1736, 146.073, 13.3929, 0.88 ) }
    dend_32 { pt3dadd( -10.1453, 146.804, 13.749, 1.18 ) }
    dend_32 { pt3dadd( -10.142, 146.85, 13.7729, 1.18 ) }
    dend_32 { pt3dadd( -10.0517, 147.655, 14.2086, 1.18 ) }
    dend_32 { pt3dadd( -10.0457, 147.692, 14.2311, 1.18 ) }
    dend_32 { pt3dadd( -9.91408, 148.507, 14.71, 1.18 ) }
    dend_32 { pt3dadd( -9.86358, 148.863, 14.924, 0.74 ) }
    dend_32 { pt3dadd( -9.82338, 149.399, 15.1845, 0.74 ) }
    dend_32 { pt3dadd( -9.80462, 149.848, 15.3493, 0.74 ) }
    dend_32 { pt3dadd( -9.80474, 150.004, 15.391, 0.74 ) }
    dend_32 { pt3dadd( -9.85358, 151.122, 15.6065, 0.74 ) }
    dend_32 { pt3dadd( -9.85768, 151.173, 15.6126, 0.74 ) }
    dend_32 { pt3dadd( -9.99878, 152.365, 15.7376, 0.74 ) }
    dend_32 { pt3dadd( -10.0569, 152.812, 15.7768, 1.11 ) }
    dend_32 { pt3dadd( -10.1378, 153.399, 15.8383, 1.25 ) }
    dend_32 { pt3dadd( -10.2142, 153.947, 15.9043, 1.25 ) }
    dend_32 { pt3dadd( -10.2209, 153.998, 15.9129, 1.25 ) }
    dend_32 { pt3dadd( -10.3188, 154.748, 16.0655, 0.74 ) }
    dend_32 { pt3dadd( -10.4289, 155.629, 16.2808, 0.59 ) }
    dend_32 { pt3dadd( -10.4745, 156.099, 16.4042, 0.59 ) }
    dend_32 { pt3dadd( -10.4764, 156.156, 16.419, 0.59 ) }
    dend_32 { pt3dadd( -10.4368, 156.936, 16.6238, 0.59 ) }
    dend_32 { pt3dadd( -10.3761, 157.447, 16.7541, 0.59 ) }
    dend_32 { pt3dadd( -10.3658, 157.496, 16.7661, 0.59 ) }
    dend_32 { pt3dadd( -10.2715, 157.892, 16.8796, 0.59 ) }
    dend_32 { pt3dadd( -10.2016, 158.212, 16.9713, 0.59 ) }
    dend_32 { pt3dadd( -10.0803, 158.815, 17.1297, 0.59 ) }
    dend_32 { pt3dadd( -9.98478, 159.393, 17.3162, 0.66 ) }
    dend_32 { pt3dadd( -9.97278, 159.466, 17.3417, 0.66 ) }
    dend_32 { pt3dadd( -9.90638, 159.981, 17.5304, 0.88 ) }
    dend_32 { pt3dadd( -9.88058, 160.404, 17.6975, 1.18 ) }
    dend_32 { pt3dadd( -9.88298, 160.913, 17.9161, 1.18 ) }
    dend_32 { pt3dadd( -9.95858, 161.858, 18.3773, 1.03 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 49/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -12.6525, 133.598, 9.06587, 0.59 ) }
    dend_29 { pt3dadd( -13.3459, 135.279, 7.8418, 0.59 ) }
    dend_29 { pt3dadd( -13.6556, 136.143, 7.21723, 0.59 ) }
    dend_29 { pt3dadd( -13.8406, 136.923, 6.71877, 0.59 ) }
    dend_29 { pt3dadd( -13.9113, 137.589, 6.32376, 0.59 ) }
    dend_29 { pt3dadd( -13.9353, 138.415, 5.86825, 0.37 ) }
    dend_29 { pt3dadd( -13.921, 139.617, 5.2346, 0.29 ) }
    dend_29 { pt3dadd( -13.9177, 139.675, 5.21204, 0.29 ) }
    dend_29 { pt3dadd( -13.7818, 140.771, 4.7906, 0.29 ) }
    dend_29 { pt3dadd( -13.5948, 141.974, 4.38007, 0.29 ) }
    dend_29 { pt3dadd( -13.5216, 142.433, 4.25462, 0.29 ) }
    dend_29 { pt3dadd( -13.5108, 142.503, 4.241, 0.29 ) }
    dend_29 { pt3dadd( -13.3882, 143.338, 4.06188, 0.29 ) }
    dend_29 { pt3dadd( -13.2903, 144.029, 3.88654, 0.29 ) }
    dend_29 { pt3dadd( -13.2069, 144.68, 3.65305, 0.88 ) }
    dend_29 { pt3dadd( -13.1079, 145.626, 3.26339, 1.18 ) }
    dend_29 { pt3dadd( -13.0512, 146.71, 2.65424, 1.03 ) }
    dend_29 { pt3dadd( -13.0679, 147.744, 1.98395, 0.52 ) }
    dend_29 { pt3dadd( -13.0999, 148.286, 1.58691, 0.44 ) }
    dend_29 { pt3dadd( -13.2642, 149.381, 0.74615, 0.88 ) }
    dend_29 { pt3dadd( -13.3923, 149.918, 0.329431, 1.11 ) }
    dend_29 { pt3dadd( -13.8505, 151.41, -0.807575, 0.52 ) }
    dend_29 { pt3dadd( -14.1556, 152.25, -1.38308, 0.52 ) }
    dend_29 { pt3dadd( -14.178, 152.31, -1.41678, 0.52 ) }
    dend_29 { pt3dadd( -14.5518, 153.311, -1.9447, 0.44 ) }
    dend_29 { pt3dadd( -14.839, 154.043, -2.26827, 0.44 ) }
    dend_29 { pt3dadd( -15.1975, 154.925, -2.66817, 0.44 ) }
    dend_29 { pt3dadd( -15.3902, 155.381, -2.86725, 1.11 ) }
    dend_29 { pt3dadd( -15.7813, 156.185, -3.26828, 1.11 ) }
    dend_29 { pt3dadd( -16.3648, 157.162, -3.86964, 0.44 ) }
    dend_29 { pt3dadd( -16.8767, 157.835, -4.41172, 0.37 ) }
    dend_29 { pt3dadd( -17.4705, 158.559, -5.09328, 1.11 ) }
    dend_29 { pt3dadd( -17.5065, 158.602, -5.13735, 1.11 ) }
    dend_29 { pt3dadd( -17.7852, 158.968, -5.54598, 1.25 ) }
    dend_29 { pt3dadd( -18.415, 159.921, -6.69729, 0.44 ) }
    dend_29 { pt3dadd( -18.8459, 160.724, -7.64933, 0.29 ) }
    dend_29 { pt3dadd( -19.2932, 161.752, -9.16808, 0.29 ) }
    dend_29 { pt3dadd( -19.3374, 161.867, -9.35618, 0.66 ) }
    dend_29 { pt3dadd( -19.6348, 162.713, -10.7778, 0.37 ) }
    dend_29 { pt3dadd( -19.839, 163.339, -11.8486, 1.03 ) }
    dend_29 { pt3dadd( -19.92, 163.608, -12.2902, 1.18 ) }
    dend_29 { pt3dadd( -20.6487, 166.068, -16.3696, 1.84 ) }
    dend_29 { pt3dadd( -20.6609, 166.104, -16.4297, 1.84 ) }
    dend_29 { pt3dadd( -20.8237, 166.517, -17.1328, 2.14 ) }
    dend_29 { pt3dadd( -21.4445, 167.695, -19.0764, 0.29 ) }
    dend_29 { pt3dadd( -21.7182, 168.139, -19.8183, 0.29 ) }
    dend_29 { pt3dadd( -22.1697, 168.792, -20.9484, 0.66 ) }
    dend_29 { pt3dadd( -22.3714, 169.045, -21.3817, 0.66 ) }
    dend_29 { pt3dadd( -23.5052, 170.298, -23.7192, 0.44 ) }
    dend_29 { pt3dadd( -24.6341, 171.401, -25.9956, 0.22 ) }
    dend_29 { pt3dadd( -25.5474, 172.081, -27.724, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_29 { pt3dadd( -26.6469, 172.699, -29.6601, 0.37 ) }
    dend_29 { pt3dadd( -27.1376, 172.912, -30.4871, 0.22 ) }
    dend_29 { pt3dadd( -27.489, 173.04, -31.0738, 0.29 ) }
    dend_29 { pt3dadd( -27.5329, 173.049, -31.141, 0.29 ) }
    dend_29 { pt3dadd( -28.9842, 173.046, -33.3467, 0.29 ) }
    dend_29 { pt3dadd( -29.4547, 172.979, -33.9468, 1.03 ) }
    dend_29 { pt3dadd( -30.6126, 172.604, -35.3917, 0.775 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 7/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 49.6609, -61.3413, 13.8751, 0.74 ) }
    dend_19 { pt3dadd( 49.8423, -61.9075, 13.9547, 0.74 ) }
    dend_19 { pt3dadd( 50.0096, -62.486, 14.0416, 0.74 ) }
    dend_19 { pt3dadd( 50.1829, -63.1233, 14.1099, 0.52 ) }
    dend_19 { pt3dadd( 50.431, -63.8416, 14.1555, 0.44 ) }
    dend_19 { pt3dadd( 50.7926, -64.8134, 14.2013, 0.96 ) }
    dend_19 { pt3dadd( 51.042, -65.4332, 14.2207, 0.96 ) }
    dend_19 { pt3dadd( 51.1838, -65.7815, 14.2287, 0.96 ) }
    dend_19 { pt3dadd( 51.6434, -66.8414, 14.2371, 0.66 ) }
    dend_19 { pt3dadd( 52.409, -68.4045, 14.1737, 0.52 ) }
    dend_19 { pt3dadd( 52.7246, -68.924, 14.122, 0.81 ) }
    dend_19 { pt3dadd( 53.2089, -69.6196, 14.0198, 1.11 ) }
    dend_19 { pt3dadd( 53.2576, -69.6823, 14.009, 1.11 ) }
    dend_19 { pt3dadd( 53.9409, -70.4958, 13.8595, 1.11 ) }
    dend_19 { pt3dadd( 55.0661, -71.7292, 13.6282, 0.44 ) }
    dend_19 { pt3dadd( 56.266, -72.9552, 13.3853, 0.44 ) }
    dend_19 { pt3dadd( 56.3877, -73.0733, 13.3629, 0.44 ) }
    dend_19 { pt3dadd( 57.0477, -73.6816, 13.2533, 1.03 ) }
    dend_19 { pt3dadd( 57.8415, -74.3796, 13.1354, 1.03 ) }
    dend_19 { pt3dadd( 58.748, -75.133, 13.0263, 1.03 ) }
    dend_19 { pt3dadd( 59.2248, -75.5204, 12.9875, 0.44 ) }
    dend_19 { pt3dadd( 60.2202, -76.3583, 12.9224, 0.44 ) }
    dend_19 { pt3dadd( 60.9119, -76.9427, 12.9047, 1.11 ) }
    dend_19 { pt3dadd( 61.6835, -77.627, 12.9217, 1.11 ) }
    dend_19 { pt3dadd( 62.2083, -78.1267, 12.9599, 0.52 ) }
    dend_19 { pt3dadd( 62.704, -78.6456, 13.0216, 0.52 ) }
    dend_19 { pt3dadd( 62.7633, -78.7147, 13.031, 0.52 ) }
    dend_19 { pt3dadd( 63.4165, -79.5363, 13.161, 0.37 ) }
    dend_19 { pt3dadd( 64.0894, -80.451, 13.3434, 0.37 ) }
    dend_19 { pt3dadd( 64.3709, -80.8474, 13.427, 0.37 ) }
    dend_19 { pt3dadd( 64.7745, -81.4245, 13.545, 1.25 ) }
    dend_19 { pt3dadd( 65.5032, -82.4248, 13.7245, 1.25 ) }
    dend_19 { pt3dadd( 65.6843, -82.6683, 13.7581, 1.25 ) }
    dend_19 { pt3dadd( 66.2942, -83.4818, 13.8393, 0.37 ) }
    dend_19 { pt3dadd( 66.8863, -84.2378, 13.9064, 0.37 ) }
    dend_19 { pt3dadd( 67.0432, -84.4356, 13.931, 0.37 ) }
    dend_19 { pt3dadd( 67.7763, -85.3713, 14.0738, 0.37 ) }
    dend_19 { pt3dadd( 68.7662, -86.652, 14.2851, 0.37 ) }
    dend_19 { pt3dadd( 68.8147, -86.7151, 14.2954, 0.37 ) }
    dend_19 { pt3dadd( 69.6458, -87.8052, 14.4572, 0.37 ) }
    dend_19 { pt3dadd( 70.2717, -88.6213, 14.5988, 1.03 ) }
    dend_19 { pt3dadd( 70.32, -88.6841, 14.6112, 1.03 ) }
    dend_19 { pt3dadd( 71.0279, -89.6284, 14.8563, 1.03 ) }
    dend_19 { pt3dadd( 71.0832, -89.6978, 14.8791, 1.03 ) }
    dend_19 { pt3dadd( 77.172, -99.4273, 15.2119, 1.03 ) }
    dend_19 { pt3dadd( 82.3276, -109.575, 16.9217, 1.03 ) }
    dend_19 { pt3dadd( 88.8495, -118.59, 19.7078, 1.03 ) }
    dend_19 { pt3dadd( 94.3217, -127.891, 23.6523, 1.03 ) }
    dend_19 { pt3dadd( 98.6314, -137.11, 29.0005, 1.03 ) }
    dend_19 { pt3dadd( 101.288, -145.489, 36.381, 1.03 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 57/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 49.6609, -61.3413, 13.8751, 0.81 ) }
    dend_18 { pt3dadd( 49.8306, -61.1934, 13.4894, 0.81 ) }
    dend_18 { pt3dadd( 49.8671, -61.1432, 13.4447, 0.81 ) }
    dend_18 { pt3dadd( 49.8671, -61.1432, 13.4447, 0.22 ) }
    dend_18 { pt3dadd( 50.0959, -60.3861, 13.4699, 0.59 ) }
    dend_18 { pt3dadd( 50.1155, -60.3211, 13.472, 0.59 ) }
    dend_18 { pt3dadd( 50.4768, -59.1251, 13.5118, 0.44 ) }
    dend_18 { pt3dadd( 50.6302, -58.5797, 13.5237, 0.44 ) }
    dend_18 { pt3dadd( 51.0949, -56.9494, 13.5283, 0.44 ) }
    dend_18 { pt3dadd( 51.1134, -56.8841, 13.5266, 0.44 ) }
    dend_18 { pt3dadd( 53.0065, -47.3705, 13.9991, 0.44 ) }
    dend_18 { pt3dadd( 53.5361, -37.6784, 13.5134, 0.44 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 69/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 92.1763, 269.339, -32.4861, 0.44 ) }
    dend_10 { pt3dadd( 92.2621, 270.229, -32.6849, 0.44 ) }
    dend_10 { pt3dadd( 92.34, 271.036, -32.8654, 0.44 ) }
    dend_10 { pt3dadd( 92.4189, 271.854, -33.0482, 0.29 ) }
    dend_10 { pt3dadd( 92.4886, 272.576, -33.2097, 0.29 ) }
    dend_10 { pt3dadd( 92.5873, 273.599, -33.4383, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 75/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 92.1763, 269.339, -32.4861, 0.29 ) }
    dend_9 { pt3dadd( 92.5152, 269.716, -32.5213, 0.29 ) }
    dend_9 { pt3dadd( 92.5812, 269.794, -32.531, 0.29 ) }
    dend_9 { pt3dadd( 93.0374, 270.388, -32.6127, 0.29 ) }
    dend_9 { pt3dadd( 93.4074, 270.972, -32.7276, 0.29 ) }
    dend_9 { pt3dadd( 93.7273, 271.597, -32.8351, 0.29 ) }
    dend_9 { pt3dadd( 93.9569, 272.183, -32.9525, 0.66 ) }
    dend_9 { pt3dadd( 93.9852, 272.287, -32.9726, 0.66 ) }
    dend_9 { pt3dadd( 94.0806, 272.825, -33.0988, 0.52 ) }
    dend_9 { pt3dadd( 94.1669, 273.726, -33.3684, 0.29 ) }
    dend_9 { pt3dadd( 94.2501, 274.833, -33.7356, 0.81 ) }
    dend_9 { pt3dadd( 94.3462, 275.833, -34.0914, 1.4 ) }
    dend_9 { pt3dadd( 94.4064, 276.359, -34.2811, 1.4 ) }
    dend_9 { pt3dadd( 94.564, 277.456, -34.7476, 0.44 ) }
    dend_9 { pt3dadd( 94.7746, 278.681, -35.3285, 0.22 ) }
    dend_9 { pt3dadd( 94.8695, 279.124, -35.5602, 0.22 ) }
    dend_9 { pt3dadd( 94.9747, 279.526, -35.7889, 0.59 ) }
    dend_9 { pt3dadd( 95.0137, 279.644, -35.8626, 0.59 ) }
    dend_9 { pt3dadd( 95.432, 280.674, -36.5558, 0.52 ) }
    dend_9 { pt3dadd( 95.6802, 281.253, -37.0132, 0.52 ) }
    dend_9 { pt3dadd( 95.7012, 281.304, -37.0523, 0.52 ) }
    dend_9 { pt3dadd( 95.9248, 281.853, -37.452, 0.52 ) }
    dend_9 { pt3dadd( 96.4147, 283.032, -38.2529, 1.11 ) }
    dend_9 { pt3dadd( 96.681, 283.657, -38.6598, 1.4 ) }
    dend_9 { pt3dadd( 97.3516, 285.125, -39.5483, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_9 { pt3dadd( 97.8765, 286.195, -40.2082, 0.66 ) }
    dend_9 { pt3dadd( 98.151, 286.742, -40.5494, 0.66 ) }
    dend_9 { pt3dadd( 98.3163, 287.051, -40.7317, 0.52 ) }
    dend_9 { pt3dadd( 98.8132, 287.966, -41.1666, 0.52 ) }
    dend_9 { pt3dadd( 99.0818, 288.455, -41.3701, 0.52 ) }
    dend_9 { pt3dadd( 99.1644, 288.59, -41.4142, 0.52 ) }
    dend_9 { pt3dadd( 99.8001, 289.592, -41.765, 1.18 ) }
    dend_9 { pt3dadd( 100.39, 290.485, -42.0427, 1.47 ) }
    dend_9 { pt3dadd( 100.712, 290.954, -42.1642, 0.37 ) }
    dend_9 { pt3dadd( 101.06, 291.436, -42.2493, 0.37 ) }
    dend_9 { pt3dadd( 101.609, 292.192, -42.3574, 0.37 ) }
    dend_9 { pt3dadd( 101.645, 292.248, -42.3634, 0.37 ) }
    dend_9 { pt3dadd( 102.263, 293.276, -42.4222, 0.37 ) }
    dend_9 { pt3dadd( 102.329, 293.405, -42.4319, 0.37 ) }
    dend_9 { pt3dadd( 102.63, 294.057, -42.4875, 0.37 ) }
    dend_9 { pt3dadd( 102.653, 294.121, -42.4919, 0.37 ) }
    dend_9 { pt3dadd( 103.171, 295.847, -42.4612, 0.37 ) }
    dend_9 { pt3dadd( 103.187, 295.903, -42.4566, 0.37 ) }
    dend_9 { pt3dadd( 103.312, 296.386, -42.3918, 0.37 ) }
    dend_9 { pt3dadd( 103.33, 296.451, -42.3808, 0.37 ) }
    dend_9 { pt3dadd( 103.513, 296.986, -42.2794, 0.37 ) }
    dend_9 { pt3dadd( 104.02, 298.195, -41.9887, 0.29 ) }
    dend_9 { pt3dadd( 104.453, 298.98, -41.7762, 0.29 ) }
    dend_9 { pt3dadd( 104.648, 299.304, -41.6922, 0.29 ) }
    dend_9 { pt3dadd( 104.685, 299.359, -41.6791, 0.29 ) }
    dend_9 { pt3dadd( 106.042, 301.22, -41.3072, 0.29 ) }
    dend_9 { pt3dadd( 106.612, 301.946, -41.1855, 0.15 ) }
    dend_9 { pt3dadd( 107.607, 303.161, -41.0184, 0.15 ) }
    dend_9 { pt3dadd( 107.651, 303.213, -41.0113, 0.15 ) }
    dend_9 { pt3dadd( 108.433, 304.117, -40.8901, 0.15 ) }
    dend_9 { pt3dadd( 109.661, 305.501, -40.7121, 0.15 ) }
    dend_9 { pt3dadd( 109.728, 305.568, -40.7048, 0.15 ) }
    // Section: dend_152, id: dend_152, parent: dend_150 (entry count 32/100)
    dend_152 { pt3dclear() }
    dend_152 { pt3dadd( -55.8842, -74.9675, -88.9991, 0.29 ) }
    dend_152 { pt3dadd( -58.2252, -77.7806, -89.5886, 0.29 ) }
    dend_152 { pt3dadd( -58.3019, -77.8728, -89.6079, 0.29 ) }
    dend_152 { pt3dadd( -61.1656, -81.3139, -90.3289, 0.29 ) }
    dend_152 { pt3dadd( -61.3427, -81.5267, -90.3735, 0.29 ) }
    dend_152 { pt3dadd( -64.1664, -84.9198, -91.0845, 0.29 ) }
    dend_152 { pt3dadd( -66.1666, -87.3233, -91.5881, 0.29 ) }
    // Section: dend_151, id: dend_151, parent: dend_150 (entry count 39/100)
    dend_151 { pt3dclear() }
    dend_151 { pt3dadd( -55.8842, -74.9675, -88.9991, 0.29 ) }
    dend_151 { pt3dadd( -55.6462, -75.0155, -89.0426, 0.29 ) }
    dend_151 { pt3dadd( -52.5685, -75.8447, -89.6854, 0.29 ) }
    dend_151 { pt3dadd( -52.4811, -75.882, -89.7036, 0.29 ) }
    dend_151 { pt3dadd( -50.3588, -76.96, -90.1448, 0.29 ) }
    dend_151 { pt3dadd( -50.1926, -77.0444, -90.1794, 0.29 ) }
    dend_151 { pt3dadd( -48.1779, -78.0678, -90.5983, 0.29 ) }
    dend_151 { pt3dadd( -48.0223, -78.1624, -90.6316, 0.29 ) }
    dend_151 { pt3dadd( -46.3151, -79.7388, -91.0031, 0.29 ) }
    dend_151 { pt3dadd( -46.2565, -79.7992, -91.0174, 0.29 ) }
    // Section: dend_147, id: dend_147, parent: dend_143 (entry count 49/100)
    dend_147 { pt3dclear() }
    dend_147 { pt3dadd( -21.0677, -45.4355, 16.2447, 0.29 ) }
    dend_147 { pt3dadd( -22.1042, -45.0922, -7.59346, 0.29 ) }
    dend_147 { pt3dadd( -22.1254, -45.0866, -7.99339, 0.29 ) }
    dend_147 { pt3dadd( -22.1301, -45.0859, -8.0641, 0.29 ) }
    dend_147 { pt3dadd( -22.1973, -45.0815, -8.9121, 0.29 ) }
    dend_147 { pt3dadd( -22.3014, -45.0847, -10.0094, 0.29 ) }
    dend_147 { pt3dadd( -22.4042, -45.099, -10.9369, 0.29 ) }
    dend_147 { pt3dadd( -22.4737, -45.1297, -10.9656, 0.29 ) }
    dend_147 { pt3dadd( -23.4664, -45.6856, -11.3189, 0.29 ) }
    dend_147 { pt3dadd( -23.9507, -45.9951, -11.4707, 0.29 ) }
    dend_147 { pt3dadd( -24.9354, -46.7159, -11.7228, 0.29 ) }
    dend_147 { pt3dadd( -25.7246, -47.3539, -11.8566, 0.29 ) }
    dend_147 { pt3dadd( -26.5781, -48.0945, -11.9686, 0.29 ) }
    dend_147 { pt3dadd( -27.6017, -49.0207, -12.0636, 0.29 ) }
    dend_147 { pt3dadd( -27.6528, -49.071, -12.0658, 0.29 ) }
    dend_147 { pt3dadd( -28.3122, -49.7688, -12.1343, 0.29 ) }
    dend_147 { pt3dadd( -29.0461, -50.59, -12.2301, 0.29 ) }
    dend_147 { pt3dadd( -29.9212, -51.5939, -12.3397, 0.29 ) }
    dend_147 { pt3dadd( -30.0219, -51.7168, -12.3642, 0.29 ) }
    dend_147 { pt3dadd( -30.6007, -52.3621, -12.5468, 0.29 ) }
    dend_147 { pt3dadd( -31.701, -53.451, -12.9154, 0.29 ) }
    dend_147 { pt3dadd( -33.063, -54.6951, -13.436, 0.29 ) }
    dend_147 { pt3dadd( -33.1154, -54.7385, -13.4578, 0.29 ) }
    dend_147 { pt3dadd( -34.2642, -55.643, -13.9541, 0.29 ) }
    dend_147 { pt3dadd( -35.232, -56.3825, -14.3666, 0.29 ) }
    dend_147 { pt3dadd( -36.1704, -57.0896, -14.7544, 0.29 ) }
    dend_147 { pt3dadd( -36.5701, -57.3999, -14.9019, 0.29 ) }
    dend_147 { pt3dadd( -36.6218, -57.4457, -14.9206, 0.29 ) }
    dend_147 { pt3dadd( -36.987, -57.8533, -15.0141, 0.29 ) }
    dend_147 { pt3dadd( -37.153, -58.1011, -15.0276, 0.29 ) }
    dend_147 { pt3dadd( -37.5358, -58.7542, -15.0448, 0.29 ) }
    dend_147 { pt3dadd( -37.6211, -58.891, -15.0488, 0.29 ) }
    dend_147 { pt3dadd( -38.347, -59.8226, -15.0948, 0.29 ) }
    dend_147 { pt3dadd( -39.0367, -60.6138, -15.1505, 0.29 ) }
    dend_147 { pt3dadd( -39.9615, -61.4794, -15.2291, 0.29 ) }
    dend_147 { pt3dadd( -40.7991, -62.162, -15.303, 0.29 ) }
    dend_147 { pt3dadd( -42.1893, -63.1611, -15.4818, 0.29 ) }
    dend_147 { pt3dadd( -43.7691, -64.1946, -15.7348, 0.29 ) }
    dend_147 { pt3dadd( -43.8398, -64.2328, -15.7481, 0.29 ) }
    dend_147 { pt3dadd( -45.3255, -64.8641, -16.1392, 0.29 ) }
    dend_147 { pt3dadd( -45.3992, -64.888, -16.1635, 0.29 ) }
    dend_147 { pt3dadd( -46.6536, -65.193, -16.6355, 0.29 ) }
    dend_147 { pt3dadd( -46.7275, -65.2058, -16.6663, 0.29 ) }
    dend_147 { pt3dadd( -47.6702, -65.3852, -17.0825, 0.29 ) }
    dend_147 { pt3dadd( -49.078, -65.6967, -17.6991, 0.29 ) }
    dend_147 { pt3dadd( -49.2143, -65.7322, -17.7563, 0.29 ) }
    dend_147 { pt3dadd( -50.4422, -66.0406, -18.2123, 0.29 ) }
    dend_147 { pt3dadd( -50.5849, -66.075, -18.252, 0.29 ) }
    dend_147 { pt3dadd( -51.4069, -66.2889, -18.4533, 0.29 ) }
    dend_147 { pt3dadd( -51.5009, -66.3152, -18.4765, 0.29 ) }
    dend_147 { pt3dadd( -53.5802, -66.8202, -18.9001, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_147 { pt3dadd( -53.6767, -66.841, -18.9232, 0.29 ) }
    dend_147 { pt3dadd( -55.4069, -67.179, -19.3846, 0.29 ) }
    dend_147 { pt3dadd( -55.4743, -67.1891, -19.4042, 0.29 ) }
    dend_147 { pt3dadd( -56.6345, -67.3249, -19.7587, 0.29 ) }
    dend_147 { pt3dadd( -58.85, -67.5321, -20.4141, 0.29 ) }
    dend_147 { pt3dadd( -60.416, -67.6537, -20.8673, 0.29 ) }
    dend_147 { pt3dadd( -60.5058, -67.6607, -20.8919, 0.29 ) }
    dend_147 { pt3dadd( -62.8376, -67.8173, -21.494, 0.29 ) }
    dend_147 { pt3dadd( -62.9958, -67.8293, -21.534, 0.29 ) }
    dend_147 { pt3dadd( -64.5194, -67.9626, -21.8936, 0.29 ) }
    dend_147 { pt3dadd( -64.735, -67.9849, -21.945, 0.29 ) }
    dend_147 { pt3dadd( -66.1455, -68.1374, -22.2445, 0.29 ) }
    dend_147 { pt3dadd( -66.9654, -68.2324, -22.3658, 0.29 ) }
    dend_147 { pt3dadd( -68.4916, -68.4299, -22.4796, 0.29 ) }
    dend_147 { pt3dadd( -68.6588, -68.4412, -22.484, 0.29 ) }
    dend_147 { pt3dadd( -69.9228, -68.4191, -22.5415, 0.29 ) }
    dend_147 { pt3dadd( -69.9928, -68.4081, -22.5382, 0.29 ) }
    dend_147 { pt3dadd( -71.436, -67.9596, -22.3124, 0.29 ) }
    dend_147 { pt3dadd( -71.5908, -67.8934, -22.2738, 0.29 ) }
    dend_147 { pt3dadd( -72.8172, -67.2565, -21.8567, 0.29 ) }
    dend_147 { pt3dadd( -74.0384, -66.5487, -21.4311, 0.29 ) }
    dend_147 { pt3dadd( -75.6597, -65.4427, -20.8505, 0.29 ) }
    dend_147 { pt3dadd( -75.7722, -65.3617, -20.8163, 0.29 ) }
    dend_147 { pt3dadd( -76.7006, -64.6242, -20.6625, 0.29 ) }
    // Section: dend_144, id: dend_144, parent: dend_143 (entry count 24/100)
    dend_144 { pt3dclear() }
    dend_144 { pt3dadd( -21.0677, -45.4355, 16.2447, 0.96 ) }
    dend_144 { pt3dadd( -21.2255, -45.9682, 16.6283, 0.96 ) }
    dend_144 { pt3dadd( -21.2421, -46.0306, 16.6724, 0.96 ) }
    dend_144 { pt3dadd( -21.4975, -47.024, 17.3739, 0.88 ) }
    dend_144 { pt3dadd( -21.669, -47.6355, 17.9334, 0.66 ) }
    dend_144 { pt3dadd( -21.6806, -47.6717, 17.9679, 0.66 ) }
    dend_144 { pt3dadd( -21.8001, -48.0534, 18.3288, 0.52 ) }
    dend_144 { pt3dadd( -22.0111, -48.7362, 18.977, 0.52 ) }
    dend_144 { pt3dadd( -22.0227, -48.7732, 19.0107, 0.52 ) }
    dend_144 { pt3dadd( -22.3789, -49.9645, 20.0346, 0.52 ) }
    dend_144 { pt3dadd( -22.5624, -50.5654, 20.5648, 0.52 ) }
    dend_144 { pt3dadd( -22.6349, -50.8169, 20.788, 0.52 ) }
    dend_144 { pt3dadd( -22.7638, -51.225, 21.1802, 0.52 ) }
    dend_144 { pt3dadd( -22.7731, -51.2629, 21.2136, 0.52 ) }
    dend_144 { pt3dadd( -22.917, -52.0099, 21.827, 0.52 ) }
    dend_144 { pt3dadd( -22.9171, -52.0481, 21.8615, 0.52 ) }
    dend_144 { pt3dadd( -22.8004, -52.6965, 22.6321, 0.52 ) }
    dend_144 { pt3dadd( -22.3831, -53.481, 23.8604, 0.52 ) }
    dend_144 { pt3dadd( -21.943, -53.9155, 24.7414, 0.52 ) }
    dend_144 { pt3dadd( -21.9128, -53.9348, 24.7872, 0.52 ) }
    dend_144 { pt3dadd( -20.7887, -54.3477, 26.0971, 0.52 ) }
    dend_144 { pt3dadd( -20.6953, -54.3691, 26.1854, 0.52 ) }
    dend_144 { pt3dadd( -19.7524, -54.4105, 26.846, 0.52 ) }
    dend_144 { pt3dadd( -19.7154, -54.4096, 26.8687, 0.52 ) }
    dend_144 { pt3dadd( -19.4375, -54.4053, 27.0733, 0.52 ) }
    dend_144 { pt3dadd( -19.3951, -54.4051, 27.1012, 0.52 ) }
    dend_144 { pt3dadd( -18.9835, -54.4197, 27.2563, 0.52 ) }
    dend_144 { pt3dadd( -18.4003, -54.4151, 27.4427, 0.52 ) }
    dend_144 { pt3dadd( -15.346, -57.8666, 33.0851, 0.52 ) }
    dend_144 { pt3dadd( -12.2612, -60.6938, 39.0333, 0.52 ) }
    dend_144 { pt3dadd( -8.77602, -63.8529, 44.5886, 0.52 ) }
    dend_144 { pt3dadd( -6.28783, -66.1547, 51.0128, 0.52 ) }
    dend_144 { pt3dadd( -3.5321, -68.5419, 57.2967, 0.52 ) }
    dend_144 { pt3dadd( -0.530431, -70.4674, 63.6186, 0.52 ) }
    dend_144 { pt3dadd( 2.28173, -73.3676, 69.6677, 0.52 ) }
    dend_144 { pt3dadd( 6.33133, -76.4269, 74.8828, 0.52 ) }
    dend_144 { pt3dadd( 9.7762, -80.1456, 80.1246, 0.52 ) }
    dend_144 { pt3dadd( 13.8653, -84.257, 84.5625, 0.52 ) }
    dend_144 { pt3dadd( 17.7601, -89.3327, 88.1422, 0.52 ) }
    // Section: dend_142, id: dend_142, parent: dend_141 (entry count 63/100)
    dend_142 { pt3dclear() }
    dend_142 { pt3dadd( -4.9204, -123.178, -7.72531, 0.74 ) }
    dend_142 { pt3dadd( -4.22924, -124.568, -8.28308, 0.74 ) }
    dend_142 { pt3dadd( -4.1915, -124.64, -8.3148, 0.74 ) }
    dend_142 { pt3dadd( -3.55956, -125.809, -8.84021, 0.74 ) }
    dend_142 { pt3dadd( -3.4845, -125.946, -8.88948, 0.74 ) }
    dend_142 { pt3dadd( -2.70325, -127.44, -9.3153, 0.74 ) }
    dend_142 { pt3dadd( -1.74612, -129.338, -9.77629, 1.4 ) }
    dend_142 { pt3dadd( -1.31378, -130.283, -9.94724, 1.4 ) }
    dend_142 { pt3dadd( -1.23379, -130.49, -9.98248, 1.4 ) }
    dend_142 { pt3dadd( -0.820635, -131.942, -10.21, 0.37 ) }
    dend_142 { pt3dadd( -0.596081, -133.029, -10.4407, 0.37 ) }
    dend_142 { pt3dadd( -0.552376, -133.249, -10.4942, 0.37 ) }
    dend_142 { pt3dadd( -0.31135, -134.172, -10.8392, 0.37 ) }
    dend_142 { pt3dadd( 0.0129232, -135.24, -11.3956, 1.18 ) }
    dend_142 { pt3dadd( 0.340198, -136.24, -12.0119, 1.47 ) }
    dend_142 { pt3dadd( 0.920312, -137.96, -13.1872, 0.52 ) }
    dend_142 { pt3dadd( 1.45928, -139.463, -14.2391, 0.37 ) }
    dend_142 { pt3dadd( 2.25807, -141.718, -15.8137, 0.37 ) }
    dend_142 { pt3dadd( 2.30388, -141.849, -15.8992, 0.37 ) }
    dend_142 { pt3dadd( 2.52962, -142.619, -16.2892, 1.4 ) }
    dend_142 { pt3dadd( 2.82518, -143.845, -16.7901, 1.4 ) }
    dend_142 { pt3dadd( 2.9056, -144.307, -16.9273, 1.4 ) }
    dend_142 { pt3dadd( 3.16636, -146.424, -17.3949, 0.66 ) }
    dend_142 { pt3dadd( 3.40886, -148.178, -17.6305, 0.59 ) }
    dend_142 { pt3dadd( 3.88799, -151.058, -17.9746, 0.59 ) }
    dend_142 { pt3dadd( 3.90296, -151.133, -17.9821, 0.59 ) }
    dend_142 { pt3dadd( 4.04035, -151.758, -18.0399, 1.33 ) }
    dend_142 { pt3dadd( 4.28026, -152.812, -18.1171, 0.74 ) }
    dend_142 { pt3dadd( 4.58196, -154.156, -18.1199, 0.52 ) }
    dend_142 { pt3dadd( 4.61208, -154.307, -18.1158, 0.52 ) }
    dend_142 { pt3dadd( 4.79534, -155.379, -18.0335, 0.52 ) }
    dend_142 { pt3dadd( 5.11043, -157.494, -17.8022, 0.52 ) }
    dend_142 { pt3dadd( 5.13049, -157.656, -17.7798, 0.52 ) }
    dend_142 { pt3dadd( 5.33587, -159.822, -17.4235, 0.52 ) }
    dend_142 { pt3dadd( 5.40826, -160.847, -17.1986, 1.25 ) }
    dend_142 { pt3dadd( 5.53278, -162.357, -16.8248, 1.25 ) }
    dend_142 { pt3dadd( 5.54148, -162.494, -16.7893, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_142 { pt3dadd( 5.58102, -163.663, -16.4278, 1.25 ) }
    dend_142 { pt3dadd( 5.58218, -163.736, -16.4052, 1.25 ) }
    dend_142 { pt3dadd( 5.5667, -165.467, -15.9009, 0.52 ) }
    dend_142 { pt3dadd( 5.52722, -167.205, -15.3946, 0.52 ) }
    dend_142 { pt3dadd( 5.45256, -169.474, -14.7506, 0.52 ) }
    dend_142 { pt3dadd( 5.41137, -170.942, -14.3504, 0.81 ) }
    dend_142 { pt3dadd( 5.40909, -171.016, -14.3298, 0.81 ) }
    dend_142 { pt3dadd( 5.39096, -171.79, -14.1235, 0.81 ) }
    dend_142 { pt3dadd( 5.38061, -172.355, -13.9791, 0.37 ) }
    dend_142 { pt3dadd( 5.38095, -173.39, -13.7069, 0.37 ) }
    dend_142 { pt3dadd( 5.44259, -174.271, -13.5094, 0.37 ) }
    dend_142 { pt3dadd( 5.4942, -174.84, -13.449, 0.74 ) }
    dend_142 { pt3dadd( 5.56318, -175.643, -13.4054, 0.74 ) }
    dend_142 { pt3dadd( 5.56963, -175.719, -13.4044, 0.74 ) }
    dend_142 { pt3dadd( 5.64031, -176.596, -13.4294, 0.74 ) }
    dend_142 { pt3dadd( 5.67508, -177.001, -13.4326, 0.74 ) }
    dend_142 { pt3dadd( 5.76791, -178.004, -13.4297, 0.44 ) }
    dend_142 { pt3dadd( 5.93134, -179.721, -13.4124, 0.44 ) }
    dend_142 { pt3dadd( 5.94757, -179.892, -13.405, 0.44 ) }
    dend_142 { pt3dadd( 6.06172, -181.268, -13.3078, 0.44 ) }
    dend_142 { pt3dadd( 6.1223, -182.1, -13.2477, 0.29 ) }
    dend_142 { pt3dadd( 6.12691, -182.177, -13.2428, 0.29 ) }
    dend_142 { pt3dadd( 6.177, -183.144, -13.1791, 0.29 ) }
    dend_142 { pt3dadd( 6.18654, -183.747, -13.1591, 0.29 ) }
    dend_142 { pt3dadd( 6.18616, -184.288, -13.1584, 0.29 ) }
    dend_142 { pt3dadd( 6.136, -185.469, -13.1961, 0.29 ) }
    dend_142 { pt3dadd( 6.02497, -187.316, -13.3043, 0.29 ) }
    dend_142 { pt3dadd( 6.01885, -187.393, -13.3095, 0.22 ) }
    dend_142 { pt3dadd( 5.91128, -188.381, -13.383, 0.29 ) }
    dend_142 { pt3dadd( 5.78368, -189.326, -13.4545, 0.29 ) }
    dend_142 { pt3dadd( 5.59692, -190.572, -13.5359, 0.29 ) }
    dend_142 { pt3dadd( 5.56067, -190.823, -13.5471, 0.29 ) }
    dend_142 { pt3dadd( 5.44518, -191.643, -13.5869, 0.29 ) }
    dend_142 { pt3dadd( 5.33399, -192.633, -13.6299, 0.29 ) }
    dend_142 { pt3dadd( 5.23091, -194.243, -13.6987, 0.29 ) }
    dend_142 { pt3dadd( 5.22834, -194.32, -13.7023, 0.37 ) }
    dend_142 { pt3dadd( 5.23031, -196.206, -13.8341, 0.29 ) }
    dend_142 { pt3dadd( 5.23379, -196.323, -13.8438, 0.29 ) }
    dend_142 { pt3dadd( 5.37187, -198.404, -14.0343, 0.29 ) }
    dend_142 { pt3dadd( 5.54326, -200.33, -14.2395, 0.29 ) }
    dend_142 { pt3dadd( 5.55687, -200.46, -14.2547, 0.37 ) }
    dend_142 { pt3dadd( 5.67894, -201.451, -14.3719, 0.29 ) }
    dend_142 { pt3dadd( 5.84366, -202.622, -14.5175, 0.29 ) }
    dend_142 { pt3dadd( 5.97582, -203.585, -14.6472, 0.29 ) }
    dend_142 { pt3dadd( 5.98398, -203.661, -14.6577, 0.29 ) }
    dend_142 { pt3dadd( 6.05463, -204.769, -14.871, 0.29 ) }
    dend_142 { pt3dadd( 6.0944, -206.006, -15.1433, 0.29 ) }
    dend_142 { pt3dadd( 6.09387, -206.253, -15.2021, 0.29 ) }
    dend_142 { pt3dadd( 6.04786, -207.48, -15.5408, 0.29 ) }
    dend_142 { pt3dadd( 5.97653, -208.69, -16.1177, 0.29 ) }
    dend_142 { pt3dadd( 5.8165, -209.998, -16.8932, 0.29 ) }
    dend_142 { pt3dadd( 5.79353, -210.121, -16.9804, 0.29 ) }
    dend_142 { pt3dadd( 5.61035, -210.858, -17.5689, 0.29 ) }
    dend_142 { pt3dadd( 5.45915, -211.444, -18.082, 0.29 ) }
    dend_142 { pt3dadd( 4.83464, -213.889, -20.3601, 0.29 ) }
    dend_142 { pt3dadd( 4.57506, -214.886, -21.3182, 0.29 ) }
    dend_142 { pt3dadd( 4.55817, -214.949, -21.3751, 0.29 ) }
    dend_142 { pt3dadd( 4.33461, -215.863, -22.1439, 0.29 ) }
    dend_142 { pt3dadd( 4.09618, -216.898, -22.9731, 0.29 ) }
    dend_142 { pt3dadd( 4.02726, -217.295, -23.2445, 0.29 ) }
    dend_142 { pt3dadd( 3.95842, -217.693, -23.466, 0.29 ) }
    dend_142 { pt3dadd( 3.71146, -219.154, -24.3277, 0.29 ) }
    dend_142 { pt3dadd( 3.48975, -220.014, -24.8826, 0.29 ) }
    dend_142 { pt3dadd( 3.46942, -220.075, -24.9242, 0.29 ) }
    dend_142 { pt3dadd( 2.97163, -221.26, -25.7998, 0.29 ) }
    dend_142 { pt3dadd( 2.19492, -222.82, -27.0429, 0.29 ) }
    dend_142 { pt3dadd( 2.15956, -222.881, -27.0935, 0.29 ) }
    dend_142 { pt3dadd( 0.994588, -224.524, -28.5298, 0.29 ) }
    dend_142 { pt3dadd( 0.944379, -224.588, -28.5885, 0.29 ) }
    dend_142 { pt3dadd( 0.294619, -225.344, -29.3102, 0.29 ) }
    dend_142 { pt3dadd( -0.0226898, -225.676, -29.6283, 0.29 ) }
    dend_142 { pt3dadd( -0.416594, -226.084, -30.0221, 0.29 ) }
    dend_142 { pt3dadd( -1.77011, -227.429, -31.3248, 0.29 ) }
    dend_142 { pt3dadd( -2.42294, -228.046, -31.9692, 0.29 ) }
    dend_142 { pt3dadd( -3.2879, -228.836, -32.8082, 0.29 ) }
    dend_142 { pt3dadd( -3.86001, -229.339, -33.357, 0.29 ) }
    dend_142 { pt3dadd( -4.59548, -229.997, -34.067, 0.29 ) }
    dend_142 { pt3dadd( -5.01243, -230.374, -34.4667, 0.29 ) }
    dend_142 { pt3dadd( -6.55072, -231.905, -35.812, 0.29 ) }
    dend_142 { pt3dadd( -7.30136, -232.743, -36.3565, 0.37 ) }
    dend_142 { pt3dadd( -7.34601, -232.799, -36.3829, 0.37 ) }
    dend_142 { pt3dadd( -7.84952, -233.494, -36.63, 0.29 ) }
    dend_142 { pt3dadd( -7.88978, -233.558, -36.6436, 0.29 ) }
    dend_142 { pt3dadd( -8.80266, -235.131, -36.8547, 0.29 ) }
    dend_142 { pt3dadd( -9.4317, -236.351, -36.8331, 0.29 ) }
    dend_142 { pt3dadd( -9.67969, -236.877, -36.8247, 0.29 ) }
    dend_142 { pt3dadd( -9.79073, -237.113, -36.8201, 0.29 ) }
    dend_142 { pt3dadd( -10.1092, -237.805, -36.8014, 0.29 ) }
    // Section: dend_125, id: dend_125, parent: dend_123 (entry count 88/100)
    dend_125 { pt3dclear() }
    dend_125 { pt3dadd( 87.1884, -179.599, 18.7143, 0.44 ) }
    dend_125 { pt3dadd( 89.8477, -189.207, 18.1444, 0.44 ) }
    dend_125 { pt3dadd( 93.6852, -198.383, 17.449, 0.44 ) }
    dend_125 { pt3dadd( 98.7182, -206.929, 18.2065, 0.44 ) }
    dend_125 { pt3dadd( 104.889, -214.672, 18.7861, 0.44 ) }
    // Section: dend_124, id: dend_124, parent: dend_123 (entry count 93/100)
    dend_124 { pt3dclear() }
    dend_124 { pt3dadd( 87.1884, -179.599, 18.7143, 0.29 ) }
    dend_124 { pt3dadd( 91.7305, -190.515, 17.0838, 0.44 ) }
    dend_124 { pt3dadd( 97.6819, -200.76, 15.8653, 0.44 ) }
    dend_124 { pt3dadd( 104.012, -210.437, 13.1016, 0.44 ) }
    dend_124 { pt3dadd( 112.026, -219.11, 12.0664, 0.44 ) }
    // Section: dend_118, id: dend_118, parent: dend_114 (entry count 98/100)
    dend_118 { pt3dclear() }
    dend_118 { pt3dadd( 27.6439, 183.657, 11.069, 0.44 ) }
    dend_118 { pt3dadd( 27.8766, 183.797, 11.0849, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_118 { pt3dadd( 29.0847, 184.695, 11.1895, 0.44 ) }
    dend_118 { pt3dadd( 29.3016, 184.868, 11.2094, 0.44 ) }
    dend_118 { pt3dadd( 30.257, 185.818, 11.2837, 0.44 ) }
    dend_118 { pt3dadd( 30.3224, 185.89, 11.2883, 0.44 ) }
    dend_118 { pt3dadd( 32.1107, 188.21, 11.3717, 0.44 ) }
    dend_118 { pt3dadd( 33.1099, 189.706, 11.4163, 0.44 ) }
    dend_118 { pt3dadd( 33.1688, 189.812, 11.4135, 0.44 ) }
    dend_118 { pt3dadd( 34.1627, 191.819, 11.2761, 0.44 ) }
    dend_118 { pt3dadd( 34.202, 191.908, 11.2663, 0.44 ) }
    dend_118 { pt3dadd( 35.0358, 193.996, 10.9438, 0.44 ) }
    dend_118 { pt3dadd( 35.0638, 194.088, 10.9234, 0.44 ) }
    dend_118 { pt3dadd( 35.6823, 196.088, 10.4287, 0.44 ) }
    dend_118 { pt3dadd( 35.7088, 196.166, 10.4045, 0.44 ) }
    dend_118 { pt3dadd( 35.9739, 196.846, 10.1293, 1.03 ) }
    dend_118 { pt3dadd( 36.0528, 197.063, 10.0308, 1.03 ) }
    dend_118 { pt3dadd( 36.3639, 197.966, 9.53565, 1.03 ) }
    dend_118 { pt3dadd( 36.381, 198.041, 9.49785, 1.03 ) }
    dend_118 { pt3dadd( 36.4928, 199.25, 8.94464, 0.37 ) }
    dend_118 { pt3dadd( 36.4901, 199.331, 8.91631, 0.37 ) }
    dend_118 { pt3dadd( 36.4037, 200.186, 8.65996, 0.29 ) }
    dend_118 { pt3dadd( 36.3932, 200.279, 8.63007, 0.29 ) }
    dend_118 { pt3dadd( 36.2537, 201.383, 8.27217, 0.29 ) }
    dend_118 { pt3dadd( 36.2434, 201.465, 8.2475, 0.29 ) }
    dend_118 { pt3dadd( 35.8677, 204.03, 7.56491, 0.29 ) }
    dend_118 { pt3dadd( 35.8554, 204.111, 7.53874, 0.29 ) }
    dend_118 { pt3dadd( 35.5801, 205.814, 6.91622, 0.29 ) }
    dend_118 { pt3dadd( 35.5648, 205.905, 6.88227, 0.29 ) }
    dend_118 { pt3dadd( 35.4012, 206.823, 6.52904, 1.03 ) }
    dend_118 { pt3dadd( 35.2327, 207.679, 6.21047, 1.03 ) }
    dend_118 { pt3dadd( 35.0133, 208.728, 5.83295, 0.29 ) }
    dend_118 { pt3dadd( 34.6906, 210.089, 5.40991, 0.29 ) }
    dend_118 { pt3dadd( 34.259, 211.709, 4.99761, 0.29 ) }
    dend_118 { pt3dadd( 34.1529, 212.083, 4.90088, 0.29 ) }
    dend_118 { pt3dadd( 33.8446, 213.089, 4.65091, 0.29 ) }
    dend_118 { pt3dadd( 33.6835, 213.593, 4.54406, 1.11 ) }
    dend_118 { pt3dadd( 33.4446, 214.353, 4.41615, 1.11 ) }
    dend_118 { pt3dadd( 33.4195, 214.434, 4.40217, 1.11 ) }
    dend_118 { pt3dadd( 33.2286, 215.183, 4.2627, 0.29 ) }
    dend_118 { pt3dadd( 32.8619, 216.917, 4.00537, 0.29 ) }
    dend_118 { pt3dadd( 32.4021, 219.404, 3.68921, 0.29 ) }
    dend_118 { pt3dadd( 32.0623, 221.345, 3.48675, 0.29 ) }
    dend_118 { pt3dadd( 32.0488, 221.43, 3.47959, 0.29 ) }
    dend_118 { pt3dadd( 31.5358, 224.845, 3.23497, 0.29 ) }
    dend_118 { pt3dadd( 31.2632, 226.921, 3.13697, 0.29 ) }
    dend_118 { pt3dadd( 31.2454, 227.105, 3.13124, 0.59 ) }
    dend_118 { pt3dadd( 31.2214, 227.548, 3.12914, 0.59 ) }
    dend_118 { pt3dadd( 31.2161, 227.646, 3.13175, 0.59 ) }
    dend_118 { pt3dadd( 32.452, 239.833, 2.15616, 0.59 ) }
    // Section: dend_115, id: dend_115, parent: dend_114 (entry count 48/100)
    dend_115 { pt3dclear() }
    dend_115 { pt3dadd( 27.6439, 183.657, 11.069, 0.52 ) }
    dend_115 { pt3dadd( 27.7629, 185.368, 9.65417, 0.52 ) }
    dend_115 { pt3dadd( 27.8746, 186.586, 8.61351, 0.52 ) }
    dend_115 { pt3dadd( 27.8871, 186.675, 8.53745, 0.52 ) }
    dend_115 { pt3dadd( 28.2669, 188.358, 6.9642, 0.52 ) }
    dend_115 { pt3dadd( 28.6364, 189.758, 5.59884, 0.52 ) }
    dend_115 { pt3dadd( 28.7137, 190.016, 5.34345, 0.81 ) }
    dend_115 { pt3dadd( 28.755, 190.11, 5.2414, 0.81 ) }
    dend_115 { pt3dadd( 29.0377, 190.644, 4.6423, 0.81 ) }
    dend_115 { pt3dadd( 29.9234, 192.24, 2.97145, 0.66 ) }
    dend_115 { pt3dadd( 29.9789, 192.331, 2.88735, 0.66 ) }
    dend_115 { pt3dadd( 30.4256, 193.054, 2.35971, 1.47 ) }
    dend_115 { pt3dadd( 30.8579, 193.706, 1.92846, 1.77 ) }
    dend_115 { pt3dadd( 31.4873, 194.624, 1.40779, 0.81 ) }
    dend_115 { pt3dadd( 31.5402, 194.704, 1.37187, 0.81 ) }
    dend_115 { pt3dadd( 31.9574, 195.347, 1.15139, 0.52 ) }
    dend_115 { pt3dadd( 32.7875, 196.719, 0.710351, 0.29 ) }
    dend_115 { pt3dadd( 33.1764, 197.428, 0.505273, 1.4 ) }
    dend_115 { pt3dadd( 33.6338, 198.368, 0.256091, 1.47 ) }
    dend_115 { pt3dadd( 34.1235, 199.583, -0.0207412, 0.59 ) }
    dend_115 { pt3dadd( 34.3286, 200.171, -0.147506, 0.59 ) }
    dend_115 { pt3dadd( 34.7446, 201.62, -0.442081, 0.59 ) }
    dend_115 { pt3dadd( 34.9587, 202.54, -0.613695, 0.52 ) }
    dend_115 { pt3dadd( 35.1681, 203.467, -0.765912, 0.52 ) }
    dend_115 { pt3dadd( 35.7414, 205.714, -1.09232, 0.52 ) }
    dend_115 { pt3dadd( 35.7776, 205.845, -1.10557, 0.52 ) }
    dend_115 { pt3dadd( 35.8805, 206.215, -1.12952, 0.88 ) }
    dend_115 { pt3dadd( 36.1615, 207.193, -1.17508, 0.88 ) }
    dend_115 { pt3dadd( 36.6466, 208.951, -1.22938, 0.44 ) }
    dend_115 { pt3dadd( 37.0352, 210.695, -1.26218, 0.44 ) }
    dend_115 { pt3dadd( 37.197, 211.705, -1.27129, 1.03 ) }
    dend_115 { pt3dadd( 37.2934, 212.553, -1.29648, 1.03 ) }
    dend_115 { pt3dadd( 37.2983, 212.643, -1.30067, 1.03 ) }
    dend_115 { pt3dadd( 37.2386, 213.512, -1.36079, 0.59 ) }
    dend_115 { pt3dadd( 36.8859, 215.47, -1.54771, 0.29 ) }
    dend_115 { pt3dadd( 36.7195, 216.111, -1.62843, 0.96 ) }
    dend_115 { pt3dadd( 36.5173, 216.788, -1.73275, 0.59 ) }
    dend_115 { pt3dadd( 36.3713, 217.23, -1.79958, 0.29 ) }
    dend_115 { pt3dadd( 35.6742, 219.246, -2.07847, 0.29 ) }
    dend_115 { pt3dadd( 35.6437, 219.33, -2.08921, 0.59 ) }
    dend_115 { pt3dadd( 35.2592, 220.37, -2.20492, 0.29 ) }
    dend_115 { pt3dadd( 34.844, 221.516, -2.32619, 0.29 ) }
    dend_115 { pt3dadd( 34.7984, 221.645, -2.33855, 0.29 ) }
    dend_115 { pt3dadd( 34.1077, 223.744, -2.56371, 0.29 ) }
    dend_115 { pt3dadd( 34.0261, 224.014, -2.59612, 0.29 ) }
    dend_115 { pt3dadd( 33.8023, 224.729, -2.68392, 1.11 ) }
    dend_115 { pt3dadd( 33.5939, 225.357, -2.76209, 1.11 ) }
    dend_115 { pt3dadd( 33.5687, 225.43, -2.77109, 1.11 ) }
    dend_115 { pt3dadd( 33.1605, 226.536, -2.90097, 0.37 ) }
    dend_115 { pt3dadd( 33.0576, 226.8, -2.90838, 0.37 ) }
    dend_115 { pt3dadd( 32.6018, 227.954, -2.8719, 0.37 ) }
    dend_115 { pt3dadd( 32.1915, 228.971, -2.79124, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_115 { pt3dadd( 32.0831, 229.231, -2.75999, 0.37 ) }
    dend_115 { pt3dadd( 31.7819, 229.993, -2.58824, 0.37 ) }
    dend_115 { pt3dadd( 31.1026, 231.768, -2.08361, 0.37 ) }
    dend_115 { pt3dadd( 30.8905, 232.337, -1.90382, 0.66 ) }
    dend_115 { pt3dadd( 30.8587, 232.431, -1.87513, 0.66 ) }
    dend_115 { pt3dadd( 30.7142, 232.86, -1.75453, 0.66 ) }
    dend_115 { pt3dadd( 29.688, 235.772, -1.04158, 0.44 ) }
    dend_115 { pt3dadd( 29.1924, 236.96, -0.786148, 0.44 ) }
    dend_115 { pt3dadd( 29.0998, 237.156, -0.752197, 0.44 ) }
    dend_115 { pt3dadd( 28.1301, 239.081, -0.429192, 1.33 ) }
    dend_115 { pt3dadd( 27.6672, 239.98, -0.291695, 1.47 ) }
    dend_115 { pt3dadd( 27.2058, 240.83, -0.185544, 0.88 ) }
    dend_115 { pt3dadd( 25.8565, 242.97, -0.0679881, 0.59 ) }
    dend_115 { pt3dadd( 25.3655, 243.692, -0.011013, 1.03 ) }
    dend_115 { pt3dadd( 24.9047, 244.315, 0.0541813, 0.74 ) }
    // Section: dend_107, id: dend_107, parent: dend_105 (entry count 15/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( 67.2619, 9.39125, 10.9383, 0.22 ) }
    dend_107 { pt3dadd( 67.5804, 9.12033, 10.986, 0.22 ) }
    dend_107 { pt3dadd( 67.9314, 8.8218, 11.0386, 0.22 ) }
    dend_107 { pt3dadd( 68.3659, 8.45218, 11.1038, 0.22 ) }
    dend_107 { pt3dadd( 68.4251, 8.40183, 11.1126, 0.22 ) }
    dend_107 { pt3dadd( 68.9824, 7.92776, 11.1962, 0.44 ) }
    dend_107 { pt3dadd( 77.4235, 3.16512, 12.138, 0.44 ) }
    dend_107 { pt3dadd( 85.575, -1.92901, 13.737, 0.44 ) }
    dend_107 { pt3dadd( 93.9012, -6.88407, 14.7489, 0.44 ) }
    dend_107 { pt3dadd( 101.915, -12.442, 15.0553, 0.44 ) }
    dend_107 { pt3dadd( 109.74, -18.2735, 15.3912, 0.44 ) }
    dend_107 { pt3dadd( 117.816, -23.7227, 14.89, 0.44 ) }
    dend_107 { pt3dadd( 126.37, -28.1959, 16.1237, 0.44 ) }
    dend_107 { pt3dadd( 134.824, -32.6838, 17.8791, 0.44 ) }
    dend_107 { pt3dadd( 142.571, -38.1606, 20.141, 0.44 ) }
    dend_107 { pt3dadd( 150.273, -43.8333, 22.0698, 0.44 ) }
    // Section: dend_106, id: dend_106, parent: dend_105 (entry count 31/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( 67.2619, 9.39125, 10.9383, 0.37 ) }
    dend_106 { pt3dadd( 67.3315, 9.48655, 10.9365, 0.37 ) }
    dend_106 { pt3dadd( 67.6077, 9.86478, 10.9293, 0.37 ) }
    dend_106 { pt3dadd( 68.1183, 10.5639, 10.9159, 0.37 ) }
    dend_106 { pt3dadd( 72.0909, 20.9414, 10.0036, 0.37 ) }
    dend_106 { pt3dadd( 76.6401, 30.773, 7.52478, 0.37 ) }
    dend_106 { pt3dadd( 80.9109, 41.0638, 7.08553, 0.37 ) }
    dend_106 { pt3dadd( 85.1644, 51.3515, 6.4806, 0.37 ) }
    dend_106 { pt3dadd( 90.78, 60.8476, 5.15584, 0.37 ) }
    dend_106 { pt3dadd( 95.2354, 71.0671, 4.96169, 0.37 ) }
    dend_106 { pt3dadd( 99.4507, 81.1315, 2.79411, 0.37 ) }
    dend_106 { pt3dadd( 104.726, 90.9307, 2.49966, 0.37 ) }
    dend_106 { pt3dadd( 111.366, 99.7765, 3.5289, 0.37 ) }
    dend_106 { pt3dadd( 117.962, 108.68, 2.93664, 0.37 ) }
    // Section: dend_102, id: dend_102, parent: dend_100 (entry count 45/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 100.716, -59.8471, -32.784, 0.44 ) }
    dend_102 { pt3dadd( 104.927, -65.3848, -35.5439, 0.44 ) }
    dend_102 { pt3dadd( 109.629, -69.8478, -39.2419, 0.44 ) }
    dend_102 { pt3dadd( 113.446, -75.1962, -42.8399, 0.44 ) }
    dend_102 { pt3dadd( 117.006, -81.3258, -45.2895, 0.44 ) }
    // Section: dend_101, id: dend_101, parent: dend_100 (entry count 50/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 100.716, -59.8471, -32.784, 0.29 ) }
    dend_101 { pt3dadd( 104.598, -65.089, -35.3475, 0.44 ) }
    dend_101 { pt3dadd( 107.268, -70.847, -38.375, 0.44 ) }
    dend_101 { pt3dadd( 109.334, -76.3585, -42.2192, 0.44 ) }
    dend_101 { pt3dadd( 111.301, -81.343, -46.7484, 0.44 ) }
    // Section: dend_96, id: dend_96, parent: dend_91 (entry count 55/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -40.2935, 28.2065, 26.3942, 0.29 ) }
    dend_96 { pt3dadd( -41.3309, 29.3598, 25.9109, 0.29 ) }
    dend_96 { pt3dadd( -41.7311, 29.8821, 25.7109, 0.29 ) }
    dend_96 { pt3dadd( -41.7778, 29.9431, 25.6875, 0.29 ) }
    dend_96 { pt3dadd( -42.3734, 30.7205, 25.3899, 0.29 ) }
    dend_96 { pt3dadd( -42.7616, 31.2273, 25.1959, 0.29 ) }
    dend_96 { pt3dadd( -42.8025, 31.2807, 25.1755, 0.29 ) }
    dend_96 { pt3dadd( -43.2113, 31.9148, 24.8711, 0.29 ) }
    dend_96 { pt3dadd( -48.6792, 40.1029, 22.8357, 0.29 ) }
    dend_96 { pt3dadd( -54.6881, 47.3418, 19.3774, 0.29 ) }
    dend_96 { pt3dadd( -60.5575, 55.3633, 17.914, 0.29 ) }
    dend_96 { pt3dadd( -65.5252, 64.1183, 17.6644, 0.29 ) }
    dend_96 { pt3dadd( -71.072, 72.4885, 18.1364, 0.29 ) }
    dend_96 { pt3dadd( -78.0278, 79.6339, 17.2144, 0.29 ) }
    dend_96 { pt3dadd( -84.8851, 86.7029, 15.3991, 0.29 ) }
    dend_96 { pt3dadd( -92.5978, 93.041, 15.5983, 0.29 ) }
    dend_96 { pt3dadd( -100.255, 99.323, 16.8158, 0.29 ) }
    dend_96 { pt3dadd( -107.712, 105.8, 18.2788, 0.29 ) }
    // Section: dend_95, id: dend_95, parent: dend_91 (entry count 73/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -40.2935, 28.2065, 26.3942, 1.11 ) }
    dend_95 { pt3dadd( -41.5528, 28.2728, 27.1602, 1.11 ) }
    dend_95 { pt3dadd( -42.8887, 28.3187, 27.8707, 1.11 ) }
    dend_95 { pt3dadd( -44.6202, 28.3417, 28.9018, 0.52 ) }
    dend_95 { pt3dadd( -45.3751, 28.3621, 29.3569, 0.52 ) }
    dend_95 { pt3dadd( -45.4472, 28.3646, 29.4009, 0.52 ) }
    dend_95 { pt3dadd( -46.8306, 28.4427, 30.202, 0.52 ) }
    dend_95 { pt3dadd( -46.9529, 28.4552, 30.2617, 0.52 ) }
    dend_95 { pt3dadd( -48.5473, 28.7207, 31.0018, 0.52 ) }
    dend_95 { pt3dadd( -49.2764, 28.9071, 31.2683, 0.52 ) }
    dend_95 { pt3dadd( -49.3403, 28.9337, 31.2904, 0.52 ) }
    dend_95 { pt3dadd( -50.3977, 29.5772, 31.6965, 0.52 ) }
    dend_95 { pt3dadd( -50.6891, 29.7929, 31.8059, 0.52 ) }
    dend_95 { pt3dadd( -51.5948, 30.4813, 32.1034, 0.52 ) }
    dend_95 { pt3dadd( -52.181, 30.9052, 32.2499, 0.52 ) }
    dend_95 { pt3dadd( -53.2477, 31.5549, 32.5175, 0.52 ) }
    dend_95 { pt3dadd( -54.6834, 32.2078, 32.8836, 0.52 ) }
    dend_95 { pt3dadd( -55.8592, 32.4783, 33.2033, 0.52 ) }
    dend_95 { pt3dadd( -55.967, 32.4414, 33.2629, 0.52 ) }
    dend_95 { pt3dadd( -56.5996, 31.8454, 33.9914, 0.81 ) }
    dend_95 { pt3dadd( -57.1333, 31.1666, 34.804, 0.81 ) }
    dend_95 { pt3dadd( -57.5492, 30.5695, 35.5007, 0.37 ) }
    dend_95 { pt3dadd( -57.8275, 30.136, 36.0062, 0.37 ) }
    dend_95 { pt3dadd( -59.258, 28.0219, 38.6657, 0.37 ) }
    dend_95 { pt3dadd( -60.0586, 27.0136, 40.0985, 0.37 ) }
    dend_95 { pt3dadd( -60.0976, 26.9761, 40.1639, 0.37 ) }
    dend_95 { pt3dadd( -60.7675, 26.5374, 41.1353, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_95 { pt3dadd( -60.9621, 26.4755, 41.3057, 0.37 ) }
    dend_95 { pt3dadd( -62.0196, 26.3711, 41.6691, 0.37 ) }
    dend_95 { pt3dadd( -62.3953, 26.3734, 41.6721, 0.37 ) }
    dend_95 { pt3dadd( -63.3863, 26.3938, 41.5876, 0.37 ) }
    dend_95 { pt3dadd( -63.5666, 26.398, 41.5713, 0.37 ) }
    dend_95 { pt3dadd( -65.4472, 26.4511, 41.3838, 0.37 ) }
    dend_95 { pt3dadd( -66.3263, 26.4817, 41.2901, 0.37 ) }
    dend_95 { pt3dadd( -67.0395, 26.5159, 41.2056, 0.37 ) }
    dend_95 { pt3dadd( -67.2191, 26.5187, 41.1823, 0.37 ) }
    dend_95 { pt3dadd( -78.3555, 26.9246, 45.8369, 0.37 ) }
    dend_95 { pt3dadd( -89.3765, 29.3092, 50.1929, 0.37 ) }
    dend_95 { pt3dadd( -99.8164, 30.5452, 56.1437, 0.37 ) }
    dend_95 { pt3dadd( -109.502, 31.8594, 63.2432, 0.37 ) }
    dend_95 { pt3dadd( -119.27, 34.8338, 69.7281, 0.37 ) }
    dend_95 { pt3dadd( -128.756, 38.3373, 76.3804, 0.37 ) }
    dend_95 { pt3dadd( -138.203, 43.4903, 81.9835, 0.37 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 16/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( -40.2935, 28.2065, 26.3942, 1.33 ) }
    dend_92 { pt3dadd( -40.2906, 28.2742, 26.3959, 1.33 ) }
    dend_92 { pt3dadd( -40.2902, 28.8537, 26.4104, 1.11 ) }
    dend_92 { pt3dadd( -40.3553, 29.7286, 26.4315, 0.88 ) }
    dend_92 { pt3dadd( -40.4902, 31.0062, 26.462, 0.88 ) }
    dend_92 { pt3dadd( -40.4988, 31.0734, 26.4636, 0.88 ) }
    dend_92 { pt3dadd( -40.7396, 32.8678, 26.5629, 0.74 ) }
    dend_92 { pt3dadd( -40.7552, 32.9691, 26.5704, 0.74 ) }
    dend_92 { pt3dadd( -40.961, 34.2757, 26.6869, 0.74 ) }
    dend_92 { pt3dadd( -40.9706, 34.3423, 26.6939, 0.74 ) }
    dend_92 { pt3dadd( -41.1856, 36.3868, 26.8501, 0.74 ) }
    dend_92 { pt3dadd( -41.2947, 37.7367, 26.9159, 0.74 ) }
    dend_92 { pt3dadd( -41.2984, 37.8043, 26.9178, 0.74 ) }
    dend_92 { pt3dadd( -41.3393, 38.8295, 26.9187, 0.74 ) }
    dend_92 { pt3dadd( -41.3663, 39.9072, 26.8495, 0.74 ) }
    dend_92 { pt3dadd( -41.4129, 41.6021, 26.6416, 0.74 ) }
    dend_92 { pt3dadd( -41.4513, 43.1025, 26.341, 0.74 ) }
    dend_92 { pt3dadd( -41.4534, 43.1683, 26.3254, 0.74 ) }
    dend_92 { pt3dadd( -41.4705, 43.7265, 26.1644, 1.03 ) }
    dend_92 { pt3dadd( -41.4699, 44.9991, 25.7488, 0.81 ) }
    dend_92 { pt3dadd( -41.4649, 45.0621, 25.7254, 0.81 ) }
    dend_92 { pt3dadd( -41.3186, 45.8387, 25.4096, 0.81 ) }
    dend_92 { pt3dadd( -40.8418, 47.6169, 24.6236, 0.59 ) }
    dend_92 { pt3dadd( -40.4308, 49.0123, 24.019, 0.59 ) }
    dend_92 { pt3dadd( -40.1163, 49.9895, 23.6039, 0.59 ) }
    dend_92 { pt3dadd( -39.6739, 51.2701, 23.1246, 0.59 ) }
    dend_92 { pt3dadd( -39.1577, 52.7753, 22.5985, 0.59 ) }
    dend_92 { pt3dadd( -39.1396, 52.8275, 22.5816, 0.59 ) }
    dend_92 { pt3dadd( -38.6489, 54.2382, 22.3348, 0.59 ) }
    dend_92 { pt3dadd( -38.6262, 54.3239, 22.344, 0.59 ) }
    dend_92 { pt3dadd( -38.4456, 55.5834, 22.8487, 0.59 ) }
    dend_92 { pt3dadd( -38.44, 55.9833, 23.1011, 0.81 ) }
    dend_92 { pt3dadd( -38.4822, 56.4449, 23.4265, 0.81 ) }
    dend_92 { pt3dadd( -38.7765, 58.5694, 24.9515, 0.81 ) }
    dend_92 { pt3dadd( -38.9071, 59.2963, 25.4857, 0.81 ) }
    dend_92 { pt3dadd( -39.0747, 60.186, 26.0773, 0.74 ) }
    dend_92 { pt3dadd( -39.2469, 61.1196, 26.6556, 0.74 ) }
    dend_92 { pt3dadd( -39.4692, 62.5064, 27.4406, 0.74 ) }
    dend_92 { pt3dadd( -39.4766, 62.5583, 27.4651, 0.74 ) }
    dend_92 { pt3dadd( -39.6457, 63.9141, 27.9124, 0.74 ) }
    dend_92 { pt3dadd( -39.7771, 65.1796, 28.2452, 0.74 ) }
    dend_92 { pt3dadd( -39.8491, 66.0854, 28.4155, 1.03 ) }
    dend_92 { pt3dadd( -39.8823, 66.6388, 28.5009, 1.03 ) }
    dend_92 { pt3dadd( -39.9595, 67.6947, 28.6262, 0.52 ) }
    dend_92 { pt3dadd( -40.1176, 69.0441, 28.7312, 0.52 ) }
    dend_92 { pt3dadd( -40.3562, 70.36, 28.7678, 0.52 ) }
    dend_92 { pt3dadd( -40.5327, 71.0551, 28.8055, 0.52 ) }
    dend_92 { pt3dadd( -40.5797, 71.2073, 28.8179, 0.52 ) }
    dend_92 { pt3dadd( -41.1151, 72.7398, 29.0216, 0.52 ) }
    dend_92 { pt3dadd( -41.5858, 73.9804, 29.2609, 0.52 ) }
    dend_92 { pt3dadd( -41.8748, 74.7058, 29.4517, 0.52 ) }
    dend_92 { pt3dadd( -42.3826, 76.1039, 29.9774, 0.52 ) }
    dend_92 { pt3dadd( -42.4634, 76.3572, 30.0861, 0.66 ) }
    dend_92 { pt3dadd( -42.4772, 76.4168, 30.1142, 0.66 ) }
    dend_92 { pt3dadd( -42.5229, 77.1074, 30.4798, 0.66 ) }
    dend_92 { pt3dadd( -42.5016, 77.243, 30.5522, 0.66 ) }
    dend_92 { pt3dadd( -42.1056, 78.5481, 31.2164, 0.52 ) }
    dend_92 { pt3dadd( -42.0831, 78.6057, 31.243, 0.52 ) }
    dend_92 { pt3dadd( -41.8264, 79.2207, 31.5167, 0.88 ) }
    dend_92 { pt3dadd( -41.572, 79.8133, 31.7713, 0.88 ) }
    dend_92 { pt3dadd( -41.3272, 80.3923, 32.0006, 0.88 ) }
    dend_92 { pt3dadd( -40.8797, 81.5167, 32.3843, 0.29 ) }
    dend_92 { pt3dadd( -40.8574, 81.5785, 32.3997, 0.29 ) }
    dend_92 { pt3dadd( -40.5419, 82.5516, 32.611, 0.29 ) }
    dend_92 { pt3dadd( -40.5246, 82.6161, 32.6218, 0.29 ) }
    dend_92 { pt3dadd( -40.393, 83.3035, 32.7105, 0.29 ) }
    dend_92 { pt3dadd( -40.3873, 83.3707, 32.716, 0.29 ) }
    dend_92 { pt3dadd( -40.3796, 84.0889, 32.7794, 1.03 ) }
    dend_92 { pt3dadd( -40.4172, 84.8299, 32.8647, 1.03 ) }
    dend_92 { pt3dadd( -40.5228, 85.8716, 33.0038, 1.03 ) }
    dend_92 { pt3dadd( -40.6729, 87.0572, 33.1764, 0.37 ) }
    dend_92 { pt3dadd( -40.938, 88.7696, 33.4468, 0.29 ) }
    dend_92 { pt3dadd( -41.1682, 89.8707, 33.7927, 0.29 ) }
    dend_92 { pt3dadd( -41.3496, 90.442, 34.0788, 0.52 ) }
    dend_92 { pt3dadd( -41.4447, 90.6609, 34.2361, 0.74 ) }
    dend_92 { pt3dadd( -41.4729, 90.7109, 34.2864, 0.74 ) }
    dend_92 { pt3dadd( -41.5575, 90.8276, 34.452, 0.74 ) }
    dend_92 { pt3dadd( -42.8251, 92.215, 37.2857, 0.52 ) }
    dend_92 { pt3dadd( -43.1521, 92.5098, 38.0395, 0.52 ) }
    dend_92 { pt3dadd( -43.1791, 92.5321, 38.1066, 0.52 ) }
    dend_92 { pt3dadd( -43.2448, 92.5831, 38.2736, 0.88 ) }
    dend_92 { pt3dadd( -43.2677, 92.6007, 38.3332, 0.88 ) }
    dend_92 { pt3dadd( -43.7706, 102.205, 39.3777, 0.88 ) }
    dend_92 { pt3dadd( -43.809, 111.836, 40.2874, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_92 { pt3dadd( -43.2192, 121.488, 40.5907, 0.88 ) }
    dend_92 { pt3dadd( -42.2856, 131.043, 41.7596, 0.88 ) }
    dend_92 { pt3dadd( -40.3071, 140.067, 44.5412, 0.88 ) }
    // Section: dend_85, id: dend_85, parent: dend_84 (entry count 3/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -31.2334, -0.916328, 9.82358, 0.59 ) }
    dend_85 { pt3dadd( -32.2639, -0.633668, 9.65657, 0.59 ) }
    dend_85 { pt3dadd( -32.8601, -0.470486, 9.58389, 0.59 ) }
    dend_85 { pt3dadd( -34.0351, -0.133325, 9.47171, 0.59 ) }
    dend_85 { pt3dadd( -34.7952, 0.0888074, 9.40767, 0.52 ) }
    dend_85 { pt3dadd( -35.8652, 0.39616, 9.3228, 0.52 ) }
    dend_85 { pt3dadd( -35.9847, 0.430044, 9.31333, 0.52 ) }
    dend_85 { pt3dadd( -37.0543, 0.767448, 9.27214, 0.52 ) }
    dend_85 { pt3dadd( -38.134, 1.14178, 9.22095, 0.52 ) }
    dend_85 { pt3dadd( -38.2958, 1.20452, 9.20916, 0.52 ) }
    dend_85 { pt3dadd( -39.2893, 1.62086, 9.11392, 0.52 ) }
    dend_85 { pt3dadd( -39.3572, 1.65067, 9.10581, 0.52 ) }
    dend_85 { pt3dadd( -39.9969, 1.9583, 9.01586, 0.52 ) }
    dend_85 { pt3dadd( -40.1475, 2.04335, 8.99296, 0.52 ) }
    dend_85 { pt3dadd( -41.269, 2.7374, 8.8284, 0.52 ) }
    dend_85 { pt3dadd( -41.3749, 2.803, 8.81648, 0.52 ) }
    dend_85 { pt3dadd( -42.1423, 3.28663, 8.75755, 0.52 ) }
    dend_85 { pt3dadd( -42.3129, 3.38502, 8.75148, 0.52 ) }
    dend_85 { pt3dadd( -42.7841, 3.6061, 8.75556, 0.52 ) }
    dend_85 { pt3dadd( -42.8332, 3.62506, 8.75859, 0.52 ) }
    dend_85 { pt3dadd( -43.5857, 3.8221, 8.84189, 0.52 ) }
    dend_85 { pt3dadd( -43.6361, 3.83657, 8.84688, 0.52 ) }
    dend_85 { pt3dadd( -44.2099, 4.01267, 8.89839, 0.66 ) }
    dend_85 { pt3dadd( -44.944, 4.25985, 8.96038, 0.66 ) }
    dend_85 { pt3dadd( -45.6122, 4.49278, 9.01466, 0.29 ) }
    dend_85 { pt3dadd( -46.1919, 4.70713, 9.0678, 0.29 ) }
    dend_85 { pt3dadd( -47.1742, 5.07915, 9.16427, 0.29 ) }
    dend_85 { pt3dadd( -47.3609, 5.14945, 9.18388, 0.29 ) }
    dend_85 { pt3dadd( -47.9847, 5.38119, 9.18442, 0.29 ) }
    dend_85 { pt3dadd( -48.5668, 5.60094, 9.10932, 0.29 ) }
    dend_85 { pt3dadd( -48.6077, 5.61563, 9.09699, 0.29 ) }
    dend_85 { pt3dadd( -49.1461, 5.80034, 8.85408, 0.29 ) }
    dend_85 { pt3dadd( -49.2081, 5.81478, 8.81545, 0.29 ) }
    dend_85 { pt3dadd( -50.5021, 6.09439, 7.8724, 0.29 ) }
    dend_85 { pt3dadd( -50.6255, 6.13173, 7.77831, 0.29 ) }
    dend_85 { pt3dadd( -51.1197, 6.34162, 7.41448, 0.29 ) }
    dend_85 { pt3dadd( -51.1597, 6.36003, 7.38529, 0.29 ) }
    dend_85 { pt3dadd( -51.7668, 6.68343, 6.95334, 0.29 ) }
    dend_85 { pt3dadd( -51.8492, 6.72951, 6.90578, 0.29 ) }
    dend_85 { pt3dadd( -52.8905, 7.37946, 6.60323, 0.29 ) }
    dend_85 { pt3dadd( -53.208, 7.58609, 6.50831, 0.29 ) }
    // Section: dend_79, id: dend_79, parent: dend_75 (entry count 44/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -83.3107, -56.1431, -58.2577, 0.52 ) }
    dend_79 { pt3dadd( -83.4087, -57.7745, -60.9648, 0.52 ) }
    dend_79 { pt3dadd( -83.5089, -58.6661, -62.2848, 0.37 ) }
    dend_79 { pt3dadd( -83.5851, -59.3485, -63.3573, 0.37 ) }
    dend_79 { pt3dadd( -83.5684, -61.6852, -66.5376, 0.37 ) }
    dend_79 { pt3dadd( -83.5652, -61.7463, -66.6155, 0.37 ) }
    dend_79 { pt3dadd( -83.5369, -62.5305, -67.6568, 0.37 ) }
    dend_79 { pt3dadd( -83.5425, -62.6898, -67.8893, 0.37 ) }
    dend_79 { pt3dadd( -83.8249, -64.318, -70.3989, 0.37 ) }
    dend_79 { pt3dadd( -84.0453, -65.3275, -71.9565, 0.37 ) }
    dend_79 { pt3dadd( -84.0597, -65.3762, -72.0265, 0.37 ) }
    dend_79 { pt3dadd( -84.5878, -66.735, -74.078, 0.37 ) }
    dend_79 { pt3dadd( -84.786, -67.0843, -74.6846, 0.37 ) }
    dend_79 { pt3dadd( -85.063, -67.4308, -75.3329, 0.66 ) }
    dend_79 { pt3dadd( -85.2676, -67.6258, -75.7035, 0.66 ) }
    dend_79 { pt3dadd( -86.3825, -68.5612, -77.6183, 0.29 ) }
    dend_79 { pt3dadd( -86.6001, -68.8142, -78.0836, 0.29 ) }
    dend_79 { pt3dadd( -87.3029, -69.9953, -79.8501, 0.29 ) }
    dend_79 { pt3dadd( -87.3677, -70.163, -80.0546, 0.29 ) }
    dend_79 { pt3dadd( -87.5162, -70.6893, -80.5635, 0.29 ) }
    dend_79 { pt3dadd( -87.5334, -70.7633, -80.6277, 0.29 ) }
    dend_79 { pt3dadd( -87.8276, -72.9126, -82.0018, 0.29 ) }
    dend_79 { pt3dadd( -87.9038, -73.9056, -82.5572, 1.18 ) }
    dend_79 { pt3dadd( -87.9516, -75.2795, -83.0997, 1.18 ) }
    dend_79 { pt3dadd( -88.0083, -76.1783, -83.4534, 0.66 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 69/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -83.3107, -56.1431, -58.2577, 1.18 ) }
    dend_76 { pt3dadd( -84.0577, -56.4399, -58.175, 0.59 ) }
    dend_76 { pt3dadd( -85.1985, -56.9202, -58.0675, 0.59 ) }
    dend_76 { pt3dadd( -86.0076, -57.2785, -58.0566, 0.96 ) }
    dend_76 { pt3dadd( -87.0311, -57.7204, -58.0924, 0.96 ) }
    dend_76 { pt3dadd( -88.0763, -58.1327, -58.1571, 0.52 ) }
    dend_76 { pt3dadd( -89.1856, -58.5458, -58.241, 0.52 ) }
    dend_76 { pt3dadd( -89.2775, -58.5783, -58.2538, 0.52 ) }
    dend_76 { pt3dadd( -90.2893, -58.9412, -58.4637, 0.52 ) }
    dend_76 { pt3dadd( -90.8701, -59.1555, -58.6148, 0.29 ) }
    dend_76 { pt3dadd( -91.5678, -59.4078, -58.8271, 0.29 ) }
    dend_76 { pt3dadd( -92.4456, -59.7238, -59.0967, 0.29 ) }
    dend_76 { pt3dadd( -92.4994, -59.7435, -59.1134, 0.29 ) }
    dend_76 { pt3dadd( -93.3824, -60.0864, -59.3562, 0.88 ) }
    dend_76 { pt3dadd( -94.4153, -60.5216, -59.5707, 0.88 ) }
    dend_76 { pt3dadd( -94.5218, -60.5723, -59.5896, 0.88 ) }
    dend_76 { pt3dadd( -95.0493, -60.8535, -59.6734, 0.88 ) }
    dend_76 { pt3dadd( -95.1191, -60.8907, -59.6828, 0.88 ) }
    dend_76 { pt3dadd( -95.7105, -61.201, -59.728, 0.52 ) }
    dend_76 { pt3dadd( -96.2994, -61.4997, -59.7361, 0.44 ) }
    dend_76 { pt3dadd( -97.4545, -62.0628, -59.7901, 0.44 ) }
    dend_76 { pt3dadd( -97.9941, -62.3204, -59.8295, 1.25 ) }
    dend_76 { pt3dadd( -98.0832, -62.3621, -59.8346, 1.25 ) }
    dend_76 { pt3dadd( -99.0333, -62.8074, -59.8689, 1.47 ) }
    dend_76 { pt3dadd( -99.1677, -62.8721, -59.8707, 1.47 ) }
    dend_76 { pt3dadd( -100.129, -63.3111, -59.8598, 1.11 ) }
    dend_76 { pt3dadd( -100.885, -63.6193, -59.8253, 0.81 ) }
    dend_76 { pt3dadd( -101.606, -63.8734, -59.7658, 0.37 ) }
    dend_76 { pt3dadd( -102.2, -64.061, -59.7127, 0.29 ) }
    dend_76 { pt3dadd( -102.924, -64.2687, -59.6296, 0.15 ) }
    dend_76 { pt3dadd( -103.499, -64.4282, -59.5474, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_76 { pt3dadd( -103.875, -64.5322, -59.4794, 0.96 ) }
    dend_76 { pt3dadd( -104.646, -64.7539, -59.366, 0.96 ) }
    dend_76 { pt3dadd( -105.195, -64.93, -59.3081, 0.96 ) }
    dend_76 { pt3dadd( -105.996, -65.2171, -59.2236, 0.37 ) }
    dend_76 { pt3dadd( -106.06, -65.2437, -59.2155, 0.37 ) }
    dend_76 { pt3dadd( -106.681, -65.5339, -59.1262, 0.37 ) }
    dend_76 { pt3dadd( -107.499, -65.9481, -59.0302, 0.66 ) }
    dend_76 { pt3dadd( -108.195, -66.3257, -58.9663, 0.44 ) }
    dend_76 { pt3dadd( -108.846, -66.6958, -58.9316, 0.74 ) }
    dend_76 { pt3dadd( -109.572, -67.083, -58.9161, 0.74 ) }
    dend_76 { pt3dadd( -110.037, -67.3206, -58.9105, 0.59 ) }
    dend_76 { pt3dadd( -110.922, -67.7779, -58.9103, 0.66 ) }
    dend_76 { pt3dadd( -111.821, -68.2493, -58.9458, 1.03 ) }
    dend_76 { pt3dadd( -112.417, -68.5783, -58.988, 1.03 ) }
    dend_76 { pt3dadd( -113.507, -69.2057, -59.1335, 0.59 ) }
    dend_76 { pt3dadd( -114.177, -69.6025, -59.274, 0.44 ) }
    dend_76 { pt3dadd( -115.007, -70.1079, -59.4788, 0.44 ) }
    dend_76 { pt3dadd( -115.693, -70.5314, -59.7058, 0.88 ) }
    dend_76 { pt3dadd( -116.355, -70.9498, -59.9841, 0.88 ) }
    dend_76 { pt3dadd( -117.412, -71.6397, -60.4852, 0.52 ) }
    dend_76 { pt3dadd( -118.405, -72.3099, -61.0192, 0.52 ) }
    dend_76 { pt3dadd( -118.468, -72.3474, -61.0504, 0.52 ) }
    dend_76 { pt3dadd( -119.675, -72.9826, -61.5916, 0.96 ) }
    dend_76 { pt3dadd( -120.386, -73.2858, -61.8387, 0.52 ) }
    dend_76 { pt3dadd( -121.203, -73.5334, -62.0711, 0.37 ) }
    dend_76 { pt3dadd( -121.465, -73.5899, -62.1247, 0.37 ) }
    dend_76 { pt3dadd( -122.988, -73.8042, -62.3586, 0.37 ) }
    dend_76 { pt3dadd( -123.067, -73.8129, -62.3676, 0.37 ) }
    dend_76 { pt3dadd( -124.411, -73.9148, -62.4671, 0.37 ) }
    dend_76 { pt3dadd( -125.522, -73.9894, -62.5763, 0.37 ) }
    dend_76 { pt3dadd( -125.591, -73.9944, -62.5845, 0.37 ) }
    dend_76 { pt3dadd( -127.031, -74.1773, -62.7101, 0.37 ) }
    dend_76 { pt3dadd( -128.619, -74.4645, -62.8076, 0.37 ) }
    dend_76 { pt3dadd( -128.696, -74.4835, -62.8086, 0.37 ) }
    dend_76 { pt3dadd( -130.154, -75.0139, -62.6106, 0.37 ) }
    dend_76 { pt3dadd( -130.215, -75.0409, -62.5914, 0.37 ) }
    dend_76 { pt3dadd( -131.448, -75.6521, -62.0401, 1.18 ) }
    dend_76 { pt3dadd( -131.501, -75.6828, -62.0066, 1.18 ) }
    dend_76 { pt3dadd( -132.044, -76.0232, -61.5969, 1.18 ) }
    dend_76 { pt3dadd( -133.235, -76.7838, -60.6839, 0.44 ) }
    dend_76 { pt3dadd( -133.737, -77.1095, -60.2903, 0.22 ) }
    dend_76 { pt3dadd( -134.577, -77.6532, -59.6397, 0.22 ) }
    dend_76 { pt3dadd( -135.191, -78.0265, -59.2229, 0.59 ) }
    dend_76 { pt3dadd( -135.302, -78.0942, -59.1497, 0.59 ) }
    dend_76 { pt3dadd( -135.746, -78.367, -58.8862, 0.59 ) }
    dend_76 { pt3dadd( -136.155, -78.6255, -58.6872, 0.59 ) }
    dend_76 { pt3dadd( -137.481, -79.579, -57.9217, 0.44 ) }
    dend_76 { pt3dadd( -138.362, -80.2909, -57.3642, 0.15 ) }
    dend_76 { pt3dadd( -138.409, -80.3322, -57.3345, 0.15 ) }
    dend_76 { pt3dadd( -139.168, -81.0216, -56.8683, 0.15 ) }
    dend_76 { pt3dadd( -139.582, -81.4111, -56.6242, 0.52 ) }
    dend_76 { pt3dadd( -140.456, -82.2281, -56.1792, 0.88 ) }
    dend_76 { pt3dadd( -141.164, -82.8729, -55.907, 0.52 ) }
    dend_76 { pt3dadd( -141.723, -83.3483, -55.7481, 0.29 ) }
    dend_76 { pt3dadd( -141.779, -83.3886, -55.7391, 0.29 ) }
    dend_76 { pt3dadd( -142.222, -83.6758, -55.6993, 0.29 ) }
    dend_76 { pt3dadd( -143.001, -84.0964, -55.7236, 0.29 ) }
    dend_76 { pt3dadd( -143.065, -84.1212, -55.7363, 0.29 ) }
    dend_76 { pt3dadd( -144.462, -84.4373, -56.0873, 0.29 ) }
    dend_76 { pt3dadd( -144.853, -84.4919, -56.2094, 1.11 ) }
    // Section: dend_71, id: dend_71, parent: dend_67 (entry count 60/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -51.6907, -10.8687, 6.95425, 0.44 ) }
    dend_71 { pt3dadd( -58.6395, -8.16809, 9.42841, 0.44 ) }
    dend_71 { pt3dadd( -65.2009, -4.5119, 11.7651, 0.44 ) }
    dend_71 { pt3dadd( -72.1746, -2.02978, 14.3862, 0.44 ) }
    dend_71 { pt3dadd( -79.1547, 1.482, 15.3535, 0.44 ) }
    dend_71 { pt3dadd( -86.138, 5.14057, 15.2302, 0.44 ) }
    dend_71 { pt3dadd( -92.979, 9.02307, 15.7535, 0.44 ) }
    dend_71 { pt3dadd( -100.149, 12.2813, 15.6802, 0.44 ) }
    dend_71 { pt3dadd( -106.618, 16.4387, 13.8138, 0.44 ) }
    dend_71 { pt3dadd( -113.551, 19.4073, 11.4939, 0.44 ) }
    dend_71 { pt3dadd( -120.879, 21.3545, 9.38621, 0.44 ) }
    dend_71 { pt3dadd( -128.205, 23.9694, 8.16384, 0.44 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 72/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -51.6907, -10.8687, 6.95425, 0.29 ) }
    dend_68 { pt3dadd( -63.0263, -6.23701, 10.1548, 0.44 ) }
    dend_68 { pt3dadd( -75.0216, -3.06449, 12.6181, 0.44 ) }
    dend_68 { pt3dadd( -87.391, -0.708827, 13.8289, 0.44 ) }
    dend_68 { pt3dadd( -100.031, -0.490146, 14.0375, 0.44 ) }
    dend_68 { pt3dadd( -112.475, -0.183408, 16.2611, 0.44 ) }
    dend_68 { pt3dadd( -124.843, -2.47735, 17.6474, 0.44 ) }
    dend_68 { pt3dadd( -136.486, -5.45087, 21.6935, 0.44 ) }
    dend_68 { pt3dadd( -147.527, -8.22104, 27.3042, 0.44 ) }
    dend_68 { pt3dadd( -158.476, -8.97349, 33.6351, 0.44 ) }
    dend_68 { pt3dadd( -170.614, -9.17251, 37.1917, 0.44 ) }
    // Section: dend_66, id: dend_66, parent: dend_54 (entry count 83/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -121.379, -72.2426, 9.02726, 1.11 ) }
    dend_66 { pt3dadd( -121.415, -72.5319, 9.45296, 1.11 ) }
    dend_66 { pt3dadd( -121.582, -73.7514, 11.204, 0.52 ) }
    dend_66 { pt3dadd( -121.684, -74.3529, 12.0534, 0.22 ) }
    dend_66 { pt3dadd( -121.89, -75.5186, 13.6907, 0.22 ) }
    dend_66 { pt3dadd( -121.901, -75.5741, 13.7692, 0.22 ) }
    dend_66 { pt3dadd( -122.148, -76.7165, 15.4831, 0.22 ) }
    dend_66 { pt3dadd( -122.167, -76.7833, 15.5902, 0.22 ) }
    dend_66 { pt3dadd( -122.283, -77.2284, 16.3858, 1.11 ) }
    dend_66 { pt3dadd( -122.292, -77.2772, 16.4845, 1.11 ) }
    dend_66 { pt3dadd( -122.326, -77.7993, 17.7045, 1.11 ) }
    dend_66 { pt3dadd( -122.312, -78.5218, 19.5806, 0.52 ) }
    dend_66 { pt3dadd( -122.195, -79.1368, 21.4605, 0.29 ) }
    dend_66 { pt3dadd( -122.026, -79.6385, 23.1309, 0.29 ) }
    dend_66 { pt3dadd( -122.015, -79.6606, 23.2097, 0.29 ) }
    dend_66 { pt3dadd( -121.811, -80.0175, 24.5561, 0.29 ) }
    dend_66 { pt3dadd( -121.791, -80.038, 24.6478, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_66 { pt3dadd( -121.328, -80.2692, 25.9829, 0.29 ) }
    dend_66 { pt3dadd( -121.282, -80.276, 26.0814, 0.29 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 2/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -121.379, -72.2426, 9.02726, 0.74 ) }
    dend_55 { pt3dadd( -121.44, -72.2683, 9.0192, 0.74 ) }
    dend_55 { pt3dadd( -121.501, -72.2904, 9.01221, 0.74 ) }
    dend_55 { pt3dadd( -123.002, -72.7752, 8.85181, 0.59 ) }
    dend_55 { pt3dadd( -124.21, -73.1345, 8.74117, 0.44 ) }
    dend_55 { pt3dadd( -125.763, -73.5965, 8.59893, 0.44 ) }
    dend_55 { pt3dadd( -125.826, -73.6152, 8.59316, 0.44 ) }
    dend_55 { pt3dadd( -126.785, -73.8912, 8.49912, 0.44 ) }
    dend_55 { pt3dadd( -126.857, -73.9106, 8.49109, 0.44 ) }
    dend_55 { pt3dadd( -128.219, -74.1777, 8.27327, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_32 (entry count 12/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -9.95858, 161.858, 18.3773, 0.15 ) }
    dend_46 { pt3dadd( -10.1151, 162.068, 18.3979, 0.15 ) }
    dend_46 { pt3dadd( -11.1639, 163.599, 18.5069, 0.81 ) }
    dend_46 { pt3dadd( -11.9163, 164.745, 18.6608, 0.22 ) }
    dend_46 { pt3dadd( -12.8158, 166.134, 18.8602, 0.22 ) }
    dend_46 { pt3dadd( -13.6307, 167.401, 19.0413, 0.22 ) }
    dend_46 { pt3dadd( -13.6755, 167.471, 19.051, 0.22 ) }
    dend_46 { pt3dadd( -14.8318, 169.352, 19.2871, 0.22 ) }
    dend_46 { pt3dadd( -15.9344, 171.187, 19.5228, 0.22 ) }
    dend_46 { pt3dadd( -16.3997, 171.973, 19.6807, 0.22 ) }
    dend_46 { pt3dadd( -16.6139, 172.341, 19.7821, 0.66 ) }
    dend_46 { pt3dadd( -16.9034, 172.845, 19.9136, 0.81 ) }
    dend_46 { pt3dadd( -17.0296, 173.061, 19.9706, 0.29 ) }
    dend_46 { pt3dadd( -17.6254, 174.099, 20.2757, 0.37 ) }
    dend_46 { pt3dadd( -17.8529, 174.511, 20.3705, 0.37 ) }
    dend_46 { pt3dadd( -18.5042, 175.539, 20.6601, 0.29 ) }
    dend_46 { pt3dadd( -19.1972, 176.393, 20.9312, 0.29 ) }
    dend_46 { pt3dadd( -19.27, 176.472, 20.9567, 0.29 ) }
    dend_46 { pt3dadd( -20.0262, 177.225, 21.1954, 0.29 ) }
    dend_46 { pt3dadd( -21.0178, 178.121, 21.4669, 0.29 ) }
    dend_46 { pt3dadd( -22.8242, 179.602, 21.9491, 0.29 ) }
    dend_46 { pt3dadd( -24.7779, 181.015, 22.4855, 0.29 ) }
    dend_46 { pt3dadd( -25.099, 181.224, 22.5784, 0.59 ) }
    dend_46 { pt3dadd( -25.1694, 181.265, 22.5954, 0.59 ) }
    dend_46 { pt3dadd( -25.555, 181.458, 22.6758, 0.59 ) }
    dend_46 { pt3dadd( -25.64, 181.496, 22.6926, 0.59 ) }
    dend_46 { pt3dadd( -26.9589, 182.075, 22.8711, 0.29 ) }
    dend_46 { pt3dadd( -27.0346, 182.108, 22.8793, 0.29 ) }
    dend_46 { pt3dadd( -28.8013, 182.825, 22.9428, 0.29 ) }
    dend_46 { pt3dadd( -30.0903, 183.297, 22.8779, 0.29 ) }
    dend_46 { pt3dadd( -30.6571, 183.469, 22.8372, 0.59 ) }
    dend_46 { pt3dadd( -31.0016, 183.538, 22.8087, 0.88 ) }
    dend_46 { pt3dadd( -31.7086, 183.605, 22.7169, 0.88 ) }
    dend_46 { pt3dadd( -32.9121, 183.651, 22.5535, 0.44 ) }
    dend_46 { pt3dadd( -34.1207, 183.603, 22.4236, 0.29 ) }
    dend_46 { pt3dadd( -35.7407, 183.442, 22.2471, 0.22 ) }
    dend_46 { pt3dadd( -37.7528, 183.139, 22.076, 0.22 ) }
    dend_46 { pt3dadd( -39.9953, 182.725, 21.9495, 0.22 ) }
    dend_46 { pt3dadd( -40.1183, 182.699, 21.9469, 0.22 ) }
    dend_46 { pt3dadd( -41.7651, 182.301, 21.97, 0.22 ) }
    dend_46 { pt3dadd( -42.863, 181.997, 21.9873, 0.37 ) }
    dend_46 { pt3dadd( -44.1657, 181.582, 21.9629, 0.37 ) }
    dend_46 { pt3dadd( -44.3254, 181.521, 21.9637, 0.37 ) }
    dend_46 { pt3dadd( -44.9383, 181.233, 22.0173, 0.37 ) }
    dend_46 { pt3dadd( -45.0239, 181.192, 22.0232, 0.37 ) }
    dend_46 { pt3dadd( -54.7016, 187.684, 24.3584, 0.37 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 58/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -9.95858, 161.858, 18.3773, 0.66 ) }
    dend_33 { pt3dadd( -9.88378, 162.153, 18.4231, 0.66 ) }
    dend_33 { pt3dadd( -9.6781, 162.953, 18.526, 0.52 ) }
    dend_33 { pt3dadd( -9.35835, 164.092, 18.6708, 0.52 ) }
    dend_33 { pt3dadd( -9.34034, 164.154, 18.6787, 0.52 ) }
    dend_33 { pt3dadd( -8.85771, 165.849, 18.8842, 0.52 ) }
    dend_33 { pt3dadd( -8.3998, 167.474, 19.0735, 0.66 ) }
    dend_33 { pt3dadd( -8.00658, 168.874, 19.2257, 0.66 ) }
    dend_33 { pt3dadd( -7.7357, 169.938, 19.318, 0.66 ) }
    dend_33 { pt3dadd( -7.60041, 170.542, 19.3512, 1.47 ) }
    dend_33 { pt3dadd( -7.43408, 171.413, 19.374, 1.77 ) }
    dend_33 { pt3dadd( -7.34747, 171.973, 19.3666, 1.77 ) }
    dend_33 { pt3dadd( -7.34197, 172.038, 19.3654, 1.77 ) }
    dend_33 { pt3dadd( -7.3151, 172.98, 19.3182, 1.25 ) }
    dend_33 { pt3dadd( -7.33225, 174.368, 19.2297, 0.52 ) }
    dend_33 { pt3dadd( -7.33973, 175.185, 19.188, 0.74 ) }
    dend_33 { pt3dadd( -7.33978, 175.25, 19.1865, 0.74 ) }
    dend_33 { pt3dadd( -7.33476, 176.136, 19.186, 0.96 ) }
    dend_33 { pt3dadd( -7.33074, 176.266, 19.19, 0.96 ) }
    dend_33 { pt3dadd( -7.26879, 177.079, 19.251, 0.96 ) }
    dend_33 { pt3dadd( -7.15715, 178.099, 19.3674, 0.52 ) }
    dend_33 { pt3dadd( -6.98833, 179.337, 19.5307, 0.52 ) }
    dend_33 { pt3dadd( -6.95529, 179.536, 19.5598, 0.52 ) }
    dend_33 { pt3dadd( -6.84397, 180.099, 19.6422, 0.96 ) }
    dend_33 { pt3dadd( -6.68291, 180.937, 19.7542, 1.18 ) }
    dend_33 { pt3dadd( -6.55446, 181.653, 19.8185, 0.96 ) }
    dend_33 { pt3dadd( -6.43318, 182.55, 19.855, 0.66 ) }
    dend_33 { pt3dadd( -6.34688, 183.41, 19.8505, 0.52 ) }
    dend_33 { pt3dadd( -6.29242, 184.19, 19.8245, 0.52 ) }
    dend_33 { pt3dadd( -6.24624, 185.399, 19.7548, 0.52 ) }
    dend_33 { pt3dadd( -6.22819, 186.676, 19.6583, 0.66 ) }
    dend_33 { pt3dadd( -6.26281, 188.858, 19.461, 0.66 ) }
    dend_33 { pt3dadd( -6.29975, 189.806, 19.3691, 1.25 ) }
    dend_33 { pt3dadd( -6.35206, 190.814, 19.2736, 1.4 ) }
    dend_33 { pt3dadd( -6.40473, 191.778, 19.1938, 1.03 ) }
    dend_33 { pt3dadd( -6.43344, 192.521, 19.1442, 0.66 ) }
    dend_33 { pt3dadd( -6.46471, 193.47, 19.1099, 0.44 ) }
    dend_33 { pt3dadd( -6.46494, 193.545, 19.1085, 0.44 ) }
    dend_33 { pt3dadd( -6.44725, 194.101, 19.1181, 0.44 ) }
    dend_33 { pt3dadd( -6.43915, 194.175, 19.1217, 0.44 ) }
    dend_33 { pt3dadd( -6.34319, 194.62, 19.1613, 0.66 ) }
    dend_33 { pt3dadd( -6.32433, 194.682, 19.1664, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_33 { pt3dadd( -6.14477, 195.228, 19.2034, 0.96 ) }
    dend_33 { pt3dadd( -6.11682, 195.315, 19.2086, 0.96 ) }
    dend_33 { pt3dadd( -5.84107, 196.197, 19.2536, 0.96 ) }
    dend_33 { pt3dadd( -5.81955, 196.268, 19.2567, 0.96 ) }
    dend_33 { pt3dadd( -5.51065, 197.356, 19.2936, 0.66 ) }
    dend_33 { pt3dadd( -5.18982, 198.538, 19.3286, 0.52 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 6/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -30.6126, 172.604, -35.3917, 0.22 ) }
    dend_31 { pt3dadd( -31.6377, 171.908, -35.5599, 0.22 ) }
    dend_31 { pt3dadd( -32.502, 171.322, -35.7018, 0.22 ) }
    dend_31 { pt3dadd( -33.4634, 170.67, -35.8596, 0.22 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -30.6126, 172.604, -35.3917, 0.52 ) }
    dend_30 { pt3dadd( -30.965, 172.811, -36.0503, 0.52 ) }
    dend_30 { pt3dadd( -31.9444, 173.385, -37.8809, 0.52 ) }
    dend_30 { pt3dadd( -32.674, 173.813, -39.2446, 0.37 ) }
    dend_30 { pt3dadd( -33.0781, 174.05, -39.9999, 0.37 ) }
    dend_30 { pt3dadd( -34.4153, 174.834, -42.4993, 0.37 ) }
    // Section: dend_146, id: dend_146, parent: dend_144 (entry count 16/100)
    dend_146 { pt3dclear() }
    dend_146 { pt3dadd( 17.7601, -89.3327, 88.1422, 0.37 ) }
    dend_146 { pt3dadd( 21.7117, -93.6027, 93.839, 0.37 ) }
    dend_146 { pt3dadd( 26.5951, -96.147, 99.7899, 0.37 ) }
    dend_146 { pt3dadd( 31.3939, -99.4893, 105.425, 0.37 ) }
    dend_146 { pt3dadd( 36.4528, -102.294, 111.112, 0.37 ) }
    dend_146 { pt3dadd( 40.4365, -105.19, 117.56, 0.37 ) }
    // Section: dend_145, id: dend_145, parent: dend_144 (entry count 22/100)
    dend_145 { pt3dclear() }
    dend_145 { pt3dadd( 17.7601, -89.3327, 88.1422, 0.52 ) }
    dend_145 { pt3dadd( 20.9167, -93.2756, 97.0562, 0.37 ) }
    dend_145 { pt3dadd( 23.4204, -96.7146, 106.367, 0.37 ) }
    dend_145 { pt3dadd( 24.1927, -99.6073, 116.148, 0.37 ) }
    dend_145 { pt3dadd( 23.8603, -103.354, 125.674, 0.37 ) }
    dend_145 { pt3dadd( 24.5099, -107.32, 135.099, 0.37 ) }
    // Section: dend_117, id: dend_117, parent: dend_115 (entry count 28/100)
    dend_117 { pt3dclear() }
    dend_117 { pt3dadd( 24.9047, 244.315, 0.0541813, 0.59 ) }
    dend_117 { pt3dadd( 24.903, 244.702, -0.0130751, 0.59 ) }
    dend_117 { pt3dadd( 24.926, 245.665, -0.161926, 0.29 ) }
    dend_117 { pt3dadd( 24.9437, 246.208, -0.2407, 0.29 ) }
    dend_117 { pt3dadd( 24.9923, 246.95, -0.38644, 0.29 ) }
    dend_117 { pt3dadd( 25.0006, 247.023, -0.402574, 0.29 ) }
    dend_117 { pt3dadd( 25.109, 247.78, -0.577948, 0.96 ) }
    dend_117 { pt3dadd( 25.2852, 248.642, -0.774608, 0.96 ) }
    dend_117 { pt3dadd( 25.3905, 249.032, -0.874827, 0.96 ) }
    dend_117 { pt3dadd( 25.6402, 249.821, -1.08807, 0.52 ) }
    dend_117 { pt3dadd( 25.8127, 250.328, -1.17432, 0.37 ) }
    dend_117 { pt3dadd( 25.8451, 250.423, -1.18177, 0.37 ) }
    dend_117 { pt3dadd( 26.0507, 251.011, -1.17838, 0.37 ) }
    dend_117 { pt3dadd( 26.0717, 251.074, -1.17345, 0.37 ) }
    dend_117 { pt3dadd( 26.2643, 251.812, -1.08738, 0.37 ) }
    dend_117 { pt3dadd( 26.4477, 253.23, -0.912474, 0.22 ) }
    dend_117 { pt3dadd( 26.4778, 253.813, -0.854465, 0.22 ) }
    dend_117 { pt3dadd( 26.4774, 254.121, -0.830691, 1.11 ) }
    dend_117 { pt3dadd( 26.4485, 254.611, -0.803403, 1.11 ) }
    dend_117 { pt3dadd( 26.3684, 255.38, -0.787784, 0.52 ) }
    dend_117 { pt3dadd( 26.1816, 256.61, -0.845386, 0.37 ) }
    dend_117 { pt3dadd( 26.1706, 256.675, -0.854661, 0.37 ) }
    dend_117 { pt3dadd( 26.1369, 256.889, -0.884624, 0.66 ) }
    dend_117 { pt3dadd( 26.1254, 256.981, -0.896919, 0.66 ) }
    dend_117 { pt3dadd( 26.1198, 257.046, -0.905136, 0.66 ) }
    dend_117 { pt3dadd( 26.0749, 258.052, -1.02197, 0.44 ) }
    dend_117 { pt3dadd( 26.0428, 259.014, -1.12836, 0.44 ) }
    dend_117 { pt3dadd( 26.0382, 259.08, -1.13566, 0.44 ) }
    dend_117 { pt3dadd( 25.9248, 259.912, -1.23182, 0.44 ) }
    dend_117 { pt3dadd( 25.8877, 260.107, -1.2588, 0.44 ) }
    dend_117 { pt3dadd( 25.6407, 261.106, -1.41512, 0.44 ) }
    dend_117 { pt3dadd( 25.6243, 261.159, -1.4244, 0.44 ) }
    dend_117 { pt3dadd( 25.4701, 261.625, -1.50951, 1.4 ) }
    dend_117 { pt3dadd( 25.1609, 262.561, -1.68447, 1.4 ) }
    dend_117 { pt3dadd( 24.8505, 263.489, -1.86333, 0.44 ) }
    dend_117 { pt3dadd( 24.5978, 264.295, -2.01842, 0.44 ) }
    dend_117 { pt3dadd( 24.558, 264.429, -2.04434, 0.44 ) }
    dend_117 { pt3dadd( 24.3572, 265.171, -2.19917, 0.44 ) }
    dend_117 { pt3dadd( 24.3449, 265.235, -2.21237, 0.44 ) }
    dend_117 { pt3dadd( 24.317, 265.472, -2.27329, 0.88 ) }
    dend_117 { pt3dadd( 24.2835, 266.114, -2.53244, 0.88 ) }
    dend_117 { pt3dadd( 24.2848, 266.241, -2.59557, 0.88 ) }
    dend_117 { pt3dadd( 24.3018, 266.704, -2.84704, 0.22 ) }
    dend_117 { pt3dadd( 24.3886, 268.068, -3.65081, 0.15 ) }
    dend_117 { pt3dadd( 24.472, 269.16, -4.31878, 0.15 ) }
    dend_117 { pt3dadd( 24.6092, 270.71, -5.30966, 0.15 ) }
    dend_117 { pt3dadd( 24.7478, 272.056, -6.19911, 0.15 ) }
    dend_117 { pt3dadd( 24.7536, 272.101, -6.23163, 0.15 ) }
    dend_117 { pt3dadd( 24.7842, 272.304, -6.38431, 0.59 ) }
    dend_117 { pt3dadd( 24.8369, 272.635, -6.6329, 0.59 ) }
    dend_117 { pt3dadd( 24.9843, 273.602, -7.26962, 0.29 ) }
    dend_117 { pt3dadd( 25.0219, 273.902, -7.43237, 0.74 ) }
    dend_117 { pt3dadd( 25.1418, 274.825, -7.8937, 0.29 ) }
    dend_117 { pt3dadd( 25.1919, 275.2, -8.06481, 0.22 ) }
    dend_117 { pt3dadd( 25.4459, 276.918, -8.76423, 0.22 ) }
    dend_117 { pt3dadd( 25.4583, 276.979, -8.78563, 0.22 ) }
    dend_117 { pt3dadd( 25.5415, 277.305, -8.87042, 0.88 ) }
    dend_117 { pt3dadd( 25.6426, 277.635, -8.93285, 0.88 ) }
    dend_117 { pt3dadd( 25.6957, 277.766, -8.94213, 0.88 ) }
    dend_117 { pt3dadd( 25.8543, 278.028, -8.95552, 0.29 ) }
    dend_117 { pt3dadd( 26.3878, 278.523, -8.93009, 0.22 ) }
    dend_117 { pt3dadd( 26.4365, 278.566, -8.92567, 0.22 ) }
    dend_117 { pt3dadd( 26.7414, 278.824, -8.88638, 0.81 ) }
    dend_117 { pt3dadd( 26.9387, 279.006, -8.85671, 0.81 ) }
    dend_117 { pt3dadd( 26.985, 279.052, -8.84907, 0.81 ) }
    dend_117 { pt3dadd( 27.288, 279.391, -8.7957, 0.22 ) }
    dend_117 { pt3dadd( 27.542, 279.708, -8.74852, 0.22 ) }
    dend_117 { pt3dadd( 27.6269, 279.833, -8.73609, 0.22 ) }
    dend_117 { pt3dadd( 27.9257, 280.332, -8.7046, 0.22 ) }
    dend_117 { pt3dadd( 28.0013, 280.473, -8.69955, 0.22 ) }
    dend_117 { pt3dadd( 28.1394, 280.748, -8.6994, 0.22 ) }
    dend_117 { pt3dadd( 28.1781, 280.832, -8.70498, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_117 { pt3dadd( 28.4232, 281.35, -8.73817, 0.22 ) }
    dend_117 { pt3dadd( 28.4607, 281.435, -8.74393, 0.22 ) }
    dend_117 { pt3dadd( 30.5533, 290.599, -9.76113, 0.22 ) }
    // Section: dend_116, id: dend_116, parent: dend_115 (entry count 3/100)
    dend_116 { pt3dclear() }
    dend_116 { pt3dadd( 24.9047, 244.315, 0.0541813, 0.52 ) }
    dend_116 { pt3dadd( 24.4921, 244.203, 0.0224986, 0.52 ) }
    dend_116 { pt3dadd( 24.3166, 244.155, 0.0180423, 0.52 ) }
    dend_116 { pt3dadd( 23.7808, 244.009, 0.0044284, 0.44 ) }
    dend_116 { pt3dadd( 23.7023, 243.988, 0.0024347, 0.44 ) }
    dend_116 { pt3dadd( 22.7018, 243.715, -0.0229929, 0.44 ) }
    dend_116 { pt3dadd( 21.6068, 243.416, -0.0508106, 0.15 ) }
    dend_116 { pt3dadd( 21.5275, 243.398, -0.0512126, 0.15 ) }
    dend_116 { pt3dadd( 10.9743, 238.518, -0.746602, 0.15 ) }
    // Section: dend_109, id: dend_109, parent: dend_107 (entry count 12/100)
    dend_109 { pt3dclear() }
    dend_109 { pt3dadd( 150.273, -43.8333, 22.0698, 0.37 ) }
    dend_109 { pt3dadd( 153.901, -49.0844, 26.7114, 0.37 ) }
    dend_109 { pt3dadd( 157.13, -55.6288, 29.8373, 0.37 ) }
    dend_109 { pt3dadd( 160.633, -61.6564, 33.5923, 0.37 ) }
    dend_109 { pt3dadd( 164.168, -68.488, 35.6147, 0.37 ) }
    dend_109 { pt3dadd( 167.271, -75.5722, 37.516, 0.37 ) }
    // Section: dend_108, id: dend_108, parent: dend_107 (entry count 18/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( 150.273, -43.8333, 22.0698, 0.52 ) }
    dend_108 { pt3dadd( 160.603, -48.7822, 17.1221, 0.37 ) }
    dend_108 { pt3dadd( 170.52, -55.2349, 13.0909, 0.37 ) }
    dend_108 { pt3dadd( 181.22, -60.6494, 9.61164, 0.37 ) }
    dend_108 { pt3dadd( 192.71, -64.6752, 6.89978, 0.37 ) }
    // Section: dend_94, id: dend_94, parent: dend_92 (entry count 23/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -40.3071, 140.067, 44.5412, 0.37 ) }
    dend_94 { pt3dadd( -40.3765, 148.698, 45.8593, 0.37 ) }
    dend_94 { pt3dadd( -41.1728, 156.861, 48.7978, 0.37 ) }
    dend_94 { pt3dadd( -40.7678, 165.292, 50.9984, 0.37 ) }
    dend_94 { pt3dadd( -39.1931, 173.39, 53.7906, 0.37 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 28/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( -40.3071, 140.067, 44.5412, 0.52 ) }
    dend_93 { pt3dadd( -39.7717, 150.4, 47.5792, 0.37 ) }
    dend_93 { pt3dadd( -41.4928, 160.247, 51.5543, 0.37 ) }
    dend_93 { pt3dadd( -45.2723, 169.783, 54.7173, 0.37 ) }
    dend_93 { pt3dadd( -48.2696, 179.823, 57.1396, 0.37 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 33/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -53.208, 7.58609, 6.50831, 0.29 ) }
    dend_86 { pt3dadd( -53.4625, 7.67268, 6.49845, 0.29 ) }
    // Section: dend_83, id: dend_83, parent: dend_79 (entry count 35/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -88.0083, -76.1783, -83.4534, 0.15 ) }
    dend_83 { pt3dadd( -88.5138, -76.9003, -83.2554, 0.15 ) }
    dend_83 { pt3dadd( -88.5522, -76.966, -83.2211, 0.15 ) }
    dend_83 { pt3dadd( -88.8675, -77.5099, -82.8912, 0.15 ) }
    dend_83 { pt3dadd( -88.9586, -77.6531, -82.8134, 0.15 ) }
    dend_83 { pt3dadd( -89.3688, -78.2766, -82.4931, 0.15 ) }
    dend_83 { pt3dadd( -89.4567, -78.4093, -82.4117, 0.15 ) }
    dend_83 { pt3dadd( -90.2311, -79.3697, -81.7953, 0.15 ) }
    dend_83 { pt3dadd( -90.3087, -79.4596, -81.7323, 0.15 ) }
    dend_83 { pt3dadd( -91.1747, -80.3844, -81.049, 0.15 ) }
    dend_83 { pt3dadd( -91.2496, -80.4566, -80.9943, 0.15 ) }
    dend_83 { pt3dadd( -92.0438, -81.1883, -80.3727, 0.15 ) }
    dend_83 { pt3dadd( -93.2763, -82.3039, -79.3505, 0.15 ) }
    dend_83 { pt3dadd( -93.3224, -82.345, -79.3152, 0.15 ) }
    dend_83 { pt3dadd( -94.0422, -82.9808, -78.7579, 0.15 ) }
    dend_83 { pt3dadd( -94.3311, -83.2248, -78.5358, 0.15 ) }
    dend_83 { pt3dadd( -95.0811, -83.8598, -77.9752, 0.15 ) }
    dend_83 { pt3dadd( -95.9273, -84.5837, -77.3822, 0.15 ) }
    dend_83 { pt3dadd( -97.1724, -85.7097, -76.4098, 0.15 ) }
    dend_83 { pt3dadd( -97.7118, -86.1968, -75.9948, 0.44 ) }
    dend_83 { pt3dadd( -98.1168, -86.5623, -75.6871, 0.81 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 56/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -88.0083, -76.1783, -83.4534, 0.22 ) }
    dend_80 { pt3dadd( -88.0169, -76.7577, -83.3876, 0.22 ) }
    dend_80 { pt3dadd( -88.0156, -77.8599, -83.31, 0.22 ) }
    dend_80 { pt3dadd( -88.0122, -79.1786, -83.2472, 0.22 ) }
    dend_80 { pt3dadd( -88.0136, -79.9736, -83.2221, 0.22 ) }
    dend_80 { pt3dadd( -88.0125, -81.5083, -83.1993, 0.22 ) }
    dend_80 { pt3dadd( -88.0109, -82.2267, -83.1999, 0.22 ) }
    dend_80 { pt3dadd( -88.0039, -82.4949, -83.2171, 0.59 ) }
    dend_80 { pt3dadd( -87.9935, -82.625, -83.2321, 0.59 ) }
    dend_80 { pt3dadd( -87.9685, -82.9262, -83.2815, 0.59 ) }
    dend_80 { pt3dadd( -87.9422, -83.4712, -83.4065, 0.29 ) }
    dend_80 { pt3dadd( -87.9326, -83.5885, -83.4378, 0.29 ) }
    dend_80 { pt3dadd( -87.8705, -84.267, -83.5396, 0.22 ) }
    dend_80 { pt3dadd( -87.8051, -84.9446, -83.6156, 0.22 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 70/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -144.853, -84.4919, -56.2094, 0.59 ) }
    dend_78 { pt3dadd( -144.989, -84.7441, -55.4478, 0.59 ) }
    dend_78 { pt3dadd( -145.089, -84.9819, -54.7958, 0.59 ) }
    dend_78 { pt3dadd( -145.249, -85.2165, -54.0338, 0.44 ) }
    dend_78 { pt3dadd( -145.267, -85.2356, -53.9634, 0.44 ) }
    dend_78 { pt3dadd( -145.531, -85.6322, -52.5477, 0.07 ) }
    dend_78 { pt3dadd( -145.579, -85.7607, -51.8344, 0.07 ) }
    dend_78 { pt3dadd( -145.578, -85.7657, -51.7591, 0.07 ) }
    dend_78 { pt3dadd( -145.519, -85.7328, -50.9048, 0.07 ) }
    dend_78 { pt3dadd( -145.504, -85.699, -50.619, 0.07 ) }
    dend_78 { pt3dadd( -145.459, -85.3866, -48.8715, 0.07 ) }
    dend_78 { pt3dadd( -145.47, -84.9397, -46.8625, 0.07 ) }
    dend_78 { pt3dadd( -145.538, -84.6313, -45.4955, 0.07 ) }
    dend_78 { pt3dadd( -145.683, -84.3881, -44.4782, 0.07 ) }
    dend_78 { pt3dadd( -145.932, -84.0981, -43.3191, 0.07 ) }
    dend_78 { pt3dadd( -145.95, -84.0821, -43.2586, 0.07 ) }
    dend_78 { pt3dadd( -146.439, -83.7677, -42.1673, 0.07 ) }
    dend_78 { pt3dadd( -147.213, -83.4389, -40.9711, 0.07 ) }
    dend_78 { pt3dadd( -148.51, -83.0363, -39.3178, 0.07 ) }
    dend_78 { pt3dadd( -148.59, -83.0141, -39.2233, 0.07 ) }
    dend_78 { pt3dadd( -148.992, -82.8962, -38.7686, 0.07 ) }
    dend_78 { pt3dadd( -149.035, -82.8832, -38.7217, 0.07 ) }
    dend_78 { pt3dadd( -150.642, -82.3818, -37.0963, 0.07 ) }
    dend_78 { pt3dadd( -153.089, -81.6684, -34.7043, 0.07 ) }
    dend_78 { pt3dadd( -153.368, -81.5979, -34.4341, 0.74 ) }
    dend_78 { pt3dadd( -153.532, -81.5559, -34.278, 0.74 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 96/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -144.853, -84.4919, -56.2094, 0.29 ) }
    dend_77 { pt3dadd( -145.429, -84.8711, -56.4615, 0.29 ) }
    dend_77 { pt3dadd( -146.061, -85.2937, -56.7184, 0.22 ) }
    dend_77 { pt3dadd( -147.11, -86.0566, -57.1371, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_77 { pt3dadd( -147.158, -86.093, -57.1553, 0.29 ) }
    dend_77 { pt3dadd( -147.808, -86.6106, -57.4066, 0.29 ) }
    dend_77 { pt3dadd( -148.102, -86.8613, -57.5172, 0.52 ) }
    dend_77 { pt3dadd( -148.147, -86.9026, -57.5325, 0.52 ) }
    dend_77 { pt3dadd( -148.512, -87.2736, -57.652, 0.22 ) }
    dend_77 { pt3dadd( -148.682, -87.4681, -57.6993, 0.22 ) }
    dend_77 { pt3dadd( -149.357, -88.2007, -57.9362, 0.07 ) }
    dend_77 { pt3dadd( -150.009, -88.8562, -58.1936, 0.07 ) }
    dend_77 { pt3dadd( -150.099, -88.9393, -58.2258, 0.07 ) }
    dend_77 { pt3dadd( -150.446, -89.2398, -58.335, 0.88 ) }
    dend_77 { pt3dadd( -150.74, -89.4788, -58.4186, 0.88 ) }
    dend_77 { pt3dadd( -151.63, -90.1885, -58.666, 0.29 ) }
    dend_77 { pt3dadd( -152.366, -90.7421, -58.8491, 0.29 ) }
    dend_77 { pt3dadd( -153.167, -91.3076, -59.0495, 0.59 ) }
    dend_77 { pt3dadd( -153.625, -91.6229, -59.16, 0.59 ) }
    dend_77 { pt3dadd( -153.677, -91.6566, -59.1711, 0.59 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 16/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -128.205, 23.9694, 8.16384, 0.37 ) }
    dend_73 { pt3dadd( -135.691, 28.0417, 9.28155, 0.37 ) }
    dend_73 { pt3dadd( -142.678, 32.7903, 10.8935, 0.37 ) }
    dend_73 { pt3dadd( -150.615, 35.7016, 12.3479, 0.37 ) }
    dend_73 { pt3dadd( -158.791, 38.2777, 11.8296, 0.37 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 21/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -128.205, 23.9694, 8.16384, 0.52 ) }
    dend_72 { pt3dadd( -139.35, 28.4873, 7.01789, 0.37 ) }
    dend_72 { pt3dadd( -149.964, 33.9808, 5.09292, 0.37 ) }
    dend_72 { pt3dadd( -159.721, 41.1649, 4.49265, 0.37 ) }
    dend_72 { pt3dadd( -167.926, 49.8081, 1.88836, 0.37 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 26/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -170.614, -9.17251, 37.1917, 0.37 ) }
    dend_70 { pt3dadd( -179.05, -9.37662, 39.7188, 0.37 ) }
    dend_70 { pt3dadd( -187.597, -9.58093, 41.8416, 0.37 ) }
    dend_70 { pt3dadd( -195.797, -10.7771, 44.8584, 0.37 ) }
    dend_70 { pt3dadd( -203.89, -12.4399, 47.9608, 0.37 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 31/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -170.614, -9.17251, 37.1917, 0.52 ) }
    dend_69 { pt3dadd( -181.082, -8.80467, 39.6421, 0.37 ) }
    dend_69 { pt3dadd( -191.34, -7.57526, 42.6323, 0.37 ) }
    dend_69 { pt3dadd( -201.654, -8.73106, 45.4976, 0.37 ) }
    dend_69 { pt3dadd( -212.028, -10.6288, 47.6898, 0.37 ) }
    // Section: dend_65, id: dend_65, parent: dend_55 (entry count 36/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -128.219, -74.1777, 8.27327, 0.52 ) }
    dend_65 { pt3dadd( -128.077, -74.0274, 8.16255, 0.52 ) }
    dend_65 { pt3dadd( -127.729, -73.6583, 7.89066, 0.52 ) }
    dend_65 { pt3dadd( -127.42, -73.332, 7.65026, 0.37 ) }
    dend_65 { pt3dadd( -126.962, -72.8478, 7.29358, 0.29 ) }
    dend_65 { pt3dadd( -126.666, -72.534, 7.06241, 0.15 ) }
    dend_65 { pt3dadd( -126.632, -72.4985, 7.03628, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 43/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -128.219, -74.1777, 8.27327, 0.44 ) }
    dend_56 { pt3dadd( -128.558, -74.1861, 8.54131, 0.44 ) }
    dend_56 { pt3dadd( -129.104, -74.2166, 8.97801, 0.74 ) }
    dend_56 { pt3dadd( -129.787, -74.3044, 9.50544, 1.03 ) }
    dend_56 { pt3dadd( -130.789, -74.4596, 10.1681, 1.03 ) }
    dend_56 { pt3dadd( -131.968, -74.7005, 10.8983, 1.18 ) }
    dend_56 { pt3dadd( -132.032, -74.7155, 10.9374, 1.18 ) }
    dend_56 { pt3dadd( -132.438, -74.818, 11.1863, 1.03 ) }
    dend_56 { pt3dadd( -133.523, -75.0957, 11.8642, 0.52 ) }
    dend_56 { pt3dadd( -135.071, -75.4938, 12.8677, 0.52 ) }
    dend_56 { pt3dadd( -135.816, -75.7051, 13.4034, 0.52 ) }
    dend_56 { pt3dadd( -135.884, -75.7237, 13.4566, 0.52 ) }
    dend_56 { pt3dadd( -136.687, -75.9431, 14.1802, 0.52 ) }
    dend_56 { pt3dadd( -136.749, -75.9581, 14.2424, 0.52 ) }
    dend_56 { pt3dadd( -137.605, -76.1568, 15.2355, 0.52 ) }
    dend_56 { pt3dadd( -138.457, -76.4044, 16.2085, 0.52 ) }
    dend_56 { pt3dadd( -138.509, -76.42, 16.2633, 0.52 ) }
    dend_56 { pt3dadd( -139.211, -76.6535, 16.9189, 0.52 ) }
    dend_56 { pt3dadd( -140.665, -77.1912, 18.0741, 0.52 ) }
    dend_56 { pt3dadd( -140.725, -77.2165, 18.1159, 0.52 ) }
    dend_56 { pt3dadd( -142.439, -78.0347, 19.1231, 0.52 ) }
    dend_56 { pt3dadd( -142.493, -78.0651, 19.1474, 0.52 ) }
    dend_56 { pt3dadd( -143.245, -78.5355, 19.4431, 1.03 ) }
    dend_56 { pt3dadd( -144.021, -79.0811, 19.6977, 1.33 ) }
    dend_56 { pt3dadd( -144.945, -79.854, 19.9805, 1.33 ) }
    dend_56 { pt3dadd( -145.619, -80.4563, 20.1849, 0.88 ) }
    dend_56 { pt3dadd( -147.04, -81.8726, 20.5842, 0.52 ) }
    dend_56 { pt3dadd( -147.098, -81.9375, 20.5992, 0.52 ) }
    dend_56 { pt3dadd( -148.139, -83.1634, 20.8532, 0.52 ) }
    dend_56 { pt3dadd( -149.293, -84.6006, 21.1421, 0.52 ) }
    dend_56 { pt3dadd( -149.347, -84.6696, 21.1552, 0.52 ) }
    dend_56 { pt3dadd( -150.082, -85.6315, 21.3603, 1.11 ) }
    dend_56 { pt3dadd( -151.104, -86.9277, 21.7605, 1.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 76/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -5.18982, 198.538, 19.3286, 0.52 ) }
    dend_35 { pt3dadd( -5.22328, 198.962, 19.3783, 0.52 ) }
    dend_35 { pt3dadd( -5.27081, 199.732, 19.4615, 0.52 ) }
    dend_35 { pt3dadd( -5.32591, 200.664, 19.4859, 0.66 ) }
    dend_35 { pt3dadd( -5.3807, 201.695, 19.475, 1.11 ) }
    dend_35 { pt3dadd( -5.389, 201.807, 19.4704, 1.11 ) }
    dend_35 { pt3dadd( -5.47784, 202.911, 19.4101, 1.4 ) }
    dend_35 { pt3dadd( -5.55768, 203.749, 19.3083, 1.4 ) }
    dend_35 { pt3dadd( -5.67246, 204.707, 19.1148, 1.11 ) }
    dend_35 { pt3dadd( -5.68355, 204.778, 19.0974, 1.11 ) }
    dend_35 { pt3dadd( -5.93738, 206.344, 18.6827, 0.81 ) }
    dend_35 { pt3dadd( -5.94899, 206.415, 18.6636, 0.81 ) }
    dend_35 { pt3dadd( -6.22964, 208.297, 18.1644, 0.74 ) }
    dend_35 { pt3dadd( -6.35313, 209.634, 17.8916, 0.66 ) }
    dend_35 { pt3dadd( -6.39212, 211.102, 17.6853, 0.66 ) }
    dend_35 { pt3dadd( -6.37589, 212.288, 17.5494, 0.66 ) }
    dend_35 { pt3dadd( -6.37029, 212.41, 17.5418, 0.66 ) }
    dend_35 { pt3dadd( -6.31191, 213.595, 17.516, 0.74 ) }
    dend_35 { pt3dadd( -6.15191, 216.477, 17.6781, 0.74 ) }
    dend_35 { pt3dadd( -6.03541, 218.728, 17.9304, 0.74 ) }
    dend_35 { pt3dadd( -6.03013, 218.885, 17.9528, 0.74 ) }
    dend_35 { pt3dadd( -6.04508, 220.293, 18.1726, 0.74 ) }
    dend_35 { pt3dadd( -6.11884, 221.307, 18.3265, 1.25 ) }
    dend_35 { pt3dadd( -6.32847, 222.645, 18.5229, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_35 { pt3dadd( -6.36987, 222.803, 18.5454, 1.69 ) }
    dend_35 { pt3dadd( -6.64113, 223.729, 18.658, 1.69 ) }
    dend_35 { pt3dadd( -6.87763, 224.608, 18.7235, 1.25 ) }
    dend_35 { pt3dadd( -7.12308, 225.763, 18.7297, 0.81 ) }
    dend_35 { pt3dadd( -7.22645, 226.605, 18.7156, 0.81 ) }
    dend_35 { pt3dadd( -7.23011, 226.78, 18.7114, 0.81 ) }
    dend_35 { pt3dadd( -7.21694, 227.567, 18.7324, 0.81 ) }
    dend_35 { pt3dadd( -7.21423, 227.63, 18.7355, 0.81 ) }
    dend_35 { pt3dadd( -7.17057, 228.792, 18.8141, 0.81 ) }
    dend_35 { pt3dadd( -7.14404, 229.966, 18.8932, 0.81 ) }
    dend_35 { pt3dadd( -7.17581, 232.074, 19.0511, 0.74 ) }
    dend_35 { pt3dadd( -7.25794, 233.769, 19.1886, 0.74 ) }
    dend_35 { pt3dadd( -7.32776, 234.674, 19.2352, 1.11 ) }
    dend_35 { pt3dadd( -7.38274, 235.393, 19.2356, 1.4 ) }
    dend_35 { pt3dadd( -7.44706, 236.125, 19.1987, 1.55 ) }
    dend_35 { pt3dadd( -7.55708, 237.287, 19.0847, 1.03 ) }
    dend_35 { pt3dadd( -7.63755, 238.207, 18.9446, 0.81 ) }
    dend_35 { pt3dadd( -7.74108, 239.963, 18.6363, 0.59 ) }
    dend_35 { pt3dadd( -7.79138, 241.397, 18.3325, 0.59 ) }
    dend_35 { pt3dadd( -7.80806, 242.705, 18.0157, 0.59 ) }
    dend_35 { pt3dadd( -7.80841, 242.787, 17.9953, 0.59 ) }
    dend_35 { pt3dadd( -7.81054, 243.773, 17.7488, 0.88 ) }
    dend_35 { pt3dadd( -7.81964, 245.094, 17.4474, 0.88 ) }
    dend_35 { pt3dadd( -7.85028, 247.181, 17.0828, 0.81 ) }
    dend_35 { pt3dadd( -7.85195, 247.254, 17.0727, 0.81 ) }
    dend_35 { pt3dadd( -7.86054, 249.186, 16.8354, 0.66 ) }
    dend_35 { pt3dadd( -7.85963, 249.875, 16.7952, 0.66 ) }
    dend_35 { pt3dadd( -7.85814, 249.96, 16.7958, 0.66 ) }
    dend_35 { pt3dadd( -7.82263, 251.044, 16.8833, 1.11 ) }
    dend_35 { pt3dadd( -7.78225, 251.949, 17.0408, 1.47 ) }
    dend_35 { pt3dadd( -7.73247, 252.789, 17.1975, 1.47 ) }
    dend_35 { pt3dadd( -7.64236, 254.035, 17.5083, 1.33 ) }
    dend_35 { pt3dadd( -7.60051, 255.054, 17.7902, 0.66 ) }
    dend_35 { pt3dadd( -7.60192, 255.115, 17.8069, 0.66 ) }
    dend_35 { pt3dadd( -7.64897, 255.607, 17.9622, 0.52 ) }
    dend_35 { pt3dadd( -7.76923, 256.413, 18.2194, 0.52 ) }
    dend_35 { pt3dadd( -7.9191, 257.238, 18.4756, 0.74 ) }
    dend_35 { pt3dadd( -8.03636, 257.982, 18.6649, 0.96 ) }
    dend_35 { pt3dadd( -8.23074, 259.308, 19.0011, 0.96 ) }
    dend_35 { pt3dadd( -8.42521, 261.006, 19.3474, 0.66 ) }
    dend_35 { pt3dadd( -8.54083, 262.4, 19.5695, 0.66 ) }
    dend_35 { pt3dadd( -8.54363, 262.473, 19.5763, 0.66 ) }
    dend_35 { pt3dadd( -8.52139, 263.86, 19.5975, 0.66 ) }
    dend_35 { pt3dadd( -8.51606, 263.934, 19.5944, 0.66 ) }
    dend_35 { pt3dadd( -8.39657, 265.2, 19.4678, 0.66 ) }
    dend_35 { pt3dadd( -8.38812, 265.478, 19.4184, 0.66 ) }
    dend_35 { pt3dadd( -8.43196, 266.448, 19.2146, 0.66 ) }
    dend_35 { pt3dadd( -8.45039, 266.614, 19.1804, 0.66 ) }
    dend_35 { pt3dadd( -8.63285, 267.634, 18.9749, 0.66 ) }
    dend_35 { pt3dadd( -8.8486, 268.712, 18.7505, 0.66 ) }
    dend_35 { pt3dadd( -9.13896, 270.05, 18.5576, 0.66 ) }
    dend_35 { pt3dadd( -9.30016, 271.003, 18.4882, 0.52 ) }
    dend_35 { pt3dadd( -9.30733, 271.066, 18.4877, 0.52 ) }
    dend_35 { pt3dadd( -9.35862, 272.049, 18.572, 0.52 ) }
    dend_35 { pt3dadd( -9.35718, 272.122, 18.5858, 0.52 ) }
    dend_35 { pt3dadd( -9.25467, 273.562, 18.9676, 0.52 ) }
    dend_35 { pt3dadd( -9.13467, 274.879, 19.4247, 0.52 ) }
    dend_35 { pt3dadd( -9.12749, 275.017, 19.4748, 0.52 ) }
    dend_35 { pt3dadd( -9.11733, 275.893, 19.74, 0.81 ) }
    dend_35 { pt3dadd( -9.1194, 276.811, 19.972, 1.25 ) }
    dend_35 { pt3dadd( -9.13628, 277.886, 20.2045, 1.47 ) }
    dend_35 { pt3dadd( -9.16723, 278.611, 20.3258, 1.47 ) }
    dend_35 { pt3dadd( -9.23518, 279.605, 20.4787, 0.81 ) }
    dend_35 { pt3dadd( -9.35947, 281.074, 20.6916, 0.52 ) }
    dend_35 { pt3dadd( -9.49967, 282.327, 20.8855, 0.52 ) }
    dend_35 { pt3dadd( -9.71127, 283.926, 21.1723, 0.52 ) }
    dend_35 { pt3dadd( -9.81857, 284.669, 21.322, 1.18 ) }
    dend_35 { pt3dadd( -10.0222, 285.966, 21.6052, 1.18 ) }
    dend_35 { pt3dadd( -10.2108, 287.192, 21.911, 0.66 ) }
    dend_35 { pt3dadd( -10.353, 288.388, 22.2489, 0.52 ) }
    dend_35 { pt3dadd( -10.3522, 288.459, 22.2673, 0.52 ) }
    dend_35 { pt3dadd( -10.2434, 288.901, 22.352, 0.44 ) }
    dend_35 { pt3dadd( -10.213, 288.979, 22.3598, 0.44 ) }
    dend_35 { pt3dadd( -9.89728, 289.698, 22.4174, 0.44 ) }
    dend_35 { pt3dadd( -9.32592, 291.057, 22.4988, 0.44 ) }
    dend_35 { pt3dadd( -8.66839, 292.758, 22.5748, 0.44 ) }
    dend_35 { pt3dadd( -8.13859, 294.387, 22.6476, 0.44 ) }
    dend_35 { pt3dadd( -7.50202, 296.756, 22.7478, 0.44 ) }
    dend_35 { pt3dadd( -7.17909, 298.302, 22.7676, 0.44 ) }
    dend_35 { pt3dadd( -7.04609, 299.339, 22.7308, 0.44 ) }
    dend_35 { pt3dadd( -7.02634, 299.965, 22.6794, 1.4 ) }
    dend_35 { pt3dadd( -7.0496, 301.076, 22.538, 1.4 ) }
    dend_35 { pt3dadd( -7.05913, 301.296, 22.4974, 1.4 ) }
    dend_35 { pt3dadd( -7.11601, 302.68, 22.1874, 0.96 ) }
    dend_35 { pt3dadd( -7.14062, 304.038, 21.8361, 0.66 ) }
    dend_35 { pt3dadd( -7.14623, 305.32, 21.5198, 0.52 ) }
    dend_35 { pt3dadd( -7.1553, 306.515, 21.2555, 0.52 ) }
    dend_35 { pt3dadd( -7.15492, 306.598, 21.238, 0.52 ) }
    dend_35 { pt3dadd( -7.12867, 307.972, 20.9627, 0.52 ) }
    dend_35 { pt3dadd( -7.10446, 308.986, 20.7883, 0.81 ) }
    dend_35 { pt3dadd( -7.08178, 309.582, 20.6806, 1.25 ) }
    dend_35 { pt3dadd( -7.04616, 310.181, 20.5591, 1.25 ) }
    dend_35 { pt3dadd( -6.98754, 311.375, 20.3203, 0.66 ) }
    dend_35 { pt3dadd( -6.88124, 312.817, 20.0308, 0.52 ) }
    dend_35 { pt3dadd( -6.87532, 312.879, 20.0183, 0.52 ) }
    dend_35 { pt3dadd( -6.79388, 313.868, 19.8425, 0.52 ) }
    dend_35 { pt3dadd( -6.74455, 314.645, 19.7315, 0.52 ) }
    dend_35 { pt3dadd( -6.73224, 315.747, 19.6363, 0.52 ) }
    dend_35 { pt3dadd( -6.73635, 315.821, 19.636, 0.52 ) }
    dend_35 { pt3dadd( -6.81942, 316.548, 19.6936, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_35 { pt3dadd( -6.93301, 317.543, 19.8111, 0.96 ) }
    dend_35 { pt3dadd( -6.94082, 317.616, 19.8218, 0.96 ) }
    dend_35 { pt3dadd( -6.98845, 318.382, 19.9205, 1.11 ) }
    dend_35 { pt3dadd( -6.98879, 319.08, 19.9992, 0.59 ) }
    dend_35 { pt3dadd( -6.9336, 320.292, 19.9997, 0.22 ) }
    dend_35 { pt3dadd( -6.855, 321.187, 19.9229, 0.22 ) }
    dend_35 { pt3dadd( -6.77991, 321.965, 19.8342, 0.52 ) }
    dend_35 { pt3dadd( -6.69226, 323.021, 19.6942, 0.96 ) }
    dend_35 { pt3dadd( -6.64467, 323.7, 19.584, 1.18 ) }
    dend_35 { pt3dadd( -6.5575, 325.639, 19.2241, 0.52 ) }
    dend_35 { pt3dadd( -6.54865, 326.926, 18.984, 0.52 ) }
    dend_35 { pt3dadd( -6.61021, 328.038, 18.8288, 0.37 ) }
    dend_35 { pt3dadd( -6.67474, 328.666, 18.78, 0.81 ) }
    dend_35 { pt3dadd( -6.6951, 328.823, 18.7826, 0.81 ) }
    dend_35 { pt3dadd( -6.79828, 329.642, 18.8596, 0.81 ) }
    dend_35 { pt3dadd( -6.89925, 330.61, 19.0215, 0.52 ) }
    dend_35 { pt3dadd( -6.9089, 331.551, 19.1383, 0.52 ) }
    dend_35 { pt3dadd( -6.90201, 331.635, 19.145, 0.52 ) }
    dend_35 { pt3dadd( -6.81521, 332.287, 19.1905, 0.88 ) }
    dend_35 { pt3dadd( -6.65545, 333.46, 19.254, 0.88 ) }
    dend_35 { pt3dadd( -6.52211, 334.381, 19.2882, 0.52 ) }
    dend_35 { pt3dadd( -6.34093, 335.869, 19.2894, 0.52 ) }
    dend_35 { pt3dadd( -6.22558, 337.182, 19.2673, 0.52 ) }
    dend_35 { pt3dadd( -6.22227, 337.256, 19.2634, 0.52 ) }
    dend_35 { pt3dadd( -6.21821, 338.635, 19.1456, 0.52 ) }
    dend_35 { pt3dadd( -6.22224, 338.747, 19.1333, 0.52 ) }
    dend_35 { pt3dadd( -6.30647, 339.994, 18.9862, 0.52 ) }
    dend_35 { pt3dadd( -6.4117, 341.213, 18.7746, 0.52 ) }
    dend_35 { pt3dadd( -6.46353, 342.121, 18.5964, 0.81 ) }
    dend_35 { pt3dadd( -6.48681, 343.037, 18.4152, 1.25 ) }
    dend_35 { pt3dadd( -6.48585, 343.12, 18.3985, 1.25 ) }
    dend_35 { pt3dadd( -6.47417, 344.11, 18.2114, 1.25 ) }
    dend_35 { pt3dadd( -6.4472, 345.522, 17.9656, 0.66 ) }
    dend_35 { pt3dadd( -6.4076, 346.525, 17.8176, 0.44 ) }
    dend_35 { pt3dadd( -6.32126, 347.553, 17.6934, 0.37 ) }
    dend_35 { pt3dadd( -6.30913, 347.636, 17.6841, 0.37 ) }
    dend_35 { pt3dadd( -6.13486, 348.378, 17.6211, 0.37 ) }
    dend_35 { pt3dadd( -6.09611, 348.484, 17.6169, 0.37 ) }
    dend_35 { pt3dadd( -5.54392, 349.509, 17.4611, 0.37 ) }
    dend_35 { pt3dadd( -5.21388, 350.042, 17.3266, 0.59 ) }
    dend_35 { pt3dadd( -4.83638, 350.613, 17.1536, 0.88 ) }
    dend_35 { pt3dadd( -4.37006, 351.33, 16.8968, 1.11 ) }
    dend_35 { pt3dadd( -3.95296, 351.986, 16.6243, 1.11 ) }
    dend_35 { pt3dadd( -2.7315, 354.136, 15.6899, 0.37 ) }
    dend_35 { pt3dadd( -2.23467, 355.162, 15.1808, 0.37 ) }
    dend_35 { pt3dadd( -2.18409, 355.292, 15.1074, 0.37 ) }
    dend_35 { pt3dadd( -1.92727, 356.072, 14.6263, 1.03 ) }
    dend_35 { pt3dadd( -1.69678, 356.9, 14.0869, 1.33 ) }
    dend_35 { pt3dadd( -1.51107, 357.666, 13.608, 1.33 ) }
    dend_35 { pt3dadd( -1.23852, 358.956, 12.8969, 0.52 ) }
    dend_35 { pt3dadd( -0.99669, 360.059, 12.2923, 0.37 ) }
    dend_35 { pt3dadd( -0.85349, 360.693, 11.976, 0.29 ) }
    dend_35 { pt3dadd( -0.83935, 360.759, 11.9473, 0.29 ) }
    dend_35 { pt3dadd( -0.672057, 361.762, 11.5948, 0.29 ) }
    dend_35 { pt3dadd( -0.659854, 361.906, 11.5684, 0.29 ) }
    dend_35 { pt3dadd( -0.697219, 362.912, 11.5768, 0.29 ) }
    dend_35 { pt3dadd( -0.709296, 362.996, 11.5839, 0.29 ) }
    dend_35 { pt3dadd( -0.97522, 363.974, 11.7094, 0.66 ) }
    dend_35 { pt3dadd( -1.29383, 364.916, 11.8551, 0.81 ) }
    dend_35 { pt3dadd( -1.81298, 366.203, 12.0726, 0.81 ) }
    dend_35 { pt3dadd( -2.15638, 367.094, 12.2434, 1.4 ) }
    dend_35 { pt3dadd( -2.44336, 367.999, 12.4248, 1.4 ) }
    dend_35 { pt3dadd( -2.85567, 369.558, 12.7508, 0.66 ) }
    dend_35 { pt3dadd( -2.87152, 369.638, 12.7709, 0.66 ) }
    dend_35 { pt3dadd( -3.01907, 370.833, 13.0717, 0.59 ) }
    dend_35 { pt3dadd( -3.10681, 372.256, 13.4128, 0.37 ) }
    dend_35 { pt3dadd( -3.13323, 374.377, 13.9459, 0.37 ) }
    dend_35 { pt3dadd( -3.13208, 374.439, 13.9611, 0.37 ) }
    dend_35 { pt3dadd( -3.09878, 375.943, 14.3578, 0.37 ) }
    dend_35 { pt3dadd( -3.10392, 376.982, 14.653, 0.37 ) }
    dend_35 { pt3dadd( -3.10625, 377.053, 14.6748, 0.37 ) }
    dend_35 { pt3dadd( -3.17784, 377.704, 14.908, 1.11 ) }
    dend_35 { pt3dadd( -3.35561, 378.615, 15.2683, 1.25 ) }
    dend_35 { pt3dadd( -3.74208, 380.22, 15.8761, 1.25 ) }
    dend_35 { pt3dadd( -3.9795, 381.053, 16.1819, 1.25 ) }
    dend_35 { pt3dadd( -3.9973, 381.12, 16.2071, 1.25 ) }
    dend_35 { pt3dadd( -4.32176, 382.465, 16.7063, 0.59 ) }
    dend_35 { pt3dadd( -4.48626, 383.4, 17.0664, 0.29 ) }
    dend_35 { pt3dadd( -4.5591, 384.198, 17.3722, 0.29 ) }
    dend_35 { pt3dadd( -4.56027, 384.339, 17.4184, 0.29 ) }
    dend_35 { pt3dadd( -4.50906, 385.423, 17.7735, 0.29 ) }
    dend_35 { pt3dadd( -4.50225, 385.494, 17.7947, 0.29 ) }
    dend_35 { pt3dadd( -4.32082, 386.776, 18.0981, 0.29 ) }
    dend_35 { pt3dadd( -4.30995, 386.86, 18.1069, 0.29 ) }
    dend_35 { pt3dadd( -4.3156, 387.436, 17.9978, 0.29 ) }
    dend_35 { pt3dadd( -4.38296, 387.854, 17.7846, 0.66 ) }
    dend_35 { pt3dadd( -4.40528, 387.986, 17.7024, 0.66 ) }
    dend_35 { pt3dadd( -4.52937, 388.801, 17.1554, 0.66 ) }
    dend_35 { pt3dadd( -4.64298, 390.256, 16.2221, 0.66 ) }
    dend_35 { pt3dadd( -4.65008, 391.576, 15.4596, 0.52 ) }
    dend_35 { pt3dadd( -4.5726, 392.853, 14.7278, 0.52 ) }
    dend_35 { pt3dadd( -4.44903, 394.058, 14.0088, 0.52 ) }
    dend_35 { pt3dadd( -4.43663, 394.153, 13.9532, 0.52 ) }
    dend_35 { pt3dadd( -4.15856, 395.912, 12.9914, 0.52 ) }
    dend_35 { pt3dadd( -4.0824, 396.395, 12.773, 0.74 ) }
    dend_35 { pt3dadd( -3.87955, 397.839, 12.1402, 0.74 ) }
    dend_35 { pt3dadd( -3.76232, 399.198, 11.5176, 0.59 ) }
    dend_35 { pt3dadd( -3.76771, 399.78, 11.2258, 0.59 ) }
    dend_35 { pt3dadd( -3.79049, 400.133, 11.0443, 0.88 ) }
    dend_35 { pt3dadd( -3.91174, 400.928, 10.6557, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_35 { pt3dadd( -4.08963, 402.263, 10.0954, 1.11 ) }
    dend_35 { pt3dadd( -4.15716, 403.152, 9.82654, 0.59 ) }
    dend_35 { pt3dadd( -4.18598, 404.021, 9.60218, 0.52 ) }
    dend_35 { pt3dadd( -4.18605, 404.093, 9.58384, 0.52 ) }
    dend_35 { pt3dadd( -4.13275, 405.797, 9.10959, 0.52 ) }
    dend_35 { pt3dadd( -4.04743, 407.447, 8.5936, 0.52 ) }
    dend_35 { pt3dadd( -3.92717, 409.203, 8.07434, 0.52 ) }
    dend_35 { pt3dadd( -3.79972, 410.576, 7.64892, 0.52 ) }
    dend_35 { pt3dadd( -3.78998, 410.656, 7.62234, 0.52 ) }
    dend_35 { pt3dadd( -3.65417, 411.678, 7.25349, 0.52 ) }
    dend_35 { pt3dadd( -3.4772, 412.669, 6.8139, 1.25 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 11/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -5.18982, 198.538, 19.3286, 0.59 ) }
    dend_34 { pt3dadd( -5.21749, 198.578, 19.3131, 0.59 ) }
    dend_34 { pt3dadd( -5.56149, 199.068, 19.1208, 0.59 ) }
    dend_34 { pt3dadd( -5.97477, 199.657, 18.8897, 0.37 ) }
    dend_34 { pt3dadd( -6.22746, 200.017, 18.7484, 0.37 ) }
    dend_34 { pt3dadd( -6.50173, 200.408, 18.595, 0.15 ) }
    dend_34 { pt3dadd( -11.5194, 206.913, 15.8305, 0.15 ) }
    // Section: dend_88, id: dend_88, parent: dend_86 (entry count 18/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -53.4625, 7.67268, 6.49845, 0.52 ) }
    dend_88 { pt3dadd( -53.7651, 8.02737, 6.2345, 0.52 ) }
    dend_88 { pt3dadd( -54.0882, 8.42831, 6.00622, 0.52 ) }
    dend_88 { pt3dadd( -54.1885, 8.5569, 5.94225, 0.52 ) }
    dend_88 { pt3dadd( -54.6128, 9.07005, 5.68079, 0.22 ) }
    dend_88 { pt3dadd( -55.0809, 9.62076, 5.39222, 0.22 ) }
    dend_88 { pt3dadd( -55.2114, 9.77428, 5.31177, 0.22 ) }
    dend_88 { pt3dadd( -55.7053, 10.3467, 5.04971, 0.22 ) }
    dend_88 { pt3dadd( -55.8135, 10.4715, 4.99179, 0.22 ) }
    dend_88 { pt3dadd( -56.2714, 11.0083, 4.76378, 0.22 ) }
    dend_88 { pt3dadd( -56.3118, 11.0551, 4.74913, 0.59 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 29/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -53.4625, 7.67268, 6.49845, 0.66 ) }
    dend_87 { pt3dadd( -53.6146, 7.45444, 6.39385, 0.66 ) }
    dend_87 { pt3dadd( -54.1696, 6.65835, 6.01228, 0.66 ) }
    dend_87 { pt3dadd( -54.8359, 5.70243, 5.5541, 0.15 ) }
    dend_87 { pt3dadd( -60.9347, -3.6295, 0.520066, 0.15 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 34/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -87.8051, -84.9446, -83.6156, 0.29 ) }
    dend_82 { pt3dadd( -87.2892, -84.9218, -83.4494, 0.29 ) }
    dend_82 { pt3dadd( -86.8218, -84.9012, -83.2988, 0.29 ) }
    dend_82 { pt3dadd( -86.7683, -84.8989, -83.2815, 0.29 ) }
    dend_82 { pt3dadd( -86.0936, -84.8691, -83.0641, 0.29 ) }
    dend_82 { pt3dadd( -85.9541, -84.8629, -83.0192, 0.29 ) }
    dend_82 { pt3dadd( -84.8625, -84.8148, -82.6674, 0.37 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 41/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -87.8051, -84.9446, -83.6156, 0.22 ) }
    dend_81 { pt3dadd( -88.1701, -85.6549, -84.009, 0.22 ) }
    dend_81 { pt3dadd( -88.745, -86.7299, -84.5564, 0.22 ) }
    dend_81 { pt3dadd( -89.0735, -87.344, -84.8691, 0.81 ) }
    dend_81 { pt3dadd( -89.3738, -87.9054, -85.1549, 0.37 ) }
    dend_81 { pt3dadd( -89.9686, -89.0176, -85.7212, 0.29 ) }
    dend_81 { pt3dadd( -90.1149, -89.2911, -85.8604, 0.29 ) }
    dend_81 { pt3dadd( -90.1481, -89.3416, -85.8849, 0.29 ) }
    // Section: dend_64, id: dend_64, parent: dend_56 (entry count 49/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -151.104, -86.9277, 21.7605, 0.59 ) }
    dend_64 { pt3dadd( -150.921, -87.7227, 21.7016, 0.59 ) }
    dend_64 { pt3dadd( -150.872, -88.6291, 21.7606, 0.29 ) }
    dend_64 { pt3dadd( -150.875, -88.7182, 21.7721, 0.29 ) }
    dend_64 { pt3dadd( -150.935, -89.8262, 21.9315, 0.29 ) }
    dend_64 { pt3dadd( -150.938, -89.9038, 21.9441, 0.29 ) }
    dend_64 { pt3dadd( -150.987, -91.3891, 22.1972, 0.29 ) }
    dend_64 { pt3dadd( -151.036, -92.5961, 22.4451, 0.29 ) }
    dend_64 { pt3dadd( -151.191, -94.8309, 22.9329, 0.29 ) }
    dend_64 { pt3dadd( -151.197, -94.9184, 22.9523, 0.29 ) }
    dend_64 { pt3dadd( -151.292, -96.1216, 23.2241, 0.59 ) }
    dend_64 { pt3dadd( -151.297, -96.1981, 23.2418, 0.59 ) }
    dend_64 { pt3dadd( -151.294, -96.71, 23.3708, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 62/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -151.104, -86.9277, 21.7605, 0.96 ) }
    dend_57 { pt3dadd( -151.224, -86.9837, 21.7762, 0.96 ) }
    dend_57 { pt3dadd( -152.255, -87.5668, 21.957, 0.96 ) }
    dend_57 { pt3dadd( -153.23, -88.1823, 22.0869, 0.74 ) }
    dend_57 { pt3dadd( -153.342, -88.2528, 22.0982, 0.74 ) }
    dend_57 { pt3dadd( -155.128, -89.233, 22.1971, 0.59 ) }
    dend_57 { pt3dadd( -155.212, -89.2754, 22.1997, 0.59 ) }
    dend_57 { pt3dadd( -157.375, -90.2585, 22.1944, 0.59 ) }
    dend_57 { pt3dadd( -158.688, -90.791, 22.1436, 0.59 ) }
    dend_57 { pt3dadd( -159.727, -91.1588, 22.0745, 0.52 ) }
    dend_57 { pt3dadd( -161.11, -91.6004, 21.929, 0.52 ) }
    dend_57 { pt3dadd( -161.199, -91.6281, 21.9152, 0.52 ) }
    dend_57 { pt3dadd( -161.868, -91.8764, 21.7928, 0.52 ) }
    dend_57 { pt3dadd( -162.048, -91.9579, 21.7546, 0.52 ) }
    dend_57 { pt3dadd( -163.069, -92.5637, 21.561, 0.52 ) }
    dend_57 { pt3dadd( -163.815, -93.2091, 21.4145, 0.88 ) }
    dend_57 { pt3dadd( -164.952, -94.4277, 21.1927, 1.18 ) }
    dend_57 { pt3dadd( -165.68, -95.3414, 21.0094, 0.88 ) }
    dend_57 { pt3dadd( -166.332, -96.2799, 20.8261, 0.66 ) }
    dend_57 { pt3dadd( -166.419, -96.4116, 20.7884, 0.66 ) }
    dend_57 { pt3dadd( -167.238, -97.7242, 20.316, 0.66 ) }
    dend_57 { pt3dadd( -167.286, -97.8003, 20.2859, 0.66 ) }
    dend_57 { pt3dadd( -167.945, -98.8447, 19.8096, 0.66 ) }
    dend_57 { pt3dadd( -168.522, -99.7076, 19.4045, 0.66 ) }
    dend_57 { pt3dadd( -169.86, -101.724, 18.3853, 0.66 ) }
    dend_57 { pt3dadd( -169.913, -101.795, 18.3537, 0.66 ) }
    dend_57 { pt3dadd( -170.498, -102.394, 18.1306, 1.11 ) }
    dend_57 { pt3dadd( -170.58, -102.463, 18.1155, 1.11 ) }
    dend_57 { pt3dadd( -171.373, -103.017, 18.0129, 1.11 ) }
    dend_57 { pt3dadd( -172.861, -103.953, 17.8558, 0.74 ) }
    dend_57 { pt3dadd( -174.618, -104.926, 17.765, 0.52 ) }
    dend_57 { pt3dadd( -176.474, -105.879, 17.63, 0.52 ) }
    dend_57 { pt3dadd( -177.92, -106.522, 17.4955, 0.52 ) }
    dend_57 { pt3dadd( -179.987, -107.344, 17.2755, 1.25 ) }
    dend_57 { pt3dadd( -180.075, -107.372, 17.2646, 1.25 ) }
    dend_57 { pt3dadd( -180.857, -107.589, 17.1928, 1.25 ) }
    dend_57 { pt3dadd( -180.944, -107.622, 17.1812, 1.25 ) }
    dend_57 { pt3dadd( -182.331, -108.245, 17.1472, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_57 { pt3dadd( -182.441, -108.3, 17.1561, 0.96 ) }
    dend_57 { pt3dadd( -183.566, -108.907, 17.3823, 0.59 ) }
    dend_57 { pt3dadd( -185.451, -110.045, 17.8738, 0.44 ) }
    dend_57 { pt3dadd( -187.233, -111.225, 18.4338, 0.44 ) }
    dend_57 { pt3dadd( -188.624, -112.214, 19.0576, 0.74 ) }
    dend_57 { pt3dadd( -189.481, -112.906, 19.5326, 1.11 ) }
    dend_57 { pt3dadd( -190.313, -113.628, 20.0582, 1.11 ) }
    dend_57 { pt3dadd( -191.034, -114.303, 20.5812, 0.81 ) }
    dend_57 { pt3dadd( -191.097, -114.358, 20.6267, 0.81 ) }
    dend_57 { pt3dadd( -193.081, -115.823, 21.7873, 0.29 ) }
    dend_57 { pt3dadd( -194.225, -116.581, 22.2306, 0.29 ) }
    dend_57 { pt3dadd( -194.317, -116.632, 22.2546, 0.29 ) }
    dend_57 { pt3dadd( -195.19, -117.071, 22.3869, 0.29 ) }
    dend_57 { pt3dadd( -196.65, -117.755, 22.4789, 0.29 ) }
    dend_57 { pt3dadd( -198.129, -118.487, 22.4913, 0.29 ) }
    dend_57 { pt3dadd( -198.305, -118.584, 22.4811, 0.29 ) }
    dend_57 { pt3dadd( -198.715, -118.852, 22.5117, 0.88 ) }
    dend_57 { pt3dadd( -199.441, -119.443, 22.5949, 0.88 ) }
    dend_57 { pt3dadd( -199.588, -119.594, 22.6159, 0.88 ) }
    dend_57 { pt3dadd( -200.202, -120.295, 22.7666, 0.66 ) }
    dend_57 { pt3dadd( -201.132, -121.41, 23.0619, 0.29 ) }
    dend_57 { pt3dadd( -202.242, -122.729, 23.4569, 0.15 ) }
    dend_57 { pt3dadd( -203.067, -123.697, 23.7749, 0.88 ) }
    dend_57 { pt3dadd( -203.917, -124.686, 24.1167, 1.11 ) }
    dend_57 { pt3dadd( -204.911, -125.835, 24.5347, 0.37 ) }
    dend_57 { pt3dadd( -205.786, -126.853, 24.8733, 0.37 ) }
    dend_57 { pt3dadd( -206.716, -127.953, 25.2214, 0.37 ) }
    dend_57 { pt3dadd( -207.253, -128.618, 25.4261, 1.03 ) }
    dend_57 { pt3dadd( -207.823, -129.34, 25.6469, 1.18 ) }
    dend_57 { pt3dadd( -208.459, -130.234, 25.8962, 1.18 ) }
    dend_57 { pt3dadd( -209.614, -132.274, 26.4046, 0.52 ) }
    dend_57 { pt3dadd( -209.669, -132.394, 26.4371, 0.52 ) }
    dend_57 { pt3dadd( -210.212, -133.975, 26.9185, 0.52 ) }
    dend_57 { pt3dadd( -210.243, -134.101, 26.9616, 0.52 ) }
    dend_57 { pt3dadd( -210.669, -136.329, 27.799, 0.37 ) }
    dend_57 { pt3dadd( -210.974, -138.474, 28.6761, 0.37 ) }
    dend_57 { pt3dadd( -211.088, -139.27, 29.0569, 1.03 ) }
    dend_57 { pt3dadd( -211.28, -140.336, 29.5927, 1.03 ) }
    dend_57 { pt3dadd( -211.638, -141.993, 30.462, 0.59 ) }
    dend_57 { pt3dadd( -211.995, -143.287, 31.1862, 0.29 ) }
    dend_57 { pt3dadd( -212.026, -143.376, 31.24, 0.29 ) }
    dend_57 { pt3dadd( -212.82, -145.111, 32.3297, 0.29 ) }
    dend_57 { pt3dadd( -213.664, -146.679, 33.338, 0.29 ) }
    dend_57 { pt3dadd( -214.158, -147.465, 33.8048, 0.29 ) }
    dend_57 { pt3dadd( -214.742, -148.286, 34.2345, 0.88 ) }
    dend_57 { pt3dadd( -214.794, -148.359, 34.2677, 0.88 ) }
    dend_57 { pt3dadd( -215.428, -149.243, 34.6181, 0.88 ) }
    dend_57 { pt3dadd( -216.107, -150.202, 34.9146, 0.44 ) }
    dend_57 { pt3dadd( -217.224, -151.807, 35.3581, 0.29 ) }
    dend_57 { pt3dadd( -218.229, -153.535, 35.6948, 0.29 ) }
    dend_57 { pt3dadd( -218.31, -153.706, 35.7157, 0.29 ) }
    dend_57 { pt3dadd( -218.537, -154.267, 35.7717, 0.81 ) }
    dend_57 { pt3dadd( -218.568, -154.357, 35.779, 0.81 ) }
    dend_57 { pt3dadd( -218.861, -155.385, 35.8462, 0.81 ) }
    dend_57 { pt3dadd( -219.448, -158.183, 36.0137, 0.52 ) }
    dend_57 { pt3dadd( -219.659, -159.484, 36.0282, 1.18 ) }
    dend_57 { pt3dadd( -219.848, -160.58, 36.0215, 1.18 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 57/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -3.4772, 412.669, 6.8139, 1.69 ) }
    dend_37 { pt3dadd( -3.6867, 413.853, 7.01292, 1.69 ) }
    dend_37 { pt3dadd( -3.80024, 414.457, 7.18761, 1.69 ) }
    dend_37 { pt3dadd( -4.00531, 415.511, 7.55206, 0.52 ) }
    dend_37 { pt3dadd( -4.15888, 416.301, 7.82496, 0.52 ) }
    dend_37 { pt3dadd( -4.30042, 417.028, 8.0765, 0.52 ) }
    dend_37 { pt3dadd( -4.37774, 417.426, 8.21392, 0.52 ) }
    dend_37 { pt3dadd( -4.53542, 418.338, 8.67719, 0.52 ) }
    dend_37 { pt3dadd( -4.54269, 418.388, 8.70422, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 66/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -3.4772, 412.669, 6.8139, 0.37 ) }
    dend_36 { pt3dadd( -3.62968, 412.731, 6.65731, 0.37 ) }
    dend_36 { pt3dadd( -4.4205, 413.054, 5.84518, 0.37 ) }
    dend_36 { pt3dadd( -5.38714, 413.449, 4.8525, 0.37 ) }
    dend_36 { pt3dadd( -5.91273, 413.664, 4.31274, 0.37 ) }
    dend_36 { pt3dadd( -6.92743, 414.078, 3.27069, 1.03 ) }
    dend_36 { pt3dadd( -7.06021, 414.132, 3.13434, 1.03 ) }
    // Section: dend_90, id: dend_90, parent: dend_88 (entry count 73/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -56.3118, 11.0551, 4.74913, 0.37 ) }
    dend_90 { pt3dadd( -56.486, 11.1729, 4.7316, 0.37 ) }
    dend_90 { pt3dadd( -56.6239, 11.2643, 4.71899, 0.37 ) }
    dend_90 { pt3dadd( -57.4001, 11.7804, 4.64987, 0.37 ) }
    dend_90 { pt3dadd( -57.524, 11.8648, 4.63888, 0.37 ) }
    dend_90 { pt3dadd( -58.2145, 12.3441, 4.57779, 0.29 ) }
    dend_90 { pt3dadd( -58.279, 12.3916, 4.57197, 0.29 ) }
    dend_90 { pt3dadd( -58.9143, 12.8604, 4.47005, 0.29 ) }
    dend_90 { pt3dadd( -58.9714, 12.8991, 4.45714, 0.29 ) }
    dend_90 { pt3dadd( -59.1857, 13.0177, 4.39535, 0.29 ) }
    dend_90 { pt3dadd( -59.2832, 13.0656, 4.36394, 0.29 ) }
    dend_90 { pt3dadd( -59.9128, 13.3392, 4.12428, 0.29 ) }
    dend_90 { pt3dadd( -60.6312, 13.6317, 3.82739, 0.29 ) }
    dend_90 { pt3dadd( -61.4273, 14.0191, 3.66198, 0.22 ) }
    dend_90 { pt3dadd( -62.3535, 14.5652, 3.52546, 0.22 ) }
    dend_90 { pt3dadd( -62.4039, 14.5975, 3.51993, 0.22 ) }
    dend_90 { pt3dadd( -63.076, 15.0637, 3.403, 0.22 ) }
    dend_90 { pt3dadd( -63.1239, 15.0983, 3.39141, 0.22 ) }
    dend_90 { pt3dadd( -65.434, 16.8794, 2.74939, 0.22 ) }
    dend_90 { pt3dadd( -67.0824, 18.2128, 2.19792, 0.22 ) }
    dend_90 { pt3dadd( -67.1511, 18.2676, 2.16868, 0.22 ) }
    dend_90 { pt3dadd( -68.7002, 19.3999, 1.42187, 0.22 ) }
    dend_90 { pt3dadd( -69.2765, 19.7671, 1.10438, 0.96 ) }
    dend_90 { pt3dadd( -69.3232, 19.7919, 1.07598, 0.96 ) }
    dend_90 { pt3dadd( -69.8846, 20.0221, 0.681983, 0.96 ) }
    dend_90 { pt3dadd( -71.0022, 20.4232, 0.0152626, 0.22 ) }
    dend_90 { pt3dadd( -71.7712, 20.7224, -0.379962, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_90 { pt3dadd( -72.3976, 20.9941, -0.645257, 0.22 ) }
    dend_90 { pt3dadd( -73.4776, 21.553, -1.054, 0.22 ) }
    dend_90 { pt3dadd( -74.5133, 22.1389, -1.42446, 0.22 ) }
    dend_90 { pt3dadd( -74.6538, 22.2243, -1.469, 0.22 ) }
    dend_90 { pt3dadd( -75.2976, 22.6455, -1.63604, 0.22 ) }
    dend_90 { pt3dadd( -75.9278, 23.0626, -1.78578, 0.22 ) }
    dend_90 { pt3dadd( -77.2709, 23.9441, -2.06223, 0.22 ) }
    dend_90 { pt3dadd( -77.6564, 24.1647, -2.16483, 0.22 ) }
    dend_90 { pt3dadd( -78.474, 24.531, -2.39784, 0.22 ) }
    dend_90 { pt3dadd( -78.6273, 24.586, -2.44495, 0.22 ) }
    dend_90 { pt3dadd( -79.7455, 24.9002, -2.84821, 0.22 ) }
    dend_90 { pt3dadd( -79.8087, 24.9152, -2.87372, 0.22 ) }
    dend_90 { pt3dadd( -81.4344, 25.2545, -3.74274, 0.22 ) }
    dend_90 { pt3dadd( -82.4344, 25.4616, -4.32377, 0.22 ) }
    dend_90 { pt3dadd( -82.4924, 25.4732, -4.36075, 0.22 ) }
    dend_90 { pt3dadd( -83.6907, 25.7143, -5.17343, 0.22 ) }
    dend_90 { pt3dadd( -83.7457, 25.7257, -5.21472, 0.22 ) }
    dend_90 { pt3dadd( -85.3812, 26.1089, -6.42658, 0.22 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 18/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -56.3118, 11.0551, 4.74913, 0.15 ) }
    dend_89 { pt3dadd( -56.6835, 11.5754, 8.99818, 0.15 ) }
    dend_89 { pt3dadd( -56.7327, 11.6624, 9.75636, 0.07 ) }
    dend_89 { pt3dadd( -56.738, 11.6838, 9.97074, 0.07 ) }
    dend_89 { pt3dadd( -56.6583, 11.8216, 11.7879, 0.29 ) }
    dend_89 { pt3dadd( -56.7482, 11.8331, 11.755, 0.29 ) }
    dend_89 { pt3dadd( -57.146, 11.8338, 11.8662, 0.29 ) }
    dend_89 { pt3dadd( -57.6396, 11.782, 11.9366, 0.29 ) }
    dend_89 { pt3dadd( -58.5968, 11.6421, 12.1609, 0.29 ) }
    dend_89 { pt3dadd( -58.7939, 11.6089, 12.2134, 0.29 ) }
    dend_89 { pt3dadd( -60.5644, 11.2974, 12.7476, 0.29 ) }
    dend_89 { pt3dadd( -62.9696, 10.7981, 13.509, 0.29 ) }
    dend_89 { pt3dadd( -64.2266, 10.4986, 13.9256, 0.29 ) }
    dend_89 { pt3dadd( -64.402, 10.4481, 13.9886, 0.29 ) }
    dend_89 { pt3dadd( -65.8833, 9.9669, 14.5516, 0.29 ) }
    dend_89 { pt3dadd( -66.068, 9.90488, 14.6214, 0.29 ) }
    dend_89 { pt3dadd( -67.1344, 9.53439, 15.0143, 0.29 ) }
    dend_89 { pt3dadd( -67.2325, 9.50157, 15.0528, 0.29 ) }
    dend_89 { pt3dadd( -68.0842, 9.22625, 15.5119, 0.22 ) }
    dend_89 { pt3dadd( -68.35, 9.14561, 15.6676, 0.22 ) }
    dend_89 { pt3dadd( -68.8726, 8.99869, 16.0003, 0.22 ) }
    dend_89 { pt3dadd( -68.9529, 8.97903, 16.0502, 0.22 ) }
    dend_89 { pt3dadd( -70.8676, 8.62172, 17.1792, 0.22 ) }
    dend_89 { pt3dadd( -71.4812, 8.52261, 17.5354, 0.22 ) }
    dend_89 { pt3dadd( -72.5578, 8.35189, 18.152, 0.22 ) }
    dend_89 { pt3dadd( -72.7355, 8.31661, 18.2515, 0.22 ) }
    dend_89 { pt3dadd( -73.9376, 8.06177, 18.8635, 0.22 ) }
    dend_89 { pt3dadd( -75.6664, 7.67069, 19.6318, 0.22 ) }
    dend_89 { pt3dadd( -75.7425, 7.65105, 19.6576, 0.22 ) }
    dend_89 { pt3dadd( -76.428, 7.45228, 19.866, 0.22 ) }
    dend_89 { pt3dadd( -77.2992, 7.1857, 20.0958, 0.22 ) }
    dend_89 { pt3dadd( -78.4354, 6.85932, 20.3869, 0.22 ) }
    dend_89 { pt3dadd( -78.6306, 6.80691, 20.4308, 0.22 ) }
    dend_89 { pt3dadd( -79.7227, 6.58423, 20.6396, 0.22 ) }
    dend_89 { pt3dadd( -81.0675, 6.39017, 20.8883, 0.22 ) }
    dend_89 { pt3dadd( -81.1999, 6.38104, 20.9197, 0.22 ) }
    dend_89 { pt3dadd( -83.1091, 6.35696, 21.4646, 0.22 ) }
    dend_89 { pt3dadd( -83.3317, 6.36314, 21.5367, 0.22 ) }
    dend_89 { pt3dadd( -85.545, 6.51454, 22.2897, 0.22 ) }
    dend_89 { pt3dadd( -85.8395, 6.55705, 22.4018, 0.22 ) }
    dend_89 { pt3dadd( -87.2614, 6.83516, 22.9812, 0.22 ) }
    dend_89 { pt3dadd( -87.5537, 6.88871, 23.0945, 0.22 ) }
    dend_89 { pt3dadd( -88.3394, 7.02834, 23.37, 0.22 ) }
    dend_89 { pt3dadd( -88.5471, 7.0595, 23.4588, 0.22 ) }
    dend_89 { pt3dadd( -89.6714, 7.20989, 23.9441, 0.22 ) }
    dend_89 { pt3dadd( -89.7597, 7.218, 23.9819, 0.22 ) }
    dend_89 { pt3dadd( -90.8575, 7.28565, 24.4218, 0.22 ) }
    dend_89 { pt3dadd( -91.139, 7.28918, 24.5337, 0.22 ) }
    dend_89 { pt3dadd( -92.4097, 7.26207, 25.0297, 0.22 ) }
    dend_89 { pt3dadd( -93.6208, 7.23344, 25.4617, 0.22 ) }
    dend_89 { pt3dadd( -96.3322, 7.15905, 26.334, 0.22 ) }
    dend_89 { pt3dadd( -96.438, 7.16281, 26.3646, 0.22 ) }
    dend_89 { pt3dadd( -97.8902, 7.30161, 26.7432, 0.22 ) }
    dend_89 { pt3dadd( -98.1771, 7.3248, 26.8377, 0.22 ) }
    dend_89 { pt3dadd( -99.2019, 7.39228, 27.2159, 0.22 ) }
    dend_89 { pt3dadd( -99.335, 7.39479, 27.2765, 0.22 ) }
    dend_89 { pt3dadd( -100.71, 7.36435, 27.877, 0.22 ) }
    dend_89 { pt3dadd( -100.798, 7.36066, 27.9175, 0.22 ) }
    dend_89 { pt3dadd( -103.523, 7.18325, 29.5759, 0.22 ) }
    dend_89 { pt3dadd( -103.71, 7.16371, 29.7056, 0.22 ) }
    dend_89 { pt3dadd( -104.537, 6.99247, 30.3308, 0.22 ) }
    dend_89 { pt3dadd( -105.307, 6.69756, 30.9338, 0.22 ) }
    dend_89 { pt3dadd( -105.593, 6.5394, 31.1661, 0.22 ) }
    dend_89 { pt3dadd( -107.035, 5.72017, 32.3966, 0.22 ) }
    dend_89 { pt3dadd( -107.106, 5.68027, 32.4494, 0.22 ) }
    dend_89 { pt3dadd( -108.152, 5.0822, 33.2385, 0.22 ) }
    dend_89 { pt3dadd( -109.622, 4.18141, 34.2778, 0.22 ) }
    dend_89 { pt3dadd( -109.693, 4.13514, 34.3246, 0.22 ) }
    dend_89 { pt3dadd( -111.6, 2.9751, 35.4256, 0.22 ) }
    dend_89 { pt3dadd( -113.462, 1.96532, 36.3089, 0.22 ) }
    dend_89 { pt3dadd( -113.577, 1.91151, 36.3605, 0.22 ) }
    dend_89 { pt3dadd( -115.466, 1.29268, 37.0113, 0.22 ) }
    dend_89 { pt3dadd( -115.663, 1.25174, 37.056, 0.22 ) }
    dend_89 { pt3dadd( -117.265, 1.06623, 37.1911, 0.22 ) }
    dend_89 { pt3dadd( -117.952, 1.05648, 37.1288, 0.66 ) }
    dend_89 { pt3dadd( -118.165, 1.07574, 37.0988, 0.66 ) }
    dend_89 { pt3dadd( -120.355, 1.34847, 36.8028, 0.66 ) }
    dend_89 { pt3dadd( -120.449, 1.36414, 36.7891, 0.66 ) }
    dend_89 { pt3dadd( -122.412, 1.60411, 36.5315, 0.66 ) }
    dend_89 { pt3dadd( -122.821, 1.63705, 36.482, 0.66 ) }
    dend_89 { pt3dadd( -124.608, 1.68811, 36.3222, 0.66 ) }
    dend_89 { pt3dadd( -125.475, 1.67304, 36.2831, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_89 { pt3dadd( -125.681, 1.65518, 36.2887, 0.37 ) }
    dend_89 { pt3dadd( -126.806, 1.53175, 36.3035, 0.29 ) }
    dend_89 { pt3dadd( -127.802, 1.39756, 36.3151, 0.15 ) }
    dend_89 { pt3dadd( -128.381, 1.33517, 36.3155, 0.22 ) }
    dend_89 { pt3dadd( -128.587, 1.3147, 36.3118, 0.22 ) }
    dend_89 { pt3dadd( -129.618, 1.22121, 36.369, 0.22 ) }
    dend_89 { pt3dadd( -130.133, 1.18013, 36.4115, 0.22 ) }
    dend_89 { pt3dadd( -130.747, 1.1268, 36.5026, 0.22 ) }
    dend_89 { pt3dadd( -130.933, 1.1046, 36.5468, 0.22 ) }
    dend_89 { pt3dadd( -131.735, 1.03003, 36.8082, 0.22 ) }
    dend_89 { pt3dadd( -133.164, 0.898563, 37.367, 0.22 ) }
    dend_89 { pt3dadd( -146.415, 0.702463, 41.0994, 0.22 ) }
    dend_89 { pt3dadd( -159.366, 2.13721, 45.5582, 0.22 ) }
    dend_89 { pt3dadd( -172.363, 3.86103, 49.777, 0.22 ) }
    // Section: dend_63, id: dend_63, parent: dend_57 (entry count 14/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -219.848, -160.58, 36.0215, 0.74 ) }
    dend_63 { pt3dadd( -219.344, -161.373, 36.521, 0.74 ) }
    dend_63 { pt3dadd( -219.083, -161.691, 36.757, 0.59 ) }
    dend_63 { pt3dadd( -218.456, -162.402, 37.3154, 0.59 ) }
    dend_63 { pt3dadd( -218.338, -162.53, 37.4208, 0.59 ) }
    dend_63 { pt3dadd( -217.683, -163.252, 37.9398, 0.52 ) }
    dend_63 { pt3dadd( -216.687, -164.357, 38.6823, 0.29 ) }
    dend_63 { pt3dadd( -215.978, -165.11, 39.235, 0.29 ) }
    dend_63 { pt3dadd( -215.907, -165.182, 39.2865, 0.29 ) }
    dend_63 { pt3dadd( -214.542, -166.444, 40.183, 0.29 ) }
    dend_63 { pt3dadd( -213.774, -167.176, 40.6775, 0.59 ) }
    dend_63 { pt3dadd( -213.739, -167.211, 40.6979, 0.59 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 26/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -219.848, -160.58, 36.0215, 0.81 ) }
    dend_58 { pt3dadd( -220.191, -161.034, 36.3958, 0.81 ) }
    dend_58 { pt3dadd( -220.684, -161.728, 36.9833, 0.52 ) }
    dend_58 { pt3dadd( -221.331, -162.645, 37.7665, 0.44 ) }
    dend_58 { pt3dadd( -221.768, -163.314, 38.2811, 0.44 ) }
    dend_58 { pt3dadd( -222.539, -164.588, 39.1242, 0.44 ) }
    dend_58 { pt3dadd( -222.914, -165.222, 39.4913, 0.88 ) }
    dend_58 { pt3dadd( -223.274, -165.868, 39.8284, 0.88 ) }
    dend_58 { pt3dadd( -223.335, -165.994, 39.8781, 0.88 ) }
    dend_58 { pt3dadd( -223.786, -166.952, 40.0966, 0.59 ) }
    dend_58 { pt3dadd( -224.19, -167.746, 40.1598, 0.66 ) }
    dend_58 { pt3dadd( -224.642, -168.544, 40.1165, 0.44 ) }
    dend_58 { pt3dadd( -224.691, -168.627, 40.1091, 0.44 ) }
    dend_58 { pt3dadd( -225.236, -169.489, 40.0285, 0.44 ) }
    dend_58 { pt3dadd( -225.721, -170.214, 39.9932, 1.18 ) }
    dend_58 { pt3dadd( -226.285, -170.944, 40.0222, 1.18 ) }
    dend_58 { pt3dadd( -227.178, -172.04, 40.1272, 1.77 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 43/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -4.54269, 418.388, 8.70422, 0.66 ) }
    dend_39 { pt3dadd( -4.8262, 418.554, 8.56613, 0.66 ) }
    dend_39 { pt3dadd( -5.499, 418.878, 8.2847, 0.37 ) }
    dend_39 { pt3dadd( -6.19866, 419.218, 8.01431, 0.22 ) }
    dend_39 { pt3dadd( -7.21175, 419.76, 7.6457, 0.22 ) }
    dend_39 { pt3dadd( -7.83158, 420.161, 7.4053, 0.22 ) }
    dend_39 { pt3dadd( -7.95928, 420.265, 7.35379, 0.22 ) }
    dend_39 { pt3dadd( -8.46149, 420.812, 7.16809, 0.22 ) }
    dend_39 { pt3dadd( -8.68207, 421.186, 7.10321, 0.22 ) }
    dend_39 { pt3dadd( -8.85759, 421.69, 7.03262, 0.52 ) }
    dend_39 { pt3dadd( -9.05882, 422.554, 6.92477, 0.88 ) }
    dend_39 { pt3dadd( -9.20399, 423.389, 6.83335, 0.88 ) }
    dend_39 { pt3dadd( -9.36543, 424.533, 6.72298, 0.44 ) }
    dend_39 { pt3dadd( -9.53784, 426.088, 6.58838, 0.37 ) }
    dend_39 { pt3dadd( -9.64646, 427.314, 6.49601, 0.37 ) }
    dend_39 { pt3dadd( -9.6957, 427.891, 6.45629, 0.88 ) }
    dend_39 { pt3dadd( -9.78381, 428.914, 6.40088, 0.96 ) }
    dend_39 { pt3dadd( -9.85088, 429.768, 6.34949, 0.96 ) }
    dend_39 { pt3dadd( -9.85448, 429.849, 6.34459, 0.96 ) }
    dend_39 { pt3dadd( -9.85138, 431.073, 6.29447, 0.88 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 63/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -4.54269, 418.388, 8.70422, 0.52 ) }
    dend_38 { pt3dadd( -4.90259, 418.566, 8.63419, 0.52 ) }
    dend_38 { pt3dadd( -5.32238, 418.831, 8.55522, 0.52 ) }
    dend_38 { pt3dadd( -5.81166, 419.163, 8.46427, 0.52 ) }
    dend_38 { pt3dadd( -5.90061, 419.223, 8.44774, 0.52 ) }
    dend_38 { pt3dadd( -6.67502, 419.748, 8.30379, 0.52 ) }
    dend_38 { pt3dadd( -7.29265, 420.167, 8.18899, 0.52 ) }
    dend_38 { pt3dadd( -7.75145, 420.522, 8.10581, 0.52 ) }
    dend_38 { pt3dadd( -7.83125, 420.595, 8.09187, 0.52 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 72/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -227.178, -172.04, 40.1272, 0.52 ) }
    dend_60 { pt3dadd( -227.176, -172.583, 40.5882, 0.52 ) }
    dend_60 { pt3dadd( -227.103, -173.346, 41.3182, 0.52 ) }
    dend_60 { pt3dadd( -227.095, -173.444, 41.4153, 0.52 ) }
    dend_60 { pt3dadd( -226.92, -174.192, 42.0102, 0.52 ) }
    dend_60 { pt3dadd( -226.846, -174.479, 42.2187, 0.52 ) }
    dend_60 { pt3dadd( -226.622, -175.341, 42.825, 0.44 ) }
    dend_60 { pt3dadd( -226.455, -175.941, 43.2555, 0.37 ) }
    dend_60 { pt3dadd( -226.179, -176.796, 43.8394, 0.37 ) }
    dend_60 { pt3dadd( -225.531, -178.651, 45.0547, 0.37 ) }
    dend_60 { pt3dadd( -225.224, -179.452, 45.5352, 0.37 ) }
    dend_60 { pt3dadd( -225.113, -179.744, 45.6943, 0.37 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 84/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -227.178, -172.04, 40.1272, 0.66 ) }
    dend_59 { pt3dadd( -227.261, -172.068, 40.0932, 0.66 ) }
    dend_59 { pt3dadd( -227.867, -172.294, 39.8362, 0.59 ) }
    dend_59 { pt3dadd( -229.498, -172.918, 39.2382, 0.59 ) }
    dend_59 { pt3dadd( -230.592, -173.371, 38.8827, 0.59 ) }
    dend_59 { pt3dadd( -230.653, -173.399, 38.8624, 0.59 ) }
    dend_59 { pt3dadd( -233.111, -174.601, 38.0632, 0.29 ) }
    dend_59 { pt3dadd( -233.182, -174.638, 38.042, 0.29 ) }
    dend_59 { pt3dadd( -235.062, -175.684, 37.5166, 0.29 ) }
    dend_59 { pt3dadd( -235.766, -176.089, 37.3396, 1.03 ) }
    dend_59 { pt3dadd( -236.749, -176.624, 37.1279, 0.88 ) }
    dend_59 { pt3dadd( -237.579, -177.067, 36.9626, 0.88 ) }
    dend_59 { pt3dadd( -238.826, -177.797, 36.7954, 0.29 ) }
    dend_59 { pt3dadd( -238.981, -177.892, 36.7787, 0.29 ) }
    dend_59 { pt3dadd( -239.773, -178.421, 36.7273, 0.29 ) }
    dend_59 { pt3dadd( -240.79, -179.132, 36.7231, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_59 { pt3dadd( -241.629, -179.757, 36.7926, 0.29 ) }
    dend_59 { pt3dadd( -243.699, -181.423, 37.1796, 0.29 ) }
    dend_59 { pt3dadd( -244.254, -181.914, 37.3465, 0.96 ) }
    dend_59 { pt3dadd( -244.861, -182.46, 37.6168, 0.96 ) }
    dend_59 { pt3dadd( -245.404, -182.957, 37.968, 0.44 ) }
    dend_59 { pt3dadd( -246.533, -183.972, 38.9199, 0.37 ) }
    dend_59 { pt3dadd( -247.401, -184.727, 39.8153, 0.74 ) }
    dend_59 { pt3dadd( -247.886, -185.144, 40.4081, 0.74 ) }
    dend_59 { pt3dadd( -248.659, -185.869, 41.4341, 0.74 ) }
    dend_59 { pt3dadd( -249.239, -186.431, 42.2385, 0.37 ) }
    dend_59 { pt3dadd( -249.921, -187.129, 43.2915, 0.22 ) }
    dend_59 { pt3dadd( -250.38, -187.617, 44.0813, 0.22 ) }
    dend_59 { pt3dadd( -250.497, -187.744, 44.278, 0.22 ) }
    dend_59 { pt3dadd( -251.12, -188.387, 45.2683, 0.22 ) }
    dend_59 { pt3dadd( -251.204, -188.48, 45.3957, 0.22 ) }
    dend_59 { pt3dadd( -251.726, -189.059, 46.2124, 0.22 ) }
    dend_59 { pt3dadd( -252.458, -189.75, 47.4684, 0.22 ) }
    dend_59 { pt3dadd( -252.499, -189.778, 47.5348, 0.22 ) }
    dend_59 { pt3dadd( -252.664, -189.861, 47.7936, 0.22 ) }
    dend_59 { pt3dadd( -252.77, -189.885, 47.9557, 0.52 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 20/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -9.85138, 431.073, 6.29447, 0.44 ) }
    dend_41 { pt3dadd( -9.3856, 432.195, 5.55339, 0.44 ) }
    dend_41 { pt3dadd( -9.11166, 432.918, 5.11623, 0.44 ) }
    dend_41 { pt3dadd( -9.0824, 433.01, 5.06913, 0.44 ) }
    dend_41 { pt3dadd( -8.91206, 433.899, 4.73599, 0.96 ) }
    dend_41 { pt3dadd( -8.90394, 433.956, 4.71762, 0.96 ) }
    dend_41 { pt3dadd( -8.73111, 435.332, 4.32987, 1.55 ) }
    dend_41 { pt3dadd( -8.64675, 436.272, 4.13608, 1.55 ) }
    dend_41 { pt3dadd( -8.5646, 437.376, 3.94483, 0.74 ) }
    dend_41 { pt3dadd( -8.468, 439.504, 3.68159, 0.59 ) }
    dend_41 { pt3dadd( -8.46776, 439.875, 3.65548, 0.81 ) }
    dend_41 { pt3dadd( -8.48255, 440.439, 3.6371, 0.96 ) }
    dend_41 { pt3dadd( -8.52394, 441.111, 3.64801, 0.96 ) }
    dend_41 { pt3dadd( -8.57361, 441.785, 3.66071, 0.44 ) }
    dend_41 { pt3dadd( -8.68719, 443.224, 3.67089, 0.37 ) }
    dend_41 { pt3dadd( -8.81043, 444.487, 3.63802, 0.37 ) }
    dend_41 { pt3dadd( -8.83048, 444.627, 3.62991, 0.37 ) }
    dend_41 { pt3dadd( -8.9873, 445.515, 3.54806, 0.37 ) }
    dend_41 { pt3dadd( -9.00033, 445.584, 3.5401, 0.37 ) }
    dend_41 { pt3dadd( -9.16608, 446.633, 3.40224, 0.37 ) }
    dend_41 { pt3dadd( -9.26308, 447.695, 3.22066, 0.29 ) }
    dend_41 { pt3dadd( -9.27461, 448.436, 3.0885, 0.29 ) }
    dend_41 { pt3dadd( -9.25065, 449.051, 2.98703, 1.03 ) }
    dend_41 { pt3dadd( -9.16556, 450.001, 2.84168, 1.4 ) }
    dend_41 { pt3dadd( -9.008, 451.163, 2.70005, 1.4 ) }
    dend_41 { pt3dadd( -8.84175, 452.043, 2.62335, 1.4 ) }
    dend_41 { pt3dadd( -8.60639, 453.074, 2.56854, 0.29 ) }
    dend_41 { pt3dadd( -8.39731, 453.955, 2.54221, 0.29 ) }
    dend_41 { pt3dadd( -8.37419, 454.06, 2.53852, 0.29 ) }
    dend_41 { pt3dadd( -8.15052, 455.162, 2.49117, 0.29 ) }
    dend_41 { pt3dadd( -8.12681, 455.313, 2.48543, 0.29 ) }
    dend_41 { pt3dadd( -7.92288, 456.918, 2.35063, 0.29 ) }
    dend_41 { pt3dadd( -7.90385, 457.139, 2.32613, 0.29 ) }
    dend_41 { pt3dadd( -7.85654, 458.004, 2.22508, 0.74 ) }
    dend_41 { pt3dadd( -7.85444, 458.064, 2.21858, 0.74 ) }
    dend_41 { pt3dadd( -7.83809, 458.876, 2.14072, 0.74 ) }
    dend_41 { pt3dadd( -7.80349, 460.574, 2.0065, 0.37 ) }
    dend_41 { pt3dadd( -7.77744, 461.875, 1.93762, 0.96 ) }
    dend_41 { pt3dadd( -7.76291, 462.691, 1.92217, 1.18 ) }
    dend_41 { pt3dadd( -7.75443, 463.584, 1.93743, 1.18 ) }
    dend_41 { pt3dadd( -7.75268, 464.693, 1.97107, 0.37 ) }
    dend_41 { pt3dadd( -7.75306, 464.845, 1.97837, 0.37 ) }
    dend_41 { pt3dadd( -7.77536, 466.03, 2.06511, 0.15 ) }
    dend_41 { pt3dadd( -7.79224, 466.997, 2.10095, 0.15 ) }
    dend_41 { pt3dadd( -7.81311, 467.466, 2.11395, 0.52 ) }
    dend_41 { pt3dadd( -7.86164, 468.151, 2.12755, 1.18 ) }
    dend_41 { pt3dadd( -7.86801, 468.222, 2.12864, 1.18 ) }
    dend_41 { pt3dadd( -7.97091, 469.207, 2.1379, 1.18 ) }
    dend_41 { pt3dadd( -8.09235, 470.245, 2.14563, 0.81 ) }
    dend_41 { pt3dadd( -8.20913, 471.242, 2.15487, 0.22 ) }
    dend_41 { pt3dadd( -8.21721, 471.312, 2.15572, 0.22 ) }
    dend_41 { pt3dadd( -8.30408, 472.048, 2.16572, 0.22 ) }
    dend_41 { pt3dadd( -8.31901, 472.148, 2.16549, 0.22 ) }
    dend_41 { pt3dadd( -8.45829, 472.971, 2.15495, 0.22 ) }
    dend_41 { pt3dadd( -8.46965, 473.041, 2.15398, 0.22 ) }
    dend_41 { pt3dadd( -8.48539, 473.147, 2.15286, 0.88 ) }
    dend_41 { pt3dadd( -8.56799, 473.819, 2.14476, 0.88 ) }
    dend_41 { pt3dadd( -8.71225, 475.285, 2.12507, 0.15 ) }
    dend_41 { pt3dadd( -8.71589, 475.366, 2.12479, 0.15 ) }
    dend_41 { pt3dadd( -8.6696, 476.409, 2.06398, 0.15 ) }
    dend_41 { pt3dadd( -8.66036, 476.489, 2.05652, 0.15 ) }
    dend_41 { pt3dadd( -8.58106, 476.826, 2.02112, 0.74 ) }
    dend_41 { pt3dadd( -8.47075, 477.172, 1.98763, 0.81 ) }
    dend_41 { pt3dadd( -8.30042, 477.676, 1.94256, 0.81 ) }
    dend_41 { pt3dadd( -8.0625, 478.816, 1.86398, 0.37 ) }
    dend_41 { pt3dadd( -8.05481, 478.887, 1.86033, 0.37 ) }
    dend_41 { pt3dadd( -7.99474, 480.047, 1.81506, 0.37 ) }
    dend_41 { pt3dadd( -8.00362, 481.531, 1.76882, 0.37 ) }
    dend_41 { pt3dadd( -8.03572, 482.065, 1.7506, 0.37 ) }
    dend_41 { pt3dadd( -8.29814, 484.326, 1.67852, 0.37 ) }
    dend_41 { pt3dadd( -8.53867, 485.889, 1.64406, 0.37 ) }
    dend_41 { pt3dadd( -8.61923, 486.354, 1.62998, 1.18 ) }
    dend_41 { pt3dadd( -8.76875, 487.076, 1.59751, 1.18 ) }
    dend_41 { pt3dadd( -9.15249, 488.822, 1.50078, 0.37 ) }
    dend_41 { pt3dadd( -9.56182, 490.703, 1.38396, 0.37 ) }
    dend_41 { pt3dadd( -9.58037, 490.782, 1.37726, 0.37 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 96/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -9.85138, 431.073, 6.29447, 0.81 ) }
    dend_40 { pt3dadd( -9.54474, 431.309, 6.34723, 0.81 ) }
    dend_40 { pt3dadd( -9.25977, 431.546, 6.38956, 0.22 ) }
    dend_40 { pt3dadd( -8.09177, 432.54, 6.5546, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_40 { pt3dadd( -6.71929, 433.766, 6.73599, 0.22 ) }
    dend_40 { pt3dadd( -6.66539, 433.816, 6.74291, 0.22 ) }
    dend_40 { pt3dadd( -4.84582, 435.617, 6.97569, 0.22 ) }
    dend_40 { pt3dadd( -4.1163, 436.403, 7.07324, 0.22 ) }
    dend_40 { pt3dadd( -4.06212, 436.468, 7.0809, 0.22 ) }
    dend_40 { pt3dadd( -3.69261, 436.984, 7.11623, 0.96 ) }
    dend_40 { pt3dadd( -3.52291, 437.264, 7.12766, 1.33 ) }
    dend_40 { pt3dadd( -3.08431, 438.035, 7.18249, 0.22 ) }
    dend_40 { pt3dadd( -2.62289, 439.0, 7.34599, 0.15 ) }
    dend_40 { pt3dadd( -2.57372, 439.1, 7.36748, 0.15 ) }
    dend_40 { pt3dadd( -2.24232, 439.754, 7.52034, 0.29 ) }
    dend_40 { pt3dadd( -2.20255, 439.827, 7.54043, 0.29 ) }
    dend_40 { pt3dadd( -1.8229, 440.47, 7.74388, 0.29 ) }
    dend_40 { pt3dadd( -1.45918, 441.01, 7.96729, 0.44 ) }
    dend_40 { pt3dadd( -1.17076, 441.389, 8.1797, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 15/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -225.113, -179.744, 45.6943, 0.29 ) }
    dend_62 { pt3dadd( -224.009, -180.654, 46.1731, 0.29 ) }
    dend_62 { pt3dadd( -223.213, -181.282, 46.5364, 0.29 ) }
    dend_62 { pt3dadd( -222.124, -182.112, 47.0671, 0.29 ) }
    dend_62 { pt3dadd( -221.467, -182.613, 47.3873, 0.22 ) }
    dend_62 { pt3dadd( -220.98, -182.985, 47.6247, 0.22 ) }
    dend_62 { pt3dadd( -220.072, -183.678, 48.0677, 0.22 ) }
    dend_62 { pt3dadd( -219.556, -184.016, 48.3665, 0.88 ) }
    dend_62 { pt3dadd( -219.195, -184.255, 48.5642, 0.88 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 24/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -225.113, -179.744, 45.6943, 0.37 ) }
    dend_61 { pt3dadd( -225.806, -181.036, 45.4304, 0.37 ) }
    dend_61 { pt3dadd( -226.097, -181.49, 45.349, 0.37 ) }
    dend_61 { pt3dadd( -226.759, -182.452, 45.1842, 0.37 ) }
    dend_61 { pt3dadd( -226.885, -182.606, 45.1545, 0.66 ) }
    dend_61 { pt3dadd( -227.922, -183.737, 44.8529, 0.29 ) }
    dend_61 { pt3dadd( -228.419, -184.2, 44.7069, 0.15 ) }
    dend_61 { pt3dadd( -229.227, -184.748, 44.5017, 0.15 ) }
    dend_61 { pt3dadd( -229.284, -184.776, 44.4825, 0.15 ) }
    dend_61 { pt3dadd( -230.282, -185.009, 44.0535, 0.15 ) }
    dend_61 { pt3dadd( -231.04, -185.075, 43.7243, 0.15 ) }
    dend_61 { pt3dadd( -231.942, -184.942, 43.3375, 0.15 ) }
    dend_61 { pt3dadd( -232.235, -184.853, 43.1835, 0.15 ) }
    dend_61 { pt3dadd( -232.75, -184.597, 42.8638, 0.15 ) }
    dend_61 { pt3dadd( -233.127, -184.362, 42.6161, 0.81 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 39/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -9.58037, 490.782, 1.37726, 0.29 ) }
    dend_43 { pt3dadd( -10.4243, 492.013, 0.184557, 0.29 ) }
    dend_43 { pt3dadd( -11.2965, 492.995, -0.739877, 0.29 ) }
    dend_43 { pt3dadd( -11.6897, 493.438, -1.15666, 0.29 ) }
    dend_43 { pt3dadd( -11.9941, 493.781, -1.47924, 0.96 ) }
    dend_43 { pt3dadd( -12.6778, 494.55, -2.2039, 0.96 ) }
    dend_43 { pt3dadd( -12.7296, 494.609, -2.2588, 0.96 ) }
    dend_43 { pt3dadd( -13.5684, 495.228, -2.75605, 0.52 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 47/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -9.58037, 490.782, 1.37726, 0.37 ) }
    dend_42 { pt3dadd( -9.22413, 491.225, 1.3751, 0.37 ) }
    dend_42 { pt3dadd( -9.17549, 491.297, 1.37479, 0.37 ) }
    dend_42 { pt3dadd( -8.71698, 491.992, 1.37274, 0.37 ) }
    dend_42 { pt3dadd( -8.64577, 492.107, 1.3744, 0.37 ) }
    dend_42 { pt3dadd( -8.26732, 492.736, 1.38779, 0.37 ) }
    dend_42 { pt3dadd( -8.22307, 492.811, 1.39, 0.37 ) }
    dend_42 { pt3dadd( -7.12782, 494.733, 1.49548, 0.29 ) }
    dend_42 { pt3dadd( -7.08952, 494.805, 1.49969, 0.29 ) }
    dend_42 { pt3dadd( -6.43932, 496.137, 1.58118, 0.29 ) }
    dend_42 { pt3dadd( -6.38572, 496.261, 1.58935, 0.29 ) }
    dend_42 { pt3dadd( -6.10615, 497.02, 1.61758, 0.29 ) }
    dend_42 { pt3dadd( -6.07008, 497.129, 1.61972, 0.29 ) }
    dend_42 { pt3dadd( -5.90169, 497.622, 1.62577, 0.52 ) }
    dend_42 { pt3dadd( -5.69082, 498.183, 1.62697, 0.52 ) }
    dend_42 { pt3dadd( -5.32254, 498.947, 1.62517, 0.37 ) }
    dend_42 { pt3dadd( -4.59332, 500.167, 1.65539, 0.22 ) }
    dend_42 { pt3dadd( -4.38188, 500.447, 1.67051, 0.22 ) }
    dend_42 { pt3dadd( -3.41434, 501.626, 1.74047, 0.22 ) }
    dend_42 { pt3dadd( -3.35927, 501.685, 1.74457, 0.22 ) }
    dend_42 { pt3dadd( -2.31035, 502.643, 1.8426, 0.22 ) }
    dend_42 { pt3dadd( -1.72599, 503.078, 1.91829, 1.25 ) }
    dend_42 { pt3dadd( -1.04277, 503.479, 2.05702, 1.25 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 70/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -13.5684, 495.228, -2.75605, 0.22 ) }
    dend_45 { pt3dadd( -13.096, 497.486, -3.51058, 0.22 ) }
    dend_45 { pt3dadd( -13.0408, 498.611, -3.94896, 0.22 ) }
    dend_45 { pt3dadd( -13.0162, 499.686, -4.49305, 0.22 ) }
    dend_45 { pt3dadd( -13.0436, 500.388, -4.87397, 0.96 ) }
    dend_45 { pt3dadd( -13.0486, 500.464, -4.91726, 0.96 ) }
    dend_45 { pt3dadd( -13.125, 501.277, -5.39197, 0.37 ) }
    dend_45 { pt3dadd( -13.3594, 502.607, -6.25636, 0.22 ) }
    dend_45 { pt3dadd( -13.5369, 503.661, -7.08621, 0.37 ) }
    dend_45 { pt3dadd( -13.6983, 504.766, -8.05577, 0.37 ) }
    dend_45 { pt3dadd( -13.7488, 505.171, -8.42394, 0.88 ) }
    dend_45 { pt3dadd( -13.7908, 505.569, -8.75624, 0.88 ) }
    dend_45 { pt3dadd( -13.9017, 506.926, -9.7354, 0.52 ) }
    dend_45 { pt3dadd( -13.9048, 507.001, -9.77981, 0.52 ) }
    dend_45 { pt3dadd( -13.9852, 508.412, -10.3854, 0.22 ) }
    dend_45 { pt3dadd( -13.9872, 508.483, -10.4092, 0.22 ) }
    dend_45 { pt3dadd( -13.972, 509.992, -10.8062, 0.22 ) }
    dend_45 { pt3dadd( -13.9555, 510.996, -11.0134, 0.52 ) }
    dend_45 { pt3dadd( -13.9716, 511.473, -11.0868, 0.22 ) }
    dend_45 { pt3dadd( -14.0165, 512.482, -11.2524, 0.22 ) }
    dend_45 { pt3dadd( -14.0197, 512.582, -11.2661, 0.22 ) }
    dend_45 { pt3dadd( -14.0596, 513.705, -11.4395, 0.81 ) }
    dend_45 { pt3dadd( -14.0719, 514.74, -11.6566, 0.22 ) }
    dend_45 { pt3dadd( -14.062, 516.081, -11.9724, 0.22 ) }
    dend_45 { pt3dadd( -14.0579, 516.178, -12.0003, 0.22 ) }
    dend_45 { pt3dadd( -13.984, 517.51, -12.4182, 0.22 ) }
    dend_45 { pt3dadd( -13.9721, 517.692, -12.4675, 0.22 ) }
    dend_45 { pt3dadd( -13.8703, 518.5, -12.694, 0.59 ) }
    dend_45 { pt3dadd( -13.7434, 519.129, -12.8791, 0.59 ) }
    dend_45 { pt3dadd( -13.4534, 520.326, -13.2495, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_45 { pt3dadd( -13.252, 520.979, -13.5173, 0.22 ) }
    dend_45 { pt3dadd( -12.8029, 522.226, -14.1391, 0.22 ) }
    dend_45 { pt3dadd( -12.1881, 523.843, -14.9566, 0.88 ) }
    dend_45 { pt3dadd( -11.9725, 524.393, -15.2291, 0.88 ) }
    dend_45 { pt3dadd( -11.9413, 524.466, -15.2663, 0.88 ) }
    dend_45 { pt3dadd( -11.0259, 526.397, -16.284, 0.29 ) }
    dend_45 { pt3dadd( -10.9896, 526.465, -16.3246, 0.29 ) }
    dend_45 { pt3dadd( -10.5396, 527.306, -16.8772, 0.29 ) }
    dend_45 { pt3dadd( -10.4173, 527.608, -17.058, 0.66 ) }
    dend_45 { pt3dadd( -10.3283, 527.88, -17.2276, 0.66 ) }
    dend_45 { pt3dadd( -10.1049, 528.844, -17.7904, 0.22 ) }
    dend_45 { pt3dadd( -10.0849, 529.014, -17.8693, 0.22 ) }
    dend_45 { pt3dadd( -9.94118, 529.77, -18.2392, 0.22 ) }
    dend_45 { pt3dadd( -9.81862, 530.279, -18.5047, 0.22 ) }
    dend_45 { pt3dadd( -9.48902, 531.594, -19.0641, 0.22 ) }
    dend_45 { pt3dadd( -9.44648, 531.755, -19.1202, 0.22 ) }
    dend_45 { pt3dadd( -9.25435, 532.51, -19.2608, 0.22 ) }
    dend_45 { pt3dadd( -8.86512, 533.958, -19.409, 0.22 ) }
    dend_45 { pt3dadd( -8.83323, 534.054, -19.4154, 0.22 ) }
    dend_45 { pt3dadd( -8.24076, 535.592, -19.5021, 0.29 ) }
    dend_45 { pt3dadd( -8.20827, 535.674, -19.5041, 0.29 ) }
    dend_45 { pt3dadd( -7.48285, 537.923, -19.3383, 0.29 ) }
    dend_45 { pt3dadd( -7.43226, 538.104, -19.3153, 0.29 ) }
    dend_45 { pt3dadd( -7.09595, 539.515, -19.0625, 0.59 ) }
    dend_45 { pt3dadd( -6.88066, 540.504, -18.8883, 0.15 ) }
    dend_45 { pt3dadd( -6.30171, 543.41, -18.3749, 0.15 ) }
    dend_45 { pt3dadd( -5.81486, 546.88, -17.854, 0.15 ) }
    dend_45 { pt3dadd( -5.80798, 546.968, -17.846, 0.15 ) }
    dend_45 { pt3dadd( -5.67219, 548.648, -17.9247, 0.15 ) }
    dend_45 { pt3dadd( -5.61445, 550.078, -18.2021, 0.15 ) }
    dend_45 { pt3dadd( -5.61229, 550.171, -18.2393, 0.15 ) }
    dend_45 { pt3dadd( -5.60715, 551.841, -19.4797, 0.15 ) }
    dend_45 { pt3dadd( -5.54293, 553.558, -21.1488, 0.15 ) }
    dend_45 { pt3dadd( -5.43968, 556.279, -24.0964, 0.15 ) }
    dend_45 { pt3dadd( -5.4072, 557.107, -25.1799, 0.15 ) }
    dend_45 { pt3dadd( -5.40035, 557.22, -25.3505, 0.15 ) }
    dend_45 { pt3dadd( -5.33577, 557.738, -26.2256, 0.15 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 37/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -13.5684, 495.228, -2.75605, 0.52 ) }
    dend_44 { pt3dadd( -14.0633, 495.3, -2.61282, 0.52 ) }
    dend_44 { pt3dadd( -15.3749, 495.492, -2.23318, 0.52 ) }
    dend_44 { pt3dadd( -15.4346, 495.501, -2.21587, 0.52 ) }
    dend_44 { pt3dadd( -16.7507, 495.693, -1.83494, 0.52 ) }
    dend_44 { pt3dadd( -17.0804, 495.741, -1.7395, 0.66 ) }
    dend_44 { pt3dadd( -17.177, 495.755, -1.71154, 0.66 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_138, dend_131, dend_120, dend_97, dend_48, dend_23, dend_14, dend_5, dend_0, dend_139, dend_135, dend_132, dend_128, dend_121, dend_111, dend_98, dend_52, dend_49, dend_27, dend_24, dend_20, dend_15, dend_11, dend_6, dend_2, dend_1, dend_148, dend_140, dend_137, dend_136, dend_134, dend_133, dend_130, dend_129, dend_127, dend_122, dend_113, dend_112, dend_104, dend_99, dend_74, dend_53, dend_51, dend_50, dend_47, dend_28, dend_26, dend_25, dend_22, dend_21, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_4, dend_3, dend_150, dend_149, dend_143, dend_141, dend_126, dend_123, dend_119, dend_114, dend_110, dend_105, dend_103, dend_100, dend_91, dend_84, dend_75, dend_67, dend_54, dend_32, dend_29, dend_19, dend_18, dend_10, dend_9, dend_152, dend_151, dend_147, dend_144, dend_142, dend_125, dend_124, dend_118, dend_115, dend_107, dend_106, dend_102, dend_101, dend_96, dend_95, dend_92, dend_85, dend_79, dend_76, dend_71, dend_68, dend_66, dend_55, dend_46, dend_33, dend_31, dend_30, dend_146, dend_145, dend_117, dend_116, dend_109, dend_108, dend_94, dend_93, dend_86, dend_83, dend_80, dend_78, dend_77, dend_73, dend_72, dend_70, dend_69, dend_65, dend_56, dend_35, dend_34, dend_88, dend_87, dend_82, dend_81, dend_64, dend_57, dend_37, dend_36, dend_90, dend_89, dend_63, dend_58, dend_39, dend_38, dend_60, dend_59, dend_41, dend_40, dend_62, dend_61, dend_43, dend_42, dend_45, dend_44]}
    ModelViewParmSubset_2 = new SectionList()
    dend_138 ModelViewParmSubset_2.append()
    dend_131 ModelViewParmSubset_2.append()
    dend_120 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_139 ModelViewParmSubset_2.append()
    dend_135 ModelViewParmSubset_2.append()
    dend_132 ModelViewParmSubset_2.append()
    dend_128 ModelViewParmSubset_2.append()
    dend_121 ModelViewParmSubset_2.append()
    dend_111 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_148 ModelViewParmSubset_2.append()
    dend_140 ModelViewParmSubset_2.append()
    dend_137 ModelViewParmSubset_2.append()
    dend_136 ModelViewParmSubset_2.append()
    dend_134 ModelViewParmSubset_2.append()
    dend_133 ModelViewParmSubset_2.append()
    dend_130 ModelViewParmSubset_2.append()
    dend_129 ModelViewParmSubset_2.append()
    dend_127 ModelViewParmSubset_2.append()
    dend_122 ModelViewParmSubset_2.append()
    dend_113 ModelViewParmSubset_2.append()
    dend_112 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_150 ModelViewParmSubset_2.append()
    dend_149 ModelViewParmSubset_2.append()
    dend_143 ModelViewParmSubset_2.append()
    dend_141 ModelViewParmSubset_2.append()
    dend_126 ModelViewParmSubset_2.append()
    dend_123 ModelViewParmSubset_2.append()
    dend_119 ModelViewParmSubset_2.append()
    dend_114 ModelViewParmSubset_2.append()
    dend_110 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_152 ModelViewParmSubset_2.append()
    dend_151 ModelViewParmSubset_2.append()
    dend_147 ModelViewParmSubset_2.append()
    dend_144 ModelViewParmSubset_2.append()
    dend_142 ModelViewParmSubset_2.append()
    dend_125 ModelViewParmSubset_2.append()
    dend_124 ModelViewParmSubset_2.append()
    dend_118 ModelViewParmSubset_2.append()
    dend_115 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_106 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_85 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_146 ModelViewParmSubset_2.append()
    dend_145 ModelViewParmSubset_2.append()
    dend_117 ModelViewParmSubset_2.append()
    dend_116 ModelViewParmSubset_2.append()
    dend_109 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_138, dend_131, dend_120, dend_97, dend_48, dend_23, dend_14, dend_5, dend_0, dend_139, dend_135, dend_132, dend_128, dend_121, dend_111, dend_98, dend_52, dend_49, dend_27, dend_24, dend_20, dend_15, dend_11, dend_6, dend_2, dend_1, dend_148, dend_140, dend_137, dend_136, dend_134, dend_133, dend_130, dend_129, dend_127, dend_122, dend_113, dend_112, dend_104, dend_99, dend_74, dend_53, dend_51, dend_50, dend_47, dend_28, dend_26, dend_25, dend_22, dend_21, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_4, dend_3, dend_150, dend_149, dend_143, dend_141, dend_126, dend_123, dend_119, dend_114, dend_110, dend_105, dend_103, dend_100, dend_91, dend_84, dend_75, dend_67, dend_54, dend_32, dend_29, dend_19, dend_18, dend_10, dend_9, dend_152, dend_151, dend_147, dend_144, dend_142, dend_125, dend_124, dend_118, dend_115, dend_107, dend_106, dend_102, dend_101, dend_96, dend_95, dend_92, dend_85, dend_79, dend_76, dend_71, dend_68, dend_66, dend_55, dend_46, dend_33, dend_31, dend_30, dend_146, dend_145, dend_117, dend_116, dend_109, dend_108, dend_94, dend_93, dend_86, dend_83, dend_80, dend_78, dend_77, dend_73, dend_72, dend_70, dend_69, dend_65, dend_56, dend_35, dend_34, dend_88, dend_87, dend_82, dend_81, dend_64, dend_57, dend_37, dend_36, dend_90, dend_89, dend_63, dend_58, dend_39, dend_38, dend_60, dend_59, dend_41, dend_40, dend_62, dend_61, dend_43, dend_42, dend_45, dend_44]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_138 ModelViewParmSubset_4.append()
    dend_131 ModelViewParmSubset_4.append()
    dend_120 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_139 ModelViewParmSubset_4.append()
    dend_135 ModelViewParmSubset_4.append()
    dend_132 ModelViewParmSubset_4.append()
    dend_128 ModelViewParmSubset_4.append()
    dend_121 ModelViewParmSubset_4.append()
    dend_111 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_148 ModelViewParmSubset_4.append()
    dend_140 ModelViewParmSubset_4.append()
    dend_137 ModelViewParmSubset_4.append()
    dend_136 ModelViewParmSubset_4.append()
    dend_134 ModelViewParmSubset_4.append()
    dend_133 ModelViewParmSubset_4.append()
    dend_130 ModelViewParmSubset_4.append()
    dend_129 ModelViewParmSubset_4.append()
    dend_127 ModelViewParmSubset_4.append()
    dend_122 ModelViewParmSubset_4.append()
    dend_113 ModelViewParmSubset_4.append()
    dend_112 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_150 ModelViewParmSubset_4.append()
    dend_149 ModelViewParmSubset_4.append()
    dend_143 ModelViewParmSubset_4.append()
    dend_141 ModelViewParmSubset_4.append()
    dend_126 ModelViewParmSubset_4.append()
    dend_123 ModelViewParmSubset_4.append()
    dend_119 ModelViewParmSubset_4.append()
    dend_114 ModelViewParmSubset_4.append()
    dend_110 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_152 ModelViewParmSubset_4.append()
    dend_151 ModelViewParmSubset_4.append()
    dend_147 ModelViewParmSubset_4.append()
    dend_144 ModelViewParmSubset_4.append()
    dend_142 ModelViewParmSubset_4.append()
    dend_125 ModelViewParmSubset_4.append()
    dend_124 ModelViewParmSubset_4.append()
    dend_118 ModelViewParmSubset_4.append()
    dend_115 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_146 ModelViewParmSubset_4.append()
    dend_145 ModelViewParmSubset_4.append()
    dend_117 ModelViewParmSubset_4.append()
    dend_116 ModelViewParmSubset_4.append()
    dend_109 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_131]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_131 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_120]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_120 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_135]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_135 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_132]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_132 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_128]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_128 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_49 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_24 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_6 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_2 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_148]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_148 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_137]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_137 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_133]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_133 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_127]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_127 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_113]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_113 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_112]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_112 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_51 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_50 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_47 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_28 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_22 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_21 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_17 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_16 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_12 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_8 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_7 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_3 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_150]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_150 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_149]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_149 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_141]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_141 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_126]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_126 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_123]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_123 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_114]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_114 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_110]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_110 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_103 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_100 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_91 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_75 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_54 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_29 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_19 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_9 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_147]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_147 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_144]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_144 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_142]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_142 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_124]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_124 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_118]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_118 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_115]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_115 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_107 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_106 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_96 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_95 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_92 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_76 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_71 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_68 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_46 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_146]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_146 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_145]}
    OneSecGrp_SectionRef_113 = new SectionList()
    dend_145 OneSecGrp_SectionRef_113.append()

    // Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_117]}
    OneSecGrp_SectionRef_114 = new SectionList()
    dend_117 OneSecGrp_SectionRef_114.append()

    // Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_117 = new SectionList()
    dend_108 OneSecGrp_SectionRef_117.append()

    // Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_119 = new SectionList()
    dend_93 OneSecGrp_SectionRef_119.append()

    // Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_126 = new SectionList()
    dend_72 OneSecGrp_SectionRef_126.append()

    // Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_128 = new SectionList()
    dend_69 OneSecGrp_SectionRef_128.append()

    // Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_131 = new SectionList()
    dend_35 OneSecGrp_SectionRef_131.append()

    // Group: {name=OneSecGrp_SectionRef_138, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_138 = new SectionList()
    dend_57 OneSecGrp_SectionRef_138.append()

    // Group: {name=OneSecGrp_SectionRef_142, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_142 = new SectionList()
    dend_89 OneSecGrp_SectionRef_142.append()

    // Group: {name=OneSecGrp_SectionRef_149, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_149 = new SectionList()
    dend_41 OneSecGrp_SectionRef_149.append()

    // Group: {name=OneSecGrp_SectionRef_155, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_155 = new SectionList()
    dend_45 OneSecGrp_SectionRef_155.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_138]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_138 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_97 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_139]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_139 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_52 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_23 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_5 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_140]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_140 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_74 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_27 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_14 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_84 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_53 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_111]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_111 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_98 OneSecGrp_SectionRef_18.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_67 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_85 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_120 = new SectionList()
    dend_86 OneSecGrp_SectionRef_120.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_121]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_121 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_143]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_143 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_133 = new SectionList()
    dend_88 OneSecGrp_SectionRef_133.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_20 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_122]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_122 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_134 = new SectionList()
    dend_87 OneSecGrp_SectionRef_134.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_1 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_99 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_104 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_105 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_141, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_141 = new SectionList()
    dend_90 OneSecGrp_SectionRef_141.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_129]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_129 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_130]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_130 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_18 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_136]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_136 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_151]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_151 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_152]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_152 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_55 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_129 = new SectionList()
    dend_65 OneSecGrp_SectionRef_129.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_119]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_119 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_32 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_66 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_79 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_125 = new SectionList()
    dend_73 OneSecGrp_SectionRef_125.append()

    // Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_122 = new SectionList()
    dend_80 OneSecGrp_SectionRef_122.append()

    // Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_135 = new SectionList()
    dend_82 OneSecGrp_SectionRef_135.append()

    // Group: {name=OneSecGrp_SectionRef_136, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_136 = new SectionList()
    dend_81 OneSecGrp_SectionRef_136.append()

    // Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_121 = new SectionList()
    dend_83 OneSecGrp_SectionRef_121.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_101 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_130 = new SectionList()
    dend_56 OneSecGrp_SectionRef_130.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_102 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_137, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_137 = new SectionList()
    dend_64 OneSecGrp_SectionRef_137.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_4 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_13 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_33 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_31 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_26 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_30 OneSecGrp_SectionRef_111.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_25 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_132 = new SectionList()
    dend_34 OneSecGrp_SectionRef_132.append()

    // Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_127 = new SectionList()
    dend_70 OneSecGrp_SectionRef_127.append()

    // Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_109]}
    OneSecGrp_SectionRef_116 = new SectionList()
    dend_109 OneSecGrp_SectionRef_116.append()

    // Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_124 = new SectionList()
    dend_77 OneSecGrp_SectionRef_124.append()

    // Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_118 = new SectionList()
    dend_94 OneSecGrp_SectionRef_118.append()

    // Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_123 = new SectionList()
    dend_78 OneSecGrp_SectionRef_123.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_134]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_134 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_125]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_125 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_116]}
    OneSecGrp_SectionRef_115 = new SectionList()
    dend_116 OneSecGrp_SectionRef_115.append()

    // Group: {name=OneSecGrp_SectionRef_143, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_143 = new SectionList()
    dend_63 OneSecGrp_SectionRef_143.append()

    // Group: {name=OneSecGrp_SectionRef_144, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_144 = new SectionList()
    dend_58 OneSecGrp_SectionRef_144.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_10 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_147, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_147 = new SectionList()
    dend_60 OneSecGrp_SectionRef_147.append()

    // Group: {name=OneSecGrp_SectionRef_151, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_151 = new SectionList()
    dend_62 OneSecGrp_SectionRef_151.append()

    // Group: {name=OneSecGrp_SectionRef_152, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_152 = new SectionList()
    dend_61 OneSecGrp_SectionRef_152.append()

    // Group: {name=OneSecGrp_SectionRef_148, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_148 = new SectionList()
    dend_59 OneSecGrp_SectionRef_148.append()

    // Group: {name=OneSecGrp_SectionRef_140, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_140 = new SectionList()
    dend_36 OneSecGrp_SectionRef_140.append()

    // Group: {name=OneSecGrp_SectionRef_139, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_139 = new SectionList()
    dend_37 OneSecGrp_SectionRef_139.append()

    // Group: {name=OneSecGrp_SectionRef_146, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_146 = new SectionList()
    dend_38 OneSecGrp_SectionRef_146.append()

    // Group: {name=OneSecGrp_SectionRef_145, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_145 = new SectionList()
    dend_39 OneSecGrp_SectionRef_145.append()

    // Group: {name=OneSecGrp_SectionRef_150, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_150 = new SectionList()
    dend_40 OneSecGrp_SectionRef_150.append()

    // Group: {name=OneSecGrp_SectionRef_153, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_153 = new SectionList()
    dend_43 OneSecGrp_SectionRef_153.append()

    // Group: {name=OneSecGrp_SectionRef_156, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_156 = new SectionList()
    dend_44 OneSecGrp_SectionRef_156.append()

    // Group: {name=OneSecGrp_SectionRef_154, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_154 = new SectionList()
    dend_42 OneSecGrp_SectionRef_154.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131, dend_132, dend_133, dend_134, dend_135, dend_136, dend_137, dend_138, dend_139, dend_140, dend_141, dend_142, dend_143, dend_144, dend_145, dend_146, dend_147, dend_148, dend_149, dend_150, dend_151, dend_152], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()
    dend_109 basal.append()
    dend_110 basal.append()
    dend_111 basal.append()
    dend_112 basal.append()
    dend_113 basal.append()
    dend_114 basal.append()
    dend_115 basal.append()
    dend_116 basal.append()
    dend_117 basal.append()
    dend_118 basal.append()
    dend_119 basal.append()
    dend_120 basal.append()
    dend_121 basal.append()
    dend_122 basal.append()
    dend_123 basal.append()
    dend_124 basal.append()
    dend_125 basal.append()
    dend_126 basal.append()
    dend_127 basal.append()
    dend_128 basal.append()
    dend_129 basal.append()
    dend_130 basal.append()
    dend_131 basal.append()
    dend_132 basal.append()
    dend_133 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_134 basal.append()
    dend_135 basal.append()
    dend_136 basal.append()
    dend_137 basal.append()
    dend_138 basal.append()
    dend_139 basal.append()
    dend_140 basal.append()
    dend_141 basal.append()
    dend_142 basal.append()
    dend_143 basal.append()
    dend_144 basal.append()
    dend_145 basal.append()
    dend_146 basal.append()
    dend_147 basal.append()
    dend_148 basal.append()
    dend_149 basal.append()
    dend_150 basal.append()
    dend_151 basal.append()
    dend_152 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_138, dend_138, dend_138, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_48, dend_48, dend_48, dend_48, dend_48, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_140, dend_140, dend_140, dend_140, dend_140, dend_140, dend_140, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_136, dend_134, dend_134, dend_134, dend_134, dend_133, dend_133, dend_133, dend_133, dend_130, dend_129, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_84, dend_84, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_125, dend_125, dend_125, dend_125, dend_124, dend_124, dend_124, dend_124, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_146, dend_146, dend_146, dend_146, dend_146, dend_145, dend_145, dend_145, dend_145, dend_145, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_116, dend_109, dend_109, dend_109, dend_109, dend_109, dend_108, dend_108, dend_108, dend_108, dend_94, dend_94, dend_94, dend_94, dend_93, dend_93, dend_93, dend_93, dend_86, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_87, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_136 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_130 all.append()
    dend_129 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_86 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_89 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_131 nseg = 3
    dend_120 nseg = 3
    dend_0 nseg = 3
    dend_135 nseg = 3
    dend_132 nseg = 7
    dend_128 nseg = 3
    dend_49 nseg = 3
    dend_24 nseg = 7
    dend_11 nseg = 7
    dend_6 nseg = 5
    dend_2 nseg = 7
    dend_148 nseg = 3
    dend_137 nseg = 5
    dend_133 nseg = 3
    dend_127 nseg = 7
    dend_113 nseg = 5
    dend_112 nseg = 7
    dend_51 nseg = 5
    dend_50 nseg = 5
    dend_47 nseg = 9
    dend_28 nseg = 5
    dend_22 nseg = 5
    dend_21 nseg = 7
    dend_17 nseg = 3
    dend_16 nseg = 5
    dend_12 nseg = 7
    dend_8 nseg = 9
    dend_7 nseg = 5
    dend_3 nseg = 3
    dend_150 nseg = 3
    dend_149 nseg = 5
    dend_141 nseg = 5
    dend_126 nseg = 5
    dend_123 nseg = 7
    dend_114 nseg = 3
    dend_110 nseg = 5
    dend_103 nseg = 7
    dend_100 nseg = 5
    dend_91 nseg = 3
    dend_75 nseg = 5
    dend_54 nseg = 5
    dend_29 nseg = 3
    dend_19 nseg = 5
    dend_9 nseg = 3
    dend_147 nseg = 5
    dend_144 nseg = 5
    dend_142 nseg = 7
    dend_124 nseg = 3
    dend_118 nseg = 3
    dend_115 nseg = 3
    dend_107 nseg = 5
    dend_106 nseg = 5
    dend_96 nseg = 5
    dend_95 nseg = 7
    dend_92 nseg = 7
    dend_76 nseg = 3
    dend_71 nseg = 5
    dend_68 nseg = 7
    dend_46 nseg = 3
    dend_146 nseg = 3
    dend_145 nseg = 3
    dend_117 nseg = 3
    dend_108 nseg = 3
    dend_93 nseg = 3
    dend_72 nseg = 3
    dend_69 nseg = 3
    dend_35 nseg = 11
    dend_57 nseg = 5
    dend_89 nseg = 7
    dend_41 nseg = 3
    dend_45 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_LBC_5fcaa92b0e_0_0


