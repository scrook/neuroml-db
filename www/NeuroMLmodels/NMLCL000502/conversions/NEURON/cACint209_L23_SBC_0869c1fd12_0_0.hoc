// Cell: cACint209_L23_SBC_0869c1fd12_0_0
/*
{
  "id" : "cACint209_L23_SBC_0869c1fd12_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.33595, 9.86266, -2.58258, 3.10392", "-1.10693, 8.70666, -2.27545, 5.13149", "-0.877919, 7.55065, -1.96833, 5.9409", "-0.648905, 6.39464, -1.66121, 6.21705", "-0.419891, 5.23864, -1.35409, 6.94548", "-0.190877, 4.08263, -1.04697, 7.90278", "0.0381366, 2.92662, -0.739853, 8.68773", "0.267151, 1.77062, -0.432733, 9.13726", "0.496164, 0.614609, -0.125613, 9.57756", "0.725178, -0.541398, 0.181507, 10.0179", "0.954192, -1.69741, 0.488628, 10.4496", "1.18321, -2.85341, 0.795748, 10.783", "1.41222, -4.00942, 1.10287, 11.0771", "1.64123, -5.16543, 1.40999, 10.6686", "1.87025, -6.32143, 1.71711, 9.98139", "2.09926, -7.47744, 2.02423, 9.29419", "2.32828, -8.63345, 2.33135, 8.60698", "2.55729, -9.78945, 2.63847, 7.32288", "2.7863, -10.9455, 2.94559, 6.0067", "3.01532, -12.1015, 3.25271, 3.27186", "3.24433, -13.2575, 3.55983, 2.03515" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "0.869971, -12.8446, 3.91359, 2.77", "0.397941, -15.5032, 3.96575, 2.22", "-0.278716, -19.3144, 4.0405, 2.49", "-0.862749, -22.6039, 4.10503, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "0.909968, 9.98992, -2.65641, 1.94", "2.20314, 12.058, -4.15816, 1.94", "4.22556, 15.2922, -6.50679, 1.11", "5.7271, 17.6935, -8.25052, 0.83", "8.12193, 21.5233, -11.0316, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.44003, 9.57067, -5.44641, 1.11", "-4.76782, 14.7888, -3.19576, 1.11", "-5.25254, 15.8754, -2.7271, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "3.58997, -6.76058, -9.93641, 1.11", "3.75522, -7.38026, -11.8865, 1.11", "4.14996, -8.86052, -16.5449, 1.11", "4.68418, -10.8638, -22.8492, 1.11", "4.99377, -12.0248, -26.5028, 1.11", "5.37152, -13.4413, -30.9607, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "4.05997, -1.89533, -13.4864, 1.39", "5.45711, -1.7296, -14.9619, 1.39", "8.44852, -1.53026, -17.7036, 1.11", "11.4949, -1.44386, -20.1101, 1.11", "14.2874, -1.39812, -22.1131, 1.11", "17.0983, -1.35208, -24.1293, 0.83", "19.4768, -1.31312, -25.8353, 0.83", "22.6674, -1.36808, -28.0616, 0.83", "24.6525, -1.52187, -29.2174, 0.83", "27.0467, -1.69335, -30.232, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.70003, 8.30317, -8.35641, 1.39", "-6.76726, 9.03867, -10.1494, 1.11", "-8.99951, 9.83287, -12.0856, 1.11", "-10.3354, 10.3081, -13.2442, 1.11", "-13.1604, 11.3133, -15.6946, 1.11", "-16.5796, 12.5298, -18.6602, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.58997, -2.95808, 15.3936, 1.66", "7.05081, -3.66246, 15.3936, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996567799549
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.24433, -13.2575, 3.55983, 0.856622", "6.15929, -27.9715, 3.55983, 0.856622", "9.07426, -42.6856, 3.55983, 0.856622" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-0.862749, -22.6039, 4.10503, 2.77", "-1.216, -24.2855, 7.34659, 2.77" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "8.12193, 21.5233, -11.0316, 0.83", "11.1849, 23.8186, -12.5569, 0.83", "14.3512, 26.5417, -13.5589, 0.83", "16.9881, 28.844, -14.1026, 0.28", "18.3622, 30.0282, -14.3351, 0.83", "20.7179, 32.0161, -14.6521, 0.55", "25.6114, 36.0659, -15.0803, 0.55", "28.5495, 38.5744, -14.9649, 0.28", "29.8262, 39.6829, -14.8265, 0.83", "31.8702, 41.196, -14.5552, 0.28", "33.7505, 42.4473, -14.3049, 0.83", "35.8913, 43.6471, -14.0392, 0.28", "37.4371, 44.4145, -14.0263, 0.83", "39.849, 45.6146, -14.2415, 0.55", "42.5977, 47.0479, -14.5637, 0.55", "45.8016, 48.7642, -15.1396, 0.28", "48.3556, 50.1695, -15.6731, 0.55", "52.8114, 52.6716, -16.8087, 0.28", "54.7295, 53.784, -17.3223, 0.55", "55.5366, 54.2311, -17.6526, 0.55", "59.3937, 56.3556, -19.7849, 0.28", "61.3312, 57.2921, -21.1616, 0.55", "63.0969, 58.1174, -22.5252, 0.28", "64.2113, 58.6004, -23.4346, 0.55", "70.3874, 61.105, -29.118, 0.28", "72.2315, 61.7917, -30.9803, 0.55", "74.3546, 62.4891, -33.4419, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "8.12193, 21.5233, -11.0316, 0.55", "11.406, 24.025, -7.76872, 0.55", "13.5279, 25.5548, -5.9111, 0.55", "17.6141, 28.5336, -2.26897, 0.55", "20.147, 30.3094, -0.0759904, 0.55", "20.9598, 30.8661, 0.600376, 0.55", "23.1269, 32.3202, 2.31334, 0.55", "26.5968, 34.4299, 4.57029, 0.55", "29.5535, 36.1799, 6.26255, 0.55", "31.2433, 37.2144, 7.1562, 0.55", "32.4459, 37.9387, 7.67448, 0.83", "33.8498, 38.8067, 8.25005, 0.55", "35.2435, 39.6747, 8.72881, 1.11", "38.8295, 42.0805, 9.80539, 0.55", "39.8909, 42.8443, 10.0687, 0.55", "41.597, 44.3717, 10.4833, 0.55", "43.4891, 46.2345, 10.9232, 0.55", "45.223, 48.0253, 11.2708, 0.55", "46.7723, 49.6159, 11.524, 0.55", "49.0932, 52.0346, 11.8164, 0.55", "52.9287, 55.9742, 12.0518, 0.55", "55.8365, 58.8282, 12.1346, 0.55", "59.4275, 62.0714, 11.9725, 0.55", "61.6513, 63.9606, 11.7067, 0.28", "63.9421, 65.772, 11.3682, 0.55", "67.0844, 68.02, 10.6981, 0.28", "71.4005, 70.7341, 9.73114, 0.28", "74.5175, 72.6702, 8.94714, 0.55", "76.9192, 74.1739, 8.43259, 0.55", "79.6148, 75.9682, 7.97404, 0.83", "83.1058, 78.2426, 7.49354, 0.28", "86.6206, 80.5832, 7.59628, 0.28", "87.2676, 81.1057, 7.69974, 0.55", "89.3772, 83.0761, 8.82534, 0.28", "90.1691, 83.7922, 9.42801, 0.55", "99.0722, 89.2628, 12.0836, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-5.25254, 15.8754, -2.7271, 1.11", "-7.32275, 15.8934, -0.960565, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.25254, 15.8754, -2.7271, 0.83", "-4.84969, 18.013, -5.26741, 0.83", "-4.3941, 20.6648, -8.20933, 0.83", "-3.81637, 24.8088, -11.9864, 0.83", "-3.22295, 29.6075, -15.7389, 0.83", "-2.41633, 35.4772, -20.1915, 0.83", "-1.87838, 39.3013, -23.0354, 0.83", "-1.30344, 43.4828, -25.9566, 0.83", "-0.163245, 52.2596, -31.5226, 0.83", "0.562916, 58.7668, -35.4065, 0.83", "1.02534, 64.1924, -38.2336, 0.28", "1.07754, 64.8665, -38.542, 0.55", "1.71416, 73.5185, -42.4274, 0.55", "1.91521, 76.2835, -43.6412, 0.55", "2.21507, 81.5075, -45.8462, 0.28", "2.52475, 89.6409, -48.8591, 0.55", "2.59427, 94.3641, -50.3659, 0.55", "2.62031, 97.6063, -51.3391, 0.28", "2.61339, 98.8974, -51.6768, 0.55", "2.53495, 102.507, -52.5722, 0.28", "2.42006, 105.114, -53.1432, 0.55", "2.01892, 110.764, -54.5663, 0.28", "1.83126, 112.786, -55.1469, 0.55", "1.54784, 116.62, -56.4226, 0.28", "1.44854, 118.165, -57.0215, 0.55", "1.30026, 121.995, -58.4623, 0.28", "1.26233, 124.391, -59.348, 0.55", "1.31798, 128.038, -60.6619, 0.28", "1.41655, 130.614, -61.5779, 0.55", "1.62743, 132.893, -62.3875, 0.55", "2.78328, 140.519, -64.7892, 0.28", "3.11272, 142.136, -65.2239, 0.55", "4.30066, 146.538, -66.4478, 0.28", "4.8215, 148.098, -66.9097, 0.55", "6.83208, 152.698, -68.7632, 0.55", "8.96279, 156.919, -70.7247, 0.28", "9.31329, 157.506, -71.0543, 0.55", "13.0363, 163.331, -74.4062, 0.28", "14.51, 165.374, -75.6854, 0.28", "18.0359, 170.002, -78.9902, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "5.37152, -13.4413, -30.9607, 0.83", "6.25907, -14.0157, -32.184, 0.83", "7.5895, -14.667, -33.6972, 0.83", "8.75432, -15.1658, -34.8922, 0.83", "11.6568, -16.2335, -37.7401, 0.83", "13.1568, -16.7323, -39.2107, 0.83", "15.0344, -17.2895, -41.1071, 0.83", "18.2299, -18.0434, -44.3604, 0.28", "18.8845, -18.1545, -45.0542, 0.55", "21.3385, -18.5152, -47.677, 0.28", "22.5354, -18.6696, -48.9463, 0.55", "24.6567, -19.0095, -51.3948, 0.28", "25.2614, -19.1255, -52.1625, 0.55", "27.3956, -19.5623, -55.2043, 0.55", "29.0669, -19.9482, -57.6795, 0.28", "29.6565, -20.1117, -58.5658, 0.55", "31.805, -20.7954, -61.7515, 0.28", "31.9582, -20.8548, -61.9787, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.37152, -13.4413, -30.9607, 0.55", "6.90329, -17.3627, -41.7622, 0.55", "7.70434, -19.3603, -47.3768, 0.55", "8.80059, -22.1322, -55.2016, 0.55", "9.42354, -23.6406, -59.4114, 0.83", "10.4811, -25.9696, -65.8158, 0.28", "10.7482, -26.5424, -67.3554, 0.28", "10.9441, -26.9009, -68.2307, 0.55", "13.9287, -32.3561, -80.5874, 0.28", "14.1933, -32.8415, -81.564, 0.55", "15.2898, -34.785, -85.2022, 0.28", "16.1132, -36.2795, -87.8446, 0.55", "17.4382, -38.6747, -92.0242, 0.28", "18.0426, -39.7401, -93.8136, 0.55", "20.2664, -43.583, -99.8742, 0.28", "20.6813, -44.3351, -101.088, 0.55", "22.5387, -47.8517, -106.895, 0.28", "23.4082, -49.4154, -109.678, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "27.0467, -1.69335, -30.232, 0.55", "29.1884, -0.202974, -32.3165, 0.55", "30.8442, 0.96374, -33.8389, 0.28", "31.9255, 1.72058, -34.8578, 0.83", "35.376, 4.21863, -38.3557, 0.28", "35.5311, 4.33229, -38.5156, 0.55", "36.9691, 5.41937, -40.0584, 0.28", "38.5148, 6.61191, -41.8953, 0.28", "39.3228, 7.26262, -42.853, 0.83", "41.2586, 8.95223, -44.9484, 0.28", "41.5802, 9.25906, -45.2837, 0.83", "42.5412, 10.2787, -46.3756, 0.28", "43.9348, 11.9133, -48.4782, 0.55", "44.4475, 12.4541, -49.2094, 0.28", "44.985, 12.9803, -49.9063, 0.55", "47.4828, 15.1713, -52.6121, 0.28", "48.6517, 16.1256, -53.7313, 0.55", "52.8778, 19.4355, -57.0455, 0.55", "56.6656, 22.3738, -59.5623, 0.28", "58.3434, 23.6821, -60.4401, 0.55", "62.6003, 26.9861, -62.0774, 0.28", "63.8916, 27.9654, -62.3886, 0.55", "67.2822, 30.487, -62.9153, 0.28", "68.9659, 31.7683, -62.991, 0.55", "72.3923, 34.4725, -63.0585, 0.28", "74.1988, 35.9323, -63.016, 0.55", "76.4139, 37.7698, -62.895, 0.28", "77.2024, 38.4119, -62.8769, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "27.0467, -1.69335, -30.232, 0.55", "30.4336, 0.239757, -32.6405, 0.55", "31.8793, 1.10926, -34.4461, 0.55", "33.9634, 2.17912, -37.1778, 0.28", "34.7742, 2.57385, -38.3257, 0.55", "37.3533, 3.82036, -42.6789, 0.55", "38.938, 4.50755, -45.4271, 0.55", "42.7176, 5.92947, -52.6571, 0.55", "45.3133, 6.68428, -57.5789, 0.55", "47.935, 7.17716, -62.3441, 0.55", "52.0165, 7.86438, -69.7393, 0.55", "54.4324, 8.17446, -73.9389, 0.55", "56.2633, 8.35705, -77.0166, 0.55", "59.6468, 8.44985, -82.3544, 0.28", "63.2206, 8.40272, -88.0656, 0.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-16.5796, 12.5298, -18.6602, 0.83", "-21.0125, 15.6842, -17.4265, 0.83", "-23.7021, 17.3707, -16.605, 0.83", "-27.1755, 19.4987, -15.391, 0.55", "-30.9643, 21.7195, -14.3951, 0.55", "-32.6681, 22.7264, -14.1369, 0.55", "-35.7322, 24.5302, -13.951, 0.55", "-39.9358, 26.8823, -14.2727, 0.55", "-42.4666, 28.2859, -14.6993, 0.55", "-47.4733, 30.9524, -15.7895, 0.55", "-51.6176, 33.1548, -16.9519, 0.55", "-54.154, 34.4649, -17.6838, 0.55", "-55.8513, 35.3129, -18.1568, 0.55", "-58.2165, 36.5004, -18.7979, 0.83", "-61.2293, 37.8078, -19.3514, 0.28", "-62.636, 38.4088, -19.5189, 0.55", "-66.2374, 39.9125, -19.8891, 0.55", "-70.0208, 41.6195, -20.427, 0.55", "-71.5395, 42.3302, -20.6899, 0.55", "-77.5905, 45.3985, -21.6135, 0.55", "-83.9067, 48.7299, -22.4676, 0.28", "-84.9607, 49.3018, -22.5626, 0.55", "-93.9964, 54.2731, -23.1387, 0.28", "-94.9025, 54.7946, -23.1872, 0.55", "-99.7926, 57.6054, -23.2404, 0.28", "-102.194, 59.0788, -23.0136, 0.55", "-106.438, 61.5455, -22.0069, 0.28", "-107.996, 62.4365, -21.5195, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-16.5796, 12.5298, -18.6602, 0.55", "-19.308, 14.6154, -23.6727, 0.55", "-24.5466, 18.6477, -32.8347, 0.55", "-28.9251, 22.1059, -40.1162, 0.55", "-30.7, 23.5454, -43.0152, 0.83", "-36.0284, 27.9942, -51.5537, 0.28", "-38.6172, 30.167, -55.5932, 0.55", "-41.2118, 32.3715, -59.586, 0.28", "-42.4505, 33.4206, -61.2754, 0.55", "-43.9396, 34.6965, -63.2471, 0.28", "-44.798, 35.4174, -64.4825, 0.55", "-48.48, 38.3323, -69.7332, 0.28", "-49.6375, 39.0907, -71.5812, 0.55", "-52.5024, 40.667, -76.1099, 0.28", "-53.9589, 41.3551, -78.4146, 0.55", "-57.5531, 42.8261, -84.0093, 0.28", "-59.0322, 43.3252, -86.2814, 0.55", "-65.621, 45.1924, -96.2036, 0.28", "-66.5521, 45.4167, -97.5995, 0.55", "-70.2991, 46.1881, -102.92, 0.28", "-72.3021, 46.5634, -105.599, 0.55", "-74.4629, 46.9823, -108.193, 0.55", "-76.423, 47.4469, -110.358, 0.55", "-83.7582, 49.7283, -116.743, 0.28", "-85.5363, 50.3717, -118.137, 0.55", "-88.6117, 51.6067, -120.383, 0.28", "-89.9115, 52.1853, -121.309, 0.55", "-93.733, 54.0031, -124.529, 0.28", "-98.841, 56.4915, -129.187, 0.28", "-103.857, 59.0131, -133.875, 0.83", "-109.17, 61.6708, -139.436, 0.28", "-110.575, 62.3379, -141.099, 0.55", "-118.24, 65.7891, -151.24, 0.28", "-118.843, 66.0258, -152.175, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.05081, -3.66246, 15.3936, 0.83", "9.00022, -5.64789, 17.903, 0.83", "10.6215, -7.2992, 19.9901, 0.83", "11.6389, -8.33533, 21.2997, 0.83", "14.7625, -11.5166, 25.3206, 0.83", "16.2126, -12.9935, 27.1873, 0.83", "19.1425, -15.9776, 30.9589, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.05081, -3.66246, 15.3936, 0.83", "7.74998, -4.44422, 16.898, 0.83", "9.28519, -5.89954, 19.9118, 0.83", "12.729, -9.02338, 27.1263, 0.83", "13.8025, -9.94801, 29.389, 0.83", "14.8689, -10.8095, 31.5949, 0.83", "16.4794, -11.9639, 34.8139, 0.83", "17.606, -12.6961, 37.0928, 0.83", "20.2918, -14.1375, 42.2647, 0.55", "20.8435, -14.3522, 43.3406, 0.55", "21.9005, -14.748, 45.3962, 0.83", "23.9439, -15.4421, 49.2859, 0.55", "28.012, -16.7984, 57.6081, 0.55", "33.7137, -18.216, 64.8962, 0.55", "39.4659, -20.4487, 71.9249, 0.55", "45.5103, -22.4322, 78.785, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.07426, -42.6856, 3.55983, 0.55", "11.9892, -57.3996, 3.55983, 0.55", "14.9042, -72.1137, 3.55983, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-1.216, -24.2855, 7.34659, 0.83", "-5.18465, -27.4794, 7.76556, 0.83", "-7.15448, -29.1285, 8.03529, 0.55", "-10.3577, -31.9195, 8.66808, 0.55", "-14.3055, -35.4507, 9.5944, 0.55", "-18.1617, -39.0191, 10.5387, 0.55", "-21.8141, -42.4389, 11.4659, 0.55", "-25.1217, -45.6862, 12.4765, 0.55", "-27.7929, -48.2929, 13.3096, 0.55", "-29.4897, -49.9674, 13.8428, 0.55", "-32.2545, -52.7263, 14.6507, 0.28", "-32.6561, -53.1132, 14.7373, 1.11", "-34.9343, -55.0797, 15.0475, 0.55", "-36.4617, -56.2759, 15.1698, 0.55", "-38.0502, -57.3734, 15.1794, 0.28", "-39.5496, -58.2188, 15.1981, 0.55", "-40.7936, -58.7971, 15.1904, 0.28", "-41.3668, -59.0293, 15.2011, 0.55", "-42.8647, -59.4802, 15.2906, 0.28", "-44.0669, -59.7541, 15.3712, 0.55", "-46.2603, -60.1015, 15.5307, 0.28", "-48.8205, -60.4597, 15.7238, 0.55", "-51.173, -60.8748, 15.8987, 0.28", "-53.0071, -61.188, 16.0187, 0.55" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-1.216, -24.2855, 7.34659, 0.83", "-6.13361, -27.5384, 14.5634, 0.83", "-7.97665, -28.6979, 17.1681, 0.83", "-9.8173, -29.7522, 19.6821, 0.83", "-11.0798, -30.4634, 21.3883, 0.83", "-12.5515, -31.2521, 23.2747, 0.83", "-14.7996, -32.4254, 26.0991, 0.83", "-16.4966, -33.2454, 28.1125, 0.83", "-19.5237, -34.8157, 31.6494, 0.83", "-21.3228, -35.8627, 33.7503, 0.83", "-23.1283, -36.9755, 35.8908, 0.83", "-25.1568, -38.2721, 38.37, 0.83", "-26.3785, -39.1001, 39.8978, 0.83", "-27.6922, -40.1052, 41.5272, 0.83", "-28.8171, -41.1899, 42.9812, 0.83" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-1.216, -24.2855, 7.34659, 1.66", "-0.567571, -27.0252, 8.02132, 1.66", "-0.0209371, -29.3348, 8.59013, 1.39" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-7.32275, 15.8934, -0.960565, 0.83", "-10.5932, 17.6898, 1.68665, 0.83", "-12.8573, 19.3067, 3.42085, 0.55", "-13.9877, 20.153, 4.22528, 0.83", "-16.9486, 22.4874, 6.02899, 0.55", "-19.9534, 24.8084, 7.59925, 0.55", "-25.0302, 28.6169, 10.0631, 0.55", "-31.2866, 33.2857, 12.2899, 0.55", "-33.1872, 34.6367, 12.8125, 0.55", "-38.3897, 38.0885, 13.6019, 0.55", "-42.5559, 40.6245, 13.725, 0.55", "-47.3092, 43.2589, 13.589, 0.55", "-54.6732, 46.7899, 13.0931, 0.55", "-59.9261, 48.948, 12.8237, 0.55", "-65.5707, 51.1506, 12.8665, 0.55", "-71.3469, 53.2426, 13.3661, 0.55", "-75.952, 54.8968, 14.0332, 0.55", "-79.1807, 56.0017, 14.8438, 0.55", "-82.7892, 57.1406, 16.3915, 0.55", "-86.1558, 58.1232, 17.9903, 0.28", "-89.5071, 59.1165, 19.9102, 0.28", "-91.1582, 59.615, 20.9133, 0.55", "-94.7314, 60.65, 22.841, 0.28", "-100.475, 62.1874, 25.6353, 0.55", "-105.481, 63.3826, 27.5741, 0.55", "-114.388, 69.2816, 31.3863, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-7.32275, 15.8934, -0.960565, 0.28", "-7.45384, 16.5019, 0.208476, 0.28", "-7.64878, 17.4068, 1.947, 0.28", "-8.24087, 20.1553, 7.22748, 0.55", "-8.66749, 22.1357, 11.0322, 0.55", "-9.08151, 24.0576, 14.7246, 0.55", "-9.3058, 25.0987, 16.7248, 0.55", "-8.63397, 27.695, 23.337, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "19.1425, -15.9776, 30.9589, 0.55", "19.0037, -20.3243, 31.5402, 0.55", "18.9014, -24.9194, 32.1153, 0.55", "18.8839, -26.6592, 32.3559, 0.55", "18.7698, -30.2896, 32.8991, 0.55", "18.6118, -32.8443, 33.5198, 0.55", "18.3174, -37.4117, 34.8397, 0.55", "18.1018, -39.8634, 35.6495, 0.55", "17.8946, -41.647, 36.328, 0.55", "17.4498, -45.0505, 37.7118, 0.55", "16.6043, -51.0913, 40.3583, 0.55", "15.7795, -56.0456, 42.7614, 0.55", "15.4345, -57.6361, 43.6013, 0.28", "15.2604, -58.3539, 43.985, 0.55", "13.3603, -65.8795, 47.9195, 0.28", "13.1732, -66.6303, 48.2991, 0.55", "12.2767, -69.8195, 49.6373, 0.28", "11.8042, -71.0583, 50.2717, 0.28", "9.75092, -79.2311, 54.5021, 0.28" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "19.1425, -15.9776, 30.9589, 0.55", "23.1775, -15.1035, 33.624, 0.55", "24.927, -14.712, 34.829, 0.55", "26.2587, -14.3444, 35.7798, 0.55", "27.7045, -13.885, 36.8833, 0.55", "31.8217, -12.4551, 40.2146, 0.55", "34.5256, -11.3738, 42.5516, 0.55", "35.5208, -10.8772, 43.577, 0.83", "38.277, -9.38979, 46.5248, 0.55", "41.4439, -7.61275, 50.1188, 0.55", "42.7214, -6.85579, 51.6501, 0.83", "46.2682, -4.50153, 56.0675, 0.55", "49.6551, -2.1668, 60.3536, 1.39", "59.0531, 2.7813, 68.6869, 1.39", "68.9201, 7.42584, 76.6523, 1.39", "80.0284, 9.50746, 84.1114, 1.39", "91.8753, 9.39284, 90.6989, 1.39", "103.635, 12.1514, 96.7963, 1.39" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-28.8171, -41.1899, 42.9812, 0.55", "-30.5329, -41.753, 43.7635, 0.55", "-32.7675, -42.4864, 44.7823, 0.55", "-34.7953, -43.1519, 45.7068, 0.55", "-37.003, -43.8765, 46.7135, 0.55", "-39.7491, -44.7777, 47.9655, 0.55", "-43.794, -46.1053, 49.8097, 0.55" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-28.8171, -41.1899, 42.9812, 0.55", "-28.0916, -43.7737, 45.0912, 0.55", "-27.4332, -46.1185, 47.006, 0.55", "-26.8033, -48.362, 48.8382, 0.55" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-0.0209371, -29.3348, 8.59013, 0.55", "-0.515758, -30.3184, 11.0479, 0.55", "-0.804638, -30.8337, 12.4141, 0.55", "-1.91213, -32.5643, 17.2392, 0.83", "-2.8387, -34.0496, 21.3681, 0.83", "-4.11687, -36.0704, 26.9396, 0.83", "-4.89777, -37.2845, 30.2277, 0.83", "-5.47417, -38.2097, 32.6505, 0.83", "-6.12844, -39.2176, 35.2982, 0.83", "-6.97939, -40.4311, 38.3008, 0.83", "-7.62172, -41.2422, 40.125, 0.83", "-8.5772, -42.4702, 42.5649, 0.83", "-9.67407, -43.9683, 45.3255, 0.83", "-10.6237, -45.2932, 47.6664, 0.83", "-11.1855, -46.0755, 48.9933, 0.83", "-12.7418, -48.0393, 52.3226, 0.83", "-13.8667, -49.5033, 54.7835, 0.83" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-0.0209371, -29.3348, 8.59013, 1.11", "-0.222049, -39.744, 8.08823, 1.11", "-0.314575, -44.533, 7.85732, 1.11", "-0.504539, -54.3652, 7.38325, 1.11", "-0.61661, -60.1658, 7.10356, 1.11", "-0.675545, -63.2162, 6.95648, 1.11", "-0.719098, -65.4704, 6.84779, 1.11" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-8.63397, 27.695, 23.337, 0.28", "-10.188, 31.4842, 31.7573, 0.28", "-12.3523, 33.8629, 40.5783, 0.28", "-12.5814, 36.5827, 49.5452, 0.28", "-12.6798, 38.4929, 58.7328, 0.28", "-12.7904, 41.2691, 67.6828, 0.28", "-13.1811, 45.7158, 75.8866, 0.28" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-8.63397, 27.695, 23.337, 0.83", "-9.67977, 31.6538, 32.0408, 0.28", "-10.8775, 35.9267, 40.5678, 0.28", "-10.3394, 40.9489, 48.723, 0.28", "-9.1756, 47.1566, 55.8947, 0.28", "-10.0748, 54.1445, 62.315, 0.28", "-9.19025, 61.1238, 68.7424, 0.28", "-8.16479, 67.4091, 75.8642, 0.28" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-0.719098, -65.4704, 6.84779, 1.11", "-1.07362, -69.6398, 7.33921, 1.11", "-1.31085, -73.3062, 7.74709, 1.11", "-1.70511, -79.5277, 8.17963, 1.11", "-1.808, -81.7142, 8.25572, 1.11", "-1.94967, -85.2616, 8.40898, 1.11", "-2.00645, -90.4905, 8.65151, 1.11", "-1.97715, -92.3887, 8.71465, 1.11", "-1.86454, -95.8303, 8.92619, 1.11", "-1.45472, -103.119, 9.54589, 1.11", "-1.19796, -106.519, 9.90908, 1.11", "-0.850217, -110.602, 10.4554, 1.11", "-0.714024, -112.222, 10.7226, 1.11", "-0.427408, -116.316, 11.5959, 1.11", "-0.155205, -119.379, 12.3671, 1.11", "0.400916, -124.992, 13.785, 1.11", "0.692162, -128.694, 14.5041, 1.11", "0.835804, -130.814, 14.8391, 1.11", "1.05307, -134.107, 15.2276, 1.11", "1.38195, -138.576, 15.6855, 1.11", "1.61487, -141.85, 16.0029, 1.11", "2.41321, -152.985, 17.0555, 1.11", "2.84142, -158.17, 17.537, 1.11", "3.22671, -162.31, 17.931, 1.11", "3.71499, -166.978, 18.3519, 1.11", "4.21237, -172.679, 18.9739, 0.83", "4.51124, -175.695, 19.3663, 0.83", "4.82545, -177.944, 19.707, 0.83", "5.12023, -180.072, 20.0788, 0.83", "5.55582, -183.158, 20.649, 0.83", "5.94082, -186.245, 21.2722, 0.83", "6.23233, -188.655, 21.8964, 0.83", "6.45557, -190.376, 22.3877, 0.83", "6.87575, -194.168, 23.5093, 0.83", "7.85021, -202.558, 26.1343, 0.83", "8.24976, -205.732, 27.14, 0.83", "8.66279, -208.548, 28.0386, 0.83", "9.04028, -211.016, 28.8814, 0.83", "9.545, -213.916, 29.9648, 0.83", "10.1252, -217.122, 31.2312, 0.83", "10.6151, -219.534, 32.2991, 0.83", "11.142, -222.016, 33.4168, 0.83", "12.2493, -226.768, 35.6738, 0.83", "13.0471, -230.007, 37.1596, 0.83", "13.9134, -233.203, 38.5504, 0.83", "14.6065, -236.04, 39.6214, 0.83", "15.2976, -239.021, 40.6408, 0.83", "15.8336, -241.625, 41.3497, 0.83", "16.756, -247.295, 42.3862, 0.83", "17.4893, -251.631, 42.8657, 0.83", "18.0113, -254.563, 43.0515, 0.83", "18.9373, -259.975, 43.2412, 0.83", "19.7532, -264.172, 43.3712, 0.83", "20.4393, -267.762, 43.4559, 0.83", "21.4831, -272.842, 43.6032, 0.55", "21.8487, -274.448, 43.6254, 0.55", "23.8992, -281.717, 43.7294, 0.55", "24.7978, -284.6, 43.6778, 0.55" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-0.719098, -65.4704, 6.84779, 0.83", "-0.211659, -72.7842, 8.89027, 0.83", "-0.172176, -74.2176, 9.27547, 0.83", "-0.134606, -76.7697, 9.96907, 0.83", "-0.118393, -78.2672, 10.3477, 0.83", "-0.0173287, -82.1028, 11.2577, 0.83", "0.147201, -86.5085, 12.3359, 0.83", "0.365374, -91.5304, 13.2026, 0.83", "0.512633, -95.0526, 13.9386, 0.83", "0.604255, -98.5903, 14.9083, 0.83", "0.705236, -102.902, 16.4115, 0.83", "0.735271, -105.226, 17.4437, 0.83", "0.784449, -107.916, 18.9756, 0.83", "0.827623, -110.814, 20.756, 0.83", "0.810948, -114.47, 23.3672, 0.55", "0.727129, -116.587, 25.2071, 0.55", "0.562049, -118.172, 26.8697, 0.55", "0.300778, -120.105, 29.1332, 0.55" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "24.7978, -284.6, 43.6778, 0.28", "27.4904, -284.317, 44.6994, 0.28", "27.7804, -284.287, 44.8095, 0.55", "29.5112, -284.105, 45.4662, 0.28", "31.1102, -283.936, 46.0729, 0.83" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "24.7978, -284.6, 43.6778, 0.83", "23.9121, -287.069, 43.8835, 0.83", "22.3027, -291.555, 44.2574, 0.55", "21.4855, -293.833, 44.4472, 0.55", "21.0363, -295.085, 44.5515, 0.55", "20.0789, -297.754, 44.7739, 0.55" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_21", "dend_14", "dend_11", "dend_8", "dend_5", "dend_0", "apic_1", "dend_23", "dend_22", "dend_16", "dend_15", "dend_13", "dend_12", "dend_10", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "apic_12", "apic_9", "apic_2", "dend_20", "dend_17", "dend_4", "dend_3", "apic_11", "apic_10", "apic_8", "apic_3", "dend_19", "dend_18", "apic_5", "apic_4", "apic_7", "apic_6" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_21", "dend_14", "dend_11", "dend_8", "dend_5", "dend_0", "apic_1", "dend_23", "dend_22", "dend_16", "dend_15", "dend_13", "dend_12", "dend_10", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "apic_12", "apic_9", "apic_2", "dend_20", "dend_17", "dend_4", "dend_3", "apic_11", "apic_10", "apic_8", "apic_3", "dend_19", "dend_18", "apic_5", "apic_4", "apic_7", "apic_6" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_21", "dend_14", "dend_11", "dend_8", "dend_5", "dend_0", "axon_0", "apic_1", "dend_23", "dend_22", "dend_16", "dend_15", "dend_13", "dend_12", "dend_10", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "axon_1", "apic_12", "apic_9", "apic_2", "dend_20", "dend_17", "dend_4", "dend_3", "apic_11", "apic_10", "apic_8", "apic_3", "dend_19", "dend_18", "apic_5", "apic_4", "apic_7", "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "axon_0", "axon_0", "apic_1", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_2", "apic_2", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_SBC_0869c1fd12_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_12, id: apic_12, parent: apic_1
create apic_12
public apic_12
// Section: apic_9, id: apic_9, parent: apic_1
create apic_9
public apic_9
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_8, id: apic_8, parent: apic_2
create apic_8
public apic_8
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: apic_5, id: apic_5, parent: apic_3
create apic_5
public apic_5
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_21, dend_14, dend_11, dend_8, dend_5, dend_0, apic_1, dend_23, dend_22, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, apic_12, apic_9, apic_2, dend_20, dend_17, dend_4, dend_3, apic_11, apic_10, apic_8, apic_3, dend_19, dend_18, apic_5, apic_4, apic_7, apic_6]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_21, dend_14, dend_11, dend_8, dend_5, dend_0, apic_1, dend_23, dend_22, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, apic_12, apic_9, apic_2, dend_20, dend_17, dend_4, dend_3, apic_11, apic_10, apic_8, apic_3, dend_19, dend_18, apic_5, apic_4, apic_7, apic_6]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[apic_0, dend_21, dend_14, dend_11, dend_8, dend_5, dend_0, axon_0, apic_1, dend_23, dend_22, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, axon_1, apic_12, apic_9, apic_2, dend_20, dend_17, dend_4, dend_3, apic_11, apic_10, apic_8, apic_3, dend_19, dend_18, apic_5, apic_4, apic_7, apic_6]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, axon_0, axon_0, apic_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_2, apic_2, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4999996567799549)
    connect dend_21(0), soma_0(0.4999996567799549)
    connect dend_14(0), soma_0(0.4999996567799549)
    connect dend_11(0), soma_0(0.4999996567799549)
    connect dend_8(0), soma_0(0.4999996567799549)
    connect dend_5(0), soma_0(0.4999996567799549)
    connect dend_0(0), soma_0(0.4999996567799549)
    connect axon_0(0), soma_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_12(0), apic_1(1.0)
    connect apic_9(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_8(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect apic_5(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.33595, 9.86266, -2.58258, 3.10392 ) }
    soma_0 { pt3dadd( -1.10693, 8.70666, -2.27545, 5.13149 ) }
    soma_0 { pt3dadd( -0.877919, 7.55065, -1.96833, 5.9409 ) }
    soma_0 { pt3dadd( -0.648905, 6.39464, -1.66121, 6.21705 ) }
    soma_0 { pt3dadd( -0.419891, 5.23864, -1.35409, 6.94548 ) }
    soma_0 { pt3dadd( -0.190877, 4.08263, -1.04697, 7.90278 ) }
    soma_0 { pt3dadd( 0.0381366, 2.92662, -0.739853, 8.68773 ) }
    soma_0 { pt3dadd( 0.267151, 1.77062, -0.432733, 9.13726 ) }
    soma_0 { pt3dadd( 0.496164, 0.614609, -0.125613, 9.57756 ) }
    soma_0 { pt3dadd( 0.725178, -0.541398, 0.181507, 10.0179 ) }
    soma_0 { pt3dadd( 0.954192, -1.69741, 0.488628, 10.4496 ) }
    soma_0 { pt3dadd( 1.18321, -2.85341, 0.795748, 10.783 ) }
    soma_0 { pt3dadd( 1.41222, -4.00942, 1.10287, 11.0771 ) }
    soma_0 { pt3dadd( 1.64123, -5.16543, 1.40999, 10.6686 ) }
    soma_0 { pt3dadd( 1.87025, -6.32143, 1.71711, 9.98139 ) }
    soma_0 { pt3dadd( 2.09926, -7.47744, 2.02423, 9.29419 ) }
    soma_0 { pt3dadd( 2.32828, -8.63345, 2.33135, 8.60698 ) }
    soma_0 { pt3dadd( 2.55729, -9.78945, 2.63847, 7.32288 ) }
    soma_0 { pt3dadd( 2.7863, -10.9455, 2.94559, 6.0067 ) }
    soma_0 { pt3dadd( 3.01532, -12.1015, 3.25271, 3.27186 ) }
    soma_0 { pt3dadd( 3.24433, -13.2575, 3.55983, 2.03515 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 0.869971, -12.8446, 3.91359, 2.77 ) }
    apic_0 { pt3dadd( 0.397941, -15.5032, 3.96575, 2.22 ) }
    apic_0 { pt3dadd( -0.278716, -19.3144, 4.0405, 2.49 ) }
    apic_0 { pt3dadd( -0.862749, -22.6039, 4.10503, 2.77 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 25/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 0.909968, 9.98992, -2.65641, 1.94 ) }
    dend_21 { pt3dadd( 2.20314, 12.058, -4.15816, 1.94 ) }
    dend_21 { pt3dadd( 4.22556, 15.2922, -6.50679, 1.11 ) }
    dend_21 { pt3dadd( 5.7271, 17.6935, -8.25052, 0.83 ) }
    dend_21 { pt3dadd( 8.12193, 21.5233, -11.0316, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 30/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.44003, 9.57067, -5.44641, 1.11 ) }
    dend_14 { pt3dadd( -4.76782, 14.7888, -3.19576, 1.11 ) }
    dend_14 { pt3dadd( -5.25254, 15.8754, -2.7271, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 33/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 3.58997, -6.76058, -9.93641, 1.11 ) }
    dend_11 { pt3dadd( 3.75522, -7.38026, -11.8865, 1.11 ) }
    dend_11 { pt3dadd( 4.14996, -8.86052, -16.5449, 1.11 ) }
    dend_11 { pt3dadd( 4.68418, -10.8638, -22.8492, 1.11 ) }
    dend_11 { pt3dadd( 4.99377, -12.0248, -26.5028, 1.11 ) }
    dend_11 { pt3dadd( 5.37152, -13.4413, -30.9607, 1.11 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 4.05997, -1.89533, -13.4864, 1.39 ) }
    dend_8 { pt3dadd( 5.45711, -1.7296, -14.9619, 1.39 ) }
    dend_8 { pt3dadd( 8.44852, -1.53026, -17.7036, 1.11 ) }
    dend_8 { pt3dadd( 11.4949, -1.44386, -20.1101, 1.11 ) }
    dend_8 { pt3dadd( 14.2874, -1.39812, -22.1131, 1.11 ) }
    dend_8 { pt3dadd( 17.0983, -1.35208, -24.1293, 0.83 ) }
    dend_8 { pt3dadd( 19.4768, -1.31312, -25.8353, 0.83 ) }
    dend_8 { pt3dadd( 22.6674, -1.36808, -28.0616, 0.83 ) }
    dend_8 { pt3dadd( 24.6525, -1.52187, -29.2174, 0.83 ) }
    dend_8 { pt3dadd( 27.0467, -1.69335, -30.232, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 49/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.70003, 8.30317, -8.35641, 1.39 ) }
    dend_5 { pt3dadd( -6.76726, 9.03867, -10.1494, 1.11 ) }
    dend_5 { pt3dadd( -8.99951, 9.83287, -12.0856, 1.11 ) }
    dend_5 { pt3dadd( -10.3354, 10.3081, -13.2442, 1.11 ) }
    dend_5 { pt3dadd( -13.1604, 11.3133, -15.6946, 1.11 ) }
    dend_5 { pt3dadd( -16.5796, 12.5298, -18.6602, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 55/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.58997, -2.95808, 15.3936, 1.66 ) }
    dend_0 { pt3dadd( 7.05081, -3.66246, 15.3936, 1.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 57/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.24433, -13.2575, 3.55983, 0.856622 ) }
    axon_0 { pt3dadd( 6.15929, -27.9715, 3.55983, 0.856622 ) }
    axon_0 { pt3dadd( 9.07426, -42.6856, 3.55983, 0.856622 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 60/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -0.862749, -22.6039, 4.10503, 2.77 ) }
    apic_1 { pt3dadd( -1.216, -24.2855, 7.34659, 2.77 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 62/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 8.12193, 21.5233, -11.0316, 0.83 ) }
    dend_23 { pt3dadd( 11.1849, 23.8186, -12.5569, 0.83 ) }
    dend_23 { pt3dadd( 14.3512, 26.5417, -13.5589, 0.83 ) }
    dend_23 { pt3dadd( 16.9881, 28.844, -14.1026, 0.28 ) }
    dend_23 { pt3dadd( 18.3622, 30.0282, -14.3351, 0.83 ) }
    dend_23 { pt3dadd( 20.7179, 32.0161, -14.6521, 0.55 ) }
    dend_23 { pt3dadd( 25.6114, 36.0659, -15.0803, 0.55 ) }
    dend_23 { pt3dadd( 28.5495, 38.5744, -14.9649, 0.28 ) }
    dend_23 { pt3dadd( 29.8262, 39.6829, -14.8265, 0.83 ) }
    dend_23 { pt3dadd( 31.8702, 41.196, -14.5552, 0.28 ) }
    dend_23 { pt3dadd( 33.7505, 42.4473, -14.3049, 0.83 ) }
    dend_23 { pt3dadd( 35.8913, 43.6471, -14.0392, 0.28 ) }
    dend_23 { pt3dadd( 37.4371, 44.4145, -14.0263, 0.83 ) }
    dend_23 { pt3dadd( 39.849, 45.6146, -14.2415, 0.55 ) }
    dend_23 { pt3dadd( 42.5977, 47.0479, -14.5637, 0.55 ) }
    dend_23 { pt3dadd( 45.8016, 48.7642, -15.1396, 0.28 ) }
    dend_23 { pt3dadd( 48.3556, 50.1695, -15.6731, 0.55 ) }
    dend_23 { pt3dadd( 52.8114, 52.6716, -16.8087, 0.28 ) }
    dend_23 { pt3dadd( 54.7295, 53.784, -17.3223, 0.55 ) }
    dend_23 { pt3dadd( 55.5366, 54.2311, -17.6526, 0.55 ) }
    dend_23 { pt3dadd( 59.3937, 56.3556, -19.7849, 0.28 ) }
    dend_23 { pt3dadd( 61.3312, 57.2921, -21.1616, 0.55 ) }
    dend_23 { pt3dadd( 63.0969, 58.1174, -22.5252, 0.28 ) }
    dend_23 { pt3dadd( 64.2113, 58.6004, -23.4346, 0.55 ) }
    dend_23 { pt3dadd( 70.3874, 61.105, -29.118, 0.28 ) }
    dend_23 { pt3dadd( 72.2315, 61.7917, -30.9803, 0.55 ) }
    dend_23 { pt3dadd( 74.3546, 62.4891, -33.4419, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 89/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 8.12193, 21.5233, -11.0316, 0.55 ) }
    dend_22 { pt3dadd( 11.406, 24.025, -7.76872, 0.55 ) }
    dend_22 { pt3dadd( 13.5279, 25.5548, -5.9111, 0.55 ) }
    dend_22 { pt3dadd( 17.6141, 28.5336, -2.26897, 0.55 ) }
    dend_22 { pt3dadd( 20.147, 30.3094, -0.0759904, 0.55 ) }
    dend_22 { pt3dadd( 20.9598, 30.8661, 0.600376, 0.55 ) }
    dend_22 { pt3dadd( 23.1269, 32.3202, 2.31334, 0.55 ) }
    dend_22 { pt3dadd( 26.5968, 34.4299, 4.57029, 0.55 ) }
    dend_22 { pt3dadd( 29.5535, 36.1799, 6.26255, 0.55 ) }
    dend_22 { pt3dadd( 31.2433, 37.2144, 7.1562, 0.55 ) }
    dend_22 { pt3dadd( 32.4459, 37.9387, 7.67448, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_22 { pt3dadd( 33.8498, 38.8067, 8.25005, 0.55 ) }
    dend_22 { pt3dadd( 35.2435, 39.6747, 8.72881, 1.11 ) }
    dend_22 { pt3dadd( 38.8295, 42.0805, 9.80539, 0.55 ) }
    dend_22 { pt3dadd( 39.8909, 42.8443, 10.0687, 0.55 ) }
    dend_22 { pt3dadd( 41.597, 44.3717, 10.4833, 0.55 ) }
    dend_22 { pt3dadd( 43.4891, 46.2345, 10.9232, 0.55 ) }
    dend_22 { pt3dadd( 45.223, 48.0253, 11.2708, 0.55 ) }
    dend_22 { pt3dadd( 46.7723, 49.6159, 11.524, 0.55 ) }
    dend_22 { pt3dadd( 49.0932, 52.0346, 11.8164, 0.55 ) }
    dend_22 { pt3dadd( 52.9287, 55.9742, 12.0518, 0.55 ) }
    dend_22 { pt3dadd( 55.8365, 58.8282, 12.1346, 0.55 ) }
    dend_22 { pt3dadd( 59.4275, 62.0714, 11.9725, 0.55 ) }
    dend_22 { pt3dadd( 61.6513, 63.9606, 11.7067, 0.28 ) }
    dend_22 { pt3dadd( 63.9421, 65.772, 11.3682, 0.55 ) }
    dend_22 { pt3dadd( 67.0844, 68.02, 10.6981, 0.28 ) }
    dend_22 { pt3dadd( 71.4005, 70.7341, 9.73114, 0.28 ) }
    dend_22 { pt3dadd( 74.5175, 72.6702, 8.94714, 0.55 ) }
    dend_22 { pt3dadd( 76.9192, 74.1739, 8.43259, 0.55 ) }
    dend_22 { pt3dadd( 79.6148, 75.9682, 7.97404, 0.83 ) }
    dend_22 { pt3dadd( 83.1058, 78.2426, 7.49354, 0.28 ) }
    dend_22 { pt3dadd( 86.6206, 80.5832, 7.59628, 0.28 ) }
    dend_22 { pt3dadd( 87.2676, 81.1057, 7.69974, 0.55 ) }
    dend_22 { pt3dadd( 89.3772, 83.0761, 8.82534, 0.28 ) }
    dend_22 { pt3dadd( 90.1691, 83.7922, 9.42801, 0.55 ) }
    dend_22 { pt3dadd( 99.0722, 89.2628, 12.0836, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 25/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -5.25254, 15.8754, -2.7271, 1.11 ) }
    dend_16 { pt3dadd( -7.32275, 15.8934, -0.960565, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 27/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.25254, 15.8754, -2.7271, 0.83 ) }
    dend_15 { pt3dadd( -4.84969, 18.013, -5.26741, 0.83 ) }
    dend_15 { pt3dadd( -4.3941, 20.6648, -8.20933, 0.83 ) }
    dend_15 { pt3dadd( -3.81637, 24.8088, -11.9864, 0.83 ) }
    dend_15 { pt3dadd( -3.22295, 29.6075, -15.7389, 0.83 ) }
    dend_15 { pt3dadd( -2.41633, 35.4772, -20.1915, 0.83 ) }
    dend_15 { pt3dadd( -1.87838, 39.3013, -23.0354, 0.83 ) }
    dend_15 { pt3dadd( -1.30344, 43.4828, -25.9566, 0.83 ) }
    dend_15 { pt3dadd( -0.163245, 52.2596, -31.5226, 0.83 ) }
    dend_15 { pt3dadd( 0.562916, 58.7668, -35.4065, 0.83 ) }
    dend_15 { pt3dadd( 1.02534, 64.1924, -38.2336, 0.28 ) }
    dend_15 { pt3dadd( 1.07754, 64.8665, -38.542, 0.55 ) }
    dend_15 { pt3dadd( 1.71416, 73.5185, -42.4274, 0.55 ) }
    dend_15 { pt3dadd( 1.91521, 76.2835, -43.6412, 0.55 ) }
    dend_15 { pt3dadd( 2.21507, 81.5075, -45.8462, 0.28 ) }
    dend_15 { pt3dadd( 2.52475, 89.6409, -48.8591, 0.55 ) }
    dend_15 { pt3dadd( 2.59427, 94.3641, -50.3659, 0.55 ) }
    dend_15 { pt3dadd( 2.62031, 97.6063, -51.3391, 0.28 ) }
    dend_15 { pt3dadd( 2.61339, 98.8974, -51.6768, 0.55 ) }
    dend_15 { pt3dadd( 2.53495, 102.507, -52.5722, 0.28 ) }
    dend_15 { pt3dadd( 2.42006, 105.114, -53.1432, 0.55 ) }
    dend_15 { pt3dadd( 2.01892, 110.764, -54.5663, 0.28 ) }
    dend_15 { pt3dadd( 1.83126, 112.786, -55.1469, 0.55 ) }
    dend_15 { pt3dadd( 1.54784, 116.62, -56.4226, 0.28 ) }
    dend_15 { pt3dadd( 1.44854, 118.165, -57.0215, 0.55 ) }
    dend_15 { pt3dadd( 1.30026, 121.995, -58.4623, 0.28 ) }
    dend_15 { pt3dadd( 1.26233, 124.391, -59.348, 0.55 ) }
    dend_15 { pt3dadd( 1.31798, 128.038, -60.6619, 0.28 ) }
    dend_15 { pt3dadd( 1.41655, 130.614, -61.5779, 0.55 ) }
    dend_15 { pt3dadd( 1.62743, 132.893, -62.3875, 0.55 ) }
    dend_15 { pt3dadd( 2.78328, 140.519, -64.7892, 0.28 ) }
    dend_15 { pt3dadd( 3.11272, 142.136, -65.2239, 0.55 ) }
    dend_15 { pt3dadd( 4.30066, 146.538, -66.4478, 0.28 ) }
    dend_15 { pt3dadd( 4.8215, 148.098, -66.9097, 0.55 ) }
    dend_15 { pt3dadd( 6.83208, 152.698, -68.7632, 0.55 ) }
    dend_15 { pt3dadd( 8.96279, 156.919, -70.7247, 0.28 ) }
    dend_15 { pt3dadd( 9.31329, 157.506, -71.0543, 0.55 ) }
    dend_15 { pt3dadd( 13.0363, 163.331, -74.4062, 0.28 ) }
    dend_15 { pt3dadd( 14.51, 165.374, -75.6854, 0.28 ) }
    dend_15 { pt3dadd( 18.0359, 170.002, -78.9902, 0.28 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 67/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 5.37152, -13.4413, -30.9607, 0.83 ) }
    dend_13 { pt3dadd( 6.25907, -14.0157, -32.184, 0.83 ) }
    dend_13 { pt3dadd( 7.5895, -14.667, -33.6972, 0.83 ) }
    dend_13 { pt3dadd( 8.75432, -15.1658, -34.8922, 0.83 ) }
    dend_13 { pt3dadd( 11.6568, -16.2335, -37.7401, 0.83 ) }
    dend_13 { pt3dadd( 13.1568, -16.7323, -39.2107, 0.83 ) }
    dend_13 { pt3dadd( 15.0344, -17.2895, -41.1071, 0.83 ) }
    dend_13 { pt3dadd( 18.2299, -18.0434, -44.3604, 0.28 ) }
    dend_13 { pt3dadd( 18.8845, -18.1545, -45.0542, 0.55 ) }
    dend_13 { pt3dadd( 21.3385, -18.5152, -47.677, 0.28 ) }
    dend_13 { pt3dadd( 22.5354, -18.6696, -48.9463, 0.55 ) }
    dend_13 { pt3dadd( 24.6567, -19.0095, -51.3948, 0.28 ) }
    dend_13 { pt3dadd( 25.2614, -19.1255, -52.1625, 0.55 ) }
    dend_13 { pt3dadd( 27.3956, -19.5623, -55.2043, 0.55 ) }
    dend_13 { pt3dadd( 29.0669, -19.9482, -57.6795, 0.28 ) }
    dend_13 { pt3dadd( 29.6565, -20.1117, -58.5658, 0.55 ) }
    dend_13 { pt3dadd( 31.805, -20.7954, -61.7515, 0.28 ) }
    dend_13 { pt3dadd( 31.9582, -20.8548, -61.9787, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 85/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.37152, -13.4413, -30.9607, 0.55 ) }
    dend_12 { pt3dadd( 6.90329, -17.3627, -41.7622, 0.55 ) }
    dend_12 { pt3dadd( 7.70434, -19.3603, -47.3768, 0.55 ) }
    dend_12 { pt3dadd( 8.80059, -22.1322, -55.2016, 0.55 ) }
    dend_12 { pt3dadd( 9.42354, -23.6406, -59.4114, 0.83 ) }
    dend_12 { pt3dadd( 10.4811, -25.9696, -65.8158, 0.28 ) }
    dend_12 { pt3dadd( 10.7482, -26.5424, -67.3554, 0.28 ) }
    dend_12 { pt3dadd( 10.9441, -26.9009, -68.2307, 0.55 ) }
    dend_12 { pt3dadd( 13.9287, -32.3561, -80.5874, 0.28 ) }
    dend_12 { pt3dadd( 14.1933, -32.8415, -81.564, 0.55 ) }
    dend_12 { pt3dadd( 15.2898, -34.785, -85.2022, 0.28 ) }
    dend_12 { pt3dadd( 16.1132, -36.2795, -87.8446, 0.55 ) }
    dend_12 { pt3dadd( 17.4382, -38.6747, -92.0242, 0.28 ) }
    dend_12 { pt3dadd( 18.0426, -39.7401, -93.8136, 0.55 ) }
    dend_12 { pt3dadd( 20.2664, -43.583, -99.8742, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_12 { pt3dadd( 20.6813, -44.3351, -101.088, 0.55 ) }
    dend_12 { pt3dadd( 22.5387, -47.8517, -106.895, 0.28 ) }
    dend_12 { pt3dadd( 23.4082, -49.4154, -109.678, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 3/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 27.0467, -1.69335, -30.232, 0.55 ) }
    dend_10 { pt3dadd( 29.1884, -0.202974, -32.3165, 0.55 ) }
    dend_10 { pt3dadd( 30.8442, 0.96374, -33.8389, 0.28 ) }
    dend_10 { pt3dadd( 31.9255, 1.72058, -34.8578, 0.83 ) }
    dend_10 { pt3dadd( 35.376, 4.21863, -38.3557, 0.28 ) }
    dend_10 { pt3dadd( 35.5311, 4.33229, -38.5156, 0.55 ) }
    dend_10 { pt3dadd( 36.9691, 5.41937, -40.0584, 0.28 ) }
    dend_10 { pt3dadd( 38.5148, 6.61191, -41.8953, 0.28 ) }
    dend_10 { pt3dadd( 39.3228, 7.26262, -42.853, 0.83 ) }
    dend_10 { pt3dadd( 41.2586, 8.95223, -44.9484, 0.28 ) }
    dend_10 { pt3dadd( 41.5802, 9.25906, -45.2837, 0.83 ) }
    dend_10 { pt3dadd( 42.5412, 10.2787, -46.3756, 0.28 ) }
    dend_10 { pt3dadd( 43.9348, 11.9133, -48.4782, 0.55 ) }
    dend_10 { pt3dadd( 44.4475, 12.4541, -49.2094, 0.28 ) }
    dend_10 { pt3dadd( 44.985, 12.9803, -49.9063, 0.55 ) }
    dend_10 { pt3dadd( 47.4828, 15.1713, -52.6121, 0.28 ) }
    dend_10 { pt3dadd( 48.6517, 16.1256, -53.7313, 0.55 ) }
    dend_10 { pt3dadd( 52.8778, 19.4355, -57.0455, 0.55 ) }
    dend_10 { pt3dadd( 56.6656, 22.3738, -59.5623, 0.28 ) }
    dend_10 { pt3dadd( 58.3434, 23.6821, -60.4401, 0.55 ) }
    dend_10 { pt3dadd( 62.6003, 26.9861, -62.0774, 0.28 ) }
    dend_10 { pt3dadd( 63.8916, 27.9654, -62.3886, 0.55 ) }
    dend_10 { pt3dadd( 67.2822, 30.487, -62.9153, 0.28 ) }
    dend_10 { pt3dadd( 68.9659, 31.7683, -62.991, 0.55 ) }
    dend_10 { pt3dadd( 72.3923, 34.4725, -63.0585, 0.28 ) }
    dend_10 { pt3dadd( 74.1988, 35.9323, -63.016, 0.55 ) }
    dend_10 { pt3dadd( 76.4139, 37.7698, -62.895, 0.28 ) }
    dend_10 { pt3dadd( 77.2024, 38.4119, -62.8769, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 31/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 27.0467, -1.69335, -30.232, 0.55 ) }
    dend_9 { pt3dadd( 30.4336, 0.239757, -32.6405, 0.55 ) }
    dend_9 { pt3dadd( 31.8793, 1.10926, -34.4461, 0.55 ) }
    dend_9 { pt3dadd( 33.9634, 2.17912, -37.1778, 0.28 ) }
    dend_9 { pt3dadd( 34.7742, 2.57385, -38.3257, 0.55 ) }
    dend_9 { pt3dadd( 37.3533, 3.82036, -42.6789, 0.55 ) }
    dend_9 { pt3dadd( 38.938, 4.50755, -45.4271, 0.55 ) }
    dend_9 { pt3dadd( 42.7176, 5.92947, -52.6571, 0.55 ) }
    dend_9 { pt3dadd( 45.3133, 6.68428, -57.5789, 0.55 ) }
    dend_9 { pt3dadd( 47.935, 7.17716, -62.3441, 0.55 ) }
    dend_9 { pt3dadd( 52.0165, 7.86438, -69.7393, 0.55 ) }
    dend_9 { pt3dadd( 54.4324, 8.17446, -73.9389, 0.55 ) }
    dend_9 { pt3dadd( 56.2633, 8.35705, -77.0166, 0.55 ) }
    dend_9 { pt3dadd( 59.6468, 8.44985, -82.3544, 0.28 ) }
    dend_9 { pt3dadd( 63.2206, 8.40272, -88.0656, 0.28 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 46/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -16.5796, 12.5298, -18.6602, 0.83 ) }
    dend_7 { pt3dadd( -21.0125, 15.6842, -17.4265, 0.83 ) }
    dend_7 { pt3dadd( -23.7021, 17.3707, -16.605, 0.83 ) }
    dend_7 { pt3dadd( -27.1755, 19.4987, -15.391, 0.55 ) }
    dend_7 { pt3dadd( -30.9643, 21.7195, -14.3951, 0.55 ) }
    dend_7 { pt3dadd( -32.6681, 22.7264, -14.1369, 0.55 ) }
    dend_7 { pt3dadd( -35.7322, 24.5302, -13.951, 0.55 ) }
    dend_7 { pt3dadd( -39.9358, 26.8823, -14.2727, 0.55 ) }
    dend_7 { pt3dadd( -42.4666, 28.2859, -14.6993, 0.55 ) }
    dend_7 { pt3dadd( -47.4733, 30.9524, -15.7895, 0.55 ) }
    dend_7 { pt3dadd( -51.6176, 33.1548, -16.9519, 0.55 ) }
    dend_7 { pt3dadd( -54.154, 34.4649, -17.6838, 0.55 ) }
    dend_7 { pt3dadd( -55.8513, 35.3129, -18.1568, 0.55 ) }
    dend_7 { pt3dadd( -58.2165, 36.5004, -18.7979, 0.83 ) }
    dend_7 { pt3dadd( -61.2293, 37.8078, -19.3514, 0.28 ) }
    dend_7 { pt3dadd( -62.636, 38.4088, -19.5189, 0.55 ) }
    dend_7 { pt3dadd( -66.2374, 39.9125, -19.8891, 0.55 ) }
    dend_7 { pt3dadd( -70.0208, 41.6195, -20.427, 0.55 ) }
    dend_7 { pt3dadd( -71.5395, 42.3302, -20.6899, 0.55 ) }
    dend_7 { pt3dadd( -77.5905, 45.3985, -21.6135, 0.55 ) }
    dend_7 { pt3dadd( -83.9067, 48.7299, -22.4676, 0.28 ) }
    dend_7 { pt3dadd( -84.9607, 49.3018, -22.5626, 0.55 ) }
    dend_7 { pt3dadd( -93.9964, 54.2731, -23.1387, 0.28 ) }
    dend_7 { pt3dadd( -94.9025, 54.7946, -23.1872, 0.55 ) }
    dend_7 { pt3dadd( -99.7926, 57.6054, -23.2404, 0.28 ) }
    dend_7 { pt3dadd( -102.194, 59.0788, -23.0136, 0.55 ) }
    dend_7 { pt3dadd( -106.438, 61.5455, -22.0069, 0.28 ) }
    dend_7 { pt3dadd( -107.996, 62.4365, -21.5195, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -16.5796, 12.5298, -18.6602, 0.55 ) }
    dend_6 { pt3dadd( -19.308, 14.6154, -23.6727, 0.55 ) }
    dend_6 { pt3dadd( -24.5466, 18.6477, -32.8347, 0.55 ) }
    dend_6 { pt3dadd( -28.9251, 22.1059, -40.1162, 0.55 ) }
    dend_6 { pt3dadd( -30.7, 23.5454, -43.0152, 0.83 ) }
    dend_6 { pt3dadd( -36.0284, 27.9942, -51.5537, 0.28 ) }
    dend_6 { pt3dadd( -38.6172, 30.167, -55.5932, 0.55 ) }
    dend_6 { pt3dadd( -41.2118, 32.3715, -59.586, 0.28 ) }
    dend_6 { pt3dadd( -42.4505, 33.4206, -61.2754, 0.55 ) }
    dend_6 { pt3dadd( -43.9396, 34.6965, -63.2471, 0.28 ) }
    dend_6 { pt3dadd( -44.798, 35.4174, -64.4825, 0.55 ) }
    dend_6 { pt3dadd( -48.48, 38.3323, -69.7332, 0.28 ) }
    dend_6 { pt3dadd( -49.6375, 39.0907, -71.5812, 0.55 ) }
    dend_6 { pt3dadd( -52.5024, 40.667, -76.1099, 0.28 ) }
    dend_6 { pt3dadd( -53.9589, 41.3551, -78.4146, 0.55 ) }
    dend_6 { pt3dadd( -57.5531, 42.8261, -84.0093, 0.28 ) }
    dend_6 { pt3dadd( -59.0322, 43.3252, -86.2814, 0.55 ) }
    dend_6 { pt3dadd( -65.621, 45.1924, -96.2036, 0.28 ) }
    dend_6 { pt3dadd( -66.5521, 45.4167, -97.5995, 0.55 ) }
    dend_6 { pt3dadd( -70.2991, 46.1881, -102.92, 0.28 ) }
    dend_6 { pt3dadd( -72.3021, 46.5634, -105.599, 0.55 ) }
    dend_6 { pt3dadd( -74.4629, 46.9823, -108.193, 0.55 ) }
    dend_6 { pt3dadd( -76.423, 47.4469, -110.358, 0.55 ) }
    dend_6 { pt3dadd( -83.7582, 49.7283, -116.743, 0.28 ) }
    dend_6 { pt3dadd( -85.5363, 50.3717, -118.137, 0.55 ) }
    dend_6 { pt3dadd( -88.6117, 51.6067, -120.383, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_6 { pt3dadd( -89.9115, 52.1853, -121.309, 0.55 ) }
    dend_6 { pt3dadd( -93.733, 54.0031, -124.529, 0.28 ) }
    dend_6 { pt3dadd( -98.841, 56.4915, -129.187, 0.28 ) }
    dend_6 { pt3dadd( -103.857, 59.0131, -133.875, 0.83 ) }
    dend_6 { pt3dadd( -109.17, 61.6708, -139.436, 0.28 ) }
    dend_6 { pt3dadd( -110.575, 62.3379, -141.099, 0.55 ) }
    dend_6 { pt3dadd( -118.24, 65.7891, -151.24, 0.28 ) }
    dend_6 { pt3dadd( -118.843, 66.0258, -152.175, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 8/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.05081, -3.66246, 15.3936, 0.83 ) }
    dend_2 { pt3dadd( 9.00022, -5.64789, 17.903, 0.83 ) }
    dend_2 { pt3dadd( 10.6215, -7.2992, 19.9901, 0.83 ) }
    dend_2 { pt3dadd( 11.6389, -8.33533, 21.2997, 0.83 ) }
    dend_2 { pt3dadd( 14.7625, -11.5166, 25.3206, 0.83 ) }
    dend_2 { pt3dadd( 16.2126, -12.9935, 27.1873, 0.83 ) }
    dend_2 { pt3dadd( 19.1425, -15.9776, 30.9589, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 15/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.05081, -3.66246, 15.3936, 0.83 ) }
    dend_1 { pt3dadd( 7.74998, -4.44422, 16.898, 0.83 ) }
    dend_1 { pt3dadd( 9.28519, -5.89954, 19.9118, 0.83 ) }
    dend_1 { pt3dadd( 12.729, -9.02338, 27.1263, 0.83 ) }
    dend_1 { pt3dadd( 13.8025, -9.94801, 29.389, 0.83 ) }
    dend_1 { pt3dadd( 14.8689, -10.8095, 31.5949, 0.83 ) }
    dend_1 { pt3dadd( 16.4794, -11.9639, 34.8139, 0.83 ) }
    dend_1 { pt3dadd( 17.606, -12.6961, 37.0928, 0.83 ) }
    dend_1 { pt3dadd( 20.2918, -14.1375, 42.2647, 0.55 ) }
    dend_1 { pt3dadd( 20.8435, -14.3522, 43.3406, 0.55 ) }
    dend_1 { pt3dadd( 21.9005, -14.748, 45.3962, 0.83 ) }
    dend_1 { pt3dadd( 23.9439, -15.4421, 49.2859, 0.55 ) }
    dend_1 { pt3dadd( 28.012, -16.7984, 57.6081, 0.55 ) }
    dend_1 { pt3dadd( 33.7137, -18.216, 64.8962, 0.55 ) }
    dend_1 { pt3dadd( 39.4659, -20.4487, 71.9249, 0.55 ) }
    dend_1 { pt3dadd( 45.5103, -22.4322, 78.785, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 31/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.07426, -42.6856, 3.55983, 0.55 ) }
    axon_1 { pt3dadd( 11.9892, -57.3996, 3.55983, 0.55 ) }
    axon_1 { pt3dadd( 14.9042, -72.1137, 3.55983, 0.55 ) }
    // Section: apic_12, id: apic_12, parent: apic_1 (entry count 34/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -1.216, -24.2855, 7.34659, 0.83 ) }
    apic_12 { pt3dadd( -5.18465, -27.4794, 7.76556, 0.83 ) }
    apic_12 { pt3dadd( -7.15448, -29.1285, 8.03529, 0.55 ) }
    apic_12 { pt3dadd( -10.3577, -31.9195, 8.66808, 0.55 ) }
    apic_12 { pt3dadd( -14.3055, -35.4507, 9.5944, 0.55 ) }
    apic_12 { pt3dadd( -18.1617, -39.0191, 10.5387, 0.55 ) }
    apic_12 { pt3dadd( -21.8141, -42.4389, 11.4659, 0.55 ) }
    apic_12 { pt3dadd( -25.1217, -45.6862, 12.4765, 0.55 ) }
    apic_12 { pt3dadd( -27.7929, -48.2929, 13.3096, 0.55 ) }
    apic_12 { pt3dadd( -29.4897, -49.9674, 13.8428, 0.55 ) }
    apic_12 { pt3dadd( -32.2545, -52.7263, 14.6507, 0.28 ) }
    apic_12 { pt3dadd( -32.6561, -53.1132, 14.7373, 1.11 ) }
    apic_12 { pt3dadd( -34.9343, -55.0797, 15.0475, 0.55 ) }
    apic_12 { pt3dadd( -36.4617, -56.2759, 15.1698, 0.55 ) }
    apic_12 { pt3dadd( -38.0502, -57.3734, 15.1794, 0.28 ) }
    apic_12 { pt3dadd( -39.5496, -58.2188, 15.1981, 0.55 ) }
    apic_12 { pt3dadd( -40.7936, -58.7971, 15.1904, 0.28 ) }
    apic_12 { pt3dadd( -41.3668, -59.0293, 15.2011, 0.55 ) }
    apic_12 { pt3dadd( -42.8647, -59.4802, 15.2906, 0.28 ) }
    apic_12 { pt3dadd( -44.0669, -59.7541, 15.3712, 0.55 ) }
    apic_12 { pt3dadd( -46.2603, -60.1015, 15.5307, 0.28 ) }
    apic_12 { pt3dadd( -48.8205, -60.4597, 15.7238, 0.55 ) }
    apic_12 { pt3dadd( -51.173, -60.8748, 15.8987, 0.28 ) }
    apic_12 { pt3dadd( -53.0071, -61.188, 16.0187, 0.55 ) }
    // Section: apic_9, id: apic_9, parent: apic_1 (entry count 58/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -1.216, -24.2855, 7.34659, 0.83 ) }
    apic_9 { pt3dadd( -6.13361, -27.5384, 14.5634, 0.83 ) }
    apic_9 { pt3dadd( -7.97665, -28.6979, 17.1681, 0.83 ) }
    apic_9 { pt3dadd( -9.8173, -29.7522, 19.6821, 0.83 ) }
    apic_9 { pt3dadd( -11.0798, -30.4634, 21.3883, 0.83 ) }
    apic_9 { pt3dadd( -12.5515, -31.2521, 23.2747, 0.83 ) }
    apic_9 { pt3dadd( -14.7996, -32.4254, 26.0991, 0.83 ) }
    apic_9 { pt3dadd( -16.4966, -33.2454, 28.1125, 0.83 ) }
    apic_9 { pt3dadd( -19.5237, -34.8157, 31.6494, 0.83 ) }
    apic_9 { pt3dadd( -21.3228, -35.8627, 33.7503, 0.83 ) }
    apic_9 { pt3dadd( -23.1283, -36.9755, 35.8908, 0.83 ) }
    apic_9 { pt3dadd( -25.1568, -38.2721, 38.37, 0.83 ) }
    apic_9 { pt3dadd( -26.3785, -39.1001, 39.8978, 0.83 ) }
    apic_9 { pt3dadd( -27.6922, -40.1052, 41.5272, 0.83 ) }
    apic_9 { pt3dadd( -28.8171, -41.1899, 42.9812, 0.83 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 73/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -1.216, -24.2855, 7.34659, 1.66 ) }
    apic_2 { pt3dadd( -0.567571, -27.0252, 8.02132, 1.66 ) }
    apic_2 { pt3dadd( -0.0209371, -29.3348, 8.59013, 1.39 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 76/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -7.32275, 15.8934, -0.960565, 0.83 ) }
    dend_20 { pt3dadd( -10.5932, 17.6898, 1.68665, 0.83 ) }
    dend_20 { pt3dadd( -12.8573, 19.3067, 3.42085, 0.55 ) }
    dend_20 { pt3dadd( -13.9877, 20.153, 4.22528, 0.83 ) }
    dend_20 { pt3dadd( -16.9486, 22.4874, 6.02899, 0.55 ) }
    dend_20 { pt3dadd( -19.9534, 24.8084, 7.59925, 0.55 ) }
    dend_20 { pt3dadd( -25.0302, 28.6169, 10.0631, 0.55 ) }
    dend_20 { pt3dadd( -31.2866, 33.2857, 12.2899, 0.55 ) }
    dend_20 { pt3dadd( -33.1872, 34.6367, 12.8125, 0.55 ) }
    dend_20 { pt3dadd( -38.3897, 38.0885, 13.6019, 0.55 ) }
    dend_20 { pt3dadd( -42.5559, 40.6245, 13.725, 0.55 ) }
    dend_20 { pt3dadd( -47.3092, 43.2589, 13.589, 0.55 ) }
    dend_20 { pt3dadd( -54.6732, 46.7899, 13.0931, 0.55 ) }
    dend_20 { pt3dadd( -59.9261, 48.948, 12.8237, 0.55 ) }
    dend_20 { pt3dadd( -65.5707, 51.1506, 12.8665, 0.55 ) }
    dend_20 { pt3dadd( -71.3469, 53.2426, 13.3661, 0.55 ) }
    dend_20 { pt3dadd( -75.952, 54.8968, 14.0332, 0.55 ) }
    dend_20 { pt3dadd( -79.1807, 56.0017, 14.8438, 0.55 ) }
    dend_20 { pt3dadd( -82.7892, 57.1406, 16.3915, 0.55 ) }
    dend_20 { pt3dadd( -86.1558, 58.1232, 17.9903, 0.28 ) }
    dend_20 { pt3dadd( -89.5071, 59.1165, 19.9102, 0.28 ) }
    dend_20 { pt3dadd( -91.1582, 59.615, 20.9133, 0.55 ) }
    dend_20 { pt3dadd( -94.7314, 60.65, 22.841, 0.28 ) }
    dend_20 { pt3dadd( -100.475, 62.1874, 25.6353, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_20 { pt3dadd( -105.481, 63.3826, 27.5741, 0.55 ) }
    dend_20 { pt3dadd( -114.388, 69.2816, 31.3863, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 2/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -7.32275, 15.8934, -0.960565, 0.28 ) }
    dend_17 { pt3dadd( -7.45384, 16.5019, 0.208476, 0.28 ) }
    dend_17 { pt3dadd( -7.64878, 17.4068, 1.947, 0.28 ) }
    dend_17 { pt3dadd( -8.24087, 20.1553, 7.22748, 0.55 ) }
    dend_17 { pt3dadd( -8.66749, 22.1357, 11.0322, 0.55 ) }
    dend_17 { pt3dadd( -9.08151, 24.0576, 14.7246, 0.55 ) }
    dend_17 { pt3dadd( -9.3058, 25.0987, 16.7248, 0.55 ) }
    dend_17 { pt3dadd( -8.63397, 27.695, 23.337, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 10/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 19.1425, -15.9776, 30.9589, 0.55 ) }
    dend_4 { pt3dadd( 19.0037, -20.3243, 31.5402, 0.55 ) }
    dend_4 { pt3dadd( 18.9014, -24.9194, 32.1153, 0.55 ) }
    dend_4 { pt3dadd( 18.8839, -26.6592, 32.3559, 0.55 ) }
    dend_4 { pt3dadd( 18.7698, -30.2896, 32.8991, 0.55 ) }
    dend_4 { pt3dadd( 18.6118, -32.8443, 33.5198, 0.55 ) }
    dend_4 { pt3dadd( 18.3174, -37.4117, 34.8397, 0.55 ) }
    dend_4 { pt3dadd( 18.1018, -39.8634, 35.6495, 0.55 ) }
    dend_4 { pt3dadd( 17.8946, -41.647, 36.328, 0.55 ) }
    dend_4 { pt3dadd( 17.4498, -45.0505, 37.7118, 0.55 ) }
    dend_4 { pt3dadd( 16.6043, -51.0913, 40.3583, 0.55 ) }
    dend_4 { pt3dadd( 15.7795, -56.0456, 42.7614, 0.55 ) }
    dend_4 { pt3dadd( 15.4345, -57.6361, 43.6013, 0.28 ) }
    dend_4 { pt3dadd( 15.2604, -58.3539, 43.985, 0.55 ) }
    dend_4 { pt3dadd( 13.3603, -65.8795, 47.9195, 0.28 ) }
    dend_4 { pt3dadd( 13.1732, -66.6303, 48.2991, 0.55 ) }
    dend_4 { pt3dadd( 12.2767, -69.8195, 49.6373, 0.28 ) }
    dend_4 { pt3dadd( 11.8042, -71.0583, 50.2717, 0.28 ) }
    dend_4 { pt3dadd( 9.75092, -79.2311, 54.5021, 0.28 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 29/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 19.1425, -15.9776, 30.9589, 0.55 ) }
    dend_3 { pt3dadd( 23.1775, -15.1035, 33.624, 0.55 ) }
    dend_3 { pt3dadd( 24.927, -14.712, 34.829, 0.55 ) }
    dend_3 { pt3dadd( 26.2587, -14.3444, 35.7798, 0.55 ) }
    dend_3 { pt3dadd( 27.7045, -13.885, 36.8833, 0.55 ) }
    dend_3 { pt3dadd( 31.8217, -12.4551, 40.2146, 0.55 ) }
    dend_3 { pt3dadd( 34.5256, -11.3738, 42.5516, 0.55 ) }
    dend_3 { pt3dadd( 35.5208, -10.8772, 43.577, 0.83 ) }
    dend_3 { pt3dadd( 38.277, -9.38979, 46.5248, 0.55 ) }
    dend_3 { pt3dadd( 41.4439, -7.61275, 50.1188, 0.55 ) }
    dend_3 { pt3dadd( 42.7214, -6.85579, 51.6501, 0.83 ) }
    dend_3 { pt3dadd( 46.2682, -4.50153, 56.0675, 0.55 ) }
    dend_3 { pt3dadd( 49.6551, -2.1668, 60.3536, 1.39 ) }
    dend_3 { pt3dadd( 59.0531, 2.7813, 68.6869, 1.39 ) }
    dend_3 { pt3dadd( 68.9201, 7.42584, 76.6523, 1.39 ) }
    dend_3 { pt3dadd( 80.0284, 9.50746, 84.1114, 1.39 ) }
    dend_3 { pt3dadd( 91.8753, 9.39284, 90.6989, 1.39 ) }
    dend_3 { pt3dadd( 103.635, 12.1514, 96.7963, 1.39 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 47/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -28.8171, -41.1899, 42.9812, 0.55 ) }
    apic_11 { pt3dadd( -30.5329, -41.753, 43.7635, 0.55 ) }
    apic_11 { pt3dadd( -32.7675, -42.4864, 44.7823, 0.55 ) }
    apic_11 { pt3dadd( -34.7953, -43.1519, 45.7068, 0.55 ) }
    apic_11 { pt3dadd( -37.003, -43.8765, 46.7135, 0.55 ) }
    apic_11 { pt3dadd( -39.7491, -44.7777, 47.9655, 0.55 ) }
    apic_11 { pt3dadd( -43.794, -46.1053, 49.8097, 0.55 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 54/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -28.8171, -41.1899, 42.9812, 0.55 ) }
    apic_10 { pt3dadd( -28.0916, -43.7737, 45.0912, 0.55 ) }
    apic_10 { pt3dadd( -27.4332, -46.1185, 47.006, 0.55 ) }
    apic_10 { pt3dadd( -26.8033, -48.362, 48.8382, 0.55 ) }
    // Section: apic_8, id: apic_8, parent: apic_2 (entry count 58/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -0.0209371, -29.3348, 8.59013, 0.55 ) }
    apic_8 { pt3dadd( -0.515758, -30.3184, 11.0479, 0.55 ) }
    apic_8 { pt3dadd( -0.804638, -30.8337, 12.4141, 0.55 ) }
    apic_8 { pt3dadd( -1.91213, -32.5643, 17.2392, 0.83 ) }
    apic_8 { pt3dadd( -2.8387, -34.0496, 21.3681, 0.83 ) }
    apic_8 { pt3dadd( -4.11687, -36.0704, 26.9396, 0.83 ) }
    apic_8 { pt3dadd( -4.89777, -37.2845, 30.2277, 0.83 ) }
    apic_8 { pt3dadd( -5.47417, -38.2097, 32.6505, 0.83 ) }
    apic_8 { pt3dadd( -6.12844, -39.2176, 35.2982, 0.83 ) }
    apic_8 { pt3dadd( -6.97939, -40.4311, 38.3008, 0.83 ) }
    apic_8 { pt3dadd( -7.62172, -41.2422, 40.125, 0.83 ) }
    apic_8 { pt3dadd( -8.5772, -42.4702, 42.5649, 0.83 ) }
    apic_8 { pt3dadd( -9.67407, -43.9683, 45.3255, 0.83 ) }
    apic_8 { pt3dadd( -10.6237, -45.2932, 47.6664, 0.83 ) }
    apic_8 { pt3dadd( -11.1855, -46.0755, 48.9933, 0.83 ) }
    apic_8 { pt3dadd( -12.7418, -48.0393, 52.3226, 0.83 ) }
    apic_8 { pt3dadd( -13.8667, -49.5033, 54.7835, 0.83 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 75/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -0.0209371, -29.3348, 8.59013, 1.11 ) }
    apic_3 { pt3dadd( -0.222049, -39.744, 8.08823, 1.11 ) }
    apic_3 { pt3dadd( -0.314575, -44.533, 7.85732, 1.11 ) }
    apic_3 { pt3dadd( -0.504539, -54.3652, 7.38325, 1.11 ) }
    apic_3 { pt3dadd( -0.61661, -60.1658, 7.10356, 1.11 ) }
    apic_3 { pt3dadd( -0.675545, -63.2162, 6.95648, 1.11 ) }
    apic_3 { pt3dadd( -0.719098, -65.4704, 6.84779, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 82/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -8.63397, 27.695, 23.337, 0.28 ) }
    dend_19 { pt3dadd( -10.188, 31.4842, 31.7573, 0.28 ) }
    dend_19 { pt3dadd( -12.3523, 33.8629, 40.5783, 0.28 ) }
    dend_19 { pt3dadd( -12.5814, 36.5827, 49.5452, 0.28 ) }
    dend_19 { pt3dadd( -12.6798, 38.4929, 58.7328, 0.28 ) }
    dend_19 { pt3dadd( -12.7904, 41.2691, 67.6828, 0.28 ) }
    dend_19 { pt3dadd( -13.1811, 45.7158, 75.8866, 0.28 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 89/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -8.63397, 27.695, 23.337, 0.83 ) }
    dend_18 { pt3dadd( -9.67977, 31.6538, 32.0408, 0.28 ) }
    dend_18 { pt3dadd( -10.8775, 35.9267, 40.5678, 0.28 ) }
    dend_18 { pt3dadd( -10.3394, 40.9489, 48.723, 0.28 ) }
    dend_18 { pt3dadd( -9.1756, 47.1566, 55.8947, 0.28 ) }
    dend_18 { pt3dadd( -10.0748, 54.1445, 62.315, 0.28 ) }
    dend_18 { pt3dadd( -9.19025, 61.1238, 68.7424, 0.28 ) }
    dend_18 { pt3dadd( -8.16479, 67.4091, 75.8642, 0.28 ) }
    // Section: apic_5, id: apic_5, parent: apic_3 (entry count 97/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -0.719098, -65.4704, 6.84779, 1.11 ) }
    apic_5 { pt3dadd( -1.07362, -69.6398, 7.33921, 1.11 ) }
    apic_5 { pt3dadd( -1.31085, -73.3062, 7.74709, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    apic_5 { pt3dadd( -1.70511, -79.5277, 8.17963, 1.11 ) }
    apic_5 { pt3dadd( -1.808, -81.7142, 8.25572, 1.11 ) }
    apic_5 { pt3dadd( -1.94967, -85.2616, 8.40898, 1.11 ) }
    apic_5 { pt3dadd( -2.00645, -90.4905, 8.65151, 1.11 ) }
    apic_5 { pt3dadd( -1.97715, -92.3887, 8.71465, 1.11 ) }
    apic_5 { pt3dadd( -1.86454, -95.8303, 8.92619, 1.11 ) }
    apic_5 { pt3dadd( -1.45472, -103.119, 9.54589, 1.11 ) }
    apic_5 { pt3dadd( -1.19796, -106.519, 9.90908, 1.11 ) }
    apic_5 { pt3dadd( -0.850217, -110.602, 10.4554, 1.11 ) }
    apic_5 { pt3dadd( -0.714024, -112.222, 10.7226, 1.11 ) }
    apic_5 { pt3dadd( -0.427408, -116.316, 11.5959, 1.11 ) }
    apic_5 { pt3dadd( -0.155205, -119.379, 12.3671, 1.11 ) }
    apic_5 { pt3dadd( 0.400916, -124.992, 13.785, 1.11 ) }
    apic_5 { pt3dadd( 0.692162, -128.694, 14.5041, 1.11 ) }
    apic_5 { pt3dadd( 0.835804, -130.814, 14.8391, 1.11 ) }
    apic_5 { pt3dadd( 1.05307, -134.107, 15.2276, 1.11 ) }
    apic_5 { pt3dadd( 1.38195, -138.576, 15.6855, 1.11 ) }
    apic_5 { pt3dadd( 1.61487, -141.85, 16.0029, 1.11 ) }
    apic_5 { pt3dadd( 2.41321, -152.985, 17.0555, 1.11 ) }
    apic_5 { pt3dadd( 2.84142, -158.17, 17.537, 1.11 ) }
    apic_5 { pt3dadd( 3.22671, -162.31, 17.931, 1.11 ) }
    apic_5 { pt3dadd( 3.71499, -166.978, 18.3519, 1.11 ) }
    apic_5 { pt3dadd( 4.21237, -172.679, 18.9739, 0.83 ) }
    apic_5 { pt3dadd( 4.51124, -175.695, 19.3663, 0.83 ) }
    apic_5 { pt3dadd( 4.82545, -177.944, 19.707, 0.83 ) }
    apic_5 { pt3dadd( 5.12023, -180.072, 20.0788, 0.83 ) }
    apic_5 { pt3dadd( 5.55582, -183.158, 20.649, 0.83 ) }
    apic_5 { pt3dadd( 5.94082, -186.245, 21.2722, 0.83 ) }
    apic_5 { pt3dadd( 6.23233, -188.655, 21.8964, 0.83 ) }
    apic_5 { pt3dadd( 6.45557, -190.376, 22.3877, 0.83 ) }
    apic_5 { pt3dadd( 6.87575, -194.168, 23.5093, 0.83 ) }
    apic_5 { pt3dadd( 7.85021, -202.558, 26.1343, 0.83 ) }
    apic_5 { pt3dadd( 8.24976, -205.732, 27.14, 0.83 ) }
    apic_5 { pt3dadd( 8.66279, -208.548, 28.0386, 0.83 ) }
    apic_5 { pt3dadd( 9.04028, -211.016, 28.8814, 0.83 ) }
    apic_5 { pt3dadd( 9.545, -213.916, 29.9648, 0.83 ) }
    apic_5 { pt3dadd( 10.1252, -217.122, 31.2312, 0.83 ) }
    apic_5 { pt3dadd( 10.6151, -219.534, 32.2991, 0.83 ) }
    apic_5 { pt3dadd( 11.142, -222.016, 33.4168, 0.83 ) }
    apic_5 { pt3dadd( 12.2493, -226.768, 35.6738, 0.83 ) }
    apic_5 { pt3dadd( 13.0471, -230.007, 37.1596, 0.83 ) }
    apic_5 { pt3dadd( 13.9134, -233.203, 38.5504, 0.83 ) }
    apic_5 { pt3dadd( 14.6065, -236.04, 39.6214, 0.83 ) }
    apic_5 { pt3dadd( 15.2976, -239.021, 40.6408, 0.83 ) }
    apic_5 { pt3dadd( 15.8336, -241.625, 41.3497, 0.83 ) }
    apic_5 { pt3dadd( 16.756, -247.295, 42.3862, 0.83 ) }
    apic_5 { pt3dadd( 17.4893, -251.631, 42.8657, 0.83 ) }
    apic_5 { pt3dadd( 18.0113, -254.563, 43.0515, 0.83 ) }
    apic_5 { pt3dadd( 18.9373, -259.975, 43.2412, 0.83 ) }
    apic_5 { pt3dadd( 19.7532, -264.172, 43.3712, 0.83 ) }
    apic_5 { pt3dadd( 20.4393, -267.762, 43.4559, 0.83 ) }
    apic_5 { pt3dadd( 21.4831, -272.842, 43.6032, 0.55 ) }
    apic_5 { pt3dadd( 21.8487, -274.448, 43.6254, 0.55 ) }
    apic_5 { pt3dadd( 23.8992, -281.717, 43.7294, 0.55 ) }
    apic_5 { pt3dadd( 24.7978, -284.6, 43.6778, 0.55 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 55/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -0.719098, -65.4704, 6.84779, 0.83 ) }
    apic_4 { pt3dadd( -0.211659, -72.7842, 8.89027, 0.83 ) }
    apic_4 { pt3dadd( -0.172176, -74.2176, 9.27547, 0.83 ) }
    apic_4 { pt3dadd( -0.134606, -76.7697, 9.96907, 0.83 ) }
    apic_4 { pt3dadd( -0.118393, -78.2672, 10.3477, 0.83 ) }
    apic_4 { pt3dadd( -0.0173287, -82.1028, 11.2577, 0.83 ) }
    apic_4 { pt3dadd( 0.147201, -86.5085, 12.3359, 0.83 ) }
    apic_4 { pt3dadd( 0.365374, -91.5304, 13.2026, 0.83 ) }
    apic_4 { pt3dadd( 0.512633, -95.0526, 13.9386, 0.83 ) }
    apic_4 { pt3dadd( 0.604255, -98.5903, 14.9083, 0.83 ) }
    apic_4 { pt3dadd( 0.705236, -102.902, 16.4115, 0.83 ) }
    apic_4 { pt3dadd( 0.735271, -105.226, 17.4437, 0.83 ) }
    apic_4 { pt3dadd( 0.784449, -107.916, 18.9756, 0.83 ) }
    apic_4 { pt3dadd( 0.827623, -110.814, 20.756, 0.83 ) }
    apic_4 { pt3dadd( 0.810948, -114.47, 23.3672, 0.55 ) }
    apic_4 { pt3dadd( 0.727129, -116.587, 25.2071, 0.55 ) }
    apic_4 { pt3dadd( 0.562049, -118.172, 26.8697, 0.55 ) }
    apic_4 { pt3dadd( 0.300778, -120.105, 29.1332, 0.55 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 73/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 24.7978, -284.6, 43.6778, 0.28 ) }
    apic_7 { pt3dadd( 27.4904, -284.317, 44.6994, 0.28 ) }
    apic_7 { pt3dadd( 27.7804, -284.287, 44.8095, 0.55 ) }
    apic_7 { pt3dadd( 29.5112, -284.105, 45.4662, 0.28 ) }
    apic_7 { pt3dadd( 31.1102, -283.936, 46.0729, 0.83 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 78/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 24.7978, -284.6, 43.6778, 0.83 ) }
    apic_6 { pt3dadd( 23.9121, -287.069, 43.8835, 0.83 ) }
    apic_6 { pt3dadd( 22.3027, -291.555, 44.2574, 0.55 ) }
    apic_6 { pt3dadd( 21.4855, -293.833, 44.4472, 0.55 ) }
    apic_6 { pt3dadd( 21.0363, -295.085, 44.5515, 0.55 ) }
    apic_6 { pt3dadd( 20.0789, -297.754, 44.7739, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_21, dend_14, dend_11, dend_8, dend_5, dend_0, apic_1, dend_23, dend_22, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, apic_12, apic_9, apic_2, dend_20, dend_17, dend_4, dend_3, apic_11, apic_10, apic_8, apic_3, dend_19, dend_18, apic_5, apic_4, apic_7, apic_6]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_21, dend_14, dend_11, dend_8, dend_5, dend_0, apic_1, dend_23, dend_22, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, apic_12, apic_9, apic_2, dend_20, dend_17, dend_4, dend_3, apic_11, apic_10, apic_8, apic_3, dend_19, dend_18, apic_5, apic_4, apic_7, apic_6]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[apic_0, dend_21, dend_14, dend_11, dend_8, dend_5, dend_0, axon_0, apic_1, dend_23, dend_22, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, axon_1, apic_12, apic_9, apic_2, dend_20, dend_17, dend_4, dend_3, apic_11, apic_10, apic_8, apic_3, dend_19, dend_18, apic_5, apic_4, apic_7, apic_6]}
    ModelViewParmSubset_5 = new SectionList()
    apic_0 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    apic_1 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    apic_12 ModelViewParmSubset_5.append()
    apic_9 ModelViewParmSubset_5.append()
    apic_2 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    apic_11 ModelViewParmSubset_5.append()
    apic_10 ModelViewParmSubset_5.append()
    apic_8 ModelViewParmSubset_5.append()
    apic_3 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    apic_5 ModelViewParmSubset_5.append()
    apic_4 ModelViewParmSubset_5.append()
    apic_7 ModelViewParmSubset_5.append()
    apic_6 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_23 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_22 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_15 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_13 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_12 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_10 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_9 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_7 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_6 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_1 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_24 = new SectionList()
    apic_12 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_25 = new SectionList()
    apic_9 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_20 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_4 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_3 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    apic_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_19 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_18 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_37 = new SectionList()
    apic_5 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_38 = new SectionList()
    apic_4 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_14 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_1 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_21 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_5 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_26 = new SectionList()
    apic_2 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_2 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_8 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    apic_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_10 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_39 = new SectionList()
    apic_7 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    apic_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, axon_0, axon_0, apic_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_2, apic_2, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_1 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 5
    dend_22 nseg = 7
    dend_15 nseg = 9
    dend_13 nseg = 3
    dend_12 nseg = 5
    dend_10 nseg = 3
    dend_9 nseg = 3
    dend_7 nseg = 5
    dend_6 nseg = 9
    dend_1 nseg = 3
    apic_12 nseg = 3
    apic_9 nseg = 3
    dend_20 nseg = 7
    dend_4 nseg = 3
    dend_3 nseg = 5
    apic_8 nseg = 3
    dend_19 nseg = 3
    dend_18 nseg = 3
    apic_5 nseg = 11
    apic_4 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_SBC_0869c1fd12_0_0


